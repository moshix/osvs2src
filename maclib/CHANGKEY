* %/* START OF SPECIFICATIONS ****                                      00050040
*                                                                       00100040
*01*  MODULE-NAME = CHANGKEY                                            00150040
*                                                                       00200040
*01*  DESCRIPTIVE-NAME = CHANGE STORAGE PROTECT KEY MACRO               00250040
*                                                                       00300040
*01*  COPYRIGHT = NA                                                    00350040
*                                                                       00390040
*01*  STATUS = OS/VS2 REL 4                                             00430040
*                                                                       00470040
*     MOVED FROM APVTMACS TO AMACLIB FOR APAR OZ29657         @ZA29657  00480000
*                                                                       00490000
*01*  PROCESSOR = ASSEMBLER,PLS2 (BILINGUAL)                            00510040
*                                                                       00550040
*     *** END OF SPECIFICATIONS ***                                     00590040
         MACRO                                                          00630040
&LABEL   CHANGKEY &TYPE,&BA=,&EA=,&LISTAD=,&KEY=,&BRANCH=               00670040
.* A000000-999999                                             @Z40EPYG  00690040
*                                                                       00710040
*        OS/VS2 RELEASE 4 VERSION      02/10/75                         00750040
.********************************************************************** 00900040
.*       DECLARE VARIABLES                                            * 00930040
.********************************************************************** 00960040
         LCLB  &L                                                       00990040
         LCLC  &CHR,&OPERAND,&OPVAL,&DESC                               01030040
.*                                                                      01070040
.********************************************************************** 01110040
.*       INITIALIZE VARIABLES                                         * 01150040
.********************************************************************** 01170040
&L       SETB  0                                                        01190040
&CHR     SETC  'A'                                                      01230040
.*                                                                      01270040
.********************************************************************** 01290040
.*       VALIDITY CHECK PARAMETERS                                    * 01310040
.********************************************************************** 01330040
&OPERAND SETC  'REQUEST-TYPE'                                           01350040
         AIF   ('&TYPE' EQ '').ERR05                                    01390040
&OPERAND SETC  'POSITIONAL PARAMETER'                                   01430040
         AIF   (N'&SYSLIST GT 1).ERR15                                  01470040
&OPERAND SETC  'TYPE'                                                   01510040
&OPVAL   SETC  '&TYPE'                                                  01550040
         AIF   ('&TYPE' NE 'R' AND '&TYPE' NE 'L').ERR10                01590040
.*                                                                      01630040
&OPERAND SETC  'BRANCH'                                                 01670040
         AIF   ('&BRANCH' EQ '').ERR05                                  01710040
&OPVAL   SETC  '&BRANCH'                                                01750040
         AIF   ('&BRANCH' NE 'YES').ERR10                               01790040
.*                                                                      01830040
&OPERAND SETC  'KEY'                                                    01870040
         AIF   ('&KEY' EQ '').ERR05                                     01910040
         AIF   ('&KEY'(1,1) NE '(').TXT05                               01950040
&CHR     SETC  'R'                                                      01990040
         AIF   ('&KEY(2)' NE '').ERR15                                  02030040
.TXT05   ANOP                                                           02070040
.*                                                                      02110040
.********************************************************************** 02130040
.*       DETERMINE TYPE OF REQUEST                                    * 02150040
.********************************************************************** 02170040
         AIF   ('&TYPE' EQ 'L').TXT50                                   02190040
.*                                                                      02230040
.********************************************************************** 02250040
.*       PROCESS R-TYPE REQUEST                                       * 02270040
.********************************************************************** 02290040
&OPERAND SETC  'LISTAD'                                                 02310040
         AIF   ('&LISTAD' NE '').ERR20                                  02350040
&OPERAND SETC  'BA'                                                     02390040
         AIF   ('&BA' EQ '').ERR05                                      02750040
         AIF   ('&BA'(1,1) NE '(').TXT10                                02780040
         AIF   ('&BA(2)' NE '').ERR15                                   02820040
.TXT10   ANOP                                                           02860040
.*                                                                      02950040
&OPERAND SETC  'EA'                                                     02990040
         AIF   ('&EA' EQ '').ERR05                                      03040040
         AIF   ('&EA'(1,1) NE '(').TXT15                                03080040
         AIF   ('&EA(2)' NE '').ERR15                                   03120040
.TXT15   ANOP                                                           03200040
.*                                                                      03240040
.********************************************************************** 03260040
.*       GENERATE BAL TEXT                                            * 03280040
.********************************************************************** 03300040
&OPERAND SETC  '&KEY'                                                   03320040
         AIF   ('&CHR' EQ 'A').TXT20                                    03400040
&OPERAND SETC  '&KEY(1)'                                                03440040
         AIF   ('&OPERAND' EQ '0').TXT25                                03480040
&LABEL   LR    0,&OPERAND              STORAGE KEY REQUESTED            03520040
         AGO   .TXT25                                                   03600040
.TXT20   ANOP                                                           03640040
&LABEL   LA    0,&KEY*16+8             KEY IN BITS 24-27 WITH FP        03680040
.TXT25   ANOP                                                           03720040
         AIF   (&L).TXT60                                               03800040
.*                                                                      03840040
&CHR     SETC  'A'                                                      03880040
&OPERAND SETC  '&BA'                                                    03920040
         AIF   ('&BA'(1,1) NE '(').TXT30                                04000040
&CHR     SETC  'R'                                                      04040040
&OPERAND SETC  '&BA(1)'                                                 04080040
         AIF   ('&OPERAND' EQ '1').TXT35                                04120040
.TXT30   ANOP                                                           04200040
         L&CHR 1,&OPERAND              FIRST PAGE ADDRESS               04240040
.TXT35   ANOP                                                           04280040
.*                                                                      04320040
&CHR     SETC  'A'                                                      04400040
&OPERAND SETC  '&EA'                                                    04440040
         AIF   ('&EA'(1,1) NE '(').TXT40                                04480040
&CHR     SETC  'R'                                                      04520040
&OPERAND SETC  '&EA(1)'                                                 04560040
         AIF   ('&OPERAND' EQ '2').TXT45                                04640040
.TXT40   ANOP                                                           04680040
         L&CHR 2,&OPERAND              LAST PAGE ADDRESS                04720040
.TXT45   AGO   .TXT90                                                   04800040
.*                                                                      04840040
.********************************************************************** 04860040
.*       PROCESS L-TYPE REQUEST                                       * 04880040
.********************************************************************** 04900040
.TXT50   ANOP                                                           04930040
&OPERAND SETC  'BA AND EA'                                              04980040
         AIF   ('&BA&EA' NE '').ERR20                                   05030040
&OPERAND SETC  'LISTAD'                                                 05080040
         AIF   ('&LISTAD' EQ '').ERR05                                  05130040
         AIF   ('&LISTAD'(1,1) NE '(').TXT55                            05180040
         AIF   ('&LISTAD(2)' NE '').ERR15                               05230040
.TXT55   ANOP                                                           05280040
.*                                                                      05330040
.********************************************************************** 05350040
.*       GENERATE BAL TEXT                                            * 05380040
.********************************************************************** 05410040
&L       SETB  1                                                        05440040
         AGO   .TXT15                                                   05490040
.*                                                                      05540040
.TXT60   ANOP                                                           05590040
         LA    15,X'80'                INDICATE                         05640040
         SLL   15,24                     L-TYPE                         05650040
         OR    0,15                        REQUEST                      05660040
&CHR     SETC  'A'                                                      05690040
&OPERAND SETC  '&LISTAD'                                                05740040
         AIF   ('&LISTAD'(1,1) NE '(').TXT65                            05790040
&CHR     SETC  'R'                                                      05840040
&OPERAND SETC  '&LISTAD(1)'                                             05890040
         AIF   ('&OPERAND' EQ '1').TXT70                                05940040
.TXT65   ANOP                                                           05990040
         L&CHR 1,&OPERAND              PARAMETER LIST ADDRESS           06040040
.TXT70   ANOP                                                           06090040
.*                                                                      06140040
.TXT90   ANOP                                                           06190040
         L     15,CVTCGK               ENTRY PT TO IEAVCKEY             06240040
         BALR  14,15                   CALL IEAVCKEY                    06290040
         MEXIT                                                          06310040
.*                                                                      06390040
.********************************************************************** 06410040
.*       PROCESS ERROR CONDITIONS                                     * 06440040
.********************************************************************** 06470040
.ERR05   ANOP                                                           06500040
         IHBERMAC 1006,&OPERAND                                         06550040
         MEXIT                                                          06600040
.ERR10   ANOP                                                           06650040
&OPERAND SETC  '&OPERAND'.'='                                           06700040
         IHBERMAC 1014,&OPERAND&OPVAL                                   06750040
         MEXIT                                                          06800040
.ERR15   ANOP                                                           06850040
         IHBERMAC 1012,&OPERAND                                         06900040
         MEXIT                                                          06950040
.ERR20   ANOP                                                           07000040
&DESC    SETC  '-TYPE REQUEST'                                          07050040
         IHBERMAC 1020,&OPERAND,&TYPE&DESC                              07100040
         MEXIT                                                          07150040
         MEND                                                           07200040
* */                                                                    07250040
* CHANGKEY: MACRO KEYS(BA,EA,LISTAD,KEY,BRANCH);                        07300040
*                                                                       07350040
*        /*  OS/VS2  RELEASE 4        02/10/75 */                       07400040
*                                                                       07450040
*        /* VARIABLE DECLARES */                                        07500040
*        DCL EHAREGS CHAR EXT;         /*REGS DCLD BY EPILOG*/          07550040
*        DCL ITEXT(15) CHAR;           /*PL/S TEXT GENERATED*/          07600040
*        DCL GLBLSWCH CHAR EXT;        /*DCL IEAVCKEY SWITCH*/          07610040
*        DCL INDX FIXED;               /*LOOP INDEX*/                   07650040
*        DCL ICNT FIXED;               /*NUMBER LINES GENERATED*/       07700040
*        DCL ICMT CHAR;                /*DO-END COMMENT*/               07750040
*        DCL SKEY FIXED;               /*KEYS 0-15*/                    07800040
*        DCL KEYVAL CHAR;              /*KEYS '0'-'15'*/                07850040
*                                                                       07900040
*        /* INITIALIZE VARIABLES */                                     07950040
*                                                                       07970040
*        IF INDEX(EHAREGS,'00F')=0 THEN /*DCL FOR R0 REQUESTED?*/       08000040
*          EHAREGS=EHAREGS||'00F';     /* NO: REQUEST IT*/              08050040
*        IF INDEX(EHAREGS,'01F')=0 THEN /*DCL FOR R1 REQUESTED?*/       08100040
*          EHAREGS=EHAREGS||'01F';     /* NO: REQUEST IT*/              08150040
*        IF INDEX(EHAREGS,'14F')=0 THEN /*DCL FOR R14 REQUESTED?*/      08200040
*          EHAREGS=EHAREGS||'14F';     /* NO: REQUEST IT*/              08250040
*        IF INDEX(EHAREGS,'15F')=0 THEN /*DCL FOR R15 REQUESTED?*/      08300040
*          EHAREGS=EHAREGS||'15F';     /* NO: REQUEST IT*/              08350040
*        INDX=1;                                                        08400040
*        ICNT=1;                                                        08450040
*        SKEY=0;                                                        08500040
*        ITEXT(ICNT)='RESPECIFY (GPR00F,GPR01F,GPR14F,GPR15F';          08550040
*        ICNT=ICNT+1;                                                   08600040
* IF GLBLSWCH='' THEN        /*IEAVCKEY ENTRY DECLARED ?*/              08606040
*   DO;                      /*NO: DECLARE IT*/                         08612040
*     ITEXT(ICNT)='DCL IEAVCKEY ENTRY BASED(CVTCGK) VALRG(*); /*CHANGE  08618040
* KEY ENTRY POINT*/';                                                   08624040
*     ICNT=ICNT+1;                                                      08630040
*     GLBLSWCH='ON';             /*ENTRY DECLARED ONLY ONCE*/           08636040
*   END;                                                                08642040
*                                                                       08650040
*        /* VALIDITY CHECK PARMS AND GENERATE PL/S TEXT */              08700040
*                                                                       08720040
*        IF NUMBER(MACLIST)=0 THEN     /*REQUEST TYPE SPECIFIED?*/      08750040
*          DO;                         /* NO: ERROR*/                   08800040
*            ANS MSG('AHA0013  ''MACLIST(1)'' IS REQUIRED BUT IS NOT SUP08850040
*PLIED. NO TEXT IS GENERATED.');                                        08900040
*            GOTO LHA05000;                                             08950040
*          END;                        /* YES: CONTINUE*/               09000040
*        IF NUMBER(MACLIST)>1 THEN     /*MACLIST TOO LONG?*/            09050040
*          ANS MSG('AHA0031  ''MACLIST'' IS TOO LONG. ARGUMENTS ARE IGNO09100040
*RED AFTER '||MACLIST(1)||'.');        /* YES: WARNING*/                09105040
*        IF MACLIST(1)^='R' THEN       /*VALID TYPE REQUESTED?*/        09110040
*          IF MACLIST(1)^='L' THEN                                      09115040
*            DO;                       /* NO: ERROR*/                   09120040
*              ANS MSG('AHA0043  MACLIST(1) MUST BE ''L'' OR ''R''. NO T09125040
*EXT IS GENERATED.');                                                   09130040
*              GOTO LHA05000;                                           09135040
*            END;                      /* YES: CONTINUE*/               09140040
*                                                                       09170040
*        IF BRANCH='' THEN             /*KEYWORD 'BRANCH' SUPPLIED?*/   09200040
*          DO;                         /* NO: ERROR*/                   09250040
*            ANS MSG('AHA0013  ''BRANCH'' IS REQUIRED BUT IS NOT SUPPLIE09300040
*D. NO TEXT IS GENERATED');                                             09350040
*            GOTO LHA05000;                                             09400040
*          END;                        /* YES: CONTINUE*/               09450040
*        IF NUMBER(BRANCH)^=0 THEN     /*ARGS SUPPLIED?*/               09500040
*          ANS MSG('AHA0031  BRANCH'||BRANCH||' IS TOO LONG. ARGUMENTS A09550040
*RE IGNORED AFTER ''BRANCH''.');       /* YES: WARNING*/                09600040
*                                                                       09620040
*        IF NUMBER(KEY)=0 THEN         /*KEYWORK AND ARG SUPPLIED?*/    09650040
*          DO;                         /* NO: ERROR*/                   09700040
*            ANS MSG('AHA0013  ''KEY(1)'' IS REQUIRED BUT IS NOT SUPPLIE09750040
*D. NO TEXT IS GENERATED.');                                            09800040
*            GOTO LHA05000;                                             09850040
*          END;                        /* YES: CONTINUE*/               09900040
*        IF NUMBER(KEY)>1 THEN         /*TOO MANY ARGS SUPPLIED?*/      09950040
*          ANS MSG('AHA0031  KEY'||KEY||' IS TOO LONG. ARGUMENTS ARE IGN10000040
*ORED AFTER '||KEY(1)||'.');           /* YES: WARNING*/                10050040
*        ITEXT(ICNT)='GPR00F='||KEY(1)||'; /*STORAGE KEY REQUESTED*/';  10100040
*        ICNT=ICNT+1;                                                   10150040
*        IF LENGTH(KEY(1))>2 THEN      /*POSSIBLE 0-15?*/               10200040
*          GOTO LHA01000;              /* NO: CONTINUE*/                10250040
*        IF LENGTH(KEY(1))=2 THEN      /*POSSIBLE 10-15?*/              10300040
*          SKEY=SKEY+10;               /* YES: CHECK IF 10-15*/         10350040
*LHA00500: ;                                                            10400040
*        KEYVAL=CHAR(SKEY);            /*CHARACTER COMPARE*/            10450040
*        IF INDEX(KEY(1),KEYVAL)=1 THEN  /*KEY A NUMBER?*/              10500040
*          DO;                         /* YES: KEY 0?*/                 10550040
*            IF SKEY=0 THEN            /*  YES:FP ON*/                  10600040
*              DO;                                                      10650040
*                ITEXT(ICNT)='GPR00F=GPR00F+8; /*FETCH PROTECTED*/';    10700040
*                ICNT=ICNT+1;                                           10750040
*                GOTO LHA01000;                                         10800040
*              END;                                                     10850040
*            ITEXT(ICNT)='GPR00F=GPR00F*16+8; /*KEY IN BITS 24-27 WITH F10900040
*ETCH PROTECT*/';                                                       10950040
*            ICNT=ICNT+1;                                               11000040
*            GOTO LHA01000;                                             11050040
*          END;                                                         11100040
*        SKEY=SKEY+1;                 /* NO: NEXT NUMBER*/              11150040
*        IF SKEY<=15 THEN             /*CHECKED 0-15?*/                 11200040
*           GOTO LHA00500;            /* NO: CHECK NEXT NUMBER*/        11250040
*LHA01000: ;                                                            11300040
*                                                                       11350040
*        /* DETERMINE TYPE OF REQUEST */                                11400040
*                                                                       11420040
*        IF MACLIST(1)='L' THEN                                         11450040
*          GOTO LHA02000;                                               11500040
*                                                                       11550040
*        /* PROCESS R-TYPE REQUEST */                                   11600040
*                                                                       11620040
*        IF INDEX(EHAREGS,'02F')=0 THEN /*DCL FOR R2 REQUESTED?*/       11650040
*          EHAREGS=EHAREGS||'02F';     /* NO: REQUEST IT*/              11700040
*        ITEXT(1)=ITEXT(1)||',GPR02F';                                  11750040
*        IF LISTAD^='' THEN            /*KEYWORD SUPPLIED?*/            11800040
*          DO;                         /* YES: ERROR*/                  11850040
*            ANS MSG('AHA0023  ''LISTAD'' IS INVALID WITH R-TYPE REQUEST11900040
*. NO TEXT IS GENERATED.');                                             11950040
*            GOTO LHA05000;                                             12000040
*          END;                        /* NO: CONTINUE*/                12050040
*        IF NUMBER(BA)=0 THEN          /*KEYWORK AND ARG SUPPLIED?*/    12100040
*          DO;                         /* NO: ERROR*/                   12150040
*            ANS MSG('AHA0013  ''BA(1)'' IS REQUIRED BUT IS NOT SUPPLIED12200040
*. NO TEXT IS GENERATED.');                                             12250040
*            GOTO LHA05000;                                             12300040
*          END;                        /* YES: CONTINUE*/               12350040
*        IF NUMBER(BA)>1 THEN          /*TOO MANY ARGS?*/               12400040
*          ANS MSG('AHA0031  BA'||BA||' IS TOO LONG. ARGUMENTS ARE IGNOR12450040
*ED AFTER '||BA(1)||'.');              /* YES: WARNING*/                12500040
*        ITEXT(ICNT)='GPR01F=ADDR('||BA(1)||'); /*FIRST PAGE ADDRESS*/';12550040
*        ICNT=ICNT+1;                                                   12600040
*                                                                       12620040
*        IF NUMBER(EA)=0 THEN          /*KEYWORD AND ARG SUPPLIED?*/    12650040
*          DO;                         /* NO: ERROR*/                   12700040
*            ANS MSG('AHA0013  ''EA(1)'' IS REQUIRED BUT IS NOT SUPPLIED12750040
*. NO TEXT IS GENERATED.');                                             12800040
*            GOTO LHA05000;                                             12850040
*          END;                        /* YES: CONTINUE*/               12900040
*        IF NUMBER(EA)>1 THEN          /*TOO MANY ARGS?*/               12950040
*          ANS MSG('AHA0031  EA'||EA||' IS TOO LONG. ARGUMENTS ARE IGNOR13000040
*ED AFTER '||EA(1)||'.');              /* YES: WARNING*/                13050040
*        ITEXT(ICNT)='GPR02F=ADDR('||EA(1)||'); /*LAST PAGE ADDRESS*/'; 13100040
*        ICNT=ICNT+1;                                                   13150040
*        GOTO LHA03000;                                                 13200040
*                                                                       13250040
*        /* PROCESS L-TYPE REQUEST */                                   13300040
*                                                                       13320040
*LHA02000: ;                                                            13350040
*        IF BA||EA^='' THEN            /*BA OR EA SUPPLIED?*/           13400040
*          DO;                         /* YES: ERROR*/                  13450040
*            ANS MSG('AHA0023  ''BA'' OR ''EA'' INVALID WITH L-TYPE REQU13500040
*EST. NO TEXT IS GENERATED');                                           13550040
*            GOTO LHA05000;                                             13600040
*          END;                        /* NO: CONTINUE*/                13650040
*        IF NUMBER(LISTAD)=0 THEN      /*KEYWORD AND ARG SUPPLIED?*/    13700040
*          DO;                         /* NO: ERROR*/                   13750040
*            ANS MSG('AHA0013  ''LISTAD(1)'' IS REQUIRED BUT IS NOT SUPP13800040
*LIED. NO TEXT IS GENERATED.');                                         13850040
*            GOTO LHA05000;                                             13900040
*          END;                        /* YES: CONTINUE*/               13950040
*        IF NUMBER(LISTAD)>1 THEN      /*TOO MANY ARGS?*/               14000040
*          ANS MSG('AHA0031  LISTAD'||LISTAD||' IS TOO LONG. ARGUMENTS A14050040
*RE IGNORED AFTER '||LISTAD(1)||'.');   /* YES: WARNING*/               14100040
*        ITEXT(ICNT)='GPR15F=''80''X; /*INDICATE*/';                    14150040
*        ICNT=ICNT+1;                                                   14158040
*        ITEXT(ICNT)='SLL(GPR15F,24); /*  L-TYPE*/';                    14166040
*        ICNT=ICNT+1;                                                   14174040
*        ITEXT(ICNT)='GPR00F=GPR00F|GPR15F; /*    REQUEST*/';           14182040
*        ICNT=ICNT+1;                                                   14190040
*        ITEXT(ICNT)='GPR01F=ADDR('||LISTAD(1)||'); /* PARM LIST ADDRESS14250040
**/';                                                                   14300040
*        ICNT=ICNT+1;                                                   14350040
*LHA03000: ;                                                            14400040
*        ITEXT(ICNT)='CALL IEAVCKEY; /*CALL CHANGE KEY*/';              14450040
*        ICNT=ICNT+1;                                                   14500040
*        ITEXT(ICNT)=ITEXT(1)||') UNRESTRICTED;';                       14550040
*        ITEXT(1)=ITEXT(1)||') RESTRICTED;';                            14600040
*                                                                       14650040
*        /* GENERATE PL/S TEXT */                                       14700040
*                                                                       14720040
*        IF MACLABEL^='' THEN          /*LABEL ON MACRO CALL?*/         14750040
*          ANS(MACLABEL) COL(MACLMAR); /* YES: GEN LABEL*/              14800040
*        ICMT='?'||MACLABEL||MACNAME||MACLIST||MACKEYS;                 14850040
*        ANS('DO; '||COMMENT(ICMT)) COL(MACCOL);                        14900040
*LHA04000: ;                                                            14950040
*        IF INDX>ICNT THEN             /*ALL TEXT GENERATED?*/          15000040
*          GOTO LHA04500;              /* YES: END MACRO*/              15050040
*        ANS(ITEXT(INDX)) COL(MACCOL); /* NO: GEN NEXT LINE*/           15100040
*        INDX=INDX+1;                                                   15150040
*        GOTO LHA04000;                                                 15200040
*LHA04500: ;                                                            15250040
*        ANS('END; '||COMMENT(ICMT)) COL(MACCOL);                       15300040
*LHA05000: ;                                                            15500040
*%       END CHANGKEY;                                                  15700040
