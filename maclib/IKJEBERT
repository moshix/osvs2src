*/*                                                                     00500003
         MACRO                                                          01000020
&NAME    IKJEBERT &REG,&PARA,&RC=O                                      02000020
.*A612000-988000                                               @Y30NQKC 02200003
.*                                                                      03000020
.*  THIS MACRO IS USED BY ALL EDIT SUBCOMMANDS AND SERVICE ROUTINES     04000020
.*  TO CONTROL EPILOG CODE GENERATED.  THE BASIC SECTION OF THIS        05000020
.*  MACRO IS THE OS/360 RETURN MACRO INSTRUCTION.  IN ADDITION, THIS    06000020
.*  MACRO WILL DEQUEUE AND ZERO THE CURRENT SAVE AREA AND UPDATE THE    07000020
.*  POINTER TO THE CURRENT SAVE AREA IN THE COMMUNICATION AREA.         08000020
.*                                                                      09000020
.*  MACRO LAST UPDATED 06-03-74                                @Y30NQKC 10000003
.*                                                                      11000020
         LCLA  &A                                                       12000020
         AIF   ('&NAME' EQ '').GO                                       13000020
&NAME    DS    0H                                                       14000020
.GO      ST    13,(CANXTSVA-IKJEBECA)(COMMREG) UPDATE NEXT              15000020
*                                  AVAILABLE SAVE AREA POINTER.         16000020
         LR    12,13          COPY OVER SAVE AREA ADDRESS.              17000020
         L     13,4(,13)      ADDRESS OF HIGHER SAVE AREA.              18000020
         XC    0(72,12),0(12) ZERO SAVE AREA.                           19000020
         AIF   ('&RC' EQ '(15)').SPECRT                                 20000020
         AIF   ('&REG' EQ '').CONTA                                     21000020
.COMBACK ANOP                                                           22000020
&A       SETA  &REG(1)*4+20                                             23000020
         AIF   (&A LE 75).CONTB                                         24000020
&A       SETA  &A-64                                                    25000020
.CONTB   AIF   (N'&REG NE 2).CONTC                                      26000020
         LM    &REG(1),&REG(2),&A.(13) RESTORE THE REGISTERS.           27000020
         AGO   .CONTA                                                   28000020
.SPECRT  AIF   ('&REG(1)' NE '14' AND '&REG(1)' NE '15').COMBACK        29000020
         AIF   ('&REG(1)' EQ '14' AND N'&REG EQ 1).COMBACK              30000020
         AIF   ('&REG(1)' EQ '15' AND N'&REG EQ 1).CONTA                31000020
         AIF   ('&REG(1)' EQ '14').SKIP                                 32000020
         AIF   ('&REG(2)' EQ '0').ZTWO                                  33000020
.LM      LM    0,&REG(2),20(13) RESTORE THE REGISTERS.                  34000020
         AGO   .CONTA                                                   35000020
.ZTWO    L     0,20(0,13)     RESTORE REGISTER ZERO.                    36000020
         AGO   .CONTA                                                   37000020
.SKIP    L     14,12(0,13)    RESTORE REGISTER 14.                      38000020
         AIF   ('&REG(2)' EQ '15').CONTA                                39000020
         AIF   ('&REG(2)' EQ '0').ZTWO                                  40000020
         AIF   ('&REG(2)' EQ '0').ZTWO                                  41000020
         AGO   .LM                                                      42000020
.CONTC   AIF   (N'&REG NE 1).ERROR1                                     43000020
         L     &REG(1),&A.(0,13) RESTORE REGISTER.                      44000020
.CONTA   AIF   ('&PARA' EQ '').CONTD                                    45000020
         AIF   ('&PARA' NE 'T').ERROR2                                  46000020
         MVI   12(13),X'FF'   SET RETURN INDICATION.                    47000020
.CONTD   AIF   ('&RC' EQ 'O').CONTE                                     48000020
         AIF   ('&RC'(1,1) EQ '(').ISAREG                               49000020
         LA    15,&RC.(0,0)   LOAD RETURN CODE.                         50000020
         AGO   .CONTE                                                   51000020
.ISAREG  AIF   ('&RC(1)' EQ '15').CONTE                                 52000020
         MNOTE 12,'INVALID REGISTER NOTATION IN RC OPERAND.'            53000020
         MEXIT                                                          54000020
.CONTE   BR    14             RETURN.                                   55000020
         AGO   .END                                                     56000020
.ERROR1  MNOTE 12,'INVALID FIRST OPERAND SPECIFIED.'                    57000020
         MEXIT                                                          58000020
.ERROR2  MNOTE 12,'INVALID SECOND OPERAND SPECIFIED.'                   59000020
.END     MEND                                                           60000020
**/                                                                     60400003
*% IKJEBERT: MACRO KEYS(                                                61200003
*        RC                            /* INDENTIFIES THE VARIABLE      61600003
*                                         WHICH CONTAINS THE RETURN     62000003
*                                         CODE.                      */ 62100003
*        );                                                             62200003
*  DECLARE                                                              62400003
*    EHAREGS CHAR EXT,                 /* REGS DECLARED BY EPILOG    */ 63600003
*    ALINE CHAR,                       /* A LINE OF TEXT             */ 63800003
*    EHAUNIQUE CHAR EXT,               /* MISC VARIABLES FOR EPILOG  */ 64000003
*    DOCCOMCOL FIXED EXT,              /* START COL FOR COMMENTS     */ 64100003
*    DOCCOMCOLALT FIXED EXT;           /* ALTERNATE FOR DOCCOMCOL    */ 64200003
*                                                                       64300003
*        IF DOCCOMCOL < 5              /* COMMENT START AT LEFT      */ 64400003
*          THEN                        /*   YES-DEFAULT AT LEFT      */ 64500003
*            DOCCOMCOL = 40;           /* SET DEFAULT TO RIGHT       */ 64600003
*                                                                       64700003
*        IF INDEX(EHAREGS,'13P') = 0   /* REG 13 NOT DECLARED YET    */ 64800003
*          THEN                        /*   TRUE                     */ 67200003
*            EHAREGS = EHAREGS || '13P';                                67600003
*                                                                       68400003
*        IF INDEX(EHAREGS,'12P') = 0   /* REG 12 NOT DECLARED YET    */ 69200003
*          THEN                        /*   TRUE                     */ 70800003
*            EHAREGS = EHAREGS || '12P';                                71200003
*                                                                       72000003
*        IF INDEX(EHAUNIQUE,'CASAVPTR') = 0 /* SA PTR NOT DECLD      */ 72800003
*          THEN                        /*   TRUE                     */ 74400003
*            EHAUNIQUE = EHAUNIQUE || '#CASAVPTR PTR(31) BASED#' ||     74800003
*              '@SAVE AREA PTR FOR IKJEBERT@';                          75600003
*                                                                       76400003
*        IF INDEX(EHAUNIQUE,'CASAVE') = 0 /* SA PTR NOT DECLD        */ 78000003
*          THEN                        /*   TRUE                     */ 78400003
*            EHAUNIQUE = EHAUNIQUE || '#CASAVE CHAR(72) BASED#' ||      79200003
*              '@SAVE AREA EDIT MODULE@';                               80000003
*                                                                       81600003
*        ANS('RESPECIFY (GPR12P,GPR13P) RSTD;')                         82000003
*           COL(MACCOL) SKIP(1);                                        82800003
*                                                                       83600003
*        ALINE = 'CANXTSVA = GPR13P;';                                  85200003
*        DOCCOMCOLALT = LENGTH(ALINE) + MACCOL + 1;                     85280003
*        ANS(ALINE || ' ? DOC (UPDATE NEXT-SAVE-AREA PTR);')            85360003
*          SKIP(1) COL(MACCOL);                                         85440003
*                                                                       85520003
*        ALINE = 'GPR12P = GPR13P;';                                    85600003
*        DOCCOMCOLALT = LENGTH(ALINE) + MACCOL + 1;                     85800003
*        ANS(ALINE || '? DOC (SAVE PRESENT SAVE-AREA ADDR);')           86000003
*            COL(MACCOL);                                               86100003
*                                                                       86200003
*        ALINE = 'GPR13P = (GPR13P + 4) -> CASAVPTR;';                  86400003
*        DOCCOMCOLALT = LENGTH(ALINE) + MACCOL + 1;                     86480003
*        ANS(ALINE || '? DOC (GET BACKWARD SAVE-AREA PTR);')            86560003
*            COL(MACCOL);                                               86640003
*                                                                       86720003
*        ALINE = 'RESPECIFY CASAVE BASED(GPR12P);';                     86800003
*        DOCCOMCOLALT = LENGTH(ALINE) + MACCOL + 1;                     87000003
*        ANS(ALINE || '? DOC (CHANGE BASE FOR SAVE-AREA); ')            87200003
*            COL(MACCOL);                                               87300003
*                                                                       87400003
*        ALINE = 'CASAVE = CASAVE && CASAVE;';                          87600003
*        DOCCOMCOLALT = LENGTH(ALINE) + MACCOL + 1;                     87700003
*        ANS(ALINE || '? DOC (ZERO OUT THIS SAVE-AREA);') COL(MACCOL);  87800003
*                                                                       87900003
*        ANS('RESPECIFY CASAVE BASED;') COL(MACCOL);                    88000003
*                                                                       88800003
*        IF RC = ''                    /* NO RETURN CODE             */ 89200003
*          THEN DO;                    /*   TRUE                     */ 90000003
*            ALINE = 'RETURN;';                                         90800003
*            DOCCOMCOLALT = LENGTH(ALINE) + MACCOL + 1;                 91000003
*            ANS(ALINE || '? DOC (RETURN WITHOUT RETURN CODE);')        91200003
*                 COL(MACCOL);                                          91400003
*                                                                       91600003
*             END;                                                      91800003
*          ELSE DO;                    /*   FALSE, WANT RET CODE      */92000003
*            ALINE = 'RETURN CODE(' || RC(1) || ');';                   92400003
*            DOCCOMCOLALT = LENGTH(ALINE) + MACCOL + 1;                 92600003
*            ANS(ALINE || '? DOC (RETURN WITH RETURN CODE);')           92800003
*                 COL(MACCOL);                                          92900003
*             END;                                                      93000003
*                                                                       93200003
*        ANS('RESPECIFY (GPR12P,GPR13P) UNRSTD;')                       94000003
*           COL(MACCOL) SKIP(1);                                        94800003
*         ANS(' ') COL(DOCCOMCOL-1);                                    95600003
*                                                                       96400003
*         DOCCOMCOLALT = 0;            /* RESET TO ZERO              */ 97200003
*% END IKJEBERT;                                                        98800003
