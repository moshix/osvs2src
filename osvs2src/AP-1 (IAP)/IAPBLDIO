         TITLE 'IAPBLDIO - AP-1 CCW CHAIN BUILDER                      *00001000
                        '                                               00002000
IAPBLDIO CSECT ,                                                01S0001 00003000
@MAINENT DS    0H                                               01S0001 00004000
         USING *,@15                                            01S0001 00005000
         B     @PROLOG                                          01S0001 00006000
         DC    AL1(16)                                          01S0001 00007000
         DC    C'IAPBLDIO  77.308'                              01S0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                  01S0001 00010000
         BALR  @11,0                                            01S0001 00011000
@PSTART  LA    @12,4095(,@11)                                   01S0001 00012000
         USING @PSTART,@11                                      01S0001 00013000
         USING @PSTART+4095,@12                                 01S0001 00014000
*                                                               01S0100 00015000
         USING @DATD+AP1BLOCK-AP1END,AP1REG  ADDRESSABILITY             00016000
         ST    13,@SA00001+4     BACKWARD POINTER                       00017000
         LA    15,@SA00001       OUR SAVE AREA                          00018000
         ST    15,8(,13)         FOREWARD POINTER                       00019000
         LR     13,15            SET REG 13                             00020000
*   /*****************************************************************/ 00021000
*   /*                                                               */ 00022000
*   /* SELECT BUILD ROUTINE BASED ON AP1TSTNO                        */ 00023000
*   /*                                                               */ 00024000
*   /*****************************************************************/ 00025000
*                                                               01S0101 00026000
*   DO;                             /* CASE(AP1TSTNO)NAMES(RECAL,SNS,   00027000
*                                      RECAL,RHAMHS,RHAMH,RHAFHS,RHAF   00028000
*                                      H,RPS,SK192,SKINCR,SKMAX,SKRAN   00029000
*                                      S,SKRAN,RHAS,CE,WRTS,CE,RR01S,   00030000
*                                      CE,RDMT,FTWRT,AMDET,WRTPAD,SD,   00031000
*                                      CLEANUP)                      */ 00032000
*     DCL                                                       01S0102 00033000
*       CL0001@ LABEL BASED(CP0001@(AP1TSTNO)) VALUERANGE(RECAL,SNS,    00034000
*           RECAL,RHAMHS,RHAMH,RHAFHS,RHAFH,RPS,SK192,SKINCR,SKMAX,     00035000
*           SKRANS,SKRAN,RHAS,CE,WRTS,CE,RR01S,CE,RDMT,FTWRT,AMDET,     00036000
*           WRTPAD,SD,CLEANUP);     /* BRANCH TARGET                 */ 00037000
*     DCL                                                       01S0103 00038000
*       CP0001@(25) PTR(31) INIT(ADDR(RECAL),ADDR(SNS),ADDR(RECAL),ADDR 00039000
*           (RHAMHS),ADDR(RHAMH),ADDR(RHAFHS),ADDR(RHAFH),ADDR(RPS),    00040000
*           ADDR(SK192),ADDR(SKINCR),ADDR(SKMAX),ADDR(SKRANS),ADDR(     00041000
*           SKRAN),ADDR(RHAS),ADDR(CE),ADDR(WRTS),ADDR(CE),ADDR(RR01S), 00042000
*           ADDR(CE),ADDR(RDMT),ADDR(FTWRT),ADDR(AMDET),ADDR(WRTPAD),   00043000
*           ADDR(SD),ADDR(CLEANUP));                            01S0103 00044000
*     GOTO CL0001@;                 /* BRANCH TO SELECTED CASE       */ 00045000
*                                                               01S0104 00046000
         SLR   @10,@10                                          01S0104 00047000
         IC    @10,AP1TSTNO(,AP1REG)                            01S0104 00048000
         SLA   @10,2                                            01S0104 00049000
         L     @10,CP0001@-4(@10)                               01S0104 00050000
         BR    @10                                              01S0104 00051000
*     /***************************************************************/ 00052000
*     /*                                                             */ 00053000
*     /* RECAL: DUMMY RECALIBRATE                                    */ 00054000
*     /*                                                             */ 00055000
*     /***************************************************************/ 00056000
*                                                               01S0105 00057000
*RECAL:                                                         01S0105 00058000
*     DO;                           /* SUBCASE RECALIBRATE           */ 00059000
RECAL    DS    0H                                               01S0106 00060000
*/*        CCW CHAIN:                                           01S0106 00061000
*                RECAL,0,SLI-CC,1     RECAL                     01S0106 00062000
*                NOP,0,0,1            TO GET DEVICE END              */ 00063000
*                                                               01S0106 00064000
*       AP1FM=READFM;               /* READ ONLY--ALL SEEKS          */ 00065000
         MVC   AP1FM(1,AP1REG),READFM                           01S0106 00066000
*       CCW(1)=RECALCCW;            /* RECAL,0,SLI-CC,1              */ 00067000
         L     @10,AP1CCWA(,AP1REG)                             01S0107 00068000
         MVC   CCW(8,@10),RECALCCW                              01S0107 00069000
*       CCW(2)=NOPCCW;              /* NOP,0,0,1                     */ 00070000
         MVC   CCW+8(8,@10),NOPCCW                              01S0108 00071000
*       CCHH=0;                     /* SEEK CYL 0, HD 0              */ 00072000
         SLR   @10,@10                                          01S0109 00073000
         ST    @10,CCHH(,AP1REG)                                01S0109 00074000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00075000
         B     CE0001@                                          01S0110 00076000
*     END RECAL;                    /* END OF SUBCASE                */ 00077000
*                                                               01S0111 00078000
*     /***************************************************************/ 00079000
*     /*                                                             */ 00080000
*     /* SNS: SENSE TO SEE IF EMULATED AND FIXED HEAD                */ 00081000
*     /*                                                             */ 00082000
*     /***************************************************************/ 00083000
*                                                               01S0112 00084000
*SNS:                                                           01S0112 00085000
*     DO;                           /* SUBCASE                       */ 00086000
SNS      DS    0H                                               01S0113 00087000
*/*                  CCW CHAIN:                                 01S0113 00088000
*                    SNS,BUFF,0,24                                   */ 00089000
*                                                               01S0113 00090000
*       AP1FM=READFM;               /* FILE MASK,READ ONLY--ALL SEEKS*/ 00091000
*                                                               01S0113 00092000
         MVC   AP1FM(1,AP1REG),READFM                           01S0113 00093000
*       /*************************************************************/ 00094000
*       /*                                                           */ 00095000
*       /* AP1SEEK IS STILL 000000000                                */ 00096000
*       /*                                                           */ 00097000
*       /*************************************************************/ 00098000
*                                                               01S0114 00099000
*       CCW(1)=SNSCCW;              /* SNS,0,0,24                    */ 00100000
         L     @10,AP1CCWA(,AP1REG)                             01S0114 00101000
         MVC   CCW(8,@10),SNSCCW                                01S0114 00102000
*       CCWADDRB(1)=AP1BUFAB;       /* READ SNS INTO BUFFER          */ 00103000
         MVC   CCWADDRB(3,@10),AP1BUFAB(AP1REG)                 01S0115 00104000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00105000
         B     CE0001@                                          01S0116 00106000
*     END SNS;                      /* END OF SUBCASE                */ 00107000
*                                                               01S0117 00108000
*     /***************************************************************/ 00109000
*     /*                                                             */ 00110000
*     /* RHAMHS: CHECK MOVEABLE HEADS                                */ 00111000
*     /*                                                             */ 00112000
*     /***************************************************************/ 00113000
*                                                               01S0118 00114000
*RHAMHS:                                                        01S0118 00115000
*     DO;                           /* SUBCASE READ HA ON MOVABLE       00116000
*                                      HDS--PHYS HD 0--RHAMH WILL       00117000
*                                      ALTER SEEK ADDRESS TO READ HDS   00118000
*                                      1-29                          */ 00119000
RHAMHS   DS    0H                                               01S0119 00120000
*/*        CCW CHAIN:                                           01S0119 00121000
*                READ HA,0,SKIP,5                                    */ 00122000
*                                                               01S0119 00123000
*       CCHH=0;                     /* CYL 0, HD 0                   */ 00124000
         SLR   @10,@10                                          01S0119 00125000
         ST    @10,CCHH(,AP1REG)                                01S0119 00126000
*       AP1FM=READFM;               /* READ ONLY -- ALL SEEKS        */ 00127000
         MVC   AP1FM(1,AP1REG),READFM                           01S0120 00128000
*       CCW(1)=RHASKCCW;            /* RHA,0,SKIP,5                  */ 00129000
         L     @10,AP1CCWA(,AP1REG)                             01S0121 00130000
         MVC   CCW(8,@10),RHASKCCW                              01S0121 00131000
*       AP1ETABA=ADDR(AP1ERRTM);    /* POINT TO HD0 OF MOVABLE HD       00132000
*                                      MATRIX                        */ 00133000
         LA    @10,AP1ERRTM(,AP1REG)                            01S0122 00134000
         ST    @10,AP1ETABA(,AP1REG)                            01S0122 00135000
*       AP1TSTNO=AP1TSTNO+1;        /* USE CHK RTN FOR RHAMH         */ 00136000
         LA    @10,1                                            01S0123 00137000
         SLR   @09,@09                                          01S0123 00138000
         IC    @09,AP1TSTNO(,AP1REG)                            01S0123 00139000
         ALR   @10,@09                                          01S0123 00140000
         STC   @10,AP1TSTNO(,AP1REG)                            01S0123 00141000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00142000
         B     CE0001@                                          01S0124 00143000
*     END RHAMHS;                   /* END OF SUBCASE                */ 00144000
*                                                               01S0125 00145000
*     /***************************************************************/ 00146000
*     /*                                                             */ 00147000
*     /* RHAMH: CHECK MOVEABLE HEADS                                 */ 00148000
*     /*                                                             */ 00149000
*     /***************************************************************/ 00150000
*                                                               01S0126 00151000
*RHAMH:                                                         01S0126 00152000
*     DO;                           /* SUBCASE READ HA ON MOVEABLE      00153000
*                                      HDS 1-29 --RHAMHS SET UP CCW     00154000
*                                      CHAIN                         */ 00155000
*                                                               01S0126 00156000
RHAMH    DS    0H                                               01S0127 00157000
*       /*************************************************************/ 00158000
*       /*                                                           */ 00159000
*       /* INCREMENT TO NEXT PHYSICAL HEAD                           */ 00160000
*       /*                                                           */ 00161000
*       /*************************************************************/ 00162000
*                                                               01S0127 00163000
*       IF HH=HI3330HD THEN         /* HEAD 18--LAST ON 3330 PACK    */ 00164000
         CLC   HH(2,AP1REG),@CB00215                            01S0127 00165000
         BNE   @RF00127                                         01S0127 00166000
*         IF AP1DEVTP=AP13350 THEN  /* 3350                          */ 00167000
         CLI   AP1DEVTP(AP1REG),4                               01S0128 00168000
         BNE   @RF00128                                         01S0128 00169000
*           DO;                                                 01S0129 00170000
*             AP1ETABA=AP1ETABA+1;  /* INCREMENT TABLE PTR           */ 00171000
         LA    @10,1                                            01S0130 00172000
         L     @09,AP1ETABA(,AP1REG)                            01S0130 00173000
         ALR   @09,@10                                          01S0130 00174000
         ST    @09,AP1ETABA(,AP1REG)                            01S0130 00175000
*             HH=HH+1;              /* GO TO HD 19                   */ 00176000
         LH    @09,HH(,AP1REG)                                  01S0131 00177000
         N     @09,@CF00595                                     01S0131 00178000
         ALR   @10,@09                                          01S0131 00179000
         STH   @10,HH(,AP1REG)                                  01S0131 00180000
*           END;                                                01S0132 00181000
*         ELSE                      /* MUST BE 3330                  */ 00182000
*           DO;                                                 01S0133 00183000
         B     @RC00128                                         01S0133 00184000
@RF00128 DS    0H                                               01S0134 00185000
*             AP1ETABA=AP1ETABA+2;  /* INCR TABLE PTR BY 2--PHYS HD     00186000
*                                      19 NOT USED                   */ 00187000
         LA    @10,2                                            01S0134 00188000
         AL    @10,AP1ETABA(,AP1REG)                            01S0134 00189000
         ST    @10,AP1ETABA(,AP1REG)                            01S0134 00190000
*             CCHH='00040000'X;     /* TO CYL 4 FOR PHYS HDS 20-29   */ 00191000
         MVC   CCHH(4,AP1REG),@CB00555                          01S0135 00192000
*           END;                                                01S0136 00193000
*       ELSE                        /* NOT HD 18                     */ 00194000
*         IF AP1DEVTP=AP13344 THEN  /* 3344                          */ 00195000
         B     @RC00127                                         01S0137 00196000
@RF00127 CLI   AP1DEVTP(AP1REG),3                               01S0137 00197000
         BNE   @RF00137                                         01S0137 00198000
*           IF CCHH='00000000'X THEN/* FIRST TRACK ON 3344           */ 00199000
         CLC   CCHH(4,AP1REG),@CB00556                          01S0138 00200000
         BNE   @RF00138                                         01S0138 00201000
*             HH='0001'X;           /* READ 2ND HALF OF TRK--SAME       00202000
*                                      PHYS HD                       */ 00203000
         MVC   HH(2,AP1REG),@CB00557                            01S0139 00204000
*           ELSE                    /* 3344 BUT NOT 1ST TRK          */ 00205000
*             DO;                                               01S0140 00206000
         B     @RC00138                                         01S0140 00207000
@RF00138 DS    0H                                               01S0141 00208000
*               IF CC=0&HH=HI3344HD THEN/* END OF CYL 0              */ 00209000
         LH    @10,CC(,AP1REG)                                  01S0141 00210000
         N     @10,@CF00595                                     01S0141 00211000
         LTR   @10,@10                                          01S0141 00212000
         BNZ   @RF00141                                         01S0141 00213000
         CLC   HH(2,AP1REG),@CB00235                            01S0141 00214000
         BNE   @RF00141                                         01S0141 00215000
*                 CC='000A'X;       /* SKIP 10 CYLS--MAY BE FIXED HDS*/ 00216000
         MVC   CC(2,AP1REG),@CB00558                            01S0142 00217000
*               ELSE                                            01S0143 00218000
*                 ;                 /* NOT END OF CYL 0              */ 00219000
@RF00141 DS    0H                                               01S0144 00220000
*               IF HH=HI3344HD THEN /* END OF CYL                    */ 00221000
         CLC   HH(2,AP1REG),@CB00235                            01S0144 00222000
         BNE   @RF00144                                         01S0144 00223000
*                 DO;                                           01S0145 00224000
*                   CC=CC+1;        /* GO TO NEXT CYL                */ 00225000
         LA    @10,1                                            01S0146 00226000
         LH    @09,CC(,AP1REG)                                  01S0146 00227000
         N     @09,@CF00595                                     01S0146 00228000
         ALR   @09,@10                                          01S0146 00229000
         STH   @09,CC(,AP1REG)                                  01S0146 00230000
*                   HH=1;           /* TRACK ONE                     */ 00231000
         STH   @10,HH(,AP1REG)                                  01S0147 00232000
*                 END;                                          01S0148 00233000
*               ELSE                /* NOT END OF CYL                */ 00234000
*                 HH=HH+2;          /* TO NEXT PHYSICAL TRACK        */ 00235000
         B     @RC00144                                         01S0149 00236000
@RF00144 LA    @10,2                                            01S0149 00237000
         LH    @09,HH(,AP1REG)                                  01S0149 00238000
         N     @09,@CF00595                                     01S0149 00239000
         ALR   @10,@09                                          01S0149 00240000
         STH   @10,HH(,AP1REG)                                  01S0149 00241000
*               AP1ETABA=AP1ETABA+1;/* INCR TABLE PTR TO NEXT PHYS      00242000
*                                      HEAD                          */ 00243000
@RC00144 LA    @10,1                                            01S0150 00244000
         AL    @10,AP1ETABA(,AP1REG)                            01S0150 00245000
         ST    @10,AP1ETABA(,AP1REG)                            01S0150 00246000
*             END;                                              01S0151 00247000
*         ELSE                      /* NOT 3344--NOT HD 18           */ 00248000
*           DO;                                                 01S0152 00249000
         B     @RC00137                                         01S0152 00250000
@RF00137 DS    0H                                               01S0153 00251000
*             AP1ETABA=AP1ETABA+1;  /* INCR TABLE PTR TO NEXT PHYS      00252000
*                                      HEAD                          */ 00253000
         LA    @10,1                                            01S0153 00254000
         L     @09,AP1ETABA(,AP1REG)                            01S0153 00255000
         ALR   @09,@10                                          01S0153 00256000
         ST    @09,AP1ETABA(,AP1REG)                            01S0153 00257000
*             HH=HH+1;              /* TO NEXT PHYS HEAD             */ 00258000
         LH    @09,HH(,AP1REG)                                  01S0154 00259000
         N     @09,@CF00595                                     01S0154 00260000
         ALR   @10,@09                                          01S0154 00261000
         STH   @10,HH(,AP1REG)                                  01S0154 00262000
*           END;                                                01S0155 00263000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00264000
         B     CE0001@                                          01S0156 00265000
*     END RHAMH;                    /* END OF SUBCASE                */ 00266000
*                                                               01S0157 00267000
*     /***************************************************************/ 00268000
*     /*                                                             */ 00269000
*     /* RHAFHS: CHECK FIXED HEADS                                   */ 00270000
*     /*                                                             */ 00271000
*     /***************************************************************/ 00272000
*                                                               01S0158 00273000
*RHAFHS:                                                        01S0158 00274000
*     DO;                           /* SUBCASE READ HA ON FIXED HEAD    00275000
*                                      0 --RHAFH WILL ALTER SEEK        00276000
*                                      ADDRESS TO HEADS 1-59         */ 00277000
RHAFHS   DS    0H                                               01S0159 00278000
*/*        CCW CHAIN:                                           01S0159 00279000
*                READ HA,0,SKIP,5                                    */ 00280000
*                                                               01S0159 00281000
*       CCHH=FIXEDHD1;              /* FIRST FIXED HEAD              */ 00282000
         MVC   CCHH(4,AP1REG),@CB00256                          01S0159 00283000
*       AP1ETABA=ADDR(AP1ERRTF);    /* POINT TO ERR TAB FOR FIXED HDS*/ 00284000
         LA    @10,AP1ERRTF(,AP1REG)                            01S0160 00285000
         ST    @10,AP1ETABA(,AP1REG)                            01S0160 00286000
*       CCW(1)=RHASKCCW;            /* RHA,0,SKIP,5                  */ 00287000
         L     @10,AP1CCWA(,AP1REG)                             01S0161 00288000
         MVC   CCW(8,@10),RHASKCCW                              01S0161 00289000
*       AP1TSTNO=AP1TSTNO+1;        /* USE CHK RTN FOR RHAFH         */ 00290000
         LA    @10,1                                            01S0162 00291000
         SLR   @09,@09                                          01S0162 00292000
         IC    @09,AP1TSTNO(,AP1REG)                            01S0162 00293000
         ALR   @10,@09                                          01S0162 00294000
         STC   @10,AP1TSTNO(,AP1REG)                            01S0162 00295000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00296000
         B     CE0001@                                          01S0163 00297000
*     END RHAFHS;                   /* END OF SUBCASE                */ 00298000
*                                                               01S0164 00299000
*     /***************************************************************/ 00300000
*     /*                                                             */ 00301000
*     /* RHAFH: CHECK FIXED HEADS                                    */ 00302000
*     /*                                                             */ 00303000
*     /***************************************************************/ 00304000
*                                                               01S0165 00305000
*RHAFH:                                                         01S0165 00306000
*     DO;                           /* SUBCASE READ HA ON FIXED HDS     00307000
*                                      1-59 --RHAFHS SET UP CCW CHAIN*/ 00308000
RHAFH    DS    0H                                               01S0166 00309000
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */ 00310000
         CLI   AP1DEVTP(AP1REG),3                               01S0166 00311000
         BNE   @RF00166                                         01S0166 00312000
*         IF HH=HI3344HD-1 THEN     /* LAST EVEN TRK ON CYL          */ 00313000
         CLC   HH(2,AP1REG),@CH00431                            01S0167 00314000
         BNE   @RF00167                                         01S0167 00315000
*           DO;                                                 01S0168 00316000
*             CC=CC+1;              /* GO TO NXT CYL                 */ 00317000
         LA    @10,1                                            01S0169 00318000
         LH    @09,CC(,AP1REG)                                  01S0169 00319000
         N     @09,@CF00595                                     01S0169 00320000
         ALR   @10,@09                                          01S0169 00321000
         STH   @10,CC(,AP1REG)                                  01S0169 00322000
*             HH=0;                 /* HEAD 0                        */ 00323000
         SLR   @10,@10                                          01S0170 00324000
         STH   @10,HH(,AP1REG)                                  01S0170 00325000
*           END;                                                01S0171 00326000
*         ELSE                      /* NOT LAST TRACK                */ 00327000
*           HH=HH+2;                /* GO TO NEXT PHYS TRACK         */ 00328000
         B     @RC00167                                         01S0172 00329000
@RF00167 LA    @10,2                                            01S0172 00330000
         LH    @09,HH(,AP1REG)                                  01S0172 00331000
         N     @09,@CF00595                                     01S0172 00332000
         ALR   @10,@09                                          01S0172 00333000
         STH   @10,HH(,AP1REG)                                  01S0172 00334000
*       ELSE                                                    01S0173 00335000
*         ;                         /* NOT 3344                      */ 00336000
@RF00166 DS    0H                                               01S0174 00337000
*       IF AP1DEVTP=AP13350 THEN    /* 3350                          */ 00338000
@RC00166 CLI   AP1DEVTP(AP1REG),4                               01S0174 00339000
         BNE   @RF00174                                         01S0174 00340000
*         IF HH=HI3350HD THEN       /* LAST TRK ON CYL               */ 00341000
         CLC   HH(2,AP1REG),@CB00233                            01S0175 00342000
         BNE   @RF00175                                         01S0175 00343000
*           DO;                                                 01S0176 00344000
*             CC=CC+1;              /* INCR TO NEXT CYL              */ 00345000
         LA    @10,1                                            01S0177 00346000
         LH    @09,CC(,AP1REG)                                  01S0177 00347000
         N     @09,@CF00595                                     01S0177 00348000
         ALR   @10,@09                                          01S0177 00349000
         STH   @10,CC(,AP1REG)                                  01S0177 00350000
*             HH=0;                 /* HEAD 0                        */ 00351000
         SLR   @10,@10                                          01S0178 00352000
         STH   @10,HH(,AP1REG)                                  01S0178 00353000
*           END;                                                01S0179 00354000
*         ELSE                      /* NOT LAST TRK ON CYL           */ 00355000
*           HH=HH+1;                /* GO TO NEXT TRK                */ 00356000
         B     @RC00175                                         01S0180 00357000
@RF00175 LA    @10,1                                            01S0180 00358000
         LH    @09,HH(,AP1REG)                                  01S0180 00359000
         N     @09,@CF00595                                     01S0180 00360000
         ALR   @10,@09                                          01S0180 00361000
         STH   @10,HH(,AP1REG)                                  01S0180 00362000
*       ELSE                                                    01S0181 00363000
*         ;                         /* NOT 3350                      */ 00364000
@RF00174 DS    0H                                               01S0182 00365000
*       IF AP1DEVTP<=AP13331 THEN   /* 3330                          */ 00366000
@RC00174 CLI   AP1DEVTP(AP1REG),2                               01S0182 00367000
         BH    @RF00182                                         01S0182 00368000
*         IF HH=HI3330HD THEN       /* LAST TRK ON CYL               */ 00369000
         CLC   HH(2,AP1REG),@CB00215                            01S0183 00370000
         BNE   @RF00183                                         01S0183 00371000
*           DO;                                                 01S0184 00372000
*             CC=CC+1;              /* INCR TO NEXT CYL              */ 00373000
         LA    @10,1                                            01S0185 00374000
         LH    @09,CC(,AP1REG)                                  01S0185 00375000
         N     @09,@CF00595                                     01S0185 00376000
         ALR   @10,@09                                          01S0185 00377000
         STH   @10,CC(,AP1REG)                                  01S0185 00378000
*             HH=0;                 /* HEAD 0                        */ 00379000
         SLR   @10,@10                                          01S0186 00380000
         STH   @10,HH(,AP1REG)                                  01S0186 00381000
*           END;                                                01S0187 00382000
*         ELSE                      /* NOT LAST TRK ON CYL           */ 00383000
*           HH=HH+1;                /* TO NEXT HEAD                  */ 00384000
         B     @RC00183                                         01S0188 00385000
@RF00183 LA    @10,1                                            01S0188 00386000
         LH    @09,HH(,AP1REG)                                  01S0188 00387000
         N     @09,@CF00595                                     01S0188 00388000
         ALR   @10,@09                                          01S0188 00389000
         STH   @10,HH(,AP1REG)                                  01S0188 00390000
*       ELSE                                                    01S0189 00391000
*         ;                         /* NOT 3330                      */ 00392000
@RF00182 DS    0H                                               01S0190 00393000
*       AP1ETABA=AP1ETABA+1;        /* POINT TO NEXT ERR TAB ENTRY   */ 00394000
@RC00182 LA    @10,1                                            01S0190 00395000
         AL    @10,AP1ETABA(,AP1REG)                            01S0190 00396000
         ST    @10,AP1ETABA(,AP1REG)                            01S0190 00397000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00398000
         B     CE0001@                                          01S0191 00399000
*     END RHAFH;                    /* END OF SUBCASE                */ 00400000
*                                                               01S0192 00401000
*     /***************************************************************/ 00402000
*     /*                                                             */ 00403000
*     /* RPS: RPS TEST                                               */ 00404000
*     /*                                                             */ 00405000
*     /***************************************************************/ 00406000
*                                                               01S0193 00407000
*RPS:                                                           01S0193 00408000
*     DO;                           /* SUBCASE CHKS RESPONSE TO RPS     00409000
*                                      CMDS                          */ 00410000
RPS      DS    0H                                               01S0194 00411000
*/*        CCW CHAIN:                                           01S0194 00412000
*                 READ SECTOR,BUFF,CC,1  READ RANDOM SECTOR     01S0194 00413000
*                 NO OP,0,CC,1           DISORIENT              01S0194 00414000
*                 SET SECTOR,BUFF,CC,1   TO SECTOR READ         01S0194 00415000
*                 NO OP,0,0,1            BRING IN CE-DE              */ 00416000
*                                                               01S0194 00417000
*       CCHH=0;                     /* CYL 0, HD 0                   */ 00418000
         SLR   @10,@10                                          01S0194 00419000
         ST    @10,CCHH(,AP1REG)                                01S0194 00420000
*       CCW(1)=RSCCCCW;             /* RS,0,CC,1                     */ 00421000
         L     @10,AP1CCWA(,AP1REG)                             01S0195 00422000
         MVC   CCW(8,@10),RSCCCCW                               01S0195 00423000
*       CCWADDRB(1)=AP1BUFAB;       /* INTO BUFFER                   */ 00424000
         MVC   CCWADDRB(3,@10),AP1BUFAB(AP1REG)                 01S0196 00425000
*       CCW(2)=NOPCCCCW;            /* NOP,0,CC,1                    */ 00426000
         MVC   CCW+8(8,@10),NOPCCCCW                            01S0197 00427000
*       CCW(3)=SSCCCCW;             /* SS,0,CC,1                     */ 00428000
         MVC   CCW+16(8,@10),SSCCCCW                            01S0198 00429000
*       CCWADDRB(3)=AP1BUFAB;       /* FROM BUFFER                   */ 00430000
         MVC   CCWADDRB+16(3,@10),AP1BUFAB(AP1REG)              01S0199 00431000
*       CCW(4)=NOPCCW;              /* NOP,0,0,1                     */ 00432000
         MVC   CCW+24(8,@10),NOPCCW                             01S0200 00433000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00434000
         B     CE0001@                                          01S0201 00435000
*     END RPS;                      /* END OF SUBCASE                */ 00436000
*                                                               01S0202 00437000
*     /***************************************************************/ 00438000
*     /*                                                             */ 00439000
*     /* SK192: 192 CYLINDER SEEKS                                   */ 00440000
*     /*                                                             */ 00441000
*     /***************************************************************/ 00442000
*                                                               01S0203 00443000
*SK192:                                                         01S0203 00444000
*     DO;                           /* SUBCASE 192 CYL SEEKS--SKIPPED   00445000
*                                      FOR 3344                      */ 00446000
SK192    DS    0H                                               01S0204 00447000
*/*       CCW CHAIN:                                            01S0204 00448000
*                ***********                    IOS SEEK TO CYL 0       00449000
*                SEEK,BUFF,CC,6                 TO PHYSICAL CYL 192     00450000
*                SEEK,AP1SEEK,CC,6              TO CYL 0        01S0204 00451000
*                SET SECT,BUFF,CC,1             SECTOR 0        01S0204 00452000
*                     REPEATED TO MAKE 99 CCWS                  01S0204 00453000
*                NOP,0,0,1            TO GET DEVICE END              */ 00454000
*                                                               01S0204 00455000
*       CCHH=0;                     /* CYL 0 HD 0                    */ 00456000
         SLR   @10,@10                                          01S0204 00457000
         ST    @10,CCHH(,AP1REG)                                01S0204 00458000
*       AP1FM=READFM;               /* READ ONLY--ALL SEEKS          */ 00459000
         MVC   AP1FM(1,AP1REG),READFM                           01S0205 00460000
*       AP1BUFAD->SEEK=ZERO7;       /* BB--HHR                       */ 00461000
         L     @10,AP1BUFAD(,AP1REG)                            01S0206 00462000
         MVC   SEEK(7,@10),ZERO7                                01S0206 00463000
*       IF AP1DEVTP=AP13350 THEN    /* 3350                          */ 00464000
         CLI   AP1DEVTP(AP1REG),4                               01S0207 00465000
         BNE   @RF00207                                         01S0207 00466000
*         AP1BUFAD->SEEKCC=REAL192; /* CYL 192                       */ 00467000
         MVC   SEEKCC(2,@10),@CB00248                           01S0208 00468000
*       ELSE                        /* 3330                          */ 00469000
*         AP1BUFAD->SEEKCC=EMU192;  /* PHYS CYL 192                  */ 00470000
         B     @RC00207                                         01S0209 00471000
@RF00207 L     @10,AP1BUFAD(,AP1REG)                            01S0209 00472000
         MVC   SEEKCC(2,@10),@CB00250                           01S0209 00473000
*       CCWPTR=AP1CCWA;             /* POINT TO FIRST SLOT           */ 00474000
@RC00207 L     CCWPTR,AP1CCWA(,AP1REG)                          01S0210 00475000
*       DO WHILE CCWPTR<AP1CCWA+(LENGTH(CCW)*99);/* BUILD 99 CCWS    */ 00476000
         B     @DE00211                                         01S0211 00477000
@DL00211 DS    0H                                               01S0212 00478000
*         CCWPTR->CCW(1)=SEEKCCW;   /* FULL SEEK,0,CC,6              */ 00479000
         MVC   CCW(8,CCWPTR),SEEKCCW                            01S0212 00480000
*         CCWPTR->CCWADDRB(1)=AP1BUFAB;/* PHYS CYL 192               */ 00481000
         MVC   CCWADDRB(3,CCWPTR),AP1BUFAB(AP1REG)              01S0213 00482000
*         CCWPTR=CCWPTR+LENGTH(CCW);/* NEXT SLOT                     */ 00483000
         LA    @10,8                                            01S0214 00484000
         ALR   CCWPTR,@10                                       01S0214 00485000
*         CCWPTR->CCW(1)=SEEKCCW;   /* FULL SEEK,0,CC,6              */ 00486000
         MVC   CCW(8,CCWPTR),SEEKCCW                            01S0215 00487000
*         CCWPTR->CCWADDRB(1)=ADDR(AP1SEEK);/* CYL 0                 */ 00488000
         LA    @09,AP1SEEK(,AP1REG)                             01S0216 00489000
         STCM  @09,7,CCWADDRB(CCWPTR)                           01S0216 00490000
*         CCWPTR=CCWPTR+LENGTH(CCW);/* NEXT SLOT                     */ 00491000
         ALR   CCWPTR,@10                                       01S0217 00492000
*         CCWPTR->CCW(1)=SSCCCCW;   /* SS,0,CC,1                     */ 00493000
         MVC   CCW(8,CCWPTR),SSCCCCW                            01S0218 00494000
*         CCWPTR->CCWADDRB(1)=AP1BUFAB;/* SECTOR ZERO                */ 00495000
         MVC   CCWADDRB(3,CCWPTR),AP1BUFAB(AP1REG)              01S0219 00496000
*         CCWPTR=CCWPTR+LENGTH(CCW);/* NEXT SLOT                     */ 00497000
         ALR   CCWPTR,@10                                       01S0220 00498000
*       END;                        /* OF DO WHILE                   */ 00499000
@DE00211 LA    @10,792                                          01S0221 00500000
         AL    @10,AP1CCWA(,AP1REG)                             01S0221 00501000
         CR    CCWPTR,@10                                       01S0221 00502000
         BL    @DL00211                                         01S0221 00503000
*       CCWPTR=CCWPTR-LENGTH(CCW);  /* LAST CCW                      */ 00504000
         SL    CCWPTR,@CF00047                                  01S0222 00505000
*       CCWPTR->CCW(1)=NOPCCW;      /* NOP,0,0,1                     */ 00506000
         MVC   CCW(8,CCWPTR),NOPCCW                             01S0223 00507000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00508000
         B     CE0001@                                          01S0224 00509000
*     END SK192;                    /* END OF SUBCASE                */ 00510000
*                                                               01S0225 00511000
*     /***************************************************************/ 00512000
*     /*                                                             */ 00513000
*     /* SKINCR: INCREMENTAL SEEKS                                   */ 00514000
*     /*                                                             */ 00515000
*     /***************************************************************/ 00516000
*                                                               01S0226 00517000
*SKINCR:                                                        01S0226 00518000
*     DO;                           /* SUBCASE INCREMENTAL SEEKS     */ 00519000
SKINCR   DS    0H                                               01S0227 00520000
*/*        CCW CHAIN:                                           01S0227 00521000
*                ************                 IOS SEEK TO CYL 0 01S0227 00522000
*                SEEK,BUFF,CC,6               SEEK CYL 11       01S0227 00523000
*                READ HA,0,SKIP-CC,5          VERIFY SEEK       01S0227 00524000
*                SEEK,BUFF+8,CC,6             SEEK NEXT PHYS CYL        00525000
*                READ HA,0,SKIP-CC,5          VERIFY SEEK       01S0227 00526000
*                      REPEAT ABOVE INCREMENTING BY 1 PHYS CYL FOR      00527000
*                         100 CCWS--LAST HAS CC OFF                  */ 00528000
*                                                               01S0227 00529000
*       CCHH=0;                     /* START CYL 0 HD 0              */ 00530000
         SLR   @10,@10                                          01S0227 00531000
         ST    @10,CCHH(,AP1REG)                                01S0227 00532000
*       AP1FM=READFM;               /* READ ONLY--ALL SEEKS          */ 00533000
         MVC   AP1FM(1,AP1REG),READFM                           01S0228 00534000
*       CCWPTR=AP1CCWA;             /* FIRST SLOT                    */ 00535000
         L     CCWPTR,AP1CCWA(,AP1REG)                          01S0229 00536000
*       BUFPTR=AP1BUFAD;            /* PUT SEEK ADDRESSES IN BUFFER  */ 00537000
         L     BUFPTR,AP1BUFAD(,AP1REG)                         01S0230 00538000
*       BUFPTR->SEEK=CYL11;         /* BBCCHHR FOR CYL 11            */ 00539000
         MVC   SEEK(7,BUFPTR),@CB00253                          01S0231 00540000
*       AP1PTRN2=OFF;               /* USED AS FLAG FOR DETERMINING     00541000
*                                      HOW MUCH TO INCREMENT 3330       00542000
*                                      SEEK                          */ 00543000
         NI    AP1PTRN2(AP1REG),B'01111111'                     01S0232 00544000
*       DO WHILE CCWPTR<AP1CCWA+(LENGTH(CCW)*100);/* BUILD 100 CCWS  */ 00545000
         B     @DE00233                                         01S0233 00546000
@DL00233 DS    0H                                               01S0234 00547000
*         CCWPTR->CCW(1)=SEEKCCW;   /* FULL SEEK,0,CC,6              */ 00548000
         MVC   CCW(8,CCWPTR),SEEKCCW                            01S0234 00549000
*         CCWPTR->CCWADDRB(1)=BUFPTR;/* SEEK ADDRESS--SET UP LAST       00550000
*                                      PASS                          */ 00551000
         STCM  BUFPTR,7,CCWADDRB(CCWPTR)                        01S0235 00552000
*         CCWPTR=CCWPTR+LENGTH(CCW);/* NEXT SLOT                     */ 00553000
         LA    @10,8                                            01S0236 00554000
         ALR   CCWPTR,@10                                       01S0236 00555000
*         CCWPTR->CCW(1)=RHACSCCW;  /* RHA,0,SKIP-CC,4               */ 00556000
         MVC   CCW(8,CCWPTR),RHACSCCW                           01S0237 00557000
*         CCWPTR=CCWPTR+LENGTH(CCW);/* NEXT SLOT                     */ 00558000
*                                                               01S0238 00559000
         ALR   CCWPTR,@10                                       01S0238 00560000
*         /***********************************************************/ 00561000
*         /*                                                         */ 00562000
*         /* SET UP SEEK ADDRESS FOR NEXT SEEK                       */ 00563000
*         /*                                                         */ 00564000
*         /***********************************************************/ 00565000
*                                                               01S0239 00566000
*         EVAL(BUFPTR+LENGTH(SEEK))->SEEK=ZERO7;/* BB--HHR           */ 00567000
         LA    @10,7                                            01S0239 00568000
         LR    @09,BUFPTR                                       01S0239 00569000
         ALR   @09,@10                                          01S0239 00570000
         MVC   SEEK(7,@09),ZERO7                                01S0239 00571000
*         EVAL(BUFPTR+LENGTH(SEEK))->SEEKCC=BUFPTR->SEEKCC+1;/* INCR    00572000
*                                      CYL BY ONE                    */ 00573000
         LR    @09,BUFPTR                                       01S0240 00574000
         ALR   @09,@10                                          01S0240 00575000
         LA    @15,1                                            01S0240 00576000
         SLR   @14,@14                                          01S0240 00577000
         ICM   @14,3,SEEKCC(BUFPTR)                             01S0240 00578000
         ALR   @15,@14                                          01S0240 00579000
         STCM  @15,3,SEEKCC(@09)                                01S0240 00580000
*         BUFPTR=BUFPTR+LENGTH(SEEK);/* POINT TO NEW SLOT            */ 00581000
         ALR   BUFPTR,@10                                       01S0241 00582000
*         IF AP1DEVTP=AP13344 THEN  /* 3344                          */ 00583000
         CLI   AP1DEVTP(AP1REG),3                               01S0242 00584000
         BNE   @RF00242                                         01S0242 00585000
*           BUFPTR->SEEKCC=BUFPTR->SEEKCC+4;/* INCR TOTAL OF 5  01S0243 00586000
*                                      LOGICAL CYL PER PHYSICAL 01S0243 00587000
*                                      CYLINDER                      */ 00588000
         LA    @10,4                                            01S0243 00589000
         SLR   @09,@09                                          01S0243 00590000
         ICM   @09,3,SEEKCC(BUFPTR)                             01S0243 00591000
         ALR   @10,@09                                          01S0243 00592000
         STCM  @10,3,SEEKCC(BUFPTR)                             01S0243 00593000
*         ELSE                      /* NOT 3344                      */ 00594000
*           IF AP1DEVTP<=AP13331 THEN/* 3330                         */ 00595000
         B     @RC00242                                         01S0244 00596000
@RF00242 CLI   AP1DEVTP(AP1REG),2                               01S0244 00597000
         BH    @RF00244                                         01S0244 00598000
*             IF AP1PTRN2=OFF THEN  /* INCR BY ONLY ONE CYL FOR NEXT    00599000
*                                      PHYSICAL CYLINDER             */ 00600000
         TM    AP1PTRN2(AP1REG),B'10000000'                     01S0245 00601000
         BNZ   @RF00245                                         01S0245 00602000
*               AP1PTRN2=ON;        /* BY 2 NEXT TIME                */ 00603000
         OI    AP1PTRN2(AP1REG),B'10000000'                     01S0246 00604000
*             ELSE                  /* INCR BY 2 CYL FOR NEXT PHYS   */ 00605000
*               DO;                                             01S0247 00606000
         B     @RC00245                                         01S0247 00607000
@RF00245 DS    0H                                               01S0248 00608000
*                 BUFPTR->SEEKCC=BUFPTR->SEEKCC+1;/* INCR BY TOTAL OF   00609000
*                                      2                             */ 00610000
         LA    @10,1                                            01S0248 00611000
         SLR   @09,@09                                          01S0248 00612000
         ICM   @09,3,SEEKCC(BUFPTR)                             01S0248 00613000
         ALR   @10,@09                                          01S0248 00614000
         STCM  @10,3,SEEKCC(BUFPTR)                             01S0248 00615000
*                 AP1PTRN2=OFF;     /* BY 1 NEXT TIME                */ 00616000
         NI    AP1PTRN2(AP1REG),B'01111111'                     01S0249 00617000
*               END;                                            01S0250 00618000
*           ELSE                                                01S0251 00619000
*             ;                     /* NOT 3330                      */ 00620000
@RF00244 DS    0H                                               01S0252 00621000
*       END;                        /* OF DO WHILE                   */ 00622000
@RC00244 DS    0H                                               01S0252 00623000
@RC00242 DS    0H                                               01S0252 00624000
@DE00233 LA    @10,800                                          01S0252 00625000
         AL    @10,AP1CCWA(,AP1REG)                             01S0252 00626000
         CR    CCWPTR,@10                                       01S0252 00627000
         BL    @DL00233                                         01S0252 00628000
*       CCWPTR=CCWPTR-LENGTH(CCW);  /* LAST CCW                      */ 00629000
         SL    CCWPTR,@CF00047                                  01S0253 00630000
*       CCWPTR->CCWCC(1)=OFF;       /* BREAK CHAIN                   */ 00631000
         NI    CCWCC(CCWPTR),B'10111111'                        01S0254 00632000
*       AP1PTRN2=OFF;               /* RESET FOR NEXT TEST           */ 00633000
         NI    AP1PTRN2(AP1REG),B'01111111'                     01S0255 00634000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00635000
         B     CE0001@                                          01S0256 00636000
*     END SKINCR;                   /* END OF SUBCASE                */ 00637000
*                                                               01S0257 00638000
*     /***************************************************************/ 00639000
*     /*                                                             */ 00640000
*     /* SKMAX: MAXIMUM SEEKS                                        */ 00641000
*     /*                                                             */ 00642000
*     /***************************************************************/ 00643000
*                                                               01S0258 00644000
*SKMAX:                                                         01S0258 00645000
*     DO;                           /* SUBCASE MAXIMUM SEEKS         */ 00646000
SKMAX    DS    0H                                               01S0259 00647000
*/*      CCW CHAIN:                                             01S0259 00648000
*                ************            IOS SEEK TO CYL 0      01S0259 00649000
*                SEEK,BUFF,CC,6          SEEK TO HI CYL         01S0259 00650000
*                RD HA,0,SKIP-CC,5       VERIFY SEEK            01S0259 00651000
*                SEEK,AP1SEEK,CC,6       SEEK TO CYL 0          01S0259 00652000
*                RD HA,0,SKIP-CC,5       VERIFY SEEK            01S0259 00653000
*                     REPEAT ABOVE 4 CCWS FOR A TOTAL OF 100--  01S0259 00654000
*                          TURN CHAIN CMD OFF IN LAST                */ 00655000
*                                                               01S0259 00656000
*       CCHH=0;                     /* CYL 0 HD 0                    */ 00657000
         SLR   @10,@10                                          01S0259 00658000
         ST    @10,CCHH(,AP1REG)                                01S0259 00659000
*       AP1FM=READFM;               /* READ ONLY -- ALL SEEKS        */ 00660000
         MVC   AP1FM(1,AP1REG),READFM                           01S0260 00661000
*       AP1BUFAD->SEEK=ZERO7;       /* BBCCHHR                       */ 00662000
         L     @09,AP1BUFAD(,AP1REG)                            01S0261 00663000
         MVC   SEEK(7,@09),ZERO7                                01S0261 00664000
*       AP1BUFAD->SEEKCC=AP1LSTCC;  /* CC OF LAST CYL ON VOLUME      */ 00665000
         MVC   SEEKCC(2,@09),AP1LSTCC(AP1REG)                   01S0262 00666000
*       AP1BUFAD->SEEKHH=0;         /* HH = 0                        */ 00667000
         STCM  @10,3,SEEKHH(@09)                                01S0263 00668000
*       CCWPTR=AP1CCWA;             /* FIRST CCW SLOT                */ 00669000
         L     CCWPTR,AP1CCWA(,AP1REG)                          01S0264 00670000
*       DO WHILE CCWPTR<AP1CCWA+(LENGTH(CCW)*100);/* 100 CCWS        */ 00671000
         B     @DE00265                                         01S0265 00672000
@DL00265 DS    0H                                               01S0266 00673000
*         CCWPTR->CCW(1)=SEEKCCW;   /* SEEK,0,CC,6                   */ 00674000
         MVC   CCW(8,CCWPTR),SEEKCCW                            01S0266 00675000
*         CCWPTR->CCWADDRB(1)=AP1BUFAB;/* HI CYL                     */ 00676000
         MVC   CCWADDRB(3,CCWPTR),AP1BUFAB(AP1REG)              01S0267 00677000
*         CCWPTR=CCWPTR+LENGTH(CCW);/* NEXT SLOT                     */ 00678000
         LA    @10,8                                            01S0268 00679000
         ALR   CCWPTR,@10                                       01S0268 00680000
*         CCWPTR->CCW(1)=RHACSCCW;  /* RD HA,0,SKIP-CC,5             */ 00681000
         MVC   CCW(8,CCWPTR),RHACSCCW                           01S0269 00682000
*         CCWPTR=CCWPTR+LENGTH(CCW);/* NEXT SLOT                     */ 00683000
         ALR   CCWPTR,@10                                       01S0270 00684000
*         CCWPTR->CCW(1)=SEEKCCW;   /* SEEK,0,CC,6                   */ 00685000
         MVC   CCW(8,CCWPTR),SEEKCCW                            01S0271 00686000
*         CCWPTR->CCWADDRB(1)=ADDR(AP1SEEK);/* CYL 0                 */ 00687000
         LA    @09,AP1SEEK(,AP1REG)                             01S0272 00688000
         STCM  @09,7,CCWADDRB(CCWPTR)                           01S0272 00689000
*         CCWPTR=CCWPTR+LENGTH(CCW);/* NEXT SLOT                     */ 00690000
         ALR   CCWPTR,@10                                       01S0273 00691000
*         CCWPTR->CCW(1)=RHACSCCW;  /* RD HA,0,SKIP-CC,5             */ 00692000
         MVC   CCW(8,CCWPTR),RHACSCCW                           01S0274 00693000
*         CCWPTR=CCWPTR+LENGTH(CCW);/* NEXT SLOT                     */ 00694000
         ALR   CCWPTR,@10                                       01S0275 00695000
*       END;                        /* OF DO WHILE                   */ 00696000
@DE00265 LA    @10,800                                          01S0276 00697000
         AL    @10,AP1CCWA(,AP1REG)                             01S0276 00698000
         CR    CCWPTR,@10                                       01S0276 00699000
         BL    @DL00265                                         01S0276 00700000
*       EVAL(CCWPTR-LENGTH(CCW))->CCWCC(1)=OFF;/* TURN OFF CC IN LAST   00701000
*                                      CCW                           */ 00702000
         LR    @10,CCWPTR                                       01S0277 00703000
         SL    @10,@CF00047                                     01S0277 00704000
         NI    CCWCC(@10),B'10111111'                           01S0277 00705000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00706000
         B     CE0001@                                          01S0278 00707000
*     END SKMAX;                    /* END OF SUBCASE                */ 00708000
*                                                               01S0279 00709000
*     /***************************************************************/ 00710000
*     /*                                                             */ 00711000
*     /* SKRANS: RANDOM SEEKS                                        */ 00712000
*     /*                                                             */ 00713000
*     /***************************************************************/ 00714000
*                                                               01S0280 00715000
*SKRANS:                                                        01S0280 00716000
*     DO;                           /* SUBCASE SETUP FOR RANDOM 01S0280 00717000
*                                      SEEKS--SETS UP FIRST CYL AND     00718000
*                                      SUBCASE SKRAN UPDATES CYL ADDR*/ 00719000
SKRANS   DS    0H                                               01S0281 00720000
*/*         CCW CHAIN:                                          01S0281 00721000
*                ***************       SEEK BY IOS              01S0281 00722000
*                READ HA,0,SKIP,5      VERIFY SEEK                   */ 00723000
*                                                               01S0281 00724000
*       CCHH=0;                     /* SEEK TO CYL 0 HD 0 FIRST      */ 00725000
         SLR   @10,@10                                          01S0281 00726000
         ST    @10,CCHH(,AP1REG)                                01S0281 00727000
*       AP1FM=READFM;               /* READ ONLY -- ALL SEEKS        */ 00728000
         MVC   AP1FM(1,AP1REG),READFM                           01S0282 00729000
*       CCW(1)=RHASKCCW;            /* RHA,0,SKIP,5                  */ 00730000
         L     @10,AP1CCWA(,AP1REG)                             01S0283 00731000
         MVC   CCW(8,@10),RHASKCCW                              01S0283 00732000
*       AP1TSTNO=AP1TSTNO+1;        /* USE CHK SUBCASE SKRAN         */ 00733000
         LA    @10,1                                            01S0284 00734000
         SLR   @09,@09                                          01S0284 00735000
         IC    @09,AP1TSTNO(,AP1REG)                            01S0284 00736000
         ALR   @10,@09                                          01S0284 00737000
         STC   @10,AP1TSTNO(,AP1REG)                            01S0284 00738000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00739000
         B     CE0001@                                          01S0285 00740000
*     END SKRANS;                   /* END OF SUBCASE                */ 00741000
*                                                               01S0286 00742000
*     /***************************************************************/ 00743000
*     /*                                                             */ 00744000
*     /* SKRAN: RANDOM SEEKS                                         */ 00745000
*     /*                                                             */ 00746000
*     /***************************************************************/ 00747000
*                                                               01S0287 00748000
*SKRAN:                                                         01S0287 00749000
*     DO;                           /* SUBCASE RANDOM SEEK      01S0287 00750000
*                                      GENERATOR--USES CCW CHAIN SET    00751000
*                                      UP BY SKRANS                  */ 00752000
SKRAN    DS    0H                                               01S0288 00753000
*       AP1SKCNT=AP1SKCNT+1;        /* INCREMENT COUNT OF PASSES     */ 00754000
         LA    @10,1                                            01S0288 00755000
         LH    @09,AP1SKCNT(,AP1REG)                            01S0288 00756000
         ALR   @09,@10                                          01S0288 00757000
         STH   @09,AP1SKCNT(,AP1REG)                            01S0288 00758000
*       CC=RANTBL(AP1SKCNT)//AP1LSTCC+1;/* RANDOM NUMBER LESS THAN OR   00759000
*                                      EQUAL TO END CYL              */ 00760000
         ALR   @09,@09                                          01S0289 00761000
         LH    @00,RANTBL-2(@09)                                01S0289 00762000
         SRDA  @00,32                                           01S0289 00763000
         LH    @09,AP1LSTCC(,AP1REG)                            01S0289 00764000
         DR    @00,@09                                          01S0289 00765000
         ALR   @00,@10                                          01S0289 00766000
         STH   @00,CC(,AP1REG)                                  01S0289 00767000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00768000
         B     CE0001@                                          01S0290 00769000
*     END SKRAN;                    /* END OF SUBCASE                */ 00770000
*                                                               01S0291 00771000
*     /***************************************************************/ 00772000
*     /*                                                             */ 00773000
*     /* RHAS: VERIFY HOME ADDRESS ON CE CYLINDER                    */ 00774000
*     /*                                                             */ 00775000
*     /***************************************************************/ 00776000
*                                                               01S0292 00777000
*RHAS:                                                          01S0292 00778000
*     DO;                           /* SUBCASE READ HA ON CE CYL HD     00779000
*                                      0--SUBCASE 'CE' WILL INCREMENT   00780000
*                                      TO NEXT TRACKS                */ 00781000
RHAS     DS    0H                                               01S0293 00782000
*/*         CCW CHAIN:                                          01S0293 00783000
*                SEEK,AP1CESK,CC,6          SEEK TO CE CYL      01S0293 00784000
*                READ HA,BUFFER,0,5         READ FOR COMPARE         */ 00785000
*/*  SETS CECCHH TO CE CYL TRK 0                                     */ 00786000
*                                                               01S0293 00787000
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */ 00788000
         CLI   AP1DEVTP(AP1REG),3                               01S0293 00789000
         BNE   @RF00293                                         01S0293 00790000
*         CECCHH=I3344CE0;          /* CYL 2800 HD 0                 */ 00791000
         MVC   CECCHH(4,AP1REG),@CB00205                        01S0294 00792000
*       ELSE                        /* NOT 3344                      */ 00793000
*         CECCHH=I3350CE0;          /* CYL 1024 HD 0                 */ 00794000
         B     @RC00293                                         01S0295 00795000
@RF00293 MVC   CECCHH(4,AP1REG),@CB00209                        01S0295 00796000
*       AP1FM=CEREADFM;             /* READ ONLY--CE CYL             */ 00797000
*                                                               01S0296 00798000
@RC00293 MVC   AP1FM(1,AP1REG),CEREADFM                         01S0296 00799000
*       /*************************************************************/ 00800000
*       /*                                                           */ 00801000
*       /* SETUP FOR IOBSEEK WHICH MUST BE IN USER AREA OF PACK      */ 00802000
*       /*                                                           */ 00803000
*       /*************************************************************/ 00804000
*                                                               01S0297 00805000
*       HH='0000'X;                 /* HEAD 0                        */ 00806000
         MVC   HH(2,AP1REG),@CB00571                            01S0297 00807000
*       IF AP1FHF=ON THEN           /* FIXED HEAD ON THIS PACK       */ 00808000
         TM    AP1FHF(AP1REG),B'00010000'                       01S0298 00809000
         BNO   @RF00298                                         01S0298 00810000
*         CC='0001'X;               /* SEEK WILL INVOLVE NO ARM 01S0299 00811000
*                                      MOVEMENT                      */ 00812000
         MVC   CC(2,AP1REG),@CB00557                            01S0299 00813000
*       ELSE                        /* NO FIXED HEADS                */ 00814000
*         CC=AP1LSTCC;              /* CYL CLOSEST TO CE CYL         */ 00815000
*                                                               01S0300 00816000
         B     @RC00298                                         01S0300 00817000
@RF00298 LH    @10,AP1LSTCC(,AP1REG)                            01S0300 00818000
         STH   @10,CC(,AP1REG)                                  01S0300 00819000
*       /*************************************************************/ 00820000
*       /*                                                           */ 00821000
*       /* SETUP CCWS                                                */ 00822000
*       /*                                                           */ 00823000
*       /*************************************************************/ 00824000
*                                                               01S0301 00825000
*       CCW(1)=SEEKCCW;             /* FULL SEEK, 0, CC, 6           */ 00826000
@RC00298 L     @10,AP1CCWA(,AP1REG)                             01S0301 00827000
         MVC   CCW(8,@10),SEEKCCW                               01S0301 00828000
*       CCWADDRB(1)=ADDR(AP1CESK);  /* POINT TO CE SEEK ADDRESS      */ 00829000
         LA    @09,AP1CESK(,AP1REG)                             01S0302 00830000
         STCM  @09,7,CCWADDRB(@10)                              01S0302 00831000
*       CCW(2)=RHACCW;              /* RHA,0,0,5                     */ 00832000
         MVC   CCW+8(8,@10),RHACCW                              01S0303 00833000
*       CCWADDRB(2)=AP1BUFAD;       /* READ INTO BUFFER              */ 00834000
         MVC   CCWADDRB+8(3,@10),AP1BUFAD+1(AP1REG)             01S0304 00835000
*       AP1ETABA=ADDR(AP1ERRTM);    /* POINT TO MOVEABLE HD TABLE, HD   00836000
*                                      0                             */ 00837000
         LA    @10,AP1ERRTM(,AP1REG)                            01S0305 00838000
         ST    @10,AP1ETABA(,AP1REG)                            01S0305 00839000
*       AP1TSTNO=AP1TSTNO+1;        /* USE CHK SUBCASE RHA           */ 00840000
         LA    @10,1                                            01S0306 00841000
         SLR   @09,@09                                          01S0306 00842000
         IC    @09,AP1TSTNO(,AP1REG)                            01S0306 00843000
         ALR   @10,@09                                          01S0306 00844000
         STC   @10,AP1TSTNO(,AP1REG)                            01S0306 00845000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00846000
         B     CE0001@                                          01S0307 00847000
*     END RHAS;                     /* END OF SUBCASE                */ 00848000
*                                                               01S0308 00849000
*     /***************************************************************/ 00850000
*     /*                                                             */ 00851000
*     /* CE: UPDATE SEEK TO NEXT HEAD ON CE CYLINDER                 */ 00852000
*     /*                                                             */ 00853000
*     /***************************************************************/ 00854000
*                                                               01S0309 00855000
*CE:                                                            01S0309 00856000
*     DO;                           /* SUBCASE INCREMENTS TO NEXT       00857000
*                                      HEAD ON CE CYL--USES CCW 01S0309 00858000
*                                      CHAINS BUILT BY RHAS, WRTS, OR   00859000
*                                      RR01S                         */ 00860000
CE       DS    0H                                               01S0310 00861000
*       AP1ETABA=AP1ETABA+1;        /* TO NEXT ENTRY IN HEAD TABLE   */ 00862000
         LA    @10,1                                            01S0310 00863000
         L     @09,AP1ETABA(,AP1REG)                            01S0310 00864000
         ALR   @09,@10                                          01S0310 00865000
         ST    @09,AP1ETABA(,AP1REG)                            01S0310 00866000
*       CEHH=CEHH+1;                /* GO TO NEXT HEAD               */ 00867000
         SLR   @15,@15                                          01S0311 00868000
         ICM   @15,3,CEHH(AP1REG)                               01S0311 00869000
         ALR   @15,@10                                          01S0311 00870000
         STCM  @15,3,CEHH(AP1REG)                               01S0311 00871000
*       IF AP1DEVTP<=AP13331&CEHH=HI3330HD+1 THEN/* 3330 AND AT HEAD    00872000
*                                      19                            */ 00873000
         CLI   AP1DEVTP(AP1REG),2                               01S0312 00874000
         BH    @RF00312                                         01S0312 00875000
         C     @15,@CF00589                                     01S0312 00876000
         BNE   @RF00312                                         01S0312 00877000
*         DO;                                                   01S0313 00878000
*           CEHH=CEHH+1;            /* SKIP HEAD 19                  */ 00879000
         ALR   @15,@10                                          01S0314 00880000
         STCM  @15,3,CEHH(AP1REG)                               01S0314 00881000
*           AP1ETABA=AP1ETABA+1;    /* SKIP TABLE ENTRY FOR HD 19    */ 00882000
         ALR   @09,@10                                          01S0315 00883000
         ST    @09,AP1ETABA(,AP1REG)                            01S0315 00884000
*         END;                                                  01S0316 00885000
*       ELSE                                                    01S0317 00886000
*         ;                         /* NOT 3330 HEAD 19              */ 00887000
@RF00312 DS    0H                                               01S0318 00888000
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */ 00889000
         CLI   AP1DEVTP(AP1REG),3                               01S0318 00890000
         BNE   @RF00318                                         01S0318 00891000
*         DO;                                                   01S0319 00892000
*           CEHH=CEHH+1;            /* MAKE INCR TWO HEADS--ONE PHS     00893000
*                                      HD                            */ 00894000
         LA    @10,1                                            01S0320 00895000
         SLR   @09,@09                                          01S0320 00896000
         ICM   @09,3,CEHH(AP1REG)                               01S0320 00897000
         ALR   @10,@09                                          01S0320 00898000
         STCM  @10,3,CEHH(AP1REG)                               01S0320 00899000
*           IF CEHH>HI3344HD THEN   /* OVER HEAD 11                  */ 00900000
         CLC   CEHH(2,AP1REG),@CB00235                          01S0321 00901000
         BNH   @RF00321                                         01S0321 00902000
*             IF CECC=HI3344CC THEN /* LAST CE CYL                   */ 00903000
         CLC   CECC(2,AP1REG),@CB00213                          01S0322 00904000
         BNE   @RF00322                                         01S0322 00905000
*               DO;                                             01S0323 00906000
*                 CECCHH='0AF00001'X;/* GO TO CE CYL 0 HD 1 TO CHECK    00907000
*                                      ODD HEADS--THESE PHYSICAL        00908000
*                                      HEADS WERE CHECKED BEFORE     */ 00909000
         MVC   CECCHH(4,AP1REG),@CB00207                        01S0324 00910000
*                 AP1ETABA=ADDR(AP1ERRTM);/* POINT TO PHYS HD 0 IN      00911000
*                                      MATRIX                        */ 00912000
         LA    @10,AP1ERRTM(,AP1REG)                            01S0325 00913000
         ST    @10,AP1ETABA(,AP1REG)                            01S0325 00914000
*               END;                                            01S0326 00915000
*             ELSE                  /* LAST TRK BUT NOT LAST CYL     */ 00916000
*               DO;                                             01S0327 00917000
         B     @RC00322                                         01S0327 00918000
@RF00322 DS    0H                                               01S0328 00919000
*                 CECC=CECC+1;      /* INCR TO NEXT CYL              */ 00920000
         LA    @10,1                                            01S0328 00921000
         SLR   @09,@09                                          01S0328 00922000
         ICM   @09,3,CECC(AP1REG)                               01S0328 00923000
         ALR   @10,@09                                          01S0328 00924000
         STCM  @10,3,CECC(AP1REG)                               01S0328 00925000
*                 CEHH=0;           /* FIRST HEAD                    */ 00926000
         SLR   @10,@10                                          01S0329 00927000
         STCM  @10,3,CEHH(AP1REG)                               01S0329 00928000
*               END;                                            01S0330 00929000
*           ELSE                                                01S0331 00930000
*             ;                     /* NOT HEAD 11                   */ 00931000
@RF00321 DS    0H                                               01S0332 00932000
*         END;                                                  01S0332 00933000
*       ELSE                                                    01S0333 00934000
*         ;                         /* NOT 3344                      */ 00935000
*                                                               01S0333 00936000
@RF00318 DS    0H                                               01S0334 00937000
*       /*************************************************************/ 00938000
*       /*                                                           */ 00939000
*       /* MOVE CCHH TO BUFFER FOR WRITE                             */ 00940000
*       /*                                                           */ 00941000
*       /*************************************************************/ 00942000
*                                                               01S0334 00943000
*       IF CCWCOMCD(2)=SHA THEN     /* WRITE TEST                    */ 00944000
@RC00318 L     @10,AP1CCWA(,AP1REG)                             01S0334 00945000
         CLI   CCWCOMCD+8(@10),57                               01S0334 00946000
         BNE   @RF00334                                         01S0334 00947000
*         DO;                                                   01S0335 00948000
*           AP1BUFAD->CNTCCHH=CECCHH;/* CCHH FOR R0                  */ 00949000
         L     @10,AP1BUFAD(,AP1REG)                            01S0336 00950000
         MVC   CNTCCHH(4,@10),CECCHH(AP1REG)                    01S0336 00951000
*           EVAL(AP1BUFAD+2*LENGTH(CNT))->CNTCCHH=CECCHH;/* CCHH FOR    00952000
*                                      R1                            */ 00953000
         AL    @10,@CF00167                                     01S0337 00954000
         MVC   CNTCCHH(4,@10),CECCHH(AP1REG)                    01S0337 00955000
*         END;                                                  01S0338 00956000
*       ELSE                                                    01S0339 00957000
*         ;                         /* NOT WRITE TEST                */ 00958000
@RF00334 DS    0H                                               01S0340 00959000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00960000
         B     CE0001@                                          01S0340 00961000
*     END CE;                       /* END OF SUBCASE                */ 00962000
*                                                               01S0341 00963000
*     /***************************************************************/ 00964000
*     /*                                                             */ 00965000
*     /* WRTS: WRITE ON CE CYLINDER                                  */ 00966000
*     /*                                                             */ 00967000
*     /***************************************************************/ 00968000
*                                                               01S0342 00969000
*WRTS:                                                          01S0342 00970000
*     DO;                           /* SUBCASE WRITE R0-R1 ON CE CYL    00971000
*                                      HD 0 --SUBCASE CE WILL ALTER     00972000
*                                      SEEK TO GO TO TRKS 1-29       */ 00973000
WRTS     DS    0H                                               01S0343 00974000
*/*         CCW CHAIN:                                          01S0343 00975000
*                SEEK,AP1CESK,CC,6          SEEK TO CE CYL      01S0343 00976000
*                SRCH HA,AP1CESK+2,CC,4     VALIDATE ON CORRECT TRK     00977000
*                TIC,*-8                                        01S0343 00978000
*                WRT R0,BUFF,CC,16          WRITE R0            01S0343 00979000
*                WCKD,BUFF+16,0,264         WRITE R1                 */ 00980000
*/*  SETS CECCHH TO CE CYL TRK 0                                     */ 00981000
*                                                               01S0343 00982000
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */ 00983000
         CLI   AP1DEVTP(AP1REG),3                               01S0343 00984000
         BNE   @RF00343                                         01S0343 00985000
*         CECCHH=I3344CE0;          /* CYL 2800 HD 0                 */ 00986000
         MVC   CECCHH(4,AP1REG),@CB00205                        01S0344 00987000
*       ELSE                        /* NOT 3344                      */ 00988000
*         CECCHH=I3350CE0;          /* CYL 1024 HD 0                 */ 00989000
         B     @RC00343                                         01S0345 00990000
@RF00343 MVC   CECCHH(4,AP1REG),@CB00209                        01S0345 00991000
*       AP1FM=CEHAR0FM;             /* ALL WRITES--CE CYL            */ 00992000
*                                                               01S0346 00993000
@RC00343 MVC   AP1FM(1,AP1REG),CEHAR0FM                         01S0346 00994000
*       /*************************************************************/ 00995000
*       /*                                                           */ 00996000
*       /* AP1SEEK AND A SEEK CCW TO CE CYL SETUP FROM PREVIOUS TEST */ 00997000
*       /*                                                           */ 00998000
*       /*************************************************************/ 00999000
*                                                               01S0347 01000000
*       CCW(2)=SHACCCCW;            /* SEARCH HA EQ,0,CC,4           */ 01001000
         L     @10,AP1CCWA(,AP1REG)                             01S0347 01002000
         MVC   CCW+8(8,@10),SHACCCCW                            01S0347 01003000
*       CCWADDRB(2)=ADDR(CECCHH);   /* ADDRESS OF TRACK              */ 01004000
         LA    @09,CECCHH(,AP1REG)                              01S0348 01005000
         STCM  @09,7,CCWADDRB+8(@10)                            01S0348 01006000
*       CCW(3)=TICCCW;              /* TIC,0,0,0                     */ 01007000
         MVC   CCW+16(8,@10),TICCCW                             01S0349 01008000
*       CCWADDRB(3)=AP1CCWAB+LENGTH(CCW);/* TIC TO SEARCH            */ 01009000
         LA    @09,8                                            01S0350 01010000
         L     @15,AP1CCWAB-1(,AP1REG)                          01S0350 01011000
         LA    @15,0(,@15)                                      01S0350 01012000
         ALR   @15,@09                                          01S0350 01013000
         STCM  @15,7,CCWADDRB+16(@10)                           01S0350 01014000
*       CCW(4)=WR0CCCCW;            /* WRT R0,0,CC,16                */ 01015000
         MVC   CCW+24(8,@10),WR0CCCCW                           01S0351 01016000
*       CCWADDRB(4)=AP1BUFAB;       /* WRITE FROM BUFFER             */ 01017000
         L     @15,AP1BUFAB-1(,AP1REG)                          01S0352 01018000
         LA    @15,0(,@15)                                      01S0352 01019000
         STCM  @15,7,CCWADDRB+24(@10)                           01S0352 01020000
*       CCW(5)=WCDCCW;              /* WCKD,0,0,264                  */ 01021000
         MVC   CCW+32(8,@10),WCDCCW                             01S0353 01022000
*       CCWADDRB(5)=AP1BUFAB+2*LENGTH(CNT);/* WRITE FROM BUFFER      */ 01023000
*                                                               01S0354 01024000
         LA    @14,16                                           01S0354 01025000
         ALR   @15,@14                                          01S0354 01026000
         STCM  @15,7,CCWADDRB+32(@10)                           01S0354 01027000
*       /*************************************************************/ 01028000
*       /*                                                           */ 01029000
*       /* BUILD COUNT AND DATA FOR R0                               */ 01030000
*       /*                                                           */ 01031000
*       /*************************************************************/ 01032000
*                                                               01S0355 01033000
*       AP1BUFAD->CNTCCHHR=CECCHHR; /* CCHHR                         */ 01034000
         L     @10,AP1BUFAD(,AP1REG)                            01S0355 01035000
         MVC   CNTCCHHR(5,@10),CECCHHR(AP1REG)                  01S0355 01036000
*       AP1BUFAD->CNTKDD=DL8;       /* KDD                           */ 01037000
         MVC   CNTKDD(3,@10),@CB00217                           01S0356 01038000
*       EVAL(AP1BUFAD+LENGTH(CNT))->BYTE8=R0DATA;/* DATA FOR R0      */ 01039000
*                                                               01S0357 01040000
         ALR   @09,@10                                          01S0357 01041000
         MVC   BYTE8(8,@09),R0DATA                              01S0357 01042000
*       /*************************************************************/ 01043000
*       /*                                                           */ 01044000
*       /* BUILD COUNT AND DATA FOR R1                               */ 01045000
*       /*                                                           */ 01046000
*       /*************************************************************/ 01047000
*                                                               01S0358 01048000
*       EVAL(AP1BUFAD+2*LENGTH(CNT))->CNTCCHH=CECCHH;/* CCHH         */ 01049000
         LR    @09,@10                                          01S0358 01050000
         ALR   @09,@14                                          01S0358 01051000
         MVC   CNTCCHH(4,@09),CECCHH(AP1REG)                    01S0358 01052000
*       EVAL(AP1BUFAD+2*LENGTH(CNT))->CNTRKDD=R1DL256;/* RKDD        */ 01053000
         ALR   @14,@10                                          01S0359 01054000
         MVC   CNTRKDD(4,@14),@CB00227                          01S0359 01055000
*       IF AP1PTRN2=OFF THEN        /* WRITE PATTERN ONE             */ 01056000
         TM    AP1PTRN2(AP1REG),B'10000000'                     01S0360 01057000
         BNZ   @RF00360                                         01S0360 01058000
*         EVAL(AP1BUFAD+3*LENGTH(CNT))->BYTE256=R1DATA1;/* DATA1 FOR    01059000
*                                      R1                            */ 01060000
         AL    @10,@CF00064                                     01S0361 01061000
         MVC   BYTE256(256,@10),R1DATA1                         01S0361 01062000
*       ELSE                        /* WRITE PATTERN TWO             */ 01063000
*         EVAL(AP1BUFAD+3*LENGTH(CNT))->BYTE256=R1DATA2;/* DATA2 FOR    01064000
*                                      R1                            */ 01065000
         B     @RC00360                                         01S0362 01066000
@RF00360 LA    @10,24                                           01S0362 01067000
         AL    @10,AP1BUFAD(,AP1REG)                            01S0362 01068000
         MVC   BYTE256(256,@10),R1DATA2                         01S0362 01069000
*       AP1ETABA=ADDR(AP1ERRTM);    /* POINT TO HD0 OF MOVEABLE HD      01070000
*                                      TABLE                         */ 01071000
@RC00360 LA    @10,AP1ERRTM(,AP1REG)                            01S0363 01072000
         ST    @10,AP1ETABA(,AP1REG)                            01S0363 01073000
*       AP1TSTNO=AP1TSTNO+1;        /* USE CHK SUBCASE WRT           */ 01074000
         LA    @10,1                                            01S0364 01075000
         SLR   @09,@09                                          01S0364 01076000
         IC    @09,AP1TSTNO(,AP1REG)                            01S0364 01077000
         ALR   @10,@09                                          01S0364 01078000
         STC   @10,AP1TSTNO(,AP1REG)                            01S0364 01079000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 01080000
         B     CE0001@                                          01S0365 01081000
*     END WRTS;                     /* END OF SUBCASE                */ 01082000
*                                                               01S0366 01083000
*     /***************************************************************/ 01084000
*     /*                                                             */ 01085000
*     /* RR01S: READ CE CYLINDER                                     */ 01086000
*     /*                                                             */ 01087000
*     /***************************************************************/ 01088000
*                                                               01S0367 01089000
*RR01S:                                                         01S0367 01090000
*     DO;                           /* SUBCASE READ R0 AND R1 ON CE     01091000
*                                      CYL HD 0 --SUBCASE CE ALTERS     01092000
*                                      SEEK FOR HDS 1-29             */ 01093000
RR01S    DS    0H                                               01S0368 01094000
*/*          CCW CHAIN:                                         01S0368 01095000
*                SEEK,AP1CESK,CC,6          SEEK TO CE CYL      01S0368 01096000
*                READ HA,0,CC-SKIP,4        VALIDATE SEEK       01S0368 01097000
*                READ R0,0,CC-SKIP,16                           01S0368 01098000
*                RD CKD,0,CC-SKIP,264                           01S0368 01099000
*                        REPEAT ABOVE READS 13 TIMES            01S0368 01100000
*                READ HA,0,CC-SKIP,4                            01S0368 01101000
*                READ R0,BUFF,CC,16         READ FOR COUNT COMPARE      01102000
*                RD CKD,BUFF+8,0,264        READ FOR COUNT AND  01S0368 01103000
*                                           FIRST 8 BYTES OF DATA       01104000
*                                           TO COMPARE               */ 01105000
*/*  SETS CECCHH TO CE CYL TRK 0                                     */ 01106000
*                                                               01S0368 01107000
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */ 01108000
         CLI   AP1DEVTP(AP1REG),3                               01S0368 01109000
         BNE   @RF00368                                         01S0368 01110000
*         CECCHH=I3344CE0;          /* CYL 2800 HD 0                 */ 01111000
         MVC   CECCHH(4,AP1REG),@CB00205                        01S0369 01112000
*       ELSE                        /* NOT 3344                      */ 01113000
*         CECCHH=I3350CE0;          /* CYL 1024 HD 0                 */ 01114000
         B     @RC00368                                         01S0370 01115000
@RF00368 MVC   CECCHH(4,AP1REG),@CB00209                        01S0370 01116000
*       AP1FM=CEREADFM;             /* READ ONLY--CE CYL             */ 01117000
*                                                               01S0371 01118000
@RC00368 MVC   AP1FM(1,AP1REG),CEREADFM                         01S0371 01119000
*       /*************************************************************/ 01120000
*       /*                                                           */ 01121000
*       /* USE AP1SEEK AND SEEK CCW SETUP BY RHAS SUBCASE            */ 01122000
*       /*                                                           */ 01123000
*       /*************************************************************/ 01124000
*                                                               01S0372 01125000
*       CCWPTR=AP1CCWA+LENGTH(CCW); /* POINT TO 1ST SLOT AFTER SEEK  */ 01126000
         LA    CCWPTR,8                                         01S0372 01127000
         AL    CCWPTR,AP1CCWA(,AP1REG)                          01S0372 01128000
*       DO COUNTER=1 TO 15;         /* BLD 15 CHAINS                 */ 01129000
         LA    COUNTER,1                                        01S0373 01130000
@DL00373 DS    0H                                               01S0374 01131000
*         CCWPTR->CCW(1)=RHACSCCW;  /* RHA,0,CC-SKIP,4               */ 01132000
         MVC   CCW(8,CCWPTR),RHACSCCW                           01S0374 01133000
*         CCWPTR=CCWPTR+LENGTH(CCW);/* POINT TO NEXT SLOT            */ 01134000
         LA    @10,8                                            01S0375 01135000
         ALR   CCWPTR,@10                                       01S0375 01136000
*         CCWPTR->CCW(1)=RR0CSCCW;  /* RR0,0,CC-SKIP,16              */ 01137000
         MVC   CCW(8,CCWPTR),RR0CSCCW                           01S0376 01138000
*         CCWPTR=CCWPTR+LENGTH(CCW);/* POINT TO NEXT SLOT            */ 01139000
         ALR   CCWPTR,@10                                       01S0377 01140000
*         CCWPTR->CCW(1)=RCDCSCCW;  /* RCKD,0,CC-SKIP,264            */ 01141000
         MVC   CCW(8,CCWPTR),RCDCSCCW                           01S0378 01142000
*         CCWPTR=CCWPTR+LENGTH(CCW);/* POINT TO NEXT SLOT            */ 01143000
         ALR   CCWPTR,@10                                       01S0379 01144000
*       END;                        /* OF DO WHILE                   */ 01145000
         AL    COUNTER,@CF00043                                 01S0380 01146000
         C     COUNTER,@CF00049                                 01S0380 01147000
         BNH   @DL00373                                         01S0380 01148000
*       CCWPTR=CCWPTR-2*LENGTH(CCW);/* POINT TO LAST RR0             */ 01149000
         SL    CCWPTR,@CF00167                                  01S0381 01150000
*       CCWPTR->CCWSKIP(1)=OFF;     /* TURN OFF SKIP                 */ 01151000
         NI    CCWSKIP(CCWPTR),B'11101111'                      01S0382 01152000
*       CCWPTR->CCWADDRB(1)=AP1BUFAB;/* READ R0 INTO BUFFER + 0      */ 01153000
         L     @10,AP1BUFAB-1(,AP1REG)                          01S0383 01154000
         LA    @10,0(,@10)                                      01S0383 01155000
         STCM  @10,7,CCWADDRB(CCWPTR)                           01S0383 01156000
*       CCWPTR=CCWPTR+LENGTH(CCW);  /* POINT TO READ CKD             */ 01157000
         LA    @09,8                                            01S0384 01158000
         ALR   CCWPTR,@09                                       01S0384 01159000
*       CCWPTR->CCWSKIP(1)=OFF;     /* TURN OFF SKIP                 */ 01160000
*       CCWPTR->CCWCC(1)=OFF;       /* AND CHAIN CMD                 */ 01161000
         NI    CCWSKIP(CCWPTR),B'10101111'                      01S0386 01162000
*       CCWPTR->CCWADDRB(1)=AP1BUFAB+LENGTH(CNT);/* READ R1 INTO        01163000
*                                      BUFFER + 8                    */ 01164000
         ALR   @10,@09                                          01S0387 01165000
         STCM  @10,7,CCWADDRB(CCWPTR)                           01S0387 01166000
*       AP1BUFAD->BYTE24=AP1BUFAD->BYTE24&&AP1BUFAD->BYTE24;/* CLEAR    01167000
*                                      BUFFER                        */ 01168000
         L     @10,AP1BUFAD(,AP1REG)                            01S0388 01169000
         XC    BYTE24(24,@10),BYTE24(@10)                       01S0388 01170000
*       AP1ETABA=ADDR(AP1ERRTM);    /* POINT TO HD 0 OF MOVEABLE HEAD   01171000
*                                      TABLE                         */ 01172000
         LA    @10,AP1ERRTM(,AP1REG)                            01S0389 01173000
         ST    @10,AP1ETABA(,AP1REG)                            01S0389 01174000
*       AP1TSTNO=AP1TSTNO+1;        /* USE CHK SUBCASE RR01          */ 01175000
         LA    @10,1                                            01S0390 01176000
         SLR   @09,@09                                          01S0390 01177000
         IC    @09,AP1TSTNO(,AP1REG)                            01S0390 01178000
         ALR   @10,@09                                          01S0390 01179000
         STC   @10,AP1TSTNO(,AP1REG)                            01S0390 01180000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 01181000
         B     CE0001@                                          01S0391 01182000
*     END RR01S;                    /* END OF SUBCASE                */ 01183000
*                                                               01S0392 01184000
*     /***************************************************************/ 01185000
*     /*                                                             */ 01186000
*     /* RDMT: READ MULTI-TRACK                                      */ 01187000
*     /*                                                             */ 01188000
*     /***************************************************************/ 01189000
*                                                               01S0393 01190000
*RDMT:                                                          01S0393 01191000
*     DO;                           /* SUBCASE MULTI-TRACK READ      */ 01192000
RDMT     DS    0H                                               01S0394 01193000
*/*         CCW CHAIN:                                          01S0394 01194000
*                SEEK,AP1CESK,CC,6          SEEK TO CE CYL      01S0394 01195000
*                READ R0,BUFF,CC,16         READ R0 FOR COMPARE CNT     01196000
*                MT-RD CNT,BUFF+8,CC,8      READ R1 COUNT FOR COMPARE   01197000
*                      REPEAT 11 TIMES, INCREMENTING THRU BUFFER        01198000
*                NOP,0,CC,1                 DISORIENT           01S0394 01199000
*                RD CNT,BUFF+104,0,8        READ R1 COUNT TRK 11 AGAIN  01200000
*                                                                    */ 01201000
*/*  SETS CECCHH TO CE CYL TRK 0                                     */ 01202000
*                                                               01S0394 01203000
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */ 01204000
         CLI   AP1DEVTP(AP1REG),3                               01S0394 01205000
         BNE   @RF00394                                         01S0394 01206000
*         CECCHH=I3344CE0;          /* CYL 2800 HD 0                 */ 01207000
         MVC   CECCHH(4,AP1REG),@CB00205                        01S0395 01208000
*       ELSE                        /* NOT 3344                      */ 01209000
*         CECCHH=I3350CE0;          /* CYL 1024 HD 0                 */ 01210000
         B     @RC00394                                         01S0396 01211000
@RF00394 MVC   CECCHH(4,AP1REG),@CB00209                        01S0396 01212000
*       AP1FM=CEREADFM;             /* READ ONLY--CE CYL             */ 01213000
*                                                               01S0397 01214000
@RC00394 MVC   AP1FM(1,AP1REG),CEREADFM                         01S0397 01215000
*       /*************************************************************/ 01216000
*       /*                                                           */ 01217000
*       /* USE AP1SEEK AND SEEK CCW SET UP BY RHAS SUBCASE           */ 01218000
*       /*                                                           */ 01219000
*       /*************************************************************/ 01220000
*                                                               01S0398 01221000
*       BUFPTR=AP1BUFAD;            /* POINT TO BUFFER               */ 01222000
         L     BUFPTR,AP1BUFAD(,AP1REG)                         01S0398 01223000
*       CCWPTR=AP1CCWA+LENGTH(CCW); /* POINT TO 1ST SLOT AFTER SEEK  */ 01224000
         LA    @10,8                                            01S0399 01225000
         L     CCWPTR,AP1CCWA(,AP1REG)                          01S0399 01226000
         ALR   CCWPTR,@10                                       01S0399 01227000
*       CCWPTR->CCW(1)=RR0CCCCW;    /* RR0,0,CC,16                   */ 01228000
         MVC   CCW(8,CCWPTR),RR0CCCCW                           01S0400 01229000
*       CCWPTR->CCWADDRB(1)=BUFPTR; /* READ INTO BUFFER              */ 01230000
         STCM  BUFPTR,7,CCWADDRB(CCWPTR)                        01S0401 01231000
*       CCWPTR=CCWPTR+LENGTH(CCW);  /* NEXT CCW SLOT                 */ 01232000
         ALR   CCWPTR,@10                                       01S0402 01233000
*       BUFPTR=BUFPTR+LENGTH(CNT);  /* NEXT SPACE IN BUFFER          */ 01234000
         ALR   BUFPTR,@10                                       01S0403 01235000
*       DO COUNTER=1 TO 12;         /* BUILD 12 CCWS                 */ 01236000
         LA    COUNTER,1                                        01S0404 01237000
@DL00404 DS    0H                                               01S0405 01238000
*         CCWPTR->CCW(1)=MRCCCCCW;  /* MT-RCNT,0,CC,8                */ 01239000
         MVC   CCW(8,CCWPTR),MRCCCCCW                           01S0405 01240000
*         CCWPTR->CCWADDRB(1)=BUFPTR;/* READ INTO BUFFER             */ 01241000
         STCM  BUFPTR,7,CCWADDRB(CCWPTR)                        01S0406 01242000
*         CCWPTR=CCWPTR+LENGTH(CCW);/* NEXT CCW SLOT                 */ 01243000
         LA    @10,8                                            01S0407 01244000
         ALR   CCWPTR,@10                                       01S0407 01245000
*         BUFPTR=BUFPTR+LENGTH(CNT);/* NEXT SPACE IN BUFFER          */ 01246000
         ALR   BUFPTR,@10                                       01S0408 01247000
*       END;                        /* OF DO WHILE                   */ 01248000
         AL    COUNTER,@CF00043                                 01S0409 01249000
         C     COUNTER,@CF00033                                 01S0409 01250000
         BNH   @DL00404                                         01S0409 01251000
*       CCWPTR->CCW(1)=NOPCCCCW;    /* NOP,0,CC,1                    */ 01252000
         MVC   CCW(8,CCWPTR),NOPCCCCW                           01S0410 01253000
*       CCWPTR=CCWPTR+LENGTH(CCW);  /* NEXT CCW SLOT                 */ 01254000
         AL    CCWPTR,@CF00047                                  01S0411 01255000
*       CCWPTR->CCW(1)=RCCCW;       /* RDCNT,0,0,8                   */ 01256000
         MVC   CCW(8,CCWPTR),RCCCW                              01S0412 01257000
*       CCWPTR->CCWADDRB(1)=BUFPTR; /* READ INTO BUFFER              */ 01258000
         STCM  BUFPTR,7,CCWADDRB(CCWPTR)                        01S0413 01259000
*       AP1BUFAD->BYTE112=AP1BUFAD->BYTE112&&AP1BUFAD->BYTE112;/*       01260000
*                                      CLEAR BUFFER                  */ 01261000
         L     @10,AP1BUFAD(,AP1REG)                            01S0414 01262000
         XC    BYTE112(112,@10),BYTE112(@10)                    01S0414 01263000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 01264000
         B     CE0001@                                          01S0415 01265000
*     END RDMT;                     /* END OF SUBCASE                */ 01266000
*                                                               01S0416 01267000
*     /***************************************************************/ 01268000
*     /*                                                             */ 01269000
*     /* FTWRT: FULL TRACK WRITE                                     */ 01270000
*     /*                                                             */ 01271000
*     /***************************************************************/ 01272000
*                                                               01S0417 01273000
*FTWRT:                                                         01S0417 01274000
*     DO;                           /* SUBCASE FULL TRACK WRITE      */ 01275000
FTWRT    DS    0H                                               01S0418 01276000
*/*       CCW CHAIN:                                            01S0418 01277000
*                SEEK,AP1CESK,CC,6          SEEK TO CE CYL      01S0418 01278000
*                SEARCH ID,AP1CESK+2,CC,5   SID R0              01S0418 01279000
*                TIC,*-8                                        01S0418 01280000
*                WRT CKD,BUFF,CD,8          WRITE R1 COUNT AND  01S0418 01281000
*                WRT CKD,0,CC,XXXX          FULL TRK OF DATA    01S0418 01282000
*                RD CKD,0,SKIP,XXXX+8       READ IT BACK             */ 01283000
*/*  SETS CECCHH TO CE CYL TRK 1                                     */ 01284000
*                                                               01S0418 01285000
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */ 01286000
         CLI   AP1DEVTP(AP1REG),3                               01S0418 01287000
         BNE   @RF00418                                         01S0418 01288000
*         CECCHH=I3344CE1;          /* CYL 2800 HD 1                 */ 01289000
         MVC   CECCHH(4,AP1REG),@CB00207                        01S0419 01290000
*       ELSE                        /* NOT 3344                      */ 01291000
*         CECCHH=I3350CE1;          /* CYL 1024 HD 1                 */ 01292000
         B     @RC00418                                         01S0420 01293000
@RF00418 MVC   CECCHH(4,AP1REG),@CB00211                        01S0420 01294000
*       CER=0;                      /* RECORD 0                      */ 01295000
@RC00418 MVI   CER(AP1REG),X'00'                                01S0421 01296000
*       AP1FM=CEFM;                 /* ALLOW WRITE--CE CYL           */ 01297000
*                                                               01S0422 01298000
         MVC   AP1FM(1,AP1REG),CEFM                             01S0422 01299000
*       /*************************************************************/ 01300000
*       /*                                                           */ 01301000
*       /* USE AP1SEEK AND SEEK CCW SET UP BY RHAS SUBCASE           */ 01302000
*       /*                                                           */ 01303000
*       /*************************************************************/ 01304000
*                                                               01S0423 01305000
*       CCW(2)=SIDCCCCW;            /* SEARCH ID,0,CC,5              */ 01306000
         L     @10,AP1CCWA(,AP1REG)                             01S0423 01307000
         MVC   CCW+8(8,@10),SIDCCCCW                            01S0423 01308000
*       CCWADDRB(2)=ADDR(CECCHH);   /* ADDR OF R0                    */ 01309000
         LA    @09,CECCHH(,AP1REG)                              01S0424 01310000
         STCM  @09,7,CCWADDRB+8(@10)                            01S0424 01311000
*       CCW(3)=TICCCW;              /* TIC,0,0,0                     */ 01312000
         MVC   CCW+16(8,@10),TICCCW                             01S0425 01313000
*       CCWADDRB(3)=AP1CCWAB+LENGTH(CCW);/* TIC TO SRCH HA           */ 01314000
         LA    @09,8                                            01S0426 01315000
         L     @15,AP1CCWAB-1(,AP1REG)                          01S0426 01316000
         LA    @15,0(,@15)                                      01S0426 01317000
         ALR   @09,@15                                          01S0426 01318000
         STCM  @09,7,CCWADDRB+16(@10)                           01S0426 01319000
*       CCW(4)=WCDCDCCW;            /* WCKD,0,CD,8                   */ 01320000
         MVC   CCW+24(8,@10),WCDCDCCW                           01S0427 01321000
*       CCWADDRB(4)=AP1BUFAB;       /* R1 COUNT IN BUFFER            */ 01322000
         MVC   CCWADDRB+24(3,@10),AP1BUFAB(AP1REG)              01S0428 01323000
*       AP1BUFAD->CNTCCHH=CECCHH;   /* CCHH                          */ 01324000
         L     @09,AP1BUFAD(,AP1REG)                            01S0429 01325000
         MVC   CNTCCHH(4,@09),CECCHH(AP1REG)                    01S0429 01326000
*       AP1BUFAD->CNTRKDD=R1DL0;    /* RK                            */ 01327000
         MVC   CNTRKDD(4,@09),@CB00221                          01S0430 01328000
*       CCW(5)=WCDCCCCW;            /* WCKD,0,CC,0                   */ 01329000
         MVC   CCW+32(8,@10),WCDCCCCW                           01S0431 01330000
*       CCW(6)=RCDSCCW;             /* RCKD,0,SKIP,264               */ 01331000
         MVC   CCW+40(8,@10),RCDSCCW                            01S0432 01332000
*       IF AP1DEVTP=AP13350 THEN    /* 3350                          */ 01333000
         CLI   AP1DEVTP(AP1REG),4                               01S0433 01334000
         BNE   @RF00433                                         01S0433 01335000
*         DO;                                                   01S0434 01336000
*           AP1BUFAD->CNTDD=FT3350; /* DL                            */ 01337000
         L     @15,@CF00242                                     01S0435 01338000
         STCM  @15,3,CNTDD(@09)                                 01S0435 01339000
*           CCWBYTE(5)=FT3350;      /* DL                            */ 01340000
         STH   @15,CCWBYTE+32(,@10)                             01S0436 01341000
*           CCWBYTE(6)=FT3350+LENGTH(CNT);/* DL + 8                  */ 01342000
         MVC   CCWBYTE+40(2,@10),@CH00591                       01S0437 01343000
*         END;                                                  01S0438 01344000
*       ELSE                        /* NOT 3350                      */ 01345000
*         IF AP1DEVTP=AP13344 THEN  /* 3344                          */ 01346000
         B     @RC00433                                         01S0439 01347000
@RF00433 CLI   AP1DEVTP(AP1REG),3                               01S0439 01348000
         BNE   @RF00439                                         01S0439 01349000
*           DO;                                                 01S0440 01350000
*             AP1BUFAD->CNTDD=FT3344;/* DL                           */ 01351000
         L     @10,@CF00244                                     01S0441 01352000
         L     @09,AP1BUFAD(,AP1REG)                            01S0441 01353000
         STCM  @10,3,CNTDD(@09)                                 01S0441 01354000
*             CCWBYTE(5)=FT3344;    /* DL                            */ 01355000
         L     @09,AP1CCWA(,AP1REG)                             01S0442 01356000
         STH   @10,CCWBYTE+32(,@09)                             01S0442 01357000
*             CCWBYTE(6)=FT3344+LENGTH(CNT);/* DL + 8                */ 01358000
         MVC   CCWBYTE+40(2,@09),@CH00592                       01S0443 01359000
*           END;                                                01S0444 01360000
*         ELSE                      /* 3330                          */ 01361000
*           DO;                                                 01S0445 01362000
         B     @RC00439                                         01S0445 01363000
@RF00439 DS    0H                                               01S0446 01364000
*             AP1BUFAD->CNTDD=FT3330;/* DL                           */ 01365000
         L     @10,@CF00246                                     01S0446 01366000
         L     @09,AP1BUFAD(,AP1REG)                            01S0446 01367000
         STCM  @10,3,CNTDD(@09)                                 01S0446 01368000
*             CCWBYTE(5)=FT3330;    /* DL                            */ 01369000
         L     @09,AP1CCWA(,AP1REG)                             01S0447 01370000
         STH   @10,CCWBYTE+32(,@09)                             01S0447 01371000
*             CCWBYTE(6)=FT3330+LENGTH(CNT);/* DL + 8                */ 01372000
         MVC   CCWBYTE+40(2,@09),@CH00593                       01S0448 01373000
*           END;                                                01S0449 01374000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 01375000
         B     CE0001@                                          01S0450 01376000
*     END FTWRT;                    /* END OF SUBCASE                */ 01377000
*                                                               01S0451 01378000
*     /***************************************************************/ 01379000
*     /*                                                             */ 01380000
*     /* AMDET: ADDRESS MARK DETECT                                  */ 01381000
*     /*                                                             */ 01382000
*     /***************************************************************/ 01383000
*                                                               01S0452 01384000
*AMDET:                                                         01S0452 01385000
*     DO;                           /* SUBCASE AM DETECTION TEST     */ 01386000
AMDET    DS    0H                                               01S0453 01387000
*/*       CCW CHAIN:                                            01S0453 01388000
*                SEEK,AP1CESK,CC,6            TO CE CYL         01S0453 01389000
*                SRCH ID,AP1CESK+2,CC,5       SID R0            01S0453 01390000
*                TIC,*-8                                        01S0453 01391000
*                WRT CKD,BUFF,CD,8        WRITE R1              01S0453 01392000
*                WRT CKD,0,CC,1024                              01S0453 01393000
*                WRT CKD,BUFF+8,CD,8      WRITE R2              01S0453 01394000
*                WRT CKD,0,CC,1024                              01S0453 01395000
*                SID,BUFF,CC,5            SID R1                01S0453 01396000
*                TIC,*-8                                        01S0453 01397000
*                NOP,0,0,1                DESTROY ORIENTATION   01S0453 01398000
*                RD CNT,BUFF+16,0,8       READ CNT R2                */ 01399000
*/*  SETS CECCHH TO CE CYL TRK 1                                     */ 01400000
*                                                               01S0453 01401000
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */ 01402000
         CLI   AP1DEVTP(AP1REG),3                               01S0453 01403000
         BNE   @RF00453                                         01S0453 01404000
*         CECCHH=I3344CE1;          /* CYL 2800 HD 1                 */ 01405000
         MVC   CECCHH(4,AP1REG),@CB00207                        01S0454 01406000
*       ELSE                        /* NOT 3344                      */ 01407000
*         CECCHH=I3350CE1;          /* CYL 1024 HD 1                 */ 01408000
         B     @RC00453                                         01S0455 01409000
@RF00453 MVC   CECCHH(4,AP1REG),@CB00211                        01S0455 01410000
*       CER=0;                      /* RECORD 0                      */ 01411000
@RC00453 MVI   CER(AP1REG),X'00'                                01S0456 01412000
*       AP1FM=CEFM;                 /* WRITE--CE CYL                 */ 01413000
*                                                               01S0457 01414000
         MVC   AP1FM(1,AP1REG),CEFM                             01S0457 01415000
*       /*************************************************************/ 01416000
*       /*                                                           */ 01417000
*       /* USE AP1SEEK AND SEEK CCW SET UP BY RHAS SUBCASE           */ 01418000
*       /*                                                           */ 01419000
*       /*************************************************************/ 01420000
*                                                               01S0458 01421000
*       BUFPTR=AP1BUFAD;            /* POINT TO BUFFER               */ 01422000
         L     BUFPTR,AP1BUFAD(,AP1REG)                         01S0458 01423000
*       CCWPTR=AP1CCWA+LENGTH(CCW); /* 1ST CCW AFTER SEEK            */ 01424000
         LA    @10,8                                            01S0459 01425000
         L     CCWPTR,AP1CCWA(,AP1REG)                          01S0459 01426000
         ALR   CCWPTR,@10                                       01S0459 01427000
*       CCWPTR->CCW(1)=SIDCCCCW;    /* SRCH ID,0,CC,5                */ 01428000
         MVC   CCW(8,CCWPTR),SIDCCCCW                           01S0460 01429000
*       CCWPTR->CCWADDRB(1)=ADDR(CECCHH);/* ADDRESS OF R0            */ 01430000
         LA    @09,CECCHH(,AP1REG)                              01S0461 01431000
         STCM  @09,7,CCWADDRB(CCWPTR)                           01S0461 01432000
*       EVAL(CCWPTR+LENGTH(CCW))->CCW(1)=TICCCW;/* TIC,0,0,0         */ 01433000
         LR    @09,CCWPTR                                       01S0462 01434000
         ALR   @09,@10                                          01S0462 01435000
         MVC   CCW(8,@09),TICCCW                                01S0462 01436000
*       EVAL(CCWPTR+LENGTH(CCW))->CCWADDRB(1)=CCWPTR;/* TIC TO SEARCH*/ 01437000
         ALR   @10,CCWPTR                                       01S0463 01438000
         STCM  CCWPTR,7,CCWADDRB(@10)                           01S0463 01439000
*       CCWPTR=CCWPTR+2*LENGTH(CCW);/* NEXT SLOT                     */ 01440000
         AL    CCWPTR,@CF00167                                  01S0464 01441000
*       DO COUNTER=1 TO 2;          /* WRITE TWO RECORDS             */ 01442000
         LA    COUNTER,1                                        01S0465 01443000
@DL00465 DS    0H                                               01S0466 01444000
*         CCWPTR->CCW(1)=WCDCDCCW;  /* WCKD,0,CD,8                   */ 01445000
         MVC   CCW(8,CCWPTR),WCDCDCCW                           01S0466 01446000
*         CCWPTR->CCWADDRB(1)=BUFPTR;/* COUNT IN BUFFER              */ 01447000
         STCM  BUFPTR,7,CCWADDRB(CCWPTR)                        01S0467 01448000
*         CCWPTR=CCWPTR+LENGTH(CCW);/* NEXT SLOT                     */ 01449000
         LA    @10,8                                            01S0468 01450000
         ALR   CCWPTR,@10                                       01S0468 01451000
*         CCWPTR->CCW(1)=WCDCCCCW;  /* WCKD,0,CC,0                   */ 01452000
         MVC   CCW(8,CCWPTR),WCDCCCCW                           01S0469 01453000
*         CCWPTR->CCWBYTE(1)=1024;  /* 1 K RECORDS                   */ 01454000
         MVC   CCWBYTE(2,CCWPTR),@CH00578                       01S0470 01455000
*         CCWPTR=CCWPTR+LENGTH(CCW);/* NEXT SLOT                     */ 01456000
         ALR   CCWPTR,@10                                       01S0471 01457000
*         BUFPTR->CNTCCHH=CECCHH;   /* CCHH                          */ 01458000
         MVC   CNTCCHH(4,BUFPTR),CECCHH(AP1REG)                 01S0472 01459000
*         BUFPTR->CNTKDD=DL1024;    /* KDD                           */ 01460000
         MVC   CNTKDD(3,BUFPTR),@CB00219                        01S0473 01461000
*         BUFPTR->CNTR=COUNTER;     /* R                             */ 01462000
         STC   COUNTER,CNTR(,BUFPTR)                            01S0474 01463000
*         BUFPTR=BUFPTR+LENGTH(CNT);/* NEXT SLOT                     */ 01464000
         ALR   BUFPTR,@10                                       01S0475 01465000
*       END;                        /* OF DO                         */ 01466000
         AL    COUNTER,@CF00043                                 01S0476 01467000
         C     COUNTER,@CF00058                                 01S0476 01468000
         BNH   @DL00465                                         01S0476 01469000
*       CCWPTR->CCW(1)=SIDCCCCW;    /* SID,0,CC,5                    */ 01470000
         MVC   CCW(8,CCWPTR),SIDCCCCW                           01S0477 01471000
*       CCWPTR->CCWADDRB(1)=AP1BUFAD;/* SEARCH R1                    */ 01472000
         MVC   CCWADDRB(3,CCWPTR),AP1BUFAD+1(AP1REG)            01S0478 01473000
*       EVAL(CCWPTR+LENGTH(CCW))->CCW(1)=TICCCW;/* TIC,0,0,0         */ 01474000
         LA    @10,8                                            01S0479 01475000
         LR    @09,CCWPTR                                       01S0479 01476000
         ALR   @09,@10                                          01S0479 01477000
         MVC   CCW(8,@09),TICCCW                                01S0479 01478000
*       EVAL(CCWPTR+LENGTH(CCW))->CCWADDRB(1)=CCWPTR;/* TIC TO SEARCH*/ 01479000
         LR    @09,CCWPTR                                       01S0480 01480000
         ALR   @09,@10                                          01S0480 01481000
         STCM  CCWPTR,7,CCWADDRB(@09)                           01S0480 01482000
*       CCWPTR=CCWPTR+LENGTH(CCW)*2;/* NEXT SLOT                     */ 01483000
         AL    CCWPTR,@CF00167                                  01S0481 01484000
*       CCWPTR->CCW(1)=NOPCCCCW;    /* NOP,0,CC,1                    */ 01485000
         MVC   CCW(8,CCWPTR),NOPCCCCW                           01S0482 01486000
*       CCWPTR=CCWPTR+LENGTH(CCW);  /* NEXT SLOT                     */ 01487000
         ALR   CCWPTR,@10                                       01S0483 01488000
*       CCWPTR->CCW(1)=RCCCW;       /* RD CNT,0,0,8                  */ 01489000
         MVC   CCW(8,CCWPTR),RCCCW                              01S0484 01490000
*       CCWPTR->CCWADDRB(1)=BUFPTR; /* READ INTO BUFFER              */ 01491000
         STCM  BUFPTR,7,CCWADDRB(CCWPTR)                        01S0485 01492000
*       BUFPTR->BYTE8=BUFPTR->BYTE8&&BUFPTR->BYTE8;/* CLEAR BUFFER   */ 01493000
         XC    BYTE8(8,BUFPTR),BYTE8(BUFPTR)                    01S0486 01494000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 01495000
         B     CE0001@                                          01S0487 01496000
*     END AMDET;                    /* END OF SUBCASE                */ 01497000
*                                                               01S0488 01498000
*     /***************************************************************/ 01499000
*     /*                                                             */ 01500000
*     /* WRTPAD: FORMAT WRITE PADDING                                */ 01501000
*     /*                                                             */ 01502000
*     /***************************************************************/ 01503000
*                                                               01S0489 01504000
*WRTPAD:                                                        01S0489 01505000
*     DO;                           /* SUBCASE WRITE PADDING         */ 01506000
WRTPAD   DS    0H                                               01S0490 01507000
*/*      CCW CHAIN:                                             01S0490 01508000
*                SEEK,AP1CESK,CC,6        TO CE CYL             01S0490 01509000
*                SRCH ID,AP1CESK+2,CC,5   SID R0                01S0490 01510000
*                TIC,*-8                                        01S0490 01511000
*                WRT CKD,BUFF,CC,264      WRITE R1              01S0490 01512000
*                WRT CKD,BUFF+8,CC,8      WRITE R2              01S0490 01513000
*                SRCH ID,AP1CESK+2,CC,5   SID R0                01S0490 01514000
*                TIC,*-8                                        01S0490 01515000
*                WRT CKD,BUFF,CC,264      WRITE NEW R1          01S0490 01516000
*                RHA,0,CC-SKIP,4          RE-POSITION           01S0490 01517000
*                RDCNT,0,CC-SKIP,8        READ R1               01S0490 01518000
*                RDCNT,BUFF+24,0,8        READ R1 AGAIN              */ 01519000
*                                                               01S0490 01520000
*       RFY                                                     01S0490 01521000
*         CCW BASED(CCWPTR);        /* ADDRESSABILITY                */ 01522000
*/*  SETS CECCHH TO CE CYL TRK 1                                     */ 01523000
*                                                               01S0491 01524000
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */ 01525000
         CLI   AP1DEVTP(AP1REG),3                               01S0491 01526000
         BNE   @RF00491                                         01S0491 01527000
*         CECCHH=I3344CE1;          /* CYL 2800 HD 1                 */ 01528000
         MVC   CECCHH(4,AP1REG),@CB00207                        01S0492 01529000
*       ELSE                        /* NOT 3344                      */ 01530000
*         CECCHH=I3350CE1;          /* CYL 1024 HD 1                 */ 01531000
         B     @RC00491                                         01S0493 01532000
@RF00491 MVC   CECCHH(4,AP1REG),@CB00211                        01S0493 01533000
*       CER=0;                      /* RECORD 0                      */ 01534000
@RC00491 MVI   CER(AP1REG),X'00'                                01S0494 01535000
*       AP1FM=CEFM;                 /* WRITE--CE CYL                 */ 01536000
*                                                               01S0495 01537000
         MVC   AP1FM(1,AP1REG),CEFM                             01S0495 01538000
*       /*************************************************************/ 01539000
*       /*                                                           */ 01540000
*       /* AP1SEEK AND SEEK CCW TO CE CYL SET UP BY SUBCASE RHAS     */ 01541000
*       /*                                                           */ 01542000
*       /*************************************************************/ 01543000
*                                                               01S0496 01544000
*       BUFPTR=AP1BUFAD;            /* POINT TO BUFFER               */ 01545000
         L     BUFPTR,AP1BUFAD(,AP1REG)                         01S0496 01546000
*       CCWPTR=AP1CCWA+LENGTH(CCW); /* 1ST CCW AFTER SEEK            */ 01547000
         LA    @10,8                                            01S0497 01548000
         L     CCWPTR,AP1CCWA(,AP1REG)                          01S0497 01549000
         ALR   CCWPTR,@10                                       01S0497 01550000
*       CCW(1)=SIDCCCCW;            /* SRCH ID,0,CC,5                */ 01551000
         MVC   CCW(8,CCWPTR),SIDCCCCW                           01S0498 01552000
*       CCWADDRB(1)=ADDR(CECCHH);   /* ADDRESS OF R0                 */ 01553000
         LA    @09,CECCHH(,AP1REG)                              01S0499 01554000
         STCM  @09,7,CCWADDRB(CCWPTR)                           01S0499 01555000
*       EVAL(CCWPTR+LENGTH(CCW))->CCW(1)=TICCCW;/* TIC,0,0,0         */ 01556000
         LR    @15,CCWPTR                                       01S0500 01557000
         ALR   @15,@10                                          01S0500 01558000
         MVC   CCW(8,@15),TICCCW                                01S0500 01559000
*       EVAL(CCWPTR+LENGTH(CCW))->CCWADDRB(1)=CCWPTR;/* TIC TO SEARCH*/ 01560000
         LR    @15,CCWPTR                                       01S0501 01561000
         ALR   @15,@10                                          01S0501 01562000
         STCM  CCWPTR,7,CCWADDRB(@15)                           01S0501 01563000
*       CCWPTR=CCWPTR+2*LENGTH(CCW);/* NEXT SLOT                     */ 01564000
         LA    @15,16                                           01S0502 01565000
         ALR   CCWPTR,@15                                       01S0502 01566000
*       CCW(1)=WCDCCCCW;            /* WCKD,0,CC,264                 */ 01567000
         MVC   CCW(8,CCWPTR),WCDCCCCW                           01S0503 01568000
*       CCWADDRB(1)=BUFPTR;         /* COUNT IN BUFFER               */ 01569000
         STCM  BUFPTR,7,CCWADDRB(CCWPTR)                        01S0504 01570000
*       CNTCCHH=CECCHH;             /* CE CCHH                       */ 01571000
         MVC   CNTCCHH(4,BUFPTR),CECCHH(AP1REG)                 01S0505 01572000
*       CNTRKDD=R1DL256;            /* RKDD                          */ 01573000
         MVC   CNTRKDD(4,BUFPTR),@CB00227                       01S0506 01574000
*       BUFPTR=BUFPTR+LENGTH(CNT);  /* NEXT SLOT                     */ 01575000
         ALR   BUFPTR,@10                                       01S0507 01576000
*       CCWPTR=CCWPTR+LENGTH(CCW);  /* NEXT SLOT                     */ 01577000
         ALR   CCWPTR,@10                                       01S0508 01578000
*       CCW(1)=WCDCCCCW;            /* WCKD,0,CC,0                   */ 01579000
         MVC   CCW(8,CCWPTR),WCDCCCCW                           01S0509 01580000
*       CCWBYTE(1)=LENGTH(CNT);     /* COUNT ONLY                    */ 01581000
         STH   @10,CCWBYTE(,CCWPTR)                             01S0510 01582000
*       CCWADDRB(1)=BUFPTR;         /* COUNT IN BUFFER               */ 01583000
         STCM  BUFPTR,7,CCWADDRB(CCWPTR)                        01S0511 01584000
*       CNTCCHH=CECCHH;             /* CE CCHH                       */ 01585000
         MVC   CNTCCHH(4,BUFPTR),CECCHH(AP1REG)                 01S0512 01586000
*       CNTRKDD=R2DL0;              /* RKDD                          */ 01587000
         MVC   CNTRKDD(4,BUFPTR),@CB00223                       01S0513 01588000
*       CCWPTR=CCWPTR+LENGTH(CCW);  /* NEXT SLOT                     */ 01589000
         ALR   CCWPTR,@10                                       01S0514 01590000
*       BUFPTR=BUFPTR+LENGTH(CNT);  /* BUFFER + 16                   */ 01591000
         ALR   BUFPTR,@10                                       01S0515 01592000
*       CCW(1)=SIDCCCCW;            /* SRCH ID,0,CC,5                */ 01593000
         MVC   CCW(8,CCWPTR),SIDCCCCW                           01S0516 01594000
*       CCWADDRB(1)=ADDR(CECCHH);   /* ADDRESS OF R0                 */ 01595000
         STCM  @09,7,CCWADDRB(CCWPTR)                           01S0517 01596000
*       EVAL(CCWPTR+LENGTH(CCW))->CCW(1)=TICCCW;/* TIC,0,0,0         */ 01597000
         LR    @09,CCWPTR                                       01S0518 01598000
         ALR   @09,@10                                          01S0518 01599000
         MVC   CCW(8,@09),TICCCW                                01S0518 01600000
*       EVAL(CCWPTR+LENGTH(CCW))->CCWADDRB(1)=CCWPTR;/* TIC TO SEARCH*/ 01601000
         LR    @09,CCWPTR                                       01S0519 01602000
         ALR   @09,@10                                          01S0519 01603000
         STCM  CCWPTR,7,CCWADDRB(@09)                           01S0519 01604000
*       CCWPTR=CCWPTR+2*LENGTH(CCW);/* NEXT SLOT                     */ 01605000
         ALR   CCWPTR,@15                                       01S0520 01606000
*       CCW(1)=WCDCCCCW;            /* WCKD,0,CC,264                 */ 01607000
         MVC   CCW(8,CCWPTR),WCDCCCCW                           01S0521 01608000
*       CCWADDRB(1)=BUFPTR-(2*LENGTH(CNT));/* COUNT IN BUFFER        */ 01609000
         LCR   @15,@15                                          01S0522 01610000
         ALR   @15,BUFPTR                                       01S0522 01611000
         STCM  @15,7,CCWADDRB(CCWPTR)                           01S0522 01612000
*       CCWPTR=CCWPTR+LENGTH(CCW);  /* NEXT SLOT                     */ 01613000
         ALR   CCWPTR,@10                                       01S0523 01614000
*       CCW(1)=RHACSCCW;            /* RHA,0,SKIP-CC,5               */ 01615000
         MVC   CCW(8,CCWPTR),RHACSCCW                           01S0524 01616000
*       CCWPTR=CCWPTR+LENGTH(CCW);  /* NEXT SLOT                     */ 01617000
         ALR   CCWPTR,@10                                       01S0525 01618000
*       CCW(1)=RCCSCCW;             /* RDCNT,0,SKIP-CC,8             */ 01619000
         MVC   CCW(8,CCWPTR),RCCSCCW                            01S0526 01620000
*       CCWPTR=CCWPTR+LENGTH(CCW);  /* NEXT SLOT                     */ 01621000
         ALR   CCWPTR,@10                                       01S0527 01622000
*       CCW(1)=RCCCW;               /* RDCNT,0,0,8                   */ 01623000
         MVC   CCW(8,CCWPTR),RCCCW                              01S0528 01624000
*       CCWADDRB(1)=BUFPTR;         /* READ IN TO BUFFER             */ 01625000
         STCM  BUFPTR,7,CCWADDRB(CCWPTR)                        01S0529 01626000
*       BUFPTR->BYTE8=BUFPTR->BYTE8&&BUFPTR->BYTE8;/* CLEAR BUFFER   */ 01627000
         XC    BYTE8(8,BUFPTR),BYTE8(BUFPTR)                    01S0530 01628000
*       RFY                                                     01S0531 01629000
*         CCW BASED(AP1CCWA);       /* ADDRESSABILITY                */ 01630000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 01631000
         B     CE0001@                                          01S0532 01632000
*     END WRTPAD;                   /* END OF SUBCASE                */ 01633000
*                                                               01S0533 01634000
*     /***************************************************************/ 01635000
*     /*                                                             */ 01636000
*     /* SD: SKIP DEFECTS                                            */ 01637000
*     /*                                                             */ 01638000
*     /***************************************************************/ 01639000
*                                                               01S0534 01640000
*SD:                                                            01S0534 01641000
*     DO;                           /* SUBCASE SKIP DEFECT TEST      */ 01642000
SD       DS    0H                                               01S0535 01643000
*/*     CCW CHAIN:                                              01S0535 01644000
*                SEEK,AP1CESK,CC,6     TO CE CYL                01S0535 01645000
*                SRCH HA,AP1CESK+2,CC,4 VERIFY SEEK             01S0535 01646000
*                TIC,*-8                                        01S0535 01647000
*                WRT HA,BUFF+Y,CC,11-Y WRITE HA WITH SD INFO    01S0535 01648000
*                WRT R0,BUFF+11,CC,N   WRITE R0 WITH DUMMY SD AND R1    01649000
*                RD HA,0,SKIP-CC,5     READ HA                  01S0535 01650000
*                SP CNT,BUFF+11+N,CC,3 SPACE ACROSS R0 CNT      01S0535 01651000
*                RD CKD,0,SKIP,264     READ R1                       */ 01652000
*/*  SETS CECCHH TO CE CYL TRK 1                                     */ 01653000
*                                                               01S0535 01654000
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */ 01655000
         CLI   AP1DEVTP(AP1REG),3                               01S0535 01656000
         BNE   @RF00535                                         01S0535 01657000
*         CECCHH=I3344CE1;          /* CYL 2800 HD 1                 */ 01658000
         MVC   CECCHH(4,AP1REG),@CB00207                        01S0536 01659000
*       ELSE                        /* NOT 3344                      */ 01660000
*         CECCHH=I3350CE1;          /* CYL 1024 HD 1                 */ 01661000
         B     @RC00535                                         01S0537 01662000
@RF00535 MVC   CECCHH(4,AP1REG),@CB00211                        01S0537 01663000
*       CER=0;                      /* RECORD 0                      */ 01664000
@RC00535 MVI   CER(AP1REG),X'00'                                01S0538 01665000
*       AP1FM=CEHAR0FM;             /* ALL WRITES--CE CYL            */ 01666000
*                                                               01S0539 01667000
         MVC   AP1FM(1,AP1REG),CEHAR0FM                         01S0539 01668000
*       /*************************************************************/ 01669000
*       /*                                                           */ 01670000
*       /* USE AP1SEEK AND SEEK CCW SET UP BY RHAS SUBCASE           */ 01671000
*       /*                                                           */ 01672000
*       /*************************************************************/ 01673000
*                                                               01S0540 01674000
*       BUFPTR=AP1BUFAD;            /* POINT TO BUFFER               */ 01675000
         L     BUFPTR,AP1BUFAD(,AP1REG)                         01S0540 01676000
*       CCWPTR=AP1CCWA+LENGTH(CCW); /* FIRST CCW SLOT AFTER SEEK     */ 01677000
         LA    @10,8                                            01S0541 01678000
         L     CCWPTR,AP1CCWA(,AP1REG)                          01S0541 01679000
         ALR   CCWPTR,@10                                       01S0541 01680000
*       CCWPTR->CCW(1)=SHACCCCW;    /* SRCH HA,0,CC,4                */ 01681000
         MVC   CCW(8,CCWPTR),SHACCCCW                           01S0542 01682000
*       CCWPTR->CCWADDRB(1)=ADDR(CECCHH);/* TRACK ADDRESS            */ 01683000
         LA    @09,CECCHH(,AP1REG)                              01S0543 01684000
         STCM  @09,7,CCWADDRB(CCWPTR)                           01S0543 01685000
*       EVAL(CCWPTR+LENGTH(CCW))->CCW(1)=TICCCW;/* TIC,0,0,0         */ 01686000
         LR    @09,CCWPTR                                       01S0544 01687000
         ALR   @09,@10                                          01S0544 01688000
         MVC   CCW(8,@09),TICCCW                                01S0544 01689000
*       EVAL(CCWPTR+LENGTH(CCW))->CCWADDRB(1)=CCWPTR;/* TIC TO SEARCH*/ 01690000
         ALR   @10,CCWPTR                                       01S0545 01691000
         STCM  CCWPTR,7,CCWADDRB(@10)                           01S0545 01692000
*       CCWPTR=CCWPTR+2*LENGTH(CCW);/* NEXT SLOT                     */ 01693000
         AL    CCWPTR,@CF00167                                  01S0546 01694000
*       CCWPTR->CCW(1)=WHACCCCW;    /* WRT HA,0,CC,11                */ 01695000
         MVC   CCW(8,CCWPTR),WHACCCCW                           01S0547 01696000
*       IF AP1DEVTP=AP13350 THEN    /* 3350                          */ 01697000
         CLI   AP1DEVTP(AP1REG),4                               01S0548 01698000
         BNE   @RF00548                                         01S0548 01699000
*         CCWPTR->CCWADDRB(1)=BUFPTR;/* WRITE FROM BUFFER            */ 01700000
         STCM  BUFPTR,7,CCWADDRB(CCWPTR)                        01S0549 01701000
*       ELSE                        /* NOT 3350                      */ 01702000
*         IF AP1DEVTP=AP13344 THEN  /* 3344                          */ 01703000
         B     @RC00548                                         01S0550 01704000
@RF00548 CLI   AP1DEVTP(AP1REG),3                               01S0550 01705000
         BNE   @RF00550                                         01S0550 01706000
*           DO;                                                 01S0551 01707000
*             CCWPTR->CCWADDRB(1)=BUFPTR+4;/* SD FOR 3344            */ 01708000
         LA    @10,4                                            01S0552 01709000
         ALR   @10,BUFPTR                                       01S0552 01710000
         STCM  @10,7,CCWADDRB(CCWPTR)                           01S0552 01711000
*             CCWPTR->CCWBYTE(1)=LENGTH(CECCHH)+3;/* SD+FLG+CCHH     */ 01712000
         MVC   CCWBYTE(2,CCWPTR),@CH00076                       01S0553 01713000
*           END;                                                01S0554 01714000
*         ELSE                      /* 3330                          */ 01715000
*           DO;                                                 01S0555 01716000
         B     @RC00550                                         01S0555 01717000
@RF00550 DS    0H                                               01S0556 01718000
*             CCWPTR->CCWADDRB(1)=BUFPTR+LENGTH(SDZERO);/* FLAG      */ 01719000
         LA    @10,6                                            01S0556 01720000
         ALR   @10,BUFPTR                                       01S0556 01721000
         STCM  @10,7,CCWADDRB(CCWPTR)                           01S0556 01722000
*             CCWPTR->CCWBYTE(1)=LENGTH(CECCHH)+1;/* FLG+CCHH        */ 01723000
         MVC   CCWBYTE(2,CCWPTR),@CH00083                       01S0557 01724000
*           END;                                                01S0558 01725000
*       CCWPTR=CCWPTR+LENGTH(CCW);  /* NEXT SLOT                     */ 01726000
@RC00550 DS    0H                                               01S0559 01727000
@RC00548 AL    CCWPTR,@CF00047                                  01S0559 01728000
*       BUFPTR->BYTE6=SDZERO;       /* MOVE IN SKIP DEFECT           */ 01729000
         MVC   BYTE6(6,BUFPTR),SDZERO                           01S0560 01730000
*       BUFPTR=BUFPTR+LENGTH(SDZERO);/* TO FLAG                      */ 01731000
         AL    BUFPTR,@CF00155                                  01S0561 01732000
*       BUFPTR->BYTE1='00'X;        /* FLAG OF ZERO                  */ 01733000
         MVI   BYTE1(BUFPTR),X'00'                              01S0562 01734000
*       BUFPTR=BUFPTR+1;            /* TO CCHH                       */ 01735000
         AL    BUFPTR,@CF00043                                  01S0563 01736000
*       BUFPTR->CNTCCHH=CECCHH;     /* CCHH                          */ 01737000
         MVC   CNTCCHH(4,BUFPTR),CECCHH(AP1REG)                 01S0564 01738000
*       BUFPTR=BUFPTR+LENGTH(CCHH); /* TO R0                         */ 01739000
         AL    BUFPTR,@CF00038                                  01S0565 01740000
*       CCWPTR->CCW(1)=WR0CCCCW;    /* WRT R0,0,CC,16                */ 01741000
         MVC   CCW(8,CCWPTR),WR0CCCCW                           01S0566 01742000
*       CCWPTR->CCWADDRB(1)=BUFPTR; /* POINT TO COUNT                */ 01743000
         STCM  BUFPTR,7,CCWADDRB(CCWPTR)                        01S0567 01744000
*       BUFPTR->CNTCCHH=CECCHH;     /* CCHH FOR R0                   */ 01745000
         MVC   CNTCCHH(4,BUFPTR),CECCHH(AP1REG)                 01S0568 01746000
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */ 01747000
         CLI   AP1DEVTP(AP1REG),3                               01S0569 01748000
         BNE   @RF00569                                         01S0569 01749000
*         BUFPTR->CNTRKDD=R0DL565;  /* RKDD                          */ 01750000
         MVC   CNTRKDD(4,BUFPTR),R0DL565                        01S0570 01751000
*       ELSE                        /* 3350 OR 3330                  */ 01752000
*         BUFPTR->CNTRKDD=R0DL839;  /* RKDD                          */ 01753000
         B     @RC00569                                         01S0571 01754000
@RF00569 MVC   CNTRKDD(4,BUFPTR),R0DL839                        01S0571 01755000
*       CCWPTR->CCWBYTE(1)=BUFPTR->CNTDD+LENGTH(CNT);/* PUT BYTE CNT    01756000
*                                      IN WR0                        */ 01757000
@RC00569 LA    @10,8                                            01S0572 01758000
         SLR   @09,@09                                          01S0572 01759000
         ICM   @09,3,CNTDD(BUFPTR)                              01S0572 01760000
         ALR   @09,@10                                          01S0572 01761000
         STH   @09,CCWBYTE(,CCWPTR)                             01S0572 01762000
*       CCWPTR=CCWPTR+LENGTH(CCW);  /* NEXT SLOT                     */ 01763000
*                                                               01S0573 01764000
         ALR   CCWPTR,@10                                       01S0573 01765000
*       /*************************************************************/ 01766000
*       /*                                                           */ 01767000
*       /* MOVE IN R0                                                */ 01768000
*       /*                                                           */ 01769000
*       /*************************************************************/ 01770000
*                                                               01S0574 01771000
*       RFY                                                     01S0574 01772000
*        (GPR00P,                                               01S0574 01773000
*         GPR01F,                                               01S0574 01774000
*         GPR14P,                                               01S0574 01775000
*         GPR15F) RSTD;                                         01S0574 01776000
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */ 01777000
         CLI   AP1DEVTP(AP1REG),3                               01S0575 01778000
         BNE   @RF00575                                         01S0575 01779000
*         GPR00P=ADDR(SDR03344);    /* FROM ADDR                     */ 01780000
         LA    GPR00P,SDR03344                                  01S0576 01781000
*       ELSE                        /* 3330 OR 3350                  */ 01782000
*         GPR00P=ADDR(SDR03350);    /* FROM ADDR                     */ 01783000
         B     @RC00575                                         01S0577 01784000
@RF00575 LA    GPR00P,SDR03350                                  01S0577 01785000
*       GPR01F=BUFPTR->CNTDD;       /* FROM LENGTH                   */ 01786000
@RC00575 SLR   @10,@10                                          01S0578 01787000
         ICM   @10,3,CNTDD(BUFPTR)                              01S0578 01788000
         LR    GPR01F,@10                                       01S0578 01789000
*       GPR15F=BUFPTR->CNTDD;       /* TO LENGTH                     */ 01790000
         LR    GPR15F,@10                                       01S0579 01791000
*       BUFPTR=BUFPTR+LENGTH(CNT);  /* SLOT FOR R0 DATA              */ 01792000
         AL    BUFPTR,@CF00047                                  01S0580 01793000
*       GPR14P=BUFPTR;              /* TO ADDR                       */ 01794000
         LR    GPR14P,BUFPTR                                    01S0581 01795000
*       BUFPTR=BUFPTR+GPR15F;       /* NEXT SLOT                     */ 01796000
         ALR   BUFPTR,GPR15F                                    01S0582 01797000
*       MVCL(GPR14P,GPR00P);        /* MOVE IN R0 DATA               */ 01798000
         MVCL  GPR14P,GPR00P                                    01S0583 01799000
*       RFY                                                     01S0584 01800000
*        (GPR00P,                                               01S0584 01801000
*         GPR01F,                                               01S0584 01802000
*         GPR14P,                                               01S0584 01803000
*         GPR15F) UNRSTD;                                       01S0584 01804000
*       CCWPTR->CCW(1)=RHACSCCW;    /* RHA,0,SKIP-CC,5               */ 01805000
         MVC   CCW(8,CCWPTR),RHACSCCW                           01S0585 01806000
*       CCWPTR=CCWPTR+LENGTH(CCW);  /* NEXT SLOT                     */ 01807000
         LA    @10,8                                            01S0586 01808000
         ALR   CCWPTR,@10                                       01S0586 01809000
*       CCWPTR->CCW(1)=SPCCCCCW;    /* SP CNT,0,CC,3                 */ 01810000
         MVC   CCW(8,CCWPTR),SPCCCCCW                           01S0587 01811000
*       CCWPTR->CCWADDRB(1)=BUFPTR+LENGTH(CNTR);/* POINT TO BUFFER   */ 01812000
         LA    @09,1                                            01S0588 01813000
         ALR   @09,BUFPTR                                       01S0588 01814000
         STCM  @09,7,CCWADDRB(CCWPTR)                           01S0588 01815000
*       BUFPTR->BYTE4=R0DL8;        /* RKDD                          */ 01816000
         MVC   BYTE4(4,BUFPTR),@CB00225                         01S0589 01817000
*       CCWPTR=CCWPTR+LENGTH(CCW);  /* NEXT SLOT                     */ 01818000
         ALR   CCWPTR,@10                                       01S0590 01819000
*       CCWPTR->CCW(1)=RCDSCCW;     /* RD CKD,0,SKIP,264             */ 01820000
         MVC   CCW(8,CCWPTR),RCDSCCW                            01S0591 01821000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 01822000
         B     CE0001@                                          01S0592 01823000
*     END SD;                       /* END OF SUBCASE                */ 01824000
*                                                               01S0593 01825000
*     /***************************************************************/ 01826000
*     /*                                                             */ 01827000
*     /* CLEANUP: RESTORE CE CYL TRK 1                               */ 01828000
*     /*                                                             */ 01829000
*     /***************************************************************/ 01830000
*                                                               01S0594 01831000
*CLEANUP:                                                       01S0594 01832000
*     DO;                           /* SUBCASE                       */ 01833000
CLEANUP  DS    0H                                               01S0595 01834000
*/*   WRITE RECORD ZERO AND ONE ON CE CYL TRK 1                      */ 01835000
*/*         CCW CHAIN:                                          01S0595 01836000
*                SEEK,AP1CESK,CC,6          SEEK TO CE CYL      01S0595 01837000
*                SRCH HA,AP1CESK,CC,4       VALIDATE ON CORRECT TRK     01838000
*                TIC,*-8                                        01S0595 01839000
*                WRT R0,BUFF,CC,16          WRITE R0            01S0595 01840000
*                WCKD,BUFF+16,0,264         WRITE R1                 */ 01841000
*/*  SETS CECCHH TO CE CYL TRK 1                                     */ 01842000
*                                                               01S0595 01843000
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */ 01844000
         CLI   AP1DEVTP(AP1REG),3                               01S0595 01845000
         BNE   @RF00595                                         01S0595 01846000
*         CECCHH=I3344CE1;          /* CYL 2800 HD 1                 */ 01847000
         MVC   CECCHH(4,AP1REG),@CB00207                        01S0596 01848000
*       ELSE                        /* NOT 3344                      */ 01849000
*         CECCHH=I3350CE1;          /* CYL 1024 HD 1                 */ 01850000
         B     @RC00595                                         01S0597 01851000
@RF00595 MVC   CECCHH(4,AP1REG),@CB00211                        01S0597 01852000
*       AP1FM=CEHAR0FM;             /* ALL WRITES--CE CYL            */ 01853000
*                                                               01S0598 01854000
@RC00595 MVC   AP1FM(1,AP1REG),CEHAR0FM                         01S0598 01855000
*       /*************************************************************/ 01856000
*       /*                                                           */ 01857000
*       /* AP1SEEK AND A SEEK CCW TO CE CYL SETUP FROM PREVIOUS TEST */ 01858000
*       /*                                                           */ 01859000
*       /*************************************************************/ 01860000
*                                                               01S0599 01861000
*       CCW(2)=SHACCCCW;            /* SEARCH HA EQ,0,CC,4           */ 01862000
         L     @10,AP1CCWA(,AP1REG)                             01S0599 01863000
         MVC   CCW+8(8,@10),SHACCCCW                            01S0599 01864000
*       CCWADDRB(2)=ADDR(CECCHH);   /* ADDRESS OF TRACK              */ 01865000
         LA    @09,CECCHH(,AP1REG)                              01S0600 01866000
         STCM  @09,7,CCWADDRB+8(@10)                            01S0600 01867000
*       CCW(3)=TICCCW;              /* TIC,0,0,0                     */ 01868000
         MVC   CCW+16(8,@10),TICCCW                             01S0601 01869000
*       CCWADDRB(3)=AP1CCWAB+LENGTH(CCW);/* TIC TO SEARCH            */ 01870000
         LA    @09,8                                            01S0602 01871000
         L     @15,AP1CCWAB-1(,AP1REG)                          01S0602 01872000
         LA    @15,0(,@15)                                      01S0602 01873000
         ALR   @15,@09                                          01S0602 01874000
         STCM  @15,7,CCWADDRB+16(@10)                           01S0602 01875000
*       CCW(4)=WR0CCCCW;            /* WRT R0,0,CC,16                */ 01876000
         MVC   CCW+24(8,@10),WR0CCCCW                           01S0603 01877000
*       CCWADDRB(4)=AP1BUFAB;       /* WRITE FROM BUFFER             */ 01878000
         L     @15,AP1BUFAB-1(,AP1REG)                          01S0604 01879000
         LA    @15,0(,@15)                                      01S0604 01880000
         STCM  @15,7,CCWADDRB+24(@10)                           01S0604 01881000
*       CCW(5)=WCDCCW;              /* WCKD,0,0,264                  */ 01882000
         MVC   CCW+32(8,@10),WCDCCW                             01S0605 01883000
*       CCWADDRB(5)=AP1BUFAB+2*LENGTH(CNT);/* WRITE FROM BUFFER      */ 01884000
*                                                               01S0606 01885000
         LA    @14,16                                           01S0606 01886000
         ALR   @15,@14                                          01S0606 01887000
         STCM  @15,7,CCWADDRB+32(@10)                           01S0606 01888000
*       /*************************************************************/ 01889000
*       /*                                                           */ 01890000
*       /* BUILD COUNT AND DATA FOR R0                               */ 01891000
*       /*                                                           */ 01892000
*       /*************************************************************/ 01893000
*                                                               01S0607 01894000
*       AP1BUFAD->CNTCCHHR=CECCHHR; /* CCHHR                         */ 01895000
         L     @10,AP1BUFAD(,AP1REG)                            01S0607 01896000
         MVC   CNTCCHHR(5,@10),CECCHHR(AP1REG)                  01S0607 01897000
*       AP1BUFAD->CNTKDD=DL8;       /* KDD                           */ 01898000
         MVC   CNTKDD(3,@10),@CB00217                           01S0608 01899000
*       EVAL(AP1BUFAD+LENGTH(CNT))->BYTE8=R0DATA;/* DATA FOR R0      */ 01900000
*                                                               01S0609 01901000
         ALR   @09,@10                                          01S0609 01902000
         MVC   BYTE8(8,@09),R0DATA                              01S0609 01903000
*       /*************************************************************/ 01904000
*       /*                                                           */ 01905000
*       /* BUILD COUNT AND DATA FOR R1                               */ 01906000
*       /*                                                           */ 01907000
*       /*************************************************************/ 01908000
*                                                               01S0610 01909000
*       EVAL(AP1BUFAD+2*LENGTH(CNT))->CNTCCHH=CECCHH;/* CCHH         */ 01910000
         LR    @09,@10                                          01S0610 01911000
         ALR   @09,@14                                          01S0610 01912000
         MVC   CNTCCHH(4,@09),CECCHH(AP1REG)                    01S0610 01913000
*       EVAL(AP1BUFAD+2*LENGTH(CNT))->CNTRKDD=R1DL256;/* RKDD        */ 01914000
         ALR   @14,@10                                          01S0611 01915000
         MVC   CNTRKDD(4,@14),@CB00227                          01S0611 01916000
*       EVAL(AP1BUFAD+3*LENGTH(CNT))->BYTE256=R1DATA2;/* DATA2 FOR R1*/ 01917000
         AL    @10,@CF00064                                     01S0612 01918000
         MVC   BYTE256(256,@10),R1DATA2                         01S0612 01919000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 01920000
         B     CE0001@                                          01S0613 01921000
*     END CLEANUP;                  /* END OF SUBCASE                */ 01922000
*CE0001@:                                                       01S0615 01923000
*   END;                            /* END OF CASE                   */ 01924000
CE0001@  DS    0H                                               01S0616 01925000
*   GEN DATA DEFS(PATCH);                                       01S0616 01926000
*   END                             /* OF IAPBLDIO PROC              */ 01927000
*                                                               01S0617 01928000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 01929000
*/*%INCLUDE SYSLIB  (AP1BLOCK)                                       */ 01930000
*                                                               01S0617 01931000
*       ;                                                       01S0617 01932000
@EL00001 L     @13,4(,@13)                                      01S0617 01933000
@EF00001 DS    0H                                               01S0617 01934000
@ER00001 LM    @14,@12,12(@13)                                  01S0617 01935000
         BR    @14                                              01S0617 01936000
@DATA    DS    0H                                                       01937000
@CH00083 DC    H'5'                                                     01938000
@CH00076 DC    H'7'                                                     01939000
@CH00431 DC    H'10'                                                    01940000
@CH00578 DC    H'1024'                                                  01941000
@CH00592 DC    H'8376'                                                  01942000
@CH00593 DC    H'13038'                                                 01943000
@CH00591 DC    H'19077'                                                 01944000
@DATD    DSECT                                                          01945000
         DS    0F                                                       01946000
@SA00001 DS    18F                                                      01947000
IAPBLDIO CSECT                                                          01948000
         DS    0F                                                       01949000
@CF00043 DC    F'1'                                                     01950000
@CF00058 DC    F'2'                                                     01951000
@CF00038 DC    F'4'                                                     01952000
@CF00155 DC    F'6'                                                     01953000
@CF00047 DC    F'8'                                                     01954000
@CF00033 DC    F'12'                                                    01955000
@CF00049 DC    F'15'                                                    01956000
@CF00167 DC    F'16'                                                    01957000
@CF00589 DC    F'19'                                                    01958000
@CF00064 DC    F'24'                                                    01959000
@CF00244 DC    F'8368'                                                  01960000
@CF00246 DC    F'13030'                                                 01961000
@CF00242 DC    F'19069'                                                 01962000
@CF00595 DC    XL4'0000FFFF'                                            01963000
@DATD    DSECT                                                          01964000
         DS    0D                                                       01965000
IAPBLDIO CSECT                                                          01966000
         NOPR  ((@ENDDATD-@DATD)/257*16)                                01967000
         DS    0F                                                       01968000
@SIZDATD DC    AL1(0)                                                   01969000
         DC    AL3(@ENDDATD-@DATD)                                      01970000
         DS    0D                                                       01971000
@CB00253 DC    X'0000000B000000'                                        01972000
@CB00205 DC    X'0AF00000'                                              01973000
@CB00207 DC    X'0AF00001'                                              01974000
@CB00209 DC    X'04000000'                                              01975000
@CB00211 DC    X'04000001'                                              01976000
@CB00221 DC    X'01000000'                                              01977000
@CB00223 DC    X'02000000'                                              01978000
@CB00225 DC    X'00000008'                                              01979000
@CB00227 DC    X'01000100'                                              01980000
@CB00256 DC    X'00010000'                                              01981000
@CB00555 DC    X'00040000'                                              01982000
@CB00556 DC    X'00000000'                                              01983000
@CB00217 DC    X'000008'                                                01984000
@CB00219 EQU   @CB00555                                                 01985000
@CB00213 DC    X'0AF4'                                                  01986000
@CB00215 DC    X'0012'                                                  01987000
@CB00233 DC    X'001D'                                                  01988000
@CB00235 DC    X'000B'                                                  01989000
@CB00248 DC    X'00C0'                                                  01990000
@CB00250 DC    X'0120'                                                  01991000
@CB00557 EQU   @CB00256                                                 01992000
@CB00558 DC    X'000A'                                                  01993000
@CB00571 EQU   @CB00253                                                 01994000
R0DL565  DC    X'00000235'                                              01995000
R0DL839  DC    X'00000347'                                              01996000
ZERO     DC    X'0000000000000000'                                      01997000
SPCCCCCW DC    X'0F00000040000003'                                      01998000
SNSCCW   DC    X'0400000020000018'                                      01999000
SEEKCCW  DC    X'0700000040000006'                                      02000000
RHASKCCW DC    X'1A00000010000005'                                      02001000
RECALCCW DC    X'1300000060000001'                                      02002000
SSCCCCW  DC    X'2300000040000001'                                      02003000
RSCCCCW  DC    X'2200000040000001'                                      02004000
RHACSCCW DC    X'1A00000050000005'                                      02005000
SHACCCCW DC    X'3900000040000004'                                      02006000
WR0CCCCW DC    X'1500000040000010'                                      02007000
WCDCCW   DC    X'1D00000000000108'                                      02008000
RR0CSCCW DC    X'1600000050000010'                                      02009000
RCDCSCCW DC    X'1E00000050000108'                                      02010000
RR0CCCCW DC    X'1600000040000010'                                      02011000
MRCCCCCW DC    X'9200000040000008'                                      02012000
RCCCW    DC    X'1200000000000008'                                      02013000
TICCCW   DC    X'0800000000000000'                                      02014000
WCDCDCCW DC    X'1D00000080000008'                                      02015000
WCDCCCCW DC    X'1D00000040000108'                                      02016000
RCDSCCW  DC    X'1E00000010000108'                                      02017000
SIDCCCCW DC    X'3100000040000005'                                      02018000
RCCSCCW  DC    X'1200000050000008'                                      02019000
WHACCCCW DC    X'190000004000000B'                                      02020000
NOPCCCCW DC    X'0300000040000001'                                      02021000
RHACCW   DC    X'1A00000000000005'                                      02022000
NOPCCW   DC    X'0300000000000001'                                      02023000
READFM   DC    X'40'                                                    02024000
CEREADFM DC    X'44'                                                    02025000
CEHAR0FM DC    X'C4'                                                    02026000
CEFM     DC    X'04'                                                    02027000
R1DATA1  DS    CL256                                                    02028000
         ORG   R1DATA1                                                  02029000
@NM00011 DS    CL64                                                     02030000
         ORG   @NM00011                                                 02031000
@NM00012 DC    8X'EB6DB6DB'                                             02032000
         DC    2X'FFFFFFFF'                                             02033000
         DC    2X'AAAAAAAA'                                             02034000
         DC    2X'FFFFFFFF'                                             02035000
         DC    2X'AAAAAAAA'                                             02036000
         ORG   R1DATA1+64                                               02037000
@NM00013 DS    CL64                                                     02038000
         ORG   @NM00013                                                 02039000
@NM00014 DC    8X'EB6DB6DB'                                             02040000
         DC    2X'FFFFFFFF'                                             02041000
         DC    2X'AAAAAAAA'                                             02042000
         DC    2X'FFFFFFFF'                                             02043000
         DC    2X'AAAAAAAA'                                             02044000
         ORG   R1DATA1+128                                              02045000
@NM00015 DS    CL64                                                     02046000
         ORG   @NM00015                                                 02047000
@NM00016 DC    8X'EB6DB6DB'                                             02048000
         DC    2X'FFFFFFFF'                                             02049000
         DC    2X'AAAAAAAA'                                             02050000
         DC    2X'FFFFFFFF'                                             02051000
         DC    2X'AAAAAAAA'                                             02052000
         ORG   R1DATA1+192                                              02053000
@NM00017 DS    CL64                                                     02054000
         ORG   @NM00017                                                 02055000
@NM00018 DC    8X'EB6DB6DB'                                             02056000
         DC    2X'FFFFFFFF'                                             02057000
         DC    2X'AAAAAAAA'                                             02058000
         DC    2X'FFFFFFFF'                                             02059000
         DC    2X'AAAAAAAA'                                             02060000
         ORG   R1DATA1+256                                              02061000
R1DATA2  DS    CL256                                                    02062000
         ORG   R1DATA2                                                  02063000
@NM00019 DC    X'AAAAAAAAAAAAAAAAAAAA'                                  02064000
@NM00020 DC    15X'FFFFFFFFFFFFFFFFAAAAAAAAAAAAAAAA'                    02065000
@NM00021 DC    X'FFFFFFFFFFFF'                                          02066000
         ORG   R1DATA2+256                                              02067000
SDR03344 DS    CL565                                                    02068000
         ORG   SDR03344                                                 02069000
@NM00022 DC    X'00'                                                    02070000
         DC    XL7'0'                                                   02071000
@NM00023 DC    X'FFFFFFFFFFFF'                                          02072000
@NM00024 DC    X'00'                                                    02073000
         DC    XL71'0'                                                  02074000
@NM00025 DC    X'19'                                                    02075000
@NM00026 DC    X'0035'                                                  02076000
@NM00027 DC    X'3081'                                                  02077000
@NM00028 DC    X'20'                                                    02078000
@NM00029 DC    X'0AF00001'                                              02079000
@NM00030 DC    X'01000100'                                              02080000
@NM00031 DC    X'1930493ACC2D'                                          02081000
@NM00032 DC    X'00'                                                    02082000
         DC    XL67'0'                                                  02083000
@NM00033 DC    X'19'                                                    02084000
@NM00034 DC    X'AAAAAAAAAAAAAAAAAAAA'                                  02085000
@NM00035 DC    2X'FFFFFFFFFFFFFFFFAAAAAAAAAAAAAAAA'                     02086000
@NM00036 DC    X'FFFFFFFFFFFFFFFFAAAAAA'                                02087000
@NM00037 DC    X'00'                                                    02088000
         DC    XL126'0'                                                 02089000
@NM00038 DC    X'19'                                                    02090000
@NM00039 DC    X'AAAAAAAAAA'                                            02091000
@NM00040 DC    12X'FFFFFFFFFFFFFFFFAAAAAAAAAAAAAAAA'                    02092000
@NM00041 DC    X'FFFFFFFFFFFF'                                          02093000
@NM00042 DC    X'1A112E0FD408'                                          02094000
         ORG   SDR03344+565                                             02095000
SDR03350 DS    CL839                                                    02096000
         ORG   SDR03350                                                 02097000
@NM00043 DC    X'00'                                                    02098000
         DC    XL7'0'                                                   02099000
@NM00044 DC    X'FFFFFFFFFFFF'                                          02100000
@NM00045 DC    X'800000'                                                02101000
@NM00046 DC    X'00'                                                    02102000
         DC    XL74'0'                                                  02103000
@NM00047 DC    X'19'                                                    02104000
@NM00048 DC    X'00BD00BD8088'                                          02105000
@NM00049 DC    X'023002'                                                02106000
@NM00050 DC    X'20'                                                    02107000
@NM00051 DC    X'04000001'                                              02108000
@NM00052 DC    X'01000100'                                              02109000
@NM00053 DC    X'D6AFF9022805'                                          02110000
@NM00054 DC    X'8156C0'                                                02111000
@NM00055 DC    X'00'                                                    02112000
         DC    XL72'0'                                                  02113000
@NM00056 DC    X'00'                                                    02114000
         DC    XL126'0'                                                 02115000
@NM00057 DC    X'19'                                                    02116000
@NM00058 DC    X'AAAAAAAAAAAAAAAAAAAA'                                  02117000
@NM00059 DC    3X'FFFFFFFFFFFFFFFFAAAAAAAAAAAAAAAA'                     02118000
@NM00060 DC    X'FFFFFFFF'                                              02119000
@NM00061 DC    X'00'                                                    02120000
         DC    XL126'0'                                                 02121000
@NM00062 DC    X'19'                                                    02122000
@NM00063 DC    X'FFFFFFFFAAAAAAAAAAAAAAAA'                              02123000
@NM00064 DC    3X'FFFFFFFFFFFFFFFFAAAAAAAAAAAAAAAA'                     02124000
@NM00065 DC    X'FF'                                                    02125000
@NM00066 DC    X'00'                                                    02126000
         DC    XL126'0'                                                 02127000
@NM00067 DC    X'19'                                                    02128000
@NM00068 DC    X'FFFFFFFFFFFFFFAAAAAAAAAAAAAAAA'                        02129000
@NM00069 DC    7X'FFFFFFFFFFFFFFFFAAAAAAAAAAAAAAAA'                     02130000
@NM00070 DC    X'FFFFFFFFFFFF'                                          02131000
@NM00071 DC    X'1A112E0FD408'                                          02132000
         ORG   SDR03350+839                                             02133000
RANTBL   DC    H'10480'                                                 02134000
         DC    H'15011'                                                 02135000
         DC    H'1536'                                                  02136000
         DC    H'2011'                                                  02137000
         DC    H'14194'                                                 02138000
         DC    H'20969'                                                 02139000
         DC    H'22368'                                                 02140000
         DC    H'25595'                                                 02141000
         DC    H'30995'                                                 02142000
         DC    H'27982'                                                 02143000
         DC    H'19174'                                                 02144000
         DC    H'24130'                                                 02145000
         DC    H'22527'                                                 02146000
         DC    H'15179'                                                 02147000
         DC    H'24830'                                                 02148000
         DC    H'32081'                                                 02149000
         DC    H'30680'                                                 02150000
         DC    H'19655'                                                 02151000
         DC    H'6243'                                                  02152000
         DC    H'7856'                                                  02153000
         DC    H'16376'                                                 02154000
         DC    H'849'                                                   02155000
         DC    H'16379'                                                 02156000
         DC    H'16656'                                                 02157000
         DC    H'6121'                                                  02158000
         DC    H'14110'                                                 02159000
         DC    H'6927'                                                  02160000
         DC    H'1263'                                                  02161000
         DC    H'6907'                                                  02162000
         DC    H'11008'                                                 02163000
         DC    H'27756'                                                 02164000
         DC    H'18602'                                                 02165000
         DC    H'15053'                                                 02166000
         DC    H'21916'                                                 02167000
         DC    H'31016'                                                 02168000
         DC    H'18738'                                                 02169000
         DC    H'21069'                                                 02170000
         DC    H'10634'                                                 02171000
         DC    H'12952'                                                 02172000
         DC    H'5463'                                                  02173000
         DC    H'7972'                                                  02174000
         DC    H'18876'                                                 02175000
         DC    H'20922'                                                 02176000
         DC    H'18425'                                                 02177000
         DC    H'32307'                                                 02178000
         DC    H'14342'                                                 02179000
         DC    H'10281'                                                 02180000
         DC    H'17453'                                                 02181000
         DC    H'18103'                                                 02182000
         DC    H'25331'                                                 02183000
CP0001@  DC    AL4(RECAL)                                               02184000
         DC    AL4(SNS)                                                 02185000
         DC    AL4(RECAL)                                               02186000
         DC    AL4(RHAMHS)                                              02187000
         DC    AL4(RHAMH)                                               02188000
         DC    AL4(RHAFHS)                                              02189000
         DC    AL4(RHAFH)                                               02190000
         DC    AL4(RPS)                                                 02191000
         DC    AL4(SK192)                                               02192000
         DC    AL4(SKINCR)                                              02193000
         DC    AL4(SKMAX)                                               02194000
         DC    AL4(SKRANS)                                              02195000
         DC    AL4(SKRAN)                                               02196000
         DC    AL4(RHAS)                                                02197000
         DC    AL4(CE)                                                  02198000
         DC    AL4(WRTS)                                                02199000
         DC    AL4(CE)                                                  02200000
         DC    AL4(RR01S)                                               02201000
         DC    AL4(CE)                                                  02202000
         DC    AL4(RDMT)                                                02203000
         DC    AL4(FTWRT)                                               02204000
         DC    AL4(AMDET)                                               02205000
         DC    AL4(WRTPAD)                                              02206000
         DC    AL4(SD)                                                  02207000
         DC    AL4(CLEANUP)                                             02208000
IAPBLDIO CSECT                                                          02209000
*                                /*  PATCH AREA  */                     02210000
         CNOP  0,4               FULLWORD BDWY                          02211000
PATCH    DC    2XL((*-@MAINENT)/40)'0' FIVE PERCENT.                    02212000
@DATD    DSECT                                                          02213000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                02214000
@ENDDATD EQU   *                                                        02215000
IAPBLDIO CSECT                                                          02216000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02217000
@01      EQU   01                                                       02218000
@02      EQU   02                                                       02219000
@03      EQU   03                                                       02220000
@04      EQU   04                                                       02221000
@05      EQU   05                                                       02222000
@06      EQU   06                                                       02223000
@07      EQU   07                                                       02224000
@08      EQU   08                                                       02225000
@09      EQU   09                                                       02226000
@10      EQU   10                                                       02227000
@11      EQU   11                                                       02228000
@12      EQU   12                                                       02229000
@13      EQU   13                                                       02230000
@14      EQU   14                                                       02231000
@15      EQU   15                                                       02232000
COUNTER  EQU   @02                                                      02233000
CCWPTR   EQU   @06                                                      02234000
BUFPTR   EQU   @07                                                      02235000
AP1REG   EQU   @08                                                      02236000
GPR00P   EQU   @00                                                      02237000
GPR01F   EQU   @01                                                      02238000
GPR14P   EQU   @14                                                      02239000
GPR15F   EQU   @15                                                      02240000
GPR13P   EQU   @13                                                      02241000
GPR15P   EQU   @15                                                      02242000
AP1BLOCK EQU   0                                                        02243000
AP1PRINT EQU   AP1BLOCK+8                                               02244000
AP1PFLG1 EQU   AP1BLOCK+144                                             02245000
AP1WRKA  EQU   AP1BLOCK+156                                             02246000
AP1CCWA  EQU   AP1BLOCK+160                                             02247000
AP1CCWAB EQU   AP1CCWA+1                                                02248000
AP1BUFAD EQU   AP1BLOCK+164                                             02249000
AP1BUFAB EQU   AP1BUFAD+1                                               02250000
AP1TIMFL EQU   AP1BLOCK+176                                             02251000
AP1TIMFA EQU   AP1TIMFL                                                 02252000
AP1FM    EQU   AP1BLOCK+212                                             02253000
AP1SEEK  EQU   AP1BLOCK+213                                             02254000
CCHHR    EQU   AP1SEEK+3                                                02255000
CCHH     EQU   CCHHR                                                    02256000
CC       EQU   CCHH                                                     02257000
HH       EQU   CCHH+2                                                   02258000
AP1CESK  EQU   AP1BLOCK+221                                             02259000
CECCHHR  EQU   AP1CESK+2                                                02260000
CECCHH   EQU   CECCHHR                                                  02261000
CECC     EQU   CECCHH                                                   02262000
CEHH     EQU   CECCHH+2                                                 02263000
CER      EQU   CECCHHR+4                                                02264000
AP1FLG2  EQU   AP1BLOCK+244                                             02265000
AP1FHF   EQU   AP1FLG2                                                  02266000
AP1FLG3  EQU   AP1BLOCK+245                                             02267000
AP1PTRN2 EQU   AP1FLG3                                                  02268000
AP1FLG4  EQU   AP1BLOCK+246                                             02269000
AP1TSTNO EQU   AP1BLOCK+249                                             02270000
AP1DEVTP EQU   AP1BLOCK+250                                             02271000
AP1ETABA EQU   AP1BLOCK+252                                             02272000
AP1SKCNT EQU   AP1BLOCK+256                                             02273000
AP1LSTCC EQU   AP1BLOCK+258                                             02274000
AP1ERRTM EQU   AP1BLOCK+270                                             02275000
AP1ERRTF EQU   AP1BLOCK+300                                             02276000
AP1END   EQU   AP1BLOCK+360                                             02277000
ERRTAB   EQU   0                                                        02278000
CCW      EQU   0                                                        02279000
CCWADDRA EQU   CCW                                                      02280000
CCWCOMCD EQU   CCWADDRA                                                 02281000
@NM00005 EQU   CCWCOMCD                                                 02282000
CCWADDRB EQU   CCWADDRA+1                                               02283000
CCWFLGS  EQU   CCW+4                                                    02284000
CCWCC    EQU   CCWFLGS                                                  02285000
CCWSKIP  EQU   CCWFLGS                                                  02286000
CCWBYTE  EQU   CCW+6                                                    02287000
WRKAREA  EQU   0                                                        02288000
WRKAD    EQU   WRKAREA                                                  02289000
WRKFLG   EQU   WRKAD                                                    02290000
BYTE1    EQU   0                                                        02291000
BYTE4    EQU   0                                                        02292000
BYTE6    EQU   0                                                        02293000
BYTE8    EQU   0                                                        02294000
BYTE24   EQU   0                                                        02295000
BYTE112  EQU   0                                                        02296000
BYTE256  EQU   0                                                        02297000
SEEK     EQU   0                                                        02298000
SEEKCCHH EQU   SEEK+2                                                   02299000
SEEKCC   EQU   SEEKCCHH                                                 02300000
SEEKHH   EQU   SEEKCCHH+2                                               02301000
CNT      EQU   0                                                        02302000
CNTCCHHR EQU   CNT                                                      02303000
CNTCCHH  EQU   CNTCCHHR                                                 02304000
CNTHH    EQU   CNTCCHH+2                                                02305000
CNTR     EQU   CNTCCHHR+4                                               02306000
CL0001@  EQU   0                                                        02307000
BUFFER   EQU   0                                                        02308000
@NM00008 EQU   WRKAREA                                                  02309000
ZERO7    EQU   ZERO                                                     02310000
CNTRKDD  EQU   CNTR                                                     02311000
CNTKDD   EQU   CNTRKDD+1                                                02312000
CNTDD    EQU   CNTKDD+1                                                 02313000
SDZERO   EQU   ZERO                                                     02314000
R0DATA   EQU   ZERO                                                     02315000
CNTHHR   EQU   CNTHH                                                    02316000
HHR      EQU   HH                                                       02317000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02318000
CNTK     EQU   CNTKDD                                                   02319000
@NM00010 EQU   CNTRKDD                                                  02320000
WRKHW2   EQU   @NM00008+2                                               02321000
WRKHW1   EQU   @NM00008                                                 02322000
@NM00009 EQU   CNT+5                                                    02323000
CNTCC    EQU   CNTCCHH                                                  02324000
SEEKR    EQU   SEEK+6                                                   02325000
SEEKBB   EQU   SEEK                                                     02326000
WRKAB    EQU   WRKAD+1                                                  02327000
WRKENDFL EQU   WRKFLG                                                   02328000
@NM00007 EQU   CCW+5                                                    02329000
CCWPCI   EQU   CCWFLGS                                                  02330000
CCWSLI   EQU   CCWFLGS                                                  02331000
CCWCD    EQU   CCWFLGS                                                  02332000
CCWWR    EQU   @NM00005                                                 02333000
CCWRD    EQU   @NM00005                                                 02334000
@NM00006 EQU   @NM00005                                                 02335000
DATACOMP EQU   ERRTAB                                                   02336000
DCKCE    EQU   ERRTAB                                                   02337000
WRTCK    EQU   ERRTAB                                                   02338000
SKVERCK  EQU   ERRTAB                                                   02339000
DCK      EQU   ERRTAB                                                   02340000
AP1ENQAD EQU   AP1BLOCK+266                                             02341000
AP1DEVAD EQU   AP1BLOCK+262                                             02342000
AP1LSTHH EQU   AP1BLOCK+260                                             02343000
AP1RET   EQU   AP1BLOCK+251                                             02344000
AP1DCCNT EQU   AP1BLOCK+248                                             02345000
@NM00004 EQU   AP1BLOCK+247                                             02346000
AP1ENQD  EQU   AP1FLG4                                                  02347000
AP1DEBCH EQU   AP1FLG4                                                  02348000
AP1READ  EQU   AP1FLG4                                                  02349000
AP1NORD  EQU   AP1FLG4                                                  02350000
AP1RDERR EQU   AP1FLG3                                                  02351000
AP1RDTST EQU   AP1FLG3                                                  02352000
AP1VERIF EQU   AP1FLG3                                                  02353000
AP1QUIT  EQU   AP1FLG3                                                  02354000
AP1PRERR EQU   AP1FLG3                                                  02355000
AP1ERROR EQU   AP1FLG3                                                  02356000
AP1LST   EQU   AP1FLG3                                                  02357000
AP1NOERP EQU   AP1FLG2                                                  02358000
AP1EDP   EQU   AP1FLG2                                                  02359000
AP1IOC   EQU   AP1FLG2                                                  02360000
AP1NOWR  EQU   AP1FLG2                                                  02361000
AP1IOECB EQU   AP1BLOCK+240                                             02362000
AP1IOBA  EQU   AP1BLOCK+236                                             02363000
AP1DEBA  EQU   AP1BLOCK+232                                             02364000
AP1DCBA  EQU   AP1BLOCK+228                                             02365000
CEBB     EQU   AP1CESK                                                  02366000
R        EQU   CCHHR+4                                                  02367000
BB       EQU   AP1SEEK+1                                                02368000
M        EQU   AP1SEEK                                                  02369000
AP1SNS   EQU   AP1BLOCK+188                                             02370000
AP1CSW   EQU   AP1BLOCK+181                                             02371000
AP1PCODE EQU   AP1BLOCK+180                                             02372000
AP1TIMIN EQU   AP1TIMFA                                                 02373000
AP1IOACT EQU   AP1TIMFA                                                 02374000
AP1TCBAD EQU   AP1BLOCK+172                                             02375000
AP1TIMEA EQU   AP1BLOCK+168                                             02376000
@NM00003 EQU   AP1BUFAD                                                 02377000
@NM00002 EQU   AP1CCWA                                                  02378000
AP1RECB  EQU   AP1BLOCK+152                                             02379000
@NM00001 EQU   AP1BLOCK+150                                             02380000
AP1CNRPL EQU   AP1BLOCK+146                                             02381000
AP1CNCOD EQU   AP1BLOCK+145                                             02382000
AP1PRCLS EQU   AP1PFLG1                                                 02383000
AP1PRNP  EQU   AP1PFLG1                                                 02384000
AP1PROPN EQU   AP1PFLG1                                                 02385000
AP1PRLIN EQU   AP1BLOCK+142                                             02386000
AP1PRPAG EQU   AP1BLOCK+140                                             02387000
AP1PRCOD EQU   AP1BLOCK+139                                             02388000
AP1PRMSG EQU   AP1PRINT+1                                               02389000
AP1PRASA EQU   AP1PRINT                                                 02390000
AP1PDCBA EQU   AP1BLOCK+4                                               02391000
AP1HDR   EQU   AP1BLOCK                                                 02392000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02393000
@RC00137 EQU   CE0001@                                                  02394000
@RC00127 EQU   CE0001@                                                  02395000
@RC00167 EQU   @RC00166                                                 02396000
@RC00175 EQU   @RC00174                                                 02397000
@RC00183 EQU   @RC00182                                                 02398000
@RC00245 EQU   @RC00244                                                 02399000
@RC00321 EQU   @RC00318                                                 02400000
@RC00439 EQU   CE0001@                                                  02401000
@RC00433 EQU   CE0001@                                                  02402000
@RC00128 EQU   @RC00127                                                 02403000
@RC00138 EQU   @RC00137                                                 02404000
@RC00322 EQU   @RC00321                                                 02405000
@ENDDATA EQU   *                                                        02406000
         END   IAPBLDIO,(C'PLS1717',0701,77308)                         02407000
