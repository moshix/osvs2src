         TITLE 'IAPCHKIO - AP-1 CHECK ROUTINE                          *00001000
                        '                                               00002000
IAPCHKIO CSECT ,                                                01S0001 00003000
@MAINENT DS    0H                                               01S0001 00004000
         USING *,@15                                            01S0001 00005000
         B     @PROLOG                                          01S0001 00006000
         DC    AL1(16)                                          01S0001 00007000
         DC    C'IAPCHKIO  77.308'                              01S0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                  01S0001 00010000
         BALR  @11,0                                            01S0001 00011000
@PSTART  LA    @12,4095(,@11)                                   01S0001 00012000
         USING @PSTART,@11                                      01S0001 00013000
         USING @PSTART+4095,@12                                 01S0001 00014000
*                                                               01S0091 00015000
         USING @DATD+AP1BLOCK-AP1END,AP1REG  ADDRESSABILITY             00016000
         ST    13,@SA00001+4     BACKWARD POINTER                       00017000
         LA    15,@SA00001       OUR SAVE AREA                          00018000
         ST    15,8(,13)         FOREWARD POINTER                       00019000
         LR     13,15            SET REG 13                             00020000
*   /*****************************************************************/ 00021000
*   /*                                                               */ 00022000
*   /* SELECT CHECK ROUTINE BASED ON AP1TSTNO                        */ 00023000
*   /*                                                               */ 00024000
*   /*****************************************************************/ 00025000
*                                                               01S0092 00026000
*   DO;                             /* CASE(AP1TSTNO)NAMES(RECAL1,SNS   00027000
*                                      ,RECAL2,RET,RHAMH,RET,RHAFH,RP   00028000
*                                      S,SK192,SKINCR,SKMAX,RET,SKRAN   00029000
*                                      ,RET,RHA,RET,WRT,RET,RR01,RDMT   00030000
*                                      ,FTWRT,AMDET,WRTPAD,SD,CLEANUP   00031000
*                                      )                             */ 00032000
*     DCL                                                       01S0093 00033000
*       CL0001@ LABEL BASED(CP0001@(AP1TSTNO)) VALUERANGE(RECAL1,SNS,   00034000
*           RECAL2,RET,RHAMH,RET,RHAFH,RPS,SK192,SKINCR,SKMAX,RET,SKRAN 00035000
*           ,RET,RHA,RET,WRT,RET,RR01,RDMT,FTWRT,AMDET,WRTPAD,SD,       00036000
*           CLEANUP);               /* BRANCH TARGET                 */ 00037000
*     DCL                                                       01S0094 00038000
*       CP0001@(25) PTR(31) INIT(ADDR(RECAL1),ADDR(SNS),ADDR(RECAL2),   00039000
*           ADDR(RET),ADDR(RHAMH),ADDR(RET),ADDR(RHAFH),ADDR(RPS),ADDR( 00040000
*           SK192),ADDR(SKINCR),ADDR(SKMAX),ADDR(RET),ADDR(SKRAN),ADDR( 00041000
*           RET),ADDR(RHA),ADDR(RET),ADDR(WRT),ADDR(RET),ADDR(RR01),    00042000
*           ADDR(RDMT),ADDR(FTWRT),ADDR(AMDET),ADDR(WRTPAD),ADDR(SD),   00043000
*           ADDR(CLEANUP));                                     01S0094 00044000
*     GOTO CL0001@;                 /* BRANCH TO SELECTED CASE       */ 00045000
*                                                               01S0095 00046000
         SLR   @10,@10                                          01S0095 00047000
         IC    @10,AP1TSTNO(,AP1REG)                            01S0095 00048000
         SLA   @10,2                                            01S0095 00049000
         L     @10,CP0001@-4(@10)                               01S0095 00050000
         BR    @10                                              01S0095 00051000
*     /***************************************************************/ 00052000
*     /*                                                             */ 00053000
*     /* RET: ABENDS--WILL NOT BE ENTERED EXCEPT ON INVALID VALUE OF */ 00054000
*     /* AP1TSTNO                                                    */ 00055000
*     /*                                                             */ 00056000
*     /***************************************************************/ 00057000
*                                                               01S0096 00058000
*RET:                                                           01S0096 00059000
*     DO;                           /* SUBCASE RETURNS (BR14)        */ 00060000
RET      DS    0H                                               01S0097 00061000
*       DO;                         /* ABEND(1004) DUMP STEP USER    */ 00062000
*         RESPECIFY                                             01S0098 00063000
*          (GPR01F) RESTRICTED;                                 01S0098 00064000
*         GPR01F=(1004)&'00000FFF'X;/* COMP CODE IN BITS 20-31       */ 00065000
         LA    GPR01F,1004                                      01S0099 00066000
*         GPR01F=GPR01F|'C0000000'X;/* DUMP/STEP/DUMPOPTS FLAG       */ 00067000
         O     GPR01F,@CF00415                                  01S0100 00068000
*         SVC(13);                  /* ISSUE ABEND SVC               */ 00069000
         SVC   13                                               01S0101 00070000
*         RESPECIFY                                             01S0102 00071000
*          (GPR01F) UNRESTRICTED;                               01S0102 00072000
*       END;                        /* ABEND(1004) DUMP STEP USER       00073000
*                                      U1004 ABEND                   */ 00074000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00075000
         B     CE0001@                                          01S0104 00076000
*     END RET;                      /* END OF SUBCASE                */ 00077000
*                                                               01S0105 00078000
*     /***************************************************************/ 00079000
*     /*                                                             */ 00080000
*     /* RECAL1: DUMMY RECALIBRATE                                   */ 00081000
*     /*                                                             */ 00082000
*     /***************************************************************/ 00083000
*                                                               01S0106 00084000
*RECAL1:                                                        01S0106 00085000
*     DO;                           /* SUBCASE CHECKS FIRST     01S0106 00086000
*                                      RECALIBRATE-- IGNORED         */ 00087000
RECAL1   DS    0H                                               01S0107 00088000
*/*   IGNORES STATUS                                                 */ 00089000
*                                                               01S0107 00090000
*       AP1TSTNO=AP1TSTNO+1;        /* IGNORE RESULT--GO TO NXT TEST */ 00091000
         LA    @10,1                                            01S0107 00092000
         SLR   @09,@09                                          01S0107 00093000
         IC    @09,AP1TSTNO(,AP1REG)                            01S0107 00094000
         ALR   @10,@09                                          01S0107 00095000
         STC   @10,AP1TSTNO(,AP1REG)                            01S0107 00096000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00097000
         B     CE0001@                                          01S0108 00098000
*     END RECAL1;                   /* END OF SUBCASE                */ 00099000
*                                                               01S0109 00100000
*     /***************************************************************/ 00101000
*     /*                                                             */ 00102000
*     /* SNS: SENSE TO SEE IF EMULATED AND FIXED HEADS               */ 00103000
*     /*                                                             */ 00104000
*     /***************************************************************/ 00105000
*                                                               01S0110 00106000
*SNS:                                                           01S0110 00107000
*     DO;                           /* SUBCASE CHECKS SENSE          */ 00108000
SNS      DS    0H                                               01S0111 00109000
*/*   TESTS TO SEE IF A 3350, E-3340 OR E-3330                  01S0111 00110000
*       ENQS ON BASE ADDRESS                                    01S0111 00111000
*       CHECKS FOR FIXED HEADS ON 3344                               */ 00112000
*                                                               01S0111 00113000
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */ 00114000
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0111 00115000
         BE    @RF00111                                         01S0111 00116000
*         AP1PRERR=ON;              /* INDICATE ERROR                */ 00117000
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0112 00118000
*       ELSE                                                    01S0113 00119000
*         ;                         /* I/O OK                        */ 00120000
@RF00111 DS    0H                                               01S0114 00121000
*       IF AP1PRERR=OFF THEN        /* SNS WENT OK                   */ 00122000
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0114 00123000
         BNZ   @RF00114                                         01S0114 00124000
*         DO;                                                   01S0115 00125000
*           IF AP1DEVTP^=AP13350 THEN/* NOT 3350--MUST BE EMULATED      00126000
*                                      DEV                           */ 00127000
         CLI   AP1DEVTP(AP1REG),4                               01S0116 00128000
         BE    @RF00116                                         01S0116 00129000
*             IF AP1BUFAD->SNSEMU=ON THEN/* EMULATED                 */ 00130000
         L     @10,AP1BUFAD(,AP1REG)                            01S0117 00131000
         TM    SNSEMU(@10),B'00001000'                          01S0117 00132000
         BNO   @RF00117                                         01S0117 00133000
*               DO;                                             01S0118 00134000
*                                                               01S0118 00135000
*                 /***************************************************/ 00136000
*                 /*                                                 */ 00137000
*                 /* GET EBCDIC OF BASE ADDRESS                      */ 00138000
*                 /*                                                 */ 00139000
*                 /***************************************************/ 00140000
*                                                               01S0119 00141000
*                 RFY                                           01S0119 00142000
*                  (GPR00F,                                     01S0119 00143000
*                   GPR01P) RSTD;                               01S0119 00144000
*                 GPR01P=ADDR(AP1DEVAD);/* ADDR OF DEV ADDR IN EBCDIC*/ 00145000
         LA    GPR01P,AP1DEVAD(,AP1REG)                         01S0120 00146000
*                 RFY                                           01S0121 00147000
*                  (GPR00F,                                     01S0121 00148000
*                   GPR01P) UNRSTD;                             01S0121 00149000
*                                                               02S0122 00150000
*                 /***************************************************/ 00151000
*                 /*                                                 */ 00152000
*                 /* CONVERTS EBCDIC TO BINARY REG1 POINTS TO FULL   */ 00153000
*                 /* WORD OF EBCDIC (HEX)..REG0 RETURNED WITH BINARY */ 00154000
*                 /* VALUE                                           */ 00155000
*                 /*                                                 */ 00156000
*                 /***************************************************/ 00157000
*                                                               02S0122 00158000
*                 RFY                                           02S0122 00159000
*                  (GPR00F,                                     02S0122 00160000
*                   GPR01P,                                     02S0122 00161000
*                   GPR02F,                                     02S0122 00162000
*                   GPR03F) RSTD;                               02S0122 00163000
*                 GENERATE REFS(ALPHACNV,ALPHACV2);             02S0123 00164000
*                     INPUT =    FWFXFYFZ                               00165000
         SLR   @00,@00           CLEAR REG                              00166000
         LA    @02,4             LOOP COUNT                             00167000
LOOPBIN  SLR   @03,@03           CLEAR REG                              00168000
         IC    @03,0(@01)        GET CHAR                               00169000
         CLI   0(@01),X'F0'      IS IT ALPHA                            00170000
         BL    ALPHA                                                    00171000
         SH    @03,ALPHACNV      F0-B7                                  00172000
ALPHA    SH    @03,ALPHACV2      C1-A                                   00173000
         SLL   @00,4             SAVE LAST BYTE                         00174000
         AR    @00,@03           PUT IN NEW BYTE                        00175000
         LA    @01,1(@01)        INCR TO NEXT BYTE                      00176000
         BCT   @02,LOOPBIN       GET THE REST                           00177000
*                 RFY                                           02S0124 00178000
*                  (GPR00F,                                     02S0124 00179000
*                   GPR01P,                                     02S0124 00180000
*                   GPR02F,                                     02S0124 00181000
*                   GPR03F) UNRSTD;                             02S0124 00182000
*                 RFY                                           01S0125 00183000
*                  (GPR00F,                                     01S0125 00184000
*                   GPR01P) RSTD;                               01S0125 00185000
*                 IF AP1DEVTP<=AP13331 THEN/* 3330                   */ 00186000
         CLI   AP1DEVTP(AP1REG),2                               01S0126 00187000
         BH    @RF00126                                         01S0126 00188000
*                   GPR00F=GPR00F&'00000FDF'X;/* GET BASE ADDR       */ 00189000
         N     GPR00F,@CF00420                                  01S0127 00190000
*                 ELSE              /* 3344                          */ 00191000
*                   DO;                                         01S0128 00192000
         B     @RC00126                                         01S0128 00193000
@RF00126 DS    0H                                               01S0129 00194000
*                     GPR01P=AP1WRKA;/* ADDR FOR ID                  */ 00195000
         L     GPR01P,AP1WRKA(,AP1REG)                          01S0129 00196000
*                     GEN REFS(AP1WRKA) SETS(GPR01P,WRKAREA);   01S0130 00197000
                   STIDP 0(GPR01P)  STORE CALL ID                       00198000
*                     IF WRKHW1(2)='0135'X THEN/* ON MODEL 135 CPU   */ 00199000
         L     @10,AP1WRKA(,AP1REG)                             01S0131 00200000
         CLC   WRKHW1+4(2,@10),@CH00421                         01S0131 00201000
         BNE   @RF00131                                         01S0131 00202000
*                       GPR00F='3135'X;/* ENQ FOR 135 CPU            */ 00203000
         L     GPR00F,@CF00422                                  01S0132 00204000
*                     ELSE          /* NOT ON MODEL 135 CPU          */ 00205000
*                       DO;                                     01S0133 00206000
         B     @RC00131                                         01S0133 00207000
@RF00131 DS    0H                                               01S0134 00208000
*                         CCUSAV=GPR00F&'00000FC0'X;/* SAVE CU ADDR  */ 00209000
         LR    CCUSAV,GPR00F                                    01S0134 00210000
         N     CCUSAV,@CF00423                                  01S0134 00211000
*                         GPR00F=GPR00F&'0000003F'X;/* REMOVE CU ADDR*/ 00212000
         N     GPR00F,@CF00424                                  01S0135 00213000
*                         TBLPTR=ADDR(TBL3344);/* POINT TO 3344 01S0136 00214000
*                                      ADDRESS TABLE                 */ 00215000
         LA    TBLPTR,TBL3344                                   01S0136 00216000
*                         DO WHILE TBLPTR->BYTE1^=GPR00F&TBLPTR->BYTE1  00217000
*                               ^=0;/* UNTIL OUR ADDRESS FOUND OR END   00218000
*                                      OF TABLE                      */ 00219000
         B     @DE00137                                         01S0137 00220000
@DL00137 DS    0H                                               01S0138 00221000
*                           TBLPTR=TBLPTR+1;/* TRY NEXT ADDRESS      */ 00222000
         AL    TBLPTR,@CF00043                                  01S0138 00223000
*                         END;      /* OF DO WHILE                   */ 00224000
@DE00137 SLR   @10,@10                                          01S0139 00225000
         IC    @10,BYTE1(,TBLPTR)                               01S0139 00226000
         CR    GPR00F,@10                                       01S0139 00227000
         BE    @DC00137                                         01S0139 00228000
         CLI   BYTE1(TBLPTR),0                                  01S0139 00229000
         BNE   @DL00137                                         01S0139 00230000
@DC00137 DS    0H                                               01S0140 00231000
*                         TBLPTR=(TBLPTR/4)*4;/* FWORD BDWY CONTAINS    00232000
*                                      BASE PACK ADDRESS             */ 00233000
         LR    @10,TBLPTR                                       01S0140 00234000
         SRL   @10,2                                            01S0140 00235000
         SLA   @10,2                                            01S0140 00236000
         LR    TBLPTR,@10                                       01S0140 00237000
*                         GPR00F=TBLPTR->BYTE1;/* GET IT             */ 00238000
         SLR   GPR00F,GPR00F                                    01S0141 00239000
         IC    GPR00F,BYTE1(,TBLPTR)                            01S0141 00240000
*                         GPR00F=GPR00F|CCUSAV;/* OR IN CU ADDR      */ 00241000
         OR    GPR00F,CCUSAV                                    01S0142 00242000
*                       END;                                    01S0143 00243000
*                   END;                                        01S0144 00244000
@RC00131 DS    0H                                               01S0145 00245000
*                 GPR01P=ADDR(AP1ENQAD);/* ADDR FOR ENQ ADDR IN 01S0145 00246000
*                                      EBCDIC                        */ 00247000
@RC00126 LA    GPR01P,AP1ENQAD(,AP1REG)                         01S0145 00248000
*                 CALL CVTEBCD;     /* CONVERT TO EBCDIC             */ 00249000
         BAL   @14,CVTEBCD                                      01S0146 00250000
*                 RFY                                           01S0147 00251000
*                  (GPR00F,                                     01S0147 00252000
*                   GPR01P) UNRSTD;                             01S0147 00253000
*               END;                                            01S0148 00254000
*             ELSE                  /* REAL DEVICE--DONT CONTINUE    */ 00255000
*               DO;                                             01S0149 00256000
         B     @RC00117                                         01S0149 00257000
@RF00117 DS    0H                                               01S0150 00258000
*                 AP1CNCOD=MIDT;    /* SETUP FOR INCOR DEV TYPE MSG  */ 00259000
         MVI   AP1CNCOD(AP1REG),X'0E'                           01S0150 00260000
*                 AP1QUIT=ON;       /* DONT DO ANY MORE TESTS        */ 00261000
         OI    AP1QUIT(AP1REG),B'00001000'                      01S0151 00262000
*               END;                                            01S0152 00263000
*           ELSE                    /* 3350                          */ 00264000
*             AP1ENQAD=AP1DEVAD;    /* ENQ ON THE DEVICE ADDRESS     */ 00265000
         B     @RC00116                                         01S0153 00266000
@RF00116 MVC   AP1ENQAD(4,AP1REG),AP1DEVAD(AP1REG)              01S0153 00267000
*           IF AP1ENQAD^=0 THEN     /* DO ENQ                        */ 00268000
@RC00116 ICM   @10,15,AP1ENQAD(AP1REG)                          01S0154 00269000
         BZ    @RF00154                                         01S0154 00270000
*             DO;                                               01S0155 00271000
*               DO;                 /* ENQ (QNAME,AP1ENQAD,E,LENGTH(A   00272000
*                                      P1ENQAD),SYSTEM) RET(NONE)    */ 00273000
*                 RESPECIFY                                     01S0157 00274000
*                  (GPR01P) RESTRICTED;                         01S0157 00275000
*                 I056(1:20)=I056(1:20)&&I056(1:20);/* ZERO OUT THE     00276000
*                                      TABLE                         */ 00277000
         XC    I056(20),I056                                    01S0158 00278000
*                 I05604(1)=LENGTH(AP1ENQAD);/* LENGTH OF MINOR 01S0159 00279000
*                                      RESOURCE NAME                 */ 00280000
         MVI   I05604,X'04'                                     01S0159 00281000
*                 I05606(1)=ADDR(QNAME);/* ADDRESS OF MAJOR RESOURCE    00282000
*                                      NAME                          */ 00283000
         LA    @10,QNAME                                        01S0160 00284000
         ST    @10,I05606                                       01S0160 00285000
*                 I05607(1)=ADDR(AP1ENQAD);/* ADDRESS OF MINOR  01S0161 00286000
*                                      RESOURCE NAME                 */ 00287000
         LA    @10,AP1ENQAD(,AP1REG)                            01S0161 00288000
         ST    @10,I05607                                       01S0161 00289000
*                 I05603(1)='01000000'B;/* SET BIT STRING 1 FOR 01S0162 00290000
*                                      RESOURCE ELEMENT              */ 00291000
         MVI   I05603,B'01000000'                               01S0162 00292000
*                 I05605(1)='01000000'B;/* SET BIT STRING 2 FOR 01S0163 00293000
*                                      RESOURCE ELEMENT              */ 00294000
         MVI   I05605,B'01000000'                               01S0163 00295000
*                 I05603(1,1)='1'B; /* SET END OF LIST BIT           */ 00296000
         OI    I05603,B'10000000'                               01S0164 00297000
*                 GPR01P=ADDR(I05602);/* LOAD LIST ADDRESS           */ 00298000
         LA    GPR01P,I05602                                    01S0165 00299000
*                 SVC(56);          /* ISSUE ENQ SVC                 */ 00300000
         SVC   56                                               01S0166 00301000
*                 RESPECIFY                                     01S0167 00302000
*                  (GPR01P) UNRESTRICTED;                       01S0167 00303000
*               END;                /* ENQ (QNAME,AP1ENQAD,E,LENGTH(A   00304000
*                                      P1ENQAD),SYSTEM) RET(NONE)    */ 00305000
*               AP1ENQD=ON;         /* INDICATE ENQ DONE             */ 00306000
         OI    AP1ENQD(AP1REG),B'00010000'                      01S0169 00307000
*             END;                                              01S0170 00308000
*           ELSE                                                01S0171 00309000
*             ;                     /* ERROR DISCOVERED--DONT ENQ    */ 00310000
@RF00154 DS    0H                                               01S0172 00311000
*           IF AP1BUFAD->SNSFHF=ON THEN/* FIXED HEAD ON THIS PACK    */ 00312000
         L     @10,AP1BUFAD(,AP1REG)                            01S0172 00313000
         TM    SNSFHF(@10),B'00000100'                          01S0172 00314000
         BNO   @RF00172                                         01S0172 00315000
*             AP1FHF=ON;            /* INDICATE FIXED HEADS          */ 00316000
         OI    AP1FHF(AP1REG),B'00010000'                       01S0173 00317000
*           ELSE                                                01S0174 00318000
*             ;                     /* NO FIXED HDS OR NOT 3344      */ 00319000
@RF00172 DS    0H                                               01S0175 00320000
*           AP1TSTNO=AP1TSTNO+1;    /* GO TO NEXT TEST               */ 00321000
         LA    @10,1                                            01S0175 00322000
         SLR   @09,@09                                          01S0175 00323000
         IC    @09,AP1TSTNO(,AP1REG)                            01S0175 00324000
         ALR   @10,@09                                          01S0175 00325000
         STC   @10,AP1TSTNO(,AP1REG)                            01S0175 00326000
*         END;                                                  01S0176 00327000
*       ELSE                        /* SNS FAILED                    */ 00328000
*         DO;                                                   01S0177 00329000
         B     @RC00114                                         01S0177 00330000
@RF00114 DS    0H                                               01S0178 00331000
*           AP1QUIT=ON;             /* DONT DO ANY MORE TESTS        */ 00332000
         OI    AP1QUIT(AP1REG),B'00001000'                      01S0178 00333000
*           IF SNSINT=ON THEN       /* DRIVE NOT READY               */ 00334000
         TM    SNSINT+188(AP1REG),B'01000000'                   01S0179 00335000
         BNO   @RF00179                                         01S0179 00336000
*             AP1CNCOD=MDNR;        /* TELL OPER DEVICE NOT READY    */ 00337000
         MVI   AP1CNCOD(AP1REG),X'11'                           01S0180 00338000
*           ELSE                    /* OTHER PROBLEM                 */ 00339000
*             AP1ERROR=ON;          /* DRIVE PROBLEM                 */ 00340000
         B     @RC00179                                         01S0181 00341000
@RF00179 OI    AP1ERROR(AP1REG),B'00100000'                     01S0181 00342000
*           AP1PRCOD=PSNSER;        /* SENSE ERROR MESSAGE           */ 00343000
@RC00179 MVI   AP1PRCOD(AP1REG),X'07'                           01S0182 00344000
*         END;                                                  01S0183 00345000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00346000
         B     CE0001@                                          01S0184 00347000
*     END SNS;                      /* END OF SUBCASE                */ 00348000
*                                                               01S0185 00349000
*     /***************************************************************/ 00350000
*     /*                                                             */ 00351000
*     /* RECAL2: RECALIBRATE                                         */ 00352000
*     /*                                                             */ 00353000
*     /***************************************************************/ 00354000
*                                                               01S0186 00355000
*RECAL2:                                                        01S0186 00356000
*     DO;                           /* SUBCASE CHECKS SECOND    01S0186 00357000
*                                      RECALIBRATE                   */ 00358000
RECAL2   DS    0H                                               01S0187 00359000
*/*   CHECKS FOR I/O FAILURE                                         */ 00360000
*                                                               01S0187 00361000
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */ 00362000
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0187 00363000
         BE    @RF00187                                         01S0187 00364000
*         AP1PRERR=ON;              /* INDICATE ERROR                */ 00365000
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0188 00366000
*       ELSE                                                    01S0189 00367000
*         ;                         /* I/O OK                        */ 00368000
@RF00187 DS    0H                                               01S0190 00369000
*       AP1TSTNO=AP1TSTNO+1;        /* INCR TO NEXT TEST             */ 00370000
         LA    @10,1                                            01S0190 00371000
         SLR   @09,@09                                          01S0190 00372000
         IC    @09,AP1TSTNO(,AP1REG)                            01S0190 00373000
         ALR   @10,@09                                          01S0190 00374000
         STC   @10,AP1TSTNO(,AP1REG)                            01S0190 00375000
*       IF AP1PRERR=ON THEN         /* RECALIBRATE FAILED            */ 00376000
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0191 00377000
         BNO   @RF00191                                         01S0191 00378000
*         DO;                                                   01S0192 00379000
*           AP1ERROR=ON;            /* INDICATE DRIVE FAILURE        */ 00380000
*           AP1QUIT=ON;             /* STOP TESTING                  */ 00381000
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0194 00382000
*           AP1PRCOD=PRECALER;      /* RECALIBRATE ERROR MESSAGE     */ 00383000
         MVI   AP1PRCOD(AP1REG),X'08'                           01S0195 00384000
*         END;                                                  01S0196 00385000
*       ELSE                                                    01S0197 00386000
*         ;                         /* OK                            */ 00387000
@RF00191 DS    0H                                               01S0198 00388000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00389000
         B     CE0001@                                          01S0198 00390000
*     END RECAL2;                   /* END OF SUBCASE                */ 00391000
*                                                               01S0199 00392000
*     /***************************************************************/ 00393000
*     /*                                                             */ 00394000
*     /* RHAMH: CHECK MOVEABLE HEADS                                 */ 00395000
*     /*                                                             */ 00396000
*     /***************************************************************/ 00397000
*                                                               01S0200 00398000
*RHAMH:                                                         01S0200 00399000
*     DO;                           /* SUBCASE CHECKS READ HA ON        00400000
*                                      MOVABLE HEADS                 */ 00401000
RHAMH    DS    0H                                               01S0201 00402000
*/*   CHECKS FOR SEEK VERIFY CHECK, DATA CHECK AND OTHER I/O ERRORS     00403000
*     UPDATES HEAD TABLE                                             */ 00404000
*                                                               01S0201 00405000
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */ 00406000
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0201 00407000
         BE    @RF00201                                         01S0201 00408000
*         AP1PRERR=ON;              /* INDICATE ERROR                */ 00409000
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0202 00410000
*       ELSE                                                    01S0203 00411000
*         ;                         /* I/O OK                        */ 00412000
@RF00201 DS    0H                                               01S0204 00413000
*       IF AP1PRERR=ON THEN         /* I/O FAILED                    */ 00414000
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0204 00415000
         BNO   @RF00204                                         01S0204 00416000
*         DO;                                                   01S0205 00417000
*           AP1PRCOD=PRHAMHER;      /* RHAMH ERROR MSG               */ 00418000
         MVI   AP1PRCOD(AP1REG),X'09'                           01S0206 00419000
*           CALL ERROR1;            /* ANALYZE ERROR AND SET FLAGS   */ 00420000
         BAL   @14,ERROR1                                       01S0207 00421000
*         END;                                                  01S0208 00422000
*       ELSE                                                    01S0209 00423000
*         ;                         /* I/O OK                        */ 00424000
@RF00204 DS    0H                                               01S0210 00425000
*       IF HH=HI3350HD|CCHH=HI3330CH|CCHH=HI3344CH THEN/* LAST  01S0210 00426000
*                                      MOVABLE HEAD READ             */ 00427000
         CLC   HH(2,AP1REG),@CB00314                            01S0210 00428000
         BE    @RT00210                                         01S0210 00429000
         CLC   CCHH(4,AP1REG),@CB00327                          01S0210 00430000
         BE    @RT00210                                         01S0210 00431000
         CLC   CCHH(4,AP1REG),@CB00329                          01S0210 00432000
         BNE   @RF00210                                         01S0210 00433000
@RT00210 DS    0H                                               01S0211 00434000
*         DO;                                                   01S0211 00435000
*           AP1TSTNO=AP1TSTNO+1;    /* INCREMENT TO NEXT TEST        */ 00436000
         LA    @10,1                                            01S0212 00437000
         SLR   @09,@09                                          01S0212 00438000
         IC    @09,AP1TSTNO(,AP1REG)                            01S0212 00439000
         ALR   @10,@09                                          01S0212 00440000
         STC   @10,AP1TSTNO(,AP1REG)                            01S0212 00441000
*           IF AP1ERROR=ON THEN     /* BAD MOVEABLE HEAD             */ 00442000
         TM    AP1ERROR(AP1REG),B'00100000'                     01S0213 00443000
         BNO   @RF00213                                         01S0213 00444000
*             AP1QUIT=ON;           /* QUIT TESTING                  */ 00445000
         OI    AP1QUIT(AP1REG),B'00001000'                      01S0214 00446000
*           ELSE                                                01S0215 00447000
*             ;                     /* NO ERRORS                     */ 00448000
@RF00213 DS    0H                                               01S0216 00449000
*           IF AP1FHF=OFF&AP1DEVTP=AP13344 THEN/* NO FIXED HEADS     */ 00450000
         TM    AP1FHF(AP1REG),B'00010000'                       01S0216 00451000
         BNZ   @RF00216                                         01S0216 00452000
         CLI   AP1DEVTP(AP1REG),3                               01S0216 00453000
         BNE   @RF00216                                         01S0216 00454000
*             AP1TSTNO=AP1TSTNO+2;  /* SKIP FIXED HD TEST            */ 00455000
         LA    @10,2                                            01S0217 00456000
         SLR   @09,@09                                          01S0217 00457000
         IC    @09,AP1TSTNO(,AP1REG)                            01S0217 00458000
         ALR   @10,@09                                          01S0217 00459000
         STC   @10,AP1TSTNO(,AP1REG)                            01S0217 00460000
*           ELSE                                                01S0218 00461000
*             ;                     /* MAY BE FIXED HEADS ON THIS       00462000
*                                      PACK                          */ 00463000
@RF00216 DS    0H                                               01S0219 00464000
*         END;                                                  01S0219 00465000
*       ELSE                                                    01S0220 00466000
*         ;                         /* NOT LAST HEAD YET             */ 00467000
@RF00210 DS    0H                                               01S0221 00468000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00469000
         B     CE0001@                                          01S0221 00470000
*     END RHAMH;                    /* END OF SUBCASE                */ 00471000
*                                                               01S0222 00472000
*     /***************************************************************/ 00473000
*     /*                                                             */ 00474000
*     /* RHAFH: CHECKS FIXED HEADS                                   */ 00475000
*     /*                                                             */ 00476000
*     /***************************************************************/ 00477000
*                                                               01S0223 00478000
*RHAFH:                                                         01S0223 00479000
*     DO;                           /* SUBCASE CHECKS READ HA ON        00480000
*                                      FIXED HEADS                   */ 00481000
RHAFH    DS    0H                                               01S0224 00482000
*/*   CHECKS FOR SEEK VERIFY CHECKS, DATA CHECKS, AND OTHER I/O ERRORS  00483000
*     UPDATES HEAD TABLE                                             */ 00484000
*                                                               01S0224 00485000
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */ 00486000
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0224 00487000
         BE    @RF00224                                         01S0224 00488000
*         AP1PRERR=ON;              /* INDICATE ERROR                */ 00489000
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0225 00490000
*       ELSE                                                    01S0226 00491000
*         ;                         /* I/O OK                        */ 00492000
@RF00224 DS    0H                                               01S0227 00493000
*       IF AP1PRERR=ON THEN         /* ERROR ON I/O                  */ 00494000
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0227 00495000
         BNO   @RF00227                                         01S0227 00496000
*         DO;                                                   01S0228 00497000
*           AP1PRCOD=PRHAFHER;      /* RHAFH ERROR MSG               */ 00498000
         MVI   AP1PRCOD(AP1REG),X'0A'                           01S0229 00499000
*           CALL ERROR1;            /* ANALYZE ERROR AND SET FLAGS   */ 00500000
         BAL   @14,ERROR1                                       01S0230 00501000
*         END;                                                  01S0231 00502000
*       ELSE                                                    01S0232 00503000
*         ;                         /* I/O OK                        */ 00504000
@RF00227 DS    0H                                               01S0233 00505000
*       IF CCHH='0002001D'X|CCHH='00030012'X|CCHH='000A000A'X THEN/*    00506000
*                                      HAVE READ LAST HEAD           */ 00507000
         CLC   CCHH(4,AP1REG),@CB00440                          01S0233 00508000
         BE    @RT00233                                         01S0233 00509000
         CLC   CCHH(4,AP1REG),@CB00441                          01S0233 00510000
         BE    @RT00233                                         01S0233 00511000
         CLC   CCHH(4,AP1REG),@CB00442                          01S0233 00512000
         BNE   @RF00233                                         01S0233 00513000
@RT00233 DS    0H                                               01S0234 00514000
*         DO;                                                   01S0234 00515000
*           AP1TSTNO=AP1TSTNO+1;    /* GO TO NEXT TEST               */ 00516000
         LA    @10,1                                            01S0235 00517000
         SLR   @09,@09                                          01S0235 00518000
         IC    @09,AP1TSTNO(,AP1REG)                            01S0235 00519000
         ALR   @10,@09                                          01S0235 00520000
         STC   @10,AP1TSTNO(,AP1REG)                            01S0235 00521000
*           IF AP1ERROR=ON THEN     /* AT LEAST ONE HEAD HAD ERROR   */ 00522000
         TM    AP1ERROR(AP1REG),B'00100000'                     01S0236 00523000
         BNO   @RF00236                                         01S0236 00524000
*             AP1QUIT=ON;           /* STOP TESTING                  */ 00525000
         OI    AP1QUIT(AP1REG),B'00001000'                      01S0237 00526000
*           ELSE                                                01S0238 00527000
*             ;                     /* ALL HEADS OK                  */ 00528000
@RF00236 DS    0H                                               01S0239 00529000
*         END;                                                  01S0239 00530000
*       ELSE                                                    01S0240 00531000
*         ;                         /* NOT FINISHED YET              */ 00532000
@RF00233 DS    0H                                               01S0241 00533000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00534000
         B     CE0001@                                          01S0241 00535000
*     END RHAFH;                    /* END OF SUBCASE                */ 00536000
*                                                               01S0242 00537000
*     /***************************************************************/ 00538000
*     /*                                                             */ 00539000
*     /* RPS: CHECKS RPS                                             */ 00540000
*     /*                                                             */ 00541000
*     /***************************************************************/ 00542000
*                                                               01S0243 00543000
*RPS:                                                           01S0243 00544000
*     DO;                           /* SUBCASE CHECK ONLY FOR I/O       00545000
*                                      ERROR                         */ 00546000
RPS      DS    0H                                               01S0244 00547000
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */ 00548000
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0244 00549000
         BE    @RF00244                                         01S0244 00550000
*         AP1PRERR=ON;              /* INDICATE ERROR                */ 00551000
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0245 00552000
*       ELSE                                                    01S0246 00553000
*         ;                         /* I/O OK                        */ 00554000
@RF00244 DS    0H                                               01S0247 00555000
*       IF AP1PRERR=ON THEN         /* ERROR ON I/O                  */ 00556000
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0247 00557000
         BNO   @RF00247                                         01S0247 00558000
*         DO;                                                   01S0248 00559000
*           AP1PRCOD=PRPSER;        /* RPS ERROR MSG                 */ 00560000
         MVI   AP1PRCOD(AP1REG),X'24'                           01S0249 00561000
*           AP1ERROR=ON;            /* DRIVE ERROR                   */ 00562000
*           AP1QUIT=ON;             /* STOP TESTING                  */ 00563000
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0251 00564000
*         END;                                                  01S0252 00565000
*       ELSE                                                    01S0253 00566000
*         ;                         /* I/O OK                        */ 00567000
@RF00247 DS    0H                                               01S0254 00568000
*       AP1TSTNO=AP1TSTNO+1;        /* GO TO NEXT TEST               */ 00569000
         LA    @10,1                                            01S0254 00570000
         SLR   @09,@09                                          01S0254 00571000
         IC    @09,AP1TSTNO(,AP1REG)                            01S0254 00572000
         ALR   @09,@10                                          01S0254 00573000
         STC   @09,AP1TSTNO(,AP1REG)                            01S0254 00574000
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */ 00575000
         CLI   AP1DEVTP(AP1REG),3                               01S0255 00576000
         BNE   @RF00255                                         01S0255 00577000
*         AP1TSTNO=AP1TSTNO+1;      /* SKIP SK192                    */ 00578000
         ALR   @09,@10                                          01S0256 00579000
         STC   @09,AP1TSTNO(,AP1REG)                            01S0256 00580000
*       ELSE                                                    01S0257 00581000
*         ;                         /* NOT 3344                      */ 00582000
@RF00255 DS    0H                                               01S0258 00583000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00584000
         B     CE0001@                                          01S0258 00585000
*     END RPS;                      /* END OF SUBCASE                */ 00586000
*                                                               01S0259 00587000
*     /***************************************************************/ 00588000
*     /*                                                             */ 00589000
*     /* SK192: 192 CYLINDER SEEKS                                   */ 00590000
*     /*                                                             */ 00591000
*     /***************************************************************/ 00592000
*                                                               01S0260 00593000
*SK192:                                                         01S0260 00594000
*     DO;                           /* SUBCASE CHECKS 192 CYL SEEKS  */ 00595000
SK192    DS    0H                                               01S0261 00596000
*/*   CHECKS FOR I/O ERRORS                                          */ 00597000
*                                                               01S0261 00598000
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */ 00599000
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0261 00600000
         BE    @RF00261                                         01S0261 00601000
*         AP1PRERR=ON;              /* INDICATE ERROR                */ 00602000
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0262 00603000
*       ELSE                                                    01S0263 00604000
*         ;                         /* I/O OK                        */ 00605000
@RF00261 DS    0H                                               01S0264 00606000
*       AP1TSTNO=AP1TSTNO+1;        /* INCREMENT TO NEXT TEST        */ 00607000
         LA    @10,1                                            01S0264 00608000
         SLR   @09,@09                                          01S0264 00609000
         IC    @09,AP1TSTNO(,AP1REG)                            01S0264 00610000
         ALR   @10,@09                                          01S0264 00611000
         STC   @10,AP1TSTNO(,AP1REG)                            01S0264 00612000
*       IF AP1PRERR=ON THEN         /* I/O ERROR                     */ 00613000
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0265 00614000
         BNO   @RF00265                                         01S0265 00615000
*         DO;                                                   01S0266 00616000
*           AP1ERROR=ON;            /* DRIVE PROBLEM                 */ 00617000
*           AP1QUIT=ON;             /* STOP TESTING                  */ 00618000
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0268 00619000
*           AP1PRCOD=PSK192ER;      /* SK192 ERROR MSG               */ 00620000
         MVI   AP1PRCOD(AP1REG),X'0B'                           01S0269 00621000
*         END;                                                  01S0270 00622000
*       ELSE                                                    01S0271 00623000
*         ;                         /* NO ERRORS                     */ 00624000
@RF00265 DS    0H                                               01S0272 00625000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00626000
         B     CE0001@                                          01S0272 00627000
*     END SK192;                    /* END OF SUBCASE                */ 00628000
*                                                               01S0273 00629000
*     /***************************************************************/ 00630000
*     /*                                                             */ 00631000
*     /* SKINCR: INCREMENTAL SEEKS                                   */ 00632000
*     /*                                                             */ 00633000
*     /***************************************************************/ 00634000
*                                                               01S0274 00635000
*SKINCR:                                                        01S0274 00636000
*     DO;                           /* SUBCASE CHECKS INCREMENTAL       00637000
*                                      SEEKS                         */ 00638000
SKINCR   DS    0H                                               01S0275 00639000
*/*   CHECKS FOR I/O ERRORS                                          */ 00640000
*                                                               01S0275 00641000
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */ 00642000
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0275 00643000
         BE    @RF00275                                         01S0275 00644000
*         AP1PRERR=ON;              /* INDICATE ERROR                */ 00645000
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0276 00646000
*       ELSE                                                    01S0277 00647000
*         ;                         /* I/O OK                        */ 00648000
@RF00275 DS    0H                                               01S0278 00649000
*       AP1TSTNO=AP1TSTNO+1;        /* INCREMENT TO NEXT TEST        */ 00650000
         LA    @10,1                                            01S0278 00651000
         SLR   @09,@09                                          01S0278 00652000
         IC    @09,AP1TSTNO(,AP1REG)                            01S0278 00653000
         ALR   @10,@09                                          01S0278 00654000
         STC   @10,AP1TSTNO(,AP1REG)                            01S0278 00655000
*       IF AP1PRERR=ON THEN         /* I/O ERROR                     */ 00656000
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0279 00657000
         BNO   @RF00279                                         01S0279 00658000
*         DO;                                                   01S0280 00659000
*           AP1ERROR=ON;            /* DRIVE PROBLEM                 */ 00660000
*           AP1QUIT=ON;             /* STOP TESTING                  */ 00661000
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0282 00662000
*           AP1PRCOD=PINCRER;       /* SKINCR ERROR MSG              */ 00663000
         MVI   AP1PRCOD(AP1REG),X'0C'                           01S0283 00664000
*         END;                                                  01S0284 00665000
*       ELSE                                                    01S0285 00666000
*         ;                         /* NO ERRORS                     */ 00667000
@RF00279 DS    0H                                               01S0286 00668000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00669000
         B     CE0001@                                          01S0286 00670000
*     END SKINCR;                   /* END OF SUBCASE                */ 00671000
*                                                               01S0287 00672000
*     /***************************************************************/ 00673000
*     /*                                                             */ 00674000
*     /* SKMAX: MAXIMUM SEEKS                                        */ 00675000
*     /*                                                             */ 00676000
*     /***************************************************************/ 00677000
*                                                               01S0288 00678000
*SKMAX:                                                         01S0288 00679000
*     DO;                           /* SUBCASE CHECKS MAXIMUM SEEKS  */ 00680000
SKMAX    DS    0H                                               01S0289 00681000
*/*   CHECKS FOR I/O ERRORS                                          */ 00682000
*                                                               01S0289 00683000
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */ 00684000
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0289 00685000
         BE    @RF00289                                         01S0289 00686000
*         AP1PRERR=ON;              /* INDICATE ERROR                */ 00687000
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0290 00688000
*       ELSE                                                    01S0291 00689000
*         ;                         /* I/O OK                        */ 00690000
@RF00289 DS    0H                                               01S0292 00691000
*       AP1TSTNO=AP1TSTNO+1;        /* INCREMENT TO NEXT TEST        */ 00692000
         LA    @10,1                                            01S0292 00693000
         SLR   @09,@09                                          01S0292 00694000
         IC    @09,AP1TSTNO(,AP1REG)                            01S0292 00695000
         ALR   @10,@09                                          01S0292 00696000
         STC   @10,AP1TSTNO(,AP1REG)                            01S0292 00697000
*       IF AP1PRERR=ON THEN         /* I/O ERROR                     */ 00698000
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0293 00699000
         BNO   @RF00293                                         01S0293 00700000
*         DO;                                                   01S0294 00701000
*           AP1ERROR=ON;            /* DRIVE PROBLEM                 */ 00702000
*           AP1QUIT=ON;             /* STOP TESTING                  */ 00703000
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0296 00704000
*           AP1PRCOD=PSKMAXER;      /* SKMAX ERROR MSG               */ 00705000
         MVI   AP1PRCOD(AP1REG),X'0D'                           01S0297 00706000
*         END;                                                  01S0298 00707000
*       ELSE                                                    01S0299 00708000
*         ;                         /* NO ERRORS                     */ 00709000
@RF00293 DS    0H                                               01S0300 00710000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00711000
         B     CE0001@                                          01S0300 00712000
*     END SKMAX;                    /* END OF SUBCASE                */ 00713000
*                                                               01S0301 00714000
*     /***************************************************************/ 00715000
*     /*                                                             */ 00716000
*     /* SKRAN: RANDOM SEEKS                                         */ 00717000
*     /*                                                             */ 00718000
*     /***************************************************************/ 00719000
*                                                               01S0302 00720000
*SKRAN:                                                         01S0302 00721000
*     DO;                           /* SUBCASE CHECKS RANDOM SEEKS   */ 00722000
SKRAN    DS    0H                                               01S0303 00723000
*/*   CHECKS FOR I/O ERRORS                                          */ 00724000
*                                                               01S0303 00725000
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */ 00726000
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0303 00727000
         BE    @RF00303                                         01S0303 00728000
*         AP1PRERR=ON;              /* INDICATE ERROR                */ 00729000
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0304 00730000
*       ELSE                                                    01S0305 00731000
*         ;                         /* I/O OK                        */ 00732000
@RF00303 DS    0H                                               01S0306 00733000
*       IF AP1PRERR=ON THEN         /* I/O ERROR                     */ 00734000
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0306 00735000
         BNO   @RF00306                                         01S0306 00736000
*         DO;                                                   01S0307 00737000
*           AP1ERROR=ON;            /* DRIVE PROBLEM                 */ 00738000
*           AP1QUIT=ON;             /* STOP TESTING                  */ 00739000
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0309 00740000
*           AP1PRCOD=PSKRANER;      /* SKRAN ERROR MSG               */ 00741000
         MVI   AP1PRCOD(AP1REG),X'0E'                           01S0310 00742000
*         END;                                                  01S0311 00743000
*       ELSE                                                    01S0312 00744000
*         ;                         /* NO ERRORS                     */ 00745000
@RF00306 DS    0H                                               01S0313 00746000
*       IF AP1SKCNT=RANSKMAX THEN   /* FIFTY SEEKS                   */ 00747000
         CLC   AP1SKCNT(2,AP1REG),@CH00318                      01S0313 00748000
         BNE   @RF00313                                         01S0313 00749000
*         AP1TSTNO=AP1TSTNO+1;      /* GO TO NEXT TEST               */ 00750000
         LA    @10,1                                            01S0314 00751000
         SLR   @09,@09                                          01S0314 00752000
         IC    @09,AP1TSTNO(,AP1REG)                            01S0314 00753000
         ALR   @10,@09                                          01S0314 00754000
         STC   @10,AP1TSTNO(,AP1REG)                            01S0314 00755000
*       ELSE                                                    01S0315 00756000
*         ;                         /* NOT ENOUGH SEEKS YET          */ 00757000
@RF00313 DS    0H                                               01S0316 00758000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00759000
         B     CE0001@                                          01S0316 00760000
*     END SKRAN;                    /* END OF SUBCASE                */ 00761000
*                                                               01S0317 00762000
*     /***************************************************************/ 00763000
*     /*                                                             */ 00764000
*     /* RHA: VERIFY HOME ADDRESS ON CE CYLINDER                     */ 00765000
*     /*                                                             */ 00766000
*     /***************************************************************/ 00767000
*                                                               01S0318 00768000
*RHA:                                                           01S0318 00769000
*     DO;                           /* SUBCASE CHECKS READ HA ON CE     00770000
*                                      CYL                           */ 00771000
RHA      DS    0H                                               01S0319 00772000
*/*   CHECKS FOR SEEK VERIFY CHECKS, DATA CHECKS AND OTHER I/O ERRORS   00773000
*     IF EITHER OF THE FIRST, SKIPS ALL WRITE DEPENDENT TESTS   01S0319 00774000
*     BUT DOES NOT TERMINATE                                    01S0319 00775000
*     UPDATES HEAD TABLE                                             */ 00776000
*                                                               01S0319 00777000
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */ 00778000
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0319 00779000
         BE    @RF00319                                         01S0319 00780000
*         AP1PRERR=ON;              /* INDICATE ERROR                */ 00781000
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0320 00782000
*       ELSE                                                    01S0321 00783000
*         ;                         /* I/O OK                        */ 00784000
@RF00319 DS    0H                                               01S0322 00785000
*       IF AP1PRERR=ON THEN         /* ERROR                         */ 00786000
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0322 00787000
         BNO   @RF00322                                         01S0322 00788000
*         DO;                                                   01S0323 00789000
*           AP1PRCOD=PRHAER;        /* RHA ERROR MSG                 */ 00790000
         MVI   AP1PRCOD(AP1REG),X'0F'                           01S0324 00791000
*           IF AP1PCODE=ERRC&CSWUNCHK=ON&(CSWADDRB-LENGTH(CCW))->CCWRD( 00792000
*               1)=ON&(CSWADDRB-LENGTH(CCW))->CCWWR(1)=OFF THEN/*       00793000
*                                      UNIT CHK ON READ              */ 00794000
         CLI   AP1PCODE(AP1REG),X'41'                           01S0325 00795000
         BNE   @RF00325                                         01S0325 00796000
         LA    @10,AP1CSW(,AP1REG)                              01S0325 00797000
         BCTR  @10,0                                            01S0325 00798000
         TM    CSWUNCHK(@10),B'00000010'                        01S0325 00799000
         BNO   @RF00325                                         01S0325 00800000
         L     @10,CSWADDRB-1(,@10)                             01S0325 00801000
         AL    @10,@CF00504                                     01S0325 00802000
         TM    CCWRD(@10),B'00000010'                           01S0325 00803000
         BNO   @RF00325                                         01S0325 00804000
         TM    CCWWR(@10),B'00000001'                           01S0325 00805000
         BNZ   @RF00325                                         01S0325 00806000
*             IF SNSDATA=ON|(SNSEQU=ON&SNS7=FMT10&(SNS17&NDFMSK)=NDF)   00807000
*               THEN                /* DATA CHECK                    */ 00808000
         LA    @10,188                                          01S0326 00809000
         ALR   @10,AP1REG                                       01S0326 00810000
         TM    SNSDATA(@10),B'00001000'                         01S0326 00811000
         BO    @RT00326                                         01S0326 00812000
         TM    SNSEQU(@10),B'00010000'                          01S0326 00813000
         BNO   @RF00326                                         01S0326 00814000
         CLI   SNS7(@10),X'10'                                  01S0326 00815000
         BNE   @RF00326                                         01S0326 00816000
         MVC   @TS00001(1),SNS17(@10)                           01S0326 00817000
         NI    @TS00001,X'FE'                                   01S0326 00818000
         CLI   @TS00001,X'C0'                                   01S0326 00819000
         BNE   @RF00326                                         01S0326 00820000
@RT00326 DS    0H                                               01S0327 00821000
*               DO;                                             01S0327 00822000
*                 AP1NOWR=ON;       /* CANT DO WRITE TESTS           */ 00823000
         OI    AP1NOWR(AP1REG),B'10000000'                      01S0328 00824000
*                 DCKCE=ON;         /* SET IN TABLE                  */ 00825000
         L     @10,AP1ETABA(,AP1REG)                            01S0329 00826000
         OI    DCKCE(@10),B'00010000'                           01S0329 00827000
*               END;                                            01S0330 00828000
*             ELSE                  /* NOT DATA CHECK                */ 00829000
*               IF SNS7=SKCHK7&((AP1DEVTP=AP13344&SNSSKCK=ON)|(AP1DEVTP 00830000
*                   ^=AP13344&SNSEQU=ON)) THEN                  01S0331 00831000
         B     @RC00326                                         01S0331 00832000
@RF00326 LA    @10,188                                          01S0331 00833000
         ALR   @10,AP1REG                                       01S0331 00834000
         CLI   SNS7(@10),X'1A'                                  01S0331 00835000
         BNE   @RF00331                                         01S0331 00836000
         CLI   AP1DEVTP(AP1REG),3                               01S0331 00837000
         BNE   @GL00013                                         01S0331 00838000
         TM    SNSSKCK(@10),B'00000001'                         01S0331 00839000
         BO    @RT00331                                         01S0331 00840000
@GL00013 CLI   AP1DEVTP(AP1REG),3                               01S0331 00841000
         BE    @RF00331                                         01S0331 00842000
         TM    SNSEQU+188(AP1REG),B'00010000'                   01S0331 00843000
         BNO   @RF00331                                         01S0331 00844000
@RT00331 DS    0H                                               01S0332 00845000
*                 DO;                                           01S0332 00846000
*                   AP1NOWR=ON;     /* CANT DO WRITE TESTS           */ 00847000
         OI    AP1NOWR(AP1REG),B'10000000'                      01S0333 00848000
*                   SKVERCK=ON;     /* SET IN TABLE                  */ 00849000
         L     @10,AP1ETABA(,AP1REG)                            01S0334 00850000
         OI    SKVERCK(@10),B'01000000'                         01S0334 00851000
*                 END;                                          01S0335 00852000
*               ELSE                /* NOT DCK OR SKVERCK            */ 00853000
*                 DO;                                           01S0336 00854000
         B     @RC00331                                         01S0336 00855000
@RF00331 DS    0H                                               01S0337 00856000
*                   AP1ERROR=ON;    /* DRIVE PROBLEM                 */ 00857000
*                   AP1QUIT=ON;     /* STOP TESTING                  */ 00858000
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0338 00859000
*                 END;                                          01S0339 00860000
*           ELSE                    /* NOT UCK ON RHA                */ 00861000
*             DO;                                               01S0340 00862000
         B     @RC00325                                         01S0340 00863000
@RF00325 DS    0H                                               01S0341 00864000
*               AP1ERROR=ON;        /* DRIVE PROBLEM                 */ 00865000
*               AP1QUIT=ON;         /* STOP TESTING                  */ 00866000
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0342 00867000
*             END;                                              01S0343 00868000
*         END;                                                  01S0344 00869000
*       ELSE                        /* NO HDWE ERROR                 */ 00870000
*         IF AP1BUFAD->BYTE5(2:5)^=CECCHH THEN/* CCHH IN HA INCORRECT*/ 00871000
         B     @RC00322                                         01S0345 00872000
@RF00322 L     @10,AP1BUFAD(,AP1REG)                            01S0345 00873000
         CLC   BYTE5+1(4,@10),CECCHH(AP1REG)                    01S0345 00874000
         BE    @RF00345                                         01S0345 00875000
*           DO;                                                 01S0346 00876000
*             AP1NOWR=ON;           /* CANT DO WRITE TESTS           */ 00877000
         OI    AP1NOWR(AP1REG),B'10000000'                      01S0347 00878000
*             AP1PRERR=ON;          /* PRINT MSG                     */ 00879000
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0348 00880000
*             AP1PRCOD=PRHADC;      /* DATA COMPARE ERR              */ 00881000
         MVI   AP1PRCOD(AP1REG),X'22'                           01S0349 00882000
*             CALL CVTEBCDX(ADDR(CECCHH),ADDR(AP1PRMSG)+25,LENGTH(      00883000
*                 CECCHH));         /* CNVT EXPECTED TO EBCDIC       */ 00884000
         LA    @10,CECCHH(,AP1REG)                              01S0350 00885000
         ST    @10,@AFTEMPS                                     01S0350 00886000
         LA    @10,@AFTEMPS                                     01S0350 00887000
         ST    @10,@AL00001                                     01S0350 00888000
         LA    @10,AP1PRMSG(,AP1REG)                            01S0350 00889000
         AL    @10,@CF00411                                     01S0350 00890000
         ST    @10,@AFTEMPS+4                                   01S0350 00891000
         LA    @10,@AFTEMPS+4                                   01S0350 00892000
         ST    @10,@AL00001+4                                   01S0350 00893000
         LA    @10,@CF00038                                     01S0350 00894000
         ST    @10,@AL00001+8                                   01S0350 00895000
         LA    @01,@AL00001                                     01S0350 00896000
         BAL   @14,CVTEBCDX                                     01S0350 00897000
*             CALL CVTEBCDX(AP1BUFAD+1,ADDR(AP1PRMSG)+41,LENGTH(CECCHH) 00898000
*                 );                /* CNVT RECEIVED TO EBCDIC       */ 00899000
         LA    @10,1                                            01S0351 00900000
         AL    @10,AP1BUFAD(,AP1REG)                            01S0351 00901000
         ST    @10,@AFTEMPS                                     01S0351 00902000
         LA    @10,@AFTEMPS                                     01S0351 00903000
         ST    @10,@AL00001                                     01S0351 00904000
         LA    @10,AP1PRMSG(,AP1REG)                            01S0351 00905000
         AL    @10,@CF00450                                     01S0351 00906000
         ST    @10,@AFTEMPS+4                                   01S0351 00907000
         LA    @10,@AFTEMPS+4                                   01S0351 00908000
         ST    @10,@AL00001+4                                   01S0351 00909000
         LA    @10,@CF00038                                     01S0351 00910000
         ST    @10,@AL00001+8                                   01S0351 00911000
         LA    @01,@AL00001                                     01S0351 00912000
         BAL   @14,CVTEBCDX                                     01S0351 00913000
*           END;                                                01S0352 00914000
*         ELSE                                                  01S0353 00915000
*           ;                       /* HA CORRECT                    */ 00916000
@RF00345 DS    0H                                               01S0354 00917000
*       IF CEHH=HI3350HD|CECCHH=HI3344CE THEN/* LAST TRK READ        */ 00918000
@RC00322 CLC   CEHH(2,AP1REG),@CB00314                          01S0354 00919000
         BE    @RT00354                                         01S0354 00920000
         CLC   CECCHH(4,AP1REG),@CB00290                        01S0354 00921000
         BNE   @RF00354                                         01S0354 00922000
@RT00354 DS    0H                                               01S0355 00923000
*         DO;                                                   01S0355 00924000
*           AP1TSTNO=AP1TSTNO+1;    /* INCR TO NEXT TEST             */ 00925000
         LA    @10,1                                            01S0356 00926000
         SLR   @09,@09                                          01S0356 00927000
         IC    @09,AP1TSTNO(,AP1REG)                            01S0356 00928000
         ALR   @10,@09                                          01S0356 00929000
         STC   @10,AP1TSTNO(,AP1REG)                            01S0356 00930000
*           IF AP1NOWR=ON THEN      /* BAD HA                        */ 00931000
         TM    AP1NOWR(AP1REG),B'10000000'                      01S0357 00932000
         BNO   @RF00357                                         01S0357 00933000
*             DO;                                               01S0358 00934000
*               AP1LST=ON;          /* SKIP WRITE DEPENDENT TESTS    */ 00935000
         OI    AP1LST(AP1REG),B'01000000'                       01S0359 00936000
*               AP1RET=AP1SKRET;    /* INDICATE TESTS SKIPPED        */ 00937000
         MVI   AP1RET(AP1REG),X'04'                             01S0360 00938000
*               AP1CNCOD=MWTB;      /* SETUP FOR WRITE TESTS BYPASSED   00939000
*                                      MESSAGE                       */ 00940000
         MVI   AP1CNCOD(AP1REG),X'08'                           01S0361 00941000
*             END;                                              01S0362 00942000
*           ELSE                                                01S0363 00943000
*             ;                     /* ALL HA''S GOOD                */ 00944000
@RF00357 DS    0H                                               01S0364 00945000
*         END;                                                  01S0364 00946000
*       ELSE                                                    01S0365 00947000
*         ;                         /* NOT LAST TRK YET              */ 00948000
@RF00354 DS    0H                                               01S0366 00949000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00950000
         B     CE0001@                                          01S0366 00951000
*     END RHA;                      /* END OF SUBCASE                */ 00952000
*                                                               01S0367 00953000
*     /***************************************************************/ 00954000
*     /*                                                             */ 00955000
*     /* WRT: WRITE ON CE CYLINDER                                   */ 00956000
*     /*                                                             */ 00957000
*     /***************************************************************/ 00958000
*                                                               01S0368 00959000
*WRT:                                                           01S0368 00960000
*     DO;                           /* SUBCASE CHECKS WRITE R0 R1 ON    00961000
*                                      CE CYL                        */ 00962000
WRT      DS    0H                                               01S0369 00963000
*/*   CHECKS FOR WRITE INHIBIT, WRITE CHECKS AND OTHER I/O ERRORS.      00964000
*     IF WRITE INHIBIT, BYPASSES ALL WRITE DEPENDENT TESTS      01S0369 00965000
*     BUT DOES NOT TERMINATE TESTING.                           01S0369 00966000
*     UPDATES HEAD TABLE                                             */ 00967000
*                                                               01S0369 00968000
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */ 00969000
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0369 00970000
         BE    @RF00369                                         01S0369 00971000
*         AP1PRERR=ON;              /* INDICATE ERROR                */ 00972000
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0370 00973000
*       ELSE                                                    01S0371 00974000
*         ;                         /* I/O OK                        */ 00975000
@RF00369 DS    0H                                               01S0372 00976000
*       IF AP1PRERR=ON THEN         /* ERROR                         */ 00977000
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0372 00978000
         BNO   @RF00372                                         01S0372 00979000
*         DO;                                                   01S0373 00980000
*           AP1PRCOD=PWRTER;        /* WRT ERROR MSG                 */ 00981000
         MVI   AP1PRCOD(AP1REG),X'10'                           01S0374 00982000
*           IF AP1PCODE=ERRC&CSWUNCHK=ON&(CSWADDRB-LENGTH(CCW))->CCWWR( 00983000
*               1)=ON&(CSWADDRB-LENGTH(CCW))->CCWRD(1)=OFF THEN/*       00984000
*                                      UNIT CHECK ON WRITE           */ 00985000
         CLI   AP1PCODE(AP1REG),X'41'                           01S0375 00986000
         BNE   @RF00375                                         01S0375 00987000
         LA    @10,AP1CSW(,AP1REG)                              01S0375 00988000
         BCTR  @10,0                                            01S0375 00989000
         TM    CSWUNCHK(@10),B'00000010'                        01S0375 00990000
         BNO   @RF00375                                         01S0375 00991000
         L     @10,CSWADDRB-1(,@10)                             01S0375 00992000
         AL    @10,@CF00504                                     01S0375 00993000
         TM    CCWWR(@10),B'00000001'                           01S0375 00994000
         BNO   @RF00375                                         01S0375 00995000
         TM    CCWRD(@10),B'00000010'                           01S0375 00996000
         BNZ   @RF00375                                         01S0375 00997000
*             IF SNSINHI=ON THEN    /* WRITE INHIBIT                 */ 00998000
         TM    SNSINHI+188(AP1REG),B'00000010'                  01S0376 00999000
         BNO   @RF00376                                         01S0376 01000000
*               DO;                                             01S0377 01001000
*                 AP1NOWR=ON;       /* SET NO WRITE BIT              */ 01002000
         OI    AP1NOWR(AP1REG),B'10000000'                      01S0378 01003000
*                 AP1PRCOD=PWRINH;  /* WRT WRITE INHIBIT ERROR MSG   */ 01004000
         MVI   AP1PRCOD(AP1REG),X'1B'                           01S0379 01005000
*               END;                                            01S0380 01006000
*             ELSE                  /* NOT WRITE INHIBIT             */ 01007000
*               DO;                                             01S0381 01008000
         B     @RC00376                                         01S0381 01009000
@RF00376 DS    0H                                               01S0382 01010000
*                 AP1ERROR=ON;      /* INDICATE ERROR                */ 01011000
         OI    AP1ERROR(AP1REG),B'00100000'                     01S0382 01012000
*                 WRTCK=ON;         /* SET IN TABLE                  */ 01013000
         L     @10,AP1ETABA(,AP1REG)                            01S0383 01014000
         OI    WRTCK(@10),B'00100000'                           01S0383 01015000
*               END;                                            01S0384 01016000
*           ELSE                    /* NOT UCK ON WRT                */ 01017000
*             DO;                                               01S0385 01018000
         B     @RC00375                                         01S0385 01019000
@RF00375 DS    0H                                               01S0386 01020000
*               AP1ERROR=ON;        /* DRIVE PROBLEM                 */ 01021000
*               AP1QUIT=ON;         /* STOP TESTING                  */ 01022000
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0387 01023000
*             END;                                              01S0388 01024000
*         END;                                                  01S0389 01025000
*       ELSE                                                    01S0390 01026000
*         ;                         /* NO ERROR                      */ 01027000
@RF00372 DS    0H                                               01S0391 01028000
*       IF AP1NOWR=ON&AP1ERROR=OFF THEN/* WRITE INHIBIT ON--NO OTHER    01029000
*                                      ERRORS                        */ 01030000
@RC00372 TM    AP1NOWR(AP1REG),B'10000000'                      01S0391 01031000
         BNO   @RF00391                                         01S0391 01032000
         TM    AP1ERROR(AP1REG),B'00100000'                     01S0391 01033000
         BNZ   @RF00391                                         01S0391 01034000
*         DO;                                                   01S0392 01035000
*           AP1LST=ON;              /* SKIP WRITE DEPENDENT TESTS    */ 01036000
         OI    AP1LST(AP1REG),B'01000000'                       01S0393 01037000
*           AP1RET=AP1SKRET;        /* INDICATE TESTS SKIPPED        */ 01038000
         MVI   AP1RET(AP1REG),X'04'                             01S0394 01039000
*           AP1CNCOD=MWIS;          /* SETUP WRITE INHIBIT SW ON MSG */ 01040000
         MVI   AP1CNCOD(AP1REG),X'10'                           01S0395 01041000
*         END;                                                  01S0396 01042000
*       ELSE                        /* NOT WRITE INHIBIT OR ANOTHER     01043000
*                                      ERROR                         */ 01044000
*         IF CEHH=HI3350HD|CECCHH=HI3344CE THEN/* LAST TRACK READ    */ 01045000
         B     @RC00391                                         01S0397 01046000
@RF00391 CLC   CEHH(2,AP1REG),@CB00314                          01S0397 01047000
         BE    @RT00397                                         01S0397 01048000
         CLC   CECCHH(4,AP1REG),@CB00290                        01S0397 01049000
         BNE   @RF00397                                         01S0397 01050000
@RT00397 DS    0H                                               01S0398 01051000
*           DO;                                                 01S0398 01052000
*             AP1TSTNO=AP1TSTNO+1;  /* INCR TO NEXT TEST             */ 01053000
         LA    @10,1                                            01S0399 01054000
         SLR   @09,@09                                          01S0399 01055000
         IC    @09,AP1TSTNO(,AP1REG)                            01S0399 01056000
         ALR   @10,@09                                          01S0399 01057000
         STC   @10,AP1TSTNO(,AP1REG)                            01S0399 01058000
*             IF AP1ERROR=ON THEN   /* WRITE ERROR                   */ 01059000
         TM    AP1ERROR(AP1REG),B'00100000'                     01S0400 01060000
         BNO   @RF00400                                         01S0400 01061000
*               AP1QUIT=ON;         /* STOP TESTING                  */ 01062000
         OI    AP1QUIT(AP1REG),B'00001000'                      01S0401 01063000
*             ELSE                                              01S0402 01064000
*               ;                   /* NO ERROR                      */ 01065000
@RF00400 DS    0H                                               01S0403 01066000
*           END;                                                01S0403 01067000
*         ELSE                                                  01S0404 01068000
*           ;                       /* NOT LAST TRACK                */ 01069000
@RF00397 DS    0H                                               01S0405 01070000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 01071000
         B     CE0001@                                          01S0405 01072000
*     END WRT;                      /* END OF SUBCASE                */ 01073000
*                                                               01S0406 01074000
*     /***************************************************************/ 01075000
*     /*                                                             */ 01076000
*     /* RR01: READ CE CYLINDER                                      */ 01077000
*     /*                                                             */ 01078000
*     /***************************************************************/ 01079000
*                                                               01S0407 01080000
*RR01:                                                          01S0407 01081000
*     DO;                           /* SUBCASE CHECK READ OF REC 0      01082000
*                                      AND 1                         */ 01083000
RR01     DS    0H                                               01S0408 01084000
*/*   CHECKS FOR SEEK VERIFY CHECKS, DATA CHECKS, OTHER I/O ERRORS AND  01085000
*     COMPARES COUNTS AND DATA READ                             01S0408 01086000
*     UPDATES HEAD TABLE                                             */ 01087000
*                                                               01S0408 01088000
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */ 01089000
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0408 01090000
         BE    @RF00408                                         01S0408 01091000
*         AP1PRERR=ON;              /* INDICATE ERROR                */ 01092000
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0409 01093000
*       ELSE                                                    01S0410 01094000
*         ;                         /* I/O OK                        */ 01095000
@RF00408 DS    0H                                               01S0411 01096000
*       IF AP1PRERR=ON THEN         /* ERROR                         */ 01097000
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0411 01098000
         BNO   @RF00411                                         01S0411 01099000
*         DO;                                                   01S0412 01100000
*           AP1PRCOD=PRR01ER;       /* RR01 ERR MSG                  */ 01101000
         MVI   AP1PRCOD(AP1REG),X'11'                           01S0413 01102000
*           CALL ERROR2;            /* ANALYZE ERROR AND SET FLAGS   */ 01103000
         BAL   @14,ERROR2                                       01S0414 01104000
*         END;                                                  01S0415 01105000
*       ELSE                        /* NO HARDWARE DETECTED ERROR    */ 01106000
*         DO;                                                   01S0416 01107000
         B     @RC00411                                         01S0416 01108000
@RF00411 DS    0H                                               01S0417 01109000
*           BUFPTR=AP1BUFAD;        /* POINT TO COUNT READ ON R0     */ 01110000
*                                                               01S0417 01111000
         L     @10,AP1BUFAD(,AP1REG)                            01S0417 01112000
         ST    @10,BUFPTR                                       01S0417 01113000
*           /*********************************************************/ 01114000
*           /*                                                       */ 01115000
*           /* BUILD EXPECTED R0 COUNT FOR COMPARE                   */ 01116000
*           /*                                                       */ 01117000
*           /*********************************************************/ 01118000
*                                                               01S0418 01119000
*           AP1WRKA->CNTCCHH=CECCHH;/* CCHH                          */ 01120000
         L     @09,AP1WRKA(,AP1REG)                             01S0418 01121000
         MVC   CNTCCHH(4,@09),CECCHH(AP1REG)                    01S0418 01122000
*           AP1WRKA->CNTRKDD=R0DL8; /* RKDD                          */ 01123000
         MVC   CNTRKDD(4,@09),@CB00292                          01S0419 01124000
*           IF BUFPTR->CNT=AP1WRKA->CNT THEN/* R0 OK                 */ 01125000
         CLC   CNT(8,@10),CNT(@09)                              01S0420 01126000
         BNE   @RF00420                                         01S0420 01127000
*             DO;                                               01S0421 01128000
*               BUFPTR=BUFPTR+LENGTH(CNT);/* POINT TO COUNT OF R1       01129000
*                                      READ                          */ 01130000
*                                                               01S0422 01131000
         LA    @15,8                                            01S0422 01132000
         ALR   @10,@15                                          01S0422 01133000
         ST    @10,BUFPTR                                       01S0422 01134000
*               /*****************************************************/ 01135000
*               /*                                                   */ 01136000
*               /* BUILD EXPECTED R1 COUNT FOR COMPARE               */ 01137000
*               /*                                                   */ 01138000
*               /*****************************************************/ 01139000
*                                                               01S0423 01140000
*               AP1WRKA->CNTRKDD=R1DL256;/* RKDD                     */ 01141000
         MVC   CNTRKDD(4,@09),@CB00294                          01S0423 01142000
*               IF BUFPTR->CNT=AP1WRKA->CNT THEN/* R1 COUNT OK       */ 01143000
         CLC   CNT(8,@10),CNT(@09)                              01S0424 01144000
         BNE   @RF00424                                         01S0424 01145000
*                 DO;                                           01S0425 01146000
*                   BUFPTR=BUFPTR+LENGTH(CNT);/* POINT TO R1 DATA    */ 01147000
*                                                               01S0426 01148000
         ALR   @10,@15                                          01S0426 01149000
         ST    @10,BUFPTR                                       01S0426 01150000
*                   /*************************************************/ 01151000
*                   /*                                               */ 01152000
*                   /* BUILD EXPECTED DATA FOR COMPARE               */ 01153000
*                   /*                                               */ 01154000
*                   /*************************************************/ 01155000
*                                                               01S0427 01156000
*                   IF AP1PTRN2=OFF THEN/* PATTERN ONE               */ 01157000
         TM    AP1PTRN2(AP1REG),B'10000000'                     01S0427 01158000
         BNZ   @RF00427                                         01S0427 01159000
*                     AP1WRKA->BYTE8=R1DATA1;                   01S0428 01160000
         MVC   BYTE8(8,@09),R1DATA1                             01S0428 01161000
*                   ELSE            /* PATTERN TWO                   */ 01162000
*                     AP1WRKA->BYTE8=R1DATA2;                   01S0429 01163000
         B     @RC00427                                         01S0429 01164000
@RF00427 L     @10,AP1WRKA(,AP1REG)                             01S0429 01165000
         MVC   BYTE8(8,@10),R1DATA2                             01S0429 01166000
*                   IF BUFPTR->BYTE8=AP1WRKA->BYTE8 THEN        01S0430 01167000
@RC00427 L     @10,AP1WRKA(,AP1REG)                             01S0430 01168000
         L     @09,BUFPTR                                       01S0430 01169000
         CLC   BYTE8(8,@09),BYTE8(@10)                          01S0430 01170000
         BE    @RT00430                                         01S0430 01171000
*                     ;             /* EVERYTHING COMPARES           */ 01172000
*                   ELSE            /* DATA DOESNT COMPARE           */ 01173000
*                     DATACOMP=ON;  /* SET IN TABLE                  */ 01174000
         L     @10,AP1ETABA(,AP1REG)                            01S0432 01175000
         OI    DATACOMP(@10),B'00001000'                        01S0432 01176000
*                 END;                                          01S0433 01177000
*               ELSE                /* R1 COUNT DOESNT COMPARE       */ 01178000
*                 DATACOMP=ON;      /* SET IN TABLE                  */ 01179000
         B     @RC00424                                         01S0434 01180000
@RF00424 L     @10,AP1ETABA(,AP1REG)                            01S0434 01181000
         OI    DATACOMP(@10),B'00001000'                        01S0434 01182000
*             END;                                              01S0435 01183000
*           ELSE                    /* R0 COUNT DOESNT COMPARE       */ 01184000
*             DATACOMP=ON;          /* SET IN TABLE                  */ 01185000
         B     @RC00420                                         01S0436 01186000
@RF00420 L     @10,AP1ETABA(,AP1REG)                            01S0436 01187000
         OI    DATACOMP(@10),B'00001000'                        01S0436 01188000
*           IF DATACOMP=ON THEN     /* DATA COMPARE ERROR            */ 01189000
@RC00420 L     @10,AP1ETABA(,AP1REG)                            01S0437 01190000
         TM    DATACOMP(@10),B'00001000'                        01S0437 01191000
         BNO   @RF00437                                         01S0437 01192000
*             DO;                                               01S0438 01193000
*               AP1PRCOD=PRR01DC;   /* RR01 DATA COMPARE MESSAGE     */ 01194000
         MVI   AP1PRCOD(AP1REG),X'12'                           01S0439 01195000
*               CALL CVTEBCDX(AP1WRKA,ADDR(AP1PRMSG)+32,LENGTH(CNT));   01196000
         LA    @10,AP1WRKA(,AP1REG)                             01S0440 01197000
         ST    @10,@AL00001                                     01S0440 01198000
         LA    @10,AP1PRMSG(,AP1REG)                            01S0440 01199000
         AL    @10,@CF00289                                     01S0440 01200000
         ST    @10,@AFTEMPS                                     01S0440 01201000
         LA    @10,@AFTEMPS                                     01S0440 01202000
         ST    @10,@AL00001+4                                   01S0440 01203000
         LA    @10,@CF00047                                     01S0440 01204000
         ST    @10,@AL00001+8                                   01S0440 01205000
         LA    @01,@AL00001                                     01S0440 01206000
         BAL   @14,CVTEBCDX                                     01S0440 01207000
*                                   /* CNVT EXPECTED TO EBCDIC       */ 01208000
*               CALL CVTEBCDX(BUFPTR,ADDR(AP1PRMSG)+60,LENGTH(CNT));    01209000
         LA    @10,BUFPTR                                       01S0441 01210000
         ST    @10,@AL00001                                     01S0441 01211000
         LA    @10,AP1PRMSG(,AP1REG)                            01S0441 01212000
         AL    @10,@CF00133                                     01S0441 01213000
         ST    @10,@AFTEMPS                                     01S0441 01214000
         LA    @10,@AFTEMPS                                     01S0441 01215000
         ST    @10,@AL00001+4                                   01S0441 01216000
         LA    @10,@CF00047                                     01S0441 01217000
         ST    @10,@AL00001+8                                   01S0441 01218000
         LA    @01,@AL00001                                     01S0441 01219000
         BAL   @14,CVTEBCDX                                     01S0441 01220000
*                                   /* CNVT RECEIVED TO EBCDIC       */ 01221000
*               AP1PRERR=ON;        /* CAUSE MSG TO BE PRINTED       */ 01222000
*               AP1ERROR=ON;        /* DRIVE PROBLEM                 */ 01223000
         OI    AP1PRERR(AP1REG),B'00110000'                     01S0443 01224000
*             END;                                              01S0444 01225000
*           ELSE                                                01S0445 01226000
*             ;                     /* ALL DATA COMPARED             */ 01227000
@RF00437 DS    0H                                               01S0446 01228000
*         END;                                                  01S0446 01229000
*       IF CEHH=HI3350HD|CECCHH=HI3344CE THEN/* LAST TRK READ        */ 01230000
@RC00411 CLC   CEHH(2,AP1REG),@CB00314                          01S0447 01231000
         BE    @RT00447                                         01S0447 01232000
         CLC   CECCHH(4,AP1REG),@CB00290                        01S0447 01233000
         BNE   @RF00447                                         01S0447 01234000
@RT00447 DS    0H                                               01S0448 01235000
*         IF AP1PTRN2=OFF THEN      /* JUST READ PTRN ONE            */ 01236000
         TM    AP1PTRN2(AP1REG),B'10000000'                     01S0448 01237000
         BNZ   @RF00448                                         01S0448 01238000
*           DO;                                                 01S0449 01239000
*             AP1TSTNO=AP1TSTNO-3;  /* GO BACK TO WRITE PTRN 2       */ 01240000
         SLR   @10,@10                                          01S0450 01241000
         IC    @10,AP1TSTNO(,AP1REG)                            01S0450 01242000
         SL    @10,@CF00137                                     01S0450 01243000
         STC   @10,AP1TSTNO(,AP1REG)                            01S0450 01244000
*             AP1PTRN2=ON;          /* TELL WRITE PTRN 2             */ 01245000
         OI    AP1PTRN2(AP1REG),B'10000000'                     01S0451 01246000
*           END;                                                01S0452 01247000
*         ELSE                      /* JUST READ PTRN TWO            */ 01248000
*           DO;                                                 01S0453 01249000
         B     @RC00448                                         01S0453 01250000
@RF00448 DS    0H                                               01S0454 01251000
*             AP1TSTNO=AP1TSTNO+1;  /* INCR TO NEXT TEST             */ 01252000
         LA    @10,1                                            01S0454 01253000
         SLR   @09,@09                                          01S0454 01254000
         IC    @09,AP1TSTNO(,AP1REG)                            01S0454 01255000
         ALR   @10,@09                                          01S0454 01256000
         STC   @10,AP1TSTNO(,AP1REG)                            01S0454 01257000
*             IF AP1ERROR=ON THEN   /* ERROR IN READ                 */ 01258000
         TM    AP1ERROR(AP1REG),B'00100000'                     01S0455 01259000
         BNO   @RF00455                                         01S0455 01260000
*               AP1QUIT=ON;         /* STOP TESTING                  */ 01261000
         OI    AP1QUIT(AP1REG),B'00001000'                      01S0456 01262000
*             ELSE                                              01S0457 01263000
*               ;                   /* NO ERROR                      */ 01264000
@RF00455 DS    0H                                               01S0458 01265000
*           END;                                                01S0458 01266000
*       ELSE                                                    01S0459 01267000
*         ;                         /* NOT FINISHED YET              */ 01268000
@RF00447 DS    0H                                               01S0460 01269000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 01270000
         B     CE0001@                                          01S0460 01271000
*     END RR01;                     /* END OF SUBCASE                */ 01272000
*                                                               01S0461 01273000
*     /***************************************************************/ 01274000
*     /*                                                             */ 01275000
*     /* RDMT: READ MULTI-TRACK                                      */ 01276000
*     /*                                                             */ 01277000
*     /***************************************************************/ 01278000
*                                                               01S0462 01279000
*RDMT:                                                          01S0462 01280000
*     DO;                           /* SUBCASE CHECKS MULTI TRK READ */ 01281000
RDMT     DS    0H                                               01S0463 01282000
*/*   CHECKS FOR I/O ERRORS AND COMPARES COUNTS READ                 */ 01283000
*                                                               01S0463 01284000
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */ 01285000
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0463 01286000
         BE    @RF00463                                         01S0463 01287000
*         AP1PRERR=ON;              /* INDICATE ERROR                */ 01288000
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0464 01289000
*       ELSE                                                    01S0465 01290000
*         ;                         /* I/O OK                        */ 01291000
@RF00463 DS    0H                                               01S0466 01292000
*       IF AP1PRERR=ON THEN         /* I/O ERROR                     */ 01293000
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0466 01294000
         BNO   @RF00466                                         01S0466 01295000
*         DO;                                                   01S0467 01296000
*           AP1PRCOD=PRDMTER;       /* RDMT ERROR MSG                */ 01297000
         MVI   AP1PRCOD(AP1REG),X'13'                           01S0468 01298000
*           AP1ERROR=ON;            /* DRIVE FAILURE                 */ 01299000
*           AP1QUIT=ON;             /* STOP TESTING                  */ 01300000
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0470 01301000
*         END;                                                  01S0471 01302000
*       ELSE                        /* NO HDWE DETECTED ERROR        */ 01303000
*         DO;                                                   01S0472 01304000
         B     @RC00466                                         01S0472 01305000
@RF00466 DS    0H                                               01S0473 01306000
*           BUFPTR=AP1BUFAD;        /* POINT TO R0 COUNT             */ 01307000
*                                                               01S0473 01308000
         L     @10,AP1BUFAD(,AP1REG)                            01S0473 01309000
         ST    @10,BUFPTR                                       01S0473 01310000
*           /*********************************************************/ 01311000
*           /*                                                       */ 01312000
*           /* BUILD EXPECTED R0 COUNT FOR COMPARE                   */ 01313000
*           /*                                                       */ 01314000
*           /*********************************************************/ 01315000
*                                                               01S0474 01316000
*           AP1WRKA->CNTCCHH=CECCHH;/* CCHH                          */ 01317000
         L     @09,AP1WRKA(,AP1REG)                             01S0474 01318000
         MVC   CNTCCHH(4,@09),CECCHH(AP1REG)                    01S0474 01319000
*           AP1WRKA->CNTRKDD=R0DL8; /* RKDD                          */ 01320000
         MVC   CNTRKDD(4,@09),@CB00292                          01S0475 01321000
*           IF BUFPTR->CNT=AP1WRKA->CNT THEN/* R0 OK                 */ 01322000
         CLC   CNT(8,@10),CNT(@09)                              01S0476 01323000
         BNE   @RF00476                                         01S0476 01324000
*             DO;                                               01S0477 01325000
*               BUFPTR=BUFPTR+LENGTH(CNT);/* POINT TO FIRST R1 COUNT */ 01326000
*                                                               01S0478 01327000
         AL    @10,@CF00047                                     01S0478 01328000
         ST    @10,BUFPTR                                       01S0478 01329000
*               /*****************************************************/ 01330000
*               /*                                                   */ 01331000
*               /* BUILD EXPECTED R1 COUNT                           */ 01332000
*               /*                                                   */ 01333000
*               /*****************************************************/ 01334000
*                                                               01S0479 01335000
*               AP1WRKA->CNTRKDD=R1DL256;/* RKDD                     */ 01336000
         MVC   CNTRKDD(4,@09),@CB00294                          01S0479 01337000
*               DO WHILE AP1WRKA->CNTHH<=HI3344HD&AP1ERROR=OFF;/*       01338000
*                                      CHECK TRACKS 0 TO 11          */ 01339000
         B     @DE00480                                         01S0480 01340000
@DL00480 DS    0H                                               01S0481 01341000
*                 IF BUFPTR->CNT^=AP1WRKA->CNT THEN/* COMPARE ERROR  */ 01342000
         L     @10,AP1WRKA(,AP1REG)                             01S0481 01343000
         L     @09,BUFPTR                                       01S0481 01344000
         CLC   CNT(8,@09),CNT(@10)                              01S0481 01345000
         BE    @RF00481                                         01S0481 01346000
*                   AP1ERROR=ON;    /* DRIVE PROBLEM                 */ 01347000
         OI    AP1ERROR(AP1REG),B'00100000'                     01S0482 01348000
*                 ELSE              /* COUNT OK                      */ 01349000
*                   DO;                                         01S0483 01350000
         B     @RC00481                                         01S0483 01351000
@RF00481 DS    0H                                               01S0484 01352000
*                     BUFPTR=BUFPTR+LENGTH(CNT);/* TO NEXT COUNT     */ 01353000
         LA    @10,8                                            01S0484 01354000
         AL    @10,BUFPTR                                       01S0484 01355000
         ST    @10,BUFPTR                                       01S0484 01356000
*                     AP1WRKA->CNTHH=AP1WRKA->CNTHH+1;/* NEXT TRACK  */ 01357000
         L     @10,AP1WRKA(,AP1REG)                             01S0485 01358000
         LA    @09,1                                            01S0485 01359000
         SLR   @15,@15                                          01S0485 01360000
         ICM   @15,3,CNTHH(@10)                                 01S0485 01361000
         ALR   @09,@15                                          01S0485 01362000
         STCM  @09,3,CNTHH(@10)                                 01S0485 01363000
*                   END;                                        01S0486 01364000
*               END;                /* DO WHILE                      */ 01365000
@RC00481 DS    0H                                               01S0487 01366000
@DE00480 L     @10,AP1WRKA(,AP1REG)                             01S0487 01367000
         CLC   CNTHH(2,@10),@CB00316                            01S0487 01368000
         BH    @DC00480                                         01S0487 01369000
         TM    AP1ERROR(AP1REG),B'00100000'                     01S0487 01370000
         BZ    @DL00480                                         01S0487 01371000
@DC00480 DS    0H                                               01S0488 01372000
*               IF AP1ERROR=OFF THEN/* NO ERRORS SO FAR              */ 01373000
         TM    AP1ERROR(AP1REG),B'00100000'                     01S0488 01374000
         BNZ   @RF00488                                         01S0488 01375000
*                 DO;                                           01S0489 01376000
*                   AP1WRKA->CNTHH=HI3344HD;/* BACK TO HD 11         */ 01377000
         L     @10,AP1WRKA(,AP1REG)                             01S0490 01378000
         MVC   CNTHH(2,@10),@CB00316                            01S0490 01379000
*                   IF BUFPTR->CNT^=AP1WRKA->CNT THEN/* RCKD READ       01380000
*                                      WRONG COUNT                   */ 01381000
         L     @09,BUFPTR                                       01S0491 01382000
         CLC   CNT(8,@09),CNT(@10)                              01S0491 01383000
         BE    @RF00491                                         01S0491 01384000
*                     AP1ERROR=ON;  /* DRIVE FAILURE                 */ 01385000
         OI    AP1ERROR(AP1REG),B'00100000'                     01S0492 01386000
*                   ELSE                                        01S0493 01387000
*                     ;             /* COUNT OK                      */ 01388000
@RF00491 DS    0H                                               01S0494 01389000
*                 END;                                          01S0494 01390000
*               ELSE                                            01S0495 01391000
*                 ;                 /* ERROR ALLREADY                */ 01392000
@RF00488 DS    0H                                               01S0496 01393000
*             END;                                              01S0496 01394000
*           ELSE                    /* R0 COUNT BAD                  */ 01395000
*             AP1ERROR=ON;          /* DRIVE FAILURE                 */ 01396000
         B     @RC00476                                         01S0497 01397000
@RF00476 OI    AP1ERROR(AP1REG),B'00100000'                     01S0497 01398000
*           IF AP1ERROR=ON THEN     /* DATA COMPARE ERROR            */ 01399000
@RC00476 TM    AP1ERROR(AP1REG),B'00100000'                     01S0498 01400000
         BNO   @RF00498                                         01S0498 01401000
*             DO;                                               01S0499 01402000
*               AP1PRCOD=PRDMTDC;   /* RDMT DATA COMPARE MESSAGE     */ 01403000
         MVI   AP1PRCOD(AP1REG),X'14'                           01S0500 01404000
*               CALL CVTEBCDX(AP1WRKA,ADDR(AP1PRMSG)+32,LENGTH(CNT));   01405000
         LA    @10,AP1WRKA(,AP1REG)                             01S0501 01406000
         ST    @10,@AL00001                                     01S0501 01407000
         LA    @10,AP1PRMSG(,AP1REG)                            01S0501 01408000
         AL    @10,@CF00289                                     01S0501 01409000
         ST    @10,@AFTEMPS                                     01S0501 01410000
         LA    @10,@AFTEMPS                                     01S0501 01411000
         ST    @10,@AL00001+4                                   01S0501 01412000
         LA    @10,@CF00047                                     01S0501 01413000
         ST    @10,@AL00001+8                                   01S0501 01414000
         LA    @01,@AL00001                                     01S0501 01415000
         BAL   @14,CVTEBCDX                                     01S0501 01416000
*                                   /* CNVT EXPECTED TO EBCDIC       */ 01417000
*               CALL CVTEBCDX(BUFPTR,ADDR(AP1PRMSG)+60,LENGTH(CNT));    01418000
         LA    @10,BUFPTR                                       01S0502 01419000
         ST    @10,@AL00001                                     01S0502 01420000
         LA    @10,AP1PRMSG(,AP1REG)                            01S0502 01421000
         AL    @10,@CF00133                                     01S0502 01422000
         ST    @10,@AFTEMPS                                     01S0502 01423000
         LA    @10,@AFTEMPS                                     01S0502 01424000
         ST    @10,@AL00001+4                                   01S0502 01425000
         LA    @10,@CF00047                                     01S0502 01426000
         ST    @10,@AL00001+8                                   01S0502 01427000
         LA    @01,@AL00001                                     01S0502 01428000
         BAL   @14,CVTEBCDX                                     01S0502 01429000
*                                   /* CNVT RECEIVED TO EBCDIC       */ 01430000
*               AP1PRERR=ON;        /* CAUSE MSG TO BE PRINTED       */ 01431000
*               AP1QUIT=ON;         /* STOP TESTING                  */ 01432000
         OI    AP1PRERR(AP1REG),B'00011000'                     01S0504 01433000
*             END;                                              01S0505 01434000
*           ELSE                                                01S0506 01435000
*             ;                     /* DATA COMPARED OK              */ 01436000
@RF00498 DS    0H                                               01S0507 01437000
*         END;                                                  01S0507 01438000
*       AP1TSTNO=AP1TSTNO+1;        /* GO TO NEXT TEST               */ 01439000
@RC00466 LA    @10,1                                            01S0508 01440000
         SLR   @09,@09                                          01S0508 01441000
         IC    @09,AP1TSTNO(,AP1REG)                            01S0508 01442000
         ALR   @10,@09                                          01S0508 01443000
         STC   @10,AP1TSTNO(,AP1REG)                            01S0508 01444000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 01445000
         B     CE0001@                                          01S0509 01446000
*     END RDMT;                     /* END OF SUBCASE                */ 01447000
*                                                               01S0510 01448000
*     /***************************************************************/ 01449000
*     /*                                                             */ 01450000
*     /* FTWRT: FULL TRACK WRITE                                     */ 01451000
*     /*                                                             */ 01452000
*     /***************************************************************/ 01453000
*                                                               01S0511 01454000
*FTWRT:                                                         01S0511 01455000
*     DO;                           /* SUBCASE CHECKS FULL TRACK        01456000
*                                      WRITE                         */ 01457000
FTWRT    DS    0H                                               01S0512 01458000
*/*   CHECKS FOR I/O ERRORS                                          */ 01459000
*                                                               01S0512 01460000
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */ 01461000
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0512 01462000
         BE    @RF00512                                         01S0512 01463000
*         AP1PRERR=ON;              /* INDICATE ERROR                */ 01464000
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0513 01465000
*       ELSE                                                    01S0514 01466000
*         ;                         /* I/O OK                        */ 01467000
@RF00512 DS    0H                                               01S0515 01468000
*       AP1TSTNO=AP1TSTNO+1;        /* INCREMENT TO NEXT TEST        */ 01469000
         LA    @10,1                                            01S0515 01470000
         SLR   @09,@09                                          01S0515 01471000
         IC    @09,AP1TSTNO(,AP1REG)                            01S0515 01472000
         ALR   @10,@09                                          01S0515 01473000
         STC   @10,AP1TSTNO(,AP1REG)                            01S0515 01474000
*       IF AP1PRERR=ON THEN         /* I/O ERROR                     */ 01475000
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0516 01476000
         BNO   @RF00516                                         01S0516 01477000
*         DO;                                                   01S0517 01478000
*           AP1ERROR=ON;            /* DRIVE PROBLEM                 */ 01479000
*           AP1QUIT=ON;             /* STOP TESTING                  */ 01480000
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0519 01481000
*           AP1PRCOD=PFTWRTER;      /* FTWRT ERROR MSG               */ 01482000
         MVI   AP1PRCOD(AP1REG),X'15'                           01S0520 01483000
*         END;                                                  01S0521 01484000
*       ELSE                                                    01S0522 01485000
*         ;                         /* NO ERROR                      */ 01486000
@RF00516 DS    0H                                               01S0523 01487000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 01488000
         B     CE0001@                                          01S0523 01489000
*     END FTWRT;                    /* END OF SUBCASE                */ 01490000
*                                                               01S0524 01491000
*     /***************************************************************/ 01492000
*     /*                                                             */ 01493000
*     /* AMDET: ADDRESS MARK DETECT                                  */ 01494000
*     /*                                                             */ 01495000
*     /***************************************************************/ 01496000
*                                                               01S0525 01497000
*AMDET:                                                         01S0525 01498000
*     DO;                           /* SUBCASE CHECK AM DETECTION    */ 01499000
AMDET    DS    0H                                               01S0526 01500000
*/*   CHECKS FOR I/O ERRORS AND COMPARES COUNT READ                  */ 01501000
*                                                               01S0526 01502000
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */ 01503000
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0526 01504000
         BE    @RF00526                                         01S0526 01505000
*         AP1PRERR=ON;              /* INDICATE ERROR                */ 01506000
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0527 01507000
*       ELSE                                                    01S0528 01508000
*         ;                         /* I/O OK                        */ 01509000
@RF00526 DS    0H                                               01S0529 01510000
*       AP1TSTNO=AP1TSTNO+1;        /* GO TO NEXT TEST               */ 01511000
         LA    @10,1                                            01S0529 01512000
         SLR   @09,@09                                          01S0529 01513000
         IC    @09,AP1TSTNO(,AP1REG)                            01S0529 01514000
         ALR   @10,@09                                          01S0529 01515000
         STC   @10,AP1TSTNO(,AP1REG)                            01S0529 01516000
*       IF AP1PRERR=ON THEN         /* I/O ERROR                     */ 01517000
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0530 01518000
         BNO   @RF00530                                         01S0530 01519000
*         DO;                                                   01S0531 01520000
*           AP1PRCOD=PAMDETER;      /* AMDET ERROR MSG               */ 01521000
         MVI   AP1PRCOD(AP1REG),X'16'                           01S0532 01522000
*           AP1ERROR=ON;            /* DRIVE PROBLEM                 */ 01523000
*           AP1QUIT=ON;             /* STOP TESTING                  */ 01524000
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0534 01525000
*         END;                                                  01S0535 01526000
*       ELSE                        /* NO HDWE DETECTED ERROR        */ 01527000
*         IF(AP1BUFAD+LENGTH(CNT))->CNT^=(AP1BUFAD+LENGTH(CNT)*2)->CNT  01528000
*           THEN                    /* READ WRONG RECORD             */ 01529000
         B     @RC00530                                         01S0536 01530000
@RF00530 L     @10,AP1BUFAD(,AP1REG)                            01S0536 01531000
         CLC   CNT+8(8,@10),CNT+16(@10)                         01S0536 01532000
         BE    @RF00536                                         01S0536 01533000
*           DO;                                                 01S0537 01534000
*             AP1PRCOD=PAMDETDC;    /* AMDET DATA COMPARE ERROR MSG  */ 01535000
         MVI   AP1PRCOD(AP1REG),X'17'                           01S0538 01536000
*             CALL CVTEBCDX(BUFPTR,ADDR(AP1PRMSG)+33,LENGTH(CNT));/*    01537000
*                                      CNVT EXPECTED TP EBCDIC       */ 01538000
         LA    @10,BUFPTR                                       01S0539 01539000
         ST    @10,@AL00001                                     01S0539 01540000
         LA    @10,AP1PRMSG(,AP1REG)                            01S0539 01541000
         AL    @10,@CF00283                                     01S0539 01542000
         ST    @10,@AFTEMPS                                     01S0539 01543000
         LA    @10,@AFTEMPS                                     01S0539 01544000
         ST    @10,@AL00001+4                                   01S0539 01545000
         LA    @10,@CF00047                                     01S0539 01546000
         ST    @10,@AL00001+8                                   01S0539 01547000
         LA    @01,@AL00001                                     01S0539 01548000
         BAL   @14,CVTEBCDX                                     01S0539 01549000
*             CALL CVTEBCDX(BUFPTR+LENGTH(CNT)*2,ADDR(AP1PRMSG)+61,     01550000
*                 LENGTH(CNT));     /* CNVT RECEIVED TO EBCDIC       */ 01551000
         LA    @10,16                                           01S0540 01552000
         AL    @10,BUFPTR                                       01S0540 01553000
         ST    @10,@AFTEMPS                                     01S0540 01554000
         LA    @10,@AFTEMPS                                     01S0540 01555000
         ST    @10,@AL00001                                     01S0540 01556000
         LA    @10,AP1PRMSG(,AP1REG)                            01S0540 01557000
         AL    @10,@CF00457                                     01S0540 01558000
         ST    @10,@AFTEMPS+4                                   01S0540 01559000
         LA    @10,@AFTEMPS+4                                   01S0540 01560000
         ST    @10,@AL00001+4                                   01S0540 01561000
         LA    @10,@CF00047                                     01S0540 01562000
         ST    @10,@AL00001+8                                   01S0540 01563000
         LA    @01,@AL00001                                     01S0540 01564000
         BAL   @14,CVTEBCDX                                     01S0540 01565000
*             AP1ERROR=ON;          /* DRIVE PROBLEM                 */ 01566000
*             AP1PRERR=ON;          /* PRINT MSG                     */ 01567000
*             AP1QUIT=ON;           /* STOP TESTING                  */ 01568000
         OI    AP1ERROR(AP1REG),B'00111000'                     01S0543 01569000
*           END;                                                01S0544 01570000
*         ELSE                                                  01S0545 01571000
*           ;                       /* RECORD CORRECT                */ 01572000
@RF00536 DS    0H                                               01S0546 01573000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 01574000
         B     CE0001@                                          01S0546 01575000
*     END AMDET;                    /* END OF SUBCASE                */ 01576000
*                                                               01S0547 01577000
*     /***************************************************************/ 01578000
*     /*                                                             */ 01579000
*     /* WRTPAD: FORMAT WRITE PADDING                                */ 01580000
*     /*                                                             */ 01581000
*     /***************************************************************/ 01582000
*                                                               01S0548 01583000
*WRTPAD:                                                        01S0548 01584000
*     DO;                           /* SUBCASE CHECKS WRITE PAD TEST */ 01585000
WRTPAD   DS    0H                                               01S0549 01586000
*/*   CHECKS FOR I/O ERRORS AND TO SEE THAT ONLY RECORD ONE READ     */ 01587000
*                                                               01S0549 01588000
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */ 01589000
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0549 01590000
         BE    @RF00549                                         01S0549 01591000
*         AP1PRERR=ON;              /* INDICATE ERROR                */ 01592000
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0550 01593000
*       ELSE                                                    01S0551 01594000
*         ;                         /* I/O OK                        */ 01595000
@RF00549 DS    0H                                               01S0552 01596000
*       AP1TSTNO=AP1TSTNO+1;        /* GO TO NEXT TEST               */ 01597000
         LA    @10,1                                            01S0552 01598000
         SLR   @09,@09                                          01S0552 01599000
         IC    @09,AP1TSTNO(,AP1REG)                            01S0552 01600000
         ALR   @10,@09                                          01S0552 01601000
         STC   @10,AP1TSTNO(,AP1REG)                            01S0552 01602000
*       IF AP1PRERR=ON THEN         /* I/O ERROR                     */ 01603000
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0553 01604000
         BNO   @RF00553                                         01S0553 01605000
*         DO;                                                   01S0554 01606000
*           AP1PRCOD=PWPADER;       /* WRTPAD ERROR MSG              */ 01607000
         MVI   AP1PRCOD(AP1REG),X'1C'                           01S0555 01608000
*           AP1ERROR=ON;            /* DRIVE FAILURE                 */ 01609000
*           AP1QUIT=ON;             /* STOP TESTING                  */ 01610000
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0557 01611000
*         END;                                                  01S0558 01612000
*       ELSE                        /* NO HDWE DETECTED ERROR        */ 01613000
*         IF(AP1BUFAD+LENGTH(CNT)*2)->CNT^=AP1BUFAD->CNT THEN/* READ    01614000
*                                      OVERWRITTEN RECORD            */ 01615000
         B     @RC00553                                         01S0559 01616000
@RF00553 L     @10,AP1BUFAD(,AP1REG)                            01S0559 01617000
         LA    @09,16                                           01S0559 01618000
         ALR   @09,@10                                          01S0559 01619000
         CLC   CNT(8,@09),CNT(@10)                              01S0559 01620000
         BE    @RF00559                                         01S0559 01621000
*           DO;                                                 01S0560 01622000
*             AP1PRCOD=PWPADDC;     /* WRTPAD WRONG RECORD           */ 01623000
         MVI   AP1PRCOD(AP1REG),X'1D'                           01S0561 01624000
*             CALL CVTEBCDX(AP1BUFAD+LENGTH(CNT)*2,ADDR(AP1PRMSG)+33,   01625000
*                 LENGTH(CNT));     /* CNVT EXPECTED TO EBCDIC       */ 01626000
         ST    @09,@AFTEMPS                                     01S0562 01627000
         LA    @10,@AFTEMPS                                     01S0562 01628000
         ST    @10,@AL00001                                     01S0562 01629000
         LA    @10,AP1PRMSG(,AP1REG)                            01S0562 01630000
         AL    @10,@CF00283                                     01S0562 01631000
         ST    @10,@AFTEMPS+4                                   01S0562 01632000
         LA    @10,@AFTEMPS+4                                   01S0562 01633000
         ST    @10,@AL00001+4                                   01S0562 01634000
         LA    @10,@CF00047                                     01S0562 01635000
         ST    @10,@AL00001+8                                   01S0562 01636000
         LA    @01,@AL00001                                     01S0562 01637000
         BAL   @14,CVTEBCDX                                     01S0562 01638000
*             CALL CVTEBCDX(AP1BUFAD+LENGTH(CNT)*3,ADDR(AP1PRMSG)+61,   01639000
*                 LENGTH(CNT));     /* CNVT RECEIVED TO EBCDIC       */ 01640000
         LA    @10,24                                           01S0563 01641000
         AL    @10,AP1BUFAD(,AP1REG)                            01S0563 01642000
         ST    @10,@AFTEMPS                                     01S0563 01643000
         LA    @10,@AFTEMPS                                     01S0563 01644000
         ST    @10,@AL00001                                     01S0563 01645000
         LA    @10,AP1PRMSG(,AP1REG)                            01S0563 01646000
         AL    @10,@CF00457                                     01S0563 01647000
         ST    @10,@AFTEMPS+4                                   01S0563 01648000
         LA    @10,@AFTEMPS+4                                   01S0563 01649000
         ST    @10,@AL00001+4                                   01S0563 01650000
         LA    @10,@CF00047                                     01S0563 01651000
         ST    @10,@AL00001+8                                   01S0563 01652000
         LA    @01,@AL00001                                     01S0563 01653000
         BAL   @14,CVTEBCDX                                     01S0563 01654000
*             AP1ERROR=ON;          /* DRIVE PROBLEM                 */ 01655000
*             AP1PRERR=ON;          /* PRINT MSG                     */ 01656000
*             AP1QUIT=ON;           /* STOP TESTING                  */ 01657000
         OI    AP1ERROR(AP1REG),B'00111000'                     01S0566 01658000
*           END;                                                01S0567 01659000
*         ELSE                                                  01S0568 01660000
*           ;                       /* CORRECT RECORD                */ 01661000
@RF00559 DS    0H                                               01S0569 01662000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 01663000
         B     CE0001@                                          01S0569 01664000
*     END WRTPAD;                   /* END OF SUBCASE                */ 01665000
*                                                               01S0570 01666000
*     /***************************************************************/ 01667000
*     /*                                                             */ 01668000
*     /* SD: SKIP DEFECTS                                            */ 01669000
*     /*                                                             */ 01670000
*     /***************************************************************/ 01671000
*                                                               01S0571 01672000
*SD:                                                            01S0571 01673000
*     DO;                           /* SUBCASE CHKS SKIP DEFECT      */ 01674000
SD       DS    0H                                               01S0572 01675000
*/*   CHECKS FOR I/O ERRORS                                          */ 01676000
*                                                               01S0572 01677000
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */ 01678000
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0572 01679000
         BE    @RF00572                                         01S0572 01680000
*         AP1PRERR=ON;              /* INDICATE ERROR                */ 01681000
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0573 01682000
*       ELSE                                                    01S0574 01683000
*         ;                         /* I/O OK                        */ 01684000
@RF00572 DS    0H                                               01S0575 01685000
*       IF AP1PRERR=ON THEN         /* I/O ERROR                     */ 01686000
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0575 01687000
         BNO   @RF00575                                         01S0575 01688000
*         DO;                                                   01S0576 01689000
*           AP1ERROR=ON;            /* DRIVE PROBLEM                 */ 01690000
         OI    AP1ERROR(AP1REG),B'00100000'                     01S0577 01691000
*           AP1PRCOD=PSDER;         /* SD ERROR MSG                  */ 01692000
         MVI   AP1PRCOD(AP1REG),X'18'                           01S0578 01693000
*         END;                                                  01S0579 01694000
*       ELSE                                                    01S0580 01695000
*         ;                         /* NO I/O ERROR                  */ 01696000
@RF00575 DS    0H                                               01S0581 01697000
*       AP1TSTNO=AP1TSTNO+1;        /* INCR TO NEXT TEST             */ 01698000
         LA    @10,1                                            01S0581 01699000
         SLR   @09,@09                                          01S0581 01700000
         IC    @09,AP1TSTNO(,AP1REG)                            01S0581 01701000
         ALR   @10,@09                                          01S0581 01702000
         STC   @10,AP1TSTNO(,AP1REG)                            01S0581 01703000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 01704000
         B     CE0001@                                          01S0582 01705000
*     END SD;                       /* END OF SUBCASE                */ 01706000
*                                                               01S0583 01707000
*     /***************************************************************/ 01708000
*     /*                                                             */ 01709000
*     /* CLEANUP: RESTORE CE CYL TRK 1                               */ 01710000
*     /*                                                             */ 01711000
*     /***************************************************************/ 01712000
*                                                               01S0584 01713000
*CLEANUP:                                                       01S0584 01714000
*     DO;                           /* SUBCASE                       */ 01715000
CLEANUP  DS    0H                                               01S0585 01716000
*/*   CHECKS FOR I/O ERRORS                                          */ 01717000
*                                                               01S0585 01718000
*       IF AP1PCODE^=NRMC THEN      /* ERROR                         */ 01719000
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0585 01720000
         BE    @RF00585                                         01S0585 01721000
*         AP1PRERR=ON;              /* INDICATE ERROR                */ 01722000
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0586 01723000
*       ELSE                                                    01S0587 01724000
*         ;                         /* NO ERROR                      */ 01725000
@RF00585 DS    0H                                               01S0588 01726000
*       AP1LST=ON;                  /* LAST TEST                     */ 01727000
         OI    AP1LST(AP1REG),B'01000000'                       01S0588 01728000
*       IF AP1PRERR=ON THEN         /* CLEANUP FAILED                */ 01729000
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0589 01730000
         BNO   @RF00589                                         01S0589 01731000
*         DO;                                                   01S0590 01732000
*           AP1ERROR=ON;            /* DRIVE FAILURE                 */ 01733000
*           AP1QUIT=ON;             /* STOP TESTING                  */ 01734000
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0592 01735000
*           AP1PRCOD=PCLNERR;       /* ERROR MSG                     */ 01736000
         MVI   AP1PRCOD(AP1REG),X'21'                           01S0593 01737000
*         END;                                                  01S0594 01738000
*       ELSE                                                    01S0595 01739000
*         ;                         /* OK                            */ 01740000
@RF00589 DS    0H                                               01S0596 01741000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 01742000
         B     CE0001@                                          01S0596 01743000
*     END CLEANUP;                  /* END OF SUBCASE                */ 01744000
*CE0001@:                                                       01S0598 01745000
*   END;                            /* END OF CASE                   */ 01746000
         EJECT                                                          01747000
*                                                               01S0599 01748000
*   /*****************************************************************/ 01749000
*   /*                                                               */ 01750000
*   /* CVTEBCDX: PROCEDURE                                           */ 01751000
*   /*                                                               */ 01752000
*   /*****************************************************************/ 01753000
*                                                               01S0599 01754000
*CVTEBCDX:                                                      01S0599 01755000
*   PROC(INAREA,OUTAREA,BYTES);     /* INTERNAL TO AP1 PROC          */ 01756000
*                                                               01S0599 01757000
         B     @PB00002                                         01S0599 01758000
CVTEBCDX STM   @14,@12,@SA00002                                 01S0599 01759000
         MVC   @PC00002(12),0(@01)                              01S0599 01760000
*   /*****************************************************************/ 01761000
*   /*                                                               */ 01762000
*   /* CONVERTS BINARY DATA IN STORAGE TO EBCDIC DATA IN STORAGE     */ 01763000
*   /* INAREA IS AREA CONTAINING BINARY DATA. OUTAREA IS AREA TO     */ 01764000
*   /* CONTAIN EBCDIC DATA IN THE FORM XXXX XXXX.... BYTES IS NUMBER */ 01765000
*   /* OF BYTES IN INAREA.                                           */ 01766000
*   /*                                                               */ 01767000
*   /*****************************************************************/ 01768000
*                                                               01S0600 01769000
*   RFY                                                         01S0600 01770000
*    (GPR00F,                                                   01S0600 01771000
*     GPR01P) RSTD;                                             01S0600 01772000
*   DO COUNTER=1 TO(BYTES/2);       /* TWO BYTES AT A TIME           */ 01773000
         LA    COUNTER,1                                        01S0601 01774000
         B     @DE00601                                         01S0601 01775000
@DL00601 DS    0H                                               01S0602 01776000
*     GPR00F=INAREA->FIXED16(COUNTER);/* GET HALFWORD OF BINARY      */ 01777000
         LR    @10,COUNTER                                      01S0602 01778000
         ALR   @10,@10                                          01S0602 01779000
         L     @09,@PC00002                                     01S0602 01780000
         L     @09,INAREA(,@09)                                 01S0602 01781000
         BCTR  @09,0                                            01S0602 01782000
         BCTR  @09,0                                            01S0602 01783000
         LH    GPR00F,FIXED16(@10,@09)                          01S0602 01784000
         N     GPR00F,@CF00505                                  01S0602 01785000
*     GPR01P=OUTAREA+(5*(COUNTER-1));/* AREA FOR EBCDIC              */ 01786000
         L     @10,@PC00002+4                                   01S0603 01787000
         LR    GPR01P,COUNTER                                   01S0603 01788000
         BCTR  GPR01P,0                                         01S0603 01789000
         MH    GPR01P,@CH00083                                  01S0603 01790000
         AL    GPR01P,OUTAREA(,@10)                             01S0603 01791000
*     CALL CVTEBCD;                 /* CONVERTS TO EBCDIC            */ 01792000
         BAL   @14,CVTEBCD                                      01S0604 01793000
*   END;                            /* OF DO                         */ 01794000
         AL    COUNTER,@CF00043                                 01S0605 01795000
@DE00601 L     @10,@PC00002+8                                   01S0605 01796000
         L     @04,BYTES(,@10)                                  01S0605 01797000
         SRDA  @04,32                                           01S0605 01798000
         D     @04,@CF00058                                     01S0605 01799000
         CR    COUNTER,@05                                      01S0605 01800000
         BNH   @DL00601                                         01S0605 01801000
*   RFY                                                         01S0606 01802000
*    (GPR00F,                                                   01S0606 01803000
*     GPR01P) UNRSTD;                                           01S0606 01804000
*   END;                            /* OF CVTEBCDX PROC              */ 01805000
@EL00002 DS    0H                                               01S0607 01806000
@EF00002 DS    0H                                               01S0607 01807000
@ER00002 LM    @14,@12,@SA00002                                 01S0607 01808000
         BR    @14                                              01S0607 01809000
         EJECT                                                          01810000
*                                                               01S0608 01811000
*   /*****************************************************************/ 01812000
*   /*                                                               */ 01813000
*   /* ERROR1: PROCEDURE                                             */ 01814000
*   /*                                                               */ 01815000
*   /*****************************************************************/ 01816000
*                                                               01S0608 01817000
*ERROR1:                                                        01S0608 01818000
*   PROC;                           /* INTERNAL TO AP1 PROC          */ 01819000
*                                                               01S0608 01820000
ERROR1   STM   @14,@12,12(@13)                                  01S0608 01821000
*   /*****************************************************************/ 01822000
*   /*                                                               */ 01823000
*   /* INTERPRETS ERRORS FOR READ HA NOT ON CE CYL TURNS BITS ON IN  */ 01824000
*   /* HEAD ERROR TABLE-- DCK FOR A DATA CHECK AND SKVERCK FOR A SEEK*/ 01825000
*   /* VERIFY CHECK--IF NEITHER, TURNS ON AP1QUIT                    */ 01826000
*   /*                                                               */ 01827000
*   /*****************************************************************/ 01828000
*                                                               01S0609 01829000
*   AP1ERROR=ON;                    /* INDICATE DRIVE FAILURE        */ 01830000
         OI    AP1ERROR(AP1REG),B'00100000'                     01S0609 01831000
*   IF AP1PCODE=ERRC&CSWUNCHK=ON&(CSWADDRB-LENGTH(CCW))->CCWCOMCD(1)=   01832000
*       RDHA THEN                   /* UNIT CHECK ON THE READ HA     */ 01833000
         CLI   AP1PCODE(AP1REG),X'41'                           01S0610 01834000
         BNE   @RF00610                                         01S0610 01835000
         LA    @10,AP1CSW(,AP1REG)                              01S0610 01836000
         BCTR  @10,0                                            01S0610 01837000
         TM    CSWUNCHK(@10),B'00000010'                        01S0610 01838000
         BNO   @RF00610                                         01S0610 01839000
         L     @10,CSWADDRB-1(,@10)                             01S0610 01840000
         AL    @10,@CF00504                                     01S0610 01841000
         CLI   CCWCOMCD(@10),26                                 01S0610 01842000
         BNE   @RF00610                                         01S0610 01843000
*     IF SNSDATA=ON|(SNSEQU=ON&SNS7=FMT10&(SNS17&NDFMSK)=NDF) THEN/*    01844000
*                                      DATA CHECK                    */ 01845000
         LA    @10,188                                          01S0611 01846000
         ALR   @10,AP1REG                                       01S0611 01847000
         TM    SNSDATA(@10),B'00001000'                         01S0611 01848000
         BO    @RT00611                                         01S0611 01849000
         TM    SNSEQU(@10),B'00010000'                          01S0611 01850000
         BNO   @RF00611                                         01S0611 01851000
         CLI   SNS7(@10),X'10'                                  01S0611 01852000
         BNE   @RF00611                                         01S0611 01853000
         MVC   @TS00001(1),SNS17(@10)                           01S0611 01854000
         NI    @TS00001,X'FE'                                   01S0611 01855000
         CLI   @TS00001,X'C0'                                   01S0611 01856000
         BNE   @RF00611                                         01S0611 01857000
@RT00611 DS    0H                                               01S0612 01858000
*       DCK=ON;                     /* INDICATE IN TABLE             */ 01859000
         L     @10,AP1ETABA(,AP1REG)                            01S0612 01860000
         OI    DCK(@10),B'10000000'                             01S0612 01861000
*     ELSE                          /* NOT DATA CHECK                */ 01862000
*       IF SNS7=SKCHK7&((AP1DEVTP=AP13344&SNSSKCK=ON)|(AP1DEVTP^=       01863000
*           AP13344&SNSEQU=ON)) THEN/* SEEK VERIFY ERROR             */ 01864000
         B     @RC00611                                         01S0613 01865000
@RF00611 LA    @10,188                                          01S0613 01866000
         ALR   @10,AP1REG                                       01S0613 01867000
         CLI   SNS7(@10),X'1A'                                  01S0613 01868000
         BNE   @RF00613                                         01S0613 01869000
         CLI   AP1DEVTP(AP1REG),3                               01S0613 01870000
         BNE   @GL00029                                         01S0613 01871000
         TM    SNSSKCK(@10),B'00000001'                         01S0613 01872000
         BO    @RT00613                                         01S0613 01873000
@GL00029 CLI   AP1DEVTP(AP1REG),3                               01S0613 01874000
         BE    @RF00613                                         01S0613 01875000
         TM    SNSEQU+188(AP1REG),B'00010000'                   01S0613 01876000
         BNO   @RF00613                                         01S0613 01877000
@RT00613 DS    0H                                               01S0614 01878000
*         SKVERCK=ON;               /* INDICATE IN TABLE             */ 01879000
         L     @10,AP1ETABA(,AP1REG)                            01S0614 01880000
         OI    SKVERCK(@10),B'01000000'                         01S0614 01881000
*       ELSE                        /* NOT DCK OR SKVERCK            */ 01882000
*         AP1QUIT=ON;               /* STOP TESTING                  */ 01883000
         B     @RC00613                                         01S0615 01884000
@RF00613 OI    AP1QUIT(AP1REG),B'00001000'                      01S0615 01885000
*   ELSE                            /* NOT DCK OR SKVERCK ON RHA     */ 01886000
*     AP1QUIT=ON;                   /* STOP TESTING                  */ 01887000
         B     @RC00610                                         01S0616 01888000
@RF00610 OI    AP1QUIT(AP1REG),B'00001000'                      01S0616 01889000
*   END;                            /* OR ERROR1 PROC                */ 01890000
@EL00003 DS    0H                                               01S0617 01891000
@EF00003 DS    0H                                               01S0617 01892000
@ER00003 LM    @14,@12,12(@13)                                  01S0617 01893000
         BR    @14                                              01S0617 01894000
         EJECT                                                          01895000
*                                                               01S0618 01896000
*   /*****************************************************************/ 01897000
*   /*                                                               */ 01898000
*   /* ERROR2: PROCEDURE                                             */ 01899000
*   /*                                                               */ 01900000
*   /*****************************************************************/ 01901000
*                                                               01S0618 01902000
*ERROR2:                                                        01S0618 01903000
*   PROC;                           /* INTERNAL TO AP1 PROC          */ 01904000
*                                                               01S0618 01905000
ERROR2   STM   @14,@12,12(@13)                                  01S0618 01906000
*   /*****************************************************************/ 01907000
*   /*                                                               */ 01908000
*   /* INTERPRETS ERRORS FOR READ HA ON CE CYL SETS BITS IN HEAD     */ 01909000
*   /* ERROR TABLE-- SETS DCKCE FOR DATA CHECK AND SKVERCK FOR SEEK  */ 01910000
*   /* VERIFY CHECK--IF NEITHER, SETS AP1QUIT                        */ 01911000
*   /*                                                               */ 01912000
*   /*****************************************************************/ 01913000
*                                                               01S0619 01914000
*   AP1ERROR=ON;                    /* INDICATE DRIVE FAILURE        */ 01915000
         OI    AP1ERROR(AP1REG),B'00100000'                     01S0619 01916000
*   IF AP1PCODE=ERRC&CSWUNCHK=ON&(CSWADDRB-LENGTH(CCW))->CCWRD(1)=ON&(  01917000
*       CSWADDRB-LENGTH(CCW))->CCWWR(1)=OFF THEN/* UNIT CHK ON READ  */ 01918000
         CLI   AP1PCODE(AP1REG),X'41'                           01S0620 01919000
         BNE   @RF00620                                         01S0620 01920000
         LA    @10,AP1CSW(,AP1REG)                              01S0620 01921000
         BCTR  @10,0                                            01S0620 01922000
         TM    CSWUNCHK(@10),B'00000010'                        01S0620 01923000
         BNO   @RF00620                                         01S0620 01924000
         L     @10,CSWADDRB-1(,@10)                             01S0620 01925000
         AL    @10,@CF00504                                     01S0620 01926000
         TM    CCWRD(@10),B'00000010'                           01S0620 01927000
         BNO   @RF00620                                         01S0620 01928000
         TM    CCWWR(@10),B'00000001'                           01S0620 01929000
         BNZ   @RF00620                                         01S0620 01930000
*     IF SNSDATA=ON|(SNSEQU=ON&SNS7=FMT10&(SNS17&NDFMSK)=NDF) THEN/*    01931000
*                                      DATA CHECK                    */ 01932000
         LA    @10,188                                          01S0621 01933000
         ALR   @10,AP1REG                                       01S0621 01934000
         TM    SNSDATA(@10),B'00001000'                         01S0621 01935000
         BO    @RT00621                                         01S0621 01936000
         TM    SNSEQU(@10),B'00010000'                          01S0621 01937000
         BNO   @RF00621                                         01S0621 01938000
         CLI   SNS7(@10),X'10'                                  01S0621 01939000
         BNE   @RF00621                                         01S0621 01940000
         MVC   @TS00001(1),SNS17(@10)                           01S0621 01941000
         NI    @TS00001,X'FE'                                   01S0621 01942000
         CLI   @TS00001,X'C0'                                   01S0621 01943000
         BNE   @RF00621                                         01S0621 01944000
@RT00621 DS    0H                                               01S0622 01945000
*       DCKCE=ON;                   /* SET IN TABLE                  */ 01946000
         L     @10,AP1ETABA(,AP1REG)                            01S0622 01947000
         OI    DCKCE(@10),B'00010000'                           01S0622 01948000
*     ELSE                          /* NOT DATA CHECK                */ 01949000
*       IF SNS7=SKCHK7&((AP1DEVTP=AP13344&SNSSKCK=ON)|(AP1DEVTP^=       01950000
*           AP13344&SNSEQU=ON)) THEN                            01S0623 01951000
         B     @RC00621                                         01S0623 01952000
@RF00621 LA    @10,188                                          01S0623 01953000
         ALR   @10,AP1REG                                       01S0623 01954000
         CLI   SNS7(@10),X'1A'                                  01S0623 01955000
         BNE   @RF00623                                         01S0623 01956000
         CLI   AP1DEVTP(AP1REG),3                               01S0623 01957000
         BNE   @GL00038                                         01S0623 01958000
         TM    SNSSKCK(@10),B'00000001'                         01S0623 01959000
         BO    @RT00623                                         01S0623 01960000
@GL00038 CLI   AP1DEVTP(AP1REG),3                               01S0623 01961000
         BE    @RF00623                                         01S0623 01962000
         TM    SNSEQU+188(AP1REG),B'00010000'                   01S0623 01963000
         BNO   @RF00623                                         01S0623 01964000
@RT00623 DS    0H                                               01S0624 01965000
*         SKVERCK=ON;               /* SET IN TABLE                  */ 01966000
         L     @10,AP1ETABA(,AP1REG)                            01S0624 01967000
         OI    SKVERCK(@10),B'01000000'                         01S0624 01968000
*       ELSE                        /* NOT DCK OR SKVERCK            */ 01969000
*         AP1QUIT=ON;               /* STOP TESTING                  */ 01970000
         B     @RC00623                                         01S0625 01971000
@RF00623 OI    AP1QUIT(AP1REG),B'00001000'                      01S0625 01972000
*   ELSE                            /* NOT UCK ON RHA                */ 01973000
*     AP1QUIT=ON;                   /* STOP TESTING                  */ 01974000
         B     @RC00620                                         01S0626 01975000
@RF00620 OI    AP1QUIT(AP1REG),B'00001000'                      01S0626 01976000
*   END;                            /* OF ERROR2 PROC                */ 01977000
@EL00004 DS    0H                                               01S0627 01978000
@EF00004 DS    0H                                               01S0627 01979000
@ER00004 LM    @14,@12,12(@13)                                  01S0627 01980000
         BR    @14                                              01S0627 01981000
         EJECT                                                          01982000
*                                                               01S0628 01983000
*   /*****************************************************************/ 01984000
*   /*                                                               */ 01985000
*   /* CVTEBCD: PROCEDURE                                            */ 01986000
*   /*                                                               */ 01987000
*   /*****************************************************************/ 01988000
*                                                               01S0628 01989000
*CVTEBCD:                                                       01S0628 01990000
*   PROC;                           /* INTERNAL TO AP1CHK PROC       */ 01991000
*                                                               01S0628 01992000
CVTEBCD  STM   @14,@12,@SA00005                                 01S0628 01993000
*   /*****************************************************************/ 01994000
*   /*                                                               */ 01995000
*   /* CONVERTS BINARY TO EBCDIC REG0 CONTAINS HALFWORD OF BINARY    */ 01996000
*   /* INFO (SIGN IGNORED)..REG1 POINTS TO FULLWORD TO CONTAIN EBCDIC*/ 01997000
*   /* REPRESENTATION                                                */ 01998000
*   /*                                                               */ 01999000
*   /*****************************************************************/ 02000000
*                                                               01S0629 02001000
*   RFY                                                         01S0629 02002000
*    (GPR00F,                                                   01S0629 02003000
*     GPR01P,                                                   01S0629 02004000
*     GPR02F,                                                   01S0629 02005000
*     GPR03F) RSTD;                                             01S0629 02006000
*   GENERATE REFS(ALPHACNV);                                    01S0630 02007000
*                      INPUT =   0000WXYZ                               02008000
         SLL   @00,12            0WXYZ000                               02009000
         ST    @00,0(@01)                                               02010000
         UNPK  0(4,@01),0(3,@01) FWFXFY0Z                               02011000
         OI    3(@01),X'F0'      FWFXFYFZ                               02012000
         LA    @00,4             LOOP COUNTER                           02013000
LOOPEBCD CLI   0(@01),X'F9'      IS IT A NUMBER                         02014000
         BNH   NUMBER                                                   02015000
         IC    @02,0(@01)        GET CHARACTER                          02016000
         SH    @02,ALPHACNV      CHANGE TO ALPHA                        02017000
         STC   @02,0(@01)        PUT IT BACK                            02018000
NUMBER   LA    @01,1(@01)        GO TO NEXT CHAR                        02019000
         BCT   @00,LOOPEBCD      AGAIN                                  02020000
*   RFY                                                         01S0631 02021000
*    (GPR00F,                                                   01S0631 02022000
*     GPR01P,                                                   01S0631 02023000
*     GPR02F,                                                   01S0631 02024000
*     GPR03F) UNRSTD;                                           01S0631 02025000
*   END;                            /* OF CVTEBCD PROC               */ 02026000
*                                                               01S0632 02027000
@EL00005 DS    0H                                               01S0632 02028000
@EF00005 DS    0H                                               01S0632 02029000
@ER00005 LM    @14,@12,@SA00005                                 01S0632 02030000
         BR    @14                                              01S0632 02031000
@PB00005 DS    0H                                               01S0633 02032000
*   /*****************************************************************/ 02033000
*   /*                                                               */ 02034000
*   /* DECLARES FOR MACROS                                           */ 02035000
*   /*                                                               */ 02036000
*   /*****************************************************************/ 02037000
*                                                               01S0633 02038000
*   DCL                                                         01S0633 02039000
*     1 I056 DEF(ILIST) BDY(WORD) CHAR(32767),/* LIST FOR ENQ        */ 02040000
*       3 I05600 PTR(31),           /* TCB ADDR IF BOTH TCB AND ECB  */ 02041000
*       3 I05601 PTR(31),           /* TCB OR ECB ADDRESS            */ 02042000
*       3 I05602(*) CHAR(12) BDY(WORD),/* ARRAY OF RESOURCE ELEMENTS */ 02043000
*         5 I05603 BIT(8),          /* BIT FLAGS 1                   */ 02044000
*         5 I05604 PTR(8),          /* MINOR RESOURCE NAME LENGTH    */ 02045000
*         5 I05605 BIT(8),          /* BIT FLAGS 2                   */ 02046000
*         5 I05655 CHAR(1),         /* CONTROL PGM USE               */ 02047000
*         5 I05606 PTR(31),         /* MAJOR RESOURCE NAME ADDR      */ 02048000
*         5 I05607 PTR(31);         /* MINOR RESOURCE NAME ADDR      */ 02049000
*   DECLARE                                                     01S0634 02050000
*     ILIST CHAR(16) BDY(DWORD);    /* STANDARD LIST                 */ 02051000
*   DECLARE                         /* COMMON VARIABLES              */ 02052000
*     I256C CHAR(256) BASED,                                    01S0635 02053000
*     I031F FIXED(31) BASED,                                    01S0635 02054000
*     I031P PTR(31) BASED,                                      01S0635 02055000
*     I015F FIXED(15) BASED,                                    01S0635 02056000
*     I015P PTR(15) BASED,                                      01S0635 02057000
*     I008P PTR(8) BASED,                                       01S0635 02058000
*     I001C CHAR(1) BASED;          /* GENERATE DSECTS FOR MACROS    */ 02059000
*                                                               01S0635 02060000
*   /*****************************************************************/ 02061000
*   /*                                                               */ 02062000
*   /* PATCH AREA                                                    */ 02063000
*   /*                                                               */ 02064000
*   /*****************************************************************/ 02065000
*                                                               01S0636 02066000
*   GEN DATA DEFS(PATCH);                                       01S0636 02067000
*   END                             /* OF IAPCHKIO PROC              */ 02068000
*                                                               01S0637 02069000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 02070000
*/*%INCLUDE SYSLIB  (AP1BLOCK)                                       */ 02071000
*/*%INCLUDE SYSUT5  (CVTBIN  )                                       */ 02072000
*                                                               01S0637 02073000
*       ;                                                       01S0637 02074000
@EL00001 L     @13,4(,@13)                                      01S0637 02075000
@EF00001 DS    0H                                               01S0637 02076000
@ER00001 LM    @14,@12,12(@13)                                  01S0637 02077000
         BR    @14                                              01S0637 02078000
@DATA    DS    0H                                                       02079000
@CH00083 DC    H'5'                                                     02080000
@CH00318 DC    H'50'                                                    02081000
@CH00421 DC    XL2'0135'                                                02082000
@DATD    DSECT                                                          02083000
         DS    0F                                                       02084000
@SA00001 DS    18F                                                      02085000
@SA00005 DS    15F                                                      02086000
@SA00002 DS    15F                                                      02087000
@PC00002 DS    3F                                                       02088000
@AL00001 DS    3A                                                       02089000
@AFTEMPS DS    2F                                                       02090000
IAPCHKIO CSECT                                                          02091000
         DS    0F                                                       02092000
@CF00043 DC    F'1'                                                     02093000
@CF00058 DC    F'2'                                                     02094000
@CF00137 DC    F'3'                                                     02095000
@CF00038 DC    F'4'                                                     02096000
@CF00047 DC    F'8'                                                     02097000
@CF00411 DC    F'25'                                                    02098000
@CF00289 DC    F'32'                                                    02099000
@CF00283 DC    F'33'                                                    02100000
@CF00450 DC    F'41'                                                    02101000
@CF00133 DC    F'60'                                                    02102000
@CF00457 DC    F'61'                                                    02103000
@CF00504 DC    F'-8'                                                    02104000
@CF00415 DC    XL4'C0000000'                                            02105000
@CF00420 DC    XL4'00000FDF'                                            02106000
@CF00423 DC    XL4'00000FC0'                                            02107000
@CF00424 DC    XL4'0000003F'                                            02108000
@CF00505 DC    XL4'0000FFFF'                                            02109000
@CF00422 DC    XL4'3135'                                                02110000
@DATD    DSECT                                                          02111000
         DS    0D                                                       02112000
BUFPTR   DS    A                                                        02113000
@TS00001 DS    CL1                                                      02114000
         DS    CL3                                                      02115000
ILIST    DS    CL16                                                     02116000
IAPCHKIO CSECT                                                          02117000
         NOPR  ((@ENDDATD-@DATD)/257*16)                                02118000
         DS    0F                                                       02119000
@SIZDATD DC    AL1(0)                                                   02120000
         DC    AL3(@ENDDATD-@DATD)                                      02121000
         DS    0D                                                       02122000
ALPHACNV DC    XL2'39'                                                  02123000
ALPHACV2 DC    XL2'B7'                                                  02124000
@CB00290 DC    X'0AF0000B'                                              02125000
@CB00292 DC    X'00000008'                                              02126000
@CB00294 DC    X'01000100'                                              02127000
@CB00327 DC    X'00040009'                                              02128000
@CB00329 DC    X'000E000B'                                              02129000
@CB00440 DC    X'0002001D'                                              02130000
@CB00441 DC    X'00030012'                                              02131000
@CB00442 DC    X'000A000A'                                              02132000
@CB00314 DC    X'001D'                                                  02133000
@CB00316 DC    X'000B'                                                  02134000
ZERO     DC    X'0000000000000000'                                      02135000
TBL3344  DC    X'02222A3203232B3304242C3405252D3506262E3607272F37102028C02136000
               3011212931141C383C15391D3D163A1E3E173B1F3F00'            02137000
QNAME    DC    CL8'AP1QNAME'                                            02138000
R1DATA1  DS    CL256                                                    02139000
         ORG   R1DATA1                                                  02140000
@NM00013 DS    CL64                                                     02141000
         ORG   @NM00013                                                 02142000
@NM00014 DC    8X'EB6DB6DB'                                             02143000
         DC    2X'FFFFFFFF'                                             02144000
         DC    2X'AAAAAAAA'                                             02145000
         DC    2X'FFFFFFFF'                                             02146000
         DC    2X'AAAAAAAA'                                             02147000
         ORG   R1DATA1+64                                               02148000
@NM00015 DS    CL64                                                     02149000
         ORG   @NM00015                                                 02150000
@NM00016 DC    8X'EB6DB6DB'                                             02151000
         DC    2X'FFFFFFFF'                                             02152000
         DC    2X'AAAAAAAA'                                             02153000
         DC    2X'FFFFFFFF'                                             02154000
         DC    2X'AAAAAAAA'                                             02155000
         ORG   R1DATA1+128                                              02156000
@NM00017 DS    CL64                                                     02157000
         ORG   @NM00017                                                 02158000
@NM00018 DC    8X'EB6DB6DB'                                             02159000
         DC    2X'FFFFFFFF'                                             02160000
         DC    2X'AAAAAAAA'                                             02161000
         DC    2X'FFFFFFFF'                                             02162000
         DC    2X'AAAAAAAA'                                             02163000
         ORG   R1DATA1+192                                              02164000
@NM00019 DS    CL64                                                     02165000
         ORG   @NM00019                                                 02166000
@NM00020 DC    8X'EB6DB6DB'                                             02167000
         DC    2X'FFFFFFFF'                                             02168000
         DC    2X'AAAAAAAA'                                             02169000
         DC    2X'FFFFFFFF'                                             02170000
         DC    2X'AAAAAAAA'                                             02171000
         ORG   R1DATA1+256                                              02172000
R1DATA2  DS    CL256                                                    02173000
         ORG   R1DATA2                                                  02174000
@NM00021 DC    X'AAAAAAAAAAAAAAAAAAAA'                                  02175000
@NM00022 DC    X'FFFFFFFFFFFFFFFFAAAAAAAAAAAAAAAA'                      02176000
         DS    14XL16                                                   02177000
@NM00023 DC    X'FFFFFFFFFFFF'                                          02178000
         ORG   R1DATA2+256                                              02179000
         DS    CL3                                                      02180000
CP0001@  DC    AL4(RECAL1)                                              02181000
         DC    AL4(SNS)                                                 02182000
         DC    AL4(RECAL2)                                              02183000
         DC    AL4(RET)                                                 02184000
         DC    AL4(RHAMH)                                               02185000
         DC    AL4(RET)                                                 02186000
         DC    AL4(RHAFH)                                               02187000
         DC    AL4(RPS)                                                 02188000
         DC    AL4(SK192)                                               02189000
         DC    AL4(SKINCR)                                              02190000
         DC    AL4(SKMAX)                                               02191000
         DC    AL4(RET)                                                 02192000
         DC    AL4(SKRAN)                                               02193000
         DC    AL4(RET)                                                 02194000
         DC    AL4(RHA)                                                 02195000
         DC    AL4(RET)                                                 02196000
         DC    AL4(WRT)                                                 02197000
         DC    AL4(RET)                                                 02198000
         DC    AL4(RR01)                                                02199000
         DC    AL4(RDMT)                                                02200000
         DC    AL4(FTWRT)                                               02201000
         DC    AL4(AMDET)                                               02202000
         DC    AL4(WRTPAD)                                              02203000
         DC    AL4(SD)                                                  02204000
         DC    AL4(CLEANUP)                                             02205000
IAPCHKIO CSECT                                                          02206000
*                                /*  PATCH AREA  */                     02207000
         CNOP  0,4               FULLWORD BDWY                          02208000
PATCH    DC    2XL((*-@MAINENT)/40)'0' FIVE PERCENT.                    02209000
@DATD    DSECT                                                          02210000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                02211000
@ENDDATD EQU   *                                                        02212000
IAPCHKIO CSECT                                                          02213000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02214000
@01      EQU   01                                                       02215000
@02      EQU   02                                                       02216000
@03      EQU   03                                                       02217000
@04      EQU   04                                                       02218000
@05      EQU   05                                                       02219000
@06      EQU   06                                                       02220000
@07      EQU   07                                                       02221000
@08      EQU   08                                                       02222000
@09      EQU   09                                                       02223000
@10      EQU   10                                                       02224000
@11      EQU   11                                                       02225000
@12      EQU   12                                                       02226000
@13      EQU   13                                                       02227000
@14      EQU   14                                                       02228000
@15      EQU   15                                                       02229000
COUNTER  EQU   @02                                                      02230000
CCUSAV   EQU   @03                                                      02231000
TBLPTR   EQU   @02                                                      02232000
AP1REG   EQU   @08                                                      02233000
GPR00F   EQU   @00                                                      02234000
GPR01P   EQU   @01                                                      02235000
GPR01F   EQU   @01                                                      02236000
GPR02F   EQU   @02                                                      02237000
GPR03F   EQU   @03                                                      02238000
GPR13P   EQU   @13                                                      02239000
GPR15F   EQU   @15                                                      02240000
GPR15P   EQU   @15                                                      02241000
AP1BLOCK EQU   0                                                        02242000
AP1PRINT EQU   AP1BLOCK+8                                               02243000
AP1PRMSG EQU   AP1PRINT+1                                               02244000
AP1PRCOD EQU   AP1BLOCK+139                                             02245000
AP1PFLG1 EQU   AP1BLOCK+144                                             02246000
AP1CNCOD EQU   AP1BLOCK+145                                             02247000
AP1WRKA  EQU   AP1BLOCK+156                                             02248000
AP1CCWA  EQU   AP1BLOCK+160                                             02249000
AP1BUFAD EQU   AP1BLOCK+164                                             02250000
AP1TIMFL EQU   AP1BLOCK+176                                             02251000
AP1TIMFA EQU   AP1TIMFL                                                 02252000
AP1PCODE EQU   AP1BLOCK+180                                             02253000
AP1CSW   EQU   AP1BLOCK+181                                             02254000
AP1SNS   EQU   AP1BLOCK+188                                             02255000
AP1SEEK  EQU   AP1BLOCK+213                                             02256000
CCHHR    EQU   AP1SEEK+3                                                02257000
CCHH     EQU   CCHHR                                                    02258000
HH       EQU   CCHH+2                                                   02259000
AP1CESK  EQU   AP1BLOCK+221                                             02260000
CECCHHR  EQU   AP1CESK+2                                                02261000
CECCHH   EQU   CECCHHR                                                  02262000
CEHH     EQU   CECCHH+2                                                 02263000
AP1FLG2  EQU   AP1BLOCK+244                                             02264000
AP1NOWR  EQU   AP1FLG2                                                  02265000
AP1FHF   EQU   AP1FLG2                                                  02266000
AP1FLG3  EQU   AP1BLOCK+245                                             02267000
AP1PTRN2 EQU   AP1FLG3                                                  02268000
AP1LST   EQU   AP1FLG3                                                  02269000
AP1ERROR EQU   AP1FLG3                                                  02270000
AP1PRERR EQU   AP1FLG3                                                  02271000
AP1QUIT  EQU   AP1FLG3                                                  02272000
AP1FLG4  EQU   AP1BLOCK+246                                             02273000
AP1ENQD  EQU   AP1FLG4                                                  02274000
AP1TSTNO EQU   AP1BLOCK+249                                             02275000
AP1DEVTP EQU   AP1BLOCK+250                                             02276000
AP1RET   EQU   AP1BLOCK+251                                             02277000
AP1ETABA EQU   AP1BLOCK+252                                             02278000
AP1SKCNT EQU   AP1BLOCK+256                                             02279000
AP1DEVAD EQU   AP1BLOCK+262                                             02280000
AP1ENQAD EQU   AP1BLOCK+266                                             02281000
AP1END   EQU   AP1BLOCK+360                                             02282000
ERRTAB   EQU   0                                                        02283000
DCK      EQU   ERRTAB                                                   02284000
SKVERCK  EQU   ERRTAB                                                   02285000
WRTCK    EQU   ERRTAB                                                   02286000
DCKCE    EQU   ERRTAB                                                   02287000
DATACOMP EQU   ERRTAB                                                   02288000
CCW      EQU   0                                                        02289000
CCWADDRA EQU   CCW                                                      02290000
CCWCOMCD EQU   CCWADDRA                                                 02291000
@NM00005 EQU   CCWCOMCD                                                 02292000
CCWRD    EQU   @NM00005                                                 02293000
CCWWR    EQU   @NM00005                                                 02294000
CCWFLGS  EQU   CCW+4                                                    02295000
WRKAREA  EQU   0                                                        02296000
WRKAD    EQU   WRKAREA                                                  02297000
WRKFLG   EQU   WRKAD                                                    02298000
BYTE1    EQU   0                                                        02299000
BYTE5    EQU   0                                                        02300000
BYTE8    EQU   0                                                        02301000
FIXED16  EQU   0                                                        02302000
CSW      EQU   0                                                        02303000
CSWADDRA EQU   CSW                                                      02304000
CSWADDRB EQU   CSWADDRA+1                                               02305000
CSWSTATS EQU   CSW+4                                                    02306000
CSWSTAT1 EQU   CSWSTATS                                                 02307000
CSWUNCHK EQU   CSWSTAT1                                                 02308000
SNSD     EQU   0                                                        02309000
SNS0     EQU   SNSD                                                     02310000
SNSINT   EQU   SNS0                                                     02311000
SNSEQU   EQU   SNS0                                                     02312000
SNSDATA  EQU   SNS0                                                     02313000
SNSSKCK  EQU   SNS0                                                     02314000
SNS1     EQU   SNSD+1                                                   02315000
SNSINHI  EQU   SNS1                                                     02316000
SNS2     EQU   SNSD+2                                                   02317000
SNSEMU   EQU   SNS2                                                     02318000
SNSFHF   EQU   SNS2                                                     02319000
SNS6     EQU   SNSD+6                                                   02320000
SNS7     EQU   SNSD+7                                                   02321000
SNS17    EQU   SNSD+17                                                  02322000
ECBCC    EQU   0                                                        02323000
CNT      EQU   0                                                        02324000
CNTCCHHR EQU   CNT                                                      02325000
CNTCCHH  EQU   CNTCCHHR                                                 02326000
CNTHH    EQU   CNTCCHH+2                                                02327000
CNTR     EQU   CNTCCHHR+4                                               02328000
CL0001@  EQU   0                                                        02329000
BYTE6    EQU   0                                                        02330000
I001C    EQU   0                                                        02331000
I008P    EQU   0                                                        02332000
I015F    EQU   0                                                        02333000
I015P    EQU   0                                                        02334000
I031F    EQU   0                                                        02335000
I031P    EQU   0                                                        02336000
I256C    EQU   0                                                        02337000
INAREA   EQU   0                                                        02338000
OUTAREA  EQU   0                                                        02339000
BYTES    EQU   0                                                        02340000
@NM00008 EQU   WRKAREA                                                  02341000
WRKHW1   EQU   @NM00008                                                 02342000
CNTRKDD  EQU   CNTR                                                     02343000
CNTKDD   EQU   CNTRKDD                                                  02344000
I056     EQU   ILIST                                                    02345000
I05602   EQU   I056+8                                                   02346000
I05603   EQU   I05602                                                   02347000
I05604   EQU   I05602+1                                                 02348000
I05605   EQU   I05602+2                                                 02349000
I05606   EQU   I05602+4                                                 02350000
I05607   EQU   I05602+8                                                 02351000
CNTHHR   EQU   CNTHH                                                    02352000
HHR      EQU   HH                                                       02353000
ZERO6    EQU   ZERO                                                     02354000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02355000
I05655   EQU   I05602+3                                                 02356000
I05601   EQU   I056+4                                                   02357000
I05600   EQU   I056                                                     02358000
CNTDD    EQU   CNTKDD+1                                                 02359000
CNTK     EQU   CNTKDD                                                   02360000
WRKHW2   EQU   @NM00008+2                                               02361000
@NM00024 EQU   CNT+5                                                    02362000
CNTCC    EQU   CNTCCHH                                                  02363000
ECBPOST  EQU   ECBCC                                                    02364000
ECBWAIT  EQU   ECBCC                                                    02365000
@NM00012 EQU   SNSD+8                                                   02366000
SNSHD1   EQU   SNS6                                                     02367000
SNSHD2   EQU   SNS6                                                     02368000
SNSHD4   EQU   SNS6                                                     02369000
SNSHD8   EQU   SNS6                                                     02370000
SNSHD16  EQU   SNS6                                                     02371000
SNSCYLC  EQU   SNS6                                                     02372000
SNSCYLB  EQU   SNS6                                                     02373000
SNSCYLA  EQU   SNS6                                                     02374000
SNS5     EQU   SNSD+5                                                   02375000
SNS4     EQU   SNSD+4                                                   02376000
SNS3     EQU   SNSD+3                                                   02377000
SNSEDAT  EQU   SNS2                                                     02378000
@NM00011 EQU   SNS2                                                     02379000
SNSCORR  EQU   SNS2                                                     02380000
SNSWRPS  EQU   SNS2                                                     02381000
SNSOFLO  EQU   SNS1                                                     02382000
SNSFP    EQU   SNS1                                                     02383000
SNSNRF   EQU   SNS1                                                     02384000
@NM00010 EQU   SNS1                                                     02385000
SNSEOC   EQU   SNS1                                                     02386000
SNSIFMT  EQU   SNS1                                                     02387000
SNSPERM  EQU   SNS1                                                     02388000
SNSTCC   EQU   SNS0                                                     02389000
SNSOVRN  EQU   SNS0                                                     02390000
SNSBUSO  EQU   SNS0                                                     02391000
SNSCREJ  EQU   SNS0                                                     02392000
CSWBYTE  EQU   CSW+6                                                    02393000
CSWUNEXP EQU   CSWSTAT1                                                 02394000
@NM00009 EQU   CSWSTAT1                                                 02395000
CSWKEY   EQU   CSWADDRA                                                 02396000
WRKAB    EQU   WRKAD+1                                                  02397000
WRKENDFL EQU   WRKFLG                                                   02398000
CCWBYTE  EQU   CCW+6                                                    02399000
@NM00007 EQU   CCW+5                                                    02400000
CCWPCI   EQU   CCWFLGS                                                  02401000
CCWSKIP  EQU   CCWFLGS                                                  02402000
CCWSLI   EQU   CCWFLGS                                                  02403000
CCWCC    EQU   CCWFLGS                                                  02404000
CCWCD    EQU   CCWFLGS                                                  02405000
CCWADDRB EQU   CCWADDRA+1                                               02406000
@NM00006 EQU   @NM00005                                                 02407000
AP1ERRTF EQU   AP1BLOCK+300                                             02408000
AP1ERRTM EQU   AP1BLOCK+270                                             02409000
AP1LSTHH EQU   AP1BLOCK+260                                             02410000
AP1LSTCC EQU   AP1BLOCK+258                                             02411000
AP1DCCNT EQU   AP1BLOCK+248                                             02412000
@NM00004 EQU   AP1BLOCK+247                                             02413000
AP1DEBCH EQU   AP1FLG4                                                  02414000
AP1READ  EQU   AP1FLG4                                                  02415000
AP1NORD  EQU   AP1FLG4                                                  02416000
AP1RDERR EQU   AP1FLG3                                                  02417000
AP1RDTST EQU   AP1FLG3                                                  02418000
AP1VERIF EQU   AP1FLG3                                                  02419000
AP1NOERP EQU   AP1FLG2                                                  02420000
AP1EDP   EQU   AP1FLG2                                                  02421000
AP1IOC   EQU   AP1FLG2                                                  02422000
AP1IOECB EQU   AP1BLOCK+240                                             02423000
AP1IOBA  EQU   AP1BLOCK+236                                             02424000
AP1DEBA  EQU   AP1BLOCK+232                                             02425000
AP1DCBA  EQU   AP1BLOCK+228                                             02426000
CER      EQU   CECCHHR+4                                                02427000
CECC     EQU   CECCHH                                                   02428000
CEBB     EQU   AP1CESK                                                  02429000
R        EQU   CCHHR+4                                                  02430000
CC       EQU   CCHH                                                     02431000
BB       EQU   AP1SEEK+1                                                02432000
M        EQU   AP1SEEK                                                  02433000
AP1FM    EQU   AP1BLOCK+212                                             02434000
AP1TIMIN EQU   AP1TIMFA                                                 02435000
AP1IOACT EQU   AP1TIMFA                                                 02436000
AP1TCBAD EQU   AP1BLOCK+172                                             02437000
AP1TIMEA EQU   AP1BLOCK+168                                             02438000
AP1BUFAB EQU   AP1BUFAD+1                                               02439000
@NM00003 EQU   AP1BUFAD                                                 02440000
AP1CCWAB EQU   AP1CCWA+1                                                02441000
@NM00002 EQU   AP1CCWA                                                  02442000
AP1RECB  EQU   AP1BLOCK+152                                             02443000
@NM00001 EQU   AP1BLOCK+150                                             02444000
AP1CNRPL EQU   AP1BLOCK+146                                             02445000
AP1PRCLS EQU   AP1PFLG1                                                 02446000
AP1PRNP  EQU   AP1PFLG1                                                 02447000
AP1PROPN EQU   AP1PFLG1                                                 02448000
AP1PRLIN EQU   AP1BLOCK+142                                             02449000
AP1PRPAG EQU   AP1BLOCK+140                                             02450000
AP1PRASA EQU   AP1PRINT                                                 02451000
AP1PDCBA EQU   AP1BLOCK+4                                               02452000
AP1HDR   EQU   AP1BLOCK                                                 02453000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02454000
@RC00117 EQU   @RC00116                                                 02455000
@RC00325 EQU   @RC00322                                                 02456000
@RC00375 EQU   @RC00372                                                 02457000
@RC00424 EQU   @RC00420                                                 02458000
@RC00610 EQU   @EL00003                                                 02459000
@RC00620 EQU   @EL00004                                                 02460000
@PB00004 EQU   @PB00005                                                 02461000
@RC00331 EQU   @RC00325                                                 02462000
@RC00326 EQU   @RC00325                                                 02463000
@RC00376 EQU   @RC00375                                                 02464000
@RT00430 EQU   @RC00424                                                 02465000
@RC00613 EQU   @RC00610                                                 02466000
@RC00611 EQU   @RC00610                                                 02467000
@PB00003 EQU   @PB00004                                                 02468000
@RC00623 EQU   @RC00620                                                 02469000
@RC00621 EQU   @RC00620                                                 02470000
@PB00002 EQU   @PB00003                                                 02471000
CE0001@  EQU   @PB00002                                                 02472000
@RC00114 EQU   CE0001@                                                  02473000
@RC00391 EQU   CE0001@                                                  02474000
@RC00447 EQU   CE0001@                                                  02475000
@RC00530 EQU   CE0001@                                                  02476000
@RC00553 EQU   CE0001@                                                  02477000
@RC00448 EQU   @RC00447                                                 02478000
@ENDDATA EQU   *                                                        02479000
         END   IAPCHKIO,(C'PLS1722',0701,77308)                         02480000
