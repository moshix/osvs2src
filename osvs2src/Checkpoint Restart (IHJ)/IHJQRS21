RS21     TITLE 'IHJQRS21 AOS/2 REPMAIN 2 ROUTINE - IGC0605B'            01250000
*                                                                       01300000
* STATUS                                                                01350000
*                                                                       01400000
*    CHANGE LEVEL = 0                                                   01450000
*                                                                       01500000
* FUNCTION                                                              01550000
*                                                                       01600000
*    MODULE NAME - IHJQRS21                                             01650000
*                                                                       01700000
*    THIS MODULE OF THE RESTART FACILITY RECREATES THE CONTENTS         01750000
*    SUPERVISION AND TASK MANAGEMENT CONTROL BLOCKS AS THEY             01800000
*    EXISTED AT CHECKPOINT TIME. EXTENSIVE USE IS MADE OF SYSTEM        01850000
*    FUNCTIONS (LOAD, DELETE AND SPECIALIZED QUEUE SEARCH               01900000
*    ALGORITHMS) TO RECREATE THE LOAD LIST, JOB PACK AREA, REQUEST      01950000
*    BLOCK AN SUPERVISOR CONTROL BLOCK QUEUES                           01960000
*                                                                       01970000
* ENTRY POINTS                                                          01980000
*                                                                       01990000
*    REPMAIN 2 IS ENTERED FROM REPMAIN 1 (IGC0505B) TO PERFORM          01992000
*    THE ABOVE FUNCTION                                                 01994000
*                                                                       01996000
* INPUT                                                                 01998000
*                                                                       01998400
*    GPR 12 - CONTAINS THE ADDRESS OF THE RSTWA.                        01998800
*    THE DECB USED FOR READING THE RESTART DATA SET IS INITIALIZED      01999200
*    TO READ THE SUR'S.                                                 01999600
*    THE ADDRESS OF THE NEXT DATA BLOCK, AND THE NUMBER OF BYTES        01999700
*    LEFT IN THE BUFFER ARE IN THE RSTWA.                               01999800
*                                                                       01999900
* OUTPUT                                                                02049900
*                                                                       02059900
*    SAME AS THE ENTRY PARAMETERS FOR NORMAL EXIT.                      02069900
*                                                                       02079900
*    FOR ERROR EXIT AN ERROR CODE OF:                            Y02076 02089902
*           036 - TO INDICATE AN I/O ERROR ON CHECKPOINT D/S   @ZSUT222 02096937
*           042 - TO INDICATE WLR READ FROM CHECKPOINT D/S.    @ZSUT222 02097037
*           052 - TO INDICATE THAT A MODULE WHICH WAS BEING    @ZSUT222 02097137
*                 USED AT CHECKPOINT TIME IS NO LONGER AVAIL.  @ZSUT222 02097237
*           053 - TO INDICATE THAT A MODULE WHICH WAS BEING    @ZSUT222 02097337
*                 USED AT CHECKPOINT TIME IS LOCATED AT A      @ZSUT222 02097437
*                 DIFFERENT ADDRESS IN THE LPA OR NUCLEUS      @ZSUT222 02097537
*           201 - TO INDICATE A PAGE FIX (PGFIX) ERROR         @ZSUT222 02097637
*           202 - TO INDICATE A SETLOCK ERROR                  @ZSUT222 02097737
*                                                                       02098237
* EXTERNAL REFERENCES                                                   02098300
*                                                                       02098700
*         IEAVVMSR - TO SEARCH LINK PACK AREA DIRECTORY.                02099100
*         IEAQCDSR - TO SEARCH THE ACTIVE LPA QUEUE.                    02099500
*                                                                       02099600
* EXITS,NORMAL                                                          02099700
*                                                                       02099800
*    TO REPMAIN 3 (IGC0705B) TO RESTORE USER AND DATA MANAGEMENT        02149800
*    RELATED CONTROL BLOCKS.                                            02159800
*                                                                       02169800
* EXITS,ERROR                                                           02179800
*                                                                       02189800
*    TO REPMAIN 5 (IGC0905B) TO FREE ANY CONTROL BLOCKS USED BY         02191800
*    RESTART AND TO REINITIALIZE THE REGION FOR TERMINATION.            02193800
*                                                                       02195800
* TABLES/WORK AREAS                                                     02197800
*                                                                       02198200
*    RSTWA                                                              02198600
*                                                                       02199000
*    RPMWA1                                                             02199400
*                                                                       02199500
*    DCB       DCBSYNAD                                                 02199600
*                                                                       02199700
*    CDE       CDATTR                                            Y02076 02249702
*    CDE       CDCHAIN                                                  02259700
*    CDE       CDUSE                                             Y02076 02269702
*    CDE       CDXLMJP                                                  02279700
*    CDE       CDENTPT                                           Y02076 02280702
*                                                                       02289700
*    LLE       LLECHN                                            Y02076 02291702
*    LLE       LLECDPT                                           Y02076 02293702
*                                                                       02295700
*    RB        RBSIZE                                                   02297700
*    RB        RBSTAB1                                           Y02076 02298102
*    RB        RBSTAB2                                           Y02076 02298302
*    RB        RBCDFLGS                                          Y02076 02298402
*    RB        RBCDE1                                            Y02076 02298502
*    RB        RBOPSW                                                   02298900
*    RB        RBLINK                                                   02299300
*                                                                       02349600
*    CVT       CVTABEND                                                 02359600
*    CVT       CVTLPDSR                                          Y02076 02360602
*    CVT       CVTQCDSR                                          Y02076 02361602
*    CVT       CVTQLPAQ                                          Y02076 02362602
*                                                                       02369600
*    SCVT      SCVTSVCT                                                 02379600
*                                                                       02389600
*    SVC TABLE                                                   Y02076 02391602
*                                                                       02395600
*    SCB       SCBCHAIN                                                 02397600
*    SCB       SCBOWBRA                                                 02398000
*    SCB       SCBCODE                                           Y02076 02398202
*                                                                       02398400
*    FOE       FOEFLINK                                                 02398800
*    FOE       FOEFXCT                                           Y02076 02399002
*    FOE       FOEVINDX                                                 02399200
*                                                                       02399300
*    TCB       TCBPKF                                            Y02076 02400302
*                                                                Y02076 02400502
*    XTLST     XTLLNTH                                           Y02076 02400702
*                                                                Y02076 02400902
*    PSA       PSALITA                                           Y02076 02401102
*                                                                       02401302
* ATTRIBUTES                                                            02402302
*                                                                       02449500
*    KEY 0, SUPERVISOR STATE, ENABLED                                   02459500
*                                                                       02469500
* CHARACTER CODE DEPENDENCY                                             02479500
*                                                                       02489500
*    NONE                                                               02491500
*                                                                       02493500
* NOTES                                                                 02495500
*                                                                       02497500
*    THIS MODULE OF RESTART RECREATES THE JOB PACK AREA CDE             02497900
*    QUEUE, THE P/P LLE QUEUE, THE TASK RB QUEUE, AND THE               02498300
*    TASK SCB QUEUE. UPON ENTRY THE FOLLOWING INITIALIZATION            02498700
*    PROCESSING OCCURS.                                                 02499100
*                                                                       02499200
*    - THE @ OF RPMWA1 IS OBTAINED FROM RSTWA                           02499300
*    - THE REPMAIN 2 SYNAD ROUTINE ADDRESS IS PLACED IN THE DCB         02499400
*    - THE DEFAULT EXIT MODULE NAME IS SET TO REPMAIN 3 (IGC0705B)      02549400
*    - THE @ OF THE NEXT DATA BLOCK IS OBTAINED FROM RPMWA1.            02559400
*                                                                       02569400
*                                                                       02579400
*    'RESTORING THE JOB PACK AREA CDE QUEUE (JPQ)'                      02589400
*                                                                       02591400
*    THIS ROUTINE RESTORES THE MAJOR/MINOR JOB PACK AREA CDE            02593400
*    QUEUE AS WELL AS THE EXTENT LIST FOR EACH MODULE LOADED INTO       02595402
*    THE USER REGION. THE RESTORED QUEUE IS ANCHORED IN THE             02597400
*    REPMAIN WORK AREA IN THE EXACT ORDER AS AT CHECKPOINT TIME.        02597800
*                                                                       02598200
*                                                                       02598600
*    'RESTARTING THE P/P LLE CHAIN'                                     02599000
*                                                                       02599100
*    THIS ROUTINE RECREATES THE P/P LLE CHAIN AS IT EXISTED AT          02599200
*    CHECKPOINT TIME. THE RESTORED CHAIN IS ANCHORED TO THE             02599300
*    RPMWA1 LLE QUEUE HEADER. TWO TYPES OF LLE ARE PROCESSED,           02649300
*    THE FIRST TYPE, AN 'LLE WITH A CDE IN THE JPQ' HAS A               02659300
*    POSITION INDEX, CREATED AT CHECKPOINT TIME, TO THE CORRECT         02669300
*    CDE ON THE JPQ. THIS INDEX IS IN THE LLCDPTR FIELD OF THE          02679300
*    LLE. THE SECOND TYPE OF LLE, 'LLE WITH A CDE ON THE ACTIVE         02689300
*    LPAQ', CONTAINS AN APPENDAGE WITH THE ENTRY POINT NAME AND         02691300
*    ADDRESS OF THE 'LOADED' PROGRAM. IN EACH CASE, IT IS NECESSARY     02693300
*    TO FIND THE CDE FOR THE LLE AND RECONSTRUCT THE LLE CHAIN.         02695300
*                                                                       02697300
*                                                                       02697700
*    'RESTARTING THE P/P RB QUEUE'                                      02698100
*                                                                       02698500
*    THIS ROUTINE RECREATES THE RB QUEUE AS IT EXISTED AT               02698900
*    CHECKPOINT TIME. THE RESTORED CHAIN IS ANCHORED TO THE RPMWA1      02699000
*    RB QUEUE HEADER. SEVERAL RB TYPES ARE POSSIBLE, AND EACH           02699100
*    REQUIRES SPECIAL PROCESSING. FOR THOSE RB'S REPRESENTING           02699200
*    PROGRAMS IN THE SYSTEM NUCLEUS OR LINK PACK AREA, THE LOCATION     02749200
*    OF THE ROUTINE AT RESTART TIME MUST BE THE SAME AS AT              02759200
*    CHECKPOINT TIME. IF THIS IS NOT THE CASE, RESTART CANNOT           02769200
*    CONTINUE, AND ERROR PROCEDURES MUST BE INVOKED. FOR THOSE RB'S     02779200
*    REPRESENTING PROGRAMS IN THE JPQ, THE POINTER TO THE CDE MUST      02789200
*    BE RE-SET IN THE RB.                                               02791200
*                                                                       02793200
*                                                                       02795200
*    'RESTORING THE P/P STAE CONTROL BLOCKS'                            02797200
*                                                                       02797600
*    THIS ROUTINE RESTORES THE TCBNSTAE FLAGS AND THE SCB CHAIN         02798000
*    AS IT EXISTED AT CHECKPOINT TIME. THE RESTORED CHAIN IS            02798400
*    ANCHORED TO THE RPMWA1 SCB QUEUE HEADER. IT SHOULD BE NOTED        02798800
*    THAT CHECKPOINT OUTPUTS ALL SCB'S WHILE RESTART RECREATES          02798900
*    ONLY STAE SCB'S. THUS AN SCB FOR A STAI REQUEST IS NOT             02799000
*    RESTARTED.                                                         02799100
*                                                                       02849100
*                                                                       02859100
*    'RESTORING THE P/P FOE CONTROL BLOCKS'                             02869100
*                                                                       02879100
*    THIS ROUTINE RESTORES THE FOE CHAIN CHECKPOINTED BY                02889100
*    CHECKMAIN 2.  IT INVOKES THE PGFIX SERVICE ROUTINE TO              02891100
*    REINSTATE THE FOE CHAIN IN THE P/P TCB.  THE RESTORED              02893100
*    FOE CHAIN ANCHORED IN THE REPMAIN WORK AREA IS SAVED               02895100
*    FOR LATER PROCESSING BY REPMAIN 4 TO ADJUST THE FIX                02897100
*    COUNTS ON THE P/P TCBFOE QUEUE.                                    02897500
*                                                                       02897900
* VS2-REL 3 - CHANGES/DELETIONS:                                        02898002
* 041498,046900                                                @ZA01488 02898102
* 043585-043611                                                @ZA02857 02898202
* 039620                                                       @Z30ESHP 02903102
* 036722                                                       @ZA03177 02903337
* A04054800-04055800                                           @ZA11616 02908137
*A044262-044278,A044310,A044354-044446,A046010                 @ZA14558 02909137
*C037065                                                       @ZA18323 02910137
*A044370,A044390,C044374                                       @ZA19627 02911137
* APAR OZ31479 HAS BEEN FLAGGED AS @ZSUT222                    @ZSUT222 02911437
*C035610,035850,036394,036730,041558,041708,043673,043828      @ZSUT222 02911737
*C045551,045591,045695,046948,046964-046972,046976,046980      @ZSUT222 02912037
*C047034                                                       @ZSUT222 02912237
*A036740-036772,046032,046952-046960                           @ZSUT222 02912437
     EJECT                                                              02913002
IGC0605B CSECT                                                          02917902
         BALR  RB,R0               ADDRESSABILITY FOR CODE              02922802
         USING *,RB                CODE                                 02927702
         USING RSTWA,RC            RESTART WORK AREA                    02932600
         B     RPMNST              GO AROUND ID                         02942600
         DC    H'0'                ALIGNMENT                            02952600
         DC    CL8'IGC0605B'       MODULE NAME                 @ZSUT222 02962637
         DC    CL8'&SYSDATE'       LAST DATE SHIPPED           @ZSUT222 02963137
         DC    CL8'@ZSUT222'       LAST CODE SHIPPED           @ZSUT222 02963637
RPMNST   L     R9,RSMWOFST         OFFSET TO REPMAIN'S WORK AREA        02964600
         AR    R9,RC               ESTABLISH BASE FOR REPMAIN'S W. A.   02965000
         USING RPMWA1,R9           REPMAIN WORK AREA                    02965400
         LA    R2,RSBDCB           @ OF RESTART DCB                     02965800
         USING IHADCB,R2           DCB                                  02966200
         LA    R7,RPM127           GET @ OF REPMAIN 2 SYNAD ROUTINE     02966300
         STCM  R7,M7,DCBSYNA       PUT IT IN RESTART DCB                02977500
         MVC   RPMN40(N8),RM3NAME  SET DEFAULT EXIT TO IGC0705B         02987500
         DROP  R2                  DCB                                  02987900
         XC    RSAPPLNT,RSAPPLNT   CLEAR SUR APPENDAGE LENGTH CELL      02988300
         MVI   RSSWIT1,N0          CLEAR THE SWITCH BYTE                02988700
         L     R7,RSBFSTAD         GET @ OF NEXT DATA BLOCK IN SURBUF   02992400
         CLI   N0(R7),CDECODE      IS NEW BLOCK A CDE                   02992802
         BNE   R11C1               NO-PROCESS LLE CHAIN                 02993200
         LA    R4,RPMCDE           GET @ OF JPQ ANCHOR IN RPMWA1        02994400
R10A2    LA    R3,CDELEN           GET LENGTH OF A CDE                  02994800
         ST    R3,RPLNT            SET LENGTH FOR RSGET AND BUFFER RTN  02995200
         BAL   RD,RSGET            GET LSQA SPACE AND MOVE THE CDE      02995600
         USING CDENTRY,R4          CDE PREV.                            02996000
         ST    R1,CDCHAIN          CHAIN CDE TO PREVIOUS CDE     Y02076 02996102
         BAL   RE,R13A1            READ NEXT DATA                       02996200
         DROP  R4                  CDE PREV.                            03046200
         USING CDENTRY,R1          CDE CURRENT                          03056200
         TM    CDATTR,CDMIN        IS THIS CDE A MINOR                  03066200
         BO    R10F2               YES, GO SEE IF LAST CDE WAS ALSO     03076200
         DROP  R1                  CDE CURRENT                          03086200
         LR    R4,R1               NO, MAJOR SO NEW BLOCK CAN BE XL     03088200
         L     R7,RSBFSTAD         GET @ OF NEW BLOCK SUR CODE          03090200
         CLI   N0(R7),XLCODE       IS NEW BLOCK AN EXTENT LIST          03092200
         BNE   R10C2               NO. GO SEE IF CDE'S DONE             03094200
         OI    RSSWIT1,BIGBLOCK    SET BIG BLOCK SWITCH                 03094600
         LA    RF,N1(R7)           GET BASE OF XL IN SUR BUFFER         03095000
         USING XTLST,RF            EXTENT LIST                          03095400
         ICM   R0,MF,XTLLNTH       GET LENGTH OF THE EXTENT LIST        03095800
         ST    R0,RPLNT            SET UP LENGTH OF BLOCK FOR RSGET,    03095900
*                                  BUFFER HANDLER FOR MOVE              03096000
         DROP  RF                  EXTENT LIST                          03096100
         BAL   RD,RSGET            GM THE XL BUT DON'T MOVE IT          03112800
         USING CDENTRY,R4          CDE PREVIOUS                         03122800
         ST    R1,CDXLMJP          PUT @ OF XL IN CDE            Y02076 03124802
         BAL   RE,R13A1            GO MOVE XL AND READ NEXT DATA        03126800
         SPACE 3                                                        03128800
R10C2    L     R6,CDCHAIN          GET @ NEXT CDE FROM PREV.            03129200
         LTR   R6,R6               IS IT LAST CDE                       03129400
         BZ    R11C1               YES, GO DO LLE'S                     03135000
         B     R10A2               NO, GO DO NEXT CDE                   03137000
         SPACE 3                                                        03139000
R10F2    TM    CDATTR,CDMIN        WAS PREV. CDE A MINOR                03139400
         BZ    R10F3               NO, GO PUT @ OF MAJ IN MINOR         03139800
         L     R4,CDXLMJP          YES, GET @ OF MAJ FROM MINOR         03140200
         DROP  R4                  CDE PREVIOUS                         03140300
         USING CDENTRY,R1          CDE CURRENT                          03140400
R10F3    ST    R4,CDXLMJP          PUT @ OF MAJ CDE INTO MINOR   Y02076 03140502
         LR    R4,R1               MAKE CURRENT PREVIOUS                03190500
         B     R10C2               TEST FOR LAST CDE                    03200500
         DROP  R1                  CDE CURRENT                          03210500
         EJECT                                                          03220500
*                                                                       03230500
*        RESTARTING THE P/P LLE CHAIN                                   03232500
*                                                                       03234500
         SPACE 3                                                        03236500
R11C1    LA    RA,RPMLLE           GET @ OF REPMAIN LLE ANCHOR          03238500
R11D1    L     R7,RSBFSTAD         GET @ OF CHECKCODE FOR BLOCK         03238900
         CLI   N0(R7),LLEJCODE     IS THIS AN LLE W/CDE ON JPQ          03239300
         BE    R11D11              YES, GO RESTART IT                   03239700
         CLI   N0(R7),LLELCODE     IS THIS AN LLE W/CDE ON LPAQ         03240100
         BNE   R11RB               NO, GO DO RB CHAIN                   03240200
R11D11   LA    R0,LLELEN           GET LENGTH OF LLE                    03240300
         ST    R0,RPLNT            SET SIZE TO GET AND MOVE             03240400
         BAL   RD,RSGET            GET AND MOVE THE LLE                 03257100
         USING LLE,RA              LLE                                  03267100
         ST    R1,LLECHN           PUT LLE ON RPMWA LLE CHAIN    Y02076 03269102
         LR    RA,R1               UPDATE CHAIN POINTER                 03271100
         CLI   N0(R7),LLELCODE     IS IT AN LLE W/CDE ON LPAQ           03273100
         BNE   R11D1B              NO, GO FIND CDE ON JPQ               03273500
         BAL   RE,RPMCDLDR         GO, CREATE CDE ON LPAQ               03273600
R11D1A   ST    R1,LLECDPT          PUT @ OF CDE IN LLE           Y02076 03273702
         BAL   RE,R13A1            GET NEXT DATA BLOCK                  03279300
         B     R11D1               GO PROCESS NEXT BLOCK                03281300
         SPACE 3                                                        03283300
R11D1B   SR    R0,R0               GET CDE POSITION INDEX FROM LLE      03283700
         L     R0,LLECDPT          FOR SEARCH ROUTINE            Y02076 03284102
         BAL   RE,RPMJPQS          GO FIND CDE ON JPQ                   03284500
         B     R11D1A              GO PUT CDE ADDRESS IN LLE            03284600
         DROP  RA                  LLE                                  03284700
         EJECT                                                          03284800
*                                                                       03334800
*        RESTARTING THE P/P RB QUEUE                                    03344800
*                                                                       03354800
         SPACE 3                                                        03364800
R11RB    LA    RA,RPMRB            GET @ OF RB ANCHOR CELL IN RPMWA1    03374800
         S     RA,RMRBLINK         ADJUST CHAIN TO POINT TO RBPRFXST    03376800
R10G3    L     R7,RSBFSTAD         GET @ OF SUR BLOCK                   03378800
         LA    R1,N1(R7)           BUMP PAST CHECKCODE                  03380800
         USING RBPRFXST,R1         RB IN SUR BUFFER                     03382800
         SR    R0,R0               CLEAR REG                            03383200
         ICM   R0,M3,RBSIZE        GET RBSIZE IN DOUBLE WORDS           03383600
         SLL   R0,N3               MULTIPLY BY 8 TO GET LEN IN BYTES    03384000
         ST    R0,RPLNT            SET BLOCK LENGTH=LENGTH OF RB        03384400
         BAL   RD,RSGET            GETMAIN AND MOVE THE RB              03384500
         DROP  R1                  RB IN SUR BUFFER                     03384600
         USING RBPRFXST,RA         RB ANCHOR PTR                        03384700
         LA    R0,RBPRFLNA(R1)     ADJUST ADDRESS BEYOND PREFIX         03401400
         STCM  R0,M7,RBLINKB       PUT RB ON REPMAIN RB QUEUE IN W/A    03411400
         LR    RA,R1               UPDATE CHAIN ANCHOR                  03413400
         L     R5,RSTCBAD          GET ADDR OF RESTART TCB              03415400
         STCM  R5,M7,RBLINKB       PUT IT IN RB                         03417400
         TM    RBSTAB1,RBFTSVRB    IS IT AN SVRB                        03417800
         BO    R10G3A              YES, GO HANDLE SVRB'S                03417900
         USING TCB,R5              TCB                                  03418000
         MVZ   RBOPSW+N1(N1),TCBPKF MOVE PROTECT KEY TO PSW             03423602
         DROP  R5                  TCB                                  03425600
         CLI   N0(R7),PRBSCODE     IS IT A SYNCHED PRB                  03427600
         BE    R10G3K              YES, GO GET NEXT BLOCK               03428000
         CLI   N0(R7),PRBLCODE     IS IT PRB W/CDE ON LPAQ              03428400
         BNE   R10G3F              NO, PRB W/CDE ON JPQ                 03428800
         BAL   RE,RPMCDLDR         GO CREATE CDE ON LPAQ                03428900
R10G3G   STCM  R1,M7,RBCDE1        PUT @ OF CDE IN RB                   03429000
R10G3K   BAL   RE,R13A1            GET @ OF NEXT DATA BLOCK             03429100
         TM    RBSTAB2,RBTCBNXT    WAS IT THE LAST RB                   03479100
         BO    R11A3               YES, GO DO STAE CONTROL BLOCKS       03489100
         B     R10G3               GO PROCESS THE NEXT RB               03499100
R10G3F   SR    R0,R0               GET CDE POSITION INDEX ON JPQ        03509100
         ICM   R0,M7,RBCDE1        FOR SEARCH ROUTINE                   03519100
         BAL   RE,RPMJPQS          GO FIND CDE ON JPQ                   03521100
         B     R10G3G              GO PUT @ OF CDE IN RB                03523100
         SPACE 3                                                        03525100
R10G3A   LA    R6,N1(R7)           GET PAST SURCODE                     03527100
         XC    RBCDE1,RBCDE1       CLEAR POSSIBLE CDE ADDR       YM7054 03527202
         OI    RBCDFLGS,RBNOCELL   PREVENT SUBSEQUENT FREECELL   Y02076 03527302
         A     R6,RPLNT            GET ADDRESS OF SUR APPENDAGE         03527500
         CLI   N0(R7),SVRB234C     IS IT A TYPE 2,3,4 SVRB              03527900
         BE    R10G3B              YES, GO FIND EP FROM SVC TABLE       03528300
*        THEN SVRB MUST BE FOR TYPE 4 NTH LOAD (N>=2)                   03528700
         CLI   N0(R7),SVRBEOVC     SVRB FOR EOV                  Y02076 03528802
         BNE   R10G3A1             BR NO                         Y02076 03529002
         SR    RF,RF               SET APP LENGTH                Y02076 03529102
         MVC   RSERAS00(8),EOVRETNM SETUP EOV-EXIT RETURN NAME   YM7050 03529502
         LA    R6,RSERAS00         POINT REG 6 TO IT             YM7050 03534202
         B     R10G3A1A            GO FIND CDE WITH EP           YM7050 03537002
R10G3A1  LA    RF,RBLPALEN         SET APPENDAGE LENGTH FOR AN   Y02076 03538602
R10G3A1A ST    RF,RSAPPLNT         RB W/CDE ON LPAQ.                    03540202
         LA    RF,RSREGSAV         GET SAVEAREA ADDR             Y02076 03541802
         STM   R0,RF,N0(RF)        SAVE REGS                     Y02076 03543402
R10G3A2  SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        ,03545002
               RELATED=(LOCAL,IGC0605B(R10G3A5))                 Y02076 03546602
         LTR   RD,RD               SETLOCK SUCCESSFUL            Y02076 03548202
         LM    R0,RF,N0(RF)        RESTORE REGS                  Y02076 03549802
         BNZ   RPMSLERR            IF NOT, BR                    Y02076 03551402
R10G3A3  SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,                          ,03553002
               RELATED=(CMS,IGC0605B(R10G3A4))                   Y02076 03554602
         LTR   RD,RD               SETLOCK SUCCESSFUL            Y02076 03556202
         LM    R0,RF,N0(RF)        RESTORE REGS                  Y02076 03557802
         BZ    R10G3A3B            IF YES, BR                    Y02076 03559402
         MVI   RSRETCOD+N1,ERR202  STORE SETLOCK ERROR CODE    @ZSUT222 03561037
         B     R10G3A5             GO RELEASE LOCAL LOCK         Y02076 03562602
R10G3A3B BAL   RE,CDSEARCH         FIND THE CDE ON THE LPAQ      Y02076 03564202
         LTR   R2,R2               CDE FOUND                     Y02076 03565802
         BZ    R10G3A3C            IF NOT, BR                    Y02076 03567402
         USING CDENTRY,R2          ADDRESS CDE                   Y02076 03569002
         L     R1,CDENTPT          GET EPA BEFORE CDE MOVES      Y02076 03570602
         DROP  R2                  CDE                           Y02076 03572202
R10G3A3C LA    RF,RSREGSAV         GET SAVEAREA ADDR             Y02076 03573802
         STM   R0,RF,N0(RF)        SAVE REGS                     Y02076 03575402
R10G3A4  SETLOCK RELEASE,TYPE=CMS,                                     ,03577002
               RELATED=(CMS,IGC0605B(R10G3A3))                   Y02076 03578602
R10G3A5  SETLOCK RELEASE,TYPE=LOCAL,                                   ,03580202
               RELATED=(LOCAL,IGC0605B(R10G3A2))                 Y02076 03581802
         LM    R0,RF,N0(RF)        RESTORE REGS                  Y02076 03583402
         CLI   RSRETCOD+N1,ERR202  SETLOCK ERROR               @ZSUT222 03585037
         BE    RPMERR              IF YES, BR                    Y02076 03586602
         CLI   N0(R7),SVRBEOVC     SVRB FOR EOV                  YM7050 03587002
         BNE   R10G3A5A            IF NOT, SKIP EOV PROCESSING   YM7050 03587402
         LTR   R2,R2               WAS CDE FOUND                 YM7050 03587802
         BZ    R10G3A6             IF NOT, LOOK ON LPAQ          YM7050 03587902
         LR    R0,R1               EPA TO REG 0                  YM7050 03588002
         B     R10G3A8A            GO UPDATE EOV PSW             YM7050 03588102
R10G3A5A LTR   R2,R2               CDE FOUND                     YM7050 03593402
         BNZ   R10G3C              YES, GO SEE IF SVRB IS RESIDENT      03595402
         TM    RBSTAB1,RBTRSVRB    IS IT A TRANSIENT SVRB               03597402
         BZ    R11A5               NO, RESIDENT SO CANNOT RESTART       03599402
R10G3A6  ICM   R0,MF,N0(R6)        GET LEFT HALF OF NAME         YM7050 03601402
         ICM   R1,MF,N4(R6)        GET RIGHT HALF OF NAME        Y02076 03603402
         LA    RF,RSREGSAV         ADDRESS REG SAVEAREA          Y02076 03607402
         STM   R0,RF,N0(RF)        SAVE REGS                     Y02076 03609402
R10G3A7  SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        ,03611402
               RELATED=(LOCAL,IGC0605B(R10G3A8))                 Y02076 03613402
         LTR   RD,RD               SETLOCK ERROR                 Y02076 03615402
         LM    R0,RF,N0(RF)        RESTORE REGS                  Y02076 03617402
         BNZ   RPMSLERR            IF SETLOCK ERROR, BR          Y02076 03619402
         STM   R6,R9,CKSAVAR6      SAVE REGS ACROSS IEAVVMSR     Y02076 03621402
         DROP  R9                  RPMWA1 PERM                          03623402
         LR    R2,R9               SET UP TEMPORARY BASE FOR RPMWA1     03625402
         USING RPMWA1,R2           RPMWA1 TEMP                          03627402
         L     R3,CVTPTR           GET @ OF CVT                         03629402
         USING CVT,R3              CVT                                  03631402
         L     RE,CVTLPDSR         GET @ OF IEAVVMSR                    03633402
         BALR  RE,RE               SEARCH FOR LPDE                      03635402
         B     R11CEPA             FOUND, GO RESTORE AND COMPARE EP'S   03637402
         MVI   RSRETCOD+N1,ERR052  NOT FOUND, SET LPAQ ERR CODE@ZSUT222 03639437
         B     R10G3A7B            GO RELEASE LOCAL LOCK         Y02076 03641402
R11CEPA  LM    R6,R9,CKSAVAR6      RESTORE REGS                  Y02076 03643402
         LR    R1,R0               GET BASE FOR CDE                     03653400
         USING CDENTRY,R1          CDE                                  03663400
         L     R0,CDENTPT          GET EPA BEFORE CDE MOVES      Y02076 03664402
R10G3A7B LA    RF,RSREGSAV         ADDRESS REG SAVEAREA          Y02076 03665402
         STM   R0,RF,N0(RF)        SAVE REGS ACROSS SETLOCK      Y02076 03666402
R10G3A8  SETLOCK RELEASE,TYPE=LOCAL,                                   ,03667402
               RELATED=(LOCAL,IGC0605B(R10G3A7))                 Y02076 03668402
         LM    R0,RF,N0(RF)        RESTORE REGS                  Y02076 03669402
         CLI   RSRETCOD+N1,N0      ERROR ENCOUNTERED             Y02076 03670402
         BNE   RPMERR              IF ERROR, GO XCTL TO 905B     Y02076 03671402
         CLI   N0(R7),SVRBEOVC     SVRB FOR EOV                  Y02076 03671602
         BNE   R10G3A9             IF NOT, BR                    Y02076 03671802
R10G3A8A STCM  R0,M7,RBOPSW+N5     UPDATE EOV RETURN ADDRESS     YM7050 03672002
         B     R10G3K              GO GET NEXT RB                Y02076 03672102
R10G3A9  CLM   R0,M7,N9(R6)        RESTART EPA MATCH CHECKPOINT ZA03177 03672237
         BE    R10G3G              IF YES, GO UPDATE RB LPDE @   Y02076 03672402
         DROP  R2,R3               RPMWA1 TEMP, CVT                     03672502
         USING RPMWA1,R9           RPMWA1 PERM                          03672600
R11A5    MVI   RSRETCOD+N1,ERR053  SET LPAQ ERROR CODE IN RSTWA@ZSUT222 03673037
RPMERR   MVI   RPMN40+N4,CHAR9     SET TO XCTL TO IGC0905B              03673837
         MVC   RSREGSAV(8),MODID   SAVE NAME OF MODULE THAT    @ZSUT222 03674037
*                                  HAS DETECTED THE ERROR.     @ZSUT222 03674237
         STM   0,15,RSREGSAV+8     SAVE CURRENT REGS           @ZSUT222 03677237
         B     R11A4               GO XCTL                              03679237
         SPACE 3                                                        03681237
*                                                                       03690000
*        CDE FOUND ON ACTIVE LPAQ                                       03700000
*                                                                       03702000
R10G3C   TM    RBSTAB1,RBTRSVRB    IS IT A TRANSIENT SVRB               03704000
         BO    R11A5               NO - ERROR ON LPAQ - SET CODE,XCTL   03706000
         USING CDENTRY,R2          CDE                                  03706400
         CLM   R1,M7,N9(R6)        RESTART EPA MATCH CHECKPOINT ZA18323 03706537
         BNE   R11A5               NO - ERROR - SET CODE AND XCTL       03706600
         DROP  R2                  CDE                                  03712200
         LR    R1,R2               YES, MOVE ADDR FOR STORE             03714200
         B     R10G3G              GO STORE CDE @ IN RB.                03716200
         SPACE 3                                                        03716600
*        SVRB IS FOR TYPE 2, 3, OR 1ST LOAD OF TYPE 4 SVC.              03717000
         SPACE 3                                                        03717400
R10G3B   SR    R0,R0               CLEAR INDEX REG                      03717500
         IC    R0,N4(R6)           GET  SVC NUMBER FROM SUR APPENDAGE   03717600
         L     RE,CVTPTR           GET @ OF CVT                         03717700
         USING CVT,RE              CVT                                  03767700
         L     RE,CVTABEND         GET @ OF SECONDARY CVT               03777700
         DROP  RE                  CVT                                  03787700
         USING SCVTSECT,RE         SCVT                                 03797700
         L     RE,SCVTSVCT         GET @ OF SVC TABLE (IBMORG)          03807700
         DROP  RE                  SCVT                                 03809700
RMT234EP SLL   R0,N3               MAKE SVC NO. AN INDEX         Y02076 03816502
         AR    RE,R0               GET @ OF SVC TABLE ENTRY             03816900
         LA    R0,SVRB234A         GET APPENDAGE LENGTH FOR T234 SVRB   03817300
         ST    R0,RSAPPLNT         PUT IT IN RPMWA1 FOR BUFFER HANDLER  03817400
         CLC   N1(N3,RE),N1(R6)    ENTRY POINT @ OK.                    03817500
         BE    R10G3K              YES, GO GET NEXT BLOCK               03817600
         B     R11A5               NO, GO SET LPAQ ERROR AND XCTL       03834300
         EJECT                                                          03860500
*                                                                       03860900
*        STAE CONTROL BLOCK PROCESSING                                  03861300
*                                                                       03861700
         SPACE 3                                                        03861800
R11A3    L     R7,RSBFSTAD         GET @ OF SUR ENTRY                   03861902
         MVC   RSNSTAE(N4),N1(R7)  MOVE STAE INFO TO WORKAREA           03862002
         LA    R4,RSNSTAE          GET @ OF SCB ANCHOR IN RPMWA1        03912002
         XC    N1(N3,R4),N1(R4)    SET LAST SCBCHAIN FIELD TO 0.        03922000
         LA    R3,NSTAELEN         SET BLOCK LENGTH TO                  03932000
         ST    R3,RPLNT            LENGTH OF STAE FIELD                 03942000
R11A3A   BAL   RE,R13A1            GET @ OF NEXT DATA BLOCK             03952000
         CLI   N0(R7),SCBCODE      IS THIS AN SCB                       03954000
         BNE   RPMFOE1             NO, GO PROCESS FOE'S                 03956000
         LA    R3,SCBLEN           LENGTH OF AN SCB                     03958000
         ST    R3,RPLNT            SET LENGTH TO GETMAIN                03960000
         LA    RF,N1(R7)           GET @ OF SCB IN SUR BUFFER           03960400
         USING SCB,RF              SCB IN BUFFER                        03960800
         ICM   RE,M7,SCBOWNRA      IS RB POSITION INDEX 0 (STAI SCB)    03961200
         BZ    R11A3A              YES, STAI SCB SO DO NOT RESTART      03961600
         DROP  RF                  SCB IN BUFFER                        03961700
         LR    R0,R3               INIT R0 FOR GETMAIN           Y02076 03961802
         ICM   R0,M8,RMSP255       IN SUBPOOL 255              @Z30ESHP 03962002
         BAL   RD,RSGETA           GETCORE AND MOVE SCB IN       Y02076 03962102
         USING SCB,R4              SCB IN LSQA                          03962202
         STCM  R1,M7,SCBCHAIN+N1   CHAIN SCB TO PREVIOUS SCB            03978600
         LR    R4,R1               ADVANCE CHAIN POINTER                03988600
         XC    SCBCHAIN+N1(N3),SCBCHAIN+N1 SET FWD CHAIN @ = 0          03990602
         B     R11A3A              GO GET NEXT DATA BLOCK               03992600
         DROP  R4                  SCB IN LSQA                          03994600
         EJECT                                                          03995000
*                                                                       03995100
*        FOE CONTROL BLOCK PROCESSING                                   03995200
*                                                                       04000800
         SPACE 3                                                        04002800
RPMFOE1  SR    R3,R3               SET TOTAL FIX CTR=0           Y02076 04005802
         SR    RA,RA               SET FOE CTR=0                 Y02076 04008802
         LA    R4,RPMFOE           GET ADDR OF FOE ANCHOR        Y02076 04011802
RPMFOE2  CLI   N0(R7),FOECODE      IS THIS AN FOE                Y02076 04014802
         BNE   RPMFOE3             BR NO, GO FIX PAGES           Y02076 04017802
         LA    RD,FOELEN           GET LENGTH OF FOE             Y02076 04020802
         ST    RD,RPLNT            SET LENGTH FOR GETMAIN        Y02076 04023802
         BAL   RD,RSGET            GET/MOVE FOE                  Y02076 04026802
         LA    RA,N1(,RA)          INCR FOE CTR BY 1             Y02076 04029802
         USING FOE,R4              FOE                           Y02076 04032802
         STCM  R1,M7,FOEFLINK      CHAIN FOE TO CHAIN            Y02076 04035802
         LR    R4,R1               UPDATE CHAIN PTR              Y02076 04038802
         AH    R3,FOEFXCT          INCR TOTAL FIX CTR            Y02076 04041802
         BAL   RE,R13A1            GET NEXT DATA BLOCK           Y02076 04044802
         B     RPMFOE2             GO SEE IF IT IS AN FOE        Y02076 04047802
RPMFOE3  LTR   RA,RA               ANY FOE'S                     Y02076 04050802
         BZ    R11A4               BR NO, GO XCTL                Y02076 04053802
         SR    R1,R1               ZERO REG 1                  @ZA11616 04054837
         STCM  R1,M7,FOEFLINK      ZERO LAST LINK POINTER      @ZA11616 04055837
         LR    R1,R3               CALCULATE LENGTH OF GETMAIN   Y02076 04056802
         SLL   R1,N3               FOR FIXLIST (VSL)             Y02076 04059802
         LA    R0,N4(,R1)          AND ECB 8*FIXES+4             Y02076 04062802
         ICM   R0,M8,RMSP254       SETUP TO GET FROM SP254       Y02076 04065802
         ST    R0,RSW001           SAVE LENGTH FOR FREEMAIN      Y02076 04068802
         GETMAIN R,LV=(0)          GET ECB AND VSL               Y02076 04071802
         ST    R1,RSW002           SAVE ADDR OF ECB AND VSL      Y02076 04074802
         LA    R8,N4(,R1)          GET ADDR OF VSL               Y02076 04077802
         LA    R4,RPMFOE           GET ADDR OF FOE ANCHOR        Y02076 04080802
         SR    RD,RD               CLEAR WORK REG                Y02076 04083802
RPMFOE4  ICM   R4,M7,FOEFLINK      GET ADDR OF 1ST/NEXT FOE      Y02076 04086802
         ICM   RD,M6,FOEVINDX      GET START ADDR TO FIX         Y02076 04089802
         LR    RE,RD               COMPUTE END                   Y02076 04092802
         AH    RE,RMH4096          ADDR+1                        Y02076 04095802
         LH    R3,FOEFXCT          GET FOE FIX COUNT             Y02076 04098802
RPMFOE4A STM   RD,RE,N0(R8)        STORE START AND END ADDR      Y02076 04101802
*                                  FOR THIS ENTRY                Y02076 04104802
         LA    R8,N8(,R8)          POINT TO NEXT VSL ENTRY       Y02076 04107802
         BCT   R3,RPMFOE4A         CONTINUE UNTIL FIX CTR=0      Y02076 04110802
         BCT   RA,RPMFOE4          CONTINUE UNTIL FOE CTR=0      Y02076 04112302
         SH    R8,RMH4             POINT TO PREVIOUS ENTRY       Y02076 04113802
         OI    N0(R8),X80          SET LAST VSL ENTRY FLAG       Y02076 04116802
         L     R8,RSW002           GET ECB ADDRESS               Y02076 04119802
         LA    R1,N4(,R8)          GET START ADDR OF FIX LIST    Y02076 04122802
         XC    N0(N4,R8),N0(R8)    CLEAR ECB                     Y02076 04125802
         DROP  R4                  FOE                           Y02076 04128802
         PGFIX L,LA=(R1),ECB=(R8),LONG=N,RELEASE=N               Y02076 04131802
         LTR   RF,RF               DID FIX GO OK                 Y02076 04134802
         BZ    RPMFOE7             BR YES, GO FREE ECB & VSL     Y02076 04137802
         CLM   RF,M1,RMRC8         IS PGFIX STILL ACTIVE         Y02076 04140802
         BNE   RPMFOE6             BR NO--ERROR                  Y02076 04143802
         WAIT  ECB=(R8)            NOT YET DONE, SO WAIT         Y02076 04146802
         CLI   N0(R8),PC40         WAS PGFIX SUCCESSFUL        @ZA01488 04149802
         BE    RPMFOE7             BR YES                        Y02076 04152802
RPMFOE6  MVI   RSRETCOD+N1,ERR201  SET '201' ERROR CODE        @ZSUT222 04155837
RPMFOE7  L     R0,RSW001           GET LENGTH OF ECB+VSL         Y02076 04158802
         ICM   R0,M8,RMSP254       SET SP TO 254                 Y02076 04161802
         L     R1,RSW002           GET ADDR OF ECB & VSL         Y02076 04164802
         FREEMAIN R,LV=(0),A=(1)   FREE ECB & VSL                Y02076 04167802
         CLI   RSRETCOD+N1,ERR201  WAS THERE AN ERROR          @ZSUT222 04170837
         BE    RPMERR              BR YES                        Y02076 04173802
******* FALL THROUGH TO R11A4 TO XCTL TO REPMAIN 3 *****                04209900
         EJECT                                                          04210300
*                                                                       04210700
*              XCTL PROCESSING                                          04210800
*                                                                       04210900
         SPACE 3                                                        04216700
R11A4    LA    RF,RPMN40           GET @ OF NAME TO XCTL TO             04218700
         ST    RF,RP40XCTL         SAVE IT FOR XCTL                     04220700
         LR    R1,RC               SET @ OF RSTWA TO GPR1               04221100
         LA    RF,RP40XCTL         GET @ OF @                           04221500
         XCTL  SF=(E,(15))         XCTL TO NEXT LOAD                    04221900
         EJECT                                                          04222300
*                                                                       04222400
*        RPMJPQS - ROUTINE TO LOCATE A CDE ON THE RESTARTED P/P JPQ     04222500
*                                                                       04238700
*        INPUT - POSITION INDEX OF CDE ON THE JPQ IN GPR 0              04248700
*                RETURN ADDRESS IN GPR 14.                              04250700
*                                                                       04252700
*        OUTPUT- @ OF CDE IN GPR 1                                      04254700
*                                                                       04255100
         SPACE 3                                                        04260500
RPMJPQS  L     R1,RPMCDE           GET @ OF FIRST CDE ON JPQ            04262500
         LA    RF,N1               SET SEARCH COUNT=1                   04264500
RPMJPQS1 CR    R0,RF               SEARCH COUNT=POSITION INDEX          04264900
         BCR   EQ,RE               EQUAL, RETURN                        04265300
         USING CDENTRY,R1          CDE                                  04265700
         L     R1,CDCHAIN          GET @ NEXT CDE                       04265800
         LA    RF,N1(RF)           INCREMENT SEARCH COUNT BY 1          04265900
         B     RPMJPQS1            SEE IF THIS IS THE ONE               04271300
         DROP  R1                  CDE                                  04273300
         EJECT                                                          04275300
*                                                                       04275700
*        THIS SUBROUTINE ISSUES A GETMAIN FOR A CONTROL BLOCK           04276100
*        AND MOVES THE BLOCK TO THE ACQUIRED CORE FROM THE              04276500
*        SUR BUFFER.                                                    04276600
*                                                                       04276700
*        INPUT - @ OF BLOCK TO BE MOVED MINUS 1 IN GPR 7.               04282100
*              - LENGTH TO BE MOVED IN RPLNT                            04284100
*              - BIG BLOCK SWITCH. IF ONE BYPASS MOVE                   04286100
*                                  IF ZERO MOVE BLOCK                   04286500
*              - RETURN @ IN GPR 13                                     04286900
*                                                                       04287300
*        OUTPUT - @ OF ACQUIRED STORAGE IN GPR 1 AND RSCORE.            04287400
*               - BLOCK MOVED IF REQUIRED                               04287500
*                                                                       04292900
*        NOTE - IF ENTERED AT RSGETA THE SUBPOOL # AND LENGTH MUST      04294900
*               BE SET INTO GPR 0 BY CALLER.                            04296900
*                                                                       04297300
         SPACE 3                                                        04297700
RSGET    L     R0,RPLNT            GET THE LENGTH OF THE BLOCK          04298100
         ICM   R0,M8,RMSP255       GET FROM SUBPOOL 255                 04298200
RSGETA   GETMAIN R,LV=(0)          GET THE CORE                         04298300
         ST    R1,RSCORE           SAVE PTR TO ACQUIRED CORE            04312800
         TM    RSSWIT1,N1          IS IT A BIG BLOCK (IE. XL)           04322800
         BCR   ONES,RD             YES, RETURN WITHOUT MOVING BLOCK     04324800
         L     RF,RPLNT            GET LENGTH TO MOVE                   04326800
         BCTR  RF,R0               ADJUST FOR EXECUTE                   04327200
         EX    RF,RSGETMOV         MOVE THE BLOCK                       04327300
         BR    RD                  RETURN TO CALLER                     04327400
         SPACE                                                          04332200
RSGETMOV MVC   N0(N0,R1),N1(R7)    EXECUTED MOVE TO MOVE BLOCK          04334200
         EJECT                                                          04336200
*                                                                       04336600
*        RPMCDLDR - ROUTINE TO LOCATE A CDE ON THE ACTIVE LPAQ          04337000
*                                                                       04337100
*        INPUT - @ OF CHECKCODE FOR BLOCK IN SUR BUFFER IN GPR 7.       04341900
*              - LENGTH OF BLOCK IN RPLNT                               04343900
*              - ENTRY POINT NAME AND @ IN SUR APPENDAGE                04345900
*              - RETURN ADDRESS IN GPR 14.                              04346300
*        OUTPUT- CDE BUILT ON LPAQ                                      04346700
*              - @ OF CDE IN GPR1                                       04346800
*                                                                       04351600
RPMCDLDR ST    RE,CKSAVARE         SAVE RETURN REG                      04353600
         LA    R6,N1(R7)           GET @ OF START OF BLOCK IN SUR BUF   04355600
         A     R6,RPLNT            CALCULATE START OF SUR APPENDAGE     04356000
         LA    R0,LLEAPLEN         SET APPENDAGE LENGTH FOR             04356402
         ST    R0,RSAPPLNT         BUFFER HANDLER                       04356502
         L     RF,CVTPTR           GET CVT ADDRESS             @ZA02857 04358502
         USING CVT,RF              AVOID SEARCH IN JOB/STPLIB  @ZA02857 04360502
         L     R1,CVTLINK          GET LINK LIB DCB ADDR       @ZA02857 04360902
         DROP  RF                                              @ZA02857 04361002
         LOAD  EPLOC=(R6),DCB=(R1)  LOAD MODULE TO SET UP CDE  @ZA02857 04361102
         LR    RD,R0               SAVE EP @                            04363300
         CLM   RD,M7,N9(R6)        ENTRY POINT @ OK                     04365300
         BNE   RPMCDLD1            NO, GO DELETE THE MODULE             04365700
         LA    RF,RSREGSAV         GET SAVEAREA ADDR             Y02076 04365902
         STM   R0,RF,N0(RF)        SAVE REGS                     Y02076 04366002
RPMCD1   SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        ,04366102
               RELATED=(LOCAL,IGC0605B(RPMCD4))                  Y02076 04366302
         LTR   RD,RD               SETLOCK ERROR                 Y02076 04366502
         LM    R0,RF,N0(RF)        RESTORE REGS                  Y02076 04366602
         BNZ   RPMSLERR            IF YES, BR                    Y02076 04366702
RPMCD2   SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,                          ,04366802
               RELATED=(CMS,IGC0605B(RPMCD3))                    Y02076 04366902
         LTR   RD,RD               SETLOCK ERROR                 Y02076 04367002
         LM    R0,RF,N0(RF)        RESTORE REGS                  Y02076 04367102
         BZ    RPMCD2B             IF NOT, BR                    Y02076 04367202
         MVI   RSRETCOD+N1,ERR202  STORE SETLOCK ERROR CODE    @ZSUT222 04367337
         B     RPMCD4              GO RELEASE LOCAL LOCK         Y02076 04367537
RPMCD2B  BAL   RE,CDSEARCH         GO FIND CDE ON LPAQ           Y02076 04367602
         USING CDENTRY,R2          CDE                           Y02076 04367702
         ST    R2,RMCDSAV          SAVE CDE ADDR                 Y02076 04367802
         TM    CDATTR,CDMIN        MINOR CDE                     Y02076 04368102
         BZ    RPMCDLD2            BR NO                         Y02076 04368402
         L     R2,CDXLMJP          BUMP COUNT IN MAJOR CDE       Y02076 04368702
RPMCDLD2 LH    RF,CDUSE            GET CDE USE COUNT             Y02076 04369302
         LA    RF,N1(,RF)          INCR BY ONE                   Y02076 04369602
         STH   RF,CDUSE            PUT IT BACK                   Y02076 04369902
         LA    RF,RSREGSAV         GET SAVEAREA ADDR             Y02076 04370102
         STM   R0,RF,N0(RF)        SAVE REGS                     Y02076 04370202
RPMCD3   SETLOCK RELEASE,TYPE=CMS,RELATED=(CMS,IGC0605B(RPMCD2)) Y02076 04370402
RPMCD4   SETLOCK RELEASE,TYPE=LOCAL,                                   ,04370502
               RELATED=(LOCAL,IGC0605B(RPMCD1))                  Y02076 04370802
         LM    R0,RF,N0(RF)        RESTORE REGS                  Y02076 04371802
RPMCDLD1 DELETE EPLOC=(R6)         RELEASE THE LLE                      04381800
         CLI   RSRETCOD+N1,ERR202  SETLOCK ERROR               @ZSUT222 04382837
         BE    RPMERR              IF YES, BR                    Y02076 04383002
         CLM   RD,M7,N9(R6)        ENTRY POINT @ OK                     04383800
         BNE   R11A5               NO, LPAQ ERROR SO STOP RESTART       04384200
         L     R1,RMCDSAV          SET CDE @ FOR RETURN                 04393100
         L     RE,CKSAVARE         RESTORE RETURN REG.                  04395100
         BR    RE                  RETURN TO CALLER                     04397100
         DROP  R2                  CDE ON LPAQ                          04397500
         EJECT                                                          04397900
*                                                                       04398300
*        INPUT BUFFER HANDLER ROUTINE                                   04398400
*                                                                       04398500
*        INPUT - @ OF CURRENT BLOCK IN RSBFSTAD                         04399000
*              - LENGTH OF CURRENT BLOCK IN RPLNT                       04399400
*              - LENGTH OF APPENDAGE FOR CURRENT BLOCK, IF ANY          04399800
*              - @ OF ACQUIRED STORAGE IN GPR 1 (FOR BIG BLOCKS)        04399900
*              - FLAG SET IF MOVE REQUESTED (FOR BIG BLOCKS)            04408800
*              - NUMBER OF BYTES LEFT IN BUFFER IN RSBFLWA              04410800
*                                                                       04412800
*        OUTPUT- @ OF NEXT BLOCK IN RSBFSTAD AND IN GPR 7               04414800
*              - NUMBER OF BYTES LEFT IN BUFFER IN RSBFLWA              04416800
*              - APPENDAGE LENGTH SET TO ZERO                           04417200
*                                                                       04417600
         SPACE 3                                                        04418100
R13A1    DS    0H                  BUFFER HANDLER ROUTINE               04418500
         STM   R1,RF,CKSAVAR+N4    SAVE REGS                            04418900
         LA    RD,RSREGSAV         SAVE AREA ADDRESS                    04419000
         L     R3,RPLNT            LENGTH OF BLOCK                      04419100
         L     R4,RSBFLWA          REMAINING BYTES                      04419200
         L     RA,RSBFSTAD         NEXT ADDRESS IN BUFFER               04421500
         LA    RA,N1(RA)           ALLOW FOR CODE BYTE                  04423500
         BCTR  R4,R0               ALLOW FOR CODE BYTE                  04425500
         TM    RSSWIT1,BIGBLOCK    IS THIS A BIG BLOCK                  04425900
         BZ    R13A2               NO-BRANCH                            04426000
         NI    RSSWIT1,ON-BIGBLOCK YES- TURN OFF SWITCH                 04426102
R13B1    EQU   *                                               @ZA14558 04427837
         C     R3,HUNDRED          ARE BYTES GREATER THAN FF ? @ZA14558 04428337
         BNL   CMVCL               YES BRANCH                  @ZA14558 04428837
         CR    R3,R4               ARE BYTES LEFT IN BLOCK GT  @ZA14558 04429337
*                                  BYTES LEFT IN BUFFER                 04429800
         BNH   R13F1               NO   USE BLOCK LENGTH                04430200
         LR    R2,R4               YES  USE BYTES LEFT IN BUFFER        04430600
         BAL   R5,R13E1            MOVE IN SUR                          04431000
BACK     EQU   *                                               @ZA14558 04431137
         L     R1,RSW001           RESTORE PTR TO NEXT BYTE IN GOTTEN   04431537
*                                  CORE                                 04431937
         B     R13B1               LOOP WITH LEFT OVER BYTES            04432337
R13F1    LR    R2,R3               USE BLOCK LENGTH AS CTR              04433000
         B     R13E1               MOVE IN SUR                          04435000
* FOR BLOCKS GREATER THAN FF IN LENGHT WE WILL USE A MVCL      @ZA14558 04435437
CMVCL    EQU   *                                               @ZA14558 04435837
         CR    R3,R4               LENGTH > BUFFER REMAINDER ? @ZA14558 04436237
         BH    CMVCL1              YES BRANCH AND USE BFR SIZE @ZA14558 04436637
         LR    R2,R3               USE BLOCK LENGTH            @ZA14558 04437037
         LR    R6,R1               SET UP REG 6 TO FIELD       @ZA19627 04437437
         LR    R7,R2               SET REG 7 TO LENGTH         @ZA19627 04437637
         B     AHEAD               BRANCH AROUND               @ZA19627 04437837
CMVCL1   EQU   *                                               @ZA14558 04438037
         LR    R2,R4               SET LENGTH IN REG 2         @ZA14558 04438237
         LR    R6,R1               POINT R6 TO FIELD           @ZA14558 04438437
         LR    R7,R4               SET LENGTH IN REG 7         @ZA14558 04438637
AHEAD    EQU   *                                               @ZA19627 04438837
         LR    R8,RA               POINT R8 TO SUR             @ZA14558 04439437
         LR    R9,R2               SET LENGTH IN REG 9         @ZA14558 04439837
         MVCL  R6,R8               MOVEIT                      @ZA14558 04440237
         L     R9,RSMWOFST         SET REG 9                   @ZA14558 04440637
         AR    R9,RC               RESTORE REG 9               @ZA14558 04440837
         AR    RA,R2               INCREMENT BUFFER ADDRESS    @ZA14558 04441037
         AR    R1,R2               INCREMENT FIELD ADDRESS     @ZA14558 04441437
         ST    R1,RSW001           SAVE POINTER TO FIELD       @ZA14558 04441837
         SR    R4,R2               GET BYTES LEFT IN BUFFER    @ZA14558 04442237
         SR    R3,R2               GET BYTES LEFT IN BLOCK     @ZA14558 04442637
         BZ    R13A3               NONE LEFT BRANCH            @ZA14558 04443037
         LTR   R4,R4               TEST BUFFER BYTES LEFT      @ZA14558 04443437
         BNZ   BACK                NOT ZERO BRANCH             @ZA14558 04443837
         BAL   R7,R13D2            ZERO READ SUR               @ZA14558 04444237
         B     BACK                TEST NEXT FIELD             @ZA14558 04444637
         EJECT                                                          04445037
*                                                                       04445437
*        MOVE IN SUR ROUTINE                                            04445837
*                                                                       04446237
R13E1    DS    0H                  SUR PROCESSING                       04446637
         BCTR  R2,R0               DECREMENT COUNT                      04447037
         EX    R2,RSMOVE           EXECUTE MOVE                         04448800
         LA    R2,N1(R2)           INCREMENT COUNT                      04458800
         AR    RA,R2               INCREMENT BUFFER PTR                 04460800
         AR    R1,R2               INCREMENT AREA POINTER               04461200
         ST    R1,RSW001           SAVE PTR TO NEXT BYTE IN GOTTEN      04461300
         SR    R4,R2               GET BYTES LEFT IN BUFFER             04461400
         SR    R3,R2               GET BYTES LEFT IN BLOCK              04461500
         BZ    R13A3               NO MORE BYTES IN BLOCK               04461700
         LTR   R4,R4               ANY MORE BYTES IN BUFFER             04462100
         BCR   NE,R5               YES, RETURN                          04465100
         BAL   R7,R13D2            READ NEW DATA                        04467100
         BR    R5                  RETURN                               04469100
         SPACE 2                                                        04469500
R13A2    SR    R4,R3               COMPUTE NEW REMAINDER                04469900
         S     R4,RSAPPLNT         ALLOW FOR APPENDAGE, IF ANY          04470300
         BZ    R13D1               NO MORE BYTES LEFT IN BUFFER         04470700
         AR    RA,R3               GET PTR TO NEXT DATA                 04470800
         A     RA,RSAPPLNT         ALLOW FOR APPENDAGE, IF ANY          04470900
R13A3    CLI   N0(RA),N0           MORE USEABLE DATA IN BUF             04471000
         BE    R13D1               NO                                   04473200
         LTR   R4,R4               ANY MORE BYTES IN BUFFER             04475200
         BZ    R13D1               NO                                   04477200
         ST    RA,RSBFSTAD         ADDRESS OF NEW DATA                  04477600
         ST    R4,RSBFLWA          RESTORE REMAINDER                    04477700
R13C1    XC    RSAPPLNT(N4),RSAPPLNT ZERO THE APPENDAGE LENGTH          04483802
         ST    RA,CKSAVAR7         SET UP @ OF NEW BLOCK FOR RETURN     04485800
         LM    R1,RF,CKSAVAR+N4    RESTORE REGS                         04485900
         BR    RE                  RETURN                               04486000
R13D1    BAL   R7,R13D2            TO I/O ROUTINE                       04490202
         B     R13C1               RETURN                               04492200
         EJECT                                                          04494200
*                                                                       04494300
*        ROUTINE TO HANDLE I/O                                          04498400
*                                                                       04500400
*        INPUT - RETURN ADDRESS IN GPR 7                                04502400
*                                                                       04502500
*        OUTPUT- NEW RECORD READ AND BUFFER POINTERS ADJUSTED           04506600
*                                                                       04508600
         SPACE 3                                                        04510600
R13D2    DS    0H                  I/O HANDLER                          04510700
         LR    RA,RC               BASE ADDRESS                         04514800
         A     RA,RSBFOFST         ADD OFFSET TO BUFFER                 04516800
         READ  RSDECB1,SF,,(RA),,MF=E                                   04518800
         CHECK RSDECB1                                                  04518900
         CLI   RSRETCOD+N1,ZERO    I/O ERRORS                   YA00153 04523002
         BNE   RPMERR              YES                          YA00153 04525002
         ST    RA,RSBFSTAD         1ST BYTE OF BUFFER                   04527000
         LA    R4,SURL             GET BUFFER LENGTH                    04527100
         ST    R4,RSBFLWA          INITIALIZE LENGTH OF BUFFER          04537300
         BR    R7                  RETURN                               04547300
         SPACE 3                                                        04547700
*                                                                       04548100
*        SYNAD ROUTINE                                                  04549300
*                                                                       04551300
         SPACE 3                                                        04551700
RPM127   DS    0H                  SYNAD ROUTINE                        04553100
         MVI   RSRETCOD+N1,ERR036       I/O ERROR CODE         @ZSUT222 04555137
         L     R1,RSIOBPT1              GET ADDR OF IOB         YA00153 04556137
         TM    N13(R1),WLR              IS THIS WRONG LEN ERR   YA00153 04557137
         BCR   ZEROES,RE                NO - RETURN             YA00153 04558137
         MVI   RSRETCOD+N1,ERR042       SET WLR ERROR CODE     @ZSUT222 04559137
         RETURN                                                         04563202
*                                                                       04564102
         EJECT                                                          04565002
*                                                                Y02076 04565902
*        SETLOCK ERROR SET ROUTINE                               Y02076 04566802
*                                                                Y02076 04567702
         SPACE 2                                                        04568602
RPMSLERR MVI   RSRETCOD+N1,ERR202  STORE SETLOCK ERROR CODE    @ZSUT222 04569537
         B     RPMERR              GO XCTL TO ERROR LOAD         Y02076 04570402
         SPACE 3                                                        04571302
RSMOVE   MVC   N0(N1,R1),N0(RA)    MOVE IN BLOCK                        04572202
         EJECT                                                          04573102
*                                                                       04574002
*        CDSEARCH ROUTINE INTERFACES WITH SYSTEM IEAQCDSR               04574902
*                 ROUTINE TO FIND A CDE ON THE LPA CDE QUEUE.           04575802
*                                                                       04576702
*        INPUT - GPR 6 CONTAINS @ OF NAME TO BE FOUND                   04577602
*                GPR 14 RETURN ADDRESS                                  04578502
*                                                                       04579402
*        OUTPUT- GPR2= @ OF CDE IF FOUND                                04580302
*                    = 0 IF NOT FOUND                                   04581202
*                                                                       04582102
*                                                                       04583002
         SPACE                                                          04583902
CDSEARCH STM   R3,RF,RSREGSAV      SAVE REGS IN RESTART WORK AREA       04584802
         L     R4,RSTCBAD          GET @ OF TCB FOR IEAQCDSR            04585702
         L     RE,CVTPTR           GET @ OF CVT                         04586602
         USING CVT,RE              CVT                                  04587502
         L     R8,CVTQLPAQ         GET @ OF ACTIVE LPA CDE QUEUE        04588402
         LR    R9,R6               SET UP @ OF SEARCH NAME FOR RTN      04589302
         L     RE,CVTQCDSR         GET @ OF CDE QUEUE SEARCH ROUTINE    04590202
         DROP  RE                  CVT                                  04591102
         BALR  RE,RE               SEARCH LPAQ VIA IEAQCDSR             04592002
         NOPR  R0                  FALL THROUGH                         04592902
         NOPR  R0                  FALL THROUGH                         04593802
         LR    R2,RB               MOVE CDE @ TO OUTPUT REG             04594702
*                                  NOTE-- RB HAS @ IF FOUND OR 0        04595602
*                                          IF NOT FOUND.                04596502
         LM    R3,RF,RSREGSAV      RESTORE REGS                         04597402
         BR    RE                  RETURN TO CALLER                     04598302
         EJECT                                                          04599202
*                                                                       04600102
*        CONSTANTS                                                      04601002
         DS    0F                                                       04601337
HUNDRED  DC    X'00000100'         DEC 256  HEX 100            @ZA14558 04601637
RMRBLINK DC    A(RBLINK-RBPRFXST)  OFFSET TO RBCHAIN FIELD IN RB        04601902
RM3NAME  DC    C'IGC0705B'         NAME OF REPMAIN 3                    04602802
MODID    DC    CL8'IGC0605B'       MODULE ID                   @ZSUT222 04603237
EOVRETNM DC    C'IFG0551N'         EOV EXIT RTN RET NAME         Y02076 04603702
RMH4     DC    H'4'                4 - USED TO COMPUTE @ OF IEASVCNO    04604602
RMH4096  DC    H'4096'             PAGE SIZE FOR BUILDING FIX LIST      04605502
RMSP253  DC    AL1(253)            SUBPOOL 253 FOR SCB           Y02076 04606402
RMSP254  DC    AL1(254)            SUBPOOL 254 FOR FIX PARAMETER LIST   04607302
RMSP255  DC    AL1(255)            SUBPOOL 255                          04608202
RMRC8    DC    AL1(8)              RETURN CODE OF 8              Y02076 04609102
         SPACE 3                                                        04610002
*        PATCH AREA FOR MAINTENANCE OF 10%                              04610902
         SPACE 3                                                        04611802
PATCH    EQU   *                   PATCH AREA                           04612702
RM2LEN   EQU   PATCH-IGC0605B      LENGTH OF MODULE                     04613602
PATCHLEN EQU   RM2LEN/10           LENGTH OF PATCH AREA REQUIRED        04614502
RM2PATCH DS    CL(PATCHLEN)        PATCH AREA FOR MAINTENANCE           04615402
         EJECT                                                          04616302
*                                                                       04617202
*        GENERAL REGISTER EQUATES                                       04618102
*                                                                       04619002
         SPACE 3                                                        04619902
R0       EQU   0                   0                                    04620802
R1       EQU   1                   1                                    04621702
R2       EQU   2                   2                                    04622602
R3       EQU   3                   3                                    04623502
R4       EQU   4                   4                                    04624402
R5       EQU   5                   5                                    04625302
R6       EQU   6                   6                                    04626202
R7       EQU   7                   7                                    04627102
R8       EQU   8                   8                                    04628002
R9       EQU   9                   9                                    04628902
RA       EQU   10                  10                                   04629802
RB       EQU   11                  11                                   04630702
RC       EQU   12                  12                                   04631602
RD       EQU   13                  13                                   04632502
RE       EQU   14                  14                                   04633402
RF       EQU   15                  15                                   04634302
         SPACE 3                                                        04635202
*                                                                       04636102
*        GENERAL EQUATES                                                04637002
*                                                                       04637902
         SPACE 3                                                        04638802
N0       EQU   0                   0                                    04639702
N1       EQU   1                   1                                    04640602
N2       EQU   2                   2                                    04641502
N3       EQU   3                   3                                    04642402
N4       EQU   4                   4                                    04643302
N5       EQU   5                   5                                    04644202
N8       EQU   8                   8                                    04645102
N9       EQU   9                   9                                    04646002
N13      EQU   13                       CONSTANT 13             YA00153 04646402
X80      EQU   X'80'               MASK TO SET HIGH ORDER BIT OF BYTE   04646902
CDECODE  EQU   9                   CHECKCODE FOR CDE                    04647802
CDELEN   EQU   32                  LENGTH FOR CDE                Y02076 04648702
XLCODE   EQU   X'17'               CHECKCODE FOR EXTENT LIST            04649602
LLEJCODE EQU   X'0A'               CHECKCODE FOR LLE W/CDE ON JPQ       04650502
LLELCODE EQU   X'0E'               CHECKCODE FOR LLE W/CDE ON LPAQ      04651400
LLELEN   EQU   12                  LENGTH OF AN LLE              Y02076 04661402
LLEAPLEN EQU   12                  LENGTH OF SUR APPENDAGE FOR LLE      04663400
PRBSCODE EQU   5                   CHECKCODE FOR SYNCHED PRB            04663800
PRBLCODE EQU   X'0C'               CHECKCODE FOR PRB W/CDE ON LPAQ      04664200
PRBJCODE EQU   X'0B'               CHECKCODE FOR PRB W/CDE ON JPQ       04664600
SVRB234C EQU   X'1F'               CHECKCODE FOR TYPE 2, 3, 4 SVRB      04664700
SVRB4NCD EQU   X'1E'               CHECKCODE FOR TYPE 4N SVRB           04667800
SVRBEOVC EQU   X'1D'               EOV SVRB CODE IN SUR          Y02076 04668002
SVRB234A EQU   5                   SUR APP. LEN. FOR TYPE 2,3,4, SVRB   04669800
RBLPALEN EQU   12                  SUR APP. LEN. FOR 4N SVRB, LPAQ PRB  04671800
NSTAECOD EQU   X'0D'               CHECKCODE FOR TCBNSTAE FIELD         04673800
NSTAELEN EQU   4                   LENGTH OF TCBNSTAE FIELD OF TCB      04673900
SCBCODE  EQU   X'11'               CHECKCODE FOR SCB                    04676200
FOECODE  EQU   X'08'               CHECKCODE FOR FOE                    04680200
CC0      EQU   8                   MASK FOR CONDITION CODE 0            04680600
EQ       EQU   8                   MASK FOR EQUAL COMPARE (CC=0)        04680700
NE       EQU   7                   MASK FOR UNEQUAL COMPARE (CC=1,2,3)  04680800
ONES     EQU   1                   MASK TO BRANCH ON ONES (CC=3)        04683100
M1       EQU   1                   MASK FOR BYTE 3 OF REG               04685100
M3       EQU   3                   MASK FOR BYTES 2&3 OF REG            04687100
M6       EQU   6                   MASK FOR BYTES 1&2 OF REG            04687500
M7       EQU   7                   MASK FOR ICM/STCM TO GET 3 LO BYTES  04687600
M8       EQU   8                   MASK FOR ICM TO BYTE 0 OF REG.       04687700
MF       EQU   15                  MASK FOR ICM FOR WHOLE REG           04688200
PC0      EQU   0                   MASK TO TEST FOR POST CODE OF 0      04688600
PC4      EQU   4                   MASK TO TEST FOR POST CODE OF 4      04689000
PC40     EQU   X'40'                   ECB CODE-SUCCESS PGFIX  @ZA01488 04690002
ON       EQU   255                 ALL ONES                             04691402
SURL     EQU   400                 LENGTH OF SUR BUFFER          YM7049 04692402
CHAR9    EQU   C'9'                EBCDIC 9                             04693402
ERR036   EQU   36                  ERROR CODE FOR I/O ERROR    @ZSUT222 04694837
ERR052   EQU   52                  ERROR CODE IF LPA OR NUCLEUS@ZSUT222 04695237
*                                  MODULE HAS BEEN REMOVED     @ZSUT222 04695637
*                                  SINCE CHECKPOINT WAS TAKEN. @ZSUT222 04696037
ERR053   EQU   53                  ERROR CODE IF LPA OR NUCLEUS@ZSUT222 04696437
*                                  MODULE HAS BEEN MOVED SINCE @ZSUT222 04696837
*                                  CHECKPOINT WAS TAKEN.       @ZSUT222 04697237
ERR201   EQU   201                      PGFIX ERROR CODE       @ZSUT222 04697637
ERR202   EQU   202                      SETLOCK ERROR CODE     @ZSUT222 04698037
ZERO     EQU   0                        0 FOR TESTING RET CODE  YA00153 04699502
ZEROES   EQU   8                        CONDITION FOR BCR       YA00153 04700402
WLR      EQU   X'40'                    WRONG LENGTH RECORD     YA00153 04701402
*                                       INDICATION IN IOB       YA00153 04702402
ERR042   EQU   42                       ERROR CODE FOR WRONG   @ZSUT222 04703437
*                                       LENGTH RECORD WHILE     YA00153 04704402
*                                       READING CHKPT D/S       YA00153 04705402
         EJECT                                                          04706402
*                                                                       04707402
*              DESCRIPTION OF REPMAIN WORK AREA                         04708402
*                                                                       04709402
         SPACE 3                                                        04710402
RPMWA1   DSECT                                                          04711402
RPMERAS1 DS    F                   TEMP SAVE AREA                Y02076 04712402
RMNEOV   DS    A                   RESERVED                             04713402
RSBFSTAD DS    A                   BUFFER POINTERS                      04714402
RSBFLWA  DS    A                   *                                    04715402
RPMMSS1  DS    A                   ADDRESS OF NEW STC MSS CHAIN         04716402
RPMMSS2  DS    A                   ADDRESS OF NEW INIT MSS CHAIN        04717402
RPMMSS3  DS    A                   ADDRESS OF NEW P/P MSS CHAIN         04718402
RPMRB    DS    A                   ADDRESS OF RESTORED RB CHAIN         04719402
RPMLLE   DS    A                   ADDRESS OF RESTORED LLE CHAIN        04720402
RPMCDE   DS    A                   ADDRESS OF RESTORED CDE CHAIN        04721402
RPMDEB   DS    A                   ADDRESS OF RESTORED DEB CHAIN        04722402
RPMFOE   DS    A                   ADDRESS OF RESTORED FOE CHAIN        04723402
RSCORE   DS    A                   ADDRESS OF CORE ACQUIRED BY LAST GM  04724402
RSW001   DS    F                   *                                    04725402
RSW002   DS    F                   *                                    04726402
RPLNT    DS    A                   LENGTH OF THE BLOCK                  04727402
RMADEOV  DS    F                   SAVE AREA FOR INFORMATION NEEDED     04728402
         DS    0D                  ALIGNMENT                            04729402
CKSAVAR  DS    16F                 SAVE AREA                            04730402
CKSAVAR6 EQU   CKSAVAR+24          SAVE CELL FOR GPR'S 6-9       Y02076 04731402
CKSAVAR7 EQU   CKSAVAR+28          SAVE CELL FOR REG 7           Y02076 04732402
CKSAVARE EQU   CKSAVAR+56          SAVE CELL FOR GPR 14.                04733402
RPMN40   DS    D                   MODULE NAME FOR XCTL                 04734402
RP40XCTL DS    F                   POINTER TO XCTL PARAMETER LIST       04735402
RSSWIT1  DS    X                   SWITCH                               04736402
BIGBLOCK EQU   1                   BIG BLOCK SWITCH                     04737402
RSAPPLNT DS    F                   LENGTH OF SUR APPENDAGE              04738402
RMCDSAV  DS    F                   SAVE CELL FOR LPA CDE SEARCH         04739402
         EJECT                                                          04740402
         IEEVRSWA                                                       04741402
         EJECT                                                          04742402
         CVT   DSECT=YES                                                04743402
         EJECT                                                          04744402
         IHASCVT                                                        04745402
         EJECT                                                          04746402
         IKJTCB                                                         04747402
         EJECT                                                          04748402
         IKJRB                                                          04749402
         EJECT                                                          04750402
         IHASCB                                                         04751402
         EJECT                                                          04752402
         IHACDE                                                         04753402
         EJECT                                                          04754402
         IHAPSA                                                         04755402
         EJECT                                                          04756402
         IHAXTLST                                                       04757402
         EJECT                                                          04758402
         IHALLE                                                         04759402
         EJECT                                                          04760402
         IHAFOE                                                         04761402
         EJECT                                                          04762402
         IHADCB DSORG=(PO,PS),DEVD=(DA,TA)                              04763402
         END                                                            04764437
