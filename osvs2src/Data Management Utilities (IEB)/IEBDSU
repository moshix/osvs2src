         TITLE 'IEBDSU IEBCOPY S DIRECTORY SET UP FOR UNLOAD'           00010000
         LCLA  &T,&SPN                                            0001  00020000
.@001    ANOP                                                     0001  00030000
IEBDSU   CSECT ,                                                  0001  00040000
         STM   @E,@C,12(@D)                                       0001  00050000
         BALR  @B,0                                               0001  00060000
@PSTART  DS    0H                                                 0001  00070000
         USING @PSTART+00000,@B                                   0001  00080000
         ST    @D,@SAV001+4                                       0001  00090000
         LA    @F,@SAV001                                         0001  00100000
         ST    @F,8(0,@D)                                         0001  00110000
         LR    @D,@F                                              0001  00120000
         USING IEBMCA,MCABASE                                           00130000
         DS    0H                                                       00140000
*         SWITCH1(1)='0'B;              /* MAKE SURE IEBMGI WILL INIT   00150000
*                                          ITSELF FIRST TIME THROUGH  * 00160000
         NI    SWITCH1,B'01111111'                                0023  00170000
*         FLG5='00'X;                   /* INIT THESE SWITCHES TO ZERO* 00180000
         MVI   FLG5,X'00'                                         0024  00190000
*         FLG4(2)='0'B;                 /* ASSURE THAT LAST ENTRY BIT   00200000
*                                          IS OFF.                    * 00210000
         NI    FLG4,B'10111111'                                   0025  00220000
*         FLG7(3)='1'B;                 /* INDIC THAT DIR MERGE IS      00230000
*                                          BEING DONE.                * 00240000
         OI    FLG7,B'00100000'                                   0026  00250000
*         FLG7(1)='0'B;                 /* ASSURE THAT SWITCH INDIC     00260000
*                                          COPY PHASE IS OFF.         * 00270000
         NI    FLG7,B'01111111'                                   0027  00280000
*         SWITCH1(4)='1'B;              /* INDIC THAT DIR SET UP IS     00290000
*                                          BEING DONE FOR UNLOAD.     * 00300000
         OI    SWITCH1,B'00010000'                                0028  00310000
*         BLKAD=BEGFST1;                /* INIT ADDRESS WHERE TO BUILD  00320000
*                                          DIR BLOCK TO BEGIN OF BUF  * 00330000
         MVC   BLKAD+1(3),BEGFST1                                 0029  00340000
         MVI   BLKAD,X'00'                                        0029  00350000
*                                                                       00360000
*         CALL PREPBLK;                 /* GO PREPARE A BLOCK         * 00370000
         BAL   @E,PREPBLK                                         0030  00380000
*         CALL GETDE;                   /* GO GET DIR ENTRIES         * 00390000
         BAL   @E,GETDE                                           0031  00400000
*                                                                       00410000
*         FLG4(2)='0'B;                 /* ASSURE LAST ENTRY BIT OFF  * 00420000
         NI    FLG4,B'10111111'                                   0032  00430000
*         SWITCH1(4)='0'B;              /* TURN OFF SW INDIC DIR SET    00440000
*                                          UP FOR UNLOAD              * 00450000
         NI    SWITCH1,B'11101111'                                0033  00460000
*         RETURN;                       /* RETURN TO CALLER(IEBDSCPY) * 00470000
         BC    15,@EL01                                           0034  00480000
* /******************************************************************** 00490000
* /* AT THIS ENTRY POINT MEMBER NAMES ARE RETURNED TO THE CONTROL     * 00500000
* /* TABLE SO THAT THE MESSAGE ROUTINE CAN FIND THEM.                 * 00510000
* /******************************************************************** 00520000
*                                                                       00530000
* IEBDSU1:  ENTRY;                                                      00540000
IEBDSU1  STM   @E,@C,12(@D)                                       0035  00550000
         BALR  @B,0                                               0035  00560000
         LA    @F,IEBDSU1-IEBDSU                                  0035  00570000
         SR    @B,@F                                              0035  00580000
         ST    @D,@SAV001+4                                       0035  00590000
         LA    @F,@SAV001                                         0035  00600000
         ST    @F,8(0,@D)                                         0035  00610000
         LR    @D,@F                                              0035  00620000
*         SWITCH1(1)='0'B;              /* MAKE SURE IEBMGI WILL INIT   00630000
*                                          ITSELF FIRST TIME THROUGH  * 00640000
@9FF     NI    SWITCH1,B'01111111'                                0036  00650000
*         FLG5='00'X;                   /* INIT THESE SWITCHES TO ZERO* 00660000
         MVI   FLG5,X'00'                                         0037  00670000
*         FLG4(2)='0'B;                 /* ASSURE THAT LAST ENTRY BIT   00680000
*                                          IS OFF.                    * 00690000
         NI    FLG4,B'10111111'                                   0038  00700000
*         FLG7(3)='1'B;                 /* INDIC THAT DIR MERGE IS      00710000
*                                          BEING DONE.                * 00720000
         OI    FLG7,B'00100000'                                   0039  00730000
*         FLG7(1)='0'B;                 /* ASSURE THAT SWITCH INDIC     00740000
*                                          COPY PHASE IS OFF.         * 00750000
         NI    FLG7,B'01111111'                                   0040  00760000
*                                                                       00770000
* /******************************************************************** 00780000
* /* THIS GENERATE BRANCHES TO IEBMGI TO GET ONE DIRECTORY ENTRY      * 00790000
* /* ADDRESS IN IDEAD                                                 * 00800000
* /******************************************************************** 00810000
*                                                                       00820000
* DSU10006: GENERATE;                                                   00830000
DSU10006 EQU   *                                                  0041  00840000
         STM   RETAD,ENTPT,SV6         SAVE RETURN AND ENTRY ADDRESS    00850000
         L     ENTPT,VIEBMGI           ROUTINE TO GET 1 DIR ENTRY       00860000
         BALR  RETAD,ENTPT             GO GET A DIR ENTRY               00870000
         LM    RETAD,ENTPT,SV6         RESTORE RETURN AND ENTRY ADDR    00880000
         DS    0H                                                       00890000
*                                                                       00900000
*           /*--------------------------------------------------------* 00910000
*           /* NOW A TEST HAS TO BE MADE TO SEE IF IEBMGI RETURNED A  * 00920000
*           /* DIRECTORY ENTRY OR NOT.                                * 00930000
*           /*--------------------------------------------------------* 00940000
*                                                                       00950000
*           IF SWITCH1(3)='0'B          /* WAS A DIR ENTRY RETURNED   * 00960000
*              THEN                     /* YES                        * 00970000
         TM    SWITCH1,B'00100000'                                0042  00980000
         BC    05,@9FE                                            0042  00990000
*                DO;                                                    01000000
*                  NEWNAME=MEMNAM;      /* PUT NAME IN CONTROL TABLE  * 01010000
         L     @1,IDEAD                                           0044  01020000
         L     @5,TABAD                                           0044  01030000
         LR    @A,@5                                              0044  01040000
         SH    @A,@D1                                             0044  01050000
         MVC   0(8,@A),0(@1)                                      0044  01060000
*                  COPIED(4)='1'B;      /* INDIC MEMBER COPIED        * 01070000
         LR    @A,@5                                              0045  01080000
         SH    @A,@D2                                             0045  01090000
         OI    0(@A),B'00010000'                                  0045  01100000
         BC    15,@9FD                                            0047  01110000
*                END;                                                   01120000
*              ELSE                     /* NO - NO DIR ENTRY RETURNED * 01130000
*                  SWITCH1(3)='0'B;     /* RESET NO ENTRY INDIC       * 01140000
@9FE     NI    SWITCH1,B'11011111'                                0047  01150000
*                                                                       01160000
*             /*------------------------------------------------------* 01170000
*             /* NOW A TEST HAS TO BE MADE TO SEE IF THERE ARE MORE   * 01180000
*             /* DIRECTORY ENTRIES.                                   * 01190000
*             /*------------------------------------------------------* 01200000
*                                                                       01210000
*             IF FLG4(2)='0'B           /* MORE DIR ENTRIES           * 01220000
*                THEN                   /* YES                        * 01230000
@9FD     TM    FLG4,B'01000000'                                   0048  01240000
*                    GO TO DSU10006;    /* GET NEXT ENTRY             * 01250000
         BC    08,DSU10006                                        0049  01260000
*                                                                       01270000
*                ELSE                   /* NO - NO MORE ENTRIES       * 01280000
*                    RETURN;            /* RETURN TO CALLER           * 01290000
         BC    15,@EL01                                           0050  01300000
*                                                                       01310000
* /******************************************************************** 01320000
* /* THIS NESTED PROCEDURE GETS A DIRECTORY ENTRY VIA CTLTAB AND      * 01330000
* /* PUTS THIS ENTRY IN THE DIRECTORY BLOCK, IF THE BLOCK IS FULL, IT * 01340000
* /* WILL CALL THE NESTED PROCEDURE PREPBLK FOR ALLOCATION OF A NEW   * 01350000
* /* DIRECTORY BLOCK                                                  * 01360000
* /******************************************************************** 01370000
*                                                                       01380000
* GETDE:    PROCEDURE;                                                  01390000
@EL01    L     @D,4(0,@D)                                         0051  01400000
         LM    @E,@C,12(@D)                                       0051  01410000
         BCR   15,@E                                              0051  01420000
GETDE    STM   @E,@C,12(@D)                                       0051  01430000
         ST    @D,@SAV002+4                                       0051  01440000
         LA    @F,@SAV002                                         0051  01450000
         ST    @F,8(0,@D)                                         0051  01460000
         LR    @D,@F                                              0051  01470000
*                                                                       01480000
*           RESTRICT(4);                /* ADDRESSABILITY OF IEBMCA   * 01490000
*                                                                       01500000
* /******************************************************************** 01510000
* /* IN THIS GENERATE STATEMENT A BRANCH IS TAKEN TO IEBMGI IN        * 01520000
* /* IEBDSCPY TO OBTAIN THE ADDRESS OF A DIRECTORY ENTRY              * 01530000
* /******************************************************************** 01540000
*                                                                       01550000
* GETDE006: GENERATE;                                                   01560000
GETDE006 EQU   *                                                  0053  01570000
         STM   RETAD,ENTPT,SV6         SAVE RETURN AND ENTRY ADDRESS    01580000
         L     ENTPT,VIEBMGI           GO TO IEBMGI TO GET A DIR ENTRY  01590000
         BALR  RETAD,ENTPT             ADDRESS IN IDEAD                 01600000
         LM    RETAD,ENTPT,SV6         RESTORE RETURN AND ENTRY ADDR    01610000
         DS    0H                                                       01620000
*                                                                       01630000
*           /*--------------------------------------------------------* 01640000
*           /* TEST TO SEE WHETHER IEBMGI RETURNED AN ENTRY OR WHETHER* 01650000
*           /* DUE TO I/O ERROR FROM SYSUT3 NO ENTRY WAS RETURNED.    * 01660000
*           /*--------------------------------------------------------* 01670000
*                                                                       01680000
*           IF SWITCH1(3)='0'B          /* WAS A DIR ENTRY RETURNED?  * 01690000
*              THEN                     /* YES                        * 01700000
         TM    SWITCH1,B'00100000'                                0054  01710000
         BC    05,@9FC                                            0054  01720000
*                DO;                    /* PUT IN DIR BLK FOR OUTPUT  * 01730000
*                  WORK=''B;            /* CLEAR WORK AREA FOR C FIELD* 01740000
         XC    WORK(2),WORK                                       0056  01750000
*                  WORK(9:16)=CFLD;        /* PUT C FIELD ON HWORD BDY* 01760000
         L     @1,IDEAD                                           0057  01770000
         MVC   WORK+1(1),11(@1)                                   0057  01780000
*                  WORK(9:11)='000'B;       /* CLEAR 3 HI ORDER BITS  * 01790000
         NI    WORK+1,B'00011111'                                 0058  01800000
*                  WCOUNT=WORK;         /* PREPARE THIS VALUE FOR ARITH 01810000
*                                          OPERATION                  * 01820000
         MVC   WCOUNT(2),WORK                                     0059  01830000
*                  WCOUNT=              /* TOTAL NB OF USERS BYTES    * 01840000
*                    WCOUNT*2           /* MAKE NB OF HWORDS NB OF BYT* 01850000
*                    + 12;              /* ADD FIXED LEN OF DE        * 01860000
         LA    @E,2                                               0060  01870000
         MH    @E,WCOUNT                                          0060  01880000
         AH    @E,@D3                                             0060  01890000
         STH   @E,WCOUNT                                          0060  01900000
*                                                                       01910000
* /******************************************************************** 01920000
* /* THERE IS A DIRECTORY ENTRY AND ITS LENGTH IS CALCULATED IN       * 01930000
* /* WCOUNT A TEST HAS TO BE MADE TO SEE WHETHER THE ENTRY WILL FIT   * 01940000
* /* INTO THIS DIRECTORY BLOCK OR IF A NEW ONE IS NEEDED              * 01950000
* /******************************************************************** 01960000
*                                                                       01970000
* GETDE012:   IF BC + WCOUNT <=254      /* WILL ENTRY FIT IN BLOCK?   * 01980000
*                THEN                   /* YES                        * 01990000
GETDE012 LH    @F,WCOUNT                                          0061  02000000
         AH    @F,BC                                              0061  02010000
         CH    @F,@D4                                             0061  02020000
         BC    02,@9FB                                            0061  02030000
*                  DO;                  /* PUT IT IN THIS BLOCK       * 02040000
*                    ENTRIES(BC+1:BC+WCOUNT)=ENTRI(1:WCOUNT);           02050000
         L     @1,IDEAD                                           0063  02060000
         LR    @E,@1                                              0063  02070000
         LH    @5,WCOUNT                                          0063  02080000
         AH    @5,BC                                              0063  02090000
         LA    @C,1                                               0063  02100000
         AH    @C,BC                                              0063  02110000
         SR    @5,@C                                              0063  02120000
         L     @8,BLOCK                                           0063  02130000
         LA    @A,21(@C,@8)                                       0063  02140000
         EX    @5,@MVC                                            0063  02150000
*                                                                       02160000
*               /*----------------------------------------------------* 02170000
*               /* THE ENTRY FITS INTO THE PRESENT BLOCK, A TEST IS   * 02180000
*               /* NOW PERFORMED TO SEE WETHER A NEW NAME WAS SPECI-  * 02190000
*               /* -FIED IN A SELECTIVE COPY STMT.                    * 02200000
*               /*----------------------------------------------------* 02210000
*                                                                       02220000
*               IF SWITCH1(2)='1'B      /* NEED TO PLUG IN NEWNAME?   * 02230000
*                  THEN                 /* YES PLUG IN NEW NAME       * 02240000
         TM    SWITCH1,B'01000000'                                0064  02250000
         BC    12,@9FA                                            0064  02260000
*                      ENTRIES(BC+1:BC+8)=NEWNAME;                      02270000
         L     @5,TABAD                                           0065  02280000
         LR    @E,@5                                              0065  02290000
         SH    @E,@D1                                             0065  02300000
         LA    @9,8                                               0065  02310000
         AH    @9,BC                                              0065  02320000
         LA    @6,1                                               0065  02330000
         AH    @6,BC                                              0065  02340000
         SR    @9,@6                                              0065  02350000
         LA    @A,21(@6,@8)                                       0065  02360000
         EX    @9,@MVC                                            0065  02370000
*                  ELSE;                /* NO NO NEED FOR NEW NAME    * 02380000
@9FA     EQU   *                                                  0066  02390000
*                    OLDKEY=ENTRIES(BC+1:BC+8);       /* SAVE NAME OF   02400000
*                                                        ENTRY FOR KEY* 02410000
@9F9     LA    @1,8                                               0067  02420000
         AH    @1,BC                                              0067  02430000
         LA    @5,1                                               0067  02440000
         AH    @5,BC                                              0067  02450000
         SR    @1,@5                                              0067  02460000
         L     @C,BLOCK                                           0067  02470000
         LA    @E,21(@5,@C)                                       0067  02480000
         LA    @A,OLDKEY                                          0067  02490000
         MVI   0(@A),C' '                                         0067  02500000
         MVC   1(007,@A),0(@A)                                    0067  02510000
         EX    @1,@MVC                                            0067  02520000
*                    BC=BC+WCOUNT;      /* UPDATE NB OF BYTES IN DIR    02530000
*                                          BLOCK                      * 02540000
         LH    @F,WCOUNT                                          0068  02550000
         AH    @F,BC                                              0068  02560000
         STH   @F,BC                                              0068  02570000
*                    GO TO GETDE018;    /* GO SEE IF MORE ENTRIES TO    02580000
*                                          PROCESS.                   * 02590000
         BC    15,GETDE018                                        0069  02600000
*                  END;                                                 02610000
*                ELSE                   /* NO DOES NOT FIT IN BLOCK   * 02620000
*                  DO;                  /* COMPLETE BLK GET NEW ONE   * 02630000
*                    KEY=OLDKEY;        /* FILL IN LAST ENTRY NAME AS   02640000
*                                          KEY OF THIS BLOCK          * 02650000
@9FB     L     @1,BLOCK                                           0072  02660000
         MVC   12(8,@1),OLDKEY                                    0072  02670000
*                    BCNT=BC+2;         /* FILL IN NB OF BYTES USED IN  02680000
*                                          THIS DIR BLOCK             * 02690000
         LA    @F,2                                               0073  02700000
         AH    @F,BC                                              0073  02710000
         ST    @F,@TEMP4                                          0073  02720000
         MVC   20(2,@1),@TEMP4+2                                  0073  02730000
*                    BLKAD=             /* ADDRESS OF END OF THIS BLK * 02740000
*                      BLOCK+           /* ADDRESS OF BEGIN OF BLK +  * 02750000
*                      276;             /* LENGHT OF A DIR BLOCK      * 02760000
         LA    @F,276                                             0074  02770000
         A     @F,BLOCK                                           0074  02780000
         ST    @F,BLKAD                                           0074  02790000
*                    CALL PREPBLK;      /* GO PREPARE NEW BLOCK       * 02800000
         BAL   @E,PREPBLK                                         0075  02810000
*                    GO TO GETDE012;    /* PUT  ENTRY IN NEXT AVAIL-    02820000
*                                          -LABLE BLOCK.              * 02830000
         BC    15,GETDE012                                        0076  02840000
*                  END;                                                 02850000
*                END;                                                   02860000
*              ELSE                     /* NO NO ENTRY RETURNED       * 02870000
*                 SWITCH1(3)='0'B;      /* TURN OFF SW INDIC NO ENTRY * 02880000
@9FC     NI    SWITCH1,B'11011111'                                0079  02890000
*                                                                       02900000
* /******************************************************************** 02910000
* /* NOW THE ENTRY HAS BEEN PROCESSED, A TEST IS MADE TO SEE IF       * 02920000
* /* THERE ARE MORE DIRECTORY ENTRIES TO PROCESS                      * 02930000
* /******************************************************************** 02940000
*                                                                       02950000
* GETDE018: IF FLG4(2)='0'B             /* MORE ENTRIES TO GET?       * 02960000
*              THEN                     /* YES                        * 02970000
@9F7     EQU   *                                                  0080  02980000
GETDE018 TM    FLG4,B'01000000'                                   0080  02990000
*                GO TO GETDE006;        /* GO GET NEXT ENTRY          * 03000000
         BC    08,GETDE006                                        0081  03010000
*              ELSE                     /* NO                         * 03020000
*                DO;                    /* NO MORE ENTRIES TO PROCESS * 03030000
*                                                                       03040000
* /******************************************************************** 03050000
* /* THERE ARE NO MORE ENTRIES TO PROCESS A FF DIRECTORY ENTRY HAS    * 03060000
* /* TO BE MADE, A TEST TO SEE WETHER A NEW BLOCK IS NEEDED FOR THIS  * 03070000
* /* ENTRY FOLLOWS                                                    * 03080000
* /******************************************************************** 03090000
*                                                                       03100000
* GETDE024:   IF BC+12 <= 254           /* WILL FF REC FIT IN THIS      03110000
*                                          BLOCK                      * 03120000
*                THEN                   /* YES                        * 03130000
GETDE024 LA    @F,12                                              0083  03140000
         AH    @F,BC                                              0083  03150000
         CH    @F,@D4                                             0083  03160000
         BC    02,@9F6                                            0083  03170000
*                  DO;                  /* PUT FF REC IN THIS BLOCK   * 03180000
*                    ENTRIES(BC+1:BC+8)='FFFFFFFFFFFFFFFF'X;/*          03190000
*                                                      INSERT FFNAME  * 03200000
         LA    @E,@X6                                             0085  03210000
         LA    @1,8                                               0085  03220000
         AH    @1,BC                                              0085  03230000
         LA    @5,1                                               0085  03240000
         AH    @5,BC                                              0085  03250000
         SR    @1,@5                                              0085  03260000
         L     @C,BLOCK                                           0085  03270000
         LA    @A,21(@5,@C)                                       0085  03280000
         EX    @1,@MVC                                            0085  03290000
*                    BCNT= BC + 12 + 2;     /* PUT IN BYTE COUNT      * 03300000
         LA    @F,2                                               0086  03310000
         AH    @F,@D3                                             0086  03320000
         AH    @F,BC                                              0086  03330000
         ST    @F,@TEMP4                                          0086  03340000
         MVC   20(2,@C),@TEMP4+2                                  0086  03350000
*                    KEY='FFFFFFFFFFFFFFFF'X;/*                         03360000
*                                          SET KEY OF BLOCK TO FF'S   * 03370000
         MVC   12(8,@C),@X6                                       0087  03380000
*                    BLKAD=BLOCK + 276;    /* POINT TO END OF THIS      03390000
*                                             BLOCK                   * 03400000
         LA    @F,276                                             0088  03410000
         A     @F,BLOCK                                           0088  03420000
         ST    @F,BLKAD                                           0088  03430000
*                                                                       03440000
* /******************************************************************** 03450000
* /* NOW THAT THE FF ENTRY IS PLACED IN A BLOCK, A END OF FILE MARK   * 03460000
* /* CONSISTING OF 12 BYTES OF ZERO'S HAS TO BE INTRODUCED IN THE     * 03470000
* /* BUFFER, A TEST FOR THIS SPACE FOLLOWS.                           * 03480000
* /******************************************************************** 03490000
*                                                                       03500000
* GETDE030:       IF BLKAD+12 <= END2ND2   /* WILL EOF FIT IN BUFFER  * 03510000
*                  THEN                 /* YES                        * 03520000
GETDE030 LA    @F,12                                              0089  03530000
         A     @F,BLKAD                                           0089  03540000
         C     @F,END2ND2                                         0089  03550000
         BC    02,@9F5                                            0089  03560000
*                    DO;                /* INSERT EOF (12 BYTES ZERO) * 03570000
*                      ENDOF(2)= '00'X;  /* ZERO OUT THE 12 BYTES FOR   03580000
*                                           EOF                       * 03590000
         L     @1,BLKAD                                           0091  03600000
         MVI   1(@1),X'00'                                        0091  03610000
*                      ENDOF(3:12)=ENDOF(2:11);                         03620000
         MVC   2(10,@1),1(@1)                                     0092  03630000
*                      ENDOF(1)='40'X+'80'X;       /* INDIC LAST REC    03640000
*                                                     IN ANY BUFFER   * 03650000
         LA    @F,X'80'                                           0093  03660000
         LA    @0,X'40'                                           0093  03670000
         AR    @F,@0                                              0093  03680000
         STC   @F,0(0,@1)                                         0093  03690000
*                                                                       03700000
*                      /*********************************************** 03710000
*                      /* NOW,THE WHOLE DIRECTORY IS SET UP IEBSAM2   * 03720000
*                      /* MUST NOW BE CALLED TO WRITE OUT THE BUFFER  * 03730000
*                      /*********************************************** 03740000
*                                                                       03750000
*                      CALL IEBSAM2;    /* GO WRITE OUT BUFFER        * 03760000
         BAL   @E,IEBSAM2                                         0094  03770000
*                      RETURN;          /* THE WHOLE DIR IS SET UP    * 03780000
         BC    15,@EL01                                           0095  03790000
*                    END;                                               03800000
*                  ELSE                 /* NO EOF DOES NOT FIT IN BUF * 03810000
*                    DO;                /* PREPARE TO WRITE DATA      * 03820000
*                      CNT(1)='40'X +     /* INDICATE LAST RECORD IN  * 03830000
*                                 '80'X;  /* THE BUFFER               * 03840000
@9F5     LA    @F,X'80'                                           0098  03850000
         LA    @0,X'40'                                           0098  03860000
         AR    @F,@0                                              0098  03870000
         L     @1,BLOCK                                           0098  03880000
         STC   @F,0(0,@1)                                         0098  03890000
*                                                                       03900000
*                      /*********************************************** 03910000
*                      /* NOW THE BUFFER MUST BE WRITTEN OUT BEFORE   * 03920000
*                      /* THE END OF FILE RECORD CAN BE WRITTEN       * 03930000
*                      /*********************************************** 03940000
*                                                                       03950000
*                      CALL IEBSAM2;    /* GO WRITE OUT BUFFERS       * 03960000
         BAL   @E,IEBSAM2                                         0099  03970000
*                      BLKAD=BEGFST1;   /* BUILD AGAIN AT BEGINNING     03980000
*                                          OF BUFFER AREA             * 03990000
         MVC   BLKAD+1(3),BEGFST1                                 0100  04000000
         MVI   BLKAD,X'00'                                        0100  04010000
*                      GO TO GETDE030;  /* GO SET UP EOF FOR DIR      * 04020000
         BC    15,GETDE030                                        0101  04030000
*                    END;                                               04040000
*                  END;                                                 04050000
*                ELSE                   /* NO FF REC DOES NOT FIT     * 04060000
*                  DO;                  /* SET UP BLOCK FOR FF'S      * 04070000
*                    BCNT=BC+2;         /* FILL NB OF BYTES IN BLK    * 04080000
@9F6     LA    @F,2                                               0105  04090000
         AH    @F,BC                                              0105  04100000
         L     @1,BLOCK                                           0105  04110000
         ST    @F,@TEMP4                                          0105  04120000
         MVC   20(2,@1),@TEMP4+2                                  0105  04130000
*                    KEY=OLDKEY;        /* SET BLOCK KEY              * 04140000
         MVC   12(8,@1),OLDKEY                                    0106  04150000
*                    BLKAD=BLOCK+276;   /* NEXT BLOCK ADDRESS         * 04160000
         LA    @F,276                                             0107  04170000
         A     @F,BLOCK                                           0107  04180000
         ST    @F,BLKAD                                           0107  04190000
*                    CALL PREPBLK;      /* GET NEW DIR BLOCK          * 04200000
         BAL   @E,PREPBLK                                         0108  04210000
*                    GO TO GETDE024;    /* MAKE FF ENTRY AND EOF MARK * 04220000
         BC    15,GETDE024                                        0109  04230000
*                  END;                                                 04240000
*                END;                                                   04250000
*           END GETDE;                                                  04260000
* /******************************************************************** 04270000
* /* THIS PART OF THE ROUTINE WILL TEST WHETHER A NEW DIRECTORY BLOCK * 04280000
* /* WILL FIT IN THE BUFFER, IF IT DOES THEN IT WILL PREPARE IT AND   * 04290000
* /* CLEAR IT, IF IT DOES NOT FIT, IT WILL SET THE APPROPRIATE FLAGS  * 04300000
* /* FOR IEBSAM2 AND HAVE THE BUFFER WRITTEN OUT.                     * 04310000
* /******************************************************************** 04320000
*                                                                       04330000
* PREPBLK:  PROCEDURE;                                                  04340000
PREPBLK  STM   @E,@C,12(@D)                                       0113  04350000
         ST    @D,@SAV003+4                                       0113  04360000
         LA    @F,@SAV003                                         0113  04370000
         ST    @F,8(0,@D)                                         0113  04380000
         LR    @D,@F                                              0113  04390000
*                                                                       04400000
*           RESTRICT(4);                /* ADDRESSABILITY OF IEBMCA   * 04410000
*                                                                       04420000
* /******************************************************************** 04430000
* /* THE ADDRESS WHERE A POSSIBLE NEW BLOCK WILL END IS CALCULATED    * 04440000
* /******************************************************************** 04450000
*                                                                       04460000
* PRBLK006: BLKEND=BLKAD + 276;         /* ADD 276 TO CURRENT POSSIBLE  04470000
*                                          DIR BLOCK ADDRESS          * 04480000
PRBLK006 LA    @F,276                                             0115  04490000
         A     @F,BLKAD                                           0115  04500000
         ST    @F,BLKEND                                          0115  04510000
*                                                                       04520000
*           /*--------------------------------------------------------* 04530000
*           /* A NEW BLOCK HAS TO BE PREPARED, A TEST TO SEE IF IT    * 04540000
*           /* FITS IN THE BUFFER HAS TO BE MADE, IF IT DOES NOT FIT, * 04550000
*           /* THE BUFFER IS EMPTIED BEFORE STARTING THE CONSTRUCTION * 04560000
*           /* OF A NEW BLOCK.                                        * 04570000
*           /*--------------------------------------------------------* 04580000
*                                                                       04590000
*           IF BLKEND <= END2ND2        /* TESTING WHETHER A NEW BLOCK  04600000
*                                          WILL FIT INTO BUF.         * 04610000
*              THEN                     /* YES IT DOES, PREPARE BLOCK * 04620000
         L     @F,END2ND2                                         0116  04630000
         C     @F,BLKEND                                          0116  04640000
         BC    04,@9F2                                            0116  04650000
*                DO;                    /* TO FILL IN ENTRIES         * 04660000
*                  BLOCK=BLKAD;         /* UPDATE PTR TO NEW DIR BLOCK* 04670000
         MVC   BLOCK(4),BLKAD                                     0118  04680000
*                  CNT(1)='00'X;        /* SET F BYTE AND MBBCCHHR TO * 04690000
         L     @1,BLOCK                                           0119  04700000
         MVI   0(@1),X'00'                                        0119  04710000
*                  CNT(2:9)=CNT(1:8);             /* ZERO AND SET     * 04720000
         MVC   1(8,@1),0(@1)                                      0120  04730000
*                  CNT(10:12)=KLDL;         /* KEY TO 8, DATA TO 256  * 04740000
         MVC   9(3,@1),KLDL                                       0121  04750000
*                  ENTRIES(1)='00'X;    /* CLEAR AREA FOR DIRECTORIES * 04760000
         MVI   22(@1),X'00'                                       0122  04770000
*                  ENTRIES(2:254)=ENTRIES(1:253);            /*ENTRIES* 04780000
         MVC   23(253,@1),22(@1)                                  0123  04790000
*                                                                       04800000
*                  /*************************************************** 04810000
*                  /* NOW THE BLOCK HAS BEEN PREPARED AND ENTRIES CAN * 04820000
*                  /* BE INSERTED.                                    * 04830000
*                  /*************************************************** 04840000
*                                                                       04850000
*                  BC=0;                /* SET NB OF BYTES IN THIS BLK  04860000
*                                          TO ZERO                    * 04870000
         SR    @F,@F                                              0124  04880000
         STH   @F,BC                                              0124  04890000
*                  RETURN;              /* GO BACK TO CALLER,BLK READY* 04900000
         BC    15,@EL01                                           0125  04910000
*                END;                   /* END OF BLOCK PREPARATION   * 04920000
*              ELSE                     /* NO - NO MORE BUFFER SPACE  * 04930000
*                DO;                    /* PREPARE TO WRITE OUT DATA  * 04940000
*                  CNT(1)='40'X+'80'X;      /* INDICATE LAST RECORD     04950000
*                                              IN BUFFER              * 04960000
@9F2     LA    @F,X'80'                                           0128  04970000
         LA    @0,X'40'                                           0128  04980000
         AR    @F,@0                                              0128  04990000
         L     @1,BLOCK                                           0128  05000000
         STC   @F,0(0,@1)                                         0128  05010000
*                  CALL IEBSAM2;        /* WRITE OUT BUFFER           * 05020000
         BAL   @E,IEBSAM2                                         0129  05030000
*                  BLKAD=BEGFST1;       /* INIT ADDRESS WHERE TO START  05040000
*                                          TO BUILD NEW BLOCK         * 05050000
         MVC   BLKAD+1(3),BEGFST1                                 0130  05060000
         MVI   BLKAD,X'00'                                        0130  05070000
*                  GO TO PRBLK006;      /* GO PREPARE DIRECTORY BLOCK * 05080000
         BC    15,PRBLK006                                        0131  05090000
*                END;                                                   05100000
*           END PREPBLK;                                                05110000
* /******************************************************************** 05120000
* /* THIS  NESTED PROCEDURE BRANCHES TO IEBWSAM TO WRITE OUT THE DIR  * 05130000
* /******************************************************************** 05140000
*                                                                       05150000
* IEBSAM2:  PROCEDURE OPTIONS (DONTSAVE,NOSAVEAREA);                    05160000
IEBSAM2  EQU   *                                                  0134  05170000
*                                                                       05180000
*           GENERATE;                                                   05190000
         STM   RETAD,ENTPT,SV6         SAVE RETURN AND ENTRY ADDR       05200000
         L     ENTPT,VWSAM             ADDR OF WRITE ROUTINE            05210000
         MVC   WRTNEXT+1(3),BEGFST1    POINT TO START OF BUFF  @ZA04405 05220000
         BALR  RETAD,ENTPT             WRITE OUT BUFFER                 05230000
         LM    RETAD,ENTPT,SV6         RESTORE RETURN AND ENTRY ADDR    05240000
         DS    0H                                                       05250000
*           RETURN;                     /* BUFFER WRITTEN OUT -BACK TO  05260000
*                                          CALLER                     * 05270000
*           END IEBSAM2;                                                05280000
@EL04    BCR   15,@E                                              0137  05290000
*         END IEBDSU;                                                   05300000
@DATA1   EQU   *                                                        05310000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           05320000
@1       EQU   01                                                       05330000
@2       EQU   02                                                       05340000
@3       EQU   03                                                       05350000
@4       EQU   04                                                       05360000
@5       EQU   05                                                       05370000
@6       EQU   06                                                       05380000
@7       EQU   07                                                       05390000
@8       EQU   08                                                       05400000
@9       EQU   09                                                       05410000
@A       EQU   10                                                       05420000
@B       EQU   11                                                       05430000
@C       EQU   12                                                       05440000
@D       EQU   13                                                       05450000
@E       EQU   14                                                       05460000
@F       EQU   15                                                       05470000
@D1      DC    H'8'                                                     05480000
@D2      DC    H'9'                                                     05490000
@D3      DC    H'12'                                                    05500000
@D4      DC    H'254'                                                   05510000
@MVC     MVC   0(1,@A),0(@E)                                            05520000
         DS    0F                                                       05530000
@X6      DC    X'FFFFFFFFFFFFFFFF'                                      05540000
         DS    0D                                                       05550000
@DATA    EQU   *                                                        05560000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   05570000
         ORG   @DATA+00000072                                           05580000
KLDL     EQU   *                   3 BYTE(S)                            05590000
         DC    X'080100'                                                05600000
WORK     EQU   @DATA+00000076      16 BIT(S) ON HWORD                   05610000
WCOUNT   EQU   @DATA+00000078      HALFWORD INTEGER                     05620000
MEMTABLE EQU   00000009            9 BYTE(S)                            05630000
COPIED   EQU   MEMTABLE+00000000   8 BIT(S)                             05640000
NEWNAME  EQU   MEMTABLE+00000001   8 BYTE(S)                            05650000
DIRBLK   EQU   00000000            276 BYTE(S)                          05660000
CNT      EQU   DIRBLK+00000000     12 BYTE(S)                           05670000
KEY      EQU   DIRBLK+00000012     8 BYTE(S)                            05680000
BCNT     EQU   DIRBLK+00000020     2 BYTE(S)                            05690000
ENTRIES  EQU   DIRBLK+00000022     254 BYTE(S)                          05700000
ENTRI    EQU   00000000            74 BYTE(S)                           05710000
MEMNAM   EQU   ENTRI+00000000      8 BYTE(S)                            05720000
TTR      EQU   ENTRI+00000008      3 BYTE(S)                            05730000
CFLD     EQU   ENTRI+00000011      8 BIT(S)                             05740000
OPUSDAT  EQU   ENTRI+00000012      62 BYTE(S)                           05750000
BLKEND   EQU   @DATA+00000080      FULLWORD POINTER                     05760000
ENDOF    EQU   00000000            12 BYTE(S)                           05770000
         ENTRY IEBDSU1                                                  05780000
@SAV002  EQU   @DATA+00000084      72 BYTE(S) ON WORD                   05790000
@SAV003  EQU   @DATA+00000156      72 BYTE(S) ON WORD                   05800000
         ORG   @DATA                                                    05810000
         DS    00000228C                                                05820000
@TEMPS   DS    0F                                                       05830000
@TEMP4   DC    F'0'                                                     05840000
MCABASE  EQU   4                       BASE FOR IEBMCA                  05850000
RETAD    EQU   14                      RETURN ADDR FROM OTHER MODULES   05860000
ENTPT    EQU   15                      ENTRY PNT ADDR FROM OTHER MODULE 05870000
PATCHLN  EQU   (*-IEBDSU)/20           5 PERCENT OF MODULE LENGTH       05880000
PATCH    DC    XL(PATCHLN)'00'         MODULE PATCH AREA                05890000
IEBMCA   DSECT                         MACRO TO GENERATH THE COMMUNI-   05900000
         IEBMCA                        -CATION AREA IEBMCA              05910000
@DATEND  EQU   *                                                        05920000
@9F8     EQU   @9F7                                                     05930000
@EL02    EQU   @EL01                                                    05940000
@9F3     EQU   @EL01                                                    05950000
@EL03    EQU   @EL01                                                    05960000
@9F1     EQU   @EL01                                                    05970000
@9F4     EQU   @9F3                                                     05980000
         END   IEBDSU                                                   05990000
