         TITLE 'PRINTER IMAGE LIBRARY UTILITY -IEBIMAGE- .             *00001000
                        '                                               00002000
IEBIMAGE CSECT ,                                                01S0001 00003000
@MAINENT DS    0H                                               01S0001 00004000
         USING *,@15                                            01S0001 00005000
         B     @PROLOG                                          01S0001 00006000
         DC    AL1(16)                                          01S0001 00007000
         DC    C'IEBIMAGE  76.350'                              01S0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                  01S0001 00010000
         BALR  @09,0                                            01S0001 00011000
@PSTART  LA    @10,4095(,@09)                                   01S0001 00012000
         LA    @11,4095(,@10)                                   01S0001 00013000
         LA    @12,4095(,@11)                                   01S0001 00014000
         USING @PSTART,@09                                      01S0001 00015000
         USING @PSTART+4095,@10                                 01S0001 00016000
         USING @PSTART+8190,@11                                 01S0001 00017000
         USING @PSTART+12285,@12                                01S0001 00018000
         ST    @13,@SA00001+4                                   01S0001 00019000
         LA    @14,@SA00001                                     01S0001 00020000
         ST    @14,8(,@13)                                      01S0001 00021000
         LR    @13,@14                                          01S0001 00022000
BACK     EQU   4                                                        00023000
FORE     EQU   8                                                        00024000
*        PARAM = R1;                   /* SAVE PARAMETER LIST POINTER*/ 00025000
         LR    PARAM,R1                                         01S0101 00026000
*        R0 = LENGTH(WORKAREA);        /* GET SIZE OF WORKAREA       */ 00027000
         LH    R0,@CH01845                                      01S0102 00028000
*        GEN (GETMAIN  R,LV=(0));      /*  FOR GETMAIN.              */ 00029000
         GETMAIN  R,LV=(0)                                              00030000
*        BUFAD = R1;                   /* ESTABLISH WORKAREA ADDR    */ 00031000
         LR    BUFAD,R1                                         01S0104 00032000
*        RESPECIFY (R0)   UNRESTRICTED;                         01S0105 00033000
*/********************************************************************* 00034000
**                                                                    * 00035000
**  THIS SEGMENT WILL SET THE ENTIRE WORKAREA TO ZERO.                * 00036000
**                                                                    * 00037000
**********************************************************************/ 00038000
*                                                               02S0106 00039000
*        RESPECIFY (RECAREA,           /*                            */ 00040000
*                   RECSIZE,           /* RESTRICT NECESSARY         */ 00041000
*                   TRANSIZE,          /* REGISTERS FOR MOVE LONG.   */ 00042000
*                   BUFFPTR)  RESTRICTED;                       02S0106 00043000
*                                                               02S0106 00044000
*        RECAREA = BUFAD;              /* ADDRESS OF WORKAREA.       */ 00045000
         LR    RECAREA,BUFAD                                    02S0107 00046000
*        RECSIZE = LENGTH(WORKAREA);   /* SIZE OF WORKAREA.          */ 00047000
         LH    RECSIZE,@CH01845                                 02S0108 00048000
*        TRANSIZE = ZERO;              /* USE PADDING BYTE.          */ 00049000
         SLR   TRANSIZE,TRANSIZE                                02S0109 00050000
*        BUFFPTR = ADDR(ZERO);         /* ADDRESS OF A ZERO.         */ 00051000
         LA    BUFFPTR,@CH00462+1                               02S0110 00052000
*                                      /*                            */ 00053000
*        MVCL(RECAREA,BUFFPTR);        /* CLEAR WORKAREA.            */ 00054000
         MVCL  RECAREA,BUFFPTR                                  02S0111 00055000
*                                      /*                            */ 00056000
*        RESPECIFY (RECAREA,           /* FREE REGISTERS FOR         */ 00057000
*                   RECSIZE,           /*  COMPILER USE.             */ 00058000
*                   TRANSIZE,          /*                            */ 00059000
*                   BUFFPTR) UNRESTRICTED;                      02S0112 00060000
*        SYSINAD = ADDR(SYSIN);        /* SET DCB ADDRESSES          */ 00061000
         LA    @02,SYSIN                                        01S0113 00062000
         ST    @02,SYSINAD(,BUFAD)                              01S0113 00063000
*        SYSPRTAD = ADDR(SYSPRINT);    /*  INTO                      */ 00064000
         LA    @02,SYSPRINT                                     01S0114 00065000
         ST    @02,SYSPRTAD(,BUFAD)                             01S0114 00066000
*        UTINAD = ADDR(SYSUTIN);       /*  WORKAREA.                 */ 00067000
         LA    @02,SYSUTIN                                      01S0115 00068000
         ST    @02,UTINAD(,BUFAD)                               01S0115 00069000
*        UTOUTAD = ADDR(SYSUTOUT);     /*                            */ 00070000
         LA    @02,SYSUTOUT                                     01S0116 00071000
         ST    @02,UTOUTAD(,BUFAD)                              01S0116 00072000
*        PAGE = ONE;                   /* SET DEFAULT PAGE NUMBER.   */ 00073000
         MVC   PAGE(2,BUFAD),@CH00060                           01S0117 00074000
*        IF PARMVL1 ^= LAST            /* CHECK FOR USER PARAMETERS. */ 00075000
*          THEN                        /*                            */ 00076000
         TM    PARMVL1(PARAM),B'10000000'                       01S0118 00077000
         BO    @RF00118                                         01S0118 00078000
*            DO;                       /* INTERROGATE USER PARAMETERS*/ 00079000
*/********************************************************************* 00080000
**                                                                    * 00081000
**  THIS SEGMENT WILL INTERROGATE THE PARAMETERS PASSED TO THE        * 00082000
**  UTILITY VIA LINK OR ATTATCH. THE FIRST PARAMETER IS IGNORED, THE  * 00083000
**  SECOND POINTS TO AN ALTERNATE DDNAME LIST, AND THE THIRD POINTS   * 00084000
**  TO A HEADING LIST.                                                * 00085000
**                                                                    * 00086000
**********************************************************************/ 00087000
*        IF LISTLEN => SYS2NO          /* CHECK FOR LIBRARY OUTPUT   */ 00088000
*         & SYS2FLG ^= ZERO            /*  DDNAME.                   */ 00089000
*          THEN                        /*                            */ 00090000
         SLR   @02,@02                                          02S0120 00091000
         ICM   @02,7,PARM2(PARAM)                               02S0120 00092000
         LH    @00,LISTLEN(,@02)                                02S0120 00093000
         CH    @00,@CH00175                                     02S0120 00094000
         BL    @RF00120                                         02S0120 00095000
         CLI   SYS2FLG(@02),0                                   02S0120 00096000
         BE    @RF00120                                         02S0120 00097000
*            DDNAMES(FOUR) = USERU2DD; /* USER SUPPLIED DDNAME.      */ 00098000
         MVC   DDNAMES+24(8,BUFAD),USERU2DD(@02)                02S0121 00099000
*          ELSE                        /*                            */ 00100000
*            DDNAMES(FOUR) = SYSUTDD;  /* STANDARD DDNAME IS SYSUT1. */ 00101000
         B     @RC00120                                         02S0122 00102000
@RF00120 MVC   DDNAMES+24(8,BUFAD),@CC01087                     02S0122 00103000
*        IF LISTLEN => SYS1NO          /* CHECK FOR LIBRARY INPUT    */ 00104000
*         & SYS1FLG ^= ZERO            /*  DDNAME.                   */ 00105000
*          THEN                        /*                            */ 00106000
@RC00120 SLR   @02,@02                                          02S0123 00107000
         ICM   @02,7,PARM2(PARAM)                               02S0123 00108000
         LH    @00,LISTLEN(,@02)                                02S0123 00109000
         CH    @00,@CH00245                                     02S0123 00110000
         BL    @RF00123                                         02S0123 00111000
         CLI   SYS1FLG(@02),0                                   02S0123 00112000
         BE    @RF00123                                         02S0123 00113000
*            DDNAMES(THREE) = USERU1DD;/* USER SUPPLIED DDNAME.      */ 00114000
         MVC   DDNAMES+16(8,BUFAD),USERU1DD(@02)                02S0124 00115000
*          ELSE                        /*                            */ 00116000
*            DDNAMES(THREE) = SYSUTDD; /* STANDARD DDNAME IS SYSUT1. */ 00117000
         B     @RC00123                                         02S0125 00118000
@RF00123 MVC   DDNAMES+16(8,BUFAD),@CC01087                     02S0125 00119000
*        IF LISTLEN => SYSPNO          /* CHECK FOR SYSTEM OUTPUT    */ 00120000
*         & SYSPFLG ^= ZERO            /*  DDNAME.                   */ 00121000
*          THEN                        /*                            */ 00122000
@RC00123 SLR   @02,@02                                          02S0126 00123000
         ICM   @02,7,PARM2(PARAM)                               02S0126 00124000
         LH    @00,LISTLEN(,@02)                                02S0126 00125000
         CH    @00,@CH00408                                     02S0126 00126000
         BL    @RF00126                                         02S0126 00127000
         CLI   SYSPFLG(@02),0                                   02S0126 00128000
         BE    @RF00126                                         02S0126 00129000
*            DDNAMES(ONE) = USERPRDD;  /* USER SUPPLIED DDNAME.      */ 00130000
         MVC   DDNAMES(8,BUFAD),USERPRDD(@02)                   02S0127 00131000
*          ELSE                        /*                            */ 00132000
*            DDNAMES(ONE) = SYSPRDD;   /* STANDARD DDNAME IS SYSPRINT*/ 00133000
         B     @RC00126                                         02S0128 00134000
@RF00126 MVC   DDNAMES(8,BUFAD),@CC01083                        02S0128 00135000
*        IF LISTLEN => SYSINO          /* CHECK FOR SYSTEM INPUT     */ 00136000
*         & SYSIFLG ^= ZERO            /*  DDNAME.                   */ 00137000
*          THEN                        /*                            */ 00138000
@RC00126 SLR   @02,@02                                          02S0129 00139000
         ICM   @02,7,PARM2(PARAM)                               02S0129 00140000
         LH    @00,LISTLEN(,@02)                                02S0129 00141000
         CH    @00,@CH00039                                     02S0129 00142000
         BL    @RF00129                                         02S0129 00143000
         CLI   SYSIFLG(@02),0                                   02S0129 00144000
         BE    @RF00129                                         02S0129 00145000
*            DDNAMES(TWO) = USERINDD;  /* USER SUPPLIED DDNAME.      */ 00146000
         MVC   DDNAMES+8(8,BUFAD),USERINDD(@02)                 02S0130 00147000
*          ELSE                        /*                            */ 00148000
*            DDNAMES(TWO) = SYSINDD;   /* STANDARD DDNAME IS SYSIN.  */ 00149000
         B     @RC00129                                         02S0131 00150000
@RF00129 MVC   DDNAMES+8(8,BUFAD),@CC01085                      02S0131 00151000
*        IF PARMVL2 ^= LAST            /* CHECK FOR MORE PARAMETERS. */ 00152000
*          THEN                        /*                            */ 00153000
@RC00129 TM    PARMVL2(PARAM),B'10000000'                       02S0132 00154000
         BO    @RF00132                                         02S0132 00155000
*            DO;                       /*                            */ 00156000
*              DO                      /* CHECK FOR                  */ 00157000
*               CNT = ONE              /*  VALID PARAMETER.          */ 00158000
*               TO LENGTH(HDNG)        /*                            */ 00159000
*               WHILE HDNG(CNT) =< CHAR9                        02S0134 00160000
*                   & HDNG(CNT) => CHAR0;                       02S0134 00161000
         LA    CNT,1                                            02S0134 00162000
@DL00134 SLR   @15,@15                                          02S0134 00163000
         ICM   @15,7,PARM3(PARAM)                               02S0134 00164000
         LR    @14,@15                                          02S0134 00165000
         ALR   @14,CNT                                          02S0134 00166000
         CLI   HDNG-1(@14),C'9'                                 02S0134 00167000
         BH    @DC00134                                         02S0134 00168000
         ALR   @15,CNT                                          02S0134 00169000
         CLI   HDNG-1(@15),C'0'                                 02S0134 00170000
         BL    @DC00134                                         02S0134 00171000
*              END;                    /*                            */ 00172000
         AH    CNT,@CH00060                                     02S0135 00173000
         CH    CNT,@CH00050                                     02S0135 00174000
         BNH   @DL00134                                         02S0135 00175000
@DC00134 DS    0H                                               02S0136 00176000
*              IF PARMVL3 ^= LAST      /* CHECK FOR VALID            */ 00177000
*               | HLEN ^= LENGTH(HDNG) /*  PARAMETER                 */ 00178000
*               | CNT ^> LENGTH(HDNG)  /*  LIST.                     */ 00179000
*                THEN                  /*                            */ 00180000
         TM    PARMVL3(PARAM),B'10000000'                       02S0136 00181000
         BNO   @RT00136                                         02S0136 00182000
         LA    @15,4                                            02S0136 00183000
         ICM   @14,7,PARM3(PARAM)                               02S0136 00184000
         CH    @15,HLEN(,@14)                                   02S0136 00185000
         BNE   @RT00136                                         02S0136 00186000
         CR    CNT,@15                                          02S0136 00187000
         BH    @RF00136                                         02S0136 00188000
@RT00136 DS    0H                                               02S0137 00189000
*                  DO;                 /*                            */ 00190000
*                    RETSAVE = RC24;   /* INVALID LIST.              */ 00191000
         MVI   RETSAVE(BUFAD),X'18'                             02S0138 00192000
*                    ABNDFLG = ON;     /* TERMINATE UTILITY.         */ 00193000
         OI    ABNDFLG(BUFAD),B'10000000'                       02S0139 00194000
*                  END;                /*                            */ 00195000
*                ELSE                  /*                            */ 00196000
*                  DO;                 /*                            */ 00197000
         B     @RC00136                                         02S0141 00198000
@RF00136 DS    0H                                               02S0142 00199000
*                    PACK(DWORK,HDNG); /* CONVERT NUMBER TO          */ 00200000
         ICM   @02,7,PARM3(PARAM)                               02S0142 00201000
         PACK  DWORK(8,BUFAD),HDNG(4,@02)                       02S0142 00202000
*                    CVB(FWORK,DWORK); /*  ARITHMETIC                */ 00203000
         CVB   @02,DWORK(,BUFAD)                                02S0143 00204000
         ST    @02,FWORK(,BUFAD)                                02S0143 00205000
*                    PAGE = FWORK;     /*  VALUE.                    */ 00206000
         STH   @02,PAGE(,BUFAD)                                 02S0144 00207000
*                  END;                /*                            */ 00208000
*            END;                      /*                            */ 00209000
*            END;                      /*                            */ 00210000
*          ELSE                        /* IGNORE FIRST PARAMETER.    */ 00211000
*            DO;                       /* INTIALIZE DDNAMES.         */ 00212000
         B     @RC00118                                         01S0148 00213000
@RF00118 DS    0H                                               01S0149 00214000
*              DDNAMES(ONE) = SYSPRDD; /* SET SYSPRINT FOR SYSOUT.   */ 00215000
         MVC   DDNAMES(8,BUFAD),@CC01083                        01S0149 00216000
*              DDNAMES(TWO) = SYSINDD; /* SET SYSIN FOR SYSIN.       */ 00217000
         MVC   DDNAMES+8(8,BUFAD),@CC01085                      01S0150 00218000
*              DDNAMES(THREE) = SYSUTDD;/* SET SYSUT1 FOR LIB INPUT. */ 00219000
         MVC   DDNAMES+16(8,BUFAD),@CC01087                     01S0151 00220000
*              DDNAMES(FOUR) = SYSUTDD;/* SET SYSUT1 AS LIB OUTPUT.  */ 00221000
         MVC   DDNAMES+24(8,BUFAD),@CC01087                     01S0152 00222000
*            END;                      /*                            */ 00223000
*        IF ABNDFLG = OFF              /* CHECK FOR TERMINATION      */ 00224000
*          THEN                        /*  REQUEST.                  */ 00225000
@RC00118 TM    ABNDFLG(BUFAD),B'10000000'                       01S0154 00226000
         BNZ   @RF00154                                         01S0154 00227000
*            DO;                       /* NOT THIS TIME.             */ 00228000
*              DO                      /* START DDNAME SCAN.         */ 00229000
*               CNT = ONE              /*                            */ 00230000
*               TO DIM(DDNAMES);       /*                            */ 00231000
         LA    CNT,1                                            01S0156 00232000
@DL00156 DS    0H                                               01S0157 00233000
*                DCBPTR = DCBTAB(CNT); /* SET ALL DCBS WITH          */ 00234000
         LR    @15,CNT                                          01S0157 00235000
         SLA   @15,2                                            01S0157 00236000
         L     DCBPTR,DCBTAB-4(@15,BUFAD)                       01S0157 00237000
*                DCBDDNAM=DDNAMES(CNT);/* DDNAME.                    */ 00238000
         LR    @05,CNT                                          01S0158 00239000
         SLA   @05,3                                            01S0158 00240000
         ALR   @05,BUFAD                                        01S0158 00241000
         MVC   DCBDDNAM+40(8,DCBPTR),DDNAMES-8(@05)             01S0158 00242000
*              END;                    /* END DDNAME SCAN.           */ 00243000
         AH    CNT,@CH00060                                     01S0159 00244000
         CH    CNT,@CH00050                                     01S0159 00245000
         BNH   @DL00156                                         01S0159 00246000
*/********************************************************************* 00247000
**                                                                    * 00248000
**  THIS SEGMENT WILL OPEN THE SYSTEM OUTPUT DATA SET AND, IF OPEN    * 00249000
**  IS SUCCESSFUL WILL OPEN THE SYSTEM INPUT AND LIBRARY INPUT DATA   * 00250000
**  SETS.                                                             * 00251000
**                                                                    * 00252000
**********************************************************************/ 00253000
*        GEN SETS(SYSPRINT)            /* OPEN SYSTEM OUTPUT         */ 00254000
*            FLOWS(BKSZCK)             /**** OPEN EXIT.              */ 00255000
*         (OPEN  (SYSPRINT,OUTPUT));   /*                            */ 00256000
         OPEN  (SYSPRINT,OUTPUT)                                        00257000
*        DCBPTR = ADDR(SYSPRINT);      /*                            */ 00258000
         LA    DCBPTR,SYSPRINT                                  02S0161 00259000
*        IF DCBOFOPN = OFF             /* CHECK FOR SUCCESSFUL OPEN. */ 00260000
*          THEN                        /*                            */ 00261000
         TM    DCBOFOPN+40(DCBPTR),B'00010000'                  02S0162 00262000
         BNZ   @RF00162                                         02S0162 00263000
*            DO;                       /* OPEN FAILED.               */ 00264000
*              RETSAVE = RC20;         /* SET RETURN CODE 20 (14)X.  */ 00265000
         MVI   RETSAVE(BUFAD),X'14'                             02S0164 00266000
*              ABNDFLG = ON;           /* TERMINATE UTILITY.         */ 00267000
         OI    ABNDFLG(BUFAD),B'10000000'                       02S0165 00268000
*            END;                      /*                            */ 00269000
*          ELSE                        /* OK OPEN                    */ 00270000
*            DO;                       /* NOW TRY SYSIN AND READ     */ 00271000
         B     @RC00162                                         02S0167 00272000
@RF00162 DS    0H                                               02S0168 00273000
*              GEN SETS(SYSIN,SYSUTIN) /*  LIBRARY DATASET.          */ 00274000
*            FLOWS(ABEND)              /**** OPEN EXIT               */ 00275000
*               (OPEN (SYSIN,INPUT,SYSUTIN,INPUT));             02S0168 00276000
         OPEN (SYSIN,INPUT,SYSUTIN,INPUT)                               00277000
*              DO                      /*                            */ 00278000
*               CNT = TWO              /* NOW CHECK FOR GOOD OPENS.  */ 00279000
*               TO DIM(DCBTAB)-ONE;    /*                            */ 00280000
         LA    CNT,2                                            02S0169 00281000
@DL00169 DS    0H                                               02S0170 00282000
*                DCBPTR = DCBTAB(CNT); /* POINT TO A DCB.            */ 00283000
         LR    @15,CNT                                          02S0170 00284000
         SLA   @15,2                                            02S0170 00285000
         L     DCBPTR,DCBTAB-4(@15,BUFAD)                       02S0170 00286000
*                IF DCBOFOPN = OFF     /* CHECK OPEN BIT.            */ 00287000
*                  THEN                /*                            */ 00288000
         TM    DCBOFOPN+40(DCBPTR),B'00010000'                  02S0171 00289000
         BNZ   @RF00171                                         02S0171 00290000
*                    DO;               /*********** IEBA20I **********/ 00291000
*                      MSGN = IEBA20I; /* DCB OPEN FAILURE           */ 00292000
         MVI   MSGN(BUFAD),X'14'                                02S0173 00293000
*                      EDITDATA(ONE) = /* GET DDNAME FOR MESSAGE.    */ 00294000
*                       ADDR(DDNAMES(CNT)); /*                       */ 00295000
         LR    @15,CNT                                          02S0174 00296000
         SLA   @15,3                                            02S0174 00297000
         LA    @00,DDNAMES-8(@15,BUFAD)                         02S0174 00298000
         STCM  @00,7,EDITDATA(BUFAD)                            02S0174 00299000
*                      EDITLEN(ONE) =       /* GET NAME LENGTH       */ 00300000
*                       LENGTH(DCBDDNAM);   /*                       */ 00301000
         MVI   EDITLEN(BUFAD),X'08'                             02S0175 00302000
*                      CALL IEBIMSGS;       /* PRINT A MESSAGE       */ 00303000
         L     @15,@CV00037                                     02S0176 00304000
         BALR  @14,@15                                          02S0176 00305000
*                      RETSAVE = RC16;      /*                       */ 00306000
         MVI   RETSAVE(BUFAD),X'10'                             02S0177 00307000
*                      ABNDFLG = ON;        /* CAUSE TERMINATION     */ 00308000
         OI    ABNDFLG(BUFAD),B'10000000'                       02S0178 00309000
*                    END;              /******************************/ 00310000
*                  ELSE;               /*                            */ 00311000
@RF00171 DS    0H                                               02S0181 00312000
*              END;                    /* END CHECK LOOP.            */ 00313000
         AH    CNT,@CH00060                                     02S0181 00314000
         CH    CNT,@CH00111                                     02S0181 00315000
         BNH   @DL00169                                         02S0181 00316000
*            END;                      /*                            */ 00317000
*              IF ABNDFLG = OFF        /* OPEN(S) COULD HAVE FAILED. */ 00318000
*                THEN                  /*                            */ 00319000
@RC00162 TM    ABNDFLG(BUFAD),B'10000000'                       01S0183 00320000
         BNZ   @RF00183                                         01S0183 00321000
*                  DO;                 /* NOT THIS TIME.             */ 00322000
*                    OPTABAD           /* INITIALIZE WORKAREA WITH   */ 00323000
*                     = ADDR(OPTAB);   /*  OPERATION TABLE ADDRESS   */ 00324000
         LA    @02,OPTAB                                        01S0185 00325000
         STCM  @02,7,OPTABAD(BUFAD)                             01S0185 00326000
*                    OPTABLN           /*  OPERATION TABLE LENGTH    */ 00327000
*                     = OPTABLEN;      /*                            */ 00328000
         MVC   OPTABLN(1,BUFAD),OPTABLEN                        01S0186 00329000
*                    CARDEND           /*  LAST CARD COLUMN          */ 00330000
*                     = ADDR(COL72);   /*                            */ 00331000
         LA    @02,COL72(,BUFAD)                                01S0187 00332000
         ST    @02,CARDEND(,BUFAD)                              01S0187 00333000
*                    GEN (TIME);       /*                            */ 00334000
         TIME                                                           00335000
*                    TODAY = R1;       /*  TODAYS DATE.              */ 00336000
         STCM  R1,7,TODAY(BUFAD)                                01S0189 00337000
*                  END;                /*                            */ 00338000
*                ELSE;                 /*                            */ 00339000
@RF00183 DS    0H                                               01S0192 00340000
*            END;                      /*                            */ 00341000
*        RESPECIFY (R1,PARAM) UNRESTRICTED;                     01S0193 00342000
@RF00154 DS    0H                                               01S0194 00343000
         EJECT                                                          00344000
*/********************************************************************* 00345000
**                                                                    * 00346000
**  THIS IS THE MAINLINE OF THE UTILITY. IEBISCAN IS CALLED TO READ   * 00347000
**  CONTROL CARDS AND SCAN FOR THE OPERATION FIELD. WHEN CONTROL IS   * 00348000
**  RETURNED THE OPERATION IS DETERMINED AND EXECUTED. ALL OPERATIONS * 00349000
**  MUST BE DELIMITED WITH A (NAME) CONTROL STATEMENT.                * 00350000
**                                                                    * 00351000
**********************************************************************/ 00352000
*                                                               01S0194 00353000
*        DO WHILE EOFFLG = OFF         /* QUIT IF END OF FILE.       */ 00354000
*         & ABNDFLG = OFF;             /* QUIT IF ABEND INDICATED.   */ 00355000
         B     @DE00194                                         01S0194 00356000
@DL00194 DS    0H                                               01S0195 00357000
*          CALL IEBISCAN;              /* START OP DETERMINATION     */ 00358000
         L     @15,@CV00036                                     01S0195 00359000
         BALR  @14,@15                                          01S0195 00360000
*          IF EOFFLG = OFF             /* COULD BE LAST CARD IN SCAN */ 00361000
*            THEN                      /* NOT THIS TIME.             */ 00362000
         TM    EOFFLG(BUFAD),B'01000000'                        01S0196 00363000
         BNZ   @RF00196                                         01S0196 00364000
*              IF ACTIVOP ^= ZERO      /* TEST FOR ACTIVE OPERATION. */ 00365000
*                THEN                  /*                            */ 00366000
         CLI   ACTIVOP(BUFAD),0                                 01S0197 00367000
         BE    @RF00197                                         01S0197 00368000
*                  IF NEXTOP = ACTIVOP /* SOME OPERATIONS MAY HAVE   */ 00369000
*                    & MLTFLAG(ACTIVOP)/*  MULTIPLE CONTROL CARDS.   */ 00370000
*                        = ON          /*                            */ 00371000
*                    THEN              /*                            */ 00372000
         CLC   NEXTOP(1,BUFAD),ACTIVOP(BUFAD)                   01S0198 00373000
         BNE   @RF00198                                         01S0198 00374000
         SLR   @15,@15                                          01S0198 00375000
         IC    @15,ACTIVOP(,BUFAD)                              01S0198 00376000
         MH    @15,@CH00053                                     01S0198 00377000
         ICM   @01,7,OPTABAD(BUFAD)                             01S0198 00378000
         ALR   @01,@15                                          01S0198 00379000
         AL    @01,@CF01870                                     01S0198 00380000
         TM    MLTFLAG-1(@01),B'10000000'                       01S0198 00381000
         BNO   @RF00198                                         01S0198 00382000
*                      DO;             /*                            */ 00383000
*                        CALL PRTCARD; /* PRINT CONTROL CARD.        */ 00384000
         BAL   @14,PRTCARD                                      01S0200 00385000
*                        CALL BLDMOD;  /* EXECUTE CURRENT OPERATION  */ 00386000
         SLR   @14,@14                                          01S0201 00387000
         IC    @14,ACTIVOP(,BUFAD)                              01S0201 00388000
         MH    @14,@CH00053                                     01S0201 00389000
         ICM   @01,7,OPTABAD(BUFAD)                             01S0201 00390000
         AL    @01,@CF01871                                     01S0201 00391000
         L     @15,BLDPTR-5(@14,@01)                            01S0201 00392000
         LA    @15,0(,@15)                                      01S0201 00393000
         BALR  @14,@15                                          01S0201 00394000
*                      END;            /*                            */ 00395000
*                    ELSE              /* ALL OPERATIONS MUST HAVE   */ 00396000
*                      IF NEXTOP       /*  NAME CONTROL CARD.        */ 00397000
*                           = NAMEOP   /*                            */ 00398000
*                        THEN          /*                            */ 00399000
         B     @RC00198                                         01S0203 00400000
@RF00198 CLC   NEXTOP(1,BUFAD),NAMEOP                           01S0203 00401000
         BNE   @RF00203                                         01S0203 00402000
*                          DO;         /*                            */ 00403000
*                            CALL PRTCARD; /* PRINT CONTROL CARD.    */ 00404000
         BAL   @14,PRTCARD                                      01S0205 00405000
*                            CALL NAME;/* COMPLETE CURRENT OPERATION.*/ 00406000
         BAL   @14,NAME                                         01S0206 00407000
*                          END;        /*                            */ 00408000
*                        ELSE          /* CONTROL CARD SEQUENCE ERROR*/ 00409000
*                          DO;         /*                            */ 00410000
         B     @RC00203                                         01S0208 00411000
@RF00203 DS    0H                                               01S0209 00412000
*                            CALL PRTCARD;/* PRINT THIS CONTROL CARD.*/ 00413000
         BAL   @14,PRTCARD                                      01S0209 00414000
*                            CALL INVOP;/* MAKE IT INVALID OPERATION.*/ 00415000
         BAL   @14,INVOP                                        01S0210 00416000
*                          END;        /*                            */ 00417000
*                ELSE                  /* NO OPERATION IN PROGRESS.  */ 00418000
*                  DO;                 /*                            */ 00419000
         B     @RC00197                                         01S0212 00420000
@RF00197 DS    0H                                               01S0213 00421000
*                    CALL PRTCARD;     /* PRT HEADING, CONTROL CARD. */ 00422000
         BAL   @14,PRTCARD                                      01S0213 00423000
*                    ACTIVOP = NEXTOP; /* NEXT CONTOL CARD NOW ACTIVE*/ 00424000
         SLR   @15,@15                                          01S0214 00425000
         IC    @15,NEXTOP(,BUFAD)                               01S0214 00426000
         STC   @15,ACTIVOP(,BUFAD)                              01S0214 00427000
*                    CALL BLDMOD;      /* EXECUTE OPERATION.         */ 00428000
         MH    @15,@CH00053                                     01S0215 00429000
         ICM   @01,7,OPTABAD(BUFAD)                             01S0215 00430000
         AL    @01,@CF01871                                     01S0215 00431000
         L     @15,BLDPTR-5(@15,@01)                            01S0215 00432000
         LA    @15,0(,@15)                                      01S0215 00433000
         BALR  @14,@15                                          01S0215 00434000
*                  END;                /*                            */ 00435000
*            ELSE;                     /* END OF FILE FROM IEBISCAN. */ 00436000
@RF00196 DS    0H                                               01S0218 00437000
*        END;                          /* END OF OPERATION LOOP.     */ 00438000
@RC00196 DS    0H                                               01S0218 00439000
@DE00194 TM    EOFFLG(BUFAD),B'11000000'                        01S0218 00440000
         BZ    @DL00194                                         01S0218 00441000
         EJECT                                                          00442000
*/********************************************************************* 00443000
**                                                                    * 00444000
**  THE UTILITY WILL NOW ISSUE ITS FINAL MESSAGE, CLOSE THE DATA      * 00445000
**  CONTROL BLOCKS AND FREE ANY GOTTEN CORE. TERMINATION WILL THEN    * 00446000
**  OCCUR WITH THE HIGHEST RETURN CODE RECEIVED DURING EXECUTION.     * 00447000
**                                                                    * 00448000
**********************************************************************/ 00449000
*                                                               01S0219 00450000
*        IF OPINPRG = ON               /* CHECK FOR COMPLETED OP.    */ 00451000
*          THEN                        /*                            */ 00452000
         TM    OPINPRG(BUFAD),B'00000010'                       01S0219 00453000
         BNO   @RF00219                                         01S0219 00454000
*            CALL NAME;                /* GO COMPLETE OPERATION.     */ 00455000
         BAL   @14,NAME                                         01S0220 00456000
*          ELSE;                       /* OPERATION COMPLETE.        */ 00457000
@RF00219 DS    0H                                               01S0222 00458000
*        DCBPTR = SYSPRTAD;            /* GET ADDRESS OF SYSPRINT.   */ 00459000
         L     DCBPTR,SYSPRTAD(,BUFAD)                          01S0222 00460000
*        IF DCBOFOPN = ON              /* CHECK ABILITY TO PRINT.    */ 00461000
*          THEN                        /*                            */ 00462000
         TM    DCBOFOPN+40(DCBPTR),B'00010000'                  01S0223 00463000
         BNO   @RF00223                                         01S0223 00464000
*            DO;                       /*********** IEBA01I **********/ 00465000
*              FWORK = RETSAVE;        /* MOVE RETURN CODE TO WORK.  */ 00466000
         SLR   @15,@15                                          01S0225 00467000
         IC    @15,RETSAVE(,BUFAD)                              01S0225 00468000
         ST    @15,FWORK(,BUFAD)                                01S0225 00469000
*              CVD(FWORK,DWORK);       /* CONVERT RETURN CODE.       */ 00470000
         CVD   @15,DWORK(,BUFAD)                                01S0226 00471000
*              UNPK(UWORK,PWORK);      /* MAKE RETURN CODE PRINTABLE */ 00472000
         UNPK  UWORK(2,BUFAD),PWORK(2,BUFAD)                    01S0227 00473000
*              UNITS = UNITS | MASK;   /*                            */ 00474000
         OI    UNITS(BUFAD),C'0'                                01S0228 00475000
*              EDITDATA(ONE) = ADDR(CWORK); /* DATA ADDR FOR MESSAGE.*/ 00476000
         LA    @15,CWORK(,BUFAD)                                01S0229 00477000
         STCM  @15,7,EDITDATA(BUFAD)                            01S0229 00478000
*              EDITLEN(ONE) = TWO;     /* DATA LENGTH FOR MESSAGE.   */ 00479000
         MVI   EDITLEN(BUFAD),X'02'                             01S0230 00480000
*              MSGN = IEBA01I;         /* UTILITY COMPLETE MESSAGE.  */ 00481000
         MVI   MSGN(BUFAD),X'01'                                01S0231 00482000
*              CALL IEBIMSGS;          /* GET A MESSAGE.             */ 00483000
         L     @15,@CV00037                                     01S0232 00484000
         BALR  @14,@15                                          01S0232 00485000
*              DO                      /* CLOSE DATA SET LOOP.       */ 00486000
*               CNT = ONE              /* START AT FIRST DCB.        */ 00487000
*               TO DIM(DCBTAB);        /* CONTINUE THRU LAST DCB.    */ 00488000
         LA    CNT,1                                            01S0233 00489000
@DL00233 DS    0H                                               01S0234 00490000
*                DCBPTR = DCBTAB(CNT); /* GET A DCB ADDRESS.         */ 00491000
         LR    @03,CNT                                          01S0234 00492000
         SLA   @03,2                                            01S0234 00493000
         L     DCBPTR,DCBTAB-4(@03,BUFAD)                       01S0234 00494000
*                IF DCBOFOPN = ON      /* IS DCB OPEN?               */ 00495000
*                  THEN                /* YES, CLOSE DATA SET        */ 00496000
         TM    DCBOFOPN+40(DCBPTR),B'00010000'                  01S0235 00497000
         BNO   @RF00235                                         01S0235 00498000
*                    GEN SETS(SYSPRINT,SYSIN,                   01S0236 00499000
*                     SYSUTIN,SYSUTOUT)/* CLOSE FOLLOWING DATA SETS  */ 00500000
*                       (CLOSE ((DCBPTR)));                     01S0236 00501000
         CLOSE ((DCBPTR))                                               00502000
*                  ELSE;               /* NO, GET NEXT DCB OR QUIT.  */ 00503000
@RF00235 DS    0H                                               01S0238 00504000
*              END;                    /* END OF CLOSE LOOP.         */ 00505000
         AH    CNT,@CH00060                                     01S0238 00506000
         CH    CNT,@CH00050                                     01S0238 00507000
         BNH   @DL00233                                         01S0238 00508000
*            END;                      /*                            */ 00509000
*          ELSE;                       /*                            */ 00510000
@RF00223 DS    0H                                               01S0241 00511000
*        RESPECIFY (R0,R1) RESTRICTED;                          01S0241 00512000
*        R0 = LENGTH(WORKAREA);        /* SIZE FOR FREEMAIN.         */ 00513000
         LH    R0,@CH01845                                      01S0242 00514000
*        R1 = BUFAD;                   /* AREA TO FREE.              */ 00515000
         LR    R1,BUFAD                                         01S0243 00516000
*        BUFAD = RETSAVE;              /* SAVE RETURN CODE.          */ 00517000
         SLR   @15,@15                                          01S0244 00518000
         IC    @15,RETSAVE(,BUFAD)                              01S0244 00519000
         LR    BUFAD,@15                                        01S0244 00520000
*        GEN                           /* AND FREE THE CORE.         */ 00521000
*          (FREEMAIN R,LV=(0),A=(1));                           01S0245 00522000
         FREEMAIN R,LV=(0),A=(1)                                        00523000
*        RESPECIFY (R0,R1) UNRESTRICTED;                        01S0246 00524000
*        RETURN CODE(BUFAD);           /* TERMINATE UTILITY.         */ 00525000
         LR    @15,BUFAD                                        01S0247 00526000
         L     @13,4(,@13)                                      01S0247 00527000
         L     @14,12(,@13)                                     01S0247 00528000
         LM    @00,@12,20(@13)                                  01S0247 00529000
         BR    @14                                              01S0247 00530000
         EJECT                                                          00531000
*/********************************************************************* 00532000
**                                                                    * 00533000
**  THIS ROUTINE VALIDATES THE INCLUDE OPERATION. THE SUBSEQUENT      * 00534000
**  OPERATION WILL INVOKE READ OR LOAD TO BRING IN THE REQUESTED      * 00535000
**  LIBRARY MODULE.                                                   * 00536000
**                                                                    * 00537000
**********************************************************************/ 00538000
*INCLUDE:                                                       01S0248 00539000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0248 00540000
@EL00001 L     @13,4(,@13)                                      01S0248 00541000
@EF00001 DS    0H                                               01S0248 00542000
@ER00001 LM    @14,@12,12(@13)                                  01S0248 00543000
         BR    @14                                              01S0248 00544000
INCLUDE  STM   @14,@12,12(@13)                                  01S0248 00545000
*        GEN REFS(SAVE1);              /* USE CONVENTIONAL SAVE.     */ 00546000
         ST  @13,SAVE1+BACK(,BUFAD)    BACKWARD POINTER.                00547000
         LA  @14,SAVE1(,BUFAD)         THIS ROUTINE SAVE AREA.          00548000
         ST  @14,FORE(,@13)            FORWARD POINTER.                 00549000
         LR  @13,@14                   LINKAGE COMPLETE.                00550000
*        IF INCLSW = ON                /* CHECK FOR PREVIOUS INCLUDE.*/ 00551000
*          THEN                        /*                            */ 00552000
         TM    INCLSW(BUFAD),B'00100000'                        01S0250 00553000
         BNO   @RF00250                                         01S0250 00554000
*            DO;                       /* INDICATE PREVIOUS INCLUDE  */ 00555000
*              MSGN = IEBA13I;         /*  WILL NOT BE USED.         */ 00556000
         MVI   MSGN(BUFAD),X'0D'                                01S0252 00557000
*              CALL IEBIMSGS;          /* PRINT THE MESSAGE.         */ 00558000
         L     @15,@CV00037                                     01S0253 00559000
         BALR  @14,@15                                          01S0253 00560000
*              KWDUSED = OFF;          /* RESET ANY KEYWORDS.        */ 00561000
         MVI   KWDUSED(BUFAD),B'00000000'                       01S0254 00562000
*            END;                      /*                            */ 00563000
*        IF SCANINP = ON               /* NEED TO FIND NAME.         */ 00564000
*          THEN                        /*                            */ 00565000
@RF00250 TM    SCANINP(BUFAD),B'01000000'                       01S0256 00566000
         BNO   @RF00256                                         01S0256 00567000
*            DO;                       /* CONTINUE INCLUDE PROCESS.  */ 00568000
*              CALL IEBISCAN;          /* SCAN REST OF CARD.         */ 00569000
         L     @15,@CV00036                                     01S0258 00570000
         BALR  @14,@15                                          01S0258 00571000
*              IF BNAME ^= BADNAM      /* CHECK FOR POSSIBLE SCAN ERR*/ 00572000
*               & NAMESET = ON         /*  OR ANY NAME AT ALL.       */ 00573000
*                THEN                  /*                            */ 00574000
         CLC   BNAME(8,BUFAD),@CC00825                          01S0259 00575000
         BE    @RF00259                                         01S0259 00576000
         TM    NAMESET(BUFAD),B'10000000'                       01S0259 00577000
         BNO   @RF00259                                         01S0259 00578000
*                  INCLNAME = BSUFIX;  /* SAVE MODULE NAME.          */ 00579000
         MVC   INCLNAME(4,BUFAD),BSUFIX(BUFAD)                  01S0260 00580000
*                ELSE                  /* MUST HAVE BEEN ERROR.      */ 00581000
*                  DO;                 /*                            */ 00582000
         B     @RC00259                                         01S0261 00583000
@RF00259 DS    0H                                               01S0262 00584000
*                    INHIBITR = ON;    /* INHIBIT LIBRARY READ.      */ 00585000
         OI    INHIBITR(BUFAD),B'00100000'                      01S0262 00586000
*                    DELSET = OFF;     /* RESET DELETE REQUEST.      */ 00587000
         NI    DELSET(BUFAD),B'11011111'                        01S0263 00588000
*                  END;                /*                            */ 00589000
*            END;                      /*                            */ 00590000
*          ELSE;                       /* ERROR. NO NAME.            */ 00591000
@RF00256 DS    0H                                               01S0267 00592000
*        IF NAMESET = OFF              /* CHECK FOR NO NAME.         */ 00593000
*          THEN                        /*                            */ 00594000
@RC00256 TM    NAMESET(BUFAD),B'10000000'                       01S0267 00595000
         BNZ   @RF00267                                         01S0267 00596000
*            DO;                       /*                            */ 00597000
*              MSGN = IEBA08I;         /* NO NAME MESSAGE.           */ 00598000
         MVI   MSGN(BUFAD),X'08'                                01S0269 00599000
*              CALL IEBIMSGS;          /* PRINT THE MESSAGE.         */ 00600000
         L     @15,@CV00037                                     01S0270 00601000
         BALR  @14,@15                                          01S0270 00602000
*              RETSAVE =               /* SET RETURN CODE 8 THIS     */ 00603000
*                MAX(RETSAVE,RC8);     /*  OPERATION.                */ 00604000
         SLR   @15,@15                                          01S0271 00605000
         IC    @15,RETSAVE(,BUFAD)                              01S0271 00606000
         LA    @14,8                                            01S0271 00607000
         CR    @15,@14                                          01S0271 00608000
         BNL   *+6                                                      00609000
         LR    @15,@14                                          01S0271 00610000
         STC   @15,RETSAVE(,BUFAD)                              01S0271 00611000
*              INHIBIT = ONNER;        /* PREVENT LIBRARY ACCESS.    */ 00612000
         OI    INHIBIT(BUFAD),B'01100000'                       01S0272 00613000
*              DELSET = OFF;           /* RESET DELETE REQUEST.      */ 00614000
         NI    DELSET(BUFAD),B'11011111'                        01S0273 00615000
*            END;                      /*                            */ 00616000
*          ELSE                        /*                            */ 00617000
*            NAMESET = OFF;            /* RESET NAME INDICATOR.      */ 00618000
         B     @RC00267                                         01S0275 00619000
@RF00267 NI    NAMESET(BUFAD),B'01111111'                       01S0275 00620000
*        INCLSW = ON;                  /* INDICATE INCLUDE.          */ 00621000
@RC00267 OI    INCLSW(BUFAD),B'00100000'                        01S0276 00622000
*        ACTIVOP = ZERO;               /* NEXT OP WILL BE ACTIVE OP. */ 00623000
         MVI   ACTIVOP(BUFAD),X'00'                             01S0277 00624000
*        GEN REFS(SAVE1)               /* RESTORE BACKWARD POINTER.  */ 00625000
*         (L  @13,SAVE1+BACK(,BUFAD)); /*                            */ 00626000
         L  @13,SAVE1+BACK(,BUFAD)                                      00627000
*END INCLUDE;                          /* RETURN TO CALLER.          */ 00628000
@EL00002 DS    0H                                               01S0279 00629000
@EF00002 DS    0H                                               01S0279 00630000
@ER00002 LM    @14,@12,12(@13)                                  01S0279 00631000
         BR    @14                                              01S0279 00632000
         EJECT                                                          00633000
*/********************************************************************* 00634000
**                                                                    * 00635000
**  THIS ROUTINE WILL SET THE APPROPRIATE  FUNCTION DEFAULTS AND      * 00636000
**  IF THE CONTROL CARD HAS MORE DATA, THE ROUTINE WILL THEN          * 00637000
**  CALL IEBISCAN TO OBTAIN THE KEYWORD DATA FROM THE CONTROL         * 00638000
**  CARD(S). WHEN CONTROL IS RETURNED, THE SPECIFIED FORMS CONTROL    * 00639000
**  BUFFER MODULE WILL BE BUILT AND TESTED FOR VALIDITY.              * 00640000
**                                                                    * 00641000
**********************************************************************/ 00642000
*FCB:                                                           01S0280 00643000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0280 00644000
FCB      STM   @14,@12,12(@13)                                  01S0280 00645000
*        GEN REFS(SAVE1);              /* USE CONVENTIONAL SAVE.     */ 00646000
         ST  @13,SAVE1+BACK(,BUFAD)    BACKWARD POINTER.                00647000
         LA  @14,SAVE1(,BUFAD)         THIS ROUTINE SAVE AREA.          00648000
         ST  @14,FORE(,@13)            FORWARD POINTER.                 00649000
         LR  @13,@14                   LINKAGE COMPLETE.                00650000
*        BNAME = FCB3;                 /* SET FCB MEMBER PREFIX.     */ 00651000
         MVI   BNAME+4(BUFAD),C' '                              01S0282 00652000
         MVC   BNAME+5(3,BUFAD),BNAME+4(BUFAD)                  01S0282 00653000
         MVC   BNAME(4,BUFAD),@CC00817                          01S0282 00654000
*        OPINPRG = ON;                 /* SET OPERATION IN PROGRESS. */ 00655000
         OI    OPINPRG(BUFAD),B'00000010'                       01S0283 00656000
*        IF SCANINP = ON               /* SCAN IN PROGRESS MEANS     */ 00657000
*          THEN                        /*  KEYWORDS NEED SCANNING.   */ 00658000
         TM    SCANINP(BUFAD),B'01000000'                       01S0284 00659000
         BNO   @RF00284                                         01S0284 00660000
*            DO;                       /* EXECUTE SCAN ROUTINES      */ 00661000
*              IF INCLSW = ON          /* CHECK FOR INCLUDE.         */ 00662000
*                THEN                  /* IT IS INVALID.             */ 00663000
         TM    INCLSW(BUFAD),B'00100000'                        01S0286 00664000
         BNO   @RF00286                                         01S0286 00665000
*                  DO;                 /*                            */ 00666000
*                    INCLSW = OFF;     /* RESET INCLUDE SWITCH.      */ 00667000
         NI    INCLSW(BUFAD),B'11011111'                        01S0288 00668000
*                    MSGN = IEBA13I;   /* SET MESSAGE NUMBER.        */ 00669000
         MVI   MSGN(BUFAD),X'0D'                                01S0289 00670000
*                    CALL IEBIMSGS;    /* PRINT IT.                  */ 00671000
         L     @15,@CV00037                                     01S0290 00672000
         BALR  @14,@15                                          01S0290 00673000
*                    RETSAVE =         /* SET RETURN CODE 4          */ 00674000
*                     MAX(RETSAVE,RC4);/*  FOR THIS OPERATION.       */ 00675000
         SLR   @15,@15                                          01S0291 00676000
         IC    @15,RETSAVE(,BUFAD)                              01S0291 00677000
         LA    @14,4                                            01S0291 00678000
         CR    @15,@14                                          01S0291 00679000
         BNL   *+6                                                      00680000
         LR    @15,@14                                          01S0291 00681000
         STC   @15,RETSAVE(,BUFAD)                              01S0291 00682000
*                  END;                /*                            */ 00683000
*                ELSE;                 /* CONTINUE.                  */ 00684000
@RF00286 DS    0H                                               01S0294 00685000
*              FCBMOD = FCBMOD&&FCBMOD;/* CLEAR AREA FOR FCB MODULE. */ 00686000
         XC    FCBMOD(152,BUFAD),FCBMOD(BUFAD)                  01S0294 00687000
*              FCBSIZE = FDFLT;        /* SET DEFAULT SIZE TO 11 INCH*/ 00688000
         MVC   FCBSIZE(2,BUFAD),@CH00754                        01S0295 00689000
*              CALL IEBISCAN;          /*  TO DETERMINE KEYWORDS.    */ 00690000
         L     @15,@CV00036                                     01S0296 00691000
         BALR  @14,@15                                          01S0296 00692000
*              LPICNT = ZERO;          /* RESET LPI COUNTERS.@Z48MSTT*/ 00693000
         SLR   @05,@05                                          01S0297 00694000
         ST    @05,LPICNT(,BUFAD)                               01S0297 00695000
*              FCBSIZE =               /* CALCULATE SIZE AS NUMBER   */ 00696000
*               (FCBSIZE/FIVE - TWO)   /*  OF 1/24 INCHES -  @Z48MSTT*/ 00697000
*                * TWELV;              /* EXCLUDING MARGINS. @Z48MSTT*/ 00698000
         LH    @00,FCBSIZE(,BUFAD)                              01S0298 00699000
         SRDA  @00,32                                           01S0298 00700000
         D     @00,@CF00040                                     01S0298 00701000
         BCTR  @01,0                                            01S0298 00702000
         BCTR  @01,0                                            01S0298 00703000
         MH    @01,@CH00035                                     01S0298 00704000
         STH   @01,FCBSIZE(,BUFAD)                              01S0298 00705000
*              FCNT = FCBMAX;          /* PRIME FCB LINE COUNTER.    */ 00706000
         LA    FCNT,144                                         01S0299 00707000
*              IF LPISET = ON          /* CHECK FOR LPI KEYWORD.     */ 00708000
*                THEN                  /* BUILD FCB FROM INPUT.      */ 00709000
         TM    LPISET(BUFAD),B'00010000'                        01S0300 00710000
         BNO   @RF00300                                         01S0300 00711000
*/********************************************************************* 00712000
**                                                                    * 00713000
**  THIS SEGMENT WILL SET THE LINE PER INCH BIT IN THE FCB IMAGE      * 00714000
**  AS REQUESTED ON THE CONTROL CARD.                                 * 00715000
**                                                                    * 00716000
**********************************************************************/ 00717000
*        DO;                                                    02S0301 00718000
*          LPICNT = ZERO;              /* RESET LPI COUNTERS.        */ 00719000
         ST    @05,LPICNT(,BUFAD)                               02S0302 00720000
*          FCNT = THREE;               /* FIRST THREE LINES 6 LPI    */ 00721000
         LA    FCNT,3                                           02S0303 00722000
*          DO                          /* START FILLING FCB WITH     */ 00723000
*           XCNT = ONE                 /*  LINE PER INCH INDICATIONS.*/ 00724000
*           TO SCNT - ONE              /*                            */ 00725000
*           WHILE FCNT ^> FCBMAX       /* STOP IF BUFF ORUN  @Z48MSTT*/ 00726000
*               & FCBSIZE ^< ZERO;     /*  OR NO MORE ROOM.  @Z48MSTT*/ 00727000
         LA    XCNT,1                                           02S0304 00728000
         B     @DE00304                                         02S0304 00729000
@DL00304 CH    FCNT,@CH00236                                    02S0304 00730000
         BH    @DC00304                                         02S0304 00731000
         SLR   @05,@05                                          02S0304 00732000
         LH    @02,FCBSIZE(,BUFAD)                              02S0304 00733000
         CR    @02,@05                                          02S0304 00734000
         BL    @DC00304                                         02S0304 00735000
*            ZCNT = SCANARY(XCNT,TWO); /* GET NUMBER OF LINES.       */ 00736000
         LR    @15,XCNT                                         02S0305 00737000
         SLA   @15,2                                            02S0305 00738000
         SLR   ZCNT,ZCNT                                        02S0305 00739000
         IC    ZCNT,SCANARY-3(@15,BUFAD)                        02S0305 00740000
*            IF SCANARY(XCNT,ONE)=SIX  /* CHECK FOR 6 LPI.           */ 00741000
*              THEN                    /*                            */ 00742000
         SLR   @14,@14                                          02S0306 00743000
         IC    @14,SCANARY-4(@15,BUFAD)                         02S0306 00744000
         CH    @14,@CH00185                                     02S0306 00745000
         BNE   @RF00306                                         02S0306 00746000
*                DO;                   /* LPI 6 REQUEST.             */ 00747000
*                  IF ZCNT = ZERO      /* CHECK FOR FILL REQUEST.    */ 00748000
*                    THEN              /* SET REMAINING SIZE.        */ 00749000
         CR    ZCNT,@05                                         02S0308 00750000
         BNE   @RF00308                                         02S0308 00751000
*                      ZCNT =          /*  AT SIX LINES PER INCH.    */ 00752000
*                       FCBSIZE / FOUR;/*                    @Z48MSTT*/ 00753000
         LH    @05,FCBSIZE(,BUFAD)                              02S0309 00754000
         LR    @00,@05                                          02S0309 00755000
         SRDA  @00,32                                           02S0309 00756000
         D     @00,@CF00050                                     02S0309 00757000
         LR    ZCNT,@01                                         02S0309 00758000
*                  FCBSIZE = FCBSIZE   /* ADJUST SIZE FOR    @Z48MSTT*/ 00759000
*                       -ZCNT*FOUR;    /*  THIS INCREMENT.   @Z48MSTT*/ 00760000
@RF00308 LR    @05,ZCNT                                         02S0310 00761000
         SLA   @05,2                                            02S0310 00762000
         LCR   @05,@05                                          02S0310 00763000
         AH    @05,FCBSIZE(,BUFAD)                              02S0310 00764000
         STH   @05,FCBSIZE(,BUFAD)                              02S0310 00765000
*                  LPI6 = LPI6 + ZCNT; /* INCREMENT 6 LPI COUNTER    */ 00766000
         SLR   @05,@05                                          02S0311 00767000
         IC    @05,LPI6(,BUFAD)                                 02S0311 00768000
         ALR   @05,ZCNT                                         02S0311 00769000
         STC   @05,LPI6(,BUFAD)                                 02S0311 00770000
*                END;                  /*                            */ 00771000
*              ELSE                    /* CHECK FOR 8 LPI.           */ 00772000
*                IF SCANARY(XCNT,ONE) = EIGHT                   02S0313 00773000
*                  THEN                /*                            */ 00774000
         B     @RC00306                                         02S0313 00775000
@RF00306 LR    @05,XCNT                                         02S0313 00776000
         SLA   @05,2                                            02S0313 00777000
         SLR   @15,@15                                          02S0313 00778000
         IC    @15,SCANARY-4(@05,BUFAD)                         02S0313 00779000
         CH    @15,@CH00048                                     02S0313 00780000
         BNE   @RF00313                                         02S0313 00781000
*                    DO;               /*                            */ 00782000
*                      IF ZCNT = ZERO  /* CHECK FOR FILL REQUEST.    */ 00783000
*                        THEN          /* SET REMAINING SIZE.        */ 00784000
         LTR   ZCNT,ZCNT                                        02S0315 00785000
         BNZ   @RF00315                                         02S0315 00786000
*                          ZCNT =      /*  AT EIGHT LINES PER INCH.  */ 00787000
*                           FCBSIZE /THREE;/*                @Z48MSTT*/ 00788000
         LH    @00,FCBSIZE(,BUFAD)                              02S0316 00789000
         SRDA  @00,32                                           02S0316 00790000
         D     @00,@CF00111                                     02S0316 00791000
         LR    ZCNT,@01                                         02S0316 00792000
*                      FCBSIZE = FCBSIZE   /* ADJUST SIZE FOR@Z48MSTT*/ 00793000
*                           -ZCNT*THREE;   /*  THIS INCREMENT@Z48MSTT*/ 00794000
@RF00315 LR    @05,ZCNT                                         02S0317 00795000
         MH    @05,@CH00111                                     02S0317 00796000
         LCR   @05,@05                                          02S0317 00797000
         AH    @05,FCBSIZE(,BUFAD)                              02S0317 00798000
         STH   @05,FCBSIZE(,BUFAD)                              02S0317 00799000
*                      DO              /* START 8 LPI BIT SET.       */ 00800000
*                       YCNT = ONE     /*                            */ 00801000
*                       TO ZCNT;       /*  SET 8 LPI FOR AMOUNT      */ 00802000
         LA    YCNT,1                                           02S0318 00803000
         B     @DE00318                                         02S0318 00804000
@DL00318 DS    0H                                               02S0319 00805000
*                        FLPI(FCNT+YCNT) = ON;/* SPECIFIED.          */ 00806000
         LR    @15,FCNT                                         02S0319 00807000
         ALR   @15,YCNT                                         02S0319 00808000
         ALR   @15,BUFAD                                        02S0319 00809000
         OI    FLPI-1(@15),B'00010000'                          02S0319 00810000
*                      END;            /* END 8 LPI BIT SET.         */ 00811000
         AH    YCNT,@CH00060                                    02S0320 00812000
@DE00318 CR    YCNT,ZCNT                                        02S0320 00813000
         BNH   @DL00318                                         02S0320 00814000
*                      LPI8=LPI8+ZCNT; /* INCREMENT 8 LPI COUNTER    */ 00815000
         SLR   @05,@05                                          02S0321 00816000
         IC    @05,LPI8(,BUFAD)                                 02S0321 00817000
         ALR   @05,ZCNT                                         02S0321 00818000
         STC   @05,LPI8(,BUFAD)                                 02S0321 00819000
*                    END;              /*                            */ 00820000
*                  ELSE                /*                            */ 00821000
*                    IF SCANARY(XCNT,ONE) = TWELV /*         @Z48MSTT*/ 00822000
*                      THEN            /* THIS IS 12 LPI REQUEST.    */ 00823000
         B     @RC00313                                         02S0323 00824000
@RF00313 LR    @05,XCNT                                         02S0323 00825000
         SLA   @05,2                                            02S0323 00826000
         SLR   @15,@15                                          02S0323 00827000
         IC    @15,SCANARY-4(@05,BUFAD)                         02S0323 00828000
         CH    @15,@CH00035                                     02S0323 00829000
         BNE   @RF00323                                         02S0323 00830000
*                        DO;           /* SET 12 LPI INDICATORS.     */ 00831000
*                          IF ZCNT = ZERO /*                 @Z48MSTT*/ 00832000
*                            THEN      /* THIS IS 12 LPI FILL REQUEST*/ 00833000
         LTR   ZCNT,ZCNT                                        02S0325 00834000
         BNZ   @RF00325                                         02S0325 00835000
*                              ZCNT =  /* COMPUTE REMAINING FCB BYTES*/ 00836000
*                               FCBSIZE / TWO;/*             @Z48MSTT*/ 00837000
         LH    @00,FCBSIZE(,BUFAD)                              02S0326 00838000
         SRDA  @00,32                                           02S0326 00839000
         D     @00,@CF00057                                     02S0326 00840000
         LR    ZCNT,@01                                         02S0326 00841000
*                            ELSE;     /* ZCNT CONTAINS LINE COUNT.  */ 00842000
@RF00325 DS    0H                                               02S0328 00843000
*                          FCBSIZE = FCBSIZE /* ADJ SIZE FOR @Z48MSTT*/ 00844000
*                           -ZCNT*TWO; /*  THIS INCREMENT.   @Z48MSTT*/ 00845000
         LR    @05,ZCNT                                         02S0328 00846000
         ALR   @05,@05                                          02S0328 00847000
         LCR   @05,@05                                          02S0328 00848000
         AH    @05,FCBSIZE(,BUFAD)                              02S0328 00849000
         STH   @05,FCBSIZE(,BUFAD)                              02S0328 00850000
*                          DO          /* SET INDICATORS     @Z48MSTT*/ 00851000
*                           YCNT = ONE /*  AS PER REQUST.    @Z48MSTT*/ 00852000
*                           TO ZCNT;   /*                    @Z48MSTT*/ 00853000
         LA    YCNT,1                                           02S0329 00854000
         B     @DE00329                                         02S0329 00855000
@DL00329 DS    0H                                               02S0330 00856000
*                            FLPI12(FCNT + YCNT) = ONNER; /* @Z48MSTT*/ 00857000
         LR    @15,FCNT                                         02S0330 00858000
         ALR   @15,YCNT                                         02S0330 00859000
         ALR   @15,BUFAD                                        02S0330 00860000
         OI    FLPI12-1(@15),B'00110000'                        02S0330 00861000
*                          END;        /*                    @Z48MSTT*/ 00862000
         AH    YCNT,@CH00060                                    02S0331 00863000
@DE00329 CR    YCNT,ZCNT                                        02S0331 00864000
         BNH   @DL00329                                         02S0331 00865000
*                          LPI12 = LPI12 + ZCNT;/* UPDATE 12 LPI CNT.*/ 00866000
         SLR   @05,@05                                          02S0332 00867000
         IC    @05,LPI12(,BUFAD)                                02S0332 00868000
         ALR   @05,ZCNT                                         02S0332 00869000
         STC   @05,LPI12(,BUFAD)                                02S0332 00870000
*                        END;          /* END 12 LPI PROCESSING.     */ 00871000
*                      ELSE            /* NOT 6, 8, OR 12.   @Z48MSTT*/ 00872000
*                        FMTERR = ON;  /* REMEMBER ERROR.    @Z48MSTT*/ 00873000
         B     @RC00323                                         02S0334 00874000
@RF00323 OI    FMTERR(BUFAD),B'00001000'                        02S0334 00875000
*            FCNT = FCNT + ZCNT;       /* UPDATE FCB LINE COUNTER.   */ 00876000
@RC00323 DS    0H                                               02S0335 00877000
@RC00313 DS    0H                                               02S0335 00878000
@RC00306 ALR   FCNT,ZCNT                                        02S0335 00879000
*          END;                        /* END LPI INSERT.            */ 00880000
         AH    XCNT,@CH00060                                    02S0336 00881000
@DE00304 SLR   @05,@05                                          02S0336 00882000
         ICM   @05,3,SCNT(BUFAD)                                02S0336 00883000
         BCTR  @05,0                                            02S0336 00884000
         CR    XCNT,@05                                         02S0336 00885000
         BNH   @DL00304                                         02S0336 00886000
@DC00304 DS    0H                                               02S0337 00887000
*          IF FMTERR = ON              /* TEST FOR ANY ERROR.        */ 00888000
*            THEN                      /* CREATE A MESSAGE.          */ 00889000
         TM    FMTERR(BUFAD),B'00001000'                        02S0337 00890000
         BNO   @RF00337                                         02S0337 00891000
*              DO;                     /***********IEBA14I************/ 00892000
*                MSGN = IEBA14I;       /* INVALID PARM MESSAGE.      */ 00893000
         MVI   MSGN(BUFAD),X'0E'                                02S0339 00894000
*                EDITDATA(ONE)=        /* SET ADDR OF KEYWORD        */ 00895000
*                 ADDR(LPI);           /*  FOR MESSAGE.              */ 00896000
         LA    @05,@CC00839                                     02S0340 00897000
         STCM  @05,7,EDITDATA(BUFAD)                            02S0340 00898000
*                EDITLEN(ONE) =        /* SET LENGTH OF KEYWORD      */ 00899000
*                 LENGTH(LPI);         /*  FOR MESSAGE.              */ 00900000
         MVI   EDITLEN(BUFAD),X'03'                             02S0341 00901000
*                CALL IEBIMSGS;        /* PRINT MESSAGE.             */ 00902000
         L     @15,@CV00037                                     02S0342 00903000
         BALR  @14,@15                                          02S0342 00904000
*                INHIBITW = ON;        /* PREVENT LIBRARY ACCESS.    */ 00905000
*                FMTERR = OFF;         /* RESET ERROR SWITCH.        */ 00906000
         OI    INHIBITW(BUFAD),B'01000000'                      02S0344 00907000
         NI    FMTERR(BUFAD),B'11110111'                        02S0344 00908000
*              END;                    /******************************/ 00909000
*            ELSE;                     /*                            */ 00910000
@RF00337 DS    0H                                               02S0347 00911000
*        END;                          /* FCB BUILD COMPLETE.        */ 00912000
*                ELSE;                 /* VALIDATE THE FCB.  @Z48MSTT*/ 00913000
@RF00300 DS    0H                                               01S0349 00914000
*/********************************************************************* 00915000
**                                                                    * 00916000
**  THIS SEGMENT WILL VALIDATE THAT THE FCB IMAGE IS WITHIN THE       * 00917000
**  RANGE OF THE FORM SIZE REQUESTED AND THAT THE IMAGE ENDS ON       * 00918000
**  A HALF INCH BOUNDARY.                                             * 00919000
**                                                                    * 00920000
**********************************************************************/ 00921000
*                                                               02S0349 00922000
*        LPI6 =                        /* SET REMAINDER AT 6 @Z48MSTT*/ 00923000
*           FCBSIZE/FOUR + LPI6;       /*  LINES PER INCH.   @Z48MSTT*/ 00924000
         LH    @05,FCBSIZE(,BUFAD)                              02S0349 00925000
         LR    @00,@05                                          02S0349 00926000
         SRDA  @00,32                                           02S0349 00927000
         D     @00,@CF00050                                     02S0349 00928000
         SLR   @00,@00                                          02S0349 00929000
         IC    @00,LPI6(,BUFAD)                                 02S0349 00930000
         ALR   @01,@00                                          02S0349 00931000
         STC   @01,LPI6(,BUFAD)                                 02S0349 00932000
*        MODCNT = LPI6 + LPI8 + LPI12  /* SET MODULE COUNT   @Z48MSTT*/ 00933000
*                      +               /*  TO LENGTH OF      @Z48MSTT*/ 00934000
*                   MARGINS;           /*    FCB.            @Z48MSTT*/ 00935000
         SLR   @00,@00                                          02S0350 00936000
         IC    @00,LPI8(,BUFAD)                                 02S0350 00937000
         ALR   @01,@00                                          02S0350 00938000
         SLR   @00,@00                                          02S0350 00939000
         IC    @00,LPI12(,BUFAD)                                02S0350 00940000
         ALR   @01,@00                                          02S0350 00941000
         AH    @01,@CH00185                                     02S0350 00942000
         STH   @01,MODCNT(,BUFAD)                               02S0350 00943000
*        FCBCLR = FCBCLR && FCBCLR;    /* CREATE A ZEROED AREA.      */ 00944000
         XC    FCBCLR(144,BUFAD),FCBCLR(BUFAD)                  02S0351 00945000
*        IF FCBSIZE < ZERO             /* CHECK FOR FORM ORUN@Z48MSTT*/ 00946000
*         | FCNT > FCBMAX              /*                            */ 00947000
*          THEN                        /* MODULE TOO BIG.            */ 00948000
         LTR   @05,@05                                          02S0352 00949000
         BM    @RT00352                                         02S0352 00950000
         CH    FCNT,@CH00236                                    02S0352 00951000
         BNH   @RF00352                                         02S0352 00952000
@RT00352 DS    0H                                               02S0353 00953000
*            DO;                       /*                            */ 00954000
*              MSGN = IEBA07I;         /* GET A MESSAGE.             */ 00955000
         MVI   MSGN(BUFAD),X'07'                                02S0354 00956000
*              CALL IEBIMSGS;          /* PRINT IT.                  */ 00957000
         L     @15,@CV00037                                     02S0355 00958000
         BALR  @14,@15                                          02S0355 00959000
*              FMTERR = ON;            /* REMEMBER ERROR.            */ 00960000
*              INHIBITW = ON;          /* DO NOT UPDATE LIBRARY.     */ 00961000
         OI    FMTERR(BUFAD),B'01001000'                        02S0357 00962000
*            END;                      /*                            */ 00963000
*          ELSE;                       /* NOT TOO BIG.               */ 00964000
@RF00352 DS    0H                                               02S0360 00965000
*        IF FCBSIZE // FOUR ^= ZERO    /* CHECK BOUNDARIES.  @Z48MSTT*/ 00966000
*          THEN                        /* NOT SO GOOD.               */ 00967000
         LH    @00,FCBSIZE(,BUFAD)                              02S0360 00968000
         SRDA  @00,32                                           02S0360 00969000
         D     @00,@CF00050                                     02S0360 00970000
         LTR   @00,@00                                          02S0360 00971000
         BZ    @RF00360                                         02S0360 00972000
*            DO;                       /*                            */ 00973000
*              MSGN = IEBA11I;         /* GET A MESSAGE.             */ 00974000
         MVI   MSGN(BUFAD),X'0B'                                02S0362 00975000
*              CALL IEBIMSGS;          /* PRINT IT.                  */ 00976000
         L     @15,@CV00037                                     02S0363 00977000
         BALR  @14,@15                                          02S0363 00978000
*              FMTERR = ON;            /* REMEMBER ERROR.            */ 00979000
*              INHIBITW = ON;          /* DO NOT UPDATE LIBRARY.     */ 00980000
         OI    FMTERR(BUFAD),B'01001000'                        02S0365 00981000
*            END;                      /*                            */ 00982000
*          ELSE;                       /* GOOD HALF INCH BOUNDARIES. */ 00983000
@RF00360 DS    0H                                               02S0368 00984000
*        IF MODBOD(MODCNT-TWO:FCBMAX)  /* CHECK FOR DATA BEYOND FORM.*/ 00985000
*           ^= FCBCLR                  /*                            */ 00986000
*          THEN                        /* HAVE SOME DATA, NOT GOOD.  */ 00987000
         SLR   @15,@15                                          02S0368 00988000
         ICM   @15,3,MODCNT(BUFAD)                              02S0368 00989000
         LA    @14,146                                          02S0368 00990000
         SLR   @14,@15                                          02S0368 00991000
         ALR   @15,BUFAD                                        02S0368 00992000
         EX    @14,@SC01878                                     02S0368 00993000
         BE    @RF00368                                         02S0368 00994000
*            DO;                       /*                            */ 00995000
*              MSGN = IEBA05I;         /* GET A MESSAGE.             */ 00996000
         MVI   MSGN(BUFAD),X'05'                                02S0370 00997000
*              CALL IEBIMSGS;          /* PRINT IT.                  */ 00998000
         L     @15,@CV00037                                     02S0371 00999000
         BALR  @14,@15                                          02S0371 01000000
*              INHIBITW = ON;          /* DO NOT UPDATE LIBRARY.     */ 01001000
         OI    INHIBITW(BUFAD),B'01000000'                      02S0372 01002000
*            END;                      /*                            */ 01003000
*          ELSE;                       /* NO DATA, GOOD MARGINS.     */ 01004000
@RF00368 DS    0H                                               02S0375 01005000
*              IF INHIBITW = ON        /* CHECK FOR ANY ERROR.       */ 01006000
*                THEN                  /*                            */ 01007000
         TM    INHIBITW(BUFAD),B'01000000'                      01S0375 01008000
         BNO   @RF00375                                         01S0375 01009000
*                  RETSAVE =           /* SET RETURN CODE FOR THIS   */ 01010000
*                   MAX(RETSAVE,RC8);  /*  OPERATION SO FAR.         */ 01011000
         SLR   @15,@15                                          01S0376 01012000
         IC    @15,RETSAVE(,BUFAD)                              01S0376 01013000
         LA    @14,8                                            01S0376 01014000
         CR    @15,@14                                          01S0376 01015000
         BNL   *+6                                                      01016000
         LR    @15,@14                                          01S0376 01017000
         STC   @15,RETSAVE(,BUFAD)                              01S0376 01018000
*                ELSE;                 /*                            */ 01019000
@RF00375 DS    0H                                               01S0378 01020000
*            END;                      /*                            */ 01021000
*          ELSE;                       /******************************/ 01022000
@RF00284 DS    0H                                               01S0380 01023000
*        IF NOKEY = ON                 /* CHECK FOR NULL OPERANDS.   */ 01024000
*          THEN                        /*                            */ 01025000
         TM    NOKEY(BUFAD),B'01000000'                         01S0380 01026000
         BNO   @RF00380                                         01S0380 01027000
*            READMOD = ON;             /* SET READ AND PRINT ONLY.   */ 01028000
         OI    READMOD(BUFAD),B'00000001'                       01S0381 01029000
*          ELSE;                       /*                            */ 01030000
@RF00380 DS    0H                                               01S0383 01031000
*        GEN REFS(SAVE1)               /* RESTORE BACKWARD POINTER.  */ 01032000
*         (L  @13,SAVE1+BACK(,BUFAD)); /*                            */ 01033000
         L  @13,SAVE1+BACK(,BUFAD)                                      01034000
*END FCB;                              /* RETURN TO CALLER.          */ 01035000
@EL00003 DS    0H                                               01S0384 01036000
@EF00003 DS    0H                                               01S0384 01037000
@ER00003 LM    @14,@12,12(@13)                                  01S0384 01038000
         BR    @14                                              01S0384 01039000
         EJECT                                                          01040000
*/********************************************************************* 01041000
**                                                                    * 01042000
**  THIS ROUTINE WILL MODIFY EXISTING, OR CREATE NEW, TRANSLATE       * 01043000
**  TABLES.                                                           * 01044000
**                                                                    * 01045000
**********************************************************************/ 01046000
*TABLE:                                                         01S0385 01047000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0385 01048000
TABLE    STM   @14,@12,12(@13)                                  01S0385 01049000
*        GEN REFS(SAVE1);              /* USE CONVENTIONAL SAVE.     */ 01050000
         ST  @13,SAVE1+BACK(,BUFAD)    BACKWARD POINTER.                01051000
         LA  @14,SAVE1(,BUFAD)         THIS ROUTINE SAVE AREA.          01052000
         ST  @14,FORE(,@13)            FORWARD POINTER.                 01053000
         LR  @13,@14                   LINKAGE COMPLETE.                01054000
*        BPREFX = XTB1;                /* SET TRANSLATE TABLE PREFIX.*/ 01055000
         MVC   BPREFX(4,BUFAD),@CC00813                         01S0387 01056000
*        OPINPRG = ON;                 /* SET OPERATION IN PROGRESS. */ 01057000
         OI    OPINPRG(BUFAD),B'00000010'                       01S0388 01058000
*        IF SCANINP = ON               /* COULD BE MORE DATA.        */ 01059000
*          THEN                        /*                            */ 01060000
         TM    SCANINP(BUFAD),B'01000000'                       01S0389 01061000
         BNO   @RF00389                                         01S0389 01062000
*            DO;                       /* INITIALIZE BUFFER.         */ 01063000
*/********************************************************************* 01064000
**                                                                    * 01065000
**  THIS SEGMENT WILL EITHER READ IN AN INCLUDE MODULE OR,            * 01066000
**  INITIALIZE A DUMMY TRANSLATE TABLE TO BE MODIFIED.                * 01067000
**                                                                    * 01068000
**********************************************************************/ 01069000
*                                                               02S0391 01070000
*        IF INCLSW = ON                /* CHECK FOR INCLUDE.         */ 01071000
*          THEN                        /*                            */ 01072000
         TM    INCLSW(BUFAD),B'00100000'                        02S0391 01073000
         BNO   @RF00391                                         02S0391 01074000
*            DO;                       /* BRING IN MODULE TO UPDATE. */ 01075000
*              IF DELSET = ON          /*CHECK FOR ERROR KEYWORD.    */ 01076000
*                THEN                  /* DELSEG NOT ALLOWED.        */ 01077000
         TM    DELSET(BUFAD),B'00100000'                        02S0393 01078000
         BNO   @RF00393                                         02S0393 01079000
*                  DO;                 /*                            */ 01080000
*                    EDITDATA(ONE)     /* SET DATA ADDRESS FOR MSG.  */ 01081000
*                     = ADDR(DELSEG);  /*                            */ 01082000
         LA    @15,@CC00843                                     02S0395 01083000
         STCM  @15,7,EDITDATA(BUFAD)                            02S0395 01084000
*                    EDITLEN(ONE)      /* SET LENGTH ALSO.           */ 01085000
*                     = LENGTH(DELSEG);                         02S0396 01086000
         MVI   EDITLEN(BUFAD),X'06'                             02S0396 01087000
*                    MSGN = IEBA23I;   /* EXCLUSIVE KEYWORD.         */ 01088000
         MVI   MSGN(BUFAD),X'17'                                02S0397 01089000
*                    CALL IEBIMSGS;    /* PRINT IT.                  */ 01090000
         L     @15,@CV00037                                     02S0398 01091000
         BALR  @14,@15                                          02S0398 01092000
*                    INHIBITW = ON;    /* PROHIBIT LIBRARY UPDATE.   */ 01093000
         OI    INHIBITW(BUFAD),B'01000000'                      02S0399 01094000
*                  END;                /*                            */ 01095000
*                ELSE;                 /* NO DELSEG SPECIFIED.       */ 01096000
@RF00393 DS    0H                                               02S0402 01097000
*              IF INHIBITR = OFF       /* CHECK FOR READ PREVENTED.  */ 01098000
*                THEN                  /*                            */ 01099000
         TM    INHIBITR(BUFAD),B'00100000'                      02S0402 01100000
         BNZ   @RF00402                                         02S0402 01101000
*                  DO;                 /*                            */ 01102000
*                    BSUFIX = INCLNAME;/* PREPARE BLDL.              */ 01103000
         MVC   BSUFIX(4,BUFAD),INCLNAME(BUFAD)                  02S0404 01104000
*                    CALL BLDL;        /* FIND THE MODULE.           */ 01105000
         BAL   @14,BLDL                                         02S0405 01106000
*                  END;                /*                            */ 01107000
*                ELSE;                 /*                            */ 01108000
@RF00402 DS    0H                                               02S0408 01109000
*              IF INHIBITR = OFF       /*                            */ 01110000
*                THEN                  /* BLDL MUST HAVE FOUND IT.   */ 01111000
         TM    INHIBITR(BUFAD),B'00100000'                      02S0408 01112000
         BNZ   @RF00408                                         02S0408 01113000
*                  CALL READLIB;       /* BRING MODULE INTO BUFFER.  */ 01114000
         BAL   @14,READLIB                                      02S0409 01115000
*                ELSE                  /* MUST HAVE HAD BLDL ERROR.  */ 01116000
*                  DO;                                          02S0410 01117000
         B     @RC00408                                         02S0410 01118000
@RF00408 DS    0H                                               02S0411 01119000
*                    INHIBITW = ON;                             02S0411 01120000
*                  INHIBITP = ON;      /* CAN DO NO PRINTING.        */ 01121000
         OI    INHIBITW(BUFAD),B'01010000'                      02S0412 01122000
*                END;                                           02S0413 01123000
*            END;                      /*                            */ 01124000
*          ELSE                        /* MUST BUILD FROM SCRATCH.   */ 01125000
*            DO;                       /*                            */ 01126000
         B     @RC00391                                         02S0415 01127000
@RF00391 DS    0H                                               02S0416 01128000
*              MODBOD(ONE) = ALBIT;    /* FILL ENTIRE TRANSLATE TABLE*/ 01129000
         MVI   MODBOD(BUFAD),X'FF'                              02S0416 01130000
*              MVC(MODBOD(TWO:TABEND), /*  WITH (FF) WHICH IS AN     */ 01131000
*               MODBOD(ONE));          /*  UNPRINTABLE CHARACTER.    */ 01132000
         MVC   MODBOD+1(255,BUFAD),MODBOD(BUFAD)                02S0417 01133000
*              MODRSVD = ZERO;         /* INSURE RESERVED BYTES ZERO.*/ 01134000
         SLR   @15,@15                                          02S0418 01135000
         STH   @15,MODRSVD(,BUFAD)                              02S0418 01136000
*              MODCNT = TBLSIZE;       /* SET MODULE LENGTH.         */ 01137000
         MVC   MODCNT(2,BUFAD),@CH00757                         02S0419 01138000
*                                      /* CLEAR CGMID AREA.          */ 01139000
*              CGMIDALL = CGMIDALL && CGMIDALL;                 02S0420 01140000
         XC    CGMIDALL(8,BUFAD),CGMIDALL(BUFAD)                02S0420 01141000
*              CGMIDN(ONE) = GOTH;     /* STANDARD GOTHIC ID         */ 01142000
         MVI   CGMIDN(BUFAD),X'82'                              02S0421 01143000
*              GRFMODS = BLANK;        /* NO GCM INDICATED.          */ 01144000
         MVI   GRFMODS+1(BUFAD),C' '                            02S0422 01145000
         MVC   GRFMODS+2(14,BUFAD),GRFMODS+1(BUFAD)             02S0422 01146000
         MVI   GRFMODS(BUFAD),C' '                              02S0422 01147000
*            END;                      /*                            */ 01148000
*              SCNT = ZERO;            /* RESET SCAN COUNT FOR LOC.  */ 01149000
@RC00391 SLR   @15,@15                                          01S0424 01150000
         STH   @15,SCNT(,BUFAD)                                 01S0424 01151000
*              CALL IEBISCAN;          /* SCAN FOR KEYWORDS.         */ 01152000
         L     @15,@CV00036                                     01S0425 01153000
         BALR  @14,@15                                          01S0425 01154000
*              IF LOCSET = ON          /* CHECK FOR LOC KEYWORD.     */ 01155000
*                THEN                  /*                            */ 01156000
         TM    LOCSET(BUFAD),B'00010000'                        01S0426 01157000
         BNO   @RF00426                                         01S0426 01158000
*                  DO;                 /* CHECK AND SET LOC PARMS.   */ 01159000
*/********************************************************************* 01160000
**                                                                    * 01161000
**  THIS SEGMENT PROCESSES THE LOC PARAMETERS AND PLACES THE          * 01162000
**  INFORMATION DERIVED THEREFROM INTO THE TRANSLATE TABLE.           * 01163000
**                                                                    * 01164000
**********************************************************************/ 01165000
*        CARDDATA(ONE:DIM(TBLREF))     /* CLEAR DUP REFERENCE ARRAY. */ 01166000
*         = CARDDATA(ONE:DIM(TBLREF))                           02S0428 01167000
*          && CARDDATA(ONE:DIM(TBLREF));                        02S0428 01168000
         XC    CARDDATA(256,BUFAD),CARDDATA(BUFAD)              02S0428 01169000
*        DO                            /* SET TRANSLATE TABLE WITH   */ 01170000
*         CNT = ONE                    /*  INFORMATION IN LOC PARMS.*/  01171000
*         TO SCNT - ONE;               /* SCNT HAS NO. OF PARM GRPS.*/  01172000
         LA    CNT,1                                            02S0429 01173000
         B     @DE00429                                         02S0429 01174000
@DL00429 DS    0H                                               02S0430 01175000
*/********************************************************************* 01176000
**                                                                    * 01177000
**  THIS SEGMENT WILL VERIFY THAT CHARACTER ARRANGMENT TABLE          * 01178000
**  REFERENCES HANE NOT BEEN DUPLICATED.                              * 01179000
**                                                                    * 01180000
**********************************************************************/ 01181000
*                                                               03S0430 01182000
*        IF TBLREF(SCANARY(CNT,ONE) + ONE) = ALBIT              03S0430 01183000
*          THEN                        /* CHECK FOR DUPLICATE REF.   */ 01184000
         LR    @03,CNT                                          03S0430 01185000
         SLA   @03,2                                            03S0430 01186000
         SLR   @15,@15                                          03S0430 01187000
         IC    @15,SCANARY-4(@03,BUFAD)                         03S0430 01188000
         ST    @15,@TF00001                                     03S0430 01189000
         ALR   @15,BUFAD                                        03S0430 01190000
         CLI   TBLREF+1822(@15),X'FF'                           03S0430 01191000
         BNE   @RF00430                                         03S0430 01192000
*            DO;                       /*                            */ 01193000
*              MSGN = IEBA48I;         /* REQUEST DUP ERROR MESSAGE. */ 01194000
         MVI   MSGN(BUFAD),X'30'                                03S0432 01195000
*              UNITS = SCANARY(CNT,ONE);/* MAKE XLOC PRINTABLE.      */ 01196000
         MVC   UNITS(1,BUFAD),@TF00001+3                        03S0433 01197000
*              UNPK(CWORK(1:3),CWORK(2:3));/*                        */ 01198000
         UNPK  CWORK(3,BUFAD),CWORK+1(2,BUFAD)                  03S0434 01199000
*              FWORK = FWORK & MSK0F;  /*                            */ 01200000
         L     @03,FWORK(,BUFAD)                                03S0435 01201000
         N     @03,@CF00797                                     03S0435 01202000
         ST    @03,FWORK(,BUFAD)                                03S0435 01203000
*              TR(UWORK,TRTAB);        /*                            */ 01204000
         TR    UWORK(2,BUFAD),TRTAB                             03S0436 01205000
*              EDITDATA(ONE)           /* SET                        */ 01206000
*               = ADDR(UWORK);         /*  REFERENCE                 */ 01207000
         LA    @03,UWORK(,BUFAD)                                03S0437 01208000
         STCM  @03,7,EDITDATA(BUFAD)                            03S0437 01209000
*              EDITLEN(ONE)            /*  FOR                       */ 01210000
*               = LENGTH(UWORK);       /*  MESSAGE.                  */ 01211000
         MVI   EDITLEN(BUFAD),X'02'                             03S0438 01212000
*              CALL IEBIMSGS;          /* PRINT IT.                  */ 01213000
         L     @15,@CV00037                                     03S0439 01214000
         BALR  @14,@15                                          03S0439 01215000
*              INHIBITW = ON;          /* PREVENT LIBRARY UPDATE.    */ 01216000
         OI    INHIBITW(BUFAD),B'01000000'                      03S0440 01217000
*            END;                      /*                            */ 01218000
*          ELSE                        /* NOT DUPLICATE, INDICATE.   */ 01219000
*            TBLREF(SCANARY(CNT,ONE) + ONE) = ALBIT;            03S0442 01220000
         B     @RC00430                                         03S0442 01221000
@RF00430 LR    @03,CNT                                          03S0442 01222000
         SLA   @03,2                                            03S0442 01223000
         SLR   @01,@01                                          03S0442 01224000
         IC    @01,SCANARY-4(@03,BUFAD)                         03S0442 01225000
         ALR   @01,BUFAD                                        03S0442 01226000
         MVI   TBLREF+1822(@01),X'FF'                           03S0442 01227000
*          IF SCANARY(CNT,THREE) = ZERO                         02S0443 01228000
*            THEN                      /* CHECK FOR VALID 2ND PARM.  */ 01229000
@RC00430 LR    @03,CNT                                          02S0443 01230000
         SLA   @03,2                                            02S0443 01231000
         SLR   @15,@15                                          02S0443 01232000
         IC    @15,SCANARY-2(@03,BUFAD)                         02S0443 01233000
         CH    @15,@CH00462                                     02S0443 01234000
         BNE   @RF00443                                         02S0443 01235000
*              IF SCANARY(CNT,TWO) = ALBIT                      02S0444 01236000
*               | SCANARY(CNT,TWO) =< SXBIT                     02S0444 01237000
*                THEN                  /* 2ND PARM VALID, 3RD PARM 0.*/ 01238000
         SLR   @15,@15                                          02S0444 01239000
         IC    @15,SCANARY-3(@03,BUFAD)                         02S0444 01240000
         CH    @15,@CH00851                                     02S0444 01241000
         BE    @RT00444                                         02S0444 01242000
         CH    @15,@CH00853                                     02S0444 01243000
         BH    @RF00444                                         02S0444 01244000
@RT00444 DS    0H                                               02S0445 01245000
*                  MODBOD(SCANARY(CNT,ONE)+ONE)                 02S0445 01246000
*                   = SCANARY(CNT,TWO);/* SET SECOND PARM IN TABLE.  */ 01247000
         LR    @03,CNT                                          02S0445 01248000
         SLA   @03,2                                            02S0445 01249000
         SLR   @01,@01                                          02S0445 01250000
         IC    @01,SCANARY-4(@03,BUFAD)                         02S0445 01251000
         SLR   @00,@00                                          02S0445 01252000
         IC    @00,SCANARY-3(@03,BUFAD)                         02S0445 01253000
         STC   @00,MODBOD(@01,BUFAD)                            02S0445 01254000
*                ELSE                  /*                            */ 01255000
*                  FMTERR = ON;        /* SECOND PARAMETER INVALID.  */ 01256000
         B     @RC00444                                         02S0446 01257000
@RF00444 OI    FMTERR(BUFAD),B'00001000'                        02S0446 01258000
*            ELSE                      /* CHECK FOR VALID 3RD PARM.  */ 01259000
*              IF SCANARY(CNT,THREE) < FOUR                     02S0447 01260000
*               & SCANARY(CNT,TWO) =< SXBIT                     02S0447 01261000
*                THEN                  /* COMBINE SECOND AND THIRD   */ 01262000
         B     @RC00443                                         02S0447 01263000
@RF00443 LR    @03,CNT                                          02S0447 01264000
         SLA   @03,2                                            02S0447 01265000
         SLR   @15,@15                                          02S0447 01266000
         IC    @15,SCANARY-2(@03,BUFAD)                         02S0447 01267000
         CH    @15,@CH00050                                     02S0447 01268000
         BNL   @RF00447                                         02S0447 01269000
         SLR   @15,@15                                          02S0447 01270000
         IC    @15,SCANARY-3(@03,BUFAD)                         02S0447 01271000
         CH    @15,@CH00853                                     02S0447 01272000
         BH    @RF00447                                         02S0447 01273000
*                  DO;                 /*  PARAMETERS AND SET IN TBL.*/ 01274000
*                    SLL(SCANARY(CNT,THREE),SIX);               02S0449 01275000
         SLR   @15,@15                                          02S0449 01276000
         IC    @15,SCANARY-2(@03,BUFAD)                         02S0449 01277000
         SLL   @15,6                                            02S0449 01278000
         STC   @15,SCANARY-2(@03,BUFAD)                         02S0449 01279000
*                    MODBOD(SCANARY(CNT,ONE)+ONE)               02S0450 01280000
*                     = SCANARY(CNT,TWO)                        02S0450 01281000
*                      | SCANARY(CNT,THREE);                    02S0450 01282000
         SLR   @15,@15                                          02S0450 01283000
         IC    @15,SCANARY-4(@03,BUFAD)                         02S0450 01284000
         SLR   @14,@14                                          02S0450 01285000
         IC    @14,SCANARY-3(@03,BUFAD)                         02S0450 01286000
         SLR   @07,@07                                          02S0450 01287000
         IC    @07,SCANARY-2(@03,BUFAD)                         02S0450 01288000
         OR    @14,@07                                          02S0450 01289000
         STC   @14,MODBOD(@15,BUFAD)                            02S0450 01290000
*                    IF MODBOD(SCANARY(CNT,ONE)+ONE) = ALBIT    02S0451 01291000
*                      THEN            /* CHECK IF COMBINATION       */ 01292000
         ALR   @15,BUFAD                                        02S0451 01293000
         CLI   MODBOD(@15),X'FF'                                02S0451 01294000
         BNE   @RF00451                                         02S0451 01295000
*                        FMTERR1 = ON; /*  CREATED UNPRINTABLE CHAR. */ 01296000
         OI    FMTERR1(BUFAD),B'00000100'                       02S0452 01297000
*                      ELSE;           /* GOOD CHARACTER.            */ 01298000
@RF00451 DS    0H                                               02S0454 01299000
*                  END;                /*                            */ 01300000
*                ELSE                  /*                            */ 01301000
*                  FMTERR = ON;        /* THIRD PARAMETER INVALID.   */ 01302000
         B     @RC00447                                         02S0455 01303000
@RF00447 OI    FMTERR(BUFAD),B'00001000'                        02S0455 01304000
*        END;                          /* END OF TRANSLATE TABLE LOOP*/ 01305000
@RC00447 DS    0H                                               02S0456 01306000
@RC00443 AH    CNT,@CH00060                                     02S0456 01307000
@DE00429 SLR   @03,@03                                          02S0456 01308000
         ICM   @03,3,SCNT(BUFAD)                                02S0456 01309000
         BCTR  @03,0                                            02S0456 01310000
         CR    CNT,@03                                          02S0456 01311000
         BNH   @DL00429                                         02S0456 01312000
*        IF FMTERR = ON                /* CHECK FOR PARAMETER ERROR. */ 01313000
*          THEN                        /*                            */ 01314000
         TM    FMTERR(BUFAD),B'00001000'                        02S0457 01315000
         BNO   @RF00457                                         02S0457 01316000
*            DO;                       /*                            */ 01317000
*              MSGN = IEBA14I;         /* INVALID PARAMETER MESSAGE. */ 01318000
         MVI   MSGN(BUFAD),X'0E'                                02S0459 01319000
*              EDITDATA(ONE)=ADDR(LOC);/* SET ADDRESS AND LENGTH OF  */ 01320000
         LA    @15,@CC00841                                     02S0460 01321000
         STCM  @15,7,EDITDATA(BUFAD)                            02S0460 01322000
*              EDITLEN(ONE)=LENGTH(LOC);/* KEYWORD TO BE PRINTED.    */ 01323000
         MVI   EDITLEN(BUFAD),X'03'                             02S0461 01324000
*              CALL IEBIMSGS;          /* PRINT THE MESSAGE.         */ 01325000
         L     @15,@CV00037                                     02S0462 01326000
         BALR  @14,@15                                          02S0462 01327000
*              INHIBITW = ON;          /* PROHIBIT LIBRARY UPDATE.   */ 01328000
         OI    INHIBITW(BUFAD),B'01000000'                      02S0463 01329000
*                                      /* SET RETURN CODE 8 THIS OP. */ 01330000
*              RETSAVE = MAX(RETSAVE,RC8);                      02S0464 01331000
         SLR   @15,@15                                          02S0464 01332000
         IC    @15,RETSAVE(,BUFAD)                              02S0464 01333000
         LA    @14,8                                            02S0464 01334000
         CR    @15,@14                                          02S0464 01335000
         BNL   *+6                                                      01336000
         LR    @15,@14                                          02S0464 01337000
         STC   @15,RETSAVE(,BUFAD)                              02S0464 01338000
*            END;                      /******************************/ 01339000
*          ELSE;                       /*                            */ 01340000
@RF00457 DS    0H                                               02S0467 01341000
*        IF FMTERR1 = ON               /* CHECK FOR GENERATION OF AN */ 01342000
*          THEN                        /*  UNPRINTABLE CHARACTER.    */ 01343000
         TM    FMTERR1(BUFAD),B'00000100'                       02S0467 01344000
         BNO   @RF00467                                         02S0467 01345000
*            DO;                       /*                            */ 01346000
*              MSGN = IEBA06I;         /* WARNING MESSAGE.           */ 01347000
         MVI   MSGN(BUFAD),X'06'                                02S0469 01348000
*              CALL IEBIMSGS;          /* PRINT IT.                  */ 01349000
         L     @15,@CV00037                                     02S0470 01350000
         BALR  @14,@15                                          02S0470 01351000
*            END;                      /******************************/ 01352000
*          ELSE;                       /*                            */ 01353000
@RF00467 DS    0H                                               02S0473 01354000
*        FMTERR = OFF;                 /* RESET                      */ 01355000
*        FMTERR1 = OFF;                /*  ERROR CONDITIONS.         */ 01356000
         NI    FMTERR(BUFAD),B'11110011'                        02S0474 01357000
*                  END;                /*                            */ 01358000
*                ELSE                  /* NO LOC SPECIFIED.          */ 01359000
*                  IF INCLSW = OFF     /* CHECK FOR INCLUDED TABLE.  */ 01360000
*                    THEN              /*  NONE MEANS ENTIRE TABLE   */ 01361000
         B     @RC00426                                         01S0476 01362000
@RF00426 TM    INCLSW(BUFAD),B'00100000'                        01S0476 01363000
         BNZ   @RF00476                                         01S0476 01364000
*                      DO;             /*   HAS UNPRINTABLE CHARS.   */ 01365000
*                        MSGN=IEBA25I; /* INSUFFICIENT KEYWORDS.     */ 01366000
         MVI   MSGN(BUFAD),X'19'                                01S0478 01367000
*                        CALL IEBIMSGS;/* PRINT IT.                  */ 01368000
         L     @15,@CV00037                                     01S0479 01369000
         BALR  @14,@15                                          01S0479 01370000
*                        INHIBITW = ON;/* PROHIBIT LIBRARY UPDATE.   */ 01371000
         OI    INHIBITW(BUFAD),B'01000000'                      01S0480 01372000
*                      END;            /* END MESSAGE BUILD.         */ 01373000
*                    ELSE;             /*                            */ 01374000
@RF00476 DS    0H                                               01S0483 01375000
*            END;                      /*                            */ 01376000
*          ELSE;                       /* NO KEYWORDS, PRINT ONLY.   */ 01377000
@RF00389 DS    0H                                               01S0485 01378000
*        IF INHIBITW = ON              /* CHECK FOR INHIBITIVE ERRORS*/ 01379000
*          THEN                        /*                            */ 01380000
@RC00389 TM    INHIBITW(BUFAD),B'01000000'                      01S0485 01381000
         BNO   @RF00485                                         01S0485 01382000
*            RETSAVE = MAX(RETSAVE,RC8);/* SET RC = 8 THIS OPERATION.*/ 01383000
         SLR   @15,@15                                          01S0486 01384000
         IC    @15,RETSAVE(,BUFAD)                              01S0486 01385000
         LA    @14,8                                            01S0486 01386000
         CR    @15,@14                                          01S0486 01387000
         BNL   *+6                                                      01388000
         LR    @15,@14                                          01S0486 01389000
         STC   @15,RETSAVE(,BUFAD)                              01S0486 01390000
*        IF NOKEY = ON                 /* CHECK FOR NULL OPERANDS.   */ 01391000
*          THEN                        /*                            */ 01392000
@RF00485 TM    NOKEY(BUFAD),B'01000000'                         01S0487 01393000
         BNO   @RF00487                                         01S0487 01394000
*            READMOD = ON;             /* SET READ AND PRINT ONLY.   */ 01395000
         OI    READMOD(BUFAD),B'00000001'                       01S0488 01396000
*          ELSE;                       /*                            */ 01397000
@RF00487 DS    0H                                               01S0490 01398000
*        GEN REFS(SAVE1)               /* RESTORE BACKWARD POINTER.  */ 01399000
*         (L  @13,SAVE1+BACK(,BUFAD)); /*                            */ 01400000
         L  @13,SAVE1+BACK(,BUFAD)                                      01401000
*  END TABLE;                          /* RETURN TO CALLER.          */ 01402000
@EL00004 DS    0H                                               01S0491 01403000
@EF00004 DS    0H                                               01S0491 01404000
@ER00004 LM    @14,@12,12(@13)                                  01S0491 01405000
         BR    @14                                              01S0491 01406000
         EJECT                                                          01407000
*/********************************************************************* 01408000
**                                                                    * 01409000
**  IF REQUESTED THIS SECTION WILL FORMAT AND PRINT THE TRANSLATE     * 01410000
**  TABLE.                                                            * 01411000
**                                                                    * 01412000
**********************************************************************/ 01413000
*TABLPRT:                                                       01S0492 01414000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0492 01415000
TABLPRT  STM   @14,@12,12(@13)                                  01S0492 01416000
*        GEN REFS(SAVE2);              /* USE CONVENTIONAL SAVE.     */ 01417000
         ST  @13,SAVE2+BACK(,BUFAD)    BACKWARD POINTER.                01418000
         LA  @14,SAVE2(,BUFAD)         THIS ROUTINE SAVE AREA.          01419000
         ST  @14,FORE(,@13)            FORWARD POINTER.                 01420000
         LR  @13,@14                   LINKAGE COMPLETE.                01421000
*        NEXT = ONE;                   /* INITIALIZE MSG QUEUE CNT.  */ 01422000
         LA    @15,1                                            01S0494 01423000
         STH   @15,NEXT(,BUFAD)                                 01S0494 01424000
*        PRTQELEM = SKIP;              /* SET SKIP.                  */ 01425000
         LA    @14,121                                          01S0495 01426000
         LR    @01,@15                                          01S0495 01427000
         MR    @00,@14                                          01S0495 01428000
         AL    @01,@CF01883                                     01S0495 01429000
         LA    @07,MSGSAVE-10648(@01,BUFAD)                     01S0495 01430000
         MVI   PRTQELEM+1(@07),C' '                             01S0495 01431000
         MVC   PRTQELEM+2(119,@07),PRTQELEM+1(@07)              01S0495 01432000
         MVI   PRTQELEM(@07),C'1'                               01S0495 01433000
*        TBN = BNAME;                  /* 1ST LINE PRINTS MEMBER NAME*/ 01434000
         MVC   TBN(8,@07),BNAME(BUFAD)                          01S0496 01435000
*        NEXT = NEXT + ONE;            /* INCREMENT MSG QUEUE ADDR.  */ 01436000
         LR    @07,@15                                          01S0497 01437000
         ALR   @07,@15                                          01S0497 01438000
         STH   @07,NEXT(,BUFAD)                                 01S0497 01439000
*        PRTQELEM = PRTXHDG;           /* SET XLATE HDR IN QUEUE.    */ 01440000
         MR    @06,@14                                          01S0498 01441000
         AL    @07,@CF01883                                     01S0498 01442000
         LA    @14,MSGSAVE-10648(@07,BUFAD)                     01S0498 01443000
         MVC   PRTQELEM(121,@14),PRTXHDG                        01S0498 01444000
*        DO                            /* START PRINT TABLE LOOP.    */ 01445000
*         YCNT = ONE                   /*                            */ 01446000
*         TO SIXTN;                    /* PRINT SIXTEEN LINES.       */ 01447000
         LR    YCNT,@15                                         01S0499 01448000
@DL00499 DS    0H                                               01S0500 01449000
*          NEXT = NEXT + ONE;          /* INCR MESSAGE QUEUE.        */ 01450000
         LA    @04,1                                            01S0500 01451000
         SLR   @15,@15                                          01S0500 01452000
         ICM   @15,3,NEXT(BUFAD)                                01S0500 01453000
         ALR   @15,@04                                          01S0500 01454000
         STH   @15,NEXT(,BUFAD)                                 01S0500 01455000
*          CONTROL = DOUBL;            /* SET DOUBLE SPACE.          */ 01456000
         MH    @15,@CH00190                                     01S0501 01457000
         AL    @15,@CF01883                                     01S0501 01458000
         LA    @15,MSGSAVE-10648(@15,BUFAD)                     01S0501 01459000
         MVI   CONTROL(@15),C'0'                                01S0501 01460000
*          XHEAD = XHCON;              /* SET LINE HEADER.           */ 01461000
         MVI   XHEAD+4(@15),C' '                                01S0502 01462000
         MVC   XHEAD+5(115,@15),XHEAD+4(@15)                    01S0502 01463000
         MVC   XHEAD(4,@15),@CC00821                            01S0502 01464000
*          TENS = TRTAB(YCNT);         /* SET TENS POSITION OF HDR.  */ 01465000
         LA    @14,TRTAB-1(YCNT)                                01S0503 01466000
         MVC   TENS(1,@15),0(@14)                               01S0503 01467000
*          DO                          /* START PRINT LINE LOOP.     */ 01468000
*           XCNT = ONE                 /*                            */ 01469000
*           TO SIXTN;                  /* SET 16 ENTRIES PER LINE.   */ 01470000
         LR    XCNT,@04                                         01S0504 01471000
@DL00504 DS    0H                                               01S0505 01472000
*            IF XPOS(YCNT,XCNT)        /* IS THIS A                  */ 01473000
*               = ALBIT                /* NON-PRINTABLE CHARACTER?   */ 01474000
*              THEN                    /*                            */ 01475000
         LR    @04,YCNT                                         01S0505 01476000
         SLA   @04,4                                            01S0505 01477000
         ALR   @04,XCNT                                         01S0505 01478000
         ALR   @04,BUFAD                                        01S0505 01479000
         CLI   XPOS-17(@04),X'FF'                               01S0505 01480000
         BNE   @RF00505                                         01S0505 01481000
*                CPOS(XCNT) = SPLAT;   /* YES, SET ASTERISK.         */ 01482000
         LR    @04,XCNT                                         01S0506 01483000
         MH    @04,@CH00118                                     01S0506 01484000
         SLR   @02,@02                                          01S0506 01485000
         ICM   @02,3,NEXT(BUFAD)                                01S0506 01486000
         MH    @02,@CH00190                                     01S0506 01487000
         AL    @02,@CF01883                                     01S0506 01488000
         LA    @02,MSGSAVE-10648(@02,BUFAD)                     01S0506 01489000
         ALR   @02,@04                                          01S0506 01490000
         MVI   CPOS-6(@02),C' '                                 01S0506 01491000
         MVI   CPOS-7(@02),C'*'                                 01S0506 01492000
*              ELSE                    /* IT IS PRINTABLE.           */ 01493000
*                DO;                   /* TRANSLATE ONE POSITION.    */ 01494000
         B     @RC00505                                         01S0507 01495000
@RF00505 DS    0H                                               01S0508 01496000
*                  RGMT = XPOS(YCNT,XCNT);/* GET ONE BYTE FROM TABLE.*/ 01497000
         LR    @04,YCNT                                         01S0508 01498000
         SLA   @04,4                                            01S0508 01499000
         ALR   @04,XCNT                                         01S0508 01500000
         SLR   @15,@15                                          01S0508 01501000
         IC    @15,XPOS-17(@04,BUFAD)                           01S0508 01502000
         LR    RGMT,@15                                         01S0508 01503000
*                  SRL(RGMT,SIX);      /* TWO HI BITS = CGMID ORDER. */ 01504000
         SRL   RGMT,6                                           01S0509 01505000
*                  CGMO(XCNT) = TRTAB(RGMT+ONE);/* CGM ORDER TO PRINT*/ 01506000
         LR    @04,XCNT                                         01S0510 01507000
         MH    @04,@CH00118                                     01S0510 01508000
         SLR   @14,@14                                          01S0510 01509000
         ICM   @14,3,NEXT(BUFAD)                                01S0510 01510000
         MH    @14,@CH00190                                     01S0510 01511000
         AL    @14,@CF01883                                     01S0510 01512000
         LA    @14,MSGSAVE-10648(@14,BUFAD)                     01S0510 01513000
         ST    @04,@TF00001                                     01S0510 01514000
         ALR   @04,@14                                          01S0510 01515000
         LA    @01,TRTAB(RGMT)                                  01S0510 01516000
         MVC   CGMO-7(1,@04),0(@01)                             01S0510 01517000
*                  RGMT = XPOS(YCNT,XCNT);/* GET SAME BYTE AGAIN.    */ 01518000
         LR    RGMT,@15                                         01S0511 01519000
*                  UNITS = RGMT & SXBIT;/* STRIP TWO HI BITS OFF.    */ 01520000
         LA    @04,63                                           01S0512 01521000
         NR    @04,RGMT                                         01S0512 01522000
         STC   @04,UNITS(,BUFAD)                                01S0512 01523000
*                  UNPK(CWORK(1:3),CWORK(2:3));/* CONVERT TO EBCDIC. */ 01524000
         UNPK  CWORK(3,BUFAD),CWORK+1(2,BUFAD)                  01S0513 01525000
*                  FWORK = FWORK & MSK0F;/* MASK OUT ZONES.          */ 01526000
         L     @04,FWORK(,BUFAD)                                01S0514 01527000
         N     @04,@CF00797                                     01S0514 01528000
         ST    @04,FWORK(,BUFAD)                                01S0514 01529000
*                  TR(UWORK,TRTAB);    /* MAKE ALL CHARS PRINTABLE.  */ 01530000
         TR    UWORK(2,BUFAD),TRTAB                             01S0515 01531000
*                  CPOS(XCNT) = CWORK; /* SET CGM REFERENCE TO PRINT.*/ 01532000
         AL    @14,@TF00001                                     01S0516 01533000
         MVC   CPOS-7(2,@14),CWORK(BUFAD)                       01S0516 01534000
*                END;                  /* END ONE POSITION TRANSLATE.*/ 01535000
*          END;                        /* END PRINT LINE LOOP.       */ 01536000
@RC00505 AH    XCNT,@CH00060                                    01S0518 01537000
         CH    XCNT,@CH00116                                    01S0518 01538000
         BNH   @DL00504                                         01S0518 01539000
*        END;                          /* END PRINT TABLE LOOP.      */ 01540000
         AH    YCNT,@CH00060                                    01S0519 01541000
         CH    YCNT,@CH00116                                    01S0519 01542000
         BNH   @DL00499                                         01S0519 01543000
         EJECT                                                          01544000
*/********************************************************************* 01545000
**                                                                    * 01546000
**  THIS SECTION WILL FORMAT AND PRINT THE TRAILER INFORMATION OF     * 01547000
**  THE TRANSLATE TABLE.                                              * 01548000
**                                                                    * 01549000
**********************************************************************/ 01550000
*        NEXT = NEXT + ONE;            /* INCREMENT MESSAGE QUEUE.   */ 01551000
         LA    @15,1                                            01S0520 01552000
         SLR   @14,@14                                          01S0520 01553000
         ICM   @14,3,NEXT(BUFAD)                                01S0520 01554000
         ALR   @14,@15                                          01S0520 01555000
         STH   @14,NEXT(,BUFAD)                                 01S0520 01556000
*        DISC1 = CGMOLINE;             /* SET CGM ORDER PRINT LINE.  */ 01557000
         LA    @07,121                                          01S0521 01558000
         LR    @01,@14                                          01S0521 01559000
         MR    @00,@07                                          01S0521 01560000
         AL    @01,@CF01883                                     01S0521 01561000
         LA    @06,MSGSAVE-10648(@01,BUFAD)                     01S0521 01562000
         MVI   DISC1+53(@06),C' '                               01S0521 01563000
         MVC   DISC1+54(66,@06),DISC1+53(@06)                   01S0521 01564000
         MVC   DISC1(53,@06),CGMOLINE                           01S0521 01565000
*        CONTROL = TRIPL;              /* SET TRIPLE SPACE.          */ 01566000
         MVI   CONTROL(@06),C'-'                                01S0522 01567000
*        NEXT = NEXT + ONE;            /* INCRE MENT MESSAGE QUEUE.  */ 01568000
         ALR   @14,@15                                          01S0523 01569000
         STH   @14,NEXT(,BUFAD)                                 01S0523 01570000
*        DISC1 = CGMILINE;             /* SET CGMID PRINT LINE.      */ 01571000
         LR    @01,@14                                          01S0524 01572000
         MR    @00,@07                                          01S0524 01573000
         AL    @01,@CF01883                                     01S0524 01574000
         LA    @14,MSGSAVE-10648(@01,BUFAD)                     01S0524 01575000
         MVI   DISC1+53(@14),C' '                               01S0524 01576000
         MVC   DISC1+54(66,@14),DISC1+53(@14)                   01S0524 01577000
         MVC   DISC1(53,@14),CGMILINE                           01S0524 01578000
*        CONTROL = DOUBL;              /* SET DOUBLE SPACE.          */ 01579000
         MVI   CONTROL(@14),C'0'                                01S0525 01580000
*        DO                            /* START CGMID EDIT LOOP.     */ 01581000
*         CNT = ONE                    /*                            */ 01582000
*         TO FOUR                      /* ONLY FOUR POSSIBLE CGMIDS. */ 01583000
*         WHILE CGMIDN(CNT) ^= ZERO;   /* STOP AT INVALID ID         */ 01584000
         LR    CNT,@15                                          01S0526 01585000
@DL00526 LR    @03,CNT                                          01S0526 01586000
         ALR   @03,@03                                          01S0526 01587000
         SLR   @15,@15                                          01S0526 01588000
         IC    @15,CGMIDN-2(@03,BUFAD)                          01S0526 01589000
         LTR   @15,@15                                          01S0526 01590000
         BZ    @DC00526                                         01S0526 01591000
*          UNITS = CGMIDN(CNT);        /* GET ONE CGMID.             */ 01592000
         STC   @15,UNITS(,BUFAD)                                01S0527 01593000
*          UNPK(CWORK(1:3),CWORK(2:3));/* CONV TO EBCDIC.            */ 01594000
         UNPK  CWORK(3,BUFAD),CWORK+1(2,BUFAD)                  01S0528 01595000
*          FWORK = FWORK & MSK0F;      /* MASK OUT ZONES.            */ 01596000
         L     @03,FWORK(,BUFAD)                                01S0529 01597000
         N     @03,@CF00797                                     01S0529 01598000
         ST    @03,FWORK(,BUFAD)                                01S0529 01599000
*          TR(UWORK,TRTAB);            /* MAKE CHAR PRNTABLE         */ 01600000
         TR    UWORK(2,BUFAD),TRTAB                             01S0530 01601000
*          CG(CNT) = CWORK;            /* SET TO PRINTLINE.          */ 01602000
         LR    @03,CNT                                          01S0531 01603000
         SLA   @03,3                                            01S0531 01604000
         SLR   @15,@15                                          01S0531 01605000
         ICM   @15,3,NEXT(BUFAD)                                01S0531 01606000
         MH    @15,@CH00190                                     01S0531 01607000
         AL    @15,@CF01883                                     01S0531 01608000
         LA    @15,MSGSAVE-10648(@15,BUFAD)                     01S0531 01609000
         ALR   @15,@03                                          01S0531 01610000
         MVC   CG-8(2,@15),CWORK(BUFAD)                         01S0531 01611000
*        END;                          /* END CGMID EDIT LOOP.       */ 01612000
         AH    CNT,@CH00060                                     01S0532 01613000
         CH    CNT,@CH00050                                     01S0532 01614000
         BNH   @DL00526                                         01S0532 01615000
@DC00526 DS    0H                                               01S0533 01616000
*        NEXT = NEXT + ONE;            /* INCREMENT MESSAGE QUEUE.   */ 01617000
         LA    @15,1                                            01S0533 01618000
         SLR   @14,@14                                          01S0533 01619000
         ICM   @14,3,NEXT(BUFAD)                                01S0533 01620000
         ALR   @14,@15                                          01S0533 01621000
         STH   @14,NEXT(,BUFAD)                                 01S0533 01622000
*        PRNTGCMR = GCMRLINE;          /* READY GRAPICS NAME LINE.   */ 01623000
         MH    @14,@CH00190                                     01S0534 01624000
         AL    @14,@CF01883                                     01S0534 01625000
         LA    @14,MSGSAVE-10648(@14,BUFAD)                     01S0534 01626000
         ALR   @14,@15                                          01S0534 01627000
         MVI   PRNTGCMR+47(@14),C' '                            01S0534 01628000
         MVC   PRNTGCMR+48(72,@14),PRNTGCMR+47(@14)             01S0534 01629000
         MVC   PRNTGCMR(47,@14),GCMRLINE                        01S0534 01630000
*        DO                            /* START GRAF NAME LOOP.      */ 01631000
*         CNT = ONE                    /*                            */ 01632000
*         TO FOUR                      /* ONLY FOUR GRAF NAMES.      */ 01633000
*         WHILE GRAFMODN(CNT,ONE)      /* STOP AT 1ST NO NAME.       */ 01634000
*                ^= BLANK;             /*                            */ 01635000
         LR    CNT,@15                                          01S0535 01636000
@DL00535 LR    @03,CNT                                          01S0535 01637000
         SLA   @03,2                                            01S0535 01638000
         ST    @03,@TF00001                                     01S0535 01639000
         ALR   @03,BUFAD                                        01S0535 01640000
         CLI   GRAFMODN-4(@03),C' '                             01S0535 01641000
         BE    @DC00535                                         01S0535 01642000
*          GCMNAME(CNT) = GRAF;        /* SET PREFIX.                */ 01643000
         LR    @03,CNT                                          01S0536 01644000
         MH    @03,@CH00035                                     01S0536 01645000
         SLR   @15,@15                                          01S0536 01646000
         ICM   @15,3,NEXT(BUFAD)                                01S0536 01647000
         MH    @15,@CH00190                                     01S0536 01648000
         AL    @15,@CF01883                                     01S0536 01649000
         LA    @15,MSGSAVE-10648(@15,BUFAD)                     01S0536 01650000
         AH    @15,@CH00060                                     01S0536 01651000
         ST    @03,@TF00002                                     01S0536 01652000
         ALR   @03,@15                                          01S0536 01653000
         MVI   GCMNAME-8(@03),C' '                              01S0536 01654000
         MVC   GCMNAME-7(7,@03),GCMNAME-8(@03)                  01S0536 01655000
         MVC   GCMNAME-12(4,@03),@CC00811                       01S0536 01656000
*          SUF(CNT) = GRAFMODN(CNT);   /* SET SUFFIX.                */ 01657000
         LR    @03,@15                                          01S0537 01658000
         AL    @03,@TF00002                                     01S0537 01659000
         LR    @01,BUFAD                                        01S0537 01660000
         AL    @01,@TF00001                                     01S0537 01661000
         MVC   SUF-12(4,@03),GRAFMODN-4(@01)                    01S0537 01662000
*                                      /* SET GRAF NAME FOR BLDL.    */ 01663000
*          BNAME = GCMNAME(CNT,ONE:LENGTH(BNAME));              01S0538 01664000
         AL    @15,@TF00002                                     01S0538 01665000
         MVC   BNAME(8,BUFAD),GCMNAME-12(@15)                   01S0538 01666000
*          CALL BLDL;                  /* ISSUE BLDL.                */ 01667000
         BAL   @14,BLDL                                         01S0539 01668000
*        END;                          /* END GRAF NAME LOOP.        */ 01669000
         AH    CNT,@CH00060                                     01S0540 01670000
         CH    CNT,@CH00050                                     01S0540 01671000
         BNH   @DL00535                                         01S0540 01672000
@DC00535 DS    0H                                               01S0541 01673000
*        CONTROL = TRIPL;              /* SET TRIPLE SPACE.          */ 01674000
         SLR   @15,@15                                          01S0541 01675000
         ICM   @15,3,NEXT(BUFAD)                                01S0541 01676000
         MH    @15,@CH00190                                     01S0541 01677000
         AL    @15,@CF01883                                     01S0541 01678000
         LA    @15,MSGSAVE-10648(@15,BUFAD)                     01S0541 01679000
         MVI   CONTROL(@15),C'-'                                01S0541 01680000
*        CALL PRINTQ;                  /* PRINT QUEUE.               */ 01681000
         BAL   @14,PRINTQ                                       01S0542 01682000
*        GEN REFS(SAVE2)               /* RESTORE BACKWARD POINTER.  */ 01683000
*         (L  @13,SAVE2+BACK(,BUFAD)); /*                            */ 01684000
         L  @13,SAVE2+BACK(,BUFAD)                                      01685000
*  END TABLPRT;                        /* RETURN TO CALLER.          */ 01686000
@EL00005 DS    0H                                               01S0544 01687000
@EF00005 DS    0H                                               01S0544 01688000
@ER00005 LM    @14,@12,12(@13)                                  01S0544 01689000
         BR    @14                                              01S0544 01690000
         EJECT                                                          01691000
*/********************************************************************* 01692000
**                                                                    * 01693000
**  THIS ROUTINE WILL MODIFY OR CREATE COPY MODIFICATION MODULES.     * 01694000
**  THE MODULES MAY BE CONSTRUCTED BY INCLUDING ANY PORTION OR ALL    * 01695000
**  OF AN EXISTING MODULE. SEGMENTS ARE THEN ADDED AS SPECIFIED ON    * 01696000
**  THE SUPPLIED CONTROL CARDS.                                       * 01697000
**                                                                    * 01698000
**********************************************************************/ 01699000
*COPYMOD:                                                       01S0545 01700000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0545 01701000
COPYMOD  STM   @14,@12,12(@13)                                  01S0545 01702000
*        GEN REFS(SAVE1);              /* USE CONVENTIONAL SAVE.     */ 01703000
         ST  @13,SAVE1+BACK(,BUFAD)    BACKWARD POINTER.                01704000
         LA  @14,SAVE1(,BUFAD)         THIS ROUTINE SAVE AREA.          01705000
         ST  @14,FORE(,@13)            FORWARD POINTER.                 01706000
         LR  @13,@14                   LINKAGE COMPLETE.                01707000
*        BNAME = MOD1;                 /* SET GCM NAME PREFIX.       */ 01708000
         MVI   BNAME+4(BUFAD),C' '                              01S0547 01709000
         MVC   BNAME+5(3,BUFAD),BNAME+4(BUFAD)                  01S0547 01710000
         MVC   BNAME(4,BUFAD),@CC00815                          01S0547 01711000
*        IF OPINPRG = OFF              /* CHECK HAVING BEEN HERE     */ 01712000
*          THEN                        /*  BEFORE.                   */ 01713000
         TM    OPINPRG(BUFAD),B'00000010'                       01S0548 01714000
         BNZ   @RF00548                                         01S0548 01715000
*            DO;                       /* CLEAR MODULE HEADER.       */ 01716000
*              MODHEAD = MODHEAD && MODHEAD;                    01S0550 01717000
         XC    MODHEAD(8,BUFAD),MODHEAD(BUFAD)                  01S0550 01718000
*              OPINPRG = ON;           /* REMEMBER BEING HERE.       */ 01719000
         OI    OPINPRG(BUFAD),B'00000010'                       01S0551 01720000
*              COPYSIZE = ZERO;        /* RESET SEGMENT COUNTER.     */ 01721000
         SLR   COPYSIZE,COPYSIZE                                01S0552 01722000
*              IF INCLSW = ON          /* CHECK FOR INCLUDE OPTION.  */ 01723000
*                THEN                  /* LOAD INCLUDE MODULE        */ 01724000
         TM    INCLSW(BUFAD),B'00100000'                        01S0553 01725000
         BNO   @RF00553                                         01S0553 01726000
*                  DO;                 /*  AND COPY INTO BUFFER.     */ 01727000
*/********************************************************************* 01728000
**                                                                    * 01729000
**  THIS SECTION WILL CAUSE THE INCLUDED COPY MODIFICATION            * 01730000
**  MODULE TO BE COPIED INTO THE BUFFER, EXCLUDING ANY SEGMENTS       * 01731000
**  SPECIFIED IN THE DELSEG KEYWORD OF THE PREVIOUS INCLUDE.          * 01732000
**                                                                    * 01733000
**********************************************************************/ 01734000
*        INCLSW = OFF;                 /* RESET INCLUDE INDICATION.  */ 01735000
         NI    INCLSW(BUFAD),B'11011111'                        02S0555 01736000
*        NOKEY = OFF;                  /* RESET PRINT ONLY REQUEST   */ 01737000
         NI    NOKEY(BUFAD),B'10111111'                         02S0556 01738000
*        BSUFIX = INCLNAME;            /* SET NAME IN BLDL ENTRY.    */ 01739000
         MVC   BSUFIX(4,BUFAD),INCLNAME(BUFAD)                  02S0557 01740000
*        IF DELSET = ON                /* CHECK FOR DELSEG KEYWORD.  */ 01741000
*          THEN                        /* NEED TO LOAD MODULE.       */ 01742000
         TM    DELSET(BUFAD),B'00100000'                        02S0558 01743000
         BNO   @RF00558                                         02S0558 01744000
*            DO;                       /*                            */ 01745000
*              CALL LOADLIB;           /* LOAD A MODULE.             */ 01746000
         BAL   @14,LOADLIB                                      02S0560 01747000
*              IF LOADFLAG = ALBIT     /* CHECK FOR MODULE LOADED.   */ 01748000
*                THEN                  /*                            */ 01749000
         CLI   LOADFLAG(BUFAD),X'FF'                            02S0561 01750000
         BNE   @RF00561                                         02S0561 01751000
*                  DO;                 /*                            */ 01752000
*                    HCNT = ZERO;      /* INITIALIZE SEGMENT SIZE.   */ 01753000
         SLR   HCNT,HCNT                                        02S0563 01754000
*                    FWORK = ZERO;     /* RESET WORK AREA.           */ 01755000
         SLR   @02,@02                                          02S0564 01756000
         ST    @02,FWORK(,BUFAD)                                02S0564 01757000
*                    MODCNT = LMODCNT; /* GET MODULE SIZE.           */ 01758000
         ICM   @02,7,LOADMOD(BUFAD)                             02S0565 01759000
         MVC   MODCNT(2,BUFAD),LMODCNT(@02)                     02S0565 01760000
*                    DO                /* START COPY OF INCLUDED     */ 01761000
*                     CNT = ONE        /*  MODULE.                   */ 01762000
*                     TO BIGNUM        /* COPY TO END OF MODULE      */ 01763000
*                     WHILE CMODCNT > ZERO                      02S0566 01764000
*                         & LENGTH(MODBOD) => COPYSIZE;         02S0566 01765000
         LA    CNT,1                                            02S0566 01766000
@DL00566 SLR   @15,@15                                          02S0566 01767000
         CH    @15,CMODCNT(,BUFAD)                              02S0566 01768000
         BNL   @DC00566                                         02S0566 01769000
         CH    COPYSIZE,@CH00231                                02S0566 01770000
         BH    @DC00566                                         02S0566 01771000
*                      HCNT = LTNO + LENGTH(COPYLABL);/* GET SEG SIZE*/ 01772000
         SLR   @14,@14                                          02S0567 01773000
         ICM   @14,7,LOADMOD(BUFAD)                             02S0567 01774000
         AL    @14,FWORK(,BUFAD)                                02S0567 01775000
         AH    @14,@CH00048                                     02S0567 01776000
         LA    HCNT,6                                           02S0567 01777000
         SLR   @06,@06                                          02S0567 01778000
         IC    @06,LTNO(,@14)                                   02S0567 01779000
         ALR   HCNT,@06                                         02S0567 01780000
*                      IF DEL(CNT) = ZERO                       02S0568 01781000
*                        THEN          /* DO NOT DELETE THIS SEGMENT.*/ 01782000
         SLR   @06,@06                                          02S0568 01783000
         IC    @06,DEL+795(CNT,BUFAD)                           02S0568 01784000
         CR    @15,@06                                          02S0568 01785000
         BNE   @RF00568                                         02S0568 01786000
*                          DO;         /*                            */ 01787000
*                            MODBOD(COPYSIZE+ONE:COPYSIZE+HCNT) 02S0570 01788000
*                             = CLOADSEG(ONE:HCNT);/* COPY SEGMENT.  */ 01789000
         LR    @06,BUFAD                                        02S0570 01790000
         ALR   @06,COPYSIZE                                     02S0570 01791000
         LR    @15,HCNT                                         02S0570 01792000
         BCTR  @15,0                                            02S0570 01793000
         EX    @15,@SM01885                                     02S0570 01794000
*                            COPYSIZE = COPYSIZE + HCNT;/*UPDATE SIZE*/ 01795000
         ALR   COPYSIZE,HCNT                                    02S0571 01796000
*                          END;        /*                            */ 01797000
*                        ELSE          /* NO SEGMENT COPIED.         */ 01798000
*                          DO;         /* INDICATE SEGMENT DELETED.  */ 01799000
         B     @RC00568                                         02S0573 01800000
@RF00568 DS    0H                                               02S0574 01801000
*                            SCNT = SCNT-ONE;/* REDUCE DELSEG CNT.   */ 01802000
         SLR   @06,@06                                          02S0574 01803000
         ICM   @06,3,SCNT(BUFAD)                                02S0574 01804000
         BCTR  @06,0                                            02S0574 01805000
         STH   @06,SCNT(,BUFAD)                                 02S0574 01806000
*                            DEL(CNT) = ZERO;                   02S0575 01807000
         SLR   @06,@06                                          02S0575 01808000
         STC   @06,DEL+795(CNT,BUFAD)                           02S0575 01809000
*                          END;        /*                            */ 01810000
*                      FWORK = FWORK + HCNT;                    02S0577 01811000
@RC00568 LR    @06,HCNT                                         02S0577 01812000
         AL    @06,FWORK(,BUFAD)                                02S0577 01813000
         ST    @06,FWORK(,BUFAD)                                02S0577 01814000
*                      CMODCNT = CMODCNT - HCNT;                02S0578 01815000
         LH    @06,CMODCNT(,BUFAD)                              02S0578 01816000
         SLR   @06,HCNT                                         02S0578 01817000
         STH   @06,CMODCNT(,BUFAD)                              02S0578 01818000
*                    END;              /* END COPY.                  */ 01819000
         AH    CNT,@CH00060                                     02S0579 01820000
         CH    CNT,@CH00762                                     02S0579 01821000
         BNH   @DL00566                                         02S0579 01822000
@DC00566 DS    0H                                               02S0580 01823000
*                    IF CMODCNT ^= ZERO | CNT > BIGNUM          02S0580 01824000
*                      THEN            /*  OF MODULE.                */ 01825000
         ICM   @15,3,CMODCNT(BUFAD)                             02S0580 01826000
         BNZ   @RT00580                                         02S0580 01827000
         CH    CNT,@CH00762                                     02S0580 01828000
         BNH   @RF00580                                         02S0580 01829000
@RT00580 DS    0H                                               02S0581 01830000
*                        DO;           /*                            */ 01831000
*                          MSGN = IEBA07I;   /* MODULE TOO LARGE.    */ 01832000
         MVI   MSGN(BUFAD),X'07'                                02S0582 01833000
*                          CALL IEBIMSGS;    /* PRINT MESSAGE.       */ 01834000
         L     @15,@CV00037                                     02S0583 01835000
         BALR  @14,@15                                          02S0583 01836000
*                          INHIBITW = ON;    /* INHIB LIB UPDATE.    */ 01837000
         OI    INHIBITW(BUFAD),B'01000000'                      02S0584 01838000
*                        END;          /*                            */ 01839000
*                      ELSE;           /* GOOD COPY.                 */ 01840000
@RF00580 DS    0H                                               02S0587 01841000
*                    CMODCNT = COPYSIZE;/* SET MODULE SIZE.          */ 01842000
         STH   COPYSIZE,CMODCNT(,BUFAD)                         02S0587 01843000
*                    CALL DELCHK;      /* INSURE PROPER DELETE.      */ 01844000
         BAL   @14,DELCHK                                       02S0588 01845000
*                  END;                /*                            */ 01846000
*                ELSE                  /* ERROR IN BLDL.             */ 01847000
*            INHIBITW = ON;            /* INHIBIT LIBRARY UPDATE.    */ 01848000
         B     @RC00561                                         02S0590 01849000
@RF00561 OI    INHIBITW(BUFAD),B'01000000'                      02S0590 01850000
*            END;                      /* END LOAD CODE.             */ 01851000
*          ELSE                        /* CAN READ THIS ONE.         */ 01852000
*            IF INHIBITR = OFF         /* COULD BE NAME ERROR.       */ 01853000
*              THEN                    /*                            */ 01854000
         B     @RC00558                                         02S0592 01855000
@RF00558 TM    INHIBITR(BUFAD),B'00100000'                      02S0592 01856000
         BNZ   @RF00592                                         02S0592 01857000
*            DO;                       /*                            */ 01858000
*              CALL BLDL;              /* FIND THE MODULE.           */ 01859000
         BAL   @14,BLDL                                         02S0594 01860000
*              IF INHIBITR = OFF       /* CHECK FOR BLDL ERROR.      */ 01861000
*                THEN                  /*                            */ 01862000
         TM    INHIBITR(BUFAD),B'00100000'                      02S0595 01863000
         BNZ   @RF00595                                         02S0595 01864000
*                  IF BSTOR =< LENGTH(LIBBUF)                   02S0596 01865000
*                    THEN              /* CHECK FOR MODULE SIZE.     */ 01866000
         CLC   BSTOR(3,BUFAD),@CF01849+1                        02S0596 01867000
         BH    @RF00596                                         02S0596 01868000
*                      DO;             /*                            */ 01869000
*                        CALL READLIB; /* READ MODULE INTO BUFFER.   */ 01870000
         BAL   @14,READLIB                                      02S0598 01871000
*                        IF INHIBITR = ON                       02S0599 01872000
*                          THEN        /* CHECK FOR ERROR FROM READ. */ 01873000
         TM    INHIBITR(BUFAD),B'00100000'                      02S0599 01874000
         BNO   @RF00599                                         02S0599 01875000
*                            DO;                                02S0600 01876000
*                              INHIBITW = ON;                   02S0601 01877000
         OI    INHIBITW(BUFAD),B'01000000'                      02S0601 01878000
*                            END;                               02S0602 01879000
*                          ELSE;       /* NO ERROR FROM READ.        */ 01880000
@RF00599 DS    0H                                               02S0604 01881000
*                      END;            /*                            */ 01882000
*                    ELSE              /* MODULE TOO BIG.            */ 01883000
*                      DO;             /*                            */ 01884000
         B     @RC00596                                         02S0605 01885000
@RF00596 DS    0H                                               02S0606 01886000
*                        MSGN = IEBA07I;                        02S0606 01887000
         MVI   MSGN(BUFAD),X'07'                                02S0606 01888000
*                        CALL IEBIMSGS;/* PRINT MODULE TOO BIG.      */ 01889000
         L     @15,@CV00037                                     02S0607 01890000
         BALR  @14,@15                                          02S0607 01891000
*                        INHIBITW = ON;                         02S0608 01892000
         OI    INHIBITW(BUFAD),B'01000000'                      02S0608 01893000
*                      END;            /*                            */ 01894000
*                ELSE;                 /* BLDL ERROR.                */ 01895000
@RF00595 DS    0H                                               02S0611 01896000
*            END;                      /*                            */ 01897000
*              ELSE                    /*                            */ 01898000
*                INHIBITW = ON;        /* PREVENT LIBRARY UPDATE     */ 01899000
         B     @RC00592                                         02S0612 01900000
@RF00592 OI    INHIBITW(BUFAD),B'01000000'                      02S0612 01901000
*        BSUFIX = BLANK;               /* CLEAR MODULE NAME, BLDL.   */ 01902000
@RC00592 DS    0H                                               02S0613 01903000
@RC00558 MVI   BSUFIX+1(BUFAD),C' '                             02S0613 01904000
         MVC   BSUFIX+2(2,BUFAD),BSUFIX+1(BUFAD)                02S0613 01905000
         MVI   BSUFIX(BUFAD),C' '                               02S0613 01906000
*        INHIBITR = OFF;               /* RESET READ INHIBIT.        */ 01907000
         NI    INHIBITR(BUFAD),B'11011111'                      02S0614 01908000
*                  END;                /*                            */ 01909000
*                ELSE;                 /* NO INCLUDE.                */ 01910000
@RF00553 DS    0H                                               01S0617 01911000
*            END;                      /*                            */ 01912000
*          ELSE                        /* OPERATION IN PROGRESS.     */ 01913000
*            KWDUSED = ZERO;           /*                            */ 01914000
         B     @RC00548                                         01S0618 01915000
@RF00548 MVI   KWDUSED(BUFAD),X'00'                             01S0618 01916000
*        IF SCANINP = ON               /* CHECK FOR MORE SCANNING    */ 01917000
*          THEN                        /*  TO DO.                    */ 01918000
@RC00548 TM    SCANINP(BUFAD),B'01000000'                       01S0619 01919000
         BNO   @RF00619                                         01S0619 01920000
*            DO;                       /*                            */ 01921000
*              READMOD = OFF;          /* IGNORE READ ONLY           */ 01922000
         NI    READMOD(BUFAD),B'11111110'                       01S0621 01923000
*              COPYLINE = COPYLINE && COPYLINE;                 01S0622 01924000
         LA    @15,796                                          01S0622 01925000
         ALR   @15,BUFAD                                        01S0622 01926000
         XC    COPYLINE(210,@15),COPYLINE(@15)                  01S0622 01927000
*              COPYLABL = COPYDFLT;    /* SET DEFAUL COPY SEG.       */ 01928000
         MVC   COPYLABL(6,@15),@CB00896                         01S0623 01929000
*              CALL IEBISCAN;          /* SCAN FOR KEYWORDS.         */ 01930000
         L     @15,@CV00036                                     01S0624 01931000
         BALR  @14,@15                                          01S0624 01932000
*              IF COPYSET = ON         /* CHECK FOR ALL KEYWORDS     */ 01933000
*               & LINESET = ON         /*  SPECIFIED.                */ 01934000
*               & POSSET = ON          /*                            */ 01935000
*               & TEXTSET = ON         /*                            */ 01936000
*                THEN                  /*                            */ 01937000
         TM    COPYSET(BUFAD),B'00011110'                       01S0625 01938000
         BNO   @RF00625                                         01S0625 01939000
*                  DO;                 /* SET TEXT INFO IN COPY MOD. */ 01940000
*/********************************************************************* 01941000
**                                                                    * 01942000
**  THIS SECTION WILL INVESTIGATE THE TEXT GENERATED AND REDUCE TO    * 01943000
**  THREE BYTES ANY STRING OF EQUAL CHARACTERS. THE THREE BYTES ARE   * 01944000
**  IN THE FOLLOWING FORMAT.                                          * 01945000
**                                                                    * 01946000
**       BYTE 1 HEX(FF)                                               * 01947000
**       BYTE 2 REPETITION FACTOR                                     * 01948000
**       BYTE 3 CHARACTER TO BE REPEATED                              * 01949000
**                                                                    * 01950000
**********************************************************************/ 01951000
*        DO;                           /*                            */ 01952000
*          RESPECIFY (BUFFPTR) RESTRICTED;                      02S0628 01953000
*          YCNT = ZERO;                /* RESET COUNTER.             */ 01954000
         SLR   YCNT,YCNT                                        02S0629 01955000
*          BUFFPTR = ADDR(TEXTD);      /* POINTER TRACKS TEXTDATA.   */ 01956000
         LA    BUFFPTR,TEXTD+796(,BUFAD)                        02S0630 01957000
*          DO                          /* START TEXT FIELD SCAN.     */ 01958000
*           XCNT = ONE                 /* COUNTER FOR RECEIVING FLD. */ 01959000
*           TO TEXTN                   /*                            */ 01960000
*           WHILE YCNT < TEXTN;        /* TOTAL FIELD COUNTER.       */ 01961000
         LA    XCNT,1                                           02S0631 01962000
         B     @DE00631                                         02S0631 01963000
@DL00631 SLR   @07,@07                                          02S0631 01964000
         IC    @07,TEXTN+796(,BUFAD)                            02S0631 01965000
         CR    YCNT,@07                                         02S0631 01966000
         BNL   @DC00631                                         02S0631 01967000
*            DO                        /* SCAN FOR EQUAL CHARACTERS  */ 01968000
*             CNT = ONE                /* COUNT EQUAL CHARACTERS     */ 01969000
*             TO TEXTN - YCNT          /* STOP AT END OF FIELD.      */ 01970000
*             WHILE TEXTDATA(CNT)      /*                            */ 01971000
*                 = TEXTDATA(CNT+ONE); /*                            */ 01972000
         LA    CNT,1                                            02S0632 01973000
         B     @DE00632                                         02S0632 01974000
@DL00632 LR    @07,BUFFPTR                                      02S0632 01975000
         ALR   @07,CNT                                          02S0632 01976000
         BCTR  @07,0                                            02S0632 01977000
         LR    @04,BUFFPTR                                      02S0632 01978000
         ALR   @04,CNT                                          02S0632 01979000
         CLC   TEXTDATA(1,@07),TEXTDATA(@04)                    02S0632 01980000
         BNE   @DC00632                                         02S0632 01981000
*              TEXTD(XCNT + CNT - ONE) /* MOVE TO POSSIBLY COMPRESS  */ 01982000
*               = TEXTDATA(CNT);       /*  FIELD.                    */ 01983000
         LR    @07,XCNT                                         02S0633 01984000
         ALR   @07,CNT                                          02S0633 01985000
         ALR   @07,BUFAD                                        02S0633 01986000
         LR    @04,BUFFPTR                                      02S0633 01987000
         ALR   @04,CNT                                          02S0633 01988000
         BCTR  @04,0                                            02S0633 01989000
         MVC   TEXTD+794(1,@07),TEXTDATA(@04)                   02S0633 01990000
*            END;                      /* END OF EQ CHARACTER SCAN.  */ 01991000
         AH    CNT,@CH00060                                     02S0634 01992000
@DE00632 SLR   @07,@07                                          02S0634 01993000
         IC    @07,TEXTN+796(,BUFAD)                            02S0634 01994000
         SLR   @07,YCNT                                         02S0634 01995000
         CR    CNT,@07                                          02S0634 01996000
         BNH   @DL00632                                         02S0634 01997000
@DC00632 DS    0H                                               02S0635 01998000
*            IF CNT > THREE            /* CHECK FOR MORE THAN THREE  */ 01999000
*              THEN                    /*  EQUAL CHARACTERS.         */ 02000000
         CH    CNT,@CH00111                                     02S0635 02001000
         BNH   @RF00635                                         02S0635 02002000
*                DO;                   /*                            */ 02003000
*                  TEXTD(XCNT) = ALBIT;/* INDICATE COMPRESSION.      */ 02004000
         LA    @07,796                                          02S0637 02005000
         ALR   @07,BUFAD                                        02S0637 02006000
         LR    @04,@07                                          02S0637 02007000
         ALR   @04,XCNT                                         02S0637 02008000
         MVI   TEXTD-1(@04),X'FF'                               02S0637 02009000
*                  TEXTD(XCNT+ONE)     /* SET REPITITION FACTOR.     */ 02010000
*                   = CNT;             /*                            */ 02011000
         STC   CNT,TEXTD(XCNT,@07)                              02S0638 02012000
*                  XCNT = XCNT + TWO;  /* INCREMENT REC FIELD CTR.   */ 02013000
         AL    XCNT,@CF00057                                    02S0639 02014000
*                END;                  /*                            */ 02015000
*              ELSE                    /* ENTER HERE FOR 3 OR LESS.  */ 02016000
*                DO;                   /*                            */ 02017000
         B     @RC00635                                         02S0641 02018000
@RF00635 DS    0H                                               02S0642 02019000
*                  XCNT                /*                            */ 02020000
*                   = XCNT + CNT - ONE;/*                            */ 02021000
         LR    @07,XCNT                                         02S0642 02022000
         ALR   @07,CNT                                          02S0642 02023000
         BCTR  @07,0                                            02S0642 02024000
         LR    XCNT,@07                                         02S0642 02025000
*                  TEXTD(XCNT)         /* MOVE THE LAST CHARACTER OF */ 02026000
*                   = TEXTDATA(CNT);   /*  AN EQUAL CHAR STRING < 3. */ 02027000
         LR    @07,BUFAD                                        02S0643 02028000
         ALR   @07,XCNT                                         02S0643 02029000
         LR    @04,BUFFPTR                                      02S0643 02030000
         ALR   @04,CNT                                          02S0643 02031000
         BCTR  @04,0                                            02S0643 02032000
         MVC   TEXTD+795(1,@07),TEXTDATA(@04)                   02S0643 02033000
*                END;                  /*                            */ 02034000
*            BUFFPTR = BUFFPTR + CNT;  /* UPDATE TRACKING POINTER.   */ 02035000
@RC00635 ALR   BUFFPTR,CNT                                      02S0645 02036000
*            YCNT = YCNT + CNT;        /* UPDATE TOTAL FIELD COUNTER.*/ 02037000
         ALR   YCNT,CNT                                         02S0646 02038000
*          END;                        /*                            */ 02039000
         AH    XCNT,@CH00060                                    02S0647 02040000
@DE00631 SLR   @07,@07                                          02S0647 02041000
         IC    @07,TEXTN+796(,BUFAD)                            02S0647 02042000
         CR    XCNT,@07                                         02S0647 02043000
         BNH   @DL00631                                         02S0647 02044000
@DC00631 DS    0H                                               02S0648 02045000
*          TEXTN = XCNT - ONE;         /* SET UPDATE TEXT NUMBER.    */ 02046000
         LR    @07,XCNT                                         02S0648 02047000
         BCTR  @07,0                                            02S0648 02048000
         STC   @07,TEXTN+796(,BUFAD)                            02S0648 02049000
*          RESPECIFY (BUFFPTR) UNRESTRICTED;                    02S0649 02050000
*        END;                          /*                            */ 02051000
*/********************************************************************* 02052000
**                                                                    * 02053000
**  THIS SECTION WILL INSERT INTO THE COPY MODIFICATION MODULE, IN    * 02054000
**  THE PROPER SEQUENCE A COPY SEGMENT AS SPECIFIED BY THE COPY MOD   * 02055000
**  CONTROL STATMENT.                                                 * 02056000
**                                                                    * 02057000
**********************************************************************/ 02058000
*        IF CMODCNT < LENGTH(MODBOD)   /* CHECK IF MODULE ALREADY    */ 02059000
*          THEN                        /*  TO LARGE                  */ 02060000
         LH    @15,CMODCNT(,BUFAD)                              02S0651 02061000
         CH    @15,@CH00231                                     02S0651 02062000
         BNL   @RF00651                                         02S0651 02063000
*            DO;                       /* NOT THIS TIME              */ 02064000
*              RESPECIFY               /*                            */ 02065000
*               (BUFFPTR) RESTRICTED;  /*                            */ 02066000
*              BUFFPTR = ADDR(MODBOD); /* INITALIZE SEGMENT POINTER  */ 02067000
         LA    BUFFPTR,MODBOD(,BUFAD)                           02S0654 02068000
*              COPYSIZE = ZERO;        /*  AND SIZE SAVER.           */ 02069000
         SLR   COPYSIZE,COPYSIZE                                02S0655 02070000
*              DO                      /* START SEGMENT SEARCH       */ 02071000
*               WHILE CMODCNT > ZERO   /*  TO END OF MODULE          */ 02072000
*               & (COPY1 < ICOPY       /*  OR PLACE TO INSERT.       */ 02073000
*                  | (COPY1 = ICOPY & LINE1 < ILINE));          02S0656 02074000
         B     @DE00656                                         02S0656 02075000
@DL00656 DS    0H                                               02S0657 02076000
*                FWORK                 /* GET LENGTH OF SEGMENT.     */ 02077000
*                 = TEXTX + LENGTH(COPYHD);                     02S0657 02078000
         LA    @07,6                                            02S0657 02079000
         SLR   @02,@02                                          02S0657 02080000
         IC    @02,TEXTX(,BUFFPTR)                              02S0657 02081000
         ALR   @07,@02                                          02S0657 02082000
         ST    @07,FWORK(,BUFAD)                                02S0657 02083000
*                BUFFPTR               /* STEP TO NEXT SEGMENT.      */ 02084000
*                 = BUFFPTR + FWORK;   /*                            */ 02085000
         ALR   BUFFPTR,@07                                      02S0658 02086000
*                CMODCNT               /* REDUCE MODULE COUNT.       */ 02087000
*                 = CMODCNT - FWORK;   /*                            */ 02088000
         LH    @02,CMODCNT(,BUFAD)                              02S0659 02089000
         SLR   @02,@07                                          02S0659 02090000
         STH   @02,CMODCNT(,BUFAD)                              02S0659 02091000
*                COPYSIZE              /* UPDATE CURRENT SIZE.       */ 02092000
*                 = COPYSIZE + FWORK;  /*                            */ 02093000
         ALR   COPYSIZE,@07                                     02S0660 02094000
*              END;                    /* END OF SEARCH.             */ 02095000
@DE00656 ICM   @07,3,CMODCNT(BUFAD)                             02S0661 02096000
         BNP   @DC00656                                         02S0661 02097000
         LA    @07,796                                          02S0661 02098000
         ALR   @07,BUFAD                                        02S0661 02099000
         CLC   COPY1(1,BUFFPTR),ICOPY(@07)                      02S0661 02100000
         BL    @DL00656                                         02S0661 02101000
         CLC   COPY1(1,BUFFPTR),ICOPY(@07)                      02S0661 02102000
         BNE   @DC00656                                         02S0661 02103000
         CLC   LINE1(1,BUFFPTR),ILINE(@07)                      02S0661 02104000
         BL    @DL00656                                         02S0661 02105000
@DC00656 DS    0H                                               02S0662 02106000
*              FWORK = TEXTN + LENGTH(COPYLABL);                02S0662 02107000
         LA    @07,6                                            02S0662 02108000
         SLR   @02,@02                                          02S0662 02109000
         IC    @02,TEXTN+796(,BUFAD)                            02S0662 02110000
         ALR   @07,@02                                          02S0662 02111000
         ST    @07,FWORK(,BUFAD)                                02S0662 02112000
*              IF CMODCNT > ZERO       /* CHECK FOR NEED TO MAKE     */ 02113000
*                THEN                  /*  ROOM FOR LINE TO INSERT.  */ 02114000
         LH    @07,CMODCNT(,BUFAD)                              02S0663 02115000
         LTR   @07,@07                                          02S0663 02116000
         BNP   @RF00663                                         02S0663 02117000
*                  DO;                 /*                            */ 02118000
*                    RESPECIFY         /* REGS NEEDED FOR MOVE LONG. */ 02119000
*                     (RECAREA,RECSIZE,TRANSIZE) RESTRICTED;    02S0665 02120000
*                    DWORK2 = BUFFPTR; /* SAVE SEGMENT POINTER.      */ 02121000
         ST    BUFFPTR,DWORK2(,BUFAD)                           02S0666 02122000
*                    RECSIZE = CMODCNT;/* AMOUNT TO MOVE             */ 02123000
         LH    @02,CMODCNT(,BUFAD)                              02S0667 02124000
         LR    RECSIZE,@02                                      02S0667 02125000
*                    TRANSIZE = RECSIZE;/*    DITTO                  */ 02126000
         LR    TRANSIZE,RECSIZE                                 02S0668 02127000
*                    RECAREA = ADDR(MSGSAVE);/* MOVE TO TEMP AREA.   */ 02128000
         LR    RECAREA,BUFAD                                    02S0669 02129000
         AL    RECAREA,@CF01856                                 02S0669 02130000
*                    MVCL(RECAREA,BUFFPTR);/* SAVE BALANCE OF MODULE.*/ 02131000
         MVCL  RECAREA,BUFFPTR                                  02S0670 02132000
*                    RECAREA = DWORK2 + FWORK;/* RECEIVING AREA.     */ 02133000
         L     RECAREA,DWORK2(,BUFAD)                           02S0671 02134000
         AL    RECAREA,FWORK(,BUFAD)                            02S0671 02135000
*                    BUFFPTR = ADDR(MSGSAVE);/* MOVE FROM TEMP AREA. */ 02136000
         LR    BUFFPTR,BUFAD                                    02S0672 02137000
         AL    BUFFPTR,@CF01856                                 02S0672 02138000
*                    RECSIZE = CMODCNT;/* AMOUNT TO MOVE             */ 02139000
         LH    RECSIZE,CMODCNT(,BUFAD)                          02S0673 02140000
*                    TRANSIZE = RECSIZE;/*    DITTO                  */ 02141000
         LR    TRANSIZE,RECSIZE                                 02S0674 02142000
*                    MVCL(RECAREA,BUFFPTR);/* MAKE SOME ROOM.        */ 02143000
         MVCL  RECAREA,BUFFPTR                                  02S0675 02144000
*                    BUFFPTR = DWORK2; /* RESTORE SEGMENT POINTER.   */ 02145000
         L     BUFFPTR,DWORK2(,BUFAD)                           02S0676 02146000
*                    RESPECIFY         /*                            */ 02147000
*                     (RECAREA,RECSIZE,TRANSIZE) UNRESTRICTED;  02S0677 02148000
*                  END;                /*                            */ 02149000
*                ELSE;                 /*                            */ 02150000
@RF00663 DS    0H                                               02S0680 02151000
*              COPYSEG(ONE:FWORK)      /* INSERT GENERATE COPY       */ 02152000
*               = COPYLINE(ONE:FWORK); /*  SEGMENT.                  */ 02153000
         L     @07,FWORK(,BUFAD)                                02S0680 02154000
         LR    @02,@07                                          02S0680 02155000
         BCTR  @02,0                                            02S0680 02156000
         EX    @02,@SM01888                                     02S0680 02157000
*              CMODCNT                 /* UPDATE MODULE SIZE.        */ 02158000
*               = CMODCNT + COPYSIZE + FWORK;                   02S0681 02159000
         LR    @02,COPYSIZE                                     02S0681 02160000
         AH    @02,CMODCNT(,BUFAD)                              02S0681 02161000
         ALR   @02,@07                                          02S0681 02162000
         STH   @02,CMODCNT(,BUFAD)                              02S0681 02163000
*              RESPECIFY (BUFFPTR) UNRESTRICTED;                02S0682 02164000
*            END;                      /* END OF UPDATE.             */ 02165000
*          ELSE;                       /*                            */ 02166000
@RF00651 DS    0H                                               02S0685 02167000
*        IF CMODCNT > LENGTH(MODBOD)   /* CHECK AGAIN FOR BIG MODULE.*/ 02168000
*          THEN                        /*                            */ 02169000
         LH    @15,CMODCNT(,BUFAD)                              02S0685 02170000
         CH    @15,@CH00231                                     02S0685 02171000
         BNH   @RF00685                                         02S0685 02172000
*            DO;                       /*                            */ 02173000
*              MSGN = IEBA07I;         /* MODULE TO LARGE.           */ 02174000
         MVI   MSGN(BUFAD),X'07'                                02S0687 02175000
*              CALL IEBIMSGS;          /* PRINT IT.                  */ 02176000
         L     @15,@CV00037                                     02S0688 02177000
         BALR  @14,@15                                          02S0688 02178000
*              INHIBITW = ON;          /* PROHIBIT LIBRARY UPDATE.   */ 02179000
         OI    INHIBITW(BUFAD),B'01000000'                      02S0689 02180000
*            END;                      /*                            */ 02181000
*          ELSE;                       /* NO ERROR, CONTINUE         */ 02182000
@RF00685 DS    0H                                               02S0692 02183000
*                  END;                /*                            */ 02184000
*                ELSE                  /* KEYWORD MISSING.           */ 02185000
*                  DO;                 /*                            */ 02186000
         B     @RC00625                                         01S0693 02187000
@RF00625 DS    0H                                               01S0694 02188000
*                    MSGN = IEBA25I;   /* INSUFFICIENT KEYWORDS.     */ 02189000
         MVI   MSGN(BUFAD),X'19'                                01S0694 02190000
*                    CALL IEBIMSGS;    /* PRINT IT.                  */ 02191000
         L     @15,@CV00037                                     01S0695 02192000
         BALR  @14,@15                                          01S0695 02193000
*                    INHIBITW = ON;    /* PROHIBIT LIBRARY UPDATE.   */ 02194000
         OI    INHIBITW(BUFAD),B'01000000'                      01S0696 02195000
*                  END;                /*                            */ 02196000
*            END;                      /* END BUILD.                 */ 02197000
@RC00625 DS    0H                                               01S0699 02198000
*        IF NOKEY = ON                 /* CHECK FOR READ ONLY REQ.   */ 02199000
*          THEN                        /*                            */ 02200000
@RF00619 TM    NOKEY(BUFAD),B'01000000'                         01S0699 02201000
         BNO   @RF00699                                         01S0699 02202000
*            READMOD = ON;             /* SET FOR READ ONLY.         */ 02203000
         OI    READMOD(BUFAD),B'00000001'                       01S0700 02204000
*          ELSE;                       /*                            */ 02205000
@RF00699 DS    0H                                               01S0702 02206000
*        IF INHIBITW = ON              /* CHECK FOR ANY ERROR.       */ 02207000
*          THEN                        /* RETURN CODE = 8 THIS OP.   */ 02208000
         TM    INHIBITW(BUFAD),B'01000000'                      01S0702 02209000
         BNO   @RF00702                                         01S0702 02210000
*            RETSAVE = MAX(RETSAVE,RC8);                        01S0703 02211000
         SLR   @15,@15                                          01S0703 02212000
         IC    @15,RETSAVE(,BUFAD)                              01S0703 02213000
         LA    @14,8                                            01S0703 02214000
         CR    @15,@14                                          01S0703 02215000
         BNL   *+6                                                      02216000
         LR    @15,@14                                          01S0703 02217000
         STC   @15,RETSAVE(,BUFAD)                              01S0703 02218000
*          ELSE;                       /*                            */ 02219000
@RF00702 DS    0H                                               01S0705 02220000
*        GEN REFS(SAVE1)               /* RESTORE BACKWARD POINTER.  */ 02221000
*         (L  @13,SAVE1+BACK(,BUFAD)); /*                            */ 02222000
         L  @13,SAVE1+BACK(,BUFAD)                                      02223000
*END COPYMOD;                                                   01S0706 02224000
@EL00006 DS    0H                                               01S0706 02225000
@EF00006 DS    0H                                               01S0706 02226000
@ER00006 LM    @14,@12,12(@13)                                  01S0706 02227000
         BR    @14                                              01S0706 02228000
         EJECT                                                          02229000
*/********************************************************************* 02230000
**                                                                    * 02231000
**  THIS ROUTINE WILL MODIFY OR CREATE GRAPHIC CHARACTER MODIFICATION * 02232000
**  MODULES. THE MODULES MAY BE CONSTRUCTED BY INCLUDING ANY PORTION  * 02233000
**  OR ALL OF AN EXISTING GCM, OR REFERENCING AN EXISTING GCM OR THE  * 02234000
**  SPECIAL GRAPHIC CHARACTER RECORD, OR BY BUILDING SEGMENTS FROM    * 02235000
**  DATA CARDS.                                                       * 02236000
**                                                                    * 02237000
**********************************************************************/ 02238000
*GRAPHIC:                                                       01S0707 02239000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0707 02240000
GRAPHIC  STM   @14,@12,12(@13)                                  01S0707 02241000
*        GEN REFS(SAVE1);              /* USE CONVENTIONAL SAVE.     */ 02242000
         ST  @13,SAVE1+BACK(,BUFAD)    BACKWARD POINTER.                02243000
         LA  @14,SAVE1(,BUFAD)         THIS ROUTINE SAVE AREA.          02244000
         ST  @14,FORE(,@13)            FORWARD POINTER.                 02245000
         LR  @13,@14                   LINKAGE COMPLETE.                02246000
*        BNAME = GRAF;                 /* SET GCM NAME PREFIX.       */ 02247000
         MVI   BNAME+4(BUFAD),C' '                              01S0709 02248000
         MVC   BNAME+5(3,BUFAD),BNAME+4(BUFAD)                  01S0709 02249000
         MVC   BNAME(4,BUFAD),@CC00811                          01S0709 02250000
*        IF OPINPRG = OFF              /* CHECK HAVING BEEN HERE     */ 02251000
*          THEN                        /*  BEFORE.                   */ 02252000
         TM    OPINPRG(BUFAD),B'00000010'                       01S0710 02253000
         BNZ   @RF00710                                         01S0710 02254000
*            DO;                       /* CLEAR MODULE HEADER.       */ 02255000
*              MODHEAD = MODHEAD && MODHEAD;                    01S0712 02256000
         XC    MODHEAD(8,BUFAD),MODHEAD(BUFAD)                  01S0712 02257000
*              OPINPRG = ON;           /* REMEMBER BEING HERE.       */ 02258000
         OI    OPINPRG(BUFAD),B'00000010'                       01S0713 02259000
*              SEGCNT = ZERO;          /* RESET SEGMENT COUNTER.     */ 02260000
         SLR   @15,@15                                          01S0714 02261000
         STH   @15,SEGCNT(,BUFAD)                               01S0714 02262000
*              IF INCLSW = ON          /* CHECK FOR INCLUDE OPTION.  */ 02263000
*                THEN                  /* LOAD INCLUDE MODULE        */ 02264000
         TM    INCLSW(BUFAD),B'00100000'                        01S0715 02265000
         BNO   @RF00715                                         01S0715 02266000
*                  DO;                 /*  AND COPY INTO BUFFER.     */ 02267000
*/********************************************************************* 02268000
**                                                                    * 02269000
**  THIS SEGMENT WILL LOAD THE INCLUDED GRAPHIC CHARACTER MODULE      * 02270000
**  AND COPY IT INTO THE BUFFER MINUS THE DELETED SEGMENTS.           * 02271000
**                                                                    * 02272000
**********************************************************************/ 02273000
*        INCLSW = OFF;                 /* RESET INCLUDE INDICATION.  */ 02274000
         NI    INCLSW(BUFAD),B'11011111'                        02S0717 02275000
*        NOKEY = OFF;                  /* RESET PRINT ONLY REQUEST   */ 02276000
         NI    NOKEY(BUFAD),B'10111111'                         02S0718 02277000
*        BSUFIX = INCLNAME;            /* SET NAME IN BLDL ENTRY.    */ 02278000
         MVC   BSUFIX(4,BUFAD),INCLNAME(BUFAD)                  02S0719 02279000
*        IF DELSET = ON                /* CHECK FOR DELSEG KEYWORD.  */ 02280000
*          THEN                        /* NEED TO LOAD MODULE.       */ 02281000
         TM    DELSET(BUFAD),B'00100000'                        02S0720 02282000
         BNO   @RF00720                                         02S0720 02283000
*            DO;                       /*                            */ 02284000
*              CALL LOADLIB;           /* LOAD A MODULE.             */ 02285000
         BAL   @14,LOADLIB                                      02S0722 02286000
*              IF LOADFLAG = ALBIT     /* CHECK FOR MODULE LOADED.   */ 02287000
*                THEN                  /*                            */ 02288000
         CLI   LOADFLAG(BUFAD),X'FF'                            02S0723 02289000
         BNE   @RF00723                                         02S0723 02290000
*                  DO;                 /*                            */ 02291000
*                    DO                /* START COPY OF INCLUDED     */ 02292000
*                     CNT = ONE        /*  MODULE.                   */ 02293000
*                     TO MAXSEG        /* COPY TO END OF MODULE      */ 02294000
*                     WHILE LMODCNT/LENGTH(GRAFSEG) => CNT;     02S0725 02295000
         LA    CNT,1                                            02S0725 02296000
@DL00725 LA    @03,73                                           02S0725 02297000
         SLR   @15,@15                                          02S0725 02298000
         ICM   @15,7,LOADMOD(BUFAD)                             02S0725 02299000
         SLR   @01,@01                                          02S0725 02300000
         ICM   @01,3,LMODCNT(@15)                               02S0725 02301000
         SLR   @00,@00                                          02S0725 02302000
         DR    @00,@03                                          02S0725 02303000
         CR    @01,CNT                                          02S0725 02304000
         BL    @DC00725                                         02S0725 02305000
*                      IF DEL(CNT) = ZERO                       02S0726 02306000
*                        THEN          /* DO NOT DELETE THIS SEGMENT.*/ 02307000
         SLR   @14,@14                                          02S0726 02308000
         IC    @14,DEL+795(CNT,BUFAD)                           02S0726 02309000
         CH    @14,@CH00462                                     02S0726 02310000
         BNE   @RF00726                                         02S0726 02311000
*                          DO;         /*                            */ 02312000
*                            SEGCNT =  /* INCREMENT SEGMENT COUNT.   */ 02313000
*                             SEGCNT + ONE; /*                       */ 02314000
         LA    @14,1                                            02S0728 02315000
         AH    @14,SEGCNT(,BUFAD)                               02S0728 02316000
         STH   @14,SEGCNT(,BUFAD)                               02S0728 02317000
*                            GSEG(SEGCNT) = /* COPY ONE SEGMENT.     */ 02318000
*                             LOADSEG(CNT); /*                       */ 02319000
         LR    @01,@14                                          02S0729 02320000
         MR    @00,@03                                          02S0729 02321000
         ALR   @01,BUFAD                                        02S0729 02322000
         LR    @05,@03                                          02S0729 02323000
         MR    @04,CNT                                          02S0729 02324000
         ALR   @15,@05                                          02S0729 02325000
         AL    @15,@CF01890                                     02S0729 02326000
         MVC   GSEG+2171(73,@01),LOADSEG-8(@15)                 02S0729 02327000
*                          END;        /*                            */ 02328000
*                        ELSE          /* NO SEGMENT COPIED.         */ 02329000
*                          DO;         /* INDICATE SEGMENT DELETED.  */ 02330000
         B     @RC00726                                         02S0731 02331000
@RF00726 DS    0H                                               02S0732 02332000
*                            SCNT = SCNT-ONE;/* REDUCE DELSEG CNT.   */ 02333000
         SLR   @03,@03                                          02S0732 02334000
         ICM   @03,3,SCNT(BUFAD)                                02S0732 02335000
         BCTR  @03,0                                            02S0732 02336000
         STH   @03,SCNT(,BUFAD)                                 02S0732 02337000
*                            DEL(CNT) = ZERO;/* DELETE DELETE IND.   */ 02338000
         SLR   @03,@03                                          02S0733 02339000
         STC   @03,DEL+795(CNT,BUFAD)                           02S0733 02340000
*                          END;        /*                            */ 02341000
*                    END;              /* END COPY.                  */ 02342000
@RC00726 AH    CNT,@CH00060                                     02S0735 02343000
         CH    CNT,@CH00245                                     02S0735 02344000
         BNH   @DL00725                                         02S0735 02345000
@DC00725 DS    0H                                               02S0736 02346000
*                    IF CNT < LMODCNT/LENGTH(GRAFSEG)/* COPY TO END  */ 02347000
*                      THEN            /*  OF MODULE.                */ 02348000
         ICM   @03,7,LOADMOD(BUFAD)                             02S0736 02349000
         SLR   @01,@01                                          02S0736 02350000
         ICM   @01,3,LMODCNT(@03)                               02S0736 02351000
         SLR   @00,@00                                          02S0736 02352000
         D     @00,@CF00610                                     02S0736 02353000
         CR    CNT,@01                                          02S0736 02354000
         BNL   @RF00736                                         02S0736 02355000
*                        DO;           /*                            */ 02356000
*                          MSGN = IEBA07I;/* MODULE TOO LARGE.       */ 02357000
         MVI   MSGN(BUFAD),X'07'                                02S0738 02358000
*                          CALL IEBIMSGS; /* PRINT MESSAGE.          */ 02359000
         L     @15,@CV00037                                     02S0739 02360000
         BALR  @14,@15                                          02S0739 02361000
*                          INHIBITW = ON; /* INHIB LIB UPDATE.       */ 02362000
         OI    INHIBITW(BUFAD),B'01000000'                      02S0740 02363000
*                        END;          /*                            */ 02364000
*                      ELSE;           /* GOOD COPY.                 */ 02365000
@RF00736 DS    0H                                               02S0743 02366000
*                  CALL DELCHK;        /* INSURE PROPER DELETE.      */ 02367000
         BAL   @14,DELCHK                                       02S0743 02368000
*                  END;                /*                            */ 02369000
*                ELSE                  /* ERROR IN BLDL.             */ 02370000
*            INHIBITW = ON;            /* INHIBIT LIBRARY UPDATE.    */ 02371000
         B     @RC00723                                         02S0745 02372000
@RF00723 OI    INHIBITW(BUFAD),B'01000000'                      02S0745 02373000
*            END;                      /* END LOAD CODE.             */ 02374000
*          ELSE                        /* CAN READ THIS ONE.         */ 02375000
*            IF INHIBITR = OFF         /* COULD BE NAME ERROR.       */ 02376000
*              THEN                    /*                            */ 02377000
         B     @RC00720                                         02S0747 02378000
@RF00720 TM    INHIBITR(BUFAD),B'00100000'                      02S0747 02379000
         BNZ   @RF00747                                         02S0747 02380000
*            DO;                       /*                            */ 02381000
*              CALL BLDL;              /* FIND THE MODULE.           */ 02382000
         BAL   @14,BLDL                                         02S0749 02383000
*              IF INHIBITR = OFF       /* CHECK FOR BLDL ERROR.      */ 02384000
*                THEN                  /*                            */ 02385000
         TM    INHIBITR(BUFAD),B'00100000'                      02S0750 02386000
         BNZ   @RF00750                                         02S0750 02387000
*                  IF BSTOR/LENGTH(GSEG) < MAXSEG + ONE         02S0751 02388000
*                    THEN              /* CHECK FOR MODULE SIZE.     */ 02389000
         SLR   @01,@01                                          02S0751 02390000
         ICM   @01,7,BSTOR(BUFAD)                               02S0751 02391000
         SLR   @00,@00                                          02S0751 02392000
         D     @00,@CF00610                                     02S0751 02393000
         CH    @01,@CH01851                                     02S0751 02394000
         BNL   @RF00751                                         02S0751 02395000
*                      DO;             /*                            */ 02396000
*                        CALL READLIB; /* READ MODULE INTO BUFFER.   */ 02397000
         BAL   @14,READLIB                                      02S0753 02398000
*                        IF INHIBITR = OFF                      02S0754 02399000
*                          THEN        /* CHECK FOR ERROR FROM READ. */ 02400000
         TM    INHIBITR(BUFAD),B'00100000'                      02S0754 02401000
         BNZ   @RF00754                                         02S0754 02402000
*                            SEGCNT    /* SET SEGMENT COUNT.         */ 02403000
*                             = MODCNT/LENGTH(GRAFSEG);         02S0755 02404000
         SLR   @01,@01                                          02S0755 02405000
         ICM   @01,3,MODCNT(BUFAD)                              02S0755 02406000
         SLR   @00,@00                                          02S0755 02407000
         D     @00,@CF00610                                     02S0755 02408000
         STH   @01,SEGCNT(,BUFAD)                               02S0755 02409000
*                          ELSE        /* ERROR FROM READ.           */ 02410000
*                            INHIBITW = ON;                     02S0756 02411000
         B     @RC00754                                         02S0756 02412000
@RF00754 OI    INHIBITW(BUFAD),B'01000000'                      02S0756 02413000
*                      END;            /*                            */ 02414000
*                    ELSE              /* MODULE TOO BIG.            */ 02415000
*                      DO;             /*                            */ 02416000
         B     @RC00751                                         02S0758 02417000
@RF00751 DS    0H                                               02S0759 02418000
*                        MSGN = IEBA07I;                        02S0759 02419000
         MVI   MSGN(BUFAD),X'07'                                02S0759 02420000
*                        CALL IEBIMSGS;/* PRINT MODULE TOO BIG.      */ 02421000
         L     @15,@CV00037                                     02S0760 02422000
         BALR  @14,@15                                          02S0760 02423000
*                        INHIBITW = ON;                         02S0761 02424000
         OI    INHIBITW(BUFAD),B'01000000'                      02S0761 02425000
*                      END;            /*                            */ 02426000
*                ELSE;                 /* BLDL ERROR.                */ 02427000
@RF00750 DS    0H                                               02S0764 02428000
*            END;                      /*                            */ 02429000
*              ELSE                    /*                            */ 02430000
*                INHIBITW = ON;        /* PREVENT LIBRARY UPDATE     */ 02431000
         B     @RC00747                                         02S0765 02432000
@RF00747 OI    INHIBITW(BUFAD),B'01000000'                      02S0765 02433000
*        BSUFIX = BLANK;               /* CLEAR MODULE NAME, BLDL.   */ 02434000
@RC00747 DS    0H                                               02S0766 02435000
@RC00720 MVI   BSUFIX+1(BUFAD),C' '                             02S0766 02436000
         MVC   BSUFIX+2(2,BUFAD),BSUFIX+1(BUFAD)                02S0766 02437000
         MVI   BSUFIX(BUFAD),C' '                               02S0766 02438000
*        INHIBITR = OFF;               /* RESET READ INHIBIT.        */ 02439000
         NI    INHIBITR(BUFAD),B'11011111'                      02S0767 02440000
*                  END;                /*                            */ 02441000
*                ELSE;                 /* NO INCLUDE.                */ 02442000
@RF00715 DS    0H                                               01S0770 02443000
*            END;                      /*                            */ 02444000
*          ELSE                        /* OPERATION IN PROGRESS.     */ 02445000
*            KWDUSED = ZERO;           /*                            */ 02446000
         B     @RC00710                                         01S0771 02447000
@RF00710 MVI   KWDUSED(BUFAD),X'00'                             01S0771 02448000
*        IF SCANINP = ON               /* CHECK FOR MORE SCANNING    */ 02449000
*          THEN                        /*  TO DO.                    */ 02450000
@RC00710 TM    SCANINP(BUFAD),B'01000000'                       01S0772 02451000
         BNO   @RF00772                                         01S0772 02452000
*            DO;                       /*                            */ 02453000
*              PITCH = TEN;            /* INIT PITCH FOR ASSIGN.     */ 02454000
         MVI   PITCH(BUFAD),X'0A'                               01S0774 02455000
*              READMOD = OFF;          /* IGNORE READ ONLY           */ 02456000
         NI    READMOD(BUFAD),B'11111110'                       01S0775 02457000
*              CALL IEBISCAN;          /* SCAN FOR KEYWORDS          */ 02458000
         L     @15,@CV00036                                     01S0776 02459000
         BALR  @14,@15                                          01S0776 02460000
*              IF REFSET = ON          /* GCM REFERENCE REQUESTED.   */ 02461000
*                THEN                  /* LOAD GCM AND COPY SEGMENTS.*/ 02462000
         TM    REFSET(BUFAD),B'00010000'                        01S0777 02463000
         BNO   @RF00777                                         01S0777 02464000
*/********************************************************************* 02465000
**                                                                    * 02466000
**  THIS SEGMENT WILL LOAD THE REFERENCED GRAPHIC CHARACTER MODULE    * 02467000
**  AND COPY THE SEGMENTS INDICATED IN THE REF KEYWORD.               * 02468000
**                                                                    * 02469000
**********************************************************************/ 02470000
*        IF BPREFX = GRAF              /* CHECK FOR VALID NAME.      */ 02471000
*          THEN                        /*                            */ 02472000
         CLC   BPREFX(4,BUFAD),@CC00811                         02S0778 02473000
         BNE   @RF00778                                         02S0778 02474000
*            DO;                       /*                            */ 02475000
*              CALL LOADLIB;           /* LOAD REQUESTED MODULE.     */ 02476000
         BAL   @14,LOADLIB                                      02S0780 02477000
*              DO                      /* START SEGMENT SELECT.      */ 02478000
*               CNT = ONE              /*                            */ 02479000
*               TO SCNT - ONE          /*                            */ 02480000
*               WHILE LOADFLAG = ALBIT /*                            */ 02481000
*                      & SEGCNT =< MAXSEG;                      02S0781 02482000
         LA    CNT,1                                            02S0781 02483000
         B     @DE00781                                         02S0781 02484000
@DL00781 CLI   LOADFLAG(BUFAD),X'FF'                            02S0781 02485000
         BNE   @DC00781                                         02S0781 02486000
         LH    @03,SEGCNT(,BUFAD)                               02S0781 02487000
         CH    @03,@CH00245                                     02S0781 02488000
         BH    @DC00781                                         02S0781 02489000
*                IF REFARRAY(CNT) =< LMODCNT/LENGTH(GRAFSEG)    02S0782 02490000
*                  THEN                /* CHECK FOR VALID SEGMENT.   */ 02491000
         LR    @15,CNT                                          02S0782 02492000
         SLA   @15,2                                            02S0782 02493000
         LA    @14,796                                          02S0782 02494000
         ALR   @14,BUFAD                                        02S0782 02495000
         ST    @15,@TF00001                                     02S0782 02496000
         ALR   @15,@14                                          02S0782 02497000
         BCTR  @15,0                                            02S0782 02498000
         BCTR  @15,0                                            02S0782 02499000
         SLR   @07,@07                                          02S0782 02500000
         ICM   @07,3,REFARRAY-2(@15)                            02S0782 02501000
         LA    @06,73                                           02S0782 02502000
         SLR   @15,@15                                          02S0782 02503000
         ICM   @15,7,LOADMOD(BUFAD)                             02S0782 02504000
         SLR   @01,@01                                          02S0782 02505000
         ICM   @01,3,LMODCNT(@15)                               02S0782 02506000
         SLR   @00,@00                                          02S0782 02507000
         DR    @00,@06                                          02S0782 02508000
         CR    @07,@01                                          02S0782 02509000
         BH    @RF00782                                         02S0782 02510000
*                    DO;               /* INCREMENT SEGMENT COUNT.   */ 02511000
*                      SEGCNT = SEGCNT + ONE;                   02S0784 02512000
         AH    @03,@CH00060                                     02S0784 02513000
         STH   @03,SEGCNT(,BUFAD)                               02S0784 02514000
*                      GSEG(SEGCNT) =  /* COPY SEGMENT TO BUFFER.    */ 02515000
*                       LOADSEG(REFARRAY(CNT));                 02S0785 02516000
         LR    @01,@03                                          02S0785 02517000
         MR    @00,@06                                          02S0785 02518000
         LA    @03,2244                                         02S0785 02519000
         ALR   @03,BUFAD                                        02S0785 02520000
         ST    @01,@TF00002                                     02S0785 02521000
         ALR   @01,@03                                          02S0785 02522000
         AL    @01,@CF01891                                     02S0785 02523000
         MR    @06,@06                                          02S0785 02524000
         ALR   @15,@07                                          02S0785 02525000
         AL    @15,@CF01890                                     02S0785 02526000
         MVC   GSEG(73,@01),LOADSEG-8(@15)                      02S0785 02527000
*                      IF ASNENTRY(CNT) = ALBIT                 02S0786 02528000
*                        THEN          /* CHANGE ASSIGNMENT BYTE.    */ 02529000
         LR    @15,@14                                          02S0786 02530000
         AL    @15,@TF00001                                     02S0786 02531000
         AL    @15,@CF01892                                     02S0786 02532000
         CLI   ASNENTRY-1(@15),X'FF'                            02S0786 02533000
         BNE   @RF00786                                         02S0786 02534000
*                          GSEGASGN(SEGCNT)                     02S0787 02535000
*                           = ASNARRAY(CNT);                    02S0787 02536000
         AL    @03,@TF00002                                     02S0787 02537000
         AL    @03,@CF01891                                     02S0787 02538000
         AL    @14,@TF00001                                     02S0787 02539000
         AL    @14,@CF01893                                     02S0787 02540000
         MVC   GSEGASGN(1,@03),ASNARRAY(@14)                    02S0787 02541000
*                        ELSE;         /* NO CHANGE REQUESTED        */ 02542000
@RF00786 DS    0H                                               02S0789 02543000
*                    END;              /*                            */ 02544000
*                  ELSE                /* SEGMENT NUMBER NOT FOUND.  */ 02545000
*                    DO;               /* GENERATE MESSAGE.          */ 02546000
         B     @RC00782                                         02S0790 02547000
@RF00782 DS    0H                                               02S0791 02548000
*                      FWORK = REFARRAY(CNT);                   02S0791 02549000
         LR    @03,CNT                                          02S0791 02550000
         SLA   @03,2                                            02S0791 02551000
         ALR   @03,BUFAD                                        02S0791 02552000
         SLR   @15,@15                                          02S0791 02553000
         ICM   @15,3,REFARRAY+792(@03)                          02S0791 02554000
         ST    @15,FWORK(,BUFAD)                                02S0791 02555000
*                      CVD(FWORK,DWORK);/* MAKE SEG NO. PRINTABLE.   */ 02556000
         CVD   @15,DWORK(,BUFAD)                                02S0792 02557000
*                      UNPK(CWORK,PWORK);                       02S0793 02558000
         UNPK  CWORK(4,BUFAD),PWORK(2,BUFAD)                    02S0793 02559000
*                      CWORK(LENGTH(CWORK)) =                   02S0794 02560000
*                        CWORK(LENGTH(CWORK)) | MASK;           02S0794 02561000
         OI    CWORK+3(BUFAD),C'0'                              02S0794 02562000
*                      EDITDATA(ONE)   /*                            */ 02563000
*                       = ADDR(CWORK); /*                            */ 02564000
         LA    @03,CWORK(,BUFAD)                                02S0795 02565000
         STCM  @03,7,EDITDATA(BUFAD)                            02S0795 02566000
*                      EDITLEN(ONE)    /*                            */ 02567000
*                       = LENGTH(CWORK);                        02S0796 02568000
         MVI   EDITLEN(BUFAD),X'04'                             02S0796 02569000
*                      MSGN = IEBA24I; /*                            */ 02570000
         MVI   MSGN(BUFAD),X'18'                                02S0797 02571000
*                      CALL IEBIMSGS;  /*                            */ 02572000
         L     @15,@CV00037                                     02S0798 02573000
         BALR  @14,@15                                          02S0798 02574000
*                      INHIBITW = ON;  /*                            */ 02575000
         OI    INHIBITW(BUFAD),B'01000000'                      02S0799 02576000
*                    END;              /* END MESSAGE GENERATION.    */ 02577000
*              END;                    /* END SEGMENT SELECT         */ 02578000
@RC00782 AH    CNT,@CH00060                                     02S0801 02579000
@DE00781 SLR   @03,@03                                          02S0801 02580000
         ICM   @03,3,SCNT(BUFAD)                                02S0801 02581000
         BCTR  @03,0                                            02S0801 02582000
         CR    CNT,@03                                          02S0801 02583000
         BNH   @DL00781                                         02S0801 02584000
@DC00781 DS    0H                                               02S0802 02585000
*            END;                      /* END VALID REF SECTION.     */ 02586000
*          ELSE;                       /* NAME INVALID.              */ 02587000
@RF00778 DS    0H                                               02S0804 02588000
*                ELSE                  /* NO REF SPECIFIED.          */ 02589000
*                  IF GCMSET = ON | KWDUSED = ZERO              01S0804 02590000
*                    THEN              /* INSUFFICIENT KEYWORDS.     */ 02591000
         B     @RC00777                                         01S0804 02592000
@RF00777 TM    GCMSET(BUFAD),B'00001000'                        01S0804 02593000
         BO    @RT00804                                         01S0804 02594000
         CLI   KWDUSED(BUFAD),0                                 01S0804 02595000
         BNE   @RF00804                                         01S0804 02596000
@RT00804 DS    0H                                               01S0805 02597000
*                      DO;             /*                            */ 02598000
*                        MSGN = IEBA25I;/* SET ERROR MESSAGE.        */ 02599000
         MVI   MSGN(BUFAD),X'19'                                01S0806 02600000
*                        CALL IEBIMSGS;/* PRINT IT.                  */ 02601000
         L     @15,@CV00037                                     01S0807 02602000
         BALR  @14,@15                                          01S0807 02603000
*                        INHIBITW = ON;/* INHIBIT LIBRARY UPDATE     */ 02604000
         OI    INHIBITW(BUFAD),B'01000000'                      01S0808 02605000
*                      END;            /*                            */ 02606000
*                    ELSE;             /*                            */ 02607000
@RF00804 DS    0H                                               01S0811 02608000
*              IF ASGNSET = ON         /* CHECK FOR ASSIGN KEYWORD.  */ 02609000
*                THEN                  /*                            */ 02610000
@RC00777 TM    ASGNSET(BUFAD),B'00000100'                       01S0811 02611000
         BNO   @RF00811                                         01S0811 02612000
*                  DO;                 /* BUILD A CHARACTER.         */ 02613000
*/********************************************************************* 02614000
**                                                                    * 02615000
**  THIS SEGMENT WILL INTERROGATE DATA CARDS AND BUILD A GRAPHIC      * 02616000
**  CHARACTER THEREFROM.                                              * 02617000
**                                                                    * 02618000
**********************************************************************/ 02619000
*        RESPECIFY (BUFFPTR,SHIFT,SHIFT2) RESTRICTED;           02S0813 02620000
*        BUFFPTR = ADDR(MODBOD);       /* GET MODULE ADDRESS.        */ 02621000
         LA    BUFFPTR,MODBOD(,BUFAD)                           02S0814 02622000
*        CNT = SEGCNT + ONE;           /* GET NUMBER FOR THIS SEG.   */ 02623000
         LA    CNT,1                                            02S0815 02624000
         AH    CNT,SEGCNT(,BUFAD)                               02S0815 02625000
*        ASGNSAVE = ASGNSAVE && ASGNSAVE;/* CLEAR LINE USED IND AREA.*/ 02626000
         XC    ASGNSAVE+796(256,BUFAD),ASGNSAVE+796(BUFAD)      02S0816 02627000
*        GASNMT = ASGNMENT;            /* SET ASSIGNMENT BYTE.       */ 02628000
         LR    @07,CNT                                          02S0817 02629000
         MH    @07,@CH00610                                     02S0817 02630000
         AL    @07,@CF01891                                     02S0817 02631000
         LA    @07,GRAFBOD(@07,BUFFPTR)                         02S0817 02632000
         MVC   GASNMT(1,@07),ASGNMENT(BUFAD)                    02S0817 02633000
*        IF PITCH = FIFTN              /* CHECK FOR 15 PITCH         */ 02634000
*          THEN                        /*                            */ 02635000
         CLI   PITCH(BUFAD),15                                  02S0818 02636000
         BNE   @RF00818                                         02S0818 02637000
*            RASTER(ONE) = FFTNP;      /* SET PITCH AND PARITY 15.   */ 02638000
         MVC   RASTER(3,@07),@CB00801                           02S0819 02639000
*          ELSE                        /*                            */ 02640000
*            IF PITCH = TWELV          /* CHECK FOR TWELVE PITCH.    */ 02641000
*              THEN                    /*                            */ 02642000
         B     @RC00818                                         02S0820 02643000
@RF00818 CLI   PITCH(BUFAD),12                                  02S0820 02644000
         BNE   @RF00820                                         02S0820 02645000
*                RASTER(ONE) = TWLVP;  /* SET PITCH AND PARITY 12.   */ 02646000
         LR    @07,CNT                                          02S0821 02647000
         MH    @07,@CH00610                                     02S0821 02648000
         AL    @07,@CF01891                                     02S0821 02649000
         LA    @07,GRAFBOD(@07,BUFFPTR)                         02S0821 02650000
         MVC   RASTER(3,@07),@CB00803                           02S0821 02651000
*              ELSE                    /* MUST BE 10 PITCH           */ 02652000
*                RASTER(ONE) = TENP;   /* SET PITCH AND PARITY 10.   */ 02653000
         B     @RC00820                                         02S0822 02654000
@RF00820 LR    @07,CNT                                          02S0822 02655000
         MH    @07,@CH00610                                     02S0822 02656000
         AL    @07,@CF01891                                     02S0822 02657000
         LA    @07,GRAFBOD(@07,BUFFPTR)                         02S0822 02658000
         MVC   RASTER(3,@07),@CB00805                           02S0822 02659000
*        MVC(GRSPAT(FOUR:LENGTH(GRSPAT)),     /*                     */ 02660000
*            GRSPAT(ONE:LENGTH(GRSPAT)-THREE));/*                    */ 02661000
@RC00820 DS    0H                                               02S0823 02662000
@RC00818 LR    @07,CNT                                          02S0823 02663000
         MH    @07,@CH00610                                     02S0823 02664000
         AL    @07,@CF01891                                     02S0823 02665000
         LA    @07,GRAFBOD(@07,BUFFPTR)                         02S0823 02666000
         MVC   GRSPAT+3(69,@07),GRSPAT(@07)                     02S0823 02667000
*        LASTQ = OFF;                  /* RESET GET OUT SWITCH.      */ 02668000
         NI    LASTQ(BUFAD),B'11111110'                         02S0824 02669000
*        DO                            /* START BUILDING CHARACTER.  */ 02670000
*         WHILE EOFFLG = OFF           /* STOP ON LAST DATA CARD.    */ 02671000
*             & LASTQ = OFF;           /*                            */ 02672000
         B     @DE00825                                         02S0825 02673000
@DL00825 DS    0H                                               02S0826 02674000
*          IF CARDIN = ON              /* CHECK FOR CARD ALREADY     */ 02675000
*            THEN                      /*  IN BUFFER.                */ 02676000
         TM    CARDIN(BUFAD),B'00100000'                        02S0826 02677000
         BNO   @RF00826                                         02S0826 02678000
*              CARDIN = OFF;           /* USE CARD IN BUFFER.        */ 02679000
         NI    CARDIN(BUFAD),B'11011111'                        02S0827 02680000
*            ELSE                      /*                            */ 02681000
*              GEN REFS(SYSIN)         /* GET A NEW CARD.            */ 02682000
*                  SETS(SDRYCARD) FLOWS(EODAD)                  02S0828 02683000
*               (GET SYSIN,SDRYCARD(BUFAD));                    02S0828 02684000
         B     @RC00826                                         02S0828 02685000
@RF00826 DS    0H                                               02S0828 02686000
         GET SYSIN,SDRYCARD(BUFAD)                                      02687000
*          IF IDENT = SEQ              /* DATA CARD IDENTIFIER IS    */ 02688000
*            THEN                      /*  SEQ=                      */ 02689000
@RC00826 CLC   IDENT(4,BUFAD),@CC00819                          02S0829 02690000
         BNE   @RF00829                                         02S0829 02691000
*              DO;                     /*                            */ 02692000
*                SPACE = SINGL;        /* SET SINGLE PRINT SPACE.    */ 02693000
         MVI   SPACE(BUFAD),C' '                                02S0831 02694000
*                MSGTXT = SDRYCARD;    /* SET CARD TO PRINT.         */ 02695000
         MVI   MSGTXT+80(BUFAD),C' '                            02S0832 02696000
         MVC   MSGTXT+81(39,BUFAD),MSGTXT+80(BUFAD)             02S0832 02697000
         MVC   MSGTXT(80,BUFAD),SDRYCARD(BUFAD)                 02S0832 02698000
*                GEN REFS(SYSPRINT,MSG)/* PRINT DATA CARD.           */ 02699000
*                 (PUT  SYSPRINT,MSG(,BUFAD));                  02S0833 02700000
         PUT  SYSPRINT,MSG(,BUFAD)                                      02701000
*/********************************************************************* 02702000
**                                                                    * 02703000
**  THIS SEGMENT WILL CONVERT NON BLANK COLUMNS IN THE DATA CARDS     * 02704000
**  TO BITS OF THE RASTER SCAN PATTERN.                               * 02705000
**                                                                    * 02706000
**********************************************************************/ 02707000
*        UWORK = SEQNO;                /* SET SEQUENCE NUMBER IN     */ 02708000
         MVC   UWORK(2,BUFAD),SEQNO(BUFAD)                      03S0834 02709000
*        IF UWORK(ONE) =< CHAR2        /*  WORK AREA THEN TEST TO    */ 02710000
*         & UWORK(ONE) => CHAR0        /*  INSURE THAT IT IS INDEED  */ 02711000
*         & UWORK(TWO) =< CHAR9        /*  A NUMBER BETWEEN ZERO     */ 02712000
*         & UWORK(TWO) => CHAR0        /*  AND TWENTY-NINE.          */ 02713000
*          THEN                        /*                            */ 02714000
         CLI   UWORK(BUFAD),C'2'                                03S0835 02715000
         BH    @RF00835                                         03S0835 02716000
         CLI   UWORK(BUFAD),C'0'                                03S0835 02717000
         BL    @RF00835                                         03S0835 02718000
         CLI   UWORK+1(BUFAD),C'9'                              03S0835 02719000
         BH    @RF00835                                         03S0835 02720000
         CLI   UWORK+1(BUFAD),C'0'                              03S0835 02721000
         BL    @RF00835                                         03S0835 02722000
*            DO;                       /* YES, IT IS PATH.           */ 02723000
*              SHIFT2 = -ONE;          /* INITIALIZE BIT LENDER.     */ 02724000
         SLR   SHIFT2,SHIFT2                                    03S0837 02725000
         BCTR  SHIFT2,0                                         03S0837 02726000
*              SHIFT = ZERO;           /* INITIALIZE BIT BORROWER.   */ 02727000
         SLR   SHIFT,SHIFT                                      03S0838 02728000
*              PACK(DWORK,UWORK);      /* MAKE SEQUENCE              */ 02729000
         PACK  DWORK(8,BUFAD),UWORK(2,BUFAD)                    03S0839 02730000
*              CVB(FWORK,DWORK);       /*  NUMBER BINARY.            */ 02731000
         CVB   @07,DWORK(,BUFAD)                                03S0840 02732000
         ST    @07,FWORK(,BUFAD)                                03S0840 02733000
*              IF FWORK ^= ZERO        /* NOW CHECK THAT NUMBER IS   */ 02734000
*               & FWORK =< DIM(RASTER) /*  BETWEEN 1 AND 24 AND HAS  */ 02735000
*               & DEL(FWORK) = ZERO    /*  NOT BEEN USED BEFORE.     */ 02736000
*                THEN                  /*                            */ 02737000
         SLR   @03,@03                                          03S0841 02738000
         CR    @07,@03                                          03S0841 02739000
         BE    @RF00841                                         03S0841 02740000
         CH    @07,@CH00053                                     03S0841 02741000
         BH    @RF00841                                         03S0841 02742000
         LA    @15,796                                          03S0841 02743000
         ALR   @15,BUFAD                                        03S0841 02744000
         LA    @01,0(@07,@15)                                   03S0841 02745000
         BCTR  @01,0                                            03S0841 02746000
         SLR   @00,@00                                          03S0841 02747000
         IC    @00,DEL(,@01)                                    03S0841 02748000
         CR    @03,@00                                          03S0841 02749000
         BNE   @RF00841                                         03S0841 02750000
*                  DO;                 /* INDICATE ONE RASTER SCAN.  */ 02751000
*                    SETRAS = ON;      /*                            */ 02752000
         OI    SETRAS(BUFAD),B'00000010'                        03S0843 02753000
*                    DEL(FWORK) = ALBIT;/* INDICATE USED SEQ NUMBER. */ 02754000
         ALR   @15,@07                                          03S0844 02755000
         BCTR  @15,0                                            03S0844 02756000
         MVI   DEL(@15),X'FF'                                   03S0844 02757000
*                    DO                /* START BIT BUILDER.         */ 02758000
*                     XCNT = ONE       /*                            */ 02759000
*                     TO DIM(RASDATA); /* SCAN 18 BITS               */ 02760000
         LA    XCNT,1                                           03S0845 02761000
@DL00845 DS    0H                                               03S0846 02762000
*                      IF RASDATA(XCNT) ^= BLANK                03S0846 02763000
*                        THEN          /* NON BLANK IS BIT TIME      */ 02764000
         LR    @07,BUFAD                                        03S0846 02765000
         ALR   @07,XCNT                                         03S0846 02766000
         CLI   RASDATA-1(@07),C' '                              03S0846 02767000
         BE    @RF00846                                         03S0846 02768000
*                          DO;         /* BORROW A BIT               */ 02769000
*                            SLDA(SHIFT,ONE);                   03S0848 02770000
         SLDA  SHIFT,1                                          03S0848 02771000
*                            IF XCNT > LENGTH(BITPAT1)          03S0849 02772000
*                              THEN    /* FLIP PARITY BIT 2.         */ 02773000
         CH    XCNT,@CH00032                                    03S0849 02774000
         BNH   @RF00849                                         03S0849 02775000
*                                PITPAR = PITPAR && FLIPIT2;    03S0850 02776000
         L     @07,FWORK(,BUFAD)                                03S0850 02777000
         MH    @07,@CH00111                                     03S0850 02778000
         LR    @15,CNT                                          03S0850 02779000
         MH    @15,@CH00610                                     03S0850 02780000
         AL    @15,@CF01891                                     03S0850 02781000
         LA    @15,GRAFBOD(@15,BUFFPTR)                         03S0850 02782000
         BCTR  @15,0                                            03S0850 02783000
         BCTR  @15,0                                            03S0850 02784000
         LA    @07,RASTER-1(@07,@15)                            03S0850 02785000
         XI    PITPAR+2(@07),X'04'                              03S0850 02786000
*                              ELSE    /* FLIP PARITY BIT 1.         */ 02787000
*                                PITPAR = PITPAR && FLIPIT1;    03S0851 02788000
         B     @RC00849                                         03S0851 02789000
@RF00849 L     @07,FWORK(,BUFAD)                                03S0851 02790000
         MH    @07,@CH00111                                     03S0851 02791000
         LR    @15,CNT                                          03S0851 02792000
         MH    @15,@CH00610                                     03S0851 02793000
         AL    @15,@CF01891                                     03S0851 02794000
         LA    @15,GRAFBOD(@15,BUFFPTR)                         03S0851 02795000
         BCTR  @15,0                                            03S0851 02796000
         BCTR  @15,0                                            03S0851 02797000
         LA    @07,RASTER-1(@07,@15)                            03S0851 02798000
         XI    PITPAR+2(@07),X'08'                              03S0851 02799000
*                          END;        /*                            */ 02800000
*                        ELSE          /* NO BIT BORROWED.           */ 02801000
*                          SLL(SHIFT,ONE);/* JUST MOVE OVER.         */ 02802000
         B     @RC00846                                         03S0853 02803000
@RF00846 SLL   SHIFT,1                                          03S0853 02804000
*                    END;              /* END OF BIT BUILDER.        */ 02805000
@RC00846 AH    XCNT,@CH00060                                    03S0854 02806000
         CH    XCNT,@CH00183                                    03S0854 02807000
         BNH   @DL00845                                         03S0854 02808000
*                    SLL(SHIFT,SIX);   /* ALIGN FOR 24 BITS.         */ 02809000
         SLL   SHIFT,6                                          03S0855 02810000
*                    DWORK1 = SHIFT;   /* PREPARE TO COMBINE.        */ 02811000
         ST    SHIFT,DWORK1(,BUFAD)                             03S0856 02812000
*                    RASTER(FWORK)     /* RASTER PITCH AND PARITY.   */ 02813000
*                     = RASTER(FWORK) | DWORKB;                 03S0857 02814000
         L     @07,FWORK(,BUFAD)                                03S0857 02815000
         MH    @07,@CH00111                                     03S0857 02816000
         LR    @03,CNT                                          03S0857 02817000
         MH    @03,@CH00610                                     03S0857 02818000
         AL    @03,@CF01891                                     03S0857 02819000
         LA    @03,GRAFBOD(@03,BUFFPTR)                         03S0857 02820000
         ALR   @03,@07                                          03S0857 02821000
         BCTR  @03,0                                            03S0857 02822000
         BCTR  @03,0                                            03S0857 02823000
         OC    RASTER-1(3,@03),DWORKB(BUFAD)                    03S0857 02824000
*                  END;                /*                            */ 02825000
*                ELSE                  /*                            */ 02826000
*                  DO;                 /*                            */ 02827000
         B     @RC00841                                         03S0859 02828000
@RF00841 DS    0H                                               03S0860 02829000
*                    MSGN = IEBA44I;   /* INVALID SEQUENCE NUMBER    */ 02830000
         MVI   MSGN(BUFAD),X'2C'                                03S0860 02831000
*                    CALL IEBIMSGS;    /* PRINT IT                   */ 02832000
         L     @15,@CV00037                                     03S0861 02833000
         BALR  @14,@15                                          03S0861 02834000
*                    INHIBITW = ON;    /* NO LIBRARY UPDATE          */ 02835000
         OI    INHIBITW(BUFAD),B'01000000'                      03S0862 02836000
*                    END;              /*                            */ 02837000
*            END;                      /*                            */ 02838000
*          ELSE                        /* ERROR PATH.                */ 02839000
*            DO;                       /*                            */ 02840000
         B     @RC00835                                         03S0865 02841000
@RF00835 DS    0H                                               03S0866 02842000
*              MSGN = IEBA28I;         /* INVALID SEQUENCE NUMBER.   */ 02843000
         MVI   MSGN(BUFAD),X'1C'                                03S0866 02844000
*              CALL IEBIMSGS;          /* SO PRINT IT.               */ 02845000
         L     @15,@CV00037                                     03S0867 02846000
         BALR  @14,@15                                          03S0867 02847000
*              INHIBITW = ON;          /* NO WRITING ON LIBRARY      */ 02848000
         OI    INHIBITW(BUFAD),B'01000000'                      03S0868 02849000
*            END;                      /*                            */ 02850000
*              END;                    /*                            */ 02851000
*            ELSE                      /* NOT A DATA CARD.           */ 02852000
*              DO;                     /*                            */ 02853000
         B     @RC00829                                         02S0871 02854000
@RF00829 DS    0H                                               02S0872 02855000
*                IF SETRAS = ON        /* CHECK IF ANY DATA CARDS.   */ 02856000
*                  THEN                /*                            */ 02857000
         TM    SETRAS(BUFAD),B'00000010'                        02S0872 02858000
         BNO   @RF00872                                         02S0872 02859000
*                    SEGCNT = CNT;     /* UPDATE SEGMENT COUNT.      */ 02860000
         STH   CNT,SEGCNT(,BUFAD)                               02S0873 02861000
*                  ELSE                /*                            */ 02862000
*                    DO;               /* MUST HAVE BEEN NO DATA     */ 02863000
         B     @RC00872                                         02S0874 02864000
@RF00872 DS    0H                                               02S0875 02865000
*                      MSGN = IEBA31I; /*  CARDS.                    */ 02866000
         MVI   MSGN(BUFAD),X'1F'                                02S0875 02867000
*                      CALL IEBIMSGS;  /* WRITE THAT MESSAGE.        */ 02868000
         L     @15,@CV00037                                     02S0876 02869000
         BALR  @14,@15                                          02S0876 02870000
*                      INHIBITW = ON;  /* PROHIBIT LIBRARY UPDATE.   */ 02871000
         OI    INHIBITW(BUFAD),B'01000000'                      02S0877 02872000
*                    END;              /*                            */ 02873000
*                LASTQ = ON;           /* SET GET OUT SWITCH.        */ 02874000
@RC00872 OI    LASTQ(BUFAD),B'00000001'                         02S0879 02875000
*                CARDIN = ON;          /* INDICATE UNPROCESSED CARD  */ 02876000
         OI    CARDIN(BUFAD),B'00100000'                        02S0880 02877000
*              END;                    /*  IN BUFFER.                */ 02878000
*        END;                          /*                            */ 02879000
@RC00829 DS    0H                                               02S0882 02880000
@DE00825 TM    EOFFLG(BUFAD),B'01000000'                        02S0882 02881000
         BNZ   @DC00825                                         02S0882 02882000
         TM    LASTQ(BUFAD),B'00000001'                         02S0882 02883000
         BZ    @DL00825                                         02S0882 02884000
@DC00825 DS    0H                                               02S0883 02885000
*        RESPECIFY (BUFFPTR,SHIFT,SHIFT2) UNRESTRICTED;         02S0883 02886000
*                  END;                /*                            */ 02887000
*                ELSE;                 /* NO ASSIGN.                 */ 02888000
@RF00811 DS    0H                                               01S0886 02889000
*            END;                      /*                            */ 02890000
*          ELSE;                       /* SCAN IN PROGRESS IS OFF.   */ 02891000
@RF00772 DS    0H                                               01S0888 02892000
*        INHIBITR = OFF;               /* RESET READ INHIBIT.        */ 02893000
         NI    INHIBITR(BUFAD),B'11011111'                      01S0888 02894000
*        IF SEGCNT > MAXSEG            /* CHECK FOR BIG MODULE.      */ 02895000
*          THEN                        /* MAKE A MESSAGE.            */ 02896000
         LA    @15,64                                           01S0889 02897000
         CH    @15,SEGCNT(,BUFAD)                               01S0889 02898000
         BNL   @RF00889                                         01S0889 02899000
*            DO;                       /*                            */ 02900000
*              SEGCNT = MAXSEG;        /* PRINT ONLY 64 SEGMENTS.    */ 02901000
         STH   @15,SEGCNT(,BUFAD)                               01S0891 02902000
*              MSGN = IEBA07I;         /* MODULE TO LARGE.           */ 02903000
         MVI   MSGN(BUFAD),X'07'                                01S0892 02904000
*              CALL IEBIMSGS;          /* PRINT IT.                  */ 02905000
         L     @15,@CV00037                                     01S0893 02906000
         BALR  @14,@15                                          01S0893 02907000
*              INHIBITW = ON;          /* PREVENT LIBRARY UPDATE.    */ 02908000
         OI    INHIBITW(BUFAD),B'01000000'                      01S0894 02909000
*            END;                      /*                            */ 02910000
*          ELSE;                       /* MODULE OK THUS FAR.        */ 02911000
@RF00889 DS    0H                                               01S0897 02912000
*        MODCNT                        /* SET MODULE COUNT THUS FAR. */ 02913000
*         = SEGCNT * LENGTH(GRAFSEG);                           01S0897 02914000
         LH    @15,SEGCNT(,BUFAD)                               01S0897 02915000
         MH    @15,@CH00610                                     01S0897 02916000
         STH   @15,MODCNT(,BUFAD)                               01S0897 02917000
*        IF NOKEY = ON                 /* NULL STATEMENT IS          */ 02918000
*          THEN                        /*  A PRINT ONLY              */ 02919000
         TM    NOKEY(BUFAD),B'01000000'                         01S0898 02920000
         BNO   @RF00898                                         01S0898 02921000
*            READMOD = ON;             /*   REQUEST.                 */ 02922000
         OI    READMOD(BUFAD),B'00000001'                       01S0899 02923000
*        IF INHIBITW = ON              /* CHECK FOR ANY ERROR.       */ 02924000
*          THEN                        /* RETURN CODE  = 8 THIS OP.  */ 02925000
@RF00898 TM    INHIBITW(BUFAD),B'01000000'                      01S0900 02926000
         BNO   @RF00900                                         01S0900 02927000
*            RETSAVE = MAX(RETSAVE,RC8);                        01S0901 02928000
         SLR   @15,@15                                          01S0901 02929000
         IC    @15,RETSAVE(,BUFAD)                              01S0901 02930000
         LA    @14,8                                            01S0901 02931000
         CR    @15,@14                                          01S0901 02932000
         BNL   *+6                                                      02933000
         LR    @15,@14                                          01S0901 02934000
         STC   @15,RETSAVE(,BUFAD)                              01S0901 02935000
*          ELSE;                       /*                            */ 02936000
@RF00900 DS    0H                                               01S0903 02937000
*        GEN REFS(SAVE1)               /******************************/ 02938000
*         (L  @13,SAVE1+BACK(,BUFAD)); /* RESTORE BACKWARD POINTER   */ 02939000
         L  @13,SAVE1+BACK(,BUFAD)                                      02940000
*  END GRAPHIC;                        /* RETURN TO CALLER.          */ 02941000
@EL00007 DS    0H                                               01S0904 02942000
@EF00007 DS    0H                                               01S0904 02943000
@ER00007 LM    @14,@12,12(@13)                                  01S0904 02944000
         BR    @14                                              01S0904 02945000
         EJECT                                                          02946000
*/********************************************************************* 02947000
**                                                                    * 02948000
**  THIS ROUTINE WILL INDICATE THAT AN INVALID OPERATION HAS          * 02949000
**  BEEN FOUND.                                                       * 02950000
**                                                                    * 02951000
**********************************************************************/ 02952000
*INVOP:                                                         01S0905 02953000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0905 02954000
INVOP    STM   @14,@12,12(@13)                                  01S0905 02955000
*        GEN REFS(SAVE1);              /* USE CONVENTIONAL SAVE.     */ 02956000
         ST  @13,SAVE1+BACK(,BUFAD)    BACKWARD POINTER.                02957000
         LA  @14,SAVE1(,BUFAD)         THIS ROUTINE SAVE AREA.          02958000
         ST  @14,FORE(,@13)            FORWARD POINTER.                 02959000
         LR  @13,@14                   LINKAGE COMPLETE.                02960000
*        IF FMTERR = ON                /* CHECK FOR CONTROL CARD     */ 02961000
*          THEN                        /*  FORMAT ERROR.             */ 02962000
         TM    FMTERR(BUFAD),B'00001000'                        01S0907 02963000
         BNO   @RF00907                                         01S0907 02964000
*            DO;                       /*                            */ 02965000
*              MSGN = IEBA17I;         /* CONTROL CARD ERROR.        */ 02966000
         MVI   MSGN(BUFAD),X'11'                                01S0909 02967000
*              FMTERR = OFF;           /* RESET ERROR CONDITION.     */ 02968000
         NI    FMTERR(BUFAD),B'11110111'                        01S0910 02969000
*            END;                      /*                            */ 02970000
*          ELSE                        /* MUST BE OP CODE ERROR.     */ 02971000
*            DO;                       /*                            */ 02972000
         B     @RC00907                                         01S0912 02973000
@RF00907 DS    0H                                               01S0913 02974000
*                                      /* ADDR OF BAD OP CODE.       */ 02975000
*              EDITDATA(ONE) = ADDR(CARDDATA);                  01S0913 02976000
         LA    @15,CARDDATA(,BUFAD)                             01S0913 02977000
         STCM  @15,7,EDITDATA(BUFAD)                            01S0913 02978000
*                                      /* MAX OF 8 BYTES TO EDIT.    */ 02979000
*              EDITLEN(ONE) = MIN(EIGHT,PARMSIZE);              01S0914 02980000
         SLR   @15,@15                                          01S0914 02981000
         ICM   @15,3,PARMSIZE(BUFAD)                            01S0914 02982000
         LA    @14,8                                            01S0914 02983000
         CR    @15,@14                                          01S0914 02984000
         BNH   *+6                                                      02985000
         LR    @15,@14                                          01S0914 02986000
         STC   @15,EDITLEN(,BUFAD)                              01S0914 02987000
*              MSGN = IEBA16I;         /* BAD OPERATION MESSAGE.     */ 02988000
         MVI   MSGN(BUFAD),X'10'                                01S0915 02989000
*            END;                      /*                            */ 02990000
*        CALL IEBIMSGS;                /* PRINT THE MESSAGE.         */ 02991000
@RC00907 L     @15,@CV00037                                     01S0917 02992000
         BALR  @14,@15                                          01S0917 02993000
*        SCANINP = OFF;                /* RESET SCAN IN PROGRESS.    */ 02994000
         NI    SCANINP(BUFAD),B'10111111'                       01S0918 02995000
*        INHIBITW = ON;                /* PREVENT LIBRARY UPDATE.    */ 02996000
         OI    INHIBITW(BUFAD),B'01000000'                      01S0919 02997000
*        IF CONTINUE = ON              /* COULD BE MORE CARDS.       */ 02998000
*          THEN                        /* NEED TO PURGE THEM.        */ 02999000
         TM    CONTINUE(BUFAD),B'00001000'                      01S0920 03000000
         BNO   @RF00920                                         01S0920 03001000
*            CALL IEBISCAN;            /* LET SCAN DO IT.            */ 03002000
         L     @15,@CV00036                                     01S0921 03003000
         BALR  @14,@15                                          01S0921 03004000
*          ELSE;                       /* NO CONTINUATION CARDS.     */ 03005000
@RF00920 DS    0H                                               01S0923 03006000
*        KWDUSED = ZERO;               /* RESET KEYWORD INDICATORS.  */ 03007000
         MVI   KWDUSED(BUFAD),X'00'                             01S0923 03008000
*        RETSAVE = MAX(RETSAVE,RC8);   /* SET RC = 8 THIS OPERATION. */ 03009000
         SLR   @15,@15                                          01S0924 03010000
         IC    @15,RETSAVE(,BUFAD)                              01S0924 03011000
         LA    @14,8                                            01S0924 03012000
         CR    @15,@14                                          01S0924 03013000
         BNL   *+6                                                      03014000
         LR    @15,@14                                          01S0924 03015000
         STC   @15,RETSAVE(,BUFAD)                              01S0924 03016000
*        GEN REFS(SAVE1)               /* RESTORE BACKWARD POINTER.  */ 03017000
*         (L  @13,SAVE1+BACK(,BUFAD)); /*                            */ 03018000
         L  @13,SAVE1+BACK(,BUFAD)                                      03019000
*  END INVOP;                          /* RETURN TO CALLER.          */ 03020000
@EL00008 DS    0H                                               01S0926 03021000
@EF00008 DS    0H                                               01S0926 03022000
@ER00008 LM    @14,@12,12(@13)                                  01S0926 03023000
         BR    @14                                              01S0926 03024000
         EJECT                                                          03025000
*/********************************************************************* 03026000
**                                                                    * 03027000
**  THIS ROUTINE COMPLETES EACH FUNCTION. NORMAL ENTRY IS WITH A      * 03028000
**  VALID ACTIVE OPERATION AND THE NEXT OPERATION REQUESTED IS NAME.  * 03029000
**  IF THE ACTIVE OPERATION HAS BUILT A MODULE FROM THE KEYWORDS      * 03030000
**  PROVIDED A MEMBER WILL BE WRITTEN TO THE LIBRARY AND PRINTED.     * 03031000
**  UPON ANY TYPE OF ERROR ENTRY, AN ATTEMPT TO PRINT ONLY WILL BE    * 03032000
**  MADE.                                                             * 03033000
**                                                                    * 03034000
**********************************************************************/ 03035000
*NAME:                                                          01S0927 03036000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0927 03037000
NAME     STM   @14,@12,12(@13)                                  01S0927 03038000
*        GEN REFS(SAVE1);              /* USE CONVENTIONAL SAVE.     */ 03039000
         ST  @13,SAVE1+BACK(,BUFAD)    BACKWARD POINTER.                03040000
         LA  @14,SAVE1(,BUFAD)         THIS ROUTINE SAVE AREA.          03041000
         ST  @14,FORE(,@13)            FORWARD POINTER.                 03042000
         LR  @13,@14                   LINKAGE COMPLETE.                03043000
*        OPINPRG = OFF;                /* RESET OPERATION IN PROGRESS*/ 03044000
         NI    OPINPRG(BUFAD),B'11111101'                       01S0929 03045000
*        IF INHIBLIB = ON              /* CHECK PERMANENT LIBRARY    */ 03046000
*          THEN                        /*  RESTRICTION.              */ 03047000
         TM    INHIBLIB(BUFAD),B'00010000'                      01S0930 03048000
         BNO   @RF00930                                         01S0930 03049000
*            INHIBIT = ONNER;          /* PROHIBIT LIBRARY ACCESS.   */ 03050000
         OI    INHIBIT(BUFAD),B'01100000'                       01S0931 03051000
*        IF NOWRITE = ON               /* CHECK FOR WRITE PROHIBITION*/ 03052000
*          THEN                        /*                            */ 03053000
@RF00930 TM    NOWRITE(BUFAD),B'00000100'                       01S0932 03054000
         BNO   @RF00932                                         01S0932 03055000
*            INHIBITW = ON;            /* DO NOT ALLOW WRITE THIS OP.*/ 03056000
         OI    INHIBITW(BUFAD),B'01000000'                      01S0933 03057000
*        IF ACTIVOP ^= NAMEOP          /* NORMAL ENTRY IS WITH       */ 03058000
*          THEN                        /*  A VALID OPERATION.        */ 03059000
@RF00932 CLC   ACTIVOP(1,BUFAD),NAMEOP                          01S0934 03060000
         BE    @RF00934                                         01S0934 03061000
*            DO;                       /*                            */ 03062000
*              IF NEXTOP = NAMEOP      /* NEXT CARD SHOULD BE A      */ 03063000
*                THEN                  /*  NAME CONTROL CARD.        */ 03064000
         CLC   NEXTOP(1,BUFAD),NAMEOP                           01S0936 03065000
         BNE   @RF00936                                         01S0936 03066000
*                  IF SCANINP = ON     /* NEED MODULE NAME.          */ 03067000
*                    THEN              /*                            */ 03068000
         TM    SCANINP(BUFAD),B'01000000'                       01S0937 03069000
         BNO   @RF00937                                         01S0937 03070000
*                      CALL IEBISCAN;  /* SCAN FOR MODULE NAME.      */ 03071000
         L     @15,@CV00036                                     01S0938 03072000
         BALR  @14,@15                                          01S0938 03073000
*                    ELSE;             /*                            */ 03074000
@RF00937 DS    0H                                               01S0940 03075000
*                ELSE;                 /*                            */ 03076000
@RF00936 DS    0H                                               01S0941 03077000
*              IF NAMESET = OFF        /* CHECK FOR ANY NAME.        */ 03078000
*                THEN                  /*                            */ 03079000
         TM    NAMESET(BUFAD),B'10000000'                       01S0941 03080000
         BNZ   @RF00941                                         01S0941 03081000
*                      DO;             /*                            */ 03082000
*                        INHIBIT=ONNER;/* RESTRICT LIBRARY ACCESS.   */ 03083000
         OI    INHIBIT(BUFAD),B'01100000'                       01S0943 03084000
*                        BNAME = NONAM;/* INSERT NONAME.             */ 03085000
         MVI   BNAME+6(BUFAD),C' '                              01S0944 03086000
         MVI   BNAME+7(BUFAD),C' '                              01S0944 03087000
         MVC   BNAME(6,BUFAD),@CC00823                          01S0944 03088000
*                        MSGN = IEBA08I;/* NO NAME SPECIFIED.        */ 03089000
         MVI   MSGN(BUFAD),X'08'                                01S0945 03090000
*                        CALL IEBIMSGS;/* PRINT THE MESSAGE.         */ 03091000
         L     @15,@CV00037                                     01S0946 03092000
         BALR  @14,@15                                          01S0946 03093000
*                        RETSAVE =     /* SET RC = 8 THIS OPERATION. */ 03094000
*                         MAX(RETSAVE,RC8);                     01S0947 03095000
         SLR   @15,@15                                          01S0947 03096000
         IC    @15,RETSAVE(,BUFAD)                              01S0947 03097000
         LA    @14,8                                            01S0947 03098000
         CR    @15,@14                                          01S0947 03099000
         BNL   *+6                                                      03100000
         LR    @15,@14                                          01S0947 03101000
         STC   @15,RETSAVE(,BUFAD)                              01S0947 03102000
*                      END;            /*                            */ 03103000
*                ELSE;                 /* GOT A NAME.                */ 03104000
@RF00941 DS    0H                                               01S0950 03105000
*              IF READMOD = ON         /* CHECK FOR PRINT ONLY FOR   */ 03106000
*                THEN                  /*  ACTIVE OPERATION.         */ 03107000
         TM    READMOD(BUFAD),B'00000001'                       01S0950 03108000
         BNO   @RF00950                                         01S0950 03109000
*                                      /* BRING IN REQUESTED MODULE. */ 03110000
*/********************************************************************* 03111000
**                                                                    * 03112000
**  THIS SEGMENT WILL CAUSE A MODULE TO BE BROUGHT INTO STORAGE       * 03113000
**  FROM THE LIBRARY TO BE PRINTED.                                   * 03114000
**                                                                    * 03115000
**********************************************************************/ 03116000
*                                                               02S0951 03117000
*       DO;                                                     02S0951 03118000
*        IF INCLSW = ON                /* CHECK FOR INCLUDE.         */ 03119000
*          THEN                        /* IT IS INVALID.             */ 03120000
         TM    INCLSW(BUFAD),B'00100000'                        02S0952 03121000
         BNO   @RF00952                                         02S0952 03122000
*            DO;                       /*                            */ 03123000
*              MSGN = IEBA13I;         /* SET MESSAGE NUMBER.        */ 03124000
         MVI   MSGN(BUFAD),X'0D'                                02S0954 03125000
*              CALL IEBIMSGS;          /* PRINT IT.                  */ 03126000
         L     @15,@CV00037                                     02S0955 03127000
         BALR  @14,@15                                          02S0955 03128000
*              RETSAVE =               /* SET RETURN CODE 4          */ 03129000
*               MAX(RETSAVE,RC4);      /*  FOR THIS OPERATION.       */ 03130000
         SLR   @15,@15                                          02S0956 03131000
         IC    @15,RETSAVE(,BUFAD)                              02S0956 03132000
         LA    @14,4                                            02S0956 03133000
         CR    @15,@14                                          02S0956 03134000
         BNL   *+6                                                      03135000
         LR    @15,@14                                          02S0956 03136000
         STC   @15,RETSAVE(,BUFAD)                              02S0956 03137000
*            END;                      /*                            */ 03138000
*          ELSE;                       /* CONTINUE.                  */ 03139000
@RF00952 DS    0H                                               02S0959 03140000
*        IF INHIBITR = OFF             /* READING OF LIBRARY MAY     */ 03141000
*          THEN                        /*  HAVE BEEN PREVENTED.      */ 03142000
         TM    INHIBITR(BUFAD),B'00100000'                      02S0959 03143000
         BNZ   @RF00959                                         02S0959 03144000
*            IF BSUFIX(ONE)=SPLAT      /* SPEC MOD REQUEST           */ 03145000
*              THEN                    /*  CAN ONLY                  */ 03146000
         CLI   BSUFIX(BUFAD),C'*'                               02S0960 03147000
         BNE   @RF00960                                         02S0960 03148000
*                DO;                   /*                            */ 03149000
*                  BSUFIX = BLANK;     /* SET FOR BIG MODULE.        */ 03150000
         MVI   BSUFIX+1(BUFAD),C' '                             02S0962 03151000
         MVC   BSUFIX+2(2,BUFAD),BSUFIX+1(BUFAD)                02S0962 03152000
         MVI   BSUFIX(BUFAD),C' '                               02S0962 03153000
*                  CALL LOADLIB;       /* LOAD SPECIAL MODULE.       */ 03154000
         BAL   @14,LOADLIB                                      02S0963 03155000
*                END;                  /*                            */ 03156000
*              ELSE                    /* NORMAL REQUEST.            */ 03157000
*                DO;                   /*                            */ 03158000
         B     @RC00960                                         02S0965 03159000
@RF00960 DS    0H                                               02S0966 03160000
*                  CALL BLDL;          /* FIND THE MEMBER.           */ 03161000
         BAL   @14,BLDL                                         02S0966 03162000
*                  IF INHIBITR = OFF   /* CHECK FOR GOOD FIND.       */ 03163000
*                    THEN              /*                            */ 03164000
         TM    INHIBITR(BUFAD),B'00100000'                      02S0967 03165000
         BNZ   @RF00967                                         02S0967 03166000
*                      CALL READLIB;   /* READ THE MODULE.           */ 03167000
         BAL   @14,READLIB                                      02S0968 03168000
*                    ELSE              /* MUST HAVE BEEN ERROR.      */ 03169000
*                      INHIBITP = ON;  /* DO NOT PRINT MODULE.       */ 03170000
         B     @RC00967                                         02S0969 03171000
@RF00967 OI    INHIBITP(BUFAD),B'00010000'                      02S0969 03172000
*                END;                  /*                            */ 03173000
*          ELSE                        /* DID NOT FILL BUFFER.       */ 03174000
*            INHIBITP = ON;            /* PREVENT PRINTING MODULE.   */ 03175000
         B     @RC00959                                         02S0971 03176000
@RF00959 OI    INHIBITP(BUFAD),B'00010000'                      02S0971 03177000
*       INHIBITW = ON;                 /* INHIBIT WRITE ALWAYS.      */ 03178000
@RC00959 OI    INHIBITW(BUFAD),B'01000000'                      02S0972 03179000
*       END;                           /*                            */ 03180000
*                ELSE;                 /* UPDATE REQUESTED.          */ 03181000
@RF00950 DS    0H                                               01S0975 03182000
*              IF INHIBITP = OFF                                01S0975 03183000
*               & CHKPTR(ACTIVOP) ^= ZERO                       01S0975 03184000
*               & (MODCNT ^= ZERO      /* CHECK FOR A MODULE.        */ 03185000
*                 | (READMOD = ON & BNAME = BIGGRAF))           01S0975 03186000
*                THEN                                           01S0975 03187000
         TM    INHIBITP(BUFAD),B'00010000'                      01S0975 03188000
         BNZ   @RF00975                                         01S0975 03189000
         SLR   @15,@15                                          01S0975 03190000
         IC    @15,ACTIVOP(,BUFAD)                              01S0975 03191000
         MH    @15,@CH00053                                     01S0975 03192000
         ICM   @01,7,OPTABAD(BUFAD)                             01S0975 03193000
         AL    @01,@CF01896                                     01S0975 03194000
         L     @15,CHKPTR-9(@15,@01)                            01S0975 03195000
         LA    @15,0(,@15)                                      01S0975 03196000
         LTR   @15,@15                                          01S0975 03197000
         BZ    @RF00975                                         01S0975 03198000
         ICM   @15,3,MODCNT(BUFAD)                              01S0975 03199000
         BNZ   @RT00975                                         01S0975 03200000
         TM    READMOD(BUFAD),B'00000001'                       01S0975 03201000
         BNO   @RF00975                                         01S0975 03202000
         CLC   BNAME(8,BUFAD),@CC00837                          01S0975 03203000
         BNE   @RF00975                                         01S0975 03204000
@RT00975 DS    0H                                               01S0976 03205000
*                  CALL CHKMOD;        /* TEST MODULE FOR VALIDITY.  */ 03206000
         SLR   @14,@14                                          01S0976 03207000
         IC    @14,ACTIVOP(,BUFAD)                              01S0976 03208000
         MH    @14,@CH00053                                     01S0976 03209000
         ICM   @01,7,OPTABAD(BUFAD)                             01S0976 03210000
         AL    @01,@CF01896                                     01S0976 03211000
         L     @15,CHKPTR-9(@14,@01)                            01S0976 03212000
         LA    @15,0(,@15)                                      01S0976 03213000
         BALR  @14,@15                                          01S0976 03214000
*                ELSE;                 /*                            */ 03215000
@RF00975 DS    0H                                               01S0978 03216000
*/********************************************************************* 03217000
**                                                                    * 03218000
**  THIS SEGMENT WILL INSURE THE LIBRARY IS OPENED FOR WRITING.       * 03219000
**                                                                    * 03220000
**********************************************************************/ 03221000
*        DO;                           /*                            */ 03222000
*          IF INHIBITW = OFF           /* CHECK FOR PERMISSION TO    */ 03223000
*            THEN                      /*  OPEN FOR WRITE.           */ 03224000
         TM    INHIBITW(BUFAD),B'01000000'                      02S0979 03225000
         BNZ   @RF00979                                         02S0979 03226000
*              DO;                     /*                            */ 03227000
*                DCBPTR = UTOUTAD;     /* ADDRESS OF WRITE DCB.      */ 03228000
         L     DCBPTR,UTOUTAD(,BUFAD)                           02S0981 03229000
*                IF DCBOFOPN = OFF     /* DCB MAY BE OPEN ALREADY.   */ 03230000
*                  THEN                /*                            */ 03231000
         TM    DCBOFOPN+40(DCBPTR),B'00010000'                  02S0982 03232000
         BNZ   @RF00982                                         02S0982 03233000
*                    DO;               /* NOT THIS TIME.             */ 03234000
*                      GEN SETS(SYSUTOUT) FLOWS(BKSZFIX) /* OPEN FOR */ 03235000
*                       (OPEN (SYSUTOUT,OUTPUT)); /*  LIBRARY WRITE. */ 03236000
         OPEN (SYSUTOUT,OUTPUT)                                         03237000
*                      IF NOWRITE = OFF           /*                 */ 03238000
*                       & DCBOFOPN = OFF          /* CHECK FOR OPEN  */ 03239000
*                        THEN                     /*  SUCCESSFUL     */ 03240000
         TM    NOWRITE(BUFAD),B'00000100'                       02S0985 03241000
         BNZ   @RF00985                                         02S0985 03242000
         TM    DCBOFOPN+40(DCBPTR),B'00010000'                  02S0985 03243000
         BNZ   @RF00985                                         02S0985 03244000
*                          DO;                    /* NO.             */ 03245000
*                            INHIBITW = ON;       /* PREVENT WRITING */ 03246000
         OI    INHIBITW(BUFAD),B'01000000'                      02S0987 03247000
*                            NOWRITE = ON;        /* NOW AND FOREVER */ 03248000
         OI    NOWRITE(BUFAD),B'00000100'                       02S0988 03249000
*                            MSGN = IEBA20I;      /* NOT OPEN MESSAGE*/ 03250000
         MVI   MSGN(BUFAD),X'14'                                02S0989 03251000
*                            EDITDATA(ONE)        /* DDNAME          */ 03252000
*                             =ADDR(DDNAMES(FOUR));/* FOR MESSAGE    */ 03253000
         LA    @15,DDNAMES+24(,BUFAD)                           02S0990 03254000
         STCM  @15,7,EDITDATA(BUFAD)                            02S0990 03255000
*                            EDITLEN(ONE)         /*                 */ 03256000
*                             = LENGTH(DCBDDNAM); /*                 */ 03257000
         MVI   EDITLEN(BUFAD),X'08'                             02S0991 03258000
*                            CALL IEBIMSGS;       /* PRINT IT        */ 03259000
         L     @15,@CV00037                                     02S0992 03260000
         BALR  @14,@15                                          02S0992 03261000
*                            RETSAVE = RC12;      /* RETURN CODE 12. */ 03262000
         MVI   RETSAVE(BUFAD),X'0C'                             02S0993 03263000
*                          END;        /*                            */ 03264000
*                        ELSE;         /* OPEN SUCCESSFUL.           */ 03265000
@RF00985 DS    0H                                               02S0996 03266000
*                    END;              /*                            */ 03267000
*                  ELSE;               /* ALREADY OPEN.              */ 03268000
@RF00982 DS    0H                                               02S0998 03269000
*              END;                    /*                            */ 03270000
*            ELSE;                     /* NO NEED TO TRY             */ 03271000
@RF00979 DS    0H                                               02S1000 03272000
*        END;                          /*                            */ 03273000
*              IF INHIBITW = OFF       /* WRITING OF LIB MAY BE      */ 03274000
*                THEN                  /*  PREVENTED.                */ 03275000
         TM    INHIBITW(BUFAD),B'01000000'                      01S1001 03276000
         BNZ   @RF01001                                         01S1001 03277000
*                  DO;                 /* WRITE A MODULE ON LIBRARY. */ 03278000
*/********************************************************************* 03279000
**                                                                    * 03280000
**  THIS SEGMENT WILL WRITE THE INDICATED MODULE ON THE LIBRARY.      * 03281000
**  THE WRITE OPERATION WILL BE CHECKED FOR SUCCESSFULL COMPLETION    * 03282000
**  THEN THE DIRECTORY WILL BE UPDATED WITH THE NEW MEMBER            * 03283000
**  INFORMATION. ANY WRITE ERRORS WILL CAUSE THE SYNAD ROUTINE TO     * 03284000
**  BE INVOKED.                                                       * 03285000
**                                                                    * 03286000
*********************************************************************** 03287000
*                                                               02S1003 03288000
*        IF REPUSE = OFF               /* TEST REPLACE OPTION.       */ 03289000
*          THEN                        /* SEE IF MODULE EXISTS.      */ 03290000
         TM    REPUSE(BUFAD),B'10000000'                        02S1003 03291000
         BNZ   @RF01003                                         02S1003 03292000
*            DO;                       /*                            */ 03293000
*/********************************************************************* 03294000
**                                                                    * 03295000
**  THIS SEGMENT ISSUES A BLDL FOR THE MEMBER REQUESTED AND IF        * 03296000
**  THERE IS AN ERROR THE APPROPRIATE MESSAGE WILL BE PRINTED AND     * 03297000
**  WRITING OF THE LIBRARY WILL BE INHIBITED.                         * 03298000
**                                                                    * 03299000
**********************************************************************/ 03300000
*        BFFLL = FFLLCON;              /* SET BLDL ENTRY NO. AND LEN.*/ 03301000
         MVC   BFFLL(4,BUFAD),FFLLCON                           03S1005 03302000
*        GEN SETS(BLDLNTRY)            /* THE LIBRARY IS NOW SEARCHED*/ 03303000
*            REFS(SYSUTIN);            /* FOR THE MEMBER REQUESTED.  */ 03304000
         BLDL  SYSUTIN,BLDLNTRY(BUFAD) ISSUE BLDL.                      03305000
*        RESPECIFY (RETCODE) RESTRICTED;                        03S1007 03306000
*        IF RETCODE ^= FOUR            /* NON ZERO RETURN CODE MEANS */ 03307000
*          THEN                        /*  ERROR IN BLDL.            */ 03308000
         CL    RETCODE,@CF00050                                 03S1008 03309000
         BE    @RF01008                                         03S1008 03310000
*            DO;                       /*                            */ 03311000
*              IF RETCODE = ZERO       /* WAS MEMBER FOUND?          */ 03312000
*                THEN                  /********** IEBA09I ***********/ 03313000
         LTR   RETCODE,RETCODE                                  03S1010 03314000
         BNZ   @RF01010                                         03S1010 03315000
*                  DO;                 /* YES.                       */ 03316000
*                    MSGN = IEBA09I;   /* MEMBER FOUND.              */ 03317000
         MVI   MSGN(BUFAD),X'09'                                03S1012 03318000
*                    EDITDATA(ONE) =   /* SET DATA ADDRESS           */ 03319000
*                     ADDR(BNAME);     /*  FOR MESSAGE.              */ 03320000
         LA    @14,BNAME(,BUFAD)                                03S1013 03321000
         STCM  @14,7,EDITDATA(BUFAD)                            03S1013 03322000
*                    EDITLEN(ONE) =    /* SET DATA LENGTH            */ 03323000
*                     LENGTH(BNAME);   /*  FOR MESSAGE.              */ 03324000
         MVI   EDITLEN(BUFAD),X'08'                             03S1014 03325000
*                    RETSAVE=MAX(RETSAVE,RC8);/* RC = 8 FOR THIS BLDL*/ 03326000
         SLR   @14,@14                                          03S1015 03327000
         IC    @14,RETSAVE(,BUFAD)                              03S1015 03328000
         LA    @07,8                                            03S1015 03329000
         CR    @14,@07                                          03S1015 03330000
         BNL   *+6                                                      03331000
         LR    @14,@07                                          03S1015 03332000
         STC   @14,RETSAVE(,BUFAD)                              03S1015 03333000
*                  END;                /******************************/ 03334000
*              IF RETCODE = EIGHT      /* WAS THERE AN I/O ERROR?    */ 03335000
*                THEN                  /********** IEBA04I ***********/ 03336000
@RF01010 CL    RETCODE,@CF00048                                 03S1017 03337000
         BNE   @RF01017                                         03S1017 03338000
*                  DO;                 /* YES.                       */ 03339000
*                    MSGN = IEBA04I;   /* I/O ERROR MESSAGE.         */ 03340000
         MVI   MSGN(BUFAD),X'04'                                03S1019 03341000
*                    EDITDATA(ONE) =   /* SET DATA ADDRESS           */ 03342000
*                     ADDR(DCTRY);     /*  FOR MESSAGE.              */ 03343000
         LA    @14,@CC00862                                     03S1020 03344000
         STCM  @14,7,EDITDATA(BUFAD)                            03S1020 03345000
*                    EDITLEN(ONE) =    /* SET DATA LENGTH            */ 03346000
*                     LENGTH(DCTRY);   /*  FOR MESSAGE.              */ 03347000
         MVI   EDITLEN(BUFAD),X'09'                             03S1021 03348000
*                    RETSAVE = RC12;   /* RC = 12 FOR THIS BLDL.     */ 03349000
         MVI   RETSAVE(BUFAD),X'0C'                             03S1022 03350000
*                    ABNDFLG = ON;     /* TERMINATE UTILITY.         */ 03351000
         OI    ABNDFLG(BUFAD),B'10000000'                       03S1023 03352000
*                  END;                /******************************/ 03353000
*              INHIBITW = ON;          /* INHIBIT DISK READ.         */ 03354000
@RF01017 OI    INHIBITW(BUFAD),B'01000000'                      03S1025 03355000
*              CALL IEBIMSGS;          /* GET MESSAGE.               */ 03356000
         L     @15,@CV00037                                     03S1026 03357000
         BALR  @14,@15                                          03S1026 03358000
*            END;                      /*                            */ 03359000
*        RESPECIFY (RETCODE) UNRESTRICTED;                      03S1028 03360000
@RF01008 DS    0H                                               03S1029 03361000
*            END;                      /* END BLDL FOR WRITE.        */ 03362000
*          ELSE;                       /* NO NEED TO ISSUE BLDL.     */ 03363000
@RF01003 DS    0H                                               02S1031 03364000
*        DNAME = BNAME;                /* SET MODULE NAME.           */ 03365000
         MVC   DNAME(8,BUFAD),BNAME(BUFAD)                      02S1031 03366000
*        MODNAME = DSUFIX;             /* NAME TO HEADER.            */ 03367000
         MVC   MODNAME(4,BUFAD),DSUFIX(BUFAD)                   02S1032 03368000
*        DCBPTR = UTOUTAD;             /* SET DCB ADDRESS FOR WRITE. */ 03369000
         L     DCBPTR,UTOUTAD(,BUFAD)                           02S1033 03370000
*                                      /* SET MODULE LENGTH.         */ 03371000
*        DSTOR = MODCNT + LENGTH(MODHEAD);                      02S1034 03372000
         LA    @05,8                                            02S1034 03373000
         SLR   @15,@15                                          02S1034 03374000
         ICM   @15,3,MODCNT(BUFAD)                              02S1034 03375000
         ALR   @05,@15                                          02S1034 03376000
         STCM  @05,7,DSTOR(BUFAD)                               02S1034 03377000
*        DATTRI = ATTCON;              /* MODULE ATTRIBUTES.         */ 03378000
         MVC   DATTRI(2,BUFAD),@CB00869                         02S1035 03379000
*        DINDCT = INDCON;              /* MODULE INDICATORS.         */ 03380000
         MVI   DINDCT(BUFAD),X'2C'                              02S1036 03381000
*/********************************************************************* 03382000
**                                                                    * 03383000
**  THIS SEGMENT WILL WRITE THE PROPER CESD RECORDS FOR OTHER         * 03384000
**  UTILITIES TO MAINTAIN THE MODULES CREATED BY THIS UTILITY.        * 03385000
**                                                                    * 03386000
**********************************************************************/ 03387000
*        IF INHIBITW = OFF             /* CHECK PERMISSION TO WRITE. */ 03388000
*          THEN                        /*                            */ 03389000
         TM    INHIBITW(BUFAD),B'01000000'                      03S1037 03390000
         BNZ   @RF01037                                         03S1037 03391000
*            DO;                       /* START WRITING CESD RECORDS.*/ 03392000
*              RESPECIFY (BUFFPTR) RESTRICTED;                  03S1039 03393000
*              BUFFPTR = ADDR(MSGSAVE);                         03S1040 03394000
         LR    BUFFPTR,BUFAD                                    03S1040 03395000
         AL    BUFFPTR,@CF01856                                 03S1040 03396000
         ST    BUFFPTR,@TF00001                                 03S1040 03397000
*              CESDID = CID;                                    03S1041 03398000
         MVI   CESDID(BUFFPTR),X'20'                            03S1041 03399000
*              CESDSP = ZERO;                                   03S1042 03400000
         SLR   @07,@07                                          03S1042 03401000
         STCM  @07,7,CESDSP(BUFFPTR)                            03S1042 03402000
*              CESDESDI = ONE;                                  03S1043 03403000
         MVC   CESDESDI(2,BUFFPTR),@CH00060                     03S1043 03404000
*              CESDCNT = LENGTH(CESDDATA);                      03S1044 03405000
         MVC   CESDCNT(2,BUFFPTR),@CH00116                      03S1044 03406000
*              CESDNAME = DNAME;                                03S1045 03407000
         MVC   CESDNAME(8,BUFFPTR),DNAME(BUFAD)                 03S1045 03408000
*              CESDTYPE = SD;                                   03S1046 03409000
         MVI   CESDTYPE(BUFFPTR),X'00'                          03S1046 03410000
*              CESDADDR = ZERO;                                 03S1047 03411000
         STCM  @07,7,CESDADDR(BUFFPTR)                          03S1047 03412000
*              CESDSEGN = ONE;                                  03S1048 03413000
         MVI   CESDSEGN(BUFFPTR),X'01'                          03S1048 03414000
*              CESDIDLN = DSTOR;                                03S1049 03415000
         STCM  @05,7,CESDIDLN(BUFFPTR)                          03S1049 03416000
*              DCBBLKSI = LENGTH(CESD);                         03S1050 03417000
         MVC   DCBBLKSI+52(2,DCBPTR),@CH00053                   03S1050 03418000
*              RESPECIFY (DB) RESTRICTED;                       03S1051 03419000
*              DB = ADDR(MSGSAVE);                              03S1052 03420000
         L     DB,@TF00001                                      03S1052 03421000
*              CALL WRITE;             /* WRITE FIRST CESD RECORD.   */ 03422000
         BAL   @14,WRITE                                        03S1053 03423000
*              IF INHIBITW = OFF       /* CHECK FOR SUCCESSFULL      */ 03424000
*                THEN                  /*  WRITE.                    */ 03425000
         TM    INHIBITW(BUFAD),B'01000000'                      03S1054 03426000
         BNZ   @RF01054                                         03S1054 03427000
*                  DO;                                          03S1055 03428000
*                    RESPECIFY (R1) RESTRICTED;                 03S1056 03429000
*                    GEN REFS(SYSUTOUT)                         03S1057 03430000
*                     (NOTE  SYSUTOUT);                         03S1057 03431000
         NOTE  SYSUTOUT                                                 03432000
*                    DTTRP = R1;                                03S1058 03433000
         STCM  R1,7,DTTRP(BUFAD)                                03S1058 03434000
*                    RESPECIFY (R1) UNRESTRICTED;               03S1059 03435000
*                    IDRID = IID;                               03S1060 03436000
         MVI   IDRID(BUFFPTR),X'80'                             03S1060 03437000
*                    IDRCNT = LENGTH(IDRZAP) + TWO;             03S1061 03438000
         MVI   IDRCNT(BUFFPTR),X'FA'                            03S1061 03439000
*                    IDRTYPE = ZAP;                             03S1062 03440000
         MVI   IDRTYPE(BUFFPTR),X'01'                           03S1062 03441000
*                    IDRZAP = IDRZAP && IDRZAP;                 03S1063 03442000
         XC    IDRZAP(248,BUFFPTR),IDRZAP(BUFFPTR)              03S1063 03443000
*                    DCBBLKSI = LENGTH(IDR);                    03S1064 03444000
         MVC   DCBBLKSI+52(2,DCBPTR),@CH01855                   03S1064 03445000
*                    CALL WRITE;       /* WRITE FIRST IDR RECORD.    */ 03446000
         BAL   @14,WRITE                                        03S1065 03447000
*                    IF INHIBITW = OFF /* CHECK FOR SUCCESSFUL       */ 03448000
*                      THEN            /*  WRITE.                    */ 03449000
         TM    INHIBITW(BUFAD),B'01000000'                      03S1066 03450000
         BNZ   @RF01066                                         03S1066 03451000
*                        DO;                                    03S1067 03452000
*                          IDRCNT = LENGTH(IDR2DATA)+TWO;       03S1068 03453000
         MVI   IDRCNT(BUFFPTR),X'11'                            03S1068 03454000
*                          IDRTYPE = LK;                        03S1069 03455000
         MVI   IDRTYPE(BUFFPTR),X'02'                           03S1069 03456000
*                          IDR2PRNM = IMAGENAM;                 03S1070 03457000
         MVI   IDR2PRNM+9(BUFFPTR),C' '                         03S1070 03458000
         MVC   IDR2PRNM(9,BUFFPTR),IMAGENAM                     03S1070 03459000
*                          IDR2PRVM = VERSION;                  03S1071 03460000
         MVC   IDR2PRVM(2,BUFFPTR),VERSION                      03S1071 03461000
*                          IDR2DATE = TODAY;                    03S1072 03462000
         MVC   IDR2DATE(3,BUFFPTR),TODAY(BUFAD)                 03S1072 03463000
*                          DCBBLKSI = LENGTH(IDRINFO)+LENGTH(IDR2DATA); 03464000
         MVC   DCBBLKSI+52(2,DCBPTR),@CH00183                   03S1073 03465000
*                          CALL WRITE; /* WRITE SECOND IDR RECORD.   */ 03466000
         BAL   @14,WRITE                                        03S1074 03467000
*                          IF INHIBITW = OFF /* CHECK FOR            */ 03468000
*                            THEN      /*  SUCCESSFUL WRITE.         */ 03469000
         TM    INHIBITW(BUFAD),B'01000000'                      03S1075 03470000
         BNZ   @RF01075                                         03S1075 03471000
*                              DO;                              03S1076 03472000
*                                IDRCNT = LENGTH(IDR3DATA)+TWO; 03S1077 03473000
         MVI   IDRCNT(BUFFPTR),X'14'                            03S1077 03474000
*                                IDRTYPE = TRAN;                03S1078 03475000
         MVI   IDRTYPE(BUFFPTR),X'84'                           03S1078 03476000
*                                IDR3ESDI = ESDID;              03S1079 03477000
         MVC   IDR3ESDI(2,BUFFPTR),@CB00709                     03S1079 03478000
*                                IDR3IND = ZERO;                03S1080 03479000
         MVI   IDR3IND(BUFFPTR),X'00'                           03S1080 03480000
*                                IDR3PRNM = IMAGENAM;           03S1081 03481000
         MVI   IDR3PRNM+9(BUFFPTR),C' '                         03S1081 03482000
         MVC   IDR3PRNM(9,BUFFPTR),IMAGENAM                     03S1081 03483000
*                                IDR3PRVM = VERSION;            03S1082 03484000
         MVC   IDR3PRVM(2,BUFFPTR),VERSION                      03S1082 03485000
*                                IDR3DATE = TODAY;              03S1083 03486000
         MVC   IDR3DATE(3,BUFFPTR),TODAY(BUFAD)                 03S1083 03487000
*                                DCBBLKSI = LENGTH(IDRINFO)     03S1084 03488000
*                                         + LENGTH(IDR3DATA);   03S1084 03489000
         MVC   DCBBLKSI+52(2,DCBPTR),@CH00358                   03S1084 03490000
*                                CALL WRITE;/* WRITE 3RD IDR RECORD. */ 03491000
         BAL   @14,WRITE                                        03S1085 03492000
*                              END;                             03S1086 03493000
*                            ELSE;     /* WRITE ERROR.               */ 03494000
@RF01075 DS    0H                                               03S1088 03495000
*                        END;                                   03S1088 03496000
*                      ELSE;           /* WRITE ERROR.               */ 03497000
@RF01066 DS    0H                                               03S1090 03498000
*                  END;                                         03S1090 03499000
*                ELSE;                 /* WRITE ERROR.               */ 03500000
@RF01054 DS    0H                                               03S1092 03501000
*            END;                                               03S1092 03502000
*          ELSE;                       /* WRITE INHIBITED.           */ 03503000
@RF01037 DS    0H                                               03S1094 03504000
*        RESPECIFY (BUFFPTR) UNRESTRICTED;                      03S1094 03505000
*        IF INHIBITW = OFF             /* CHECK FOR PERMISSION.      */ 03506000
*          THEN                        /*  TO WRITE ON LIBRARY.      */ 03507000
         TM    INHIBITW(BUFAD),B'01000000'                      02S1095 03508000
         BNZ   @RF01095                                         02S1095 03509000
*            DO;                       /* UPDATE LIBRARY.            */ 03510000
*              CALL WRBLOCK;           /* WRITE MODULE TO LIBRARY.   */ 03511000
         BAL   @14,WRBLOCK                                      02S1097 03512000
*              IF INHIBITW = OFF       /* CHECK FOR PERMISSION       */ 03513000
*                THEN                  /*  TO PROCEED.               */ 03514000
         TM    INHIBITW(BUFAD),B'01000000'                      02S1098 03515000
         BNZ   @RF01098                                         02S1098 03516000
*                  DO;                 /* UPDATE DIRECTORY.          */ 03517000
*                    RESPECIFY (RETCODE) RESTRICTED;            02S1100 03518000
*                    IF REPUSE = ON    /* CHECK FOR REPLACE OPTION.  */ 03519000
*                      THEN            /* STOW WITH REPLACE.         */ 03520000
         TM    REPUSE(BUFAD),B'10000000'                        02S1101 03521000
         BNO   @RF01101                                         02S1101 03522000
*                        GEN REFS(SYSUTOUT,DIRECTRY)            02S1102 03523000
*                         (STOW  SYSUTOUT,DIRECTRY(BUFAD),R);   02S1102 03524000
         STOW  SYSUTOUT,DIRECTRY(BUFAD),R                               03525000
*                      ELSE            /* STOW WITHOUT REPLACE.      */ 03526000
*                        GEN REFS(SYSUTOUT,DIRECTRY)            02S1103 03527000
*                         (STOW  SYSUTOUT,DIRECTRY(BUFAD),A);   02S1103 03528000
         B     @RC01101                                         02S1103 03529000
@RF01101 DS    0H                                               02S1103 03530000
         STOW  SYSUTOUT,DIRECTRY(BUFAD),A                               03531000
*/********************************************************************* 03532000
**                                                                    * 03533000
**  THIS SEGMENT WILL CAUSE THE PROPER MESSAGE TO BE PRINTED FOR THE  * 03534000
**  LAST LIBRARY UPDATE.                                              * 03535000
**                                                                    * 03536000
**********************************************************************/ 03537000
*                                                               03S1104 03538000
*        IF RETCODE = RC16             /* CHECK FOR I/O ERROR.       */ 03539000
*          THEN                        /*                            */ 03540000
@RC01101 CL    RETCODE,@CF00116                                 03S1104 03541000
         BNE   @RF01104                                         03S1104 03542000
*            DO;                       /*                            */ 03543000
*              EDITDATA(ONE)=ADDR(DCTRY);                       03S1106 03544000
         LA    @14,@CC00862                                     03S1106 03545000
         STCM  @14,7,EDITDATA(BUFAD)                            03S1106 03546000
*              EDITLEN(ONE)=LENGTH(DCTRY);                      03S1107 03547000
         MVI   EDITLEN(BUFAD),X'09'                             03S1107 03548000
*              MSGN = IEBA04I;         /* I/O ERROR MESSAGE.         */ 03549000
         MVI   MSGN(BUFAD),X'04'                                03S1108 03550000
*              RETSAVE = RC12;         /* SET RETURN CODE THIS OP.   */ 03551000
         MVI   RETSAVE(BUFAD),X'0C'                             03S1109 03552000
*              NOWRITE = ON;           /* PREVENT FUTURE WRITING.    */ 03553000
         OI    NOWRITE(BUFAD),B'00000100'                       03S1110 03554000
*            END;                      /*                            */ 03555000
*          ELSE                        /* OTHER THAN I/O ERROR.      */ 03556000
*            DO;                       /*                            */ 03557000
         B     @RC01104                                         03S1112 03558000
@RF01104 DS    0H                                               03S1113 03559000
*              EDITDATA(ONE)=ADDR(DNAME);                       03S1113 03560000
         LA    @14,DNAME(,BUFAD)                                03S1113 03561000
         STCM  @14,7,EDITDATA(BUFAD)                            03S1113 03562000
*              EDITLEN(ONE)=LENGTH(DNAME);                      03S1114 03563000
         MVI   EDITLEN(BUFAD),X'08'                             03S1114 03564000
*              IF RETCODE = ZERO       /* ZERO MEANS SUCCESS.        */ 03565000
*                THEN                  /*                            */ 03566000
         LTR   RETCODE,RETCODE                                  03S1115 03567000
         BNZ   @RF01115                                         03S1115 03568000
*                  DO;                 /*                            */ 03569000
*                    MSGN = IEBA02I;   /* LIBRARY UPDATE MESSAGE.    */ 03570000
         MVI   MSGN(BUFAD),X'02'                                03S1117 03571000
*                    IF REPUSE = ON    /* CHECK FOR REPLACE OPTION.  */ 03572000
*                      THEN            /*                            */ 03573000
         TM    REPUSE(BUFAD),B'10000000'                        03S1118 03574000
         BNO   @RF01118                                         03S1118 03575000
*                        DO;           /* EDIT MESSAGE SOMEMORE.     */ 03576000
*                          EDITDATA(TWO)=ADDR(REPL);            03S1120 03577000
         LA    @14,@CC00860                                     03S1120 03578000
         STCM  @14,7,EDITDATA+4(BUFAD)                          03S1120 03579000
*                          EDITLEN(TWO)=LENGTH(REPL);           03S1121 03580000
         MVI   EDITLEN+4(BUFAD),X'08'                           03S1121 03581000
*                        END;          /*                            */ 03582000
*                  END;                /* END RC = 0 CODE.           */ 03583000
*                ELSE                  /*                            */ 03584000
*                  IF RETCODE = RC4    /* CHECK FOR RETURN CODE 4.   */ 03585000
*                    THEN              /* MODULE ALREADY THERE.      */ 03586000
         B     @RC01115                                         03S1124 03587000
@RF01115 CL    RETCODE,@CF00050                                 03S1124 03588000
         BNE   @RF01124                                         03S1124 03589000
*                      DO;             /*                            */ 03590000
*                        MSGN=IEBA09I; /* PRINT MEMBER THERE,        */ 03591000
         MVI   MSGN(BUFAD),X'09'                                03S1126 03592000
*                        RETSAVE       /* SET RETURN CODE 8 THIS OP. */ 03593000
*                         = MAX(RETSAVE,RC8);                   03S1127 03594000
         SLR   @14,@14                                          03S1127 03595000
         IC    @14,RETSAVE(,BUFAD)                              03S1127 03596000
         LA    @06,8                                            03S1127 03597000
         CR    @14,@06                                          03S1127 03598000
         BNL   *+6                                                      03599000
         LR    @14,@06                                          03S1127 03600000
         STC   @14,RETSAVE(,BUFAD)                              03S1127 03601000
*                      END;            /*                            */ 03602000
*                    ELSE              /*                            */ 03603000
*                      IF RETCODE = RC8 /* CHECK FOR RETURN CODE = 8.*/ 03604000
*                        THEN          /* MEMBER NOT FOUND.          */ 03605000
         B     @RC01124                                         03S1129 03606000
@RF01124 CL    RETCODE,@CF00048                                 03S1129 03607000
         BNE   @RF01129                                         03S1129 03608000
*                          DO;         /* SO INDICATE.               */ 03609000
*                            MSGN = IEBA10I;/* NOT FOUND MESSAGE.    */ 03610000
         MVI   MSGN(BUFAD),X'0A'                                03S1131 03611000
*                            CALL IEBIMSGS; /* PRINT IT.             */ 03612000
         L     @15,@CV00037                                     03S1132 03613000
         BALR  @14,@15                                          03S1132 03614000
*                            EDITDATA(ONE)=ADDR(DNAME);         03S1133 03615000
         LA    @14,DNAME(,BUFAD)                                03S1133 03616000
         STCM  @14,7,EDITDATA(BUFAD)                            03S1133 03617000
*                            EDITLEN(ONE)=LENGTH(DNAME);        03S1134 03618000
         MVI   EDITLEN(BUFAD),X'08'                             03S1134 03619000
*                            MSGN = IEBA02I;/* MEMBER ADDED MESSAGE. */ 03620000
         MVI   MSGN(BUFAD),X'02'                                03S1135 03621000
*                          END;        /*                            */ 03622000
*                        ELSE          /*                            */ 03623000
*                          IF RETCODE = RC12                    03S1137 03624000
*                            THEN      /* CHECK RC = 12.             */ 03625000
         B     @RC01129                                         03S1137 03626000
@RF01129 CL    RETCODE,@CF00035                                 03S1137 03627000
         BNE   @RF01137                                         03S1137 03628000
*                              DO;     /* NO DIRECTORY SPACE.        */ 03629000
*                                MSGN = IEBA03I;                03S1139 03630000
         MVI   MSGN(BUFAD),X'03'                                03S1139 03631000
*                                RETSAVE = RC12;                03S1140 03632000
         MVI   RETSAVE(BUFAD),X'0C'                             03S1140 03633000
*                                NOWRITE = ON;/*PREVENT ANY WRITE.   */ 03634000
         OI    NOWRITE(BUFAD),B'00000100'                       03S1141 03635000
*                              END;    /* END RETURN CODE 12 CODE.   */ 03636000
*                            ELSE      /* MUST BE RETURN CODE 18.    */ 03637000
*                              DO;     /* INSUFFICIENT STOW STORAGE. */ 03638000
         B     @RC01137                                         03S1143 03639000
@RF01137 DS    0H                                               03S1144 03640000
*                                MSGN = IEBA47I;/* GET THE MESSAGE.  */ 03641000
         MVI   MSGN(BUFAD),X'2F'                                03S1144 03642000
*                                RETSAVE = RC12;/* PREVENT           */ 03643000
         MVI   RETSAVE(BUFAD),X'0C'                             03S1145 03644000
*                                NOWRITE = ON;  /*  FUTURE WRITE.    */ 03645000
         OI    NOWRITE(BUFAD),B'00000100'                       03S1146 03646000
*                              END;    /*                            */ 03647000
*              RESPECIFY (RETCODE) UNRESTRICTED;                03S1148 03648000
@RC01137 DS    0H                                               03S1148 03649000
@RC01129 DS    0H                                               03S1148 03650000
@RC01124 DS    0H                                               03S1148 03651000
@RC01115 DS    0H                                               03S1149 03652000
*            END;                      /* END STOW MESSAGE CODE.     */ 03653000
*         CALL IEBIMSGS;               /* PRINT ANY MESSAGE REQUESTED*/ 03654000
@RC01104 L     @15,@CV00037                                     03S1150 03655000
         BALR  @14,@15                                          03S1150 03656000
*/********************************************************************* 03657000
**                                                                    * 03658000
**  THIS SEGMENT WILL TEST THE NUMBER OF EXTENTS FOR THE LIBRARY      * 03659000
**  DATA SET. A MESSAGE WILL BE ISSUED IF THERE ARE MORE THAN ONE     * 03660000
**  EXTENT. THE READ LIBRARY DCB WILL BE CLOSED AND REOPENED IF       * 03661000
**  WRITING TO THE LIBRARY HAS CAUSED AN EXTENT TO BE CROSSED.        * 03662000
**                                                                    * 03663000
**********************************************************************/ 03664000
*        IF DEBNMEXT > ONE             /* CHECK FOR MULTIPLE         */ 03665000
*          THEN                        /*  EXTENTS.                  */ 03666000
         L     @06,DEBPTR+40(,DCBPTR)                           03S1151 03667000
         CLI   DEBNMEXT(@06),1                                  03S1151 03668000
         BNH   @RF01151                                         03S1151 03669000
*            DO;                       /*                            */ 03670000
*              MSGN = IEBA45I;         /* MULTIPLE EXTENT MESSAGE.   */ 03671000
         MVI   MSGN(BUFAD),X'2D'                                03S1153 03672000
*              CALL IEBIMSGS;          /* PRINT IT.                  */ 03673000
         L     @15,@CV00037                                     03S1154 03674000
         BALR  @14,@15                                          03S1154 03675000
*              RETSAVE =               /* SET RETURN CODE 4          */ 03676000
*                MAX(RETSAVE,RC4);     /*  THIS OPERATION.           */ 03677000
         SLR   @06,@06                                          03S1155 03678000
         IC    @06,RETSAVE(,BUFAD)                              03S1155 03679000
         LA    @05,4                                            03S1155 03680000
         CR    @06,@05                                          03S1155 03681000
         BNL   *+6                                                      03682000
         LR    @06,@05                                          03S1155 03683000
         STC   @06,RETSAVE(,BUFAD)                              03S1155 03684000
*              IF DEBNMEXT > LIBEXT    /* CHECK FOR CROSSED EXTENTS. */ 03685000
*                THEN                  /*                            */ 03686000
         L     @06,DEBPTR+40(,DCBPTR)                           03S1156 03687000
         CLC   DEBNMEXT(1,@06),LIBEXT(BUFAD)                    03S1156 03688000
         BNH   @RF01156                                         03S1156 03689000
*                  DO;                 /*                            */ 03690000
*                    LIBEXT = DEBNMEXT;/* SAVE NEW EXTENT NUMBER.    */ 03691000
         MVC   LIBEXT(1,BUFAD),DEBNMEXT(@06)                    03S1158 03692000
*                    GEN SETS(SYSUTIN);/* CLOSE AND REOPEN READ DCB. */ 03693000
                     CLOSE  (SYSUTIN)                                   03694000
                     OPEN (SYSUTIN,INPUT)                               03695000
*                    DCBPTR = UTINAD;  /* POINT TO READ DCB.         */ 03696000
         L     DCBPTR,UTINAD(,BUFAD)                            03S1160 03697000
*                    IF DCBOFOPN = OFF /* CHECK FOR SUCCESSFUL OPEN. */ 03698000
*                      THEN            /*                            */ 03699000
         TM    DCBOFOPN+40(DCBPTR),B'00010000'                  03S1161 03700000
         BNZ   @RF01161                                         03S1161 03701000
*                        DO;           /********** IEBA20I ***********/ 03702000
*                          MSGN = IEBA20I;        /* SYSUT1 NOT OPEN.*/ 03703000
         MVI   MSGN(BUFAD),X'14'                                03S1163 03704000
*                          EDITDATA(ONE)          /* EDIT IN         */ 03705000
*                           =ADDR(DDNAMES(THREE));/*  DDNAME.        */ 03706000
         LA    @06,DDNAMES+16(,BUFAD)                           03S1164 03707000
         STCM  @06,7,EDITDATA(BUFAD)                            03S1164 03708000
*                          EDITLEN(ONE)           /*                 */ 03709000
*                           = LENGTH(DCBDDNAM);   /*                 */ 03710000
         MVI   EDITLEN(BUFAD),X'08'                             03S1165 03711000
*                          CALL IEBIMSGS;         /* PRINT IT.       */ 03712000
         L     @15,@CV00037                                     03S1166 03713000
         BALR  @14,@15                                          03S1166 03714000
*                          RETSAVE = RC16;        /* CAUSE UTILITY   */ 03715000
         MVI   RETSAVE(BUFAD),X'10'                             03S1167 03716000
*                          ABNDFLG = ON;          /*  TO TERMINATE.  */ 03717000
         OI    ABNDFLG(BUFAD),B'10000000'                       03S1168 03718000
*                        END;          /******************************/ 03719000
*                      ELSE;           /* READ DCB OPEN SUCCESSFUL.  */ 03720000
@RF01161 DS    0H                                               03S1171 03721000
*                  END;                /*                            */ 03722000
*                ELSE;                 /* EXTENTS NOT CROSSED.       */ 03723000
@RF01156 DS    0H                                               03S1173 03724000
*            END;                      /*                            */ 03725000
*          ELSE;                       /* ONLY ONE EXTENT.           */ 03726000
@RF01151 DS    0H                                               03S1175 03727000
*                  END;                /* END STOW CODE.             */ 03728000
*                ELSE;                 /* ERROR ENTRY.               */ 03729000
@RF01098 DS    0H                                               02S1177 03730000
*            END;                      /* END LIBRARY UPDATE.        */ 03731000
*          ELSE;                       /* ENTERED WITH ERROR.        */ 03732000
@RF01095 DS    0H                                               02S1179 03733000
*                  END;                /* END LIBRARY WRITE.         */ 03734000
*                ELSE                  /* DO NO WRITING.             */ 03735000
*                  IF READMOD = OFF    /* CHECK FOR NO WRITE ANYWAY. */ 03736000
*                    THEN              /*                            */ 03737000
         B     @RC01001                                         01S1180 03738000
@RF01001 TM    READMOD(BUFAD),B'00000001'                       01S1180 03739000
         BNZ   @RF01180                                         01S1180 03740000
*                      DO;             /*                            */ 03741000
*                        MSGN=IEBA42I; /* LIBRARY NOT UPDATED.       */ 03742000
         MVI   MSGN(BUFAD),X'2A'                                01S1182 03743000
*                        CALL IEBIMSGS;/* PRINT IT.                  */ 03744000
         L     @15,@CV00037                                     01S1183 03745000
         BALR  @14,@15                                          01S1183 03746000
*                      END;            /*                            */ 03747000
*                    ELSE;             /* MUST HAVE BEEN READ ONLY.  */ 03748000
@RF01180 DS    0H                                               01S1186 03749000
*              IF INHIBITP = OFF       /* PRINTING COULD BE INHIBITED*/ 03750000
*               & PRTPTR(ACTIVOP) ^= ZERO                       01S1186 03751000
*               & (MODCNT ^= ZERO      /* CHECK FOR A MODULE.        */ 03752000
*                 | (READMOD = ON & BNAME = BIGGRAF))           01S1186 03753000
*                THEN                  /*                            */ 03754000
@RC01001 TM    INHIBITP(BUFAD),B'00010000'                      01S1186 03755000
         BNZ   @RF01186                                         01S1186 03756000
         SLR   @06,@06                                          01S1186 03757000
         IC    @06,ACTIVOP(,BUFAD)                              01S1186 03758000
         MH    @06,@CH00053                                     01S1186 03759000
         ICM   @01,7,OPTABAD(BUFAD)                             01S1186 03760000
         AL    @01,@CF01897                                     01S1186 03761000
         L     @06,PRTPTR-13(@06,@01)                           01S1186 03762000
         LA    @06,0(,@06)                                      01S1186 03763000
         LTR   @06,@06                                          01S1186 03764000
         BZ    @RF01186                                         01S1186 03765000
         ICM   @06,3,MODCNT(BUFAD)                              01S1186 03766000
         BNZ   @RT01186                                         01S1186 03767000
         TM    READMOD(BUFAD),B'00000001'                       01S1186 03768000
         BNO   @RF01186                                         01S1186 03769000
         CLC   BNAME(8,BUFAD),@CC00837                          01S1186 03770000
         BNE   @RF01186                                         01S1186 03771000
@RT01186 DS    0H                                               01S1187 03772000
*                  CALL PRTMOD;        /* FORMAT AND PRINT MODULE.   */ 03773000
         SLR   @06,@06                                          01S1187 03774000
         IC    @06,ACTIVOP(,BUFAD)                              01S1187 03775000
         MH    @06,@CH00053                                     01S1187 03776000
         ICM   @01,7,OPTABAD(BUFAD)                             01S1187 03777000
         AL    @01,@CF01897                                     01S1187 03778000
         L     @15,PRTPTR-13(@06,@01)                           01S1187 03779000
         LA    @15,0(,@15)                                      01S1187 03780000
         BALR  @14,@15                                          01S1187 03781000
*            END;                      /*                            */ 03782000
*          ELSE                        /* ENTER HERE IF NO ACTIVE OP.*/ 03783000
*            DO;                       /*                            */ 03784000
         B     @RC00934                                         01S1189 03785000
@RF00934 DS    0H                                               01S1190 03786000
*              RETSAVE                 /* RETURN CODE 8 THIS OP.     */ 03787000
*               = MAX(RETSAVE,RC8);    /*                            */ 03788000
         SLR   @06,@06                                          01S1190 03789000
         IC    @06,RETSAVE(,BUFAD)                              01S1190 03790000
         LA    @15,8                                            01S1190 03791000
         CR    @06,@15                                          01S1190 03792000
         BNL   *+6                                                      03793000
         LR    @06,@15                                          01S1190 03794000
         STC   @06,RETSAVE(,BUFAD)                              01S1190 03795000
*              MSGN = IEBA27I;         /* NO OPERATION DEFINED MSG.  */ 03796000
         MVI   MSGN(BUFAD),X'1B'                                01S1191 03797000
*              CALL IEBIMSGS;          /* PRINT IT.                  */ 03798000
         L     @15,@CV00037                                     01S1192 03799000
         BALR  @14,@15                                          01S1192 03800000
*            END;                      /*                            */ 03801000
*        ACTIVOP = ZERO;               /* ACTIVE OPERATION COMPLETE. */ 03802000
@RC00934 MVI   ACTIVOP(BUFAD),X'00'                             01S1194 03803000
*        KWDUSED = ZERO;               /* RESET KEYWORD INDICATORS.  */ 03804000
         MVI   KWDUSED(BUFAD),X'00'                             01S1195 03805000
*        STATUS2 = ZERO;               /* RESET OPERATION STATUS.    */ 03806000
         MVI   STATUS2(BUFAD),X'00'                             01S1196 03807000
*        STATUS3 = ZERO;               /* RESET SCAN STATUS.         */ 03808000
         MVI   STATUS3(BUFAD),X'00'                             01S1197 03809000
*        STATUS4 = ZERO;               /* RESET MISC. STATUS.        */ 03810000
         MVI   STATUS4(BUFAD),X'00'                             01S1198 03811000
*        IF LOADFLAG = ALBIT           /* CHECK FOR LOADED MODULE.   */ 03812000
*          THEN                        /*                            */ 03813000
         CLI   LOADFLAG(BUFAD),X'FF'                            01S1199 03814000
         BNE   @RF01199                                         01S1199 03815000
*            DO;                       /* DELETE LOADED MODULE.      */ 03816000
*              GEN REFS(LOADNAME)      /*                            */ 03817000
*               (DELETE  EPLOC=LOADNAME(BUFAD));                01S1201 03818000
         DELETE  EPLOC=LOADNAME(BUFAD)                                  03819000
*              LOADNAME = BLANK;       /* INDICATE NO LOADED MODULE. */ 03820000
         MVI   LOADNAME+1(BUFAD),C' '                           01S1202 03821000
         MVC   LOADNAME+2(6,BUFAD),LOADNAME+1(BUFAD)            01S1202 03822000
         MVI   LOADNAME(BUFAD),C' '                             01S1202 03823000
*              LOADFLAG = ZERO;        /* CLEAR LOAD FLAG.           */ 03824000
         MVI   LOADFLAG(BUFAD),X'00'                            01S1203 03825000
*            END;                      /*                            */ 03826000
*          ELSE;                       /* NO LOADED MODULE.          */ 03827000
@RF01199 DS    0H                                               01S1206 03828000
*        GEN REFS(SAVE1)               /*                            */ 03829000
*         (L  @13,SAVE1+BACK(,BUFAD)); /* RESTORE BACKWARD POINTER.  */ 03830000
         L  @13,SAVE1+BACK(,BUFAD)                                      03831000
*  END NAME;                           /* RETURN TO CALLER.          */ 03832000
@EL00009 DS    0H                                               01S1207 03833000
@EF00009 DS    0H                                               01S1207 03834000
@ER00009 LM    @14,@12,12(@13)                                  01S1207 03835000
         BR    @14                                              01S1207 03836000
         EJECT                                                          03837000
*/********************************************************************* 03838000
**                                                                    * 03839000
**  THIS ROUTINE WILL TEST THE CHARACTER GENERATION MODULE BITS,      * 03840000
**  (BITS 0 AND 1), TO INSURE THAT THERE IS A MATCHING CGM            * 03841000
**  IDENTIFICATION ORDER SPECIFIED IN THE TRAILING INFORMATION OF     * 03842000
**  THIS TRANSLATE TABLE.                                             * 03843000
**                                                                    * 03844000
**********************************************************************/ 03845000
*TABCHK:                                                        01S1208 03846000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S1208 03847000
TABCHK   STM   @14,@12,12(@13)                                  01S1208 03848000
*        GEN REFS(SAVE2);              /* USE CONVENTIONAL SAVE.     */ 03849000
         ST  @13,SAVE2+BACK(,BUFAD)    BACKWARD POINTER.                03850000
         LA  @14,SAVE2(,BUFAD)         THIS ROUTINE SAVE AREA.          03851000
         ST  @14,FORE(,@13)            FORWARD POINTER.                 03852000
         LR  @13,@14                   LINKAGE COMPLETE.                03853000
*        FMTERR = OFF;                                          01S1210 03854000
*        FMTERR1 = ON;                 /* VALID TABLE WILL RESET.    */ 03855000
         OI    FMTERR1(BUFAD),B'00000100'                       01S1211 03856000
         NI    FMTERR(BUFAD),B'11110111'                        01S1211 03857000
*        DO                            /*                            */ 03858000
*         CNT = ONE                    /* VERIFY ENTIRE TABLE.       */ 03859000
*         TO TABEND;                   /*                            */ 03860000
         LA    CNT,1                                            01S1212 03861000
@DL01212 DS    0H                                               01S1213 03862000
*          IF MODBOD(CNT) ^= ALBIT     /* IGNORE UNPRINTABLE ENTRY.  */ 03863000
*            THEN                      /*                            */ 03864000
         LR    @06,BUFAD                                        01S1213 03865000
         ALR   @06,CNT                                          01S1213 03866000
         CLI   MODBOD-1(@06),X'FF'                              01S1213 03867000
         BE    @RF01213                                         01S1213 03868000
*              DO;                     /*                            */ 03869000
*                FWORK = MODBOD(CNT);  /* GET ONE ENTRY.             */ 03870000
         SLR   @06,@06                                          01S1215 03871000
         IC    @06,MODBOD-1(CNT,BUFAD)                          01S1215 03872000
         ST    @06,FWORK(,BUFAD)                                01S1215 03873000
*                SRL(FWORK,SIX);       /* SEPARATE CGM REFERENCE BITS*/ 03874000
         L     @06,FWORK(,BUFAD)                                01S1216 03875000
         SRL   @06,6                                            01S1216 03876000
         ST    @06,FWORK(,BUFAD)                                01S1216 03877000
*                IF CGMIDN(FWORK+ONE) = ZERO                    01S1217 03878000
*                  THEN                /* CHECK MATCHING CGMID ORDER.*/ 03879000
         L     @06,FWORK(,BUFAD)                                01S1217 03880000
         ALR   @06,@06                                          01S1217 03881000
         SLR   @03,@03                                          01S1217 03882000
         IC    @03,CGMIDN(@06,BUFAD)                            01S1217 03883000
         CH    @03,@CH00462                                     01S1217 03884000
         BNE   @RF01217                                         01S1217 03885000
*                    FMTERR = ON;      /* NO CGMID - ERROR.          */ 03886000
         OI    FMTERR(BUFAD),B'00001000'                        01S1218 03887000
*                  ELSE                /* CONTINUE.                  */ 03888000
*                    FMTERR1 = OFF;    /* FOUND A PRINTABLE CHAR.    */ 03889000
         B     @RC01217                                         01S1219 03890000
@RF01217 NI    FMTERR1(BUFAD),B'11111011'                       01S1219 03891000
*              END;                    /*                            */ 03892000
*            ELSE;                     /* ENTER HERE IF UNPRINTABLE. */ 03893000
@RF01213 DS    0H                                               01S1222 03894000
*        END;                          /* END OF TABLE VERIFY.       */ 03895000
@RC01213 AH    CNT,@CH00060                                     01S1222 03896000
         CH    CNT,@CH00218                                     01S1222 03897000
         BNH   @DL01212                                         01S1222 03898000
*        IF FMTERR = ON                /* CHECK FOR ANY ERROR FOUND. */ 03899000
*         | FMTERR1 = ON               /*                            */ 03900000
*          THEN                        /*                            */ 03901000
         TM    FMTERR(BUFAD),B'00001100'                        01S1223 03902000
         BZ    @RF01223                                         01S1223 03903000
*            DO;                       /* ERROR FOUND.               */ 03904000
*              IF FMTERR = ON          /*                            */ 03905000
*                THEN                  /* NO CGMID MATCH.            */ 03906000
         TM    FMTERR(BUFAD),B'00001000'                        01S1225 03907000
         BNO   @RF01225                                         01S1225 03908000
*                  DO;                 /*                            */ 03909000
*                    MSGN = IEBA37I;   /* NO CGMID FOR THIS CHAR.    */ 03910000
         MVI   MSGN(BUFAD),X'25'                                01S1227 03911000
*                    FMTERR = OFF;     /* RESET ERROR CONDITION.     */ 03912000
         NI    FMTERR(BUFAD),B'11110111'                        01S1228 03913000
*                  END;                /*                            */ 03914000
*                ELSE                  /* NO PRINTABLE CHARACTERS.   */ 03915000
*                  DO;                 /*                            */ 03916000
         B     @RC01225                                         01S1230 03917000
@RF01225 DS    0H                                               01S1231 03918000
*                    MSGN = IEBA38I;   /* GET ERROR MESSAGE NUMBER.  */ 03919000
         MVI   MSGN(BUFAD),X'26'                                01S1231 03920000
*                    FMTERR1 = OFF;    /* RESET ERROR SWITCH.        */ 03921000
         NI    FMTERR1(BUFAD),B'11111011'                       01S1232 03922000
*                  END;                /*                            */ 03923000
*              CALL IEBIMSGS;          /* PRINT THE MESSAGE.         */ 03924000
@RC01225 L     @15,@CV00037                                     01S1234 03925000
         BALR  @14,@15                                          01S1234 03926000
*              INHIBITW = ON;          /* PROHIBIT LIBRARY UPDATE.   */ 03927000
         OI    INHIBITW(BUFAD),B'01000000'                      01S1235 03928000
*              RETSAVE = MAX(RETSAVE,RC8);/*RETURN CODE 8 THIS OP.   */ 03929000
         SLR   @06,@06                                          01S1236 03930000
         IC    @06,RETSAVE(,BUFAD)                              01S1236 03931000
         LA    @15,8                                            01S1236 03932000
         CR    @06,@15                                          01S1236 03933000
         BNL   *+6                                                      03934000
         LR    @06,@15                                          01S1236 03935000
         STC   @06,RETSAVE(,BUFAD)                              01S1236 03936000
*            END;                      /* END ERROR MESSAGE BUILD.   */ 03937000
*          ELSE;                       /* NO ERRORS.                 */ 03938000
@RF01223 DS    0H                                               01S1239 03939000
*        GEN REFS(SAVE2)               /******************************/ 03940000
*         (L  @13,SAVE2+BACK(,BUFAD)); /* RESTORE BACKWARD POINTER.  */ 03941000
         L  @13,SAVE2+BACK(,BUFAD)                                      03942000
*  END TABCHK;                         /* RETURN TO CALLER.          */ 03943000
@EL00010 DS    0H                                               01S1240 03944000
@EF00010 DS    0H                                               01S1240 03945000
@ER00010 LM    @14,@12,12(@13)                                  01S1240 03946000
         BR    @14                                              01S1240 03947000
         EJECT                                                          03948000
*/********************************************************************* 03949000
**                                                                    * 03950000
**  THIS PROCEDURE ISSUES A BLDL FOR THE MEMBER REQUESTED AND IF      * 03951000
**  THERE IS AN ERROR THE APPROPRIATE MESSAGE WILL BE PRINTED AND     * 03952000
**  READING OF THE LIBRARY WILL BE INHIBITED.                         * 03953000
**                                                                    * 03954000
**********************************************************************/ 03955000
*BLDL:                                                          01S1241 03956000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S1241 03957000
BLDL     STM   @14,@12,12(@13)                                  01S1241 03958000
*        GEN SETS(SAVE4);              /* USE CONVENTIONAL SAVE.     */ 03959000
         ST    @13,SAVE4+BACK(,BUFAD)  BACKWARD POINTER.                03960000
         LA    @14,SAVE4(,BUFAD)       THIS ROUTINE SAVE AREA.          03961000
         ST    @14,FORE(,@13)          FORWARD POINTER.                 03962000
         LR    @13,@14                 LINKAGE COMPLETE.                03963000
*        BFFLL = FFLLCON;              /* SET BLDL ENTRY NO. AND LEN.*/ 03964000
         MVC   BFFLL(4,BUFAD),FFLLCON                           01S1243 03965000
*        GEN SETS(BLDLNTRY)            /* THE LIBRARY IS NOW SEARCHED*/ 03966000
*            REFS(SYSUTIN);            /* FOR THE MEMBER REQUESTED.  */ 03967000
         BLDL  SYSUTIN,BLDLNTRY(BUFAD) ISSUE BLDL.                      03968000
*        RESPECIFY (RETCODE) RESTRICTED;                        01S1245 03969000
*        IF RETCODE ^= ZERO            /* NON ZERO RETURN CODE MEANS */ 03970000
*          THEN                        /*  ERROR IN BLDL.            */ 03971000
         LTR   RETCODE,RETCODE                                  01S1246 03972000
         BZ    @RF01246                                         01S1246 03973000
*            DO;                       /*                            */ 03974000
*              IF RETCODE = FOUR       /* WAS MEMBER FOUND?          */ 03975000
*                THEN                  /********** IEBA10I ***********/ 03976000
         CL    RETCODE,@CF00050                                 01S1248 03977000
         BNE   @RF01248                                         01S1248 03978000
*                  DO;                 /* NO.                        */ 03979000
*                    MSGN = IEBA10I;   /* MEMBER NOT FOUND.          */ 03980000
         MVI   MSGN(BUFAD),X'0A'                                01S1250 03981000
*                    EDITDATA(ONE) =   /* SET DATA ADDRESS           */ 03982000
*                     ADDR(BNAME);     /*  FOR MESSAGE.              */ 03983000
         LA    @14,BNAME(,BUFAD)                                01S1251 03984000
         STCM  @14,7,EDITDATA(BUFAD)                            01S1251 03985000
*                    EDITLEN(ONE) =    /* SET DATA LENGTH            */ 03986000
*                     LENGTH(BNAME);   /*  FOR MESSAGE.              */ 03987000
         MVI   EDITLEN(BUFAD),X'08'                             01S1252 03988000
*                    CALL IEBIMSGS;    /* GET MESSAGE                */ 03989000
         L     @15,@CV00037                                     01S1253 03990000
         BALR  @14,@15                                          01S1253 03991000
*                    RETSAVE=MAX(RETSAVE,RC4);/* RC = 4 FOR THIS BLDL*/ 03992000
         SLR   @14,@14                                          01S1254 03993000
         IC    @14,RETSAVE(,BUFAD)                              01S1254 03994000
         LA    @06,4                                            01S1254 03995000
         CR    @14,@06                                          01S1254 03996000
         BNL   *+6                                                      03997000
         LR    @14,@06                                          01S1254 03998000
         STC   @14,RETSAVE(,BUFAD)                              01S1254 03999000
*                  END;                /******************************/ 04000000
*              IF RETCODE = EIGHT      /* WAS THERE AN I/O ERROR?    */ 04001000
*                THEN                  /********** IEBA04I ***********/ 04002000
@RF01248 CL    RETCODE,@CF00048                                 01S1256 04003000
         BNE   @RF01256                                         01S1256 04004000
*                  DO;                 /* YES.                       */ 04005000
*                    MSGN = IEBA04I;   /* I/O ERROR MESSAGE.         */ 04006000
         MVI   MSGN(BUFAD),X'04'                                01S1258 04007000
*                    EDITDATA(ONE) =   /* SET DATA ADDRESS           */ 04008000
*                     ADDR(DCTRY);     /*  FOR MESSAGE.              */ 04009000
         LA    @14,@CC00862                                     01S1259 04010000
         STCM  @14,7,EDITDATA(BUFAD)                            01S1259 04011000
*                    EDITLEN(ONE) =    /* SET DATA LENGTH            */ 04012000
*                     LENGTH(DCTRY);   /*  FOR MESSAGE.              */ 04013000
         MVI   EDITLEN(BUFAD),X'09'                             01S1260 04014000
*                    CALL IEBIMSGS;    /* GET MESSAGE.               */ 04015000
         L     @15,@CV00037                                     01S1261 04016000
         BALR  @14,@15                                          01S1261 04017000
*                    RETSAVE = RC12;   /* RC = 12 FOR THIS BLDL.     */ 04018000
         MVI   RETSAVE(BUFAD),X'0C'                             01S1262 04019000
*                    ABNDFLG = ON;     /* TERMINATE UTILITY.         */ 04020000
         OI    ABNDFLG(BUFAD),B'10000000'                       01S1263 04021000
*                  END;                /******************************/ 04022000
*              INHIBIT = ONNER;        /* INHIBIT DISK ACCESS.       */ 04023000
@RF01256 OI    INHIBIT(BUFAD),B'01100000'                       01S1265 04024000
*            END;                      /*                            */ 04025000
*        RESPECIFY (RETCODE) UNRESTRICTED;                      01S1267 04026000
@RF01246 DS    0H                                               01S1268 04027000
*        GEN REFS(SAVE4)               /******************************/ 04028000
*         (L  @13,SAVE4+BACK(,BUFAD)); /* RESTORE BACKWARD POINTER.  */ 04029000
         L  @13,SAVE4+BACK(,BUFAD)                                      04030000
*  END BLDL;                           /* RETURN TO CALLER.          */ 04031000
@EL00011 DS    0H                                               01S1269 04032000
@EF00011 DS    0H                                               01S1269 04033000
@ER00011 LM    @14,@12,12(@13)                                  01S1269 04034000
         BR    @14                                              01S1269 04035000
         EJECT                                                          04036000
*/********************************************************************* 04037000
**                                                                    * 04038000
**  THIS WILL LOAD THE REQUESTED MODULE INTO STORAGE UNLESS THE       * 04039000
**  MODULE HAS BEEN PREVIOUSLY LOADED AND NOT DELETED.                * 04040000
**                                                                    * 04041000
**********************************************************************/ 04042000
*LOADLIB:                                                       01S1270 04043000
*   PROCEDURE OPTIONS(NOSAVEAREA);                              01S1270 04044000
LOADLIB  STM   @14,@12,12(@13)                                  01S1270 04045000
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */ 04046000
        ST    @13,SAVE3+BACK(,BUFAD)   BACKWARD POINTER.                04047000
        LA    @14,SAVE3(,BUFAD)        THIS ROUTINE SAVE AREA.          04048000
        ST    @14,FORE(,@13)           FORWARD POINTER                  04049000
        LR    @13,@14                  LINKAGE COMPLETE                 04050000
*        IF BNAME ^= LOADNAME          /* CHECK FOR MODULE LOADED.   */ 04051000
*          THEN                        /* NOT THIS TIME.             */ 04052000
         CLC   BNAME(8,BUFAD),LOADNAME(BUFAD)                   01S1272 04053000
         BE    @RF01272                                         01S1272 04054000
*            DO;                       /*                            */ 04055000
*              IF LOADFLAG = ALBIT     /* CHECK FOR ANY MODULE       */ 04056000
*                THEN                  /*  LOADED.                   */ 04057000
         CLI   LOADFLAG(BUFAD),X'FF'                            01S1274 04058000
         BNE   @RF01274                                         01S1274 04059000
*                  DO;                 /*                            */ 04060000
*                    GEN REFS(LOADNAME)/* DELETE THE MODULE.         */ 04061000
*                     (DELETE  EPLOC=LOADNAME(BUFAD));          01S1276 04062000
         DELETE  EPLOC=LOADNAME(BUFAD)                                  04063000
*                    LOADNAME = BLANK; /* CLEAR LOADED MODULE NAME.  */ 04064000
         MVI   LOADNAME+1(BUFAD),C' '                           01S1277 04065000
         MVC   LOADNAME+2(6,BUFAD),LOADNAME+1(BUFAD)            01S1277 04066000
         MVI   LOADNAME(BUFAD),C' '                             01S1277 04067000
*                  END;                /*                            */ 04068000
*                ELSE;                 /* NO MOD TO DELETE.          */ 04069000
@RF01274 DS    0H                                               01S1280 04070000
*              CALL BLDL;              /* FIND REQUESTED MODULE.     */ 04071000
         BAL   @14,BLDL                                         01S1280 04072000
*              IF INHIBITR = OFF       /* CHECK FOR BLDL ERROR.      */ 04073000
*                THEN                  /*                            */ 04074000
         TM    INHIBITR(BUFAD),B'00100000'                      01S1281 04075000
         BNZ   @RF01281                                         01S1281 04076000
*                  DO;                 /* NONE THIS TIME.            */ 04077000
*                    GEN REFS(BNAME)   /* LOAD REQUESTED MODULE      */ 04078000
*                     (LOAD DE=BNAME(BUFAD),DCB=SYSUTIN);       01S1283 04079000
         LOAD DE=BNAME(BUFAD),DCB=SYSUTIN                               04080000
*                    RESPECIFY (R0) RESTRICTED;                 01S1284 04081000
*                    LOADMOD = R0;     /* SAVE MODULE ADDRESS.       */ 04082000
         STCM  R0,7,LOADMOD(BUFAD)                              01S1285 04083000
*                    RESPECIFY (R0) UNRESTRICTED;               01S1286 04084000
*                    LOADNAME = BNAME; /* REMEMBER NAME.             */ 04085000
         MVC   LOADNAME(8,BUFAD),BNAME(BUFAD)                   01S1287 04086000
*                    LOADFLAG = ALBIT; /* SET LOADED SWITCH.         */ 04087000
         MVI   LOADFLAG(BUFAD),X'FF'                            01S1288 04088000
*                  END;                /*                            */ 04089000
*                ELSE                  /* ERROR IN BLDL.             */ 04090000
*                  LOADFLAG = ZERO;    /* RESET LOADED SWITCH.       */ 04091000
         B     @RC01281                                         01S1290 04092000
@RF01281 MVI   LOADFLAG(BUFAD),X'00'                            01S1290 04093000
*            END;                      /*                            */ 04094000
*          ELSE;                       /* REQUESTED MODULE IS LOADED */ 04095000
@RF01272 DS    0H                                               01S1293 04096000
*        GEN REFS(SAVE3)               /******************************/ 04097000
*         (L   @13,SAVE3+BACK(,BUFAD));/* RESTORE BACKWARD POINTER   */ 04098000
@RC01272 DS    0H                                               01S1293 04099000
         L   @13,SAVE3+BACK(,BUFAD)                                     04100000
*   END LOADLIB;                       /* RETURN TO CALLER.          */ 04101000
@EL00012 DS    0H                                               01S1294 04102000
@EF00012 DS    0H                                               01S1294 04103000
@ER00012 LM    @14,@12,12(@13)                                  01S1294 04104000
         BR    @14                                              01S1294 04105000
         EJECT                                                          04106000
*/********************************************************************* 04107000
**                                                                    * 04108000
**  THIS IS THE COMMON WRITE ROUTINE. THE DCB BLOCK SIZE MUST HAVE    * 04109000
**  BEEN FILLED WITH THE CORRECT LENGTH AND THE WORK REGISTER MUST    * 04110000
**  POINT TO THE DATA AREA FROM WHICH TO WRITE.                       * 04111000
**                                                                    * 04112000
**********************************************************************/ 04113000
*WRITE:                                                         01S1295 04114000
*  PROCEDURE OPTIONS(SAVE(R14));                                01S1295 04115000
*                                                               01S1295 04116000
WRITE    ST    @14,@SA00013                                     01S1295 04117000
*              RESPECIFY (DB) RESTRICTED;                       01S1296 04118000
*                                      /* WRITE SPECIFIED INFORMATION*/ 04119000
*              GEN REFS(SYSUTOUT,DB) FLOWS(SYNAD);              01S1297 04120000
               WRITE WDECB,SF,SYSUTOUT,(DB),'S'                         04121000
               CHECK WDECB             CHECK FOR SUCCESSFULL WRITE.     04122000
*              RESPECIFY (DB) UNRESTRICTED;                     01S1298 04123000
*  END WRITE;                          /* RETURN TO CALLER.          */ 04124000
@EL00013 DS    0H                                               01S1299 04125000
@EF00013 DS    0H                                               01S1299 04126000
@ER00013 L     @14,@SA00013                                     01S1299 04127000
         BR    @14                                              01S1299 04128000
         EJECT                                                          04129000
*/********************************************************************* 04130000
**                                                                    * 04131000
**  THIS ROUTINE WILL PRINT ALL LINES PRESENTLY IN THE MESSAGE QUEUE. * 04132000
**                                                                    * 04133000
**********************************************************************/ 04134000
*PRINTQ:                                                        01S1300 04135000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S1300 04136000
PRINTQ   STM   @14,@12,12(@13)                                  01S1300 04137000
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE      */ 04138000
         ST  @13,SAVE3+BACK(,BUFAD)    BACKWARD POINTER.                04139000
         LA  @14,SAVE3(,BUFAD)         THIS ROUTINE SAVE AREA.          04140000
         ST  @14,FORE(,@13)            FORWARD POINTER.                 04141000
         LR  @13,@14                   LINKAGE COMPLETE.                04142000
*        IF QUECTL(ONE) = SKIP         /* CHECK FOR NEW PAGE REQUEST.*/ 04143000
*          THEN                        /*                            */ 04144000
         LR    @01,BUFAD                                        01S1302 04145000
         AL    @01,@CF01856                                     01S1302 04146000
         CLI   QUECTL(@01),C'1'                                 01S1302 04147000
         BNE   @RF01302                                         01S1302 04148000
*            DO;                       /* SET PAGE NUMBER.           */ 04149000
*              FWORK = PAGE;           /* GET PAGE NUMBER FOR CONVERT*/ 04150000
         LH    @15,PAGE(,BUFAD)                                 01S1304 04151000
         ST    @15,FWORK(,BUFAD)                                01S1304 04152000
*              CALL CONVERT;           /* CONVERT TO PRINTABLE NUMBER*/ 04153000
         BAL   @14,CONVERT                                      01S1305 04154000
*              QUEPGN(ONE) = CWORK;    /* SET IN PRINT LINE.         */ 04155000
         LR    @15,BUFAD                                        01S1306 04156000
         AL    @15,@CF01856                                     01S1306 04157000
         MVC   QUEPGN(4,@15),CWORK(BUFAD)                       01S1306 04158000
*              PAGE = PAGE + ONE;      /* INCREMENT PAGE.            */ 04159000
         LA    @14,1                                            01S1307 04160000
         AH    @14,PAGE(,BUFAD)                                 01S1307 04161000
         STH   @14,PAGE(,BUFAD)                                 01S1307 04162000
*              QUEPGW(ONE) = PAGEW;    /* SET THE WORD PAGE.         */ 04163000
         MVC   QUEPGW(4,@15),@CC00849                           01S1308 04164000
*            END;                      /*                            */ 04165000
*        DO                            /* START PRINT LOOP.          */ 04166000
*         NCNT = ONE                   /* -NEXT- EQUALS NUMBER OF    */ 04167000
*         TO NEXT;                     /* LINES TO PRINT.            */ 04168000
@RF01302 LA    NCNT,1                                           01S1310 04169000
         B     @DE01310                                         01S1310 04170000
@DL01310 DS    0H                                               01S1311 04171000
*          RESPECIFY (DB) RESTRICTED;                           01S1311 04172000
*          DB = ADDR(QUEUE(NCNT));     /* GET NEXT PRINT AREA.       */ 04173000
         LR    @03,NCNT                                         01S1312 04174000
         MH    @03,@CH00190                                     01S1312 04175000
         AL    @03,@CF01883                                     01S1312 04176000
         LA    DB,QUEUE(@03,BUFAD)                              01S1312 04177000
*          GEN REFS(SYSPRINT,DB)       /*                            */ 04178000
*           (PUT  SYSPRINT,(DB));      /* PRINT THE LINE.            */ 04179000
         PUT  SYSPRINT,(DB)                                             04180000
*          RESPECIFY (DB) UNRESTRICTED;                         01S1314 04181000
*        END;                          /* END PRINT LOOP.            */ 04182000
         AH    NCNT,@CH00060                                    01S1315 04183000
@DE01310 SLR   @03,@03                                          01S1315 04184000
         ICM   @03,3,NEXT(BUFAD)                                01S1315 04185000
         CR    NCNT,@03                                         01S1315 04186000
         BNH   @DL01310                                         01S1315 04187000
*        NEXT = ZERO;                  /* RESET MESSAGE COUNTER.     */ 04188000
         SLR   @15,@15                                          01S1316 04189000
         STH   @15,NEXT(,BUFAD)                                 01S1316 04190000
*        GEN REFS(SAVE3)               /* RESTORE BACKWARD POINTER.  */ 04191000
*         (L  @13,SAVE3+BACK(,BUFAD)); /*                            */ 04192000
         L  @13,SAVE3+BACK(,BUFAD)                                      04193000
*  END PRINTQ;                         /* RETURN TO CALLER.          */ 04194000
@EL00014 DS    0H                                               01S1318 04195000
@EF00014 DS    0H                                               01S1318 04196000
@ER00014 LM    @14,@12,12(@13)                                  01S1318 04197000
         BR    @14                                              01S1318 04198000
         EJECT                                                          04199000
*/********************************************************************* 04200000
**                                                                    * 04201000
**  THIS ROUTINE WILL PRINT THE HEADING, IF THE CARD TO BE PRINTED    * 04202000
**  IS THE FIRST OF A GROUP. THE CONTROL CARD WILL ALWAYS BE PRINTED. * 04203000
**                                                                    * 04204000
**********************************************************************/ 04205000
*PRTCARD:                                                       01S1319 04206000
*  PROCEDURE OPTIONS(SAVE(R14));                                01S1319 04207000
PRTCARD  ST    @14,@SA00015                                     01S1319 04208000
*        IF ACTIVOP = ZERO             /* ZERO OPERATION MEANS       */ 04209000
*         & INCLSW = OFF               /*                            */ 04210000
*          THEN                        /* FIRST CARD OF A GROUP.     */ 04211000
         CLI   ACTIVOP(BUFAD),0                                 01S1320 04212000
         BNE   @RF01320                                         01S1320 04213000
         TM    INCLSW(BUFAD),B'00100000'                        01S1320 04214000
         BNZ   @RF01320                                         01S1320 04215000
*            DO;                       /*                            */ 04216000
*              MSG = HEADING;          /* SET HEADING TO PRINT.      */ 04217000
         MVC   MSG(121,BUFAD),HEADING                           01S1322 04218000
*              FWORK = PAGE;           /* GET PAGE NUMBER FOR CONVERT*/ 04219000
         LH    @15,PAGE(,BUFAD)                                 01S1323 04220000
         ST    @15,FWORK(,BUFAD)                                01S1323 04221000
*              CALL CONVERT;           /* CONVERT TO PRINTABLE NUMBER*/ 04222000
         BAL   @14,CONVERT                                      01S1324 04223000
*              PAGENO = CWORK;         /* SET IN PRINT LINE.         */ 04224000
         MVC   PAGENO(4,BUFAD),CWORK(BUFAD)                     01S1325 04225000
*              PAGE = PAGE + ONE;      /* INCREMENT PAGE.            */ 04226000
         LA    @15,1                                            01S1326 04227000
         AH    @15,PAGE(,BUFAD)                                 01S1326 04228000
         STH   @15,PAGE(,BUFAD)                                 01S1326 04229000
*              GEN REFS(SYSPRINT,MSG)  /* PRINT UTILITY HEADING.     */ 04230000
*               (PUT  SYSPRINT,MSG(BUFAD));                     01S1327 04231000
         PUT  SYSPRINT,MSG(BUFAD)                                       04232000
*              SPACE = DOUBL;          /* DOUBLE SPACE AFTER HEADING.*/ 04233000
         MVI   SPACE(BUFAD),C'0'                                01S1328 04234000
*            END;                      /*                            */ 04235000
*          ELSE                        /* SUBSEQUENT CARD OF GROUP.  */ 04236000
*            SPACE = SINGL;            /* SINGLE SPACE BETWEEN CARDS.*/ 04237000
         B     @RC01320                                         01S1330 04238000
@RF01320 MVI   SPACE(BUFAD),C' '                                01S1330 04239000
*        MSGTXT = PRIMCARD;            /* CARD TO PRINT AREA.        */ 04240000
@RC01320 MVI   MSGTXT+80(BUFAD),C' '                            01S1331 04241000
         MVC   MSGTXT+81(39,BUFAD),MSGTXT+80(BUFAD)             01S1331 04242000
         MVC   MSGTXT(80,BUFAD),PRIMCARD(BUFAD)                 01S1331 04243000
*        GEN REFS(SYSPRINT,MSG)        /* PRINT CONTROL CARD.        */ 04244000
*         (PUT  SYSPRINT,MSG(BUFAD));                           01S1332 04245000
         PUT  SYSPRINT,MSG(BUFAD)                                       04246000
*        COL72 = BLANK;                /* BLANK LAST COLUMN FOR SCAN.*/ 04247000
         MVI   COL72(BUFAD),C' '                                01S1333 04248000
*  END PRTCARD;                        /* RETURN TO CALLER.          */ 04249000
@EL00015 DS    0H                                               01S1334 04250000
@EF00015 DS    0H                                               01S1334 04251000
@ER00015 L     @14,@SA00015                                     01S1334 04252000
         BR    @14                                              01S1334 04253000
         EJECT                                                          04254000
*/********************************************************************* 04255000
**                                                                    * 04256000
**  THIS PROCEDURE WILL OBTAIN INFORMATION ABOUT THE INPUT/OUTPUT     * 04257000
**  ERROR THAT CAUSED THIS PROCEDURE TO BE ENTERED. THE INFORMATION   * 04258000
**  WILL BE EDITED INTO A MESSAGE AND THE MESSAGE PRINTED.            * 04259000
**                                                                    * 04260000
**********************************************************************/ 04261000
*SYNAD:                                                         01S1335 04262000
*  PROCEDURE OPTIONS(SAVE(R14));                                01S1335 04263000
SYNAD    ST    @14,@SA00016                                     01S1335 04264000
*        RESPECIFY (R1) RESTRICTED;    /*                            */ 04265000
*        DCBPTR = R1;                  /* GET THIS DCB POINTER.      */ 04266000
         LR    DCBPTR,R1                                        01S1337 04267000
*        IF DCBMRWRT = ON              /* CHECK FOR WRITE DCB.       */ 04268000
*          THEN                        /*                            */ 04269000
         TM    DCBMRWRT+40(DCBPTR),B'00100000'                  01S1338 04270000
         BNO   @RF01338                                         01S1338 04271000
*            NOWRITE = ON;             /* WRITE NO MORE.             */ 04272000
         OI    NOWRITE(BUFAD),B'00000100'                       01S1339 04273000
*            DO;                       /*                            */ 04274000
@RF01338 DS    0H                                               01S1341 04275000
*              MODHEAD = MODHEAD && MODHEAD;/* CLEAR MODULE HEADER.  */ 04276000
         XC    MODHEAD(8,BUFAD),MODHEAD(BUFAD)                  01S1341 04277000
*              INHIBITR = ON;          /* READ NO MORE.              */ 04278000
         OI    INHIBITR(BUFAD),B'00100000'                      01S1342 04279000
*            END;                      /*                            */ 04280000
*        GEN                           /* MACRO TO SUPPLY ERROR INFO */ 04281000
*         (SYNADAF ACSMETH=BPAM,PARM1=(1));                     01S1344 04282000
         SYNADAF ACSMETH=BPAM,PARM1=(1)                                 04283000
*        SYNADDR = R1;                 /* SAVE SYNADAF MSG AREA ADDR */ 04284000
         LR    SYNADDR,R1                                       01S1345 04285000
*        RESPECIFY (R1) UNRESTRICTED;  /*                            */ 04286000
*        MSGN = IEBA04I;               /***********IEBA04I************/ 04287000
         MVI   MSGN(BUFAD),X'04'                                01S1347 04288000
*        EDITDATA(TWO) = ADDR(SYNMSG); /* DATA ADDR FOR MESSAGE.     */ 04289000
         LA    @03,SYNMSG(,SYNADDR)                             01S1348 04290000
         STCM  @03,7,EDITDATA+4(BUFAD)                          01S1348 04291000
*        EDITLEN(TWO) = LENGTH(SYNMSG);/* DATA LENGTH FOR MESSAGE.   */ 04292000
         MVI   EDITLEN+4(BUFAD),X'4E'                           01S1349 04293000
*        CALL IEBIMSGS;                /* OBTAIN ERROR  MESSAGE.     */ 04294000
         L     @15,@CV00037                                     01S1350 04295000
         BALR  @14,@15                                          01S1350 04296000
*        INHIBITW = ON;                /* INHIBIT DISK WRITE.        */ 04297000
         OI    INHIBITW(BUFAD),B'01000000'                      01S1351 04298000
*        RETSAVE = RC12;               /* INDICATE RETURN CODE 12.   */ 04299000
         MVI   RETSAVE(BUFAD),X'0C'                             01S1352 04300000
*        GEN (SYNADRLS);               /* RELEASE SYNADAF BUFFER.    */ 04301000
         SYNADRLS                                                       04302000
*  END SYNAD;                          /* RETURN TO CALLER.          */ 04303000
@EL00016 DS    0H                                               01S1354 04304000
@EF00016 DS    0H                                               01S1354 04305000
@ER00016 L     @14,@SA00016                                     01S1354 04306000
         BR    @14                                              01S1354 04307000
         EJECT                                                          04308000
*/********************************************************************* 04309000
**                                                                    * 04310000
**  THIS PROCEDURE IS GIVEN CONTROL DURING OPEN PROCESSING. THE DCB   * 04311000
**  BLOCKSIZE IS CHECKED TO INSURE IT IS A MULTIPLE OF THE DCB LRECL. * 04312000
**                                                                    * 04313000
**********************************************************************/ 04314000
*BKSZCK:                                                        01S1355 04315000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S1355 04316000
BKSZCK   STM   @14,@12,12(@13)                                  01S1355 04317000
*        RESPECIFY (R1) RESTRICTED;    /*                            */ 04318000
*        DCBPTR = R1;                  /* ADDRESSABILITY TO DCB.     */ 04319000
         LR    DCBPTR,R1                                        01S1357 04320000
*        RESPECIFY (R1) UNRESTRICTED;  /*                            */ 04321000
*        IF DCBBLKSI = ZERO            /* BLOCKSIZE SHOULD NOT = 0   */ 04322000
*          | DCBBLKSI//DCBLRECL ^= ZERO /* SHOULD BE MULT OF LRECL   */ 04323000
*           THEN                       /*                            */ 04324000
         SLR   @05,@05                                          01S1359 04325000
         LH    @15,DCBBLKSI+52(,DCBPTR)                         01S1359 04326000
         CR    @15,@05                                          01S1359 04327000
         BE    @RT01359                                         01S1359 04328000
         LR    @00,@15                                          01S1359 04329000
         SRDA  @00,32                                           01S1359 04330000
         LH    @15,DCBLRECL+72(,DCBPTR)                         01S1359 04331000
         DR    @00,@15                                          01S1359 04332000
         CR    @00,@05                                          01S1359 04333000
         BE    @RF01359                                         01S1359 04334000
@RT01359 DS    0H                                               01S1360 04335000
*              DCBBLKSI = DCBLRECL;    /* REPLACE BLKSIZE WITH LRECL */ 04336000
         MVC   DCBBLKSI+52(2,DCBPTR),DCBLRECL+72(DCBPTR)        01S1360 04337000
*           ELSE;                      /* DCB IS OK, DO NOTHING.     */ 04338000
@RF01359 DS    0H                                               01S1362 04339000
*END BKSZCK;                           /* RETURN TO OPEN PROCESSOR.  */ 04340000
@EL00017 DS    0H                                               01S1362 04341000
@EF00017 DS    0H                                               01S1362 04342000
@ER00017 LM    @14,@12,12(@13)                                  01S1362 04343000
         BR    @14                                              01S1362 04344000
         EJECT                                                          04345000
*/********************************************************************* 04346000
**                                                                    * 04347000
**  THIS ROUTINE WILL SETUP THE NECESSARY FLAGS AND CONDITIONS        * 04348000
**  FOR PROPER UTILITY TERMINATION.                                   * 04349000
**                                                                    * 04350000
**********************************************************************/ 04351000
*EODAD:                                                         01S1363 04352000
*  PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);                        01S1363 04353000
EODAD    DS    0H                                               01S1364 04354000
*        EOFFLG = ON;                  /* INDICATE END OF FILE.      */ 04355000
         OI    EOFFLG(BUFAD),B'01000000'                        01S1364 04356000
*        SCANINP = OFF;                /* RESET TO EXIT SCAN.        */ 04357000
         NI    SCANINP(BUFAD),B'10111111'                       01S1365 04358000
*        PRIMCARD = BLANK;             /*                            */ 04359000
         MVI   PRIMCARD+1(BUFAD),C' '                           01S1366 04360000
         MVC   PRIMCARD+2(78,BUFAD),PRIMCARD+1(BUFAD)           01S1366 04361000
         MVI   PRIMCARD(BUFAD),C' '                             01S1366 04362000
*        SDRYCARD = BLANK;             /* INDICATE NO CARD.          */ 04363000
         MVI   SDRYCARD+1(BUFAD),C' '                           01S1367 04364000
         MVC   SDRYCARD+2(78,BUFAD),SDRYCARD+1(BUFAD)           01S1367 04365000
         MVI   SDRYCARD(BUFAD),C' '                             01S1367 04366000
*  END EODAD;                          /* RETURN TO CALLER.          */ 04367000
@EL00018 DS    0H                                               01S1368 04368000
@EF00018 DS    0H                                               01S1368 04369000
@ER00018 BR    @14                                              01S1368 04370000
         EJECT                                                          04371000
*ABEND:                                                         01S1369 04372000
*  PROCEDURE (ABPAR1,ABDCB,ABOCEWA) OPTIONS(NOSAVEAREA,NOSAVE); 01S1369 04373000
ABEND    MVC   @PC00019(12),0(@01)                              01S1369 04374000
*/********************************************************************* 04375000
**                                                                    * 04376000
**  THE FOLLOWING DESCRIBES THE PARAMETER LIST AS ACCEPTED FROM       * 04377000
**  OPEN/CLOSE/EOV ABEND PROCESSING.                                  * 04378000
**                                                                    * 04379000
**********************************************************************/ 04380000
*    DECLARE                                                    01S1370 04381000
*        ABNDSAVE(16) FIXED(32),       /* ABEND SAVE AREA.           */ 04382000
*        AWORK  PTR(31),               /* DEFINE WORK WORD AS POINTER*/ 04383000
*        1 ABPARM     BASED(AWORK),    /* PARAMETER LIST FROM FEOV   */ 04384000
*          2 SYSCODE  BIT(12),         /* SYSTEM ABEND CODE.         */ 04385000
*          2    *     BIT(4),          /*                            */ 04386000
*          2 RETCOD   FIXED(8),        /* SYSTEM RETURN CODE.        */ 04387000
*          2 OPTION   BIT(8),          /* ABEND OPTIONS.             */ 04388000
*            3   *    BIT(5),          /* UNUSED OPTIONS.            */ 04389000
*            3 IGNORE BIT(1);          /* IGNORABLE ABEND.           */ 04390000
*    DECLARE                                                    01S1371 04391000
*        ABDCB    CHAR(*),             /* ACTIVE DCB.                */ 04392000
*        1 ABOCEWA,                    /* O/C/E WORK AREA.           */ 04393000
*          2  *    CHAR(100),          /* UNREFERENCED AREA.         */ 04394000
*          2 ABDSN CHAR(44);           /* DATA SET NAME.             */ 04395000
*    DECLARE                                                    01S1372 04396000
*        S213 BIT(12) CONSTANT('213'X),/* SYSTEM 213 ABEND.          */ 04397000
*        S713 BIT(12) CONSTANT('713'X),/* SYSTEM 713 ABEND.          */ 04398000
*        SD37 BIT(12) CONSTANT('D37'X);/* SYSTEM D37 ABEND.          */ 04399000
*/********************************************************************/ 04400000
*        GEN SETS(SAVE4,ABNDSAVE);     /* USE CONVENTIONAL SAVE      */ 04401000
         STM  @00,@15,ABNDSAVE         SAVE REGISTERS DURING ABEND.     04402000
         LA  @13,SAVE4(,BUFAD)         THIS ROUTINE SAVE AREA.          04403000
*/********************************************************************* 04404000
**                                                                    * 04405000
**  THIS PROCEDURE IS GIVEN CONTROL IF AN ABEND OCCURS DURING         * 04406000
**  OPEN/CLOSE/EOV PROCESSING. FOR SYSTEM 213, 713  AND D37 ABENDS A  * 04407000
**  MESSAGE WILL BE PRINTED, THE ABEND WILL BE IGNORED AND THE        * 04408000
**  PROGRAM WILL BE TERMINATED.                                       * 04409000
**                                                                    * 04410000
**********************************************************************/ 04411000
*        RESPECIFY (R1) RESTRICTED;                             01S1374 04412000
*        AWORK = R1;                   /* GET POINTER TO ABEND CODE. */ 04413000
         LR    AWORK,R1                                         01S1375 04414000
*        RESPECIFY (R1) UNRESTRICTED;  /*                            */ 04415000
*        IF IGNORE = ON                /* IS ABEND IGNORABLE?        */ 04416000
*          THEN                        /* CHECK IF TRULY IGNORABLE.  */ 04417000
         TM    IGNORE(AWORK),B'00000100'                        01S1377 04418000
         BNO   @RF01377                                         01S1377 04419000
*            DO;                       /* START ABEND ANALYSIS.      */ 04420000
*              OPTION = ZERO;          /* RESET ALL OPTIONS.         */ 04421000
         MVI   OPTION(AWORK),X'00'                              01S1379 04422000
*              IF SYSCODE = S213       /* TEST FOR 213 ABEND         */ 04423000
*                 & RETCOD = RC4       /* WITH RETURN CODE OF FOUR.  */ 04424000
*                THEN                  /* THIS IS 213 ABEND.         */ 04425000
         MVC   @TS00001(2),SYSCODE(AWORK)                       01S1380 04426000
         NC    @TS00001(2),@CB01899                             01S1380 04427000
         CLC   @TS00001(2),@CB01901                             01S1380 04428000
         BNE   @RF01380                                         01S1380 04429000
         CLI   RETCOD(AWORK),4                                  01S1380 04430000
         BNE   @RF01380                                         01S1380 04431000
*                  DO;                 /********** IEBA19I ***********/ 04432000
*                    IGNORE = ON;      /* SET IGNORE OPTION.         */ 04433000
         OI    IGNORE(AWORK),B'00000100'                        01S1382 04434000
*                    RETSAVE = RC16;   /* CAUSE RETURN CODE 16       */ 04435000
         MVI   RETSAVE(BUFAD),X'10'                             01S1383 04436000
*                    INHIBLIB = ON;    /* PREVENT LIB ACCESS FOREVER */ 04437000
*                    ABNDFLG = ON;     /* CAUSE TERMINATION.         */ 04438000
         OI    INHIBLIB(BUFAD),B'10010000'                      01S1385 04439000
*                    MSGN = IEBA19I;   /* ABEND ERR MSG NUMBER       */ 04440000
         MVI   MSGN(BUFAD),X'13'                                01S1386 04441000
*                  END;                /******************************/ 04442000
*              IF SYSCODE = SD37       /* TEST FOR D37 ABEND         */ 04443000
*                 & RETCOD = RC4       /* WITH RETURN CODE OF FOUR.  */ 04444000
*                THEN                  /* THIS IS D37 ABEND.         */ 04445000
@RF01380 MVC   @TS00001(2),SYSCODE(AWORK)                       01S1388 04446000
         NC    @TS00001(2),@CB01899                             01S1388 04447000
         CLC   @TS00001(2),@CB01903                             01S1388 04448000
         BNE   @RF01388                                         01S1388 04449000
         CLI   RETCOD(AWORK),4                                  01S1388 04450000
         BNE   @RF01388                                         01S1388 04451000
*                  DO;                 /********** IEBA21I ***********/ 04452000
*                    IGNORE = ON;      /* SET IGNORE OPTION.         */ 04453000
         OI    IGNORE(AWORK),B'00000100'                        01S1390 04454000
*                    RETSAVE = RC12;   /* CAUSE RETURN CODE 12.      */ 04455000
         MVI   RETSAVE(BUFAD),X'0C'                             01S1391 04456000
*                    NOWRITE = ON;     /* PREVENT WRITE FOREVER.     */ 04457000
         OI    NOWRITE(BUFAD),B'00000100'                       01S1392 04458000
*                    MSGN = IEBA21I;   /* ABEND ERR MSG NUMBER.      */ 04459000
         MVI   MSGN(BUFAD),X'15'                                01S1393 04460000
*                  END;                /******************************/ 04461000
*              IF SYSCODE = S713       /* TEST FOR 713 ABEND         */ 04462000
*                 & RETCOD = RC8       /* WITH RETURN CODE OF EIGHT. */ 04463000
*                THEN                  /* THIS IS 713 ABEND.         */ 04464000
@RF01388 MVC   @TS00001(2),SYSCODE(AWORK)                       01S1395 04465000
         NC    @TS00001(2),@CB01899                             01S1395 04466000
         CLC   @TS00001(2),@CB01905                             01S1395 04467000
         BNE   @RF01395                                         01S1395 04468000
         CLI   RETCOD(AWORK),8                                  01S1395 04469000
         BNE   @RF01395                                         01S1395 04470000
*                  DO;                 /********** IEBA46I ***********/ 04471000
*                    IGNORE = ON;      /* SET IGNORE OPTION.         */ 04472000
         OI    IGNORE(AWORK),B'00000100'                        01S1397 04473000
*                    RETSAVE = RC12;   /* CAUSE RETURN CODE 12.      */ 04474000
         MVI   RETSAVE(BUFAD),X'0C'                             01S1398 04475000
*                    NOWRITE = ON;     /* PREVENT WRITE FOREVER.     */ 04476000
         OI    NOWRITE(BUFAD),B'00000100'                       01S1399 04477000
*                    MSGN = IEBA46I;   /* ABEND ERR MSG NUMBER.      */ 04478000
         MVI   MSGN(BUFAD),X'2E'                                01S1400 04479000
*                  END;                /******************************/ 04480000
*              IF IGNORE = ON          /* THIS IS A IGNORABLE ABEND. */ 04481000
*                THEN                  /*                            */ 04482000
@RF01395 TM    IGNORE(AWORK),B'00000100'                        01S1402 04483000
         BNO   @RF01402                                         01S1402 04484000
*                  DO;                 /* SET UP FOR PRINT.          */ 04485000
*                    EDITDATA(ONE) =   /* SET ADDR OF DSNAME         */ 04486000
*                     ADDR(ABDSN);     /*  FOR MESSAGE.              */ 04487000
         L     @15,@PC00019+8                                   01S1404 04488000
         LA    @15,ABDSN(,@15)                                  01S1404 04489000
         STCM  @15,7,EDITDATA(BUFAD)                            01S1404 04490000
*                    EDITLEN(ONE) =    /* SET LENGTH OF DSNAME       */ 04491000
*                     LENGTH(ABDSN);   /*  FOR MESSAGE.              */ 04492000
         MVI   EDITLEN(BUFAD),X'2C'                             01S1405 04493000
*                    CALL IEBIMSGS;    /* GET AN ERROR MESSAGE       */ 04494000
         L     @15,@CV00037                                     01S1406 04495000
         BALR  @14,@15                                          01S1406 04496000
*                    INHIBIT = ONNER;  /* INHIBIT LIB ACCESS THIS OP */ 04497000
         OI    INHIBIT(BUFAD),B'01100000'                       01S1407 04498000
*                  END;                /* END OF PRINT SETUP.        */ 04499000
*            END;                      /* END ABEND ANALYSIS.        */ 04500000
*          ELSE                        /* CANNOT IGNORE THIS ABEND   */ 04501000
*            OPTION = ZERO;            /* INDICATE CONTINE ABEND     */ 04502000
         B     @RC01377                                         01S1410 04503000
@RF01377 MVI   OPTION(AWORK),X'00'                              01S1410 04504000
*        GEN REFS(ABNDSAVE)            /******************************/ 04505000
*          (LM  @00,@15,ABNDSAVE);     /* RESTORE REGISTERS.         */ 04506000
@RC01377 DS    0H                                               01S1411 04507000
         LM  @00,@15,ABNDSAVE                                           04508000
*  END ABEND;                          /* RETURN TO O/C/EOV.         */ 04509000
@EL00019 DS    0H                                               01S1412 04510000
@EF00019 DS    0H                                               01S1412 04511000
@ER00019 BR    @14                                              01S1412 04512000
         EJECT                                                          04513000
*/********************************************************************* 04514000
**                                                                    * 04515000
**  THE FOLLOWING ROUTINE WILL CONVERT A BINARY NUMBER WHOSE DECIMAL  * 04516000
**  VALUE IS LESS THAN 9999 TO PRINTABLE FORMAT. HIGH ORDER ZEROES    * 04517000
**  WILL BE ELIMINATED.                                               * 04518000
**                                                                    * 04519000
**********************************************************************/ 04520000
*CONVERT:                                                       01S1413 04521000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S1413 04522000
CONVERT  STM   @14,@12,12(@13)                                  01S1413 04523000
*        GEN SETS(SAVE4);              /* USE CONVENTIONAL SAVE      */ 04524000
         ST  @13,SAVE4+BACK(,BUFAD)    BACKWARD POINTER.                04525000
         LA  @14,SAVE4(,BUFAD)         THIS ROUTINE SAVE AREA.          04526000
         ST  @14,FORE(,@13)            FORWARD POINTER.                 04527000
         LR  @13,@14                   LINKAGE COMPLETE.                04528000
*        CVD(FWORK,DWORK);             /* MAKE                       */ 04529000
         L     @15,FWORK(,BUFAD)                                01S1415 04530000
         CVD   @15,DWORK(,BUFAD)                                01S1415 04531000
*        UNPK(CWORK,PWORK);            /*  NUMBER                    */ 04532000
         UNPK  CWORK(4,BUFAD),PWORK(2,BUFAD)                    01S1416 04533000
*        CWORK1 = CWORK1 | MASK;       /*  PRINTABLE.                */ 04534000
         OI    CWORK1(BUFAD),C'0'                               01S1417 04535000
*        DO                            /*                            */ 04536000
*         CCNT = ONE                   /* ELIMINATE                  */ 04537000
*         TO LENGTH(CWORK)             /*  ALL                       */ 04538000
*         WHILE CWORK(CCNT) = CHAR0;   /*  HIGH ORDER                */ 04539000
         LA    CCNT,1                                           01S1418 04540000
@DL01418 LR    @03,BUFAD                                        01S1418 04541000
         ALR   @03,CCNT                                         01S1418 04542000
         CLI   CWORK-1(@03),C'0'                                01S1418 04543000
         BNE   @DC01418                                         01S1418 04544000
*          CWORK(CCNT) = BLANK;        /*  ZEROES.                   */ 04545000
         LR    @03,BUFAD                                        01S1419 04546000
         ALR   @03,CCNT                                         01S1419 04547000
         MVI   CWORK-1(@03),C' '                                01S1419 04548000
*        END;                          /*                            */ 04549000
         AH    CCNT,@CH00060                                    01S1420 04550000
         CH    CCNT,@CH00050                                    01S1420 04551000
         BNH   @DL01418                                         01S1420 04552000
@DC01418 DS    0H                                               01S1421 04553000
*        GEN REFS(SAVE4)               /******************************/ 04554000
*         (L  @13,SAVE4+BACK(,BUFAD)); /* RESTORE BACKWARD POINTER.  */ 04555000
         L  @13,SAVE4+BACK(,BUFAD)                                      04556000
*   END CONVERT;                       /* RETURN TO CALLER.          */ 04557000
@EL00020 DS    0H                                               01S1422 04558000
@EF00020 DS    0H                                               01S1422 04559000
@ER00020 LM    @14,@12,12(@13)                                  01S1422 04560000
         BR    @14                                              01S1422 04561000
         EJECT                                                          04562000
*/********************************************************************* 04563000
**                                                                    * 04564000
**  IF REQUESTED THIS SECTION WILL FORMAT AND PRINT THE FCB MODULE.   * 04565000
**                                                                    * 04566000
**********************************************************************/ 04567000
*FCBPRT:                                                        01S1423 04568000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S1423 04569000
FCBPRT   STM   @14,@12,12(@13)                                  01S1423 04570000
*        GEN REFS(SAVE2);              /* USE CONVENTIONAL SAVE.     */ 04571000
         ST  @13,SAVE2+BACK(,BUFAD)    BACKWARD POINTER.                04572000
         LA  @14,SAVE2(,BUFAD)         THIS ROUTINE SAVE AREA.          04573000
         ST  @14,FORE(,@13)            FORWARD POINTER.                 04574000
         LR  @13,@14                   LINKAGE COMPLETE.                04575000
*/********************************************************************* 04576000
**                                                                    * 04577000
**  THIS SEGMENT WILL DETERMINE THE SPACING AND THE VALIDITY OF       * 04578000
**  THE TOP AND BOTTOM MARGINS OF THE FCB IMAGE.                      * 04579000
**                                                                    * 04580000
**********************************************************************/ 04581000
*                                                               02S1425 04582000
*        CNT = ZERO;                     /* RESET            @Z48MSTT*/ 04583000
         SLR   CNT,CNT                                          02S1425 04584000
*        TOP = ZERO;                     /*  FCB LOCATION    @Z48MSTT*/ 04585000
         SLR   TOP,TOP                                          02S1426 04586000
*        XCNT = ONE;                     /* INITIALIZE LOOP  @Z48MSTT*/ 04587000
         LA    @15,1                                            02S1427 04588000
         LR    XCNT,@15                                         02S1427 04589000
*        YCNT = SIX;                     /*  CNTRL VARIABLES @Z48MSTT*/ 04590000
         LA    YCNT,6                                           02S1428 04591000
*        HCNT = ONE;                     /*  FOR TOP MARGIN. @Z48MSTT*/ 04592000
         LR    HCNT,@15                                         02S1429 04593000
*        LINE = ONE;                     /* SET FOR 1ST LOOP.@Z48MSTT*/ 04594000
         LR    LINE,@15                                         02S1430 04595000
*        DO LOOP = ONE TO TWO;           /* LOOP TOP/BOTTOM. @Z48MSTT*/ 04596000
         STH   @15,LOOP(,BUFAD)                                 02S1431 04597000
@DL01431 DS    0H                                               02S1432 04598000
*          MARGN = ZERO;                 /* RESET MARGIN.    @Z48MSTT*/ 04599000
         MVI   MARGN(BUFAD),X'00'                               02S1432 04600000
*          DO                            /* VALIDITY CHECK   @Z48MSTT*/ 04601000
*           HCNT = HCNT                  /*  AND COUNT.      @Z48MSTT*/ 04602000
*           TO YCNT                      /*  MARGIN BYTES.   @Z48MSTT*/ 04603000
*           WHILE MARGN / TWELV < ONE;   /*                  @Z48MSTT*/ 04604000
         B     @DE01433                                         02S1433 04605000
@DL01433 SLR   @15,@15                                          02S1433 04606000
         IC    @15,MARGN(,BUFAD)                                02S1433 04607000
         LR    @01,@15                                          02S1433 04608000
         SLR   @00,@00                                          02S1433 04609000
         D     @00,@CF00035                                     02S1433 04610000
         LTR   @01,@01                                          02S1433 04611000
         BP    @DC01433                                         02S1433 04612000
*            TPARTY = FCBYTE(LINE) & FZERO;/* GET HI 4 BITS  @Z48MSTT*/ 04613000
         LR    @01,BUFAD                                        02S1434 04614000
         ALR   @01,LINE                                         02S1434 04615000
         MVC   TPARTY(1,BUFAD),FCBYTE-1(@01)                    02S1434 04616000
         NI    TPARTY(BUFAD),X'F0'                              02S1434 04617000
*            IF MRG6 = TPARTY            /* CHECK FOR 6 LPI. @Z48MSTT*/ 04618000
*              THEN                      /* INCREASE MARGIN  @Z48MSTT*/ 04619000
         CLI   TPARTY(BUFAD),B'00000000'                        02S1435 04620000
         BNE   @RF01435                                         02S1435 04621000
*                MARGN = MARGN + FOUR;   /*  CNT BY 4/24.    @Z48MSTT*/ 04622000
         AL    @15,@CF00050                                     02S1436 04623000
         STC   @15,MARGN(,BUFAD)                                02S1436 04624000
*              ELSE                      /*                  @Z48MSTT*/ 04625000
*                IF MRG8 = TPARTY        /* CHECK FOR 8 LPI. @Z48MSTT*/ 04626000
*                  THEN                  /*  INCREASE MARGIN @Z48MSTT*/ 04627000
         B     @RC01435                                         02S1437 04628000
@RF01435 CLI   TPARTY(BUFAD),B'00010000'                        02S1437 04629000
         BNE   @RF01437                                         02S1437 04630000
*                    MARGN = MARGN + THREE;/* CNT BY 3/24.   @Z48MSTT*/ 04631000
         LA    @15,3                                            02S1438 04632000
         SLR   @14,@14                                          02S1438 04633000
         IC    @14,MARGN(,BUFAD)                                02S1438 04634000
         ALR   @15,@14                                          02S1438 04635000
         STC   @15,MARGN(,BUFAD)                                02S1438 04636000
*                  ELSE                  /*                  @Z48MSTT*/ 04637000
*                    DO;                 /*                  @Z48MSTT*/ 04638000
         B     @RC01437                                         02S1439 04639000
@RF01437 DS    0H                                               02S1440 04640000
*                      IF MRG12 ^= TPARTY /* CHECK FOR       @Z48MSTT*/ 04641000
*                        THEN            /* NOT 12 LPI.      @Z48MSTT*/ 04642000
         CLI   TPARTY(BUFAD),B'00110000'                        02S1440 04643000
         BE    @RF01440                                         02S1440 04644000
*                          FMTERR = ON;  /* REMEMBER ERROR.  @Z48MSTT*/ 04645000
         OI    FMTERR(BUFAD),B'00001000'                        02S1441 04646000
*                        ELSE;           /* INCREASE MARGIN  @Z48MSTT*/ 04647000
@RF01440 DS    0H                                               02S1443 04648000
*                      MARGN = MARGN + TWO;/* CNT BY 2/24.   @Z48MSTT*/ 04649000
         LA    @15,2                                            02S1443 04650000
         SLR   @14,@14                                          02S1443 04651000
         IC    @14,MARGN(,BUFAD)                                02S1443 04652000
         ALR   @15,@14                                          02S1443 04653000
         STC   @15,MARGN(,BUFAD)                                02S1443 04654000
*                    END;                /*                  @Z48MSTT*/ 04655000
*            IF ZERO ^= (FCBYTE(LINE) & CEEFF) /* CHECK FOR  @Z48MSTT*/ 04656000
*              THEN                            /*  GARBAGE   @Z48MSTT*/ 04657000
@RC01437 DS    0H                                               02S1445 04658000
@RC01435 LA    @15,207                                          02S1445 04659000
         SLR   @14,@14                                          02S1445 04660000
         IC    @14,FCBYTE-1(LINE,BUFAD)                         02S1445 04661000
         NR    @15,@14                                          02S1445 04662000
         LTR   @15,@15                                          02S1445 04663000
         BZ    @RF01445                                         02S1445 04664000
*                FMTERR = ON;                  /*  IN MARGIN @Z48MSTT*/ 04665000
         OI    FMTERR(BUFAD),B'00001000'                        02S1446 04666000
*            LINE = LINE + XCNT;         /* ADJUST LINE CNT. @Z48MSTT*/ 04667000
@RF01445 ALR   LINE,XCNT                                        02S1447 04668000
*          END;                          /* END OF MARGIN.   @Z48MSTT*/ 04669000
         AH    HCNT,@CH00060                                    02S1448 04670000
@DE01433 CR    HCNT,YCNT                                        02S1448 04671000
         BNH   @DL01433                                         02S1448 04672000
@DC01433 DS    0H                                               02S1449 04673000
*          IF MARGN//12 ^= ZERO          /* CHECK FOR        @Z48MSTT*/ 04674000
*            THEN                        /*  INVALID MARGIN. @Z48MSTT*/ 04675000
         SLR   @00,@00                                          02S1449 04676000
         IC    @00,MARGN(,BUFAD)                                02S1449 04677000
         SRDA  @00,32                                           02S1449 04678000
         D     @00,@CF00035                                     02S1449 04679000
         LTR   @00,@00                                          02S1449 04680000
         BZ    @RF01449                                         02S1449 04681000
*              FMTERR = ON;              /* REMEMBER ERROR.  @Z48MSTT*/ 04682000
         OI    FMTERR(BUFAD),B'00001000'                        02S1450 04683000
*            ELSE;                       /* HERE GOOD MARG   @Z48MSTT*/ 04684000
@RF01449 DS    0H                                               02S1452 04685000
*          IF LOOP = ONE                 /* NEED TO CHANGE   @Z48MSTT*/ 04686000
*            THEN                        /*  CNTRL VARIABLES @Z48MSTT*/ 04687000
         CLC   LOOP(2,BUFAD),@CH00060                           02S1452 04688000
         BNE   @RF01452                                         02S1452 04689000
*              DO;                       /*  FOR SECOND LOOP.@Z48MSTT*/ 04690000
*                CNT = LINE;             /* SAVE LINE COUNT  @Z48MSTT*/ 04691000
         LR    CNT,LINE                                         02S1454 04692000
*                TOP = LINE - ONE;       /*  FOR LATER USE.  @Z48MSTT*/ 04693000
         LR    TOP,LINE                                         02S1455 04694000
         BCTR  TOP,0                                            02S1455 04695000
*                HCNT = -(FCBCNT);       /* SET RANGE TO     @Z48MSTT*/ 04696000
         SLR   @15,@15                                          02S1456 04697000
         ICM   @15,3,FCBCNT(BUFAD)                              02S1456 04698000
         LCR   HCNT,@15                                         02S1456 04699000
*                YCNT = -(HCNT - SIX);   /*  VER BOTTOM MGN  @Z48MSTT*/ 04700000
         LR    YCNT,HCNT                                        02S1457 04701000
         SH    YCNT,@CH00185                                    02S1457 04702000
         LCR   YCNT,YCNT                                        02S1457 04703000
*                XCNT = -ONE;            /*  AND DECREMENT.  @Z48MSTT*/ 04704000
         SLR   XCNT,XCNT                                        02S1458 04705000
         BCTR  XCNT,0                                           02S1458 04706000
*                LINE = FCBCNT;          /* SET AT BOTTOM.   @Z48MSTT*/ 04707000
         LR    LINE,@15                                         02S1459 04708000
*              END;                      /*                  @Z48MSTT*/ 04709000
*            ELSE                        /* HERE ON 2ND LOOP.@Z48MSTT*/ 04710000
*              BOTTOM = LINE;            /* SAVE BOTTOM LINE.@Z48MSTT*/ 04711000
         B     @RC01452                                         02S1461 04712000
@RF01452 STH   LINE,BOTTOM(,BUFAD)                              02S1461 04713000
*       END;                             /*                  @Z48MSTT*/ 04714000
@RC01452 LA    @14,1                                            02S1462 04715000
         AH    @14,LOOP(,BUFAD)                                 02S1462 04716000
         ST    @15,@TF00001                                     02S1462 04717000
         LR    @15,@14                                          02S1462 04718000
         STH   @15,LOOP(,BUFAD)                                 02S1462 04719000
         CH    @15,@CH00057                                     02S1462 04720000
         BNH   @DL01431                                         02S1462 04721000
*        LPICNT = ZERO;                /* RESET LPI COUNTER.         */ 04722000
         SLR   @07,@07                                          01S1463 04723000
         ST    @07,LPICNT(,BUFAD)                               01S1463 04724000
*        FMTERR1 = ON;                 /* PRESET CH1 WARNING.@Z48MSTT*/ 04725000
         OI    FMTERR1(BUFAD),B'00000100'                       01S1464 04726000
*        DO                            /* START FCB FORMAT PRINT.    */ 04727000
*         CNT = CNT                    /*                            */ 04728000
*         TO BOTTOM;                   /* NUMBER OF LINES IN FCB.    */ 04729000
         B     @DE01465                                         01S1465 04730000
@DL01465 DS    0H                                               01S1466 04731000
*          FWORK = CNT - TOP;          /* LINE NUMBER TO PRT.@Z48MSTT*/ 04732000
         LR    @07,CNT                                          01S1466 04733000
         SLR   @07,TOP                                          01S1466 04734000
         ST    @07,FWORK(,BUFAD)                                01S1466 04735000
*          CALL CONVERT;               /* CONVERT THIS NO.   @Z48MSTT*/ 04736000
         BAL   @14,CONVERT                                      01S1467 04737000
*          XFCBLINE = CWORK3;          /* AND SAVE IN ARRAY. @Z48MSTT*/ 04738000
         LR    @07,CNT                                          01S1468 04739000
         SLA   @07,3                                            01S1468 04740000
         LA    @07,FCBARRAY+788(@07,BUFAD)                      01S1468 04741000
         MVC   XFCBLINE(3,@07),CWORK3(BUFAD)                    01S1468 04742000
*          IF FLPI(CNT) = OFF          /* CHECK FOR 6 LPI.   @Z48MSTT*/ 04743000
*            THEN                      /*                    @Z48MSTT*/ 04744000
         LR    @03,BUFAD                                        01S1469 04745000
         ALR   @03,CNT                                          01S1469 04746000
         TM    FLPI-1(@03),B'00010000'                          01S1469 04747000
         BNZ   @RF01469                                         01S1469 04748000
*              DO;                     /* YES,               @Z48MSTT*/ 04749000
*                XFCBLPI = CHAR6;      /* SET 6 IN PRT ARRAY.@Z48MSTT*/ 04750000
         MVC   XFCBLPI(2,@07),@CC00788                          01S1471 04751000
*                LPI6 = LPI6 + ONE;    /* INCR 6 LPI CNTR.   @Z48MSTT*/ 04752000
         LA    @07,1                                            01S1472 04753000
         SLR   @03,@03                                          01S1472 04754000
         IC    @03,LPI6(,BUFAD)                                 01S1472 04755000
         ALR   @07,@03                                          01S1472 04756000
         STC   @07,LPI6(,BUFAD)                                 01S1472 04757000
*                DWORK2 = MRG6;        /* MASK FOR 6 LPI.    @Z48MSTT*/ 04758000
         SLR   @07,@07                                          01S1473 04759000
         ST    @07,DWORK2(,BUFAD)                               01S1473 04760000
*              END;                    /*                    @Z48MSTT*/ 04761000
*            ELSE                      /*                    @Z48MSTT*/ 04762000
*              IF FLPI12(CNT) = ONNER  /* CHECK FOR 12 LPI.  @Z48MSTT*/ 04763000
*                THEN                  /*                    @Z48MSTT*/ 04764000
         B     @RC01469                                         01S1475 04765000
@RF01469 LR    @07,BUFAD                                        01S1475 04766000
         ALR   @07,CNT                                          01S1475 04767000
         TM    FLPI12-1(@07),B'00110000'                        01S1475 04768000
         BNO   @RF01475                                         01S1475 04769000
*                  DO;                 /*                    @Z48MSTT*/ 04770000
*                    XFCBLPI = CHAR12; /* SET 12 IN PRT ARRAY@Z48MSTT*/ 04771000
         LR    @07,CNT                                          01S1477 04772000
         SLA   @07,3                                            01S1477 04773000
         LA    @07,FCBARRAY+788(@07,BUFAD)                      01S1477 04774000
         MVC   XFCBLPI(2,@07),@CC00792                          01S1477 04775000
*                    LPI12 = LPI12+ONE;/* INCR 12 LPI CNTR.  @Z48MSTT*/ 04776000
         LA    @07,1                                            01S1478 04777000
         SLR   @03,@03                                          01S1478 04778000
         IC    @03,LPI12(,BUFAD)                                01S1478 04779000
         ALR   @07,@03                                          01S1478 04780000
         STC   @07,LPI12(,BUFAD)                                01S1478 04781000
*                    DWORK2 = MRG12;   /* MASK FOR 12 LPI.   @Z48MSTT*/ 04782000
         LA    @07,48                                           01S1479 04783000
         ST    @07,DWORK2(,BUFAD)                               01S1479 04784000
*                  END;                /*                    @Z48MSTT*/ 04785000
*                ELSE                  /* MUST BE 6 LPI.     @Z48MSTT*/ 04786000
*                  DO;                 /*                    @Z48MSTT*/ 04787000
         B     @RC01475                                         01S1481 04788000
@RF01475 DS    0H                                               01S1482 04789000
*                    XFCBLPI = CHAR8;  /* SET 8 IN PRT ARRAY.@Z48MSTT*/ 04790000
         LR    @07,CNT                                          01S1482 04791000
         SLA   @07,3                                            01S1482 04792000
         LA    @07,FCBARRAY+788(@07,BUFAD)                      01S1482 04793000
         MVC   XFCBLPI(2,@07),@CC00790                          01S1482 04794000
*                    LPI8 = LPI8 + ONE;/* INCR 8 LPI COUNTER.@Z48MSTT*/ 04795000
         LA    @07,1                                            01S1483 04796000
         SLR   @03,@03                                          01S1483 04797000
         IC    @03,LPI8(,BUFAD)                                 01S1483 04798000
         ALR   @07,@03                                          01S1483 04799000
         STC   @07,LPI8(,BUFAD)                                 01S1483 04800000
*                    DWORK2 = MRG8;    /* MASK FOR 8 LPI.    @Z48MSTT*/ 04801000
         LA    @07,16                                           01S1484 04802000
         ST    @07,DWORK2(,BUFAD)                               01S1484 04803000
*                  END;                /*                    @Z48MSTT*/ 04804000
*          DWORK2 = FCBYTE(CNT)        /* GET FCB CODE MINUS @Z48MSTT*/ 04805000
*               && DWORK2;             /*  LPI INDICATOR.    @Z48MSTT*/ 04806000
@RC01475 DS    0H                                               01S1486 04807000
@RC01469 SLR   @07,@07                                          01S1486 04808000
         IC    @07,FCBYTE-1(CNT,BUFAD)                          01S1486 04809000
         X     @07,DWORK2(,BUFAD)                               01S1486 04810000
         ST    @07,DWORK2(,BUFAD)                               01S1486 04811000
*          IF DWORK2 =< HICHAN         /* CHECK FOR MAX CHAN @Z48MSTT*/ 04812000
*            THEN                      /*  IN FCB BYTE.      @Z48MSTT*/ 04813000
         CH    @07,@CH00807                                     01S1487 04814000
         BH    @RF01487                                         01S1487 04815000
*              DO;                     /* GOOD FCB BYTE.     @Z48MSTT*/ 04816000
*                XFCBFLG = ZERO;       /* RESET ERROR FLAGS. @Z48MSTT*/ 04817000
         LR    @03,CNT                                          01S1489 04818000
         SLA   @03,3                                            01S1489 04819000
         LA    @03,FCBARRAY+788(@03,BUFAD)                      01S1489 04820000
         MVI   XFCBFLG(@03),X'00'                               01S1489 04821000
*                FWORK = DWORK2;       /* CHANNEL CODE       @Z48MSTT*/ 04822000
         ST    @07,FWORK(,BUFAD)                                01S1490 04823000
*                IF FWORK = ONE        /* CHECK FOR CHANNEL  @Z48MSTT*/ 04824000
*                  THEN                /*  ONE CODE.         @Z48MSTT*/ 04825000
         CH    @07,@CH00060                                     01S1491 04826000
         BNE   @RF01491                                         01S1491 04827000
*                    FMTERR1 = OFF;    /* RESET CH1 WARNING. @Z48MSTT*/ 04828000
         NI    FMTERR1(BUFAD),B'11111011'                       01S1492 04829000
*                  ELSE;               /*                    @Z48MSTT*/ 04830000
@RF01491 DS    0H                                               01S1494 04831000
*                CALL CONVERT;         /*  TO BE CONVERTED.  @Z48MSTT*/ 04832000
         BAL   @14,CONVERT                                      01S1494 04833000
*                XFCBCHX = CWORK2;     /* SET IN PRT ARRAY.  @Z48MSTT*/ 04834000
         LR    @07,CNT                                          01S1495 04835000
         SLA   @07,3                                            01S1495 04836000
         LA    @07,FCBARRAY+788(@07,BUFAD)                      01S1495 04837000
         MVC   XFCBCHX(2,@07),CWORK2(BUFAD)                     01S1495 04838000
*              END;                    /*                    @Z48MSTT*/ 04839000
*            ELSE                      /* MUST BE INVALID.   @Z48MSTT*/ 04840000
*              DO;                     /*                    @Z48MSTT*/ 04841000
         B     @RC01487                                         01S1497 04842000
@RF01487 DS    0H                                               01S1498 04843000
*                RETSAVE =             /* SET RETURN CODE 4, @Z48MSTT*/ 04844000
*                 MAX(RETSAVE,RC4);    /*                    @Z48MSTT*/ 04845000
         SLR   @07,@07                                          01S1498 04846000
         IC    @07,RETSAVE(,BUFAD)                              01S1498 04847000
         LA    @03,4                                            01S1498 04848000
         CR    @07,@03                                          01S1498 04849000
         BNL   *+6                                                      04850000
         LR    @07,@03                                          01S1498 04851000
         STC   @07,RETSAVE(,BUFAD)                              01S1498 04852000
*                PWORK1 = FCBYTE(CNT); /* GET INVALID BYTE.  @Z48MSTT*/ 04853000
         LR    @07,BUFAD                                        01S1499 04854000
         ALR   @07,CNT                                          01S1499 04855000
         MVC   PWORK1(1,BUFAD),FCBYTE-1(@07)                    01S1499 04856000
*                XFCBERR = ON;         /* FLAG THIS ELEMENT. @Z48MSTT*/ 04857000
         LR    @07,CNT                                          01S1500 04858000
         SLA   @07,3                                            01S1500 04859000
         LA    @07,FCBARRAY+788(@07,BUFAD)                      01S1500 04860000
         OI    XFCBERR(@07),B'10000000'                         01S1500 04861000
*                UNPK(CWORK3,PWORK);   /* SPREAD HEX NO.     @Z48MSTT*/ 04862000
         UNPK  CWORK3(3,BUFAD),PWORK(2,BUFAD)                   01S1501 04863000
*                INHIBITW = ON;        /* PREVENT LIB WRITE. @Z48MSTT*/ 04864000
         OI    INHIBITW(BUFAD),B'01000000'                      01S1502 04865000
*                XFCBCHX = CWORK3 & MAS0F;/* MAKE THIS BYTE  @Z48MSTT*/ 04866000
         MVC   XFCBCHX(2,@07),CWORK3(BUFAD)                     01S1503 04867000
         NC    XFCBCHX(2,@07),@CB00799                          01S1503 04868000
*                TR(XFCBCHX,TRTAB);    /* PRINT HEX VALUE.   @Z48MSTT*/ 04869000
         TR    XFCBCHX(2,@07),TRTAB                             01S1504 04870000
*              END;                    /*                    @Z48MSTT*/ 04871000
*        END;                          /* END OF FCB ARRAY.  @Z48MSTT*/ 04872000
@RC01487 AH    CNT,@CH00060                                     01S1506 04873000
@DE01465 CH    CNT,BOTTOM(,BUFAD)                               01S1506 04874000
         BNH   @DL01465                                         01S1506 04875000
*        XFCBEND = ON;                 /* SET FCB END FLAG.  @Z48MSTT*/ 04876000
         LR    @07,CNT                                          01S1507 04877000
         SLA   @07,3                                            01S1507 04878000
         LA    @07,FCBARRAY+788(@07,BUFAD)                      01S1507 04879000
         OI    XFCBEND(@07),B'01000000'                         01S1507 04880000
*        IF INHIBITW = OFF             /* COULD HAVE PRINTED ERRORS  */ 04881000
*         | NOKEY = ON                 /*                            */ 04882000
*          THEN                        /*  ALREADY.                  */ 04883000
         TM    INHIBITW(BUFAD),B'01000000'                      01S1508 04884000
         BZ    @RT01508                                         01S1508 04885000
         TM    NOKEY(BUFAD),B'01000000'                         01S1508 04886000
         BNO   @RF01508                                         01S1508 04887000
@RT01508 DS    0H                                               01S1509 04888000
*/********************************************************************* 04889000
**                                                                    * 04890000
**  THIS SEGMENT WILL CHECK THE FCB IMAGE FOR CORRECT BOUNDARY        * 04891000
**  ALIGNMENT.                                                        * 04892000
**                                                                    * 04893000
**********************************************************************/ 04894000
*                                                               02S1509 04895000
*        DO;                           /*                            */ 04896000
*          IF FMTERR = OFF             /* CHECK FOR MARGIN ERROR.    */ 04897000
*           | (LPI8 * THREE            /* CHECK FOR VALID    @Z48MSTT*/ 04898000
*             + LPI6 * FOUR            /*  HALF INCH         @Z48MSTT*/ 04899000
*             + LPI12 * TWO) // TWELV  /*   BOUNDARIES.      @Z48MSTT*/ 04900000
*             = ZERO                   /*                    @Z48MSTT*/ 04901000
*            THEN                      /*                    @Z48MSTT*/ 04902000
         TM    FMTERR(BUFAD),B'00001000'                        02S1510 04903000
         BZ    @RT01510                                         02S1510 04904000
         SLR   @00,@00                                          02S1510 04905000
         IC    @00,LPI8(,BUFAD)                                 02S1510 04906000
         MH    @00,@CH00111                                     02S1510 04907000
         SLR   @07,@07                                          02S1510 04908000
         IC    @07,LPI6(,BUFAD)                                 02S1510 04909000
         SLA   @07,2                                            02S1510 04910000
         ALR   @00,@07                                          02S1510 04911000
         SLR   @07,@07                                          02S1510 04912000
         IC    @07,LPI12(,BUFAD)                                02S1510 04913000
         ALR   @07,@07                                          02S1510 04914000
         ALR   @00,@07                                          02S1510 04915000
         SRDA  @00,32                                           02S1510 04916000
         D     @00,@CF00035                                     02S1510 04917000
         LTR   @00,@00                                          02S1510 04918000
         BNZ   @RF01510                                         02S1510 04919000
@RT01510 DS    0H                                               02S1511 04920000
*              DO;                     /* DETERMINE SIZE OF FORM.    */ 04921000
*                FWORK =((((MARGINS + LPI6) * FOUR)        /*@Z48MSTT*/ 04922000
*                              +       /* CHANGE TO TENTHS   @Z48MSTT*/ 04923000
*                         (LPI8 * THREE)                   /*@Z48MSTT*/ 04924000
*                              +       /*   OF INCHES.       @Z48MSTT*/ 04925000
*                         (LPI12 * TWO))*TEN) / TWNTY4;    /*@Z48MSTT*/ 04926000
         LA    @00,6                                            02S1512 04927000
         SLR   @07,@07                                          02S1512 04928000
         IC    @07,LPI6(,BUFAD)                                 02S1512 04929000
         ALR   @00,@07                                          02S1512 04930000
         SLA   @00,2                                            02S1512 04931000
         SLR   @07,@07                                          02S1512 04932000
         IC    @07,LPI8(,BUFAD)                                 02S1512 04933000
         MH    @07,@CH00111                                     02S1512 04934000
         ALR   @00,@07                                          02S1512 04935000
         SLR   @07,@07                                          02S1512 04936000
         IC    @07,LPI12(,BUFAD)                                02S1512 04937000
         ALR   @07,@07                                          02S1512 04938000
         ALR   @00,@07                                          02S1512 04939000
         LR    @03,@00                                          02S1512 04940000
         M     @02,@CF00033                                     02S1512 04941000
         D     @02,@CF00053                                     02S1512 04942000
         ST    @03,FWORK(,BUFAD)                                02S1512 04943000
*                                      /*                    @Z48MSTT*/ 04944000
*                CALL CONVERT;         /* HEX TO DECIMAL.    @Z48MSTT*/ 04945000
         BAL   @14,CONVERT                                      02S1513 04946000
*                                      /* EXPAND FOR DECIMAL POINT.  */ 04947000
*                UWORK = CWORK(TWO:THREE);                      02S1514 04948000
         MVC   @TS00001(2),CWORK+1(BUFAD)                       02S1514 04949000
         MVC   UWORK(2,BUFAD),@TS00001                          02S1514 04950000
*                CWORK(THREE) = PERIOD;/* INSERT DECIMAL POINT.      */ 04951000
         MVI   CWORK+2(BUFAD),C'.'                              02S1515 04952000
*                                      /* ADDR OF SIZE VAL FOR EDIT. */ 04953000
*                EDITDATA(ONE) = ADDR(CWORK);                   02S1516 04954000
         LA    @07,CWORK(,BUFAD)                                02S1516 04955000
         STCM  @07,7,EDITDATA(BUFAD)                            02S1516 04956000
*                                      /* SET LENGTH TO EDIT.        */ 04957000
*                EDITLEN(ONE) = LENGTH(CWORK);                  02S1517 04958000
         MVI   EDITLEN(BUFAD),X'04'                             02S1517 04959000
*                MSGN = IEBA32I;       /* FORM SIZE MESSAGE.         */ 04960000
         MVI   MSGN(BUFAD),X'20'                                02S1518 04961000
*              END;                    /* END MESSAGE BUILD.         */ 04962000
*            ELSE                      /* BOUNDARY ERROR.            */ 04963000
*              DO;                     /*                            */ 04964000
         B     @RC01510                                         02S1520 04965000
@RF01510 DS    0H                                               02S1521 04966000
*                MSGN = IEBA11I;       /* SET BDY ERROR MESSAGE.     */ 04967000
         MVI   MSGN(BUFAD),X'0B'                                02S1521 04968000
*                RETSAVE =             /* SET RETURN CODE 4 THIS     */ 04969000
*                 MAX(RETSAVE,RC4);    /*  OPERATION.                */ 04970000
         SLR   @07,@07                                          02S1522 04971000
         IC    @07,RETSAVE(,BUFAD)                              02S1522 04972000
         LA    @00,4                                            02S1522 04973000
         CR    @07,@00                                          02S1522 04974000
         BNL   *+6                                                      04975000
         LR    @07,@00                                          02S1522 04976000
         STC   @07,RETSAVE(,BUFAD)                              02S1522 04977000
*                 FMTERR = OFF;        /* RESET ERROR SWITCH.        */ 04978000
         NI    FMTERR(BUFAD),B'11110111'                        02S1523 04979000
*              END;                    /*                            */ 04980000
*          CALL IEBIMSGS;              /* PRINT A MESSAGE.           */ 04981000
@RC01510 L     @15,@CV00037                                     02S1525 04982000
         BALR  @14,@15                                          02S1525 04983000
*        END;                          /*                            */ 04984000
*        IF FMTERR1 = ON               /* CHECK FOR CH1      @Z48MSTT*/ 04985000
*          THEN                        /*  WARNING.          @Z48MSTT*/ 04986000
@RF01508 TM    FMTERR1(BUFAD),B'00000100'                       01S1527 04987000
         BNO   @RF01527                                         01S1527 04988000
*            DO;                       /* SELECT WARNING MSG.@Z48MSTT*/ 04989000
*              MSGN = IEBA49I;         /*******IEBA49I*******@Z48MSTT*/ 04990000
         MVI   MSGN(BUFAD),X'31'                                01S1529 04991000
*              CALL IEBIMSGS;          /* PRINT THE MESSAGE. @Z48MSTT*/ 04992000
         L     @15,@CV00037                                     01S1530 04993000
         BALR  @14,@15                                          01S1530 04994000
*              RETSAVE =               /* SET RETURN CODE    @Z48MSTT*/ 04995000
*               MAX(RETSAVE,RC4);      /*  FOR WARNING.      @Z48MSTT*/ 04996000
         SLR   @07,@07                                          01S1531 04997000
         IC    @07,RETSAVE(,BUFAD)                              01S1531 04998000
         LA    @00,4                                            01S1531 04999000
         CR    @07,@00                                          01S1531 05000000
         BNL   *+6                                                      05001000
         LR    @07,@00                                          01S1531 05002000
         STC   @07,RETSAVE(,BUFAD)                              01S1531 05003000
*            END;                      /*                    @Z48MSTT*/ 05004000
*          ELSE;                       /* NO WARNING NEEDED. @Z48MSTT*/ 05005000
@RF01527 DS    0H                                               01S1534 05006000
*/********************************************************************* 05007000
**                                                                    * 05008000
**  THIS SEGMENT WILL PRINT THE FCB USING THE INFORMATION IN THE FCB  * 05009000
**  ARRAY. THE FORMAT OF EACH ELEMENT OF THE ARRAY IS AS FOLLOWS..    * 05010000
**                                                                    * 05011000
**       BYTE 1    XFCBFLG  - ERROR AND END FLAGS                     * 05012000
**       BYTE 2-4  XFCBLINE - LINE NUMBERS CHARACTERS                 * 05013000
**       BYTE 5,6  XFCBLPI  - LINE PER INCH CHARACTERS                * 05014000
**       BYTE 7,8  XFCBCHX  - CHANNEL CODE OR INVALID BYTE CHARACTERS * 05015000
**                                                                    * 05016000
**********************************************************************/ 05017000
*                                                               02S1534 05018000
*         NEXT = ONE;                   /* INIT PRT Q COUNT. @Z48MSTT*/ 05019000
         LA    @07,1                                            02S1534 05020000
         STH   @07,NEXT(,BUFAD)                                 02S1534 05021000
*         CONTROL = SKIP;               /* SKIP TO NEW PAGE. @Z48MSTT*/ 05022000
         LR    @15,@07                                          02S1535 05023000
         MH    @15,@CH00190                                     02S1535 05024000
         AL    @15,@CF01883                                     02S1535 05025000
         LA    @15,MSGSAVE-10648(@15,BUFAD)                     02S1535 05026000
         MVI   CONTROL(@15),C'1'                                02S1535 05027000
*         DO                            /* STEP THROUGH EACH @Z48MSTT*/ 05028000
*          CNT = TOP + ONE              /*  ELEMENT OF THE   @Z48MSTT*/ 05029000
*          TO BOTTOM                    /*   FCB             @Z48MSTT*/ 05030000
*          WHILE XFCBEND = OFF;         /*   ARRAY.          @Z48MSTT*/ 05031000
         ALR   @07,TOP                                          02S1536 05032000
         LR    CNT,@07                                          02S1536 05033000
         B     @DE01536                                         02S1536 05034000
@DL01536 LR    @07,CNT                                          02S1536 05035000
         SLA   @07,3                                            02S1536 05036000
         LA    @07,FCBARRAY+788(@07,BUFAD)                      02S1536 05037000
         TM    XFCBEND(@07),B'01000000'                         02S1536 05038000
         BNZ   @DC01536                                         02S1536 05039000
*           PRTFCB = FCBPRL;            /* SET PRINT INFO    @Z48MSTT*/ 05040000
         SLR   @03,@03                                          02S1537 05041000
         ICM   @03,3,NEXT(BUFAD)                                02S1537 05042000
         MH    @03,@CH00190                                     02S1537 05043000
         AL    @03,@CF01883                                     02S1537 05044000
         LA    @03,MSGSAVE-10648(@03,BUFAD)                     02S1537 05045000
         MVI   PRTFCB+44(@03),C' '                              02S1537 05046000
         MVC   PRTFCB+45(75,@03),PRTFCB+44(@03)                 02S1537 05047000
         MVC   PRTFCB(44,@03),FCBPRL                            02S1537 05048000
*           FCBLN = XFCBLINE;           /*  AND LINE NUMBER. @Z48MSTT*/ 05049000
         MVC   FCBLN(3,@03),XFCBLINE(@07)                       02S1538 05050000
*           IF XFCBERR = ON             /* CHECK FOR FCB BYTE@Z48MSTT*/ 05051000
*             THEN                      /*  ERROR.           @Z48MSTT*/ 05052000
         TM    XFCBERR(@07),B'10000000'                         02S1539 05053000
         BNO   @RF01539                                         02S1539 05054000
*               DO;                     /* SET INVALID INFO  @Z48MSTT*/ 05055000
*                 FCBCH = FCBINV;       /*  IN PRINT LINE    @Z48MSTT*/ 05056000
         MVC   FCBCH(23,@03),FCBINV                             02S1541 05057000
*                 FCBCN = XFCBCHX;      /*  WITH INVALID BYTE@Z48MSTT*/ 05058000
         MVC   FCBCN(2,@03),XFCBCHX(@07)                        02S1542 05059000
*               END;                    /*                   @Z48MSTT*/ 05060000
*             ELSE                      /* NO ERROR HERE.    @Z48MSTT*/ 05061000
*               DO;                     /*                   @Z48MSTT*/ 05062000
         B     @RC01539                                         02S1544 05063000
@RF01539 DS    0H                                               02S1545 05064000
*                 FCBLPI = XFCBLPI;     /* SET LPI CHARACTERS@Z48MSTT*/ 05065000
         SLR   @07,@07                                          02S1545 05066000
         ICM   @07,3,NEXT(BUFAD)                                02S1545 05067000
         MH    @07,@CH00190                                     02S1545 05068000
         AL    @07,@CF01883                                     02S1545 05069000
         LA    @07,MSGSAVE-10648(@07,BUFAD)                     02S1545 05070000
         LR    @03,CNT                                          02S1545 05071000
         SLA   @03,3                                            02S1545 05072000
         LA    @03,FCBARRAY+788(@03,BUFAD)                      02S1545 05073000
         MVC   FCBLPI(2,@07),XFCBLPI(@03)                       02S1545 05074000
*                 IF XFCBCH ^= BLANK    /* CHECK FOR CHANNEL @Z48MSTT*/ 05075000
*                   THEN                /*  CODE THIS LINE.  @Z48MSTT*/ 05076000
         CLI   XFCBCH(@03),C' '                                 02S1546 05077000
         BE    @RF01546                                         02S1546 05078000
*                     DO;               /* SET CHANNEL CODE  @Z48MSTT*/ 05079000
*                       FCBCH = FCBCHL; /*  INFO IN PRINT    @Z48MSTT*/ 05080000
         MVC   FCBCH(23,@07),FCBCHL                             02S1548 05081000
*                       FCBCN = XFCBCHX;/*  LINE WITH CODE.  @Z48MSTT*/ 05082000
         MVC   FCBCN(2,@07),XFCBCHX(@03)                        02S1549 05083000
*                     END;              /*                   @Z48MSTT*/ 05084000
*                   ELSE;               /* NO CHANNEL CODE.  @Z48MSTT*/ 05085000
@RF01546 DS    0H                                               02S1552 05086000
*               END;                    /*                   @Z48MSTT*/ 05087000
*           IF NEXT = PGFUL             /* CHECK FOR PRINT   @Z48MSTT*/ 05088000
*             THEN                      /*  QUEUE PAGE FULL. @Z48MSTT*/ 05089000
@RC01539 CLC   NEXT(2,BUFAD),@CH00746                           02S1553 05090000
         BNE   @RF01553                                         02S1553 05091000
*               CALL PRINTQ;            /* PRINT A PAGE.     @Z48MSTT*/ 05092000
         BAL   @14,PRINTQ                                       02S1554 05093000
*             ELSE;                     /* CONTINUE.         @Z48MSTT*/ 05094000
@RF01553 DS    0H                                               02S1556 05095000
*           NEXT = NEXT + ONE;          /* INCR PRT Q COUNT. @Z48MSTT*/ 05096000
         LA    @07,1                                            02S1556 05097000
         SLR   @03,@03                                          02S1556 05098000
         ICM   @03,3,NEXT(BUFAD)                                02S1556 05099000
         ALR   @07,@03                                          02S1556 05100000
         STH   @07,NEXT(,BUFAD)                                 02S1556 05101000
*           CONTROL = SPACE;            /* SPACE REST OF LINE@Z48MSTT*/ 05102000
         MH    @07,@CH00190                                     02S1557 05103000
         AL    @07,@CF01883                                     02S1557 05104000
         LA    @07,MSGSAVE-10648(@07,BUFAD)                     02S1557 05105000
         MVC   CONTROL(1,@07),SPACE(BUFAD)                      02S1557 05106000
*        END;                           /* END OF PRINT LOOP.@Z48MSTT*/ 05107000
         AH    CNT,@CH00060                                     02S1558 05108000
@DE01536 CH    CNT,BOTTOM(,BUFAD)                               02S1558 05109000
         BNH   @DL01536                                         02S1558 05110000
@DC01536 DS    0H                                               02S1559 05111000
*        NEXT = NEXT - ONE;             /* ALWAYS GOES TO FAR@Z48MSTT*/ 05112000
         SLR   @00,@00                                          02S1559 05113000
         ICM   @00,3,NEXT(BUFAD)                                02S1559 05114000
         BCTR  @00,0                                            02S1559 05115000
         STH   @00,NEXT(,BUFAD)                                 02S1559 05116000
*        IF NEXT ^= ZERO                /* CHECK FOR FCB PRT @Z48MSTT*/ 05117000
*          THEN                         /*  COMPLETE.        @Z48MSTT*/ 05118000
         LTR   @00,@00                                          02S1560 05119000
         BZ    @RF01560                                         02S1560 05120000
*            CALL PRINTQ;               /*  PORTION OF FCB.  @Z48MSTT*/ 05121000
         BAL   @14,PRINTQ                                       02S1561 05122000
*          ELSE;                        /*                   @Z48MSTT*/ 05123000
@RF01560 DS    0H                                               02S1563 05124000
*        GEN REFS(SAVE2)               /* RESTORE BACKWARD POINTER   */ 05125000
*         (L  @13,SAVE2+BACK(,BUFAD)); /*                            */ 05126000
         L  @13,SAVE2+BACK(,BUFAD)                                      05127000
*  END FCBPRT;                         /* RETURN TO CALLER.          */ 05128000
@EL00021 DS    0H                                               01S1564 05129000
@EF00021 DS    0H                                               01S1564 05130000
@ER00021 LM    @14,@12,12(@13)                                  01S1564 05131000
         BR    @14                                              01S1564 05132000
         EJECT                                                          05133000
*/********************************************************************* 05134000
**                                                                    * 05135000
**  THIS ROUTINE WILL PRINT A COPY MODIFICATION MODULE.               * 05136000
**                                                                    * 05137000
**********************************************************************/ 05138000
*COPYPRT:                                                       01S1565 05139000
*   PROCEDURE OPTIONS(NOSAVEAREA);                              01S1565 05140000
COPYPRT  STM   @14,@12,12(@13)                                  01S1565 05141000
*        RESPECIFY (BUFFPTR) RESTRICTED;                        01S1566 05142000
*        GEN REFS(SAVE2);              /* USE CONVENTIONAL SAVE.     */ 05143000
         ST  @13,SAVE2+BACK(,BUFAD)    BACKWARD POINTER.                05144000
         LA  @14,SAVE2(,BUFAD)         THIS ROUTINE SAVE AREA.          05145000
         ST  @14,FORE(,@13)            FORWARD POINTER.                 05146000
         LR  @13,@14                   LINKAGE COMPLETE.                05147000
*        SEGCNT = ZERO;                /* RESET SEGMENT COUNT.       */ 05148000
         SLR   @07,@07                                          01S1568 05149000
         STH   @07,SEGCNT(,BUFAD)                               01S1568 05150000
*        BUFFPTR = ADDR(MODBOD);       /* INITIALIZE SEGMENT POINTER */ 05151000
         LA    BUFFPTR,MODBOD(,BUFAD)                           01S1569 05152000
*        DO                            /* START COPY MOD PRINT.      */ 05153000
*         WHILE CMODCNT > ZERO;        /* PRINT THE WHOLE MODULE.    */ 05154000
         B     @DE01570                                         01S1570 05155000
@DL01570 DS    0H                                               01S1571 05156000
*          NEXT = ONE;                 /* INITIALIZE PRINT QUEUE CTR.*/ 05157000
         LA    @07,1                                            01S1571 05158000
         STH   @07,NEXT(,BUFAD)                                 01S1571 05159000
*          PRTQELEM = SKIP;            /* SKIP TO NEW PAGE.          */ 05160000
         LA    @15,121                                          01S1572 05161000
         LR    @03,@07                                          01S1572 05162000
         MR    @02,@15                                          01S1572 05163000
         AL    @03,@CF01883                                     01S1572 05164000
         LA    @14,MSGSAVE-10648(@03,BUFAD)                     01S1572 05165000
         MVI   PRTQELEM+1(@14),C' '                             01S1572 05166000
         MVC   PRTQELEM+2(119,@14),PRTQELEM+1(@14)              01S1572 05167000
         MVI   PRTQELEM(@14),C'1'                               01S1572 05168000
*          TBN = BNAME;                /* SET MODULE NAME            */ 05169000
         MVC   TBN(8,@14),BNAME(BUFAD)                          01S1573 05170000
*          NEXT = NEXT + ONE;          /* INCREMENT QUEUE.           */ 05171000
         LR    @14,@07                                          01S1574 05172000
         ALR   @14,@07                                          01S1574 05173000
         STH   @14,NEXT(,BUFAD)                                 01S1574 05174000
*          CONTROL = DOUBL;            /* DOUBLE SPACE.              */ 05175000
         LR    @03,@14                                          01S1575 05176000
         MR    @02,@15                                          01S1575 05177000
         AL    @03,@CF01883                                     01S1575 05178000
         LA    @05,MSGSAVE-10648(@03,BUFAD)                     01S1575 05179000
         MVI   CONTROL(@05),C'0'                                01S1575 05180000
*          PRTQUEUE = COPYHD1;         /* SET COPY HEADER LINE ONE.  */ 05181000
         MVI   PRTQUEUE+90(@05),C' '                            01S1576 05182000
         MVC   PRTQUEUE+91(29,@05),PRTQUEUE+90(@05)             01S1576 05183000
         MVC   PRTQUEUE(90,@05),COPYHD1                         01S1576 05184000
*          NEXT = NEXT + ONE;          /* INCREMENT QUEUE            */ 05185000
         ALR   @14,@07                                          01S1577 05186000
         STH   @14,NEXT(,BUFAD)                                 01S1577 05187000
*          CONTROL = SINGL;            /* SINGLE SPACE.              */ 05188000
         MR    @14,@14                                          01S1578 05189000
         AL    @15,@CF01883                                     01S1578 05190000
         LA    @15,MSGSAVE-10648(@15,BUFAD)                     01S1578 05191000
         MVI   CONTROL(@15),C' '                                01S1578 05192000
*          PRTQUEUE = COPYHD2;         /* SET COPY HEADER LINE TWO.  */ 05193000
         MVI   PRTQUEUE+91(@15),C' '                            01S1579 05194000
         MVC   PRTQUEUE+92(28,@15),PRTQUEUE+91(@15)             01S1579 05195000
         MVC   PRTQUEUE(91,@15),COPYHD2                         01S1579 05196000
*          DO;                         /*                            */ 05197000
*/********************************************************************* 05198000
**                                                                    * 05199000
**  THIS SECTION WILL FILL THE PRINT QUEUE WITH ONE PAGE OF COPY      * 05200000
**  MODIFICATION INFORMATION.                                         * 05201000
**                                                                    * 05202000
**********************************************************************/ 05203000
*        DO                            /* START PRINT SEGMENT LOOP   */ 05204000
*         NEXT = NEXT + ONE            /*  FOR ONE PAGE.             */ 05205000
*         TO LASTLINE                  /*                            */ 05206000
*         WHILE CMODCNT > ZERO;        /* STOP AT MODULE END.        */ 05207000
         SLR   @15,@15                                          02S1581 05208000
         ICM   @15,3,NEXT(BUFAD)                                02S1581 05209000
         ALR   @15,@07                                          02S1581 05210000
         B     @DE01581                                         02S1581 05211000
@DL01581 SLR   @07,@07                                          02S1581 05212000
         CH    @07,CMODCNT(,BUFAD)                              02S1581 05213000
         BNL   @DC01581                                         02S1581 05214000
*          SEGCNT = SEGCNT + ONE;      /* INCREMENT SEGMENT NUMBER.  */ 05215000
         LA    @15,1                                            02S1582 05216000
         LH    @14,SEGCNT(,BUFAD)                               02S1582 05217000
         ALR   @14,@15                                          02S1582 05218000
         STH   @14,SEGCNT(,BUFAD)                               02S1582 05219000
*          PRTQELEM = DOUBL;           /* SET DOUBL SPACE.           */ 05220000
         SLR   @05,@05                                          02S1583 05221000
         ICM   @05,3,NEXT(BUFAD)                                02S1583 05222000
         MH    @05,@CH00190                                     02S1583 05223000
         AL    @05,@CF01883                                     02S1583 05224000
         LA    @05,MSGSAVE-10648(@05,BUFAD)                     02S1583 05225000
         MVI   PRTQELEM+1(@05),C' '                             02S1583 05226000
         MVC   PRTQELEM+2(119,@05),PRTQELEM+1(@05)              02S1583 05227000
         MVI   PRTQELEM(@05),C'0'                               02S1583 05228000
*          IF DEL(SEGCNT) ^= ZERO      /* CHECK FOR LINE OVERRUN     */ 05229000
*            THEN                      /*  NOTE.                     */ 05230000
         LA    @04,796                                          02S1584 05231000
         ALR   @04,BUFAD                                        02S1584 05232000
         LA    @03,0(@14,@04)                                   02S1584 05233000
         BCTR  @03,0                                            02S1584 05234000
         SLR   @02,@02                                          02S1584 05235000
         IC    @02,DEL(,@03)                                    02S1584 05236000
         CR    @07,@02                                          02S1584 05237000
         BE    @RF01584                                         02S1584 05238000
*              DO;                     /*                    @Z48MSTT*/ 05239000
*                MNOTE = NOTE;         /* SET NOTE CONSTANT. @Z48MSTT*/ 05240000
         ALR   @05,@15                                          02S1586 05241000
         MVC   MNOTE(7,@05),@CC00865                            02S1586 05242000
*                MNOTEM = DEL(SEGCNT); /* SET NOTE NUMBER.   @Z48MSTT*/ 05243000
         ALR   @04,@14                                          02S1587 05244000
         BCTR  @04,0                                            02S1587 05245000
         MVC   MNOTEM(1,@05),DEL(@04)                           02S1587 05246000
*              END;                    /*                    @Z48MSTT*/ 05247000
*            ELSE;                     /* NO NOTE.                   */ 05248000
@RF01584 DS    0H                                               02S1590 05249000
*          FWORK = SEGCNT;             /* GET SEGMENT NUMBER.        */ 05250000
         LH    @07,SEGCNT(,BUFAD)                               02S1590 05251000
         ST    @07,FWORK(,BUFAD)                                02S1590 05252000
*          CALL CONVERT;               /* CONVERT TO PRINTABLE.      */ 05253000
         BAL   @14,CONVERT                                      02S1591 05254000
*          MSEG = CWORK3;              /* SET SEGMENT NO. IN PRT QUE */ 05255000
         LA    @07,1                                            02S1592 05256000
         SLR   @15,@15                                          02S1592 05257000
         ICM   @15,3,NEXT(BUFAD)                                02S1592 05258000
         MH    @15,@CH00190                                     02S1592 05259000
         AL    @15,@CF01883                                     02S1592 05260000
         LA    @15,MSGSAVE-10648(@15,BUFAD)                     02S1592 05261000
         ALR   @15,@07                                          02S1592 05262000
         MVC   MSEG(3,@15),CWORK3(BUFAD)                        02S1592 05263000
*          DO                          /* START SEGMENT INFO CONVERT.*/ 05264000
*           CNT = ONE                  /* CONVERT ALL BUT TEXT       */ 05265000
*           TO LENGTH(COPYHD) - ONE;   /*  NUMBER.                   */ 05266000
         LR    CNT,@07                                          02S1593 05267000
@DL01593 DS    0H                                               02S1594 05268000
*            FWORK = COPYHD(CNT);      /* GET A NUMBER.              */ 05269000
         LR    @07,BUFFPTR                                      02S1594 05270000
         BCTR  @07,0                                            02S1594 05271000
         SLR   @03,@03                                          02S1594 05272000
         IC    @03,COPYHD(CNT,@07)                              02S1594 05273000
         ST    @03,FWORK(,BUFAD)                                02S1594 05274000
*            CALL CONVERT;             /* CONVERT IT.                */ 05275000
         BAL   @14,CONVERT                                      02S1595 05276000
*            MNUMBER(CNT) = CWORK3;    /* SET IT IN PRINT QUEUE LINE.*/ 05277000
         LR    @07,CNT                                          02S1596 05278000
         MH    @07,@CH00035                                     02S1596 05279000
         SLR   @03,@03                                          02S1596 05280000
         ICM   @03,3,NEXT(BUFAD)                                02S1596 05281000
         MH    @03,@CH00190                                     02S1596 05282000
         AL    @03,@CF01883                                     02S1596 05283000
         LA    @03,MSGSAVE-10648(@03,BUFAD)                     02S1596 05284000
         ALR   @03,@07                                          02S1596 05285000
         MVC   MNUMBER-11(3,@03),CWORK3(BUFAD)                  02S1596 05286000
*          END;                        /* END SEGMENT INFO CONVERT.  */ 05287000
         AH    CNT,@CH00060                                     02S1597 05288000
         CH    CNT,@CH00040                                     02S1597 05289000
         BNH   @DL01593                                         02S1597 05290000
*          XCNT = ZERO;                /* INITIALIZE CHARACTER CTR.  */ 05291000
         SLR   XCNT,XCNT                                        02S1598 05292000
*          DO                          /* START CHARACTER COUNT LOOP.*/ 05293000
*           CNT = ONE                  /*                            */ 05294000
*           TO TEXTX;                  /*                            */ 05295000
         LA    CNT,1                                            02S1599 05296000
         B     @DE01599                                         02S1599 05297000
@DL01599 DS    0H                                               02S1600 05298000
*            IF TEXT(CNT) = ALBIT      /* CHECK FOR REPITITION FACTOR*/ 05299000
*              THEN                    /*                            */ 05300000
         LR    @07,BUFFPTR                                      02S1600 05301000
         ALR   @07,CNT                                          02S1600 05302000
         CLI   TEXT-1(@07),X'FF'                                02S1600 05303000
         BNE   @RF01600                                         02S1600 05304000
*                DO;                   /*                            */ 05305000
*                  XCNT = XCNT         /* INCR CHAR CTR BY REP FACTOR*/ 05306000
*                    + TEXT(CNT + ONE);/*                            */ 05307000
         SLR   @07,@07                                          02S1602 05308000
         IC    @07,TEXT(CNT,BUFFPTR)                            02S1602 05309000
         ALR   XCNT,@07                                         02S1602 05310000
*                  CNT = CNT + TWO;    /* STEP OVER COMPESSED FIELD. */ 05311000
         AL    CNT,@CF00057                                     02S1603 05312000
*                END;                  /* END CHARACTER COUNT LOOP.  */ 05313000
*              ELSE                    /*                            */ 05314000
*                XCNT = XCNT + ONE;    /* INCREMENT CHARACTER COUNT  */ 05315000
         B     @RC01600                                         02S1605 05316000
@RF01600 AH    XCNT,@CH00060                                    02S1605 05317000
*          END;                        /*                            */ 05318000
@RC01600 AH    CNT,@CH00060                                     02S1606 05319000
@DE01599 SLR   @07,@07                                          02S1606 05320000
         IC    @07,TEXTX(,BUFFPTR)                              02S1606 05321000
         CR    CNT,@07                                          02S1606 05322000
         BNH   @DL01599                                         02S1606 05323000
*          FWORK = XCNT;               /* GET CHARACTER COUNT.       */ 05324000
         ST    XCNT,FWORK(,BUFAD)                               02S1607 05325000
*          CALL CONVERT;               /* CONVERT NUMBER TO PRINT.   */ 05326000
         BAL   @14,CONVERT                                      02S1608 05327000
*          MCHAR = CWORK3;             /* SET NUMBER IN PRINT QUEUE. */ 05328000
         SLR   @07,@07                                          02S1609 05329000
         ICM   @07,3,NEXT(BUFAD)                                02S1609 05330000
         MH    @07,@CH00190                                     02S1609 05331000
         AL    @07,@CF01883                                     02S1609 05332000
         LA    @07,MSGSAVE-10648(@07,BUFAD)                     02S1609 05333000
         MVC   MCHAR+1(3,@07),CWORK3(BUFAD)                     02S1609 05334000
*          CMODCNT                     /* REDUCE MODULE SIZE.        */ 05335000
*           = CMODCNT - (TEXTX + LENGTH(COPYHD));               02S1610 05336000
         LA    @07,6                                            02S1610 05337000
         SLR   @00,@00                                          02S1610 05338000
         IC    @00,TEXTX(,BUFFPTR)                              02S1610 05339000
         ALR   @07,@00                                          02S1610 05340000
         LH    @00,CMODCNT(,BUFAD)                              02S1610 05341000
         SLR   @00,@07                                          02S1610 05342000
         STH   @00,CMODCNT(,BUFAD)                              02S1610 05343000
*          BUFFPTR                     /* INCR TO NEXT SEGMENT.      */ 05344000
*           = BUFFPTR + (TEXTX + LENGTH(COPYHD));               02S1611 05345000
         ALR   BUFFPTR,@07                                      02S1611 05346000
*        END;                          /* END OF PAGE.               */ 05347000
         LA    @15,1                                            02S1612 05348000
         SLR   @07,@07                                          02S1612 05349000
         ICM   @07,3,NEXT(BUFAD)                                02S1612 05350000
         ALR   @15,@07                                          02S1612 05351000
@DE01581 STH   @15,NEXT(,BUFAD)                                 02S1612 05352000
         CH    @15,@CH00371                                     02S1612 05353000
         BNH   @DL01581                                         02S1612 05354000
@DC01581 DS    0H                                               02S1613 05355000
*          END;                        /*  INFORMATION.              */ 05356000
*          IF NEXT > ONE               /* CHECK FOR ANY PRINTING.    */ 05357000
*            THEN                      /*                            */ 05358000
         SLR   @07,@07                                          01S1614 05359000
         ICM   @07,3,NEXT(BUFAD)                                01S1614 05360000
         CH    @07,@CH00060                                     01S1614 05361000
         BNH   @RF01614                                         01S1614 05362000
*              NEXT = NEXT - ONE;      /* ALWAYS GO ONE TO MANY.     */ 05363000
         BCTR  @07,0                                            01S1615 05364000
         STH   @07,NEXT(,BUFAD)                                 01S1615 05365000
*            ELSE;                     /*                            */ 05366000
@RF01614 DS    0H                                               01S1617 05367000
*          CALL PRINTQ;                /*  PRINT ONE PAGE.           */ 05368000
         BAL   @14,PRINTQ                                       01S1617 05369000
*        END;                          /* END COPY MOD PRINT.        */ 05370000
@DE01570 ICM   @07,3,CMODCNT(BUFAD)                             01S1618 05371000
         BP    @DL01570                                         01S1618 05372000
*        RESPECIFY (BUFFPTR) UNRESTRICTED;                      01S1619 05373000
*        GEN REFS(SAVE2)               /******************************/ 05374000
*         (L  @13,SAVE2+BACK(,BUFAD)); /* RESTORE BACKWARD POINTER.  */ 05375000
         L  @13,SAVE2+BACK(,BUFAD)                                      05376000
*   END COPYPRT;                       /* RETURN TO CALLER.          */ 05377000
@EL00022 DS    0H                                               01S1621 05378000
@EF00022 DS    0H                                               01S1621 05379000
@ER00022 LM    @14,@12,12(@13)                                  01S1621 05380000
         BR    @14                                              01S1621 05381000
         EJECT                                                          05382000
*                                                               01S1622 05383000
*/********************************************************************* 05384000
**                                                                    * 05385000
**  THIS ROUTINE WILL CHECK THE COPY MODIFICATION MODULE TO INSURE    * 05386000
**  VALIDITY AND USABILITY.                                           * 05387000
**                                                                    * 05388000
**********************************************************************/ 05389000
*COPCHK:                                                        01S1622 05390000
*   PROCEDURE OPTIONS(NOSAVEAREA);                              01S1622 05391000
COPCHK   STM   @14,@12,12(@13)                                  01S1622 05392000
*        GEN REFS(SAVE2);              /* USE CONVENTIONAL SAVE.     */ 05393000
         ST  @13,SAVE2+BACK(,BUFAD)    BACKWARD POINTER.                05394000
         LA  @14,SAVE2(,BUFAD)         THIS ROUTINE SAVE AREA.          05395000
         ST  @14,FORE(,@13)            FORWARD POINTER.                 05396000
         LR  @13,@14                   LINKAGE COMPLETE.                05397000
*        RESPECIFY (RECAREA,           /*                            */ 05398000
*                   RECSIZE,           /* RESTRICT NECESSARY         */ 05399000
*                   TRANSIZE,          /* REGISTERS FOR MOVE LONG.   */ 05400000
*                   BUFFPTR)  RESTRICTED;                       01S1624 05401000
*                                                               01S1624 05402000
*        RECAREA = ADDR(DEL);          /* ADDRESS OF DELSEG ARRAY.   */ 05403000
         LA    RECAREA,796                                      01S1625 05404000
         ALR   RECAREA,BUFAD                                    01S1625 05405000
*        RECSIZE = DIM(DEL);           /* SIZE OF DELSEG ARRAY.      */ 05406000
         LA    RECSIZE,1024                                     01S1626 05407000
*        TRANSIZE = ZERO;              /* USE PADDING BYTE.          */ 05408000
         SLR   TRANSIZE,TRANSIZE                                01S1627 05409000
*        BUFFPTR = ADDR(ZERO);         /* ADDRESS OF A ZERO.         */ 05410000
         LA    BUFFPTR,@CH00462+1                               01S1628 05411000
*                                      /*                            */ 05412000
*        MVCL(RECAREA,BUFFPTR);        /* CLEAR WORKAREA.            */ 05413000
         MVCL  RECAREA,BUFFPTR                                  01S1629 05414000
*                                      /*                            */ 05415000
*        RESPECIFY (RECAREA,           /* FREE REGISTERS FOR         */ 05416000
*                   RECSIZE,           /*  COMPILER USE.             */ 05417000
*                   TRANSIZE) UNRESTRICTED;                     01S1630 05418000
*        BUFFPTR = ADDR(MODBOD);       /* SEGMENT TRACKER.           */ 05419000
         LA    BUFFPTR,MODBOD(,BUFAD)                           01S1631 05420000
*        MINC = COPY1;                 /* GET INITIAL COPY THIS MOD. */ 05421000
         LR    @07,BUFAD                                        01S1632 05422000
         AL    @07,@CF01856                                     01S1632 05423000
         MVC   MINC(1,@07),COPY1(BUFFPTR)                       01S1632 05424000
*        MAXC = ZERO;                  /* RESET MAX COPY.            */ 05425000
         MVI   MAXC(@07),X'00'                                  01S1633 05426000
*        MAXL = ZERO;                  /* RESET MAX LINE.            */ 05427000
         MVI   MAXL(@07),X'00'                                  01S1634 05428000
*        MINL = MAXLINE;               /* RESET MIN LINE.            */ 05429000
         MVI   MINL(@07),X'84'                                  01S1635 05430000
*/********************************************************************* 05431000
**                                                                    * 05432000
**  THIS SECTION WILL GATHER THE TIMING INFORMATION FOR EACH SEGMENT. * 05433000
**                                                                    * 05434000
**********************************************************************/ 05435000
*        DO                            /* START MODULE SCAN          */ 05436000
*         SEGCNT = ONE                 /*                            */ 05437000
*         TO DIM(CMTARRAY)             /* COUNT SEGMENTS.            */ 05438000
*         WHILE BUFFPTR                /* STOP WHEN MODULE COMPLETE. */ 05439000
*             < ADDR(MODBOD) + CMODCNT;/*                            */ 05440000
         LA    @07,1                                            02S1636 05441000
         STH   @07,SEGCNT(,BUFAD)                               02S1636 05442000
@DL01636 LA    @07,MODBOD(,BUFAD)                               02S1636 05443000
         AH    @07,CMODCNT(,BUFAD)                              02S1636 05444000
         CR    BUFFPTR,@07                                      02S1636 05445000
         BNL   @DC01636                                         02S1636 05446000
*          COPYINFO(SEGCNT)            /* SET FIRST FOUR BYTES OF    */ 05447000
*           = COPYSEQN;                /*  SEGMENT IN TIMING ARRAY.  */ 05448000
         LH    @07,SEGCNT(,BUFAD)                               02S1637 05449000
         SLA   @07,3                                            02S1637 05450000
         LR    @02,BUFAD                                        02S1637 05451000
         AL    @02,@CF01856                                     02S1637 05452000
         ST    @07,@TF00002                                     02S1637 05453000
         ALR   @07,@02                                          02S1637 05454000
         MVC   COPYINFO-8(4,@07),COPYSEQN(BUFFPTR)              02S1637 05455000
*          TXT(SEGCNT) = CMLOHD;       /* SET LINE OVERHEAD IN TIME. */ 05456000
         LA    @07,1875                                         02S1638 05457000
         L     @15,@TF00002                                     02S1638 05458000
         ST    @07,TXT-8(@15,@02)                               02S1638 05459000
*          XCNT = ZERO;                /* RESET CHARACTER COUNTER.   */ 05460000
         SLR   XCNT,XCNT                                        02S1639 05461000
*          DO                          /* START CHARACTER COUNT FOR  */ 05462000
*           CNT = ONE                  /*  TIMING INFORMATION        */ 05463000
*           TO TEXTX;                  /*                            */ 05464000
         LA    CNT,1                                            02S1640 05465000
         B     @DE01640                                         02S1640 05466000
@DL01640 DS    0H                                               02S1641 05467000
*            IF TEXT(CNT) = ALBIT      /* CHECK FOR COMPRESSED CHAR. */ 05468000
*              THEN                    /*                            */ 05469000
         LR    @07,BUFFPTR                                      02S1641 05470000
         ALR   @07,CNT                                          02S1641 05471000
         CLI   TEXT-1(@07),X'FF'                                02S1641 05472000
         BNE   @RF01641                                         02S1641 05473000
*                DO;                   /*                            */ 05474000
*                  TXT(SEGCNT)         /* CALC COMPRESSION TIME.     */ 05475000
*                   = TXT(SEGCNT) + (TEXT(CNT+ONE) * CMPCHT);   02S1643 05476000
         LH    @07,SEGCNT(,BUFAD)                               02S1643 05477000
         SLA   @07,3                                            02S1643 05478000
         LR    @15,BUFAD                                        02S1643 05479000
         AL    @15,@CF01856                                     02S1643 05480000
         SLR   @14,@14                                          02S1643 05481000
         IC    @14,TEXT(CNT,BUFFPTR)                            02S1643 05482000
         LR    @00,@14                                          02S1643 05483000
         MH    @00,@CH01036                                     02S1643 05484000
         AL    @00,TXT-8(@07,@15)                               02S1643 05485000
         ST    @00,TXT-8(@07,@15)                               02S1643 05486000
*                  XCNT = XCNT         /* ADD REPITION FACTOR TO     */ 05487000
*                   + TEXT(CNT + ONE); /*  CHARACTER COUNTER.        */ 05488000
         ALR   XCNT,@14                                         02S1644 05489000
*                  CNT = CNT + TWO;    /* SKIP NEXT TWO BYTES        */ 05490000
         AL    CNT,@CF00057                                     02S1645 05491000
*                END;                  /*                            */ 05492000
*              ELSE                    /*                            */ 05493000
*                DO;                   /* STANDARD CHARACTER.        */ 05494000
         B     @RC01641                                         02S1647 05495000
@RF01641 DS    0H                                               02S1648 05496000
*                  TXT(SEGCNT)         /* ADD STD CHAR TIMING.       */ 05497000
*                   = TXT(SEGCNT) + STDCHT;                     02S1648 05498000
         LH    @07,SEGCNT(,BUFAD)                               02S1648 05499000
         SLA   @07,3                                            02S1648 05500000
         LR    @15,BUFAD                                        02S1648 05501000
         AL    @15,@CF01856                                     02S1648 05502000
         LA    @14,325                                          02S1648 05503000
         AL    @14,TXT-8(@07,@15)                               02S1648 05504000
         ST    @14,TXT-8(@07,@15)                               02S1648 05505000
*                  XCNT = XCNT + ONE;  /* INCR CHARACTER COUNTER.    */ 05506000
         AH    XCNT,@CH00060                                    02S1649 05507000
*                END;                  /*                            */ 05508000
*          END;                        /* END OF CHARACTER COUNT.    */ 05509000
@RC01641 AH    CNT,@CH00060                                     02S1651 05510000
@DE01640 SLR   @07,@07                                          02S1651 05511000
         IC    @07,TEXTX(,BUFFPTR)                              02S1651 05512000
         CR    CNT,@07                                          02S1651 05513000
         BNH   @DL01640                                         02S1651 05514000
*/********************************************************************* 05515000
**                                                                    * 05516000
**  THIS SECTION WILL GENERATE ANY MESSAGE NECESSARY TO INDICATE      * 05517000
**  THE INVALIDITY OF A COPY MODIFICATION MODULE.                     * 05518000
**                                                                    * 05519000
**********************************************************************/ 05520000
*        FWORK = SEGCNT;               /* SEGMENT NUMBER FOR CONVERT.*/ 05521000
         LH    @07,SEGCNT(,BUFAD)                               03S1652 05522000
         ST    @07,FWORK(,BUFAD)                                03S1652 05523000
*        CALL CONVERT;                 /* MAKE IT PRINTABLE          */ 05524000
         BAL   @14,CONVERT                                      03S1653 05525000
*        EDITDATA(ONE) = ADDR(CWORK);  /* POINT TO SEGMENT NUMBER.   */ 05526000
         LA    @07,CWORK(,BUFAD)                                03S1654 05527000
         STCM  @07,7,EDITDATA(BUFAD)                            03S1654 05528000
*        EDITLEN(ONE) = LENGTH(CWORK); /* SET BYTE LENGTH OF NUMBER  */ 05529000
         MVI   EDITLEN(BUFAD),X'04'                             03S1655 05530000
*        IF SEGCNT > ONE               /* DO NOT CHECK FIRST SEGMENT */ 05531000
*         & CP1(SEGCNT) < CP1(SEGCNT - ONE)                     03S1656 05532000
*          THEN                        /*  FOR ASCENDING SEQUENCE.   */ 05533000
         LH    @07,SEGCNT(,BUFAD)                               03S1656 05534000
         CH    @07,@CH00060                                     03S1656 05535000
         BNH   @RF01656                                         03S1656 05536000
         SLA   @07,3                                            03S1656 05537000
         LR    @02,BUFAD                                        03S1656 05538000
         AL    @02,@CF01856                                     03S1656 05539000
         SLR   @00,@00                                          03S1656 05540000
         IC    @00,CP1-8(@07,@02)                               03S1656 05541000
         SLR   @15,@15                                          03S1656 05542000
         IC    @15,CP1-16(@07,@02)                              03S1656 05543000
         CR    @00,@15                                          03S1656 05544000
         BNL   @RF01656                                         03S1656 05545000
*            DO;                       /*                            */ 05546000
*              MSGN = IEBA18I;         /* OUT OF SEQUENCE.           */ 05547000
         MVI   MSGN(BUFAD),X'12'                                03S1658 05548000
*              CALL IEBIMSGS;          /* PRINT IT.                  */ 05549000
         L     @15,@CV00037                                     03S1659 05550000
         BALR  @14,@15                                          03S1659 05551000
*              FMTERR1 = ON;           /* REMEMBER IT.               */ 05552000
         OI    FMTERR1(BUFAD),B'00000100'                       03S1660 05553000
*            END;                      /*                            */ 05554000
*          ELSE;                       /* SEQUENCE OK.               */ 05555000
@RF01656 DS    0H                                               03S1663 05556000
*        MSGN = IEBA43I;               /* PRESET MESSAGE.            */ 05557000
         MVI   MSGN(BUFAD),X'2B'                                03S1663 05558000
*        IF COPY1 + COPYN - ONE        /* CHECK FOR MAXIMUM COPY     */ 05559000
*         > MAXCOPY                    /*  EXCEEDED.                 */ 05560000
*          THEN                        /*                            */ 05561000
         SLR   @07,@07                                          03S1664 05562000
         IC    @07,COPY1(,BUFFPTR)                              03S1664 05563000
         SLR   @02,@02                                          03S1664 05564000
         IC    @02,COPYN(,BUFFPTR)                              03S1664 05565000
         ALR   @07,@02                                          03S1664 05566000
         BCTR  @07,0                                            03S1664 05567000
         CH    @07,@CH00543                                     03S1664 05568000
         BNH   @RF01664                                         03S1664 05569000
*            DO;                       /*                            */ 05570000
*              EDITLEN(ONE) = LENGTH(CWORK);                    03S1666 05571000
         MVI   EDITLEN(BUFAD),X'04'                             03S1666 05572000
*              CALL IEBIMSGS;          /* PRINT IT.                  */ 05573000
         L     @15,@CV00037                                     03S1667 05574000
         BALR  @14,@15                                          03S1667 05575000
*              FMTERR1 = ON;           /* REMEMBER IT.               */ 05576000
         OI    FMTERR1(BUFAD),B'00000100'                       03S1668 05577000
*            END;                      /*                            */ 05578000
*          ELSE;                       /*                            */ 05579000
@RF01664 DS    0H                                               03S1671 05580000
*        IF LINE1 + LINEN - ONE        /* CHECK FOR MAXIMUM LINES    */ 05581000
*         > MAXLINE                    /*  EXCEEDED.                 */ 05582000
*          THEN                        /*                            */ 05583000
         SLR   @07,@07                                          03S1671 05584000
         IC    @07,LINE1(,BUFFPTR)                              03S1671 05585000
         SLR   @02,@02                                          03S1671 05586000
         IC    @02,LINEN(,BUFFPTR)                              03S1671 05587000
         ALR   @07,@02                                          03S1671 05588000
         BCTR  @07,0                                            03S1671 05589000
         CH    @07,@CH01051                                     03S1671 05590000
         BNH   @RF01671                                         03S1671 05591000
*            DO;                       /*                            */ 05592000
*              EDITLEN(ONE) = LENGTH(CWORK);/* RESTORE NUMBER LENGTH.*/ 05593000
         MVI   EDITLEN(BUFAD),X'04'                             03S1673 05594000
*              EDITDATA(TWO) = ADDR(LINEW); /* POINT TO LINE WORD.   */ 05595000
         LA    @07,@CC00845                                     03S1674 05596000
         STCM  @07,7,EDITDATA+4(BUFAD)                          03S1674 05597000
*              EDITLEN(TWO) = LENGTH(LINEW);/* SET LENGTH OF WORD.   */ 05598000
         MVI   EDITLEN+4(BUFAD),X'04'                           03S1675 05599000
*              CALL IEBIMSGS;          /* PRINT IT.                  */ 05600000
         L     @15,@CV00037                                     03S1676 05601000
         BALR  @14,@15                                          03S1676 05602000
*              FMTERR1 = ON;           /* REMEMBER IT.               */ 05603000
         OI    FMTERR1(BUFAD),B'00000100'                       03S1677 05604000
*            END;                      /*                            */ 05605000
*          ELSE;                       /*                            */ 05606000
@RF01671 DS    0H                                               03S1680 05607000
*        IF POS1 + XCNT - ONE          /* CHECK FOR MAXIMUM PRINT    */ 05608000
*         > MAXPOS                     /*  POSITIONS EXCEEDED.       */ 05609000
*          THEN                        /*                            */ 05610000
         SLR   @07,@07                                          03S1680 05611000
         IC    @07,POS1(,BUFFPTR)                               03S1680 05612000
         ALR   @07,XCNT                                         03S1680 05613000
         BCTR  @07,0                                            03S1680 05614000
         CH    @07,@CH00279                                     03S1680 05615000
         BNH   @RF01680                                         03S1680 05616000
*            DO;                       /*                            */ 05617000
*              EDITLEN(ONE) = LENGTH(CWORK);/* RESTORE NUMBER LENGTH.*/ 05618000
         MVI   EDITLEN(BUFAD),X'04'                             03S1682 05619000
*              EDITDATA(TWO) = ADDR(TEXTW); /* POINT TO TEXT WORD.   */ 05620000
         LA    @07,@CC00847                                     03S1683 05621000
         STCM  @07,7,EDITDATA+4(BUFAD)                          03S1683 05622000
*              EDITLEN(TWO) = LENGTH(TEXTW);/* SET LENGTH OF WORD.   */ 05623000
         MVI   EDITLEN+4(BUFAD),X'04'                           03S1684 05624000
*              CALL IEBIMSGS;          /* PRINT IT                   */ 05625000
         L     @15,@CV00037                                     03S1685 05626000
         BALR  @14,@15                                          03S1685 05627000
*              FMTERR1 = ON;           /* REMEMBER IT.               */ 05628000
         OI    FMTERR1(BUFAD),B'00000100'                       03S1686 05629000
*            END;                      /*                            */ 05630000
*        EDITLEN(ONE) = ZERO;          /* RESET EDIT INDICATE@Z48MSTT*/ 05631000
@RF01680 MVI   EDITLEN(BUFAD),X'00'                             03S1688 05632000
*        IF FMTERR1 = ON               /* CHECK FOR ANY ERROR.       */ 05633000
*          THEN                        /*                            */ 05634000
         TM    FMTERR1(BUFAD),B'00000100'                       03S1689 05635000
         BNO   @RF01689                                         03S1689 05636000
*            DO;                       /*                            */ 05637000
*              INHIBITW = ON;          /* PROHIBIT LIBRARY UPDATE.   */ 05638000
         OI    INHIBITW(BUFAD),B'01000000'                      03S1691 05639000
*              RETSAVE                 /* SET RETURN CODE 8 THIS OP. */ 05640000
*               = MAX(RETSAVE,RC8);    /*                            */ 05641000
         SLR   @07,@07                                          03S1692 05642000
         IC    @07,RETSAVE(,BUFAD)                              03S1692 05643000
         LA    @00,8                                            03S1692 05644000
         CR    @07,@00                                          03S1692 05645000
         BNL   *+6                                                      05646000
         LR    @07,@00                                          03S1692 05647000
         STC   @07,RETSAVE(,BUFAD)                              03S1692 05648000
*              FMTERR1 = OFF;          /* RESET ERROR INDICATOR.     */ 05649000
         NI    FMTERR1(BUFAD),B'11111011'                       03S1693 05650000
*            END;                      /*                            */ 05651000
*          ELSE;                       /*                            */ 05652000
@RF01689 DS    0H                                               03S1696 05653000
*          MAXC                        /* GET MAXIMUM COPY NUMBER.   */ 05654000
*           = MAX(MAXC,MIN(COPY1+COPYN-ONE,MAXCOPY));           02S1696 05655000
         LR    @07,BUFAD                                        02S1696 05656000
         AL    @07,@CF01856                                     02S1696 05657000
         SLR   @00,@00                                          02S1696 05658000
         IC    @00,COPY1(,BUFFPTR)                              02S1696 05659000
         SLR   @15,@15                                          02S1696 05660000
         IC    @15,COPYN(,BUFFPTR)                              02S1696 05661000
         ALR   @00,@15                                          02S1696 05662000
         BCTR  @00,0                                            02S1696 05663000
         LA    @15,255                                          02S1696 05664000
         CR    @00,@15                                          02S1696 05665000
         BNH   *+6                                                      05666000
         LR    @00,@15                                          02S1696 05667000
         SLR   @15,@15                                          02S1696 05668000
         IC    @15,MAXC(,@07)                                   02S1696 05669000
         CR    @15,@00                                          02S1696 05670000
         BNL   *+6                                                      05671000
         LR    @15,@00                                          02S1696 05672000
         STC   @15,MAXC(,@07)                                   02S1696 05673000
*          MINL                        /* GET MINIMUM LINE NUMBER.   */ 05674000
*           = MIN(MINL,LINE1);         /*                            */ 05675000
         SLR   @15,@15                                          02S1697 05676000
         IC    @15,LINE1(,BUFFPTR)                              02S1697 05677000
         SLR   @14,@14                                          02S1697 05678000
         IC    @14,MINL(,@07)                                   02S1697 05679000
         CR    @14,@15                                          02S1697 05680000
         BNH   *+6                                                      05681000
         LR    @14,@15                                          02S1697 05682000
         STC   @14,MINL(,@07)                                   02S1697 05683000
*          MAXL                        /* GET MAXIMUM LINE NUMBER.   */ 05684000
*           = MAX(MAXL,MIN(LINE1+LINEN-ONE,MAXLINE));           02S1698 05685000
         SLR   @14,@14                                          02S1698 05686000
         IC    @14,LINEN(,BUFFPTR)                              02S1698 05687000
         ALR   @15,@14                                          02S1698 05688000
         BCTR  @15,0                                            02S1698 05689000
         LA    @14,132                                          02S1698 05690000
         CR    @15,@14                                          02S1698 05691000
         BNH   *+6                                                      05692000
         LR    @15,@14                                          02S1698 05693000
         SLR   @14,@14                                          02S1698 05694000
         IC    @14,MAXL(,@07)                                   02S1698 05695000
         CR    @14,@15                                          02S1698 05696000
         BNL   *+6                                                      05697000
         LR    @14,@15                                          02S1698 05698000
         STC   @14,MAXL(,@07)                                   02S1698 05699000
*          BUFFPTR = BUFFPTR           /* STEP TO NEXT SEGMENT.      */ 05700000
*           + TEXTX + LENGTH(COPYHD);  /*                            */ 05701000
         LR    @07,BUFFPTR                                      02S1699 05702000
         SLR   @00,@00                                          02S1699 05703000
         IC    @00,TEXTX(,BUFFPTR)                              02S1699 05704000
         ALR   @07,@00                                          02S1699 05705000
         AH    @07,@CH00185                                     02S1699 05706000
         LR    BUFFPTR,@07                                      02S1699 05707000
*        END;                          /* END OF MODULE SCAN         */ 05708000
         LA    @07,1                                            02S1700 05709000
         AH    @07,SEGCNT(,BUFAD)                               02S1700 05710000
         STH   @07,SEGCNT(,BUFAD)                               02S1700 05711000
         CH    @07,@CH01026                                     02S1700 05712000
         BNH   @DL01636                                         02S1700 05713000
@DC01636 DS    0H                                               02S1701 05714000
*        SEGCNT = SEGCNT - ONE;        /* ALWAYS GOES ONE TO FAR.    */ 05715000
         LH    @07,SEGCNT(,BUFAD)                               01S1701 05716000
         BCTR  @07,0                                            01S1701 05717000
         STH   @07,SEGCNT(,BUFAD)                               01S1701 05718000
*        RESPECIFY (BUFFPTR) UNRESTRICTED;                      01S1702 05719000
*/********************************************************************* 05720000
**                                                                    * 05721000
**  THIS SECTION CHECKS FOR POSSIBLE OVERRUN CONDITIONS.              * 05722000
**                                                                    * 05723000
**********************************************************************/ 05724000
*        DO                            /* START COPY LOOP            */ 05725000
*         CNT = MINC                   /*  FROM LOWEST               */ 05726000
*         TO MAXC;                     /*  TO HIGHEST COPY.          */ 05727000
         LR    @15,BUFAD                                        02S1703 05728000
         AL    @15,@CF01856                                     02S1703 05729000
         SLR   CNT,CNT                                          02S1703 05730000
         IC    CNT,MINC(,@15)                                   02S1703 05731000
         B     @DE01703                                         02S1703 05732000
@DL01703 DS    0H                                               02S1704 05733000
*          DO                          /* START PAGE LOOP            */ 05734000
*           XCNT = MINL                /*  FROM LOWEST               */ 05735000
*           TO MAXL;                   /*  TO HIGHEST LINE SPECIFIED */ 05736000
         LR    @15,BUFAD                                        02S1704 05737000
         AL    @15,@CF01856                                     02S1704 05738000
         SLR   XCNT,XCNT                                        02S1704 05739000
         IC    XCNT,MINL(,@15)                                  02S1704 05740000
         B     @DE01704                                         02S1704 05741000
@DL01704 DS    0H                                               02S1705 05742000
*            NHPG = ZERO;              /* RESET NO HIT PAGE COUNTER. */ 05743000
         SLR   @15,@15                                          02S1705 05744000
         LR    @14,BUFAD                                        02S1705 05745000
         AL    @14,@CF01856                                     02S1705 05746000
         STH   @15,NHPG(,@14)                                   02S1705 05747000
*            NHLN = ZERO;              /* RESET NO HIT LINE COUNTER. */ 05748000
         STH   @15,NHLN(,@14)                                   02S1706 05749000
*            TIME = ZERO;              /* RESET TIME.                */ 05750000
         ST    @15,TIME(,@14)                                   02S1707 05751000
*            DO                        /* START LINE LOOP.           */ 05752000
*             YCNT = ONE               /*  THRU ALL SEGMENTS.        */ 05753000
*             TO SEGCNT                /*                            */ 05754000
*             WHILE CNT ^< CP1(YCNT);  /*                            */ 05755000
         LA    YCNT,1                                           02S1708 05756000
         B     @DE01708                                         02S1708 05757000
@DL01708 LR    @04,YCNT                                         02S1708 05758000
         SLA   @04,3                                            02S1708 05759000
         LR    @15,BUFAD                                        02S1708 05760000
         AL    @15,@CF01856                                     02S1708 05761000
         SLR   @14,@14                                          02S1708 05762000
         IC    @14,CP1-8(@04,@15)                               02S1708 05763000
         CR    CNT,@14                                          02S1708 05764000
         BL    @DC01708                                         02S1708 05765000
*              IF CNT ^< CP1(YCNT)     /* CHECK FOR SEGMENT FOR THIS */ 05766000
*                         + CPX(YCNT)                           02S1709 05767000
*                THEN                  /*  COPY.                     */ 05768000
         SLR   @00,@00                                          02S1709 05769000
         IC    @00,CPX-8(@04,@15)                               02S1709 05770000
         ALR   @14,@00                                          02S1709 05771000
         CR    CNT,@14                                          02S1709 05772000
         BL    @RF01709                                         02S1709 05773000
*                  NHPG = NHPG + ONE;  /* INCREMENT NO HIT COUNTER.  */ 05774000
         LA    @04,1                                            02S1710 05775000
         AH    @04,NHPG(,@15)                                   02S1710 05776000
         STH   @04,NHPG(,@15)                                   02S1710 05777000
*                ELSE                  /* CHECK FOR SEG FOR THIS LINE*/ 05778000
*                  IF XCNT ^< LN1(YCNT) + LNX(YCNT)             02S1711 05779000
*                   | XCNT < LN1(YCNT)                          02S1711 05780000
*                    THEN              /*                            */ 05781000
         B     @RC01709                                         02S1711 05782000
@RF01709 LR    @04,YCNT                                         02S1711 05783000
         SLA   @04,3                                            02S1711 05784000
         LR    @15,BUFAD                                        02S1711 05785000
         AL    @15,@CF01856                                     02S1711 05786000
         SLR   @14,@14                                          02S1711 05787000
         IC    @14,LN1-8(@04,@15)                               02S1711 05788000
         SLR   @00,@00                                          02S1711 05789000
         IC    @00,LNX-8(@04,@15)                               02S1711 05790000
         ALR   @00,@14                                          02S1711 05791000
         CR    XCNT,@00                                         02S1711 05792000
         BNL   @RT01711                                         02S1711 05793000
         CR    XCNT,@14                                         02S1711 05794000
         BNL   @RF01711                                         02S1711 05795000
@RT01711 DS    0H                                               02S1712 05796000
*                      NHLN = NHLN + ONE;                       02S1712 05797000
         LR    @04,BUFAD                                        02S1712 05798000
         AL    @04,@CF01856                                     02S1712 05799000
         LA    @00,1                                            02S1712 05800000
         AH    @00,NHLN(,@04)                                   02S1712 05801000
         STH   @00,NHLN(,@04)                                   02S1712 05802000
*                    ELSE              /* MUST BE A HIT LINE         */ 05803000
*                      TIME = TIME     /* UPDATE WORKAREA WITH TIME. */ 05804000
*                         + TXT(YCNT); /*                            */ 05805000
         B     @RC01711                                         02S1713 05806000
@RF01711 LR    @04,BUFAD                                        02S1713 05807000
         AL    @04,@CF01856                                     02S1713 05808000
         LR    @15,YCNT                                         02S1713 05809000
         SLA   @15,3                                            02S1713 05810000
         L     @14,TIME(,@04)                                   02S1713 05811000
         AL    @14,TXT-8(@15,@04)                               02S1713 05812000
         ST    @14,TIME(,@04)                                   02S1713 05813000
*              DO;                     /* DETERMINE WHICH MESSAGE    */ 05814000
@RC01711 DS    0H                                               02S1714 05815000
@RC01709 DS    0H                                               02S1715 05816000
*/********************************************************************* 05817000
**                                                                    * 05818000
**  THIS SECTION WILL FLAG, ON THE OUTPUT LISTING OF A COPY           * 05819000
**  MODIFICATION MODULE, THOSE SEGMENTS WHICH COULD POSSIBLY          * 05820000
**  CAUSE A LINE OVERRUN CONDITION IN THE PRINTER.                    * 05821000
**                                                                    * 05822000
**********************************************************************/ 05823000
*        ORUNTIME = (NHPG*NHPGT)       /* CALCULATE THE      @Z48MSTT*/ 05824000
*                        +             /*  TOTAL TIME        @Z48MSTT*/ 05825000
*                   (NHLN*NHLNT)       /*  NECSSARY TO       @Z48MSTT*/ 05826000
*                        +             /*  PROCESS CURRENT   @Z48MSTT*/ 05827000
*                      TIME;           /*  LINE.             @Z48MSTT*/ 05828000
         LR    @04,BUFAD                                        03S1715 05829000
         AL    @04,@CF01856                                     03S1715 05830000
         LH    @00,NHPG(,@04)                                   03S1715 05831000
         MH    @00,@CH01040                                     03S1715 05832000
         LH    @15,NHLN(,@04)                                   03S1715 05833000
         MH    @15,@CH01042                                     03S1715 05834000
         ALR   @00,@15                                          03S1715 05835000
         AL    @00,TIME(,@04)                                   03S1715 05836000
         ST    @00,ORUNTIME(,@04)                               03S1715 05837000
*        IF ORUNTIME > TA6LPI          /* CHECK FOR OVERRUN  @Z48MSTT*/ 05838000
*          THEN                        /*  AT 6 LPI.         @Z48MSTT*/ 05839000
         C     @00,@CF01048                                     03S1716 05840000
         BNH   @RF01716                                         03S1716 05841000
*            DO;                       /* SET OUTPUT LISTING @Z48MSTT*/ 05842000
*              DEL(YCNT) = CHAR3;      /*  FLAG,THIS SEGMENT.@Z48MSTT*/ 05843000
         LR    @04,BUFAD                                        03S1718 05844000
         ALR   @04,YCNT                                         03S1718 05845000
         MVI   DEL+795(@04),C'3'                                03S1718 05846000
*              EDITDATA(FOUR)          /* REQ 6 LPI MESSAGE. @Z48MSTT*/ 05847000
*               = ADDR(CHAR6);         /*                    @Z48MSTT*/ 05848000
         LA    @04,@CC00788                                     03S1719 05849000
         STCM  @04,7,EDITDATA+12(BUFAD)                         03S1719 05850000
*              EDITLEN(FOUR)           /*                    @Z48MSTT*/ 05851000
*               = LENGTH(CHAR6);       /*                    @Z48MSTT*/ 05852000
         MVI   EDITLEN+12(BUFAD),X'02'                          03S1720 05853000
*            END;                      /*                    @Z48MSTT*/ 05854000
*          ELSE                        /*                    @Z48MSTT*/ 05855000
*           IF ORUNTIME > TA8LPI       /* CHECK FOR OVERRUN  @Z48MSTT*/ 05856000
*             THEN                     /*  AT 8 LPI.         @Z48MSTT*/ 05857000
         B     @RC01716                                         03S1722 05858000
@RF01716 LR    @04,BUFAD                                        03S1722 05859000
         AL    @04,@CF01856                                     03S1722 05860000
         L     @04,ORUNTIME(,@04)                               03S1722 05861000
         C     @04,@CF01046                                     03S1722 05862000
         BNH   @RF01722                                         03S1722 05863000
*               DO;                    /* SET OUTPUT LISTING @Z48MSTT*/ 05864000
*                 DEL(YCNT) =          /*  FLAG,THIS SEGMENT.@Z48MSTT*/ 05865000
*                  MAX(DEL(YCNT),CHAR2);/*                   @Z48MSTT*/ 05866000
         LA    @04,796                                          03S1724 05867000
         ALR   @04,BUFAD                                        03S1724 05868000
         LR    @15,YCNT                                         03S1724 05869000
         BCTR  @15,0                                            03S1724 05870000
         SLR   @14,@14                                          03S1724 05871000
         IC    @14,DEL(@15,@04)                                 03S1724 05872000
         LA    @15,242                                          03S1724 05873000
         CR    @14,@15                                          03S1724 05874000
         BNL   *+6                                                      05875000
         LR    @14,@15                                          03S1724 05876000
         BCTR  @04,0                                            03S1724 05877000
         STC   @14,DEL(YCNT,@04)                                03S1724 05878000
*                 EDITDATA(FOUR)       /* REQ 8 LPI MESSAGE. @Z48MSTT*/ 05879000
*                  = ADDR(CHAR8);      /*                    @Z48MSTT*/ 05880000
         LA    @04,@CC00790                                     03S1725 05881000
         STCM  @04,7,EDITDATA+12(BUFAD)                         03S1725 05882000
*                 EDITLEN(FOUR)        /*                    @Z48MSTT*/ 05883000
*                  = LENGTH(CHAR8);    /*                    @Z48MSTT*/ 05884000
         MVI   EDITLEN+12(BUFAD),X'02'                          03S1726 05885000
*               END;                   /*                    @Z48MSTT*/ 05886000
*             ELSE                     /*                    @Z48MSTT*/ 05887000
*               IF ORUNTIME > TA12LPI  /* CHECK FOR OVERRUN  @Z48MSTT*/ 05888000
*                 THEN                 /*  AT 12 LPI.        @Z48MSTT*/ 05889000
         B     @RC01722                                         03S1728 05890000
@RF01722 LR    @04,BUFAD                                        03S1728 05891000
         AL    @04,@CF01856                                     03S1728 05892000
         L     @04,ORUNTIME(,@04)                               03S1728 05893000
         C     @04,@CF01044                                     03S1728 05894000
         BNH   @RF01728                                         03S1728 05895000
*                   DO;                /* SET OUTPUT LISTING @Z48MSTT*/ 05896000
*                     DEL(YCNT) =      /*  FLAG FOR THIS     @Z48MSTT*/ 05897000
*                      MAX(DEL(YCNT),CHAR1);/* SEGMENT.      @Z48MSTT*/ 05898000
         LA    @04,796                                          03S1730 05899000
         ALR   @04,BUFAD                                        03S1730 05900000
         LR    @15,YCNT                                         03S1730 05901000
         BCTR  @15,0                                            03S1730 05902000
         SLR   @14,@14                                          03S1730 05903000
         IC    @14,DEL(@15,@04)                                 03S1730 05904000
         LA    @15,241                                          03S1730 05905000
         CR    @14,@15                                          03S1730 05906000
         BNL   *+6                                                      05907000
         LR    @14,@15                                          03S1730 05908000
         BCTR  @04,0                                            03S1730 05909000
         STC   @14,DEL(YCNT,@04)                                03S1730 05910000
*                   END;               /*                    @Z48MSTT*/ 05911000
*                 ELSE;                /*****NO OVERRUN******@Z48MSTT*/ 05912000
@RF01728 DS    0H                                               03S1733 05913000
*                                      /* GOTO NEXT PAGE OF LISTING. */ 05914000
*        IF ORUNTIME > TA12LPI         /*                    @Z48MSTT*/ 05915000
*          THEN                        /* TEST FOR ANY MSG.  @Z48MSTT*/ 05916000
@RC01722 DS    0H                                               03S1733 05917000
@RC01716 LR    @04,BUFAD                                        03S1733 05918000
         AL    @04,@CF01856                                     03S1733 05919000
         L     @04,ORUNTIME(,@04)                               03S1733 05920000
         C     @04,@CF01044                                     03S1733 05921000
         BNH   @RF01733                                         03S1733 05922000
*            DO;                       /*                    @Z48MSTT*/ 05923000
*              FWORK = CNT;            /* GET COPY NUMBER.           */ 05924000
         ST    CNT,FWORK(,BUFAD)                                03S1735 05925000
*              CALL CONVERT;           /* MAKE IT PRINTABLE.         */ 05926000
         BAL   @14,CONVERT                                      03S1736 05927000
*              COPSV = CWORK3;         /* SAVE IT.                   */ 05928000
         MVC   COPSV(3,BUFAD),CWORK3(BUFAD)                     03S1737 05929000
*              FWORK = XCNT;           /* GET LINE NUMBER.           */ 05930000
         ST    XCNT,FWORK(,BUFAD)                               03S1738 05931000
*              CALL CONVERT;           /* MAKE IT PRINTABLE.         */ 05932000
         BAL   @14,CONVERT                                      03S1739 05933000
*              LINSV = CWORK3;         /* SAVE IT.           @Z48MSTT*/ 05934000
         MVC   LINSV(3,BUFAD),CWORK3(BUFAD)                     03S1740 05935000
*              FWORK = YCNT;           /* GET SEGMENT NUMBER.        */ 05936000
         ST    YCNT,FWORK(,BUFAD)                               03S1741 05937000
*              CALL CONVERT;           /* MAKE IT PRINTABLE.         */ 05938000
         BAL   @14,CONVERT                                      03S1742 05939000
*              EDITDATA(ONE) = ADDR(CWORK3);  /***********************/ 05940000
         LA    @04,CWORK3(,BUFAD)                               03S1743 05941000
         STCM  @04,7,EDITDATA(BUFAD)                            03S1743 05942000
*              EDITLEN(ONE) = LENGTH(CWORK3); /* SET                 */ 05943000
         MVI   EDITLEN(BUFAD),X'03'                             03S1744 05944000
*              EDITDATA(TWO) = ADDR(COPSV);   /*   MESSAGE           */ 05945000
         LA    @04,COPSV(,BUFAD)                                03S1745 05946000
         STCM  @04,7,EDITDATA+4(BUFAD)                          03S1745 05947000
*              EDITLEN(TWO) = LENGTH(COPSV);  /*         EDIT        */ 05948000
         MVI   EDITLEN+4(BUFAD),X'03'                           03S1746 05949000
*              EDITDATA(THREE) = ADDR(LINSV); /*            VALUES.  */ 05950000
         LA    @04,LINSV(,BUFAD)                                03S1747 05951000
         STCM  @04,7,EDITDATA+8(BUFAD)                          03S1747 05952000
*              EDITLEN(THREE) = LENGTH(LINSV);/***********************/ 05953000
         MVI   EDITLEN+8(BUFAD),X'03'                           03S1748 05954000
*              MSGN = IEBA33I;         /* OVERRUN MESSAGE.           */ 05955000
         MVI   MSGN(BUFAD),X'21'                                03S1749 05956000
*              CALL IEBIMSGS;          /* PRINT IT.                  */ 05957000
         L     @15,@CV00037                                     03S1750 05958000
         BALR  @14,@15                                          03S1750 05959000
*              RETSAVE                 /* RETURN CODE 4 THIS         */ 05960000
*               = MAX(RETSAVE,RC4);    /*  OPERATION.                */ 05961000
         SLR   @04,@04                                          03S1751 05962000
         IC    @04,RETSAVE(,BUFAD)                              03S1751 05963000
         LA    @00,4                                            03S1751 05964000
         CR    @04,@00                                          03S1751 05965000
         BNL   *+6                                                      05966000
         LR    @04,@00                                          03S1751 05967000
         STC   @04,RETSAVE(,BUFAD)                              03S1751 05968000
*            END;                      /*                            */ 05969000
*          ELSE;                       /*                            */ 05970000
@RF01733 DS    0H                                               03S1754 05971000
*              END;                    /*                            */ 05972000
*            END;                      /* END LINE LOOP.             */ 05973000
         AH    YCNT,@CH00060                                    02S1755 05974000
@DE01708 CH    YCNT,SEGCNT(,BUFAD)                              02S1755 05975000
         BNH   @DL01708                                         02S1755 05976000
@DC01708 DS    0H                                               02S1756 05977000
*          END;                        /* END PAGE LOOP.             */ 05978000
         AH    XCNT,@CH00060                                    02S1756 05979000
@DE01704 LR    @15,BUFAD                                        02S1756 05980000
         AL    @15,@CF01856                                     02S1756 05981000
         SLR   @14,@14                                          02S1756 05982000
         IC    @14,MAXL(,@15)                                   02S1756 05983000
         CR    XCNT,@14                                         02S1756 05984000
         BNH   @DL01704                                         02S1756 05985000
*        END;                          /* END COPY LOOP.             */ 05986000
         AH    CNT,@CH00060                                     02S1757 05987000
@DE01703 LR    @03,BUFAD                                        02S1757 05988000
         AL    @03,@CF01856                                     02S1757 05989000
         SLR   @00,@00                                          02S1757 05990000
         IC    @00,MAXC(,@03)                                   02S1757 05991000
         CR    CNT,@00                                          02S1757 05992000
         BNH   @DL01703                                         02S1757 05993000
*        GEN REFS(SAVE2)               /******************************/ 05994000
*         (L  @13,SAVE2+BACK(,BUFAD)); /* RESTORE BACKWARD POINTER.  */ 05995000
         L  @13,SAVE2+BACK(,BUFAD)                                      05996000
*   END COPCHK;                        /* RETURN TO CALLER.          */ 05997000
@EL00023 DS    0H                                               01S1759 05998000
@EF00023 DS    0H                                               01S1759 05999000
@ER00023 LM    @14,@12,12(@13)                                  01S1759 06000000
         BR    @14                                              01S1759 06001000
         EJECT                                                          06002000
*/********************************************************************* 06003000
**                                                                    * 06004000
**  THIS ROUTINE WILL PRINT A GRAPHIC CHARACTER MODIFICATION MODULE.  * 06005000
**                                                                    * 06006000
**********************************************************************/ 06007000
*GCMPRT:                                                        01S1760 06008000
*   PROCEDURE OPTIONS(NOSAVEAREA);                              01S1760 06009000
GCMPRT   STM   @14,@12,12(@13)                                  01S1760 06010000
*        GEN REFS(SAVE2);              /* USE CONVENTIONAL SAVE.     */ 06011000
         ST  @13,SAVE2+BACK(,BUFAD)    BACKWARD POINTER.                06012000
         LA  @14,SAVE2(,BUFAD)         THIS ROUTINE SAVE AREA.          06013000
         ST  @14,FORE(,@13)            FORWARD POINTER.                 06014000
         LR  @13,@14                   LINKAGE COMPLETE.                06015000
*        RESPECIFY (BUFFPTR) RESTRICTED;                        01S1762 06016000
*        IF READMOD = ON               /* CHECK FOR READ ONLY.       */ 06017000
*         & LOADFLAG = ALBIT           /* CHECK FOR MODULE LOADED.   */ 06018000
*          THEN                        /*                            */ 06019000
         TM    READMOD(BUFAD),B'00000001'                       01S1763 06020000
         BNO   @RF01763                                         01S1763 06021000
         CLI   LOADFLAG(BUFAD),X'FF'                            01S1763 06022000
         BNE   @RF01763                                         01S1763 06023000
*            DO;                       /* MODULE WAS LOADED.         */ 06024000
*              SEGCNT = LMODCNT;       /* GET BYTE COUNT.            */ 06025000
         SLR   @07,@07                                          01S1765 06026000
         ICM   @07,7,LOADMOD(BUFAD)                             01S1765 06027000
         MVC   SEGCNT(2,BUFAD),LMODCNT(@07)                     01S1765 06028000
*              BUFFPTR = ADDR(LMODBOD);/* INITIALIZE REG WITH ADDR.  */ 06029000
         LA    BUFFPTR,LMODBOD(,@07)                            01S1766 06030000
*            END;                      /*                            */ 06031000
*          ELSE                                                 01S1768 06032000
*            DO;                       /* MODULE WAS READ.           */ 06033000
         B     @RC01763                                         01S1768 06034000
@RF01763 DS    0H                                               01S1769 06035000
*              SEGCNT = MODCNT;        /* GET BYTE COUNT.            */ 06036000
         MVC   SEGCNT(2,BUFAD),MODCNT(BUFAD)                    01S1769 06037000
*              BUFFPTR = ADDR(MODBOD); /* INITIALIZE REG WITH ADDR.  */ 06038000
         LA    BUFFPTR,MODBOD(,BUFAD)                           01S1770 06039000
*            END;                      /*                            */ 06040000
*        SEGCNT = SEGCNT/LENGTH(GRAFSEG);/* CALC 73 BYTE SEGMENTS.   */ 06041000
@RC01763 LH    @02,SEGCNT(,BUFAD)                               01S1772 06042000
         SRDA  @02,32                                           01S1772 06043000
         D     @02,@CF00610                                     01S1772 06044000
         STH   @03,SEGCNT(,BUFAD)                               01S1772 06045000
*        HPGN = ZERO;                                           01S1773 06046000
         SLR   @07,@07                                          01S1773 06047000
         ST    @07,HPGN                                         01S1773 06048000
*        DO                            /* START SEGMENT PRINT.       */ 06049000
*         WHILE SEGCNT^=ZERO;          /* TILL NO MORE SEGMENTS.     */ 06050000
         B     @DE01774                                         01S1774 06051000
@DL01774 DS    0H                                               01S1775 06052000
*          IF NEXT = ZERO              /* CHECK FOR START OF NEW PAGE*/ 06053000
*            THEN                      /*                            */ 06054000
         ICM   @07,3,NEXT(BUFAD)                                01S1775 06055000
         BNZ   @RF01775                                         01S1775 06056000
*              DO;                     /*                            */ 06057000
*                NEXT = ONE;           /* START COUNTER.             */ 06058000
         LA    @07,1                                            01S1777 06059000
         STH   @07,NEXT(,BUFAD)                                 01S1777 06060000
*                PRTQELEM = SKIP;      /* GO TO NEW PAGE.            */ 06061000
         MH    @07,@CH00190                                     01S1778 06062000
         AL    @07,@CF01883                                     01S1778 06063000
         LA    @07,MSGSAVE-10648(@07,BUFAD)                     01S1778 06064000
         MVI   PRTQELEM+1(@07),C' '                             01S1778 06065000
         MVC   PRTQELEM+2(119,@07),PRTQELEM+1(@07)              01S1778 06066000
         MVI   PRTQELEM(@07),C'1'                               01S1778 06067000
*                TBN = BNAME;          /* WITH MODULE NAME AS HEADING*/ 06068000
         MVC   TBN(8,@07),BNAME(BUFAD)                          01S1779 06069000
*              END;                    /*                            */ 06070000
*            ELSE;                     /* NOT NEW PAGE.              */ 06071000
@RF01775 DS    0H                                               01S1782 06072000
*          HCNT = MIN(SEGCNT,FOUR);    /* XLATE MAX OF 4 SEGMENTS    */ 06073000
         LH    @15,SEGCNT(,BUFAD)                               01S1782 06074000
         LA    HCNT,4                                           01S1782 06075000
         CR    HCNT,@15                                         01S1782 06076000
         BNH   *+6                                                      06077000
         LR    HCNT,@15                                         01S1782 06078000
*          SEGCNT = SEGCNT - HCNT;     /* REDUCE SEGMENT COUNTER     */ 06079000
         SLR   @15,HCNT                                         01S1783 06080000
         STH   @15,SEGCNT(,BUFAD)                               01S1783 06081000
*/********************************************************************* 06082000
**                                                                    * 06083000
**  THIS SECTION WILL DEVELOPE THE APPROPRIATE HEADING INFORMATION    * 06084000
**  TO BE PLACED IN THE PRINT QUEUE FOR ONE TO FOUR SEGMENTS.         * 06085000
**                                                                    * 06086000
**********************************************************************/ 06087000
*        NEXT = NEXT + ONE;            /* INCREMENT PRINT QUEUE CNTR.*/ 06088000
         LA    @15,1                                            02S1784 06089000
         SLR   @14,@14                                          02S1784 06090000
         ICM   @14,3,NEXT(BUFAD)                                02S1784 06091000
         ALR   @14,@15                                          02S1784 06092000
         STH   @14,NEXT(,BUFAD)                                 02S1784 06093000
*        PRTQELEM = DOUBL;             /* DOUBLE SPACE & CLEAR LINE. */ 06094000
         MH    @14,@CH00190                                     02S1785 06095000
         AL    @14,@CF01883                                     02S1785 06096000
         LA    @14,MSGSAVE-10648(@14,BUFAD)                     02S1785 06097000
         MVI   PRTQELEM+1(@14),C' '                             02S1785 06098000
         MVC   PRTQELEM+2(119,@14),PRTQELEM+1(@14)              02S1785 06099000
         MVI   PRTQELEM(@14),C'0'                               02S1785 06100000
*        HPGN = HPGN + ONE;                                     02S1786 06101000
         L     @14,HPGN                                         02S1786 06102000
         ALR   @14,@15                                          02S1786 06103000
         ST    @14,HPGN                                         02S1786 06104000
*        DO                            /* SEGMENT HEADING START.     */ 06105000
*         CNT = ONE                    /*                            */ 06106000
*         TO HCNT;                     /* HEAD UP TO FOUR SEGMENTS   */ 06107000
         LR    CNT,@15                                          02S1787 06108000
         B     @DE01787                                         02S1787 06109000
@DL01787 DS    0H                                               02S1788 06110000
*          GRCHARHD(CNT) = SEGHEAD;    /* SET SEGMENT HEADING        */ 06111000
         LR    @03,CNT                                          02S1788 06112000
         MH    @03,@CH00375                                     02S1788 06113000
         SLR   @15,@15                                          02S1788 06114000
         ICM   @15,3,NEXT(BUFAD)                                02S1788 06115000
         MH    @15,@CH00190                                     02S1788 06116000
         AL    @15,@CF01883                                     02S1788 06117000
         LA    @15,MSGSAVE-10648(@15,BUFAD)                     02S1788 06118000
         AH    @15,@CH00060                                     02S1788 06119000
         ST    @03,@TF00002                                     02S1788 06120000
         ALR   @03,@15                                          02S1788 06121000
         AL    @03,@CF01907                                     02S1788 06122000
         MVI   GRCHARHD+8(@03),C' '                             02S1788 06123000
         MVC   GRCHARHD+9(21,@03),GRCHARHD+8(@03)               02S1788 06124000
         MVC   GRCHARHD(8,@03),SEGHEAD                          02S1788 06125000
*          FWORK = (HPGN - ONE) * FOUR /* DETERMINE SEGMENT NUMBER   */ 06126000
*           + CNT;                     /*                            */ 06127000
         L     @03,HPGN                                         02S1789 06128000
         BCTR  @03,0                                            02S1789 06129000
         SLA   @03,2                                            02S1789 06130000
         ALR   @03,CNT                                          02S1789 06131000
         ST    @03,FWORK(,BUFAD)                                02S1789 06132000
*          CVD(FWORK,DWORK);           /* MAKE SEGMENT               */ 06133000
         CVD   @03,DWORK(,BUFAD)                                02S1790 06134000
*          UNPK(CWORK,PWORK);          /* NUMBER                     */ 06135000
         UNPK  CWORK(4,BUFAD),PWORK(2,BUFAD)                    02S1791 06136000
*          CWORK(LENGTH(CWORK)) =      /* PRINTABLE.                 */ 06137000
*            CWORK(LENGTH(CWORK)) | MASK;/*                          */ 06138000
         OI    CWORK+3(BUFAD),C'0'                              02S1792 06139000
*          SEGNO(CNT)                  /* SET NO. IN HDG.            */ 06140000
*           = CWORK(TWO:LENGTH(CWORK));                         02S1793 06141000
         AL    @15,@TF00002                                     02S1793 06142000
         AL    @15,@CF01908                                     02S1793 06143000
         MVC   SEGNO-11(3,@15),CWORK+1(BUFAD)                   02S1793 06144000
*        END;                          /* SEGMENT HEADING END.       */ 06145000
         AH    CNT,@CH00060                                     02S1794 06146000
@DE01787 CR    CNT,HCNT                                         02S1794 06147000
         BNH   @DL01787                                         02S1794 06148000
*        NEXT = NEXT + ONE;            /* INCREMENT PRINT QUEUE      */ 06149000
         LA    @15,1                                            02S1795 06150000
         SLR   @14,@14                                          02S1795 06151000
         ICM   @14,3,NEXT(BUFAD)                                02S1795 06152000
         ALR   @14,@15                                          02S1795 06153000
         STH   @14,NEXT(,BUFAD)                                 02S1795 06154000
*        PRTQELEM = SINGL;             /* SINGLE SPACE CLEAR LINE.   */ 06155000
         MH    @14,@CH00190                                     02S1796 06156000
         AL    @14,@CF01883                                     02S1796 06157000
         LA    @14,MSGSAVE-10648(@14,BUFAD)                     02S1796 06158000
         MVI   PRTQELEM+1(@14),C' '                             02S1796 06159000
         MVC   PRTQELEM+2(119,@14),PRTQELEM+1(@14)              02S1796 06160000
         MVI   PRTQELEM(@14),C' '                               02S1796 06161000
*        DO                            /* ASSIGNMENT HEADING START.  */ 06162000
*         CNT = ONE                    /* CONTINUATION OF            */ 06163000
*         TO HCNT;                     /* HEADING                    */ 06164000
         LR    CNT,@15                                          02S1797 06165000
         B     @DE01797                                         02S1797 06166000
@DL01797 DS    0H                                               02S1798 06167000
*          GRCHARHD(CNT) = GRAFHEAD;   /* INITIALIZE HEADING         */ 06168000
         LR    @03,CNT                                          02S1798 06169000
         MH    @03,@CH00375                                     02S1798 06170000
         SLR   @15,@15                                          02S1798 06171000
         ICM   @15,3,NEXT(BUFAD)                                02S1798 06172000
         MH    @15,@CH00190                                     02S1798 06173000
         AL    @15,@CF01883                                     02S1798 06174000
         LA    @15,MSGSAVE-10648(@15,BUFAD)                     02S1798 06175000
         AH    @15,@CH00060                                     02S1798 06176000
         ST    @03,@TF00002                                     02S1798 06177000
         ALR   @03,@15                                          02S1798 06178000
         AL    @03,@CF01907                                     02S1798 06179000
         MVC   GRCHARHD(30,@03),GRAFHEAD                        02S1798 06180000
*          UNITS = GASNMT;             /* ASSIGNMENT FROM SEGMENT    */ 06181000
         LR    @03,CNT                                          02S1799 06182000
         MH    @03,@CH00610                                     02S1799 06183000
         AL    @03,@CF01891                                     02S1799 06184000
         LA    @03,GRAFBOD(@03,BUFFPTR)                         02S1799 06185000
         MVC   UNITS(1,BUFAD),GASNMT(@03)                       02S1799 06186000
*          UNPK(CWORK(1:3),CWORK(2:3));/* MAKE                       */ 06187000
         UNPK  CWORK(3,BUFAD),CWORK+1(2,BUFAD)                  02S1800 06188000
*          FWORK = FWORK & MSK0F;      /* ASSIGNMENT                 */ 06189000
         L     @14,FWORK(,BUFAD)                                02S1801 06190000
         N     @14,@CF00797                                     02S1801 06191000
         ST    @14,FWORK(,BUFAD)                                02S1801 06192000
*          TR(UWORK,TRTAB);            /* VALUE                      */ 06193000
         TR    UWORK(2,BUFAD),TRTAB                             02S1802 06194000
*          GRASN(CNT) = UWORK;         /* PRINTABLE.                 */ 06195000
         LR    @14,@15                                          02S1803 06196000
         AL    @14,@TF00002                                     02S1803 06197000
         AL    @14,@CF01908                                     02S1803 06198000
         MVC   GRASN-11(2,@14),UWORK(BUFAD)                     02S1803 06199000
*          IF PITBITS(ONE) = ONNER     /* CHECK FOR 15 PITCH.        */ 06200000
*            THEN                      /*                            */ 06201000
         TM    PITBITS(@03),B'00110000'                         02S1804 06202000
         BNO   @RF01804                                         02S1804 06203000
*              GRPIT(CNT) = CHAR5;     /* INDICATE 15 PITCH.         */ 06204000
         AL    @15,@TF00002                                     02S1805 06205000
         AL    @15,@CF01909                                     02S1805 06206000
         MVI   GRPIT-22(@15),C'5'                               02S1805 06207000
*            ELSE                      /*                            */ 06208000
*            IF PIT2(ONE) = ON         /* CHECK FOR 12 PITCH.        */ 06209000
*              THEN                    /*                            */ 06210000
         B     @RC01804                                         02S1806 06211000
@RF01804 LR    @03,CNT                                          02S1806 06212000
         MH    @03,@CH00610                                     02S1806 06213000
         AL    @03,@CF01891                                     02S1806 06214000
         LA    @03,GRAFBOD(@03,BUFFPTR)                         02S1806 06215000
         TM    PIT2(@03),B'00010000'                            02S1806 06216000
         BNO   @RF01806                                         02S1806 06217000
*                GRPIT(CNT) = CHAR2;   /* INDICATE 12 PITCH.         */ 06218000
         LR    @03,CNT                                          02S1807 06219000
         MH    @03,@CH00375                                     02S1807 06220000
         SLR   @15,@15                                          02S1807 06221000
         ICM   @15,3,NEXT(BUFAD)                                02S1807 06222000
         MH    @15,@CH00190                                     02S1807 06223000
         AL    @15,@CF01883                                     02S1807 06224000
         LA    @15,MSGSAVE-10648(@15,BUFAD)                     02S1807 06225000
         ALR   @15,@03                                          02S1807 06226000
         AL    @15,@CF01910                                     02S1807 06227000
         MVI   GRPIT-22(@15),C'2'                               02S1807 06228000
*              ELSE;                   /* MUST BE 10 PITCH.          */ 06229000
@RF01806 DS    0H                                               02S1809 06230000
*        END;                          /* END ASSIGNMENT HEADING.    */ 06231000
@RC01804 AH    CNT,@CH00060                                     02S1809 06232000
@DE01797 CR    CNT,HCNT                                         02S1809 06233000
         BNH   @DL01797                                         02S1809 06234000
*        NEXT = NEXT + ONE;            /* INCREMENT PRINT QUEUE.     */ 06235000
         LA    @15,1                                            02S1810 06236000
         SLR   @14,@14                                          02S1810 06237000
         ICM   @14,3,NEXT(BUFAD)                                02S1810 06238000
         ALR   @14,@15                                          02S1810 06239000
         STH   @14,NEXT(,BUFAD)                                 02S1810 06240000
*        PRTQELEM = SINGL;             /* SINGLE SPACE.              */ 06241000
         MH    @14,@CH00190                                     02S1811 06242000
         AL    @14,@CF01883                                     02S1811 06243000
         LA    @14,MSGSAVE-10648(@14,BUFAD)                     02S1811 06244000
         MVI   PRTQELEM+1(@14),C' '                             02S1811 06245000
         MVC   PRTQELEM+2(119,@14),PRTQELEM+1(@14)              02S1811 06246000
         MVI   PRTQELEM(@14),C' '                               02S1811 06247000
*        DO                            /* SET COLUMN HEADING.        */ 06248000
*         CNT = ONE                    /*                            */ 06249000
*         TO HCNT;                     /*                            */ 06250000
         LR    CNT,@15                                          02S1812 06251000
         B     @DE01812                                         02S1812 06252000
@DL01812 DS    0H                                               02S1813 06253000
*          BITHD = BITHEAD;            /* ONE THRU EIGHTEEN.         */ 06254000
         LR    @03,CNT                                          02S1813 06255000
         MH    @03,@CH00375                                     02S1813 06256000
         SLR   @15,@15                                          02S1813 06257000
         ICM   @15,3,NEXT(BUFAD)                                02S1813 06258000
         MH    @15,@CH00190                                     02S1813 06259000
         AL    @15,@CF01883                                     02S1813 06260000
         LA    @15,MSGSAVE-10648(@15,BUFAD)                     02S1813 06261000
         AL    @15,@CF01911                                     02S1813 06262000
         LA    @03,GRCHARHD(@03,@15)                            02S1813 06263000
         LA    @03,GRAFBIT(,@03)                                02S1813 06264000
         MVC   BITHD(18,@03),BITHEAD                            02S1813 06265000
*        END;                          /*                            */ 06266000
         AH    CNT,@CH00060                                     02S1814 06267000
@DE01812 CR    CNT,HCNT                                         02S1814 06268000
         BNH   @DL01812                                         02S1814 06269000
*/********************************************************************* 06270000
**                                                                    * 06271000
**  THIS SECTION WILL INTERROGATE UP TO FOUR SEGMENTS AT A TIME AND   * 06272000
**  DEVELOPE A GRAPHIC REPRESENTATION OF THE CHARACTER.               * 06273000
**                                                                    * 06274000
**********************************************************************/ 06275000
*         DO                           /* START CHARACTER DEVELOPMENT*/ 06276000
*          YCNT = ONE                  /* INITIALIZE VERTICAL COUNTER*/ 06277000
*          TO DIM(RASTER);             /*                            */ 06278000
         LA    YCNT,1                                           02S1815 06279000
@DL01815 DS    0H                                               02S1816 06280000
*           NEXT = NEXT + ONE;         /* INCREMENT PRINT QUEUE      */ 06281000
         LA    @04,1                                            02S1816 06282000
         SLR   @00,@00                                          02S1816 06283000
         ICM   @00,3,NEXT(BUFAD)                                02S1816 06284000
         ALR   @04,@00                                          02S1816 06285000
         STH   @04,NEXT(,BUFAD)                                 02S1816 06286000
*           PRTQELEM = SINGL;          /* SINGLE SPACE AND CLEAR     */ 06287000
         MH    @04,@CH00190                                     02S1817 06288000
         AL    @04,@CF01883                                     02S1817 06289000
         LA    @04,MSGSAVE-10648(@04,BUFAD)                     02S1817 06290000
         MVI   PRTQELEM+1(@04),C' '                             02S1817 06291000
         MVC   PRTQELEM+2(119,@04),PRTQELEM+1(@04)              02S1817 06292000
         MVI   PRTQELEM(@04),C' '                               02S1817 06293000
*           FWORK = YCNT;              /* LINE NUMBER FOR CONVERT.   */ 06294000
         ST    YCNT,FWORK(,BUFAD)                               02S1818 06295000
*           CALL CONVERT;              /* NO. RETURNS IN CWORK2.     */ 06296000
         BAL   @14,CONVERT                                      02S1819 06297000
*           RESPECIFY (SHIFT) RESTRICTED;                       02S1820 06298000
*           DO                         /* DEVELOPE UP TO FOUR        */ 06299000
*            CNT = ONE                 /* CHARACTERS AT A TIME.      */ 06300000
*            TO HCNT;                  /*                            */ 06301000
         LA    CNT,1                                            02S1821 06302000
         B     @DE01821                                         02S1821 06303000
@DL01821 DS    0H                                               02S1822 06304000
*            LNO = CWORK2;             /* LABEL THIS LINE.           */ 06305000
         LR    @03,CNT                                          02S1822 06306000
         MH    @03,@CH00375                                     02S1822 06307000
         LA    @15,1                                            02S1822 06308000
         SLR   @14,@14                                          02S1822 06309000
         ICM   @14,3,NEXT(BUFAD)                                02S1822 06310000
         MH    @14,@CH00190                                     02S1822 06311000
         AL    @14,@CF01883                                     02S1822 06312000
         LA    @14,MSGSAVE-10648(@14,BUFAD)                     02S1822 06313000
         ALR   @14,@15                                          02S1822 06314000
         AL    @14,@CF01907                                     02S1822 06315000
         LA    @03,GRCHARHD(@03,@14)                            02S1822 06316000
         MVC   LNO(2,@03),CWORK2(BUFAD)                         02S1822 06317000
*            DOT1 = PERIOD;            /* SET MARGINS.               */ 06318000
         MVI   DOT1(@03),C'.'                                   02S1823 06319000
*            DOT2 = PERIOD;            /*                            */ 06320000
         MVI   DOT2(@03),C'.'                                   02S1824 06321000
*            SHIFT = RASTER(YCNT);     /* GET ONE RASTER SCAN LINE.  */ 06322000
         LR    @03,YCNT                                         02S1825 06323000
         MH    @03,@CH00111                                     02S1825 06324000
         LR    @14,CNT                                          02S1825 06325000
         MH    @14,@CH00610                                     02S1825 06326000
         AL    @14,@CF01891                                     02S1825 06327000
         LA    @14,GRAFBOD(@14,BUFFPTR)                         02S1825 06328000
         AL    @14,@CF01892                                     02S1825 06329000
         L     SHIFT,RASTER-1(@03,@14)                          02S1825 06330000
         LA    SHIFT,0(,SHIFT)                                  02S1825 06331000
*            SRL(SHIFT,SIX);           /* ONLY NEED GRAPHIC          */ 06332000
         SRL   SHIFT,6                                          02S1826 06333000
*            SLL(SHIFT,FORTN);         /*  BITS.                     */ 06334000
         SLL   SHIFT,14                                         02S1827 06335000
*             DO                       /* INTERROGATE ONE RASTER     */ 06336000
*              XCNT = ONE              /* SCAN LINE.                 */ 06337000
*              TO DIM(GRAFBIT)         /*                            */ 06338000
*              WHILE SHIFT ^= ZERO;    /* FINISHED WHEN OUT OF BITS. */ 06339000
         LR    XCNT,@15                                         02S1828 06340000
@DL01828 SLR   @15,@15                                          02S1828 06341000
         CR    SHIFT,@15                                        02S1828 06342000
         BE    @DC01828                                         02S1828 06343000
*               IF SHIFT < ZERO        /* CHECK HI ORDER FOR BIT.    */ 06344000
*                THEN                  /* CHECK PITCH RANGE.         */ 06345000
         CR    SHIFT,@15                                        02S1829 06346000
         BNL   @RF01829                                         02S1829 06347000
*                  IF (XCNT<FOUR&PIT1(ONE)=ON)                  02S1830 06348000
*                   | (XCNT>FIFTN&PIT2(ONE)=ON)                 02S1830 06349000
*                    THEN              /*                            */ 06350000
         CH    XCNT,@CH00050                                    02S1830 06351000
         BNL   @GL00046                                         02S1830 06352000
         LR    @15,CNT                                          02S1830 06353000
         MH    @15,@CH00610                                     02S1830 06354000
         AL    @15,@CF01891                                     02S1830 06355000
         LA    @15,GRAFBOD(@15,BUFFPTR)                         02S1830 06356000
         TM    PIT1(@15),B'00100000'                            02S1830 06357000
         BO    @RT01830                                         02S1830 06358000
@GL00046 CH    XCNT,@CH00155                                    02S1830 06359000
         BNH   @RF01830                                         02S1830 06360000
         LR    @15,CNT                                          02S1830 06361000
         MH    @15,@CH00610                                     02S1830 06362000
         AL    @15,@CF01891                                     02S1830 06363000
         LA    @15,GRAFBOD(@15,BUFFPTR)                         02S1830 06364000
         TM    PIT2(@15),B'00010000'                            02S1830 06365000
         BNO   @RF01830                                         02S1830 06366000
@RT01830 DS    0H                                               02S1831 06367000
*                      GRAFBIT(XCNT)   /* DOLLAR SIGN PRINTS FOR BIT */ 06368000
*                       = DOLLA;       /* OUT OF RANGE.              */ 06369000
         LR    @15,CNT                                          02S1831 06370000
         MH    @15,@CH00375                                     02S1831 06371000
         SLR   @14,@14                                          02S1831 06372000
         ICM   @14,3,NEXT(BUFAD)                                02S1831 06373000
         MH    @14,@CH00190                                     02S1831 06374000
         AL    @14,@CF01883                                     02S1831 06375000
         LA    @14,MSGSAVE-10648(@14,BUFAD)                     02S1831 06376000
         AL    @14,@CF01911                                     02S1831 06377000
         LA    @15,GRCHARHD(@15,@14)                            02S1831 06378000
         ALR   @15,XCNT                                         02S1831 06379000
         MVI   GRAFBIT-1(@15),C'$'                              02S1831 06380000
*                    ELSE              /*                            */ 06381000
*                      GRAFBIT(XCNT)   /* ASTERISK PRINTS FOR        */ 06382000
*                       = SPLAT;       /* VALID BIT.                 */ 06383000
         B     @RC01830                                         02S1832 06384000
@RF01830 LR    @15,CNT                                          02S1832 06385000
         MH    @15,@CH00375                                     02S1832 06386000
         SLR   @14,@14                                          02S1832 06387000
         ICM   @14,3,NEXT(BUFAD)                                02S1832 06388000
         MH    @14,@CH00190                                     02S1832 06389000
         AL    @14,@CF01883                                     02S1832 06390000
         LA    @14,MSGSAVE-10648(@14,BUFAD)                     02S1832 06391000
         AL    @14,@CF01911                                     02S1832 06392000
         LA    @15,GRCHARHD(@15,@14)                            02S1832 06393000
         ALR   @15,XCNT                                         02S1832 06394000
         MVI   GRAFBIT-1(@15),C'*'                              02S1832 06395000
*              SLL(SHIFT,ONE);         /* GET NEXT BIT TO HI ORDER.  */ 06396000
@RC01830 DS    0H                                               02S1833 06397000
@RF01829 SLL   SHIFT,1                                          02S1833 06398000
*            END;                      /* END THIS RASTER SCAN.      */ 06399000
         AH    XCNT,@CH00060                                    02S1834 06400000
         CH    XCNT,@CH00183                                    02S1834 06401000
         BNH   @DL01828                                         02S1834 06402000
@DC01828 DS    0H                                               02S1835 06403000
*          END;                        /* END THIS LINE.             */ 06404000
         AH    CNT,@CH00060                                     02S1835 06405000
@DE01821 CR    CNT,HCNT                                         02S1835 06406000
         BNH   @DL01821                                         02S1835 06407000
*          RESPECIFY (SHIFT) UNRESTRICTED;                      02S1836 06408000
*        END;                          /* END THIS GROUP.            */ 06409000
         AH    YCNT,@CH00060                                    02S1837 06410000
         CH    YCNT,@CH00053                                    02S1837 06411000
         BNH   @DL01815                                         02S1837 06412000
*          BUFFPTR                     /* STEP TO NEXT               */ 06413000
*           = BUFFPTR + HCNT * LENGTH(GRAFSEG);                 01S1838 06414000
         LR    @00,HCNT                                         01S1838 06415000
         MH    @00,@CH00610                                     01S1838 06416000
         ALR   BUFFPTR,@00                                      01S1838 06417000
*          IF NEXT => PGFUL            /* CHECK FOR FULL PAGE OR     */ 06418000
*           | SEGCNT = ZERO            /* LAST SEGMENT IN QUEUE      */ 06419000
*            THEN                      /*                            */ 06420000
         CLC   NEXT(2,BUFAD),@CH00746                           01S1839 06421000
         BNL   @RT01839                                         01S1839 06422000
         ICM   @07,3,SEGCNT(BUFAD)                              01S1839 06423000
         BNZ   @RF01839                                         01S1839 06424000
@RT01839 DS    0H                                               01S1840 06425000
*              CALL PRINTQ;            /* PRINT ONE PAGE.            */ 06426000
         BAL   @14,PRINTQ                                       01S1840 06427000
*            ELSE;                     /*                            */ 06428000
@RF01839 DS    0H                                               01S1842 06429000
*        END;                          /* END SEGMENT PRINT.         */ 06430000
@DE01774 ICM   @07,3,SEGCNT(BUFAD)                              01S1842 06431000
         BNZ   @DL01774                                         01S1842 06432000
*        GEN REFS(SAVE2)               /******************************/ 06433000
*          (L  @13,SAVE2+BACK(,BUFAD));/* RESTORE BACKWARD POINTER.  */ 06434000
         L  @13,SAVE2+BACK(,BUFAD)                                      06435000
*        RESPECIFY (BUFFPTR) UNRESTRICTED;                      01S1844 06436000
*   END GCMPRT;                        /* RETURN TO CALLER.          */ 06437000
@EL00024 DS    0H                                               01S1845 06438000
@EF00024 DS    0H                                               01S1845 06439000
@ER00024 LM    @14,@12,12(@13)                                  01S1845 06440000
         BR    @14                                              01S1845 06441000
         EJECT                                                          06442000
*/********************************************************************* 06443000
**                                                                    * 06444000
**  THIS ROUTINE WILL TEST TO INSURE THE DELETE SEGMENT REQUEST WAS   * 06445000
**  SATISFIED AND, IF NOT, WILL ISSUE APPROPRIATE MESSAGES.           * 06446000
**                                                                    * 06447000
**********************************************************************/ 06448000
*DELCHK:                                                        01S1846 06449000
*   PROCEDURE OPTIONS(NOSAVEAREA);                              01S1846 06450000
DELCHK   STM   @14,@12,12(@13)                                  01S1846 06451000
*        GEN REFS(SAVE2);              /* USE CONVENTIONAL SAVE.     */ 06452000
         ST  @13,SAVE2+BACK(,BUFAD)    BACKWARD POINTER.                06453000
         LA  @14,SAVE2(,BUFAD)         THIS ROUTINE SAVE AREA.          06454000
         ST  @14,FORE(,@13)            FORWARD POINTER.                 06455000
         LR  @13,@14                   LINKAGE COMPLETE.                06456000
*        DO                            /*                            */ 06457000
*         CNT = ONE                    /* CHECK ENTIRE DELETE ARRAY. */ 06458000
*         TO DIM(DEL)                  /*  AS LONG AS THERE ARE      */ 06459000
*         WHILE SCNT > ONE;            /*  ENTRIES TO BE HONORED.    */ 06460000
         LA    CNT,1                                            01S1848 06461000
@DL01848 CLC   SCNT(2,BUFAD),@CH00060                           01S1848 06462000
         BNH   @DC01848                                         01S1848 06463000
*          IF DEL(CNT) ^= ZERO         /* NONZERO ENTRIES INDICATE   */ 06464000
*            THEN                      /*                            */ 06465000
         SLR   @03,@03                                          01S1849 06466000
         IC    @03,DEL+795(CNT,BUFAD)                           01S1849 06467000
         CH    @03,@CH00462                                     01S1849 06468000
         BE    @RF01849                                         01S1849 06469000
*              DO;                     /* DELETE NOT HONORED.        */ 06470000
*                CVD(CNT,DWORK);       /* CONVERT SEGMENT NUMBER     */ 06471000
         CVD   CNT,DWORK(,BUFAD)                                01S1851 06472000
*                UNPK(CWORK,PWORK);    /*  TO                        */ 06473000
         UNPK  CWORK(4,BUFAD),PWORK(2,BUFAD)                    01S1852 06474000
*                CWORK(LENGTH(CWORK))  /*  PRINTABLE CHARACTERS.     */ 06475000
*                 = CWORK(LENGTH(CWORK)) | MASK;                01S1853 06476000
         OI    CWORK+3(BUFAD),C'0'                              01S1853 06477000
*                EDITDATA(ONE)         /* SET DATA ADDRESS FOR MSG.  */ 06478000
*                 = ADDR(CWORK);       /*                            */ 06479000
         LA    @03,CWORK(,BUFAD)                                01S1854 06480000
         STCM  @03,7,EDITDATA(BUFAD)                            01S1854 06481000
*                EDITLEN(ONE)          /* SET DATA LENGTH ALSO.      */ 06482000
*                 = LENGTH(CWORK);     /*                            */ 06483000
         MVI   EDITLEN(BUFAD),X'04'                             01S1855 06484000
*                MSGN = IEBA24I;       /* NON-EXISTENT SEGMENT.      */ 06485000
         MVI   MSGN(BUFAD),X'18'                                01S1856 06486000
*                CALL IEBIMSGS;        /* PRINT IT.                  */ 06487000
         L     @15,@CV00037                                     01S1857 06488000
         BALR  @14,@15                                          01S1857 06489000
*                INHIBITW = ON;        /* PREVENT LIBRARY UPDATE.    */ 06490000
         OI    INHIBITW(BUFAD),B'01000000'                      01S1858 06491000
*                SCNT = SCNT - ONE;    /* DECREMENT SCAN COUNTER.    */ 06492000
         SLR   @03,@03                                          01S1859 06493000
         ICM   @03,3,SCNT(BUFAD)                                01S1859 06494000
         BCTR  @03,0                                            01S1859 06495000
         STH   @03,SCNT(,BUFAD)                                 01S1859 06496000
*              END;                    /*                            */ 06497000
*            ELSE;                     /*                            */ 06498000
@RF01849 DS    0H                                               01S1862 06499000
*        END;                          /* END OF DELETE TEST.        */ 06500000
         AH    CNT,@CH00060                                     01S1862 06501000
         CH    CNT,@CH00252                                     01S1862 06502000
         BNH   @DL01848                                         01S1862 06503000
@DC01848 DS    0H                                               01S1863 06504000
*        GEN REFS(SAVE2)               /*****************************/  06505000
*         (L  @13,SAVE2+BACK(,BUFAD)); /* RESTORE BACKWARD POINTER.  */ 06506000
         L  @13,SAVE2+BACK(,BUFAD)                                      06507000
*  END DELCHK;                         /* RETURN TO CALLER.          */ 06508000
@EL00025 DS    0H                                               01S1864 06509000
@EF00025 DS    0H                                               01S1864 06510000
@ER00025 LM    @14,@12,12(@13)                                  01S1864 06511000
         BR    @14                                              01S1864 06512000
         EJECT                                                          06513000
*/********************************************************************* 06514000
**                                                                    * 06515000
**  THIS ROUTINE WILL TEST A GRAPHIC CHARACTER MODIFICATION MODULE    * 06516000
**  FOR VALIDITY AND INDICATE WHICH SEGMENTS ARE INVLAID.             * 06517000
**                                                                    * 06518000
**********************************************************************/ 06519000
*GRFCHK:                                                        01S1865 06520000
*   PROCEDURE OPTIONS(NOSAVEAREA);                              01S1865 06521000
GRFCHK   STM   @14,@12,12(@13)                                  01S1865 06522000
*        GEN REFS(SAVE2);              /* USE CONVENTIONAL SAVE.     */ 06523000
         ST  @13,SAVE2+BACK(,BUFAD)    BACKWARD POINTER.                06524000
         LA  @14,SAVE2(,BUFAD)         THIS ROUTINE SAVE AREA.          06525000
         ST  @14,FORE(,@13)            FORWARD POINTER.                 06526000
         LR  @13,@14                   LINKAGE COMPLETE.                06527000
*        RESPECIFY (BUFFPTR,SHIFT) RESTRICTED;                  01S1867 06528000
*        IF READMOD = ON               /* CHECK FOR READ/PRINT ONLY  */ 06529000
*         & LOADFLAG = ALBIT           /* AND MODULE LOADED.         */ 06530000
*          THEN                        /*                            */ 06531000
         TM    READMOD(BUFAD),B'00000001'                       01S1868 06532000
         BNO   @RF01868                                         01S1868 06533000
         CLI   LOADFLAG(BUFAD),X'FF'                            01S1868 06534000
         BNE   @RF01868                                         01S1868 06535000
*            DO;                       /*                            */ 06536000
*              SEGCNT = LMODCNT;       /* GET MODULE COUNT.          */ 06537000
         SLR   @07,@07                                          01S1870 06538000
         ICM   @07,7,LOADMOD(BUFAD)                             01S1870 06539000
         MVC   SEGCNT(2,BUFAD),LMODCNT(@07)                     01S1870 06540000
*              BUFFPTR = ADDR(LMODBOD);/* SET ADDRESSING TO STOR ADDR*/ 06541000
         LA    BUFFPTR,LMODBOD(,@07)                            01S1871 06542000
*            END;                      /*                            */ 06543000
*          ELSE                        /* MODULE IS IN BUFFER.       */ 06544000
*            DO;                       /*                            */ 06545000
         B     @RC01868                                         01S1873 06546000
@RF01868 DS    0H                                               01S1874 06547000
*              SEGCNT=MODCNT;          /* GET MODULE COUNT.          */ 06548000
         MVC   SEGCNT(2,BUFAD),MODCNT(BUFAD)                    01S1874 06549000
*              BUFFPTR = ADDR(MODBOD); /* SET ADDRESSING TO BUFFER.  */ 06550000
         LA    BUFFPTR,MODBOD(,BUFAD)                           01S1875 06551000
*            END;                      /*                            */ 06552000
*        SEGCNT=SEGCNT/LENGTH(GRAFSEG);/* REDUCE TO 73 BYTE SEGS.    */ 06553000
@RC01868 LH    @02,SEGCNT(,BUFAD)                               01S1877 06554000
         SRDA  @02,32                                           01S1877 06555000
         D     @02,@CF00610                                     01S1877 06556000
         STH   @03,SEGCNT(,BUFAD)                               01S1877 06557000
*        ASGNSAVE = ASGNSAVE&&ASGNSAVE;/* CLEAR DUPLICATION AREA.    */ 06558000
         XC    ASGNSAVE+796(256,BUFAD),ASGNSAVE+796(BUFAD)      01S1878 06559000
*        DO                            /* START MODULE SCAN.         */ 06560000
*         CNT=ONE                      /* SCAN ALL SEGMENTS          */ 06561000
*         TO BIGNUM                    /* COULD BE PRINT SPEC.       */ 06562000
*         WHILE SEGCNT^=ZERO;          /*                            */ 06563000
         LA    CNT,1                                            01S1879 06564000
@DL01879 SLR   @07,@07                                          01S1879 06565000
         CH    @07,SEGCNT(,BUFAD)                               01S1879 06566000
         BE    @DC01879                                         01S1879 06567000
*          PRTYERR = OFF;              /*                            */ 06568000
*          FMTERR = OFF;               /* RESET ERROR INDICATORS.    */ 06569000
*          FMTERR1 = OFF;              /*                            */ 06570000
         NI    PRTYERR(BUFAD),B'11110001'                       01S1882 06571000
*          TESTP = ZERO;               /* RESET PITCH & PARITY WORK. */ 06572000
         STH   @07,TESTP(,BUFAD)                                01S1883 06573000
*          IF PIT1(ONE) = ON           /*                            */ 06574000
*            THEN                      /*                            */ 06575000
         LR    @07,CNT                                          01S1884 06576000
         MH    @07,@CH00610                                     01S1884 06577000
         AL    @07,@CF01891                                     01S1884 06578000
         LA    @07,GRAFBOD(@07,BUFFPTR)                         01S1884 06579000
         TM    PIT1(@07),B'00100000'                            01S1884 06580000
         BNO   @RF01884                                         01S1884 06581000
*              TP1 = ON;               /* SET PITCH BIT ONE          */ 06582000
         OI    TP1(BUFAD),B'10000000'                           01S1885 06583000
*          IF PIT2(ONE) = ON           /*                            */ 06584000
*            THEN                      /*                            */ 06585000
@RF01884 LR    @07,CNT                                          01S1886 06586000
         MH    @07,@CH00610                                     01S1886 06587000
         AL    @07,@CF01891                                     01S1886 06588000
         LA    @07,GRAFBOD(@07,BUFFPTR)                         01S1886 06589000
         TM    PIT2(@07),B'00010000'                            01S1886 06590000
         BNO   @RF01886                                         01S1886 06591000
*              TP2 = ON;               /* SET PITCH BIT TWO          */ 06592000
         OI    TP2(BUFAD),B'01000000'                           01S1887 06593000
*          DO                          /*                            */ 06594000
*           YCNT = ONE                 /* START SEGMENT SCAN.        */ 06595000
*           TO DIM(RASTER);            /*                            */ 06596000
@RF01886 LA    YCNT,1                                           01S1888 06597000
@DL01888 DS    0H                                               01S1889 06598000
*            IF (TP1=ON & PIT1(YCNT)=OFF)/*                          */ 06599000
*             | (TP1=OFF & PIT1(YCNT)=ON)/*  CHECK FOR CONSISTENT    */ 06600000
*             | (TP2=ON & PIT2(YCNT)=OFF)/*  PITCH WITHIN SEGMENT.   */ 06601000
*             | (TP2=OFF & PIT2(YCNT)=ON)/*                          */ 06602000
*              THEN                    /*                            */ 06603000
         TM    TP1(BUFAD),B'10000000'                           01S1889 06604000
         BNO   @GL00053                                         01S1889 06605000
         LR    @07,YCNT                                         01S1889 06606000
         MH    @07,@CH00111                                     01S1889 06607000
         LR    @03,CNT                                          01S1889 06608000
         MH    @03,@CH00610                                     01S1889 06609000
         AL    @03,@CF01891                                     01S1889 06610000
         LA    @03,GRAFBOD(@03,BUFFPTR)                         01S1889 06611000
         ALR   @03,@07                                          01S1889 06612000
         TM    PIT1-3(@03),B'00100000'                          01S1889 06613000
         BZ    @RT01889                                         01S1889 06614000
@GL00053 TM    TP1(BUFAD),B'10000000'                           01S1889 06615000
         BNZ   @GL00052                                         01S1889 06616000
         LR    @07,YCNT                                         01S1889 06617000
         MH    @07,@CH00111                                     01S1889 06618000
         LR    @03,CNT                                          01S1889 06619000
         MH    @03,@CH00610                                     01S1889 06620000
         AL    @03,@CF01891                                     01S1889 06621000
         LA    @03,GRAFBOD(@03,BUFFPTR)                         01S1889 06622000
         ALR   @03,@07                                          01S1889 06623000
         TM    PIT1-3(@03),B'00100000'                          01S1889 06624000
         BO    @RT01889                                         01S1889 06625000
@GL00052 TM    TP2(BUFAD),B'01000000'                           01S1889 06626000
         BNO   @GL00051                                         01S1889 06627000
         LR    @07,YCNT                                         01S1889 06628000
         MH    @07,@CH00111                                     01S1889 06629000
         LR    @03,CNT                                          01S1889 06630000
         MH    @03,@CH00610                                     01S1889 06631000
         AL    @03,@CF01891                                     01S1889 06632000
         LA    @03,GRAFBOD(@03,BUFFPTR)                         01S1889 06633000
         ALR   @03,@07                                          01S1889 06634000
         TM    PIT2-3(@03),B'00010000'                          01S1889 06635000
         BZ    @RT01889                                         01S1889 06636000
@GL00051 TM    TP2(BUFAD),B'01000000'                           01S1889 06637000
         BNZ   @RF01889                                         01S1889 06638000
         LR    @07,YCNT                                         01S1889 06639000
         MH    @07,@CH00111                                     01S1889 06640000
         LR    @03,CNT                                          01S1889 06641000
         MH    @03,@CH00610                                     01S1889 06642000
         AL    @03,@CF01891                                     01S1889 06643000
         LA    @03,GRAFBOD(@03,BUFFPTR)                         01S1889 06644000
         ALR   @03,@07                                          01S1889 06645000
         TM    PIT2-3(@03),B'00010000'                          01S1889 06646000
         BNO   @RF01889                                         01S1889 06647000
@RT01889 DS    0H                                               01S1890 06648000
*                FMTERR = ON;          /* INCONSISTENT PITCH.        */ 06649000
         OI    FMTERR(BUFAD),B'00001000'                        01S1890 06650000
*              ELSE                    /*                            */ 06651000
*                DO;                   /* INVERT PITCH FOR PARITY.   */ 06652000
         B     @RC01889                                         01S1891 06653000
@RF01889 DS    0H                                               01S1892 06654000
*                  TPARTY = TPITCH && FLIPPER;                  01S1892 06655000
         MVC   TPARTY(1,BUFAD),TPITCH(BUFAD)                    01S1892 06656000
         XI    TPARTY(BUFAD),X'C0'                              01S1892 06657000
*                  SHIFT = RASTER(YCNT);/* SET RASTER IN REGISTER.   */ 06658000
         LR    @07,YCNT                                         01S1893 06659000
         MH    @07,@CH00111                                     01S1893 06660000
         LR    @03,CNT                                          01S1893 06661000
         MH    @03,@CH00610                                     01S1893 06662000
         AL    @03,@CF01891                                     01S1893 06663000
         LA    @03,GRAFBOD(@03,BUFFPTR)                         01S1893 06664000
         AL    @03,@CF01892                                     01S1893 06665000
         L     SHIFT,RASTER-1(@07,@03)                          01S1893 06666000
         LA    SHIFT,0(,SHIFT)                                  01S1893 06667000
*                  SRL(SHIFT,SIX);     /* ALIGN FOR RASTER           */ 06668000
         SRL   SHIFT,6                                          01S1894 06669000
*                  SLL(SHIFT,FORTN);   /* BITS ONLY                  */ 06670000
         SLL   SHIFT,14                                         01S1895 06671000
*                  DO                  /* START RASTER SCAN.         */ 06672000
*                   XCNT = ONE         /*                            */ 06673000
*                   TO DIM(GRAFBIT)    /* SCAN AS LONG AS THERE      */ 06674000
*                   WHILE SHIFT^=ZERO; /* ARE BITS                   */ 06675000
         LA    XCNT,1                                           01S1896 06676000
@DL01896 SLR   @07,@07                                          01S1896 06677000
         CR    SHIFT,@07                                        01S1896 06678000
         BE    @DC01896                                         01S1896 06679000
*                    IF SHIFT < ZERO   /* CHECK FOR HI ORDER BIT     */ 06680000
*                      THEN            /*                            */ 06681000
         CR    SHIFT,@07                                        01S1897 06682000
         BNL   @RF01897                                         01S1897 06683000
*                        DO;           /*                            */ 06684000
*                          IF XCNT=<DIM(GRAFBIT)/TWO            01S1899 06685000
*                            THEN      /* FLIP PARITY 1ST HALF.      */ 06686000
         CH    XCNT,@CH00032                                    01S1899 06687000
         BH    @RF01899                                         01S1899 06688000
*                              TPARTY = TPARTY && FLIP1;        01S1900 06689000
         XI    TPARTY(BUFAD),X'80'                              01S1900 06690000
*                             ELSE     /* FLIP PARITY 2ND HALF.      */ 06691000
*                               TPARTY = TPARTY && FLIP2;       01S1901 06692000
         B     @RC01899                                         01S1901 06693000
@RF01899 XI    TPARTY(BUFAD),X'40'                              01S1901 06694000
*                          IF (XCNT < FOUR & TP1 = ON)          01S1902 06695000
*                           | (XCNT > FIFTN & TP2 = ON)         01S1902 06696000
*                              THEN    /* BIT OUT OF PITCH RANGE.    */ 06697000
@RC01899 CH    XCNT,@CH00050                                    01S1902 06698000
         BNL   @GL00058                                         01S1902 06699000
         TM    TP1(BUFAD),B'10000000'                           01S1902 06700000
         BO    @RT01902                                         01S1902 06701000
@GL00058 CH    XCNT,@CH00155                                    01S1902 06702000
         BNH   @RF01902                                         01S1902 06703000
         TM    TP2(BUFAD),B'01000000'                           01S1902 06704000
         BNO   @RF01902                                         01S1902 06705000
@RT01902 DS    0H                                               01S1903 06706000
*                                FMTERR1 = ON;/* SO REMEMBER IT.     */ 06707000
         OI    FMTERR1(BUFAD),B'00000100'                       01S1903 06708000
*                              ELSE;                            01S1904 06709000
@RF01902 DS    0H                                               01S1905 06710000
*                        END;          /*                            */ 06711000
*                      ELSE;           /*                            */ 06712000
@RF01897 DS    0H                                               01S1907 06713000
*                    SLL(SHIFT,ONE);   /* GET NEXT BIT.              */ 06714000
         SLL   SHIFT,1                                          01S1907 06715000
*                  END;                /* END RASTER SCAN            */ 06716000
         AH    XCNT,@CH00060                                    01S1908 06717000
         CH    XCNT,@CH00183                                    01S1908 06718000
         BNH   @DL01896                                         01S1908 06719000
@DC01896 DS    0H                                               01S1909 06720000
*                  IF (PR1 = ON & PARITY1(YCNT) = OFF)          01S1909 06721000
*                   | (PR1 = OFF& PARITY1(YCNT) = ON)           01S1909 06722000
*                   | (PR2 = ON & PARITY2(YCNT) = OFF)          01S1909 06723000
*                   | (PR2 = OFF& PARITY2(YCNT) = ON)           01S1909 06724000
*                    THEN              /* CHECK FOR INVALID PARITY.  */ 06725000
         TM    PR1(BUFAD),B'10000000'                           01S1909 06726000
         BNO   @GL00063                                         01S1909 06727000
         LR    @07,YCNT                                         01S1909 06728000
         MH    @07,@CH00111                                     01S1909 06729000
         LR    @03,CNT                                          01S1909 06730000
         MH    @03,@CH00610                                     01S1909 06731000
         AL    @03,@CF01891                                     01S1909 06732000
         LA    @03,GRAFBOD(@03,BUFFPTR)                         01S1909 06733000
         ALR   @03,@07                                          01S1909 06734000
         TM    PARITY1-3(@03),B'00001000'                       01S1909 06735000
         BZ    @RT01909                                         01S1909 06736000
@GL00063 TM    PR1(BUFAD),B'10000000'                           01S1909 06737000
         BNZ   @GL00062                                         01S1909 06738000
         LR    @07,YCNT                                         01S1909 06739000
         MH    @07,@CH00111                                     01S1909 06740000
         LR    @03,CNT                                          01S1909 06741000
         MH    @03,@CH00610                                     01S1909 06742000
         AL    @03,@CF01891                                     01S1909 06743000
         LA    @03,GRAFBOD(@03,BUFFPTR)                         01S1909 06744000
         ALR   @03,@07                                          01S1909 06745000
         TM    PARITY1-3(@03),B'00001000'                       01S1909 06746000
         BO    @RT01909                                         01S1909 06747000
@GL00062 TM    PR2(BUFAD),B'01000000'                           01S1909 06748000
         BNO   @GL00061                                         01S1909 06749000
         LR    @07,YCNT                                         01S1909 06750000
         MH    @07,@CH00111                                     01S1909 06751000
         LR    @03,CNT                                          01S1909 06752000
         MH    @03,@CH00610                                     01S1909 06753000
         AL    @03,@CF01891                                     01S1909 06754000
         LA    @03,GRAFBOD(@03,BUFFPTR)                         01S1909 06755000
         ALR   @03,@07                                          01S1909 06756000
         TM    PARITY2-3(@03),B'00000100'                       01S1909 06757000
         BZ    @RT01909                                         01S1909 06758000
@GL00061 TM    PR2(BUFAD),B'01000000'                           01S1909 06759000
         BNZ   @RF01909                                         01S1909 06760000
         LR    @07,YCNT                                         01S1909 06761000
         MH    @07,@CH00111                                     01S1909 06762000
         LR    @03,CNT                                          01S1909 06763000
         MH    @03,@CH00610                                     01S1909 06764000
         AL    @03,@CF01891                                     01S1909 06765000
         LA    @03,GRAFBOD(@03,BUFFPTR)                         01S1909 06766000
         ALR   @03,@07                                          01S1909 06767000
         TM    PARITY2-3(@03),B'00000100'                       01S1909 06768000
         BNO   @RF01909                                         01S1909 06769000
@RT01909 DS    0H                                               01S1910 06770000
*                      PRTYERR = ON;   /* REMEMBER ERROR.            */ 06771000
         OI    PRTYERR(BUFAD),B'00000010'                       01S1910 06772000
*                    ELSE;             /* NO ERROR THIS TIME.        */ 06773000
@RF01909 DS    0H                                               01S1912 06774000
*                END;                  /*                            */ 06775000
*            END;                      /* END SEGMENT SCAN.          */ 06776000
@RC01889 AH    YCNT,@CH00060                                    01S1913 06777000
         CH    YCNT,@CH00053                                    01S1913 06778000
         BNH   @DL01888                                         01S1913 06779000
*/********************************************************************* 06780000
**                                                                    * 06781000
**  THIS SECTION WILL CAUSE THE NECESSARY MESSAGE(S) TO BE PRINTED    * 06782000
**   REGARDING INVALIDITY OF THE GRAPHIC CHARACTER MODULE.            * 06783000
**                                                                    * 06784000
**********************************************************************/ 06785000
*       MSGN=ZERO;                     /* RESET FOR SUBSEQUENT TEST. */ 06786000
         MVI   MSGN(BUFAD),X'00'                                02S1914 06787000
*       CVD(CNT,DWORK);                /* CONVERT                    */ 06788000
         CVD   CNT,DWORK(,BUFAD)                                02S1915 06789000
*       UNPK(CWORK,PWORK);             /*  SEGMENT NUMBER            */ 06790000
         UNPK  CWORK(4,BUFAD),PWORK(2,BUFAD)                    02S1916 06791000
*       CWORK(LENGTH(CWORK))=          /*  TO PRINTABLE              */ 06792000
*        CWORK(LENGTH(CWORK))|MASK;    /*  AND                       */ 06793000
         OI    CWORK+3(BUFAD),C'0'                              02S1917 06794000
*       EDITDATA(ONE)=ADDR(CWORK);     /*  SET FOR                   */ 06795000
         LA    @07,CWORK(,BUFAD)                                02S1918 06796000
         STCM  @07,7,EDITDATA(BUFAD)                            02S1918 06797000
*       EDITLEN(ONE)=LENGTH(CWORK);    /*  MESSAGE EDITING.          */ 06798000
         MVI   EDITLEN(BUFAD),X'04'                             02S1919 06799000
*       IF FMTERR = ON                 /* CHECK FOR PITCH ERROR.     */ 06800000
*         THEN                         /*                            */ 06801000
         TM    FMTERR(BUFAD),B'00001000'                        02S1920 06802000
         BNO   @RF01920                                         02S1920 06803000
*           DO;                        /*                            */ 06804000
*             MSGN = IEBA40I;          /* PRINT PITCH ERROR          */ 06805000
         MVI   MSGN(BUFAD),X'28'                                02S1922 06806000
*             CALL IEBIMSGS;           /* THIS SEGMENT.              */ 06807000
         L     @15,@CV00037                                     02S1923 06808000
         BALR  @14,@15                                          02S1923 06809000
*           END;                       /*                            */ 06810000
*         ELSE                         /* NO PITCH ERROR.            */ 06811000
*           DO;                        /*                            */ 06812000
         B     @RC01920                                         02S1925 06813000
@RF01920 DS    0H                                               02S1926 06814000
*             IF FMTERR1 = ON          /* CHECK FOR RANGE ERROR.     */ 06815000
*               THEN                   /*                            */ 06816000
         TM    FMTERR1(BUFAD),B'00000100'                       02S1926 06817000
         BNO   @RF01926                                         02S1926 06818000
*                 DO;                  /*                            */ 06819000
*                   MSGN = IEBA30I;    /*                            */ 06820000
         MVI   MSGN(BUFAD),X'1E'                                02S1928 06821000
*                   CALL IEBIMSGS;     /* PRINT RANGE ERROR.         */ 06822000
         L     @15,@CV00037                                     02S1929 06823000
         BALR  @14,@15                                          02S1929 06824000
*                 END;                 /*                            */ 06825000
*               ELSE;                  /* CHECK FOR PARITY ERROR.    */ 06826000
@RF01926 DS    0H                                               02S1932 06827000
*         IF PRTYERR = ON              /* CHECK FOR PARITY ERROR.    */ 06828000
*           THEN                       /*                            */ 06829000
         TM    PRTYERR(BUFAD),B'00000010'                       02S1932 06830000
         BNO   @RF01932                                         02S1932 06831000
*             DO;                      /* RESTORE MSG EDIT INDICATOR.*/ 06832000
*               EDITLEN(ONE)=LENGTH(CWORK);                     02S1934 06833000
         MVI   EDITLEN(BUFAD),X'04'                             02S1934 06834000
*               MSGN = IEBA39I;        /* PRINT PARITY ERROR         */ 06835000
         MVI   MSGN(BUFAD),X'27'                                02S1935 06836000
*               CALL IEBIMSGS;         /* THIS SEGMENT.              */ 06837000
         L     @15,@CV00037                                     02S1936 06838000
         BALR  @14,@15                                          02S1936 06839000
*             END;                     /*                            */ 06840000
*           ELSE;                      /*                            */ 06841000
@RF01932 DS    0H                                               02S1939 06842000
*        END;                          /*                            */ 06843000
*        IF MSGN ^= ZERO               /* CHECK FOR ANY MSG PRINTED. */ 06844000
*         THEN                         /*                            */ 06845000
@RC01920 CLI   MSGN(BUFAD),0                                    02S1940 06846000
         BE    @RF01940                                         02S1940 06847000
*           DO;                        /*                            */ 06848000
*             RETSAVE =                /* SET RETURN CODE 8 THIS     */ 06849000
*               MAX(RETSAVE,RC8);      /* OPERATION.                 */ 06850000
         SLR   @07,@07                                          02S1942 06851000
         IC    @07,RETSAVE(,BUFAD)                              02S1942 06852000
         LA    @05,8                                            02S1942 06853000
         CR    @07,@05                                          02S1942 06854000
         BNL   *+6                                                      06855000
         LR    @07,@05                                          02S1942 06856000
         STC   @07,RETSAVE(,BUFAD)                              02S1942 06857000
*             INHIBITW = ON;           /* INHIBIT LIBRARY UPDATE.    */ 06858000
         OI    INHIBITW(BUFAD),B'01000000'                      02S1943 06859000
*           END;                       /*                            */ 06860000
*         ELSE;                        /*                            */ 06861000
@RF01940 DS    0H                                               02S1946 06862000
*        IF BSUFIX(ONE) ^= BLANK       /* CHECK FOR SPECIAL GRAFMOD. */ 06863000
*          THEN                        /* NOT THIS TIME.             */ 06864000
         CLI   BSUFIX(BUFAD),C' '                               02S1946 06865000
         BE    @RF01946                                         02S1946 06866000
*            IF DEL(GASNMT+ONE)=ZERO   /* CHECK FOR PREVIOUS ASSIGN. */ 06867000
*              THEN                    /*                            */ 06868000
         LR    @07,CNT                                          02S1947 06869000
         MH    @07,@CH00610                                     02S1947 06870000
         AL    @07,@CF01891                                     02S1947 06871000
         LA    @07,GRAFBOD(@07,BUFFPTR)                         02S1947 06872000
         SLR   @05,@05                                          02S1947 06873000
         IC    @05,GASNMT(,@07)                                 02S1947 06874000
         LA    @03,796                                          02S1947 06875000
         ALR   @03,BUFAD                                        02S1947 06876000
         SLR   @00,@00                                          02S1947 06877000
         IC    @00,DEL(@05,@03)                                 02S1947 06878000
         CH    @00,@CH00462                                     02S1947 06879000
         BNE   @RF01947                                         02S1947 06880000
*               DEL(GASNMT+ONE)=GASNMT;/* NO, ASSIGN.                */ 06881000
         ALR   @03,@05                                          02S1948 06882000
         MVC   DEL(1,@03),GASNMT(@07)                           02S1948 06883000
*              ELSE                    /*                            */ 06884000
*                DO;                   /* YES, RESTORE MSG EDIT IND. */ 06885000
         B     @RC01947                                         02S1949 06886000
@RF01947 DS    0H                                               02S1950 06887000
*                  EDITLEN(ONE)=LENGTH(CWORK);                  02S1950 06888000
         MVI   EDITLEN(BUFAD),X'04'                             02S1950 06889000
*                  MSGN = IEBA41I;     /* PRINT PREVIOUS ASSIGNMENT  */ 06890000
         MVI   MSGN(BUFAD),X'29'                                02S1951 06891000
*                  CALL IEBIMSGS;      /* USED.                      */ 06892000
         L     @15,@CV00037                                     02S1952 06893000
         BALR  @14,@15                                          02S1952 06894000
*                  RETSAVE =           /* SET RETURN CODE 4 THIS     */ 06895000
*                  MAX(RETSAVE,RC4);   /* OPERATION.                 */ 06896000
         SLR   @07,@07                                          02S1953 06897000
         IC    @07,RETSAVE(,BUFAD)                              02S1953 06898000
         LA    @05,4                                            02S1953 06899000
         CR    @07,@05                                          02S1953 06900000
         BNL   *+6                                                      06901000
         LR    @07,@05                                          02S1953 06902000
         STC   @07,RETSAVE(,BUFAD)                              02S1953 06903000
*                END;                  /*                            */ 06904000
*          ELSE;                       /* SPECIAL GRAFMOD.           */ 06905000
@RF01946 DS    0H                                               02S1956 06906000
*        EDITLEN(ONE) = ZERO;          /* INSURE NO MSG EDIT LENGTH. */ 06907000
@RC01946 MVI   EDITLEN(BUFAD),X'00'                             02S1956 06908000
*            SEGCNT = SEGCNT - ONE;    /* REDUCE SEGMENT COUNT.      */ 06909000
         LH    @07,SEGCNT(,BUFAD)                               01S1957 06910000
         BCTR  @07,0                                            01S1957 06911000
         STH   @07,SEGCNT(,BUFAD)                               01S1957 06912000
*        END;                          /* END MODULE SCAN.           */ 06913000
         AH    CNT,@CH00060                                     01S1958 06914000
         CH    CNT,@CH00762                                     01S1958 06915000
         BNH   @DL01879                                         01S1958 06916000
@DC01879 DS    0H                                               01S1959 06917000
*        RESPECIFY (BUFFPTR,SHIFT) UNRESTRICTED;                01S1959 06918000
*        GEN REFS(SAVE2)               /******************************/ 06919000
*         (L  @13,SAVE2+BACK(,BUFAD)); /* RESTORE BACKWARD POINTER.  */ 06920000
         L  @13,SAVE2+BACK(,BUFAD)                                      06921000
*   END GRFCHK;                                                 01S1961 06922000
@EL00026 DS    0H                                               01S1961 06923000
@EF00026 DS    0H                                               01S1961 06924000
@ER00026 LM    @14,@12,12(@13)                                  01S1961 06925000
         BR    @14                                              01S1961 06926000
         EJECT                                                          06927000
*/********************************************************************* 06928000
**                                                                    * 06929000
**  THIS ROUTINE IS THE OPEN EXIT ROUTINE FOR THE WRITE DCB FOR THE   * 06930000
**  SYSUT1 DATA SET. THE DCB BLOCK SIZE WILL BE OBTAINED FOR          * 06931000
**  SUBSEQUENT USE AS A BLOCKING FACTOR.                              * 06932000
**                                                                    * 06933000
**********************************************************************/ 06934000
*BKSZFIX:                                                       01S1962 06935000
*  PROCEDURE OPTIONS(SAVE(R14));                                01S1962 06936000
BKSZFIX  ST    @14,@SA00027                                     01S1962 06937000
*        RESPECIFY (R1) RESTRICTED;    /*                            */ 06938000
*        DCBPTR = R1;                  /* GET DCB POINTER            */ 06939000
         LR    DCBPTR,R1                                        01S1964 06940000
*        RESPECIFY (R1) UNRESTRICTED;  /*                            */ 06941000
*        IF DCBBLKSI = ZERO            /* CHECK FOR ZERO BLOCK SIZE  */ 06942000
*          THEN                        /*                            */ 06943000
         ICM   @05,3,DCBBLKSI+52(DCBPTR)                        01S1966 06944000
         BNZ   @RF01966                                         01S1966 06945000
*            DO;                       /* ISSUE DEVTYPE MACRO        */ 06946000
*              GEN REFS(LIBOUTDD)      /*  TO OBTAIN MAXIMUM TRACK   */ 06947000
*                  SETS(DWORK)         /*  SIZE TO USE AS            */ 06948000
*               (DEVTYPE  LIBOUTDD,DWORK);                      01S1968 06949000
         DEVTYPE  LIBOUTDD,DWORK                                        06950000
*              LIBBLKSZ = PWORK;       /*  BLOCKING FACTOR.          */ 06951000
         MVC   LIBBLKSZ(2,BUFAD),PWORK(BUFAD)                   01S1969 06952000
*            END;                      /*                            */ 06953000
*          ELSE                        /* USE DCB BLOCK SIZE         */ 06954000
*            LIBBLKSZ = DCBBLKSI;      /* AS BLOCKING FACTOR.        */ 06955000
         B     @RC01966                                         01S1971 06956000
@RF01966 MVC   LIBBLKSZ(2,BUFAD),DCBBLKSI+52(DCBPTR)            01S1971 06957000
*  END BKSZFIX;                        /*                            */ 06958000
@EL00027 DS    0H                                               01S1972 06959000
@EF00027 DS    0H                                               01S1972 06960000
@ER00027 L     @14,@SA00027                                     01S1972 06961000
         BR    @14                                              01S1972 06962000
         EJECT                                                          06963000
*/********************************************************************* 06964000
**                                                                    * 06965000
**  THIS ROUTINE WILL BLOCK THE MODULE AS REQUIRED FOR THE LIBRARY.   * 06966000
**  A TWENTY-BYTE CONTROL RECORD PRECEDES EACH BLOCK OF TEXT.         * 06967000
**                                                                    * 06968000
**********************************************************************/ 06969000
*WRBLOCK:                                                       01S1973 06970000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S1973 06971000
WRBLOCK  STM   @14,@03,12(@13)                                  01S1973 06972000
         STM   @05,@12,40(@13)                                  01S1973 06973000
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */ 06974000
         ST   @13,SAVE3+BACK(,BUFAD)   BACKWARD POINTER.                06975000
         LA   @14,SAVE3(,BUFAD)        THIS ROUTINE SAVE AREA.          06976000
         ST   @14,FORE(,@13)           FORWARD POINTER.                 06977000
         LR   @13,@14                  LINKAGE COMPLETE.                06978000
*        RESPECIFY (BUFFPTR,DB,REMSIZE) RESTRICTED;             01S1975 06979000
*        BUFFPTR = ADDR(MSGSAVE);      /* ACCESS CONTROL RECORD AREA */ 06980000
         LR    BUFFPTR,BUFAD                                    01S1976 06981000
         AL    BUFFPTR,@CF01856                                 01S1976 06982000
*        EOMID = NCESD;                /* INITIALIZE                 */ 06983000
         MVI   EOMID(BUFFPTR),X'01'                             01S1977 06984000
*        EOMSP = ZERO;                 /*  CONTROL                   */ 06985000
         SLR   @05,@05                                          01S1978 06986000
         STCM  @05,7,EOMSP(BUFFPTR)                             01S1978 06987000
*        EOMCNT = FOUR;                /*  RECORD FOR                */ 06988000
         MVC   EOMCNT(2,BUFFPTR),@CH00050                       01S1979 06989000
*        EOMCNTZ = ZERO;               /*  SUBSEQUENT                */ 06990000
         STH   @05,EOMCNTZ(,BUFFPTR)                            01S1980 06991000
*        EOMCCW = RDCCW;               /*  UPDATE                    */ 06992000
         XC    EOMCCW+6(2,BUFFPTR),EOMCCW+6(BUFFPTR)            01S1981 06993000
         MVC   EOMCCW(6,BUFFPTR),@CB00714                       01S1981 06994000
*        EOMENT = ONE;                 /*  AND WRITING TO LIBRARY    */ 06995000
         MVC   EOMENT(2,BUFFPTR),@CH00060                       01S1982 06996000
*        REMSIZE = DSTOR;              /* TOTAL MODULE SIZE          */ 06997000
         SLR   @15,@15                                          01S1983 06998000
         ICM   @15,7,DSTOR(BUFAD)                               01S1983 06999000
         LR    REMSIZE,@15                                      01S1983 07000000
*        DLEN = MIN(DSTOR,LIBBLKSZ);   /* SET SIZE OF FIRST TEXT REC */ 07001000
         SLR   @02,@02                                          01S1984 07002000
         ICM   @02,3,LIBBLKSZ(BUFAD)                            01S1984 07003000
         CR    @15,@02                                          01S1984 07004000
         BNH   *+6                                                      07005000
         LR    @15,@02                                          01S1984 07006000
         STH   @15,DLEN(,BUFAD)                                 01S1984 07007000
*        EOMCCWCT = DLEN;              /* INITIALIZE CCW.            */ 07008000
         STH   @15,EOMCCWCT(,BUFFPTR)                           01S1985 07009000
*        NOTED = OFF;                  /* RESET NOTE SWITCH.         */ 07010000
         NI    NOTED(BUFAD),B'11111101'                         01S1986 07011000
*        DO                            /* START                      */ 07012000
*         CNT = ZERO                   /*  BLOCKING OPERATION        */ 07013000
*         BY LIBBLKSZ                  /*                            */ 07014000
*         WHILE INHIBITW = OFF         /* DO ALL BUT LAST OR ONLY    */ 07015000
*             & REMSIZE > LIBBLKSZ;    /*  BLOCK.                    */ 07016000
         LR    CNT,@05                                          01S1987 07017000
         B     @DE01987                                         01S1987 07018000
@DL01987 DS    0H                                               01S1988 07019000
*          UNIREC = OFF;               /* RESET ONE TEXT RECORD SW.  */ 07020000
         NI    UNIREC(BUFAD),B'11111110'                        01S1988 07021000
*          EOMTLN = LIBBLKSZ;          /* SET TEXT LENGTH            */ 07022000
         MVC   EOMTLN(2,BUFFPTR),LIBBLKSZ(BUFAD)                01S1989 07023000
*          EOMCCWAD = CNT;             /*  ADD RELATIVE ADDRESS      */ 07024000
         STCM  CNT,7,EOMCCWAD(BUFFPTR)                          01S1990 07025000
*          DB = BUFFPTR;               /* ADDR OF CONTROL RECORD.    */ 07026000
         LR    DB,BUFFPTR                                       01S1991 07027000
*          DCBPTR = UTOUTAD;           /* DCB ADDRESS.               */ 07028000
         L     DCBPTR,UTOUTAD(,BUFAD)                           01S1992 07029000
*          DCBBLKSI = LENGTH(EOM);     /* LENGTH OF CONTROL RECORD.  */ 07030000
         MVC   DCBBLKSI+52(2,DCBPTR),@CH00356                   01S1993 07031000
*          CALL WRITE;                 /* WRITE A CONTROL RECORD.    */ 07032000
         BAL   @14,WRITE                                        01S1994 07033000
*          CALL WRTEXT;                /* WRITE A TEXT RECORD.       */ 07034000
         BAL   @14,WRTEXT                                       01S1995 07035000
*          REMSIZE = REMSIZE - LIBBLKSZ;/* UPDATE REMAINING SIZE.    */ 07036000
         SLR   @05,@05                                          01S1996 07037000
         ICM   @05,3,LIBBLKSZ(BUFAD)                            01S1996 07038000
         SLR   REMSIZE,@05                                      01S1996 07039000
*        END;                          /* END OF BLOCKING.           */ 07040000
         SLR   @05,@05                                          01S1997 07041000
         ICM   @05,3,LIBBLKSZ(BUFAD)                            01S1997 07042000
         ALR   CNT,@05                                          01S1997 07043000
@DE01987 TM    INHIBITW(BUFAD),B'01000000'                      01S1997 07044000
         BNZ   @DC01987                                         01S1997 07045000
         SLR   @05,@05                                          01S1997 07046000
         ICM   @05,3,LIBBLKSZ(BUFAD)                            01S1997 07047000
         CR    REMSIZE,@05                                      01S1997 07048000
         BH    @DL01987                                         01S1997 07049000
@DC01987 DS    0H                                               01S1998 07050000
*        IF INHIBITW = OFF             /* CHECK FOR SUCCESS THUS FAR.*/ 07051000
*          THEN                        /* WRITE LAST OR ONLY BLOCK.  */ 07052000
         TM    INHIBITW(BUFAD),B'01000000'                      01S1998 07053000
         BNZ   @RF01998                                         01S1998 07054000
*            DO;                       /*                            */ 07055000
*              EOMTLN = REMSIZE;       /* LENGTH OF                  */ 07056000
         STH   REMSIZE,EOMTLN(,BUFFPTR)                         01S2000 07057000
*              EOMCCWCT = REMSIZE;     /*  LAST BLOCK.               */ 07058000
         STH   REMSIZE,EOMCCWCT(,BUFFPTR)                       01S2001 07059000
*              EOMCCWAD = CNT;         /* RELATIVE ADDRESS.          */ 07060000
         STCM  CNT,7,EOMCCWAD(BUFFPTR)                          01S2002 07061000
*              EOMID = LCESD;          /* INDICATE LAST CONTROL REC. */ 07062000
         MVI   EOMID(BUFFPTR),X'0D'                             01S2003 07063000
*              DB = BUFFPTR;           /* ADDR OF CONTROL RECORD.    */ 07064000
         LR    DB,BUFFPTR                                       01S2004 07065000
*              DCBPTR = UTOUTAD;       /* DCB ADDRESS.               */ 07066000
         L     DCBPTR,UTOUTAD(,BUFAD)                           01S2005 07067000
*              DCBBLKSI = LENGTH(EOM); /* CONTROL RECORD LENGTH.     */ 07068000
         MVC   DCBBLKSI+52(2,DCBPTR),@CH00356                   01S2006 07069000
*              CALL WRITE;             /* WRITE CONTROL RECORD.      */ 07070000
         BAL   @14,WRITE                                        01S2007 07071000
*              CALL WRTEXT;            /* WRITE TEXT RECORD          */ 07072000
         BAL   @14,WRTEXT                                       01S2008 07073000
*            END;                      /*                            */ 07074000
*          ELSE;                       /*                            */ 07075000
@RF01998 DS    0H                                               01S2011 07076000
*        RESPECIFY (BUFFPTR,DB,REMSIZE) UNRESTRICTED;           01S2011 07077000
*        GEN REFS(SAVE3)               /******************************/ 07078000
*         (L  @13,SAVE3+BACK(,BUFAD)); /* RESTORE BACKWARD POINTER.  */ 07079000
         L  @13,SAVE3+BACK(,BUFAD)                                      07080000
*  END WRBLOCK;                        /* RETURN TO                  */ 07081000
@EL00028 DS    0H                                               01S2013 07082000
@EF00028 DS    0H                                               01S2013 07083000
@ER00028 LM    @14,@03,12(@13)                                  01S2013 07084000
         LM    @05,@12,40(@13)                                  01S2013 07085000
         BR    @14                                              01S2013 07086000
         EJECT                                                          07087000
*/********************************************************************* 07088000
**                                                                    * 07089000
**  THIS ROUTINE WILL CAUSE ONE BLOCK OF TEXT INFORMATION TO BE       * 07090000
**  WRITTEN TO THE LIBRARY. THE NOTE LIST WILL BE UPDATED FOR THE     * 07091000
**  FIRST TEXT RECORD WRITTEN. DCB BLOCK SIZE MUST BE FILLED IN       * 07092000
**  BEFORE ENTERING THIS ROUTINE.                                     * 07093000
**                                                                    * 07094000
**********************************************************************/ 07095000
*WRTEXT:                                                        01S2014 07096000
*  PROCEDURE OPTIONS(SAVE(R14));                                01S2014 07097000
WRTEXT   ST    @14,@SA00029                                     01S2014 07098000
*        RESPECIFY (DB,BUFFPTR,REMSIZE) RESTRICTED;             01S2015 07099000
*        IF INHIBITW = OFF             /* CHECK FOR PREVIOUS WRITE   */ 07100000
*          THEN                        /*  A SUCCESS.                */ 07101000
         TM    INHIBITW(BUFAD),B'01000000'                      01S2016 07102000
         BNZ   @RF02016                                         01S2016 07103000
*            DO;                       /*                            */ 07104000
*              DCBPTR = UTOUTAD;       /* DCB ADDRESS.               */ 07105000
         L     DCBPTR,UTOUTAD(,BUFAD)                           01S2018 07106000
*              DCBBLKSI = EOMCCWCT;    /* SET BLOCK SIZE.            */ 07107000
         MVC   DCBBLKSI+52(2,DCBPTR),EOMCCWCT(BUFFPTR)          01S2019 07108000
*              DB = ADDR(LIBBUF)       /* GET AREA TO                */ 07109000
*                 + EOMCCWAD;          /*  WRITE FROM.               */ 07110000
         LA    DB,LIBBUF(,BUFAD)                                01S2020 07111000
         SLR   @05,@05                                          01S2020 07112000
         ICM   @05,7,EOMCCWAD(BUFFPTR)                          01S2020 07113000
         ALR   DB,@05                                           01S2020 07114000
*              CALL WRITE;             /* WRITE THIS RECORD.         */ 07115000
         BAL   @14,WRITE                                        01S2021 07116000
*              IF NOTED = OFF          /* CHECK FOR FIRST TEXT RECORD*/ 07117000
*               & INHIBITW = OFF       /*  AND NO PREVIOUS ERROR     */ 07118000
*                THEN                  /*                            */ 07119000
         TM    NOTED(BUFAD),B'00000010'                         01S2022 07120000
         BNZ   @RF02022                                         01S2022 07121000
         TM    INHIBITW(BUFAD),B'01000000'                      01S2022 07122000
         BNZ   @RF02022                                         01S2022 07123000
*                  DO;                 /*                            */ 07124000
*                    RESPECIFY (R1) RESTRICTED;                 01S2024 07125000
*                    NOTED = ON;       /* REMEMBER FIRST RECORD      */ 07126000
         OI    NOTED(BUFAD),B'00000010'                         01S2025 07127000
*                    GEN REFS(SYSUTOUT)/*  AS BEING NOTED.           */ 07128000
*                     (NOTE  SYSUTOUT);/* MAKE NOTE OF LAST WRITE    */ 07129000
         NOTE  SYSUTOUT                                                 07130000
*                    DTTRT = R1;       /* SET TTR IN DRCTRY ENTRY    */ 07131000
         ST    R1,DTTRT(,BUFAD)                                 01S2027 07132000
*                  END;                /* END NOTE.                  */ 07133000
*                ELSE;                 /*                            */ 07134000
@RF02022 DS    0H                                               01S2030 07135000
*            END;                      /* END WRITE TEXT.            */ 07136000
*          ELSE;                       /*                            */ 07137000
@RF02016 DS    0H                                               01S2032 07138000
*  END WRTEXT;                         /* RETURN TO CALLER.          */ 07139000
@EL00029 DS    0H                                               01S2032 07140000
@EF00029 DS    0H                                               01S2032 07141000
@ER00029 L     @14,@SA00029                                     01S2032 07142000
         BR    @14                                              01S2032 07143000
         EJECT                                                          07144000
*/********************************************************************* 07145000
**                                                                    * 07146000
**  THIS ROUTINE WILL READ INTO THE BUFFER A MODULE. WHEN THE MODULE  * 07147000
**  HAS MORE THAN ONE TEXT RECORD A CONTROL RECORD WILL BE READ IN    * 07148000
**  TO ENABLE THE READING OF THE NEXT TEXT RECORD. THE CONTROL RECORD * 07149000
**  CONTAINS A CCW WHICH DEFINES THE LENGTH OF THE TEXT RECORD AND    * 07150000
**  AN ADDRESS WHICH IS RELATIVE TO THE BEGINNING OF THE MODULE.      * 07151000
**                                                                    * 07152000
**********************************************************************/ 07153000
*READLIB:                                                       01S2033 07154000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S2033 07155000
READLIB  STM   @14,@12,12(@13)                                  01S2033 07156000
*        GEN REFS(SAVE2);              /* USE CONVENTIONAL SAVE.     */ 07157000
         ST  @13,SAVE2+BACK(,BUFAD)    BACKWARD POINTER.                07158000
         LA  @14,SAVE2(,BUFAD)         THIS ROUTINE SAVE AREA.          07159000
         ST  @14,FORE(,@13)            FORWARD POINTER.                 07160000
         LR  @13,@14                   LINKAGE COMPLETE.                07161000
*        RESPECIFY (RECAREA,RECSIZE,BUFFPTR) RESTRICTED;        01S2035 07162000
*        RECSIZE = BLEN;               /* SIZE OF FIRST TEXT RECORD. */ 07163000
         SLR   RECSIZE,RECSIZE                                  01S2036 07164000
         ICM   RECSIZE,3,BLEN(BUFAD)                            01S2036 07165000
*        RECAREA = ADDR(LIBBUF);       /* STARTING BUFFER ADDRESS.   */ 07166000
         LA    RECAREA,LIBBUF(,BUFAD)                           01S2037 07167000
*        GEN REFS(SYSUTIN,BTTRT)       /*                            */ 07168000
*            SETS(SYSUTIN,LIBBUF)      /* READ IN FIRST TEXT RECORD. */ 07169000
*            FLOWS(SYNAD);             /*                            */ 07170000
         POINT  SYSUTIN,BTTRT(BUFAD)   OREINTATION                      07171000
         READ   RDECB,SF,SYSUTIN,(RECAREA),(RECSIZE)                    07172000
         CHECK  RDECB                  VERIFY VALIDITY                  07173000
*        IF INHIBITR = OFF             /* CHECK FOR SUCCESSFUL READ  */ 07174000
*         & BUNIREC = OFF              /*  AND MORE RECORDS NEEDED.  */ 07175000
*          THEN                        /* MORE RECORDS FOLLOW.       */ 07176000
         TM    INHIBITR(BUFAD),B'00100000'                      01S2039 07177000
         BNZ   @RF02039                                         01S2039 07178000
         TM    BUNIREC(BUFAD),B'00000001'                       01S2039 07179000
         BNZ   @RF02039                                         01S2039 07180000
*            DO;                       /* ESTABLISH CONTROL          */ 07181000
*              BUFFPTR = ADDR(MSGSAVE);/*  RECORD AREA.              */ 07182000
         LR    BUFFPTR,BUFAD                                    01S2041 07183000
         AL    BUFFPTR,@CF01856                                 01S2041 07184000
*              DO                      /* READ RECORDS TO LAST TEXT  */ 07185000
*               UNTIL EOMID = LCESD    /*  RECORD OR ERROR.          */ 07186000
*                   | INHIBITR = ON;   /*                            */ 07187000
@DL02042 DS    0H                                               01S2043 07188000
*                RECSIZE = LENGTH(EOM);/* LENGTH OF CONTROL RECORD.  */ 07189000
         LA    RECSIZE,20                                       01S2043 07190000
*                GEN REFS(SYSUTIN)     /* READ A CONTROL RECORD      */ 07191000
*                    SETS(EOM);        /*                            */ 07192000
                 READ  RDECB,SF,,(BUFFPTR),(RECSIZE),MF=E               07193000
                 CHECK RDECB           VERIFY VALIDITY                  07194000
*                IF INHIBITR = OFF     /* CONTINUE IF NO ERROR ON    */ 07195000
*                  THEN                /*  CONTROL RECORD.           */ 07196000
         TM    INHIBITR(BUFAD),B'00100000'                      01S2045 07197000
         BNZ   @RF02045                                         01S2045 07198000
*                    DO;               /*                            */ 07199000
*                      RECSIZE = EOMCCWCT;/* GET TEXT RECORD SIZE    */ 07200000
         SLR   RECSIZE,RECSIZE                                  01S2047 07201000
         ICM   RECSIZE,3,EOMCCWCT(BUFFPTR)                      01S2047 07202000
*                      RECAREA = EOMCCWAD /* INCREMENT AREA ADDRESS  */ 07203000
*                          + ADDR(LIBBUF);/*  FOR TEXT.              */ 07204000
         LA    RECAREA,LIBBUF(,BUFAD)                           01S2048 07205000
         SLR   @02,@02                                          01S2048 07206000
         ICM   @02,7,EOMCCWAD(BUFFPTR)                          01S2048 07207000
         ALR   RECAREA,@02                                      01S2048 07208000
*                      GEN REFS(SYSUTIN)  /* READ IN A TEXT RECORD.  */ 07209000
*                          SETS(LIBBUF);  /*                         */ 07210000
                       READ RDECB,SF,,(RECAREA),(RECSIZE),MF=E          07211000
                       CHECK RDECB                                      07212000
*                    END;              /* END TEXT RECORD READ.      */ 07213000
*                  ELSE;               /* MUST BE READ ERROR.        */ 07214000
@RF02045 DS    0H                                               01S2052 07215000
*              END;                    /* END OF MODULE OR ERROR.    */ 07216000
@DE02042 CLI   EOMID(BUFFPTR),X'0D'                             01S2052 07217000
         BE    @DC02042                                         01S2052 07218000
         TM    INHIBITR(BUFAD),B'00100000'                      01S2052 07219000
         BNO   @DL02042                                         01S2052 07220000
@DC02042 DS    0H                                               01S2053 07221000
*            END;                      /* END MODULE READ IN.        */ 07222000
*          ELSE;                       /* ONLY ONE RECORD READ.      */ 07223000
@RF02039 DS    0H                                               01S2055 07224000
*        RESPECIFY (RECSIZE,RECAREA,BUFFPTR) UNRESTRICTED;      01S2055 07225000
*        GEN REFS(SAVE2)               /******************************/ 07226000
*         (L  @13,SAVE2+BACK(,BUFAD)); /* RESTORE BACKWARD POINTER.  */ 07227000
         L  @13,SAVE2+BACK(,BUFAD)                                      07228000
*  END READLIB;                        /* RETURN TO CALLER.          */ 07229000
@EL00030 DS    0H                                               01S2057 07230000
@EF00030 DS    0H                                               01S2057 07231000
@ER00030 LM    @14,@12,12(@13)                                  01S2057 07232000
         BR    @14                                              01S2057 07233000
*END IEBIMAGE                          /* END OF UTILITY.            */ 07234000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 07235000
*/*%INCLUDE SYSLIB  (IEBIBLKS)                                        * 07236000
*/*%INCLUDE SYSLIB  (IHADCBDF)                                        * 07237000
*/*%INCLUDE SYSLIB  (IHADCB  )                                        * 07238000
*/*%INCLUDE SYSLIB  (IEZDEB  )                                        * 07239000
*/*@INCLUDE SYSUT5  (CLEAR   )                                        * 07240000
*/*@INCLUDE SYSUT5  (USEPARM )                                        * 07241000
*/*@INCLUDE SYSUT5  (OPEN    )                                        * 07242000
*/*@INCLUDE SYSUT5  (SAVECODE)                                        * 07243000
*/*@INCLUDE SYSUT5  (SAVECODE)                                        * 07244000
*/*@INCLUDE SYSUT5  (SAVECODE)                                        * 07245000
*/*@INCLUDE SYSUT5  (SAVECODE)                                        * 07246000
*/*@INCLUDE SYSUT5  (SAVECODE)                                        * 07247000
*/*@INCLUDE SYSUT5  (SAVECODE)                                        * 07248000
*/*@INCLUDE SYSUT5  (SAVECODE)                                        * 07249000
*/*@INCLUDE SYSUT5  (FCBBLD  )                                        * 07250000
*/*@INCLUDE SYSUT5  (FCBCHECK)                                        * 07251000
*/*@INCLUDE SYSUT5  (TABLINIT)                                        * 07252000
*/*@INCLUDE SYSUT5  (SETLOC  )                                        * 07253000
*/*@INCLUDE SYSUT5  (SAVECOD2)                                        * 07254000
*/*@INCLUDE SYSUT5  (SAVECOD2)                                        * 07255000
*/*@INCLUDE SYSUT5  (SAVECOD2)                                        * 07256000
*/*@INCLUDE SYSUT5  (SAVECOD2)                                        * 07257000
*/*@INCLUDE SYSUT5  (SAVECOD2)                                        * 07258000
*/*@INCLUDE SYSUT5  (SAVECOD2)                                        * 07259000
*/*@INCLUDE SYSUT5  (SAVECOD2)                                        * 07260000
*/*@INCLUDE SYSUT5  (SAVECOD2)                                        * 07261000
*/*@INCLUDE SYSUT5  (SAVECOD2)                                        * 07262000
*/*@INCLUDE SYSUT5  (COPYINCL)                                        * 07263000
*/*@INCLUDE SYSUT5  (TEXTCOMP)                                        * 07264000
*/*@INCLUDE SYSUT5  (SETTEXT )                                        * 07265000
*/*@INCLUDE SYSUT5  (GRAFINCL)                                        * 07266000
*/*@INCLUDE SYSUT5  (SETREF  )                                        * 07267000
*/*@INCLUDE SYSUT5  (GRAFBLD )                                        * 07268000
*/*@INCLUDE SYSUT5  (READONLY)                                        * 07269000
*/*@INCLUDE SYSUT5  (UT1OPEN )                                        * 07270000
*/*@INCLUDE SYSUT5  (WRITELIB)                                        * 07271000
*/*@INCLUDE SYSUT5  (FCBMARG )                                        * 07272000
*/*@INCLUDE SYSUT5  (FCBSTAT )                                        * 07273000
*/*@INCLUDE SYSUT5  (FCBPRINT)                                        * 07274000
*/*@INCLUDE SYSUT5  (CSEGPRT )                                        * 07275000
*/*@INCLUDE SYSUT5  (TIMECK  )                                        * 07276000
*/*@INCLUDE SYSUT5  (OVERRUN )                                        * 07277000
*/*@INCLUDE SYSUT5  (GCMPRTHD)                                        * 07278000
*/*@INCLUDE SYSUT5  (GCMPRTCH)                                        * 07279000
*/*@INCLUDE SYSUT5  (SEGMSG  )                                        * 07280000
*;                                                              01S2058 07281000
@DATA    DS    0H                                                       07282000
@CH00462 DC    H'0'                                                     07283000
@CH00060 DC    H'1'                                                     07284000
@CH00185 DC    H'6'                                                     07285000
@CH00118 DC    H'7'                                                     07286000
@CH00032 DC    H'9'                                                     07287000
@CH00155 DC    H'15'                                                    07288000
@CH00183 DC    H'18'                                                    07289000
@CH00356 DC    H'20'                                                    07290000
@CH00358 DC    H'21'                                                    07291000
@CH00371 DC    H'28'                                                    07292000
@CH00375 DC    H'30'                                                    07293000
@CH00039 DC    H'40'                                                    07294000
@CH00408 DC    H'48'                                                    07295000
@CH00746 DC    H'50'                                                    07296000
@CH00245 DC    H'64'                                                    07297000
@CH01851 DC    H'65'                                                    07298000
@CH00175 DC    H'72'                                                    07299000
@CH00754 DC    H'110'                                                   07300000
@CH00190 DC    H'121'                                                   07301000
@CH01051 DC    H'132'                                                   07302000
@CH00236 DC    H'144'                                                   07303000
@CH00279 DC    H'204'                                                   07304000
@CH01855 DC    H'251'                                                   07305000
@CH00543 DC    H'255'                                                   07306000
@CH00218 DC    H'256'                                                   07307000
@CH00757 DC    H'280'                                                   07308000
@CH01036 DC    H'300'                                                   07309000
@CH01026 DC    H'500'                                                   07310000
@CH01040 DC    H'900'                                                   07311000
@CH00762 DC    H'999'                                                   07312000
@CH00252 DC    H'1024'                                                  07313000
@CH01042 DC    H'1475'                                                  07314000
@CH00231 DC    H'8192'                                                  07315000
@CH01845 DC    H'17909'                                                 07316000
@CH00807 DC    XL2'0C'                                                  07317000
@CH00851 DC    XL2'FF'                                                  07318000
@CH00853 DC    XL2'3F'                                                  07319000
@SC01878 CLC   MODBOD-3(0,@15),FCBCLR(BUFAD)                            07320000
@SM01885 MVC   MODBOD(0,@06),CLOADSEG(@14)                              07321000
@SM01888 MVC   COPYSEG(0,BUFFPTR),COPYLINE+796(BUFAD)                   07322000
         DS    0F                                                       07323000
@SA00001 DS    18F                                                      07324000
@SA00027 DS    1F                                                       07325000
@PC00019 DS    3F                                                       07326000
@SA00015 DS    1F                                                       07327000
@SA00013 DS    1F                                                       07328000
@SA00016 DS    1F                                                       07329000
@SA00029 DS    1F                                                       07330000
@TF00001 DS    F                                                        07331000
@TF00002 DS    F                                                        07332000
         DS    0F                                                       07333000
@CF00057 DC    F'2'                                                     07334000
@CH00057 EQU   @CF00057+2                                               07335000
@CF00111 DC    F'3'                                                     07336000
@CH00111 EQU   @CF00111+2                                               07337000
@CF00050 DC    F'4'                                                     07338000
@CH00050 EQU   @CF00050+2                                               07339000
@CF00040 DC    F'5'                                                     07340000
@CH00040 EQU   @CF00040+2                                               07341000
@CF00048 DC    F'8'                                                     07342000
@CH00048 EQU   @CF00048+2                                               07343000
@CF00033 DC    F'10'                                                    07344000
@CF00035 DC    F'12'                                                    07345000
@CH00035 EQU   @CF00035+2                                               07346000
@CF00116 DC    F'16'                                                    07347000
@CH00116 EQU   @CF00116+2                                               07348000
@CF00053 DC    F'24'                                                    07349000
@CH00053 EQU   @CF00053+2                                               07350000
@CF00610 DC    F'73'                                                    07351000
@CH00610 EQU   @CF00610+2                                               07352000
@CF01849 DC    F'8412'                                                  07353000
@CF01883 DC    F'10527'                                                 07354000
@CF01856 DC    F'10648'                                                 07355000
@CF01044 DC    F'100000'                                                07356000
@CF01046 DC    F'213600'                                                07357000
@CF01048 DC    F'344600'                                                07358000
@CF01891 DC    F'-73'                                                   07359000
@CF01890 DC    F'-65'                                                   07360000
@CF01907 DC    F'-30'                                                   07361000
@CF01911 DC    F'-29'                                                   07362000
@CF01870 DC    F'-23'                                                   07363000
@CF01871 DC    F'-20'                                                   07364000
@CF01908 DC    F'-19'                                                   07365000
@CF01896 DC    F'-16'                                                   07366000
@CF01897 DC    F'-12'                                                   07367000
@CF01909 DC    F'-8'                                                    07368000
@CF01910 DC    F'-7'                                                    07369000
@CF01893 DC    F'-4'                                                    07370000
@CF01892 DC    F'-3'                                                    07371000
@CF00797 DC    XL4'0F0F0F0F'                                            07372000
@CV00036 DC    V(IEBISCAN)                                              07373000
@CV00037 DC    V(IEBIMSGS)                                              07374000
         DS    0D                                                       07375000
HPGN     DS    F                                                        07376000
FFLLCON  DS    FL4                                                      07377000
         ORG   FFLLCON                                                  07378000
@NM00098 DC    AL2(1)                                                   07379000
@NM00099 DC    AL2(36)                                                  07380000
         ORG   FFLLCON+4                                                07381000
OPTABLEN DC    AL1(168/24-1)                                            07382000
@TS00001 DS    CL2                                                      07383000
@CC00862 DC    C'DIRECTORY'                                             07384000
@CC00825 DC    C'BAD NAME'                                              07385000
@CC00837 DC    C'GRAF    '                                              07386000
@CC00860 DC    C'REPLACED'                                              07387000
@CC01083 DC    C'SYSPRINT'                                              07388000
@CC01085 DC    C'SYSIN   '                                              07389000
@CC01087 DC    C'SYSUT1  '                                              07390000
@CC00865 DC    C'NOTE(1)'                                               07391000
@CC00823 DC    C'NONAME'                                                07392000
@CC00843 DC    C'DELSEG'                                                07393000
@CC00811 EQU   @CC00837                                                 07394000
@CC00813 DC    C'XTB1'                                                  07395000
@CC00815 DC    C'MOD1'                                                  07396000
@CC00817 DC    C'FCB3'                                                  07397000
@CC00819 DC    C'SEQ='                                                  07398000
@CC00821 DC    C' 0X '                                                  07399000
@CC00845 DC    C'LINE'                                                  07400000
@CC00847 DC    C'TEXT'                                                  07401000
@CC00849 DC    C'PAGE'                                                  07402000
@CC00839 DC    C'LPI'                                                   07403000
@CC00841 DC    C'LOC'                                                   07404000
@CC00788 DC    C' 6'                                                    07405000
@CC00790 DC    C' 8'                                                    07406000
@CC00792 DC    C'12'                                                    07407000
@CB00714 DC    X'060000004000'                                          07408000
@CB00896 DC    X'000100010000'                                          07409000
@CB00799 DC    X'0F0F0F'                                                07410000
@CB00801 DC    X'000030'                                                07411000
@CB00803 DC    X'000018'                                                07412000
@CB00805 DC    X'00000C'                                                07413000
@CB00709 DC    X'8001'                                                  07414000
@CB00869 DC    X'CBF1'                                                  07415000
@CB01899 DC    B'1111111111110000'                                      07416000
@CB01901 DC    B'0010000100110000'                                      07417000
@CB01903 DC    B'1101001101110000'                                      07418000
@CB01905 DC    B'0111000100110000'                                      07419000
         DS    CL1                                                      07420000
OPTAB    DS    CL168                                                    07421000
         ORG   OPTAB                                                    07422000
ELEM     DS    CL24                                                     07423000
         ORG   ELEM                                                     07424000
OP1      DC    AL1(1)                                                   07425000
@NM00024 DC    B'011100000000000010000000'                              07426000
@NM00025 DC    AL1(3)                                                   07427000
@NM00026 DC    AL3(FCB)                                                 07428000
@NM00027 DC    AL1(0)                                                   07429000
@NM00028 DC    AL3(0)                                                   07430000
@NM00029 DC    AL1(0)                                                   07431000
@NM00030 DC    AL3(FCBPRT)                                              07432000
FCBOP    DC    CL8'FCB'                                                 07433000
         ORG   OPTAB+24                                                 07434000
@NM00031 DS    CL24                                                     07435000
         ORG   @NM00031                                                 07436000
OP2      DC    AL1(2)                                                   07437000
@NM00032 DC    B'000000000000011110000000'                              07438000
@NM00033 DC    AL1(5)                                                   07439000
@NM00034 DC    AL3(TABLE)                                               07440000
@NM00035 DC    AL1(0)                                                   07441000
@NM00036 DC    AL3(TABCHK)                                              07442000
@NM00037 DC    AL1(0)                                                   07443000
@NM00038 DC    AL3(TABLPRT)                                             07444000
TABOP    DC    CL8'TABLE'                                               07445000
         ORG   OPTAB+48                                                 07446000
@NM00039 DS    CL24                                                     07447000
         ORG   @NM00039                                                 07448000
OP3      DC    AL1(3)                                                   07449000
@NM00040 DC    B'100011110000000010000000'                              07450000
@NM00041 DC    AL1(7)                                                   07451000
@NM00042 DC    AL3(COPYMOD)                                             07452000
@NM00043 DC    AL1(0)                                                   07453000
@NM00044 DC    AL3(COPCHK)                                              07454000
@NM00045 DC    AL1(0)                                                   07455000
@NM00046 DC    AL3(COPYPRT)                                             07456000
COPYOP   DC    CL8'COPYMOD'                                             07457000
         ORG   OPTAB+72                                                 07458000
@NM00047 DS    CL24                                                     07459000
         ORG   @NM00047                                                 07460000
OP4      DC    AL1(4)                                                   07461000
@NM00048 DC    B'100000000101100011000000'                              07462000
@NM00049 DC    AL1(7)                                                   07463000
@NM00050 DC    AL3(GRAPHIC)                                             07464000
@NM00051 DC    AL1(0)                                                   07465000
@NM00052 DC    AL3(GRFCHK)                                              07466000
@NM00053 DC    AL1(0)                                                   07467000
@NM00054 DC    AL3(GCMPRT)                                              07468000
GRAFOP   DC    CL8'GRAPHIC'                                             07469000
         ORG   OPTAB+96                                                 07470000
@NM00055 DS    CL24                                                     07471000
         ORG   @NM00055                                                 07472000
OP5      DC    AL1(5)                                                   07473000
@NM00056 DC    B'000000001010000000000000'                              07474000
@NM00057 DC    AL1(7)                                                   07475000
@NM00058 DC    AL3(INCLUDE)                                             07476000
@NM00059 DC    A(0)                                                     07477000
@NM00060 DC    A(0)                                                     07478000
INCLOP   DC    CL8'INCLUDE'                                             07479000
         ORG   OPTAB+120                                                07480000
@NM00061 DS    CL24                                                     07481000
         ORG   @NM00061                                                 07482000
NAMEOP   DC    AL1(6)                                                   07483000
@NM00062 DC    B'000000001000000010100000'                              07484000
@NM00063 DC    AL1(4)                                                   07485000
@NM00064 DC    AL3(NAME)                                                07486000
@NM00065 DC    A(0)                                                     07487000
@NM00066 DC    A(0)                                                     07488000
NAMOP    DC    CL8'NAME'                                                07489000
         ORG   OPTAB+144                                                07490000
@NM00067 DS    CL24                                                     07491000
         ORG   @NM00067                                                 07492000
LOST     DC    AL1(255)                                                 07493000
@NM00068 DC    AL3(0)                                                   07494000
@NM00069 DC    AL1(0)                                                   07495000
@NM00070 DC    AL3(INVOP)                                               07496000
@NM00071 DC    A(0)                                                     07497000
@NM00072 DC    A(0)                                                     07498000
@NM00073 DC    CL8' '                                                   07499000
         ORG   OPTAB+168                                                07500000
GRAFHEAD DC    CL30'ASSIGNMENT XX  PITCH 10'                            07501000
SEGHEAD  DC    CL8' SEGMENT'                                            07502000
BITHEAD  DC    CL18'123456789012345678'                                 07503000
IMAGENAM DC    CL9'5752SC1UM'                                           07504000
VERSION  DC    X'0203'                                                  07505000
TRTAB    DC    CL16'0123456789ABCDEF'                                   07506000
HEADING  DS    CL121                                                    07507000
         ORG   HEADING                                                  07508000
@NM00100 DC    CL1'1'                                                   07509000
BLNKS    DC    CL40' '                                                  07510000
@NM00101 DC    CL34'SYSTEM SUPPORT UTILITY --IEBIMAGE-'                 07511000
@NM00102 DC    CL26'-'                                                  07512000
@NM00103 DC    CL20'PAGE'                                               07513000
         ORG   HEADING+121                                              07514000
FCBPRL   DS    CL44                                                     07515000
         ORG   FCBPRL                                                   07516000
@NM00104 DC    CL22'         PRINT LINE XX'                             07517000
@NM00105 DC    CL22'X AT XX LINES PER INCH'                             07518000
         ORG   FCBPRL+44                                                07519000
FCBINV   DC    CL23' INVALID BYTE (  ).'                                07520000
FCBCHL   DC    CL23' - HAS CHANNEL XX CODE.'                            07521000
PRTXHDG  DS    CL121                                                    07522000
         ORG   PRTXHDG                                                  07523000
@NM00106 DC    CL1'0'                                                   07524000
@NM00107 DC    CL32'         X0     X1     X2     X3'                   07525000
@NM00108 DC    CL35'     X4     X5     X6     X7     X8'                07526000
@NM00109 DC    CL35'     X9     XA     XB     XC     XD'                07527000
@NM00110 DC    CL18'     XE     XF'                                     07528000
         ORG   PRTXHDG+121                                              07529000
CGMILINE DS    CL53                                                     07530000
         ORG   CGMILINE                                                 07531000
@NM00111 DC    CL28'CGM IDENTIFICATION'                                 07532000
@NM00112 DC    CL25'*       *       *       *'                          07533000
         ORG   CGMILINE+53                                              07534000
CGMOLINE DS    CL53                                                     07535000
         ORG   CGMOLINE                                                 07536000
@NM00113 DC    CL28'CGM IDENTIFICATION ORDER'                           07537000
@NM00114 DC    CL25'0       1       2       3'                          07538000
         ORG   CGMOLINE+53                                              07539000
GCMRLINE DS    CL47                                                     07540000
         ORG   GCMRLINE                                                 07541000
@NM00115 DC    CL35'GRAPHIC MODIFICATION RECORDS'                       07542000
@NM00116 DC    CL12'****NONE****'                                       07543000
         ORG   GCMRLINE+47                                              07544000
COPYHD1  DS    CL90                                                     07545000
         ORG   COPYHD1                                                  07546000
@NM00119 DC    CL7' '                                                   07547000
@NM00120 DC    CL34'              INITIAL    NUMBER OF'                 07548000
@NM00121 DC    CL35'    INITIAL     NUMBER OF   INITIAL'                07549000
@NM00122 DC    CL14'     NUMBER OF'                                     07550000
         ORG   COPYHD1+90                                               07551000
COPYHD2  DS    CL91                                                     07552000
         ORG   COPYHD2                                                  07553000
@NM00123 DC    CL7' '                                                   07554000
@NM00124 DC    CL34'    SEGMENT   COPY NO.    COPIES'                   07555000
@NM00125 DC    CL35'    LINE NO.      LINES    PRINT PO'                07556000
@NM00126 DC    CL15'S.   CHARACTERS'                                    07557000
         ORG   COPYHD2+91                                               07558000
         DS    CL3                                                      07559000
EXLST1   DS    CL4                                                      07560000
         ORG   EXLST1                                                   07561000
@NM00139 DC    XL1'85'                                                  07562000
@NM00140 DC    AL3(BKSZCK)                                              07563000
         ORG   EXLST1+4                                                 07564000
EXLST2   DS    CL8                                                      07565000
         ORG   EXLST2                                                   07566000
@NM00141 DC    XL1'05'                                                  07567000
@NM00142 DC    AL3(BKSZFIX)                                             07568000
EXLST3   DC    XL1'91'                                                  07569000
@NM00143 DC    AL3(ABEND)                                               07570000
         ORG   EXLST2+8                                                 07571000
PATCH    DC    40CL5'PATCH'                                             07572000
ABNDSAVE DS    16A                                                      07573000
IEBIMAGE CSECT                                                          07574000
SYSIN    DCB  DDNAME=SYSIN,DSORG=PS,RECFM=FB,LRECL=80,MACRF=GM,       **07575000
               EXLST=EXLST1,BUFNO=2,EROPT=SKP,EODAD=EODAD               07576000
SYSPRINT DCB  DDNAME=SYSPRINT,DSORG=PS,RECFM=FBSA,LRECL=121,MACRF=PM, **07577000
               EXLST=EXLST1                                             07578000
SYSUTIN  DCB  DDNAME=SYSUT1,DSORG=PO,RECFM=U,MACRF=R,SYNAD=SYNAD,     XX07579000
               EXLST=EXLST3                                             07580000
SYSUTOUT DCB  DDNAME=SYSUT1,DSORG=PO,RECFM=U,MACRF=W,SYNAD=SYNAD,     XX07581000
               EXLST=EXLST2                                             07582000
IEBIMAGE CSECT                                                          07583000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       07584000
@01      EQU   01                                                       07585000
@02      EQU   02                                                       07586000
@03      EQU   03                                                       07587000
@04      EQU   04                                                       07588000
@05      EQU   05                                                       07589000
@06      EQU   06                                                       07590000
@07      EQU   07                                                       07591000
@08      EQU   08                                                       07592000
@09      EQU   09                                                       07593000
@10      EQU   10                                                       07594000
@11      EQU   11                                                       07595000
@12      EQU   12                                                       07596000
@13      EQU   13                                                       07597000
@14      EQU   14                                                       07598000
@15      EQU   15                                                       07599000
AWORK    EQU   @02                                                      07600000
DCBPTR   EQU   @04                                                      07601000
SYNADDR  EQU   @02                                                      07602000
FCNT     EQU   @04                                                      07603000
COPYSIZE EQU   @03                                                      07604000
ZCNT     EQU   @02                                                      07605000
HCNT     EQU   @07                                                      07606000
LINE     EQU   @04                                                      07607000
CCNT     EQU   @02                                                      07608000
RGMT     EQU   @02                                                      07609000
XCNT     EQU   @03                                                      07610000
YCNT     EQU   @05                                                      07611000
NCNT     EQU   @02                                                      07612000
TOP      EQU   @06                                                      07613000
CNT      EQU   @02                                                      07614000
BUFAD    EQU   @08                                                      07615000
BUFFPTR  EQU   @06                                                      07616000
R0       EQU   @00                                                      07617000
R1       EQU   @01                                                      07618000
PARAM    EQU   @03                                                      07619000
REMSIZE  EQU   @03                                                      07620000
SHIFT    EQU   @04                                                      07621000
SHIFT2   EQU   @05                                                      07622000
RECAREA  EQU   @04                                                      07623000
RECSIZE  EQU   @05                                                      07624000
TRANSIZE EQU   @07                                                      07625000
DB       EQU   @07                                                      07626000
R14      EQU   @14                                                      07627000
RETCODE  EQU   @15                                                      07628000
WORKAREA EQU   0                                                        07629000
WORK     EQU   WORKAREA                                                 07630000
WSTOR    EQU   WORK                                                     07631000
DWORK    EQU   WSTOR                                                    07632000
DWORK1   EQU   DWORK                                                    07633000
DWORKB   EQU   DWORK1+1                                                 07634000
DWORK2   EQU   DWORK+4                                                  07635000
PWORK    EQU   DWORK2+2                                                 07636000
PWORK1   EQU   PWORK                                                    07637000
FWORK    EQU   WSTOR+8                                                  07638000
STATUS1  EQU   WORK+12                                                  07639000
ABNDFLG  EQU   STATUS1                                                  07640000
EOFFLG   EQU   STATUS1                                                  07641000
CARDIN   EQU   STATUS1                                                  07642000
INHIBLIB EQU   STATUS1                                                  07643000
CONTINUE EQU   STATUS1                                                  07644000
NOWRITE  EQU   STATUS1                                                  07645000
NOTED    EQU   STATUS1                                                  07646000
STATUS2  EQU   WORK+13                                                  07647000
REPUSE   EQU   STATUS2                                                  07648000
INHIBIT  EQU   STATUS2                                                  07649000
INHIBITW EQU   INHIBIT                                                  07650000
INHIBITR EQU   INHIBIT                                                  07651000
INHIBITP EQU   STATUS2                                                  07652000
FMTERR   EQU   STATUS2                                                  07653000
FMTERR1  EQU   STATUS2                                                  07654000
PRTYERR  EQU   STATUS2                                                  07655000
SETRAS   EQU   PRTYERR                                                  07656000
READMOD  EQU   STATUS2                                                  07657000
STATUS3  EQU   WORK+14                                                  07658000
STATUS4  EQU   WORK+15                                                  07659000
SCANINP  EQU   STATUS4                                                  07660000
INCLSW   EQU   STATUS4                                                  07661000
OPINPRG  EQU   STATUS4                                                  07662000
LASTQ    EQU   STATUS4                                                  07663000
KWDUSED  EQU   WORK+16                                                  07664000
ACTIVOP  EQU   WORK+17                                                  07665000
NEXTOP   EQU   WORK+18                                                  07666000
OPTABLN  EQU   WORK+20                                                  07667000
OPTABAD  EQU   WORK+21                                                  07668000
DIRECTRY EQU   WORK+24                                                  07669000
DNAME    EQU   DIRECTRY                                                 07670000
DSUFIX   EQU   DNAME+4                                                  07671000
DTTRP    EQU   DIRECTRY+8                                               07672000
DINDCT   EQU   DIRECTRY+11                                              07673000
DTTRT    EQU   DIRECTRY+12                                              07674000
DATTRI   EQU   DIRECTRY+20                                              07675000
UNIREC   EQU   DATTRI                                                   07676000
DSTOR    EQU   DIRECTRY+22                                              07677000
DLEN     EQU   DIRECTRY+25                                              07678000
LIBBLKSZ EQU   WORK+60                                                  07679000
BLDLNTRY EQU   WORK+62                                                  07680000
BFFLL    EQU   BLDLNTRY                                                 07681000
BNAME    EQU   BLDLNTRY+4                                               07682000
BPREFX   EQU   BNAME                                                    07683000
BSUFIX   EQU   BNAME+4                                                  07684000
BTTRTA   EQU   BLDLNTRY+18                                              07685000
BTTRT    EQU   BTTRTA                                                   07686000
BATTRI   EQU   BLDLNTRY+26                                              07687000
BUNIREC  EQU   BATTRI                                                   07688000
BSTOR    EQU   BLDLNTRY+28                                              07689000
BLEN     EQU   BLDLNTRY+31                                              07690000
LIBEXT   EQU   WORK+104                                                 07691000
NEXT     EQU   WORK+106                                                 07692000
RETSAVE  EQU   WORK+108                                                 07693000
CC       EQU   WORK+109                                                 07694000
CARDEND  EQU   WORK+112                                                 07695000
DCBADS   EQU   WORK+116                                                 07696000
SYSPRTAD EQU   DCBADS                                                   07697000
SYSINAD  EQU   DCBADS+4                                                 07698000
UTINAD   EQU   DCBADS+8                                                 07699000
UTOUTAD  EQU   DCBADS+12                                                07700000
MSGEDIT  EQU   WORK+132                                                 07701000
EDITLEN  EQU   MSGEDIT                                                  07702000
EDITDATA EQU   MSGEDIT+1                                                07703000
PAGE     EQU   WORK+150                                                 07704000
TODAY    EQU   WORK+153                                                 07705000
LOADFLAG EQU   WORK+156                                                 07706000
LOADMOD  EQU   WORK+157                                                 07707000
LOADNAME EQU   WORK+160                                                 07708000
INCLNAME EQU   LOADNAME+4                                               07709000
SEGCNT   EQU   WORK+168                                                 07710000
TESTP    EQU   WORK+170                                                 07711000
TPITCH   EQU   TESTP                                                    07712000
TPP      EQU   TPITCH                                                   07713000
TP1      EQU   TPP                                                      07714000
TP2      EQU   TPP                                                      07715000
TPARTY   EQU   TESTP+1                                                  07716000
TPS      EQU   TPARTY                                                   07717000
PR1      EQU   TPS                                                      07718000
PR2      EQU   TPS                                                      07719000
SAVE1    EQU   WORKAREA+172                                             07720000
SAVE2    EQU   WORKAREA+244                                             07721000
SAVE3    EQU   WORKAREA+316                                             07722000
SAVE4    EQU   WORKAREA+388                                             07723000
PRIMCARD EQU   WORKAREA+460                                             07724000
SDRYCARD EQU   WORKAREA+540                                             07725000
RASDATA  EQU   SDRYCARD                                                 07726000
IDENT    EQU   SDRYCARD+24                                              07727000
SEQNO    EQU   SDRYCARD+28                                              07728000
MSGN     EQU   WORKAREA+620                                             07729000
MSG      EQU   WORKAREA+621                                             07730000
SPACE    EQU   MSG                                                      07731000
MSGTXT   EQU   MSG+1                                                    07732000
MSGR     EQU   MSGTXT+4                                                 07733000
MSGOF    EQU   MSGR+1                                                   07734000
PAGENO   EQU   MSGOF+100                                                07735000
FCBSIZE  EQU   WORKAREA+742                                             07736000
LPICNT   EQU   WORKAREA+744                                             07737000
LPI8     EQU   LPICNT                                                   07738000
LPI6     EQU   LPICNT+1                                                 07739000
LPI12    EQU   LPICNT+2                                                 07740000
MARGN    EQU   LPICNT+3                                                 07741000
BOTTOM   EQU   WORKAREA+748                                             07742000
LOOP     EQU   WORKAREA+750                                             07743000
DDNAMES  EQU   WORKAREA+752                                             07744000
PARMSIZE EQU   WORKAREA+792                                             07745000
SCANWORK EQU   WORKAREA+796                                             07746000
SCANARY  EQU   SCANWORK                                                 07747000
SCNT     EQU   SCANWORK+1024                                            07748000
CARDDATA EQU   SCANWORK+1026                                            07749000
COPSV    EQU   CARDDATA                                                 07750000
LINSV    EQU   CARDDATA+3                                               07751000
LIBBUF   EQU   WORKAREA+2236                                            07752000
MODHEAD  EQU   LIBBUF                                                   07753000
MODNAME  EQU   MODHEAD                                                  07754000
MODRSVD  EQU   MODHEAD+4                                                07755000
MODCNT   EQU   MODHEAD+6                                                07756000
CMODCNT  EQU   MODCNT                                                   07757000
MODBOD   EQU   LIBBUF+8                                                 07758000
FCBCLR   EQU   MODBOD+144                                               07759000
MSGSAVE  EQU   WORKAREA+10648                                           07760000
GRAFARY  EQU   0                                                        07761000
ASNARRAY EQU   GRAFARY                                                  07762000
ASNENTRY EQU   GRAFARY+1                                                07763000
REFARRAY EQU   GRAFARY+2                                                07764000
ASGNSAVE EQU   0                                                        07765000
DEL      EQU   0                                                        07766000
TEXTDATA EQU   0                                                        07767000
COPYLINE EQU   0                                                        07768000
COPYLABL EQU   COPYLINE                                                 07769000
ICOPY    EQU   COPYLABL                                                 07770000
ILINE    EQU   COPYLABL+2                                               07771000
TEXTN    EQU   COPYLABL+5                                               07772000
TEXTD    EQU   COPYLINE+6                                               07773000
PRTQELEM EQU   0                                                        07774000
CONTROL  EQU   PRTQELEM                                                 07775000
PRTQUEUE EQU   PRTQELEM+1                                               07776000
TBN      EQU   PRTQUEUE+54                                              07777000
TABLDEF  EQU   0                                                        07778000
OPFLAGS  EQU   TABLDEF+1                                                07779000
MLTFLAG  EQU   OPFLAGS                                                  07780000
BLDPTR   EQU   TABLDEF+5                                                07781000
CHKPTR   EQU   TABLDEF+9                                                07782000
PRTPTR   EQU   TABLDEF+13                                               07783000
BLDMOD   EQU   0                                                        07784000
CHKMOD   EQU   0                                                        07785000
PRTMOD   EQU   0                                                        07786000
QUEUE    EQU   0                                                        07787000
QUECTL   EQU   QUEUE                                                    07788000
QUEPGW   EQU   QUEUE+101                                                07789000
QUEPGN   EQU   QUEUE+106                                                07790000
PRINTXTB EQU   0                                                        07791000
XHEAD    EQU   PRINTXTB+1                                               07792000
TENS     EQU   XHEAD+1                                                  07793000
HEXREP   EQU   XHEAD+7                                                  07794000
CGMO     EQU   HEXREP+1                                                 07795000
CPOS     EQU   HEXREP+3                                                 07796000
WNCI     EQU   0                                                        07797000
DISC1    EQU   WNCI+1                                                   07798000
@NM00083 EQU   DISC1+28                                                 07799000
CG       EQU   @NM00083                                                 07800000
PRNTGCMR EQU   0                                                        07801000
GCMNAME  EQU   PRNTGCMR+35                                              07802000
SUF      EQU   GCMNAME+4                                                07803000
FCBARRAY EQU   0                                                        07804000
FCBELEM  EQU   0                                                        07805000
XFCBFLG  EQU   FCBELEM                                                  07806000
XFCBERR  EQU   XFCBFLG                                                  07807000
XFCBEND  EQU   XFCBFLG                                                  07808000
XFCBLINE EQU   FCBELEM+1                                                07809000
XFCBLPI  EQU   FCBELEM+4                                                07810000
XFCBCHX  EQU   FCBELEM+6                                                07811000
XFCBCH   EQU   XFCBCHX+1                                                07812000
FCBLINE  EQU   0                                                        07813000
PRTFCB   EQU   FCBLINE+1                                                07814000
FCBLN    EQU   PRTFCB+20                                                07815000
FCBLPI   EQU   PRTFCB+27                                                07816000
FCBCH    EQU   PRTFCB+44                                                07817000
FCBCN    EQU   FCBCH+15                                                 07818000
GSEG     EQU   0                                                        07819000
GSEGASGN EQU   GSEG                                                     07820000
GLOADMOD EQU   0                                                        07821000
LMODCNT  EQU   GLOADMOD+6                                               07822000
LMODBOD  EQU   GLOADMOD+8                                               07823000
LOADSEG  EQU   LMODBOD                                                  07824000
GRAFBOD  EQU   0                                                        07825000
GRAFSEG  EQU   0                                                        07826000
GASNMT   EQU   GRAFSEG                                                  07827000
GRSPAT   EQU   GRAFSEG+1                                                07828000
RASTER   EQU   GRSPAT                                                   07829000
BITPAT1  EQU   RASTER                                                   07830000
PITBITS  EQU   RASTER+2                                                 07831000
PIT1     EQU   PITBITS                                                  07832000
PIT2     EQU   PITBITS                                                  07833000
PARITY1  EQU   RASTER+2                                                 07834000
PARITY2  EQU   RASTER+2                                                 07835000
PITPAR   EQU   0                                                        07836000
GRFHDR   EQU   0                                                        07837000
GRCHARHD EQU   GRFHDR                                                   07838000
SEGNO    EQU   GRCHARHD+11                                              07839000
GRASN    EQU   SEGNO                                                    07840000
GRPIT    EQU   GRCHARHD+22                                              07841000
BITHD    EQU   0                                                        07842000
GRFGRID  EQU   0                                                        07843000
LNO      EQU   GRFGRID+2                                                07844000
DOT1     EQU   GRFGRID+5                                                07845000
GRAFBIT  EQU   GRFGRID+6                                                07846000
DOT2     EQU   GRFGRID+24                                               07847000
CESD     EQU   0                                                        07848000
CESDINFO EQU   CESD                                                     07849000
CESDID   EQU   CESDINFO                                                 07850000
CESDSP   EQU   CESDINFO+1                                               07851000
CESDESDI EQU   CESDINFO+4                                               07852000
CESDCNT  EQU   CESDINFO+6                                               07853000
CESDDATA EQU   CESD+8                                                   07854000
CESDNAME EQU   CESDDATA                                                 07855000
CESDTYPE EQU   CESDDATA+8                                               07856000
CESDADDR EQU   CESDDATA+9                                               07857000
CESDSEGN EQU   CESDDATA+12                                              07858000
CESDIDLN EQU   CESDDATA+13                                              07859000
TBLREF   EQU   0                                                        07860000
CLOADSEG EQU   0                                                        07861000
LTNO     EQU   CLOADSEG+5                                               07862000
COPYSEG  EQU   0                                                        07863000
COPYHD   EQU   COPYSEG                                                  07864000
COPYSEQN EQU   COPYHD                                                   07865000
COPY1    EQU   COPYSEQN                                                 07866000
COPYN    EQU   COPYSEQN+1                                               07867000
LINE1    EQU   COPYSEQN+2                                               07868000
LINEN    EQU   COPYSEQN+3                                               07869000
POS1     EQU   COPYHD+4                                                 07870000
TEXTX    EQU   COPYHD+5                                                 07871000
TEXT     EQU   COPYSEG+6                                                07872000
MODFORM  EQU   0                                                        07873000
MNOTE    EQU   MODFORM+2                                                07874000
MNOTEM   EQU   MNOTE+5                                                  07875000
MSEG     EQU   MODFORM+13                                               07876000
@NM00131 EQU   MODFORM+23                                               07877000
MNUMBER  EQU   @NM00131                                                 07878000
MCHAR    EQU   MODFORM+84                                               07879000
CMTINFO  EQU   0                                                        07880000
MINC     EQU   CMTINFO                                                  07881000
MAXC     EQU   CMTINFO+1                                                07882000
MINL     EQU   CMTINFO+2                                                07883000
MAXL     EQU   CMTINFO+3                                                07884000
NHPG     EQU   CMTINFO+4                                                07885000
NHLN     EQU   CMTINFO+6                                                07886000
TIME     EQU   CMTINFO+8                                                07887000
ORUNTIME EQU   CMTINFO+12                                               07888000
CMTARRAY EQU   CMTINFO+16                                               07889000
COPYINFO EQU   CMTARRAY                                                 07890000
CP1      EQU   COPYINFO                                                 07891000
CPX      EQU   COPYINFO+1                                               07892000
LN1      EQU   COPYINFO+2                                               07893000
LNX      EQU   COPYINFO+3                                               07894000
TXT      EQU   CMTARRAY+4                                               07895000
USERLIST EQU   0                                                        07896000
@NM00133 EQU   USERLIST                                                 07897000
PARMVL1  EQU   @NM00133                                                 07898000
@NM00134 EQU   USERLIST+4                                               07899000
PARMVL2  EQU   @NM00134                                                 07900000
PARM2    EQU   USERLIST+5                                               07901000
@NM00135 EQU   USERLIST+8                                               07902000
PARMVL3  EQU   @NM00135                                                 07903000
PARM3    EQU   USERLIST+9                                               07904000
DDNMLIST EQU   0                                                        07905000
LISTLEN  EQU   DDNMLIST                                                 07906000
USERINDD EQU   DDNMLIST+34                                              07907000
SYSIFLG  EQU   USERINDD                                                 07908000
USERPRDD EQU   DDNMLIST+42                                              07909000
SYSPFLG  EQU   USERPRDD                                                 07910000
USERU1DD EQU   DDNMLIST+58                                              07911000
SYS1FLG  EQU   USERU1DD                                                 07912000
USERU2DD EQU   DDNMLIST+66                                              07913000
SYS2FLG  EQU   USERU2DD                                                 07914000
HDNGLIST EQU   0                                                        07915000
HLEN     EQU   HDNGLIST                                                 07916000
HDNG     EQU   HDNGLIST+2                                               07917000
DDNMLST  EQU   0                                                        07918000
LIBOUTDD EQU   DDNMLST+24                                               07919000
SYNMSG   EQU   41                                                       07920000
IHADCB   EQU   0                                                        07921000
IHADCS00 EQU   0                                                        07922000
DCBFDAD  EQU   IHADCS00+5                                               07923000
IHADCS01 EQU   0                                                        07924000
DCBDVTBL EQU   IHADCS01                                                 07925000
IHADCS11 EQU   0                                                        07926000
DCBRELB  EQU   IHADCS11                                                 07927000
DCBREL   EQU   DCBRELB+1                                                07928000
DCBBUFCB EQU   IHADCS11+4                                               07929000
DCBDSORG EQU   IHADCS11+10                                              07930000
DCBDSRG1 EQU   DCBDSORG                                                 07931000
DCBDSRG2 EQU   DCBDSORG+1                                               07932000
DCBIOBAD EQU   IHADCS11+12                                              07933000
DCBODEB  EQU   DCBIOBAD                                                 07934000
DCBLNP   EQU   DCBODEB                                                  07935000
DCBQSLM  EQU   DCBLNP                                                   07936000
DCBIOBAA EQU   DCBODEB+1                                                07937000
IHADCS50 EQU   0                                                        07938000
DCBSVCXL EQU   IHADCS50                                                 07939000
DCBEODAD EQU   IHADCS50+4                                               07940000
DCBBFALN EQU   DCBEODAD                                                 07941000
DCBHIARC EQU   DCBBFALN                                                 07942000
DCBBFTEK EQU   DCBHIARC                                                 07943000
DCBBFT   EQU   DCBBFTEK                                                 07944000
DCBEXLST EQU   IHADCS50+8                                               07945000
DCBRECFM EQU   DCBEXLST                                                 07946000
DCBRECLA EQU   DCBRECFM                                                 07947000
IHADCS24 EQU   0                                                        07948000
DCBDDNAM EQU   IHADCS24                                                 07949000
DCBOFLGS EQU   IHADCS24+8                                               07950000
DCBOFLWR EQU   DCBOFLGS                                                 07951000
DCBOFOPN EQU   DCBOFLGS                                                 07952000
DCBIFLG  EQU   IHADCS24+9                                               07953000
DCBIBPCT EQU   DCBIFLG                                                  07954000
DCBMACR  EQU   IHADCS24+10                                              07955000
DCBMACR1 EQU   DCBMACR                                                  07956000
DCBMRFE  EQU   DCBMACR1                                                 07957000
DCBMRGET EQU   DCBMRFE                                                  07958000
DCBMRAPG EQU   DCBMACR1                                                 07959000
DCBMRRD  EQU   DCBMRAPG                                                 07960000
DCBMRCI  EQU   DCBMACR1                                                 07961000
DCBMRMVG EQU   DCBMRCI                                                  07962000
DCBMRLCG EQU   DCBMACR1                                                 07963000
DCBMRABC EQU   DCBMACR1                                                 07964000
DCBMRPT1 EQU   DCBMRABC                                                 07965000
DCBMRSBG EQU   DCBMRPT1                                                 07966000
DCBMRCRL EQU   DCBMACR1                                                 07967000
DCBMRCHK EQU   DCBMRCRL                                                 07968000
DCBMRRDX EQU   DCBMRCHK                                                 07969000
DCBMRDMG EQU   DCBMACR1                                                 07970000
DCBMACR2 EQU   DCBMACR+1                                                07971000
DCBMRPUT EQU   DCBMACR2                                                 07972000
DCBMRWRT EQU   DCBMACR2                                                 07973000
DCBMRMVP EQU   DCBMACR2                                                 07974000
DCBMR5WD EQU   DCBMACR2                                                 07975000
DCBMRLDM EQU   DCBMR5WD                                                 07976000
DCBMRLCP EQU   DCBMRLDM                                                 07977000
DCBMR4WD EQU   DCBMACR2                                                 07978000
DCBMRPT2 EQU   DCBMR4WD                                                 07979000
DCBMRTMD EQU   DCBMRPT2                                                 07980000
DCBMR3WD EQU   DCBMACR2                                                 07981000
DCBMRCTL EQU   DCBMR3WD                                                 07982000
DCBMRSTK EQU   DCBMRCTL                                                 07983000
DCBMR1WD EQU   DCBMACR2                                                 07984000
DCBMRSWA EQU   DCBMR1WD                                                 07985000
DCBMRDMD EQU   DCBMRSWA                                                 07986000
IHADCS25 EQU   0                                                        07987000
DCBMACRF EQU   IHADCS25+2                                               07988000
DCBMACF1 EQU   DCBMACRF                                                 07989000
DCBMFFE  EQU   DCBMACF1                                                 07990000
DCBMFGET EQU   DCBMFFE                                                  07991000
DCBMFAPG EQU   DCBMACF1                                                 07992000
DCBMFRD  EQU   DCBMFAPG                                                 07993000
DCBMFCI  EQU   DCBMACF1                                                 07994000
DCBMFMVG EQU   DCBMFCI                                                  07995000
DCBMFLCG EQU   DCBMACF1                                                 07996000
DCBMFABC EQU   DCBMACF1                                                 07997000
DCBMFPT1 EQU   DCBMFABC                                                 07998000
DCBMFSBG EQU   DCBMFPT1                                                 07999000
DCBMFCRL EQU   DCBMACF1                                                 08000000
DCBMFCHK EQU   DCBMFCRL                                                 08001000
DCBMFDMG EQU   DCBMACF1                                                 08002000
DCBMACF2 EQU   DCBMACRF+1                                               08003000
DCBMFPUT EQU   DCBMACF2                                                 08004000
DCBMFWRT EQU   DCBMACF2                                                 08005000
DCBMFMVP EQU   DCBMACF2                                                 08006000
DCBMF5WD EQU   DCBMACF2                                                 08007000
DCBMFLDM EQU   DCBMF5WD                                                 08008000
DCBMFLCP EQU   DCBMFLDM                                                 08009000
DCBMF4WD EQU   DCBMACF2                                                 08010000
DCBMFPT2 EQU   DCBMF4WD                                                 08011000
DCBMFTMD EQU   DCBMFPT2                                                 08012000
DCBMF3WD EQU   DCBMACF2                                                 08013000
DCBMFCTL EQU   DCBMF3WD                                                 08014000
DCBMFSTK EQU   DCBMFCTL                                                 08015000
DCBMF1WD EQU   DCBMACF2                                                 08016000
DCBMFSWA EQU   DCBMF1WD                                                 08017000
DCBMFDMD EQU   DCBMFSWA                                                 08018000
DCBDEBAD EQU   IHADCS25+4                                               08019000
DCBIFLGS EQU   DCBDEBAD                                                 08020000
DCBIFPCT EQU   DCBIFLGS                                                 08021000
IHADCS26 EQU   0                                                        08022000
DCBWRITE EQU   IHADCS26                                                 08023000
DCBREAD  EQU   DCBWRITE                                                 08024000
DCBWRITA EQU   DCBREAD+1                                                08025000
IHADCS27 EQU   0                                                        08026000
DCBGET   EQU   IHADCS27                                                 08027000
DCBPUT   EQU   DCBGET                                                   08028000
DCBGETA  EQU   DCBPUT+1                                                 08029000
IHADCS36 EQU   0                                                        08030000
DCBGERR  EQU   IHADCS36                                                 08031000
DCBPERR  EQU   DCBGERR                                                  08032000
DCBCHECK EQU   DCBPERR                                                  08033000
DCBOPTCD EQU   DCBCHECK                                                 08034000
DCBOPTH  EQU   DCBOPTCD                                                 08035000
DCBOPTO  EQU   DCBOPTH                                                  08036000
DCBOPTZ  EQU   DCBOPTCD                                                 08037000
DCBGERRA EQU   DCBCHECK+1                                               08038000
DCBPERRA EQU   DCBGERRA                                                 08039000
DCBSYNAD EQU   IHADCS36+4                                               08040000
DCBCIND1 EQU   IHADCS36+8                                               08041000
DCBCIND2 EQU   IHADCS36+9                                               08042000
DCBBLKSI EQU   IHADCS36+10                                              08043000
DCBIOBA  EQU   IHADCS36+16                                              08044000
DCBCICB  EQU   DCBIOBA                                                  08045000
IHADCS52 EQU   0                                                        08046000
DCBDIRCT EQU   IHADCS52                                                 08047000
DCBQSWS  EQU   DCBDIRCT                                                 08048000
DCBUSASI EQU   DCBQSWS                                                  08049000
DCBQADFS EQU   DCBUSASI                                                 08050000
DCBBUFOF EQU   DCBDIRCT+1                                               08051000
IHADCS37 EQU   0                                                        08052000
DCBFLAG1 EQU   IHADCS37                                                 08053000
IHADCS38 EQU   0                                                        08054000
DCBEOBR  EQU   IHADCS38                                                 08055000
DCBLRECL EQU   IHADCS38+10                                              08056000
DCBPOINT EQU   IHADCS38+12                                              08057000
DCBCNTRL EQU   DCBPOINT                                                 08058000
IHADCS40 EQU   0                                                        08059000
DCBEOBAD EQU   IHADCS40                                                 08060000
DCBCCCW  EQU   IHADCS40+4                                               08061000
DCBRECAD EQU   DCBCCCW                                                  08062000
DCBRECBT EQU   DCBRECAD                                                 08063000
DCBRCREL EQU   DCBRECBT                                                 08064000
@NM00169 EQU   IHADCS40+12                                              08065000
DCBEROPT EQU   @NM00169                                                 08066000
DEBDAPTR EQU   0                                                        08067000
DEBEXPTR EQU   0                                                        08068000
DEBSBPTR EQU   0                                                        08069000
DEBBASIC EQU   0                                                        08070000
DEBTCBAD EQU   DEBBASIC                                                 08071000
DEBDEBAD EQU   DEBBASIC+4                                               08072000
DEBIRBAD EQU   DEBBASIC+8                                               08073000
DEBOFLGS EQU   DEBIRBAD                                                 08074000
DEBOPATB EQU   DEBBASIC+12                                              08075000
DEBFLGS1 EQU   DEBBASIC+14                                              08076000
DEBUSRPG EQU   DEBBASIC+16                                              08077000
DEBNMEXT EQU   DEBUSRPG                                                 08078000
DEBRRQ   EQU   DEBBASIC+20                                              08079000
DEBECBAD EQU   DEBRRQ                                                   08080000
DEBDCBAD EQU   DEBBASIC+24                                              08081000
DEBPROTG EQU   DEBDCBAD                                                 08082000
DEBAPPAD EQU   DEBBASIC+28                                              08083000
DEBBASND EQU   DEBBASIC+32                                              08084000
DEBDASD  EQU   0                                                        08085000
DEBUCBAD EQU   DEBDASD                                                  08086000
DEBACSMD EQU   0                                                        08087000
DEBVOLSQ EQU   DEBACSMD                                                 08088000
DEBVOLBT EQU   DEBVOLSQ                                                 08089000
DEBDSNM  EQU   DEBACSMD+4                                               08090000
DEBUTSAA EQU   DEBDSNM                                                  08091000
DEBACS01 EQU   0                                                        08092000
DEBDSNAM EQU   DEBACS01                                                 08093000
DEBACS02 EQU   0                                                        08094000
DEBDBLK  EQU   DEBACS02                                                 08095000
DEBACS03 EQU   0                                                        08096000
DEBACS04 EQU   0                                                        08097000
DEBTBFRA EQU   DEBACS04                                                 08098000
DEBTCCWA EQU   DEBACS04+4                                               08099000
DEBACS05 EQU   0                                                        08100000
DEBFUCBA EQU   DEBACS05                                                 08101000
DEBLUCBA EQU   DEBACS05+4                                               08102000
DEBACS06 EQU   0                                                        08103000
DEBACS07 EQU   0                                                        08104000
DEBACS08 EQU   0                                                        08105000
DEBSUBNM EQU   0                                                        08106000
DEB      EQU   0                                                        08107000
DEBAVT   EQU   DEB                                                      08108000
DEBEOEA  EQU   DEBAVT                                                   08109000
DEBEOEAB EQU   DEBEOEA                                                  08110000
DEBSIOA  EQU   DEBAVT+4                                                 08111000
DEBSIOAB EQU   DEBSIOA                                                  08112000
DEBPCIA  EQU   DEBAVT+8                                                 08113000
DEBPCIAB EQU   DEBPCIA                                                  08114000
DEBCEA   EQU   DEBAVT+12                                                08115000
DEBCEAB  EQU   DEBCEA                                                   08116000
DEBXCEA  EQU   DEBAVT+16                                                08117000
DEBXCEAB EQU   DEBXCEA                                                  08118000
DEBPREFX EQU   DEB+20                                                   08119000
DEBXTNP  EQU   DEBPREFX+8                                               08120000
DEBXTN   EQU   0                                                        08121000
DEBXFLG1 EQU   DEBXTN+2                                                 08122000
ABPARM   EQU   0                                                        08123000
SYSCODE  EQU   ABPARM                                                   08124000
RETCOD   EQU   ABPARM+2                                                 08125000
OPTION   EQU   ABPARM+3                                                 08126000
IGNORE   EQU   OPTION                                                   08127000
COL      EQU   0                                                        08128000
ABPAR1   EQU   0                                                        08129000
ABDCB    EQU   0                                                        08130000
ABOCEWA  EQU   0                                                        08131000
ABDSN    EQU   ABOCEWA+100                                              08132000
ASGNMENT EQU   LPI8                                                     08133000
PITCH    EQU   LPI6                                                     08134000
ALLKEY   EQU   KWDUSED                                                  08135000
NAMESET  EQU   ALLKEY                                                   08136000
NOKEY    EQU   ALLKEY                                                   08137000
DELSET   EQU   ALLKEY                                                   08138000
FCBKEY   EQU   KWDUSED                                                  08139000
LPISET   EQU   FCBKEY                                                   08140000
TBLKEY   EQU   KWDUSED                                                  08141000
LOCSET   EQU   TBLKEY                                                   08142000
COPYKEY  EQU   KWDUSED                                                  08143000
COPYSET  EQU   COPYKEY                                                  08144000
LINESET  EQU   COPYKEY                                                  08145000
POSSET   EQU   COPYKEY                                                  08146000
TEXTSET  EQU   COPYKEY                                                  08147000
GRAPHKEY EQU   KWDUSED                                                  08148000
REFSET   EQU   GRAPHKEY                                                 08149000
GCMSET   EQU   GRAPHKEY                                                 08150000
ASGNSET  EQU   GRAPHKEY                                                 08151000
XLATTABL EQU   MODBOD                                                   08152000
XPOS     EQU   XLATTABL                                                 08153000
CGMIDALL EQU   XLATTABL+256                                             08154000
CGMIDX   EQU   CGMIDALL                                                 08155000
CGMIDN   EQU   CGMIDX                                                   08156000
GRFMODS  EQU   XLATTABL+264                                             08157000
GRAFMODN EQU   GRFMODS                                                  08158000
FCBMOD   EQU   LIBBUF                                                   08159000
FCBHEAD  EQU   FCBMOD                                                   08160000
FCBCNT   EQU   FCBHEAD+6                                                08161000
FCBYTE   EQU   FCBMOD+8                                                 08162000
FLPI12   EQU   FCBYTE                                                   08163000
FLPI     EQU   FLPI12                                                   08164000
DCBTAB   EQU   DCBADS                                                   08165000
CWORK    EQU   FWORK                                                    08166000
UWORK    EQU   CWORK                                                    08167000
UNITS    EQU   UWORK+1                                                  08168000
CWORKX   EQU   FWORK                                                    08169000
CWORK3   EQU   CWORKX+1                                                 08170000
CWORK2   EQU   CWORK3+1                                                 08171000
CWORK1   EQU   CWORK2+1                                                 08172000
COL72    EQU   PRIMCARD+71                                              08173000
IDR      EQU   CESD                                                     08174000
IDRINFO  EQU   IDR                                                      08175000
IDRID    EQU   IDRINFO                                                  08176000
IDRCNT   EQU   IDRINFO+1                                                08177000
IDRTYPE  EQU   IDRINFO+2                                                08178000
IDRDATA  EQU   IDR+3                                                    08179000
IDRZAP   EQU   IDRDATA                                                  08180000
IDR2DATA EQU   IDRDATA                                                  08181000
IDR2PRNM EQU   IDR2DATA                                                 08182000
IDR2PRVM EQU   IDR2DATA+10                                              08183000
IDR2DATE EQU   IDR2DATA+12                                              08184000
IDR3DATA EQU   IDRDATA                                                  08185000
IDR3ESDI EQU   IDR3DATA                                                 08186000
IDR3IND  EQU   IDR3DATA+2                                               08187000
IDR3PRNM EQU   IDR3DATA+3                                               08188000
IDR3PRVM EQU   IDR3DATA+13                                              08189000
IDR3DATE EQU   IDR3DATA+15                                              08190000
EOM      EQU   CESD                                                     08191000
EOMID    EQU   EOM                                                      08192000
EOMSP    EQU   EOM+1                                                    08193000
EOMCNT   EQU   EOM+4                                                    08194000
EOMCNTZ  EQU   EOM+6                                                    08195000
EOMCCW   EQU   EOM+8                                                    08196000
EOMCCWAD EQU   EOMCCW+1                                                 08197000
EOMCCWCT EQU   EOMCCW+6                                                 08198000
EOMENT   EQU   EOM+16                                                   08199000
EOMTLN   EQU   EOM+18                                                   08200000
DEBPTR   EQU   DCBDEBAD                                                 08201000
DEBBAS02 EQU   DEBBASND                                                 08202000
DEBDDS1  EQU   DEBBAS02                                                 08203000
DEBSUCBA EQU   DEBDDS1                                                  08204000
DEBDEVED EQU   DEBDDS1+4                                                08205000
DEBRDCB  EQU   DEBDDS1+4                                                08206000
DEBPDCB  EQU   DEBDDS1+8                                                08207000
DEBWDCB  EQU   DEBDDS1+12                                               08208000
DEBACS09 EQU   DEBDEVED                                                 08209000
DEBASC09 EQU   DEBACS09                                                 08210000
DEBEAMFG EQU   DEBASC09+3                                               08211000
DEBDSID  EQU   DEBASC09+4                                               08212000
DEBEOD   EQU   DEBASC09+12                                              08213000
DEBBOE   EQU   DEBEOD                                                   08214000
DEBEODRV EQU   DEBBOE                                                   08215000
DEBEODTT EQU   DEBBOE+1                                                 08216000
DEBEOD0  EQU   DEBBOE+2                                                 08217000
DEBEODSS EQU   DEBBOE+3                                                 08218000
DEBBAS01 EQU   DEBBASND                                                 08219000
DEBISAM  EQU   DEBBAS01                                                 08220000
DEBFIEAD EQU   DEBISAM                                                  08221000
DEBFPEAD EQU   DEBISAM+4                                                08222000
DEBFOEAD EQU   DEBISAM+8                                                08223000
DEBEXPT  EQU   DEBISAM+12                                               08224000
DEBRPSID EQU   DEBEXPT                                                  08225000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    08226000
DEBEXPTA EQU   DEBEXPT+1                                                08227000
DEBRSV12 EQU   DEBRPSID                                                 08228000
DEBRSV11 EQU   DEBRPSID                                                 08229000
DEBRSV10 EQU   DEBRPSID                                                 08230000
DEBRSV09 EQU   DEBRPSID                                                 08231000
DEBRPSAP EQU   DEBRPSID                                                 08232000
DEBRPSO  EQU   DEBRPSID                                                 08233000
DEBRPSI  EQU   DEBRPSID                                                 08234000
DEBRPSP  EQU   DEBRPSID                                                 08235000
DEBFOEB  EQU   DEBFOEAD+1                                               08236000
DEBNOEE  EQU   DEBFOEAD                                                 08237000
DEBFPEB  EQU   DEBFPEAD+1                                               08238000
DEBNPEE  EQU   DEBFPEAD                                                 08239000
DEBFIEB  EQU   DEBFIEAD+1                                               08240000
DEBNIEE  EQU   DEBFIEAD                                                 08241000
DEBBOESS EQU   DEBEODSS                                                 08242000
DEBBOE0  EQU   DEBEOD0                                                  08243000
DEBBOETT EQU   DEBEODTT                                                 08244000
DEBBOERV EQU   DEBEODRV                                                 08245000
DEBRV008 EQU   DEBDSID+7                                                08246000
DEBWTPTI EQU   DEBDSID+6                                                08247000
DEBEXDTE EQU   DEBDSID                                                  08248000
DEBRV007 EQU   DEBEAMFG                                                 08249000
DEBRV006 EQU   DEBEAMFG                                                 08250000
DEBRV005 EQU   DEBEAMFG                                                 08251000
DEBRV004 EQU   DEBEAMFG                                                 08252000
DEBSECVL EQU   DEBEAMFG                                                 08253000
DEBVAMSG EQU   DEBEAMFG                                                 08254000
DEBDSOPN EQU   DEBEAMFG                                                 08255000
DEBMULTI EQU   DEBEAMFG                                                 08256000
DEBVSEQU EQU   DEBASC09+2                                               08257000
DEBDSSQL EQU   DEBASC09+1                                               08258000
DEBVOLAC EQU   DEBASC09                                                 08259000
DEBWDCBA EQU   DEBWDCB+1                                                08260000
DEBRSV08 EQU   DEBWDCB                                                  08261000
DEBPDCBA EQU   DEBPDCB+1                                                08262000
DEBRSV07 EQU   DEBPDCB                                                  08263000
DEBRDCBA EQU   DEBRDCB+1                                                08264000
DEBRSV06 EQU   DEBRDCB                                                  08265000
DEBSUCBB EQU   DEBSUCBA+1                                               08266000
DEBSDVM  EQU   DEBSUCBA                                                 08267000
@NM00097 EQU   EOMCCW+4                                                 08268000
@NM00096 EQU   EOMCCW                                                   08269000
@NM00020 EQU   CWORK2                                                   08270000
@NM00019 EQU   CWORK3                                                   08271000
@NM00018 EQU   CWORKX                                                   08272000
@NM00017 EQU   UWORK                                                    08273000
FCHN     EQU   FCBYTE                                                   08274000
@NM00016 EQU   FLPI12                                                   08275000
FCBNA    EQU   FCBYTE                                                   08276000
FCBRSVD  EQU   FCBHEAD+4                                                08277000
FCBNAME  EQU   FCBHEAD                                                  08278000
CGMIDNO  EQU   CGMIDX+1                                                 08279000
XREF     EQU   XPOS                                                     08280000
XWCGM    EQU   XPOS                                                     08281000
@NM00015 EQU   GRAPHKEY                                                 08282000
@NM00014 EQU   COPYKEY                                                  08283000
GCMLSET  EQU   TBLKEY                                                   08284000
CGMIDSET EQU   TBLKEY                                                   08285000
@NM00013 EQU   TBLKEY                                                   08286000
CHSET    EQU   FCBKEY                                                   08287000
SIZESET  EQU   FCBKEY                                                   08288000
@NM00012 EQU   FCBKEY                                                   08289000
@NM00179 EQU   ABOCEWA                                                  08290000
@NM00178 EQU   OPTION                                                   08291000
@NM00177 EQU   ABPARM+1                                                 08292000
DEBXRV40 EQU   DEBXTN+28                                                08293000
DEBXOPNJ EQU   DEBXTN+24                                                08294000
DEBXXARG EQU   DEBXTN+20                                                08295000
DEBXMCF2 EQU   DEBXTN+19                                                08296000
DEBXMCF1 EQU   DEBXTN+18                                                08297000
DEBXDSO2 EQU   DEBXTN+17                                                08298000
DEBXDSO1 EQU   DEBXTN+16                                                08299000
DEBXDBPR EQU   DEBXTN+12                                                08300000
DEBXDCBM EQU   DEBXTN+8                                                 08301000
DEBXDSAB EQU   DEBXTN+4                                                 08302000
DEBXRV48 EQU   DEBXTN+3                                                 08303000
DEBXRV47 EQU   DEBXFLG1                                                 08304000
DEBXRV46 EQU   DEBXFLG1                                                 08305000
DEBXRV45 EQU   DEBXFLG1                                                 08306000
DEBXRV44 EQU   DEBXFLG1                                                 08307000
DEBXRV43 EQU   DEBXFLG1                                                 08308000
DEBXDSSI EQU   DEBXFLG1                                                 08309000
DEBXTSKC EQU   DEBXFLG1                                                 08310000
DEBXCDCB EQU   DEBXFLG1                                                 08311000
DEBXLNGH EQU   DEBXTN                                                   08312000
DEBTBLOF EQU   DEBPREFX+14                                              08313000
DEBAMTYP EQU   DEBPREFX+13                                              08314000
DEBLNGTH EQU   DEBPREFX+12                                              08315000
DEBDCBMK EQU   DEBXTNP                                                  08316000
DEBDSCBA EQU   DEBPREFX+1                                               08317000
DEBWKARA EQU   DEBPREFX                                                 08318000
DEBXCEAD EQU   DEBXCEA+1                                                08319000
DEBXCENP EQU   DEBXCEAB                                                 08320000
DEBRSV35 EQU   DEBXCEAB                                                 08321000
DEBRSV34 EQU   DEBXCEAB                                                 08322000
DEBRSV33 EQU   DEBXCEAB                                                 08323000
DEBRSV32 EQU   DEBXCEAB                                                 08324000
DEBCEAD  EQU   DEBCEA+1                                                 08325000
DEBCENP  EQU   DEBCEAB                                                  08326000
DEBRSV31 EQU   DEBCEAB                                                  08327000
DEBRSV30 EQU   DEBCEAB                                                  08328000
DEBRSV29 EQU   DEBCEAB                                                  08329000
DEBRSV28 EQU   DEBCEAB                                                  08330000
DEBPCIAD EQU   DEBPCIA+1                                                08331000
DEBPCINP EQU   DEBPCIAB                                                 08332000
DEBRSV27 EQU   DEBPCIAB                                                 08333000
DEBRSV26 EQU   DEBPCIAB                                                 08334000
DEBRSV25 EQU   DEBPCIAB                                                 08335000
DEBRSV24 EQU   DEBPCIAB                                                 08336000
DEBSIOAD EQU   DEBSIOA+1                                                08337000
DEBSIONP EQU   DEBSIOAB                                                 08338000
DEBFIX   EQU   DEBSIOAB                                                 08339000
DEBIOVR  EQU   DEBSIOAB                                                 08340000
DEBSIOX  EQU   DEBSIOAB                                                 08341000
DEBPGFX  EQU   DEBSIOAB                                                 08342000
DEBEOEAD EQU   DEBEOEA+1                                                08343000
DEBEOENP EQU   DEBEOEAB                                                 08344000
DEBRSV22 EQU   DEBEOEAB                                                 08345000
DEBRSV21 EQU   DEBEOEAB                                                 08346000
DEBRSV20 EQU   DEBEOEAB                                                 08347000
DEBRSV19 EQU   DEBEOEAB                                                 08348000
DEBSUBID EQU   DEBSUBNM                                                 08349000
DEBSIOA2 EQU   DEBACS08+24                                              08350000
DEBRPSIO EQU   DEBACS08+20                                              08351000
DEBFREED EQU   DEBACS08+16                                              08352000
@NM00176 EQU   DEBACS08+12                                              08353000
@NM00175 EQU   DEBACS08+8                                               08354000
DEBDISAD EQU   DEBACS08+4                                               08355000
@NM00174 EQU   DEBACS08                                                 08356000
DEBRPSST EQU   DEBACS07+64                                              08357000
DEBARECK EQU   DEBACS07+60                                              08358000
DEBAREWT EQU   DEBACS07+56                                              08359000
DEBACHK  EQU   DEBACS07+52                                              08360000
DEBAWRIT EQU   DEBACS07+48                                              08361000
DEBASETL EQU   DEBACS07+44                                              08362000
DEBAREAD EQU   DEBACS07+40                                              08363000
DEBCRECK EQU   DEBACS07+36                                              08364000
DEBCREWT EQU   DEBACS07+32                                              08365000
DEBCCHK  EQU   DEBACS07+28                                              08366000
DEBCWRIT EQU   DEBACS07+24                                              08367000
DEBCSETL EQU   DEBACS07+20                                              08368000
DEBCREAD EQU   DEBACS07+16                                              08369000
DEBWKPT5 EQU   DEBACS07+12                                              08370000
DEBWKPT4 EQU   DEBACS07+8                                               08371000
DEBGET   EQU   DEBACS07+4                                               08372000
@NM00173 EQU   DEBACS07                                                 08373000
DEBPUT   EQU   DEBACS06+4                                               08374000
DEBDCBFA EQU   DEBACS06                                                 08375000
DEBLUCBB EQU   DEBLUCBA+1                                               08376000
DEBRSV18 EQU   DEBLUCBA                                                 08377000
DEBFUCBB EQU   DEBFUCBA+1                                               08378000
DEBRSV17 EQU   DEBFUCBA                                                 08379000
DEBTCCWB EQU   DEBTCCWA+1                                               08380000
DEBRSV16 EQU   DEBTCCWA                                                 08381000
DEBTBFRB EQU   DEBTBFRA+1                                               08382000
DEBRSV15 EQU   DEBTBFRA                                                 08383000
DEBDBPEF EQU   DEBACS03+8                                               08384000
DEBDBPP  EQU   DEBACS03+4                                               08385000
DEBDTPP  EQU   DEBACS03                                                 08386000
DEBDBPE  EQU   DEBDBLK+1                                                08387000
DEBDBPT  EQU   DEBDBLK                                                  08388000
DEBEXTNM EQU   DEBDSNAM                                                 08389000
DEBLRECL EQU   DEBACSMD+14                                              08390000
DEBBLKSI EQU   DEBACSMD+12                                              08391000
DEBRSV14 EQU   DEBDSNM+4                                                08392000
DEBUTSAB EQU   DEBUTSAA+1                                               08393000
DEBRSV13 EQU   DEBUTSAA                                                 08394000
DEBVOLNM EQU   DEBACSMD+2                                               08395000
DEBVLSEQ EQU   DEBVOLSQ+1                                               08396000
DEBRSV42 EQU   DEBVOLBT                                                 08397000
DEBRSV41 EQU   DEBVOLBT                                                 08398000
DEBRSV40 EQU   DEBVOLBT                                                 08399000
DEBRSV39 EQU   DEBVOLBT                                                 08400000
DEBRSV38 EQU   DEBVOLBT                                                 08401000
DEBRSV37 EQU   DEBVOLBT                                                 08402000
DEBRSV36 EQU   DEBVOLBT                                                 08403000
DEBEXFUL EQU   DEBVOLBT                                                 08404000
DEBNMTRK EQU   DEBDASD+14                                               08405000
DEBENDHH EQU   DEBDASD+12                                               08406000
DEBENDCC EQU   DEBDASD+10                                               08407000
DEBSTRHH EQU   DEBDASD+8                                                08408000
DEBSTRCC EQU   DEBDASD+6                                                08409000
DEBBINUM EQU   DEBDASD+4                                                08410000
DEBUCBA  EQU   DEBUCBAD+1                                               08411000
DEBDVMOD EQU   DEBUCBAD                                                 08412000
DEBAPPB  EQU   DEBAPPAD+1                                               08413000
DEBEXSCL EQU   DEBAPPAD                                                 08414000
DEBDCBB  EQU   DEBDCBAD+1                                               08415000
DEBDEBID EQU   DEBPROTG                                                 08416000
DEBECBB  EQU   DEBECBAD+1                                               08417000
DEBPRIOR EQU   DEBECBAD                                                 08418000
DEBUSRPB EQU   DEBUSRPG+1                                               08419000
DEBRSV05 EQU   DEBBASIC+15                                              08420000
DEBXTNIN EQU   DEBFLGS1                                                 08421000
DEBAPFIN EQU   DEBFLGS1                                                 08422000
DEBF1CEV EQU   DEBFLGS1                                                 08423000
DEBCINDI EQU   DEBFLGS1                                                 08424000
DEBRSV02 EQU   DEBFLGS1                                                 08425000
DEBRSIOA EQU   DEBFLGS1                                                 08426000
DEBEOFDF EQU   DEBFLGS1                                                 08427000
DEBPWCKD EQU   DEBFLGS1                                                 08428000
DEBQSCNT EQU   DEBBASIC+13                                              08429000
DEBACCS  EQU   DEBOPATB                                                 08430000
DEBPOSIT EQU   DEBOPATB                                                 08431000
DEBZERO  EQU   DEBOPATB                                                 08432000
DEBABEND EQU   DEBOPATB                                                 08433000
DEBIRBB  EQU   DEBIRBAD+1                                               08434000
DEBRERR  EQU   DEBOFLGS                                                 08435000
DEBLABEL EQU   DEBOFLGS                                                 08436000
DEBSPLIT EQU   DEBOFLGS                                                 08437000
DEBDCB   EQU   DEBOFLGS                                                 08438000
DEBRLSE  EQU   DEBOFLGS                                                 08439000
DEBEOF   EQU   DEBOFLGS                                                 08440000
DEBDISP  EQU   DEBOFLGS                                                 08441000
DEBDEBB  EQU   DEBDEBAD+1                                               08442000
DEBAMLNG EQU   DEBDEBAD                                                 08443000
DEBTCBB  EQU   DEBTCBAD+1                                               08444000
DEBNMSUB EQU   DEBTCBAD                                                 08445000
DCBEOB   EQU   IHADCS40+20                                              08446000
DCBPRECL EQU   IHADCS40+18                                              08447000
@NM00172 EQU   IHADCS40+16                                              08448000
@NM00171 EQU   @NM00169+1                                               08449000
@NM00170 EQU   DCBEROPT                                                 08450000
DCBERABE EQU   DCBEROPT                                                 08451000
DCBERSKP EQU   DCBEROPT                                                 08452000
DCBERACC EQU   DCBEROPT                                                 08453000
@NM00168 EQU   IHADCS40+10                                              08454000
@NM00167 EQU   IHADCS40+9                                               08455000
@NM00166 EQU   IHADCS40+8                                               08456000
DCBRECA  EQU   DCBRECAD+1                                               08457000
@NM00165 EQU   DCBRECBT                                                 08458000
DCBRCFGT EQU   DCBRCREL                                                 08459000
DCBRCTRU EQU   DCBRCREL                                                 08460000
DCBLCCW  EQU   DCBEOBAD                                                 08461000
DCBNOTE  EQU   DCBCNTRL                                                 08462000
@NM00164 EQU   IHADCS38+8                                               08463000
DCBEOBW  EQU   IHADCS38+4                                               08464000
DCBEOBRA EQU   DCBEOBR+1                                                08465000
DCBNCP   EQU   DCBEOBR                                                  08466000
@NM00163 EQU   DCBFLAG1                                                 08467000
DCBSTFLS EQU   DCBFLAG1                                                 08468000
DCBSTQCK EQU   DCBFLAG1                                                 08469000
DCBDIRCQ EQU   DCBBUFOF                                                 08470000
DCBQSTRU EQU   DCBUSASI                                                 08471000
@NM00162 EQU   DCBUSASI                                                 08472000
DCBQADF3 EQU   DCBQADFS                                                 08473000
DCBQADF2 EQU   DCBQADFS                                                 08474000
DCBQADF1 EQU   DCBQADFS                                                 08475000
DCBBLBP  EQU   DCBUSASI                                                 08476000
@NM00161 EQU   DCBUSASI                                                 08477000
DCBCICBA EQU   DCBCICB+1                                                08478000
@NM00160 EQU   DCBCICB                                                  08479000
DCBOFFSW EQU   IHADCS36+15                                              08480000
DCBOFFSR EQU   IHADCS36+14                                              08481000
DCBWCPL  EQU   IHADCS36+13                                              08482000
DCBWCPO  EQU   IHADCS36+12                                              08483000
DCBCNQSM EQU   DCBCIND2                                                 08484000
DCBCNFEO EQU   DCBCIND2                                                 08485000
DCBCNCHS EQU   DCBCIND2                                                 08486000
DCBCNBFP EQU   DCBCIND2                                                 08487000
DCBCNIOE EQU   DCBCIND2                                                 08488000
DCBCNCLO EQU   DCBCIND2                                                 08489000
DCBCNWRO EQU   DCBCIND2                                                 08490000
DCBCNSTO EQU   DCBCIND2                                                 08491000
DCBCNEXB EQU   DCBCIND1                                                 08492000
@NM00159 EQU   DCBCIND1                                                 08493000
DCBCNBRM EQU   DCBCIND1                                                 08494000
@NM00158 EQU   DCBCIND1                                                 08495000
DCBCNEVA EQU   DCBCIND1                                                 08496000
DCBCNEVB EQU   DCBCIND1                                                 08497000
DCBCNSRD EQU   DCBCIND1                                                 08498000
DCBCNTOV EQU   DCBCIND1                                                 08499000
DCBSYNA  EQU   DCBSYNAD+1                                               08500000
DCBIOBL  EQU   DCBSYNAD                                                 08501000
DCBCHCKA EQU   DCBPERRA                                                 08502000
DCBOPTJ  EQU   DCBOPTCD                                                 08503000
DCBOPTT  EQU   DCBOPTCD                                                 08504000
DCBSRCHD EQU   DCBOPTZ                                                  08505000
DCBOPTQ  EQU   DCBOPTCD                                                 08506000
DCBBCKPT EQU   DCBOPTO                                                  08507000
DCBOPTC  EQU   DCBOPTCD                                                 08508000
DCBOPTU  EQU   DCBOPTCD                                                 08509000
DCBOPTW  EQU   DCBOPTCD                                                 08510000
DCBPUTA  EQU   DCBGETA                                                  08511000
@NM00157 EQU   DCBPUT                                                   08512000
DCBREADA EQU   DCBWRITA                                                 08513000
@NM00156 EQU   DCBREAD                                                  08514000
DCBDEBA  EQU   DCBDEBAD+1                                               08515000
@NM00155 EQU   DCBIFLGS                                                 08516000
DCBIFIOE EQU   DCBIFLGS                                                 08517000
DCBCH12  EQU   DCBIFPCT                                                 08518000
DCBCH9   EQU   DCBIFPCT                                                 08519000
DCBIFEC  EQU   DCBIFLGS                                                 08520000
DCBMFSTI EQU   DCBMFDMD                                                 08521000
DCBMFAWR EQU   DCBMFSTK                                                 08522000
DCBMFUIP EQU   DCBMFTMD                                                 08523000
DCBMFIDW EQU   DCBMFLCP                                                 08524000
DCBMFWRK EQU   DCBMFMVP                                                 08525000
DCBMFRDQ EQU   DCBMFWRT                                                 08526000
DCBMFGTQ EQU   DCBMFPUT                                                 08527000
DCBMFSTL EQU   DCBMACF2                                                 08528000
DCBMFCK  EQU   DCBMFDMG                                                 08529000
DCBMFRDX EQU   DCBMFCHK                                                 08530000
DCBMFDBF EQU   DCBMFSBG                                                 08531000
DCBMFRDI EQU   DCBMFLCG                                                 08532000
DCBMFRDK EQU   DCBMFMVG                                                 08533000
DCBMFWRQ EQU   DCBMFRD                                                  08534000
DCBMFPTQ EQU   DCBMFGET                                                 08535000
DCBMFECP EQU   DCBMACF1                                                 08536000
DCBTIOT  EQU   IHADCS25                                                 08537000
DCBMRSTI EQU   DCBMRDMD                                                 08538000
DCBMRAWR EQU   DCBMRSTK                                                 08539000
DCBMRUIP EQU   DCBMRTMD                                                 08540000
DCBMRIDW EQU   DCBMRLCP                                                 08541000
DCBMRWRK EQU   DCBMRMVP                                                 08542000
DCBMRRDQ EQU   DCBMRWRT                                                 08543000
DCBMRGTQ EQU   DCBMRPUT                                                 08544000
DCBMRSTL EQU   DCBMACR2                                                 08545000
DCBMRCK  EQU   DCBMRDMG                                                 08546000
DCBPGFXA EQU   DCBMRRDX                                                 08547000
DCBMRDBF EQU   DCBMRSBG                                                 08548000
DCBMRRDI EQU   DCBMRLCG                                                 08549000
DCBMRRDK EQU   DCBMRMVG                                                 08550000
DCBMRWRQ EQU   DCBMRRD                                                  08551000
DCBMRPTQ EQU   DCBMRGET                                                 08552000
DCBMRECP EQU   DCBMACR1                                                 08553000
@NM00154 EQU   DCBIFLG                                                  08554000
DCBIBIOE EQU   DCBIFLG                                                  08555000
DCBICH12 EQU   DCBIBPCT                                                 08556000
DCBICH9  EQU   DCBIBPCT                                                 08557000
DCBIBEC  EQU   DCBIFLG                                                  08558000
DCBOFIOF EQU   DCBOFLGS                                                 08559000
DCBOFUEX EQU   DCBOFLGS                                                 08560000
DCBOFTM  EQU   DCBOFLGS                                                 08561000
DCBOFPPC EQU   DCBOFLGS                                                 08562000
DCBOFEOV EQU   DCBOFLGS                                                 08563000
DCBOFLRB EQU   DCBOFLGS                                                 08564000
DCBOFIOD EQU   DCBOFLWR                                                 08565000
DCBEXLSA EQU   DCBEXLST+1                                               08566000
DCBRECKL EQU   DCBRECFM                                                 08567000
DCBRECCC EQU   DCBRECFM                                                 08568000
DCBRECSB EQU   DCBRECFM                                                 08569000
DCBRECBR EQU   DCBRECFM                                                 08570000
DCBRECTO EQU   DCBRECLA                                                 08571000
DCBRECL  EQU   DCBRECLA                                                 08572000
DCBEODA  EQU   DCBEODAD+1                                               08573000
DCBBFA   EQU   DCBBFTEK                                                 08574000
DCBH0    EQU   DCBBFTEK                                                 08575000
DCBBFTKD EQU   DCBBFTEK                                                 08576000
DCBBFTE  EQU   DCBBFT                                                   08577000
DCBBFTKR EQU   DCBBFT                                                   08578000
DCBBFTS  EQU   DCBBFT                                                   08579000
DCBH1    EQU   DCBBFTEK                                                 08580000
DCBSVCXA EQU   DCBSVCXL+1                                               08581000
@NM00153 EQU   DCBSVCXL                                                 08582000
DCBODEBA EQU   DCBIOBAA                                                 08583000
@NM00152 EQU   DCBQSLM                                                  08584000
DCBUPDBT EQU   DCBQSLM                                                  08585000
DCBUPDCM EQU   DCBQSLM                                                  08586000
DCB1DVDS EQU   DCBQSLM                                                  08587000
@NM00151 EQU   DCBDSRG2                                                 08588000
DCBDSGTR EQU   DCBDSRG2                                                 08589000
DCBACBM  EQU   DCBDSRG2                                                 08590000
@NM00150 EQU   DCBDSRG2                                                 08591000
DCBDSGTQ EQU   DCBDSRG2                                                 08592000
DCBDSGTX EQU   DCBDSRG2                                                 08593000
DCBDSGGS EQU   DCBDSRG2                                                 08594000
DCBDSGU  EQU   DCBDSRG1                                                 08595000
DCBDSGPO EQU   DCBDSRG1                                                 08596000
@NM00149 EQU   DCBDSRG1                                                 08597000
@NM00148 EQU   DCBDSRG1                                                 08598000
DCBDSGCX EQU   DCBDSRG1                                                 08599000
DCBDSGDA EQU   DCBDSRG1                                                 08600000
DCBDSGPS EQU   DCBDSRG1                                                 08601000
DCBDSGIS EQU   DCBDSRG1                                                 08602000
DCBBUFL  EQU   IHADCS11+8                                               08603000
DCBBUFCA EQU   DCBBUFCB+1                                               08604000
DCBBUFNO EQU   DCBBUFCB                                                 08605000
DCBDEVT  EQU   DCBREL                                                   08606000
DCBKEYLE EQU   DCBRELB                                                  08607000
DCBTRBAL EQU   IHADCS01+6                                               08608000
@NM00147 EQU   IHADCS01+5                                               08609000
@NM00146 EQU   IHADCS01+4                                               08610000
DCBDVTBA EQU   DCBDVTBL+1                                               08611000
@NM00145 EQU   DCBDVTBL                                                 08612000
DCBKEYCN EQU   IHADCS00+4                                               08613000
DCBRELAD EQU   IHADCS00                                                 08614000
@NM00144 EQU   IHADCB                                                   08615000
@NM00138 EQU   DDNMLST                                                  08616000
@NM00137 EQU   DDNMLIST+50                                              08617000
@NM00136 EQU   DDNMLIST+2                                               08618000
PARM1    EQU   USERLIST+1                                               08619000
@NM00132 EQU   MODFORM+83                                               08620000
@NM00130 EQU   MODFORM+16                                               08621000
@NM00129 EQU   MODFORM+9                                                08622000
@NM00128 EQU   MNOTE                                                    08623000
@NM00127 EQU   MODFORM                                                  08624000
@NM00118 EQU   CLOADSEG+6                                               08625000
@NM00117 EQU   CLOADSEG                                                 08626000
@NM00095 EQU   GRFGRID+4                                                08627000
@NM00094 EQU   GRFGRID                                                  08628000
@NM00093 EQU   GRCHARHD+14                                              08629000
@NM00092 EQU   GRCHARHD                                                 08630000
BITPAT2  EQU   RASTER+1                                                 08631000
@NM00091 EQU   GLOADMOD                                                 08632000
@NM00090 EQU   FCBCH                                                    08633000
@NM00089 EQU   PRTFCB+29                                                08634000
@NM00088 EQU   PRTFCB+23                                                08635000
@NM00087 EQU   PRTFCB                                                   08636000
FCBCTL   EQU   FCBLINE                                                  08637000
@NM00086 EQU   XFCBCHX                                                  08638000
@NM00085 EQU   GCMNAME                                                  08639000
@NM00084 EQU   PRNTGCMR                                                 08640000
OR       EQU   CG                                                       08641000
@NM00082 EQU   DISC1                                                    08642000
@NM00081 EQU   WNCI                                                     08643000
@NM00080 EQU   HEXREP+2                                                 08644000
@NM00079 EQU   HEXREP                                                   08645000
@NM00078 EQU   XHEAD+2                                                  08646000
@NM00077 EQU   XHEAD                                                    08647000
@NM00076 EQU   PRINTXTB                                                 08648000
@NM00075 EQU   QUEUE+105                                                08649000
@NM00074 EQU   QUEUE+1                                                  08650000
RTNAME   EQU   TABLDEF+16                                               08651000
@NM00023 EQU   TABLDEF+12                                               08652000
@NM00022 EQU   TABLDEF+8                                                08653000
NOB      EQU   TABLDEF+4                                                08654000
REPFLAG  EQU   OPFLAGS+2                                                08655000
ASTRFLAG EQU   OPFLAGS+2                                                08656000
NOFLAG   EQU   OPFLAGS+2                                                08657000
CGMIDFLG EQU   OPFLAGS+1                                                08658000
LOCFLAG  EQU   OPFLAGS+1                                                08659000
GCMLFLAG EQU   OPFLAGS+1                                                08660000
GCMFLAG  EQU   OPFLAGS+1                                                08661000
REFFLAG  EQU   OPFLAGS+1                                                08662000
DELFLAG  EQU   OPFLAGS+1                                                08663000
ASGNFLAG EQU   OPFLAGS+1                                                08664000
NAMEFLAG EQU   OPFLAGS+1                                                08665000
TEXTFLAG EQU   OPFLAGS                                                  08666000
POSFLAG  EQU   OPFLAGS                                                  08667000
LINEFLAG EQU   OPFLAGS                                                  08668000
COPYFLAG EQU   OPFLAGS                                                  08669000
SIZEFLAG EQU   OPFLAGS                                                  08670000
CHFLAG   EQU   OPFLAGS                                                  08671000
LPIFLAG  EQU   OPFLAGS                                                  08672000
OPNUM    EQU   TABLDEF                                                  08673000
@NM00021 EQU   PRTQUEUE                                                 08674000
IPOS     EQU   COPYLABL+4                                               08675000
LINEX    EQU   COPYLABL+3                                               08676000
COPYX    EQU   COPYLABL+1                                               08677000
LASTBYTE EQU   WORKAREA+17908                                           08678000
OVERFLO  EQU   LIBBUF+8200                                              08679000
FCBBOD   EQU   MODBOD+3                                                 08680000
BEGMARG  EQU   MODBOD                                                   08681000
RESRV1   EQU   WORKAREA+795                                             08682000
PARMNUM  EQU   WORKAREA+794                                             08683000
LASTKEY  EQU   WORKAREA+784                                             08684000
@NM00011 EQU   MSGOF                                                    08685000
@NM00010 EQU   MSGR                                                     08686000
PREFX    EQU   MSGTXT                                                   08687000
@NM00009 EQU   SDRYCARD+18                                              08688000
@NM00008 EQU   LOADNAME                                                 08689000
ARGMT    EQU   WORK+152                                                 08690000
PRNCNT   EQU   WORK+148                                                 08691000
PRECOL   EQU   WORK+105                                                 08692000
@NM00007 EQU   BLDLNTRY+33                                              08693000
@NM00006 EQU   BATTRI                                                   08694000
BINDCT   EQU   BLDLNTRY+17                                              08695000
@NM00005 EQU   BLDLNTRY+15                                              08696000
BTTRP    EQU   BLDLNTRY+12                                              08697000
@NM00004 EQU   DIRECTRY+27                                              08698000
@NM00003 EQU   DATTRI                                                   08699000
@NM00002 EQU   DIRECTRY+16                                              08700000
DPREFX   EQU   DNAME                                                    08701000
ACTIVKEY EQU   WORK+19                                                  08702000
PARMGRP  EQU   STATUS4                                                  08703000
FLDSW    EQU   STATUS4                                                  08704000
HEXERR   EQU   STATUS4                                                  08705000
KEYIN    EQU   STATUS4                                                  08706000
KWDCOMP  EQU   STATUS3                                                  08707000
UNBAL    EQU   STATUS3                                                  08708000
INVCHAR  EQU   STATUS3                                                  08709000
INVPARM  EQU   STATUS3                                                  08710000
EXCLKWD  EQU   STATUS3                                                  08711000
INVKWD   EQU   STATUS3                                                  08712000
FOUND    EQU   STATUS3                                                  08713000
INVDLM   EQU   STATUS3                                                  08714000
XWORK    EQU   DWORK2                                                   08715000
@NM00001 EQU   DWORK1                                                   08716000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      08717000
@RF00132 EQU   @RC00118                                                 08718000
@RC00136 EQU   @RC00118                                                 08719000
@RC00197 EQU   @RC00196                                                 08720000
@RC00259 EQU   @RC00256                                                 08721000
@RC00408 EQU   @RC00391                                                 08722000
@RC00444 EQU   @RC00443                                                 08723000
@RC00426 EQU   @RC00389                                                 08724000
@RC00561 EQU   @RC00558                                                 08725000
@RC00595 EQU   @RC00592                                                 08726000
@RC00723 EQU   @RC00720                                                 08727000
@RC00750 EQU   @RC00747                                                 08728000
@RC00849 EQU   @RC00846                                                 08729000
@RC00835 EQU   @RC00829                                                 08730000
@RC00960 EQU   @RC00959                                                 08731000
@RC00967 EQU   @RC00959                                                 08732000
@RF01118 EQU   @RC01115                                                 08733000
@RF01186 EQU   @RC00934                                                 08734000
@RC01217 EQU   @RC01213                                                 08735000
@RC01281 EQU   @RC01272                                                 08736000
@RF01402 EQU   @RC01377                                                 08737000
@RC01947 EQU   @RC01946                                                 08738000
@RC01966 EQU   @EL00027                                                 08739000
@RC00203 EQU   @RC00197                                                 08740000
@RC00198 EQU   @RC00197                                                 08741000
@RC00596 EQU   @RC00595                                                 08742000
@RC00751 EQU   @RC00750                                                 08743000
@RC00841 EQU   @RC00835                                                 08744000
@RC00754 EQU   @RC00751                                                 08745000
@ENDDATA EQU   *                                                        08746000
         END   IEBIMAGE,(C'PLS1330',0701,76350)                         08747000
