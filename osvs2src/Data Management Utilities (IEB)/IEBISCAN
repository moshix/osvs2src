         TITLE 'PRINTER IMAGE LIBRARY UTILITY CARD SCAN -IEBISCAN-.    *00001000
                        '                                               00002000
IEBISCAN CSECT ,                                                01S0001 00003000
@MAINENT DS    0H                                               01S0001 00004000
         USING *,@15                                            01S0001 00005000
         B     @PROLOG                                          01S0001 00006000
         DC    AL1(16)                                          01S0001 00007000
         DC    C'IEBISCAN  76.222'                              01S0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                  01S0001 00010000
         BALR  @11,0                                            01S0001 00011000
@PSTART  LA    @12,4095(,@11)                                   01S0001 00012000
         USING @PSTART,@11                                      01S0001 00013000
         USING @PSTART+4095,@12                                 01S0001 00014000
BACK     EQU   4                                                        00015000
FORE     EQU   8                                                        00016000
         ST  @13,SAVE2+BACK(,BUFAD)    BACKWARD POINTER.                00017000
         LA  @14,SAVE2(,BUFAD)         THIS ROUTINE SAVE AREA.          00018000
         ST  @14,FORE(,@13)            FORWARD POINTER.                 00019000
         LR  @13,@14                   LINKAGE COMPLETE.                00020000
*        IF SCANINP = OFF              /* NOT SCAN IN PROGRESS MEANS */ 00021000
*         & CONTINUE = OFF                                      01S0035 00022000
*          THEN                        /*  NO OPERATION FOUND YET.   */ 00023000
         TM    SCANINP(BUFAD),B'01000000'                       01S0035 00024000
         BNZ   @RF00035                                         01S0035 00025000
         TM    CONTINUE(BUFAD),B'00001000'                      01S0035 00026000
         BNZ   @RF00035                                         01S0035 00027000
*            DO;                       /*                            */ 00028000
*              CALL GETCARDN;          /* READ A CONTROL CARD.       */ 00029000
         BAL   @14,GETCARDN                                     01S0037 00030000
*              IF EOFFLG = OFF         /* TEST FOR NO MORE CARDS.    */ 00031000
*                THEN                  /*                            */ 00032000
         TM    EOFFLG(BUFAD),B'01000000'                        01S0038 00033000
         BNZ   @RF00038                                         01S0038 00034000
*                  DO;                 /* DETERMINE OPERATION.       */ 00035000
*                    SCANINP = ON;     /* INDICATE SCAN IN PROGRESS. */ 00036000
         OI    SCANINP(BUFAD),B'01000000'                       01S0040 00037000
*/********************************************************************* 00038000
**                                                                    * 00039000
**  THE CONTROL CARD IS NOW SCANNED FOR VALID SYMBOL AND OPERATION    * 00040000
**  FIELDS.                                                           * 00041000
**                                                                    * 00042000
**********************************************************************/ 00043000
*          CALL SCAN;                  /*  SYMBOL SCAN.              */ 00044000
         BAL   @14,SCAN                                         02S0041 00045000
*          IF STOPCODE = BLANK         /* BLANK SHOULD FOLLOW SYMBOL.*/ 00046000
*           & PARMSIZE =< EIGHT        /* MAX OF EIGHT CHAR SYMBOL.  */ 00047000
*            THEN                      /* SYMBOL GOOD.               */ 00048000
         SLR   @10,@10                                          02S0042 00049000
         IC    @10,ARGMT(,BUFAD)                                02S0042 00050000
         LA    @10,FBYTE-1(@10)                                 02S0042 00051000
         CLI   STOPCODE(@10),X'11'                              02S0042 00052000
         BNE   @RF00042                                         02S0042 00053000
         CLC   PARMSIZE(2,BUFAD),@CH00049                       02S0042 00054000
         BH    @RF00042                                         02S0042 00055000
*              DO;                     /*                            */ 00056000
*                DO                    /* START BLANK SCAN.          */ 00057000
*                 CC = CC              /* FROM CURRENT COLUMN        */ 00058000
*                 TO CARDEND           /* TO THE END OF CARD.        */ 00059000
*                 WHILE COL(ONE)=BLAN; /* STOP AT NON BLANK.         */ 00060000
         SLR   @10,@10                                          02S0044 00061000
         ICM   @10,7,CC(BUFAD)                                  02S0044 00062000
         B     @DE00044                                         02S0044 00063000
@DL00044 ICM   @10,7,CC(BUFAD)                                  02S0044 00064000
         CLI   COL(@10),C' '                                    02S0044 00065000
         BNE   @DC00044                                         02S0044 00066000
*                END;                  /* END OF BLANK SCAN.         */ 00067000
         LA    @10,1                                            02S0045 00068000
         SLR   @09,@09                                          02S0045 00069000
         ICM   @09,7,CC(BUFAD)                                  02S0045 00070000
         ALR   @10,@09                                          02S0045 00071000
         STCM  @10,7,CC(BUFAD)                                  02S0045 00072000
@DE00044 C     @10,CARDEND(,BUFAD)                              02S0045 00073000
         BNH   @DL00044                                         02S0045 00074000
@DC00044 DS    0H                                               02S0046 00075000
*                IF CC < CARDEND       /* BLANK OPERATION NOT ALLOWED*/ 00076000
*                  THEN                /*                            */ 00077000
         SLR   @10,@10                                          02S0046 00078000
         ICM   @10,7,CC(BUFAD)                                  02S0046 00079000
         C     @10,CARDEND(,BUFAD)                              02S0046 00080000
         BNL   @RF00046                                         02S0046 00081000
*                    DO;               /*                            */ 00082000
*                      CALL SCAN;            /* SCAN OPERATION FIELD.*/ 00083000
         BAL   @14,SCAN                                         02S0048 00084000
*                      IF STOPCODE = BLANK   /* SHOULD STOP AT       */ 00085000
*                        THEN                /*  BLANK COLUMN.       */ 00086000
         SLR   @10,@10                                          02S0049 00087000
         IC    @10,ARGMT(,BUFAD)                                02S0049 00088000
         LA    @10,FBYTE-1(@10)                                 02S0049 00089000
         CLI   STOPCODE(@10),X'11'                              02S0049 00090000
         BNE   @RF00049                                         02S0049 00091000
*                          DO;               /*                      */ 00092000
*                            DO              /* FIND OP IN OP TABLE  */ 00093000
*                             NEXTOP = ONE   /* DETERMINE OPERATION  */ 00094000
*                             TO OPTABLN     /*  BY SCANNING OP TABLE*/ 00095000
*                             WHILE NAMELEN ^= PARMSIZE         02S0051 00096000
*                                 | TABLENAM(ONE:NAMELEN)/*  USING OP*/ 00097000
*                                ^= CARDDATA(ONE:PARMSIZE);     02S0051 00098000
         LA    @10,1                                            02S0051 00099000
         B     @DE00051                                         02S0051 00100000
@DL00051 SLR   @10,@10                                          02S0051 00101000
         IC    @10,NEXTOP(,BUFAD)                               02S0051 00102000
         MH    @10,@CH00054                                     02S0051 00103000
         SLR   @09,@09                                          02S0051 00104000
         ICM   @09,7,OPTABAD(BUFAD)                             02S0051 00105000
         LA    @01,0(@10,@09)                                   02S0051 00106000
         AL    @01,@CF01021                                     02S0051 00107000
         SLR   @15,@15                                          02S0051 00108000
         ICM   @15,3,PARMSIZE(BUFAD)                            02S0051 00109000
         SLR   @14,@14                                          02S0051 00110000
         IC    @14,NAMELEN(,@01)                                02S0051 00111000
         CR    @15,@14                                          02S0051 00112000
         BNE   @DB00051                                         02S0051 00113000
         AL    @09,@CF01022                                     02S0051 00114000
         LA    @10,RTNAME-16(@10,@09)                           02S0051 00115000
         BCTR  @15,0                                            02S0051 00116000
         EX    @15,@SC01023                                     02S0051 00117000
         BE    @DC00051                                         02S0051 00118000
@DB00051 DS    0H                                               02S0052 00119000
*                            END;            /*                      */ 00120000
         LA    @10,1                                            02S0052 00121000
         SLR   @09,@09                                          02S0052 00122000
         IC    @09,NEXTOP(,BUFAD)                               02S0052 00123000
         ALR   @10,@09                                          02S0052 00124000
@DE00051 STC   @10,NEXTOP(,BUFAD)                               02S0052 00125000
         SLR   @09,@09                                          02S0052 00126000
         IC    @09,OPTABLN(,BUFAD)                              02S0052 00127000
         CR    @10,@09                                          02S0052 00128000
         BNH   @DL00051                                         02S0052 00129000
@DC00051 DS    0H                                               02S0053 00130000
*                            DO              /* START BLANK SCAN.    */ 00131000
*                             CC = CC        /* FROM CURRENT COLUMN  */ 00132000
*                             TO CARDEND     /*  TO THE END OF CARD. */ 00133000
*                             WHILE COL(ONE) /*  STOP AT NON BLANK.  */ 00134000
*                                 = BLAN;    /*                      */ 00135000
         SLR   @10,@10                                          02S0053 00136000
         ICM   @10,7,CC(BUFAD)                                  02S0053 00137000
         B     @DE00053                                         02S0053 00138000
@DL00053 ICM   @10,7,CC(BUFAD)                                  02S0053 00139000
         CLI   COL(@10),C' '                                    02S0053 00140000
         BNE   @DC00053                                         02S0053 00141000
*                            END;            /* END BLANK SCAN.      */ 00142000
         LA    @10,1                                            02S0054 00143000
         SLR   @09,@09                                          02S0054 00144000
         ICM   @09,7,CC(BUFAD)                                  02S0054 00145000
         ALR   @10,@09                                          02S0054 00146000
         STCM  @10,7,CC(BUFAD)                                  02S0054 00147000
@DE00053 C     @10,CARDEND(,BUFAD)                              02S0054 00148000
         BNH   @DL00053                                         02S0054 00149000
@DC00053 DS    0H                                               02S0055 00150000
*                            IF CC ^< CARDEND    /* TEST FOR         */ 00151000
*                              THEN              /*  NO KEYWORDS.    */ 00152000
         SLR   @10,@10                                          02S0055 00153000
         ICM   @10,7,CC(BUFAD)                                  02S0055 00154000
         C     @10,CARDEND(,BUFAD)                              02S0055 00155000
         BL    @RF00055                                         02S0055 00156000
*                                DO;             /* RESET            */ 00157000
*                                  SCANINP = OFF;/*  SCAN IN PROGRESS*/ 00158000
         NI    SCANINP(BUFAD),B'10111111'                       02S0057 00159000
*                                  IF NOFLAG(NEXTOP) = ON       02S0058 00160000
*                                    THEN        /* NO KWD, VALID.   */ 00161000
         SLR   @10,@10                                          02S0058 00162000
         IC    @10,NEXTOP(,BUFAD)                               02S0058 00163000
         MH    @10,@CH00054                                     02S0058 00164000
         ICM   @09,7,OPTABAD(BUFAD)                             02S0058 00165000
         ALR   @09,@10                                          02S0058 00166000
         AL    @09,@CF01026                                     02S0058 00167000
         TM    NOFLAG-3(@09),B'10000000'                        02S0058 00168000
         BNO   @RF00058                                         02S0058 00169000
*                                      NOKEY=ON; /* SET NO KEYWORD.  */ 00170000
         OI    NOKEY(BUFAD),B'01000000'                         02S0059 00171000
*                                END;            /*                  */ 00172000
*                          END;              /* OPERATION DETERMINED.*/ 00173000
*                        ELSE                /*                      */ 00174000
*                          NEXTOP            /* INCORRECT OP FIELD.  */ 00175000
*                           = OPTABLN + ONE;                    02S0062 00176000
         B     @RC00049                                         02S0062 00177000
@RF00049 LA    @10,1                                            02S0062 00178000
         SLR   @09,@09                                          02S0062 00179000
         IC    @09,OPTABLN(,BUFAD)                              02S0062 00180000
         ALR   @10,@09                                          02S0062 00181000
         STC   @10,NEXTOP(,BUFAD)                               02S0062 00182000
*                    END;              /*                            */ 00183000
*                  ELSE                /*                            */ 00184000
*                    DO;               /* INCORRECT CARD FORMAT.     */ 00185000
         B     @RC00046                                         02S0064 00186000
@RF00046 DS    0H                                               02S0065 00187000
*                      NEXTOP = OPTABLN + ONE;                  02S0065 00188000
         LA    @10,1                                            02S0065 00189000
         SLR   @09,@09                                          02S0065 00190000
         IC    @09,OPTABLN(,BUFAD)                              02S0065 00191000
         ALR   @10,@09                                          02S0065 00192000
         STC   @10,NEXTOP(,BUFAD)                               02S0065 00193000
*                      FMTERR = ON;    /* INDICATE FORMAT ERROR.     */ 00194000
         OI    FMTERR(BUFAD),B'00001000'                        02S0066 00195000
*                    END;              /*                            */ 00196000
*              END;                    /*                            */ 00197000
*            ELSE                      /* SYMBOL ERROR.              */ 00198000
*              DO;                     /*                            */ 00199000
         B     @RC00042                                         02S0069 00200000
@RF00042 DS    0H                                               02S0070 00201000
*                NEXTOP = OPTABLN + ONE;/* INCORRECT SYMBOL FLD.     */ 00202000
         LA    @10,1                                            02S0070 00203000
         SLR   @09,@09                                          02S0070 00204000
         IC    @09,OPTABLN(,BUFAD)                              02S0070 00205000
         ALR   @10,@09                                          02S0070 00206000
         STC   @10,NEXTOP(,BUFAD)                               02S0070 00207000
*                FMTERR = ON;          /* INDICATE FORMAT ERROR.     */ 00208000
         OI    FMTERR(BUFAD),B'00001000'                        02S0071 00209000
*              END;                    /*                            */ 00210000
*                  END;                /* END OF OPERATION SCAN.     */ 00211000
*                ELSE;                 /* NO CARD, LEAVE QUICKLY.    */ 00212000
@RF00038 DS    0H                                               01S0075 00213000
*            END;                      /*                            */ 00214000
*          ELSE                        /*                            */ 00215000
*            DO                        /* EXECUTE THIS ROUTINE WHILE */ 00216000
*             WHILE SCANINP = ON;      /*  THERE ARE KEYWORDS.       */ 00217000
         B     @RC00035                                         01S0076 00218000
@RF00035 B     @DE00076                                         01S0076 00219000
@DL00076 DS    0H                                               01S0077 00220000
*              IF KEYIN = ON           /* KEYWORD COULD BE READY.    */ 00221000
*                THEN                  /*                            */ 00222000
         TM    KEYIN(BUFAD),B'10000000'                         01S0077 00223000
         BNO   @RF00077                                         01S0077 00224000
*                  KEYIN = OFF;        /* DO NOT SCAN FOR IT.        */ 00225000
         NI    KEYIN(BUFAD),B'01111111'                         01S0078 00226000
*                ELSE                  /*                            */ 00227000
*                  CALL SCAN;          /* SCAN KEYWORD.              */ 00228000
         B     @RC00077                                         01S0079 00229000
@RF00077 BAL   @14,SCAN                                         01S0079 00230000
*              IF PARMSIZE ^= ZERO     /* CHECK FOR NULL KEYWORD.    */ 00231000
*                THEN                  /* NOT NULL.                  */ 00232000
@RC00077 ICM   @10,3,PARMSIZE(BUFAD)                            01S0080 00233000
         BZ    @RF00080                                         01S0080 00234000
*                  IF STOPCODE = EQUAL /* SHOULD ALWAYS STOP AT      */ 00235000
*                    THEN              /*  EQUAL SIGN.               */ 00236000
         SLR   @10,@10                                          01S0081 00237000
         IC    @10,ARGMT(,BUFAD)                                01S0081 00238000
         LA    @10,FBYTE-1(@10)                                 01S0081 00239000
         CLI   STOPCODE(@10),X'20'                              01S0081 00240000
         BNE   @RF00081                                         01S0081 00241000
*                      DO;             /*  KEYWORD PROCESSING.       */ 00242000
*/********************************************************************* 00243000
**                                                                    * 00244000
** THIS SEGMENT WILL INVOKE THE APPROPRIATE KEYWORD SCAN ROUTINE      * 00245000
** WHICH WILL PROCESS THE PARAMETER(S) OF THE KEYWORD IF ANY.         * 00246000
**                                                                    * 00247000
**********************************************************************/ 00248000
*        ACTIVKEY = ZERO;              /* INITIALIZE KEYWORD CODE.   */ 00249000
         MVI   ACTIVKEY(BUFAD),X'00'                            02S0083 00250000
*        DO                            /* KEYWORD SEARCH.            */ 00251000
*         /************************************************************ 00252000
*         *                                                           * 00253000
*         *  THE KEYWORD TABLE IS SEARCHED FOR A MATCH OF THE         * 00254000
*         *  KEYWORD FOUND ON THE CONTROL CARD.                       * 00255000
*         *                                                           * 00256000
*         ************************************************************/ 00257000
*         UNTIL ACTIVKEY = DIM(KEYADDR)                         02S0084 00258000
*          | (VARI(ACTIVKEY) = OFF & PARMSIZE = KLEN(ACTIVKEY)  02S0084 00259000
*                & KEYWD(ACTIVKEY,ONE:PARMSIZE)                 02S0084 00260000
*                = CARDDATA(ONE:PARMSIZE))                      02S0084 00261000
*          | (VARI(ACTIVKEY) = ON                               02S0084 00262000
*                & KEYWD(ACTIVKEY,ONE:KLEN(ACTIVKEY))           02S0084 00263000
*                = CARDDATA(ONE:KLEN(ACTIVKEY)));               02S0084 00264000
@DL00084 DS    0H                                               02S0085 00265000
*          ACTIVKEY = ACTIVKEY + ONE;  /* GET NEXT KEYWORD IN TABLE. */ 00266000
         LA    @10,1                                            02S0085 00267000
         SLR   @09,@09                                          02S0085 00268000
         IC    @09,ACTIVKEY(,BUFAD)                             02S0085 00269000
         ALR   @10,@09                                          02S0085 00270000
         STC   @10,ACTIVKEY(,BUFAD)                             02S0085 00271000
*        END;                          /* END OF SEARCH.             */ 00272000
@DE00084 CLI   ACTIVKEY(BUFAD),15                               02S0086 00273000
         BE    @DC00084                                         02S0086 00274000
         SLR   @10,@10                                          02S0086 00275000
         IC    @10,ACTIVKEY(,BUFAD)                             02S0086 00276000
         MH    @10,@CH00359                                     02S0086 00277000
         LA    @09,VARI-20(@10)                                 02S0086 00278000
         TM    0(@09),B'00010000'                               02S0086 00279000
         BNZ   @GL00004                                         02S0086 00280000
         SLR   @09,@09                                          02S0086 00281000
         ICM   @09,3,PARMSIZE(BUFAD)                            02S0086 00282000
         SLR   @15,@15                                          02S0086 00283000
         IC    @15,KLEN-20(@10)                                 02S0086 00284000
         CR    @09,@15                                          02S0086 00285000
         BNE   @GL00004                                         02S0086 00286000
         BCTR  @09,0                                            02S0086 00287000
         LA    @01,KEYWD-20(@10)                                02S0086 00288000
         EX    @09,@SC01029                                     02S0086 00289000
         BE    @DC00084                                         02S0086 00290000
@GL00004 SLR   @10,@10                                          02S0086 00291000
         IC    @10,ACTIVKEY(,BUFAD)                             02S0086 00292000
         MH    @10,@CH00359                                     02S0086 00293000
         LA    @09,VARI-20(@10)                                 02S0086 00294000
         TM    0(@09),B'00010000'                               02S0086 00295000
         BNO   @DL00084                                         02S0086 00296000
         SLR   @09,@09                                          02S0086 00297000
         IC    @09,KLEN-20(@10)                                 02S0086 00298000
         BCTR  @09,0                                            02S0086 00299000
         LA    @01,KEYWD-20(@10)                                02S0086 00300000
         EX    @09,@SC01029                                     02S0086 00301000
         BNE   @DL00084                                         02S0086 00302000
@DC00084 DS    0H                                               02S0087 00303000
*        PRNCNT = ZERO;                /* RESET PARENTHESIS COUNTER. */ 00304000
         SLR   @10,@10                                          02S0087 00305000
         STH   @10,PRNCNT(,BUFAD)                               02S0087 00306000
*        KWDCOMP = OFF;                /* SET INCOMPLETE THRU KWD.   */ 00307000
*        FOUND = OFF;                  /* INITIALIZE FOR PARM SCAN.  */ 00308000
         NI    KWDCOMP(BUFAD),B'10111110'                       02S0089 00309000
*        FLDSW = OFF;                  /* RESET IN FIELD SWITCH.     */ 00310000
*        PARMGRP = OFF;                /* RESET PARAMETER GRP SW.    */ 00311000
         NI    FLDSW(BUFAD),B'11110011'                         02S0091 00312000
*        PARMNUM = ONE;                /* PRIME FOR PARM SCAN.       */ 00313000
         MVI   PARMNUM(BUFAD),X'01'                             02S0092 00314000
*        PARMSIZE = MIN(PARMSIZE,EIGHT);/* EIGHT IS MAXIMUM SIZE     */ 00315000
         SLR   @10,@10                                          02S0093 00316000
         ICM   @10,3,PARMSIZE(BUFAD)                            02S0093 00317000
         LA    @09,8                                            02S0093 00318000
         CR    @10,@09                                          02S0093 00319000
         BNH   *+6                                                      00320000
         LR    @10,@09                                          02S0093 00321000
         STH   @10,PARMSIZE(,BUFAD)                             02S0093 00322000
*        LASTKEY = CARDDATA(ONE:PARMSIZE);/* SAVE THIS KEYWORD.      */ 00323000
         MVI   LASTKEY+1(BUFAD),C' '                            02S0094 00324000
         MVC   LASTKEY+2(6,BUFAD),LASTKEY+1(BUFAD)              02S0094 00325000
         BCTR  @10,0                                            02S0094 00326000
         EX    @10,@SM01031                                     02S0094 00327000
*        CALL PARMRTN;                 /* PROCESS PARMS THIS KEYWORD.*/ 00328000
         SLR   @10,@10                                          02S0095 00329000
         IC    @10,ACTIVKEY(,BUFAD)                             02S0095 00330000
         MH    @10,@CH00359                                     02S0095 00331000
         L     @15,PRMPTR-21(@10)                               02S0095 00332000
         LA    @15,0(,@15)                                      02S0095 00333000
         BALR  @14,@15                                          02S0095 00334000
*        IF PARMNUM ^= ZERO            /* CATCH ALL OTHER ERRORS.    */ 00335000
*         & KWDCOMP = OFF              /*                            */ 00336000
*         & INVKWD = OFF               /*                            */ 00337000
*         & EXCLKWD = OFF              /*                            */ 00338000
*          THEN                        /*                            */ 00339000
         CLI   PARMNUM(BUFAD),0                                 02S0096 00340000
         BE    @RF00096                                         02S0096 00341000
         TM    KWDCOMP(BUFAD),B'00110001'                       02S0096 00342000
         BNZ   @RF00096                                         02S0096 00343000
*            INVPARM = ON;             /* MUST BE INVALID            */ 00344000
         OI    INVPARM(BUFAD),B'00001000'                       02S0097 00345000
*          ELSE;                       /* NOT INVALID HERE.          */ 00346000
@RF00096 DS    0H                                               02S0099 00347000
*        IF COL(ONE) = BLAN            /* CHECK FOR ANOTHER          */ 00348000
*         & SCANINP = ON               /*  KEYWORD ON THIS CARD.     */ 00349000
*          THEN                        /*                            */ 00350000
         ICM   @10,7,CC(BUFAD)                                  02S0099 00351000
         CLI   COL(@10),C' '                                    02S0099 00352000
         BNE   @RF00099                                         02S0099 00353000
         TM    SCANINP(BUFAD),B'01000000'                       02S0099 00354000
         BNO   @RF00099                                         02S0099 00355000
*            IF CONTINUE = ON          /* CHECK FOR POSSIBLE         */ 00356000
*              THEN                    /*  CONTINUATION.             */ 00357000
         TM    CONTINUE(BUFAD),B'00001000'                      02S0100 00358000
         BNO   @RF00100                                         02S0100 00359000
*                CALL GETCARDN;        /* NEXT CARD CONTINUES.       */ 00360000
         BAL   @14,GETCARDN                                     02S0101 00361000
*        DO                            /* MUST FIND NEXT KEYWORD.    */ 00362000
*         WHILE KWDCOMP = OFF;         /* IF SCAN INCOMPLETE.        */ 00363000
@RF00100 DS    0H                                               02S0102 00364000
@RF00099 B     @DE00102                                         02S0102 00365000
@DL00102 DS    0H                                               02S0103 00366000
*          CALL SCAN;                  /*                            */ 00367000
         BAL   @14,SCAN                                         02S0103 00368000
*          IF STOPCODE = BLANK         /* STOP ON ANY BLANK.         */ 00369000
*            THEN                      /*                            */ 00370000
         SLR   @10,@10                                          02S0104 00371000
         IC    @10,ARGMT(,BUFAD)                                02S0104 00372000
         LA    @10,FBYTE-1(@10)                                 02S0104 00373000
         CLI   STOPCODE(@10),X'11'                              02S0104 00374000
         BNE   @RF00104                                         02S0104 00375000
*              DO;                     /*                            */ 00376000
*                KWDCOMP = ON;         /* SET TO GET OUT OF LOOP.    */ 00377000
         OI    KWDCOMP(BUFAD),B'00000001'                       02S0106 00378000
*                SCANINP = OFF;        /* RESET TO GET OUT OF SCAN.  */ 00379000
         NI    SCANINP(BUFAD),B'10111111'                       02S0107 00380000
*              END;                    /*                            */ 00381000
*            ELSE                      /* NOT A BLANK.               */ 00382000
*              IF STOPCODE = COMMA     /* COULD BE A KEYWORD.        */ 00383000
*                THEN                  /*  DELIMITER.                */ 00384000
         B     @RC00104                                         02S0109 00385000
@RF00104 SLR   @10,@10                                          02S0109 00386000
         IC    @10,ARGMT(,BUFAD)                                02S0109 00387000
         LA    @10,FBYTE-1(@10)                                 02S0109 00388000
         CLI   STOPCODE(@10),X'10'                              02S0109 00389000
         BNE   @RF00109                                         02S0109 00390000
*                  DO;                 /*                            */ 00391000
*                   IF COL(ONE) = BLAN /* CHECK FOR ANOTHER          */ 00392000
*                    & SCANINP = ON    /*  KEYWORD ON THIS CARD.     */ 00393000
*                      THEN            /*                            */ 00394000
         ICM   @10,7,CC(BUFAD)                                  02S0111 00395000
         CLI   COL(@10),C' '                                    02S0111 00396000
         BNE   @RF00111                                         02S0111 00397000
         TM    SCANINP(BUFAD),B'01000000'                       02S0111 00398000
         BNO   @RF00111                                         02S0111 00399000
*                        IF CONTINUE = ON /* CHECK FOR POSSIBLE      */ 00400000
*                          THEN        /*  CONTINUATION.             */ 00401000
         TM    CONTINUE(BUFAD),B'00001000'                      02S0112 00402000
         BNO   @RF00112                                         02S0112 00403000
*                            CALL GETCARDN;/* NEXT CARD CONTINUES.   */ 00404000
         BAL   @14,GETCARDN                                     02S0113 00405000
*                          ELSE;       /* NO CONTINUATION.           */ 00406000
@RF00112 DS    0H                                               02S0115 00407000
*                      ELSE;           /* GET NEXT KEYWORD.          */ 00408000
@RF00111 DS    0H                                               02S0116 00409000
*                    CALL SCAN;        /*                            */ 00410000
         BAL   @14,SCAN                                         02S0116 00411000
*                    IF STOPCODE=EQUAL /* STOP AT EQUAL SIGN MEANS   */ 00412000
*                      THEN            /*  KEYWORD FOUND.            */ 00413000
         SLR   @10,@10                                          02S0117 00414000
         IC    @10,ARGMT(,BUFAD)                                02S0117 00415000
         LA    @10,FBYTE-1(@10)                                 02S0117 00416000
         CLI   STOPCODE(@10),X'20'                              02S0117 00417000
         BNE   @RF00117                                         02S0117 00418000
*                        DO;           /*                            */ 00419000
*                         KWDCOMP = ON;/* SET TO EXIT LOOP.          */ 00420000
         OI    KWDCOMP(BUFAD),B'00000001'                       02S0119 00421000
*                         KEYIN=ON;    /* KEYWORD IN PLACE.          */ 00422000
         OI    KEYIN(BUFAD),B'10000000'                         02S0120 00423000
*                        END;          /*                            */ 00424000
*                  END;                /*                            */ 00425000
@RF00117 DS    0H                                               02S0123 00426000
*        END;                          /* END OF KEYWORD FIND LOOP.  */ 00427000
@RF00109 DS    0H                                               02S0123 00428000
@RC00104 DS    0H                                               02S0123 00429000
@DE00102 TM    KWDCOMP(BUFAD),B'00000001'                       02S0123 00430000
         BZ    @DL00102                                         02S0123 00431000
*        KWDCOMP = OFF;                /* RESET KEYWORD COMPLETE.    */ 00432000
*        FOUND = OFF;                  /* RESET FOUND INDICATION.    */ 00433000
         NI    KWDCOMP(BUFAD),B'10111110'                       02S0125 00434000
*                      END;            /*                            */ 00435000
*                    ELSE              /* MUST BE A NAME FIELD.      */ 00436000
*/********************************************************************* 00437000
**                                                                    * 00438000
**  THIS SEGMENT WILL SCAN A FIELD INTENDED TO CONTAIN THE REPLACE    * 00439000
**  SUBPARAMETER, (R). ANY ERRORS WILL CAUSE THE INVALID PARAMETER    * 00440000
**  MESSAGE TO BE PRINTED.                                            * 00441000
**                                                                    * 00442000
**********************************************************************/ 00443000
*                                                               02S0127 00444000
*        IF NAMEFLAG(NEXTOP) = ON      /* COULD BE NOT A KEYWD       */ 00445000
*         & NAMESET = OFF              /*                            */ 00446000
*         & (STOPFLAG = ONEH | STOPCODE = LPARN)                02S0127 00447000
*          THEN                        /*                            */ 00448000
         B     @RC00081                                         02S0127 00449000
@RF00081 SLR   @10,@10                                          02S0127 00450000
         IC    @10,NEXTOP(,BUFAD)                               02S0127 00451000
         MH    @10,@CH00054                                     02S0127 00452000
         ICM   @09,7,OPTABAD(BUFAD)                             02S0127 00453000
         ALR   @09,@10                                          02S0127 00454000
         AL    @09,@CF01034                                     02S0127 00455000
         TM    NAMEFLAG-2(@09),B'10000000'                      02S0127 00456000
         BNO   @RF00127                                         02S0127 00457000
         TM    NAMESET(BUFAD),B'10000000'                       02S0127 00458000
         BNZ   @RF00127                                         02S0127 00459000
         SLR   @10,@10                                          02S0127 00460000
         IC    @10,ARGMT(,BUFAD)                                02S0127 00461000
         LA    @10,FUNCTION-1(@10)                              02S0127 00462000
         TM    STOPFLAG(@10),B'00010000'                        02S0127 00463000
         BNO   @GL00014                                         02S0127 00464000
         TM    STOPFLAG(@10),B'11100000'                        02S0127 00465000
         BZ    @RT00127                                         02S0127 00466000
@GL00014 SLR   @10,@10                                          02S0127 00467000
         IC    @10,ARGMT(,BUFAD)                                02S0127 00468000
         LA    @10,FBYTE-1(@10)                                 02S0127 00469000
         CLI   STOPCODE(@10),X'80'                              02S0127 00470000
         BNE   @RF00127                                         02S0127 00471000
@RT00127 DS    0H                                               02S0128 00472000
*            IF (PARMSIZE =< FOUR      /* NAMES ARE MAX FOUR CHARS   */ 00473000
*                & CARDDATA(ONE) ^= SPLAT) /* ASTERISK NOT NORM.     */ 00474000
*             | (ACTIVOP ^= ZERO           /*                        */ 00475000
*                & PARMSIZE = ONE          /* TEST REQUEST FOR       */ 00476000
*                & CARDDATA(ONE) = SPLAT   /*  SPECIAL IBM SUPPLIED  */ 00477000
*                & READMOD = ON            /*  GRAPHIC CHARACTER     */ 00478000
*                & ASTRFLAG(ACTIVOP) = ON) /*  MODIFICATION MODULE.  */ 00479000
*              THEN                    /*                            */ 00480000
         CLC   PARMSIZE(2,BUFAD),@CH00051                       02S0128 00481000
         BH    @GL00015                                         02S0128 00482000
         CLI   CARDDATA(BUFAD),C'*'                             02S0128 00483000
         BNE   @RT00128                                         02S0128 00484000
@GL00015 CLI   ACTIVOP(BUFAD),0                                 02S0128 00485000
         BE    @RF00128                                         02S0128 00486000
         CLC   PARMSIZE(2,BUFAD),@CH00061                       02S0128 00487000
         BNE   @RF00128                                         02S0128 00488000
         CLI   CARDDATA(BUFAD),C'*'                             02S0128 00489000
         BNE   @RF00128                                         02S0128 00490000
         TM    READMOD(BUFAD),B'00000001'                       02S0128 00491000
         BNO   @RF00128                                         02S0128 00492000
         SLR   @10,@10                                          02S0128 00493000
         IC    @10,ACTIVOP(,BUFAD)                              02S0128 00494000
         MH    @10,@CH00054                                     02S0128 00495000
         ICM   @09,7,OPTABAD(BUFAD)                             02S0128 00496000
         ALR   @09,@10                                          02S0128 00497000
         AL    @09,@CF01026                                     02S0128 00498000
         TM    ASTRFLAG-3(@09),B'01000000'                      02S0128 00499000
         BNO   @RF00128                                         02S0128 00500000
@RT00128 DS    0H                                               02S0129 00501000
*                DO;                   /*                            */ 00502000
*                  NAMESET = ON;       /* INDICATE NAME FOUND.       */ 00503000
         OI    NAMESET(BUFAD),B'10000000'                       02S0130 00504000
*                  BSUFIX =            /* SET NAME IN BLDL LIST.     */ 00505000
*                   CARDDATA(ONE:PARMSIZE);                     02S0131 00506000
         MVI   BSUFIX+1(BUFAD),C' '                             02S0131 00507000
         MVC   BSUFIX+2(2,BUFAD),BSUFIX+1(BUFAD)                02S0131 00508000
         SLR   @10,@10                                          02S0131 00509000
         ICM   @10,3,PARMSIZE(BUFAD)                            02S0131 00510000
         BCTR  @10,0                                            02S0131 00511000
         EX    @10,@SM01035                                     02S0131 00512000
*                  IF STOPCODE=LPARN   /* CHECK FOR REPLACE          */ 00513000
*                    THEN              /*  OPTION.                   */ 00514000
         SLR   @10,@10                                          02S0132 00515000
         IC    @10,ARGMT(,BUFAD)                                02S0132 00516000
         LA    @10,FBYTE-1(@10)                                 02S0132 00517000
         CLI   STOPCODE(@10),X'80'                              02S0132 00518000
         BNE   @RF00132                                         02S0132 00519000
*                      DO;             /*                            */ 00520000
*                        CALL SCAN;    /* EXECUTE SCAN SEGMENT.      */ 00521000
         BAL   @14,SCAN                                         02S0134 00522000
*                        IF STOPCODE   /* CHECK FOR REPLACE OPTION.  */ 00523000
*                             = RPARN  /* MUST STOP AT RIGHT PAREN.  */ 00524000
*                         & PARMSIZE = ONE                      02S0135 00525000
*                         & REP = CARDDATA(ONE)                 02S0135 00526000
*                         & REPFLAG(NEXTOP) = ON                02S0135 00527000
*                          THEN        /*                            */ 00528000
         SLR   @10,@10                                          02S0135 00529000
         IC    @10,ARGMT(,BUFAD)                                02S0135 00530000
         LA    @10,FBYTE-1(@10)                                 02S0135 00531000
         CLI   STOPCODE(@10),X'40'                              02S0135 00532000
         BNE   @RF00135                                         02S0135 00533000
         CLC   PARMSIZE(2,BUFAD),@CH00061                       02S0135 00534000
         BNE   @RF00135                                         02S0135 00535000
         CLI   CARDDATA(BUFAD),C'R'                             02S0135 00536000
         BNE   @RF00135                                         02S0135 00537000
         SLR   @10,@10                                          02S0135 00538000
         IC    @10,NEXTOP(,BUFAD)                               02S0135 00539000
         MH    @10,@CH00054                                     02S0135 00540000
         ICM   @09,7,OPTABAD(BUFAD)                             02S0135 00541000
         ALR   @09,@10                                          02S0135 00542000
         AL    @09,@CF01026                                     02S0135 00543000
         TM    REPFLAG-3(@09),B'00100000'                       02S0135 00544000
         BNO   @RF00135                                         02S0135 00545000
*                            REPUSE=ON;/* SET REPLACE FLAG.          */ 00546000
         OI    REPUSE(BUFAD),B'10000000'                        02S0136 00547000
*                          ELSE        /*                            */ 00548000
*                            DO;       /*                            */ 00549000
         B     @RC00135                                         02S0137 00550000
@RF00135 DS    0H                                               02S0138 00551000
*                              MSGN = IEBA29I;/* NAME ERROR MESSAGE. */ 00552000
         MVI   MSGN(BUFAD),X'1D'                                02S0138 00553000
*                              CALL IEBIMSGS; /* PRINT IT.           */ 00554000
         L     @15,@CV00034                                     02S0139 00555000
         BALR  @14,@15                                          02S0139 00556000
*                              INHIBITW = ON; /* PREVENT LIB UPDATE. */ 00557000
*                              INHIBITR = ON; /* PREVENT LIB READ.   */ 00558000
         OI    INHIBITW(BUFAD),B'01100000'                      02S0141 00559000
*                              BNAME = BADNAME;/* INV NAME FOR PRT.  */ 00560000
         MVC   BNAME(8,BUFAD),@CC00924                          02S0142 00561000
*                                      /* SET RETURN CODE 8 THIS OP. */ 00562000
*                              RETSAVE = MAX(RETSAVE,RC8);      02S0143 00563000
         SLR   @10,@10                                          02S0143 00564000
         IC    @10,RETSAVE(,BUFAD)                              02S0143 00565000
         LA    @09,8                                            02S0143 00566000
         CR    @10,@09                                          02S0143 00567000
         BNL   *+6                                                      00568000
         LR    @10,@09                                          02S0143 00569000
         STC   @10,RETSAVE(,BUFAD)                              02S0143 00570000
*                            END;      /*                            */ 00571000
*                      END;            /*                            */ 00572000
@RC00135 DS    0H                                               02S0146 00573000
*                      IF COL(ONE)=BLAN /* COULD BE KEYWORD          */ 00574000
*                        THEN          /*  FOLLOWING.                */ 00575000
@RF00132 ICM   @10,7,CC(BUFAD)                                  02S0146 00576000
         CLI   COL(@10),C' '                                    02S0146 00577000
         BNE   @RF00146                                         02S0146 00578000
*                          SCANINP=OFF;/* NOT THIS TIME.             */ 00579000
         NI    SCANINP(BUFAD),B'10111111'                       02S0147 00580000
*                 END;                 /*                            */ 00581000
*               ELSE                   /* ERROR IN NAME.             */ 00582000
*                 DO;                  /*                            */ 00583000
         B     @RC00128                                         02S0149 00584000
@RF00128 DS    0H                                               02S0150 00585000
*                   NAMESET = ON;      /* INDICATE NAME FOUND.       */ 00586000
         OI    NAMESET(BUFAD),B'10000000'                       02S0150 00587000
*                   MSGN = IEBA29I;    /* NAME ERROR MESSAGE.        */ 00588000
         MVI   MSGN(BUFAD),X'1D'                                02S0151 00589000
*                   CALL IEBIMSGS;     /* PRINT IT.                  */ 00590000
         L     @15,@CV00034                                     02S0152 00591000
         BALR  @14,@15                                          02S0152 00592000
*                   INHIBITW = ON;     /* PREVENT LIBRARY UPDATE.    */ 00593000
*                   INHIBITR = ON;     /* PREVENT LIBRARY READ       */ 00594000
         OI    INHIBITW(BUFAD),B'01100000'                      02S0154 00595000
*                   BNAME = BADNAME;   /* SET INV NAME FOR PRINT.    */ 00596000
         MVC   BNAME(8,BUFAD),@CC00924                          02S0155 00597000
*                                      /* SET RETURN CODE 8 THIS OP. */ 00598000
*                   RETSAVE = MAX(RETSAVE,RC8);                 02S0156 00599000
         SLR   @10,@10                                          02S0156 00600000
         IC    @10,RETSAVE(,BUFAD)                              02S0156 00601000
         LA    @09,8                                            02S0156 00602000
         CR    @10,@09                                          02S0156 00603000
         BNL   *+6                                                      00604000
         LR    @10,@09                                          02S0156 00605000
         STC   @10,RETSAVE(,BUFAD)                              02S0156 00606000
*                  SCANINP = OFF;      /* RESET SCAN IN PROGRESS.    */ 00607000
         NI    SCANINP(BUFAD),B'10111111'                       02S0157 00608000
*                 END;                 /*                            */ 00609000
*            ELSE                      /* STOPPED AT INVALID CHAR.   */ 00610000
*              DO;                     /*                            */ 00611000
         B     @RC00127                                         02S0159 00612000
@RF00127 DS    0H                                               02S0160 00613000
*                FWORK = CC;           /* DETERMINE CARD COLUMN      */ 00614000
         SLR   @10,@10                                          02S0160 00615000
         ICM   @10,7,CC(BUFAD)                                  02S0160 00616000
         ST    @10,FWORK(,BUFAD)                                02S0160 00617000
*                INVCHAR = ON;         /* SET INVALID CHARACTER SW.  */ 00618000
         OI    INVCHAR(BUFAD),B'00000100'                       02S0161 00619000
*              END;                    /*                            */ 00620000
*                ELSE                  /* MUST BE AN ERROR.          */ 00621000
*                  INVCHAR = ON;       /* SET INVALID CHARACTER.     */ 00622000
         B     @RC00080                                         01S0163 00623000
@RF00080 OI    INVCHAR(BUFAD),B'00000100'                       01S0163 00624000
*              IF STATUS3 ^= ZERO      /* SCAN STATUS HAS ERROR FLAGS*/ 00625000
*                THEN                  /*                            */ 00626000
@RC00080 CLI   STATUS3(BUFAD),0                                 01S0164 00627000
         BE    @RF00164                                         01S0164 00628000
*                  DO;                 /*                            */ 00629000
*/********************************************************************* 00630000
**                                                                    * 00631000
**  THIS SEGMENT WILL SET UP THE PROPER MESSAGE FOR ANY OF THE        * 00632000
**  KEYWORD EXCEPTIONS THAT MAY HAVE OCCURRED DURING SCANNING.        * 00633000
**                                                                    * 00634000
**********************************************************************/ 00635000
*        IF INVCHAR = ON               /* TEST FOR INVALID CHARACTER.*/ 00636000
*          THEN                        /*                            */ 00637000
         TM    INVCHAR(BUFAD),B'00000100'                       02S0166 00638000
         BNO   @RF00166                                         02S0166 00639000
*            DO;                       /* FIND CARD COLUMN NUMBER.   */ 00640000
*              FWORK = FWORK - ADDR(PRIMCARD);                  02S0168 00641000
         LA    @10,PRIMCARD(,BUFAD)                             02S0168 00642000
         LCR   @10,@10                                          02S0168 00643000
         AL    @10,FWORK(,BUFAD)                                02S0168 00644000
         ST    @10,FWORK(,BUFAD)                                02S0168 00645000
*              CVD(FWORK,DWORK);       /* MAKE IT DECIMAL.           */ 00646000
         CVD   @10,DWORK(,BUFAD)                                02S0169 00647000
*              UNPK(UWORK,PWORK);      /* MAKE PRINTABLE.            */ 00648000
         UNPK  UWORK(2,BUFAD),PWORK(2,BUFAD)                    02S0170 00649000
*              UNITS = UNITS | MASK;   /*                            */ 00650000
         OI    UNITS(BUFAD),C'0'                                02S0171 00651000
*              MSGN = IEBA22I;         /* INVALID CHARACTER MESSAGE. */ 00652000
         MVI   MSGN(BUFAD),X'16'                                02S0172 00653000
*              INHIBITW = ON;          /* INHIBIT LIBRARY WRITE.     */ 00654000
         OI    INHIBITW(BUFAD),B'01000000'                      02S0173 00655000
*              SCANINP = OFF;          /* DO NO MORE SCANNING.       */ 00656000
         NI    SCANINP(BUFAD),B'10111111'                       02S0174 00657000
*                                      /* GET EDIT ADDR FOR MESSAGE. */ 00658000
*              EDITDATA(ONE) = ADDR(UWORK);                     02S0175 00659000
         LA    @10,UWORK(,BUFAD)                                02S0175 00660000
         STCM  @10,7,EDITDATA(BUFAD)                            02S0175 00661000
*                                      /* GET LENGTH FOR MESSAGE.    */ 00662000
*              EDITLEN(ONE) = LENGTH(UWORK);                    02S0176 00663000
         MVI   EDITLEN(BUFAD),X'02'                             02S0176 00664000
*            END;                      /* END INVALID CHAR MESSAGE.  */ 00665000
*          ELSE                        /*                            */ 00666000
*            DO;                       /* OTHER MSGS NEED KWD NAME.  */ 00667000
         B     @RC00166                                         02S0178 00668000
@RF00166 DS    0H                                               02S0179 00669000
*              EDITDATA(ONE)           /* SET ADDR OF KEYWORD NAME   */ 00670000
*               = ADDR(LASTKEY);       /*  FOR EDITING.              */ 00671000
         LA    @10,LASTKEY(,BUFAD)                              02S0179 00672000
         STCM  @10,7,EDITDATA(BUFAD)                            02S0179 00673000
*              EDITLEN(ONE)            /* SET LENGTH OF KEYWORD TO   */ 00674000
*               = LENGTH(LASTKEY);     /*  BE EDITED                 */ 00675000
         MVI   EDITLEN(BUFAD),X'08'                             02S0180 00676000
*              IF INVKWD = ON          /*                            */ 00677000
*                THEN                  /*                            */ 00678000
         TM    INVKWD(BUFAD),B'00100000'                        02S0181 00679000
         BNO   @RF00181                                         02S0181 00680000
*                  MSGN = IEBA15I;     /* INVALID KEYWORD MESSAGE    */ 00681000
         MVI   MSGN(BUFAD),X'0F'                                02S0182 00682000
*                ELSE                  /*                            */ 00683000
*                  IF INVPARM = ON     /*                            */ 00684000
*                    THEN              /*                            */ 00685000
         B     @RC00181                                         02S0183 00686000
@RF00181 TM    INVPARM(BUFAD),B'00001000'                       02S0183 00687000
         BNO   @RF00183                                         02S0183 00688000
*                      MSGN = IEBA14I; /* INVALID PARAMETER          */ 00689000
         MVI   MSGN(BUFAD),X'0E'                                02S0184 00690000
*                    ELSE              /*                            */ 00691000
*                      IF EXCLKWD = ON /*                            */ 00692000
*                        THEN          /*                            */ 00693000
         B     @RC00183                                         02S0185 00694000
@RF00183 TM    EXCLKWD(BUFAD),B'00010000'                       02S0185 00695000
         BNO   @RF00185                                         02S0185 00696000
*                          MSGN=IEBA23I;/* EXCLUSIVE ERROR.          */ 00697000
         MVI   MSGN(BUFAD),X'17'                                02S0186 00698000
*                        ELSE          /*                            */ 00699000
*                          IF INVDLM = ON                       02S0187 00700000
*                            THEN      /* INVALID DELIMITER.         */ 00701000
         B     @RC00185                                         02S0187 00702000
@RF00185 TM    INVDLM(BUFAD),B'10000000'                        02S0187 00703000
         BNO   @RF00187                                         02S0187 00704000
*                              MSGN = IEBA26I;                  02S0188 00705000
         MVI   MSGN(BUFAD),X'1A'                                02S0188 00706000
*                            ELSE      /*                            */ 00707000
*                              IF UNBAL = ON                    02S0189 00708000
*                                THEN  /* UNBALANCED PARENTHESIS.    */ 00709000
         B     @RC00187                                         02S0189 00710000
@RF00187 TM    UNBAL(BUFAD),B'00000010'                         02S0189 00711000
         BNO   @RF00189                                         02S0189 00712000
*                                  MSGN = IEBA35I;              02S0190 00713000
         MVI   MSGN(BUFAD),X'23'                                02S0190 00714000
*                                ELSE; /* NO ERROR.                  */ 00715000
@RF00189 DS    0H                                               02S0192 00716000
*            END;                      /*                            */ 00717000
@RC00187 DS    0H                                               02S0192 00718000
@RC00185 DS    0H                                               02S0192 00719000
@RC00183 DS    0H                                               02S0192 00720000
@RC00181 DS    0H                                               02S0193 00721000
*        RETSAVE = MAX(RC8,RETSAVE);   /* SET RETURN CODE            */ 00722000
@RC00166 SLR   @10,@10                                          02S0193 00723000
         IC    @10,RETSAVE(,BUFAD)                              02S0193 00724000
         LA    @09,8                                            02S0193 00725000
         CR    @10,@09                                          02S0193 00726000
         BNL   *+6                                                      00727000
         LR    @10,@09                                          02S0193 00728000
         STC   @10,RETSAVE(,BUFAD)                              02S0193 00729000
*        CALL IEBIMSGS;                /* PRINT MESSAGE SELECTED.    */ 00730000
         L     @15,@CV00034                                     02S0194 00731000
         BALR  @14,@15                                          02S0194 00732000
*        STATUS3 = ZERO;               /* RESET FOR THIS KEYWORD.    */ 00733000
         MVI   STATUS3(BUFAD),X'00'                             02S0195 00734000
*        INHIBITW = ON;                /* PREVENT LIBRARY UPDATE     */ 00735000
         OI    INHIBITW(BUFAD),B'01000000'                      02S0196 00736000
*                  END;                /*                            */ 00737000
*            END;                      /* END OF KEYWORD SCAN.       */ 00738000
@RF00164 DS    0H                                               01S0198 00739000
@DE00076 TM    SCANINP(BUFAD),B'01000000'                       01S0198 00740000
         BO    @DL00076                                         01S0198 00741000
*          IF SCANINP = OFF            /* ERROR MAY HAVE RESET       */ 00742000
*            THEN                      /*  SCAN IN PROGRESS.         */ 00743000
@RC00035 TM    SCANINP(BUFAD),B'01000000'                       01S0199 00744000
         BNZ   @RF00199                                         01S0199 00745000
*              DO                      /* PURGE AND PRINT ALL        */ 00746000
*               WHILE CONTINUE=ON;     /*  CONTINUATION CARDS.       */ 00747000
         B     @DE00200                                         01S0200 00748000
@DL00200 DS    0H                                               01S0201 00749000
*                CALL GETCARDN;        /* GET CONTINUATION.          */ 00750000
         BAL   @14,GETCARDN                                     01S0201 00751000
*              END;                    /* END OF PURGE.              */ 00752000
@DE00200 TM    CONTINUE(BUFAD),B'00001000'                      01S0202 00753000
         BO    @DL00200                                         01S0202 00754000
*        GEN REFS(SAVE2)               /* RESTORE BACKWARD POINTER   */ 00755000
*         (L   @13,SAVE2+BACK(,BUFAD));/* RETURN TO CALLER.          */ 00756000
@RF00199 DS    0H                                               01S0203 00757000
         L   @13,SAVE2+BACK(,BUFAD)                                     00758000
         EJECT                                                          00759000
*/********************************************************************* 00760000
**                                                                    * 00761000
**  THIS ROUTINE WILL DETERMINE THE VALIDITY OF THE LOC KEYWORD       * 00762000
**  AND ITS PARAMETERS. VALID PARAMETERS INCLUDE GROUPS OF THREE      * 00763000
**  POSSIBLE VALUES -                                                 * 00764000
**       1. AN EBCDIC ASSIGNMENT WHICH IS A TABLE REFERENCE.          * 00765000
**       2. A CGM REFERENCE.                                          * 00766000
**       3. A CGMID ORDER REFERENCE.                                  * 00767000
**                                                                    * 00768000
**********************************************************************/ 00769000
*LOC:                                                           01S0204 00770000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0204 00771000
         B     @PB00002                                         01S0204 00772000
LOC      STM   @14,@12,12(@13)                                  01S0204 00773000
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */ 00774000
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.                00775000
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.          00776000
         ST    @14,FORE(,@13)          FORWARD POINTER.                 00777000
         LR    @13,@14                 LINKAGE COMPLETE.                00778000
*        IF LOCFLAG(ACTIVOP) = ON      /* IS KEYWORD VALID FOR       */ 00779000
*          THEN                        /*  OPERATION?                */ 00780000
         SLR   @10,@10                                          01S0206 00781000
         IC    @10,ACTIVOP(,BUFAD)                              01S0206 00782000
         MH    @10,@CH00054                                     01S0206 00783000
         ICM   @09,7,OPTABAD(BUFAD)                             01S0206 00784000
         ALR   @09,@10                                          01S0206 00785000
         AL    @09,@CF01034                                     01S0206 00786000
         TM    LOCFLAG-2(@09),B'00000010'                       01S0206 00787000
         BNO   @RF00206                                         01S0206 00788000
*            IF LOCSET = OFF           /* HAS KEYWORD BEEN USED OR   */ 00789000
*              THEN                    /*  IS IT MUTUALLY EXCLUSIVE? */ 00790000
         TM    LOCSET(BUFAD),B'00010000'                        01S0207 00791000
         BNZ   @RF00207                                         01S0207 00792000
*                DO;                   /* THIS PATH FOR KEYWORD OK.  */ 00793000
*                  LOCSET = ON;        /* SET KEYWORD USED FLAG.     */ 00794000
         OI    LOCSET(BUFAD),B'00010000'                        01S0209 00795000
*                  CALL FINDPARM;      /* SCAN PARAMETER.            */ 00796000
         BAL   @14,FINDPARM                                     01S0210 00797000
*                      DO              /* START PARAMETER PROCESS.   */ 00798000
*                       SCNT = ONE     /* FILL THE SCAN ARRAY WITH   */ 00799000
*                       TO DIM(SCANARY)/*  PARMS FROM THE LOC KEYWORD*/ 00800000
*                       WHILE PARMNUM  /* CONTINUE THRU ALL PARMS.   */ 00801000
*                            ^= ZERO;  /*                            */ 00802000
         LA    @10,1                                            01S0211 00803000
         STH   @10,SCNT(,BUFAD)                                 01S0211 00804000
@DL00211 CLI   PARMNUM(BUFAD),0                                 01S0211 00805000
         BE    @DC00211                                         01S0211 00806000
*                        SCANARY(SCNT,TWO) = ALBIT;             01S0212 00807000
         SLR   @10,@10                                          01S0212 00808000
         ICM   @10,3,SCNT(BUFAD)                                01S0212 00809000
         SLA   @10,2                                            01S0212 00810000
         LA    @09,255                                          01S0212 00811000
         STC   @09,SCANARY-3(@10,BUFAD)                         01S0212 00812000
*                        SCANARY(SCNT,THREE) = ZERO;            01S0213 00813000
         SLR   @09,@09                                          01S0213 00814000
         STC   @09,SCANARY-2(@10,BUFAD)                         01S0213 00815000
*                        DO            /* START PARM GROUP.          */ 00816000
*                         UNTIL PARMNUM<TWO;                    01S0214 00817000
@DL00214 DS    0H                                               01S0215 00818000
*                          IF PARMNUM = THREE                   01S0215 00819000
*                            THEN      /* THIRD PARM IS DECIMAL.     */ 00820000
         CLI   PARMNUM(BUFAD),3                                 01S0215 00821000
         BNE   @RF00215                                         01S0215 00822000
*                              SCANARY(SCNT,THREE) = FWORK;     01S0216 00823000
         SLR   @10,@10                                          01S0216 00824000
         ICM   @10,3,SCNT(BUFAD)                                01S0216 00825000
         SLA   @10,2                                            01S0216 00826000
         L     @09,FWORK(,BUFAD)                                01S0216 00827000
         STC   @09,SCANARY-2(@10,BUFAD)                         01S0216 00828000
*                            ELSE      /* 1ST AND 2ND PARMS ARE HEX. */ 00829000
*                              SCANARY(SCNT,PARMNUM) = CARDDATA(ONE);   00830000
         B     @RC00215                                         01S0217 00831000
@RF00215 SLR   @10,@10                                          01S0217 00832000
         ICM   @10,3,SCNT(BUFAD)                                01S0217 00833000
         SLA   @10,2                                            01S0217 00834000
         SLR   @09,@09                                          01S0217 00835000
         IC    @09,PARMNUM(,BUFAD)                              01S0217 00836000
         ALR   @10,@09                                          01S0217 00837000
         SLR   @09,@09                                          01S0217 00838000
         IC    @09,CARDDATA(,BUFAD)                             01S0217 00839000
         STC   @09,SCANARY-5(@10,BUFAD)                         01S0217 00840000
*                          PARMNUM=PARMNUM+ONE;                 01S0218 00841000
@RC00215 LA    @10,1                                            01S0218 00842000
         SLR   @09,@09                                          01S0218 00843000
         IC    @09,PARMNUM(,BUFAD)                              01S0218 00844000
         ALR   @10,@09                                          01S0218 00845000
         STC   @10,PARMNUM(,BUFAD)                              01S0218 00846000
*                          IF KWDCOMP = OFF                     01S0219 00847000
*                            THEN      /* GET ANOTHER PARAMETER.     */ 00848000
         TM    KWDCOMP(BUFAD),B'00000001'                       01S0219 00849000
         BNZ   @RF00219                                         01S0219 00850000
*                              CALL FINDPARM;                   01S0220 00851000
         BAL   @14,FINDPARM                                     01S0220 00852000
*                            ELSE      /* SET PARMNUM TO EXIT LOOP.  */ 00853000
*                              PARMNUM = ZERO;                  01S0221 00854000
         B     @RC00219                                         01S0221 00855000
@RF00219 MVI   PARMNUM(BUFAD),X'00'                             01S0221 00856000
*                        END;                                   01S0222 00857000
@RC00219 DS    0H                                               01S0222 00858000
@DE00214 CLI   PARMNUM(BUFAD),2                                 01S0222 00859000
         BNL   @DL00214                                         01S0222 00860000
*                      END;            /* END PARAMETER PROCESS.     */ 00861000
         LA    @10,1                                            01S0223 00862000
         SLR   @09,@09                                          01S0223 00863000
         ICM   @09,3,SCNT(BUFAD)                                01S0223 00864000
         ALR   @10,@09                                          01S0223 00865000
         STH   @10,SCNT(,BUFAD)                                 01S0223 00866000
         CH    @10,@CH00220                                     01S0223 00867000
         BNH   @DL00211                                         01S0223 00868000
@DC00211 DS    0H                                               01S0224 00869000
*                END;                  /* END VALID KEYWORD PROCESS. */ 00870000
*              ELSE                    /* KEYWORD PREVIOUSLY USED OR */ 00871000
*                EXCLKWD = ON;         /*  MUTUALLY EXCLUSIVE.       */ 00872000
         B     @RC00207                                         01S0225 00873000
@RF00207 OI    EXCLKWD(BUFAD),B'00010000'                       01S0225 00874000
*          ELSE                        /* KEYWORD NOT VALID FOR THIS */ 00875000
*            INVKWD = ON;              /*  OPERATION.                */ 00876000
         B     @RC00206                                         01S0226 00877000
@RF00206 OI    INVKWD(BUFAD),B'00100000'                        01S0226 00878000
*        GEN REFS(SAVE3)               /*                            */ 00879000
*         (L   @13,SAVE3+BACK(,BUFAD));/* RESTORE BACKWARD POINTER.  */ 00880000
@RC00206 DS    0H                                               01S0227 00881000
         L   @13,SAVE3+BACK(,BUFAD)                                     00882000
*  END LOC;                            /* RETURN TO CALLER.          */ 00883000
@EL00002 DS    0H                                               01S0228 00884000
@EF00002 DS    0H                                               01S0228 00885000
@ER00002 LM    @14,@12,12(@13)                                  01S0228 00886000
         BR    @14                                              01S0228 00887000
         EJECT                                                          00888000
*/********************************************************************* 00889000
**                                                                    * 00890000
**  THIS ROUTINE WILL DETERMINE THE VALIDITY OF THE CH KEYWORD        * 00891000
**  AND ITS PARAMETERS. VALID PARAMETERS INCLUDE DECIMAL NUMBERS      * 00892000
**  (ONE TO NINTY SIX).                                               * 00893000
**                                                                    * 00894000
**********************************************************************/ 00895000
*CH:                                                            01S0229 00896000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0229 00897000
CH       STM   @14,@12,12(@13)                                  01S0229 00898000
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */ 00899000
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.                00900000
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.          00901000
         ST    @14,FORE(,@13)          FORWARD POINTER.                 00902000
         LR    @13,@14                 LINKAGE COMPLETE.                00903000
*        IF CHFLAG(ACTIVOP) = ON       /* CHECK FOR VALID KEYWORD.   */ 00904000
*         & (PARMSIZE = FOUR           /*                            */ 00905000
*         | PARMSIZE = THREE)          /*                            */ 00906000
*          THEN                        /*                            */ 00907000
         SLR   @10,@10                                          01S0231 00908000
         IC    @10,ACTIVOP(,BUFAD)                              01S0231 00909000
         MH    @10,@CH00054                                     01S0231 00910000
         ICM   @09,7,OPTABAD(BUFAD)                             01S0231 00911000
         ALR   @09,@10                                          01S0231 00912000
         AL    @09,@CF01039                                     01S0231 00913000
         TM    CHFLAG-1(@09),B'00100000'                        01S0231 00914000
         BNO   @RF00231                                         01S0231 00915000
         CLC   PARMSIZE(2,BUFAD),@CH00051                       01S0231 00916000
         BE    @RT00231                                         01S0231 00917000
         CLC   PARMSIZE(2,BUFAD),@CH00112                       01S0231 00918000
         BNE   @RF00231                                         01S0231 00919000
@RT00231 DS    0H                                               01S0232 00920000
*            DO;                       /* THIS PATH FOR KEYWORD OK.  */ 00921000
*              CHSET = ON;             /* SET KEYWORD USED FLAG.     */ 00922000
         OI    CHSET(BUFAD),B'00000100'                         01S0233 00923000
*                                      /* MOVE CHAN CODE FOR CONVERT.*/ 00924000
*              CARDDATA(ONE:TWO)       /* THROW AWAY (CH).           */ 00925000
*                = CARDDATA(THREE:FOUR);                        01S0234 00926000
         MVC   CARDDATA(2,BUFAD),CARDDATA+2(BUFAD)              01S0234 00927000
*              PARMSIZE = PARMSIZE-TWO;/* REDUCE SIZE VALUE.         */ 00928000
         SLR   @10,@10                                          01S0235 00929000
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0235 00930000
         BCTR  @10,0                                            01S0235 00931000
         BCTR  @10,0                                            01S0235 00932000
         STH   @10,PARMSIZE(,BUFAD)                             01S0235 00933000
*              CALL CONVERT;           /* CONVERT CANNEL CODE.       */ 00934000
         BAL   @14,CONVERT                                      01S0236 00935000
*              IF INVPARM = ON         /* CHANNEL CODE VALIDITY CHECK*/ 00936000
*               | FWORK > TWELV        /* CHANNEL CODES ARE 1 TO 12. */ 00937000
*               | FWORK < ONE                                   01S0237 00938000
*                THEN                  /* ERROR TIME.                */ 00939000
         TM    INVPARM(BUFAD),B'00001000'                       01S0237 00940000
         BO    @RT00237                                         01S0237 00941000
         L     @10,FWORK(,BUFAD)                                01S0237 00942000
         CH    @10,@CH00033                                     01S0237 00943000
         BH    @RT00237                                         01S0237 00944000
         LTR   @10,@10                                          01S0237 00945000
         BP    @RF00237                                         01S0237 00946000
@RT00237 DS    0H                                               01S0238 00947000
*                  INVKWD = ON;        /* INDICATE KEYWORD ERROR.    */ 00948000
         OI    INVKWD(BUFAD),B'00100000'                        01S0238 00949000
*                ELSE                                           01S0239 00950000
*                  DO;                 /* CONTINUE THRU PARMAMETERS. */ 00951000
         B     @RC00237                                         01S0239 00952000
@RF00237 DS    0H                                               01S0240 00953000
*                    CHAN = FWORK;     /* SAVE CHANNEL CODE.         */ 00954000
         MVC   CHAN(1,BUFAD),FWORK+3(BUFAD)                     01S0240 00955000
*                    CALL FINDPARM;    /* SCAN PARAMETER.            */ 00956000
         BAL   @14,FINDPARM                                     01S0241 00957000
*                        DO            /* START PARAMETER PROCESS.   */ 00958000
*                         UNTIL PARMNUM /* CONTINUE THRU ALL PARMS.  */ 00959000
*                               = ZERO;/*                            */ 00960000
@DL00242 DS    0H                                               01S0243 00961000
*                          IF PARMSIZE => ONE                   01S0243 00962000
*                           & (FWORK =< FCBMAX & FWORK => ONE)  01S0243 00963000
*                            THEN      /* CHECK FOR PARAMETER.       */ 00964000
         CLC   PARMSIZE(2,BUFAD),@CH00061                       01S0243 00965000
         BL    @RF00243                                         01S0243 00966000
         L     @10,FWORK(,BUFAD)                                01S0243 00967000
         CH    @10,@CH00889                                     01S0243 00968000
         BH    @RF00243                                         01S0243 00969000
         CH    @10,@CH00061                                     01S0243 00970000
         BL    @RF00243                                         01S0243 00971000
*                              IF FCBBOD(FWORK) = ZERO          01S0244 00972000
*                                THEN  /* SET CHAN CODE IN FCB.      */ 00973000
         SLR   @09,@09                                          01S0244 00974000
         IC    @09,FCBBOD-1(@10,BUFAD)                          01S0244 00975000
         CH    @09,@CH00480                                     01S0244 00976000
         BNE   @RF00244                                         01S0244 00977000
*                                  FCBBOD(FWORK) = CHAN;        01S0245 00978000
         ALR   @10,BUFAD                                        01S0245 00979000
         MVC   FCBBOD-1(1,@10),CHAN(BUFAD)                      01S0245 00980000
*                                ELSE  /* CHAN CODE ALREADY SET.     */ 00981000
*                                  DO;                          01S0246 00982000
         B     @RC00244                                         01S0246 00983000
@RF00244 DS    0H                                               01S0247 00984000
*                                    EDITDATA(ONE)=ADDR(CARDDATA);      00985000
         LA    @10,CARDDATA(,BUFAD)                             01S0247 00986000
         STCM  @10,7,EDITDATA(BUFAD)                            01S0247 00987000
*                                    EDITLEN(ONE)=PARMSIZE;     01S0248 00988000
         MVC   EDITLEN(1,BUFAD),PARMSIZE+1(BUFAD)               01S0248 00989000
*                                    MSGN = IEBA36I;            01S0249 00990000
         MVI   MSGN(BUFAD),X'24'                                01S0249 00991000
*                                    CALL IEBIMSGS;             01S0250 00992000
         L     @15,@CV00034                                     01S0250 00993000
         BALR  @14,@15                                          01S0250 00994000
*                                    INHIBITW = ON;             01S0251 00995000
         OI    INHIBITW(BUFAD),B'01000000'                      01S0251 00996000
*                                  END;                         01S0252 00997000
*                            ELSE      /* MISSING PARAMETER.         */ 00998000
*                              INVPARM = ON;                    01S0253 00999000
         B     @RC00243                                         01S0253 01000000
@RF00243 OI    INVPARM(BUFAD),B'00001000'                       01S0253 01001000
*                          IF KWDCOMP = OFF                     01S0254 01002000
*                            THEN      /* STILL SCANNING.            */ 01003000
@RC00243 TM    KWDCOMP(BUFAD),B'00000001'                       01S0254 01004000
         BNZ   @RF00254                                         01S0254 01005000
*                              CALL FINDPARM;/* GET NEXT PARAMETER.  */ 01006000
         BAL   @14,FINDPARM                                     01S0255 01007000
*                            ELSE      /* END PARAMETER PROCESS.     */ 01008000
*                              PARMNUM = ZERO;                  01S0256 01009000
         B     @RC00254                                         01S0256 01010000
@RF00254 MVI   PARMNUM(BUFAD),X'00'                             01S0256 01011000
*                        END;          /* END OF PARAMETER PROCESS.  */ 01012000
@RC00254 DS    0H                                               01S0257 01013000
@DE00242 CLI   PARMNUM(BUFAD),0                                 01S0257 01014000
         BNE   @DL00242                                         01S0257 01015000
*                 END;                 /*                            */ 01016000
*             END;                     /* END VALID KEYWORD PROCESS. */ 01017000
*          ELSE                        /* KEYWORD NOT VALID FOR THIS */ 01018000
*            INVKWD = ON;              /*  OPERATION.                */ 01019000
         B     @RC00231                                         01S0260 01020000
@RF00231 OI    INVKWD(BUFAD),B'00100000'                        01S0260 01021000
*        GEN REFS(SAVE3)               /*                            */ 01022000
*         (L   @13,SAVE3+BACK(,BUFAD));/* RESTORE BACKWARD POINTER.  */ 01023000
@RC00231 DS    0H                                               01S0261 01024000
         L   @13,SAVE3+BACK(,BUFAD)                                     01025000
*  END CH;                             /* RETURN TO CALLER.          */ 01026000
@EL00003 DS    0H                                               01S0262 01027000
@EF00003 DS    0H                                               01S0262 01028000
@ER00003 LM    @14,@12,12(@13)                                  01S0262 01029000
         BR    @14                                              01S0262 01030000
         EJECT                                                          01031000
*/********************************************************************* 01032000
**                                                                    * 01033000
**  THIS ROUTINE WILL DETERMINE THE VALIDITY OF THE SIZE KEYWORD      * 01034000
**  AND ITS PARAMETER. VALID PARAMETER IS A TWO OR THREE DIGIT FIELD. * 01035000
**                                                                    * 01036000
**********************************************************************/ 01037000
*SIZE:                                                          01S0263 01038000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0263 01039000
SIZE     STM   @14,@12,12(@13)                                  01S0263 01040000
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */ 01041000
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.                01042000
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.          01043000
         ST    @14,FORE(,@13)          FORWARD POINTER.                 01044000
         LR    @13,@14                 LINKAGE COMPLETE.                01045000
*        IF SIZEFLAG(ACTIVOP) = ON     /* IS KEYWORD VALID FOR       */ 01046000
*          THEN                        /*  OPERATION?                */ 01047000
         SLR   @10,@10                                          01S0265 01048000
         IC    @10,ACTIVOP(,BUFAD)                              01S0265 01049000
         MH    @10,@CH00054                                     01S0265 01050000
         ICM   @09,7,OPTABAD(BUFAD)                             01S0265 01051000
         ALR   @09,@10                                          01S0265 01052000
         AL    @09,@CF01039                                     01S0265 01053000
         TM    SIZEFLAG-1(@09),B'00010000'                      01S0265 01054000
         BNO   @RF00265                                         01S0265 01055000
*            IF SIZESET = OFF          /* HAS KEYWORD BEEN USED OR   */ 01056000
*              THEN                    /*  IS IT MUTUALLY EXCLUSIVE? */ 01057000
         TM    SIZESET(BUFAD),B'00001000'                       01S0266 01058000
         BNZ   @RF00266                                         01S0266 01059000
*                DO;                   /* THIS PATH FOR KEYWORD OK.  */ 01060000
*                  SIZESET = ON;       /* SET KEYWORD USED FLAG.     */ 01061000
         OI    SIZESET(BUFAD),B'00001000'                       01S0268 01062000
*                  CALL FINDPARM;      /* SCAN PARAMETER.            */ 01063000
         BAL   @14,FINDPARM                                     01S0269 01064000
*                  IF PARMNUM ^= ZERO  /* CHECK FOR PRESENCE OF      */ 01065000
*                   & FWORK =< SZMAX   /*  VALID                     */ 01066000
*                   & FWORK => SZMIN   /*  PARAMETER.                */ 01067000
*                   & FWORK // FIVE = ZERO /* MUST BE HALF INCH.     */ 01068000
*                    THEN              /*                            */ 01069000
         CLI   PARMNUM(BUFAD),0                                 01S0270 01070000
         BE    @RF00270                                         01S0270 01071000
         L     @10,FWORK(,BUFAD)                                01S0270 01072000
         CH    @10,@CH00195                                     01S0270 01073000
         BH    @RF00270                                         01S0270 01074000
         CH    @10,@CH00378                                     01S0270 01075000
         BL    @RF00270                                         01S0270 01076000
         LR    @00,@10                                          01S0270 01077000
         SRDA  @00,32                                           01S0270 01078000
         D     @00,@CF00037                                     01S0270 01079000
         LTR   @00,@00                                          01S0270 01080000
         BNZ   @RF00270                                         01S0270 01081000
*                      FCBSIZE = FWORK;/* SET FORM SIZE.             */ 01082000
         STH   @10,FCBSIZE(,BUFAD)                              01S0271 01083000
*                    ELSE              /*                            */ 01084000
*                      INVPARM = ON;   /* SET INVALID PARAMETER.     */ 01085000
         B     @RC00270                                         01S0272 01086000
@RF00270 OI    INVPARM(BUFAD),B'00001000'                       01S0272 01087000
*                END;                  /* END VALID KEYWORD PROCESS. */ 01088000
*              ELSE                    /* KEYWORD PREVIOUSLY USED OR */ 01089000
*                EXCLKWD = ON;         /*  MUTUALLY EXCLUSIVE.       */ 01090000
         B     @RC00266                                         01S0274 01091000
@RF00266 OI    EXCLKWD(BUFAD),B'00010000'                       01S0274 01092000
*          ELSE                        /* KEYWORD NOT VALID FOR THIS */ 01093000
*            INVKWD = ON;              /*  OPERATION.                */ 01094000
         B     @RC00265                                         01S0275 01095000
@RF00265 OI    INVKWD(BUFAD),B'00100000'                        01S0275 01096000
*        GEN REFS(SAVE3)               /*                            */ 01097000
*         (L   @13,SAVE3+BACK(,BUFAD));/* RESTORE BACKWARD POINTER.  */ 01098000
@RC00265 DS    0H                                               01S0276 01099000
         L   @13,SAVE3+BACK(,BUFAD)                                     01100000
*  END SIZE;                           /* RETURN TO CALLER.          */ 01101000
@EL00004 DS    0H                                               01S0277 01102000
@EF00004 DS    0H                                               01S0277 01103000
@ER00004 LM    @14,@12,12(@13)                                  01S0277 01104000
         BR    @14                                              01S0277 01105000
         EJECT                                                          01106000
*/********************************************************************* 01107000
**                                                                    * 01108000
**  THIS ROUTINE WILL DETERMINE THE VALIDITY OF THE POS KEYWORD       * 01109000
**  AND ITS PARAMETER. VALID PARAMETER IS A ONE TO THREE DIGIT FIELD. * 01110000
**                                                                    * 01111000
**********************************************************************/ 01112000
*POS:                                                           01S0278 01113000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0278 01114000
POS      STM   @14,@12,12(@13)                                  01S0278 01115000
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */ 01116000
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.                01117000
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.          01118000
         ST    @14,FORE(,@13)          FORWARD POINTER.                 01119000
         LR    @13,@14                 LINKAGE COMPLETE.                01120000
*        IF POSFLAG(ACTIVOP) = ON      /* IS KEYWORD VALID FOR       */ 01121000
*          THEN                        /*  OPERATION?                */ 01122000
         SLR   @10,@10                                          01S0280 01123000
         IC    @10,ACTIVOP(,BUFAD)                              01S0280 01124000
         MH    @10,@CH00054                                     01S0280 01125000
         ICM   @09,7,OPTABAD(BUFAD)                             01S0280 01126000
         ALR   @09,@10                                          01S0280 01127000
         AL    @09,@CF01039                                     01S0280 01128000
         TM    POSFLAG-1(@09),B'00000010'                       01S0280 01129000
         BNO   @RF00280                                         01S0280 01130000
*            IF POSSET = OFF           /* HAS KEYWORD BEEN USED OR   */ 01131000
*              THEN                    /*  IS IT MUTUALLY EXCLUSIVE? */ 01132000
         TM    POSSET(BUFAD),B'00000100'                        01S0281 01133000
         BNZ   @RF00281                                         01S0281 01134000
*                DO;                   /* THIS PATH FOR KEYWORD OK.  */ 01135000
*                  POSSET = ON;        /* SET KEYWORD USED FLAG.     */ 01136000
         OI    POSSET(BUFAD),B'00000100'                        01S0283 01137000
*                  CALL FINDPARM;      /* SCAN PARAMETER.            */ 01138000
         BAL   @14,FINDPARM                                     01S0284 01139000
*                  IF PARMNUM ^= ZERO  /* CHECK FOR PRESENCE OF      */ 01140000
*                   & FWORK =< POSMAX  /*  VALID                     */ 01141000
*                    THEN              /*                            */ 01142000
         CLI   PARMNUM(BUFAD),0                                 01S0285 01143000
         BE    @RF00285                                         01S0285 01144000
         L     @10,FWORK(,BUFAD)                                01S0285 01145000
         CH    @10,@CH00281                                     01S0285 01146000
         BH    @RF00285                                         01S0285 01147000
*                      IPOS = FWORK;   /* SET INITIAL PRINT POSITION.*/ 01148000
         STC   @10,IPOS+796(,BUFAD)                             01S0286 01149000
*                    ELSE              /*                            */ 01150000
*                      INVPARM = ON;   /* SET INVALID PARAMETER.     */ 01151000
         B     @RC00285                                         01S0287 01152000
@RF00285 OI    INVPARM(BUFAD),B'00001000'                       01S0287 01153000
*                END;                  /* END VALID KEYWORD PROCESS. */ 01154000
*              ELSE                    /* KEYWORD PREVIOUSLY USED OR */ 01155000
*                EXCLKWD = ON;         /*  MUTUALLY EXCLUSIVE.       */ 01156000
         B     @RC00281                                         01S0289 01157000
@RF00281 OI    EXCLKWD(BUFAD),B'00010000'                       01S0289 01158000
*          ELSE                        /* KEYWORD NOT VALID FOR THIS */ 01159000
*            INVKWD = ON;              /*  OPERATION.                */ 01160000
         B     @RC00280                                         01S0290 01161000
@RF00280 OI    INVKWD(BUFAD),B'00100000'                        01S0290 01162000
*        GEN REFS(SAVE3)               /*                            */ 01163000
*         (L   @13,SAVE3+BACK(,BUFAD));/* RESTORE BACKWARD POINTER.  */ 01164000
@RC00280 DS    0H                                               01S0291 01165000
         L   @13,SAVE3+BACK(,BUFAD)                                     01166000
*  END POS;                            /* RETURN TO CALLER.          */ 01167000
@EL00005 DS    0H                                               01S0292 01168000
@EF00005 DS    0H                                               01S0292 01169000
@ER00005 LM    @14,@12,12(@13)                                  01S0292 01170000
         BR    @14                                              01S0292 01171000
         EJECT                                                          01172000
*/********************************************************************* 01173000
**                                                                    * 01174000
**  THIS ROUTINE WILL DETERMINE THE VALIDITY OF THE COPIES KEYWORD    * 01175000
**  AND ITS PARAMETERS. VALID PARAMETERS INCLUDE GROUPS OF TWO        * 01176000
**  POSSIBLE VALUES -                                                 * 01177000
**       1. AN INITIAL COPY NUMBER.                                   * 01178000
**       2. TOTAL NUMBER OF COPIES TO BE MODIFIED.                    * 01179000
**                                                                    * 01180000
**********************************************************************/ 01181000
*COPIES:                                                        01S0293 01182000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0293 01183000
COPIES   STM   @14,@12,12(@13)                                  01S0293 01184000
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */ 01185000
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.                01186000
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.          01187000
         ST    @14,FORE(,@13)          FORWARD POINTER.                 01188000
         LR    @13,@14                 LINKAGE COMPLETE.                01189000
*        IF COPYFLAG(ACTIVOP) = ON     /* IS KEYWORD VALID FOR       */ 01190000
*          THEN                        /*  OPERATION?                */ 01191000
         SLR   @10,@10                                          01S0295 01192000
         IC    @10,ACTIVOP(,BUFAD)                              01S0295 01193000
         MH    @10,@CH00054                                     01S0295 01194000
         ICM   @09,7,OPTABAD(BUFAD)                             01S0295 01195000
         ALR   @09,@10                                          01S0295 01196000
         AL    @09,@CF01039                                     01S0295 01197000
         TM    COPYFLAG-1(@09),B'00001000'                      01S0295 01198000
         BNO   @RF00295                                         01S0295 01199000
*            IF COPYSET = OFF          /* HAS KEYWORD BEEN USED OR   */ 01200000
*              THEN                    /*  IS IT MUTUALLY EXCLUSIVE? */ 01201000
         TM    COPYSET(BUFAD),B'00010000'                       01S0296 01202000
         BNZ   @RF00296                                         01S0296 01203000
*                DO;                   /* THIS PATH FOR KEYWORD OK.  */ 01204000
*                  COPYSET = ON;       /* SET KEYWORD USED FLAG.     */ 01205000
         OI    COPYSET(BUFAD),B'00010000'                       01S0298 01206000
*                  CALL FINDPARM;      /* SCAN PARAMETER.            */ 01207000
         BAL   @14,FINDPARM                                     01S0299 01208000
*                      DO              /* START PARAMETER PROCESS.   */ 01209000
*                       WHILE PARMNUM  /* CONTINUE THRU ALL PARMS.   */ 01210000
*                            ^= ZERO;  /*                            */ 01211000
         B     @DE00300                                         01S0300 01212000
@DL00300 DS    0H                                               01S0301 01213000
*                        IF FWORK =< MAXCOPY                    01S0301 01214000
*                          THEN        /* CHECK FOR VALID PARM.      */ 01215000
         L     @10,FWORK(,BUFAD)                                01S0301 01216000
         CH    @10,@CH00550                                     01S0301 01217000
         BH    @RF00301                                         01S0301 01218000
*                            IF PARMNUM = ONE                   01S0302 01219000
*                              THEN    /* SET INITIAL COPY NUMBER.   */ 01220000
         CLI   PARMNUM(BUFAD),1                                 01S0302 01221000
         BNE   @RF00302                                         01S0302 01222000
*                                ICOPY = FWORK;                 01S0303 01223000
         STC   @10,ICOPY+796(,BUFAD)                            01S0303 01224000
*                              ELSE    /* SET NUMBER OF COPIES.      */ 01225000
*                                COPYX = FWORK;                 01S0304 01226000
         B     @RC00302                                         01S0304 01227000
@RF00302 MVC   COPYX+796(1,BUFAD),FWORK+3(BUFAD)                01S0304 01228000
*                          ELSE        /* INVALID PARAMETER.         */ 01229000
*                            INVPARM = ON;                      01S0305 01230000
         B     @RC00301                                         01S0305 01231000
@RF00301 OI    INVPARM(BUFAD),B'00001000'                       01S0305 01232000
*                        IF KWDCOMP = OFF                       01S0306 01233000
*                          THEN        /* GET ANOTHER PARAMETER.     */ 01234000
@RC00301 TM    KWDCOMP(BUFAD),B'00000001'                       01S0306 01235000
         BNZ   @RF00306                                         01S0306 01236000
*                            DO;                                01S0307 01237000
*                              PARMNUM=PARMNUM+ONE;             01S0308 01238000
         LA    @10,1                                            01S0308 01239000
         SLR   @09,@09                                          01S0308 01240000
         IC    @09,PARMNUM(,BUFAD)                              01S0308 01241000
         ALR   @10,@09                                          01S0308 01242000
         STC   @10,PARMNUM(,BUFAD)                              01S0308 01243000
*                              CALL FINDPARM;                   01S0309 01244000
         BAL   @14,FINDPARM                                     01S0309 01245000
*                            END;                               01S0310 01246000
*                          ELSE        /* SET PARMNUM TO EXIT LOOP.  */ 01247000
*                            PARMNUM = ZERO;                    01S0311 01248000
         B     @RC00306                                         01S0311 01249000
@RF00306 MVI   PARMNUM(BUFAD),X'00'                             01S0311 01250000
*                      END;            /* END PARAMETER PROCESS.     */ 01251000
@RC00306 DS    0H                                               01S0312 01252000
@DE00300 CLI   PARMNUM(BUFAD),0                                 01S0312 01253000
         BNE   @DL00300                                         01S0312 01254000
*                END;                  /* END VALID KEYWORD PROCESS. */ 01255000
*              ELSE                    /* KEYWORD PREVIOUSLY USED OR */ 01256000
*                EXCLKWD = ON;         /*  MUTUALLY EXCLUSIVE.       */ 01257000
         B     @RC00296                                         01S0314 01258000
@RF00296 OI    EXCLKWD(BUFAD),B'00010000'                       01S0314 01259000
*          ELSE                        /* KEYWORD NOT VALID FOR THIS */ 01260000
*            INVKWD = ON;              /*  OPERATION.                */ 01261000
         B     @RC00295                                         01S0315 01262000
@RF00295 OI    INVKWD(BUFAD),B'00100000'                        01S0315 01263000
*        GEN REFS(SAVE3)               /*                            */ 01264000
*         (L   @13,SAVE3+BACK(,BUFAD));/* RESTORE BACKWARD POINTER.  */ 01265000
@RC00295 DS    0H                                               01S0316 01266000
         L   @13,SAVE3+BACK(,BUFAD)                                     01267000
*  END COPIES;                         /* RETURN TO CALLER.          */ 01268000
@EL00006 DS    0H                                               01S0317 01269000
@EF00006 DS    0H                                               01S0317 01270000
@ER00006 LM    @14,@12,12(@13)                                  01S0317 01271000
         BR    @14                                              01S0317 01272000
         EJECT                                                          01273000
*/********************************************************************* 01274000
**                                                                    * 01275000
**  THIS ROUTINE WILL DETERMINE THE VALIDITY OF THE LINES KEYWORD     * 01276000
**  AND ITS PARAMETERS. VALID PARAMETERS INCLUDE GROUPS OF TWO        * 01277000
**  POSSIBLE VALUES -                                                 * 01278000
**       1. AN INITIAL LINE NUMBER.                                   * 01279000
**       2. TOTAL NUMBER OF LINES TO BE MODIFIED.                     * 01280000
**                                                                    * 01281000
**********************************************************************/ 01282000
*LINES:                                                         01S0318 01283000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0318 01284000
LINES    STM   @14,@12,12(@13)                                  01S0318 01285000
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */ 01286000
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.                01287000
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.          01288000
         ST    @14,FORE(,@13)          FORWARD POINTER.                 01289000
         LR    @13,@14                 LINKAGE COMPLETE.                01290000
*        IF LINEFLAG(ACTIVOP) = ON     /* IS KEYWORD VALID FOR       */ 01291000
*          THEN                        /*  OPERATION?                */ 01292000
         SLR   @10,@10                                          01S0320 01293000
         IC    @10,ACTIVOP(,BUFAD)                              01S0320 01294000
         MH    @10,@CH00054                                     01S0320 01295000
         ICM   @09,7,OPTABAD(BUFAD)                             01S0320 01296000
         ALR   @09,@10                                          01S0320 01297000
         AL    @09,@CF01039                                     01S0320 01298000
         TM    LINEFLAG-1(@09),B'00000100'                      01S0320 01299000
         BNO   @RF00320                                         01S0320 01300000
*            IF LINESET = OFF          /* HAS KEYWORD BEEN USED OR   */ 01301000
*              THEN                    /*  IS IT MUTUALLY EXCLUSIVE? */ 01302000
         TM    LINESET(BUFAD),B'00001000'                       01S0321 01303000
         BNZ   @RF00321                                         01S0321 01304000
*                DO;                   /* THIS PATH FOR KEYWORD OK.  */ 01305000
*                  LINESET = ON;       /* SET KEYWORD USED FLAG.     */ 01306000
         OI    LINESET(BUFAD),B'00001000'                       01S0323 01307000
*                  CALL FINDPARM;      /* SCAN PARAMETER.            */ 01308000
         BAL   @14,FINDPARM                                     01S0324 01309000
*                      DO              /* START PARAMETER PROCESS.   */ 01310000
*                       WHILE PARMNUM  /* CONTINUE THRU ALL PARMS.   */ 01311000
*                            ^= ZERO;  /*                            */ 01312000
         B     @DE00325                                         01S0325 01313000
@DL00325 DS    0H                                               01S0326 01314000
*                        IF FWORK =< MAXLINE                    01S0326 01315000
*                          THEN        /* CHECK FOR VALID PARM.      */ 01316000
         L     @10,FWORK(,BUFAD)                                01S0326 01317000
         CH    @10,@CH00889                                     01S0326 01318000
         BH    @RF00326                                         01S0326 01319000
*                            IF PARMNUM = ONE                   01S0327 01320000
*                              THEN    /* SET INITIAL LINE NUMBER.   */ 01321000
         CLI   PARMNUM(BUFAD),1                                 01S0327 01322000
         BNE   @RF00327                                         01S0327 01323000
*                                ILINE = FWORK;                 01S0328 01324000
         STC   @10,ILINE+796(,BUFAD)                            01S0328 01325000
*                              ELSE    /* SET NUMBER OF LINES.       */ 01326000
*                                LINEX = FWORK;                 01S0329 01327000
         B     @RC00327                                         01S0329 01328000
@RF00327 MVC   LINEX+796(1,BUFAD),FWORK+3(BUFAD)                01S0329 01329000
*                          ELSE        /* INVALID PARAMETER.         */ 01330000
*                            INVPARM = ON;                      01S0330 01331000
         B     @RC00326                                         01S0330 01332000
@RF00326 OI    INVPARM(BUFAD),B'00001000'                       01S0330 01333000
*                        IF KWDCOMP = OFF                       01S0331 01334000
*                          THEN        /* GET ANOTHER PARAMETER.     */ 01335000
@RC00326 TM    KWDCOMP(BUFAD),B'00000001'                       01S0331 01336000
         BNZ   @RF00331                                         01S0331 01337000
*                            DO;                                01S0332 01338000
*                              PARMNUM=PARMNUM+ONE;             01S0333 01339000
         LA    @10,1                                            01S0333 01340000
         SLR   @09,@09                                          01S0333 01341000
         IC    @09,PARMNUM(,BUFAD)                              01S0333 01342000
         ALR   @10,@09                                          01S0333 01343000
         STC   @10,PARMNUM(,BUFAD)                              01S0333 01344000
*                              CALL FINDPARM;                   01S0334 01345000
         BAL   @14,FINDPARM                                     01S0334 01346000
*                            END;                               01S0335 01347000
*                          ELSE        /* SET PARMNUM TO EXIT LOOP.  */ 01348000
*                            PARMNUM = ZERO;                    01S0336 01349000
         B     @RC00331                                         01S0336 01350000
@RF00331 MVI   PARMNUM(BUFAD),X'00'                             01S0336 01351000
*                      END;            /* END PARAMETER PROCESS.     */ 01352000
@RC00331 DS    0H                                               01S0337 01353000
@DE00325 CLI   PARMNUM(BUFAD),0                                 01S0337 01354000
         BNE   @DL00325                                         01S0337 01355000
*                END;                  /* END VALID KEYWORD PROCESS. */ 01356000
*              ELSE                    /* KEYWORD PREVIOUSLY USED OR */ 01357000
*                EXCLKWD = ON;         /*  MUTUALLY EXCLUSIVE.       */ 01358000
         B     @RC00321                                         01S0339 01359000
@RF00321 OI    EXCLKWD(BUFAD),B'00010000'                       01S0339 01360000
*          ELSE                        /* KEYWORD NOT VALID FOR THIS */ 01361000
*            INVKWD = ON;              /*  OPERATION.                */ 01362000
         B     @RC00320                                         01S0340 01363000
@RF00320 OI    INVKWD(BUFAD),B'00100000'                        01S0340 01364000
*        GEN REFS(SAVE3)               /*                            */ 01365000
*         (L   @13,SAVE3+BACK(,BUFAD));/* RESTORE BACKWARD POINTER.  */ 01366000
@RC00320 DS    0H                                               01S0341 01367000
         L   @13,SAVE3+BACK(,BUFAD)                                     01368000
*  END LINES;                          /* RETURN TO CALLER.          */ 01369000
@EL00007 DS    0H                                               01S0342 01370000
@EF00007 DS    0H                                               01S0342 01371000
@ER00007 LM    @14,@12,12(@13)                                  01S0342 01372000
         BR    @14                                              01S0342 01373000
         EJECT                                                          01374000
*/********************************************************************* 01375000
**                                                                    * 01376000
**  THIS ROUTINE WILL DETERMINE THE VALIDITY OF THE DELSEG KEYWORD    * 01377000
**  AND ITS PARAMETERS. VALID PARAMETERS ARE DECIMAL NUMBERS FROM     * 01378000
**  1 TO 999.                                                         * 01379000
**                                                                    * 01380000
**********************************************************************/ 01381000
*DELSEG:                                                        01S0343 01382000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0343 01383000
DELSEG   STM   @14,@12,12(@13)                                  01S0343 01384000
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */ 01385000
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.                01386000
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.          01387000
         ST    @14,FORE(,@13)          FORWARD POINTER.                 01388000
         LR    @13,@14                 LINKAGE COMPLETE.                01389000
*        IF DELFLAG(ACTIVOP) = ON      /* IS KEYWORD VALID FOR       */ 01390000
*          THEN                        /*  OPERATION?                */ 01391000
         SLR   @10,@10                                          01S0345 01392000
         IC    @10,ACTIVOP(,BUFAD)                              01S0345 01393000
         MH    @10,@CH00054                                     01S0345 01394000
         ICM   @09,7,OPTABAD(BUFAD)                             01S0345 01395000
         ALR   @09,@10                                          01S0345 01396000
         AL    @09,@CF01034                                     01S0345 01397000
         TM    DELFLAG-2(@09),B'00100000'                       01S0345 01398000
         BNO   @RF00345                                         01S0345 01399000
*            IF DELSET = OFF           /* HAS KEYWORD BEEN USED OR   */ 01400000
*              THEN                    /*  IS IT MUTUALLY EXCLUSIVE? */ 01401000
         TM    DELSET(BUFAD),B'00100000'                        01S0346 01402000
         BNZ   @RF00346                                         01S0346 01403000
*                DO;                   /* THIS PATH FOR KEYWORD OK.  */ 01404000
*                  DELSET = ON;        /* SET KEYWORD USED FLAG.     */ 01405000
         OI    DELSET(BUFAD),B'00100000'                        01S0348 01406000
*                  DO                  /* CLEAR DELETE ARRAY.        */ 01407000
*                   CNT = ONE          /*                            */ 01408000
*                   TO DIM(DEL);       /*                            */ 01409000
         LA    CNT,1                                            01S0349 01410000
@DL00349 DS    0H                                               01S0350 01411000
*                    DEL(CNT) = ZERO;  /* SET EACH ELEMENT TO ZERO.  */ 01412000
         SLR   @10,@10                                          01S0350 01413000
         STC   @10,DEL+795(CNT,BUFAD)                           01S0350 01414000
*                  END;                /* ARRAY IS CLEARED.          */ 01415000
         AH    CNT,@CH00061                                     01S0351 01416000
         CH    CNT,@CH00254                                     01S0351 01417000
         BNH   @DL00349                                         01S0351 01418000
*                  CALL FINDPARM;      /* SCAN PARAMETER.            */ 01419000
         BAL   @14,FINDPARM                                     01S0352 01420000
*                      DO              /* START PARAMETER PROCESS.   */ 01421000
*                       SCNT = ONE     /* FILL THE SCAN ARRAY WITH   */ 01422000
*                       TO DIM(DEL)    /*  PARMS FROM THE LOC KEYWORD*/ 01423000
*                       WHILE PARMNUM  /* CONTINUE THRU ALL PARMS.   */ 01424000
*                            ^= ZERO;  /*                            */ 01425000
         LA    @10,1                                            01S0353 01426000
         STH   @10,SCNT(,BUFAD)                                 01S0353 01427000
@DL00353 CLI   PARMNUM(BUFAD),0                                 01S0353 01428000
         BE    @DC00353                                         01S0353 01429000
*                          IF PARMSIZE => ONE                   01S0354 01430000
*                            THEN      /* CHECK FOR PARAMETER.       */ 01431000
         CLC   PARMSIZE(2,BUFAD),@CH00061                       01S0354 01432000
         BL    @RF00354                                         01S0354 01433000
*                              IF DEL(FWORK) = ZERO             01S0355 01434000
*                                THEN  /* SET SEGMENT NUMBER IN ARRAY*/ 01435000
         L     @10,FWORK(,BUFAD)                                01S0355 01436000
         LA    @09,796                                          01S0355 01437000
         ALR   @09,BUFAD                                        01S0355 01438000
         LA    @01,0(@10,@09)                                   01S0355 01439000
         BCTR  @01,0                                            01S0355 01440000
         SLR   @00,@00                                          01S0355 01441000
         IC    @00,DEL(,@01)                                    01S0355 01442000
         CH    @00,@CH00480                                     01S0355 01443000
         BNE   @RF00355                                         01S0355 01444000
*                                  DEL(FWORK) = ALBIT;          01S0356 01445000
         ALR   @09,@10                                          01S0356 01446000
         BCTR  @09,0                                            01S0356 01447000
         MVI   DEL(@09),X'FF'                                   01S0356 01448000
*                                ELSE  /* SEGMENT ALREADY SET.       */ 01449000
*                                  INVPARM = ON;                01S0357 01450000
         B     @RC00355                                         01S0357 01451000
@RF00355 OI    INVPARM(BUFAD),B'00001000'                       01S0357 01452000
*                            ELSE      /* MISSING PARAMETER.         */ 01453000
*                              INVPARM = ON;                    01S0358 01454000
         B     @RC00354                                         01S0358 01455000
@RF00354 OI    INVPARM(BUFAD),B'00001000'                       01S0358 01456000
*                        IF KWDCOMP = OFF                       01S0359 01457000
*                          THEN        /* GET ANOTHER PARAMETER.     */ 01458000
@RC00354 TM    KWDCOMP(BUFAD),B'00000001'                       01S0359 01459000
         BNZ   @RF00359                                         01S0359 01460000
*                            CALL FINDPARM;                     01S0360 01461000
         BAL   @14,FINDPARM                                     01S0360 01462000
*                          ELSE        /* SET PARMNUM TO EXIT LOOP.  */ 01463000
*                            PARMNUM = ZERO;                    01S0361 01464000
         B     @RC00359                                         01S0361 01465000
@RF00359 MVI   PARMNUM(BUFAD),X'00'                             01S0361 01466000
*                      END;            /* END PARAMETER PROCESS.     */ 01467000
@RC00359 LA    @10,1                                            01S0362 01468000
         SLR   @09,@09                                          01S0362 01469000
         ICM   @09,3,SCNT(BUFAD)                                01S0362 01470000
         ALR   @10,@09                                          01S0362 01471000
         STH   @10,SCNT(,BUFAD)                                 01S0362 01472000
         CH    @10,@CH00254                                     01S0362 01473000
         BNH   @DL00353                                         01S0362 01474000
@DC00353 DS    0H                                               01S0363 01475000
*                END;                  /* END VALID KEYWORD PROCESS. */ 01476000
*              ELSE                    /* KEYWORD PREVIOUSLY USED OR */ 01477000
*                EXCLKWD = ON;         /*  MUTUALLY EXCLUSIVE.       */ 01478000
         B     @RC00346                                         01S0364 01479000
@RF00346 OI    EXCLKWD(BUFAD),B'00010000'                       01S0364 01480000
*          ELSE                        /* KEYWORD NOT VALID FOR THIS */ 01481000
*            INVKWD = ON;              /*  OPERATION.                */ 01482000
         B     @RC00345                                         01S0365 01483000
@RF00345 OI    INVKWD(BUFAD),B'00100000'                        01S0365 01484000
*        GEN REFS(SAVE3)               /*                            */ 01485000
*         (L   @13,SAVE3+BACK(,BUFAD));/* RESTORE BACKWARD POINTER.  */ 01486000
@RC00345 DS    0H                                               01S0366 01487000
         L   @13,SAVE3+BACK(,BUFAD)                                     01488000
*  END DELSEG;                         /* RETURN TO CALLER.          */ 01489000
@EL00008 DS    0H                                               01S0367 01490000
@EF00008 DS    0H                                               01S0367 01491000
@ER00008 LM    @14,@12,12(@13)                                  01S0367 01492000
         BR    @14                                              01S0367 01493000
         EJECT                                                          01494000
*/********************************************************************* 01495000
**                                                                    * 01496000
**  THIS ROUTINE WILL DETERMINE THE VALIDITY OF THE GCM KEYWORD       * 01497000
**  AND ITS PARAMETER. ONLY VALID PARAMETER IS A ONE TO FOUR          * 01498000
**  CHARACTER SUFFIX, WHICH WILL BE APPENDED TO A STANDARD PREFIX.    * 01499000
**                                                                    * 01500000
**********************************************************************/ 01501000
*GCM:                                                           01S0368 01502000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0368 01503000
GCM      STM   @14,@12,12(@13)                                  01S0368 01504000
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */ 01505000
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.                01506000
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.          01507000
         ST    @14,FORE(,@13)          FORWARD POINTER.                 01508000
         LR    @13,@14                 LINKAGE COMPLETE.                01509000
*        IF GCMFLAG(ACTIVOP) = ON      /* IS KEYWORD VALID FOR       */ 01510000
*          THEN                        /*  OPERATION?                */ 01511000
         SLR   @10,@10                                          01S0370 01512000
         IC    @10,ACTIVOP(,BUFAD)                              01S0370 01513000
         MH    @10,@CH00054                                     01S0370 01514000
         ICM   @09,7,OPTABAD(BUFAD)                             01S0370 01515000
         ALR   @09,@10                                          01S0370 01516000
         AL    @09,@CF01034                                     01S0370 01517000
         TM    GCMFLAG-2(@09),B'00001000'                       01S0370 01518000
         BNO   @RF00370                                         01S0370 01519000
*            IF GCMSET = OFF           /* HAS KEYWORD BEEN USED OR   */ 01520000
*              THEN                    /*  IS IT MUTUALLY EXCLUSIVE? */ 01521000
         TM    GCMSET(BUFAD),B'00001000'                        01S0371 01522000
         BNZ   @RF00371                                         01S0371 01523000
*                DO;                   /* THIS PATH FOR KEYWORD OK.  */ 01524000
*                  GCMSET = ON;        /* SET KEYWORD USED FLAG.     */ 01525000
         OI    GCMSET(BUFAD),B'00001000'                        01S0373 01526000
*                  CALL FINDPARM;      /* SCAN PARAMETER.            */ 01527000
         BAL   @14,FINDPARM                                     01S0374 01528000
*                  IF PARMNUM ^= ZERO  /* CHECK FOR PRESENCE OF      */ 01529000
*                    THEN              /*  PARAMETER.                */ 01530000
         CLI   PARMNUM(BUFAD),0                                 01S0375 01531000
         BE    @RF00375                                         01S0375 01532000
*                      BSUFIX=CARDDATA(ONE:PARMSIZE);           01S0376 01533000
         MVI   BSUFIX+1(BUFAD),C' '                             01S0376 01534000
         MVC   BSUFIX+2(2,BUFAD),BSUFIX+1(BUFAD)                01S0376 01535000
         SLR   @10,@10                                          01S0376 01536000
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0376 01537000
         BCTR  @10,0                                            01S0376 01538000
         EX    @10,@SM01035                                     01S0376 01539000
*                    ELSE;             /*                            */ 01540000
@RF00375 DS    0H                                               01S0378 01541000
*                END;                  /* END VALID KEYWORD PROCESS. */ 01542000
*              ELSE                    /* KEYWORD PREVIOUSLY USED OR */ 01543000
*                EXCLKWD = ON;         /*  MUTUALLY EXCLUSIVE.       */ 01544000
         B     @RC00371                                         01S0379 01545000
@RF00371 OI    EXCLKWD(BUFAD),B'00010000'                       01S0379 01546000
*          ELSE                        /* KEYWORD NOT VALID FOR THIS */ 01547000
*            INVKWD = ON;              /*  OPERATION.                */ 01548000
         B     @RC00370                                         01S0380 01549000
@RF00370 OI    INVKWD(BUFAD),B'00100000'                        01S0380 01550000
*        GEN REFS(SAVE3)               /*                            */ 01551000
*         (L   @13,SAVE3+BACK(,BUFAD));/* RESTORE BACKWARD POINTER.  */ 01552000
@RC00370 DS    0H                                               01S0381 01553000
         L   @13,SAVE3+BACK(,BUFAD)                                     01554000
*  END GCM;                            /* RETURN TO CALLER.          */ 01555000
@EL00009 DS    0H                                               01S0382 01556000
@EF00009 DS    0H                                               01S0382 01557000
@ER00009 LM    @14,@12,12(@13)                                  01S0382 01558000
         BR    @14                                              01S0382 01559000
         EJECT                                                          01560000
*/********************************************************************* 01561000
**                                                                    * 01562000
**  THIS ROUTINE WILL DETERMINE THE VALIDITY OF THE REF KEYWORD       * 01563000
**  AND ITS PARAMETERS. VALID PARAMETERS INCLUDE GROUPS OF TWO        * 01564000
**  POSSIBLE VALUES -                                                 * 01565000
**       1. A REFERNCE TO A GCM SEGMENT.                              * 01566000
**       2. AN EBCDIC ASSIGNMENT WHICH IS A TABLE REFERENCE.          * 01567000
**                                                                    * 01568000
**********************************************************************/ 01569000
*REF:                                                           01S0383 01570000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0383 01571000
REF      STM   @14,@12,12(@13)                                  01S0383 01572000
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */ 01573000
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.                01574000
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.          01575000
         ST    @14,FORE(,@13)          FORWARD POINTER.                 01576000
         LR    @13,@14                 LINKAGE COMPLETE.                01577000
*        IF REFFLAG(ACTIVOP) = ON      /* IS KEYWORD VALID FOR       */ 01578000
*          THEN                        /*  OPERATION?                */ 01579000
         SLR   @10,@10                                          01S0385 01580000
         IC    @10,ACTIVOP(,BUFAD)                              01S0385 01581000
         MH    @10,@CH00054                                     01S0385 01582000
         ICM   @09,7,OPTABAD(BUFAD)                             01S0385 01583000
         ALR   @09,@10                                          01S0385 01584000
         AL    @09,@CF01034                                     01S0385 01585000
         TM    REFFLAG-2(@09),B'00010000'                       01S0385 01586000
         BNO   @RF00385                                         01S0385 01587000
*            IF REFSET = OFF           /* HAS KEYWORD BEEN USED OR   */ 01588000
*              THEN                    /*  IS IT MUTUALLY EXCLUSIVE? */ 01589000
         TM    REFSET(BUFAD),B'00010000'                        01S0386 01590000
         BNZ   @RF00386                                         01S0386 01591000
*                DO;                   /* THIS PATH FOR KEYWORD OK.  */ 01592000
*                  REFSET = ON;        /* SET KEYWORD USED FLAG.     */ 01593000
         OI    REFSET(BUFAD),B'00010000'                        01S0388 01594000
*                  CALL FINDPARM;      /* SCAN PARAMETER.            */ 01595000
         BAL   @14,FINDPARM                                     01S0389 01596000
*                      DO              /* START PARAMETER PROCESS.   */ 01597000
*                       SCNT = ONE     /* FILL THE SCAN ARRAY WITH   */ 01598000
*                       TO DIM(GRAFARY)/*  PARMS FROM THE LOC KEYWORD*/ 01599000
*                       WHILE PARMNUM  /* CONTINUE THRU ALL PARMS.   */ 01600000
*                            ^= ZERO;  /*                            */ 01601000
         LA    @10,1                                            01S0390 01602000
         STH   @10,SCNT(,BUFAD)                                 01S0390 01603000
@DL00390 CLI   PARMNUM(BUFAD),0                                 01S0390 01604000
         BE    @DC00390                                         01S0390 01605000
*                        DO             /* */                   01S0391 01606000
*                          UNTIL PARMNUM < TWO;                 01S0391 01607000
@DL00391 DS    0H                                               01S0392 01608000
*                        IF PARMNUM = ONE                       01S0392 01609000
*                          THEN                                 01S0392 01610000
         CLI   PARMNUM(BUFAD),1                                 01S0392 01611000
         BNE   @RF00392                                         01S0392 01612000
*                    DO;                                        01S0393 01613000
*                        GRAFARY(SCNT) = ZERO;/* INITIALIZE NO ENTRY*/  01614000
         SLR   @10,@10                                          01S0394 01615000
         ICM   @10,3,SCNT(BUFAD)                                01S0394 01616000
         SLA   @10,2                                            01S0394 01617000
         LA    @09,796                                          01S0394 01618000
         ALR   @09,BUFAD                                        01S0394 01619000
         SLR   @15,@15                                          01S0394 01620000
         LA    @14,0(@10,@09)                                   01S0394 01621000
         AL    @14,@CF01040                                     01S0394 01622000
         ST    @15,GRAFARY(,@14)                                01S0394 01623000
*                            REFARRAY(SCNT) = FWORK;            01S0395 01624000
         L     @15,FWORK(,BUFAD)                                01S0395 01625000
         BCTR  @09,0                                            01S0395 01626000
         BCTR  @09,0                                            01S0395 01627000
         STH   @15,REFARRAY-2(@10,@09)                          01S0395 01628000
*                    END;                                       01S0396 01629000
*                          ELSE                                 01S0397 01630000
*                            DO;       /* ASSIGNMENT VALUE AND FLAG. */ 01631000
         B     @RC00392                                         01S0397 01632000
@RF00392 DS    0H                                               01S0398 01633000
*                              ASNARRAY(SCNT) = CARDDATA(ONE);  01S0398 01634000
         SLR   @10,@10                                          01S0398 01635000
         ICM   @10,3,SCNT(BUFAD)                                01S0398 01636000
         SLA   @10,2                                            01S0398 01637000
         LA    @09,796                                          01S0398 01638000
         ALR   @09,BUFAD                                        01S0398 01639000
         ST    @10,@TF00001                                     01S0398 01640000
         ALR   @10,@09                                          01S0398 01641000
         AL    @10,@CF01040                                     01S0398 01642000
         MVC   ASNARRAY(1,@10),CARDDATA(BUFAD)                  01S0398 01643000
*                              ASNENTRY(SCNT) = ALBIT;          01S0399 01644000
         AL    @09,@TF00001                                     01S0399 01645000
         AL    @09,@CF01041                                     01S0399 01646000
         MVI   ASNENTRY-1(@09),X'FF'                            01S0399 01647000
*                            END;                               01S0400 01648000
*                        IF KWDCOMP = OFF                       01S0401 01649000
*                          THEN        /* GET ANOTHER PARAMETER.     */ 01650000
@RC00392 TM    KWDCOMP(BUFAD),B'00000001'                       01S0401 01651000
         BNZ   @RF00401                                         01S0401 01652000
*                            DO;                                01S0402 01653000
*                              PARMNUM=PARMNUM+ONE;             01S0403 01654000
         LA    @10,1                                            01S0403 01655000
         SLR   @09,@09                                          01S0403 01656000
         IC    @09,PARMNUM(,BUFAD)                              01S0403 01657000
         ALR   @10,@09                                          01S0403 01658000
         STC   @10,PARMNUM(,BUFAD)                              01S0403 01659000
*                              CALL FINDPARM;                   01S0404 01660000
         BAL   @14,FINDPARM                                     01S0404 01661000
*                            END;                               01S0405 01662000
*                          ELSE        /* SET PARMNUM TO EXIT LOOP.  */ 01663000
*                            PARMNUM = ZERO;                    01S0406 01664000
         B     @RC00401                                         01S0406 01665000
@RF00401 MVI   PARMNUM(BUFAD),X'00'                             01S0406 01666000
*                        END;                                   01S0407 01667000
@RC00401 DS    0H                                               01S0407 01668000
@DE00391 CLI   PARMNUM(BUFAD),2                                 01S0407 01669000
         BNL   @DL00391                                         01S0407 01670000
*                      END;            /* END PARAMETER PROCESS.     */ 01671000
         LA    @10,1                                            01S0408 01672000
         SLR   @09,@09                                          01S0408 01673000
         ICM   @09,3,SCNT(BUFAD)                                01S0408 01674000
         ALR   @10,@09                                          01S0408 01675000
         STH   @10,SCNT(,BUFAD)                                 01S0408 01676000
         CH    @10,@CH00247                                     01S0408 01677000
         BNH   @DL00390                                         01S0408 01678000
@DC00390 DS    0H                                               01S0409 01679000
*                END;                  /* END VALID KEYWORD PROCESS. */ 01680000
*              ELSE                    /* KEYWORD PREVIOUSLY USED OR */ 01681000
*                EXCLKWD = ON;         /*  MUTUALLY EXCLUSIVE.       */ 01682000
         B     @RC00386                                         01S0410 01683000
@RF00386 OI    EXCLKWD(BUFAD),B'00010000'                       01S0410 01684000
*          ELSE                        /* KEYWORD NOT VALID FOR THIS */ 01685000
*            INVKWD = ON;              /*  OPERATION.                */ 01686000
         B     @RC00385                                         01S0411 01687000
@RF00385 OI    INVKWD(BUFAD),B'00100000'                        01S0411 01688000
*        GEN REFS(SAVE3)               /*                            */ 01689000
*         (L   @13,SAVE3+BACK(,BUFAD));/* RESTORE BACKWARD POINTER.  */ 01690000
@RC00385 DS    0H                                               01S0412 01691000
         L   @13,SAVE3+BACK(,BUFAD)                                     01692000
*  END REF;                            /* RETURN TO CALLER.          */ 01693000
@EL00010 DS    0H                                               01S0413 01694000
@EF00010 DS    0H                                               01S0413 01695000
@ER00010 LM    @14,@12,12(@13)                                  01S0413 01696000
         BR    @14                                              01S0413 01697000
         EJECT                                                          01698000
*/********************************************************************* 01699000
**                                                                    * 01700000
**  THIS ROUTINE WILL DETERMINE THE VALIDITY OF THE ASSIGN KEYWORD    * 01701000
**  AND ITS PARAMETERS. VALID PARAMETERS INCLUDE GROUPS OF TWO        * 01702000
**  POSSIBLE VALUES -                                                 * 01703000
**       1. AN EBCDIC ASSIGNMENT WHICH IS A TABLE REFERENCE.          * 01704000
**       2. A CHARACTER PITCH,DEFAULT IS 10.                          * 01705000
**                                                                    * 01706000
**********************************************************************/ 01707000
*ASSIGN:                                                        01S0414 01708000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0414 01709000
ASSIGN   STM   @14,@12,12(@13)                                  01S0414 01710000
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */ 01711000
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.                01712000
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.          01713000
         ST    @14,FORE(,@13)          FORWARD POINTER.                 01714000
         LR    @13,@14                 LINKAGE COMPLETE.                01715000
*        IF ASGNFLAG(ACTIVOP) = ON     /* IS KEYWORD VALID FOR       */ 01716000
*          THEN                        /*  OPERATION?                */ 01717000
         SLR   @10,@10                                          01S0416 01718000
         IC    @10,ACTIVOP(,BUFAD)                              01S0416 01719000
         MH    @10,@CH00054                                     01S0416 01720000
         ICM   @09,7,OPTABAD(BUFAD)                             01S0416 01721000
         ALR   @09,@10                                          01S0416 01722000
         AL    @09,@CF01034                                     01S0416 01723000
         TM    ASGNFLAG-2(@09),B'01000000'                      01S0416 01724000
         BNO   @RF00416                                         01S0416 01725000
*            IF ASGNSET = OFF          /* HAS KEYWORD BEEN USED OR   */ 01726000
*              THEN                    /*  IS IT MUTUALLY EXCLUSIVE? */ 01727000
         TM    ASGNSET(BUFAD),B'00000100'                       01S0417 01728000
         BNZ   @RF00417                                         01S0417 01729000
*                DO;                   /* THIS PATH FOR KEYWORD OK.  */ 01730000
*                  ASGNSET = ON;       /* SET KEYWORD USED FLAG.     */ 01731000
         OI    ASGNSET(BUFAD),B'00000100'                       01S0419 01732000
*                  CALL FINDPARM;      /* SCAN PARAMETER.            */ 01733000
         BAL   @14,FINDPARM                                     01S0420 01734000
*                      DO              /* START PARAMETER PROCESS.   */ 01735000
*                       WHILE PARMNUM  /* CONTINUE THRU ALL PARMS.   */ 01736000
*                            ^= ZERO;  /*                            */ 01737000
         B     @DE00421                                         01S0421 01738000
@DL00421 DS    0H                                               01S0422 01739000
*                        IF PARMNUM = ONE                       01S0422 01740000
*                          THEN        /* SET ASSIGNMENT.            */ 01741000
         CLI   PARMNUM(BUFAD),1                                 01S0422 01742000
         BNE   @RF00422                                         01S0422 01743000
*                            ASGNMENT = CARDDATA(ONE);          01S0423 01744000
         MVC   ASGNMENT(1,BUFAD),CARDDATA(BUFAD)                01S0423 01745000
*                          ELSE        /* SET PITCH IF VALID.        */ 01746000
*                            IF FWORK = TEN    /*                    */ 01747000
*                             | FWORK = TWELV  /*VERIFY CORRECT PITCH*/ 01748000
*                             | FWORK = FIFTN  /*  SPECIFICATION.    */ 01749000
*                              THEN            /*                    */ 01750000
         B     @RC00422                                         01S0424 01751000
@RF00422 L     @10,FWORK(,BUFAD)                                01S0424 01752000
         CH    @10,@CH00344                                     01S0424 01753000
         BE    @RT00424                                         01S0424 01754000
         CH    @10,@CH00033                                     01S0424 01755000
         BE    @RT00424                                         01S0424 01756000
         CH    @10,@CH00157                                     01S0424 01757000
         BNE   @RF00424                                         01S0424 01758000
@RT00424 DS    0H                                               01S0425 01759000
*                                PITCH = FWORK;/* SET PITCH.         */ 01760000
         MVC   PITCH(1,BUFAD),FWORK+3(BUFAD)                    01S0425 01761000
*                              ELSE            /* SPECIFICATION      */ 01762000
*                                INVPARM = ON; /* IS INVALID.        */ 01763000
         B     @RC00424                                         01S0426 01764000
@RF00424 OI    INVPARM(BUFAD),B'00001000'                       01S0426 01765000
*                        IF KWDCOMP = OFF                       01S0427 01766000
*                          THEN        /* GET ANOTHER PARAMETER.     */ 01767000
@RC00424 DS    0H                                               01S0427 01768000
@RC00422 TM    KWDCOMP(BUFAD),B'00000001'                       01S0427 01769000
         BNZ   @RF00427                                         01S0427 01770000
*                            DO;                                01S0428 01771000
*                              PARMNUM=PARMNUM+ONE;             01S0429 01772000
         LA    @10,1                                            01S0429 01773000
         SLR   @09,@09                                          01S0429 01774000
         IC    @09,PARMNUM(,BUFAD)                              01S0429 01775000
         ALR   @10,@09                                          01S0429 01776000
         STC   @10,PARMNUM(,BUFAD)                              01S0429 01777000
*                              CALL FINDPARM;                   01S0430 01778000
         BAL   @14,FINDPARM                                     01S0430 01779000
*                            END;                               01S0431 01780000
*                          ELSE        /* SET PARMNUM TO EXIT LOOP.  */ 01781000
*                            PARMNUM = ZERO;                    01S0432 01782000
         B     @RC00427                                         01S0432 01783000
@RF00427 MVI   PARMNUM(BUFAD),X'00'                             01S0432 01784000
*                      END;            /* END PARAMETER PROCESS.     */ 01785000
@RC00427 DS    0H                                               01S0433 01786000
@DE00421 CLI   PARMNUM(BUFAD),0                                 01S0433 01787000
         BNE   @DL00421                                         01S0433 01788000
*                END;                  /* END VALID KEYWORD PROCESS. */ 01789000
*              ELSE                    /* KEYWORD PREVIOUSLY USED OR */ 01790000
*                EXCLKWD = ON;         /*  MUTUALLY EXCLUSIVE.       */ 01791000
         B     @RC00417                                         01S0435 01792000
@RF00417 OI    EXCLKWD(BUFAD),B'00010000'                       01S0435 01793000
*          ELSE                        /* KEYWORD NOT VALID FOR THIS */ 01794000
*            INVKWD = ON;              /*  OPERATION.                */ 01795000
         B     @RC00416                                         01S0436 01796000
@RF00416 OI    INVKWD(BUFAD),B'00100000'                        01S0436 01797000
*        GEN REFS(SAVE3)               /*                            */ 01798000
*         (L   @13,SAVE3+BACK(,BUFAD));/* RESTORE BACKWARD POINTER.  */ 01799000
@RC00416 DS    0H                                               01S0437 01800000
         L   @13,SAVE3+BACK(,BUFAD)                                     01801000
*  END ASSIGN;                         /* RETURN TO CALLER.          */ 01802000
@EL00011 DS    0H                                               01S0438 01803000
@EF00011 DS    0H                                               01S0438 01804000
@ER00011 LM    @14,@12,12(@13)                                  01S0438 01805000
         BR    @14                                              01S0438 01806000
         EJECT                                                          01807000
*/********************************************************************* 01808000
**                                                                    * 01809000
**  THIS ROUTINE WILL DETERMINE THE VALIDITY OF THE GCMLIST KEYWORD   * 01810000
**  AND ITS PARAMETERS. THE VALUES WILL BE PLACED IN A TABLE FOR      * 01811000
**  FUTURE USE BY THE CALLING OPERATION.                              * 01812000
**                                                                    * 01813000
**********************************************************************/ 01814000
*GCMLIST:                                                       01S0439 01815000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0439 01816000
GCMLIST  STM   @14,@12,12(@13)                                  01S0439 01817000
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */ 01818000
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.                01819000
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.          01820000
         ST    @14,FORE(,@13)          FORWARD POINTER.                 01821000
         LR    @13,@14                 LINKAGE COMPLETE.                01822000
*        IF GCMLFLAG(ACTIVOP) = ON     /* IS LPI VALID THIS OPERATION*/ 01823000
*          THEN                        /* YES,                       */ 01824000
         SLR   @10,@10                                          01S0441 01825000
         IC    @10,ACTIVOP(,BUFAD)                              01S0441 01826000
         MH    @10,@CH00054                                     01S0441 01827000
         ICM   @09,7,OPTABAD(BUFAD)                             01S0441 01828000
         ALR   @09,@10                                          01S0441 01829000
         AL    @09,@CF01034                                     01S0441 01830000
         TM    GCMLFLAG-2(@09),B'00000100'                      01S0441 01831000
         BNO   @RF00441                                         01S0441 01832000
*            IF GCMLSET = OFF          /* HAS LPI BEEN USED PREVIOUS?*/ 01833000
*              THEN                    /* NO,                        */ 01834000
         TM    GCMLSET(BUFAD),B'00000100'                       01S0442 01835000
         BNZ   @RF00442                                         01S0442 01836000
*                DO;                   /* START ANALYSIS             */ 01837000
*                  GCMLSET = ON;       /* INDICATE LPI KEYWORD USED. */ 01838000
         OI    GCMLSET(BUFAD),B'00000100'                       01S0444 01839000
*                  GRFMODS = BLAN;     /* BLANK GRAFMOD NAMES.       */ 01840000
         MVI   GRFMODS+1(BUFAD),C' '                            01S0445 01841000
         MVC   GRFMODS+2(14,BUFAD),GRFMODS+1(BUFAD)             01S0445 01842000
         MVI   GRFMODS(BUFAD),C' '                              01S0445 01843000
*                  CALL FINDPARM;      /* SCAN CARD                  */ 01844000
         BAL   @14,FINDPARM                                     01S0446 01845000
*                      DO              /* START PARAMETER SCAN.      */ 01846000
*                       GCNT = ONE     /* PUT GCM NAMES IN TEMP AREA.*/ 01847000
*                       TO DIM(GRAFMODN)  /*                         */ 01848000
*                       WHILE PARMNUM ^= ZERO;    /*                 */ 01849000
         LA    GCNT,1                                           01S0447 01850000
@DL00447 CLI   PARMNUM(BUFAD),0                                 01S0447 01851000
         BE    @DC00447                                         01S0447 01852000
*                        IF PARMSIZE ^= ZERO /* CHECK FOR PARAMETER. */ 01853000
*                          THEN                                 01S0448 01854000
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0448 01855000
         BZ    @RF00448                                         01S0448 01856000
*                              IF PARMSIZE = SIX                01S0449 01857000
*                               & CARDDATA(ONE:PARMSIZE) = DELETE       01858000
*                               & GCNT = ONE                    01S0449 01859000
*                                THEN  /* 1ST PARM CAN BE DELETE.    */ 01860000
         SLR   @10,@10                                          01S0449 01861000
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0449 01862000
         CH    @10,@CH00187                                     01S0449 01863000
         BNE   @RF00449                                         01S0449 01864000
         BCTR  @10,0                                            01S0449 01865000
         EX    @10,@SC01042                                     01S0449 01866000
         BNE   @RF00449                                         01S0449 01867000
         CH    GCNT,@CH00061                                    01S0449 01868000
         BNE   @RF00449                                         01S0449 01869000
*                                  PARMNUM = TWO;/* ALLOW NO MORE.   */ 01870000
         MVI   PARMNUM(BUFAD),X'02'                             01S0450 01871000
*                                ELSE  /* NAMES ARE ONLY FOUR CHARS. */ 01872000
*                                  IF PARMSIZE > FOUR           01S0451 01873000
*                                    THEN /* BAD PARM, SKIP IT.      */ 01874000
         B     @RC00449                                         01S0451 01875000
@RF00449 CLC   PARMSIZE(2,BUFAD),@CH00051                       01S0451 01876000
         BNH   @RF00451                                         01S0451 01877000
*                                      INVPARM = ON;            01S0452 01878000
         OI    INVPARM(BUFAD),B'00001000'                       01S0452 01879000
*                                    ELSE /* GOOD PARM, SAVE IT.     */ 01880000
*                                      GRAFMODN(GCNT)           01S0453 01881000
*                                       =CARDDATA(ONE:PARMSIZE);        01882000
         B     @RC00451                                         01S0453 01883000
@RF00451 LR    @10,GCNT                                         01S0453 01884000
         SLA   @10,2                                            01S0453 01885000
         ALR   @10,BUFAD                                        01S0453 01886000
         MVI   GRAFMODN-3(@10),C' '                             01S0453 01887000
         MVC   GRAFMODN-2(2,@10),GRAFMODN-3(@10)                01S0453 01888000
         SLR   @09,@09                                          01S0453 01889000
         ICM   @09,3,PARMSIZE(BUFAD)                            01S0453 01890000
         BCTR  @09,0                                            01S0453 01891000
         EX    @09,@SM01044                                     01S0453 01892000
*                                ELSE  /* SHOULD NOT HAVE 0 PARMSIZE */ 01893000
*                                  INVPARM = ON;                01S0454 01894000
         B     @RC00448                                         01S0454 01895000
@RF00448 OI    INVPARM(BUFAD),B'00001000'                       01S0454 01896000
*                              IF KWDCOMP = OFF                 01S0455 01897000
*                                THEN  /* MORE PARMS FOLLOW.         */ 01898000
@RC00448 TM    KWDCOMP(BUFAD),B'00000001'                       01S0455 01899000
         BNZ   @RF00455                                         01S0455 01900000
*                                  CALL FINDPARM;               01S0456 01901000
         BAL   @14,FINDPARM                                     01S0456 01902000
*                                ELSE  /* END PARAMETER FETCH.       */ 01903000
*                                  PARMNUM = ZERO;              01S0457 01904000
         B     @RC00455                                         01S0457 01905000
@RF00455 MVI   PARMNUM(BUFAD),X'00'                             01S0457 01906000
*                            END;      /* END PARAMETER FETCH LOOP.  */ 01907000
@RC00455 AH    GCNT,@CH00061                                    01S0458 01908000
         CH    GCNT,@CH00051                                    01S0458 01909000
         BNH   @DL00447                                         01S0458 01910000
@DC00447 DS    0H                                               01S0459 01911000
*                END;                  /* END PARAMETER ANALYSIS.    */ 01912000
*              ELSE                    /* KEYWORD HAS BEEN           */ 01913000
*                EXCLKWD = ON;         /*  USED BEFORE.              */ 01914000
         B     @RC00442                                         01S0460 01915000
@RF00442 OI    EXCLKWD(BUFAD),B'00010000'                       01S0460 01916000
*          ELSE                        /* KEYWORD NOT VALID FOR      */ 01917000
*            INVKWD = ON;              /*  THIS OPERATION.           */ 01918000
         B     @RC00441                                         01S0461 01919000
@RF00441 OI    INVKWD(BUFAD),B'00100000'                        01S0461 01920000
*        GEN REFS(SAVE3)               /*                            */ 01921000
*         (L  @13,SAVE3+BACK(,BUFAD)); /* RESTORE BACKWARD POINTER.  */ 01922000
@RC00441 DS    0H                                               01S0462 01923000
         L  @13,SAVE3+BACK(,BUFAD)                                      01924000
*   END GCMLIST;                       /* RETURN TO CALLER.          */ 01925000
@EL00012 DS    0H                                               01S0463 01926000
@EF00012 DS    0H                                               01S0463 01927000
@ER00012 LM    @14,@12,12(@13)                                  01S0463 01928000
         BR    @14                                              01S0463 01929000
         EJECT                                                          01930000
*/********************************************************************* 01931000
**                                                                    * 01932000
**  THIS ROUTINE WILL DETERMINE THE VALIDITY OF THE CGMID KEYWORD AND * 01933000
**  ITS PARAMETERS. THE VALUES WILL BE PLACED IN A TABLE FOR FUTURE   * 01934000
**  USE BY THE CALLING OPERATION.                                     * 01935000
**                                                                    * 01936000
**********************************************************************/ 01937000
*CGMID:                                                         01S0464 01938000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0464 01939000
CGMID    STM   @14,@12,12(@13)                                  01S0464 01940000
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */ 01941000
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.                01942000
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.          01943000
         ST    @14,FORE(,@13)          FORWARD POINTER.                 01944000
         LR    @13,@14                 LINKAGE COMPLETE.                01945000
*        IF CGMIDFLG(ACTIVOP) = ON     /* IS KWD VALID THIS OPERATION*/ 01946000
*          THEN                        /* YES,                       */ 01947000
         SLR   @10,@10                                          01S0466 01948000
         IC    @10,ACTIVOP(,BUFAD)                              01S0466 01949000
         MH    @10,@CH00054                                     01S0466 01950000
         ICM   @09,7,OPTABAD(BUFAD)                             01S0466 01951000
         ALR   @09,@10                                          01S0466 01952000
         AL    @09,@CF01034                                     01S0466 01953000
         TM    CGMIDFLG-2(@09),B'00000001'                      01S0466 01954000
         BNO   @RF00466                                         01S0466 01955000
*            IF CGMIDSET = OFF         /* HAS KWD BEEN USED PREVIOUS?*/ 01956000
*              THEN                    /* NO,                        */ 01957000
         TM    CGMIDSET(BUFAD),B'00001000'                      01S0467 01958000
         BNZ   @RF00467                                         01S0467 01959000
*                DO;                   /* START ANALYSIS             */ 01960000
*                  CGMIDSET = ON;      /* INDICATE KEYWORD USED.     */ 01961000
         OI    CGMIDSET(BUFAD),B'00001000'                      01S0469 01962000
*                                      /* ZERO CGMID AREA.           */ 01963000
*                  CGMIDALL = CGMIDALL && CGMIDALL;             01S0470 01964000
         XC    CGMIDALL(8,BUFAD),CGMIDALL(BUFAD)                01S0470 01965000
*                  CALL FINDPARM;      /* SCAN CARD                  */ 01966000
         BAL   @14,FINDPARM                                     01S0471 01967000
*                      DO              /* START PARAMETER SCAN.      */ 01968000
*                       GCNT = ONE     /* FILL CGMID LIST.           */ 01969000
*                       TO DIM(CGMIDX) /*                            */ 01970000
*                       WHILE PARMNUM ^= ZERO;    /*                 */ 01971000
         LA    GCNT,1                                           01S0472 01972000
@DL00472 CLI   PARMNUM(BUFAD),0                                 01S0472 01973000
         BE    @DC00472                                         01S0472 01974000
*                        IF PARMSIZE ^= ZERO /* CHECK FOR PARAMETER. */ 01975000
*                         & CARDDATA(ONE) ^= ZERO               01S0473 01976000
*                          THEN        /* GOOD PARAMETER.            */ 01977000
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0473 01978000
         BZ    @RF00473                                         01S0473 01979000
         SLR   @10,@10                                          01S0473 01980000
         IC    @10,CARDDATA(,BUFAD)                             01S0473 01981000
         LTR   @10,@10                                          01S0473 01982000
         BZ    @RF00473                                         01S0473 01983000
*                            DO                   /*                 */ 01984000
*                              CGMIDN(GCNT)       /* SET CGMID.      */ 01985000
*                               =CARDDATA(ONE);   /*                 */ 01986000
         LR    @09,GCNT                                         01S0474 01987000
         ALR   @09,@09                                          01S0474 01988000
         STC   @10,CGMIDN-2(@09,BUFAD)                          01S0474 01989000
*                              CGMIDNO(GCNT)      /* SET CGMID ORDER.*/ 01990000
*                               =GCNT-ONE;        /*                 */ 01991000
         LR    @10,GCNT                                         01S0475 01992000
         ALR   @10,@10                                          01S0475 01993000
         LR    @09,GCNT                                         01S0475 01994000
         BCTR  @09,0                                            01S0475 01995000
         STC   @09,CGMIDNO-2(@10,BUFAD)                         01S0475 01996000
*                              IF KWDCOMP = OFF   /* CHECK KEYWORD   */ 01997000
*                                THEN             /*  COMPLETE.      */ 01998000
         TM    KWDCOMP(BUFAD),B'00000001'                       01S0476 01999000
         BNZ   @RF00476                                         01S0476 02000000
*                                  CALL FINDPARM; /* GET ANOTHER.    */ 02001000
         BAL   @14,FINDPARM                                     01S0477 02002000
*                                ELSE             /*                 */ 02003000
*                                  PARMNUM = ZERO;/* END PARM PROCESS*/ 02004000
         B     @RC00476                                         01S0478 02005000
@RF00476 MVI   PARMNUM(BUFAD),X'00'                             01S0478 02006000
*                            END;                               01S0479 02007000
@RC00476 DS    0H                                               01S0480 02008000
*                      END;            /*                            */ 02009000
@RF00473 AH    GCNT,@CH00061                                    01S0480 02010000
         CH    GCNT,@CH00051                                    01S0480 02011000
         BNH   @DL00472                                         01S0480 02012000
@DC00472 DS    0H                                               01S0481 02013000
*                END;                  /* END PARAMETER ANALYSIS.    */ 02014000
*              ELSE                    /* KEYWORD HAS BEEN           */ 02015000
*                EXCLKWD = ON;         /*  USED BEFORE.              */ 02016000
         B     @RC00467                                         01S0482 02017000
@RF00467 OI    EXCLKWD(BUFAD),B'00010000'                       01S0482 02018000
*          ELSE                        /* KEYWORD NOT VALID FOR      */ 02019000
*            INVKWD = ON;              /*  THIS OPERATION.           */ 02020000
         B     @RC00466                                         01S0483 02021000
@RF00466 OI    INVKWD(BUFAD),B'00100000'                        01S0483 02022000
*        GEN REFS(SAVE3)               /*                            */ 02023000
*         (L  @13,SAVE3+BACK(,BUFAD)); /* RESTORE BACKWARD POINTER.  */ 02024000
@RC00466 DS    0H                                               01S0484 02025000
         L  @13,SAVE3+BACK(,BUFAD)                                      02026000
*  END CGMID;                          /* RETURN TO CALLER.          */ 02027000
@EL00013 DS    0H                                               01S0485 02028000
@EF00013 DS    0H                                               01S0485 02029000
@ER00013 LM    @14,@12,12(@13)                                  01S0485 02030000
         BR    @14                                              01S0485 02031000
         EJECT                                                          02032000
*/********************************************************************* 02033000
**                                                                    * 02034000
**  THIS ROUTINE WILL DETERMINE THE VALIDITY OF THE LPI KEYWORD AND   * 02035000
**  ITS PARAMETERS. THE VALUES WILL BE PLACED IN A TABLE FOR FUTURE   * 02036000
**  USE BY THE CALLING OPERATION.                                     * 02037000
**                                                                    * 02038000
**********************************************************************/ 02039000
*LPI:                                                           01S0486 02040000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0486 02041000
LPI      STM   @14,@12,12(@13)                                  01S0486 02042000
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */ 02043000
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.                02044000
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.          02045000
         ST    @14,FORE(,@13)          FORWARD POINTER.                 02046000
         LR    @13,@14                 LINKAGE COMPLETE.                02047000
*        IF LPIFLAG(ACTIVOP) = ON      /* IS LPI VALID THIS OPERATION*/ 02048000
*          THEN                        /* YES,                       */ 02049000
         SLR   @10,@10                                          01S0488 02050000
         IC    @10,ACTIVOP(,BUFAD)                              01S0488 02051000
         MH    @10,@CH00054                                     01S0488 02052000
         ICM   @09,7,OPTABAD(BUFAD)                             01S0488 02053000
         ALR   @09,@10                                          01S0488 02054000
         AL    @09,@CF01039                                     01S0488 02055000
         TM    LPIFLAG-1(@09),B'01000000'                       01S0488 02056000
         BNO   @RF00488                                         01S0488 02057000
*            IF LPISET = OFF           /* HAS LPI BEEN USED PREVIOUS?*/ 02058000
*              THEN                    /* NO,                        */ 02059000
         TM    LPISET(BUFAD),B'00010000'                        01S0489 02060000
         BNZ   @RF00489                                         01S0489 02061000
*                DO;                   /* START ANALYSIS             */ 02062000
*                  LPISET = ON;        /* INDICATE LPI KEYWORD USED. */ 02063000
         OI    LPISET(BUFAD),B'00010000'                        01S0491 02064000
*                  CALL FINDPARM;      /* SCAN CARD                  */ 02065000
         BAL   @14,FINDPARM                                     01S0492 02066000
*                      DO              /* START PARAMETER SCAN.      */ 02067000
*                       SCNT = ONE                /* INIT SCAN ARRAY */ 02068000
*                       TO DIM(SCANARY)           /*  COUNTER.       */ 02069000
*                       WHILE PARMNUM ^= ZERO;    /*                 */ 02070000
         LA    @10,1                                            01S0493 02071000
         STH   @10,SCNT(,BUFAD)                                 01S0493 02072000
@DL00493 CLI   PARMNUM(BUFAD),0                                 01S0493 02073000
         BE    @DC00493                                         01S0493 02074000
*                        SCANARY(SCNT,TWO)=ZERO;                01S0494 02075000
         SLR   @10,@10                                          01S0494 02076000
         ICM   @10,3,SCNT(BUFAD)                                01S0494 02077000
         SLA   @10,2                                            01S0494 02078000
         SLR   @09,@09                                          01S0494 02079000
         STC   @09,SCANARY-3(@10,BUFAD)                         01S0494 02080000
*                        IF PARMSIZE ^= ZERO /* CHECK FOR PARAMETER. */ 02081000
*                          THEN        /* HANDLE THIS PARAMETER.     */ 02082000
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0495 02083000
         BZ    @RF00495                                         01S0495 02084000
*                            DO                     /*               */ 02085000
*                             UNTIL PARMNUM=<ONE;   /*EXIT AT GRP END*/ 02086000
@DL00496 DS    0H                                               01S0497 02087000
*                              SCANARY(SCNT,PARMNUM)/*               */ 02088000
*                               =FWORK;             /* SET LPI.      */ 02089000
         SLR   @10,@10                                          01S0497 02090000
         ICM   @10,3,SCNT(BUFAD)                                01S0497 02091000
         SLA   @10,2                                            01S0497 02092000
         SLR   @09,@09                                          01S0497 02093000
         IC    @09,PARMNUM(,BUFAD)                              01S0497 02094000
         ALR   @10,@09                                          01S0497 02095000
         L     @15,FWORK(,BUFAD)                                01S0497 02096000
         STC   @15,SCANARY-5(@10,BUFAD)                         01S0497 02097000
*                              PARMNUM=PARMNUM+ONE; /* INCR PARM NO. */ 02098000
         AH    @09,@CH00061                                     01S0498 02099000
         STC   @09,PARMNUM(,BUFAD)                              01S0498 02100000
*                              IF KWDCOMP = OFF     /* CHECK KEYWORD */ 02101000
*                                THEN               /*  COMPLETE.    */ 02102000
         TM    KWDCOMP(BUFAD),B'00000001'                       01S0499 02103000
         BNZ   @RF00499                                         01S0499 02104000
*                                  CALL FINDPARM;   /* GET ANOTHER.  */ 02105000
         BAL   @14,FINDPARM                                     01S0500 02106000
*                                ELSE               /* END           */ 02107000
*                                  PARMNUM = ZERO;  /*  PARM PROCESS.*/ 02108000
         B     @RC00499                                         01S0501 02109000
@RF00499 MVI   PARMNUM(BUFAD),X'00'                             01S0501 02110000
*                            END;      /*                            */ 02111000
@RC00499 DS    0H                                               01S0502 02112000
@DE00496 CLI   PARMNUM(BUFAD),1                                 01S0502 02113000
         BH    @DL00496                                         01S0502 02114000
*                      END;            /*                            */ 02115000
@RF00495 LA    @10,1                                            01S0503 02116000
         SLR   @09,@09                                          01S0503 02117000
         ICM   @09,3,SCNT(BUFAD)                                01S0503 02118000
         ALR   @10,@09                                          01S0503 02119000
         STH   @10,SCNT(,BUFAD)                                 01S0503 02120000
         CH    @10,@CH00220                                     01S0503 02121000
         BNH   @DL00493                                         01S0503 02122000
@DC00493 DS    0H                                               01S0504 02123000
*                END;                  /* END PARAMETER ANALYSIS.    */ 02124000
*              ELSE                    /* KEYWORD HAS BEEN           */ 02125000
*                EXCLKWD = ON;         /*  USED BEFORE.              */ 02126000
         B     @RC00489                                         01S0505 02127000
@RF00489 OI    EXCLKWD(BUFAD),B'00010000'                       01S0505 02128000
*          ELSE                        /* KEYWORD NOT VALID FOR      */ 02129000
*            INVKWD = ON;              /*  THIS OPERATION.           */ 02130000
         B     @RC00488                                         01S0506 02131000
@RF00488 OI    INVKWD(BUFAD),B'00100000'                        01S0506 02132000
*        GEN REFS(SAVE3)               /*                            */ 02133000
*         (L  @13,SAVE3+BACK(,BUFAD)); /* RESTORE BACKWARD POINTER.  */ 02134000
@RC00488 DS    0H                                               01S0507 02135000
         L  @13,SAVE3+BACK(,BUFAD)                                      02136000
*   END LPI;                           /* RETURN TO CALLER.          */ 02137000
@EL00014 DS    0H                                               01S0508 02138000
@EF00014 DS    0H                                               01S0508 02139000
@ER00014 LM    @14,@12,12(@13)                                  01S0508 02140000
         BR    @14                                              01S0508 02141000
         EJECT                                                          02142000
*/********************************************************************* 02143000
**                                                                    * 02144000
**  THIS ROUTINE WILL ACCEPT PARAMETERS FOR THE TEXT KEYWORD. VALID   * 02145000
**  PARAMETERS ARE A DUPLICATION FACTOR OF 0 - 204 FOLLOWED BY THE    * 02146000
**  TEXT STRING TYPE, X OR C, AND THE TEXT STRING                     * 02147000
**********************************************************************/ 02148000
*TEXT:                                                          01S0509 02149000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0509 02150000
TEXT     STM   @14,@12,12(@13)                                  01S0509 02151000
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */ 02152000
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.                02153000
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.          02154000
         ST    @14,FORE(,@13)          FORWARD POINTER.                 02155000
         LR    @13,@14                 LINKAGE COMPLETE.                02156000
*        IF TEXTFLAG(ACTIVOP) = ON     /* CHECK FOR VALID KEYWORD    */ 02157000
*          THEN                        /*  THIS OPERATION.           */ 02158000
         SLR   @10,@10                                          01S0511 02159000
         IC    @10,ACTIVOP(,BUFAD)                              01S0511 02160000
         MH    @10,@CH00054                                     01S0511 02161000
         ICM   @09,7,OPTABAD(BUFAD)                             01S0511 02162000
         ALR   @09,@10                                          01S0511 02163000
         AL    @09,@CF01039                                     01S0511 02164000
         TM    TEXTFLAG-1(@09),B'00000001'                      01S0511 02165000
         BNO   @RF00511                                         01S0511 02166000
*            IF TEXTSET = OFF          /* CHECK FOR DUPLICATE        */ 02167000
*              THEN                    /*  KEYWORD THIS OPERATION    */ 02168000
         TM    TEXTSET(BUFAD),B'00000010'                       01S0512 02169000
         BNZ   @RF00512                                         01S0512 02170000
*                DO;                   /* GOOD KEYWORD, PROCESS.     */ 02171000
*                  TEXTSET = ON;       /* INDICATE KEYWORD USED.     */ 02172000
         OI    TEXTSET(BUFAD),B'00000010'                       01S0514 02173000
*                  RESPECIFY           /*                            */ 02174000
*                   (BUFFPTR) RESTRICTED;                       01S0515 02175000
*                  BUFFPTR = ADDR(TEXTD);/* INITIALIZE TEXT AREA ADDR*/ 02176000
         LA    BUFFPTR,TEXTD+796(,BUFAD)                        01S0516 02177000
*                  CALL FINDPARM;      /* GET A PARAMETER.           */ 02178000
         BAL   @14,FINDPARM                                     01S0517 02179000
*                  DO                  /* START PARAMETER PROCESS.   */ 02180000
*                   WHILE PARMNUM ^= ZERO;                      01S0518 02181000
         B     @DE00518                                         01S0518 02182000
@DL00518 DS    0H                                               01S0519 02183000
*                    IF PARMNUM = ONE  /* CHECK FOR PRESENCE OF      */ 02184000
*                      THEN            /*  PARAMETER ONE.            */ 02185000
         CLI   PARMNUM(BUFAD),1                                 01S0519 02186000
         BNE   @RF00519                                         01S0519 02187000
*                        DO;           /* GOT ONE                    */ 02188000
*                          FIELDT      /* SAVE TEXT STRING TYPE.     */ 02189000
*                           = CARDDATA(PARMSIZE);               01S0521 02190000
         SLR   @10,@10                                          01S0521 02191000
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0521 02192000
         SLR   @09,@09                                          01S0521 02193000
         IC    @09,CARDDATA-1(@10,BUFAD)                        01S0521 02194000
         STC   @09,FIELDT(,BUFAD)                               01S0521 02195000
*                          IF PARMSIZE > ONE                    01S0522 02196000
*                            THEN      /* CHECK FOR PRESENCE OF      */ 02197000
         CH    @10,@CH00061                                     01S0522 02198000
         BNH   @RF00522                                         01S0522 02199000
*                              DO;     /*  DUPLICATION FACTOR.       */ 02200000
*                                PARMSIZE = PARMSIZE - ONE;     01S0524 02201000
         BCTR  @10,0                                            01S0524 02202000
         STH   @10,PARMSIZE(,BUFAD)                             01S0524 02203000
*                                CALL  /* CONVERT DUP FACTOR.        */ 02204000
*                                  CONVERT;                     01S0525 02205000
         BAL   @14,CONVERT                                      01S0525 02206000
*                                IF INVPARM = OFF /* CHECK FOR ERROR */ 02207000
*                                  THEN /* SAVE DUPLICATION FACTOR.  */ 02208000
         TM    INVPARM(BUFAD),B'00001000'                       01S0526 02209000
         BNZ   @RF00526                                         01S0526 02210000
*                                    FIELDL = FWORK;            01S0527 02211000
         MVC   FIELDL(1,BUFAD),FWORK+3(BUFAD)                   01S0527 02212000
*                                  ELSE /* SET DUP FACTOR TO ONE.    */ 02213000
*                                    FIELDL = ONE;              01S0528 02214000
         B     @RC00526                                         01S0528 02215000
@RF00526 MVI   FIELDL(BUFAD),X'01'                              01S0528 02216000
*                              END;    /*                            */ 02217000
*                            ELSE      /* SET DUP FACTOR TO ONE.     */ 02218000
*                              FIELDL = ONE;                    01S0530 02219000
         B     @RC00522                                         01S0530 02220000
@RF00522 MVI   FIELDL(BUFAD),X'01'                              01S0530 02221000
*/********************************************************************* 02222000
**                                                                    * 02223000
**  THIS SEGMENT HANDLES THE TEXT DATA PARAMETER OF THE TEXT KEYWORD. * 02224000
**                                                                    * 02225000
**********************************************************************/ 02226000
*        DO;                           /* PLACE TEXT IN SCAN BUFFER. */ 02227000
@RC00522 DS    0H                                               02S0532 02228000
*/********************************************************************* 02229000
**                                                                    * 02230000
**  THIS SEGMENT SCANS THE DATA PORTION OF THE TEXT KEYWORD. DATA     * 02231000
**  DELIMITERS ARE SINGLE QUOTE MARKS. DOUBLE QUOTES ARE REDUCED TO   * 02232000
**  A SINGLE QUOTE AND NOT USED AS A DELIMITER.                       * 02233000
**                                                                    * 02234000
**********************************************************************/ 02235000
*        LASTQ = OFF;                  /* RESET LAST QUOTE INDICATOR.*/ 02236000
         NI    LASTQ(BUFAD),B'11111110'                         03S0532 02237000
*        PARMNUM = TWO;                /* INDICATE SECOND PARAMETER  */ 02238000
         MVI   PARMNUM(BUFAD),X'02'                             03S0533 02239000
*        PARMSIZE = ZERO;              /*  AND ZERO SIZE             */ 02240000
         SLR   @10,@10                                          03S0534 02241000
         STH   @10,PARMSIZE(,BUFAD)                             03S0534 02242000
*        IF COL(ONE) = QUOTE           /* FIRST COLUMN NEEDS A       */ 02243000
*          THEN                        /*  QUOTATION MARK.           */ 02244000
         ICM   @10,7,CC(BUFAD)                                  03S0535 02245000
         CLI   COL(@10),C''''                                   03S0535 02246000
         BNE   @RF00535                                         03S0535 02247000
*            DO;                       /*                            */ 02248000
*              PRECOL = NOQUOTE;       /* PRESET MULTI QUOTE IND.    */ 02249000
         MVI   PRECOL(BUFAD),X'FF'                              03S0537 02250000
*              DO                      /* START TEXT SCAN            */ 02251000
*               UNTIL LASTQ = ON       /* GO TO SINGLE QUOTE         */ 02252000
*                   | PARMSIZE => LENGTH(CARDDATA)              03S0538 02253000
*                   | (CONTINUE = OFF  /* STOP IF STATEMENT EXCEEDED.*/ 02254000
*                    & CC => CARDEND); /*  OR BUFFER FULL.           */ 02255000
@DL00538 DS    0H                                               03S0539 02256000
*                CC = CC + ONE;        /* INCR CARD COLUMN POINTER.  */ 02257000
         LA    @10,1                                            03S0539 02258000
         SLR   @09,@09                                          03S0539 02259000
         ICM   @09,7,CC(BUFAD)                                  03S0539 02260000
         ALR   @10,@09                                          03S0539 02261000
         STCM  @10,7,CC(BUFAD)                                  03S0539 02262000
*                IF CONTINUE = ON      /* CHECK FOR NEED OF          */ 02263000
*                 & CC = CARDEND       /*  CONTINUATION CARD.        */ 02264000
*                  THEN                /*                            */ 02265000
         TM    CONTINUE(BUFAD),B'00001000'                      03S0540 02266000
         BNO   @RF00540                                         03S0540 02267000
         C     @10,CARDEND(,BUFAD)                              03S0540 02268000
         BNE   @RF00540                                         03S0540 02269000
*                    CALL GETCARDN;    /* GET ANOTHER CARD.          */ 02270000
         BAL   @14,GETCARDN                                     03S0541 02271000
*                  ELSE;               /*                            */ 02272000
@RF00540 DS    0H                                               03S0543 02273000
*                IF PRECOL = QUOTE     /* CHECK FOR PREVIOUS QUOTE.  */ 02274000
*                  THEN                /* CHECK FOR DOUBLE QUOTE.    */ 02275000
         CLI   PRECOL(BUFAD),C''''                              03S0543 02276000
         BNE   @RF00543                                         03S0543 02277000
*                    IF COL(ONE) ^= QUOTE                       03S0544 02278000
*                      THEN            /* SINGLE QUOTE.              */ 02279000
         ICM   @10,7,CC(BUFAD)                                  03S0544 02280000
         CLI   COL(@10),C''''                                   03S0544 02281000
         BE    @RF00544                                         03S0544 02282000
*                        LASTQ = ON;   /* END OF TEXT STRING.        */ 02283000
         OI    LASTQ(BUFAD),B'00000001'                         03S0545 02284000
*                      ELSE            /* DOUBLE QUOTE, RESET IND.   */ 02285000
*                        PRECOL = NOQUOTE;                      03S0546 02286000
         B     @RC00544                                         03S0546 02287000
@RF00544 MVI   PRECOL(BUFAD),X'FF'                              03S0546 02288000
*                  ELSE                /* NO PREVIOUS QUOTE.         */ 02289000
*                    DO;               /*                            */ 02290000
         B     @RC00543                                         03S0547 02291000
@RF00543 DS    0H                                               03S0548 02292000
*                      PARMSIZE = PARMSIZE + ONE;/* INCR FIELD SIZE. */ 02293000
         LA    @10,1                                            03S0548 02294000
         SLR   @09,@09                                          03S0548 02295000
         ICM   @09,3,PARMSIZE(BUFAD)                            03S0548 02296000
         ALR   @10,@09                                          03S0548 02297000
         STH   @10,PARMSIZE(,BUFAD)                             03S0548 02298000
*                      IF COL(ONE) = ALBIT /* (FF) TEST.             */ 02299000
*                       & FIELDT = CHARC   /* CHARACTER FORM ONLY.   */ 02300000
*                        THEN              /*                        */ 02301000
         ICM   @10,7,CC(BUFAD)                                  03S0549 02302000
         CLI   COL(@10),X'FF'                                   03S0549 02303000
         BNE   @RF00549                                         03S0549 02304000
         CLI   FIELDT(BUFAD),195                                03S0549 02305000
         BNE   @RF00549                                         03S0549 02306000
*                          HEXERR = ON;    /* REMEMBER ERROR.        */ 02307000
         OI    HEXERR(BUFAD),B'00010000'                        03S0550 02308000
*                        ELSE              /*                        */ 02309000
*                          SCANBUF = COL(ONE);/* SET CHAR IN BUFF.   */ 02310000
         B     @RC00549                                         03S0551 02311000
@RF00549 LA    @10,CARDDATA(,BUFAD)                             03S0551 02312000
         BCTR  @10,0                                            03S0551 02313000
         SLR   @09,@09                                          03S0551 02314000
         ICM   @09,3,PARMSIZE(BUFAD)                            03S0551 02315000
         ALR   @10,@09                                          03S0551 02316000
         ICM   @09,7,CC(BUFAD)                                  03S0551 02317000
         MVC   SCANBUF(1,@10),COL(@09)                          03S0551 02318000
*                      IF COL(ONE) = QUOTE /*                        */ 02319000
*                        THEN          /* SET PREVIOUS IF QUOTE.     */ 02320000
@RC00549 ICM   @10,7,CC(BUFAD)                                  03S0552 02321000
         CLI   COL(@10),C''''                                   03S0552 02322000
         BNE   @RF00552                                         03S0552 02323000
*                          PRECOL = QUOTE;                      03S0553 02324000
         MVI   PRECOL(BUFAD),C''''                              03S0553 02325000
*                        ELSE;         /*                            */ 02326000
@RF00552 DS    0H                                               03S0555 02327000
*                      END;            /*                            */ 02328000
*              END;                    /* END OF TEXT SCAN.          */ 02329000
@RC00543 DS    0H                                               03S0556 02330000
@DE00538 TM    LASTQ(BUFAD),B'00000001'                         03S0556 02331000
         BO    @DC00538                                         03S0556 02332000
         CLC   PARMSIZE(2,BUFAD),@CH00223                       03S0556 02333000
         BNL   @DC00538                                         03S0556 02334000
         TM    CONTINUE(BUFAD),B'00001000'                      03S0556 02335000
         BNZ   @DL00538                                         03S0556 02336000
         SLR   @10,@10                                          03S0556 02337000
         ICM   @10,7,CC(BUFAD)                                  03S0556 02338000
         C     @10,CARDEND(,BUFAD)                              03S0556 02339000
         BL    @DL00538                                         03S0556 02340000
@DC00538 DS    0H                                               03S0557 02341000
*            END;                      /*                            */ 02342000
*          ELSE;                       /* NO TEXT STRING.            */ 02343000
@RF00535 DS    0H                                               03S0559 02344000
*        END;                          /*                            */ 02345000
*        IF LASTQ = OFF                /* CHECK FOR SUCCESSFUL SCAN. */ 02346000
*         | PARMSIZE ^> ONE            /*                            */ 02347000
*          THEN                        /*                            */ 02348000
         TM    LASTQ(BUFAD),B'00000001'                         02S0560 02349000
         BZ    @RT00560                                         02S0560 02350000
         CLC   PARMSIZE(2,BUFAD),@CH00061                       02S0560 02351000
         BH    @RF00560                                         02S0560 02352000
@RT00560 DS    0H                                               02S0561 02353000
*            INVPARM = ON;             /* SET INVALID PARAMETER.     */ 02354000
         OI    INVPARM(BUFAD),B'00001000'                       02S0561 02355000
*          ELSE                        /*                            */ 02356000
*            DO;                       /* PARM INCLUDES LAST QUOTE   */ 02357000
         B     @RC00560                                         02S0562 02358000
@RF00560 DS    0H                                               02S0563 02359000
*              PARMSIZE = PARMSIZE - ONE;/* DECREMENT PARMSIZE.      */ 02360000
         SLR   @10,@10                                          02S0563 02361000
         ICM   @10,3,PARMSIZE(BUFAD)                            02S0563 02362000
         BCTR  @10,0                                            02S0563 02363000
         STH   @10,PARMSIZE(,BUFAD)                             02S0563 02364000
*              DO;                     /* SET TOTAL TEXT FIELD.      */ 02365000
*/********************************************************************* 02366000
**                                                                    * 02367000
**  THIS SEGMENT WILL PROCESS THE TEXT DATA STRING OF THE TEXT        * 02368000
**  KEYWORD. DATA WILL BE CONVERTED TO HEXADECIAML IF REQUESTED AND   * 02369000
**  THE DATA STRING WILL BE DUPLICATED AS REQUESTED.                  * 02370000
**                                                                    * 02371000
**********************************************************************/ 02372000
*        DO;                           /*                            */ 02373000
*          IF FIELDT = CHARX           /* CHECK FOR DATA TYPE.       */ 02374000
*            THEN                      /* MUST BE HEX.               */ 02375000
         CLI   FIELDT(BUFAD),231                                03S0566 02376000
         BNE   @RF00566                                         03S0566 02377000
*              IF PARMSIZE =< XMAX     /* CHECK FOR MAXIMUM SIZE.    */ 02378000
*                THEN                  /* SIZE OK                    */ 02379000
         CH    @10,@CH00897                                     03S0567 02380000
         BH    @RF00567                                         03S0567 02381000
*                  DO;                 /*                            */ 02382000
*                    CALL CONVERTX;    /* CONVERT TO HEXADECIMAL.    */ 02383000
         BAL   @14,CONVERTX                                     03S0569 02384000
*                  END;                /*                            */ 02385000
*                ELSE                  /* SIZE ERROR.                */ 02386000
*                  PARMSIZE = ZERO;    /* RESET, DO NOT USE PARM.    */ 02387000
         B     @RC00567                                         03S0571 02388000
@RF00567 SLR   @10,@10                                          03S0571 02389000
         STH   @10,PARMSIZE(,BUFAD)                             03S0571 02390000
*            ELSE                      /* NOT HEX REQUEST            */ 02391000
*              IF FIELDT ^= CHARC      /* SHOULD BE CHARACTER REQUEST*/ 02392000
*               | PARMSIZE > CMAX      /* CHECK FOR SIZE ALSO.       */ 02393000
*                THEN                  /*                            */ 02394000
         B     @RC00566                                         03S0572 02395000
@RF00566 CLI   FIELDT(BUFAD),195                                03S0572 02396000
         BNE   @RT00572                                         03S0572 02397000
         CLC   PARMSIZE(2,BUFAD),@CH00281                       03S0572 02398000
         BNH   @RF00572                                         03S0572 02399000
@RT00572 DS    0H                                               03S0573 02400000
*                  PARMSIZE = ZERO;    /* DO NOT USE PARAMETER.      */ 02401000
         SLR   @10,@10                                          03S0573 02402000
         STH   @10,PARMSIZE(,BUFAD)                             03S0573 02403000
*                ELSE;                 /*                            */ 02404000
@RF00572 DS    0H                                               03S0575 02405000
*          IF HEXERR = ON              /* ERRORS IN CONVERT          */ 02406000
*            THEN                      /*                            */ 02407000
@RC00566 TM    HEXERR(BUFAD),B'00010000'                        03S0575 02408000
         BNO   @RF00575                                         03S0575 02409000
*              DO;                     /*                            */ 02410000
*                MSGN = IEBA34I;       /* HEX (FF) NOT ALLOWED.      */ 02411000
         MVI   MSGN(BUFAD),X'22'                                03S0577 02412000
*                CALL IEBIMSGS;        /* PRINT IT.                  */ 02413000
         L     @15,@CV00034                                     03S0578 02414000
         BALR  @14,@15                                          03S0578 02415000
*                INHIBITW = ON;        /* PREVENT LIBRARY UPDATE.    */ 02416000
         OI    INHIBITW(BUFAD),B'01000000'                      03S0579 02417000
*                HEXERR = OFF;         /* RESET HEXERR               */ 02418000
         NI    HEXERR(BUFAD),B'11101111'                        03S0580 02419000
*                PARMSIZE = ZERO;      /*  AND PARMSIZE              */ 02420000
         SLR   @10,@10                                          03S0581 02421000
         STH   @10,PARMSIZE(,BUFAD)                             03S0581 02422000
*              END;                    /*                            */ 02423000
*            ELSE;                     /* NO ERROR.                  */ 02424000
@RF00575 DS    0H                                               03S0584 02425000
*          IF PARMSIZE ^= ZERO         /* PARAMETER VALID TEST       */ 02426000
*           & FIELDL*PARMSIZE + TEXTN =< CMAX                   03S0584 02427000
*           & FIELDL ^= ZERO           /* CHECK VALID DUP FACTOR.    */ 02428000
*            THEN                      /*                            */ 02429000
         SLR   @10,@10                                          03S0584 02430000
         ICM   @10,3,PARMSIZE(BUFAD)                            03S0584 02431000
         LTR   @10,@10                                          03S0584 02432000
         BZ    @RF00584                                         03S0584 02433000
         SLR   @01,@01                                          03S0584 02434000
         IC    @01,FIELDL(,BUFAD)                               03S0584 02435000
         MR    @00,@10                                          03S0584 02436000
         SLR   @09,@09                                          03S0584 02437000
         IC    @09,TEXTN+796(,BUFAD)                            03S0584 02438000
         ALR   @09,@01                                          03S0584 02439000
         CH    @09,@CH00281                                     03S0584 02440000
         BH    @RF00584                                         03S0584 02441000
         CLI   FIELDL(BUFAD),0                                  03S0584 02442000
         BE    @RF00584                                         03S0584 02443000
*              DO;                     /* MOVE DATA STRING TO        */ 02444000
*                TEXTDATA(ONE:PARMSIZE)/*  TEMPORARY TEXT SEGMENT    */ 02445000
*                 = CARDDATA(ONE:PARMSIZE);                     03S0586 02446000
         LR    @09,@10                                          03S0586 02447000
         BCTR  @09,0                                            03S0586 02448000
         EX    @09,@SM01049                                     03S0586 02449000
*                FIELDL                /* DETERMINE TOTAL            */ 02450000
*                 = FIELDL * PARMSIZE; /*  TEXT LENGTH.              */ 02451000
         STC   @01,FIELDL(,BUFAD)                               03S0587 02452000
*                IF FIELDL > PARMSIZE  /* CHECK FOR DUPLICATION      */ 02453000
*                  THEN                /* NEED SOME, SO DUPLICATE.   */ 02454000
         CR    @01,@10                                          03S0588 02455000
         BNH   @RF00588                                         03S0588 02456000
*                    MVC(TEXTDATA(PARMSIZE+ONE:FIELDL),         03S0589 02457000
*                     TEXTDATA(ONE:FIELDL-PARMSIZE));           03S0589 02458000
         ALR   @10,BUFFPTR                                      03S0589 02459000
         SLR   @09,@09                                          03S0589 02460000
         IC    @09,FIELDL(,BUFAD)                               03S0589 02461000
         SLR   @07,@07                                          03S0589 02462000
         ICM   @07,3,PARMSIZE(BUFAD)                            03S0589 02463000
         SLR   @09,@07                                          03S0589 02464000
         BCTR  @09,0                                            03S0589 02465000
         EX    @09,@SM01051                                     03S0589 02466000
*                  ELSE;               /* UPDATE TEXT BYTE COUNT.    */ 02467000
@RF00588 DS    0H                                               03S0591 02468000
*                TEXTN = TEXTN + FIELDL;                        03S0591 02469000
         LA    @10,796                                          03S0591 02470000
         ALR   @10,BUFAD                                        03S0591 02471000
         SLR   @09,@09                                          03S0591 02472000
         IC    @09,FIELDL(,BUFAD)                               03S0591 02473000
         SLR   @07,@07                                          03S0591 02474000
         IC    @07,TEXTN(,@10)                                  03S0591 02475000
         ALR   @07,@09                                          03S0591 02476000
         STC   @07,TEXTN(,@10)                                  03S0591 02477000
*                BUFFPTR               /* UPDATE TEXT POINTER.       */ 02478000
*                 = BUFFPTR + FIELDL;  /*                            */ 02479000
         ALR   BUFFPTR,@09                                      03S0592 02480000
*              END;                    /*                            */ 02481000
*            ELSE                      /* MUST BE AN ERROR.          */ 02482000
*              INVPARM = ON;           /* SO INDICATE.               */ 02483000
         B     @RC00584                                         03S0594 02484000
@RF00584 OI    INVPARM(BUFAD),B'00001000'                       03S0594 02485000
*          BLNK = BLVAL;               /* RESET TO CATCH BLANKS.     */ 02486000
@RC00584 MVI   BLNK,X'11'                                       03S0595 02487000
*        END;                          /* END SEGMENT.               */ 02488000
*              END;                    /*                            */ 02489000
*              IF COL(ONE) ^= RITEPARN /* CHECK FOR STOP AT RIGHT    */ 02490000
*                THEN                  /*  PARENTHESIS.              */ 02491000
         ICM   @10,7,CC(BUFAD)                                  02S0598 02492000
         CLI   COL(@10),C')'                                    02S0598 02493000
         BE    @RF00598                                         02S0598 02494000
*                  INVDLM = ON;        /* SET INVALID DELIMITER.     */ 02495000
         OI    INVDLM(BUFAD),B'10000000'                        02S0599 02496000
*                ELSE                  /*                            */ 02497000
*                  DO;                 /* REDUCE PARENTHESIS COUNTER.*/ 02498000
         B     @RC00598                                         02S0600 02499000
@RF00598 DS    0H                                               02S0601 02500000
*                    PRNCNT = PRNCNT - ONE;                     02S0601 02501000
         LH    @10,PRNCNT(,BUFAD)                               02S0601 02502000
         BCTR  @10,0                                            02S0601 02503000
         STH   @10,PRNCNT(,BUFAD)                               02S0601 02504000
*                    PRECOL = RPARN;   /* SET PREVIOUS COLUMN FOR    */ 02505000
         MVI   PRECOL(BUFAD),X'40'                              02S0602 02506000
*                    CC = CC + ONE;    /*  CONTINUATION OF SCAN.     */ 02507000
         LA    @09,1                                            02S0603 02508000
         SLR   @07,@07                                          02S0603 02509000
         ICM   @07,7,CC(BUFAD)                                  02S0603 02510000
         ALR   @09,@07                                          02S0603 02511000
         STCM  @09,7,CC(BUFAD)                                  02S0603 02512000
*                    FLDSW = OFF;      /* END OF THIS FIELD.         */ 02513000
         NI    FLDSW(BUFAD),B'11110111'                         02S0604 02514000
*                    IF PRNCNT = ZERO  /* COULD BE LAST GROUP.       */ 02515000
*                      THEN            /*                            */ 02516000
         LTR   @10,@10                                          02S0605 02517000
         BNZ   @RF00605                                         02S0605 02518000
*                        PARMGRP = OFF;/* END OF THIS GROUP.         */ 02519000
         NI    PARMGRP(BUFAD),B'11111011'                       02S0606 02520000
*                  END;                /*                            */ 02521000
@RF00605 DS    0H                                               02S0608 02522000
*              FOUND = OFF;            /* RESET FOUND.               */ 02523000
@RC00598 NI    FOUND(BUFAD),B'10111111'                         02S0608 02524000
*            END;                      /*                            */ 02525000
*        IF STATUS3 = ZERO             /* CHECK FOR ANY ERRORS.      */ 02526000
*          THEN                        /*                            */ 02527000
@RC00560 CLI   STATUS3(BUFAD),0                                 02S0610 02528000
         BNE   @RF00610                                         02S0610 02529000
*            CALL FINDPARM;            /* NONE, CONTINUE SCAN.       */ 02530000
         BAL   @14,FINDPARM                                     02S0611 02531000
*          ELSE                        /*                            */ 02532000
*            PARMNUM = ZERO;           /* ERROR, EXIT KEYWORD.       */ 02533000
         B     @RC00610                                         02S0612 02534000
@RF00610 MVI   PARMNUM(BUFAD),X'00'                             02S0612 02535000
*                        END;                                   01S0613 02536000
*                      ELSE            /* MUST BE PARM TWO.          */ 02537000
*                        PARMNUM = ZERO;/* INDICATE BAD PARM.        */ 02538000
         B     @RC00519                                         01S0614 02539000
@RF00519 MVI   PARMNUM(BUFAD),X'00'                             01S0614 02540000
*                  END;                /* END PARM PROCESS LOOP.     */ 02541000
@RC00519 DS    0H                                               01S0615 02542000
@DE00518 CLI   PARMNUM(BUFAD),0                                 01S0615 02543000
         BNE   @DL00518                                         01S0615 02544000
*                  RESPECIFY (BUFFPTR) UNRESTRICTED;            01S0616 02545000
*                END;                  /*                            */ 02546000
*              ELSE                    /* DUPLICATE KEYWORD.         */ 02547000
*                EXCLKWD = ON;         /*                            */ 02548000
         B     @RC00512                                         01S0618 02549000
@RF00512 OI    EXCLKWD(BUFAD),B'00010000'                       01S0618 02550000
*          ELSE                        /* INVALID KEYWORD.           */ 02551000
*            INVKWD = ON;              /*                            */ 02552000
         B     @RC00511                                         01S0619 02553000
@RF00511 OI    INVKWD(BUFAD),B'00100000'                        01S0619 02554000
*        GEN REFS(SAVE3)               /******************************/ 02555000
*         (L  @13,SAVE3+BACK(,BUFAD)); /* RESTORE BACKWARD POINTER.  */ 02556000
@RC00511 DS    0H                                               01S0620 02557000
         L  @13,SAVE3+BACK(,BUFAD)                                      02558000
*  END TEXT;                           /* RETURN TO CALLER.          */ 02559000
@EL00015 DS    0H                                               01S0621 02560000
@EF00015 DS    0H                                               01S0621 02561000
@ER00015 LM    @14,@12,12(@13)                                  01S0621 02562000
         BR    @14                                              01S0621 02563000
         EJECT                                                          02564000
*/********************************************************************* 02565000
**                                                                    * 02566000
**  THIS ROUTINE WILL INDICATE THAT AN INVALID KEYWORD HAS BEEN       * 02567000
**  FOUND.                                                            * 02568000
**                                                                    * 02569000
**********************************************************************/ 02570000
*INVKEY:                                                        01S0622 02571000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0622 02572000
INVKEY   STM   @14,@12,12(@13)                                  01S0622 02573000
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */ 02574000
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.                02575000
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.          02576000
         ST    @14,FORE(,@13)          FORWARD POINTER.                 02577000
         LR    @13,@14                 LINKAGE COMPLETE.                02578000
*        PARMNUM = ZERO;               /* RESET TO EXIT KEYWORD.     */ 02579000
         MVI   PARMNUM(BUFAD),X'00'                             01S0624 02580000
*        INHIBITW = ON;                /* PREVENT LIBRARY UPDATE.    */ 02581000
         OI    INHIBITW(BUFAD),B'01000000'                      01S0625 02582000
*                                      /* POINT TO BAD WORD.         */ 02583000
*        EDITDATA(ONE) = ADDR(LASTKEY);                         01S0626 02584000
         LA    @10,LASTKEY(,BUFAD)                              01S0626 02585000
         STCM  @10,7,EDITDATA(BUFAD)                            01S0626 02586000
*                                      /* MAX OF 8 CHARS TO MESSAGE. */ 02587000
*        EDITLEN(ONE) = LENGTH(LASTKEY);                        01S0627 02588000
         MVI   EDITLEN(BUFAD),X'08'                             01S0627 02589000
*        MSGN = IEBA15I;               /* BAD KEYWORD MESSAGE.       */ 02590000
         MVI   MSGN(BUFAD),X'0F'                                01S0628 02591000
*        CALL IEBIMSGS;                /* PRINT THE MESSAGE.         */ 02592000
         L     @15,@CV00034                                     01S0629 02593000
         BALR  @14,@15                                          01S0629 02594000
*        GEN REFS(SAVE3)               /*                            */ 02595000
*         (L  @13,SAVE3+BACK(,BUFAD)); /* RESTORE BACKWARD POINTER.  */ 02596000
         L  @13,SAVE3+BACK(,BUFAD)                                      02597000
*   END INVKEY;                        /* RETURN TO CALLER.          */ 02598000
@EL00016 DS    0H                                               01S0631 02599000
@EF00016 DS    0H                                               01S0631 02600000
@ER00016 LM    @14,@12,12(@13)                                  01S0631 02601000
         BR    @14                                              01S0631 02602000
         EJECT                                                          02603000
*/********************************************************************* 02604000
**                                                                    * 02605000
**  THIS ROUTINE READS CARDS INTO A SECONDARY BUFFER WHAT SHOULD BE A * 02606000
**  CONTINUATION CARD.                                                * 02607000
**                                                                    * 02608000
**********************************************************************/ 02609000
*GETCARDN:                                                      01S0632 02610000
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0632 02611000
GETCARDN STM   @14,@12,12(@13)                                  01S0632 02612000
*        GEN SETS(SAVE4);              /* USE CONVENTIONAL SAVE      */ 02613000
         ST  @13,SAVE4+BACK(,BUFAD)    BACKWARD POINTER.                02614000
         LA  @14,SAVE4(,BUFAD)         THIS ROUTINE SAVE AREA.          02615000
         ST  @14,FORE(,@13)            FORWARD POINTER.                 02616000
         LR  @13,@14                   LINKAGE COMPLETE.                02617000
*        RESPECIFY (DB,R14) RESTRICTED;                         01S0634 02618000
*        IF CARDIN = ON                /* CARD COULD HAVE BEEN       */ 02619000
*          THEN                        /*  READ PREVIOUSLY.          */ 02620000
         TM    CARDIN(BUFAD),B'00100000'                        01S0635 02621000
         BNO   @RF00635                                         01S0635 02622000
*            DO;                       /*                            */ 02623000
*              PRIMCARD = SDRYCARD;    /* MOVE CARD TO PRIMARY AREA. */ 02624000
         MVC   PRIMCARD(80,BUFAD),SDRYCARD(BUFAD)               01S0637 02625000
*              CARDIN = OFF;           /* RESET INDICATOR.           */ 02626000
         NI    CARDIN(BUFAD),B'11011111'                        01S0638 02627000
*            END;                      /*                            */ 02628000
*          ELSE                        /* NEED TO READ NEXT CARD.    */ 02629000
*            DO;                       /*                            */ 02630000
         B     @RC00635                                         01S0640 02631000
@RF00635 DS    0H                                               01S0641 02632000
*              IF CONTINUE = ON        /* COULD BE LOOKING FOR       */ 02633000
*                THEN                  /*  CONTINUATION CARD.        */ 02634000
         TM    CONTINUE(BUFAD),B'00001000'                      01S0641 02635000
         BNO   @RF00641                                         01S0641 02636000
*                  R14 = ADDR(SDRYCARD);                        01S0642 02637000
         LA    R14,SDRYCARD(,BUFAD)                             01S0642 02638000
*                ELSE                  /* DESTINATION IS PRIMARY.    */ 02639000
*                  R14 = ADDR(PRIMCARD);                        01S0643 02640000
         B     @RC00641                                         01S0643 02641000
@RF00641 LA    R14,PRIMCARD(,BUFAD)                             01S0643 02642000
*              DB = SYSINAD;           /* GET SYSIN ADDRESS.         */ 02643000
@RC00641 L     DB,SYSINAD(,BUFAD)                               01S0644 02644000
*              GEN REFS(DB,R14);       /* READ CARD.                 */ 02645000
               GET (DB),(R14)                                           02646000
*            END;                      /*                            */ 02647000
*        IF CONTINUE = ON              /* CHECK CONTINUATION IN PROG.*/ 02648000
*          THEN                        /*                            */ 02649000
@RC00635 TM    CONTINUE(BUFAD),B'00001000'                      01S0647 02650000
         BNO   @RF00647                                         01S0647 02651000
*            IF SDRYCARD(ONE:FIFTN)    /* COLUMN ONE THRU 15         */ 02652000
*               = BLNKS(ONE:FIFTN)     /*  NEED 15 BLANKS.           */ 02653000
*              THEN                    /*                            */ 02654000
         CLC   SDRYCARD(15,BUFAD),BLNKS                         01S0648 02655000
         BNE   @RF00648                                         01S0648 02656000
*                DO;                   /* PREPARE TO MOVE CARD.      */ 02657000
*                  PRIMCARD=SDRYCARD;  /* MOVE CONTINUATION CARD.    */ 02658000
         MVC   PRIMCARD(80,BUFAD),SDRYCARD(BUFAD)               01S0650 02659000
*                  MSGTXT = SDRYCARD;  /* CONT CARD TO PRT.          */ 02660000
         MVI   MSGTXT+80(BUFAD),C' '                            01S0651 02661000
         MVC   MSGTXT+81(39,BUFAD),MSGTXT+80(BUFAD)             01S0651 02662000
         MVC   MSGTXT(80,BUFAD),SDRYCARD(BUFAD)                 01S0651 02663000
*                  SPACE = SINGL;      /* SET SINGLE SPACE.          */ 02664000
         MVI   SPACE(BUFAD),C' '                                01S0652 02665000
*                  CC=ADDR(PRIMCARD)+FIFTN;/* RESET COL PTR.         */ 02666000
         LA    @15,PRIMCARD(,BUFAD)                             01S0653 02667000
         AH    @15,@CH00157                                     01S0653 02668000
         STCM  @15,7,CC(BUFAD)                                  01S0653 02669000
*                  DB = SYSPRTAD;      /* GET ADDRESS OF SYSPRINT DCB*/ 02670000
         L     DB,SYSPRTAD(,BUFAD)                              01S0654 02671000
*                  GEN REFS(DB,MSG)    /* PRINT CONTINUATION CARD.   */ 02672000
*                   (PUT  (DB),MSG(BUFAD));                     01S0655 02673000
         PUT  (DB),MSG(BUFAD)                                           02674000
*                  IF COL72 = BLAN                              01S0656 02675000
*                    THEN              /* NO MORE CONTINUE CARDS.    */ 02676000
         CLI   COL72(BUFAD),C' '                                01S0656 02677000
         BNE   @RF00656                                         01S0656 02678000
*                      CONTINUE = OFF; /* RESET CONTINUATION SWITCH. */ 02679000
         NI    CONTINUE(BUFAD),B'11110111'                      01S0657 02680000
*                    ELSE              /* ANOTHER CONTINUATION CARD. */ 02681000
*                      COL72 = BLAN;   /* MAKE BLANK FOR SCAN.       */ 02682000
         B     @RC00656                                         01S0658 02683000
@RF00656 MVI   COL72(BUFAD),C' '                                01S0658 02684000
*                END;                  /* END CARD MOVE.             */ 02685000
*              ELSE                    /* MUST BE ERROR.             */ 02686000
*                DO;                   /************IEBA12I***********/ 02687000
         B     @RC00648                                         01S0660 02688000
@RF00648 DS    0H                                               01S0661 02689000
*                  SCANINP = OFF;      /* FORCE SCAN END.            */ 02690000
         NI    SCANINP(BUFAD),B'10111111'                       01S0661 02691000
*                  CONTINUE = OFF;     /* RESET CONTINUE SWITCH.     */ 02692000
*                  CARDIN = ON;        /* CARD IN BUFF SW.           */ 02693000
         OI    CARDIN(BUFAD),B'00100000'                        01S0663 02694000
         NI    CONTINUE(BUFAD),B'11110111'                      01S0663 02695000
*                  MSGN = IEBA12I;     /* INV CONTINUE CARD          */ 02696000
         MVI   MSGN(BUFAD),X'0C'                                01S0664 02697000
*                  CALL IEBIMSGS;      /* GET MESSAGE.               */ 02698000
         L     @15,@CV00034                                     01S0665 02699000
         BALR  @14,@15                                          01S0665 02700000
*                  INHIBITW = ON;      /* INHIBIT DISK WR.           */ 02701000
         OI    INHIBITW(BUFAD),B'01000000'                      01S0666 02702000
*                  KWDCOMP = ON;       /* TERMINATE KEYWORD.         */ 02703000
         OI    KWDCOMP(BUFAD),B'00000001'                       01S0667 02704000
*                END;                  /******************************/ 02705000
*          ELSE                                                 01S0669 02706000
*            CC = ADDR(PRIMCARD);      /* RESET CURRENT COLUMN.      */ 02707000
         B     @RC00647                                         01S0669 02708000
@RF00647 LA    @15,PRIMCARD(,BUFAD)                             01S0669 02709000
         STCM  @15,7,CC(BUFAD)                                  01S0669 02710000
*        RESPECIFY (DB,R14) UNRESTRICTED;                       01S0670 02711000
@RC00647 DS    0H                                               01S0671 02712000
*        IF COL72 ^= BLAN              /* CHECK FOR PUNCH IN         */ 02713000
*          THEN                        /*  COLUMN 72.                */ 02714000
         CLI   COL72(BUFAD),C' '                                01S0671 02715000
         BE    @RF00671                                         01S0671 02716000
*            CONTINUE = ON;            /* SET CONTINUATION SWITCH.   */ 02717000
         OI    CONTINUE(BUFAD),B'00001000'                      01S0672 02718000
*        GEN REFS(SAVE4)               /* RESTORE BACKWARD POINTER   */ 02719000
*         (L  @13,SAVE4+BACK(,BUFAD)); /*                            */ 02720000
@RF00671 DS    0H                                               01S0673 02721000
         L  @13,SAVE4+BACK(,BUFAD)                                      02722000
*  END GETCARDN;                       /* RETURN TO CALLER.          */ 02723000
@EL00017 DS    0H                                               01S0674 02724000
@EF00017 DS    0H                                               01S0674 02725000
@ER00017 LM    @14,@12,12(@13)                                  01S0674 02726000
         BR    @14                                              01S0674 02727000
         EJECT                                                          02728000
*/********************************************************************* 02729000
**                                                                    * 02730000
**  THIS SEGMENT WILL SCAN A PREDETERMINED NUMBER OF CHARACTERS ON    * 02731000
**  THE CONTROL CARD. IF A CONTROL CARD INDICATION IS ENCOUNTERED,    * 02732000
**  THE NEXT CARD WILL BE REQUESTED AND THE SCAN CONTINUED. CARD      * 02733000
**  SCANNING WILL CEASE IF ANY OF THE FOLLOWING CONDITIONS ARE FOUND- * 02734000
**       1. A VALID DELEMITER ENCOUNTERED.                            * 02735000
**       2. AN INVALID CHARACTER ENCOUNTERED.                         * 02736000
**       3. AN INVALID CONTINUATION CARD READ.                        * 02737000
**       4. EXAUSTION OF THE FIELD TO BE SCANNED.                     * 02738000
**                                                                    * 02739000
**********************************************************************/ 02740000
*                                                               01S0675 02741000
*SCAN:                                                          01S0675 02742000
*   PROCEDURE OPTIONS(SAVE(14));                                01S0675 02743000
SCAN     ST    @14,@SA00018                                     01S0675 02744000
*        PARMSIZE = ZERO;              /* RESET STRING LENGTH.       */ 02745000
         SLR   @10,@10                                          01S0676 02746000
         STH   @10,PARMSIZE(,BUFAD)                             01S0676 02747000
*        DO                            /* START SCAN OF FIELD.       */ 02748000
*         UNTIL STOPFLAG ^= NULL       /* SCAN ALL VALID CHARACTERS. */ 02749000
*              | PARMSIZE => LENGTH(CARDDATA);                  01S0677 02750000
@DL00677 DS    0H                                               01S0678 02751000
*          IF CONTINUE = ON            /* POSSIBLE CONTINUATION?     */ 02752000
*           & CC = CARDEND             /* IS THIS COLUMN 72?         */ 02753000
*            THEN                      /* AT END OF CARD             */ 02754000
         TM    CONTINUE(BUFAD),B'00001000'                      01S0678 02755000
         BNO   @RF00678                                         01S0678 02756000
         SLR   @10,@10                                          01S0678 02757000
         ICM   @10,7,CC(BUFAD)                                  01S0678 02758000
         C     @10,CARDEND(,BUFAD)                              01S0678 02759000
         BNE   @RF00678                                         01S0678 02760000
*              CALL GETCARDN;          /* GET A CONTINUATION CARD.   */ 02761000
         BAL   @14,GETCARDN                                     01S0679 02762000
*            ELSE;                     /* NOT AT END OF CARD.        */ 02763000
@RF00678 DS    0H                                               01S0681 02764000
*          ARGMT = COL(ONE)+ONE;       /* GET FIRST CHAR OF THIS CARD*/ 02765000
         LA    @10,1                                            01S0681 02766000
         SLR   @09,@09                                          01S0681 02767000
         ICM   @09,7,CC(BUFAD)                                  01S0681 02768000
         SLR   @02,@02                                          01S0681 02769000
         IC    @02,COL(,@09)                                    01S0681 02770000
         ALR   @02,@10                                          01S0681 02771000
         STC   @02,ARGMT(,BUFAD)                                01S0681 02772000
*          IF STOPFLAG = NULL          /* CHECK FOR INVALID CHARACTER*/ 02773000
*            THEN                      /* SAVE VALID CHARACTERS IN   */ 02774000
         LA    @02,FUNCTION-1(@02)                              01S0682 02775000
         TM    STOPFLAG(@02),B'11110000'                        01S0682 02776000
         BNZ   @RF00682                                         01S0682 02777000
*              DO;                     /*  THE SCAN BUFFER.          */ 02778000
*                PARMSIZE=PARMSIZE+ONE;/* TRACK STRING LENGTH.       */ 02779000
         SLR   @02,@02                                          01S0684 02780000
         ICM   @02,3,PARMSIZE(BUFAD)                            01S0684 02781000
         ALR   @10,@02                                          01S0684 02782000
         STH   @10,PARMSIZE(,BUFAD)                             01S0684 02783000
*                SCANBUF = COL(ONE);   /*                            */ 02784000
         LA    @02,CARDDATA(,BUFAD)                             01S0685 02785000
         BCTR  @02,0                                            01S0685 02786000
         ALR   @02,@10                                          01S0685 02787000
         MVC   SCANBUF(1,@02),COL(@09)                          01S0685 02788000
*              END;                    /* END CHARACTER SAVE.        */ 02789000
*            ELSE;                     /*                            */ 02790000
@RF00682 DS    0H                                               01S0688 02791000
*          CC = CC + ONE;              /* TRACK CARD COLUMNS.        */ 02792000
         LA    @10,1                                            01S0688 02793000
         SLR   @09,@09                                          01S0688 02794000
         ICM   @09,7,CC(BUFAD)                                  01S0688 02795000
         ALR   @10,@09                                          01S0688 02796000
         STCM  @10,7,CC(BUFAD)                                  01S0688 02797000
*        END;                          /* END SCAN OF FIELD.         */ 02798000
@DE00677 SLR   @10,@10                                          01S0689 02799000
         IC    @10,ARGMT(,BUFAD)                                01S0689 02800000
         LA    @10,FUNCTION-1(@10)                              01S0689 02801000
         TM    STOPFLAG(@10),B'11110000'                        01S0689 02802000
         BNZ   @DC00677                                         01S0689 02803000
         CLC   PARMSIZE(2,BUFAD),@CH00223                       01S0689 02804000
         BL    @DL00677                                         01S0689 02805000
@DC00677 DS    0H                                               01S0690 02806000
*        FWORK = CC;                   /* PRIME FOR POSSIBLE ERROR.  */ 02807000
         SLR   @10,@10                                          01S0690 02808000
         ICM   @10,7,CC(BUFAD)                                  01S0690 02809000
         ST    @10,FWORK(,BUFAD)                                01S0690 02810000
*   END SCAN;                          /* RETURN TO CALLER.          */ 02811000
@EL00018 DS    0H                                               01S0691 02812000
@EF00018 DS    0H                                               01S0691 02813000
@ER00018 L     @14,@SA00018                                     01S0691 02814000
         BR    @14                                              01S0691 02815000
         EJECT                                                          02816000
*/********************************************************************* 02817000
**                                                                    * 02818000
**  THIS ROUTINE WILL LOCATE THE PARAMETERS WITHIN KEYWORDS.          * 02819000
**   INPUT IS POINTER TO FIRST COL TO BE SCANNED.                     * 02820000
**   OUTPUT IS NUMBER OF PARAMETER, NUMBER OF BYTES IN PARAMETER      * 02821000
**   AND A POINTER TO THE PROPERLY CONVERTED PARAMETER.               * 02822000
**                                                                    * 02823000
**********************************************************************/ 02824000
*                                                               01S0692 02825000
* FINDPARM:                                                     01S0692 02826000
*   PROCEDURE OPTIONS(SAVE(14));                                01S0692 02827000
FINDPARM ST    @14,@SA00019                                     01S0692 02828000
*        FOUND = OFF;                  /* RESET FOUND INDICATOR.     */ 02829000
         NI    FOUND(BUFAD),B'10111111'                         01S0693 02830000
*        DO                            /* START PARAMETER DETERMINE  */ 02831000
*         WHILE STATUS3 = ZERO;        /* GO UNTIL FOUND OR ERROR.   */ 02832000
         B     @DE00694                                         01S0694 02833000
@DL00694 DS    0H                                               01S0695 02834000
*          CALL SCAN;                  /* SCAN FOR PARAMETER.        */ 02835000
         BAL   @14,SCAN                                         01S0695 02836000
*          FWORK = CC;                 /* PRIME FOR POSSIBLE ERROR.  */ 02837000
         SLR   @10,@10                                          01S0696 02838000
         ICM   @10,7,CC(BUFAD)                                  01S0696 02839000
         ST    @10,FWORK(,BUFAD)                                01S0696 02840000
*          IF PARMSIZE = ZERO          /* CHECK FOR                  */ 02841000
*            THEN                      /*  PARAMETER OR DELIMITER.   */ 02842000
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0697 02843000
         BNZ   @RF00697                                         01S0697 02844000
*              IF FLDSW = OFF          /* COULD BE WITHIN PARM GROUP.*/ 02845000
*                THEN                  /*                            */ 02846000
         TM    FLDSW(BUFAD),B'00001000'                         01S0698 02847000
         BNZ   @RF00698                                         01S0698 02848000
*                  DO;                 /* FIRST CHARACTER DELIMITER. */ 02849000
*/********************************************************************* 02850000
**                                                                    * 02851000
**  THIS SEGMENT WILL BE ENTERED IF THE FIRST CHARACTER SCANNED IS    * 02852000
**  NOT ALPHANUMERIC.                                                 * 02853000
**                                                                    * 02854000
**********************************************************************/ 02855000
*        IF STOPCODE = LPARN           /* CHECK FOR FIRST CHARACTER  */ 02856000
*          THEN                        /*  PARENTHESIS               */ 02857000
         SLR   @10,@10                                          02S0700 02858000
         IC    @10,ARGMT(,BUFAD)                                02S0700 02859000
         LA    @10,FBYTE-1(@10)                                 02S0700 02860000
         CLI   STOPCODE(@10),X'80'                              02S0700 02861000
         BNE   @RF00700                                         02S0700 02862000
*            DO;                       /*                            */ 02863000
*              PRNCNT=PRNCNT+ONE;      /* INCREMENT PARENTHESIS COUNT*/ 02864000
         LA    @10,1                                            02S0702 02865000
         LH    @09,PRNCNT(,BUFAD)                               02S0702 02866000
         ALR   @09,@10                                          02S0702 02867000
         STH   @09,PRNCNT(,BUFAD)                               02S0702 02868000
*              PARMNUM = ONE;          /* SET PARAMETER NUMBER.      */ 02869000
         MVI   PARMNUM(BUFAD),X'01'                             02S0703 02870000
*              IF PRNCNT > ONE         /* CHECKING MULTIPLE PARENS.  */ 02871000
*               & KPARN2(ACTIVKEY) = OFF /* CHECKING PERMISSION.     */ 02872000
*                THEN                  /* ERROR.                     */ 02873000
         CR    @09,@10                                          02S0704 02874000
         BNH   @RF00704                                         02S0704 02875000
         SLR   @10,@10                                          02S0704 02876000
         IC    @10,ACTIVKEY(,BUFAD)                             02S0704 02877000
         MH    @10,@CH00359                                     02S0704 02878000
         LA    @09,KPARN2-20(@10)                               02S0704 02879000
         TM    0(@09),B'00100000'                               02S0704 02880000
         BNZ   @RF00704                                         02S0704 02881000
*                  DO;                 /*                            */ 02882000
*                    PARMNUM = ZERO;   /* SET FOR KEYWORD EXIT.      */ 02883000
         MVI   PARMNUM(BUFAD),X'00'                             02S0706 02884000
*                    INVDLM = ON;      /* INDICATE INVALID.          */ 02885000
         OI    INVDLM(BUFAD),B'10000000'                        02S0707 02886000
*                  END;                /*                            */ 02887000
*                ELSE;                 /*                            */ 02888000
@RF00704 DS    0H                                               02S0710 02889000
*            END;                      /*                            */ 02890000
*          ELSE                        /*                            */ 02891000
*            IF PRNCNT ^= ZERO         /* COULD BE IN THE MIDST OF   */ 02892000
*              THEN                    /*  DELIMITERS.               */ 02893000
         B     @RC00700                                         02S0711 02894000
@RF00700 ICM   @10,3,PRNCNT(BUFAD)                              02S0711 02895000
         BZ    @RF00711                                         02S0711 02896000
*                DO;                   /*                            */ 02897000
*                    IF PRECOL ^= RPARN      /* CHECK FOR PROPER     */ 02898000
*                     & (STOPCODE = RPARN    /* DELIMITER IN         */ 02899000
*                        | STOPCODE = COMMA) /* PARAMETER GROUP.     */ 02900000
*                      THEN                  /* ^)) OR ^), INVALID   */ 02901000
         CLI   PRECOL(BUFAD),X'40'                              02S0713 02902000
         BE    @RF00713                                         02S0713 02903000
         SLR   @10,@10                                          02S0713 02904000
         IC    @10,ARGMT(,BUFAD)                                02S0713 02905000
         LA    @10,FBYTE-1(@10)                                 02S0713 02906000
         CLI   STOPCODE(@10),X'40'                              02S0713 02907000
         BE    @RT00713                                         02S0713 02908000
         CLI   STOPCODE(@10),X'10'                              02S0713 02909000
         BNE   @RF00713                                         02S0713 02910000
@RT00713 DS    0H                                               02S0714 02911000
*                        DO;                 /*                      */ 02912000
*                          INVDLM = ON;      /* SET DELIMITER INVALID*/ 02913000
         OI    INVDLM(BUFAD),B'10000000'                        02S0715 02914000
*                          PARMNUM = ZERO;   /* EXIT THIS KEYWORD.   */ 02915000
         MVI   PARMNUM(BUFAD),X'00'                             02S0716 02916000
*                        END;                /*                      */ 02917000
*                      ELSE;                 /* DELIMITER OK SO FAR. */ 02918000
@RF00713 DS    0H                                               02S0719 02919000
*                IF STOPCODE ^= COMMA  /* ONLY RIGHT PARENS          */ 02920000
*                  THEN                /*  AND COMMAS HERE           */ 02921000
         SLR   @10,@10                                          02S0719 02922000
         IC    @10,ARGMT(,BUFAD)                                02S0719 02923000
         LA    @10,FBYTE-1(@10)                                 02S0719 02924000
         CLI   STOPCODE(@10),X'10'                              02S0719 02925000
         BE    @RF00719                                         02S0719 02926000
*                    IF STOPCODE=RPARN /*                            */ 02927000
*                      THEN            /* MUST BE RIGHT PAREN.       */ 02928000
         CLI   STOPCODE(@10),X'40'                              02S0720 02929000
         BNE   @RF00720                                         02S0720 02930000
*                        DO;           /*                            */ 02931000
*                          PRNCNT =    /* DECREMENT PARENTHESIS      */ 02932000
*                           PRNCNT -ONE; /*  COUNT.                  */ 02933000
         LH    @10,PRNCNT(,BUFAD)                               02S0722 02934000
         BCTR  @10,0                                            02S0722 02935000
         STH   @10,PRNCNT(,BUFAD)                               02S0722 02936000
*                           IF PRNCNT = ZERO                    02S0723 02937000
*                             THEN     /*CHECK FOR PARM GROUP END.   */ 02938000
         LTR   @10,@10                                          02S0723 02939000
         BNZ   @RF00723                                         02S0723 02940000
*                               PARMGRP = OFF;                  02S0724 02941000
         NI    PARMGRP(BUFAD),B'11111011'                       02S0724 02942000
*                        END;          /*                            */ 02943000
*                      ELSE            /* DO NOT KNOW WHAT IT IS.    */ 02944000
*                        DO;           /*                            */ 02945000
         B     @RC00720                                         02S0726 02946000
@RF00720 DS    0H                                               02S0727 02947000
*                          INVCHAR = ON; /* MUST BE ERROR.           */ 02948000
         OI    INVCHAR(BUFAD),B'00000100'                       02S0727 02949000
*                          PARMNUM = ZERO;/* EXIT THIS KEYWORD.      */ 02950000
         MVI   PARMNUM(BUFAD),X'00'                             02S0728 02951000
*                        END;          /*                            */ 02952000
*                  ELSE                /* MUST BE COMMA.             */ 02953000
*                    IF COL(ONE)=BLAN  /* CHECK FOR CONTINUATION     */ 02954000
*                     & CONTINUE=ON    /* CARD FOLLOWING.            */ 02955000
*                      THEN            /*                            */ 02956000
         B     @RC00719                                         02S0730 02957000
@RF00719 ICM   @10,7,CC(BUFAD)                                  02S0730 02958000
         CLI   COL(@10),C' '                                    02S0730 02959000
         BNE   @RF00730                                         02S0730 02960000
         TM    CONTINUE(BUFAD),B'00001000'                      02S0730 02961000
         BNO   @RF00730                                         02S0730 02962000
*                        CALL GETCARDN;/* GET A CONTINUATION CARD.   */ 02963000
         BAL   @14,GETCARDN                                     02S0731 02964000
*                      ELSE;           /* NO CONTINUATION.           */ 02965000
@RF00730 DS    0H                                               02S0733 02966000
*                END;                  /*                            */ 02967000
*              ELSE                    /* PARENTHESIS COUNT          */ 02968000
*                DO;                   /* IS EQUAL TO ZERO.          */ 02969000
         B     @RC00711                                         02S0734 02970000
@RF00711 DS    0H                                               02S0735 02971000
*                  IF STOPFLAG = ONEH  /* CHECK FOR BLANK OR COMMA.  */ 02972000
*                    THEN              /*                            */ 02973000
         SLR   @10,@10                                          02S0735 02974000
         IC    @10,ARGMT(,BUFAD)                                02S0735 02975000
         LA    @10,FUNCTION-1(@10)                              02S0735 02976000
         TM    STOPFLAG(@10),B'00010000'                        02S0735 02977000
         BNO   @RF00735                                         02S0735 02978000
         TM    STOPFLAG(@10),B'11100000'                        02S0735 02979000
         BNZ   @RF00735                                         02S0735 02980000
*                      DO;             /*                            */ 02981000
*                        KWDCOMP = ON; /* KEYWORD IS COMPLETE.       */ 02982000
         OI    KWDCOMP(BUFAD),B'00000001'                       02S0737 02983000
*                        IF PARMGRP = ON                        02S0738 02984000
*                          THEN        /* CHECK FOR GOOD COMPLETION. */ 02985000
         TM    PARMGRP(BUFAD),B'00000100'                       02S0738 02986000
         BNO   @RF00738                                         02S0738 02987000
*                            DO;       /*                            */ 02988000
*                              INVPARM = ON;  /* SET INVALID PARM.   */ 02989000
         OI    INVPARM(BUFAD),B'00001000'                       02S0740 02990000
*                              PARMNUM = ZERO;/* EXIT THIS KEYWORD.  */ 02991000
         MVI   PARMNUM(BUFAD),X'00'                             02S0741 02992000
*                              PARMGRP = OFF; /* RESET PARM GROUP.   */ 02993000
         NI    PARMGRP(BUFAD),B'11111011'                       02S0742 02994000
*                            END;      /*                            */ 02995000
*                          ELSE;       /* KEYWORD COMPLETION OK.     */ 02996000
@RF00738 DS    0H                                               02S0745 02997000
*                        IF STOPCODE=BLANK                      02S0745 02998000
*                          THEN        /* CHECK FOR STATEMENT DONE.  */ 02999000
         SLR   @10,@10                                          02S0745 03000000
         IC    @10,ARGMT(,BUFAD)                                02S0745 03001000
         LA    @10,FBYTE-1(@10)                                 02S0745 03002000
         CLI   STOPCODE(@10),X'11'                              02S0745 03003000
         BNE   @RF00745                                         02S0745 03004000
*                            SCANINP = OFF;                     02S0746 03005000
         NI    SCANINP(BUFAD),B'10111111'                       02S0746 03006000
*                          ELSE        /* CHECK FOR CONTINUATION.    */ 03007000
*                            IF COL(ONE)=BLAN                   02S0747 03008000
*                             & CONTINUE=ON                     02S0747 03009000
*                              THEN    /* CONTINUATION EXPECTED.     */ 03010000
         B     @RC00745                                         02S0747 03011000
@RF00745 ICM   @10,7,CC(BUFAD)                                  02S0747 03012000
         CLI   COL(@10),C' '                                    02S0747 03013000
         BNE   @RF00747                                         02S0747 03014000
         TM    CONTINUE(BUFAD),B'00001000'                      02S0747 03015000
         BNO   @RF00747                                         02S0747 03016000
*                                CALL GETCARDN;/* SO GET IT.         */ 03017000
         BAL   @14,GETCARDN                                     02S0748 03018000
*                      END;            /*                            */ 03019000
*                    ELSE              /* INVALID STOP FLAG.         */ 03020000
*                      IF STOPCODE = RPARN                      02S0750 03021000
*                        THEN          /* RIGHT PARENTHESIS.         */ 03022000
         B     @RC00735                                         02S0750 03023000
@RF00735 SLR   @10,@10                                          02S0750 03024000
         IC    @10,ARGMT(,BUFAD)                                02S0750 03025000
         LA    @10,FBYTE-1(@10)                                 02S0750 03026000
         CLI   STOPCODE(@10),X'40'                              02S0750 03027000
         BNE   @RF00750                                         02S0750 03028000
*                          UNBAL = ON; /* SET UNBALANCED PAREN.      */ 03029000
         OI    UNBAL(BUFAD),B'00000010'                         02S0751 03030000
*                        ELSE          /* DO NOT KNOW WHAT IT IS.    */ 03031000
*                          INVCHAR = ON;                        02S0752 03032000
         B     @RC00750                                         02S0752 03033000
@RF00750 OI    INVCHAR(BUFAD),B'00000100'                       02S0752 03034000
*                  PARMNUM = ZERO;     /* EXIT THIS KEY WORD.        */ 03035000
@RC00750 DS    0H                                               02S0753 03036000
@RC00735 MVI   PARMNUM(BUFAD),X'00'                             02S0753 03037000
*                END;                  /*                            */ 03038000
*                  END;                /* END DELIMITER ANALYSIS.    */ 03039000
*                ELSE                  /* ERROR IN PARM GROUP.       */ 03040000
*                  DO;                 /*                            */ 03041000
         B     @RC00698                                         01S0756 03042000
@RF00698 DS    0H                                               01S0757 03043000
*                    INVDLM = ON;      /* INDICATE BAD PARAMETER.    */ 03044000
         OI    INVDLM(BUFAD),B'10000000'                        01S0757 03045000
*                    PARMNUM = ZERO;   /* RESET TO EXIT KEYWORD.     */ 03046000
         MVI   PARMNUM(BUFAD),X'00'                             01S0758 03047000
*                  END;                /*                            */ 03048000
*            ELSE                      /* PARAMETER HERE.            */ 03049000
*              IF PARMGRP = OFF        /* CHECK FOR VALID            */ 03050000
*               | FLDSW = ON           /*  PARAMETER                 */ 03051000
*               | PRECOL = LPARN       /*  POSITION.                 */ 03052000
*                THEN                  /*                            */ 03053000
         B     @RC00697                                         01S0760 03054000
@RF00697 TM    FLDSW(BUFAD),B'00001000'                         01S0760 03055000
         BNZ   @RT00760                                         01S0760 03056000
         TM    PARMGRP(BUFAD),B'00000100'                       01S0760 03057000
         BNO   @RT00760                                         01S0760 03058000
         CLI   PRECOL(BUFAD),X'80'                              01S0760 03059000
         BNE   @RF00760                                         01S0760 03060000
@RT00760 DS    0H                                               01S0761 03061000
*                  DO;                 /* COULD BE A PARAMETER.      */ 03062000
*/********************************************************************* 03063000
**                                                                    * 03064000
**  THIS SEGMENT IS ENTERED WHEN A DELIMITING CHARACTER IS FOUND      * 03065000
**  AFTER FINDING A VALID PARAMETER CHARACTER STRING.                 * 03066000
**                                                                    * 03067000
**********************************************************************/ 03068000
*                                                               02S0762 03069000
*        IF PARMSIZE  =< KPLEN(PARMNUM)/* CHECK FOR LENGTH RANGE.    */ 03070000
*           | (KPLEN(PARMNUM) = ALBIT                           02S0762 03071000
*              & PARMSIZE < LENGTH(CARDDATA))                   02S0762 03072000
*          THEN                        /*                            */ 03073000
         SLR   @10,@10                                          02S0762 03074000
         ICM   @10,3,PARMSIZE(BUFAD)                            02S0762 03075000
         SLR   @09,@09                                          02S0762 03076000
         IC    @09,PARMNUM(,BUFAD)                              02S0762 03077000
         ALR   @09,@09                                          02S0762 03078000
         SLR   @02,@02                                          02S0762 03079000
         IC    @02,ACTIVKEY(,BUFAD)                             02S0762 03080000
         MH    @02,@CH00359                                     02S0762 03081000
         LA    @02,KPARM-20(@02)                                02S0762 03082000
         BCTR  @02,0                                            02S0762 03083000
         SLR   @15,@15                                          02S0762 03084000
         IC    @15,KPLEN-1(@09,@02)                             02S0762 03085000
         CR    @10,@15                                          02S0762 03086000
         BNH   @RT00762                                         02S0762 03087000
         CH    @15,@CH00827                                     02S0762 03088000
         BNE   @RF00762                                         02S0762 03089000
         CH    @10,@CH00223                                     02S0762 03090000
         BNL   @RF00762                                         02S0762 03091000
@RT00762 DS    0H                                               02S0763 03092000
*            IF PRNCNT = ZERO          /* COULD BE AT THE BEGINNING  */ 03093000
*             | STOPCODE = LPARN                                02S0763 03094000
*              THEN                    /*  OF A PARAMETER GROUP.     */ 03095000
         ICM   @10,3,PRNCNT(BUFAD)                              02S0763 03096000
         BZ    @RT00763                                         02S0763 03097000
         SLR   @10,@10                                          02S0763 03098000
         IC    @10,ARGMT(,BUFAD)                                02S0763 03099000
         LA    @10,FBYTE-1(@10)                                 02S0763 03100000
         CLI   STOPCODE(@10),X'80'                              02S0763 03101000
         BNE   @RF00763                                         02S0763 03102000
@RT00763 DS    0H                                               02S0764 03103000
*                IF STOPCODE = RPARN   /* RIGHT PARENTHESIS          */ 03104000
*                 | STOPCODE = LPARN                            02S0764 03105000
*                  THEN                /*  ARE INVALID HERE          */ 03106000
         SLR   @10,@10                                          02S0764 03107000
         IC    @10,ARGMT(,BUFAD)                                02S0764 03108000
         LA    @10,FBYTE-1(@10)                                 02S0764 03109000
         CLI   STOPCODE(@10),X'40'                              02S0764 03110000
         BE    @RT00764                                         02S0764 03111000
         CLI   STOPCODE(@10),X'80'                              02S0764 03112000
         BNE   @RF00764                                         02S0764 03113000
@RT00764 DS    0H                                               02S0765 03114000
*                    DO;                                        02S0765 03115000
*                      INVDLM = ON;    /* SET INVALID DELIMITER.     */ 03116000
         OI    INVDLM(BUFAD),B'10000000'                        02S0766 03117000
*                      PARMNUM = ZERO; /* EXIT THIS KEYWORD.         */ 03118000
         MVI   PARMNUM(BUFAD),X'00'                             02S0767 03119000
*                    END;              /*                            */ 03120000
*                  ELSE                /* ONLY COMMA OR BLANK        */ 03121000
*                    IF STOPFLAG=ONEH  /*  IS ALLOWED TO             */ 03122000
*                      THEN            /*  DELIMIT HERE.             */ 03123000
         B     @RC00764                                         02S0769 03124000
@RF00764 SLR   @10,@10                                          02S0769 03125000
         IC    @10,ARGMT(,BUFAD)                                02S0769 03126000
         LA    @10,FUNCTION-1(@10)                              02S0769 03127000
         TM    STOPFLAG(@10),B'00010000'                        02S0769 03128000
         BNO   @RF00769                                         02S0769 03129000
         TM    STOPFLAG(@10),B'11100000'                        02S0769 03130000
         BNZ   @RF00769                                         02S0769 03131000
*                        DO;           /*                            */ 03132000
*                          CALL CONVRTER;/* CONVERT PARAMETER.       */ 03133000
         BAL   @14,CONVRTER                                     02S0771 03134000
*                          KWDCOMP = ON;/* SET KEYWORD COPLETE.      */ 03135000
         OI    KWDCOMP(BUFAD),B'00000001'                       02S0772 03136000
*                          IF STOPCODE=BLANK                    02S0773 03137000
*                            THEN      /* CHCK FOR STATEMENT COMPLETE*/ 03138000
         SLR   @10,@10                                          02S0773 03139000
         IC    @10,ARGMT(,BUFAD)                                02S0773 03140000
         LA    @10,FBYTE-1(@10)                                 02S0773 03141000
         CLI   STOPCODE(@10),X'11'                              02S0773 03142000
         BNE   @RF00773                                         02S0773 03143000
*                              SCANINP = OFF;/* SET TO EXIT SCAN.    */ 03144000
         NI    SCANINP(BUFAD),B'10111111'                       02S0774 03145000
*                            ELSE;     /*                            */ 03146000
@RF00773 DS    0H                                               02S0776 03147000
*                        END;          /*                            */ 03148000
*                      ELSE            /*                            */ 03149000
*                        DO;           /* DO NOT KNOW WHAT IT IS.    */ 03150000
         B     @RC00769                                         02S0777 03151000
@RF00769 DS    0H                                               02S0778 03152000
*                          INVCHAR = ON; /* INVALID CHARACTER.       */ 03153000
         OI    INVCHAR(BUFAD),B'00000100'                       02S0778 03154000
*                          PARMNUM = ZERO;/* EXIT THIS KEYWORD.      */ 03155000
         MVI   PARMNUM(BUFAD),X'00'                             02S0779 03156000
*                        END;          /*                            */ 03157000
*              ELSE                    /* SCAN IS IN THE MIDST OF A  */ 03158000
*                IF STOPCODE = RPARN   /*  PARAMETER GROUP           */ 03159000
*                  THEN                /*                            */ 03160000
         B     @RC00763                                         02S0781 03161000
@RF00763 SLR   @10,@10                                          02S0781 03162000
         IC    @10,ARGMT(,BUFAD)                                02S0781 03163000
         LA    @10,FBYTE-1(@10)                                 02S0781 03164000
         CLI   STOPCODE(@10),X'40'                              02S0781 03165000
         BNE   @RF00781                                         02S0781 03166000
*                    DO;               /*                            */ 03167000
*                      FLDSW = OFF;    /* RESET IN GROUP SWITCH.     */ 03168000
         NI    FLDSW(BUFAD),B'11110111'                         02S0783 03169000
*                      PRNCNT=PRNCNT-ONE;/* INCREMENT PAREN CNT      */ 03170000
         LH    @10,PRNCNT(,BUFAD)                               02S0784 03171000
         BCTR  @10,0                                            02S0784 03172000
         STH   @10,PRNCNT(,BUFAD)                               02S0784 03173000
*                      CALL CONVRTER;  /* CONVERT PARAMETER.         */ 03174000
         BAL   @14,CONVRTER                                     02S0785 03175000
*                      IF PRNCNT = ZERO /* COULD BE LAST GROUP.      */ 03176000
*                        THEN          /*                            */ 03177000
         ICM   @10,3,PRNCNT(BUFAD)                              02S0786 03178000
         BNZ   @RF00786                                         02S0786 03179000
*                          PARMGRP = OFF;/* END OF THIS GROUP.       */ 03180000
         NI    PARMGRP(BUFAD),B'11111011'                       02S0787 03181000
*                    END;              /*                            */ 03182000
*                  ELSE                /*                            */ 03183000
*                    IF STOPCODE =COMMA /* COMMA OK HERE             */ 03184000
*                      THEN            /*                            */ 03185000
         B     @RC00781                                         02S0789 03186000
@RF00781 SLR   @10,@10                                          02S0789 03187000
         IC    @10,ARGMT(,BUFAD)                                02S0789 03188000
         LA    @10,FBYTE-1(@10)                                 02S0789 03189000
         CLI   STOPCODE(@10),X'10'                              02S0789 03190000
         BNE   @RF00789                                         02S0789 03191000
*                        DO;           /*                            */ 03192000
*                          FLDSW = ON; /* INDICATE IN PARAMETER GROUP*/ 03193000
         OI    FLDSW(BUFAD),B'00001000'                         02S0791 03194000
*                          CALL CONVRTER;/* CONVERT PARAMETER        */ 03195000
         BAL   @14,CONVRTER                                     02S0792 03196000
*                            IF COL(ONE)=BLAN                   02S0793 03197000
*                             & CONTINUE=ON                     02S0793 03198000
*                              THEN    /* CHECK FOR CONTINUATION.    */ 03199000
         ICM   @10,7,CC(BUFAD)                                  02S0793 03200000
         CLI   COL(@10),C' '                                    02S0793 03201000
         BNE   @RF00793                                         02S0793 03202000
         TM    CONTINUE(BUFAD),B'00001000'                      02S0793 03203000
         BNO   @RF00793                                         02S0793 03204000
*                                CALL GETCARDN;/* GET CONTINUATION.  */ 03205000
         BAL   @14,GETCARDN                                     02S0794 03206000
*                        END;          /*                            */ 03207000
*                      ELSE            /*                            */ 03208000
*                        DO;           /* DO NOT KNOW WHAT IT IS.    */ 03209000
         B     @RC00789                                         02S0796 03210000
@RF00789 DS    0H                                               02S0797 03211000
*                          INVCHAR = ON; /* INVALID CHARACTER        */ 03212000
         OI    INVCHAR(BUFAD),B'00000100'                       02S0797 03213000
*                          PARMNUM = ZERO;/* EXIT THIS KEYWORD.      */ 03214000
         MVI   PARMNUM(BUFAD),X'00'                             02S0798 03215000
*                        END;          /*                            */ 03216000
*          ELSE                        /*                            */ 03217000
*            DO;                       /*                            */ 03218000
         B     @RC00762                                         02S0800 03219000
@RF00762 DS    0H                                               02S0801 03220000
*              INVPARM = ON;           /* INVALID PARAMETER.         */ 03221000
         OI    INVPARM(BUFAD),B'00001000'                       02S0801 03222000
*              PARMNUM = ZERO;         /* RESET PARAMETER NUMBER     */ 03223000
         MVI   PARMNUM(BUFAD),X'00'                             02S0802 03224000
*              PARMSIZE = ZERO;        /*  AND PARAMETER SIZE.       */ 03225000
         SLR   @10,@10                                          02S0803 03226000
         STH   @10,PARMSIZE(,BUFAD)                             02S0803 03227000
*            END;                      /*                            */ 03228000
*                  END;                /* END PARAMETER ANALYSIS.    */ 03229000
*                ELSE                  /* MUST BE INVALID.           */ 03230000
*                  DO;                 /*                            */ 03231000
         B     @RC00760                                         01S0806 03232000
@RF00760 DS    0H                                               01S0807 03233000
*                    INVPARM = ON;     /* INDICATE INVALID.          */ 03234000
         OI    INVPARM(BUFAD),B'00001000'                       01S0807 03235000
*                    PARMNUM = ZERO;   /* RESET TO EXIT KEYWORD.     */ 03236000
         MVI   PARMNUM(BUFAD),X'00'                             01S0808 03237000
*                  END;                /*                            */ 03238000
*          PRECOL = STOPCODE;          /* SAVE LAST STOPCODE.        */ 03239000
@RC00760 DS    0H                                               01S0810 03240000
@RC00697 SLR   @10,@10                                          01S0810 03241000
         IC    @10,ARGMT(,BUFAD)                                01S0810 03242000
         LA    @10,FBYTE-1(@10)                                 01S0810 03243000
         MVC   PRECOL(1,BUFAD),STOPCODE(@10)                    01S0810 03244000
*        END;                          /* END PARAMETER DETERMINATION*/ 03245000
@DE00694 CLI   STATUS3(BUFAD),0                                 01S0811 03246000
         BE    @DL00694                                         01S0811 03247000
*  END FINDPARM;                       /* RETURN TO CALLER.          */ 03248000
@EL00019 DS    0H                                               01S0812 03249000
@EF00019 DS    0H                                               01S0812 03250000
@ER00019 L     @14,@SA00019                                     01S0812 03251000
         BR    @14                                              01S0812 03252000
         EJECT                                                          03253000
*/********************************************************************* 03254000
**                                                                    * 03255000
**  THIS ROUTINE WILL DETERMINE WHICH KIND OF CONVERSION IS           * 03256000
**  REQUIRED FOR EACH PARAMETER AND INVOKE THE APPROPRIATE            * 03257000
**  CONVERSION ROUTINE.                                               * 03258000
**                                                                    * 03259000
**********************************************************************/ 03260000
*CONVRTER:                                                      01S0813 03261000
*  PROCEDURE OPTIONS(SAVE(R14));                                01S0813 03262000
CONVRTER ST    @14,@SA00020                                     01S0813 03263000
*        IF PARMNUM =< KCNT(ACTIVKEY)  /* CHECK FOR TO MANY          */ 03264000
*          THEN                        /*  PARAMETERS.               */ 03265000
         SLR   @10,@10                                          01S0814 03266000
         IC    @10,PARMNUM(,BUFAD)                              01S0814 03267000
         SLR   @09,@09                                          01S0814 03268000
         IC    @09,ACTIVKEY(,BUFAD)                             01S0814 03269000
         MH    @09,@CH00359                                     01S0814 03270000
         SLR   @02,@02                                          01S0814 03271000
         IC    @02,KCNT-20(@09)                                 01S0814 03272000
         CR    @10,@02                                          01S0814 03273000
         BH    @RF00814                                         01S0814 03274000
*            IF KDEC(PARMNUM)=ON       /* CHECK FOR DECIMAL REQUEST. */ 03275000
*              THEN                    /* PARAMETER REQUIRES         */ 03276000
         ALR   @10,@10                                          01S0815 03277000
         LA    @09,KPARM-20(@09)                                01S0815 03278000
         ALR   @09,@10                                          01S0815 03279000
         BCTR  @09,0                                            01S0815 03280000
         BCTR  @09,0                                            01S0815 03281000
         TM    KDEC(@09),B'10000000'                            01S0815 03282000
         BNO   @RF00815                                         01S0815 03283000
*                CALL CONVERT;         /*  DECIMAL CONVERSION.       */ 03284000
         BAL   @14,CONVERT                                      01S0816 03285000
*              ELSE                    /*                            */ 03286000
*                IF KHEX(PARMNUM) = ON /* CHECK HEXADECIMAL REQUEST. */ 03287000
*                  THEN                /* PARAMETER REQUIRES         */ 03288000
         B     @RC00815                                         01S0817 03289000
@RF00815 SLR   @10,@10                                          01S0817 03290000
         IC    @10,PARMNUM(,BUFAD)                              01S0817 03291000
         ALR   @10,@10                                          01S0817 03292000
         SLR   @09,@09                                          01S0817 03293000
         IC    @09,ACTIVKEY(,BUFAD)                             01S0817 03294000
         MH    @09,@CH00359                                     01S0817 03295000
         LA    @09,KPARM-20(@09)                                01S0817 03296000
         ALR   @09,@10                                          01S0817 03297000
         BCTR  @09,0                                            01S0817 03298000
         BCTR  @09,0                                            01S0817 03299000
         TM    KHEX(@09),B'01000000'                            01S0817 03300000
         BNO   @RF00817                                         01S0817 03301000
*                    CALL CONVERTX;    /*  HEXADECIMAL CONVERSION.   */ 03302000
         BAL   @14,CONVERTX                                     01S0818 03303000
*                  ELSE;               /* NO CONVERSION.             */ 03304000
@RF00817 DS    0H                                               01S0820 03305000
*          ELSE                        /* TOO MANY PARAMETERS        */ 03306000
*            INVPARM = ON;             /*  IS INVALID.               */ 03307000
         B     @RC00814                                         01S0820 03308000
@RF00814 OI    INVPARM(BUFAD),B'00001000'                       01S0820 03309000
*        IF INVPARM = ON               /* ANY PARAMETER ERROR WILL   */ 03310000
*          THEN                        /*  CAUSE SCANNING TO STOP    */ 03311000
@RC00814 TM    INVPARM(BUFAD),B'00001000'                       01S0821 03312000
         BNO   @RF00821                                         01S0821 03313000
*            PARMNUM = ZERO;           /*  FOR THIS KEYWORD.         */ 03314000
         MVI   PARMNUM(BUFAD),X'00'                             01S0822 03315000
*          ELSE                        /* NO ERROR,                  */ 03316000
*            DO;                       /*                            */ 03317000
         B     @RC00821                                         01S0823 03318000
@RF00821 DS    0H                                               01S0824 03319000
*              FOUND = ON;             /* A PARAMETER WAS FOUND.     */ 03320000
         OI    FOUND(BUFAD),B'01000000'                         01S0824 03321000
*              PARMGRP = ON;           /* INDICATE IN PARAMETER GROUP*/ 03322000
         OI    PARMGRP(BUFAD),B'00000100'                       01S0825 03323000
*            END;                      /*                            */ 03324000
*  END CONVRTER;                       /* RETURN TO CALLER.          */ 03325000
@EL00020 DS    0H                                               01S0827 03326000
@EF00020 DS    0H                                               01S0827 03327000
@ER00020 L     @14,@SA00020                                     01S0827 03328000
         BR    @14                                              01S0827 03329000
         EJECT                                                          03330000
*/********************************************************************* 03331000
**                                                                    * 03332000
**  THIS ROUTINE WILL CONVERT HEXADECIMAL CHARACTERS TO FOUR          * 03333000
**  BIT HEXADECIMAL HALF BYTES, VALIDATING THAT EACH CHARACTER        * 03334000
**  IS INDEED A HEXADECIMAL CHARACTER.                                * 03335000
**                                                                    * 03336000
**********************************************************************/ 03337000
*CONVERTX:                                                      01S0828 03338000
*  PROCEDURE OPTIONS(SAVE(R14));                                01S0828 03339000
*                                                               01S0828 03340000
CONVERTX ST    @14,12(,@13)                                     01S0828 03341000
*        HEXERR = OFF;                 /* RESET ERROR INDICATOR.     */ 03342000
         NI    HEXERR(BUFAD),B'11101111'                        01S0829 03343000
*        IF (PARMSIZE & ODD) = ZERO    /* HEX CHARACTERS MUST BE     */ 03344000
*         & PARMSIZE ^= ZERO           /*  NOT ZERO AND AN           */ 03345000
*          THEN                        /*  EVEN NUMBER OF BYTES.     */ 03346000
         SLR   @10,@10                                          01S0830 03347000
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0830 03348000
         LR    @09,@10                                          01S0830 03349000
         N     @09,@CF00061                                     01S0830 03350000
         LTR   @09,@09                                          01S0830 03351000
         BNZ   @RF00830                                         01S0830 03352000
         LTR   @10,@10                                          01S0830 03353000
         BZ    @RF00830                                         01S0830 03354000
*            DO;                       /*                            */ 03355000
*              DO                      /*                            */ 03356000
*               CNT = TWO              /* TWO CHARS FROM CARD WILL   */ 03357000
*               BY TWO                 /*  MAKE ONE BYTE OF HEX.     */ 03358000
*               TO PARMSIZE            /*                            */ 03359000
*               WHILE TRODD ^= INVHEX  /* CHECKING ODD CHARACTER.    */ 03360000
*                  & TREVEN ^= INVHEX; /* CHECKING EVEN CHARACTER.   */ 03361000
         LA    CNT,2                                            01S0832 03362000
         B     @DE00832                                         01S0832 03363000
@DL00832 LA    @10,TRANS                                        01S0832 03364000
         SLR   @09,@09                                          01S0832 03365000
         IC    @09,CARDDATA-2(CNT,BUFAD)                        01S0832 03366000
         ALR   @09,@10                                          01S0832 03367000
         CLI   TRODD(@09),X'C3'                                 01S0832 03368000
         BE    @DC00832                                         01S0832 03369000
         SLR   @15,@15                                          01S0832 03370000
         IC    @15,CARDDATA-1(CNT,BUFAD)                        01S0832 03371000
         ALR   @15,@10                                          01S0832 03372000
         CLI   TREVEN(@15),X'C3'                                01S0832 03373000
         BE    @DC00832                                         01S0832 03374000
*                                      /* TRANSLATE LEFT HALF.       */ 03375000
*                CARDDATA(CNT/TWO) = TRODD & LHALF;             01S0833 03376000
         LA    @15,2                                            01S0833 03377000
         LR    @00,CNT                                          01S0833 03378000
         SRDA  @00,32                                           01S0833 03379000
         DR    @00,@15                                          01S0833 03380000
         ALR   @01,BUFAD                                        01S0833 03381000
         MVC   @TS00001(1),TRODD(@09)                           01S0833 03382000
         NI    @TS00001,X'F0'                                   01S0833 03383000
         MVC   CARDDATA-1(1,@01),@TS00001                       01S0833 03384000
*                                      /* TRANSLATE RIGHT HALF.      */ 03385000
*                CARDDATA(CNT/TWO) =                            01S0834 03386000
*                 CARDDATA(CNT/TWO) | (TREVEN & RHALF);         01S0834 03387000
         LR    @00,CNT                                          01S0834 03388000
         SRDA  @00,32                                           01S0834 03389000
         DR    @00,@15                                          01S0834 03390000
         ALR   @01,BUFAD                                        01S0834 03391000
         LR    @04,CNT                                          01S0834 03392000
         SRDA  @04,32                                           01S0834 03393000
         DR    @04,@15                                          01S0834 03394000
         SLR   @09,@09                                          01S0834 03395000
         IC    @09,CARDDATA-1(CNT,BUFAD)                        01S0834 03396000
         ALR   @10,@09                                          01S0834 03397000
         MVC   @TS00001(1),TREVEN(@10)                          01S0834 03398000
         NI    @TS00001,X'0F'                                   01S0834 03399000
         ALR   @05,BUFAD                                        01S0834 03400000
         OC    @TS00001(1),CARDDATA-1(@05)                      01S0834 03401000
         MVC   CARDDATA-1(1,@01),@TS00001                       01S0834 03402000
*                IF CARDDATA(CNT/TWO) = ALBIT                   01S0835 03403000
*                  THEN                /* (FF) INVALID SOMETIMES.    */ 03404000
         LR    @00,CNT                                          01S0835 03405000
         SRDA  @00,32                                           01S0835 03406000
         DR    @00,@15                                          01S0835 03407000
         ALR   @01,BUFAD                                        01S0835 03408000
         CLI   CARDDATA-1(@01),X'FF'                            01S0835 03409000
         BNE   @RF00835                                         01S0835 03410000
*                    HEXERR = ON;      /* SO SAY SO.                 */ 03411000
         OI    HEXERR(BUFAD),B'00010000'                        01S0836 03412000
*                  ELSE;               /*                            */ 03413000
@RF00835 DS    0H                                               01S0838 03414000
*              END;                    /* END OF TRANSLATE.          */ 03415000
         AH    CNT,@CH00058                                     01S0838 03416000
@DE00832 SLR   @10,@10                                          01S0838 03417000
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0838 03418000
         CR    CNT,@10                                          01S0838 03419000
         BNH   @DL00832                                         01S0838 03420000
@DC00832 DS    0H                                               01S0839 03421000
*              IF CNT ^> PARMSIZE      /* CHECK FOR INCOMPLETE       */ 03422000
*                THEN                  /*  TRANSLATION.              */ 03423000
         SLR   @10,@10                                          01S0839 03424000
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0839 03425000
         CR    CNT,@10                                          01S0839 03426000
         BH    @RF00839                                         01S0839 03427000
*                  INVPARM = ON;       /* MEANS CHAR NOT HEX.        */ 03428000
         OI    INVPARM(BUFAD),B'00001000'                       01S0840 03429000
*                ELSE                  /* ADJUST PARAMETER SIZE.     */ 03430000
*                  PARMSIZE = PARMSIZE/TWO;                     01S0841 03431000
         B     @RC00839                                         01S0841 03432000
@RF00839 SLR   @10,@10                                          01S0841 03433000
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0841 03434000
         SRL   @10,1                                            01S0841 03435000
         STH   @10,PARMSIZE(,BUFAD)                             01S0841 03436000
*            END;                      /*                            */ 03437000
*          ELSE                        /* ODD NUMBER OF BYTES.       */ 03438000
*            INVPARM = ON;             /* MEANS INVALID PARAMETER.   */ 03439000
         B     @RC00830                                         01S0843 03440000
@RF00830 OI    INVPARM(BUFAD),B'00001000'                       01S0843 03441000
*  END CONVERTX;                       /* RETURN TO CALLER.          */ 03442000
@EL00021 DS    0H                                               01S0844 03443000
@EF00021 DS    0H                                               01S0844 03444000
@ER00021 L     @14,12(,@13)                                     01S0844 03445000
         BR    @14                                              01S0844 03446000
         EJECT                                                          03447000
*/********************************************************************* 03448000
**                                                                    * 03449000
**  THIS ROUTINE WILL VALIDATE THAT THE SUBJECT FIELD IS A            * 03450000
**  NUMERIC VALUE, THEN CONVERT THAT EBCDIC VALUE TO THE BINARY       * 03451000
**  REPRESENTATION OF THAT VALUE.                                     * 03452000
**                                                                    * 03453000
**********************************************************************/ 03454000
*CONVERT:                                                       01S0845 03455000
*  PROCEDURE OPTIONS(SAVE(R14));                                01S0845 03456000
CONVERT  ST    @14,@SA00022                                     01S0845 03457000
*        DO                            /* VALIDATE CHARACTER FIELD.  */ 03458000
*         HCNT = ONE                   /* FIELD IS                   */ 03459000
*         TO PARMSIZE                  /*  FOUR CHARACTERS.          */ 03460000
*         WHILE CARDDATA(HCNT) =< X9   /* EACH CHAR VALUE MUST BE    */ 03461000
*             & CARDDATA(HCNT) => X0;  /*  A NUMERIC.                */ 03462000
         LA    HCNT,1                                           01S0846 03463000
         B     @DE00846                                         01S0846 03464000
@DL00846 LR    @10,BUFAD                                        01S0846 03465000
         ALR   @10,HCNT                                         01S0846 03466000
         CLC   CARDDATA-1(1,@10),X9                             01S0846 03467000
         BH    @DC00846                                         01S0846 03468000
         LR    @10,BUFAD                                        01S0846 03469000
         ALR   @10,HCNT                                         01S0846 03470000
         CLC   CARDDATA-1(1,@10),X0                             01S0846 03471000
         BL    @DC00846                                         01S0846 03472000
*        END;                          /* END VALIDATION.            */ 03473000
         AL    HCNT,@CF00061                                    01S0847 03474000
@DE00846 SLR   @10,@10                                          01S0847 03475000
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0847 03476000
         CR    HCNT,@10                                         01S0847 03477000
         BNH   @DL00846                                         01S0847 03478000
@DC00846 DS    0H                                               01S0848 03479000
*        IF HCNT > PARMSIZE            /* EXCEEDED COUNT INDICATES   */ 03480000
*         & PARMSIZE ^= ZERO           /*  ALL OK.                   */ 03481000
*         & PARMSIZE < SIXTN           /* MAX OF FIFTEEN CHARS.      */ 03482000
*          THEN                        /*  A VALID NUMERIC VALUE.    */ 03483000
         SLR   @10,@10                                          01S0848 03484000
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0848 03485000
         CR    HCNT,@10                                         01S0848 03486000
         BNH   @RF00848                                         01S0848 03487000
         LTR   @10,@10                                          01S0848 03488000
         BZ    @RF00848                                         01S0848 03489000
         CH    @10,@CH00117                                     01S0848 03490000
         BNL   @RF00848                                         01S0848 03491000
*            DO;                       /*                            */ 03492000
*              RESPECIFY (DB,R14) RESTRICTED;                   01S0850 03493000
*              DB = PARMSIZE - ONE;    /* NUMBER FOR PACK INSTRUCTION*/ 03494000
         BCTR  @10,0                                            01S0851 03495000
         LR    DB,@10                                           01S0851 03496000
*              R14 = ADDR(CARDDATA);                            01S0852 03497000
         LA    R14,CARDDATA(,BUFAD)                             01S0852 03498000
*              GEN REFS(PACKIT)                                 01S0853 03499000
*               (EX  DB,PACKIT);       /* EXECUTE A PACK INSTRUCTION.*/ 03500000
         EX  DB,PACKIT                                                  03501000
*              RESPECIFY (DB,R14) UNRESTRICTED;                 01S0854 03502000
*              CVB(FWORK,DWORK);       /* CONVERT TO BINARY.         */ 03503000
         CVB   @10,DWORK(,BUFAD)                                01S0855 03504000
         ST    @10,FWORK(,BUFAD)                                01S0855 03505000
*            END;                      /*                            */ 03506000
*          ELSE                        /* ENTER HERE IF INVALID.     */ 03507000
*            INVPARM = ON;             /* INDICATE INVALID.          */ 03508000
         B     @RC00848                                         01S0857 03509000
@RF00848 OI    INVPARM(BUFAD),B'00001000'                       01S0857 03510000
*        IF KSPEC(PARMNUM) = OFF       /* CHECK FOR ZEROES PERMITTED */ 03511000
*         & FWORK = ZERO               /* CHECK FOR ZERO CODED.      */ 03512000
*          THEN                        /*                            */ 03513000
@RC00848 SLR   @10,@10                                          01S0858 03514000
         IC    @10,PARMNUM(,BUFAD)                              01S0858 03515000
         ALR   @10,@10                                          01S0858 03516000
         SLR   @09,@09                                          01S0858 03517000
         IC    @09,ACTIVKEY(,BUFAD)                             01S0858 03518000
         MH    @09,@CH00359                                     01S0858 03519000
         LA    @09,KPARM-20(@09)                                01S0858 03520000
         ALR   @09,@10                                          01S0858 03521000
         BCTR  @09,0                                            01S0858 03522000
         BCTR  @09,0                                            01S0858 03523000
         TM    KSPEC(@09),B'00010000'                           01S0858 03524000
         BNZ   @RF00858                                         01S0858 03525000
         ICM   @10,15,FWORK(BUFAD)                              01S0858 03526000
         BNZ   @RF00858                                         01S0858 03527000
*            INVPARM = ON;             /* INDICATE ERROR             */ 03528000
         OI    INVPARM(BUFAD),B'00001000'                       01S0859 03529000
*          ELSE;                       /*                            */ 03530000
@RF00858 DS    0H                                               01S0861 03531000
*  END;                                /* RETURN TO CALLER.          */ 03532000
*                                                               01S0861 03533000
*                                                               01S0861 03534000
@EL00022 DS    0H                                               01S0861 03535000
@EF00022 DS    0H                                               01S0861 03536000
@ER00022 L     @14,@SA00022                                     01S0861 03537000
         BR    @14                                              01S0861 03538000
@PB00022 DS    0H                                               01S0862 03539000
*              GEN DATA  DEFS(PACKIT);                          01S0862 03540000
*                                                               01S0862 03541000
*                                                               01S0862 03542000
*  END IEBISCAN                        /* RETURN TO OPERATION.       */ 03543000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 03544000
*/*%INCLUDE SYSLIB  (IEBIBLKS)                                        * 03545000
*/*@INCLUDE SYSUT5  (OPSCAN  )                                        * 03546000
*/*@INCLUDE SYSUT5  (KEYWORD )                                        * 03547000
*/*@INCLUDE SYSUT5  (REPSCAN )                                        * 03548000
*/*@INCLUDE SYSUT5  (KWDEXCEP)                                        * 03549000
*/*@INCLUDE SYSUT5  (SAVECODE)                                        * 03550000
*/*@INCLUDE SYSUT5  (SAVECODE)                                        * 03551000
*/*@INCLUDE SYSUT5  (SAVECODE)                                        * 03552000
*/*@INCLUDE SYSUT5  (SAVECODE)                                        * 03553000
*/*@INCLUDE SYSUT5  (SAVECODE)                                        * 03554000
*/*@INCLUDE SYSUT5  (SAVECODE)                                        * 03555000
*/*@INCLUDE SYSUT5  (SAVECODE)                                        * 03556000
*/*@INCLUDE SYSUT5  (SAVECODE)                                        * 03557000
*/*@INCLUDE SYSUT5  (SAVECODE)                                        * 03558000
*/*@INCLUDE SYSUT5  (SAVECODE)                                        * 03559000
*/*@INCLUDE SYSUT5  (SAVECODE)                                        * 03560000
*/*@INCLUDE SYSUT5  (SAVECODE)                                        * 03561000
*/*@INCLUDE SYSUT5  (SAVECODE)                                        * 03562000
*/*@INCLUDE SYSUT5  (SAVECODE)                                        * 03563000
*/*@INCLUDE SYSUT5  (SAVECODE)                                        * 03564000
*/*@INCLUDE SYSUT5  (TEXTDATA)                                        * 03565000
*/*@INCLUDE SYSUT5  (DLMCK1  )                                        * 03566000
*/*@INCLUDE SYSUT5  (DLMCK2  )                                        * 03567000
*;                                                              01S0863 03568000
@EL00001 DS    0H                                               01S0863 03569000
@EF00001 DS    0H                                               01S0863 03570000
@ER00001 LM    @14,@12,12(@13)                                  01S0863 03571000
         BR    @14                                              01S0863 03572000
@DATA    DS    0H                                                       03573000
@CH00480 DC    H'0'                                                     03574000
@CH00058 DC    H'2'                                                     03575000
@CH00112 DC    H'3'                                                     03576000
@CH00051 DC    H'4'                                                     03577000
@CH00187 DC    H'6'                                                     03578000
@CH00049 DC    H'8'                                                     03579000
@CH00344 DC    H'10'                                                    03580000
@CH00033 DC    H'12'                                                    03581000
@CH00157 DC    H'15'                                                    03582000
@CH00117 DC    H'16'                                                    03583000
@CH00359 DC    H'20'                                                    03584000
@CH00054 DC    H'24'                                                    03585000
@CH00378 DC    H'30'                                                    03586000
@CH00247 DC    H'64'                                                    03587000
@CH00195 DC    H'120'                                                   03588000
@CH00889 DC    H'132'                                                   03589000
@CH00281 DC    H'204'                                                   03590000
@CH00550 DC    H'255'                                                   03591000
@CH00220 DC    H'256'                                                   03592000
@CH00897 DC    H'408'                                                   03593000
@CH00223 DC    H'414'                                                   03594000
@CH00254 DC    H'1024'                                                  03595000
@CH00827 DC    XL2'FF'                                                  03596000
@SC01023 CLC   TABLENAM(0,@10),CARDDATA(BUFAD)                          03597000
@SC01029 CLC   0(0,@01),CARDDATA(BUFAD)                                 03598000
@SM01031 MVC   LASTKEY(0,BUFAD),CARDDATA(BUFAD)                         03599000
@SM01035 MVC   BSUFIX(0,BUFAD),CARDDATA(BUFAD)                          03600000
@SC01042 CLC   CARDDATA(0,BUFAD),@CC00456                               03601000
@SM01044 MVC   GRAFMODN-4(0,@10),CARDDATA(BUFAD)                        03602000
@SM01049 MVC   TEXTDATA(0,BUFFPTR),CARDDATA(BUFAD)                      03603000
@SM01051 MVC   TEXTDATA(0,@10),TEXTDATA(BUFFPTR)                        03604000
         DS    0F                                                       03605000
@SA00018 DS    1F                                                       03606000
@SA00019 DS    1F                                                       03607000
@SA00022 DS    1F                                                       03608000
@SA00020 DS    1F                                                       03609000
@TF00001 DS    F                                                        03610000
         DS    0F                                                       03611000
@CF00061 DC    F'1'                                                     03612000
@CH00061 EQU   @CF00061+2                                               03613000
@CF00037 DC    F'5'                                                     03614000
@CF01039 DC    F'-23'                                                   03615000
@CF01034 DC    F'-22'                                                   03616000
@CF01026 DC    F'-21'                                                   03617000
@CF01021 DC    F'-20'                                                   03618000
@CF01022 DC    F'-8'                                                    03619000
@CF01040 DC    F'-4'                                                    03620000
@CF01041 DC    F'-3'                                                    03621000
@CV00034 DC    V(IEBIMSGS)                                              03622000
         DS    0D                                                       03623000
@TS00001 DS    CL1                                                      03624000
@CC00924 DC    C'BAD NAME'                                              03625000
@CC00456 DC    C'DELETE'                                                03626000
         DS    CL1                                                      03627000
KEYTAB   DS    CL300                                                    03628000
         ORG   KEYTAB                                                   03629000
KELEM    DS    CL20                                                     03630000
         ORG   KELEM                                                    03631000
@NM00024 DC    AL1(3)                                                   03632000
@NM00025 DC    AL3(LPI)                                                 03633000
@NM00026 DC    B'11100000'                                              03634000
@NM00027 DC    AL1(2)                                                   03635000
@NM00028 DC    B'10000000'                                              03636000
@NM00029 DC    AL1(2)                                                   03637000
@NM00030 DC    B'10000000'                                              03638000
@NM00031 DC    AL1(3)                                                   03639000
@NM00032 DC    B'00000000'                                              03640000
@NM00033 DC    AL1(0)                                                   03641000
@NM00034 DC    CL8'LPI'                                                 03642000
         ORG   KEYTAB+20                                                03643000
@NM00035 DS    CL20                                                     03644000
         ORG   @NM00035                                                 03645000
@NM00036 DC    AL1(4)                                                   03646000
@NM00037 DC    AL3(SIZE)                                                03647000
@NM00038 DC    B'00000000'                                              03648000
@NM00039 DC    AL1(1)                                                   03649000
@NM00040 DC    B'10000000'                                              03650000
@NM00041 DC    AL1(3)                                                   03651000
@NM00042 DC    B'00000000'                                              03652000
@NM00043 DC    AL1(0)                                                   03653000
@NM00044 DC    B'00000000'                                              03654000
@NM00045 DC    AL1(0)                                                   03655000
@NM00046 DC    CL8'SIZE'                                                03656000
         ORG   KEYTAB+40                                                03657000
@NM00047 DS    CL20                                                     03658000
         ORG   @NM00047                                                 03659000
@NM00048 DC    AL1(6)                                                   03660000
@NM00049 DC    AL3(COPIES)                                              03661000
@NM00050 DC    B'11000000'                                              03662000
@NM00051 DC    AL1(2)                                                   03663000
@NM00052 DC    B'10000000'                                              03664000
@NM00053 DC    AL1(3)                                                   03665000
@NM00054 DC    B'10000000'                                              03666000
@NM00055 DC    AL1(3)                                                   03667000
@NM00056 DC    B'00000000'                                              03668000
@NM00057 DC    AL1(0)                                                   03669000
@NM00058 DC    CL8'COPIES'                                              03670000
         ORG   KEYTAB+60                                                03671000
@NM00059 DS    CL20                                                     03672000
         ORG   @NM00059                                                 03673000
@NM00060 DC    AL1(5)                                                   03674000
@NM00061 DC    AL3(LINES)                                               03675000
@NM00062 DC    B'11000000'                                              03676000
@NM00063 DC    AL1(2)                                                   03677000
@NM00064 DC    B'10000000'                                              03678000
@NM00065 DC    AL1(3)                                                   03679000
@NM00066 DC    B'10000000'                                              03680000
@NM00067 DC    AL1(3)                                                   03681000
@NM00068 DC    B'00000000'                                              03682000
@NM00069 DC    AL1(0)                                                   03683000
@NM00070 DC    CL8'LINES'                                               03684000
         ORG   KEYTAB+80                                                03685000
@NM00071 DS    CL20                                                     03686000
         ORG   @NM00071                                                 03687000
@NM00072 DC    AL1(3)                                                   03688000
@NM00073 DC    AL3(POS)                                                 03689000
@NM00074 DC    B'00000000'                                              03690000
@NM00075 DC    AL1(1)                                                   03691000
@NM00076 DC    B'10000000'                                              03692000
@NM00077 DC    AL1(3)                                                   03693000
@NM00078 DC    B'00000000'                                              03694000
@NM00079 DC    AL1(0)                                                   03695000
@NM00080 DC    B'00000000'                                              03696000
@NM00081 DC    AL1(0)                                                   03697000
@NM00082 DC    CL8'POS'                                                 03698000
         ORG   KEYTAB+100                                               03699000
@NM00083 DS    CL20                                                     03700000
         ORG   @NM00083                                                 03701000
@NM00084 DC    AL1(4)                                                   03702000
@NM00085 DC    AL3(TEXT)                                                03703000
@NM00086 DC    B'11100000'                                              03704000
@NM00087 DC    AL1(2)                                                   03705000
@NM00088 DC    B'00000000'                                              03706000
@NM00089 DC    AL1(4)                                                   03707000
@NM00090 DC    B'00000000'                                              03708000
@NM00091 DC    AL1(255)                                                 03709000
@NM00092 DC    B'00000000'                                              03710000
@NM00093 DC    AL1(0)                                                   03711000
@NM00094 DC    CL8'TEXT'                                                03712000
         ORG   KEYTAB+120                                               03713000
@NM00095 DS    CL20                                                     03714000
         ORG   @NM00095                                                 03715000
@NM00096 DC    AL1(3)                                                   03716000
@NM00097 DC    AL3(REF)                                                 03717000
@NM00098 DC    B'11100000'                                              03718000
@NM00099 DC    AL1(2)                                                   03719000
@NM00100 DC    B'10000000'                                              03720000
@NM00101 DC    AL1(3)                                                   03721000
@NM00102 DC    B'01000000'                                              03722000
@NM00103 DC    AL1(2)                                                   03723000
@NM00104 DC    B'00000000'                                              03724000
@NM00105 DC    AL1(0)                                                   03725000
@NM00106 DC    CL8'REF'                                                 03726000
         ORG   KEYTAB+140                                               03727000
@NM00107 DS    CL20                                                     03728000
         ORG   @NM00107                                                 03729000
@NM00108 DC    AL1(3)                                                   03730000
@NM00109 DC    AL3(GCM)                                                 03731000
@NM00110 DC    B'00000000'                                              03732000
@NM00111 DC    AL1(1)                                                   03733000
@NM00112 DC    B'00100000'                                              03734000
@NM00113 DC    AL1(4)                                                   03735000
@NM00114 DC    B'00000000'                                              03736000
@NM00115 DC    AL1(0)                                                   03737000
@NM00116 DC    B'00000000'                                              03738000
@NM00117 DC    AL1(0)                                                   03739000
@NM00118 DC    CL8'GCM'                                                 03740000
         ORG   KEYTAB+160                                               03741000
@NM00119 DS    CL20                                                     03742000
         ORG   @NM00119                                                 03743000
@NM00120 DC    AL1(7)                                                   03744000
@NM00121 DC    AL3(GCMLIST)                                             03745000
@NM00122 DC    B'11000000'                                              03746000
@NM00123 DC    AL1(1)                                                   03747000
@NM00124 DC    B'00100000'                                              03748000
@NM00125 DC    AL1(7)                                                   03749000
@NM00126 DC    B'00000000'                                              03750000
@NM00127 DC    AL1(0)                                                   03751000
@NM00128 DC    B'00000000'                                              03752000
@NM00129 DC    AL1(0)                                                   03753000
@NM00130 DC    CL8'GCMLIST'                                             03754000
         ORG   KEYTAB+180                                               03755000
@NM00131 DS    CL20                                                     03756000
         ORG   @NM00131                                                 03757000
@NM00132 DC    AL1(3)                                                   03758000
@NM00133 DC    AL3(LOC)                                                 03759000
@NM00134 DC    B'11100000'                                              03760000
@NM00135 DC    AL1(3)                                                   03761000
@NM00136 DC    B'01000000'                                              03762000
@NM00137 DC    AL1(2)                                                   03763000
@NM00138 DC    B'01000000'                                              03764000
@NM00139 DC    AL1(2)                                                   03765000
@NM00140 DC    B'10010000'                                              03766000
@NM00141 DC    AL1(2)                                                   03767000
@NM00142 DC    CL8'LOC'                                                 03768000
         ORG   KEYTAB+200                                               03769000
@NM00143 DS    CL20                                                     03770000
         ORG   @NM00143                                                 03771000
@NM00144 DC    AL1(5)                                                   03772000
@NM00145 DC    AL3(CGMID)                                               03773000
@NM00146 DC    B'11000000'                                              03774000
@NM00147 DC    AL1(1)                                                   03775000
@NM00148 DC    B'01000000'                                              03776000
@NM00149 DC    AL1(2)                                                   03777000
@NM00150 DC    B'00000000'                                              03778000
@NM00151 DC    AL1(0)                                                   03779000
@NM00152 DC    B'00000000'                                              03780000
@NM00153 DC    AL1(0)                                                   03781000
@NM00154 DC    CL8'CGMID'                                               03782000
         ORG   KEYTAB+220                                               03783000
@NM00155 DS    CL20                                                     03784000
         ORG   @NM00155                                                 03785000
@NM00156 DC    AL1(6)                                                   03786000
@NM00157 DC    AL3(DELSEG)                                              03787000
@NM00158 DC    B'11000000'                                              03788000
@NM00159 DC    AL1(1)                                                   03789000
@NM00160 DC    B'10000000'                                              03790000
@NM00161 DC    AL1(3)                                                   03791000
@NM00162 DC    B'00000000'                                              03792000
@NM00163 DC    AL1(0)                                                   03793000
@NM00164 DC    B'00000000'                                              03794000
@NM00165 DC    AL1(0)                                                   03795000
@NM00166 DC    CL8'DELSEG'                                              03796000
         ORG   KEYTAB+240                                               03797000
@NM00167 DS    CL20                                                     03798000
         ORG   @NM00167                                                 03799000
@NM00168 DC    AL1(6)                                                   03800000
@NM00169 DC    AL3(ASSIGN)                                              03801000
@NM00170 DC    B'11000000'                                              03802000
@NM00171 DC    AL1(2)                                                   03803000
@NM00172 DC    B'01000000'                                              03804000
@NM00173 DC    AL1(2)                                                   03805000
@NM00174 DC    B'10000000'                                              03806000
@NM00175 DC    AL1(2)                                                   03807000
@NM00176 DC    B'00000000'                                              03808000
@NM00177 DC    AL1(0)                                                   03809000
@NM00178 DC    CL8'ASSIGN'                                              03810000
         ORG   KEYTAB+260                                               03811000
@NM00179 DS    CL20                                                     03812000
         ORG   @NM00179                                                 03813000
@NM00180 DC    AL1(2)                                                   03814000
@NM00181 DC    AL3(CH)                                                  03815000
@NM00182 DC    B'11010000'                                              03816000
@NM00183 DC    AL1(1)                                                   03817000
@NM00184 DC    B'10000000'                                              03818000
@NM00185 DC    AL1(3)                                                   03819000
@NM00186 DC    B'00000000'                                              03820000
@NM00187 DC    AL1(0)                                                   03821000
@NM00188 DC    B'00000000'                                              03822000
@NM00189 DC    AL1(0)                                                   03823000
@NM00190 DC    CL8'CH'                                                  03824000
         ORG   KEYTAB+280                                               03825000
@NM00191 DS    CL20                                                     03826000
         ORG   @NM00191                                                 03827000
@NM00192 DC    AL1(8)                                                   03828000
@NM00193 DC    AL3(INVKEY)                                              03829000
@NM00194 DC    B'11100000'                                              03830000
@NM00195 DC    AL1(255)                                                 03831000
@NM00196 DC    B'00000000'                                              03832000
@NM00197 DC    AL1(255)                                                 03833000
@NM00198 DC    B'00000000'                                              03834000
@NM00199 DC    AL1(0)                                                   03835000
@NM00200 DC    B'00000000'                                              03836000
@NM00201 DC    AL1(0)                                                   03837000
@NM00202 DC    CL8' '                                                   03838000
         ORG   KEYTAB+300                                               03839000
TRTAB    DS    CL256                                                    03840000
         ORG   TRTAB                                                    03841000
X0       DC    X'F0'                                                    03842000
X1       DC    X'F1'                                                    03843000
X2       DC    X'F2'                                                    03844000
X3       DC    X'F3'                                                    03845000
X4       DC    X'F4'                                                    03846000
X5       DC    X'F5'                                                    03847000
X6       DC    X'F6'                                                    03848000
X7       DC    X'F7'                                                    03849000
X8       DC    X'F8'                                                    03850000
X9       DC    X'F9'                                                    03851000
XA       DC    X'C1'                                                    03852000
XB       DC    X'C2'                                                    03853000
XC       DC    X'C3'                                                    03854000
XD       DC    X'C4'                                                    03855000
XE       DC    X'C5'                                                    03856000
XF       DC    X'C6'                                                    03857000
@NM00203 DC    48X'C0'                                                  03858000
BLNK     DC    X'11'                                                    03859000
@NM00204 DC    12X'C0'                                                  03860000
LPRN     DC    X'80'                                                    03861000
@NM00205 DC    13X'C0'                                                  03862000
DOLLA    DC    X'00'                                                    03863000
ASTER    DC    X'00'                                                    03864000
RPRN     DC    X'40'                                                    03865000
@NM00206 DC    2X'C0'                                                   03866000
DASH     DC    X'00'                                                    03867000
@NM00207 DC    10X'C0'                                                  03868000
COM      DC    X'10'                                                    03869000
@NM00208 DC    15X'C0'                                                  03870000
POUND    DC    X'00'                                                    03871000
ATSI     DC    X'00'                                                    03872000
@NM00209 DC    X'C0'                                                    03873000
EQU      DC    X'20'                                                    03874000
@NM00210 DC    65X'C0'                                                  03875000
PLUS0    DC    X'00'                                                    03876000
A        DC    X'0A'                                                    03877000
B        DC    X'0B'                                                    03878000
C        DC    X'0C'                                                    03879000
D        DC    X'0D'                                                    03880000
E        DC    X'0E'                                                    03881000
F        DC    X'0F'                                                    03882000
GTOI     DC    3X'00'                                                   03883000
@NM00211 DC    7X'C0'                                                   03884000
JTOR     DC    9X'00'                                                   03885000
@NM00212 DC    8X'C0'                                                   03886000
STOZ     DC    8X'00'                                                   03887000
@NM00213 DC    6X'C0'                                                   03888000
HEXNO    DS    CL10                                                     03889000
         ORG   HEXNO                                                    03890000
H0       DC    X'00'                                                    03891000
H1       DC    X'01'                                                    03892000
H2       DC    X'02'                                                    03893000
H3       DC    X'03'                                                    03894000
H4       DC    X'04'                                                    03895000
H5       DC    X'05'                                                    03896000
H6       DC    X'06'                                                    03897000
H7       DC    X'07'                                                    03898000
H8       DC    X'08'                                                    03899000
H9       DC    X'09'                                                    03900000
         ORG   TRTAB+250                                                03901000
HA       DC    X'C1'                                                    03902000
HB       DC    X'C2'                                                    03903000
HC       DC    X'C3'                                                    03904000
HD       DC    X'C4'                                                    03905000
HE       DC    X'C5'                                                    03906000
HF       DC    X'C6'                                                    03907000
         ORG   TRTAB+256                                                03908000
TRANS    DS    CL256                                                    03909000
         ORG   TRANS                                                    03910000
@NM00214 DC    193X'C3'                                                 03911000
AA       DC    X'AA'                                                    03912000
BB       DC    X'BB'                                                    03913000
CCC      DC    X'CC'                                                    03914000
DD       DC    X'DD'                                                    03915000
EE       DC    X'EE'                                                    03916000
FF       DC    X'FF'                                                    03917000
@NM00215 DC    41X'C3'                                                  03918000
H00      DC    X'00'                                                    03919000
H11      DC    X'11'                                                    03920000
H22      DC    X'22'                                                    03921000
H33      DC    X'33'                                                    03922000
H44      DC    X'44'                                                    03923000
H55      DC    X'55'                                                    03924000
H66      DC    X'66'                                                    03925000
H77      DC    X'77'                                                    03926000
H88      DC    X'88'                                                    03927000
H99      DC    X'99'                                                    03928000
@NM00216 DC    6X'C3'                                                   03929000
         ORG   TRANS+256                                                03930000
BLNKS    DC    CL15' '                                                  03931000
PATCH    DC    40CL5'PATCH'                                             03932000
IEBISCAN CSECT                                                          03933000
PACKIT  PACK DWORK(8,BUFAD),0(0,R14) PACK SOME DATA.                    03934000
IEBISCAN CSECT                                                          03935000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       03936000
@01      EQU   01                                                       03937000
@02      EQU   02                                                       03938000
@03      EQU   03                                                       03939000
@04      EQU   04                                                       03940000
@05      EQU   05                                                       03941000
@06      EQU   06                                                       03942000
@07      EQU   07                                                       03943000
@08      EQU   08                                                       03944000
@09      EQU   09                                                       03945000
@10      EQU   10                                                       03946000
@11      EQU   11                                                       03947000
@12      EQU   12                                                       03948000
@13      EQU   13                                                       03949000
@14      EQU   14                                                       03950000
@15      EQU   15                                                       03951000
GCNT     EQU   @03                                                      03952000
HCNT     EQU   @02                                                      03953000
CNT      EQU   @02                                                      03954000
BUFAD    EQU   @08                                                      03955000
BUFFPTR  EQU   @06                                                      03956000
DB       EQU   @07                                                      03957000
R14      EQU   @14                                                      03958000
PARAM    EQU   @03                                                      03959000
RECAREA  EQU   @04                                                      03960000
RECSIZE  EQU   @05                                                      03961000
REMSIZE  EQU   @03                                                      03962000
RETCODE  EQU   @15                                                      03963000
R0       EQU   @00                                                      03964000
R1       EQU   @01                                                      03965000
SHIFT    EQU   @04                                                      03966000
SHIFT2   EQU   @05                                                      03967000
TRANSIZE EQU   @07                                                      03968000
WORKAREA EQU   0                                                        03969000
WORK     EQU   WORKAREA                                                 03970000
WSTOR    EQU   WORK                                                     03971000
DWORK    EQU   WSTOR                                                    03972000
DWORK1   EQU   DWORK                                                    03973000
DWORK2   EQU   DWORK+4                                                  03974000
PWORK    EQU   DWORK2+2                                                 03975000
FWORK    EQU   WSTOR+8                                                  03976000
STATUS1  EQU   WORK+12                                                  03977000
EOFFLG   EQU   STATUS1                                                  03978000
CARDIN   EQU   STATUS1                                                  03979000
CONTINUE EQU   STATUS1                                                  03980000
STATUS2  EQU   WORK+13                                                  03981000
REPUSE   EQU   STATUS2                                                  03982000
INHIBIT  EQU   STATUS2                                                  03983000
INHIBITW EQU   INHIBIT                                                  03984000
INHIBITR EQU   INHIBIT                                                  03985000
FMTERR   EQU   STATUS2                                                  03986000
PRTYERR  EQU   STATUS2                                                  03987000
READMOD  EQU   STATUS2                                                  03988000
STATUS3  EQU   WORK+14                                                  03989000
INVDLM   EQU   STATUS3                                                  03990000
FOUND    EQU   STATUS3                                                  03991000
INVKWD   EQU   STATUS3                                                  03992000
EXCLKWD  EQU   STATUS3                                                  03993000
INVPARM  EQU   STATUS3                                                  03994000
INVCHAR  EQU   STATUS3                                                  03995000
UNBAL    EQU   STATUS3                                                  03996000
KWDCOMP  EQU   STATUS3                                                  03997000
STATUS4  EQU   WORK+15                                                  03998000
KEYIN    EQU   STATUS4                                                  03999000
SCANINP  EQU   STATUS4                                                  04000000
HEXERR   EQU   STATUS4                                                  04001000
FLDSW    EQU   STATUS4                                                  04002000
PARMGRP  EQU   STATUS4                                                  04003000
LASTQ    EQU   STATUS4                                                  04004000
KWDUSED  EQU   WORK+16                                                  04005000
ACTIVOP  EQU   WORK+17                                                  04006000
NEXTOP   EQU   WORK+18                                                  04007000
ACTIVKEY EQU   WORK+19                                                  04008000
OPTABLN  EQU   WORK+20                                                  04009000
OPTABAD  EQU   WORK+21                                                  04010000
DIRECTRY EQU   WORK+24                                                  04011000
DNAME    EQU   DIRECTRY                                                 04012000
DATTRI   EQU   DIRECTRY+20                                              04013000
BLDLNTRY EQU   WORK+62                                                  04014000
BNAME    EQU   BLDLNTRY+4                                               04015000
BSUFIX   EQU   BNAME+4                                                  04016000
BTTRTA   EQU   BLDLNTRY+18                                              04017000
BATTRI   EQU   BLDLNTRY+26                                              04018000
PRECOL   EQU   WORK+105                                                 04019000
NEXT     EQU   WORK+106                                                 04020000
RETSAVE  EQU   WORK+108                                                 04021000
CC       EQU   WORK+109                                                 04022000
CARDEND  EQU   WORK+112                                                 04023000
DCBADS   EQU   WORK+116                                                 04024000
SYSPRTAD EQU   DCBADS                                                   04025000
SYSINAD  EQU   DCBADS+4                                                 04026000
MSGEDIT  EQU   WORK+132                                                 04027000
EDITLEN  EQU   MSGEDIT                                                  04028000
EDITDATA EQU   MSGEDIT+1                                                04029000
PRNCNT   EQU   WORK+148                                                 04030000
ARGMT    EQU   WORK+152                                                 04031000
LOADNAME EQU   WORK+160                                                 04032000
TESTP    EQU   WORK+170                                                 04033000
TPITCH   EQU   TESTP                                                    04034000
TPP      EQU   TPITCH                                                   04035000
TPARTY   EQU   TESTP+1                                                  04036000
TPS      EQU   TPARTY                                                   04037000
SAVE2    EQU   WORKAREA+244                                             04038000
SAVE3    EQU   WORKAREA+316                                             04039000
SAVE4    EQU   WORKAREA+388                                             04040000
PRIMCARD EQU   WORKAREA+460                                             04041000
SDRYCARD EQU   WORKAREA+540                                             04042000
MSGN     EQU   WORKAREA+620                                             04043000
MSG      EQU   WORKAREA+621                                             04044000
SPACE    EQU   MSG                                                      04045000
MSGTXT   EQU   MSG+1                                                    04046000
MSGR     EQU   MSGTXT+4                                                 04047000
MSGOF    EQU   MSGR+1                                                   04048000
FCBSIZE  EQU   WORKAREA+742                                             04049000
LPICNT   EQU   WORKAREA+744                                             04050000
LPI8     EQU   LPICNT                                                   04051000
LPI6     EQU   LPICNT+1                                                 04052000
LASTKEY  EQU   WORKAREA+784                                             04053000
PARMSIZE EQU   WORKAREA+792                                             04054000
PARMNUM  EQU   WORKAREA+794                                             04055000
SCANWORK EQU   WORKAREA+796                                             04056000
SCANARY  EQU   SCANWORK                                                 04057000
SCNT     EQU   SCANWORK+1024                                            04058000
CARDDATA EQU   SCANWORK+1026                                            04059000
LIBBUF   EQU   WORKAREA+2236                                            04060000
MODHEAD  EQU   LIBBUF                                                   04061000
MODCNT   EQU   MODHEAD+6                                                04062000
MODBOD   EQU   LIBBUF+8                                                 04063000
FCBBOD   EQU   MODBOD+3                                                 04064000
MSGSAVE  EQU   WORKAREA+10648                                           04065000
GRAFARY  EQU   0                                                        04066000
ASNARRAY EQU   GRAFARY                                                  04067000
ASNENTRY EQU   GRAFARY+1                                                04068000
REFARRAY EQU   GRAFARY+2                                                04069000
DEL      EQU   0                                                        04070000
TEXTDATA EQU   0                                                        04071000
COPYLINE EQU   0                                                        04072000
COPYLABL EQU   COPYLINE                                                 04073000
ICOPY    EQU   COPYLABL                                                 04074000
COPYX    EQU   COPYLABL+1                                               04075000
ILINE    EQU   COPYLABL+2                                               04076000
LINEX    EQU   COPYLABL+3                                               04077000
IPOS     EQU   COPYLABL+4                                               04078000
TEXTN    EQU   COPYLABL+5                                               04079000
TEXTD    EQU   COPYLINE+6                                               04080000
COL      EQU   0                                                        04081000
PRTQELEM EQU   0                                                        04082000
PRTQUEUE EQU   PRTQELEM+1                                               04083000
TABLDEF  EQU   0                                                        04084000
OPFLAGS  EQU   TABLDEF+1                                                04085000
LPIFLAG  EQU   OPFLAGS                                                  04086000
CHFLAG   EQU   OPFLAGS                                                  04087000
SIZEFLAG EQU   OPFLAGS                                                  04088000
COPYFLAG EQU   OPFLAGS                                                  04089000
LINEFLAG EQU   OPFLAGS                                                  04090000
POSFLAG  EQU   OPFLAGS                                                  04091000
TEXTFLAG EQU   OPFLAGS                                                  04092000
NAMEFLAG EQU   OPFLAGS+1                                                04093000
ASGNFLAG EQU   OPFLAGS+1                                                04094000
DELFLAG  EQU   OPFLAGS+1                                                04095000
REFFLAG  EQU   OPFLAGS+1                                                04096000
GCMFLAG  EQU   OPFLAGS+1                                                04097000
GCMLFLAG EQU   OPFLAGS+1                                                04098000
LOCFLAG  EQU   OPFLAGS+1                                                04099000
CGMIDFLG EQU   OPFLAGS+1                                                04100000
NOFLAG   EQU   OPFLAGS+2                                                04101000
ASTRFLAG EQU   OPFLAGS+2                                                04102000
REPFLAG  EQU   OPFLAGS+2                                                04103000
NOB      EQU   TABLDEF+4                                                04104000
RTNAME   EQU   TABLDEF+16                                               04105000
SCANBUF  EQU   0                                                        04106000
TABLENAM EQU   0                                                        04107000
NAMELEN  EQU   0                                                        04108000
PARMRTN  EQU   0                                                        04109000
PARMATTR EQU   0                                                        04110000
KPFLAGS  EQU   PARMATTR                                                 04111000
KDEC     EQU   KPFLAGS                                                  04112000
KHEX     EQU   KPFLAGS                                                  04113000
KSPEC    EQU   KPFLAGS                                                  04114000
KPLEN    EQU   PARMATTR+1                                               04115000
STOPCODE EQU   0                                                        04116000
STOPFLAG EQU   0                                                        04117000
TRODD    EQU   0                                                        04118000
TREVEN   EQU   0                                                        04119000
ASGNSAVE EQU   0                                                        04120000
ASGNMENT EQU   LPI8                                                     04121000
PITCH    EQU   LPI6                                                     04122000
ALLKEY   EQU   KWDUSED                                                  04123000
NAMESET  EQU   ALLKEY                                                   04124000
NOKEY    EQU   ALLKEY                                                   04125000
DELSET   EQU   ALLKEY                                                   04126000
FCBKEY   EQU   KWDUSED                                                  04127000
LPISET   EQU   FCBKEY                                                   04128000
SIZESET  EQU   FCBKEY                                                   04129000
CHSET    EQU   FCBKEY                                                   04130000
TBLKEY   EQU   KWDUSED                                                  04131000
LOCSET   EQU   TBLKEY                                                   04132000
CGMIDSET EQU   TBLKEY                                                   04133000
GCMLSET  EQU   TBLKEY                                                   04134000
COPYKEY  EQU   KWDUSED                                                  04135000
COPYSET  EQU   COPYKEY                                                  04136000
LINESET  EQU   COPYKEY                                                  04137000
POSSET   EQU   COPYKEY                                                  04138000
TEXTSET  EQU   COPYKEY                                                  04139000
GRAPHKEY EQU   KWDUSED                                                  04140000
REFSET   EQU   GRAPHKEY                                                 04141000
GCMSET   EQU   GRAPHKEY                                                 04142000
ASGNSET  EQU   GRAPHKEY                                                 04143000
XLATTABL EQU   MODBOD                                                   04144000
XPOS     EQU   XLATTABL                                                 04145000
CGMIDALL EQU   XLATTABL+256                                             04146000
CGMIDX   EQU   CGMIDALL                                                 04147000
CGMIDN   EQU   CGMIDX                                                   04148000
CGMIDNO  EQU   CGMIDX+1                                                 04149000
GRFMODS  EQU   XLATTABL+264                                             04150000
GRAFMODN EQU   GRFMODS                                                  04151000
FCBMOD   EQU   LIBBUF                                                   04152000
FCBHEAD  EQU   FCBMOD                                                   04153000
FCBYTE   EQU   FCBMOD+8                                                 04154000
FLPI12   EQU   FCBYTE                                                   04155000
CWORK    EQU   FWORK                                                    04156000
UWORK    EQU   CWORK                                                    04157000
UNITS    EQU   UWORK+1                                                  04158000
CWORKX   EQU   FWORK                                                    04159000
CWORK3   EQU   CWORKX+1                                                 04160000
CWORK2   EQU   CWORK3+1                                                 04161000
COL72    EQU   PRIMCARD+71                                              04162000
FIELDT   EQU   LPI6                                                     04163000
FIELDL   EQU   LPI8                                                     04164000
CHAN     EQU   LPI6                                                     04165000
KEYADDR  EQU   KEYTAB                                                   04166000
KLEN     EQU   KEYADDR                                                  04167000
PRMPTR   EQU   KEYADDR+1                                                04168000
KFLAGS   EQU   KEYADDR+4                                                04169000
KPARN2   EQU   KFLAGS                                                   04170000
VARI     EQU   KFLAGS                                                   04171000
KCNT     EQU   KEYADDR+5                                                04172000
KPARM    EQU   KEYADDR+6                                                04173000
KEYWD    EQU   KEYADDR+12                                               04174000
FBYTE    EQU   TRTAB                                                    04175000
FUNCTION EQU   FBYTE                                                    04176000
DCBTAB   EQU   DCBADS                                                   04177000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    04178000
KPARN1   EQU   KFLAGS                                                   04179000
KMULT    EQU   KFLAGS                                                   04180000
CWORK1   EQU   CWORK2+1                                                 04181000
@NM00020 EQU   CWORK2                                                   04182000
@NM00019 EQU   CWORK3                                                   04183000
@NM00018 EQU   CWORKX                                                   04184000
@NM00017 EQU   UWORK                                                    04185000
FCHN     EQU   FCBYTE                                                   04186000
FLPI     EQU   FLPI12                                                   04187000
@NM00016 EQU   FLPI12                                                   04188000
FCBNA    EQU   FCBYTE                                                   04189000
FCBCNT   EQU   FCBHEAD+6                                                04190000
FCBRSVD  EQU   FCBHEAD+4                                                04191000
FCBNAME  EQU   FCBHEAD                                                  04192000
XREF     EQU   XPOS                                                     04193000
XWCGM    EQU   XPOS                                                     04194000
@NM00015 EQU   GRAPHKEY                                                 04195000
@NM00014 EQU   COPYKEY                                                  04196000
@NM00013 EQU   TBLKEY                                                   04197000
@NM00012 EQU   FCBKEY                                                   04198000
KCHAR    EQU   KPFLAGS                                                  04199000
PRTPTR   EQU   TABLDEF+13                                               04200000
@NM00023 EQU   TABLDEF+12                                               04201000
CHKPTR   EQU   TABLDEF+9                                                04202000
@NM00022 EQU   TABLDEF+8                                                04203000
BLDPTR   EQU   TABLDEF+5                                                04204000
MLTFLAG  EQU   OPFLAGS                                                  04205000
OPNUM    EQU   TABLDEF                                                  04206000
TBN      EQU   PRTQUEUE+54                                              04207000
@NM00021 EQU   PRTQUEUE                                                 04208000
CONTROL  EQU   PRTQELEM                                                 04209000
LASTBYTE EQU   WORKAREA+17908                                           04210000
OVERFLO  EQU   LIBBUF+8200                                              04211000
FCBCLR   EQU   MODBOD+144                                               04212000
BEGMARG  EQU   MODBOD                                                   04213000
CMODCNT  EQU   MODCNT                                                   04214000
MODRSVD  EQU   MODHEAD+4                                                04215000
MODNAME  EQU   MODHEAD                                                  04216000
LINSV    EQU   CARDDATA+3                                               04217000
COPSV    EQU   CARDDATA                                                 04218000
RESRV1   EQU   WORKAREA+795                                             04219000
DDNAMES  EQU   WORKAREA+752                                             04220000
LOOP     EQU   WORKAREA+750                                             04221000
BOTTOM   EQU   WORKAREA+748                                             04222000
MARGN    EQU   LPICNT+3                                                 04223000
LPI12    EQU   LPICNT+2                                                 04224000
PAGENO   EQU   MSGOF+100                                                04225000
@NM00011 EQU   MSGOF                                                    04226000
@NM00010 EQU   MSGR                                                     04227000
PREFX    EQU   MSGTXT                                                   04228000
SEQNO    EQU   SDRYCARD+28                                              04229000
IDENT    EQU   SDRYCARD+24                                              04230000
@NM00009 EQU   SDRYCARD+18                                              04231000
RASDATA  EQU   SDRYCARD                                                 04232000
SAVE1    EQU   WORKAREA+172                                             04233000
PR2      EQU   TPS                                                      04234000
PR1      EQU   TPS                                                      04235000
TP2      EQU   TPP                                                      04236000
TP1      EQU   TPP                                                      04237000
SEGCNT   EQU   WORK+168                                                 04238000
INCLNAME EQU   LOADNAME+4                                               04239000
@NM00008 EQU   LOADNAME                                                 04240000
LOADMOD  EQU   WORK+157                                                 04241000
LOADFLAG EQU   WORK+156                                                 04242000
TODAY    EQU   WORK+153                                                 04243000
PAGE     EQU   WORK+150                                                 04244000
UTOUTAD  EQU   DCBADS+12                                                04245000
UTINAD   EQU   DCBADS+8                                                 04246000
LIBEXT   EQU   WORK+104                                                 04247000
@NM00007 EQU   BLDLNTRY+33                                              04248000
BLEN     EQU   BLDLNTRY+31                                              04249000
BSTOR    EQU   BLDLNTRY+28                                              04250000
BUNIREC  EQU   BATTRI                                                   04251000
@NM00006 EQU   BATTRI                                                   04252000
BTTRT    EQU   BTTRTA                                                   04253000
BINDCT   EQU   BLDLNTRY+17                                              04254000
@NM00005 EQU   BLDLNTRY+15                                              04255000
BTTRP    EQU   BLDLNTRY+12                                              04256000
BPREFX   EQU   BNAME                                                    04257000
BFFLL    EQU   BLDLNTRY                                                 04258000
LIBBLKSZ EQU   WORK+60                                                  04259000
@NM00004 EQU   DIRECTRY+27                                              04260000
DLEN     EQU   DIRECTRY+25                                              04261000
DSTOR    EQU   DIRECTRY+22                                              04262000
UNIREC   EQU   DATTRI                                                   04263000
@NM00003 EQU   DATTRI                                                   04264000
@NM00002 EQU   DIRECTRY+16                                              04265000
DTTRT    EQU   DIRECTRY+12                                              04266000
DINDCT   EQU   DIRECTRY+11                                              04267000
DTTRP    EQU   DIRECTRY+8                                               04268000
DSUFIX   EQU   DNAME+4                                                  04269000
DPREFX   EQU   DNAME                                                    04270000
OPINPRG  EQU   STATUS4                                                  04271000
INCLSW   EQU   STATUS4                                                  04272000
SETRAS   EQU   PRTYERR                                                  04273000
FMTERR1  EQU   STATUS2                                                  04274000
INHIBITP EQU   STATUS2                                                  04275000
NOTED    EQU   STATUS1                                                  04276000
NOWRITE  EQU   STATUS1                                                  04277000
INHIBLIB EQU   STATUS1                                                  04278000
ABNDFLG  EQU   STATUS1                                                  04279000
PWORK1   EQU   PWORK                                                    04280000
XWORK    EQU   DWORK2                                                   04281000
DWORKB   EQU   DWORK1+1                                                 04282000
@NM00001 EQU   DWORK1                                                   04283000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      04284000
@RC00038 EQU   @RC00035                                                 04285000
@RC00127 EQU   @RC00080                                                 04286000
@RC00081 EQU   @RC00080                                                 04287000
@RC00207 EQU   @RC00206                                                 04288000
@RC00244 EQU   @RC00243                                                 04289000
@RC00237 EQU   @RC00231                                                 04290000
@RC00266 EQU   @RC00265                                                 04291000
@RC00281 EQU   @RC00280                                                 04292000
@RC00302 EQU   @RC00301                                                 04293000
@RC00296 EQU   @RC00295                                                 04294000
@RC00327 EQU   @RC00326                                                 04295000
@RC00321 EQU   @RC00320                                                 04296000
@RC00355 EQU   @RC00354                                                 04297000
@RC00346 EQU   @RC00345                                                 04298000
@RC00371 EQU   @RC00370                                                 04299000
@RC00386 EQU   @RC00385                                                 04300000
@RC00417 EQU   @RC00416                                                 04301000
@RC00451 EQU   @RC00448                                                 04302000
@RC00449 EQU   @RC00448                                                 04303000
@RC00442 EQU   @RC00441                                                 04304000
@RC00467 EQU   @RC00466                                                 04305000
@RC00489 EQU   @RC00488                                                 04306000
@RC00526 EQU   @RC00522                                                 04307000
@RC00544 EQU   @RC00543                                                 04308000
@RC00567 EQU   @RC00566                                                 04309000
@RC00610 EQU   @RC00519                                                 04310000
@RC00512 EQU   @RC00511                                                 04311000
@RC00648 EQU   @RC00647                                                 04312000
@RF00747 EQU   @RC00735                                                 04313000
@RC00745 EQU   @RC00735                                                 04314000
@RC00698 EQU   @RC00697                                                 04315000
@RC00762 EQU   @RC00760                                                 04316000
@RC00815 EQU   @RC00814                                                 04317000
@RC00821 EQU   @EL00020                                                 04318000
@RC00830 EQU   @EL00021                                                 04319000
@PB00021 EQU   @PB00022                                                 04320000
@RC00042 EQU   @RC00038                                                 04321000
@RC00128 EQU   @RC00127                                                 04322000
@RC00270 EQU   @RC00266                                                 04323000
@RC00285 EQU   @RC00281                                                 04324000
@RC00656 EQU   @RC00648                                                 04325000
@RC00711 EQU   @RC00698                                                 04326000
@RC00700 EQU   @RC00698                                                 04327000
@RC00789 EQU   @RC00762                                                 04328000
@RC00781 EQU   @RC00762                                                 04329000
@RC00763 EQU   @RC00762                                                 04330000
@PB00020 EQU   @PB00021                                                 04331000
@RC00839 EQU   @RC00830                                                 04332000
@RC00046 EQU   @RC00042                                                 04333000
@RF00146 EQU   @RC00128                                                 04334000
@RC00719 EQU   @RC00711                                                 04335000
@RC00769 EQU   @RC00763                                                 04336000
@RC00764 EQU   @RC00763                                                 04337000
@RF00786 EQU   @RC00781                                                 04338000
@RF00793 EQU   @RC00789                                                 04339000
@PB00019 EQU   @PB00020                                                 04340000
@RC00049 EQU   @RC00046                                                 04341000
@PB00018 EQU   @PB00019                                                 04342000
@RC00720 EQU   @RC00719                                                 04343000
@RF00055 EQU   @RC00049                                                 04344000
@RF00058 EQU   @RC00049                                                 04345000
@PB00017 EQU   @PB00018                                                 04346000
@RF00723 EQU   @RC00720                                                 04347000
@PB00016 EQU   @PB00017                                                 04348000
@PB00015 EQU   @PB00016                                                 04349000
@PB00014 EQU   @PB00015                                                 04350000
@PB00013 EQU   @PB00014                                                 04351000
@PB00012 EQU   @PB00013                                                 04352000
@PB00011 EQU   @PB00012                                                 04353000
@PB00010 EQU   @PB00011                                                 04354000
@PB00009 EQU   @PB00010                                                 04355000
@PB00008 EQU   @PB00009                                                 04356000
@PB00007 EQU   @PB00008                                                 04357000
@PB00006 EQU   @PB00007                                                 04358000
@PB00005 EQU   @PB00006                                                 04359000
@PB00004 EQU   @PB00005                                                 04360000
@PB00003 EQU   @PB00004                                                 04361000
@PB00002 EQU   @PB00003                                                 04362000
@ENDDATA EQU   *                                                        04363000
         END   IEBISCAN,(C'PLS2026',0701,76222)                         04364000
