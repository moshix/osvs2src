         TITLE 'IEBLDUL - IEBCOPY LOAD/UNLOAD INITIALIZATION ROUTINE'   00010000
*C120400,889000                                                  A44144 00020000
*A888800,888920,889500,889600                                    A44144 00030000
         LCLA  &T,&SPN                                            0002  00040000
.@001    ANOP                                                     0002  00050000
IEBLDUL  CSECT ,                                                  0002  00060000
         ST    @E,12(0,@D)                                        0002  00070000
         STM   @0,@C,20(@D)                                       0002  00080000
         BALR  @B,0                                               0002  00090000
@PSTART  DS    0H                                                 0002  00100000
         USING @PSTART+00000,@B                                   0002  00110000
         ST    @D,@SAV001+4                                       0002  00120000
         LA    @F,@SAV001                                         0002  00130000
         ST    @F,8(0,@D)                                         0002  00140000
         LR    @D,@F                                              0002  00150000
         BC    15,@9FF                                            0076  00160000
* IEBLDUL1: ENTRY;                                                      00170000
IEBLDUL1 ST    @E,12(0,@D)                                        0076  00180000
         STM   @0,@C,20(@D)                                       0076  00190000
         BALR  @B,0                                               0076  00200000
         LA    @F,IEBLDUL1-IEBLDUL                                0076  00210000
         SR    @B,@F                                              0076  00220000
         ST    @D,@SAV001+4                                       0076  00230000
         LA    @F,@SAV001                                         0076  00240000
         ST    @F,8(0,@D)                                         0076  00250000
         LR    @D,@F                                              0076  00260000
@9FF     EQU   *                                                  0076  00270000
*                                                                       00280000
*         /************************************************************ 00290000
*         /* THE FOLLOWING GENERATE ESTABLISHES ADDRESSABILITY TO     * 00300000
*         /* IEBMCA AND THE DCB,JFCB AND DSCB CONTROL BLOCKS.         * 00310000
*         /************************************************************ 00320000
*                                                                       00330000
*         GENERATE;                                                     00340000
         USING IEBMCA,@4          IEBMCA ADDRESSABILITY                 00350000
         USING INFMJFCB,@7        JFCB ADDRESSABILITY                   00360000
         USING DXDSCB,@6          DSCB ADDRESSABILITY                   00370000
         USING IHADCB,@5          DCB ADDRESSABILITY                    00380000
         DS    0H                                                       00390000
*         JFCBREG=ADDR(JFCBBUF);        /* INITIALIZE JFCB POINTER      00400000
*                                          REGISTER                   * 00410000
         L     @C,0(0,@1)          ADDRESS OF JFCBBUF             0078  00420000
         LR    @7,@C                                              0078  00430000
*         DSCBREG=ADDR(DSCBBUF);        /* INITIALIZE DSCB POINTER      00440000
*                                          REGISTER                   * 00450000
         L     @8,4(0,@1)          ADDRESS OF DSCBBUF             0079  00460000
         LR    @6,@8                                              0079  00470000
*         ULLDST(1)='1'B;               /* SET LOAD SWITCH            * 00480000
         OI    ULLDST,B'10000000'                                 0080  00490000
*                                                                       00500000
*         /*----------------------------------------------------------* 00510000
*         /* A TEST IS MADE TO DETERMINE IF THE DATA SET TO BE LOADED * 00520000
*         /* IS ALLOCATED TO OTHER THAN A DA OR TAPE DEVICE.  IF IT   * 00530000
*         /* IS, THEN AN ERROR HAS BEEN FOUND.                        * 00540000
*         /*----------------------------------------------------------* 00550000
*                                                                       00560000
*         IF INCHAR(3) ^= '80'X &       /* IS THE INPUT DATA SET      * 00570000
*            INCHAR(3) ^= '20'X         /* ALLOCATED TO OTHER THAN A    00580000
*                                          DISK OR TAPE DEVICE        * 00590000
*            THEN                       /* YES, IT IS SO ISSUE        * 00600000
         CLI   INCHAR+2,X'80'                                     0081  00610000
         BC    08,@9FE                                            0081  00620000
         CLI   INCHAR+2,X'20'                                     0081  00630000
*              GO TO LDUL0102;          /* ERROR MESSAGE              * 00640000
         BC    07,LDUL0102                                        0082  00650000
*            ELSE;                      /* NO, OK CONTINUE            * 00660000
@9FD     EQU   *                                                  0083  00670000
@9FE     EQU   *                                                  0083  00680000
*                                                                       00690000
*         /*----------------------------------------------------------* 00700000
*         /* A TEST IS MADE TO INSURE THAT THE DATA SET TO BE LOADED  * 00710000
*         /* IS NOT A SYSIN DATA SET WHICH IS AN ERROR CONDITION.     * 00720000
*         /*----------------------------------------------------------* 00730000
*                                                                       00740000
*         IF JFCBTSDM(3) = '1'B         /* IS THE INPUT DATA SET        00750000
*                                          A SYSIN DATA SET           * 00760000
*            THEN                       /* YES, IT IS SO ISSUE        * 00770000
         TM    JFCBTSDM,B'00100000'                               0084  00780000
*              GO TO LDUL0102;          /* ERROR MESSAGE              * 00790000
         BC    01,LDUL0102                                        0085  00800000
*            ELSE;                      /* NO, OK CONTINUE            * 00810000
*                                                                       00820000
*         /*----------------------------------------------------------* 00830000
*         /* A TEST IS MADE TO DETERMINE IF A FREEMAIN HAS BEEN DONE  * 00840000
*         /* FOR THE LOADING OF DATA MANAGEMENT ROUTINES.             * 00850000
*         /*----------------------------------------------------------* 00860000
*                                                                       00870000
*         IF ULLDST(3)='1'B             /* HAS FREEMAIN BEEN DONE     * 00880000
*            THEN                       /* YES, IT HAS BEEN DONE      * 00890000
         TM    ULLDST,B'00100000'                                 0087  00900000
*              GO TO LDUL0004;          /* BRANCH AROUND FREEMAIN       00910000
*                                          LINKAGE                    * 00920000
         BC    01,LDUL0004                                        0088  00930000
*            ELSE                       /* NO, FREMAIN HAS NOT BEEN     00940000
*                                          DONE                       * 00950000
*              DO;                      /* LINK TO IEBDSCPY TO ISSUE    00960000
*                                          FREEMAIN                   * 00970000
*                                                                       00980000
*                /***************************************************** 00990000
*                /* LINKAGE TO THE ENTRY POINT IEBDSFRC IN MODULE     * 01000000
*                /* IEBDSCPY IS NOW GENERATED.                        * 01010000
*                /***************************************************** 01020000
*                                                                       01030000
*                GENERATE;                                              01040000
         STM   @E,@F,REGSAVE1     SAVE REGISTERS 14 AND 15              01050000
         L     @F,VDSFRC          1 ADDRESS OF ENTRY POINT              01060000
*                                  IEBDSFRC                             01070000
         BALR  @E,@F                   LINK TO DO FREEMAIN              01080000
         LM    @E,@F,REGSAVE1     RESTORE REGISTERS 14 AND 15           01090000
         DS    0H                                                       01100000
*              END;                                                     01110000
* LDUL0004:                             /* FREEMAIN HAS BEEN DONE     * 01120000
*         DCBREG=ADDR(LOADDCB);         /* SET CURRENT DCB POINTER TO   01130000
*                                          ADDRESS OF LOAD DCB        * 01140000
LDUL0004 LA    @5,LOADDCB                                         0092  01150000
*         DCBDDNAM=DDVALNM;             /* INITIALIZE DDNAME FIELD IN   01160000
*                                          LOAD DCB                   * 01170000
         MVC   DCBDDNAM(8),DDVALNM                                0093  01180000
*         LIST5ADR=ADDR(LOADVAL);       /* PLACE ADDRESS OF DCB EXIT    01190000
*                                          ROUTINE FOR THE LOAD DCB     01200000
*                                          IN IT'S EXIT LIST          * 01210000
         LA    @F,LOADVAL                                         0094  01220000
         ST    @F,@TEMP4                                          0094  01230000
         MVC   LIST5ADR(3),@TEMP4+1                               0094  01240000
*         SYNAD24=VIEBIOE3;             /* PLACE ADDRESS OF SYNAD       01250000
*                                          ROUTINE IN LOAD DCB        * 01260000
         MVC   SYNAD24(3),VIEBIOE3+1                              0095  01270000
*         EODAD24=VDSIOE2;              /* PLACE ADDRESS OF EODAD       01280000
*                                          ROUTINE IN LOAD DCB        * 01290000
         MVC   EODAD24(3),VDSIOE2+1                               0096  01300000
*         DCBBLKSI=0;                   /* INITIALIZE LOAD DCB BLKSIZE  01310000
*                                          FIELD TO ZERO              * 01320000
         SR    @F,@F                                              0097  01330000
         STH   @F,DCBBLKSI                                        0097  01340000
*         DCBLRECL=0;                   /* INITIALIZE LOAD DCB LRECL    01350000
*                                          FIELD TO ZERO              * 01360000
         STH   @F,DCBLRECL                                        0098  01370000
* LDUL0008:                             /* OPEN THE LOAD DCB          * 01380000
*                                                                       01390000
*         /************************************************************ 01400000
*         /* THE FOLLOWING GENERATE IS FOR EXPANSION OF THE OPEN      * 01410000
*         /* MACRO WHICH IS USED TO OPEN THE LOAD DCB.                * 01420000
*         /************************************************************ 01430000
*                                                                       01440000
*         GENERATE;                                                     01450000
LDUL0008 EQU   *                                                  0099  01460000
         STM   @E,@1,REGSAVE1     STORE REGISTERS 14,15,0 AND 1         01470000
         OPEN  ((@5),INPUT)       OPEN 1 DCB                            01480000
         LM    @E,@1,REGSAVE1     RESTORE REGISTERS 14,15,0 AND 1       01490000
         DS    0H                                                       01500000
*                                                                       01510000
*         /*----------------------------------------------------------* 01520000
*         /* A TEST IS NOW MADE TO SEE IF THE LOAD DCB HAS BEEN       * 01530000
*         /* SUCCESSFULLY OPENED.                                     * 01540000
*         /*----------------------------------------------------------* 01550000
*                                                                       01560000
*         IF DCBOFLGS(4)='1'B           /* OPEN OK                    * 01570000
*            THEN                       /* YES                        * 01580000
         TM    DCBOFLGS,B'00010000'                               0100  01590000
*              GO TO LDUL0012;          /* BRANCH AROUND ERROR CODE   * 01600000
*            ELSE                       /* NO, OPEN ERROR             * 01610000
*              GO TO LDUL0100;          /* PREPARE AND ISSUE ERROR      01620000
*                                          MESSAGE                    * 01630000
         BC    14,LDUL0100                                        0102  01640000
* LDUL0012:                             /* GET READY TO READ COPYR1   * 01650000
*         IF DCBBLKSI > ACOPYR1 - LOCOR - 60       /*NO BUFFER   M2744  01660000
*                                          CAN BE MADE AVAILABLE M2744* 01670000
*            THEN                                              /*M2744* 01680000
LDUL0012 LH    @F,@D1                                             0103  01690000
         S     @F,LOCOR                                           0103  01700000
         A     @F,ACOPYR1                                         0103  01710000
         CH    @F,DCBBLKSI                                        0103  01720000
*            GO TO LDUL0114 ;                /*STOP TRY TO LOAD  M2744* 01730000
         BC    04,LDUL0114                                        0104  01740000
*            ELSE ;                          /*GO READ HAEDER    M2744* 01750000
*         READPTR=LOCOR;                     /* READ INTO LOW PART M274 01760000
*                                               OF IEBCOPY CORE  M2744* 01770000
         MVC   READPTR(4),LOCOR                                   0106  01780000
*         CALL READHD;                  /* READ THE COPYR1 HEADER       01790000
*                                          RECORD                     * 01800000
         BAL   @E,READHD                                          0107  01810000
*         COPYR1 = TEMP1HDR ;                /* MOVE IT TO ACPYR1M2744* 01820000
         L     @C,READPTR                                         0108  01830000
         L     @8,ACOPYR1                                         0108  01840000
         MVC   0(60,@8),0(@C)                                     0108  01850000
*                                                                       01860000
*         /*----------------------------------------------------------* 01870000
*         /* A TEST IS MADE TO SEE IF THIS IS AN IEBCOPY UNLOADED     * 01880000
*         /* PDS.                                                     * 01890000
*         /*----------------------------------------------------------* 01900000
*                                                                       01910000
*         IF ID='CA6D0F'X               /* IS ID FIELD IN COPYR1        01920000
*                                          RECORD VALID               * 01930000
*            THEN                       /* YES, FIELD IS VALID        * 01940000
         CLC   9(3,@8),@X4                                        0109  01950000
*              GO TO LDUL0016;          /* BRANCH AROUND ERROR CODE   * 01960000
         BC    08,LDUL0016                                        0110  01970000
*            ELSE                       /* NO, FIELD IS NOT VALID     * 01980000
*              GO TO LDUL0104;          /* PREPARE AND ISSUE ERROR      01990000
*                                          MESSAGE                    * 02000000
         BC    15,LDUL0104                                        0111  02010000
* LDUL0016:                             /* ID IS OK                   * 02020000
*                                                                       02030000
*         /*----------------------------------------------------------* 02040000
*         /* A TEST IS MADE TO SEE IF THE 'NOT LOADABLE' INDICATOR    * 02050000
*         /* IS SET IN THE COPYR1 HEADER RECORD.                      * 02060000
*         /*----------------------------------------------------------* 02070000
*                                                                       02080000
*         IF LOADSTAT='1'B              /* IS THE NOT LOADABLE SWITCH   02090000
*                                          IN THE COPYR1 RECORD ON    * 02100000
*            THEN                       /* YES, IT IS ON              * 02110000
LDUL0016 L     @C,ACOPYR1                                         0112  02120000
         TM    8(@C),B'10000000'                                  0112  02130000
*              GO TO LDUL0106;          /* PREPARE AND ISSUE ERROR      02140000
*                                          MESSAGE                    * 02150000
         BC    01,LDUL0106                                        0113  02160000
*            ELSE;                      /* NO, OK CONTINUE            * 02170000
*                                                                       02180000
*         /*----------------------------------------------------------* 02190000
*         /* A TEST IS MADE TO SEE IF THE LOAD DCB BLKSIZE IS EQUAL   * 02200000
*         /* TO THE BLKSIZE USED WHEN THE PDS WAS ORIGINALLY UNLOADED.* 02210000
*         /*----------------------------------------------------------* 02220000
*                                                                       02230000
*         IF DCBBLKSI=TBLKSIZE          /* IS THE LOAD DCB BLKSIZE      02240000
*                                          EQUAL TO THE BLKSIZE FIELD   02250000
*                                          OF THE COPYR1 DESCRIPTOR     02260000
*                                          RECORD                     * 02270000
*            THEN                       /* YES, THEY ARE EQUAL        * 02280000
         LH    @F,22(0,@C)                                        0115  02290000
         CH    @F,DCBBLKSI                                        0115  02300000
*              GO TO LDUL0020;          /* BRANCH AROUND CLOSE/         02310000
*                                          REOPEN CODE                * 02320000
         BC    08,LDUL0020                                        0116  02330000
*            ELSE                       /* NO, THEY ARE NOT EQUAL     * 02340000
*              DO;                                                      02350000
*                                                                       02360000
*                /***************************************************** 02370000
*                /* THE FOLLOWING GENERATED CODE CLOSES THE LOAD      * 02380000
*                /* DCB.                                              * 02390000
*                /***************************************************** 02400000
*                                                                       02410000
*                GENERATE;                                              02420000
         STM   @E,@1,REGSAVE1     SAVE REGISTERS 14,15,0 AND 1          02430000
         CLOSE ((@5),REREAD)      CLOSE 1 DCB WITH REREAD OPTION        02440000
         LM    @E,@1,REGSAVE1     RESTORE REGISTERS 14,15,0 AND 1       02450000
         DS    0H                                                       02460000
*                DCBBLKSI=TBLKSIZE;     /* SET CORRECT BLKSIZE INTO     02470000
*                                          LOAD DCB                   * 02480000
         MVC   DCBBLKSI(2),22(@C)                                 0119  02490000
*                DCBLRECL=DCBBLKSI-4;        /* SET CORRECT LRECL       02500000
*                                               INTO THE LOAD DCB     * 02510000
         LH    @F,DCBBLKSI                                        0120  02520000
         SH    @F,@D2                                             0120  02530000
         STH   @F,DCBLRECL                                        0120  02540000
*                GO TO LDUL0008;        /* GO REOPEN THE LOAD DCB     * 02550000
         BC    15,LDUL0008                                        0121  02560000
*              END;                                                     02570000
* LDUL0020:                             /* BLKSIZE IS OK              * 02580000
*         READPTR=LOCOR + 60;                /* POINT TO SAFE    M2744  02590000
*                                               PLACE TO READ IN M2744* 02600000
LDUL0020 LA    @F,60                                              0123  02610000
         A     @F,LOCOR                                           0123  02620000
         ST    @F,READPTR                                         0123  02630000
*         CALL READHD;                  /* READ THE COPYR2 HEADER       02640000
*                                          RECORD                     * 02650000
         BAL   @E,READHD                                          0124  02660000
*         COPYR2(1:255) = TEMP2HDR(1:255); /* MOVE 1ST PART      M2744* 02670000
         L     @C,READPTR                                         0125  02680000
         L     @8,ACOPYR2                                         0125  02690000
         MVC   0(255,@8),0(@C)                                    0125  02700000
*         COPYR2(256:284) = TEMP2HDR(256:284); /* MOVE 2ND PART  M2744* 02710000
         MVC   255(29,@8),255(@C)                                 0126  02720000
*                                                                       02730000
*         /************************************************************ 02740000
*         /* THE DCB POINTER REGISTER IS NOW CHANGED TO POINT TO THE  * 02750000
*         /* INPUT PDS DCB.  VARIOUS FIELDS IN THE INPUT DCB,JFCB,    * 02760000
*         /* AND DSCB AS WELL AS THE INPUT DEVTYPE CHARACTERISTICS    * 02770000
*         /* ARE CHANGED TO 'LOOK' AS IF THE INPUT DATA SET IS A PDS. * 02780000
*         /************************************************************ 02790000
*                                                                       02800000
*         DCBREG=ADDR(INDCB);           /* RE-ESTABLISH DCB ADDRESS-    02810000
*                                          ABILITY TO INPUT PDS DCB   * 02820000
         LA    @5,INDCB                                           0127  02830000
*         DSCBLKL=UBLKSIZE;             /* SET DSCB BLKSIZE=COPYR1      02840000
*                                          DSORG FIELD                * 02850000
         L     @9,ACOPYR1                                         0128  02860000
         MVC   DSCBLKL(2),14(@9)                                  0128  02870000
*         DSCLRECL=ULRECL;              /* SET DSCB LRECL=COPYR1        02880000
*                                          LRECL FIELD                * 02890000
         MVC   DSCLRECL(2),16(@9)                                 0129  02900000
*         DCBRECFM=URECFM;              /* SET INPUT PDS DCB RECFM=     02910000
*                                          COPYR1 RECFM FIELD         * 02920000
         MVC   DCBRECFM(1),18(@9)                                 0130  02930000
*         DCBKEYLE=UKEYLEN;             /* SET INPUT PDS DCB KEYLEN=    02940000
*                                          COPYR1 KEYLEN FIELD        * 02950000
         MVC   DCBKEYLE(1),19(@9)                                 0131  02960000
*         DCBOPTCD=DCBOPTCD|UOPTCD;     /* SET INPUT PDS DCB OPTCD=     02970000
*                                          COPYR1 OPTCD FIELD         * 02980000
         OC    DCBOPTCD(1),20(@9)                                 0132  02990000
*         JFCBLKSI=UBLKSIZE;            /* SET JFCB BLKSIZE=COPYR1      03000000
*                                          BLKSIZE FIELD              * 03010000
         MVC   JFCBLKSI(2),14(@9)                                 0133  03020000
*         JFCLRECL=ULRECL;              /* SET JFCB LRECL=COPYR1        03030000
*                                          LRECL FIELD                * 03040000
         MVC   JFCLRECL(2),16(@9)                                 0134  03050000
*         INCHAR=UDEVTYPE;              /* SET INPUT DEVICE CHARACTER-  03060000
*                                          ISTICS=COPYR1 DEVICE CHAR-   03070000
*                                          ACTERISTICS FIELD          * 03080000
         MVC   INCHAR(20),24(@9)                                  0135  03090000
*                                                                       03100000
*         /************************************************************ 03110000
*         /* THE UNLOADED EXTENT DESCRIPTIONS IN THE UDEBX FIELD OF   * 03120000
*         /* THE COPYR2 RECORD ARE NOW UPDATED TO FACILITATE TTR TO   * 03130000
*         /* MBBCCHHR CONVERSION.                                     * 03140000
*         /************************************************************ 03150000
*                                                                       03160000
*         DEBAD24=ADDR(UDEBL16)-16;     /* SET INPUT PDS DCBDEBAD       03170000
*                                          FIELD TO POINT TO THE        03180000
*                                          COPYR2 UDEBL16 FIELD MINUS   03190000
*                                          16 BYTES                   * 03200000
         LH    @F,@D3                                             0136  03210000
         LA    @0,8(0,@8)                                         0136  03220000
         AR    @F,@0                                              0136  03230000
         ST    @F,@TEMP4                                          0136  03240000
         MVC   DEBAD24(3),@TEMP4+1                                0136  03250000
*         DEBXPTR=ADDR(UDEBX);          /* INITIALIZE UNLOADED DEB      03260000
*                                          EXTENT FIELD POINTER TO      03270000
*                                          ADDRESS OF UDEBX FIELD OF    03280000
*                                          THE COPYR2 RECORD          * 03290000
         LA    @F,24(0,@8)                                        0137  03300000
         ST    @F,DEBXPTR                                         0137  03310000
*         XTENTCTR=UDEBL16(1);          /* INITIALIZE EXTENT COUNTER    03320000
*                                          TO THE NUMBER OF EXTENT      03330000
*                                          DESCRIPTIONS IN THE UDEBX    03340000
*                                          FIELD OF THE COPYR2 RECORD * 03350000
         SR    @F,@F                                              0138  03360000
         IC    @F,8(0,@8)                                         0138  03370000
         STH   @F,XTENTCTR                                        0138  03380000
*                                                                       03390000
*         /************************************************************ 03400000
*         /* THE FOLLOWING ITERATIVE DO GROUP IS USED TO INITIALIZE   * 03410000
*         /* THE UCB POINTER FIELD OF EACH UNLOADED EXTENT DESCRIP-   * 03420000
*         /* TION IN THE UDEBX FIELD OF THE COPYR2 RECORD TO THE      * 03430000
*         /* ADDRESS OF THE UDEVTYPE FIELD OF THE COPYR1 RECORD MINUS * 03440000
*         /* 16 BYTES.                                                * 03450000
*         /************************************************************ 03460000
*                                                                       03470000
*         DO XTENTCTR=                                                  03480000
*            XTENTCTR                                                   03490000
*            BY -1                                                      03500000
         BC    15,@DO9FB                                          0139  03510000
*            TO 1;                                                      03520000
*                                                                       03530000
*               UCBAD=ADDR(UDEVTYPE) -  /* PLACE ADDRESS OF UDEVTYPE  * 03540000
*                     16;               /* FIELD MINUS 16 BYTES IN      03550000
*                                          EACH UNLOADED DEB EXTENT   * 03560000
@DO9FC   LH    @F,@D3                                             0140  03570000
         L     @C,ACOPYR1                                         0140  03580000
         LA    @0,24(0,@C)                                        0140  03590000
         AR    @F,@0                                              0140  03600000
         L     @8,DEBXPTR                                         0140  03610000
         ST    @F,@TEMP4                                          0140  03620000
         MVC   1(3,@8),@TEMP4+1                                   0140  03630000
*               DEBXPTR=DEBXPTR +       /* BUMP THE DEB EXTENT        * 03640000
*                       16;             /* POINTER TO THE NEXT ENTRY    03650000
*                                          WITHIN THE UDEBX FIELD     * 03660000
         LA    @F,16                                              0141  03670000
         A     @F,DEBXPTR                                         0141  03680000
         ST    @F,DEBXPTR                                         0141  03690000
*         END;                          /* END OF UDEBX FIELD           03700000
*                                          INITIALIZATION             * 03710000
* LDUL0024:                             /* RETURN TO CALLER           * 03720000
*         RTCDREG=0;                    /* SET RETURN CODE TO ZERO    * 03730000
         LH    @F,XTENTCTR                                        0142  03740000
         BCTR  @F,0                                               0142  03750000
@DO9FB   STH   @F,XTENTCTR                                        0142  03760000
         CH    @F,@D4                                             0142  03770000
         BC    10,@DO9FC                                          0142  03780000
LDUL0024 SR    @F,@F                                              0143  03790000
*         RETURN;                                                       03800000
         BC    15,@EL01                                           0144  03810000
* /******************************************************************** 03820000
* /*         THIS IS THE DCB EXIT ROUTINE FOR THE LOAD DCB.           * 03830000
* /******************************************************************** 03840000
*                                                                       03850000
* LOADVAL:                                                              03860000
*                                                                       03870000
*         /*----------------------------------------------------------* 03880000
*         /* A TEST IS MADE TO DETERMINE IF THE LOAD DCB BLKSIZE IS   * 03890000
*         /* LARGER OR EQUAL TO THE MINIMUM VALID BLKSIZE.            * 03900000
*         /*----------------------------------------------------------* 03910000
*                                                                       03920000
*         IF DCBBLKSI < 284             /* IS THE LOAD DCB BLKSIZE      03930000
*                                          LESS THAN THE ABSOLUTE       03940000
*                                          MINIMUM                    * 03950000
*            THEN                       /* YES, IT IS TOO SMALL       * 03960000
LOADVAL  LA    @F,284                                             0145  03970000
         CH    @F,DCBBLKSI                                        0145  03980000
         BC    12,@9F8                                            0145  03990000
*              DCBBLKSI=284;            /* SET LOAD DCB BLKSIZE TO      04000000
*                                          MINIMUM VALUE              * 04010000
         STH   @F,DCBBLKSI                                        0146  04020000
*            ELSE;                      /* NO, IT IS OK - CONTINUE    * 04030000
@9F8     EQU   *                                                  0147  04040000
*         DCBLRECL=DCBBLKSI-4;          /* ASSURE THAT THE LOAD DCB     04050000
*                                          LRECL FIELD IS EQUAL TO      04060000
*                                          THE LOAD DCB BLKSIZE FIELD   04070000
*                                          MINUS THE LENGTH OF THE      04080000
*                                          BIG LL FIELD               * 04090000
@9F7     LH    @F,DCBBLKSI                                        0148  04100000
         SH    @F,@D2                                             0148  04110000
         STH   @F,DCBLRECL                                        0148  04120000
* LOADVAL8:                             /* RETURN TO OPEN             * 04130000
*                                                                       04140000
*         /************************************************************ 04150000
*         /* THE FOLLOWING GENERATED CODE IS FOR RETURN LINKAGE TO    * 04160000
*         /* OPEN.                                                    * 04170000
*         /************************************************************ 04180000
*                                                                       04190000
*         GENERATE;                                                     04200000
LOADVAL8 EQU   *                                                  0149  04210000
         BR    @E                 RETURN TO OPEN                        04220000
         DS    0H                                                       04230000
         BC    15,@9F6                                            0150  04240000
*                                                                       04250000
* /******************************************************************** 04260000
* /*         THIS IS THE ENTRY POINT FOR UNLOAD PROCESSING            * 04270000
* /******************************************************************** 04280000
*                                                                       04290000
* IEBLDUL2: ENTRY;                                                      04300000
IEBLDUL2 ST    @E,12(0,@D)                                        0150  04310000
         STM   @0,@C,20(@D)                                       0150  04320000
         BALR  @B,0                                               0150  04330000
         LA    @F,IEBLDUL2-IEBLDUL                                0150  04340000
         SR    @B,@F                                              0150  04350000
         ST    @D,@SAV001+4                                       0150  04360000
         LA    @F,@SAV001                                         0150  04370000
         ST    @F,8(0,@D)                                         0150  04380000
         LR    @D,@F                                              0150  04390000
*                                                                       04400000
*         JFCBREG=ADDR(JFCBBUF);        /* INITIALIZE JFCB POINTER      04410000
*                                          REGISTER                   * 04420000
@9F6     L     @C,0(0,@1)          ADDRESS OF JFCBBUF             0151  04430000
         LR    @7,@C                                              0151  04440000
*         ULLDST(2)='1'B;               /* SET UNLOAD SWITCH          * 04450000
         OI    ULLDST,B'01000000'                                 0152  04460000
*                                                                       04470000
*         /*----------------------------------------------------------* 04480000
*         /* A TEST IS MADE TO DETERMINE IF THE INPUT AND OUTPUT DATA * 04490000
*         /* ARE ONE AND THE SAME.                                    * 04500000
*         /*----------------------------------------------------------* 04510000
*                                                                       04520000
*         IF INDSNBUF=JFCBDSNM &        /* ARE THE INPUT AND OUTPUT   * 04530000
*            INVOLBUF=JFCBVOLS          /* DATA SETS ONE AND THE SAME * 04540000
*            THEN                       /* YES, A COMPRESS REQUEST      04550000
*                                          HAS BEEN DETECTED          * 04560000
         L     @8,12(0,@1)         ADDRESS OF INDSNBUF            0153  04570000
         CLC   0(44,@8),JFCBDSNM                                  0153  04580000
         BC    07,@9F5                                            0153  04590000
         L     @9,8(0,@1)          ADDRESS OF INVOLBUF            0153  04600000
         CLC   0(6,@9),JFCBVOLS                                   0153  04610000
*              GO TO LDUL0108;          /* PREPARE AND ISSUE ERROR      04620000
*                                          MESSAGE                    * 04630000
         BC    08,LDUL0108                                        0154  04640000
*            ELSE;                      /* NO, OK CONTINUE            * 04650000
@9F4     EQU   *                                                  0155  04660000
@9F5     EQU   *                                                  0155  04670000
*                                                                       04680000
*         /*----------------------------------------------------------* 04690000
*         /* A TEST IS MADE TO DETERMINE IF THE INPUT AND OUTPUT DATA * 04700000
*         /* SETS VOLUME SERIAL NUMBERS ARE EQUAL AND THE OUTPUT DATA * 04710000
*         /* SET IS ON A TAPE DEVICE WHICH IS AN ERROR CONDITION      * 04720000
*         /* SINCE TWO DATA SETS CANNOT BE OPENED ON THE SAME TAPE    * 04730000
*         /* VOLUME AT THE SAME TIME.                                 * 04740000
*         /*----------------------------------------------------------* 04750000
*                                                                       04760000
*         IF INVOLBUF=JFCBVOLS &        /* ARE THE INPUT AND OUTPUT   * 04770000
*            OUTCHAR(3)='80'X           /* DATA SETS ON THE SAME TAPE   04780000
*                                          VOLUME                     * 04790000
*            THEN                       /* YES, THEY ARE SO ISSUE     * 04800000
         L     @C,8(0,@1)          ADDRESS OF INVOLBUF            0156  04810000
         CLC   0(6,@C),JFCBVOLS                                   0156  04820000
         BC    07,@9F3                                            0156  04830000
         CLI   OUTCHAR+2,X'80'                                    0156  04840000
*              GO TO LDUL0101;          /* ERROR MESSAGE              * 04850000
         BC    08,LDUL0101                                        0157  04860000
*            ELSE;                      /* NO, OK CONTINUE            * 04870000
@9F2     EQU   *                                                  0158  04880000
@9F3     EQU   *                                                  0158  04890000
*                                                                       04900000
*         /*----------------------------------------------------------* 04910000
*         /* A TEST IS MADE TO DETERMINE IF THE DATA SET TO CONTAIN   * 04920000
*         /* THE UNLOADED PDS IS ALLOCATED TO OTHER THAN A DA OR TAPE * 04930000
*         /* DEVICE. IF IT IS, AN ERROR HAS BEEN FOUND.               * 04940000
*         /*----------------------------------------------------------* 04950000
*                                                                       04960000
*         IF OUTCHAR(3) ^= '80'X &       /* IS THE OUTPUT DATA SET    * 04970000
*            OUTCHAR(3) ^= '20'X        /* ALLOCATED TO OTHER THAN A    04980000
*                                          DISK OR TAPE DEVICE        * 04990000
*            THEN                       /* YES, IT IS SO ISSUE        * 05000000
         CLI   OUTCHAR+2,X'80'                                    0159  05010000
         BC    08,@9F1                                            0159  05020000
         CLI   OUTCHAR+2,X'20'                                    0159  05030000
*              GO TO LDUL0102;          /* ERROR MESSAGE              * 05040000
         BC    07,LDUL0102                                        0160  05050000
*            ELSE;                      /* NO, OK CONTINUE            * 05060000
@9F0     EQU   *                                                  0161  05070000
@9F1     EQU   *                                                  0161  05080000
*                                                                       05090000
*         /*----------------------------------------------------------* 05100000
*         /* A TEST IS MADE TO INSURE THAT THE DATA SET TO CONTAIN    * 05110000
*         /* THE UNLOADED PDS IS NOT A SYSOUT DATA SET WHICH IS AN    * 05120000
*         /* ERROR CONDITION.                                         * 05130000
*         /*----------------------------------------------------------* 05140000
*                                                                       05150000
*         IF JFCBTSDM(3) = '1'B         /* IS THE OUTPUT DATA SET A     05160000
*                                          A SYSOUT DATA SET          * 05170000
*            THEN                       /* YES, IT IS SO ISSUE        * 05180000
         TM    JFCBTSDM,B'00100000'                               0162  05190000
*              GO TO LDUL0102;          /* ERROR MESSAGE              * 05200000
         BC    01,LDUL0102                                        0163  05210000
*            ELSE;                      /* NO, CONTINUE               * 05220000
*                                                                       05230000
*         /*----------------------------------------------------------* 05240000
*         /* A TEST IS MADE TO DETERMINE IF A FREEMAIN HAS BEEN DONE  * 05250000
*         /* FOR THE LOADING OF DATA MANAGEMENT ROUTINES.             * 05260000
*         /*----------------------------------------------------------* 05270000
*                                                                       05280000
*         IF ULLDST(3)='1'B             /* HAS FREEMAIN BEEN DONE     * 05290000
*            THEN                       /* YES, IT HAS                * 05300000
         TM    ULLDST,B'00100000'                                 0165  05310000
*              GO TO LDUL0026;          /* BRANCH AROUND FREEMAIN       05320000
*                                          LINKAGE                    * 05330000
         BC    01,LDUL0026                                        0166  05340000
*            ELSE                       /* NO, IT HAS NOT             * 05350000
*              DO;                      /* LINK TO IEBDSCPY TO ISSUE    05360000
*                                          FREEMAIN                   * 05370000
*                                                                       05380000
*                /***************************************************** 05390000
*                /* LINKAGE TO THE ENTRY POINT IEBDSFRC IN MODULE     * 05400000
*                /* IEBDSCPY IS NOW GENERATED.                        * 05410000
*                /***************************************************** 05420000
*                                                                       05430000
*                GENERATE;                                              05440000
         STM   @E,@F,REGSAVE1     SAVE REGISTERS 14 AND 15              05450000
         L     @F,VDSFRC          1 ADDRESS OF ENTRY POINT              05460000
*                                  IEBDSFRC                             05470000
         BALR  @E,@F                   LINK TO DO FREEMAIN              05480000
         LM    @E,@F,REGSAVE1     RESTORE REGISTERS 14 AND 15           05490000
         DS    0H                                                       05500000
*              END;                                                     05510000
* LDUL0026:                             /* FREEMAIN IS DONE           * 05520000
*         DCBREG=ADDR(ULOADDCB);        /* SET CURRENT DCB POINTER TO   05530000
*                                          ADDRESS OF UNLOAD DCB      * 05540000
LDUL0026 LA    @5,ULOADDCB                                        0170  05550000
*         DCBDDNAM=DDVALNM;             /* INITIALIZE DDNAME FIELD IN   05560000
*                                          UNLOAD DCB                 * 05570000
         MVC   DCBDDNAM(8),DDVALNM                                0171  05580000
*         LIST6ADR=ADDR(ULOADVAL);      /* PLACE ADDRESS OF DCB EXIT    05590000
*                                          ROUTINE FOR THE UNLOAD DCB   05600000
*                                          IN IT'S EXIT LIST          * 05610000
         LA    @F,ULOADVAL                                        0172  05620000
         ST    @F,@TEMP4                                          0172  05630000
         MVC   LIST6ADR(3),@TEMP4+1                               0172  05640000
*         SYNAD24=VIEBIOE4;             /* PLACE ADDRESS OF SYNAD       05650000
*                                          ROUTINE IN UNLOAD DCB      * 05660000
         MVC   SYNAD24(3),VIEBIOE4+1                              0173  05670000
*         DCBBLKSI=0;                   /* INITIALIZE UNLOAD DCB        05680000
*                                          BLKSIZE FIELD TO ZERO      * 05690000
         SR    @F,@F                                              0174  05700000
         STH   @F,DCBBLKSI                                        0174  05710000
*         DCBLRECL=0;                   /* INITIALIZE UNLOAD DCB        05720000
*                                          LRECL FIELD TO ZERO        * 05730000
         STH   @F,DCBLRECL                                        0175  05740000
*                                                                       05750000
*         /************************************************************ 05760000
*         /* THE FOLLOWING GENERATE IS FOR EXPANSION OF THE OPEN      * 05770000
*         /* MACRO WHICH IS USED TO OPEN THE UNLOAD DCB.              * 05780000
*         /************************************************************ 05790000
*                                                                       05800000
*         GENERATE;                                                     05810000
         STM   @E,@1,REGSAVE1     STORE REGISTERS 14,15,0 AND 1         05820000
         OPEN  ((@5),OUTPUT)      OPEN 2 DCB                            05830000
         LM    @E,@1,REGSAVE1     RESTORE REGISTERS 14,15,0 AND 1       05840000
         DS    0H                                                       05850000
*                                                                       05860000
*         /*----------------------------------------------------------* 05870000
*         /* A TEST IS NOW MADE TO SEE IF THE UNLOAD DCB HAS BEEN     * 05880000
*         /* SUCCESSFULLY OPENED.                                     * 05890000
*         /*----------------------------------------------------------* 05900000
*                                                                       05910000
*         IF DCBOFLGS(4)='1'B           /* OPEN OK                    * 05920000
*            THEN                       /* YES                        * 05930000
         TM    DCBOFLGS,B'00010000'                               0177  05940000
*              GO TO LDUL0030;          /* BRANCH AROUND ERROR CODE   * 05950000
*            ELSE                       /* NO, OPEN ERROR             * 05960000
*              GO TO LDUL0100;          /* PREPARE AND ISSUE ERROR      05970000
*                                          MESSAGE                    * 05980000
         BC    14,LDUL0100                                        0179  05990000
* LDUL0030:                             /* UNLOAD DCB IS OPEN         * 06000000
*         OBLKSIZE=IBLKSIZE;            /* OUTPUT PDS BLKSIZE=INPUT     06010000
*                                          PDS BLKSIZE                * 06020000
LDUL0030 MVC   OBLKSIZE(2),IBLKSIZE                               0180  06030000
*         OUTLRECL=INLRECL;             /* OUTPUT PDS LRECL=INPUT       06040000
*                                          PDS LRECL                  * 06050000
         MVC   OUTLRECL(2),INLRECL                                0181  06060000
*         OUTCHAR=INCHAR;               /* OUTPUT PDS DEVICE CHARACT-   06070000
*                                          ERISTICS=INPUT PDS DEVICE    06080000
*                                          CHARACTERISTICS            * 06090000
         MVC   OUTCHAR(20),INCHAR                                 0182  06100000
*         DCBREG=ADDR(INDCB);           /* SET CURRENT DCB POINTER TO   06110000
*                                          ADDRESS OF INPUT PDS DCB   * 06120000
         LA    @5,INDCB                                           0183  06130000
*         OKEYLEN=DCBKEYLE;             /* OUTPUT PDS KEYLEN=INPUT      06140000
*                                          PDS DCB KEYLEN             * 06150000
         MVC   OKEYLEN(1),DCBKEYLE                                0184  06160000
*         OBLKFAC=IBLKFAC;              /* OUTPUT PDS BLOCKING FACTOR   06170000
*                                          = INPUT PDS BLOCKING         06180000
*                                          FACTOR                     * 06190000
         MVC   OBLKFAC(2),IBLKFAC                                 0185  06200000
*                                                                       06210000
*         /************************************************************ 06220000
*         /* THE FOLLOWING GENERATED CODE IS USED TO SET VARIOUS      * 06230000
*         /* OUTPUT PDS DCB FIELDS EQUAL TO THE CORRESPONDING INPUT   * 06240000
*         /* PDS DCB FIELDS.                                          * 06250000
*         /************************************************************ 06260000
*                                                                       06270000
*         GENERATE;                                                     06280000
         STM   @6,@9,REGSAVE1     SAVE REGISTERS 6,7,8 AND 9            06290000
         IC    @6,DCBKEYLE        INSERT INPUT PDS DCB KEYLEN FIELD     06300000
         IC    @7,DCBOPTCD        INSERT INPUT PDS DCB OPTCD FIELD      06310000
         IC    @8,DCBRECFM        INSERT INPUT PDS DCB RECFM FIELD      06320000
         LA    @5,OUTDCB          CHANGE IHADCB ADDRESSABILITY          06330000
*                                  REGISTER TO POINT TO OUTPUT PDS      06340000
*                                  DCB                                  06350000
         STC   @6,DCBKEYLE        SET OUTPUT PDS DCB KEYLEN FIELD       06360000
*                                  = INPUT PDS DCB KEYLEN FIELD         06370000
         STC   @7,DCBOPTCD        SET OUTPUT PDS DCB OPTCD FIELD        06380000
*                                  = INPUT PDS DCB OPTCD FIELD          06390000
         STC   @8,DCBRECFM        SET OUTPUT PDS DCB RECFM FIELD        06400000
*                                  = INPUT PDS DCB RECFM FIELD          06410000
         LM    @6,@9,REGSAVE1     RESTORE REGISTERS 6,7,8 AND 9         06420000
         DS    0H                                                       06430000
*         DCBREG=ADDR(ULOADDCB);        /* CHANGE CURRENT DCB POINTER   06440000
*                                          REGISTER TO ADDRESS OF       06450000
*                                          UNLOAD DCB                 * 06460000
         LA    @5,ULOADDCB                                        0187  06470000
*         TBLKSIZE=DCBBLKSI;            /* INITIALIZE THE TBLKSIZE      06480000
*                                          FIELD OF THE COPYR1          06490000
*                                          RECORD                     * 06500000
         L     @C,ACOPYR1                                         0188  06510000
         MVC   22(2,@C),DCBBLKSI                                  0188  06520000
*                                                                       06530000
*         /*----------------------------------------------------------* 06540000
*         /* A TEST IS NOW MADE TO SEE IF A LOAD IS BEING DONE, IF IT * 06550000
*         /* IS THEN THERE IS NO NEED TO BUILD COPYR1 AND COPYR2      * 06560000
*         /* RECORDS SINCE THEY HAVE ALREADY BEEN READ INTO THEIR     * 06570000
*         /* BUFFERS AND NEED ONLY BE COPIED.                         * 06580000
*         /*----------------------------------------------------------* 06590000
*                                                                       06600000
*         IF ULLDST(1)='1'B             /* IS A LOAD BEING DONE       * 06610000
*            THEN                       /* YES, IT IS                 * 06620000
         TM    ULLDST,B'10000000'                                 0189  06630000
*              GO TO LDUL0024;          /* RETURN TO CALLER           * 06640000
         BC    01,LDUL0024                                        0190  06650000
*            ELSE;                      /* NO, IT IS NOT, CONTINUE      06660000
*                                          AND BUILD COPYR1 AND         06670000
*                                          COPYR2 RECORDS             * 06680000
*                                                                       06690000
*         /************************************************************ 06700000
*         /* THE COPYR1 RECORD IS NOW BUILT.                          * 06710000
*         /************************************************************ 06720000
*                                                                       06730000
*         COPYR1(1)='00'X;              /* CLEAR COPYR1 RECORD BUFFER * 06740000
         MVI   0(@C),X'00'                                        0192  06750000
*         COPYR1(2:60)=COPYR1(1:59);                        /* CLEAR  * 06760000
         MVC   1(59,@C),0(@C)                                     0193  06770000
*         DCBREG=ADDR(OUTDCB);          /* SET CURRENT DCB POINTER      06780000
*                                          REGISTER TO ADDRESS OF       06790000
*                                          OUTPUT PDS DCB             * 06800000
         LA    @5,OUTDCB                                          0194  06810000
*         BLL1=60;                      /* INITIALIZE COPYR1 BIG LL     06820000
*                                          FIELD                      * 06830000
         LA    @F,60                                              0195  06840000
         STH   @F,0(0,@C)                                         0195  06850000
*         LLL1=56;                      /* INITIALIZE COPYR1 LITTLE     06860000
*                                          LL FIELD                   * 06870000
         LA    @F,56                                              0196  06880000
         STH   @F,4(0,@C)                                         0196  06890000
*         INDC='00'X;                   /* CLEAR INDICATOR BYTE       * 06900000
         MVI   8(@C),X'00'                                        0197  06910000
*         ID='CA6D0F'X;                 /* INITIALIZE ID FIELD        * 06920000
         MVC   9(3,@C),@X4                                        0198  06930000
*         UDSORG=DCBDSORG;              /* INITIALIZE UDSORG FIELD    * 06940000
         MVC   12(2,@C),DCBDSORG                                  0199  06950000
*         UBLKSIZE=OBLKSIZE;            /* INITIALIZE UBLKSIZE FIELD  * 06960000
         MVC   14(2,@C),OBLKSIZE                                  0200  06970000
*         ULRECL=OUTLRECL;              /* INITIALIZE ULRECL FIELD    * 06980000
         MVC   16(2,@C),OUTLRECL                                  0201  06990000
*         URECFM=DCBRECFM;              /* INITIALIZE URECFM FIELD    * 07000000
         MVC   18(1,@C),DCBRECFM                                  0202  07010000
*         UKEYLEN=DCBKEYLE;             /* INITIALIZE UKEYLEN FIELD   * 07020000
         MVC   19(1,@C),DCBKEYLE                                  0203  07030000
*         UOPTCD=DCBOPTCD;              /* INITIALIZE UOPTCD FIELD    * 07040000
         MVC   20(1,@C),DCBOPTCD                                  0204  07050000
*         DCBREG=ADDR(ULOADDCB);        /* CHANGE CURRENT DCB POINTER   07060000
*                                          REGISTER TO ADDRESS OF       07070000
*                                          UNLOAD DCB                 * 07080000
         LA    @5,ULOADDCB                                        0205  07090000
*         TBLKSIZE=DCBBLKSI;            /* INITIALIZE THE TBLKSIZE      07100000
*                                          FIELD OF THE COPYR1          07110000
*                                          RECORD                     * 07120000
         MVC   22(2,@C),DCBBLKSI                                  0206  07130000
*         UDEVTYPE=OUTCHAR;             /* INITIALIZE UDEVTYPE FIELD  * 07140000
         MVC   24(20,@C),OUTCHAR                                  0207  07150000
*                                                                       07160000
*         /************************************************************ 07170000
*         /* THE COPYR2 RECORD IS NOW BUILT                           * 07180000
*         /************************************************************ 07190000
*                                                                       07200000
*         UDEBX(1)='00'X;               /* CLEAR UDEBX FIELD OF COPYR2  07210000
*                                          RECORD BUFFER              * 07220000
         L     @8,ACOPYR2                                         0208  07230000
         MVI   24(@8),X'00'                                       0208  07240000
*         UDEBX(2:256)=UDEBX(1:255);                    /* CLEAR      * 07250000
         MVC   25(255,@8),24(@8)                                  0209  07260000
*         URES2(1)='00'X;               /* CLEAR URES2 FIELD OF COPYR2  07270000
*                                          RECORD BUFFER              * 07280000
         MVI   280(@8),X'00'                                      0210  07290000
*         URES2(2:4)=URES2(1:3);                        /* CLEAR      * 07300000
         MVC   281(3,@8),280(@8)                                  0211  07310000
*         DCBREG=ADDR(INDCB);           /* SET CURRENT DCB POINTER TO   07320000
*                                          ADDRESS OF INPUT PDS DCB   * 07330000
         LA    @5,INDCB                                           0212  07340000
*         DEBREG=DEBAD24;               /* SET DEB ADDRESSABILITY       07350000
*                                          REGISTER TO ADDRESS OF       07360000
*                                          INPUT PDS DEB              * 07370000
         MVC   @TEMP3+1(3),DEBAD24                                0213  07380000
         L     @7,@TEMP3                                          0213  07390000
*                                                                       07400000
*         /************************************************************ 07410000
*         /* THE FOLLOWING GENERATED CODE IS FOR OBTAINING DEB        * 07420000
*         /* ADDRESSABILITY.                                          * 07430000
*         /************************************************************ 07440000
*                                                                       07450000
*         GENERATE;                                                     07460000
         DROP  @7                                                       07470000
         USING DXDEB,@7           DEB ADDRESSABILITY                    07480000
         DS    0H                                                       07490000
*         BLL2=284;                     /* INITIALIZE COPYR2 BIG LL     07500000
*                                          FIELD - FIRST HALF         * 07510000
         LA    @F,284                                             0215  07520000
         STH   @F,0(0,@8)                                         0215  07530000
*         BLL200=0;                     /* INITIALIZE COPYR2 BIG LL     07540000
*                                          FIELD - LAST HALF          * 07550000
         SR    @F,@F                                              0216  07560000
         STH   @F,2(0,@8)                                         0216  07570000
*         LLL2=280;                     /* INITIALIZE COPYR2 LITTLE     07580000
*                                          LL FIELD - FIRST HALF      * 07590000
         LA    @F,280                                             0217  07600000
         STH   @F,4(0,@8)                                         0217  07610000
*         LLL200=0;                     /* INITIALIZE COPYR2 LITTLE     07620000
*                                          LL FIELD - LAST HALF       * 07630000
         SR    @F,@F                                              0218  07640000
         STH   @F,6(0,@8)                                         0218  07650000
*         UDEBL16=DXDEBUSR;             /* INITIALIZE UDEBL16 FIELD   * 07660000
         MVC   8(16,@8),DXDEBUSR                                  0219  07670000
*         ENDCHAR=DXDEBUSR(1) *         /* CALCULATE TOTAL SIZE OF    * 07680000
*                 16;                   /* DEB EXTENT SECTION         * 07690000
         LA    @F,16                                              0220  07700000
         SR    @0,@0                                              0220  07710000
         IC    @0,DXDEBUSR                                        0220  07720000
         MR    @E,@0                                              0220  07730000
         STH   @F,ENDCHAR                                         0220  07740000
*         UDEBX(1:ENDCHAR) =            /* INITIALIZE UDEBX FIELD OF  * 07750000
*           DXDEBMOD(1:ENDCHAR);        /* COPYR2 RECORD              * 07760000
         LA    @E,DXDEBMOD                                        0221  07770000
         LR    @9,@F                                              0221  07780000
         BCTR  @9,0                                               0221  07790000
         LA    @A,24(0,@8)                                        0221  07800000
         EX    @9,@MVC                                            0221  07810000
*         GO TO LDUL0024;               /* RETURN TO CALLER           * 07820000
         BC    15,LDUL0024                                        0222  07830000
* /******************************************************************** 07840000
* /*         THIS IS THE DCB EXIT ROUTINE FOR THE UNLOAD DCB          * 07850000
* /******************************************************************** 07860000
*                                                                       07870000
* ULOADVAL:                                                             07880000
*         DCBREG=ADDR(INDCB);           /* SET CURRENT DCB POINTER      07890000
*                                          REGISTER TO ADDRESS OF       07900000
*                                          INPUT PDS DCB              * 07910000
ULOADVAL LA    @5,INDCB                                           0223  07920000
*         MINBLK=12 +                   /* SET MINIMUM UNLOAD DATA    * 07930000
*                8 +                    /*  SET BLKSIZE TO LENGTH OF  * 07940000
*                DCBKEYLE +             /*  FMBBCCHHRKDD FIELD +      * 07950000
*                IBLKSIZE;              /*  LENGTH OF BIG AND LITTLE    07960000
*                                           LL FIELDS + KEY LENGTH      07970000
*                                           AND DATA LENGTH OF DATA     07980000
*                                           SET TO BE UNLOADED        * 07990000
         LH    @F,IBLKSIZE                                        0224  08000000
         SR    @0,@0                                              0224  08010000
         IC    @0,DCBKEYLE                                        0224  08020000
         AR    @F,@0                                              0224  08030000
         AH    @F,@D5                                             0224  08040000
         AH    @F,@D6                                             0224  08050000
         ST    @F,MINBLK                                          0224  08060000
*                                                                       08070000
*         /*----------------------------------------------------------* 08080000
*         /* A TEST IS NOW MADE TO SEE IF THE MINIMUM BLKSIZE CALCU-  * 08090000
*         /* LATED ABOVE IS LESS THAN 284 BYTES.  IF IT IS, THE MIN-  * 08100000
*         /* IMUM BLKSIZE IS SET TO 284.                              * 08110000
*         /*----------------------------------------------------------* 08120000
*                                                                       08130000
*         IF MINBLK < 284               /* IS THE VALUE CALCULATED      08140000
*                                          ABOVE FOR MINBLK LESS        08150000
*                                          THAN THE ABSOLUTE MINUMUM  * 08160000
*            THEN                       /* YES IT IS                  * 08170000
         LA    @F,284                                             0225  08180000
         C     @F,MINBLK                                          0225  08190000
         BC    12,@9EF                                            0225  08200000
*              MINBLK=284;              /* SET MINBLK TO ABSOLUTE       08210000
*                                          MINIMUM (ASSUMING NO         08220000
*                                          SPANNING REQUIRED)         * 08230000
         ST    @F,MINBLK                                          0226  08240000
*            ELSE;                      /* NO, IT IS GREATER OR EQUAL   08250000
*                                          SO DON'T CHANGE IT         * 08260000
@9EF     EQU   *                                                  0227  08270000
*         DCBREG=ADDR(ULOADDCB);        /* SET CURRENT DCB POINTER      08280000
*                                          TO ADDRESS OF UNLOAD DCB   * 08290000
@9EE     LA    @5,ULOADDCB                                        0228  08300000
*                                                                       08310000
*         /*----------------------------------------------------------* 08320000
*         /* A TEST IS NOW MADE TO DETERMINE IF THE UNLOAD DCB BLK-   * 08330000
*         /* SIZE (USER SUPPLIED OR 0) IS LESS THAN THE MINIMUM       * 08340000
*         /* REQUIRED FOR UNLOADING.  IF IT IS, IT IS SET TO THE      * 08350000
*         /* MINIMUM VALUE.                                           * 08360000
*         /*----------------------------------------------------------* 08370000
*                                                                       08380000
*         IF DCBBLKSI < MINBLK          /* IS THE UNLOAD DCB BLKSIZE    08390000
*                                          LESS THAN THE ABOVE CALC-    08400000
*                                          ULATED MINIMUM             * 08410000
*            THEN                       /* YES, IT IS TOO SMALL       * 08420000
         L     @F,MINBLK                                          0229  08430000
         CH    @F,DCBBLKSI                                        0229  08440000
         BC    12,@9ED                                            0229  08450000
*              DCBBLKSI=MINBLK;         /* SET IT TO CORRECT MINIMUM    08460000
*                                          VALUE                      * 08470000
         MVC   DCBBLKSI(2),MINBLK+2                               0230  08480000
         BC    15,@9EC                                            0231  08490000
*            ELSE;                      /* NO, IT IS LARGER OR EQUAL    08500000
*                                          SO DO NOT CHANGE IT        * 08510000
@9ED     EQU   *                                                  0231  08520000
*                                                                       08530000
*         /*----------------------------------------------------------* 08540000
*         /* A TEST IS NOW MADE TO DETERMINE IF THE UNLOAD DATA SET   * 08550000
*         /* CAN PHYSICALLY CONTAIN A RECORD WHOSE LENGTH IS AS LONG  * 08560000
*         /* AS THAT SPECIFIED BY THE UNLOAD DCB BLKSIZE FIELD.       * 08570000
*         /*----------------------------------------------------------* 08580000
*                                                                       08590000
*         IF DCBBLKSI > OUTMXBLK        /* IS THE UNLOAD DCB BLKSIZE    08600000
*                                          LARGER THAN THE MAXIMUM      08610000
*                                          RECORD LENGTH ALLOWED ON     08620000
*                                          THE UNLOAD DEVICE          * 08630000
*            THEN                       /* YES, IT IS LARGER          * 08640000
@9EC     L     @F,OUTMXBLK                                        0232  08650000
         CH    @F,DCBBLKSI                                        0232  08660000
         BC    10,@9EB                                            0232  08670000
*              DCBBLKSI=OUTMXBLK;       /* SET THE UNLOAD DCB BLKSIZE   08680000
*                                          TO DEVICE MAXIMUM RECORD     08690000
*                                          LENGTH - SPANNING MAY HAVE   08700000
*                                          TO BE DONE OF THE UNLOADED   08710000
*                                          DATA                       * 08720000
         MVC   DCBBLKSI(2),OUTMXBLK+2                             0233  08730000
*            ELSE;                      /* NO, IT IS NOT LARGER, SO     08740000
*                                          DO NOT CHANGE IT           * 08750000
@9EB     EQU   *                                                  0234  08760000
*         DCBLRECL=DCBBLKSI-4;          /* ASSURE THAT THE UNLOAD DCB   08770000
*                                          LRECL FIELD IS EQUAL TO      08780000
*                                          THE UNLOAD DCB BLKSIZE       08790000
*                                          FIELD MINUS THE LENGTH OF    08800000
*                                          THE BIG LL FIELD           * 08810000
@9EA     LH    @F,DCBBLKSI                                        0235  08820000
         SH    @F,@D2                                             0235  08830000
         STH   @F,DCBLRECL                                        0235  08840000
*                                                                       08850000
*         /************************************************************ 08860000
*         /* THE FOLLOWING GENERATED CODE IS FOR RETURN LINKAGE TO    * 08870000
*         /* TO OPEN.                                                 * 08880000
*         /************************************************************ 08890000
*                                                                       08900000
*         GENERATE;                                                     08910000
         BR    @E                 RETURN TO OPEN                        08920000
         DS    0H                                                       08930000
* /******************************************************************** 08940000
* /*         THIS SECTION HANDLES VALIDATION ERRORS FOUND IN THIS     * 08950000
* /*         MODULE.                                                  * 08960000
* /******************************************************************** 08970000
*                                                                       08980000
* LDUL0100:                             /* OPEN ERROR                 * 08990000
*         MSG2='8012'X;                 /* INDICATE OPEN ERROR MESSAGE* 09000000
LDUL0100 MVC   MSG2(2),@X6                                        0237  09010000
*         GO TO LDUL0112;               /* SET HEADER INDICATOR       * 09020000
         BC    15,LDUL0112                                        0238  09030000
* LDUL0101:                             /* INPUT AND OUTPUT DATA SETS   09040000
*                                          ON SAME TAPE VOLUME ERROR  * 09050000
*         MSG2='804A'X;                 /* INDICATE INPUT AND OUTPUT    09060000
*                                          DATA SET ON SAME TAPE        09070000
*                                          VOLUME MESSAGE             * 09080000
LDUL0101 MVC   MSG2(2),@X7                                        0239  09090000
*         GO TO LDUL0112;               /* SET HEADER INDICATOR       * 09100000
         BC    15,LDUL0112                                        0240  09110000
* LDUL0102:                             /* LOAD OR UNLOAD DATA SET      09120000
*                                          NOT ON A TAPE OR DISK        09130000
*                                          DEVICE ERROR               * 09140000
*         MSG2='804B'X;                 /* INDICATE LOAD OR UNLOAD      09150000
*                                          DATA SET NOT ON A TAPE       09160000
*                                          OR DISK DEVICE             * 09170000
LDUL0102 MVC   MSG2(2),@X8                                        0241  09180000
*         GO TO LDUL0112;               /* SET HEADER INDICATOR       * 09190000
         BC    15,LDUL0112                                        0242  09200000
* LDUL0104:                             /* INVALID COPYR1 ID FIELD    * 09210000
*         MSG2='8045'X;                 /* INDICATE NOT AN IEBCOPY      09220000
*                                          UNLOADED PDS ERROR MESSAGE * 09230000
LDUL0104 MVC   MSG2(2),@X9                                        0243  09240000
*         GO TO LDUL0112;               /* SET HEADER INDICATOR       * 09250000
         BC    15,LDUL0112                                        0244  09260000
* LDUL0106:                             /* NOT A LOADBLE DATA SET     * 09270000
*         MSG2='8049'X;                 /* INDICATE NOT A LOADABLE DATA 09280000
*                                          DATA SET MESSAGE           * 09290000
LDUL0106 MVC   MSG2(2),@X10                                       0245  09300000
*         GO TO LDUL0112;               /* SET HEADER INDICATOR       * 09310000
         BC    15,LDUL0112                                        0246  09320000
* LDUL0108:                             /* PARM='COMPRESS' ERROR      * 09330000
*         MSG1='8046'X;                 /* INDICATE COMPRESS PARAMETER  09340000
*                                          INVALID ERROR MESSAGE      * 09350000
LDUL0108 MVC   MSG1(2),@X11                                       0247  09360000
*         GO TO LDUL0116;               /* GO ISSUE ERROR MESSAGE     * 09370000
         BC    15,LDUL0116                                        0248  09380000
* LDUL0112:                             /* PREPARE DDNAME MESSAGE     * 09390000
*         MSG1='0811'X;                 /* INDICATE DDNAME HEADER       09400000
*                                          ERROR MESSAGE              * 09410000
LDUL0112 MVC   MSG1(2),@X12                                       0249  09420000
*         PARAMS='80'X;                 /* INDICATE NAME TO BE PLACED   09430000
*                                          IN MESSAGE                 * 09440000
         MVI   PARAMS,X'80'                                       0250  09450000
*         NAMEDISP='00'X;               /* INDICATE DISPLACEMENT FOR    09460000
*                                          NAME IN MESSAGE            * 09470000
         MVI   NAMEDISP,X'00'                                     0251  09480000
*         GO TO LDUL0116 ;                   /*GO ISSUE ERROR MSGM2744* 09490000
         BC    15,LDUL0116                                        0252  09500000
* LDUL0114 :                                                   /*M2744* 09510000
*         MSG1 = '8020'X ;                   /*GIVE NO BUFFER    M2744  09520000
*                                               AVAILABLE MSG    M2744* 09530000
LDUL0114 MVC   MSG1(2),@X13                                       0253  09540000
* LDUL0116:                             /* LINK TO IEBVMS             * 09550000
*                                                                       09560000
*         /************************************************************ 09570000
*         /* THE FOLLOWING GENERATED CODE IS FOR LINKAGE TO THE       * 09580000
*         /* MESSAGE HANDLING ROUTINE IEBVMS.                         * 09590000
*         /************************************************************ 09600000
*                                                                       09610000
*         GENERATE;                                                     09620000
LDUL0116 EQU   *                                                  0254  09630000
         STM   @E,@F,REGSAVE1     SAVE REGISTERS 14 AND 15              09640000
         L     @F,VIEBVMS         1 ADDRESS OF MESSAGE HANDLING         09650000
*                                  ROUTINE                              09660000
         BALR  @E,@F              LINK TO IEBVMS                        09670000
         LM    @E,@F,REGSAVE1     RESTORE REGISTERS 14 AND 15           09680000
         DS    0H                                                       09690000
*    IF RCBUF<'F8'X              /* IF RETURN CODE LESS THAN 8  A44144* 09700000
*            THEN                /* YES, IT IS SMALLER          A44144* 09710000
         CLI   RCBUF,X'F8'                                        0255  09720000
         BC    10,@9E9                                            0255  09730000
*         RCBUF='F8'X;           /* SET RETURN CODE TO 8        A44144* 09740000
         MVI   RCBUF,X'F8'                                        0256  09750000
*            ELSE;               /* NO, IT IS NOT SMALLER SO            09760000
*                                   DO NOT CHANGE IT            A44144* 09770000
@9E9     EQU   *                                                  0257  09780000
*         RTCDREG=4;                    /* SET RETURN CODE TO FOUR    * 09790000
@9E8     LA    @F,4                                               0258  09800000
*         RETURN;                       /* RETURN TO CALLER           * 09810000
* /******************************************************************** 09820000
* /*        THIS NESTED PROCEDURE IS USED TO READ THE COPYR1 AND      * 09830000
* /*        COPYR2 DESCRIPTOR RECORDS.                                * 09840000
* /******************************************************************** 09850000
*                                                                       09860000
* READHD: PROCEDURE;                                                    09870000
@EL01    L     @D,4(0,@D)                                         0260  09880000
         L     @E,12(0,@D)                                        0260  09890000
         LM    @0,@C,20(@D)                                       0260  09900000
         BCR   15,@E                                              0260  09910000
READHD   STM   @E,@C,12(@D)                                       0260  09920000
         ST    @D,@SAV002+4                                       0260  09930000
         LA    @F,@SAV002                                         0260  09940000
         ST    @F,8(0,@D)                                         0260  09950000
         LR    @D,@F                                              0260  09960000
*                                                                       09970000
*         /************************************************************ 09980000
*         /* THE FOLLOWING ARE REGISTER RESTRICTIONS.                 * 09990000
*         /************************************************************ 10000000
*                                                                       10010000
*         RESTRICT(4);                  /* IEBMCA AREA POINTER        * 10020000
*         RESTRICT(5);                  /* CURRENT DCB POINTER        * 10030000
*         RESTRICT(6);                  /* BUFFER POINTER             * 10040000
*         /************************************************************ 10050000
*         /* THE FOLLOWING DATA DEFINITIONS ARE FOR VARIABLES         * 10060000
*         /* USED ONLY IN THIS PROCEDURE.                             * 10070000
*         /************************************************************ 10080000
*                                                                       10090000
*         DCL                                                           10100000
*           BUFPOINT REGISTER(6) POINTER(31); /* CURRENT DESCRIPTOR     10110000
*                                                RECORD BUFFER POINTER* 10120000
*         BUFPOINT=READPTR;             /* LOAD BUFFER POINTER        * 10130000
         L     @6,READPTR                                         0265  10140000
*                                                                       10150000
*         /************************************************************ 10160000
*         /* THE FOLLOWING GENERATED CODE IS USED TO READ COPYR1      * 10170000
*         /* AND COPYR2 DESCRIPTOR RECORDS.                           * 10180000
*         /************************************************************ 10190000
*                                                                       10200000
*         GENERATE;                                                     10210000
         STM   @E,@1,REGSAVE1     SAVE REGISTERS 14,15,0 AND 1          10220000
         READ  HDECB,SF,(@5),(@6) READ A HEADER RECORD                  10230000
         CHECK HDECB              WAIT FOR I/O COMPLETED OK             10240000
         LM    @E,@1,REGSAVE1     RESTORE REGISTERS 14,15,0 AND 1       10250000
         DS    0H                                                       10260000
*         RETURN;                       /* RETURN TO CALLER OF READHD * 10270000
*         END READHD;                                                   10280000
@EL02    L     @D,4(0,@D)                                         0268  10290000
         LM    @E,@C,12(@D)                                       0268  10300000
         BCR   15,@E                                              0268  10310000
*         END IEBLDUL;                                                  10320000
@DATA1   EQU   *                                                        10330000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           10340000
@1       EQU   01                                                       10350000
@2       EQU   02                                                       10360000
@3       EQU   03                                                       10370000
@4       EQU   04                                                       10380000
@5       EQU   05                                                       10390000
@6       EQU   06                                                       10400000
@7       EQU   07                                                       10410000
@8       EQU   08                                                       10420000
@9       EQU   09                                                       10430000
@A       EQU   10                                                       10440000
@B       EQU   11                                                       10450000
@C       EQU   12                                                       10460000
@D       EQU   13                                                       10470000
@E       EQU   14                                                       10480000
@F       EQU   15                                                       10490000
@D1      DC    H'-60'                                                   10500000
@D2      DC    H'4'                                                     10510000
@D3      DC    H'-16'                                                   10520000
@D4      DC    H'1'                                                     10530000
@D5      DC    H'8'                                                     10540000
@D6      DC    H'12'                                                    10550000
@MVC     MVC   0(1,@A),0(@E)                                            10560000
         DS    0F                                                       10570000
@X6      DC    X'8012'                                                  10580000
@X7      DC    X'804A'                                                  10590000
@X8      DC    X'804B'                                                  10600000
@X9      DC    X'8045'                                                  10610000
@X10     DC    X'8049'                                                  10620000
@X11     DC    X'8046'                                                  10630000
@X12     DC    X'0811'                                                  10640000
@X13     DC    X'8020'                                                  10650000
@X4      DC    X'CA6D0F'                                                10660000
         DS    0D                                                       10670000
@DATA    EQU   *                                                        10680000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   10690000
JFCBBUF  EQU   00000000            176 BYTE(S)                          10700000
DSCBBUF  EQU   00000000            96 BYTE(S)                           10710000
INVOLBUF EQU   00000000            6 BYTE(S)                            10720000
INDSNBUF EQU   00000000            44 BYTE(S)                           10730000
REGSAVE1 EQU   @DATA+00000072      16 BYTE(S) ON WORD                   10740000
READPTR  EQU   @DATA+00000088      FULLWORD POINTER                     10750000
MINBLK   EQU   @DATA+00000092      FULLWORD INTEGER                     10760000
ENDCHAR  EQU   @DATA+00000096      HALFWORD INTEGER                     10770000
DEBXPTR  EQU   @DATA+00000100      FULLWORD POINTER                     10780000
XTENTCTR EQU   @DATA+00000104      HALFWORD INTEGER                     10790000
RTCDREG  EQU   00000015            FULLWORD INTEGER REGISTER            10800000
JFCBREG  EQU   00000007            FULLWORD POINTER REGISTER            10810000
DSCBREG  EQU   00000006            FULLWORD POINTER REGISTER            10820000
DEBREG   EQU   00000007            FULLWORD POINTER REGISTER            10830000
DCBREG   EQU   00000005            FULLWORD POINTER REGISTER            10840000
COPYR1   EQU   00000000            60 BYTE(S) ON WORD                   10850000
BLL1     EQU   COPYR1+00000000     HALFWORD INTEGER                     10860000
BLL100   EQU   COPYR1+00000002     HALFWORD INTEGER                     10870000
LLL1     EQU   COPYR1+00000004     HALFWORD INTEGER                     10880000
LLL100   EQU   COPYR1+00000006     HALFWORD INTEGER                     10890000
INDC     EQU   COPYR1+00000008     8 BIT(S)                             10900000
LOADSTAT EQU   COPYR1+00000008     1 BIT(S)                             10910000
A00000   EQU   COPYR1+00000008     7 BIT(S)                             10920000
ID       EQU   COPYR1+00000009     3 BYTE(S)                            10930000
UDSORG   EQU   COPYR1+00000012     16 BIT(S)                            10940000
UBLKSIZE EQU   COPYR1+00000014     HALFWORD INTEGER                     10950000
ULRECL   EQU   COPYR1+00000016     HALFWORD INTEGER                     10960000
URECFM   EQU   COPYR1+00000018     8 BIT(S)                             10970000
UKEYLEN  EQU   COPYR1+00000019     8 BIT(S)                             10980000
UOPTCD   EQU   COPYR1+00000020     8 BIT(S)                             10990000
A00001   EQU   COPYR1+00000021     8 BIT(S)                             11000000
TBLKSIZE EQU   COPYR1+00000022     HALFWORD INTEGER                     11010000
UDEVTYPE EQU   COPYR1+00000024     20 BYTE(S)                           11020000
A00002   EQU   COPYR1+00000044     16 BYTE(S)                           11030000
COPYR2   EQU   00000000            284 BYTE(S) ON WORD                  11040000
BLL2     EQU   COPYR2+00000000     HALFWORD INTEGER                     11050000
BLL200   EQU   COPYR2+00000002     HALFWORD INTEGER                     11060000
LLL2     EQU   COPYR2+00000004     HALFWORD INTEGER                     11070000
LLL200   EQU   COPYR2+00000006     HALFWORD INTEGER                     11080000
UDEBL16  EQU   COPYR2+00000008     16 BYTE(S)                           11090000
UDEBX    EQU   COPYR2+00000024     256 BYTE(S)                          11100000
URES2    EQU   COPYR2+00000280     4 BYTE(S)                            11110000
TEMP1HDR EQU   00000000            60 BYTE(S)                           11120000
TEMP2HDR EQU   00000000            284 BYTE(S)                          11130000
DEBXFLD  EQU   00000000            16 BYTE(S) ON WORD                   11140000
FILEMASK EQU   DEBXFLD+00000000    8 BIT(S)                             11150000
UCBAD    EQU   DEBXFLD+00000001    3  BYTE  POINTER ON WORD+1           11160000
A00003   EQU   DEBXFLD+00000004    12 BYTE(S)                           11170000
         ENTRY IEBLDUL1                                                 11180000
         ENTRY IEBLDUL2                                                 11190000
@SAV002  EQU   @DATA+00000108      72 BYTE(S) ON WORD                   11200000
BUFPOINT EQU   00000006            FULLWORD POINTER REGISTER            11210000
         DS    00000180C                                                11220000
@TEMPS   DS    0F                                                       11230000
@TEMP3   DC    F'0'                                                     11240000
@TEMP4   DC    F'0'                                                     11250000
PATCHLEN EQU   (*-IEBLDUL)/20     5 PERCENT OF MODULE LENGTH            11260000
         DS    0H                                                       11270000
PATCH    DS    CL(PATCHLEN)       5 PERCENT PATCH AREA                  11280000
         EJECT                                                          11290000
IEBMCA   DSECT                                                          11300000
         IEBMCA                                                         11310000
LIST5ADR EQU   LIST5+1            ADDRESS PORTION OF LIST5              11320000
LIST6ADR EQU   LIST6+1            ADDRESS PORTION OF LIST6              11330000
OUTMXBLK EQU   OUTCHAR+4          OUTPUT DEVICE CHARACTERISTICS         11340000
*                                  MAXIMUM RECORD LENGTH FIELD          11350000
         EJECT                                                          11360000
         DCBD  DSORG=PS                                                 11370000
EODAD24  EQU   DCBEODAD+1         DCB EODAD ADDRESS FIELD               11380000
SYNAD24  EQU   DCBSYNAD+1         DCB SYNAD ADDRESS FIELD               11390000
DEBAD24  EQU   DCBDEBAD+1         DCB DEB ADDRESS FIELD                 11400000
         EJECT                                                          11410000
IECDSECT DSECT                                                          11420000
         IECDSECT                                                       11430000
@DATEND  EQU   *                                                        11440000
         END   IEBLDUL                                                  11450000
