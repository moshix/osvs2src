EXPR   TITLE 'IECVEXPR EXCP PURGE, RESTORE AND FRR ROUTINES - PROLOGUE' 00050002
IECVEXPR CSECT                                                          00100002
*********************************************************************** 00150002
*                                                                     * 00200002
* MODULE NAME = IECVEXPR                                              * 00210002
*                                                                     * 00230002
* DESCRIPTIVE NAME = EXCP PURGE RESTORE AND FRR ROUTINES              * 00240002
*                                                                     * 00244002
* COPYRIGHT = NONE                                                    * 00246002
*                                                                     * 00248002
* STATUS --                                                           * 00250002
*    CHANGE LEVEL IS 0                                                * 00300002
*                                                                     * 00350002
* FUNCTION --                                                         * 00400002
*    CONTAINED IN THIS MODULE ARE THREE SUBROUTINES. THEY ARE THE     * 00450002
*    PURGE SUBROUTINE, THE RESTORE SUBROUTINE AND THE FUNCTIONAL      * 00500002
*    RECOVERY ROUTINE FOR EXCP. EACH ROUTINE IS DESCRIBED IN DETAIL   * 00550002
*    IN THE HEADER FOR THE SPECIFIC SUBROUTINE.                       * 00600002
*    THE ROUTINE ALSO BUILDS A RESTORE CHAIN ON PURGE OPERATIONS      * 00620002
*                                                                     * 00650002
* NOTES = NONE                                                 @YM07015 00660002
*                                                              @YM07015 00662002
*    DEPENDENCIES = NONE                                       @YM07015 00664002
*                                                              @YM07015 00666002
*    RESTRICTIONS = NONE                                       @YM07015 00668002
*                                                              @YM07015 00670002
*    REGISTER CONVENTIONS = SEE REGISTER EQUATES BELOW         @YM07015 00672002
*                                                              @YM07015 00674002
*    PATCH-LABEL = PATCH                                       @YM07015 00676002
*                                                                     * 00680002
* MODULE TYPE = RESOURCE RECOVERY                                     * 00690002
*                                                                     * 00692002
*    PROCESSOR = ASSEMBLER                                            * 00694002
*                                                                     * 00696002
*    MODULE SIZE = HEX9C4 BYTES                                @YM07015 00698002
*                                                                     * 00698102
*    ATTRIBUTES =                                                     * 00698402
*      REENTRANT, ENABLED, LOCAL LOCK, SUPERVISOR STATE, KEY 0        * 00698802
*                                                                     * 00699202
* ENTRY POINTS =                                                      * 00700002
*         IECVXPUR - PURGE SUBROUTINE VIA BRANCH FROM SVC 16 OR 33.   * 00750002
*         IECVXRES - RESTORE SUBROUTINE VIA BRANCH FROM SVC 17.       * 00800002
*         IECVXFRR - FUNCTIONAL RECOVERY ROUTINE VIA BRANCH FROM RTM. * 00850002
*         IECVRCHN - RESTORE CHAIN BUILDER SUBROUTINE                 * 00860002
*                                                              @YM07015 00862002
*    PURPOSE =  IECVXPUR, ENTERED BY IOS NON-RESIDENT PURGE    @YM07015 00864002
*               MODULE FOR EITHER A HALT OR QUIESCE OPERATION. @YM07015 00866002
*               IECVXRES, ENTERED BY IOS RESTORE MODULE TO     @YM07015 00868002
*               RESTORE EACH IOB IN THE RESTORE CHAIN BY       @YM07015 00870002
*               ISSUING SVC'S 0,92, OR 114.                    @YM07015 00872002
*               IECVXFRR, ENTERED BY R/TM TO HANDLE PROCESS-   @YM07015 00874002
*               ING OF AN EXCP ABEND, A PROGRAM CHECK IN AN    @YM07015 00876002
*               APPENDAGE OR A PROGRAM CHECK IN AN EXCP PRO-   @YM07015 00878002
*               CEDURE.                                        @YM07015 00880002
*               IECVRCHN, ENTERED BY IECVXPUR (PURGE) AND EXCP @YM07015 00882002
*               TO CREATE OR EXTEND A CHAIN OF IOB'S THAT RE-  @YM07015 00884002
*               PRESENT QUIESCED I/O REQUESTS. ENTERED BY EXCP @YM07015 00886002
*               OR AN ABE APPENDAGE IF EITHER WANTS AN IOB TO  @YM07015 00888002
*               BE ADDED TO THE CHAIN OF IOBS.                 @YM07015 00900002
*                                                              @YM07015 00910002
*    LINKAGE = NORMAL ENTRY IS VIA BRANCH AND LINK             @YM07015 00920002
*                                                                     * 00930002
*    INPUT =                                                          * 00950002
*    PURGE AND RESTORE --                                             * 01000002
*         REGISTER 1 - POINTER TO IPIB ( OR RESTORE PARAMETERS).      * 01050002
*         REGISTER 13 - POINTER TO 16 WORD SAVE AREA.                 * 01100002
*         REGISTER 14 - RETURN ADDRESS.                               * 01150002
*         REGISTER 15 - ENTRY POINT ADDRESS.                          * 01200002
*    FRR SUBROUTINE --                                                * 01250002
*         REGISTER 0 - 200 BYTE WORK AREA ADDRESS                     * 01260002
*         REGISTER 1 - SDWA POINTER                                   * 01270002
*         REGISTER 14 - RETURN ADDRESS                                * 01280002
*         REGISTER 15 - ENTRY POINT ADDRESS (IECVXFRR)                * 01290002
*                                                                     * 01300002
*    OUTPUT =                                                         * 01350002
*    PURGE SUBROUTINE --                                              * 01400002
*         FOR QUIESCE OPTION, A LIST OF IOBS IS PASSED TO BE PLACED   * 01450002
*         ON THE PIRL. THE QUIESCE COUNT REFLECTS TOTAL OF            * 01500002
*         OUTSTANDING REQUESTS.                                       * 01550002
*    RESTORE SUBROUTINE --                                            * 01600002
*         SVCS HAVE BEEN ISSUED FOR EACH REQUEST TO BE RESTORED.      * 01650002
*    FRR SUBROUTINE --                                                * 01700002
*         AN ABEND CODE IS ASSIGNED AND CONTROL BLOCKS ARE            * 01750002
*         COPIED TO SUBPOOL 230 FOR PROBLEM DETERMINATION.            * 01800002
*                                                                     * 01850002
*    EXITS-NORMAL =                                                   * 01857002
*    BRANCH BACK VIA REGISTER 14, ALL REGISTERS RESTORED              * 01864002
*                                                                     * 01871002
*    EXITS-ERROR =                                                    * 01878002
*    BRANCH BACK VIA REGISTER 14, ALL REGISTERS RESTORED              * 01885002
*                                                                     * 01892002
* EXTERNAL REFERENCES =                                               * 01900002
*                                                              @YM07015 01950002
*    ROUTINES =                                                @YM07015 01960002
*       IECVTCCW - CCW TRANSLATOR                              @YM07015 01970002
*       IEAPSIB  - PAGE FIX/FREE ROUTINE OF RSM                @YM07015 01980002
*       IEAOPT01 - POST ROUTINE                                @YM07015 01990002
*       IEAOPT02 - POST ROUTINE                                @YM07015 02000002
*       IECVSMGR - STORAGE MANAGER OF IOS                      @YM07015 02010002
*                                                              @YM07015 02020002
*    DATA-AREAS = SEE TABLES BELOW                             @YM07015 02030002
*                                                              @YM07015 02040002
*    CONTROL-BLOCKS = SEE TABLES BELOW                         @YM07015 02050002
*                                                                     * 02150002
* TABLES =                                                            * 02500002
*         IOB - INPUT OUTPUT BLOCK - DESCRIBES THE SPECIFIC I/O       * 02550002
*               EVENT.                                                * 02600002
*         ECB - EVENT CONTROL BLOCK - POSTED AS PURGED.               * 02650002
*         DCB - DATA CONTROL BLOCK - DESCRIBES THE DATA SET           * 02700002
*         DEB - DATA EXTENT BLOCK - CONTAINS THE RELATED REQUEST QUEUE* 02750002
*         TCB - TASK CONTROL BLOCK - DESCRIBES THE REQUESTOR          * 02800002
*         IOSB - IOS BLOCK - DESCRIBES A REQUEST TO IOS               * 02850002
*         IPIB - IOS PURGE INTERFACE BLOCK - DESCRIPES PURGE REQUEST  * 02900002
*         PIRL - PURGE I/O RESTORE LIST                               * 02950002
*         TCCW - TRANSLATION CONTROL BLOCK - DESCRIBES REAL CHANNEL   * 03000002
*                PROGRAM.                                             * 03050002
*                                                                     * 03100002
* MACROS = SETLOCK,GETMAIN,FREEMAINMODESET,SETRP                      * 03150002
*                                                                     * 03400002
* CHANGE ACTIVITY =                                                   * 03450002
*    NEW MODULE FOR VS2/2                                             * 03460002
*                                                                     * 03500002
*********************************************************************** 03550002
         TITLE 'IECVEXPR EXCP PURGE, RESTORE AND FRR ROUTINES - DSECTS' 03600002
         IEZIOB                                                         04050002
         EJECT                                                          04100002
         IEZDEB                                                         04150002
         EJECT                                                          04200002
         IKJTCB                                                         04350002
         EJECT                                                          04400002
         IEZJSCB                                                        04450002
         EJECT                                                          04500002
         IHARB                                                          04550002
         EJECT                                                          04600002
         CVT   DSECT=YES                                                04650002
         EJECT                                                          04700002
         IHAPSA                                                @ZA12704 04708003
         EJECT                                                 @ZA12704 04716003
         IHAASCB                                               @ZA12704 04724003
         EJECT                                                 @ZA12704 04732003
         IHAASXB                                               @ZA12704 04740003
         EJECT                                                 @ZA12704 04750003
         IHASDWA                                               @ZA12704 04760003
         EJECT                                                 @ZA12704 04770003
         DCBD  DSORG=PS                                        @ZA12704 04780003
         EJECT                                                 @ZA12704 04790003
         SPACE 2                                               @ZA12704 04860103
         IHASRB                                                @ZA12704 04916003
         EJECT                                                 @ZA12704 04924003
         IECDIOSB                                              @ZA12704 04932003
         EJECT                                                 @ZA12704 04950003
         IECDIOCM                                              @ZA12704 04958003
         EJECT                                                 @ZA12704 04966003
         IECDBEB                                               @ZA12704 04974003
         EJECT                                                 @ZA12704 04982003
         IECDEPCB                                              @ZA12704 05000003
         EJECT                                                 @ZA12704 05008003
         IECDIPIB                                              @ZA12704 05016003
         EJECT                                                 @ZA12704 05024003
         IECDPIRL                                              @ZA12704 05032003
         EJECT                                                 @ZA12704 05050003
         IECDRQE                                               @ZA12704 05058003
         EJECT                                                 @ZA12704 05066003
         IECDTCCW                                              @ZA12704 05074003
         EJECT                                                 @ZA12704 05082003
         IECDXDBA                                              @ZA12704 05100003
         EJECT                                                 @ZA12704 05108003
         IHAFRRS                                               @ZA12704 05116003
         EJECT                                                 @ZA12704 05124003
         IECDXFRR                                              @ZA12704 05126003
         EJECT                                                 @ZA12704 05128003
         IECDSFRR                                              @ZA12704 05132003
         SPACE 2                                               @ZA12704 05150003
****     SAVE AREA -- EXPR FRR INTERFACE WITH SMGR       ****  @ZA12704 05153003
FRREXCPS DS    A                   EXCP FRR PARM AREA PTR      @ZA12704 05156003
FRRRRTM  DS    A                   RTM RETURN ADDRESS SAVE     @ZA12704 05159003
FRRBASE  DS    A                   EXPR BASE REGISTER SAVE     @ZA12704 05162003
         EJECT                                                 @ZA12704 05165003
         IHAQVPL                                               @ZA12704 05168003
         SPACE 4                                               @ZA12704 05171003
QVWORKS  DS    XL(QVPLWASZ)        WORK AREA FOR QVA           @ZA12704 05174003
QVSAVE   DS    18F                 SAVE AREA FOR CALLER        @ZA12704 05177003
QFRRSDWA DS    F                   SDWA BACK POINTER           @ZA12704 05180003
QFRRPARM DS    XL(FRRSLEN)         LENGTH OF SMGR FRR PARM     @ZA12704 05183003
******   THE PSEUDO FRR PARM AREA IS CONTAINED IN THE QVPL.    @ZA12704 05186003
******   FOLLOWING THE FRR PARM AREA, 3 WORDS ARE USED AS      @ZA12704 05189003
******   SAVE AREAS WHEN INTERFACING WITH SMGR.                @ZA12704 05192003
         EJECT                                                 @ZA12704 05195003
GTM      DSECT                                                          05250002
*********************************************************************** 05300002
*                                                                     * 05350002
* GETMAINED WORK AREA - IT DESCRIBES SAVED INFORMATION AND SAVE AREAS * 05400002
*                                                                     * 05450002
*********************************************************************** 05500002
         SPACE 2                                                        05550002
GTMSAVE  DS    F                   ADDRESS OF REG 13 SAVE AREA          05600002
GTMWORK  DS    X                   WORK AREA TO ISOLATE RB TYPE         05650002
         DS    AL3                 RESERVED                             05700002
GTMAREA  DS    22F                 GETMAINED SAVE AREA AND FRR AREA     05750002
*                                  USED BY EXCP                         05800002
GTMSVRA  DS    16F                 SAVE AREA BEFOR TERM RTN             05850002
         EJECT                                                          05900002
RRQ      DSECT                                                          05950002
*********************************************************************** 06000002
*                                                                     * 06050002
*        RELATED REQUEST QUEUE DSECT - THIS QUEUE RESIDES IN LSQA,    * 06100002
*        SUBPOOL 254.                                                 * 06150002
*                                                                     * 06200002
*********************************************************************** 06250002
         SPACE 2                                                        06300002
RRQFIRST DS    A                   ADDRESS OF THE FIRST RQE ON QUEUE    06350002
RRQLAST  DS    A                   ADDRESS OF THE LAST RQE ON QUEUE     06400002
RRQBL    EQU   *-RRQ               LENGTH OF RRQ                        06450002
         EJECT                                                          06453003
***************************************************************@ZA06070 06456003
*                                                             *@ZA06070 06459003
*        SDWA VARIABLE AREA DSECT  - DESCRIBES SAVED          *@ZA06070 06462003
*        INFORMATION AND SAVE AREAS                           *@ZA06070 06465003
*                                                             *@ZA06070 06468003
***************************************************************@ZA06070 06471003
         SPACE 1                                                        06474003
SDWA     DSECT                                                 @ZA06070 06475003
         ORG   SDWAVRA             SDWA VARIABLE WORK AREA     @ZA06070 06477003
SDWAVABO DS    H                   ORIGINAL ABEND CODE         @ZA06070 06480003
SDWAVABN DS    H                   ADJUSTED ABEND CODE         @ZA06070 06481003
SDWAVLHI DS    A                   HIGHEST LOCK HELD FROM PSA  @ZA06070 06483003
SDWAVFRR DS    (FRRXLEN)XL1        6 WORD FRR AREA             @ZA06070 06484003
SDWAVRQE DS    (RQEBL)XL1          ACTIVE RQE                  @ZA06070 06489003
SDWAVTOP DS    XL1                 TCCW OPTION BYTE            @ZA06070 06490003
SDWAVFLG DS    XL1                 TCCW TRANSLATION FLAGS      @ZA06070 06490503
SDWAVIOC DS    XL1                 IOSB COMPLETION CODE        @ZA06070 06491003
         DS    XL1                 RESERVED                    @ZA06070 06491303
SDWAVASI DS    XL2                 FAILING ASID                @ZA06070 06491603
SDWAVLST EQU   *                   LAST ENTRY IN VARIABLE AREA @ZA06070 06492003
SDWAVLTH EQU   SDWAVLST-SDWAVRA    LENGTH OF SDWA AREA USED    @ZA06070 06495003
 TITLE 'IECVEXPR EXCP PURGE RESTORE AND FRR ROUTINES - GENERAL EQUATES' 06500002
*********************************************************************** 06550002
*                                                                     * 06600002
*                   REGISTER DEFINITIONS                              * 06650002
*                                                                     * 06700002
*********************************************************************** 06750002
         SPACE 2                                                        06800002
REG0     EQU   0                   PARAMETER REGISTER ZERO              06850002
REG1     EQU   1                   PARAMETER REGISTER ONE               06900002
GTMREG   EQU   8                   FRR WORK AREA ADDRESS REG            07000002
BASREG   EQU   9                   BASE REG FOR SUBROUTINES             07020003
WKREGA   EQU   10                  UTILITY REGISTER                     07060002
WKREGB   EQU   11                  UTILITY REGISTER                     07080003
WKREGC   EQU   12                  UTILITY REGISTER                     07100002
SAVREG   EQU   13                  SAVE AREA ADDRESS REGISTER           07150002
REG14    EQU   14                  RETURN REGISTER                      07200002
REG15    EQU   15                  ENTRY POINT REGISTER                 07250002
         SPACE 2                                                        07300002
*        REGISTERS SPECIFICALLY FOR PURGE SUBROUTINE                    07350002
         SPACE 2                                                        07400002
IOBREG   EQU   2                   IOB ADDRESS REGISTER                 07450002
DEBREG   EQU   3                   DEB ADDRESS REGISTER                 07500002
RQEREG   EQU   4                   RQE ADDRESS REGISTER                 07550002
RRQREG   EQU   5                   RRQ ADDRESS REGISTER                 07600002
IOSBRG   EQU   6                   IOSB ADDRESS REGISTER                07650002
IPIBRG   EQU   7                   IPIB ADDRESS REGISTER                07700002
QUSREG   EQU   10                  QUIESCE LIST REGISTER                07750002
         SPACE 2                                                        07800002
*        REGISTERS SPECIFICALLY FOR RESTORE                             07850002
         SPACE 2                                                        07870003
LSTREG   EQU   4                   TCB/IOB LIST ADDRESS REG             07900002
CHAINRG  EQU   5                   IOB CHAIN ADDRESS REG                07950002
TOPREG   EQU   6                   TOP OF TCB LIST ADDRESS SAVE         08000002
ASCBREG  EQU   7                   ASCB ADDRESS REGISTER                08020002
ECBREG   EQU   7                   ECB ADDRESS REGISTER        @YM08618 08030002
         SPACE 2                                                        08050002
*        REGISTERS SPECIFICALLY FOR FRR ROUTINE                         08100002
         SPACE 2                                                        08110003
WKREG2   EQU   2                   UTILITY REGISTER                     08120002
RTMRREG  EQU   3                   RTM RETURN ADDRESS SAVED             08122002
SDWAREG  EQU   5                   POINTER TO SDWA                      08130002
WKREG6   EQU   6                   UTILITY REGISTER                     08140002
WKREG7   EQU   7                   UTILITY REGISTER                     08140402
FRRREG   EQU   12                  POINTER TO FRR PARMS                 08142002
         EJECT                                                          08150002
*********************************************************************** 08200002
*                                                                     * 08250002
*                             EQUATES                                 * 08300002
*                                                                     * 08350002
*********************************************************************** 08400002
         SPACE 2                                                        08450002
ECBFLAG  EQU   0                   OFFSET TO FLAGS IN ECB               08500002
ECBPURGE EQU   X'48'               PURGED REQUEST INDICATOR             08550002
C0       EQU   0                   CONSTANT OF 0                        08600002
C1       EQU   1                   CONSTANT OF 1                        08650002
C2       EQU   2                   CONSTANT OF 2                        08700002
C3       EQU   3                   CONSTANT OF 3                        08750002
C4       EQU   4                   CONSTANT OF 4                        08800002
C6       EQU   6                   CONSTANT OF 6               @ZA16175 08850003
C8       EQU   8                   CONSTANT OF 8                        08900002
C10      EQU   10                  CONSTANT OF 10              @YM07354 08920002
C20      EQU   20                  CONSTANT OF 20              @YM06502 09020002
C24      EQU   24                  CONSTANT OF 24                       09050002
C28      EQU   28                  CONSTANT OF 28                       09100002
C48      EQU   48                  CONSTANT OF 48              @ZA15706 09105003
C64      EQU   64                  CONSTANT OF 64              @YM07285 09110002
RC16     EQU   16                  RETURN CODE OF 16                    09120002
RC20     EQU   20                  RETURN CODE OF 20                    09122002
RC24     EQU   24                  RETURN CODE OF 24                    09130002
NOP      EQU   X'03'               NOP CCW COMMAND CODE                 09140002
A0       EQU   160                 CONSTANT OF 160                      09150002
EXCP     EQU   0                   SVC NUMBER FOR EXCP                  09200002
EXCPVR   EQU   114                 SVC NUMBER FOR EXCPVR                09250002
RESTORE  EQU   92                  SVC NUMBER FOR MEMORY RESTORE        09300002
EXCPVRB  EQU   X'F4'               BYTE DEPICTING EXCPVR ENTRY          09350002
LORD3BYT EQU   7                   ADDRESS PORTION OF REG               09400002
HIORDBYT EQU   8                   HIGH ORDER BYTE OF REG               09450002
DEBTBENT EQU   4                   DEB TABLE ENTRY AND HEADER LENGTH    09500002
VSAM     EQU   X'01'               VSAM DEB INDICATOR            YM0122 09510002
VTAM     EQU   X'82'               VTAM DEB INDICATOR            YM0122 09520002
SUBSYS   EQU   X'81'               SUBSYSTEM DEB INDICATOR       YM0122 09530002
R13DISP  EQU   52                  DISPLACEMENT TO R13 IN SAVEAREA      09532002
FF       EQU   X'FF'               MASK OF ONES                         09540002
TWO56    EQU   256                 LENGTH FOR CLEARING XDBA             09542002
XPRM1    EQU   B'1000'             MASK FOR SP-254             @Y30IPLD 09544003
XPRM3    EQU   B'0011'             MASK FOR ICM INSTRUCT.      @YM02855 09546002
XPRM7    EQU   B'0111'             MASK FOR ICM INSTRUCT.      @YM05531 09548002
ECBPOST  EQU   X'40'               FLAG TO TEST POST IN THE ECB@YM08618 09549002
CODE200  EQU   X'0200'             ABEND CODE 200                       09549203
CODE700  EQU   X'0700'             ABEND CODE 700                       09549403
CODEA00  EQU   X'0A00'             ABEND CODE A00                       09549603
CODEB00  EQU   X'0B00'             ABEND CODE B00                       09550003
CODEE00  EQU   X'0E00'             ABEND CODE E00              @ZA05976 09556003
DISPSW   EQU   X'06'               MASK FOR DISABLED PSW       @ZA05976 09562003
PPKEY    EQU   X'80'               USED TO CHECK PROTECT KEY.  @ZA26460 09566003
         TITLE 'IECVEXPR EXCP PURGE, RESTORE AND FRR ROUTINES - PURGE  *09570003
               INTERFACE ROUTINE'                                       09600002
IECVEXPR CSECT                                                          09650002
         ENTRY IECVXPUR,IECVXRES,IECVXFRR,IECVRCHN                      09700002
         SPACE 4                                               @ZA08162 09710003
         DC    CL8'IECVEXPR'                                   @ZA08162 09720003
         DC    C'&SYSDATE'                                     @ZA08162 09730003
         EJECT                                                          09750002
*********************************************************************** 09800002
*                                                                     * 09850002
*                          PURGE SUBROUTINE                           * 09900002
*                                                                     * 09950002
*        THE PURGE SUBROUTINE ACCEPTS, FROM IOS PURGE, AN IPIB        * 10000002
*        WHICH DESCRIBES THE FUNCTIONS WHICH MUST BE PERFORMED. FROM  * 10050002
*        THIS BLOCK, THE SUBROUTINE DOES THE FOLLOWING:               * 10100002
*           A. DEB PURGE - HALT OPTION - IT FREES RESOURCES FOR EACH  * 10150002
*              REQUEST PASSED BY PURGE FROM IOS QUEUES, FOR EACH      * 10200002
*              REQUEST ON THE DEB RELATED REQUEST QUEUE (FOR THE 3525 * 10250002
*              THE REQUESTS ONLY FOR THIS DEB ARE REMOVED) AND FOR    * 10300002
*              EACH REQUEST ON THE AEQ. IF RB PURGE WAS SPECIVIED, THE* 10350002
*              RB CHAIN IS SEARCHED FOR IRBS WITH RQES ASSOCIATED WITH* 10400002
*              THE DEB. POSTING IS DONE IF REQUESTED.                 * 10450002
*           B. DEB PURGE - QUIESCE OPTION - CHAIN THE IOBS ON THE IPIB* 10500002
*              WHICH HAVE NOT BEEN IDENTIFIED TO IOS. AT THE SAME TIME* 10550002
*              A TABLE IS BUILT IN PROTECTED STORAGE WHICH CONTAINS THE 10600002
*              TCB ADDRESS, A POINTER TO ANOTHER TCB LIST AND A LIST OF 10650002
*              IOBS WHICH WERE REMOVED BY THE PURGE FOR THAT TCB.     * 10700002
*              FOR ALL BUT MEMORY PURGE, THE TCB ADDRESS IS ZERO.     * 10750002
*              THE QUIESCE COUNT IS ALSO UPDATED TO REFLECT OUTSTANDING 10800002
*              I/O REQUESTS.                                          * 10850002
*           C. TCB PURGE - SAME AS DEB PURGE FOR EACH DEB ON THE      * 10900002
*              TCB CHAIN.                                             * 10950002
*           D. MEMORY PURGE - HALT OPTION - BR 14, IOS PURGE RELEASES * 11000002
*              ALL STORAGE OWNED BY IOS. IN DOING THIS, STORAGE IS    * 11050002
*              RELEASED FOR EXCP SINCE IT USES THE SAME STORAGE POOLS * 11100002
*              AND MANAGER.                                           * 11150002
*           E. MEMORY PURGE - QUIESCE OPTION - SAME AS TCB PURGE FOR  * 11200002
*              EACH TCB IN THE MEMORY.                                * 11250002
*                                                                     * 11300002
*        INPUT ON ENTRY IS AS FOLLOWS;                                * 11306002
*                                                                     * 11312002
*              REGISTER 1  -  ADDRESS OF IPIB                         * 11318002
*              REGISTER 13 -  ADDRESS OF EIGHTEEN WORD SAVEAREA       * 11324002
*              REGISTER 14 -  RETURN ADDRESS (PURGE)                  * 11330002
*              REGISTER 15 -  ENTRY POINT ADDRESS                     * 11336002
*                                                                     * 11342002
*********************************************************************** 11350002
         PRINT OFF                                                      11400002
*/*IECVXPUR: CHART */                                                   11450002
*/* HEADER                                                              11500002
*/*                    EXCP PURGE SUBROUTINE                            11550002
*/*                                                      PAGE # */      11560002
*/*IECVXPUR: E ENTRY FROM SVC 16 */                                     11600002
*/* P (+0,SVC16,+4,SVC33) ENTRY POINTS 0 AND 4 FOR SVC 16 AND SVC 33 */ 11610002
*/*SVC16: P SAVE REGS, ESTABLISH ADDRESSABILITY */                      11650002
*/* L GETMAIN: GET WORK AREA */                                         11700002
*/* P ZERO THE HEADER AREA */                                           11750002
*/* L SETLOCK: OBTAIN THE LOCAL LOCK */                                 11760002
*/* P ESTABLISH IPIB REGISTER */                                        11800002
*/* D (NO,PURG005,YES,) MEMORY PURGE */                                 11850002
*/* D (YES,PURG900,NO,) HALT MEMORY */                                  11900002
*/* P ZERO SEARCH ARGUMENT SINCE MEMORY */                              11950002
*/* P (,PURG015) ZERO INCR INTO RQE FOR SEARCHED FLD */                 12000002
*/*PURG005: P GET SEARCH ARGUMENT FROM IPIB */                          12050002
*/* D (NO,PURG010,YES,) TCB PURGE REQUEST */                            12100002
*/* P (,PURG015) CALCULATE OFFSET INTO RQE FOR TCB POINTER */           12150002
*/*PURG010: P CALCULATE OFFSET INTO RQE FOR DEB POINTER */              12200002
*/* D (NO,PURG900,YES,) DEB AN EXCP DEB */                              12210002
*/*PURG015: P LOAD POINTER TO AEQ VIA ASCB AND ASXB */                  12250002
*/* P GET FIRST RQE FROM AEQ */                                         12300002
*/*PURG020: D (YES,PURG060,NO,) AEQ EMPTY */                            12350002
*/*PURG025: D (YES,PURG030,NO,) MEMORY PURGE */                         12400002
*/* D (NO,PURG035,YES,) SEARCH ARG MATCH SEARCHED FIELD */              12450002
*/*PURG030: D (YES,PURG040,NO,) HALT OPTION */                          12500002
*/* P INCREMENT QUIESCE COUNT BY ONE */                                 12550002
*/*PURG035: D (YES,PURG060,NO,) END OF AEQ CHAIN */                     12600002
*/* P SAVE BACK LINK POINTER */                                         12650002
*/* P (,PURG020) POINT TO NEXT RQE */                                   12700002
*/*PURG040: D (NO,PURG045,YES,) FIRST RQE ON THE QUEUE */               12750002
*/* P MOVE CHAIN FIELD TO AEQ FIRST ENTRY POINTER */                    12800002
*/* D (NO,PURG050,YES,) LAST ON QUEUE TOO */                            12850002
*/* P (,PURG050) SHOW THE CHAIN AS EMPTY */                             12900002
*/*PURG045: P MOVE CHAIN TO PREVIOUS RQE */                             12950002
*/* D (NO,PURG050,YES,) THIS RQE LAST IN QUEUE */                       13000002
*/* P STORE NEW END OF CHAIN */                                         13050002
*/*PURG050: D (NO,PURG055,YES,) POST OPTION SPECIFIED */                13100002
*/* S PURGPOST: POST THE ECB PURGED */                                  13150002
*/*PURG055: S (,PURG035) PURGFREE: FREE THE RQE */                      13200002
*/*PURG060: D (NO,PURG113,YES,) RB PURGE SPECIFIED */                   13250002
*/* D (YES,PURG065,NO,) MEMORY PURGE */                                 13300002
*/* D (YES,PURG070,NO,) TCB PURGE */                                    13350002
*/* P (,PURG080) LOAD DEB AND TCB ADDRESS */                            13400002
*/*PURG065: P (,PURG075) LOAD POINTER TO FIRST TCB ON CHAIN */          13450002
*/*PURG070: P LOAD TCB POINTER FROM IPIB */                             13500002
*/*PURG075: P ZERO SEARCH ARGUMENT REGISTER */                          13550002
*/*PURG080: P POINT TO TOP RB, SAVE TCB ADDRESS */                      13600002
*/*PURG085: D (YES,PURG110,NO,) END OF RB CHAIN */                      13650002
*/* P ISOLATE THE RB TYPE FLAGS */                                      13700002
*/* D (NO,PURG095,YES,) IS THIS AN IRB */                               13750002
*/* D (NO,PURG095,YES,) RQE ATTACHED TO IRB */                          13800002
*/* P LOAD THE ADDRESS OF THE RQE FROM IRB */                           13850002
*/* D (YES,PURG090,NO,) IS SEARCH ARGUMENT ZERO */                      13900002
*/* D (NO,PURG095,YES,) RQE FOR THIS DEB */                             13950002
*/*PURG090: D (YES,PURG100,NO,) HALT IO OPTION */                       14000002
*/* P ADD ONE TO THE QUIESCE COUNT */                                   14050002
*/*PURG095: P (,PURG085) LOAD POINTER TO NEXT RB */                     14100002
*/*PURG100: P STORE POINTER TO SVC 3 IN RB */                           14150002
*/* P ZERO RQE FIELD IN IRB */                                          14200002
*/* D (NO,PURG105,YES,) POST OPTION REQUESTED */                        14250002
*/* S PURGPOST: POST RQE AS PURGED */                                   14300002
*/*PURG105: S (,PURG095) PURGFREE: FREE THE RQE */                      14350002
*/*PURG110: D (NO,PURG120,YES,) MEMORY PURGE */                         14400002
*/* D (YES,PURG115,NO,) LAST TCB IN CHAIN */                            14450002
*/* P (,PURG080) LOAD POINTER TO NEXT TCB */                            14500002
*/*PURG113: D (NO,PURG120,YES,) MEMORY PURGE */                         14550002
*/*PURG115: P (,PURG125) LOAD TOP TCB ON QUEUE */                       14600002
*/*PURG120: D (NO,PURG130,YES,) TCB PURGE */                            14650002
*/*PURG125: P LOAD POINTER TO DEB TABLE FROM JSTCB */                   14700002
*/* P CALCULATE END OF DEB TABLE */                                     14750002
*/*PURG127: P INCREMENT BY AN ENTRY */                                  14800002
*/* D (YES,PURG170,NO,) END OF TABLE */                                 14850002
*/* D (YES,PURG127,NO,) DUMMY ENTRY */                                  14900002
*/* P LOAD POINTER TO DEB FROM TABLE */                                 14950002
*/* D (NO,PURG127,YES,) DEB AN EXCP DEB */                              14960002
*/*PURG130: P LOAD POINTER TO DEB RRQ */                                15000002
*/* D (NO,PURG140,YES,) IS THE FIELD ZERO */                            15050002
*/*PURG135: D (DEB,PURG170,TCB,PURG127,MEM,) TYPE PURGE */              15100002
*/* P LOAD POINTER TO NEXT DEB ON CHAIN */                              15150002
*/* D (NO,PURG130,YES,) END OF CHAIN */                                 15200002
*/* D (NO,PURG170,YES,) MEMORY PURGE */                                 15250002
*/* D (YES,PURG170,NO,) LAST TCB IN CHAIN */                            15300002
*/* P (,PURG125) LOAD POINTER TO NEXT TCB */                            15350002
*/*PURG140: P LOAD POINTER TO FIRST RQE IN QUEUE */                     15400002
*/*PURG145: D (YES,PURG135,NO,) END OF CHAIN */                         15450002
*/* D (NO,PURG147,YES,) TCB PURGE */                                    15500002
*/* D (NO,PURG148,YES,) TCB ADDRESSES MATCH */                          15550002
*/*PURG147: D (NO,PURG150,YES,) IS THIS RQE SCHEDLD */                  15600002
*/* P STORE IPIB PTR IN RQE */                                          15650002
*/*PURG148: P (,PURG145) INCREMENT TO NEXT RQE */                       15700002
*/*PURG150: D (YES,PURG155,NO,) HALT PURGE */                           15750002
*/* L IECVRCHN: PLACE ENTRY ON RESTORE CHAIN AND EPCB */                15800002
*/*PURG155: D (YES,PURG160,NO,) POST OPTION */                          15900002
*/* P SET NO POST BIT IN RQE */                                         15950002
*/*PURG160: P SET 48 INTO COMPLETION CODE IN IOB */                     16000002
*/* D (NO,PURG165,YES,) EXCPVR REQUEST */                               16050002
*/* P SAVE INDICATION OF EXCPVR ACROSS FREE */                          16100002
*/*PURG165: L IECVTERM: FREE RQE AND RELATED STORAGE */                 16150002
*/* D (YES,PURG135,NO,PURG150) END OF RQE CHAIN */                      16200002
*/*PURG170: D (NO,PURG900,YES,) HALT OPTION */                          16250002
*/* P LOAD POINTER TO CHAIN OF SRBS,MAKE CHAIN IN IPIB ZEROS */         16300002
*/*PURG175: D (NO,PURG900,YES,) ANY IN CHAIN */                         16350002
*/* P LOAD POINTER TO IOSB */                                           16400002
*/* D (YES,PURG180,NO,) IS THIS AN EXCP EXCPVR REQUEST */               16450002
*/* P STORE TO GIVE BACK TO NEXT DRIVER */                              16500002
*/* P (,PURG175) LOAD FORWARD LINK POINTER */                           16550002
*/*PURG180: P LOAD FORWARD LINK POINTER */                              16600002
*/* P LOAD ADDRESS OF RQE */                                            16650002
*/*PURG185: L (,PURG175) IECVTERM: RELEASE STORAGE FOR THIS REQUEST */  16700002
*/*PURG900: L SETLOCK: RELEASE LOCAL LOCK */                            16750002
*/* P FREE SAVE AREA CORE */                                            18250002
*/* P RESTORE REGISTERS FOR PURGE */                                    18300002
*/* R RETURN TO PURGE */                                                18350002
*/*PURGPOST: E POST INTERFACE ROUTINE */                                18400002
*/* P INDICATE POST CODE OF 48 */                                       18450002
*/* P LOAD POINTER TO ECB TO BE POSTED */                               18500002
*/* L POST: POST THE ECB COMPLETE */                                    18550002
*/* R RETURN TO MAIN FLOW */                                            18600002
*/*PURGFREE: E FREE RQE ROUTINE */                                      18650002
*/* P INITIALIZE POINTER TO RQE */                                      18700002
*/* L IECVX025: FREE THE RQE */                                         18750002
*/* P RESTORE ORIGINAL REGISTERS */                                     18800002
*/* R RETURN TO MAIN ROUTINE */                                         18850002
*/*SVC33: E SVC33 ENTRY POINT */                                        18860002
*/* P LOAD RQE ADR FROM IOSB */                                         18870002
*/* D (NO,HALT16,YES,) VIRTUAL REQUEST */                               18880002
*/* D (NO,HALT20,YES,) REQUEST STARTABLE */                             18890002
*/* P CALCULATE CCW ADDR FROM OFFSET IN IOB */                          18892002
*/* L ((BAD,HALT24,GOOD,) IECVTCCW: EXECUTE SINGLE ADR XLATE FUNCTION   18894002
*/**/                                                                   18896002
*/* P SET THE REAL CCW TO A NOP */                                      18898002
*/* R RETURN TO SVC33 */                                                18898402
*/*HALT16: R RETURN WITH RC=16 */                                       18898802
*/*HALT20: R RETURN WITH RC=20 */                                       18899202
*/*HALT24: R RETURN WITH RC=24 */                                       18899602
*/*IECVXPUR: END */                                                     18900002
         PRINT ON                                                       18950002
         SPACE 2                                                        19000002
*********************************************************************** 19050002
*                                                                     * 19100002
* PURGE ENTRY - CHECKS IPIB FOR THE WORK TO BE DONE AND MANAGES THE   * 19150002
* PURGE FOR THE VARIOUS OPTIONS (IE. DEB, TCB OR MEMORY PURGE).       * 19200002
*                                                                     * 19250002
*********************************************************************** 19300002
         SPACE 2                                                        19350002
         USING FLC,REG0            ADDRESSABILITY TO FIXED LOW CORE     19400002
         USING IECVXPUR,REG15      ADDRESSABILITY FOR ENTRY             19410002
IECVXPUR B     SVC16               PURGE SVC ENTRY POINT                19420002
         B     SVC33               IO HALT ENTRY POINT                  19430002
         DROP  REG15                                            @YM3145 19432002
         SPACE 2                                                        19440002
SVC16    STM   REG0,REG15,C0(SAVREG) SAVE PURGES REGISTERS              19450002
         BALR  BASREG,0            ESTABLISH BASE FOR PURGE             19500002
PURBASE  EQU   *                   PURGE SUBROUTINE ADDRESSING  @YM3145 19510002
         USING *,BASREG            ADDRESSABILITY FOR PURGE             19550002
         LR    IPIBRG,REG1         PLACE IPIB IN ITS BASE REGISTER      19600002
         USING IPIB,IPIBRG         ADDRESSABILITY FOR IPIB              19650002
         SPACE 2                                                        19660003
         GETMAIN R,LV=160,SP=254   GET CORE FOR WORK AREA      @ZA09412 19670003
         LR    GTMREG,REG1         SET UP BASE REG FOR AREA             19750002
         USING GTM,GTMREG          ADDRESSABILITY TO GTM WORK AREA      19800002
         XC    C0(C28,GTMREG),C0(GTMREG) ZERO THE PRIMARY AREA          19850002
         ST    SAVREG,GTMSAVE      SAVE SAVE AREA ADDRESS               19900002
PUR000   EQU   *                   OBTAIN THE LOCAL LOCK                19902002
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  YM1301*19910002
               RELATED=(IECVEXPR,PURG900)                     @Y30IPLB  19920003
         EJECT                                                          20000002
*********************************************************************** 20050002
*                                                                     * 20100002
*        THE FOLLOWING CODE LOOPS THROUGH THE ASYNCHRONOUS EXIT       * 20150002
*        QUEUE AND PURGES ACCORDING TO THE DIRECTIONS PASSED IN       * 20200002
*        THE IPIB BY PURGE.                                           * 20250002
*                                                                     * 20300002
*********************************************************************** 20350002
         SPACE 2                                                        20400002
         L     WKREGC,PSAAOLD      LOAD ASCB PTR TO GET TO ASXB@YM05193 20400202
         USING ASCB,WKREGC         ADDRESSABILITY TO ASCB      @YM05501 20400402
         L     WKREGC,ASCBASXB     LOAD ASXB PTR TO GET TO AEQ @YM05501 20400602
         USING ASXB,WKREGC         ADDRESSABILITY TO ASXB      @YM05501 20401002
         SPACE                                                          20421002
         TM    IPIBOPT,IPIBMEM     IS THIS A MEMORY PURGE      @YM05193 20435002
         BZ    PURG005             NO, CHECK TCB OR DEB        @Y30IPLB 20442003
         TM    IPIBOPT,IPIBHALT    HALT OPTION FOR MEMORY      @YM05193 20462002
         BO    PURG900             RETURN TO PURGE-NOT HANDLING@YM05193 20482002
         SLR   REG0,REG0           ZERO SRCH ARGMNT FOR AEQ SRCH        20502003
         SLR   WKREGB,WKREGB       ZERO INCR INTO RQE FOR SEARCHED FLD  20522003
         B     PURG015             HANDLE AEQ PURGE                     20542002
         SPACE                                                          20562002
PURG005  TM    IPIBOPT,IPIBRBP     RB PURGE SPECIFIED          @Y30IPLB 20582003
         BZ    PURG113             NO, SKIP THIS SEC OF PURGE  @YM05501 20602002
         SPACE                                                          20800002
         L     REG0,IPIBARG        LOAD POINTER TO ARGUMENT    @Y30IPLB 20850003
         TM    IPIBOPT,IPIBTASK    IS THIS A TCB PURGE                  20900002
         BZ    PURG010             NO, MUST BE A DEB PURGE              20950002
         LA    WKREGB,RQETCB-RQE   CALCULATE OFFSET TO TCB IN RQE       21000002
         B     PURG017             HANDLE AEQ PURGE            @YM05193 21050002
         SPACE 2                                                        21100002
PURG010  LA    WKREGB,RQEDEB-RQE   CALCULATE OFFSET TO DEB IN RQE       21150002
         CLI   IPIBARG,C0          HIGH ORDER BYTE SAYS EXCP     YM0122 21160002
         BE    PURG017             IS EXCP, CONTINUE           @YM05193 21170002
         CLI   IPIBARG,IOSXCPID    EXCP DRIVER ID                YM0122 21180002
         BNE   PURG900             NOT EXCP, BYPASS PURGE        YM0122 21190002
         ICM   REG0,HIORDBYT,ZEROS SET HIGH BYTE TO ZEROS        YM0122 21192002
         SPACE 2                                                        21200002
PURG015  TM    IPIBOPT,IPIBRBP     RB PURGE SPECIFIED?         @YM05193 21260002
         BZ    PURG113             NO, SKIP THIS SECTION       @YM05193 21320002
         SPACE                                                          21380002
PURG017  L     RQEREG,ASXBFRQE     LOAD FIRST RQE FROM AEQ     @YM05501 21450002
         USING RQE,RQEREG          ADDRESSABILITY TO RQE                21500002
PURG020  LTR   RQEREG,RQEREG       IS QUEUE EMPTY               @YM1743 21550002
         BZ    PURG060             YES, END OF AEQ PURGE        @YM1743 21650002
         SPACE                                                          21700003
         LTR   REG0,REG0           DUMMY SEARCH ARGUMENT       @Y30IPLB 21750003
         BZ    PURG030             YES, SKIP CHECK OF ARGUMENT          21800002
         C     REG0,C0(RQEREG,WKREGB) SEARCH ARG MATCH SEARCH FIELD     21850002
         BNE   PURG035             NO, CONTINUE PURGE CHECK             21900002
         SPACE 2                                                        21950002
*        HAVE NOW FOUND AN ELEMENT REQUIRING PURGE. NOW THE PROCESS     22000002
*        OF CHECKING WHAT TO DO AN DOING IT MUST HAPPEN.                22050002
         SPACE 1                                                        22100002
PURG030  TM    IPIBOPT,IPIBHALT    WAS HALT OPTION REQUESTED            22150002
         BO    PURG040             YES, HANDLE THE HALT OPTION          22200002
         BAL   REG15,PURGCNT       PURGE QUIESCE-INCR IPIB CNT @ZA20559 22210003
PURG035  C     RQEREG,ASXBLRQE     END OF LIST                          22450002
         BE    PURG060             YES, GO ON TO RB PURGE               22500002
         LR    IOBREG,RQEREG       SAVE BACK LINK POINTER IF HALT       22550002
         L     RQEREG,RQENRQE      LOAD POINTER TO NEXT RQE             22600002
         B     PURG020             LOOK AT THIS RQE                     22650002
         SPACE 2                                                        22700002
PURG040  C     RQEREG,ASXBFRQE     IS THIS THE FIRST RQE ON QUEUE       22750002
         BNE   PURG045             NO, USE BACK LINK IN IOBREG          22800002
         MVC   ASXBFRQE,RQENRQE    MOVE CHAIN FIELD TO AEQ FIRST        22850002
         LA    IOBREG,ASXBFRQE-(RQENRQE-RQE) POINT TO OFFSET INTO ASXB  22900002
         C     RQEREG,ASXBLRQE     IS THE RQE THE LAST ONE TOO          22950002
         BNE   PURG050             NO, DONE WITH DEQUEUE                23000002
         MVC   ASXBLRQE,ASXBFRQE   SHOW THE CHAIN AS EMPTY              23050002
         SLR   IOBREG,IOBREG       INSURE SCAN TERMINATION      @YM1743 23100002
         B     PURG050             DEQUEUE COMPLETE,NOW GET RID OF RQE  23150002
         SPACE 2                                                        23200002
PURG045  MVC   RQENRQE-RQE(C4,IOBREG),RQENRQE MOVE THIS CHAIN TO BACK   23250002
*                                  LINK POINTER                         23300002
         C     RQEREG,ASXBLRQE     IS THE RQE THE LAST ONE IN QUEUE     23350002
         BNE   PURG050             NO, DONE WITH DEQUEUE                23400002
         ST    IOBREG,ASXBLRQE     SHOW NEW END OF CHAIN                23450002
         SPACE 2                                                        23650002
PURG050  TM    IPIBOPT,IPIBPOST    POST OPTION SPECIFIED                23700002
         BZ    PURG055             NO SKIP THE POST FUNCTION            23750002
         BAL   REG14,PURGPOST      POST THE ECB AS PURGED               23800002
PURG055  BAL   REG14,PURGFREE      FREE THE RQE ALSO                    23850002
         LR    RQEREG,IOBREG       PLACE PREVIOUS RQE ADDR IN RQE       23900002
         B     PURG035             RETURN TO CHECK AGAIN                23950002
         EJECT                                                          24000002
*********************************************************************** 24050002
*                                                                     * 24100002
*        THIS SECTION CHECKS FOR RB PURGE AND , IF SPECIFIED          * 24150002
*        CHAINS THROUGH THE RBS FOR THE TCB SPECIFIED, OR ALL         * 24200002
*        TCBS FOR MEMORY PURGE, LOOKING FOR IRBS WHICH CONTAIN        * 24250002
*        RQES.                                                        * 24300002
*                                                                     * 24350002
*********************************************************************** 24400002
         SPACE 2                                                        24450002
PURG060  EQU   *                   RB PURGE ENTRY                       24500002
         SLR   REG1,REG1           ZERO A REGISTER              @YM1875 24510002
         SLR   DEBREG,DEBREG       ZERO DEB ARGUMENT REG        @YM1875 24520002
         TM    IPIBOPT,IPIBMEM     IS THIS A MEMORY PURGE               24650002
         BO    PURG065             YES, SET POINTER TO TOP TCB          24700002
         TM    IPIBOPT,IPIBTASK    IS THIS A TCB PURGE                  24750002
         BO    PURG070             YES, SET POINTER TO THIS TCB         24800002
         ICM   DEBREG,LORD3BYT,IPIBARG+C1  LOAD DEB REGISTER    @YM1875 24850002
*                                  WITH DEB BEING PURGED                24900002
         USING DEBBASIC,DEBREG     ADDRESSABILITY TO DEB                24950002
         ICM   REG1,LORD3BYT,DEBTCBAD+C1 LOAD POINTER TO TCB    @YM1875 25000002
         B     PURG080             BRANCH TO COMMON RB PURGE ROUTINE    25050002
         SPACE 2                                                        25100002
PURG065  L   REG1,ASXBFTCB         LOAD POINTER TO FIRST                25150002
*                                  * TCB ON CHAIN                       25160002
         B     PURG080             BRANCH TO ZERO ARGUMENT     @Y30IPLB 25200003
         SPACE 2                                                        25250002
PURG070  ICM   REG1,LORD3BYT,IPIBARG+C1 LOAD TCB POINTER FROM   @YM1875 25300002
*                                  * IPIB                               25310002
         USING TCB,REG1            ADDRESSABILITY TO TCB                25400002
         SPACE 2                                                        25450002
PURG080  ICM   WKREGB,LORD3BYT,TCBRBP+C1  POINT TO TOP RB ON    @YM1875 25500002
*                                  * THE CHAIN                  @YM1875 25510002
         USING RBBASIC,WKREGB      ADDRESSABILITY                       25550002
         SPACE 2                                                        25650002
PURG085  CR    REG1,WKREGB         END OF RB CHAIN IS PTR TO TCB YM0122 25700002
         BE    PURG110             THIS WAS THE END OF THE CHAIN        25750002
         MVC   GTMWORK,RBSTAB1     ISOLATE THE RB TYPE FIELD            25800002
         NI    GTMWORK,RBFTP       ZERO BITS WHICH DO NOT APPLY         25850002
         CLI   GTMWORK,RBFTIRB     IS THIS AN IRB                       25900002
         BNE   PURG095             NO, LOOK AT NEXT RB IN CHAIN         25950002
         TM    RBSTAB2,RBIQENR     TEST FOR IQE                  YM1099 25960002
         BNZ   PURG095             YES, LOOK AT NEXT RB IN CHAIN YM1099 25970002
         ICM   RQEREG,LORD3BYT,RBIQEA+C1  LOAD ADDRESS OF THE   @YM1875 26100002
*                                  * RQE FROM THE RB            @YM1875 26110002
         LTR   DEBREG,DEBREG       IS SEARCH ARGUMENT ZERO              26150002
         BZ    PURG090             YES,DONT CHECK THE DEB               26200002
         C     DEBREG,RQEDEB       IS RQE FOR THIS DEB                  26250002
         BNE   PURG095             NO, LOOK AT NEXT RB IN CHAIN         26300002
PURG090  TM    IPIBOPT,IPIBHALT    IS THIS REQUEST FOR HALT PURGE       26350002
         BO    PURG100             YES, USE HALT LOGIC                  26400002
         BAL   REG15,PURGCNT       PURGE QUIESCE-INCR IPIB CNT @ZA20559 26410003
PURG095  ICM   WKREGB,LORD3BYT,RBLINK+C1  LOAD POINTER TO       @YM1875 26650002
*                                  * PREVIOUS RB                @YM1875 26660002
         B     PURG085             CHECK THIS RB FOR IRB                26700002
         SPACE 2                                                        26750002
PURG100  L     IOSBRG,CVTPTR       LOAD ADDRESS OF THE CVT              26800002
         USING CVT,IOSBRG          ADDRESSABILITY TO CVT                26850002
         LA    IOSBRG,CVTEXIT      POINT TO SVC 3 IN CVT                26900002
         ST    IOSBRG,RBOPSW+C4    STORE POINTER TO SVC 3 IN RB         26950002
         SLR   IOSBRG,IOSBRG       ZERO REGISTER FOR STORE     @Y30IPLB 27000003
         ST    IOSBRG,RBIQEA       ZERO RQE FIELD                       27050002
         TM    IPIBOPT,IPIBPOST    POST REQUESTED                       27100002
         BZ    PURG105             NO, SKIP POST                        27150002
         BAL   REG14,PURGPOST      POST REQUESTED                       27200002
PURG105  BAL   REG14,PURGFREE      FREE RQE                             27250002
         B     PURG095             CONTINUE WITH PURGE ON RBS           27300002
         SPACE 2                                                        27350002
PURG110  TM    IPIBOPT,IPIBMEM     IS THIS A MEMORY PURGE               27400002
         BZ    PURG120             NO, CONTINUE WITH DEB RRQ PURGE      27450002
         C     REG1,ASXBLTCB       IS THIS THE LAST TCB IN CHAIN        27500002
         BE    PURG115             YES, GO ON TO DEB RRQ PURGE          27550002
         ICM   REG1,LORD3BYT,TCBTCB+C1  LOAD NEXT TCB           @YM1875 27600002
*                                  * ON READY CHAIN             @YM1875 27610002
         B     PURG080             GET FIRST RB ON CHAIN                27650002
         EJECT                                                          27700002
*********************************************************************** 27750002
*                                                                     * 27800002
*        PURGE THE DEB RELATED REQUEST QUEUES. THERE MAY BE REQUESTS  * 27850002
*        WHICH HAVE BEEN IDENTIFIED BY THE SVC PURGE ROUTINE. THESE   * 27900002
*        REQUESTS SHOULD BE SKIPPED. ALL OTHER REQUESTS SHOULD BE     * 27950002
*        PURGED AND THE IOBS PLACED ON A RESTORE CHAIN IF QUIESCE.    * 28000002
*                                                                     * 28050002
*********************************************************************** 28100002
         DROP  REG1                ADDRESSABILITY ON TCB                28110002
         USING TCB,QUSREG          CHANGES TO QUSREG                    28120002
         SPACE 2                                                        28150002
PURG113  L     DEBREG,IPIBARG      LOAD ARGUMENT FROM IPIB IN CASE      28200002
*                                  DEB PURGE                            28250002
         TM    IPIBOPT,IPIBMEM     IS THIS A MEMORY PURGE               28300002
         BZ    PURG120             NO, MUST BE TCB OR DEB PURGE         28350002
PURG115  L     QUSREG,ASXBFTCB     LOAD TOP TCB ON THE QUEUE            28400002
         B     PURG123             GO TO CODE COMMON BETWEEN   @YM07696 28450002
*                                  TCB AND MEMORY                       28500002
         SPACE 2                                                        28550002
PURG120  EQU   *                   DETERMINE TYPE OF PURGE     @YM07367 28600002
         SPACE                                                          28608002
         LA    REG14,PURG170       GET BRANCH @ IF DEB PURGE   @YM07367 28616002
         TM    IPIBOPT,IPIBTASK    IS THIS A TCB PURGE?        @YM07367 28624002
         BZ    PURG128             NO, CHECK FOR DEB LIST PURGE@YM07367 28632002
         SPACE                                                          28640002
         L     QUSREG,IPIBARG      LOAD TCB POINTER FROM IPIB  @YM07696 28660002
PURG123  LA    REG14,PURG127       GET BRANCH @ FOR TCB PURGE  @YM07696 28670002
         SPACE                                                          28680002
PURG125  L     RRQREG,TCBJSTCB     LOAD POINTER TO JOB STEP TCB         28700002
         L     RRQREG,TCBJSCB-TCB(RRQREG) LOAD POINTER TO JSCB          28750002
         LA    RRQREG,C0(RRQREG)   CLEAR HIGH BYTE              @YM1875 28752002
         LTR   RRQREG,RRQREG       WAS THERE A JSCB ASSOCIATED          28760002
         BZ    PURG138             NO,CANNOT PURGE NO DEB TABLE@YM06581 28770002
         USING IEZJSCB,RRQREG      TEMPORARY ADDRESSABILITY TO JSCB     28800002
         ICM   RRQREG,LORD3BYT,JSCBDBTB+C1  LOAD POINTER TO     @YM1875 28850002
*                                  * DEB TABLE                  @YM1875 28860002
         LTR   IOBREG,RRQREG       IS THERE A TABLE                     28900002
         BZ    PURG138             NO TABLE THUS NO DEBS       @YM06581 28902002
*                                  CALCULATE THE ADDRESS OF             28910002
         AH    IOBREG,C0(RRQREG)   THE END OF THE TABLE                 28950002
PURG127  LA    RRQREG,DEBTBENT(RRQREG) POINT TO NEXT ENTRY              29000002
         CR    RRQREG,IOBREG       END OF TABLE YET                     29050002
         BNL   PURG138             YES, TEST ANY MORE TCB'S    @YM06581 29100002
         L     DEBREG,C0(RRQREG)   GET DEB PTR                  @YM1145 29150002
         LTR   DEBREG,DEBREG       DOES ADDR EXIST              @YM1145 29200002
         BZ    PURG138             NO, SKIP PROCESSING         @YM06581 29210002
         TM    C3(RRQREG),C1       DUMMY ENTRY                          29250002
         BO    PURG127             YES, LOOK AT THE NEXT DEB ENTRY      29300002
         SPACE                                                          29320002
PURG128  EQU   *                   START TESTS FOR SPECIAL DEBS@YM07367 29340002
         LA    WKREGB,DEBBASIC-DEBPREFX GET OFFSET TO THE PREFIX YM0122 29360002
         SLR   DEBREG,WKREGB       RESET DEBREG TO PREFIX      @Y30IPLB 29370003
         SPACE                                                          29380002
*        NOTE - ON THE FOLLOWING TESTS FOR SPECIAL DEBS, IF A TCB       29380202
*               PURGE WAS REQUESTED, THE BRANCH IS TO PURG127. IF       29380402
*               A DEB PURGE WAS REQUESTED, THE BRANCH IS TO PURG170.    29380602
*                                                              @YM07367 29380802
         CLC   DEBAMTYP-DEBPREFX(C1,DEBREG),XPRVSAM  VSAM DEB? @YM02921 29381002
         BER   REG14               VSAM DEB, DO NOT LOOK AT IT @YM07367 29382002
         CLC   DEBAMTYP-DEBPREFX(C1,DEBREG),XPRSUBSY  HASP OR  @YM02921 29385002
*                                  ASP DEB?                    @YM02921 29386002
         BER   REG14               SUBSYSTEM DEB, DON'T PURGE  @YM07367 29387002
         CLC   DEBAMTYP-DEBPREFX(C1,DEBREG),XPRTCAMP TCAM DEB? @YM02921 29388002
         BER   REG14               TCAM DEB, DISREGARD IT      @YM07367 29389002
         ALR   DEBREG,WKREGB       RESTORE BASIC DEB ADDRESS   @Y30IPLB 29398403
         SPACE 2                                                        29400002
         L     WKREGB,DEBRRQ       LOAD POINTER TO DEB RRQ     @Y30IPLB 29450003
         LA    WKREGB,C0(WKREGB)   ZERO HIGH BYTE                       29500002
         LTR   WKREGB,WKREGB       IS REQUEST FIELD ZERO                29550002
         BNZ   PURG140             YES, NO REQUESTS TO HANDLE           29600002
PURG135  TM    IPIBOPT,IPIBTASK+IPIBMEM TCB | MEMORY PURGE REQ?@YM06581 29650002
         BNZ   PURG127             YES, LOOK AT NEXT DEB IN TABLE       29700002
         SPACE                                                          29750002
PURG138  EQU   *                   DETERMINE IF ANY MORE TCB'S @YM06581 29800002
         TM    IPIBOPT,IPIBMEM     MEMORY PURGE                         30000002
         BZ    PURG170             NO, FINISHED WITH THIS TCB           30050002
         C     QUSREG,ASXBLTCB     LAST TCB IN CHAIN                    30100002
         BE    PURG170             YES,FINISHED WITH DEB RRQ PURGE      30150002
         ICM   QUSREG,LORD3BYT,TCBTCB+C1 LOAD PTR TO NEXT TCB   @YM1875 30200002
         B     PURG125             PURGE THIS TCB                       30250002
         SPACE 2                                                        30300002
         USING RRQ,WKREGB          ADDRESSABILITY FOR RRQ               30350002
PURG140  L     RQEREG,RRQFIRST     LOAD POINTER TO FIRST RQE IN QUEUE   30400002
PURG145  LTR   RQEREG,RQEREG       IS THIS THE END OF THE CHAIN         30450002
         BNP   PURG135             YES, LOOK FOR ANOTHER DEB   @ZA12696 30470003
         TM    IPIBOPT,IPIBTASK    TCB PURGE                            30550002
         BZ    PURG147             NO, NO CHECKS NECESSARY              30600002
         C     QUSREG,RQETCB       TCB PURGING MATCH ONE IN RQE         30650002
         BNE   PURG148             NO, DO NOT PURGE THIS RQE            30700002
PURG147  TM    RQEFLAG,RQESRBS     IS THIS RQE SCHEDULED                30750002
         BZ    PURG152             NO, FOUND FIRST ONE TO HANDLE HERE   30800002
         TM    IPIBOPT,IPIBHALT    IS THIS HALT OPTION                  30850002
         BO    PURG148             YES, DONT LOOK FOR IPIB PTR @ZA05520 30850503
************************************************************** @ZA16154 30850703
*        PURGE QUIESCE OF A RELATED RQE THAT HAS BEEN READIED* @ZA16154 30850803
*        FOR STARTIO.  NEED TO CHECK TO SEE IF BASIC IOS HAS * @ZA16154 30850903
*        INITIATED I/O REQUEST AND SET THE IOSIPIB FIELD     * @ZA16154 30851003
*        AND ACCORDINGLY INCREMENTED THE IPIB COUNT FIELD.   * @ZA16154 30851103
*        IF SO, NO NEED TO COUNT, BUT DO NEED TO SET         * @ZA16154 30851203
*        RQEIPIB FIELD SO ON FREEING RQE THE COUNT IS        * @ZA16154 30851303
*        DECREMENTED.                                        * @ZA16154 30851403
************************************************************** @ZA16154 30851503
         L     WKREGB,RQESRB       LOAD POINTER TO SRB         @ZA05520 30852203
         L     REG15,SRBPARM-SRBSECT(WKREGB) GET IOSB ADDR     @ZA20559 30852503
         L     WKREGB,IOSIPIB-IOSB(REG15)    GET IPIB POINTER  @ZA20559 30852903
         ST    IPIBRG,RQEIPIB      UPDATE RQE FOR CASE BASIC   @ZA16154 30853303
*                                  IOS SET IOSIPIB FLD IN IOSB @ZA16154 30853503
         LTR   WKREGB,WKREGB       IS POINTER NULL?            @ZA05520 30854003
         BNZ   PURG148             NO, DO NOT STORE IPIB ADDR  @ZA05520 30890003
         CS    WKREGB,IPIBRG,IOSIPIB-IOSB(REG15)  SET IPIB PTR @ZA20559 30900003
*                                                 IN IOSB.     @ZA16154 30930003
         BNE   PURG148             IF CS FAILS, THEN BASIC IOS @ZA16154 30940003
*                                  HAS SET IOSIPIB FIELD.      @ZA16154 30950003
*                                  THERE IS NO NEED TO         @ZA16154 30960003
*                                  INCREMENT IPIB COUNT        @ZA16154 30970003
         BAL   REG15,PURGCNT       PURGE QUIESCE-INCR IPIB CNT @ZA20559 30975003
PURG148  L     RQEREG,RQENRQE      LOAD POINTER TO NEXT RQE             31000002
         B     PURG145             LOOP BACK TO LOOK AT THIS RQE        31050002
         SPACE 2                                                        31100002
PURG150  TM    IPIBOPT,IPIBTASK    TCB PURGE                            31150002
         BZ    PURG152             NO, NO CHECKS NECESSARY              31200002
         C     QUSREG,RQETCB       TCB PURGING MATCH ONE IN RQE         31250002
         BNE   PURG148             NO,LOOK AT NEXT RQE                  31300002
PURG152  TM    IPIBOPT,IPIBHALT    IS THIS A HALT PURGE                 31400002
         BO    PURG155             YES, SKIP THE BUILD OF QUIESCE CHAIN 31450002
         LR    REG0,IPIBRG         IPIB IN PARM REG 0           @YM1141 31550002
         LR    REG1,RQEREG         RQE IN PARM REG 1            @YM1141 31600002
         LA    SAVREG,GTMSVRA      LOAD SAVE AREA ADDRESS       @YM3100 31610002
         BAL   REG14,IECVRCHN      BUILD RESTORE CHAIN          @YM1141 31650002
         SPACE 2                                                        31750002
PURG155  TM    IPIBOPT,IPIBPOST    IS POST BIT ON                       31800002
         BO    PURG160             YES, DO NOT SET 'DONT POST' BIT      31850002
         OI    RQEFLAG,RQENOPST    SET DONT POST FLAG                   31900002
PURG160  LR    REG0,IOBREG         SAVE THE END OF DEB LIST ADR @YM3831 31910002
         L     IOBREG,RQEIOB       LOAD POINTER TO IOB          @YM1141 31920002
         USING IOBSTDRD,IOBREG     ADDRESSABILITY TO IOB        @YM1141 31930002
         MVI   IOBECBCC,ECBPURGE   SET PURGED COMPLETION CODE   @YM3831 31950002
         L     IOSBRG,RQENRQE      SAVE NEXT RQE ADDRESS       @Y30IPLB 32300003
         BAL   REG14,PURGINTF      GO RELEASE STORAGE FOR THIS REQUEST  32350002
         LR    IOBREG,REG0         RESTORE DEB LIST ADDRESS     @YM1141 32410002
         LTR   RQEREG,IOSBRG       IS NEXT RQE ADDRESS NEGATIVE..IE.    32450002
*                                  END OF CHAIN.                        32500002
         BP    PURG150             NO, PURGE NEW RQE           @ZA20559 32520003
         B     PURG135             LOOK FOR ANOTHER DEB                 32600002
         EJECT                                                          32650002
************************************************************** @ZA16154 32653003
*  THIS ROUTINE INCREMENTS THE PURGE QUIESCE COUNT IN THE    * @ZA16154 32655003
*  IPIB TO INDICATE I/O OUTSTANDING AND SET THE IPIB POINTER * @ZA16154 32657003
*  IN THE RQE SO THAT IPIB COUNT IS DECREMENTED ON THE       * @ZA16154 32659003
*  COMPLETION OF THE I/O OPERATION AT TIME WHEN RQE IS FREED * @ZA16154 32661003
************************************************************** @ZA16154 32663003
PURGCNT  EQU   *                                               @ZA16154 32665003
         ST    REG1,GTMAREA        SAVE TWO REGISTERS FOR      @ZA16154 32667003
         ST    IOBREG,GTMAREA+C4   INCREMENTING COUNT.         @ZA16154 32669003
         ST    IPIBRG,RQEIPIB      STORE IPIB ADDR IN RQE      @ZA16154 32671003
         L     REG1,IPIBCNT        LOAD IPIB QUIESCE COUNT     @ZA16154 32673003
PURGINCR EQU   *                                               @ZA16154 32675003
         LA    IOBREG,C1(REG1)     INCREMENT QUIESCE COUNT     @ZA16154 32677003
         CS    REG1,IOBREG,IPIBCNT SUCCESSFUL STORE ??         @ZA16154 32679003
         BNE   PURGINCR            NO, RETRY OPERATION.        @ZA16154 32681003
*                                  REG1 HAS UPDATED IPIBCNT.   @ZA16154 32683003
         L     REG1,GTMAREA        RESTORE                     @ZA16154 32685003
         L     IOBREG,GTMAREA+C4   RESTORE                     @ZA16154 32687003
         BR    REG15               RETURN TO CALLER            @ZA20559 32688003
         EJECT                                                 @ZA16154 32691003
*********************************************************************** 32700002
*                                                                     * 32750002
*        QUEUE SEARCHES ARE COMPLETE. THERE IS SOME WORK LEFT TO      * 32800002
*        DO WHICH IS UNIQUE TO THE TYPE OF PURGE. THAT IS, FOR HALT   * 32850002
*        THE REQUESTS IDENTIFIED BY SVC 16 MUST BE PURGED.            * 32900002
*                                                                     * 33000002
*********************************************************************** 33050002
         SPACE 2                                                        33100002
PURG170  TM    IPIBOPT,IPIBHALT    IS THIS A HALT OR A QUIESCE          33150002
         BZ    PURG900             A QUIESCE, DONE WITH ALL     @YM1141 33200002
         L     REG1,IPIBSRB        LOAD POINTER TO FIRST SRB TO         33250002
*                                  BE HALTED.                           33300002
         SLR   REG0,REG0           ZERO REG FOR STORE          @Y30IPLB 33350003
         ST    REG0,IPIBSRB        INITIALIZE CHAIN TO ZERO             33400002
         USING SRBSECT,REG1        ADDRESSABILITY FOR SRB               33450002
PURG175  LTR   REG1,REG1           ANYTHING TO PURGE                    33500002
         BZ    PURG900             NO, DONE WITH THE HALT PURGE @YM2205 33550002
         L     IOSBRG,SRBPARM      LOAD POINTER TO IOSB                 33600002
         USING IOSB,IOSBRG         ADDRESSABILITY TO IOSB               33650002
         SPACE 2                                                        33800002
         L     REG1,SRBFLNK        LOAD POINTER TO NEXT IN CHAIN        33850002
         L     RQEREG,IOSUSE       LOAD POINTER TO RQE                  33900002
         L     IOBREG,RQEIOB       LOAD POINTER TO IOB                  33950002
         L     REG14,IOSIPIB       LOAD POINTER TO IPIB        @YM05504 33956002
         LTR   REG14,REG14         IS POINTER NULL?            @YM05504 33962002
         BZ    PURG183             YES, SET COMP CODE-PURGE    @YM05504 33968002
         SPACE                                                          33974002
         ST    REG14,RQEIPIB       NO, PUT IPIB PTR IN RQE     @YM05504 33980002
         SPACE                                                          33986002
PURG183  EQU   *                                               @YM05504 33992002
         MVI   IOBECBCC,ECBPURGE   SET CODE TO PURGE                    34000002
         TM    IPIBOPT,IPIBPOST    POST OPTION SPECIFIED                34010002
         BO    PURG185             YES, FREE CORE                       34020002
         OI    RQEFLAG,RQENOPST    SET DO NOT POST FLAG                 34030002
PURG185  BAL   REG14,PURGINTF      GO RELEASE STORAGE FOR THIS REQUEST  34050002
         B     PURG175             LOOK AT NEXT SRB                     34100002
         EJECT                                                          38450002
*********************************************************************** 38500002
*                                                                     * 38550002
*        PURGE EXIT ROUTINE                                           * 38600002
*                                                                     * 38650002
*********************************************************************** 38700002
         SPACE 2                                                        38750002
PURG900  SETLOCK RELEASE,TYPE=LOCAL,RELATED=(IECVEXPR,PURG000)  @YM2205 38760002
         SPACE 2                                                        38770002
         LR    REG1,GTMREG         LOAD ADDRESS OF GETMAINED SAVE       38800002
*                                  AREA                                 38850002
         L     IOBREG,GTMSAVE      LOAD PURGE SAVE AREA ADDRESS         38900002
         FREEMAIN R,A=(1),LV=160,SP=254 FREE THE 160B WORK AREA@ZA09412 38920003
         SPACE 2                                                        39000002
         LM    REG0,REG15,C0(IOBREG) RESTORE REGISTERS                  39050002
         BR    REG14               RETURN TO PURGE                      39100002
         EJECT                                                          39150002
*********************************************************************** 39200002
*                                                                     * 39250002
*        PURGE SUPPORT SUBROUTINES TO FREE THE RQE AND TO POST THE    * 39300002
*        ECB AS PURGED.                                               * 39350002
*                                                                     * 39400002
*********************************************************************** 39450002
         SPACE 2                                                        39500002
PURGPOST EQU   *                   POST ROUTINE INTERFACE               39550002
         STM   REG0,REG15,GTMAREA  SAVE REGISTERS 0 THRU 15    @YM05503 39560002
         L     IOBREG,RQEIOB       LOAD IOB ADDRESS             @YM1392 39600002
         L     WKREGB,IOBECBPT     LOAD POINTER TO ECB                  39660002
         LA    WKREGB,C0(WKREGB)   ZERO THE HIGH BYTE                   39710002
         TM    RQEPRT,PPKEY        IS ECB IN PROBLEM PROGRAM   @ZA26460 39716003
*                                  KEY 8 - 15?                 @ZA26460 39722003
         BZ    PURGPST1            NO. DONT VALIDITY CHECK ECB.@ZA26460 39728003
         MODESET SWAPKEY,KEYADDR=RQEPRT,WORKREG=15 CHECK ECB.  @ZA26460 39734003
         NI    C0(WKREGB),FF       TOUCH ECB WHILE IN USERS KEY@ZA26460 39740003
         MODESET EXTKEY=ZERO                                   @ZA26460 39746003
PURGPST1 EQU *                                                 @ZA26460 39752003
         LA    WKREGA,ECBPURGE     LOAD THE CONDITION CODE      @YM1392 39760002
         SLL   WKREGA,C24          PLACE IN HIGH BYTE                   39810002
         L     REG15,AOPT02        GET ADDR OF POST WITH VALCHK         39960002
         BALR  REG14,REG15         GO TO POST                           40090002
         LM    REG0,REG15,GTMAREA  RESTORE REGISTERS           @YM05503 40092402
         BR    REG14               BRANCH ON SAVED LNKREG               40094002
         SPACE 2                                                        40097003
PURGFREE EQU   *                   FREE THE RQE                         40150002
         LR    IOSBRG,REG14        SAVE RETURN ADDRESS                  40200002
         LR    RRQREG,REG1         SAVE ADDRESS IN R1                   40250002
         LR    REG1,RQEREG         INITIALIZE PARAMETER REG WITH RQE    40300002
         LA    SAVREG,GTMAREA      LOAD POINTER TO SAVE AREA            40350002
         LR    RQEREG,BASREG       SAVE BASE                     YM1210 40360002
         L     REG15,AX025         LOAD POINTER TO FREE RQE ROUTINE     40400002
         BALR  REG14,REG15         RETURN RQE TO STORAGE MANAGER        40450002
         LR    BASREG,RQEREG       RESTORE BASE ADDRESS          YM1210 40460002
         LR    REG14,IOSBRG        RESTORE REGISTER 14                  40500002
         LR    REG1,RRQREG         RESTORE REGISTER 1                   40550002
         BR    REG14               RETURN TO PURGE MAIN LINE            40600002
         SPACE 2                                                        40620003
PURGINTF STM   REG0,REG15,GTMSVRA  SAVE PURGE REGISTERS                 40700002
         LA    SAVREG,GTMAREA      POINT TO EXCP STORAGE AREA           40750002
         LR    REG1,RQEREG         PLACE RQE IN PARM REG                40800002
         L     REG15,ATERMRTN      LOAD POINTER TO PURGE INTERFACE      40850002
         BALR  REG14,REG15         EXECUTE TERM RTN OF EXCP             40900002
         USING GTMAREA,SAVREG      ADDRESSABILITY TO SOMETHING          40950002
         LM    REG0,REG15,GTMSVRA  RESTORE REGISTERS                    41000002
         BR    REG14               RETURN TO CALLING ROUTINE            41050002
         DROP  SAVREG              STOP TEMPORARY ADDRESSABILITY        41100002
         TITLE 'IECVEXPR EXCP PURGE RESTORE AND FRR ROUTINES - RESTORE X41102002
               CHAIN BUILD SUBROUTINE'                                  41104002
*********************************************************************** 41106002
*                                                                     * 41108002
*        THIS SUBROUTINE BUILDS A RESTORE CHAIN FOR QUIESCE PURGE     * 41108402
*        FROM THIS ROUTINE OR FROM RELATED REQUEST PURGE FROM         * 41108802
*        MAINLINE EXCP OR FROM AN ABNORMAL END APPENDAGE WHICH        * 41109202
*        WANTS TO ADD TO THE RESTORE CHAIN.                           * 41109602
*                                                                     * 41109702
*        INPUT -  REGISTER 0 CONTAINS IPIB POINTER OR ZEROS           * 41109802
*                                  IF NONZERO AND POSITIVE THE RQE IS * 41109902
*                                    TO BE QUEUED AT THE BOTTOM OF THE* 41110402
*                                    PIRL ENTRY Q                     * 41110902
*                                  IF NONZERO AND NEGATIVE THE RQE IS * 41111402
*                                    TO BE QUEUED AT THE TOP OF THE   * 41111902
*                                    PIRL ENTRY Q                     * 41112402
*                 REGISTER 1 CONTAINS RQE ADDRESS                     * 41122702
*                 REGISTER 13 CONTAINS SAVE AREA ADDRESS              * 41122902
*                 REGISTER 14 CONTAINS RETURN ADDRESS                 * 41123002
*                 REGISTER 15 CONTAIN ENTRY POINT ADDRESS             * 41123302
*                                                                     * 41123502
*        OUTPUT - NONE                                                * 41123702
*        EXIT - RETURN TO CALLER VIA REGISTER 14                      * 41123902
*                                                                     * 41124102
*********************************************************************** 41124302
         PRINT OFF                                                      41124502
*/*IECVRCHN: CHART */                                                   41124702
*/* HEADER                                                              41124902
*/*                                  EXCP RESTORE CHAIN BUILDER         41125102
*/*                                 PAGE # */                           41125302
*/*IECVRCHN: E RESTORE CHAIN BUILDER */                                 41125502
*/* P SAVE REGISTERS, EXTABLISH ADDRESSABILITY */                       41125702
*/* D (NO,RCHN005,YES,) IPIB PASSED IN R0 */                            41125902
*/* P (,RCHN015) POINT TO RESTORE CHAIN ANCHOR IN PIRL */               41126102
*/*RCHN005: P GET PIRL FROM DEB IF ONE */                               41126302
*/* D (YES,RCHN010,NO,) WAS PIRL ON DEB */                              41126502
*/* L GETMAIN: GET PIRL IN SP 0 */                                      41126702
*/* P INITIALIZE NO DRIVERS AND ZERO PIRL */                            41126902
*/* P STORE PIRL ADDRESS IN DEB */                                      41127102
*/*RCHN010: P CALCULATE EXCP ENTRY IN PIRL */                           41127302
*/* D (YES,RCHN015,NO,) AN EPCB ON PIRL */                              41127502
*/* S RCHNGTMN: GET AND INIT EPCB */                                    41127702
*/* P STORE ITS ADDRESS IN PIRL */                                      41127802
*/*RCHN012: P (,RCHN050) POINT TO IOB CHAIN FIELD USED BY RESTORE */    41128002
*/*RCHN015: P ZERO REG FOR COMPARE REG */                               41128302
*/*RCHN020: D (YES,RCHN030,NO,) ANY ENTRIES LEFT IN EPCB */             41128402
*/* D (NO,RCHN025,YES,) ANOTHER ONE ON CHAIN */                         41128602
*/* P (,RCHN020) LOAD PTR TO NEXT ON CHAIN */                           41128902
*/*RCHN025: S RCHNGTMN: GET AND INITIALIZE EPCB */                      41129102
*/* P STORE IT IN CHAIN OF PREVIOUS EPCB */                             41129202
*/*RCHN030: D (NO,RCHN012,YES,) ANYTHING IN RESTORE CHAIN */            41129402
*/*RCHN035: D (YES,RCHN040,NO,) END  IOB OF CHAIN */                    41129602
*/* P (,RCHN035) LOAD PTR TO NEXT IOB */                                41129802
*/*RCHN040: P POINT TO CHAIN FIELD IN IOB */                            41130002
*/*RCHN050: P CHAIN IOB TO END OF CHAIN, SET END INDC */                41130202
*/* P LOAD CURRENT EPCB ENTRY PTR */                                    41130402
*/* P MOVE IOB AND PROTECT KEY TO EPCB */                               41130602
*/* D (YES,,NO,RCHN055) RESTORE TO ORIG TCB */                          41130802
*/* P MOVE TCB ADDR TO EPCB */                                          41131002
*/*RCHN055: P INDICATE NEW CURRENT ENTRY AND NO LEFT */                 41131402
*/* P RESTORE REGISTERS */                                              41131802
*/* R RETURN TO CALLER */                                               41132202
*/*RCHNGTMN: E GET AND INIT EPCB */                                     41132602
*/* L GETMAIN: GET AN EPCB IN USER STORAGE, KEY 0 */                    41132702
*/* P ZERO ENTIRE BLOCK */                                              41132802
*/* P SET FIRST ENTRY AS CURRENT AND 20 AS COUNT */                     41132902
*/* R RETURN TO CALLER */                                               41133002
*/*IECVRCHN: END */                                                     41133402
         PRINT ON                                                       41133602
         SPACE 2                                                        41133702
IECVRCHN STM   REG0,REG15,C0(SAVREG) SAVE REGISTERS             @YM1141 41133802
         BALR  BASREG,C0           ESTABLISH BASE FOR ROUTINE   @YM1141 41133902
         USING *,BASREG            ADDRESSABILITY FOR ROUTINE   @YM1141 41134002
         SPACE 2                                                        41134102
* FIND OR GET A PIRL AND LOCATE THE EXCP ENTRY IN IT            @YM1141 41134202
         SPACE 1                                                        41134402
         LTR   IPIBRG,REG0         IPIB PASSED TO THIS ROUTINE  @YM1141 41134602
         BZ    RCHN005             NO, LOOK AT DEB FOR PIRL     @YM1141 41134802
         L     QUSREG,IPIBPIRL     POINT TO RESTORE CHN ANCHOR @YM05533 41135002
         B     RCHN010             GO FIND EXCP ENTRY          @YM05533 41135102
         SPACE 1                                                        41135402
RCHN005  L     DEBREG,RQEDEB-RQE(REG1) LOAD PTR TO DEB FROM RQE @YM1141 41135602
         L     QUSREG,DEBUSRPG     LOAD POINTER TO PIRL,IF ONE  @YM1141 41135802
         LA    QUSREG,C0(QUSREG)   ZERO HIGH BYTE OF REGISTER   @YM1141 41136002
         LTR   QUSREG,QUSREG       IS THERE A PIRL ON DEB       @YM1141 41136202
         BZ    RCHN008             NO, HAVE TO GET A PIRL      @YM06544 41136402
         CLM   QUSREG,XPRM7,XPRENDFF NOTHING PURGED? BYPASS    @YM06544 41136502
         BNE   RCHN010             GETMAIN, DON'T GET PIRL     @YM06544 41136602
         SPACE                                                          41136702
RCHN008  LR    WKREGB,DEBREG       NEED PIRL,SAVE DEB BEFORE   @YM06544 41137802
*                                  DOING THE GETMAIN                    41138802
         LR    WKREGC,REG1         SAVE RQE ACROSS GETMAIN      @YM1141 41141002
*  GET LENGTH FOR PIRL PLUS 12 EXTRA BYTES FOR RESTORE TO      @ZA05813 41142003
*  FREEMAIN AS A VALIDITY CHECK ON THE PIRL                    @ZA05813 41143003
         LA    REG0,PIRENTL*(IOSXCPID+C1)+(PIRRSTR-PIRL+12)    @ZA05813 41145603
         ICM   REG0,XPRM1,XPR254  GET SP-254 IN HIGH ORD BYTE  @Y30IPLD 41146203
         L     RQEREG,RQETCB-RQE(WKREGC) INIT TCB IN REG4       @YM1141 41146802
         L     IPIBRG,PSAAOLD      LOAD ASCB ADDRESS IN REG7    @YM1141 41148002
*                                                              @ZM30487 41148903
         GETMAIN R,LV=(0),BRANCH=YES GET STORAGE FOR PIRL-SP254@YM1141  41149803
*                                  EXPECTING 252 CORE-KEY 0             41150402
         SPACE 2                                                        41151002
         LR    QUSREG,REG1         PLACE PIRL IN ITS REG        @YM1141 41152202
         LR    DEBREG,WKREGB       RESTORE DEB REGISTER         @YM1141 41153402
         LR    REG1,WKREGC         RESTORE RQE TO PARM REG      @YM1141 41154602
         SLR   IPIBRG,IPIBRG       INDICATE NO IPIB PATH        @YM1141 41156402
         SPACE 1                                                        41157402
         USING PIRL,QUSREG         ADDRESSABILITY FOR PIRL      @YM1141 41158402
         XC    PIRL(PIRENTL*(IOSXCPID+C1)+(PIRRSTR-PIRL)),PIRL  @YM1141 41159602
         MVI   PIRCNT,IOSXCPID+C1  SET NO OF DRIVERS IN PIRL    @YM1141 41160702
         STCM  QUSREG,LORD3BYT,DEBUSRPG+C1 SET PIRL IN DEB      @YM1141 41161702
         SPACE 1                                                        41162802
* FIND OUT IF THERE IS AN EPCB, IF NONE, GET ONE AND INITIALIZE IT      41163802
         SPACE 1                                                        41164802
RCHN010  LA    QUSREG,PIRRSTR+IOSXCPID*PIRENTL FIND EXCP ENTRY  @YM1141 41165802
         USING PIRRSTR,QUSREG      ADDRESSABILITY FOR ENTRY     @YM1141 41166802
         LR    RQEREG,REG1         SET UP BASE FOR RQE          @YM3095 41168502
         L     IOSBRG,PIRDVRU      LOAD PTR TO EPCB, IF ONE     @YM1141 41169502
         USING EPCB,IOSBRG         ADDRESSABILITY TO EPCB       @YM1141 41170602
         LTR   IOSBRG,IOSBRG       IS THERE AN EPCB             @YM1141 41171602
         BNZ   RCHN015             YES, GO SEE IF IT IS FULL    @YM1141 41172702
         BAL   WKREGC,RCHNGTMN     GET CORE AND INIT EPCB       @YM1141 41173702
         ST    IOSBRG,PIRDVRU      STORE EPCB PTR IN PIRL       @YM1141 41174802
RCHN012  LA    WKREGB,PIRRSTR      POINT TO IOB CHAIN FIELD     @YM1141 41175802
         SLR   REG0,REG0           CLEAR 0                      YM3829P 41176902
         BCTR  REG0,0              DECREMENT TO -1              YM3829P 41177902
         B     RCHN050             PLACE IOB ON RESTORE CHAIN   @YM1141 41179002
*                                  AND IN EPCB                  @YM1141 41180002
         SPACE 1                                                        41180503
* LOCATE EPCB, GET ANOTHER IF NO ROOM IN CURRENT                @YM1141 41182102
RCHN015  SLR   REG0,REG0           ZERO REG FOR COMPARE         @YM1141 41184202
RCHN020  CLI   EPCBNENT,C0         ANY ENTRIES IN THIS EPCB     @YM1141 41185302
         BNE   RCHN030             YES, USE THIS EPCB           @YM1141 41186702
         C     REG0,EPCBCHN        IS THERE ANOTHER EPCB        @YM1141 41188302
         BE    RCHN025             NO, MUST GET ANOTHER         @YM1141 41188602
         L     IOSBRG,EPCBCHN      LOAD PTR TO NEXT BLOCK       @YM1141 41190502
         B     RCHN020             LOOK AT THIS BLOCK FOR ONE   @YM1141 41191402
         SPACE 2                                                        41192302
RCHN025  LR    RRQREG,IOSBRG       SAVE CURRENT EPCB ADDRESS    @YM1141 41193002
         BAL   WKREGC,RCHNGTMN     GET AND INITIALIZE AN EPCB   @YM1141 41194002
         ST    IOSBRG,EPCBCHN-EPCB(RRQREG) STORE CHAIN IN PREV  @YM1141 41195802
         EJECT                                                          41196303
* FIND END OF IOB CHAIN                                         @YM1141 41197902
         SPACE 1                                                        41198902
RCHN030  L     IOBREG,PIRRSTR      LOAD RESTORE CHAIN ANCHOR    @YM1141 41200002
         CLM   IOBREG,XPRM7,XPRENDFF END OF RESTORE CHAIN?     @Y30IPLB 41200503
         BE    RCHN012             YES, AN IOB MUST HAVE BEEN  @Y30IPLB 41202103
*                                  REMOVED FROM THE LIST        @YM1141 41203102
         BCTR  REG0,0              DECREMENT TO -1              YM3829P 41204202
         LTR   IPIBRG,IPIBRG       IS THERE A REEXCP FROM TOP   YM3829P 41205202
*                                  TOP OF RRQ                   YM3829P 41206302
         BNM   RCHN035             NO - CHAIN ON BOTTOM         YM3829P 41207302
         LR    REG0,IOBREG         YES - LOAD FIRST AS CHAIN    YM3829P 41208402
*                                  INSERT                       YM3829P 41209402
         LA    WKREGB,PIRRSTR      LOAD PIRL ANCHOR AS PLACE TO YM3829P 41210502
*                                  TO Q FROM                    YM3829P 41211502
         B     RCHN050             GO ENQ IT ON TOP             YM3829P 41213602
RCHN035  CLM   REG0,LORD3BYT,IOBRSTRB END OF CHAIN              @YM1141 41214702
         BE    RCHN040             YES, GO SET POINTER          @YM1141 41215702
         L     IOBREG,IOBRESTR     LOAD POINTER TO NEXT IOB     @YM1141 41216802
         B     RCHN035             LOOK AT THIS ONE FOR THE END @YM1141 41217802
*                                  OF THE CHAIN                 @YM1141 41219102
         SPACE 1                                                        41219302
RCHN040  LA    WKREGB,IOBRESTR     POINT TO CHAIN FIELD         @YM1141 41220302
         SPACE 1                                                        41221103
* SET UP NEW ENTRY AND MAINTAIN COUNT AND PTRS IN EPCB          @YM1141 41222502
RCHN050  L     IOBREG,RQEIOB       LOAD CURRENT IOB ADDRESS     @YM1141 41224502
         STCM  IOBREG,LORD3BYT,C1(WKREGB) CHAIN IOB TO PREVIOUS @YM1141 41225502
         STCM  REG0,LORD3BYT,IOBRSTRB ZERO CHAIN FOR NEXT       @YM1141 41227302
         L     WKREGB,EPCBENT      LOAD PTR TO CURRENT ENTRY    @YM1141 41228302
         USING EPCBIOB,WKREGB      ADDRESSABILITY TO EPCB ENTRY @YM1141 41229402
         ST    IOBREG,EPCBIOB      STORE IOB IN ENTRY           @YM1141 41230402
         MVC   EPCBPKEY,RQEPRT     MOVE PROTECT KEY TO EPCB     @YM1141 41231502
         LTR   IPIBRG,IPIBRG       WAS AN IPIB PASSED           @YM1141 41232502
         BZ    RCHN055             NO FINISHED WITH ENTRY       @YM1141 41233602
         MVC   IPIBIO(C8),PIRRSTR  SAVE PTRS I/O REQUEST LIST  @YM05533 41234602
         TM    IPIBOPT,IPIBOTCB    RESTORE TO ORIGINATING TCB   @YM1141 41235702
         BZ    RCHN055             NO, FINISHED WITH ENTRY      @YM1141 41237802
         L     WKREGC,RQETCB       LOAD TCB ADDRESS FROM RQE    @YM1141 41238802
         ST    WKREGC,EPCBTCB      AND STORE IT IN EPCB         @YM1141 41239902
         SPACE                                                          41240902
RCHN055  EQU   *                                               @YM05526 41242002
         TM    RQETYPE,RQE114     IS THIS AN EXCPVR REQUEST?   @YM05526 41243002
         BZ    RCHN060            NO, GET NEXT EPCB ENTRY      @YM05526 41244102
         SPACE                                                          41245102
         MVI   EPCBTCB,EXCPVRB    YES, THEN SET EXCPVR INDICA- @YM05526 41246202
*                                 TOR IN HI-ORDER BYTE TCB PTR @YM05526 41247202
         SPACE                                                          41248302
RCHN060  EQU   *                                               @YM05526 41249302
         LA    WKREGB,EPCBENTL(WKREGB) INCREMENT TO NEXT ENTRY  @YM1141 41250402
         IC    REG0,EPCBNENT       GET PREVIOUS NO OF ENTRIES  @YM05526 41251402
         ST    WKREGB,EPCBNENT     STORE NEW CURRENT ENTRY     @YM05526 41252502
         BCTR  REG0,REG0           DECREMENT BY ONE             @YM1141 41253502
         STC   REG0,EPCBNENT       STORE CURRENT NO OF ENTRIES  @YM1141 41254602
         LM    REG0,REG15,C0(SAVREG) RESTORE REGS               @YM1141 41255602
         BR    REG14               RETURN TO CALLER             @YM1141 41256702
         DROP  WKREGB                                           YM3112P 41257702
         EJECT                                                          41259802
* ROUTINE WHICH GETS AND INITIALIZES THE EPCB                   @YM1141 41260802
         SPACE 2                                                        41261802
* GET THE STORAGE FOR THE EPCB                                  @YM1141 41263002
RCHNGTMN LA    REG0,EPCBBL         LOAD THE LENGTH OF GETMAIN   @YM1141 41264002
         LR    WKREGB,RQEREG       SAVE RQE ADDRESS             @YM1141 41265102
         LR    IOBREG,IPIBRG       SAVE IPIB ADDRESS            @YM1141 41266102
         L     RQEREG,RQETCB       LOAD TCB PTR IN REG 4        @YM1141 41267202
         L     RQEREG,TCBJSTCB-TCB(RQEREG) ALLOCATE SP230 EPCB @ZA24443 41267503
*                                  FROM JOB STEP TCB           @ZA24443 41267803
         L     IPIBRG,PSAAOLD      LOAD ASCB PTR IN REG 7       @YM1141 41268202
         GETMAIN RU,LV=(0),SP=230,BRANCH=YES,KEY=0 GET EPCB    @ZA17779 41268703
         LR    IOSBRG,REG1         SET UP EPCB IN ITS BASE REG  @YM1141 41270302
         LR    IPIBRG,IOBREG       RESTORE IPIB TO ITS BASE     @YM1141 41272402
         SLR   REG0,REG0           ZERO COMPARE REG            @Y30IPLB 41273503
         SPACE 1                                                        41274502
* INITIALIZE THE BLOCK                                          @YM1141 41275602
         SPACE 1                                                        41276602
         XC    EPCB(EPCBBL),EPCB   ZERO ENTIRE EPCB             @YM1141 41277702
         ST    RQEREG,EPCBRTCB     SAVE CURRENT TCB ADDRESS    @YM06170 41278002
*                                  FOR USE IN FREEMAIN                  41278302
         LR    RQEREG,WKREGB       RESTORE RQE TO ITS BASE     @YM08100 41278502
         LA    WKREGB,EPCBIOB      POINT TO FIRST ENTRY         @YM1141 41278702
         USING EPCBIOB,WKREGB                                   YM3112P 41279802
         ST    WKREGB,EPCBENT      STORE IN CURRENT ENTRY PTR   @YM1141 41280802
         MVI   EPCBNENT,EPCBNE     INITIALIZE THE NUMBER OF ENT @YM1141 41281902
         BR    WKREGC              RETURN TO MAIN ROUTINE       @YM1141 41284002
         DROP  WKREGB                                           YM3112P 41285002
       TITLE 'IECVEXPR EXCP PURGE RESTORE AND FRR ROUTINES - UCB PURGE' 41286002
*********************************************************************** 41287202
*                                                                     * 41288202
*                        IO HALT SUBROUTINE                           * 41289202
*                                                                     * 41290402
*        THIS INTERFACE IS USED BY SVC 33 WHICH IS IO HALT TO CHANGE  * 41291402
*        A REAL CCW IN AN ACTIVE CHANNEL PROGRAM TO A NOP. (USED BY   * 41292402
*        BTAM)                                                        * 41293602
*                                                                     * 41294602
*        INPUT R0 - OFFSET TO CCW FROM IOB                            * 41295602
*              R2 - IOSB ADDRESS                                      * 41296802
*              R14 - RETURN ADDRESS                                   * 41297802
*              R15 - MODULE ADDRESSABILITY                            * 41298802
*              R6 - BASE FO SVC 33 - TO BE MAINTAINED                 * 41300002
*                                                                     * 41301002
*        OUTPUT R15 - RETURN CODE                                     * 41302002
*                   0 - FOUND AND MODIFIED CCW                        * 41303002
*                   16 - NOT A VIRTUAL REQUEST                        * 41306002
*                   20 - TRANSLATION IN PROGRESS                      * 41306503
*                   24 - CANNOT FIND REAL CCW                         * 41307002
*                                                                     * 41308002
*********************************************************************** 41309002
SVC33    STM   REG0,REG14,C0(SAVREG) SAVE REGISTERS                     41311002
         BALR  BASREG,C0           ESTABLISH BASE FOR ROUTINE           41312002
         USING *,BASREG            ADDRESSABILITY FOR ROUTINE           41313002
         L     RQEREG,IOSUSE-IOSB(IOBREG) GET RQE IN ITS BASE           41314002
         TM    RQETYPE,RQEVIRT     IS THIS A VIRTUAL REQUEST            41315002
         BZ    HALT16              NO, GIVE A RETURN CODE 16            41317002
         TM    RQEFLAG,RQESTBL     IS THE REQUEST STARTABLE             41318002
         BZ    HALT20              NO, GIVE A RETURN CODE 20            41319002
         L     IOBREG,RQEIOB       LOAD POINTER TO IOB                  41320002
         LA    IOBREG,C0(IOBREG)   CLEAR HIGH BYTE                      41321002
         ALR   REG0,IOBREG         ADD INCREMENT FROM REG0     @Y30IPLB 41322003
         L     REG1,RQETCCW        LOAD POINTER TO THE TCCW             41323002
         MVI   TCCWOPTN-TCCW(REG1),TCCWSATR SET SINGLE ADDR XLATION     41324002
         L     REG15,ACCWXLAT      LOAD POINTER TO TRANSLATOR           41325002
         BALR  REG14,REG15         TRANSLATE THE ADDRESS                41326002
         LTR   REG15,REG15         RETURN CODE ZERO                     41328002
         BNZ   HALT24              NO, COULD NOT FIND CCW               41329002
         LR    REG1,REG0           SET A REGISTER TO REAL CCW PTR       41330002
         MVI   C4(REG1),C0         SET THE FLAGS TO ZERO                41331002
         MVI   C0(REG1),NOP        SET THE COMMAND TO A NOP             41332002
HALT00   LM    REG0,REG14,C0(SAVREG) RESTORE REGISTERS                  41333002
         BR    REG14               RETURN TO SVC33                      41334002
         SPACE 1                                                        41334503
HALT16   LA    REG15,RC16          SET RETURN CODE 16                   41336002
         B     HALT00              RETURN TO SVC33                      41337002
         SPACE 1                                                        41337503
HALT20   LA    REG15,RC20          SET RETURN CODE 20                   41339002
         B     HALT00              RETURN TO SVC33                      41340002
         SPACE 1                                                        41340503
HALT24   LA    REG15,RC24          SET RETURN CODE 24                   41342002
         B     HALT00              RETURN TO SVC 33                     41343002
         TITLE 'IECVEXPR EXCP PURGE, RESTORE AND FRR ROUTINES - RESTOREX41344002
               INTERFACE ROUTINE'                                       41345002
*********************************************************************** 41346002
*                                                                     * 41347002
*        RESTORE LOOPS THROUGH THE RESTORE CHAIN ISSUING SVC 0'S      * 41350002
*        114'S OR 92'S ACCORDING TO THE INFORMATION KEPT IN THE       * 41400002
*        IOB TABLE. IN ALL CASES, THE I/O IS RE-ISSUED IN THE         * 41450002
*        KEY IN WHICH IT WAS ORIGINALLY ISSUED.                       * 41500002
*                                                                     * 41550002
*        INPUT REGISTER 1 POINTS TO TWO WORD AREA WHERE               * 41600002
*              WORD 1 - ADDRESS OF IOB RESTORE CHAIN                  * 41650002
*              WORD 2 - ADDRESS OF TCB/IOB RESTORE LIST               * 41700002
*                                                                     * 41750002
*********************************************************************** 41800002
         PRINT OFF                                                      41850002
*/*IECVXRES: CHART */                                                   41900002
*/* HEADER                                                              41950002
*/*                    EXCP RESTORE SUBROUTINE                          42000002
*/*                                                      PAGE # */      42010002
*/*IECVXRES: E RESTORE RTN ENTRY */                                     42050002
*/* P SAVE REGS, ESTAB ADDRESSABILITY */                                42100002
*/* P LOAD POINTERS TO IOB RESTORE CHAIN AND EPCB */                    42150002
*/*REST000: D (YES,REST900,NO,) END OF IOB CHAIN */                     42200002
*/* P LOAD POINTER TO NEXT IOB IN CHAIN */                              42250002
*/*REST010: P POINT TO FIRST IOB IN EPCB */                             42350002
*/*REST020: D (YES,REST030,NO,) IOB LOOKING FOR */                      42400002
*/* P INCREMENT TO NEXT IOB IN LIST */                                  42450002
*/* D (YES,REST025,NO,) END OF EPCB BLOCK */                            42500002
*/* D (YES,REST060,NO,REST020) END OF ENTRIES IN EPCB */                42550002
*/*REST025: D (YES,REST060,NO,REST010) LOAD AND TEST FOR NEXT EPCB */   42600002
*/*REST030: P LOAD PTR TO TCB IF ONE */                                 42650002
*/* P TRANSFER TO KEY OF ORIGINAL REQUESTOR */                          42700002
*/* D (YES,REST040,NO,) EXCPVR REQUEST */                               42750002
*/* P LOAD IOB ADDRESS INTO PARAMETER REGISTER */                       42800002
*/* D (YES,REST050,NO,) TCB ASSOCIATED WITH IOB */                      42850002
*/* L (,REST060) ISSUE SVC 0 */                                         42900002
*/*REST040: P LOAD PARM REG WITH IOB ADDR AND F4 IN HIGH BYTE */        42950002
*/* D (YES,REST050,NO,) TCB ASSOCIATED WITH IOB */                      43000002
*/* L (,REST060) ISSUE SVC114 */                                        43050002
*/*REST050: L ISSUE SVC 92 */                                           43100002
*/*REST060: P POINT TO NEXT IOB ON CHAIN, RESTORE LIST ADDRESS */       43150002
*/* P (,REST000) SWAP BACK TO KEY ZERO */                               43200002
*/*REST900: P SWAP TO KEY ZERO */                                       43250002
*/* P FREE CORE IN EPCB */                                              43300002
*/* P RESTORE REGISTERS */                                              43350002
*/* R RETURN TO RESTORE */                                              43400002
*/*IECVXRES: END */                                                     43450002
         PRINT ON                                                       43500002
         DROP  IOSBRG                                          @ZA08162 43520003
         SPACE 2                                                        43550002
IECVXRES STM   REG0,REG15,C0(SAVREG) SAVE REGISTERS                     43600002
         BALR  BASREG,C0           ESTABLISH BASE FOR ROUTINE           43650002
         USING *,BASREG            ADDRESSABILITY FOR ROUTINE           43700002
         LR    GTMREG,REG1         SAVE INPUT PARM             @YM05531 43720002
         L     IOBREG,C0(REG1)     LOAD POINTER TO FIRST IOB            43750002
         L     LSTREG,C4(REG1)     LOAD TCB/IOB LIST ADDRESS            43800002
         USING EPCB,LSTREG         ADDRESSABILITY TO EPCB               43850002
         LR    TOPREG,LSTREG       LOAD SAVE REGISTER FOR LIST          43900002
         SLR   WKREGC,WKREGC       INITIALIZE REG TO ZERO      @Y30IPLB 43950003
         CLM   IOBREG,XPRM7,XPREND00 END OF CHAIN?                      43960002
         BE    REST903             YES, FREE WORK AREA         @YM08365 43970002
         SPACE                                                          43980002
REST000  EQU   *                                               @YM05531 44050002
         CLM   IOBREG,XPRM7,XPRENDFF END OF IOB CHAIN?         @YM05531 44100002
         BE    REST900             YES, THEN END OF RESTORE    @YM05531 44130002
         SPACE                                                          44160002
         L     CHAINRG,IOBRESTR    LOAD POINTER TO NEXT IOB IN CHAIN    44200002
         STCM  CHAINRG,XPRM7,C1(GTMREG) STORE PTR TO NEXT IOB @YM05531  44250002
REST010  LA    WKREGB,EPCBIOB      INCR TO FIRST IOB POINTER    @YM1141 44300002
REST020  CLM   IOBREG,LORD3BYT,C1(WKREGB) IS THIS THE CORRECT IOB       44350002
         BE    REST030             YES, ISSUE SVC FOR THIS IOB          44400002
         LA    WKREGB,EPCBENTL(WKREGB) INCREMENT TO NEXT ENTRY  @YM1141 44450002
         LA    REG0,EPCBBL(LSTREG) POINT TO TOP OF EPCB         @YM1141 44455003
         CR    REG0,WKREGB         END OF THIS EPCB             @YM1141 44470002
         BE    REST025             YES, SKIP TO NEXT            @YM1141 44480002
         C     WKREGC,C0(WKREGB)   END OF LIST                          44500002
         BE    REST080             YES, IGNORE THE IOB         @YM08618 44550002
         B     REST020             HANDLE THIS ENTRY            @YM1141 44560002
         SPACE 2                                                        44570002
REST025  L     LSTREG,EPCBCHN      LOAD CHAIN POINTER TO NEXT EPCB      44580003
         LTR   LSTREG,LSTREG       END OF CHAIN OF EPCB                 44600003
         BZ    REST080             YES, IGNORE THE IOB         @ZA06999 44700003
***      LR    TOPREG,LSTREG       INST DELETED- TOPREG POINTS @ZA16153 44720003
*                                  TOP EPCB FOR FREEING EPCBS  @ZA16153 44740003
         B     REST010             RETURN TO CONTINUE SEARCH   @ZA06999 44780003
         SPACE                                                          44860003
         SPACE 2                                                        44950002
         USING EPCBIOB,WKREGB      ADDRESSABILITY TO ENTRY     @YM05521 45000002
REST030  L     REG0,EPCBTCB        LOAD POINTER TO TCB, IF ONE  @YM1141 45010002
         MODESET SWAPKEY,KEYADDR=EPCBPKEY,WORKREG=15 SWAP TO USER KEY   45050002
         SPACE                                                          45054002
         L     WKREGA,IOBECBPT     GET ECB POINTER BEFORE SVC  @YM08618 45058002
         L     ECBREG,C0(WKREGA)   GET ACTUAL ECB IN CASE AL-  @YM08618 45062002
*                                  READY WAITED ON                      45066002
         SPACE                                                          45070002
         LTR   REG15,REG0          WAS THIS EXCPVR REQUEST?    @YM05530 45100002
         BM    REST040             YES, HANDLE ACCORDINGLY     @YM05530 45130002
         SPACE                                                          45160002
         LR    REG1,IOBREG         PLACE IOBREG INTO PARM REG           45200002
         LA    REG15,C0(REG15)     ZERO HI-ORDER BYTE          @YM05530 45250002
         LTR   REG0,REG15          IS THERE ASSOCIATED TCB?    @YM05530 45270002
         BNZ   REST050             YES, ISSUE SVC 92-RESTORE   @YM05530 45290002
         SPACE                                                          45310002
         SVC   EXCP                ISSUE THE SVC ZERO                   45350002
         B     REST060             CONTINUE RESTORE                     45400002
         SPACE 2                                                        45450002
REST040  LR    REG1,IOBREG         LOAD PARAMETER REGISTER              45500002
         ICM   REG1,HIORDBYT,EPCBTCB GET F4 INTO HIGH BYTE     @YM05530 45550002
         LA    REG15,C0(REG15)     ZERO HI-ORDER BYTE          @YM05530 45580002
         LTR   REG0,REG15          IS THERE ASSOCIATED TCB?    @YM05530 45610002
         BNZ   REST050             YES, ISSUE SVC 92-RESTORE   @YM05530 45640002
         SPACE                                                          45670002
         SVC   EXCPVR              ISSUE SVC 114                        45700002
         B     REST060             INITIALIZE FOR NEXT ONE              45750002
         SPACE 2                                                        45800002
REST050  SVC   RESTORE             ISSUE SVC 92                         45850002
REST060  EQU   *                   RETURN FROM EXCP HERE -     @YM08618 45900002
*                                  GET THE LOCAL LOCK BEFORE            45903002
*                                  MANIPULATION OF ECB, IF              45906002
*                                  WAITED ON ALREADY                    45909002
*                                  INSURE KEY ZERO BEFORE SETLOCK       45909702
         MODESET EXTKEY=ZERO                                   @YM08618 45910402
         SPACE                                                          45911102
         LTR   ECBREG,ECBREG       WHAT WAS STATUS OF ECB?     @YM08618 45912002
         BC    10,REST080          NOT WAITED ON, GET NEXT IOB @YM08618 45915002
*                                  TO BE RESTORED                       45918002
REST065  EQU   *                   SERIALIZE FOR MP ENVIRONMENT@YM08618 45921002
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=USE,               *45924002
               RELATED=(IECVEXPR,REST075)                               45927002
         SPACE                                                          45930002
REST070  CS    WKREGC,ECBREG,C0(WKREGA) RESTORE THE ECB IF IT  @YM08618 45933002
*                                  HAS ALREADY BEEN WAITED ON           45936002
         BE    REST075             WAIT DONE, ECB RESTORED--   @YM08618 45939002
         SPACE                                                          45942002
         TM    C0(WKREGA),ECBPOST  HAS THIS ECB BEEN POSTED YET@YM08618 45945002
         BZ    REST070             NO, THEN RESTORE THE        @YM08618 45950002
*                                  ORIGINAL ECB                         45954002
         LR    REG14,WKREGC        SAVE COMPLETION CODE IN     @YM08618 45958002
*                                  CASE 'CS' INSTRUCTION                45962002
*                                  DOESN'T WORK                         45966002
REST072  EQU   *                                               @YM08618 45970002
         CS    WKREGC,ECBREG,C0(WKREGA) YES, RESTORE ORIGINAL  @YM08618 45974002
*                                  ECB AND INSURE ITS POSTED            45978002
         BNE   REST072             IF FAILURE, TRY AGAIN       @YM08618 45982002
         SPACE                                                          45986002
         LA    WKREGB,C0(WKREGA)   ZERO HI-BYTE OF ECB PTR     @YM08618 45990002
         LR    WKREGA,REG14        GET THE COMPLETION CODE     @YM08618 45994002
         L     REG15,AOPT02        GET ADDRESS OF POST ROUTINE @YM08618 46004002
********                                                       ******** 46006002
*        POST INTERFACE DEFINITION - REGS 0-9,12,13 TRANSPARENT       * 46008002
*                                    REG 10 = COMPLETION CODE         * 46010002
*                                    REG 11 = ECB                     * 46012002
*                                    REG 14 = RETURN ADDRESS          * 46014002
*                                    REG 15 = ENTRY POINT OF POST     * 46016002
********                                                       ******** 46018002
         BALR  REG14,REG15         GO TO POST THE ECB          @YM08618 46020002
         SPACE 2                                                        46022002
REST075  EQU   *                                               @YM08618 46024002
         SLR   WKREGC,WKREGC       INITIALIZE WKREG TO ZERO    @Y30IPLB 46025203
         SETLOCK RELEASE,TYPE=LOCAL,REGS=USE,                          *46026002
               RELATED=(IECVEXPR,REST065)                               46028002
         SPACE                                                          46030002
REST080  LR    IOBREG,CHAINRG                                  @YM08618 46032002
         SPACE                                                          46034002
         LR    LSTREG,TOPREG       RESTORE LST ADDRESS                  46036002
         B     REST000             RETURN TO RESTORE NEXT IOB           46050002
         SPACE 2                                                        46100002
REST900  EQU   *                                                        46150002
         MODESET EXTKEY=ZERO                                   @YM05530 46170002
         SPACE 2                                                        46173002
REST903  EQU   *                   GET THE LOCAL LOCK          @YM08365 46176002
         LR    REG15,SAVREG        SAVE R13,LOCK MGR DESTROYS  @YM08365 46182002
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        *46185002
               RELATED=(IECVEXPR,REST910)                               46188002
         LR    SAVREG,REG15        RESTORE REG13 ON RETURN     @YM08365 46191002
         SPACE                                                          46194002
REST905  EQU   *                   FREE ALL EPCBS                       46200002
         SPACE                                                          46250002
         LR    REG1,TOPREG         PUT @ OF THE BLOCK IN PARM REGISTER  46260002
         LA    REG1,C0(REG1)       INSURE HI-ORDER IS ZERO     @YM06170 46270002
         L     LSTREG,EPCBRTCB-EPCB(TOPREG) GET TCB ADDR       @YM06170 46300002
         L     WKREGA,EPCBCHN-EPCB(TOPREG) LOAD ADDR NEXT EPCB @YM06170 46302002
         LA    REG0,EPCBBL         GET LENGTH FOR FREEMAIN     @YM06170 46304002
         L     ASCBREG,PSAAOLD     GET CURRENT ASCB ADDRESS    @YM07549 46305002
         SPACE                                                          46306002
         FREEMAIN RU,A=(1),LV=(0),SP=230,BRANCH=YES,KEY=0      @ZA17779 46307003
         SPACE                                                          46310002
         LTR   TOPREG,WKREGA       DETERMINE IF ANOTHER BLOCK  @YM06170 46312002
         BNZ   REST905             IS ONE, GO FREE IT           @YM1141 46320002
         EJECT                                                          46321003
REST910  EQU   *                   RELEASE THE LOCAL LOCK      @YM08365 46326002
         LR    REG15,SAVREG        SAVE R13,LOCK MGR DESTROYS  @YM08365 46332002
         SETLOCK RELEASE,TYPE=LOCAL,                                   *46335002
               RELATED=(IECVEXPR,REST903)                               46338002
         LR    SAVREG,REG15        RESTORE REG13 ON RETURN     @YM08365 46341002
         SPACE                                                          46344002
         LM    REG0,REG15,C0(SAVREG) RESTORE REGISTERS                  46350002
         SLR   REG15,REG15         ZERO OUT RETURN CODE REG    @YM05529 46370002
         BR    REG14               RETURN TO RESTORE                    46400002
        TITLE 'IECVEXPR - IECVEXFRR - EXCP FUNCTIONAL RECOVERY ROUTINE' 46510002
         PRINT OFF                                                      46510402
*/*IECVXFRR: CHART */                                                   46512002
*/* HEADER                                                              46514002
*/*                    EXCP FUNCTIONAL RECOVERY ROUTINE                 46516002
*/*                                                      PAGE # */      46516402
*/*IECVXFRR: E EXCP FRR */                                              46516502
*/* P ESTABLISH ADDRESSABILITY */                                       46516602
*/* P ESTABLISH SDWA BASE REGISTER */                                   46516702
*/* P ESTABLISH FRR AREA REGISTER */                                    46516802
*/* D (NO,FRR015,YES,) PROGRAM CHECK */                                 46517302
*/* D (NO,FRR004,YES,) HAS RQE BEEN INIT */                             46517802
*/* D (NO,FRR004,YES,) PAGE FAULT OUT OF XLATOR */                      46519802
*/* P (,FRR010) SET ABEND CODE TO 800 ABEND */                          46520202
*/*FRR004: D (YES,FRR015,NO,) PERCOLATED TO HERE */                     46521302
*/* P SET CODE TO A00 ABEND */                                          46521802
*/* D (YES,FRR010,NO,) AN APPENDAGE ERROR */                            46522302
*/* P SET CODE TO 200 ABEND */                                          46522802
*/* D (YES,FRR010,NO,) KEY CHECK FOUND ERROR */                         46523302
*/*FRR005: P SET CODE TO B00 FOR ALL OTHERS */                          46523802
*/*FRR010: L SETRP: SET THE COMPLETION CODE IN SDWA */                  46524302
*/*FRR015: L GETMAIN: GET CORE FOR SDBA IN SP 0 */                      46524902
*/* P CLEAR THE FIRST 512 BYTES OF THE AREA */                          46526302
*/* P STORE THE AREA ADDRESS IN THE TCB */                              46526802
*/* D (NO,FRR020,YES,) PROGRAM CHECK */                                 46527302
*/* P MOVE THE PSW AND EXTENDED INFORMATION TO THE XDBA */              46527802
*/*FRR020: P MOVE THE COMPLETION CODE FROM SDWA TO XDBA */              46528302
*/* P MOVE THE FLAG FROM THE FRR AREA TO XDBA, SET SIGHT ID */          46528802
*/* D (NO,FRR070,YES,) RQE OBTAINED YET */                              46529302
*/* P MOVE ENTIRE RQE TO THE XDBA */                                    46529802
*/* D (NO,FRR050,YES,) SRB/IOSB OBTAINED YET */                         46530302
*/* P SET THE POINTER TO THE ORIGINAL SRB AND MOVE IN THE SRB/IOSB */   46530802
*/* D (NO,FRR050,YES,) 800 OR 900 ABEND */                              46531302
*/* P SET THE POINTER TO THE ORIGINAL TCCW AND MOVE IN THE TCCW */      46531802
*/* P SET AN INDEX INTO THE REMAINING AREA IN THE DEBUGGING AREA */     46532302
*/* D (YES,FRR040,NO,) 800 ABEND CONDITION */                           46532802
*/* P LOAD POINTER TO THE FIRST BEB */                                  46533302
*/*FRR030: D (YES,FRR050,NO,) END OF CHAIN */                           46533802
*/* P MOVE ORIGINAL BLOCK POINTER AND THE BLOCK TO THE XDBA */          46534302
*/* P (,FRR030) INCREMENT TO NEXT IN CHAIN AND NEXT AREA IN BLOCK */    46534802
*/*FRR040: P (,FRR030) LOAD POINTER TO THE FIRST FIX BLOCK */           46535302
*/*FRR050: P SET PERMANENT ERROR IN THE DCB */                          46535802
*/* D (YES,FRR060,NO,) POST STATUS APPENDAGE PROC. */                   46536302
*/* L (,FRR070) PURGINTF: FREE ALL STORAGE AREAS */                     46536802
*/*FRR060: P SET POST CODE TO X'45' */                                  46537302
*/*FRR070: P MOVE REGISTERS AT TIME OF ERROR INTO XDBA */               46537802
*/* P SETFRR: DELETE THE RECURSION FRR */                               46538302
*/* D (NO,FRR080,YES,) SRB ENTRANCE TO EXCP */                          46538802
*/* P SETRP: FREE THE LOCAL LOCK */                                     46539302
*/*FRR080: R RETURN TO RTM */                                           46539802
         PRINT ON                                                       46540302
*********************************************************************** 46540802
*                                                                     * 46541302
*                       FUNCTIONAL RECOVERY ROUTINE                   * 46541802
*                                                                     * 46542302
*        EXCP FUNCTIONAL RECOVERY ROUTINE ACCOMPLISHES TWO PURPOSES.  * 46542802
*        THESE ARE SERVICEABILITY AND RELIABILITY. FOR SERVICABILITY, * 46543302
*        EXCP ISSUES A GETMAIN FOR STORAGE IN SUBPOOL ZERO. IT        * 46543802
*        PLACES THE POINTER TO THIS AREA IN THE TCB OF THE REQUEST.   * 46544302
*        THIS AREA CONTAINS INVORMATION REGARDING THE ERROR CONDITION * 46544802
*        SUCH AS REGISTERS, PSW, RQE, AND TRANSLATION BLOCKS.         * 46545302
*                                                                     * 46545802
*        FOR RELIABILITY, ALL EXCP RESOURCES ARE RECLAIMED IN ALL     * 46546302
*        CASES EXCEPT WHEN THE PCI, CHE OR ABE APPENDAGES HAD HAD     * 46546802
*        CONTROL. IN THE CASE OF THE APPENDAGES MENTIONED ABOVE,      * 46547302
*        THIS ROUTINE PERCOLATES TO POST STATUS FRR WHICH ENTERS      * 46547802
*        A DRIVER RESOURCE MANAGER - AS OF NOW, THE TERMINATION       * 46548302
*        ROUTINE.                                                     * 46548802
*                                                                     * 46549302
*        REGISTERS ON ENTRY ARE AS FOLLOWS;                           * 46549502
*                                                                     * 46549802
*        REGISTER  0  -  ADDRESS OF 200 BYTE WORK AREA                * 46551802
*        REGISTER  1  -  ADDRESS OF THE SYSTEM DIAGNOSTIC WORK AREA   * 46552702
*        REGISTER  14 -  RETURN ADDRESS TO RTM                        * 46553602
*        REGISTER  15 -  ENTRY POINT ADDRESS                          * 46554502
*                                                                     * 46555402
*********************************************************************** 46556302
EXPRFRR  DC    CL8'IECVXFRR'       FRR EP NAME                 @ZA06070 46556903
         SPACE 2                                                        46557602
         USING PURBASE,BASREG      MODULE ADDRESSABILITY        @YM3145 46558602
         USING SDWA,SDWAREG        SDWA ADDRESSABILITY                  46559602
         USING RQE,RQEREG          RQE ADDRESSABILITY                   46562202
         USING GTM,GTMREG          WORK AREA DSECT ADDRESSING   @YM3145 46564202
         USING FRREXCP,FRRREG      FRR PARM AREA ADDRESSABILITY@ZA12704 46565203
IECVXFRR LA    BASREG,IECVXFRR-PURBASE(,0) ADJUST BASE ADDRESS  @YM3145 46566802
         SLR   REG15,BASREG        SET BASE-PURGE SUBRTN BASE  @Y30IPLB 46568803
         LR    BASREG,REG15        TRANSFER BASE TO REGISTER 9  @YM3145 46570802
         LR    SDWAREG,REG1        SET UP BASE FOR SDWA                 46571402
         LR    GTMREG,REG0         200 BYTE WORK AREA ADDRESS   @YM3145 46573402
         L     FRRREG,SDWAPARM     GET FRR PARM AREA                    46576002
         L     RQEREG,FRRCRQE      GET CURRENT RQE POINTER      @YM2246 46581002
         LR    RTMRREG,REG14       SAVE RETURN ADDRESS          @YM3145 46581402
******** CHECK IF STORAGE MANAGER (IECVSMGR) WAS ACTIVE        @ZA24342 46581803
         TM    FRRTCNT,FRR40+FRR160  STORAGE MANAGER ACTIVE ?? @ZA24342 46582203
         BNZ   FRR100              YES MUST CALL SMGR FRR               46583003
         EJECT                                                 @ZA06070 46583303
         SLR   WKREG6,WKREG6       INIT WORKREG BEFORE ICM     @Y30IPLB 46585203
         ICM   WKREG6,XPRM3,SDWACMPC GET SYSTEM COMP. CODE     @YM06599 46586202
         SRL   WKREG6,C4           SAVE ONLY MEANINGFUL 12 BITS@YM06599 46595602
         STH   WKREG6,SDWAVABO     SAVE ORIGINAL ABEND CODE    @ZA06070 46595703
         LTR   RQEREG,RQEREG       IS THERE A RQE POINTER?     @YM06742 46597802
         BNP   FRR001              NO, CONTINUE ABEND TESTS    @YM06742 46599802
         SPACE                                                          46601802
         TM    RQETYPE,RQEDIE      ABEND IN PCI APPENDAGE?     @YM05537 46606102
         BNO   FRR001              NO, THEN TEST PGM CHECK     @YM07285 46609602
         SPACE                                                          46609802
*        NOTE -ERROR IN PCI APPENDAGE, REGISTERS ARE INVALID AND        46610002
*              THEREFORE WILL BE ZEROED OUT.                            46610202
         SPACE                                                          46610602
         OI    FRRFLAG,FRRPCI+FRRAACT INDIC ERROR IN ACTIVE    @YM07285 46610702
*                                  ACTIVE APPENDAGE            @YN07285 46610802
         LA    WKREGB,CODEA00      SET CORRECT ABEND CODE      @Y30IPLB 46610903
         XC    SDWAGRSV(C64),SDWAGRSV ZERO OUT REGS IN SDWA    @YM07285 46611002
         B     FRR010              USE A00 ABEND CODE          @YM05537 46611102
         SPACE                                                          46611302
FRR001   EQU   *                                               @ZA06070 46611403
         LR    WKREGB,WKREG6       PRESET TO ORIGINAL ABEND    @ZA06070 46611603
         CH    WKREGB,ABEND028     SYSTEM ABEND CODE = 028 ??  @ZA16175 46611703
         BE    FRR002              YES, NEED CK FOR TCCW PG CK @ZA16175 46611803
         CH    WKREGB,ABEND171     SYSTEM ABEND CODE = 171 ??  @ZA16175 46611903
         BE    FRR002              YES, NEED CK FOR TCCW PG CK @ZA16175 46612003
         TM    SDWAERRA,SDWAPCHK   WAS ENTRY DUE TO PGM CHECK? @ZA06070 46612303
         BZ    FRR015              NO, GO GET WORK AREA                 46612403
         LA    WKREGB,CODE700      SET ABEND CODE IN CASE      @OZ00085 46613903
*                                  OF PERCOLATION FROM ANOTHER FRR      46614603
         TM    SDWAERRC,SDWAPERC   WAS ANOTHER FRR IN CONTROL? @OZ00085 46615003
         BO    FRR010              YES, ISSUE 700 ABEND--      @OZ00085 46615403
FRR002   EQU   *                                               @ZA16175 46615803
         LA    WKREGB,CODE700      SET ABEND CODE TO 700.      @ZA16175 46616203
         LTR   RQEREG,RQEREG       ANY RQE YET?                         46616603
         BNP   FRR004              NO, CANNOT BE IN TRANSLATOR  @YM3145 46618603
         TM    RQETYPE,RQEVAM      VIO RELATED REQ RECOVERY ?? @ZA06070 46619603
         BO    FRR010              YES, BYPASS TCCW CHECK      @ZA06070 46620003
         L     WKREG6,RQETCCW      PICKUP TCCW POINTER                  46620603
         LTR   WKREG6,WKREG6       ANY TCCW?                            46622603
         BZ    FRR004              NO, CONTINUE                         46624603
         TM    TCCWMODB-TCCW(WKREG6),TCCWPGCK WAS IT A PAGE CHK ERROR?  46626603
         BZ    FRR004              NO                                   46627603
         MVC   TCCWSAVA+C2-TCCW(C2,WKREG6),SDWAVABO      MOVE  @ZA16175 46627903
*                                  ORIGINAL ABEND CODE TO TCCW @ZA16175 46628103
         ST    WKREG6,SDWASR11     SET TCCW PTR                @ZA16175 46628303
         MVC   SDWASR06,SDWASR15   SAVE ANY RETURN CODE        @ZA26258 46628403
         L     WKREGB,ACCWXFRR     GET CCW TRANSLATOR RETRY    @YM04960 46628603
*                                  * ROUTINE ADDRESS           @YM04960 46629603
*                                  * PARAMETERS                @YM04960 46630603
         SETRP RETADDR=(WKREGB),RETREGS=YES,RECORD=NO,RC=4     @YM04960 46636303
         LR    REG14,RTMRREG       RESTORE RETURN ADDRESS      @YM04960 46638303
         BR    REG14               RETURN TO RTM FOR RETRY     @YM04960 46639303
FRR004   EQU   *                   TEST FOR LOCATION OF ERROR  @OZ00085 46643303
         TM    SDWAERRC,SDWAPERC   WAS ANOTHER FRR IN CONTROL?          46645503
         BNZ   FRR010              LEAVE THE CODE AT 700        @YM3145 46647503
         LA    WKREGB,CODEA00      SET CODE TO A00             @Y30IPLB 46649503
         TM    FRRFLAG,FRRAACT     WAS ERROR IN ACTV APPENDAGE?@YM05505 46651503
         BNZ   FRR010              YES  USE A00 CODE           @YM04202 46653503
         SPACE                                                          46655503
         LA    WKREGB,CODE200      SET CODE 200                @Y30IPLB 46660603
         ICM   WKREG6,XPRM3,SDWACMPC GET SYS COMPLETION CODE   @YM02855 46662302
         N     WKREG6,XPRZBITS     LEAVE HIGH 12 BITS TO TEST  @YM02855 46663302
         CH    WKREG6,XPR0C4       SYS COMP CODE = TO 0C4      @YM02855 46664302
         BNE   FRR005              NO , USE B00 COMP CODE      @YM02855 46666302
         SPACE                                                          46668302
****     PROTECTION CHECK (0C4) OCCURRED IN IECVEXCP.          @ZA12706 46668803
*        IF 0C4 OCCURRED IN VALIDITY CHECK ROUTINES, ISSUE     @ZA12706 46669303
*        ABEND 200.                                            @ZA12706 46670303
         SPACE 1                                               @ZA12706 46672303
         L     WKREG6,SDWANXT1     ADDR NEXT INST TO BE EXEC   @ZA12706 46674303
         LA    WKREG6,C0(WKREG6)   ZERO HIGH ORDER BYTE        @ZA12706 46675303
         CL    WKREG6,EXPRVAL1     ERROR IN VAL CK ROUTINE ??  @ZA12706 46678303
         BL    FRR004A             NO,CK NEXT RANGE            @ZA12706 46678603
         CL    WKREG6,EXPRVAL2     ERROR IN VAL CK ROUTINE ??  @ZA12706 46678903
         BL    FRR010              YES, USE ABEND 200 CODE     @ZA12706 46679303
FRR004A  EQU   *                                               @ZA12706 46679503
         CL    WKREG6,EXPRVAL3     ERROR IN EXCP VAL CK ??     @ZA12706 46679703
         BL    FRR004B             NO, CK POST ECB VAL CK      @ZA12706 46679903
         CL    WKREG6,EXPRVAL4     ERROR IN EXCP VAL CK ??     @ZA12706 46680103
         BL    FRR010              YES, USE ABEND 200 CODE     @ZA12706 46680303
FRR004B  EQU   *                                               @ZA12706 46680503
         CL    WKREG6,EXPRVAL5     ERROR IN POST RTN ECB VAL?? @ZA12706 46680703
         BL    FRR005              NO, USE ABEND B00 CODE      @ZA12706 46680903
         CL    WKREG6,EXPRVAL6     ERROR IN POST RTN ECB VAL?? @ZA12706 46681103
         BL    FRR010              YES, USE ABEND 200 CODE     @ZA12706 46682103
         SPACE 2                                               @ZA12706 46682303
FRR005   EQU   *                                               @ZA27884 46683803
         LA    WKREGB,CODEB00          SET ABEND CODE TO B00.  @ZA27884 46684503
         CLC   SDWAVABO,ABEND171       WAS ORIGINAL ABEND 171? @ZA27884 46684603
         BE    FRR005B                 YES.                    @ZA27884 46684703
         CLC   SDWAVABO,ABEND028       WAS ORIGINAL ABEND 028? @ZA27884 46684803
         BNE   FRR010                  NO.                     @ZA27884 46684903
         SPACE 1                                               @ZA27884 46685003
FRR005B  EQU   *                                               @ZA27884 46685103
         LTR   RQEREG,RQEREG           AT THIS POINT THE RQE   @ZA27884 46685203
         BNP   FRR010                  AND TCCW SHOULD EXIST.  @ZA27884 46685303
         L     WKREG6,RQETCCW          CHECKING IS DONE TO     @ZA27884 46685403
         LTR   WKREG6,WKREG6           VERIFY THEIR EXISTANCE. @ZA27884 46685503
         BZ    FRR010                                          @ZA27884 46685603
         LH    WKREGB,ABEND800         SET ABEND CODE TO 800.  @ZA27884 46685703
         STH   WKREGB,TCCWSAVA+C2-TCCW(WKREG6)                 @ZA27884 46686603
         NI    RQEFLAG,FF-RQEFIXST     ASSUME 171 AND 028      @ZA27884 46686703
*                                      ABENDS ARE ONLY FROM    @ZA27884 46686803
*                                      NON-VIRTUAL EXCP        @ZA27884 46686903
*                                      REQUESTS.               @ZA27884 46687003
FRR010   EQU   *                                               @YM02855 46687103
         SPACE                                                          46687203
*                                  SET RETURN PARAMETERS                46687302
         SPACE 1                                               @ZA06070 46687503
         SETRP COMPCOD=((WKREGB),SYSTEM),DUMP=YES,RECORD=YES,  @ZA15703*46687603
               DUMPOPT=DUMPB00                                 @ZA15703 46687803
         SPACE 2                                               @ZA06070 46688003
* MOVE FOLLOWING DATA INTO THE SDWA VARIABLE DATA AREA         @ZA06070 46688203
FRR015   EQU   *                                               @ZA06070 46688303
         LTR   RQEREG,RQEREG       ANY RQE ??                  @ZA06070 46688403
         BNP   FRR015A                    NO                   @ZA12706 46688503
         MVC   SDWAVRQE(RQEBL),0(RQEREG)  YES, MOVE RQE AREA   @ZA06070 46689003
         TM    RQETYPE,RQEVIRT     VIRTUAL EXCP REQUEST ??     @ZA06070 46689103
         BZ    FRR015A              NO                         @ZA06070 46689203
         L     WKREG6,RQETCCW      YES                         @ZA06070 46689303
         LTR   WKREG6,WKREG6       TCCW BLOCK OBTAINED ??      @ZA06070 46689403
         BZ    FRR015A             NO, BYPASS                  @ZA06070 46689503
         MVC   SDWAVTOP,TCCWOPTN-TCCW(WKREG6) MOVE OPT BYTE    @ZA06070 46689603
         MVC   SDWAVFLG,TCCWMODB-TCCW(WKREG6) MOVE XLATE FLAGS @ZA06070 46690103
         CH    WKREGB,ABEND800                                 @ZA16175 46690203
         BNE   FRR015A                                         @ZA16175 46690303
         MVC   SDWAVABO,TCCWSAVA+C2-TCCW(WKREG6)               @ZA16175 46690403
         SPACE 1                                               @ZA06070 46691003
FRR015A  MVC   SDWAVLHI,PSAHLHI    MOVE HIGHEST LOCK HELD      @ZA06070 46691103
         MVC   SDWAVFRR(FRRXLEN),0(FRRREG)   MOVE FRR PARM     @ZA12704 46691203
         MVI   SDWAURAL,SDWAVLTH   SET LTH OF VAR AREA USED    @ZA06070 46691303
         STH   WKREGB,SDWAVABN     SAVE ABEND CODE             @ZA06070 46691403
         L     WKREG6,PSAAOLD      LOAD ASCB POINTER           @ZA06070 46691503
         MVC   SDWAVASI,ASCBASID-ASCB(WKREG6) MOVE ASID        @ZA06070 46691603
         OI    SDWADPVA,SDWAHEX    INDICATE TO DUMP IN HEX     @ZA06070 46691703
         MVC   SDWAMODN(RC16),XPRMODN    MOVE MOD ID AND PTF # @ZA12706 46691903
         MVC   SDWAREXN,EXPRFRR    FRR ROUTINE NAME            @ZA12706 46692103
         EJECT                                                 @ZA12706 46692503
         TM    SDWAEC1,DISPSW      IS PSW DISABLED?            @ZA05976 46692903
         BNO   FRR050              YES, DO NOT OBTAIN XDBA     @ZA05976 46693003
         SPACE                                                          46693103
         LTR   RQEREG,RQEREG       DOES RQE EXIST?             @ZA06070 46693203
         BP    FRR017              BRANCH YES - GO GET TCB PTR @ZA05486 46693303
         CLI   FRRCRQE,FF          NO RQE, WAS TCB ADDR SAVED? @ZA05486 46693403
         BE    FRR018              BRANCH YES - GO GET IT      @ZA05486 46694203
         L     WKREG6,PSATOLD      NO TCB ADDR, USE CURRENT    @ZA05486 46694303
         B     FRR019              GO ON TO GETMAIN            @ZA05486 46695303
FRR017   L     WKREG6,RQETCB       GET TCB ADDRESS FOR GETMAIN @ZA05486 46696303
         B     FRR019              GO ON TO GETMAIN            @ZA05486 46697303
FRR018   LR    WKREG6,RQEREG       TCB @ SAVED INSTEAD OF RQE  @ZA05486 46698303
FRR019   LA    WKREG6,C0(WKREG6)   ZERO HI-ORDER BYTE FOR GETMN@ZA05486 46699303
         LR    RQEREG,WKREG6       TRANSFER TCB @ FOR GETMAIN  @ZA05486 46700303
*                                  WKREG6 MAINTAINED OVER GETMN@ZA05486 46701303
         L     WKREG7,PSAAOLD      GET ASCB ADDRESS FOR GETMAIN         46711302
         LR    WKREGA,RTMRREG      SAVE RTM RETURN ADDR REG     @YM3145 46712302
         SPACE 1                                               @ZA12706 46713303
         GETMAIN   RU,LV=XDBASIZE,SP=230,BRANCH=YES,KEY=0      @ZA15702 46713803
         SPACE 1                                               @ZA12706 46714903
         LR    RTMRREG,WKREGA      RESTORE RTM RETURN ADDR REG  @YM3145 46715402
         USING XDBA,REG1           ADDRESSABILITY FOR XDBA              46716402
         XC    XDBA(TWO56),XDBA    CLEAR FIRST 256 BYTES                46717402
         XC    XDBA+TWO56(TWO56),XDBA+TWO56  CLEAR NEXT 256             46719402
         MVC   XDBACC(C2),SDWAVABO STORE ORIG ABEND CODE       @ZA06070 46719903
         L     WKREGB,TCBEXCPD-TCB(WKREG6)  LOAD PREVIOUS PTR  @ZA15703 46720703
         ST    WKREGB,XDBACHAN              AND SAVE IN XDBA   @ZA15703 46721503
         ST    REG1,TCBEXCPD-TCB(WKREG6) SAVE DEBUG PTR IN TCB @YM04297 46722402
         SPACE 1                                               @ZA06070 46722603
         TM    SDWAERRD,SDWARPIV   REGS & PSW VALID FROM ERROR @YM02855 46723403
         BO    FRR022              NO, BYPASS THE SAVE         @YM02855 46724402
         SPACE                                                          46726402
         MVC   XDBAPSW,SDWAEC1     YES, THEN SAVE PSW AND      @YM02855 46728402
*                                  REGISTERS - DEBUG AREA      @YM02855 46729402
         MVC   XDBARGSV(XDBARQE-XDBARGSV),SDWAGRSV             @YM02855 46730402
         EJECT                                                 @ZA12706 46730903
FRR022   EQU   *                                               @YM05512 46732402
         ICM   WKREGB,XPRM3,SDWACMPC GET SYS COMPLETION CODE   @YM05512 46735402
         SRL   WKREGB,C4           LEAVE 12 BITS-SYS CODE      @YM05512 46736402
         STH   WKREGB,XDBACOMP     SAVE IN EXCP DEBUG AREA     @YM05512 46737402
         MVC   XDBAFLAG,FRRFLAG    MOVE FRR FLAG                        46738602
         L     RQEREG,FRRCRQE      GET POINTER TO RQE                   46740402
         LTR   RQEREG,RQEREG       ANY RQE                              46741402
         BNP   FRR070              NO                          @YM06923 46743402
         MVC   XDBARQE,0(RQEREG)   MOVE IN RQE                          46746402
         MVC   XDBATRAN(C4),SDWATRAN MOVE TRANS. EXCEP ADDR    @ZA06070 46746903
         TM    RQETYPE,RQEVAM      VIO RELATED REQ RECOVERY    @YM06502 46747402
         BO    FRR038              YES, INSURE RQETCCW ZEROED  @YM06502 46748402
         SPACE 1                                               @ZA06070 46749403
* MOVE THE 160 BYTE BLOCKS TO THE DEBUGGING AREA IN FOLLOWING  @ZA06070 46750403
* ORDER (IF PRESENT): EWA, SRB/IOSB, TCCW, IDAL, FIX AND BEB.  @ZA06070 46751403
         SPACE 1                                               @ZA06070 46752403
         LA    WKREGA,XDBAENT      POINT TO 1ST 160B BLOCK     @ZA06070 46754403
         USING XDBAENT,WKREGA      ADDRESSABILITY TO 160B BLKS @ZA06070 46755403
         LA    WKREG7,XDBABLKS     LIMIT OF 160B BLOCKS        @ZA06070 46756303
         SPACE 1                                               @ZA06070 46757203
         CLI   FRRFCNT,C0          ANY 160B BLKS ON FREE CHAIN @ZA06070 46761303
         BE    FRR030              NO, MOVE INDIVIDUALLY       @ZA06070 46763503
         L     WKREGB,FRRSTRG      YES, SET START ADDR AND     @ZA06070 46764303
         B     FRR034A                  GO MOVE CHAIN TO XDBA  @ZA06070 46765103
         SPACE                                                          46770703
*              MOVE INDIVIDUAL TYPE BLOCKS TO XDBA             @ZA06070 46770803
FRR030   EQU   *                                               @ZA06070 46770903
         L     WKREG6,RQESRB-RQE(,RQEREG)  SRB PTR IN RQE      @ZA06070 46771003
         LTR   WKREG6,WKREG6       SRB/IOSB BLOCK OBTAINED ??  @ZA06070 46771203
         BZ    FRR050              NO, NO 160B BLKS GOTTEN YET @ZA06070 46771303
         L     WKREGB,SRBSIZE+IOSERP-IOSB(,WKREG6) EWA BLOCK   @ZA06070 46771403
         BAL   REG14,FRR037        MOVE ANY EWA BLOCKS(S)      @ZA06070 46771603
         MVC   XDBAENT,C0(WKREG6)  MOVE IN SRB/IOSB BLOCK      @ZA06070 46771703
         SR    WKREGB,WKREGB       ZERO MOVE POINTER AND       @ZA06070 46771903
         BAL   REG14,FRR037A       GO ADJUST POINTERS          @ZA06070 46772003
         SPACE 2                                               @ZA06070 46772103
         L     WKREG6,RQETCCW      TCCW POINTER FROM RQE       @ZA06070 46772703
         LTR   WKREG6,WKREG6       TCCW POINTER ACTIVE ??      @ZA06070 46772803
         BZ    FRR050              NO, NO FUTHER BLOCKS        @ZA06070 46772903
         MVC   XDBAENT,C0(WKREG6)  MOVE TCCW TO XDBA BUFFER    @ZA06070 46773003
         BAL   REG14,FRR037A       GO ADJUST POINTERS          @ZA06070 46773103
         L     WKREGB,TCCWTCB-TCCW(,WKREG6)  LOAD TCB ADDR??   @ZA06070 46773203
         CLM   WKREGB,XPRM7,RQETCB+C1  IS 1ST WORD THE TCB ADR @ZA06070 46773303
         BNE   FRR034A             NO, THEN TCCW CHAINED       @ZA06070 46773403
         SPACE                                                          46774003
         TM    RQETYPE,RQE114+RQE1TO1  EXCPVR OR V=R REQUEST   @ZA06070 46774103
         BNZ   FRR034B             YES, BYPASS                 @ZA06070 46774303
         SPACE 1                                               @ZA06070 46775203
FRR034   EQU   *                                               @ZA06070 46775503
         L     WKREGB,TCCWINDA-TCCW(,WKREG6) IDAL BLOCKS       @ZA06070 46775603
         BAL   REG14,FRR037                                    @ZA06070 46775703
         L     WKREGB,TCCWFIX-TCCW(,WKREG6)  FIX BLOCKS        @ZA06070 46775803
         BAL   REG14,FRR037                                    @ZA06070 46775903
         L     WKREGB,TCCWBEB-TCCW(,WKREG6) BEB BLOCKS         @ZA06070 46776003
FRR034A  EQU   *                                               @ZA06070 46776103
         BAL   REG14,FRR037                                    @ZA06070 46776203
FRR034B  EQU   *                                               @ZA06070 46776303
         LTR   WKREG7,WKREG7       ANY 160 BYTE FIELDS LEFT ?? @ZA06070 46776403
         BZ    FRR050              NO                          @ZA06070 46776503
         XC    0(XDBAEL,WKREGA),0(WKREGA)  YES, ZERO NXT FLD   @ZA06070 46776603
         B     FRR050              CONTINUE                    @ZA06070 46777103
         SPACE                                                          46777203
FRR037   EQU   *                                               @ZA15704 46777403
         LA    WKREGB,C0(WKREGB)   INSURE HI-ORDER BYTE ZERO   @ZA15704 46777803
         LTR   WKREGB,WKREGB       END OF CHAIN ??             @ZA15704 46778103
         BZR   REG14               YES, RETURN                 @ZA06070 46779003
         MVC   XDBAENT,C0(WKREGB)  MOVE IN A BLOCK             @YM07354 46779302
         L     WKREGB,C0(,WKREGB)  GET POINTER TO NEXT BLOCK   @ZA06070 46779803
FRR037A  EQU   *                                               @ZA06070 46780303
         LA    WKREGA,XDBAEL(,WKREGA) INCREMENT XDBA POINTER   @ZA06070 46782303
         BCT   WKREG7,FRR037       LIMIT OF 160B REACHED?      @ZA06070 46782603
         B     FRR050              YES, NOW GO TEST ENTRY      @ZA06233 46783203
         SPACE                                                          46785302
FRR038   EQU   *                                               @YM06502 46786302
         XC    RQETCCW(C20),RQETCCW INSURE WORKAREA ZEROED-VIO @YM06502 46787302
         SPACE                                                          46789302
FRR050   EQU   *                                               @YM05515 46791302
         SPACE 2                                               @ZA06070 46792603
         TM    FRRFLAG,FRRBKE      BACK END ENTRY?             @ZA05976 46793103
         BO    FRR057              DETERMINE IF POST SCHEDULED @ZA06811 46793503
*                                  THE TERMINATION RTN                  46793803
         TM    FRRFLAG,FRRFTE      FRONT END ENTRY?            @ZM05976 46794503
         BZ    FRR060              NO, SET IOS CODE            @ZM32371 46795003
         CLI   RQEFLAG3,RQEINIOS   FRONT END ENTRY, NOW IS     @ZM32371 46796003
         BE    FRR070              REQUEST IN IOS, BR IF YES   @ZM32371 46796503
         SPACE                                                          46798503
         EJECT                                                 @ZA06070 46799003
FRR055   OI    RQEFLAG,RQENOPST    SET NO POST FLAG IN RQE     @YM05535 46800503
         BAL   REG14,PURGINTF      GO FREE ALL STORAGE AREAS            46802503
         B     FRR070              CODE ALREADY SET                     46804503
         SPACE                                                          46804603
FRR057   TM    FRRFLAG,FRRCHE+FRRABE BACKEND ENTRY VIA APPEND  @ZA06811 46804703
         BZ    FRR055              NO, CONTINUE NORMAL TERM END@ZA06811 46804803
         SPACE                                                          46804903
         OI    RQEFLAG,RQENOPST    YES, PERCOLATE TO POST AND  @ZA06811 46805003
         B     FRR070              SCHEDULE TERM ROUTINE       @ZA06811 46805103
         SPACE                                                          46805503
FRR060   L     WKREG2,RQESRB       POINT TO SRB                         46806503
         L     WKREG2,SRBPARM-SRB(,WKREG2) POINT TO IOSB                46808503
         MVC   SDWAVIOC,IOSCOD-IOSB(WKREG2)  SAVE COMPL CODE.  @ZA06070 46809503
         MVI   IOSCOD-IOSB(WKREG2),IOSABNC SET IOS ABEND CODE  @YM05517 46810503
         SPACE                                                          46811503
FRR070   EQU   *                                               @YM02855 46812503
         TM    FRRFLAG,FRRBKE      BACK END ENTRY?             @ZM05976 46818503
         LR    REG1,SDWAREG        SET REG FOR SETRP           @ZA06222 46818803
*                                  FREE THE LOCAL LOCK         @ZA06222 46819103
         BZ    FRR080              NO LOCK NOT HELD                     46819503
         SPACE                                                          46820503
         SETRP FRELOCK=LOCAL,DUMP=YES,RECORD=YES               @ZA06070 46821503
         SPACE                                                          46825903
FRR080   EQU   *                                               @YM06597 46826903
*                            TEST FOR RECORDING ABEND          @ZA12706 46827303
         TM    SDWAEC1,DISPSW      DISABLED PSW  ??            @ZA06070 46829303
         BNO   FRR090              YES, RECORD ON LOGREC       @ZA06070 46829503
FRR081   EQU   *                                               @ZA06070 46829803
         LA    WKREGB,CODE700                                  @ZA06070 46829903
         CH    WKREGB,SDWAVABN     ABEND CODE LESS THAN 700??  @ZA06070 46830003
         BNH   FRR090              NO, IGNORE RECORDING        @ZA06070 46830303
FRR082   EQU   *                                               @ZA06070 46830603
         SPACE 1                                               @ZA06070 46830703
         SETRP RECORD=NO,DUMP=YES,DUMPOPT=DUMPX00              @ZA15702 46830803
         SPACE 2                                               @ZA06070 46831103
FRR090   SLR   REG15,REG15         CLEAR REG 15                @Y30IPLB 46832103
         LR    REG14,RTMRREG       RESTORE RETURN ADDRESS       @YM3145 46834103
         BR    REG14               RETURN TO CALLER                     46836103
         EJECT                                                          46836303
******** IECVSMGR (STORAGE MANAGER) -                          @ZA06070 46836403
********       . A 40 BYTE BLOCK GET OR FREE REQ ACTIVE.       @ZA06070 46836503
********       . A 160 BYTE BLOCK GET OR FREE REQ ACTIVE       @ZA24342 46836603
********       AFTER SETUP BY EXPR, RETURN IS MADE TO THE      @ZA06070 46837003
********       IECVSMGR FRR ROUTINE.  THE SMGR FRR ROUTINE     @ZA06070 46837103
********       WILL DETERMINE WHETHER TO RETRY OR PERCOLATE.   @ZA06070 46837503
********       THE SMGR FRR ROUTINE WILL RETURN TO THE EXPR    @ZA06070 46837903
********       FRR ROUTINE.  THE EXPR FRR ROUTINE WILL THEN    @ZA06070 46839203
********       ACT ON THE SMGR FRR ACTION.                     @ZA06070 46839303
********       THE 200 BYTE WORK AREA PASSED BY RTM IS USED    @ZA06070 46839403
********       FOR THE QVPL, FRR PARM AREA AND FOR EXPR        @ZA06070 46839503
********       REGISTER SAVE AREA.                             @ZA06070 46839603
         USING QVPL,GTMREG         WORK AREA ADDRESSABILTY              46839703
FRR100   EQU   *                   INTERFACE WITH IECVSMGR FRR          46840503
         LA    WKREG7,QFRRPARM     FRR PARM AREA ADDR FOR SMGR @ZA12704 46840603
         DROP  GTMREG                                                   46842603
         USING GTM,GTMREG          RESET GTM DSECT ADDRESSABILITY       46843603
         USING FRRSMGR,WKREG7      DUMMY SMGR FRR              @ZA12704 46844603
         ST    FRRREG,FRREXCPS     SAVE ADR OF EXCP FRR AREA            46846003
         ST    BASREG,FRRBASE      SAVE BASE REGISTER                   46848103
         ST    RTMRREG,FRRRRTM     RETURN ADR OF RTM                    46850003
         ST    WKREG7,SDWAPARM     STORE NEW FRR PARM AREA              46852003
         L     WKREGA,FRRLLSA      GET LOCAL LOCK SAVE AREA             46853203
         SPACE 2                                               @ZA24342 46853603
         TM    FRRTCNT,FRR40       40 B BLOCK REQUEST ??       @ZA24342 46853803
         BO    FRR102              YES,                        @ZA24342 46854003
         MVC   FRRSVA(FRRSLEN),C48(WKREGA) NO, MOVE FROM LLSA. @ZA24342 46854203
         B     FRR106                                          @ZA24342 46854403
         SPACE 1                                               @ZA24342 46854603
FRR102   EQU   *                                               @ZA24342 46854803
         LM    SAVREG,REG14,R13DISP(WKREGA) GET ORIGINAL R13,R14        46855203
         STM   SAVREG,REG14,FRRSVA STORE SAVE AND RETURN REGS           46857603
         L     REG15,PSAAOLD       PUT ASID IN THE             @ZA16162 46857703
         LH    REG15,ASCBASID-ASCB(REG15) PSEUDO FRR FOR THE   @ZA16162 46858203
         STH   REG15,FRRASID       STORAGE MANAGER             @ZA16162 46858303
         MVI   FRRFLA,C0           INITIALIZE THE FLAG         @ZA16162 46858403
         MVI   FRRFLB,C0           BYTES.                      @ZA16162 46858503
         TM    FRRTCNT,FRRG40      GET FORTY REQUEST                    46858603
         BNO   FRR105              NO -FREE REQUEST                     46859603
         OI    FRRFLA,FRRG40       TURN ON SMGR FRR GET REQ             46861303
FRR105   OI    FRRFLA,FRRMED       TURN ON SMGR FRR FREE REQ            46863303
FRR106   EQU   *                                               @ZA24342 46864103
         LR    REG0,GTMREG         LOAD ADDRESS OF 200 BYTE WORKAREA    46865003
         L     REG15,SMGRFRR       PREPARE TO GO TO SMGR                46866003
         BALR  REG14,REG15         GO TO CORE MANAGER                   46868703
         EJECT                                                 @ZA06070 46868803
* RETURN ENTRY FROM IECVSMGR - STORAGE MANAGER                *@ZA06070 46869303
         LR    WKREG7,LSTREG       RESTORE PTR-FRR (SMGR USED) @YM03281 46869703
         L     BASREG,FRRBASE      RESTORE BASE REGISTER                46870703
         L     REG14,FRRRRTM       RESTORE RETURN ADDRESS               46872403
         L     FRRREG,FRREXCPS     RESTORE POINTER TO EXCP FRR          46873403
         ST    FRRREG,SDWAPARM     RESTORE SDWAPARM TO ORIGINAL STATE   46875403
         NI    FRRTCNT,FF-FRRG40   TURN OFF 40 BYTE BLOCK REQUEST       46877403
         NI    FRRTCNT,FF-FRRG40-FRR160  RESET FLAGS.          @ZA24342 46877903
         LA    REG15,IECVXFRR      RESTORE R15                          46878403
         SPACE 1                                               @ZA06070 46878903
         TM    SDWARCDE-SDWA(REG1),SDWARETY  RETRY REQUESTED ? @ZA15705 46879103
         BZ    IECVXFRR            NO-RETURN TO TOP OF FRR SUB @ZA15705 46879403
         SPACE 1                                                        46882403
**************************************************************          46882603
*        THE 200 BYTE WA WILL BE FREED BY RTM BEFORE RETRY IS* @ZA15706 46882803
*        EXECUTED. SMGR RETRY LOGIC LOOKS AT THE FLAG BYTES. * @ZA15706 46883003
*        THE LAST 6 WORDS OF THE LLSA WILL BE TREATED AS THE * @ZA15706 46883203
*        SMGR FRR PARM AREA.  ONLY THE WORD CONTAINING THE   * @ZA15706 46883403
*        ASID AND FLAGS ARE MOVED (BYTES 56-59).  THE REST OF* @ZA15706 46883603
*        THIS PARM AREA MUST NOT BE ALTERED BY THIS ROUTINE. * @ZA15706 46883803
**************************************************************          46884003
         SPACE 1                                               @ZA15706 46884203
         L     WKREGA,FRRLLSA      LD LLSA PTR FROM REAL FRR   @ZA15706 46885203
         L     WKREGB,FRRASID      LOAD ASID AND FLAGS         @ZA15706 46885303
         LA    WKREG7,C48(WKREGA)  REPOINT SMGR FRR AREA PTR   @ZA15706 46885403
         ST    WKREGB,FRRASID      STORE ASID AND FLAGS        @ZA15706 46885503
         ST    WKREG7,SDWASR04-SDWA(REG1)  STORE NEW FRR PTR   @ZA15706 46885603
*                                          IN SDWA             @ZA15706 46885703
         SPACE 1                                               @ZA15706 46885803
         BR    REG14               RETURN TO RTM TO RETRY               46885903
         EJECT                                                          46886303
ATERMRTN DC    V(IECVXTRM)         ADDRESS OF PURGE RTN                 46886403
SMGRFRR  DC    V(IECVSMFR)         STORAGE MANAGER FRR ROUTINE          46888403
AX025    DC    V(IECVX025)         FREE RQE RTN                         46889403
ACCWXLAT DC    V(IECVTCCW)         CCW TRANSLATOR ADDRESS               46890403
ACCWXFRR DC    V(IECVTCFR)         RECOVERY RTN IN IECVTCCW    @YM04960 46891403
AOPT02   DC    V(IEA0PT02)         POST WITH VALIDITY CHECK             46892403
XPRZBITS DC    X'0000FFF0'         BITS TO SAVE SYS COM CODE-N @YM02855 46893403
EXPRVAL1 DC    V(IECVEXP1)         START- EXCP VAL CK RTN      @ZA12706 46893903
EXPRVAL2 DC    V(IECVEXP2)           END- EXCP VAL CK RTN      @ZA12706 46894403
EXPRVAL3 DC    V(IECVEXP3)         START- EXCP VALIDITY CK     @ZA12706 46895403
EXPRVAL4 DC    V(IECVEXP4)           END- EXCP VALIDITY CK     @ZA12706 46896403
EXPRVAL5 DC    V(IECVEXP5)         START- EXCP POST ECB VAL CK @ZA11892 46897403
EXPRVAL6 DC    V(IECVEXP6)           END- EXCP POST ECB VAL CK @ZA11892 46898403
XPR0C4   DC    X'0C40'             USED TO TEST FOR COM CODE   @YM02855 46902402
ABEND028 DC    X'0028'             ABEND CODE 028              @ZA16175 46908403
ABEND171 DC    X'0171'             ABEND CODE 171              @ZA16175 46914403
ABEND800 DC    X'0800'             ABEND CODE 800                       46922403
ZEROS    DC    X'00'               BYTE OF ZEROS                        46958402
         SPACE 3                                                        46958602
XPRVSAM  DEBCHK AM=VSAM,MF=L                                   @YM02921 46958802
XPRSUBSY DEBCHK AM=SUBSYS,MF=L                                 @YM02921 46959202
XPRTCAMP DEBCHK AM=TCAMAP,MF=L                                 @YM02921 46959402
         SPACE 2                                                        46959602
DUMPB00  SNAP  PDATA=(PSW,REGS,ALLPA,SPLS),                    @ZA15702*46959803
               SDATA=(NUC,SQA,LSQA,SWA,TRT),MF=L               @ZA15702 46960003
DUMPX00  SNAP  PDATA=(SPLS),SDATA=(TRT),MF=L                   @ZA15702 46960203
XPRENDFF DC    X'FFFFFF'           FF'S TO TEST END IOB CHAIN @YM05531  46960402
XPREND00 DC    X'000000'           00'S TO TEST END IOB CHAIN @YM05531  46961402
XPR254   DC    X'FE'               SP-254 FOR PIRL            @Y30IPLD  46961903
         CNOP  0,4                                             @ZA06070 46962103
XPRMODN  DC    C'IECVEXPR'         MODULE ID                   @ZA06070 46962203
         DC    CL8' UZ15531'       PTF NUMBER FOR 030/037      @ZA27884 46964203
PATCH    DC    4CL16'IECVEXPR PATCH'    ZAP AREA               @ZA08162 47014203
         END                                                            47064203
