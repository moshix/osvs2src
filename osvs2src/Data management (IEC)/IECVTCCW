TRAT     TITLE '    IECVTCCW -- CCW TRANSLATOR -- PROLOGUE'             00050002
*********************************************************************** 00100021
*                                                                     * 00150021
* MODULE NAME = IECVTCCW                                              * 00160002
*                                                                     * 00180002
* DESCRIPTIVE NAME = CCW TRANSLATOR                                   * 00190002
*                                                                     * 00194002
* COPYRIGHT = NONE                                                    * 00196002
*                                                                     * 00198402
* STATUS = RELEASE 2 LEVEL 0                                          * 00200002
*                                                                     * 00260002
* FUNCTION --                                                         * 00300021
*    THE CCW TRANSLATOR HAS THREE MAIN FUNCTIONS. THEY ARE:           * 00350021
*    1. TO TRANSLATE VIRTUAL CHANNEL PROGRAMS TO REAL AND TO FIX      * 00400021
*    ALL DATA AREAS IN CORE FOR THE DURATION OF THE I/O EVENT.        * 00450021
*    IT CREATES A COPY OF THE VIRTUAL CHANNEL PROGRAM (PASSED         * 00500021
*    TO IT BY ONE OF THE PROCESSORS, EG EXCP) IN FIXED VIRTUAL        * 00550021
*    STORAGE AND, AFTER FIXING DATA AREAS, TRANSLATES ADDRESSES       * 00600021
*    TO REAL STORAGE LOCATIONS.                                       * 00650021
*    2. TO RE-TRANSLATE ADDRESSES FROM THE REAL CHANNEL PROGRAM       * 00700021
*    (CREATED ABOVE) TO MAP BACK INTO THE VIRTUAL CHANNEL PROGRAM.    * 00750021
*    (EG. CSW ADDRESS).                                               * 00800021
*    3. TO UNFIX DATA AREAS UPON COMPLETION OF THE I/O EVENT AND      * 00850021
*    TO GATHER ALL WORKING STORAGE TOGETHER TO BE FREED.              * 00900021
*    4. TRANSLATE A SINGLE ADDRESS IN THE CCW CHAIN FROM VIRTUAL      * 00910002
*    CHAIN TO REAL CHAIN.                                             * 00920002
*                                                                     * 00950021
* NOTES = PATCH AREA ADDRESS - PATCH                                  * 00970802
*                                                                     * 00971602
*    DEPENDENCIES = NONE                                              * 00972402
*                                                                     * 00973202
*    RESTRICTIONS = NONE                                              * 00974002
*                                                                     * 00974802
*    REGISTER CONVENTIONS = 0 - REG0 - PARAMETER REGISTER 0           * 00975602
*                           1 - REG1 - PARAMETER REGISTER 1           * 00976402
*                           2 - REG2 - PARAMETER REGISTER 2           * 00977202
*                           3 - BASREG - BASE REGISTER FOR MODULE     * 00978002
*                           4 - UCBREG - UCB ADDRESS REGISTER         * 00978802
*                           5 - BEBREG - BEB ADDRESS BASE             * 00980002
*                           6 - WKREG1 - UTILITY REGISTER             * 00981002
*                           7 - WKREG2 - UTILITY REGISTER             * 00982002
*                           8 - WKREG3 - UTILITY REGISTER             * 00983002
*                           9 - CCWREG - BASE FOR THE CURRENT CCW     * 00984002
*                          10 - DATARG - DATA ADDRESS FOR CURRENT CCW * 00985002
*                          11 - TCCWREG - TCCW ADDRESS BASE           * 00986002
*                          12 - FIXREG - FIX LIST ADDRESS BASE        * 00987002
*                          12 - RTNREG - RETURN ADDRESS REGISTER      * 00990002
*                          14 - REG14 - RETURN ADDRESS REGISTER       * 00990202
*                          15 - REG15 - CALLING ADDRESS REGISTER      * 00990402
*                                                                     * 00990602
* MODULE TYPE = PROCEDURE                                             * 00990802
*                                                                     * 00991402
*    PROCESSOR = ASSEMBLER                                            * 00992002
*                                                                     * 00993002
*    MODULE SIZE = HEX A84 BYTES                                      * 00994002
*                                                                     * 00996002
*    ATTRIBUTES  =                                                    * 00998002
*     REENTRANT, KEY 0, SUPERVISOR STATE, RESIDENT.                   * 01000002
*     MAY BE CALLED BY A ROUTINE RUNNING AS AN SVC OR UNDER AN SRB.   * 01002002
*                                                                     * 01004002
* ENTRY POINT = IECVTCCW                                              * 01006002
*                                                                     * 01010002
*    PURPOSE = TRANSLATION ENTRY POINT. TCCWOPTN,A BYTE IN            * 01050002
*              THE TCCW BLOCK DESCRIBES THE WORK TO BE DONE.          * 01100002
*                                                                     * 01110002
*    LINKAGE =                                                        * 01150002
*      REGISTER 1 CONTAINS A POINTER TO A TCCW BLOCK SUCH THAT:       * 01200002
*         TCCWOPTN - 00 MEANS TRANSLATE CCWS AND UCB,TCB,BEB,         * 01250021
*                       PGLK,FVC CONTAIN VALID INFORMATION. BEB       * 01300021
*                       AND PGLK CONTAIN POINTERS TO 160 BYTE         * 01350021
*                       BLOCKS OF UNFORMATTED CORE.                   * 01400021
*         TCCWOPTN - 04 MEANS REAL TO VIRTUAL TRANSLATION REQUEST     * 01450021
*                       ON THE ADDRESS IN REGISTER 0.                 * 01500021
*         TCCWOPTN - 08 MEANS UNFIX AND CHAIN BLOCKS OF CORE.         * 01550021
*         TCCWOPTN - 0C MEANS SECOND ENTRY TO TRANSLATOR OPTION 00.   * 01600021
*                       REGISTER 0 CONTAINS ADDRESS OF 160 BYTE       * 01650021
*                       BLOCK OF UNFORMATTED CORE.                    * 01700021
*         TCCWOPTN - 10 MEANS VIRTUAL TO REAL SINGLE ADDRESS XLAT     * 01720002
*    REGISTER 14 CONTAINS RETURN ADDRESS.                             * 01750021
*    REGISTER 15 CONTAINS CCW TRANSLATOR ENTRY POINT.                 * 01800021
*                                                                     * 01810002
*                                                                     * 01820002
*    INPUT = TCCW                                                     * 01830002
*                                                                     * 01840002
*    OUTPUT = TRANSLATED CCW'S ATTACHED TO THE TCCW - CONTROL BLOCKS  * 01850002
*             CREATED AND ATTACHED TO THE TCCW INCLUDE THE BEB,FIX,   * 01860002
*             AND IDAL.                                               * 01870002
*                                                                     * 01880002
*    EXIT-NORMAL = REGISTER 15 CONTAINS A RETURN CODE SUCH THAT:      * 01900002
*         RETURN CODE 0 - TRANSLATION IS COMPLETED SUCCESSFULLY.      * 01950021
*                         REGISTER 1 CONTAINS THE ADDRESS OF THE      * 02000021
*                         TCCW IN WHICH THE VIRTUAL ADDRESS OF THE    * 02050021
*                         FIRST REAL CCW ADDRESS MAY BE FOUND AT      * 02100021
*                         TCCWFRC AND THE CORRESPONDING REAL ADDRESS  * 02150021
*                         OF THE SAME FIELD IS IN REGISTER 0.         * 02200021
*                         FOR OPTION 4, REGISTER 0 CONTAINS THE       * 02250021
*                         VIRTUAL ADDRESS OF THE VIRTUAL CCW.         * 02300021
*         RETURN CODE 4 - TRANSLATION ERRORS FOUND. REGISTER 1        * 02350021
*                         CONTAINS A CHAIN OF BLOCKS TO BE FREED      * 02400021
*                         THE FIRST BLOCK IN THE CHAIN IS THE TCCW    * 02450021
*                         AND TCCWOPTN DESCRIBES THE ERROR THAT       * 02500021
*                         THAT OCCURRED. OPTION 4 - ADDRESS           * 02550021
*                         PASSED WAS NOT WITHIN BOUNDARIES OF REAL    * 02600021
*                         CHANNEL PROGRAM.                            * 02650021
*         RETURN CODE 8 - PAGES HAVE BEEN UNFIXED - FREE ALL BLOCKS   * 02700021
*                         IN CHAIN OFF OF REGISTER 1.                 * 02750021
*         RETURN CODE C - REGISTER 1 CONTAINS THE ADDRESS OF TCCW     * 02800021
*                         WITH TCCWOPTN SET FOR RE-ENTRY. CALLER      * 02850021
*                         IS TO GET A 160 BYTE BLOCK OF STORAGE AND   * 02900021
*                         PASS IT BACK TO THE TRANSLATOR.             * 02950021
*                                                                     * 03000021
*    EXIT-ERROR = SEE NORMAL EXIT RC=4                                * 03010002
*                                                                     * 03020002
* EXTERNAL REFERENCES = SEE BELOW                                     * 03050002
*                                                                     * 03060002
*    ROUTINES =                                                       * 03070002
*     IEAVPSIX - ROUTINE WHICH FIXES VIRTUAL STORAGE PAGES.           * 03100002
*     IEAVPSIF - ROUTINE WHICH UNFIXES VIRTUAL STORAGE PAGES.         * 03101002
*                                                                     * 03102002
*    DATA AREAS = BEB,FIX LIST,IDAL                                   * 03110002
*                                                                     * 03120002
*    CONTROL BLOCKS = TCCW                                            * 03130002
*                                                                     * 03150021
* TABLES=                                                             * 03500002
*     TCCW - TRANSLATION CONTROL BLOCK - IECDTCCW                     * 03550021
*     BEB - BEGIN END BLOCK - IECDBEB                                 * 03600021
*     FIX - FIX LIST - IECDFIX                                        * 03650021
*     IDAL - INDIRECT ADDRESS LIST - IECDIDAL                         * 03700021
*                                                                     * 03800021
* MACROS = NONE                                                       * 03962002
*                                                                     * 03964002
* CHANGE ACTIVITY =                                                   * 03970002
*    NEW MODULE FOR VS2/2                                             * 03980002
*                                                                     * 03985002
*********************************************************************** 04050021
         PRINT OFF                                                      04060002
*/*IECVTCCW: CHART */                                                   04062002
*/* HEADER  PAGE #                                                      04064002
*/*                    CCW TRANSLATOR                                   04066002
*/*                                                      PAGE # */      04066402
*/*IECVTCCW: E ENTRY FROM DRIVER */                                     04068002
*/* P SAVE REGS, ESTABLISH ADDRESSABILITY */                            04068402
*/* P ESTABLISH TCCW BASE REGISTER */                                   04068802
*/* P (+0,TCCWI000,+4,TCCWR000,+8,TCCWU000,+12,TCCWG000,+16,TCCWX000)   04069202
*/*USING TCCWOPTN, BRANCH TO REQUESTED ROUTINE */                       04069602
*/*TCCWG000: P LOAD POINTER TO ADDRESS TO GO TO */                      04069702
*/* R GO TO ROUTINE WANTING BLOCK */                                    04069802
*/*TCCWI000: P STORE FIRST BEB POINTER AS CURRENT */                    04069902
*/* P INITIALIZE FIRST BEB, VIRTUAL START, REAL START */                04079902
*/* P INITIALIZE FIX LIST WITH ZERO CHAIN AND FIRST ENTRY */            04089902
*/* P STORE FIRST REAL CCW POINTER IN TCCW, CURRENT REAL POINTER */     04093202
*/* P STORE CURRENT FIX ENTRY, ZERO IDAL PTR AND TIC LIST */            04095202
*/* P SET CURRENT VIRTUAL CCW TO FIRST VIRTUAL CCW */                   04095602
*/* P SET NUMBER OF CCWS WHICH CAN FIX INTO A BEB, ZERO IDAL COUNT */   04096002
*/* P ZERO REMAINING FIELDS IN TCCW */                                  04096402
*/*TCCWS000: D (NO,TCCWM300,YES,) ANY ROOM IN BEB FOR NEXT CCW */       04096502
*/* P LOAD POINTERS TO VIRTUAL AND REAL CCWS */                         04096602
*/* P INITIALIZE DATA ADDRESS REGISTER */                               04109902
*/* P MOVE VIRTUAL CCW TO REAL CCW AREA */                              04119902
*/* P SET NUMERIC PORTION OF COMMAND CODE AS EFFECTIVE CODE */          04121902
*/* D (NO,TCCWS020,YES,) COMMAND A TIC */                               04122302
*/* P (,TCCWS260) CALCULATE AND STORE POSSIBLE REAL TIC TO ADDRESS */   04122702
*/*TCCWS020: D (NO,TCCWS040,YES,) DATA CHAINING IN PREVIOUS CCW */      04123102
*/* P MAKE EFFECTIVE CODE EQUAL TO PREVIOUS COMMAND CODE */             04123202
*/*TCCWS040: D (YES,TCCWS080,NO,) DATA ADDRESS REQUIRE XLATION */       04123302
*/* D (YES,TCCWS075,NO,) STATUS MODIFIER CCW ? */                       04124302
*/* D (YES,TCCWS055,NO,) CONTROL COMMAND CCW ? */                       04125302
*/* D (YES,,NO,TCCWS050) UNIT RECORD DEVICE ? */                        04127702
*/* P INDICATE A CONTROL COMMAND IN REAL CCW. */                        04128202
*/* D (YES,TCCWS080,NO,) 3211 DEVICE ? */                               04128702
*/* D (YES,TCCWS080,NO,) 1287 DEVICE ? */                               04129202
*/* D (YES,TCCWS080,NO,TCCWS070) 1288 DEVICE ? */                       04131702
*/*TCCWS050: D (YES,,NO,TCCWS055) IS IT A DISPLAY COMMAND ? */          04132102
*/* D (YES,TCCWS075,NO,) 3890 DEVICE ? */                               04132602
*/*TCCWS055: P INDICATE A CONTROL COMMAND IN REAL CCW. */               04133102
*/* D (YES,,NO,TCCWS070) COMMUNICA - TIONS DEVICE ? */                  04133602
*/* D (YES,,NO,TCCWS080) 2955 DEVICE ? */                               04134102
*/*TCCWS070: P (,TCCWS260) ZERO DATA ADDRESS. */                        04134602
*/*TCCWS075: P INDICATE STATUS MODIFIER IN REAL CCW. */                 04135102
*/*TCCWS080: D (NO,TCCWS100,YES,) SKIP DATA XFER BIT IN CCW ON */       04135602
*/* D (YES,TCCWS100,NO,) IS IT A WRITE COMMAND */                       04136602
*/* P (,TCCWS260) SET DATA ADDRESS EQUAL TO DATA LENGTH */              04137602
*/*TCCWS100: D (NO,TCCWS120,YES,) READ BACKWARDS COMMAND */             04138602
*/* P (,TCCWS140) CALCULATE BEGINNING AND ENDING ADDRESSES OF AREA */   04140602
*/*TCCWS120: P CALC BEGINNING AND ENDING ADDRESSES OF DATA AREA */      04142602
*/*TCCWS140: D (NO,TCCWS160,YES,) DATA LENGTH ZERO */                   04144602
*/* P (,TCCWS240) SET START AND END ADDRESSES THE SAME */               04146602
*/*TCCWS160: D (NO,TCCWM000,YES,) DATA AREA WITHIN BOUNDS FIXED */      04148602
*/*TCCWS200: P SAVE START AND END OF DATA ADDRESS */                    04152802
*/* P TRUNCATE START AND END TO PAGE BOUNDARIES */                      04162802
*/* D (YES,TCCWM400,NO,) MORE THAN ONE PAGE IN DATA AREA */             04164802
*/*TCCWS240: P (FAIL,TCCWM000,OK,) XLATE DATA ADDRESS TO REAL */        04168702
*/*TCCWS260: P INCREMENT TO NEXT REAL AND VIRTUAL CCW AREAS */          04170702
*/* P DECREMENT NO OF REAL CCW AREAS IN BEB BY ONE */                   04171102
*/* D (NO,TCCWS280,YES,) WAS THIS CCW A TIC */                          04171502
*/* P (,TCCWM100) STORE VIRTUAL TIC ADDR IN TCCW */                     04171902
*/*TCCWS280: D (YES,TCCWS300,NO,) CHAINING IN CCW */                    04172302
*/* D (YES,TCCWS300,NO,) WAS PREVIOUS CCW A STATUS MODIFIER */          04172402
*/*TCCWS290: P (,TCCWM200) SET REAL END AND VIRTUAL END IN BEB */       04172502
*/*TCCWS300: D (YES,TCCWS320,NO,) DATA CHAINING IN PREVIOUS CCW */      04172602
*/* P STORE OP-POINTER AND CCW COMMAND CODE IN TCCW */                  04176502
*/*TCCWS320: D (YES,TCCWS000,NO,) DATA CHAINING */                      04178502
*/* P (,TCCWS000) SET COMMAND CODE IN TCCW TO ZERO */                   04178902
*/*TCCWM000: P ROUND BEGINNING AND END OF AREA TO PAGE BOUNDARIES */    04179302
*/* P SET LOW AND HIGH COMPARE ADDRESSES */                             04179702
*/* P POINT TO BEGINNING OF FIX LIST */                                 04180102
*/*TCCWM010: P INCREMENT TO NEXT ENTRY */                               04180202
*/*TCCWM015: D (YES,TCCWM030,NO,) LAST ENTRY IN FIX LIST */             04180302
*/* D (YES,TCCWM020,NO,) CONTINUATION ENTRY */                          04180402
*/* D (YES,TCCWM010,NO,) NEW START LT ENTRY START */                    04184302
*/* D (YES,TCCWM010,NO,TCCWS200) NEW END GT ENTRY END */                04186302
*/*TCCWM020: P (,TCCWM015) LOAD CONTINUATION POINTER */                 04186702
*/*TCCWM030: P LOAD POINTER TO PAGE FIX LIST */                         04187102
*/*TCCWM040: D (NO,TCCWM050,YES,) ANOTHER FIX BLOCK */                  04187502
*/* P (,TCCWM040) LOAD POINTER TO NEXT BLOCK */                         04187902
*/*TCCWM050: P FIND END OF FIX BLOCK */                                 04188002
*/* D (NO,TCCWM060,YES,) SPACE IN FIX LIST GONE */                      04188102
*/* P BACK UP A FIX ENTRY AND RESET LAST ENTRY INDICATOR */             04188202
*/* P SET UP TO GET A BLOCK OF STORAGE FROM CALLER */                   04198502
*/*TCCWM055: L GET 160 BYTE BLOCK */                                    04208502
*/* P RELOAD REGISTER CONTENTS BEFIRE GETTING THE BLOCK */              04208602
*/* P CHAIN NEW BLOCK TO CURRENT FIX LIST BLOCK */                      04208702
*/* P SET CONTINUATION POINTER IN LAST BLOCK */                         04212102
*/*TCCWM060: P STORE FIX ENTRY IN LIST */                               04214102
*/*TCCWM062: P ACCESS EACH PAGE. */                                     04214202
*/*TCCWM063: P RESTORE FIX REGISTERS */                                 04214302
*/* P ZERO LAST ENTRY INDICATOR IN LAST BLOCK */                        04214502
*/* P LOAD ADDRESS OF ECB, TCB */                                       04214902
*/* P SET REGISTERS FOR FIX ENTRY REGISTER TYPE */                      04215302
*/* L IEAVPSIB: FIX THE PAGES IN THE FIX ENTRY */                       04215402
*/* D (0,TCCWM090,N-0,) RETURN CODE */                                  04215502
*/* D (YES,TCCWM070,NO,) RETURN CODE 8 */                               04215602
*/*TCCWM065: P SET FIX ERROR INDICATOR */                               04219002
*/* P (,TCCWU000) SET END OF ENTRIES IN PREV ENTRY */                   04221002
*/*TCCWM070: P GET CURRENT ENTRY IN REGISTERS */                        04221402
*/* P SET INDICATOR FOR FIX PROCESS USED BY EXCP FRR */                 04221502
*/*TCCWM075: P ACCESS THE PAGE IN ENTRY */                              04221802
*/* P INCREMENT TO NEXT PAGE */                                         04222202
*/* D (NO,TCCWM075,YES,) FINISHED WITH THE ENTRY */                     04222302
*/* P RESET FIX PROCESS INDICATOR */                                    04223702
*/* D (YES,TCCWM065,NO,) ECB POSTED IN ERROR */                         04225102
*/*TCCWM090: P RESET ECB IN USE FLAG */                                 04226502
*/* P (,TCCWS200) INCREMENT ENTRY POINTER AND STORE IN TCCW */          04227902
*/*TCCWM100: P SET REAL END AND VIRTUAL END IN BEB */                   04229302
*/* D (NO,TCCWM130,YES,) TIC TO ADDRESS ON DOUBLE WORD BDY */           04230702
*/* D (YES,TCCWM120,NO,) TIC LESS THAN START ADDRESS */                 04232102
*/*TCCWM110: D (LOW,TCCWM150,EQ,TCCWM160,HI,) COMPARE TIC ADDR WITH     04234902
*/*NEXT CCW */                                                          04235302
*/*TCCWM120: P PLACE TIC ON UNRESOLVED TIC LIST */                      04237702
*/*TCCWM130: P GET THE COMMAND CODE FROM PREVIOUS CCW */                04239102
*/*TCCWM140: D (NO,TCCWM200,YES,) WAS IT A STATUS MODIFIER */           04240502
*/* P (,TCCWS000) RESET OP POINTER TO STATUS MODIFIER */                04241902
*/*TCCWM150: P (,TCCWM140) POINT TO POSSIBLE LOC OF STATUS MODIFIER */  04242302
*/*TCCWM160: D (YES,TCCWS000,N0,) ROOM FOR MORE THAN 1 CCW */           04242702
*/* P (,TCCWM305) SET NEW VIRT CCW ADDR */                              04243102
*/*TCCWM200: D (NO,TCCWM900,YES,) TIC ON UNRESOLVED TIC LIST */         04243302
*/* P GET THE ADDRESS OF FIRST BEB */                                   04244702
*/*TCCWM210: P GET REAL ADDRESS OF REAL START */                        04246102
*/* D (YES,TCCWM220,NO,) TIC ON SAME PAGE */                            04247502
*/* P (,TCCWM210) GET POINTER TO NEXT BEB */                            04248902
*/*TCCWM220: P CONVERT REAL ADDRESS TO VIRTUAL */                       04250302
*/* P MOVE NEXT TIC ADDRESS TO TCCW */                                  04251702
*/* P GET TIC VIRTUAL ADDRESS */                                        04253102
*/* P LOAD POINTER TO FIRST BEB */                                      04254502
*/*TCCWM225: D (LOW,TCCWM230,NL,) TIC LESS THAN START ADDRESS */        04255902
*/* D (LOW,TCCWM260,NL,) TIC LESS THAN ENDING ADDRESS */                04257302
*/*TCCWM230: D (NO,TCCWM240,YES,) SECOND SET OF POINTERS USED */        04258702
*/* D (LOW,TCCWM240,NL,) TIC LESS THAN SECOND START ADDR */             04260102
*/* D (LOW,TCCWM250,NL,) TIC LESS THAN SECOND END ADDR */               04261502
*/*TCCWM240: D (NO,TCCWM270,YES,) ANOTHER BEB IN CHAIN */               04262902
*/* P (,TCCWM225) LOAD POINTER TO NEXT BEB IN CHAIN */                  04264302
*/*TCCWM250: P ADJUST BEB POINTER TO SECOND SET OF POINTERS */          04265702
*/*TCCWM260: P GET REAL ADDRESS OF REAL START TO CALCULATE OFFSET */    04267102
*/* P (,TCCWM200) STORE REAL ADDRESS IN TIC AND SET TO TIC */           04268502
*/*TCCWM270: D (NO,TCCWM280,YES,) SECOND SET OF POINTERS AVAILABLE */   04276202
*/* D (NO,TCCWM280,YES,) ROOM FOR AT LEAST 3 CCWS LEFT */               04278202
*/* P (,TCCWM298) SET BASE UP TO SECOND PTRS , SET REAL START AND INDIC 04280202
*/* 2ND USED */                                                         04280302
*/*TCCWM280: P SET UP TO GET A BLOCK FROM CALLER */                     04281102
*/* L GET 160 BYTE BLOCK */                                             04281502
*/*TCCWM290: P SET UP REGS TO BEFORE GOT BLOCK */                       04281902
*/*TCCWM295: P ZERO 12 WORDS OF NEW BLOCK */                            04282302
*/* P CHAIN NEW BLOCK TO LAST BLOCK, SET NEW LOOP COUNT */              04282702
*/* P UPDATE POINTER TO REAL START AND STORE IT IN TCCW AND BEB */      04285602
*/*TCCWM298: P SET VIRTUAL START ADDRESS IN BEB AND TCCW */             04287602
*/* P (,TCCWS000) SET NEW CURRENT REAL ADDRESS IN TCCW AND TIC */       04289602
*/*TCCWM300: P STORE VIRTUAL ENDING ADDRESS IN BEB */                   04290002
*/*TCCWM305: P STORE REAL ENDING ADDRESS IN BEB */                      04290102
*/* P SAVE ENVIRONMENT ACROSS GET OF BLOCK */                           04290402
*/* L GET A 160 BYTE BLOCK FROM CALLER */                               04290802
*/*TCCWM310: P RESTORE ENVIRONMENT BEFORE CALL */                       04291202
*/*TCCWM320: P CLEAR 12 WORDS OF NEW BLOCK */                           04291302
*/* P CHAIN NEW BLOCK TO LAST ONE */                                    04293402
*/* P POINT TO 2ND TO LAST CCW AND INDIC 2 TICS NEEDED */               04303402
*/* D (YES,TCCWM340,NO,) STATUS MODIFIER COMMAND */                     04313402
*/* P INCREMENT PTR TO NEXT CCW AND INDIC 1 TIC NEEDED */               04315402
*/*TCCWM340: P STORE PTR AS NEW REAL END PTR */                         04317402
*/* P CALCULATE AND STORE NEW VIRTUAL END PTR */                        04319402
*/* P SET NEW BEB AS CURRENT IN TCCW */                                 04321402
*/* P INITIALIZE POINTER IN NEW BEB */                                  04321502
*/* P (,TCCWS000) SET TIC TO NEW BEB */                                 04322402
*/*TCCWM400: P CALCULATE NUMBER OF IDAL WORDS REQUIRED */               04324602
*/* D (NO,TCCWM500,YES,) ENOUGH FOR THIS IDAL */                        04325502
*/*TCCWM405: P SET INCREMENT TO TWO K */                                04326402
*/* D (NO,TCCWM410,YES,) COMMAND A READ BACKWARDS */                    04327302
*/* P CHANGE INCREMENT TO NEGATIVE */                                   04328202
*/* P (,TCCWM420) INTERCHANGE DATA START, END ADDRESSES AND ROUND */    04329102
*/*TCCWM410: P TRUNCATE 2 K FROM ENDING ADDRESS */                      04330002
*/*TCCWM420: P SET INDIRECT ADDRESS FLAG IN CCW */                      04330902
*/* P STORE IDAL REAL ADDRESS IN CCW */                                 04331802
*/* P LOAD POINTER TO IDAL START */                                     04332702
*/*TCCWM425: P TRANSLATE START ADDRESS TO REAL */                       04333602
*/* P MOVE START TO IDAL AREA */                                        04334502
*/* P INCREMENT INDEX AND DECREMENT LOOP COUNT */                       04335402
*/* D (NO,TCCWM430,YES,) READ BACKWARD COMMAND */                       04336302
*/* P (,TCCWM440) ROUND RESULT UP TO END OF PAGE */                     04337202
*/*TCCWM430: P TRUNCATE RESULT TO PAGE BOUNDARY */                      04338102
*/*TCCWM440: D (YES,TCCWM450,NO,) START AND END ADDRESSES MATCH */      04339002
*/* P (,TCCWM425) INCREMENT BY 2 K TO DO NEXT ENTRY */                  04339902
*/*TCCWM450: D (YES,,NO,TCCWM455) PIC 10 OCCUR WHILE FIXING ?*/         04340202
*/* P DECREMENT INDIRECT LOOP COUNT BY 1. */                            04340502
*/*TCCWM455: P STORE INDIRECT LOOP COUNT RESULT */                      04340803
*/*TCCWM455: P STORE INDIRECT LOOP COUNT RESULT */                      04346202
*/* P (,TCCWS260) STORE INDIRECT RECEIVER RESULT */                     04346602
*/*TCCWM500: P SAVE ENVIRONMENT ACROSS GET */                           04347102
*/* L GET A 160 BYTE BLOCK FROM CALLER */                               04348002
*/*TCCWM510: P SET ADDRESS OF IDAL LIST POINTER */                      04348902
*/*TCCWM520: D (YES,TCCWM530,NO,) IS CHAIN POINTER ZERO */              04349302
*/* P (,TCCWM520) LOAD POINTER TO CHAIN POINTER */                      04349802
*/*TCCWM530: P STORE NEW CHAIN POINTER */                               04350702
*/* P ZERO CHAIN POINTER IN NEW BLOCK */                                04351602
*/* P SET NUMBER OF ENTRIES IN NEW BLOCK */                             04352502
*/* P RESTORE ENVIRONMENT BEFORE GET */                                 04352902
*/* P (,TCCWM405) INITIALIZE NUMBER OF ENTRIES REGISTER */              04353402
*/*TCCWR000: P ZERO HIGH BYTE OF ADDRESS TO BE COMPARED */              04354302
*/* P LOAD POINTER TO FIRST BEB IN CHAIN */                             04355202
*/*TCCWR100: D (LOW,TCCWR200,NL,) CCW ADDR LESS THAN REAL START */      04355602
*/* D (NH,TCCWR400,HIGH,) CCW ADDRESS GREATER THAN END ADDR */          04356102
*/* D (NO,TCCWR200,YES,) SECOND SET OF POINTERS USED */                 04357002
*/* D (NH,TCCWR300,HIGH,) CCW ADDR GREATER THAN SECOND END */           04357902
*/*TCCWR200: P GET POINTER TO NEXT BEB IN CHAIN */                      04358802
*/* D (YES,TCCWR100,NO,TCCWRC4) ANOTHER BEB */                          04359202
*/*TCCWR300: P INCREMENT TO SECOND SET OF POINTERS */                   04359702
*/*TCCWR400: P CALCULATE OFFSET INTO BLOCK */                           04360602
*/* P ADD THAT TO VIRTUAL START TO GET VIRTUAL CCW ADDRESS */           04361502
*/* P (,TCCWE0R0) PLACE ADDRESS IN PARAMETER REGISTER */                04361902
*/*TCCWU000: P GET FIX LIST POINTER FROM TCCW */                        04362402
*/* P ZERO ECB POINTER */                                               04363302
*/* D (NO,TCCWU050,YES,) ECB IN USE */                                  04364202
*/* P LOAD ADDRESS OF THE ECB */                                        04365102
*/*TCCWU050: D (NO,TCCWU500,YES,) ANY FIX LIST ENTRIES */               04366002
*/* P SET UP FOR UNFIX */                                               04366902
*/* L IEAVPSIB: UNFIX ENTRIES IN FIX LIST */                            04367802
*/* D (NO,TCCWU500,YES,) WAS ECB REQUIRED */                            04368702
*/* P SET ONE PAGE INCREMENT REGISTER */                                04369602
*/*TCCWU100: D (YES,TCCWU400,NO,) CONTINUATION POINTER */               04370502
*/*TCCWU200: P LOAD ADDRESS OF FIRST PAGE */                            04371402
*/*TCCWU300: P ACCESS THE PAGE */                                       04371502
*/* P INCREMENT TO NEXT PAGE IN ENTRY */                                04371802
*/* D (NO,TCCWU300,YES,) END OF ENTRY */                                04372202
*/* D (YES,TCCWU500,NO,) LAST ENTRY */                                  04372302
*/* P (,TCCWU100) INCREMENT TO NEXT ENTRY */                            04374602
*/*TCCWU400: P (,TCCWU200) LOAD CONTINUATION POINTER */                 04376602
*/*TCCWU500: P MOVE IDAL BLOCKS TO FREE CHAIN */                        04378602
*/* S TCCWU900: SEARCH FOR END OF CHAIN */                              04379002
*/* P MOVE FIX LIST TO END OF IDAL CHAIN */                             04379102
*/* S TCCWU900: SEARCH FOR END OF CHAIN */                              04379202
*/* P MOVE BEBS TO END OF FIX CHAIN */                                  04380902
*/* D (YES,TCCWRC4,NO,TCCWRC8) ERROR OCCUR IN TRANSLATION */            04382902
*/*TCCWU900: D (YES,%HERE,NO,) END OF CHAIN */                          04383302
*/* P (,TCCWU900) GET POINTER TO NEXT BLOCK */                          04383702
*/*%HERE: R RETURN TO MAIN ROUTINE */                                   04384102
*/*TCCWX000: P ZERO HIGH BYTE OF ADDRESS TO BE COMPARED */              04384202
*/* P LOAD ADDRESS OF FIRST BEB */                                      04384302
*/*TCCWX100: D (LOW,TCCWX200,NL,) CCW ADDRESS LESS THAN VIRT START */   04384402
*/* D (LOW,TCCWX400,NL,) CCW ADDR LESS THAN END ADDR */                 04386102
*/* D (NO,TCCWX200,YES,) SECOND SET OF POINTERS USED */                 04388102
*/* D (LOW,TCCWX300,NL,) CCW ADDR LESS THAN 2ND END */                  04388502
*/*TCCWX200:P LOAD POINTER TO NEXT BEB */                               04388902
*/* D (YES,TCCWX100,NO,) ANOTHER BEB IN CHAIN */                        04389302
*/* P (,TCCWRC4) SET TRANSLATE ERROR */                                 04389402
*/*TCCWX300: P INCREMENT TO SECOND POINTERS */                          04389502
*/*TCCWX400: P CALCULATE OFFSET INTO BLOCK */                           04389602
*/* P CALCULATE REAL CCW ADDR USING REAL START */                       04390102
*/* P (,TCCWE0R0) PLACE ADDRESS IN PARAMETER REG */                     04390502
*/*TCCWM900: P GET THE FIRST REAL CCW REAL ADDRESS IN REG 0 */          04390902
*/*TCCWE0R0: P SET OPTION BYTE TO ZERO SAYING OK */                     04391002
*/* P (,TCCWEXIT) ZERO REG 15 FOR RETURN CODE */                        04391102
*/*TCCWRC4: P (,TCCWEXIT) SET RETURN CODE 4 IN REG 15 */                04392802
*/*TCCWRC8: P (,TCCWEXIT) SET RETURN CODE 8 IN REG 15 */                04394802
*/*TCCWGETM: P SET RETURN CODE 12 IN REG 15 */                          04395202
*/* P SET GETMAIN RETURN IN TCCWOPTN */                                 04395602
*/*TCCWEXIT: P RESTORE REGISTERS 1 - 14 */                              04396002
*/* R RETURN TO CALLER */                                               04396402
*/*IECVTCFR: E ENTRY FROM EXCP'S FRR */                                 04396602
*/* D (YES,TCCWM065,NO,) WAS FIRST PAGE INVALID ? */                    04398302
*/* D (YES,TCCWM065,NO,) KEY ZERO CALLER ? */                           04399302
*/* P TURN ON PIC 10 FLAG. */                                           04400302
*/* P STORE PIC 10 ADDRESS AS HIGH ADDRESS IN FIX LIST. */              04401302
*/* P STORE NEW HIGH COMPARE ADDRESS. */                                04402302
*/* P (,TCCWM063) GET HIGHEST VALID ADDRESS IN WKREG2. */               04403302
         PRINT ON                                                       04404302
         TITLE '    IECVTCCW -- CCW TRANSLATOR -- DSECTS'               04410802
         IECDTCCW                                                       04420602
         EJECT                                                          04430402
         IECDBEB                                                        04434402
         EJECT                                                          04440202
         IECDFIX                                                        04450002
         EJECT                                                          04456002
         IECDIDAL                                                       04462002
         EJECT                                                          04466003
         IKJTCB                                                         04470002
         EJECT                                                          04500021
UCB      DSECT                                                          04550021
         IEFUCBOB                                                       04600021
         EJECT                                                          04650021
CCWD     DSECT                                                          04700021
*********************************************************************** 04750021
*                                                                     * 04800021
* THIS DSECT DESCRIBES THE CCW AND ITS USE. THE FLAGS ARE NAMED       * 04850002
* SO THEY MAY BE REFERENCED IN CODE.                                  * 04900021
*                                                                     * 04950021
*********************************************************************** 05000021
         SPACE 2                                                        05050021
CCW      DS    0D                  CCW IS A DOUBLE WORD                 05100021
CCWCMD   DS    X                   COMMAND CODE                         05150021
CCWRITE  EQU   X'01'               WRITE COMMAND                        05200021
CCWRDBK  EQU   X'0C'               READ BACKWARDS COMMAND               05250021
TIC      EQU   X'08'               TIC COMMAND                          05300021
CCWNOP   EQU   X'03'               NO-OP COMMAND               @ZA05348 05320003
         SPACE 1                                                        05350021
CCWDATA  DS    AL3                 DATA ADDRESS                         05400021
CCWFLAG  DS    XL1                 FLAGS                                05450002
*        FLAG BITS FOR CHAINING                                         05500021
CCWDC    EQU   X'80'               DATA CHAINING                        05550021
CCWCC    EQU   X'40'               COMMAND CHAINING                     05600021
CCWSKIP  EQU   X'10'               SKIP BIT                             05650021
CCWIDA   EQU   X'04'               INDIRECT ADDRESS LIST USED           05700021
         SPACE 1                                                        05750021
CCWUNU   DS    XL1                 UNUSED BY CHANNEL, USED FOR          05760002
*                                  TRANSLATION FLAGS                    05770002
*        TRANSLATION FLAGS                                              05780002
CCWSTATM EQU   X'80'               STATUS MODIFIER COMMAND              05790002
CCWCTRLC EQU   X'40'               CONTROL COMMAND                      05792002
         SPACE 1                                                        05794002
CCWCNT   DS    XL2                 NUMBER OF BYTES TRANSFERED           05800021
CCWLENG  EQU   8                   CCW LENGTH                           05850021
         TITLE '    IECVTCCW -- CCW TRANSLATOR -- EQUATES'              05900002
*********************************************************************** 05950021
*                                                                     * 06000021
*                        REGISTER DEFINITIONS                         * 06050021
*                                                                     * 06100021
*********************************************************************** 06150021
         SPACE 2                                                        06200021
REG0     EQU   0                   PARAMETER REGISTER 0                 06250021
REG1     EQU   1                   PARAMETER REGISTER 1                 06300021
REG2     EQU   2                   PARAMETER REGISTER 2                 06350021
BASREG   EQU   3                   BASE REGISTER FOR MODULE             06400021
UCBREG   EQU   4                   UCB ADDRESS REGISTER                 06450002
BEBREG   EQU   5                   BEB ADDRESS BASE                     06500021
WKREG1   EQU   6                   UTILITY REGISTER                     06550021
WKREG2   EQU   7                   UTILITY REGISTER                     06600021
WKREG3   EQU   8                   UTILITY REGISTER                     06650021
CCWREG   EQU   9                   BASE FOR THE CURRENT CCW             06700021
DATARG   EQU   10                  DATA ADDRESS FOR CURRENT CCW         06750021
TCCWREG  EQU   11                  TCCW ADDRESS BASE                    06800021
FIXREG   EQU   12                  FIX LIST ADDRESS BASE                06850021
RTNREG   EQU   13                  RETURN ADDRESS REGISTER              06900021
REG14    EQU   14                  RETURN ADDRESS REGISTER              06950021
REG15    EQU   15                  CALLING ADDRESS REGISTER             07000021
         SPACE 4                                                        07020003
*        MISCELLANEOUS EQUATES                                          07100021
C0       EQU   0                   DISPLACEMENT OF 0                    07150021
C1       EQU   1                   DISPLACEMENT OF 1                    07200021
C2       EQU   2                   DISPLACEMENT OF 2                    07250021
C3       EQU   3                   DISPLACEMENT OF 3                    07300021
C4       EQU   4                   DISPLACEMENT OF 4                    07350021
C5       EQU   5                   DISPLACEMENT OF 5                    07400021
C6       EQU   6                   DISPLACEMENT OF 6           @ZA16175 07420003
C8       EQU   8                   DISPLACEMENT OF 8                    07450021
C12      EQU   12                  DISPLACEMENT OF 12                   07500021
C16      EQU   16                  DISPLACEMENT OF 16                   07550021
C30      EQU   30                  DISPLACEMENT OF 30                   07560002
C31      EQU   31                  DISPLACEMENT OF 31                   07600021
C32      EQU   32                  DISPLACEMENT OF 32          @ZA16169 07605003
C48      EQU   48                  DISPLACEMENT OF 48                   07610002
         EJECT                                                          07630003
F0       EQU   X'F0'               MASK OF F0                           07700021
FC       EQU   X'FC'               MASK OF FC                  @ZA08128 07720003
FF       EQU   X'FF'               MASK OF FF                           07750021
HIORDBYT EQU   8                   MASK FOR HIGH ORD BYTE OF REG        07800021
LORD3BYT EQU   7                   MASK FOR ADDRESS PORTION OF REG      07850021
DBLWD    EQU   7                   MASK TO TEST FOR DOUBLE WORD BDY     07900021
TWOKEX   EQU   11                  SHIFT VALUE FOR TWO K                07950021
TWOK     EQU   2048                VALUE OF TWO K                       08000021
X00      EQU   X'00'               ZERO MASK USED TO ACCESS PG @ZA01894 08080003
         SPACE 2                                                        08080503
******** UNIT RECORD DEVICE TYPE EQUATES ********************* @ZA12710 08081003
UR3211   EQU   X'09'               3211 PRINTER                @ZA12710 08082003
UR3890   EQU   X'16'               3890 MICR                   @ZA12710 08083003
UR3886   EQU   X'17'               3886 OPTICAL CHAR READER    @ZA12710 08084003
UR3895   EQU   X'19'               3895 PRINTER                @ZA16170 08084503
UR1287   EQU   X'1B'               1287 OPTICAL READER         @ZA12710 08085003
UR1288   EQU   X'1C'               1288 OPTICAL READER         @ZA12710 08086003
UR3851   EQU   X'42'               3851 MASS STORAGE CONTROL   @ZA12710 08087003
UR3800   EQU   X'0E'               3800 PRINTER                @ZA12710 08087303
UR3540   EQU   X'44'               3540 DISKETTE               @ZA12708 08087603
         SPACE 1                                               @ZA12710 08088003
******** COMMAND CODES IN TCCW OP TABLE THAT HAVE THE          @ZA12710 08089003
*        UNIQUE BIT SET FOR UNIT RECORD DEVICES                @ZA12710 08090003
CMD01    EQU   X'01'               WRITE   COMMAND CODE 01     @ZA16170 08090503
CMD09    EQU   X'09'               WRITE   COMMAND CODE 09     @ZA16180 08090603
CMD23    EQU   X'23'               CONTROL COMMAND CODE 23     @ZA12710 08091003
CMD33    EQU   X'33'               CONTROL COMMAND CODE 33     @ZA12710 08092003
CMD43    EQU   X'43'               CONTROL COMMANC CODE 43     @ZA12710 08093003
CMD63    EQU   X'63'               CONTROL COMMAND CODE 63     @ZA12710 08095003
CMD73    EQU   X'73'               CONTROL COMMAND CODE 73     @ZA12710 08095303
CMD83    EQU   X'83'               CONTROL COMMAND CODE 83     @ZA12710 08095603
CMDA3    EQU   X'A3'               CONTROL COMMAND CODE A3     @ZA12710 08096003
CMDB3    EQU   X'B3'               CONTROL COMMAND CODE B3     @ZA12710 08097003
CMD07    EQU   X'07'               CONTROL COMMAND CODE 07     @ZA12710 08097303
CMD27    EQU   X'27'               CONTROL COMMAND CODE 27     @ZA12710 08097403
CMD87    EQU   X'87'               CONTROL COMMAND CODE 87     @ZA12710 08097503
CMD5B    EQU   X'5B'               CONTROL COMMAND CODE 5B     @ZA12710 08097603
         SPACE 1                                               @ZA12710 08098003
TP2955   EQU   X'14'               2955 COMMUNICATION DEVICE   @ZA12710 08099003
TP3705   EQU   X'05'               3704/3705 COMMUNICATION DEV @ZA16180 08099503
UCBDVC02 EQU   X'02'               DEVICE CLASS 02             @ZA28956 08099703
         TITLE '    IECVTCCW -- CCW TRANSLATOR -- MAIN ROUTINE'         08100002
IECVTCCW CSECT                                                          08150021
         ENTRY IECVTCFR                                                 08170002
         USING TCCW,REG1           ADDRESSABILITY FOR TCCW              08200021
         STM   REG1,REG14,TCCWRGSV SAVE REGISTERS UPON ENTRY            08250021
         LR    BASREG,REG15        ESTABLISH BASE REGISTER              08300021
         USING IECVTCCW,BASREG     ADDRESSABILITY FOR MODULE            08350021
         DROP  REG1                DROP ADDRESSABILITY FOR TCCW         08400021
         LR    TCCWREG,REG1        ESTABLISH MAIN TCCW REGISTER         08450021
         USING TCCW,TCCWREG        RE-ESTABLISH ADDRESSABILITY FOR      08500021
*                                  TCCW BLOCK                           08550021
         SPACE 2                                                        08600021
* THIS SECTION USES THE TCCW OPTION BYTE AS AN INDEX TO DETERMINE       08650021
* THE WORK TO BE DONE.                                                  08700021
         SPACE 1                                                        08750021
         SR    WKREG2,WKREG2       ZERO WORK REGISTER FOR INSERT        08800021
         IC    WKREG2,TCCWOPTN     GET THE OPTION BYTE FOR BRANCH       08850021
         B     TCCWI000(WKREG2)    BRANCH ACCORDING TO OPTION BYTE      08900021
         SPACE 1                                                        08950021
TCCWI000 EQU   *                   BRANCH VECTOR TABLE                  09000021
         B     TCCWI100            0 -- CCW TRANSLATION                 09050021
         B     TCCWR000            4 -- ADDRESS RE- TRANSLATION         09100021
         B     TCCWU000            8 -- UNFIX PAGES - FREE CORE         09150021
         B     TCCWG000            C -- GETMAIN RETURN                  09200021
         B     TCCWX000            10--SINGLE ADDRESS TRANSLATION       09250021
         SPACE 4                                                        09300003
         DC    CL8'IECVTCCW'       STORAGE DUMP IDENTIFIER     @ZA08754 09310003
         DC    C'&SYSDATE'         DATE                        @ZA08754 09315003
         SPACE 4                                                        09320003
** RETURN FROM CALLER WITH ADDRESS OF A 160 BYTE BLOCK IN      @ZA16169 09330003
** REGISTER 0.  RELOAD TCCW REQUESTOR'S SAVED REGS AND RETURN  @ZA16169 09350003
** TO CONTINUE CCW TRANSLATION.                                @ZA16169 09400003
TCCWG000 EQU   *                                               @ZA16169 09408003
         LR    REG15,REG0          MOVE 160 B BLK POINTER.     @ZA16169 09416003
         SR    REG0,REG0           ZERO REGISTER.              @ZA16169 09419003
         ST    REG0,C0(REG15)      ZERO THE FIRST FOUR         @ZA16169 09422003
         ST    REG0,C4(REG15)       WORDS OF THE               @ZA16169 09425003
         ST    REG0,C8(REG15)        OBTAINED                  @ZA16169 09428003
         ST    REG0,C12(REG15)        160 BYTE BLOCK.          @ZA16169 09431003
         L     BEBREG,TCCWSAV5     RESTORE BEB REGISTER.       @ZA16169 09434003
         L     RTNREG,TCCWSAVD     RESTORE CALLERS ADDRESS.    @ZA16169 09437003
         L     UCBREG,TCCWUCB-C1   RESTORE UCB POINTER.        @ZA16169 09440003
         BR    RTNREG              RETURN TO CONTINUE          @ZA16169 09443003
         EJECT                                                          09450021
* CCW TRANSLATOR INITIALIZATION --                                      09550021
*        THIS ROUTINE INITIALIZES THE TCCW, BEB AND FIX LIST FOR        09600021
*        THE CCW TRANSLATOR SECTION OF THE ROUTINE                      09650021
TCCWI100 EQU   *                   INITIALIZATION CONTINUATION POINT    09850021
******** INITIALIZE BEB BLOCK                                  @ZA16169 09860003
         L     BEBREG,TCCWBEB      LOAD BEB POINTER FROM TCCW           09870003
         USING BEB,BEBREG          ADDRESSABILITY FOR BEB               09950021
         ST    BEBREG,TCCWCBEB     STORE CURRENT BEB POINTER IN TCCW    09970003
         SR    WKREG2,WKREG2       ZERO REG FOR STORE                   10050021
         ST    WKREG2,BEBCHAIN     ZERO CHAIN POINTER                   10100021
         ST    WKREG2,BEBFLAG      ZERO FLAG                            10150021
         LA    WKREG3,BEBSCCW      GET ADDRESS OF FIRST REAL CCW        10200021
         ST    WKREG3,BEBRLST      STORE FIRST REAL CCW POINTER         10250021
         ST    WKREG2,BEBRLEN      ZERO REAL END                        10300021
         MVI   TCCWFVC,C0          INITIALIZE HIGH BYTE                 10310002
         ST    WKREG2,BEBVREN      ZERO VIRTUAL END                     10400021
         ST    WKREG2,BEBRLST2     ZERO SECOND SET OF POINTERS          10450021
         ST    WKREG2,BEBRLEN2     *                                    10500021
         ST    WKREG2,BEBVRST2     *                                    10550021
         ST    WKREG2,BEBVREN2     *                                    10600021
         ST    WKREG2,BEBSCCW      ZERO FIRST CCW IN STRING             10650002
         ST    WKREG2,BEBSCCW+C4   *                                    10700021
         SPACE 1                                                        10720003
******** INITIALIZE FIX BLOCK                                  @ZA16169 10760003
         L     FIXREG,TCCWFIX      GET ADDRESS OF FIX LIST              10800021
         USING FIX,FIXREG          ADDRESSABILITY TO FIX LIST           10850021
         ST    WKREG2,FIXCHAIN     ZERO CHAIN POINTER                   10900021
         ST    WKREG2,FIXLSTST          AND FIRST                       10950021
         ST    WKREG2,FIXLSTEN          ENTRY                           11000021
         SPACE 1                                                        11020003
******** INITIALIZE THE TCCW BLOCK                             @ZA16169 11060003
         ST    WKREG3,TCCWFRC      STORE FIRST REAL CCW IN TCCW         11200021
         ST    WKREG3,TCCWCCWR     STORE CURRENT REAL CCW POINTER       11250021
         LA    WKREG3,FIXLSTST     GET ADDR OF FIRST FIX ENTRY          11300021
         ST    WKREG3,TCCWPLKR     STORE CURRENT FIX ENTRY POINTER      11350021
         ST    WKREG2,TCCWINDA     ZERO IDAL PTR                        11400021
         ST    WKREG2,TCCWTICL     ZERO TIC LIST PTR                    11450021
         ST    WKREG2,TCCWINDR     INDIRECT RECEIVER                    11500021
         L     WKREG3,TCCWFVC      SET UP FIRST VIRTUAL CCW    @ZA16169 11560003
         ST    WKREG3,BEBVRST      ADDRESS IN BEBVRST AND      @ZA16169 11570003
         ST    WKREG3,TCCWCCWA     IN TCCWCCWA                 @ZA16169 11580003
         MVI   TCCWMODB,C0         ZERO TRANSLATION FLAGS               11600021
         MVI   TCCWCCWL,BEBNE      SET BEB LOOP COUNT                   11650021
         STH   WKREG2,TCCWINDL     ZERO IDAL COUNT AND OPBT             11700021
         ST    WKREG2,TCCWTICA     ZERO TIC ADDRESS                     11750021
         ST    WKREG2,TCCWLOCA     ZERO LOW COMPARE                     11800021
         ST    WKREG2,TCCWHICA     ZERO HIGH COMPARE                    11850021
         ST    WKREG2,TCCWOPTR     ZERO OPBT AND OPTR                   11900021
         L     UCBREG,TCCWUCB-C1   UCB ADDRESS REGISTER                 11910002
         USING UCB,UCBREG          ADDRESSABILITY TO UCB                11920002
         EJECT                                                          11950021
*********************************************************************** 12000021
*                                                                     * 12050021
* CCW TRANSLATOR MAIN ROUTINE --                                      * 12100021
*        THIS ROUTINE TRANSLATES THE CCW DATA ADDRESSES TO REAL       * 12150021
*        ADDRESSES AND CREATES A REAL CCW STRING FROM THE VIRTUAL     * 12200021
*        STRING. IT DETERMINES FOR EACH CCW WHETHER THE DATA PAGES    * 12250021
*        NEED TO BE FIXED AND WHETHER AN INDIRECT ADDRESS WORD        * 12300021
*        LIST IS NECESSARY                                            * 12350021
*                                                                     * 12400021
*********************************************************************** 12450021
         SPACE 1                                                        12470003
TCCWS000 CLI   TCCWCCWL,C0         IF LOOP COUNT IS ZERO, GO GET        12550021
         BE    TCCWM300            MORE ROOM FOR CCWS                   12600021
         SPACE 1                                                        12620003
         L     WKREG3,TCCWCCWA     LOAD ADDRESS OF VIRTUAL CCW          12700021
         L     CCWREG,TCCWCCWR     LOAD ADDRESS OF REAL CCW             12750021
         L     DATARG,C0(WKREG3)   INITIALIZE DATA ADDRESS REGISTER     12800021
         LA    DATARG,C0(DATARG)   ZERO HIGH ORDER BYTE                 12850021
         USING CCWD,CCWREG         ADDRESSABILITY FOR CCW FORMAT        12900021
         MVC   CCW,C0(WKREG3)      MOVE CCW TO REAL CHANNEL PROGRAM     12950021
         MVI   CCWUNU,C0           ZERO UNUSED BYTE                     12960002
         MVN   TCCWEFOP,CCWCMD     SET COMMAND CODE AS EFFECTIVE        13000021
         SR    WKREG2,WKREG2       ZERO REGISTER FOR IC                 13050021
         IC    WKREG2,CCWCMD       PICK UP COMMAND CODE FOR LATER CMPR  13100021
         CLI   TCCWEFOP,TIC        IS THE COMMAND A TIC                 13150021
         BNE   TCCWS020            NO, CONTINUE TRANSLATE               13200021
         LR    WKREG3,DATARG       * SET TIC ADDRESS EQUAL TO CCW       13250021
         LR    WKREG2,CCWREG       * RECEIVING ADDRESS PLUS ORIGINAL    13300021
         LRA   WKREG2,C0(WKREG2)   * DATA ADDRESS MINUS CCW ADDRESS.    13350021
         AR    WKREG3,WKREG2       * RESULT IS POSSIBLE REAL ADDRESS    13400021
         S     WKREG3,TCCWCCWA     * IN TIC                             13450021
         STCM  WKREG3,LORD3BYT,CCWDATA  STORE DATA ADDRESS              13500021
         B     TCCWS260            UPDATE POINTERS                      13550021
         SPACE 2                                                        13600021
TCCWS020 CLI   TCCWOPBT,C0         OPCODE BYTE ZERO                     13650021
         BE    TCCWS040            YES, EFFECTIVE OPCODE EQ COMMAND COD 13700021
         MVN   TCCWEFOP,TCCWOPBT   NO, MAKE EFF. OPCODE EQ TO OPBYTE    13750021
         IC    WKREG2,TCCWOPBT     GET COMMAND FOR INDEX                13800021
         STC   WKREG2,CCWCMD       SET CMD CODE TO DC CCW.     @ZA26927 13850003
         SPACE 1                                                        13900003
TCCWS040 EQU   *                                               @ZA06069 14100003
         TM    CCWFLAG,CCWIDA      IDA BIT SET IN VIRT CCW ??  @ZA06069 14150003
         BZ    TCCWS041             NO, OK PROCEED             @ZA06069 14157003
         MVI   TCCWOPTN,TCCWIDAE   YES, SET TCCW OPTION CODE   @ZA06069 14164003
         SR    REG0,REG0           INSURE FIELD IS ZERO        @ZA16175 14166003
         ST    REG0,TCCWSAVA                                   @ZA16175 14168003
         B     TCCWU000            AND DO ANY UNFIXING.        @ZA06069 14171003
         EJECT                                                 @ZA12710 14174003
* AT THIS POINT, THE CORRECT COMMAND TO BE PROCESSED HAS BEEN* @ZA12710 14178003
* DETERMINED EITHER FROM THE CCW OR FROM A PREVIOUS COMMAND  * @ZA12710 14178803
* CODE AS A RESULT OF DATA CHAINING.                         * @ZA12710 14179603
* NOW, THE OP TABLE IS INTERROGATED TO CHECK FOR SM SUPPORT, * @ZA12710 14180403
* CONTROL COMMAND HANDLING AND SPECIAL HANDLING FOR          * @ZA12710 14181203
* UNIT RECORD DEVICES.                                       * @ZA12710 14182003
         SPACE 1                                               @ZA12710 14182803
TCCWS041 EQU   *                                               @ZA06069 14185003
         IC    WKREG2,OPTABLE(WKREG2) INSERT MASK FOR CMD CODE @ZA06069 14192003
         EX    WKREG2,TCCWTEST     SPECIAL PROCESSING REQ FOR CCW       14200021
         BZ    TCCWS080            NO, CONTINUE NORMAL PROCESSING       14250021
*                                  TREAT AS REQ DATA XFR       @ZA12710 14260003
         SPACE 1                                               @ZA12710 14270003
         SLL   WKREG2,C30          ISOLATE LOW ORDER BITS FOR TYPE CCW  14300002
         LTR   WKREG2,WKREG2       WAS IT A CONTROL COMMAND             14350021
         BZ    TCCWS079            NO, WAS A STATUS MODIFIER   @YM04190 14370003
*                                  W/O UR UNIQUE TESTING       @ZA12710 14400003
         BP    TCCWS073            YES, ZERO THE DATA ADDRESS  @YM04190 14403003
*                                  FOR CTL CMD W/O UNIQUE BIT. @ZA12710 14410003
*        UNIQUE BIT SET IN OP TABLE, CHECK UCB FOR UNIT RECORD @ZA12710 14412003
*        DEVICE. IF SO, THEN SPECIAL CHECKS ARE NEEDED FOR     @ZA12710 14414003
*        HANDLING CONTROL COMMANDS FOR CERTAIN UNIT RECORD     @ZA12710 14416003
*        DEVICES.                                              @ZA12710 14418003
         OI    CCWUNU,CCWCTRLC     INDICATE CONTROL COMMAND.   @ZA12710 14420003
         TM    UCBDVCLS,UCB3UREC   UNIT RECORD DEVICE CLASS ?? @ZA12710 14430003
         BO    TCCWS051            YES, PROCEED WITH UNIT      @ZA28956 14440003
*                                       RECORD UNIQUE CHECKS   @ZA28956 14440203
*                                                              @ZA28956 14440403
*        CHECK FOR DEVICE CLASS X'02' - UNSUPPORTED DEVICE     @ZA28956 14440603
*        CLASS ASSIGNED TO THE 3168 SVP.                       @ZA28956 14440803
         CLI   UCBDVCLS,UCBDVC02   UNSUPPORTED DEV CLASS 02 ?  @ZA28956 14441003
         BNE   TCCWS074            NO, BYPASS FURTHER CHECKS,  @ZA28956 14441103
*                                   TREAT AS NON-DATA XFR CMD  @ZA28956 14441403
******   UNIQUE DEVICE CLASS X'02' CHECK                ****** @ZA28956 14441603
         SPACE 1                                               @ZA28956 14441803
         CLI   CCWCMD,CMD01        WRITE COMMAND               @ZA28956 14442003
         BE    TCCWS080            YES, REQUIRES DATA XFR      @ZA28956 14442203
         B     TCCWS076            NO, TREAT CMD CODES 06 AND  @ZA28956 14442403
*                                      27 AS NON DATA XFR CMDS @ZA28956 14442603
         SPACE 1                                               @ZA12710 14442803
******   UNIQUE UNIT RECORD DEVICE CLASS CHECK          ****** @ZA12710 14443003
         SPACE 1                                               @ZA12710 14443203
TCCWS051 EQU   *                                               @ZA28956 14443403
         CLI   CCWCMD,CMD01        WRITE COMMAND               @ZA16170 14445003
         BNE   TCCWS052             YES                        @ZA16170 14445103
         CLI   UCBUNTYP,UR3895     3895 PRINTER ??             @ZA16170 14445203
         BNE   TCCWS080             NO, TREAT AS DATA XFR CMD  @ZA16170 14445503
         B     TCCWS079            YES, TREAT AS REQUIRING SM  @ZA16170 14445603
TCCWS052 EQU   *                                               @ZA16170 14445703
         CLI   UCBUNTYP,UR3211     3211 PRINTER ??             @ZA12710 14445803
         BNE   TCCWS053            NO, STEP TO NEXT UR DEV     @ZA12710 14446003
         CLI   CCWCMD,CMD63        COMMAND CODE 63 ??          @ZA12710 14446103
         BE    TCCWS080            YES, REQ DATA XFR           @ZA12710 14455803
         B     TCCWS076            NO, TREAT REST AS NON D/T   @ZA12710 14456603
TCCWS053 EQU   *                                               @ZA12710 14456803
         CLI   UCBUNTYP,UR3800     3800 PRINTER ??             @ZA12710 14457003
         BNE   TCCWS054            NO, STEP TO NEXT UR DEVICE  @ZA12710 14457203
         CLI   CCWCMD,CMD63        COMMAND CODE 23, 43 OR 63 ? @ZA12710 14457403
         BNH   TCCWS080            YES, ALL REQUIRE DATA XFR   @ZA12710 14457603
         CLI   CCWCMD,CMD83        COMMAND CODE 83 ?           @ZA12710 14457803
         BE    TCCWS080            YES, REQUIRES DATA XFR      @ZA12710 14458203
         B     TCCWS076            NO, TREAT REST AS NON D/T   @ZA12710 14458303
TCCWS054 EQU   *                                               @ZA12710 14458403
         CLI   UCBUNTYP,UR1287     1287 OPTICAL READER ??      @ZA12710 14458803
         BE    TCCWS055            YES                         @YM07221 14459003
         CLI   UCBUNTYP,UR1288     1288 OPTICAL READER ??      @ZA12710 14460003
         BNE   TCCWS056            NO, STEP TO NEXT UR DEV     @YM07221 14460303
TCCWS055 EQU   *                                               @ZA12710 14460603
         CLI   CCWCMD,CMD5B        COMMAND CODE 5B ??          @ZA12710 14460903
         BE    TCCWS078            YES, REQ SM SUPPORT         @ZA12710 14461203
         B     TCCWS076            NO, TREAT REST AS NON D/T   @ZA12710 14463003
TCCWS056 EQU   *                                               @ZA12710 14464803
         CLI   UCBUNTYP,UR3890     3890 MICR ??                @ZA08754 14466603
         BNE   TCCWS058            NO, STEP TO NEXT UR DEV     @ZA08754 14476603
         CLI   CCWCMD,CMD23        COMMAND CODE 23 ??          @ZA12710 14477603
         BE    TCCWS078            YES, REQS SM SUPPORT        @ZA12710 14478003
         CLI   CCWCMD,CMD33        COMMAND CODE 33 ??          @ZA12710 14478403
         BE    TCCWS078            YES, REQS SM SUPPORT        @ZA12710 14478803
         CLI   CCWCMD,CMDB3        COMMAND CODE B3 ??          @ZA12710 14479603
         BE    TCCWS080            YES, REQ DATA XFR           @ZA12710 14483303
         B     TCCWS076            NO, TREAT REST AS NON D/T   @ZA12710 14500003
TCCWS058 EQU   *                                               @ZA12710 14550003
         CLI   UCBUNTYP,UR3886     3886 OPTICAL CHAR READER ?  @ZA01927 14600003
         BNE   TCCWS060            NO, STEP TO NEXT UR DEV     @ZA01927 14602003
         CLI   CCWCMD,CMD63        COMMAND CODE 63 ??          @ZA12710 14606003
         BE    TCCWS080            YES, REQ DATA XFR           @ZA12710 14607003
         CLI   CCWCMD,CMD73        COMMAND CODE 73 ??          @ZA12710 14608003
         BE    TCCWS080            YES, REQUIRES DATA XFR      @ZA12710 14609003
         B     TCCWS076            NO, TREAT REST AS NON D/T   @ZA12710 14612003
TCCWS060 EQU   *                                               @ZA12710 14615003
         CLI   UCBUNTYP,UR3851     3851 MASS STORAGE CONTROL ? @ZA04760 14620003
         BE    TCCWS080            YES, TREAT CTL CMD CODES 43 @ZA12710 14630003
*                                  A3, 27 AND 87 AS DATA XFR.  @ZA12710 14638003
TCCWS062 EQU   *                                               @ZA12708 14646003
         CLI   UCBUNTYP,UR3540     3540 DISKETTE ??            @ZA12708 14653003
         BNE   TCCWS074            NO, TREAT REST AS NON D/T   @ZA12708 14660003
         CLI   CCWCMD,CMD07        COMMAND CODE 07 ??          @ZA12708 14667003
         BE    TCCWS080            YES, REQUIRES DATA XFR      @ZA12708 14674003
         B     TCCWS076            NO, TREAT REST AS NON D/T   @ZA12708 14681003
         SPACE 2                                                        14708003
TCCWS073 EQU   *                                               @ZA12710 14708603
         OI    CCWUNU,CCWCTRLC     INDICATE CONTROL COMMAND    @ZA12710 14709203
TCCWS074 EQU   *                                               @ZA12710 14710003
         CLI   UCBDVCLS,UCB3COMM   COMMUNICATIONS DEVICE CLASS @ZA12710 14712003
         BNE   TCCWS076            NO, TREAT AS NON D/T        @ZA12710 14714003
         CLI   UCBUNTYP,TP2955     2955 ??                     @ZA05348 14716003
         BE    TCCWS076            YES, TREAT AS NON D/T       @ZA05348 14718003
         CLI   CCWCMD,CCWNOP       NOP CONTROL COMMAND ??      @ZA05348 14720003
         BE    TCCWS076            YES, TREAT AS NON D/T       @ZA16180 14721003
*              CHECK FOR WRITE BREAK CCW FOR 3704/3705 -----   @ZA16180 14722003
         CLI   CCWCMD,CMD09        COMMAND CODE 09 ??          @ZA16180 14722203
         BNE   TCCWS080            NO, TREAT AS D/T CMD        @ZA16180 14722503
         MVI   TCCWSAVA,C0         ZERO BYTE                   @ZA27596 14723003
         MVN   TCCWSAVA(C1),UCBUNTYP YES, LOCALIZE BITS 4-7    @ZA27596 14723203
         CLI   TCCWSAVA,TP3705     IS TP DEVICE A 3704/3705    @ZA27596 14723403
         BNE   TCCWS078            NO, REQS SM SUPPORT         @ZA16180 14723803
         B     TCCWS080            YES, TREAT AS D/T CMD       @ZA16180 14724203
TCCWS076 EQU   *                                               @ZA12710 14725003
         SR    WKREG2,WKREG2       ZERO WORK REGISTER          @ZA12710 14726003
         STCM  WKREG2,LORD3BYT,CCWDATA  ZERO DATA ADDR FIELD   @ZA12710 14728003
         B     TCCWS260            GO UPDATE POINTERS          @ZA12710 14730003
         SPACE 2                                               @ZA12710 14731003
TCCWS078 EQU   *                                               @ZA12710 14734003
         NI    CCWUNU,FF-CCWCTRLC  RESET CTL COMMAND FLAG      @ZA12710 14736003
TCCWS079 EQU   *                                               @ZA12710 14738003
         OI    CCWUNU,CCWSTATM     SET STATUS MODIFIER BIT     @ZA12710 14740003
TCCWS080 EQU   *                                               @ZA12710 14742003
         TM    CCWFLAG,CCWSKIP     SKIP BIT ON IN CCW FLAGS ?? @ZA12710 14744003
         BNO   TCCWS100            NO, DATA ADDRESS IS VALID            14750003
         TM    TCCWEFOP,CCWRITE    IS CCW A WRITE TYPE                  14800021
         BO    TCCWS100            YES, USE DATA ADR SKIP BIT OR NO     14850021
         NI    CCWDATA+C2,FC       NO, INSURE DATA ADDRESS     @ZA08128 14900003
*                                      ON WORD BDY FOR 2880 CH @ZA08128 14930003
         B     TCCWS260            UPDATE POINTERS                      15000021
         SPACE 1                                                        15020003
* AT THIS POINT IT HAS BEEN DETERMINED THE COMMAND DOES REQUIRE A       15100021
* DATA ADDRESS. THE SECTION FOLLOWING DETERMINES DATA BOUNDARIES        15150021
         SPACE 1                                                        15200021
TCCWS100 EQU   *                                               @ZA12683 15220003
         LR    WKREG2,DATARG       LOAD DATA ADDR IN WORK REG  @ZA12683 15250003
         LR    WKREG3,DATARG       LOAD DATA ADDR IN WORK REG  @ZA12683 15300003
         LH    REG0,CCWCNT         LOAD DATA COUNT FROM CCW    @ZA12683 15350003
         LTR   REG0,REG0           IS DATA COUNT ZERO ??       @ZA12683 15400003
         BZ    TCCWS240            YES, START EQ STOP ADDR     @ZA12683 15450003
         N     REG0,TCCWPOS         NO, INSURE COUNT IS        @ZA12683 15500003
*                                   POSITIVE- MAX CT IS 64K    @ZA12683 15550003
         BCTR  REG0,REG0           SUBTRACT ONE FOR LIMITS     @ZA12683 15600003
         SPACE 1                                               @ZA12683 15650003
         AR    WKREG2,REG0         ADD DATA CT TO WORK REG     @ZA12683 15700003
         SPACE 1                                               @ZA12683 15750003
         CLI   TCCWEFOP,CCWRDBK    READ BACKWARDS CMD CODE ??  @ZA12683 15800003
         BNE   TCCWS160             NO, GO TEST FOR FIXING     @ZA12683 15850003
         SR    WKREG3,REG0         YES, SUBT TO SET START ADDR @ZA12683 15900003
         LR    WKREG2,DATARG       SET DATA ADDR AS END ADDR   @ZA12683 15950003
         SPACE 2                                                        16200021
* THIS SECTION TESTS TO SEE IF PAGES REQUIRE FIXING. IF SO              16220003
*             SUBROUTINE TCCWM000 IS ENTERED.                           16250003
*   WKREG3 -  START ADDRESS OF DATA INVOLVED WITH CCW        * @ZA12683 16310003
*   WKREG2 -    END ADDRESS OF DATA INVOLVED WITH CCW        * @ZA12683 16320003
TCCWS160 C     WKREG3,TCCWLOCA     IF START ADDRESS IS LESS THAN        16350021
         BL    TCCWM000            LOW COMPARE ADDRESS OR END           16400002
         C     WKREG2,TCCWHICA     ADDRESS IS GREATER THAN HIGH         16450021
         BNL   TCCWM000            COMPARE ADDRESS,STORE LOW DATA       16500002
TCCWS200 EQU   *                   TCCWM000 RETURN POINT                16550021
         SPACE 2                                                        16600021
*        DETERMINE IF AN IDAL ENTRY IS REQUIRED.                        16620003
         SPACE 1                                                        16700021
TCCWS220 LR    WKREG1,WKREG2       SAVE END DATA ADDRESS                16750021
         LR    REG0,WKREG3         SAVE START DATA ADDRESS              16800021
         N     WKREG1,TCCWTRUN     TRUNCATE END TO PAGE BOUNDARY        16850021
         N     REG0,TCCWTRUN       TRUNCATE START TO PAGE BOUNDARY      16900021
         SR    WKREG1,REG0         SUBTRACT TO SEE HOW MANY PAGES       16950021
         BNZ   TCCWM400            MORE THAN ONE IDAL NEEDED            17000021
         SPACE 2                                                        17050003
* COMPLETE THE CCW AND PREPARE TO DO NEXT CCW IF ONE EXISTS             17100021
TCCWS240 LRA   REG0,C0(DATARG)     TRANSLATE CCW DATA ADDRESS           17150021
         BNZ   TCCWM000            FAILED, GO FIX PAGE                  17200021
         STCM  REG0,LORD3BYT,CCWDATA STORE REAL ADDRESS IN CCW          17250021
         SPACE 1                                                        17300021
TCCWS260 LA    WKREG1,CCWLENG(CCWREG) INCREMENT CCW LENGTH BY A CCW     17350021
         ST    WKREG1,TCCWCCWR     STORE IN TCCW FOR NEXT TIME          17400021
         L     WKREG1,TCCWCCWA     GET CURRENT VIRTUAL CCW PTR          17450021
         LA    WKREG1,CCWLENG(WKREG1) INCREMENT BY A CCW                17500021
         ST    WKREG1,TCCWCCWA     STORE FOR NEXT TIME THROUGH LOOP     17550021
         IC    WKREG3,TCCWCCWL     GET CURRENT LOOP COUNTER             17600021
         BCTR  WKREG3,REG0         SUBTRACT ONE FOR FINISHED CCW        17650021
         STC   WKREG3,TCCWCCWL     STORE FOR NEXT TIME IN LOOP          17700021
         CLI   TCCWEFOP,TIC        WAS IT A TIC                         17750021
         BNE   TCCWS280            NO, LOOK FOR CHAINING                17800021
         ST    DATARG,TCCWTICA     STORE DATA ADDRESS                   17850021
         B     TCCWM100            GO PROCESS TIC                       17900021
         SPACE 1                                                        17950021
TCCWS280 TM    CCWFLAG,CCWDC+CCWCC CCW SPECIFY CHAINING                 18000021
         BNZ   TCCWS300            YES, LOOK AT TYPE OF CHAINING        18050021
         SR    WKREG2,WKREG2       ZERO A REG FOR INSERT                18100021
         SH    WKREG1,TCCW16       GET SECOND TO LAST CCW ADDRESS       18150021
         C     WKREG1,BEBVRST      BACK BEYOND CCW STRING               18160002
         BL    TCCWS290            YES, END OF CCW CHAIN                18170002
         L     WKREG1,TCCWCCWR     GET THE LAST CCW ADDR                18180002
         SH    WKREG1,TCCW16       POINT TO 2ND TO LAST                 18190002
         TM    CCWUNU-CCW(WKREG1),CCWSTATM STATUS MODIFIER              18192002
         BO    TCCWS295            YES, MORE CCWS TO XLATE     @YM05113 18194002
         SPACE 1                                                        18244002
TCCWS290 MVI   TCCWOPBT,C0         SET OPBYTE TO ZERO                   18600021
         MVC   BEBRLEN,TCCWCCWR    SET REAL END IN BEB                  18650021
         MVC   BEBVREN,TCCWCCWA    SET VIRTUAL END IN BEB               18700021
         B     TCCWM200            CHECK FOR UNRESOLVED TICS            18750021
         SPACE 2                                                        18760002
TCCWS295 CLI   CCWCMD-CCW(WKREG1),TIC  IS IT A TIC ?           @YM05113 18770002
         BE    TCCWS290            YES, CHECK UNRESOLVED TIC'S @YM05113 18780002
TCCWS300 CLI   TCCWOPBT,C0         IF OPBYTE IS ZERO, REPLACE           18800002
         BNE   TCCWS320            OPBYTE WITH WORKAREA CCW             18900021
         L     WKREG1,TCCWCCWA     RELOAD THE CURRENT CCW ADDRESS       18910002
         SH    WKREG1,TCCWAINC     OP-POINTER WITH CCW ADDRESS          18950021
         ST    WKREG1,TCCWOPTR     FOR NEXT TIME IN LOOP                19000021
         MVC   TCCWOPBT,CCWCMD     COMMAND CODE AND REPLACE             19050021
TCCWS320 TM    CCWFLAG,CCWDC       DATA CHAINING                        19100021
         BO    TCCWS000            YES, PROCESS NEXT CCW                19150021
         MVI   TCCWOPBT,C0         NO, ZERO OP BYTE                     19200021
         B     TCCWS000            PROCESS NEXT CCW                     19250021
         TITLE '    IECVTCCW -- CCW TRANSLATOR -- FIX ROUTINE'          19300002
*********************************************************************** 19350021
*                                                                     * 19400021
* THIS ROUTINE IS ENTERED IF THE TCCW ROUTINE INDICATES THAT A PAGE   * 19450021
* NEEDS TO BE FIXED. IT SEARCHES THE EXISTING FIX LIST FOR THE SAME   * 19500021
* ENTRY. IF THE PAGE IS ALREADY FIXED, CONTROL RETURNS TO THE TCCW    * 19550021
* SUBROUTINE, IF NOT THE PAGE IS FIXED. IF THERE IS NO ROOM IN THE    * 19600021
* PAGE FIX LIST, A SUBROUTINE IS ENTERED WHICH GETS A NEW LIST. THIS  * 19650021
* ROUTINE LINKS TO THE SERVICE INTERFACE ROUTINE (IEAVPSIB) TO FIX THE* 19700021
* REQUIRED PAGES.                                                     * 19750021
*                                                                     * 19800021
*********************************************************************** 19850021
         SPACE 2                                                        19900021
TCCWM000 LR    REG1,WKREG3         GET LOW DATA ADDRESS                 19950021
         N     REG1,TCCWTRUN       TRUNCATE TO PAGE BOUNDARY            20000021
         LR    REG2,WKREG2         GET HIGH DATA ADDRESS                20050021
         O     REG2,TCCWROUN       ROUND TO END OF DATA PAGE            20100021
         ST    REG1,TCCWLOCA       SET LOW COMPARE ADDRESS              20150021
         ST    REG2,TCCWHICA       SET HIGH COMPARE ADDRESS             20200021
         SPACE 1                                                        20300021
* SEARCH THE EXISTING FIX LIST TO SEE IF REQUESTED PAGE(S) HAVE         20350021
* ALREADY BEEN FIXED.                                                   20400021
         SPACE 1                                                        20450021
         L     REG15,TCCWFIX       LOAD BEGINNING OF FIX LIST           20500021
TCCWM010 LA    REG15,FIXEL(REG15)  INCREMENT BEYOND HEADER              20550021
TCCWM015 C     REG15,TCCWPLKR      IS THIS THE LAST ENTRY               20600021
         BE    TCCWM030            YES, NOT IN FIX LIST                 20650021
         TM    C0(REG15),FIXCONT   CONTINUED IN ANOTHER BLOCK           20700021
         BO    TCCWM020            YES, GET NEXT BLOCK                  20750021
         CLM   REG1,LORD3BYT,C1(REG15) NEW START LESS THAN ENTRY START  20800021
         BL    TCCWM010            YES, LOOK AT NEXT ENTRY              20850021
         CLM   REG2,LORD3BYT,C5(REG15) NEW END GT ENTRY END             20900002
         BNH   TCCWS200            NO, NO FIX NEEDED                    20950021
         B     TCCWM010            YES, LOOK AT NEXT ENTRY              21000021
         SPACE 1                                                        21050021
TCCWM020 L     REG15,C0(REG15)     GET POINTER TO NEXT FIX ENTRY        21100021
         B     TCCWM015            CONTINUE SEARCH                      21150021
         SPACE 2                                                        21200021
* THE PAGES TO BE FIXED ARE NOT IN LIST, MUST FIX THEM, FIND ROOM FOR   21250021
* ENTRY.                                                                21300021
         SPACE 1                                                        21350021
TCCWM030 L     FIXREG,TCCWFIX      GET ADDR OF PAGE FIX LIST            21400021
         SR    REG0,REG0           ZERO REG FOR COMPARE                 21450021
         USING FIX,FIXREG          ADDRESSABILITY FOR FIX LIST          21500021
TCCWM040 C     REG0,FIXCHAIN       CHAIN POINTER                        21550021
         BE    TCCWM050            NO, END OF CHAIN                     21600021
         L     FIXREG,FIXCHAIN     LOAD CHAIN POINTER                   21650021
         B     TCCWM040            LOOK FOR ANOTHER BLOCK               21700021
         EJECT                                                          21720003
TCCWM050 LA    WKREG1,FIXEL*FIXNE(FIXREG) FIND END OF LIST              21800021
         C     WKREG1,TCCWPLKR     IS SPACE GONE                        21850021
         BH    TCCWM060            NO, BUILD ENTRY                      21900021
         SPACE 1                                                        22020003
** NEED AN ADDITIONAL 160 BYTE BLOCK FOR FIX LIST ENTRIES      @ZA16169 22050003
         ST    FIXREG,TCCWPLKR     STORE CURRENT FIX LIST PTR  @ZA16169 22070003
         BAL   RTNREG,TCCWGTM0     RETURN TO CALLER FOR BLOCK  @ZA16169 22100003
         SPACE 1                                               @ZA16169 22150003
** RETURN FROM CALLER: REG 15 POINTS TO NEW 160 BYTE BLOCK.    @ZA16169 22200003
** INITIALIZE 160 BYTE BLOCK FOR FIX LIST AND CONTINUE PROC    @ZA16169 22250003
TCCWM055 EQU   *                                               @ZA16169 22300003
         SPACE 1                                               @ZA16169 22350003
         L     FIXREG,TCCWPLKR     LOAD CURRENT FIX LIST POINTER        22650021
         SPACE 1                                                        22900021
         ST    REG15,FIXCHAIN      STORE PTR TO NEW FIX LIST   @ZA16169 22920003
         LA    REG15,FIXHL(REG15)  FIND FIRST ENTRY                     23150021
         LA    WKREG1,FIXEL*FIXNE(FIXREG) FIND LAST ENTRY               23200021
         LR    WKREG2,WKREG1       BACK UP A FIX ENTRY.        @ZA16175 23210003
         SH    WKREG2,TCCWAINC     SUBTRACT BY EIGHT.          @ZA16175 23220003
         NI    C4(WKREG2),FF-LASTENT RESET LAST ENT INDICATOR  @ZA16175 23230003
         ST    REG15,C0(WKREG1)    STORE CHAIN PTR                      23250021
         ST    REG15,TCCWPLKR      STORE NEW NEXT ENTRY                 23300021
         MVI   C0(WKREG1),FIXCONT  SET CONTINUATION POINTER             23350021
         MVI   C4(WKREG1),C0       ZERO BYTE 4 FLAGS OF VSL    @ZA28114 23370003
         L     FIXREG,FIXCHAIN     LOAD NEW FIX LIST CHAIN              23400021
         L     REG1,TCCWLOCA       RESTORE THE FIX ENTRY       @ZA16169 23427003
         L     REG2,TCCWHICA        ADDRESSES.                 @ZA16169 23434003
         LM    WKREG2,DATARG,TCCWSAV7   RESTORE SAVED REGS     @ZA16169 23441003
         SPACE 2                                                        23450021
* BUILD FIX ENTRY AND FIX PAGES                                         23500021
TCCWM060 L     REG15,TCCWPLKR      LOAD CURRENT ENTRY POINT             23550021
         ST    REG1,C0(REG15)      STORE FIX ENTRY INTO        @ZA16169 23570003
         ST    REG2,C4(REG15)       FIX LIST.                  @ZA16169 23600003
         OI    C4(REG15),LASTENT   SET LAST ENTRY INDICATOR    @ZA16175 23600603
         OI    TCCWMODB,TCCWPGCK   SET PAGE FAULT INDICATOR             23602003
TCCWM062 TM    C0(REG1),X00        ACCESS THE PAGE             @ZA01894 23610003
         A     REG1,TCCWPAGE       INCREMENT BY PAGE                    23620002
         CR    REG1,REG2           END OF ENTRY                         23630002
         BL    TCCWM062            NO CONTINUE                          23640002
         EJECT                                                 @ZA16169 23641003
TCCWM063 EQU   *                                               @ZA16169 23642003
         L     REG1,C0(REG15)      RESTORE THIS FIX ENTRY      @ZA16169 23644003
         L     REG2,C4(REG15)       FROM FIX LIST.             @ZA16169 23646003
         SH    REG15,TCCWAINC      BACK UP A FIX ENTRY                  23650021
         NI    FIXLSTEN-FIXLSTST(REG15),FF-LASTENT ZERO THE LAST        23700002
*                                  ENTRY INDICATOR                      23720002
         SR    REG0,REG0           ZERO REG FOR STORE                   23800021
         L     FIXREG,TCCWFIX      LOAD PTR TO FIX LIST                 23850021
         ST    REG0,FIXECB         ZERO ECB                             23900021
         LA    REG0,FIXECB         GET ADDR OF ECB                      23950021
         OI    TCCWMODB,TCCWECBU   SET ECB IN USE FLAG                  24000021
         SR    UCBREG,UCBREG       DO NOT ASSOCIATE FIX WITH TCB        24050002
         L     REG15,TCCWFX        LOAD ADDRESS OF IEAVPSIX    @YM05518 24100002
         O     REG1,TCCWRFIX       SET FOR REGISTER FIX ENTRY           24150021
         BALR  REG14,REG15         GO FIX PAGES                         24200021
         L     UCBREG,TCCWUCB-C1   RESTORE UCB ADDRESS                  24210002
         LTR   REG15,REG15         DID IT WORK                          24250021
         BZ    TCCWM090            YES, CONTINUE IN LINE                24300021
         LA    REG14,C8            GET CONSTANT OF 8                    24350021
         CR    REG14,REG15         WAS RETURN CODE 8                    24400021
         BNE   TCCWT000            NO, ERROR DURING FIX.       @ZA16175 24420003
         SPACE 2                                                        24800021
TCCWM070 L     REG15,TCCWPLKR      GET CURRENT ENTRY POINTER            24850021
         LM    REG1,REG2,C0(REG15) PICK UP CURRENT ENTRY                24900021
         LA    REG2,C0(REG2)       ZERO ANY VSL FLAGS          @ZA27292 24920003
TCCWM075 TM    C0(REG1),X00        ACCESS THE PAGE             @ZA01894 24950003
         A     REG1,TCCWPAGE       INCREMENT BY PAGE                    25000021
         CR    REG1,REG2           END OF ENTRY                         25050021
         BL    TCCWM075            NO CONTINUE                          25100021
         CLI   FIXECB,C4           ECB POSTED IN ERROR                  25150021
         BE    TCCWT000            YES, SET FIX ERROR          @ZA16175 25170003
TCCWM090 L     WKREG1,TCCWPLKR     GET CURRENT ENTRY POINTER            25250021
         NI    TCCWMODB,FF-TCCWECBU-TCCWPGCK    RESET FLAGS    @ZA12683 25300003
         LA    WKREG1,C8(WKREG1)   INCREMENT ENTRY POINTER              25400021
         ST    WKREG1,TCCWPLKR     STORE IN TCCW                        25450021
         B     TCCWS200            RETURN TO LOOP                       25500021
         TITLE '    IECVTCCW -- CCW TRANSLATOR -- -- TIC ROUTINE'       25550002
*********************************************************************** 25600021
*                                                                     * 25650021
* THIS ROUTINE IS ENTERED WHENEVER THE TCCW SUBROUTINE ENCOUNTERS A   * 25700021
* TRANSFER IN CHANNEL (TIC) CCW COMMAND. THE TIC ADDRESSES IN THE     * 25750021
* REAL STRING ARE CREATED TO INDICATE THE INTENT OF THE VIRTUAL TIC   * 25800021
*                                                                     * 25850021
*********************************************************************** 25900021
         SPACE 1                                                        25950021
TCCWM100 MVC   BEBRLEN,TCCWCCWR    GET REAL END ADDRESS                 26000021
         MVC   BEBVREN,TCCWCCWA    GET VIRTUAL ADDRESS                  26050021
         L     WKREG1,TCCWTICA     GET TIC TO ADDRESS                   26100021
         TM    TCCWTICA+C3,DBLWD   TIC ON DBLWD BOUNDARY                26150021
         BNZ   TCCWM153            NO, TREAT AS RESOLVED       @ZA03223 26200003
         C     WKREG1,BEBVRST      IS TIC LESS THAN LOW LIMIT           26250021
         BL    TCCWM120            YES, CHECK FURTHER                   26300002
         SPACE 1                                                        26450021
TCCWM110 C     WKREG1,BEBVREN      IS TIC A NOP TIC                     26500021
         BE    TCCWM160            IF EQUAL, A NOP TIC                  26550002
         BL    TCCWM150            IF LOW, IN THE CURRENT STRING        26600002
         SPACE 2                                                        26800021
*        PLACE TIC ON UNRESOLVED TIC LIST                               26810002
TCCWM120 L     WKREG1,TCCWCCWR     GET ADR OF COMMAND AFTER TIC         26850021
         SH    WKREG1,TCCWAINC     GET ADR OF TIC                       26900021
         MVC   C1(C3,WKREG1),TCCWTICL+C1 PUT TIC ON UNRES LIST          26950021
         LRA   WKREG2,C0(WKREG1)   GET REAL ADDRESS                     27000021
         ST    WKREG2,TCCWTICL     SET POINTER IN TIC LIST              27050021
         MVC   C4(C4,WKREG1),TCCWTICA SAVE VIRT TIC ADDRESS             27100021
TCCWM130 SH    WKREG1,TCCWAINC     GET PREVIOUS CCW POINTER             27260002
TCCWM140 CLI   CCWCMD-CCW(WKREG1),TIC  TIC FOLLOWED BY TIC     @YM04961 27270002
         BE    TCCWM200            HANDLE UNRESOLVED TICS      @YM04961 27280002
         TM    CCWUNU-CCW(WKREG1),CCWSTATM STATUS MODIFIER TIC @YM04961 27310002
         BNO   TCCWM200            HANDLE UNRESOLVED TICS      @ZA03223 27360003
         CLI   TCCWCCWL,C0         IF LOOP CNT ZERO,REMOVE TIC @ZA03223 27365003
         BNE   TCCWS000            NOT ZERO, TRANSLATE NEXT CCW@ZA03223 27370003
         SPACE                                                          27375003
*        LAST CCW ON BEB IS TIC PRECEDED BY STATUS MODIFIER    @ZA03223 27380003
         LA    WKREG1,C8(WKREG1)   POINT TO TIC                         27385003
         MVC   TCCWTICL+C1(C3),C1(WKREG1)  TAKE OFF UNRES LIST @ZA03223 27390003
         B     TCCWM300            ANOTHER BEB FOR CCWS        @ZA03223 27395003
         SPACE 2                                                        27410002
TCCWM150 L     WKREG1,TCCWCCWR     GET REAL END ADDRESS                 27460002
         SH    WKREG1,TCCW16       POINT TO THE POSSIBLE LOC OF         27510002
*                                  A STATUS MODIFIER CCW                27560002
         B     TCCWM154            CHECK TO SEE IF A STATUS MOD@ZA03223 27610003
         SPACE                                                          27615003
TCCWM153 SH    WKREG1,TCCWAINC     GET PREVIOUS CCW POINTER    @ZA03223 27620003
TCCWM154 CLI   CCWCMD-CCW(WKREG1),TIC   TIC FOLLOWED BY TIC    @ZA03223 27625003
         BE    TCCWM200            HANDLE UNRESOLVED TICS      @ZA03223 27630003
         TM    CCWUNU-CCW(WKREG1),CCWSTATM STATUS MODIFIER TIC @ZA03223 27635003
         BO    TCCWS000            TRANSLATE NEXT CCW                   27640003
         B     TCCWM200            HANDLE UNRESOLVED TICS      @ZA03223 27645003
         SPACE 2                                                        27660002
*        NOP TIC PROCESSING TO AVOID TIC TO TIC SITUATION               27670002
TCCWM160 CLI   TCCWCCWL,C1         ONLY ROOM FOR ONE MORE CCW           27710002
         BH    TCCWS000            NO, PLENTY OF ROOM, CONTINUE         27760002
         L     WKREG1,TCCWCCWA     LOAD ADDRESS OF VIRTUAL CCW          27810002
         LA    WKREG1,BEBEL(,WKREG1) INCREMENT BY A CCW                 27820002
         ST    WKREG1,TCCWCCWA     STORE NEW VIRTUAL CCW ADDR           27840002
         B     TCCWM305            NO ROOM, GET A NEW BEB               27842002
         SPACE 2                                                        27846003
*********************************************************************** 27850003
* THIS ROUTINE IS ENTERED FOR A TIC WHICH IS NOT A NOP OR PRECEEDED   * 27950021
* BY A STATUS MODIFIER OR WHEN THE CCW BEING PROCESSED INDICATES END  * 28000021
* OF CHAIN. IF THERE ARE NO UNRESOLVED TICS, CONTROL PASSES TO THE 900* 28050021
* ROUTINE WHICH DOES END OF TRANSLATION PROCESSING AND EXITS. IF THERE* 28100021
* IS AN UNRESOLVED TIC, A NEW BEBLK IS CREATED AND CONTROL PASSES TO  * 28150021
* THE TCCW SUBROUTINE.                                                * 28200021
*********************************************************************** 28220003
TCCWM200 L     WKREG2,TCCWTICL     GET ADDRESS OF FIRST TIC             28300021
         LTR   WKREG2,WKREG2       IS THERE AN ENTRY IN TIC LIST        28350021
         BZ    TCCWM900            NO, END OF PROCESSING                28400021
         L     BEBREG,TCCWBEB      GET FIRST BEBLK ADDRESS              28450021
TCCWM210 L     WKREG3,BEBRLST      GET REAL START ADDRESS               28500021
         LRA   WKREG1,C0(WKREG3)   GET REAL ADDRESS OF REAL START       28550021
         XR    WKREG1,WKREG2       CHECK FOR SAME PAGE                  28600021
         N     WKREG1,TCCWTRUN     AND OFF 4K NOISE BITS                28650021
         BZ    TCCWM220            SAME PAGE, CONT CONVERSION           28700021
         L     BEBREG,BEBCHAIN     GET POINTER TO NEXT BEBLK            28750021
         B     TCCWM210            GO CHECK NEXT BEBLK                  28800021
         SPACE 1                                                        28820003
TCCWM220 AR    WKREG2,WKREG3       CONVERT REAL                         28900021
         LRA   WKREG3,C0(WKREG3)   ADDRESS TO VIRTUAL                   28950021
         SR    WKREG2,WKREG3       *                                    29000021
         MVC   TCCWTICL+C1(C3),C1(WKREG2) MOVE NEXT TIC ADDR TO TCCW    29050021
         L     WKREG3,C4(WKREG2)   GET TIC VIRTUAL ADDRESS              29100021
         LR    REG0,WKREG3         SAVE IT IN REG                       29150021
         L     BEBREG,TCCWBEB      GET FIRST BEB POINTER                29200021
TCCWM225 C     WKREG3,BEBVRST      TIC LESS THAN START ADDR             29250021
         BL    TCCWM230            YES, CHECK SECOND POINTERS           29300021
         C     WKREG3,BEBVREN      TIC GREATER THAN END                 29350021
         BL    TCCWM260            NO, CALCULATE ADDRESS                29400021
TCCWM230 TM    BEBFLAG,BEB2INUS    SECOND SET OF POINTERS USED          29450021
         BZ    TCCWM240            NO, CHECK NEXT BEB BLOCK             29500021
         C     WKREG3,BEBVRST2     TIC LESS THAN START ADDRESS          29550021
         BL    TCCWM240            YES, CHECK NEXT BEBLK                29600021
         C     WKREG3,BEBVREN2     TIC GREATER THAN END ADDRESS         29650021
         BL    TCCWM250            NO, CALCULATE ADDRESS                29700021
TCCWM240 C     WKREG1,BEBCHAIN     ANOTHER BEB BLOCK                    29750021
         BE    TCCWM270            NO, CHECK SECOND POINTERS            29800021
         L     BEBREG,BEBCHAIN     YES, GET CHAIN POINTER               29850021
         B     TCCWM225            CHECK NEW BEB BLOCK                  29900021
         SPACE 2                                                        29920003
TCCWM250 LA    BEBREG,C16(BEBREG)  ADJUST BEB POINTER FOR SECOND PTRS   30000021
TCCWM260 L     WKREG3,BEBRLST      GET REAL START ADDRESS               30050021
         LRA   WKREG3,C0(WKREG3)   GET REAL ADDR OF REAL START          30100021
         L     WKREG1,BEBVRST      GET VIRTUAL START ADDRESS            30150021
         AR    REG0,WKREG3         ADD OR                               30200021
         SR    REG0,WKREG1         SUBTRACT DISPLACEMENT                30250021
         ST    REG0,C0(WKREG2)     STORE REAL ADDRESS IN TIC            30300021
         MVI   C0(WKREG2),TIC      SET IT TO A TIC                      30350021
         B     TCCWM200            YES, CHECK NEXT ENTRY                30400021
         SPACE 2                                                        30450021
TCCWM270 TM    BEBFLAG,BEB2INUS    SECOND SET OF POINTERS AVAILABLE     30500002
         BO    TCCWM280            NO, GET A NEW BEB BLOCK              30550021
         CLI   TCCWCCWL,C3         ROOM FOR 3 CCWS OR MORE              30600021
         BL    TCCWM280            NO, GET A NEW BEB BLOCK              30650021
         OI    BEBFLAG,BEB2INUS    INDICATE SECOND PTRS IN USE          30700021
         LA    BEBREG,C16(BEBREG)  SET BASE UP TO SECOND POINTERS       30750021
         L     WKREG1,TCCWCCWR     SET REAL START ADDRESS      @ZA16169 30810003
         ST    WKREG1,BEBRLST      FROM TCCW TO BEB.           @ZA16169 30820003
         B     TCCWM298            BRANCH TO SET UP ADDRESS             30850002
         SPACE 1                                                        30870003
** NEED AN ADDITIONAL 160 BYTE BLOCK FOR BEB BLOCK, REAL CP    @ZA16169 30920003
TCCWM280 EQU   *                                               @ZA16169 30950003
         BAL   RTNREG,TCCWGTM2     RETURN TO CALLER FOR BLOCK  @ZA16169 31000003
         SPACE 1                                               @ZA16169 31050003
** RETURN FROM CALLER: REG 15 POINTS TO NEW 160 BYTE BLOCK.    @ZA16169 31100003
** INITIALIZE 160 BYTE BLOCK FOR BEB BLOCK AND CONTINUE.       @ZA16169 31150003
TCCWM290 EQU   *                                               @ZA16169 31200003
         XC    C16(C32,REG15),C16(REG15) ZERO 8 WORDS.         @ZA16169 31350003
         SPACE 2                                                        31650021
         ST    REG15,BEBCHAIN      STORE POINTER TO NEXT BLOCK @ZA16169 31670003
         LR    BEBREG,REG15        ESTABLISH BASE              @ZA16169 31690003
         ST    BEBREG,TCCWCBEB     STORE AS CURRENT BEB                 31800021
         MVI   TCCWCCWL,BEBNE      SET LOOP COUNT                       31850021
         LA    WKREG1,BEBSCCW      GET REAL START ADDRESS               31900021
         ST    WKREG1,BEBRLST      INIT REAL START PTR IN BEB           31950021
         L     WKREG2,TCCWSAV7     RESTORE WKREG2.             @ZA16169 31970003
         ST    WKREG1,TCCWCCWR     UPDATE PTR TO NEW REAL START         32000021
TCCWM298 EQU   *                                               @ZA16169 32030003
         L     WKREG1,C4(WKREG2)   VIRTUAL START ADDRESS       @ZA16169 32050003
         ST    WKREG1,BEBVRST      .STORE IN BEB               @ZA16169 32100003
         ST    WKREG1,TCCWCCWA     .STORE IN TCCW              @ZA16169 32110003
         L     WKREG1,TCCWCCWR     GET RECEIVER ADDRESS                 32150021
         LRA   WKREG1,C0(WKREG1)   GET REAL ADDRRSS                     32200021
         STCM  WKREG1,LORD3BYT,C1(WKREG2) STORE IN TIC                  32250021
         B     TCCWS000            BRANCH TO TRANSLATE CCWS             32300002
         TITLE '    IECVTCCW -- CCW TRANSLATOR -- TIC INSERTION'        32350002
*********************************************************************** 32400021
* THIS ROUTINE IS ENTERED IF THE TCCW ROUTINE RUNS OUT OF ROOM FOR    * 32500002
* BUILDING THE REAL CCW STRING. A NEW BEBLOCK WITH ROOM FOR 15 MORE   * 32550002
* CCWS IS OBTAINED AND INITIALIZED. A TIC CCW IS INSERTED AT THE      * 32600021
* END OF THE CURRENT CCW SEGMENT TO POINT TO THE NEW CCW SEGMENT. A   * 32650002
* CHECK IS MADE NOT TO SPLIT A TIC CCW FROM A STATUS MODIFIER CCW.    * 32700021
*********************************************************************** 32800021
TCCWM300 L     WKREG1,TCCWCCWA     GET CURRENT VIRTUAL ADDRESS          32850021
         ST    WKREG1,BEBVREN      AND STORE AS VIRTUAL END             32900021
TCCWM305 L     WKREG1,TCCWCCWR     GET CURRENT REAL ADDRESS             32950002
         ST    WKREG1,BEBRLEN      AND STORE AS REAL END                33000021
** NEED AN ADDITIONAL 160 BYTE BLOCK FOR BEB BLOCK             @ZA16169 33020003
         BAL   RTNREG,TCCWGTM1     RETURN TO CALLER FOR BLOCK. @ZA16169 33050003
** RETURN FROM CALLER: REG 15 POINTS TO NEW 160 BYTE BLOCK.    @ZA16169 33080003
** INITIALIZE 160 BYTE BLOCK FOR BEB BLOCK AND CONTINUE.       @ZA16169 33150003
TCCWM310 EQU   *                                               @ZA16169 33200003
         XC    C16(C32,REG15),C16(REG15)     ZERO 8 WORDS      @ZA16169 33600003
         L     REG14,TCCWCBEB      INSURE BEB PTR IS TO TOP OF BLOCK    33800002
         ST    REG15,BEBCHAIN-BEB(REG14)   SET CHAIN POINTER TO NEXT    33820003
*                                          BLOCK               @ZA16169 33850003
         LA    REG1,C16            TWO CCWS IN LENGTH                   33900002
         L     WKREG1,TCCWSAV6     RESTORE WORK REGISTER 1.    @ZA16169 33920003
         SR    WKREG1,REG1         POINT TO 2ND TO LAST CCW             33950002
         TM    CCWUNU-CCW(WKREG1),CCWSTATM STATUS MODIFIER              34000002
         BO    TCCWM330            YES, BACK UP FOR TIC        @ZA03223 34050003
         LA    WKREG1,CCWLENG(WKREG1) WANT TIC HERE                     34060003
         LA    REG1,CCWLENG        INDICATE ONE TIC NEEDED              34070003
         B     TCCWM340            JUST REPLACE LAST INSTR     @ZA03223 34080003
         SPACE                                                          34090003
TCCWM330 SH    WKREG1,TCCWAINC     BACK UP ONE STEP FURTHER             34100003
         TM    CCWUNU-CCW(WKREG1),CCWSTATM  ALSO STAT MODIFIER?@ZA03223 34110003
         BO    TCCWM335            YES UPDATE REG1                      34120003
         LA    WKREG1,CCWLENG(WKREG1)   POINT BACK TO CORRECT  @ZA03223 34130003
         B     TCCWM340                 ONLY ONE STAT MODIF    @ZA03223 34140003
TCCWM335 LA    REG1,CCWLENG(REG1)  DISP FOR VIRT CCW BACK UP   @ZA03223 34150003
         SPACE 1                                                        34195003
TCCWM340 ST    WKREG1,BEBRLEN      STORE NEW END POINTER                34250002
         L     WKREG2,TCCWCCWA     LOAD VIRTUAL CCW POINTER             34300002
         SR    WKREG2,REG1         BACK OFF REQUIRED BYTES              34350002
         ST    WKREG2,BEBVREN      STORE NEW VIRTUAL END                34400002
         ST    WKREG2,TCCWCCWA     STORE IN TCCW                        34450002
         SPACE 1                                                        34460002
*        SET UP TO POINT TO NEW BEB AS PRIMARY BEB              YM01244 34470002
         LR    BEBREG,REG15        GET PTR TO BEB              @ZA16169 34475003
         ST    BEBREG,TCCWCBEB     STORE AS CURRENT BEB IN TCCW YM01244 34490002
         SPACE 1                                                        34492002
         ST    WKREG2,BEBVRST      STORE NEW VIRTUAL START      YM01244 34500002
         LA    REG14,BEBSCCW       POINT TO FIRST CCW           YM01244 34550002
         ST    REG14,BEBRLST       STORE NEW REAL START         YM01244 34600002
         ST    REG14,TCCWCCWR      STORE NEW REAL START                 34610002
         LRA   WKREG2,C0(REG14)    GET REAL ADDRESS FOR TIC             34650002
         ST    WKREG2,CCW-CCW(WKREG1) STORE IN CCW                      34700002
         MVI   CCWCMD-CCW(WKREG1),TIC SET TIC COMMAND CODE              34750002
         MVI   TCCWCCWL,BEBNE      SET NUMBER OF ENTRIES                34800002
         B     TCCWS000            CONTINUE TRANSLATION                 35150002
         TITLE '    IECVTCCW -- CCW TRANSLATOR -- IDAL ROUTINE'         38050002
*********************************************************************** 38100021
*                                                                       38150021
* BUILD IDAL SUBROUTINE --                                              38200021
*                                                                     * 38250021
* THIS SUBROUTINE BUILDS AN INDIRECT ADDRESS WORD LIST FOR EACH CCW   * 38300021
* WHOSE DATA AREA CROSSES ONE OR MORE PAGE BOUNDARIES. THE LIST       * 38350021
* CONSISTS OF THE TRANSLATED CCW DATA ADDRESS PLUS THE ADDRESS OF     * 38400021
* EACH SUBSEQUENT PAGE REFERENCED BY THE DATA AREA. THE ADDRESS OF    * 38450021
* THE LIST REPLACES THE DATA ADDRESS IN THE CCW AND THE INDIRECT      * 38500021
* FLAG IS TURNED ON.                                                  * 38550021
*                                                                     * 38600021
*********************************************************************** 38650021
TCCWM400 EQU   *                                               @ZA26257 38700003
         TM    TCCWMODB,TCCWPC10   0C4 OCCUR DURING FIXING.    @ZA26257 38710003
         BZ    TCCWM401            NO,                         @ZA26257 38720003
         L     WKREG2,TCCWHICA     YES, ADJ END DATA ADDRESS   @ZA26257 38730003
*                                       TO LAST VALID PAGE.    @ZA26257 38736003
         LR    WKREG1,WKREG2       MOVE START AND END DATA     @ZA26257 38750003
         LR    REG0,WKREG3         ADDRESS AND TRUNCATE BOTH   @ZA26257 38760003
         N     WKREG1,TCCWTRUN     TO PAGE BOUNDARIES AND      @ZA26257 38770003
         N     REG0,TCCWTRUN       SUBTRACT TO EVALUATE THE    @ZA26257 38780003
         SR    WKREG1,REG0         NUMBER OF PAGES.            @ZA26257 38790003
         SRA   WKREG1,TWOKEX       CALCULATE NUMBER OF IDAWS   @ZA26257 38800003
         LA    WKREG1,C3(WKREG1)   REQUIRED FOR DATA.          @ZA26257 38810003
         B     TCCWM402                                        @ZA26257 38820003
TCCWM401 EQU   *                                               @ZA26257 38830003
         SRA   WKREG1,TWOKEX       CALCULATE NUMBER OF IDAWS   @ZA26257 38840003
         LA    WKREG1,C2(WKREG1)   REQUIRED FOR DATA.          @ZA26257 38850003
TCCWM402 EQU   *                                               @ZA26257 38860003
         SR    REG0,REG0           SET NUMBER OF AVAILABLE     @ZA26257 38870003
         IC    REG0,TCCWINDL       IDAWS IN IDAL BLOCK.        @ZA26257 38880003
         CR    WKREG1,REG0         ENOUGH IDAW SLOTS AVAILABLE @ZA26257 38890003
         BNH   TCCWM408            YES,                        @ZA26257 38900003
         SPACE 2                                                        39000021
** NEED AN ADDITIONAL 160 BYTE BLOCK FOR IDAL BLOCK            @ZA16169 39002003
         BAL   RTNREG,TCCWGTM0     RETURN TO CALLER FOR BLOCK  @ZA16169 39004003
         SPACE 1                                               @ZA16169 39006003
** RETURN FROM CALLER: REG 15 POINTS TO NEW 160 BYTE BLOCK.    @ZA16169 39008003
** INITIALIZE 160 BYTE BLOCK FOR IDAL BLOCK AND CONTINUE.      @ZA16169 39010003
         LA    WKREG1,TCCWINDA     GET ADDRESS OF IDAL LIST    @ZA16169 39012003
TCCWM405 EQU   *                                               @ZA16169 39014003
         L     DATARG,C0(WKREG1)   GET CHAIN POINTER                    39016003
         LTR   DATARG,DATARG       WAS CHAIN ZERO                       39018003
         BZ    TCCWM406            YES, STORE POINTER                   39020003
         LR    WKREG1,DATARG       SET CHAIN IN POINTER REG             39022003
         B     TCCWM405            LOOP BACK TO FIND CHAIN END          39024003
         SPACE 1                                                        39026003
TCCWM406 EQU   *                                               @ZA16169 39028003
         ST    REG15,C0(WKREG1)    STORE CHAIN POINTER.        @ZA16169 39030003
         LA    REG15,IDALHL(REG15)   POINT TO FIRST ENTRY      @ZA16169 39038003
         ST    REG15,TCCWINDR      ST ENT AS INDIRECT REC      @ZA16169 39039003
         MVI   TCCWINDL,IDALNE     SET NUMBER OF ENTRIES AS LOOP COUNT  39042003
         LM    WKREG2,DATARG,TCCWSAV7   RESTORE REGISTERS      @ZA16169 39044003
         LA    REG0,IDALNE         INITIALIZE NUMBER OF ENTRIES REG     39070003
         EJECT                                                          39075003
TCCWM408 LA    WKREG1,TWOK         SET AN INCREMENT TO 2K               39080003
         CLI   TCCWEFOP,CCWRDBK    IF EFFECTIVE COMMAND CODE            39100021
         BNE   TCCWM410            IS READ BACKWARD                     39150021
         LNR   WKREG1,WKREG1       CHANGE INCREMENT TO -2K              39200021
         LR    WKREG2,WKREG3       INTERCHANGE DATA START AND           39250002
         LR    WKREG3,DATARG       END ADDRESSES AND ROUND END          39300021
         O     WKREG2,TCCWRON2     ADDRESS UP TO END                    39350021
         B     TCCWM420            GO TO COMMON CODE                    39400021
         SPACE 2                                                        39450021
TCCWM410 N     WKREG2,TCCWTRN2     TRUNCATE 2K FROM END ADDRESS.        39500021
TCCWM420 OI    CCWFLAG,CCWIDA      TURN ON INDIRECT ADDRESS FLAG        39550021
         L     REG15,TCCWINDR      GET REAL ADDRESS AND                 39600021
         LRA   REG15,C0(REG15)     PUT INDIRECT RECEIVER ADDRESS        39650021
         STCM  REG15,LORD3BYT,CCWDATA  STORE DATA ADDRESS               39700021
         L     REG14,TCCWINDR      IN CCW DATA ADDRESS AND INDEX.       39750021
TCCWM425 LRA   REG15,C0(WKREG3)    TRANSLATE START ADDRESS TO REAL      39800021
         ST    REG15,C0(REG14)     MOVE REAL START TO AREA              39850021
         LA    REG14,C4(REG14)     INDICATED BY INDEX. INCREMENT        39900021
         BCTR  REG0,C0             INDEX BY ENTRY LENGTH AND DECREMENT  39950021
         CLI   TCCWEFOP,CCWRDBK    INDIRECT LOOP COUNT BY 1. IF         40000021
         BNE   TCCWM430            COMMAND CODE EQ READ BACKWARD,       40050021
         O     WKREG3,TCCWRON2     ROUND RESULT UP TO END OF PAGE AND   40100021
         B     TCCWM440            BRANCH TO SEE IF LIST IS FINISHED.   40150021
         SPACE 2                                                        40200021
TCCWM430 N     WKREG3,TCCWTRN2     OTHERWISE ROUND RESULT DOWN TO START 40250021
TCCWM440 CR    WKREG3,WKREG2       OF PAGE AND SEE IF IALLIST IS        40300021
         BE    TCCWM450            COMPLETE. COMPARE START AND END ADRS 40350021
         AR    WKREG3,WKREG1       IF EQUAL, IAL COMPLETE. IF NOT INCR  40400021
         B     TCCWM425            START ADDRESS AND BUILD NEXT ENTRY   40450021
         SPACE 2                                                        40500021
TCCWM450 TM    TCCWMODB,TCCWPC10   PIC 10 OCCUR WHILE FIXING ? @YM04960 40506002
         BNO   TCCWM455            NO, BYPASS ZERO IDAL        @YM04960 40512002
         BCTR  REG0,C0             DECREMENT INDIRECT LOOP CT  @YM04960 40518003
         L     WKREG1,TCCWIDAL     STORE AN INVALID IDAL AFTER @ZA26337 40521003
         ST    WKREG1,C0(REG14)    LAST VALID PAGE SO THAT A   @ZA26337 40524003
*                                  CHANNEL PROTECTION CK WILL  @ZA32872 40527003
*                                  OCCUR IF IDAL IS REFERENCED @ZA26337 40530003
*                                  DURING DATA XFR    @YM04960,@ZA26337 40533003
         LA    REG14,C4(REG14)     STEP IDAW PTR IN IDAL BLOCK @YM04960 40536003
         NI    TCCWMODB,FF-TCCWPC10  RESET TCCWPC10 FLAG       @ZA12683 40546003
TCCWM455 STC   REG0,TCCWINDL       STORE INDIR LOOP COUNT, SET @YM04960 40550002
         ST    REG14,TCCWINDR      INDIRECT RECEIVER ADR TO INDEX AND   40600021
         B     TCCWS260            BRANCH TO PROCESS NEXT CCW.          40650021
         TITLE '   IECVTCCW -- CCW TRANSLATOR -- RE-TRANSLATE FUNCTION' 42450002
*********************************************************************** 42500021
*                                                                     * 42550021
* ADDRESS RE-TRANSLATE FUNCTION --                                    * 42600021
*        THE BEB BLOCKS ARE SEARCHED FOR THE ADDRESS PASSED IN        * 42650021
*        REGISTER ZERO. IF FOUND, THE ADDRESS IN THE VIRTUAL          * 42700021
*        CHANNEL PROGRAM IS CALCULATED.                               * 42750021
*                                                                     * 42800021
*********************************************************************** 42850021
         SPACE 2                                                        42900021
TCCWR000 LR    CCWREG,REG0         PLACE REAL CCW ADDRESS IN REG.       42950021
         LA    CCWREG,C0(CCWREG)   ZERO HIGH BYTE FOR COMPARE           43000021
         L     BEBREG,TCCWBEB      LOAD ADDRESS OF FIRST BEB BLOCK      43050021
         USING BEB,BEBREG          ADDRESSABILITY FOR BEB BLOCK         43100021
         SPACE 2                                                        43150021
TCCWR100 C     CCWREG,BEBRLST      CCW ADDR LESS THAN REAL START        43200021
         BL    TCCWR200            YES, NOT IN THIS BLOCK               43250021
         C     CCWREG,BEBRLEN      CCW ADDR GREATER THAN END            43300021
         BNH   TCCWR400            NO, WITHIN LIMITS OF POINTERS        43350021
         TM    BEBFLAG,BEB2INUS    SECOND SET OF POINTERS USED          43400021
         BZ    TCCWR200            NO, LOOK AT NEXT BEB                 43450021
* AT THIS POINT IT IS KNOWN THAT CCW ADDRESS IS NOT LESS THAN           43500021
*  BEBRLST2 FROM LAST TWO COMPARES.                                     43550021
         C     CCWREG,BEBRLEN2     CCW ADDR GREATER THAN END TWO        43600021
         BNH   TCCWR300            NO, WITHIN LIMITS OF POINTERS 2      43650021
TCCWR200 L     BEBREG,BEBCHAIN     GET POINTER TO NEXT BEB              43700021
         LTR   BEBREG,BEBREG       ANOTHER BEB BLOCK                    43750021
         BNZ   TCCWR100            YES, CONTINUE SCAN                   43800021
         B     TCCWRC4             NO, ERROR EXIT                       43850021
         SPACE 2                                                        43900021
* CORRECT BEB FOUND CALCULATE VIRTUAL ADDRESS                           43950021
         SPACE 1                                                        44000021
TCCWR300 LA    BEBREG,BEBPTRLN(BEBREG) INCREMENT TO SECOND POINTERS     44050021
         SPACE 1                                                        44100021
TCCWR400 S     CCWREG,BEBRLST      CALCULATE OFFSET INTO BLOCK          44150021
         A     CCWREG,BEBVRST      CALCULATE VIRTUAL CCW OFFSET         44200021
         LR    REG0,CCWREG         PLACE ADDR IN PARM REG               44250021
         B     TCCWE0R0            EXIT RC 0, DO NOT LOAD REG 0         44300021
         TITLE '    IECVTCCW -- CCW TRANSLATOR -- UNFIX-FREE ROUTINE'   44350002
***************************************************************@ZA16175 44352003
* THIS ROUTINE IS ENTERED WHEN AN ERROR OCCURS IN THE         *@ZA16175 44354003
* PROCESS OF FIXING PAGES, VIA PAGE FIX SERVICES.             *@ZA16175 44356003
*                                                             *@ZA16175 44358003
***************************************************************@ZA16175 44360003
         SPACE 1                                               @ZA16175 44362003
TCCWT000 EQU   *                                               @ZA16175 44364003
         NI    TCCWMODB,FF-TCCWPC10-TCCWPGCK-TCCWECBU          @ZA26555 44364603
*                                                 RESET FLAGS  @ZA26555 44365203
         CLI   TCCWOPTN,TCCWUNFX   UNFIX PROCESSING ACTIVE ??  @ZA16175 44366003
         BE    TCCWU500            YES, UNFIXING ACTIVE.       @ZA16175 44367003
         MVI   TCCWOPTN,TCCWPGER   SET TCCW OPTION CODE TO     @ZA16175 44370003
*                                  INDICATE FIX ERROR.         @ZA16175 44372003
         L     REG14,TCCWPLKR      LD PTR TO CURRENT FIX ENTRY @ZA16175 44376003
         SH    REG14,TCCWAINC       BACK UP TO PREV ENTRY.     @ZA16175 44378003
         OI    C4(REG14),LASTENT   SET AS LAST ENTRY.          @ZA16175 44380003
         SPACE 1                                               @ZA16175 44382003
*              ALL PAGES IN THE LAST FIX ENTRY HAVE BEEN       @ZA16175 44384003
*              UNFIXED, SO LAST FIX ENTRY IS NOT INCLUDED      @ZA16175 44386003
*              IN FIX LIST FOR UNFIXING.                       @ZA16175 44388003
*********************************************************************** 44400021
*                                                                       44450021
* UNFIX - FREE FUNCTION -                                               44500021
*        UNFIXES DATA PAGES AND CREATES A STRING OF 160-BYTE BLOCKS     44550021
*        TO FREE.                                                       44600021
*                                                                       44650021
*********************************************************************** 44700021
         SPACE 2                                                        44750021
TCCWU000 L     FIXREG,TCCWFIX      GET FIX LIST POINTER                 44800021
         SR    REG0,REG0           ZERO ECB POINTER                     44810002
         TM    TCCWMODB,TCCWECBU   IS THE ECB REQUIRED                  44820002
         BZ    TCCWU050            NO, LEAVE THE REGISTER ZERO          44830002
         LA    REG0,FIXECB         POINT TO THE ECB                     44840002
TCCWU050 LA    FIXREG,FIXHL(FIXREG) ZERO HIGH ORDER BYTE                44850002
         C     FIXREG,TCCWPLKR     ANY FIX LIST ENTRIES                 44900021
         BE    TCCWU500            NO, NO UNFIX REQUIRED                44950021
         LR    REG1,FIXREG         LOAD PARM REG WITH LIST              45000002
         MVI   C0(FIXREG),UNFIXIND SET UNFIX REQUEST INDICATOR          45050002
         O     REG1,LISTFORM       SET LIST FORM INDICATOR              45100002
         SR    UCBREG,UCBREG       DO NOT ASSOCIATE FREE WITH TCB       45150002
         OI    TCCWMODB,TCCWPGCK   SET FLAG SO THAT IECVXFRR,  @ZA16175 45160003
*                                  IN EXPR WILL RETURN ON ERR  @ZA16175 45170003
         L     REG15,TCCWFREE      LOAD PTR TO UNFIX ROUTINE   @YM05518 45200002
         BALR  REG14,REG15         GO UNFIX THE PAGES                   45250002
         NI    TCCWMODB,FF-TCCWPGCK   RESET FLAG               @ZA26555 45270003
         SPACE 2                                                        45300021
         TM    TCCWMODB,TCCWECBU   WAS ECB REQUIRED                     45350021
         BZ    TCCWU500            NO, UNFIX COMPLETE                   45400021
         L     WKREG2,TCCWPAGE     SET ONE PAGE INCREMENT REG           45450021
TCCWU100 TM    C0(FIXREG),FIXCONT  CONTINUATION POINTER                 45500021
         BO    TCCWU400            YES, FIND NEXT LIST                  45550021
TCCWU200 L     WKREG3,C0(FIXREG)   LOAD ADDRESS OF FIRST PAGE           45600021
TCCWU300 TM    C0(WKREG3),X00      ACCESS PAGE - IF NOT IN CORE@ZA01894 45650003
*                                  A PAGE EXCEPTION WILL OCCUR          45700021
         AR    WKREG3,WKREG2       INCREMENT BY ONE PAGE                45750021
         CLM   WKREG3,LORD3BYT,C4(FIXREG) END OF FIX ENTRY              45800021
         BL    TCCWU300            NO, ACCESS NEXT PAGE                 45850021
         SPACE 1                                                        45900021
         TM    C4(FIXREG),LASTENT  END OF FIX ENTRIES                   45950021
         BO    TCCWU500            YES, GATHER BLOCKS TO FREE           46000021
         LA    FIXREG,FIXEL(FIXREG) INCREMENT TO NEXT ENTRY             46050021
         B     TCCWU100            LOOP BACK TO CHECK ENTRY             46100021
         SPACE 2                                                        46150021
TCCWU400 L     FIXREG,C0(FIXREG)   GET CONTINUATION                     46200021
         B     TCCWU200            CONTINUE LOOP                        46250021
         SPACE 2                                                        46300021
TCCWU500 EQU   *                                                        46350003
         TM    TCCWMODB,TCCWFCHN   HAVE BLOCKS BEEN CHAINED             46355003
*                                                     @ZA05848,@ZA26555 46358003
         BO    TCCWU600            YES, BYPASS CHAINING        @ZA26555 46361003
         SPACE                                                          46370003
         MVC   TCCW(C4),TCCWINDA   MOVE IDAL BLKS TO FREE CHAIN@ZA05848 46380003
         LA    WKREG2,TCCW         LOAD CHAIN POINTER                   46400021
         BAL   REG14,TCCWU900      SEARCH FOR END OF CHAIN              46500021
         SPACE 1                                                        46550021
         MVC   C0(C4,WKREG2),TCCWFIX MV FIX LIST TO END OF CHAIN        46600021
         BAL   REG14,TCCWU900      SEARCH FOR END OF CHAIN              46650021
         SPACE 1                                                        46700021
         MVC   C0(C4,WKREG2),TCCWBEB MOVE BEBS TO CHAIN END             46750021
         OI    TCCWMODB,TCCWFCHN   SET FREE CHAIN BUILT FLAG   @ZA26555 46760003
TCCWU600 EQU   *                                               @ZA06069 46770003
         TM    TCCWOPTN,F0         ERROR OCCUR                          46800021
         BZ    TCCWRC8             NO ERROR, NORMAL RETURN              46850021
         B     TCCWRC4             ERROR, RETURN CODE 4                 46900021
         SPACE 2                                                        46950021
* SUBROUTINE TO FIND END OF CHAIN                                       47000021
         SPACE 1                                                        47050021
TCCWU900 L     WKREG3,C0(WKREG2)   GET POINTER TO NEXT BLOCK     YM1928 47100002
         LA    WKREG3,C0(WKREG3)   CLEAR HIGH BYTE               YM1928 47110002
         LTR   WKREG3,WKREG3       END OF CHAIN                  YM1928 47160002
         BZR   REG14               YES RETURN TO CALLER          YM1928 47210002
         LR    WKREG2,WKREG3       GET POINTER TO NEXT CHAIN     YM1928 47220002
         B     TCCWU900            LOOP BACK                            47250021
         TITLE 'IECVTCCW -- CCW TRANSLATOR -- SINGLE ADDRESS TRANSLATE' 47300002
*********************************************************************** 47350021
*                                                                     * 47400021
* SINGLE ADDRESS TRANSLATION FUNCTION -                               * 47450021
*        TRANSLATE THE ADDRESS OF THE VIRTUAL CCW PASSED IN REGISTER  * 47500021
*        ZERO TO ITS CORRESPONDING ADDRESS IN THE REAL CHANNEL        * 47550021
*        PROGRAM.                                                     * 47600021
*                                                                     * 47650021
*********************************************************************** 47700021
         SPACE 2                                                        47750021
TCCWX000 LR    CCWREG,REG0         PLACE VIRTUAL ADDRESS IN REG         47800021
         LA    CCWREG,C0(CCWREG)   ZERO HIGH BYTE FOR COMPARE           47850021
         L     BEBREG,TCCWBEB      LOAD ADDRESS OF FIRST BEB BLOCK      47900021
         SPACE 2                                                        47950021
TCCWX100 C     CCWREG,BEBVRST      CCW ADDRESS LESS THAN VIRT START     48000021
         BL    TCCWX150            YES, NOT IN THIS SEG         YM01453 48050002
         C     CCWREG,BEBVREN      CCW ADDR GREATER THAN END            48100021
         BL    TCCWX400            NO, WITHIN LIMITS OF POINTERS        48150021
TCCWX150 TM    BEBFLAG,BEB2INUS    SECOND SET OF POINTERS USED  YM01453 48200002
         BZ    TCCWX200            NO, LOOK AT NEXT BEB                 48250021
         C     CCWREG,BEBVRST2     CCW ADDR GREATER THAN BEG 2  YM01453 48260002
         BL    TCCWX200            NO, OUTSIDE LIMITS OF PTRS 2 YM01453 48270002
         C     CCWREG,BEBVREN2     CCW ADDR GREATER THAN END 2          48300021
         BL    TCCWX300            NO, WITHIN LIMITS OF PTRS 2          48350021
TCCWX200 L     BEBREG,BEBCHAIN     GET POINTER TO NEXT BEB              48400021
         LTR   BEBREG,BEBREG       ANOTHER BEB BLOCK                    48450021
         BNZ   TCCWX100            YES, CONTINUE SCAN                   48500021
         MVI   TCCWOPTN,TCCWTRER   SET TRANSLATE ERROR                  48550021
         B     TCCWRC4             NO, ERROR EXIT                       48600021
         SPACE 2                                                        48650021
TCCWX300 LA    BEBREG,BEBPTRLN(BEBREG) INCREMENT TO SECOND POINTERS     48700021
         SPACE 1                                                        48750021
TCCWX400 S     CCWREG,BEBVRST      CALCULATE OFFSET INTO BLOCK          48800021
         A     CCWREG,BEBRLST      CALCULATE REAL CCW OFFSET            48850002
         LR    REG0,CCWREG         PLACE ADDR IN PARM REG               48900021
         B     TCCWE0R0            EXIT RC 0, DO NOT LOAD ZERO          48950021
         TITLE '    IECVTCCW -- CCW TRANSLATOR -- EXITS'                49000002
************************************************************** @ZA16169 49007003
*                                                            * @ZA16169 49014003
* T C C W   E X I T S                                        * @ZA16169 49021003
*                                                            * @ZA16169 49028003
************************************************************** @ZA16169 49035003
         SPACE 2                                                        49042003
TCCWM900 L     WKREG3,TCCWFRC      FIND FIRST REAL CCW                  49050021
         LRA   REG0,C0(WKREG3)     GET THE REAL ADDRESS                 49100021
TCCWE0R0 MVI   TCCWOPTN,C0         SET OPTION BYTE TO ZERO SAYING OK    49150021
         SR    REG15,REG15         ZERO RETURN CODE                     49200021
         SPACE 2                                                        49210003
TCCWEXIT LM    REG1,REG14,TCCWRGSV LOAD REGISTERS                       49220003
         BR    REG14               RETURN TO CALLER                     49230003
         SPACE 2                                                        49300021
TCCWRC4  LA    REG15,C4            RETURN CODE FOUR                     49350021
         B     TCCWEXIT            RETURN TO CALLER                     49400021
         SPACE 2                                                        49450021
TCCWRC8  LA    REG15,C8            RETURN CODE 8                        49500021
         B     TCCWEXIT            RETURN TO CALLER                     49550021
         SPACE 2                                                        49600021
** RETURN TO CALLER OF TCCW TO OBTAIN A 160 BYTE BLOCK.        @ZA16169 49620003
TCCWGTM0 EQU   *                                               @ZA16169 49650003
         STM   WKREG3,DATARG,TCCWSAV8   SAVE REGS 8 TO 10.     @ZA16169 49659003
TCCWGTM1 EQU   *                                               @ZA16169 49668003
         ST    WKREG1,TCCWSAV6     SAVE WORK REGISTER 1.       @ZA16169 49677003
TCCWGTM2 EQU   *                                               @ZA16169 49686003
         ST    BEBREG,TCCWSAV5     SAVE BEB REGISTER.          @ZA16169 49695003
         ST    WKREG2,TCCWSAV7     SAVE WORK REGISTER 2        @ZA16169 49697003
         ST    RTNREG,TCCWSAVD     SAVE 160B BLK REQ ADDR      @ZA16169 49701003
         MVI   TCCWOPTN,TCCWGTMN   SET TCCW OPTION CODE AND    @ZA16169 49714003
         LA    REG15,C12           RETURN TO INDICATE 160 BYTE @ZA16169 49721003
*                                  BLOCK IS REQUIRED.          @ZA16169 49728003
         B     TCCWEXIT            BRANCH TO COMMON EXIT.      @ZA16169 49735003
         TITLE 'IECVTCCW-- CCW TRANSLATOR -- RECOVERY ROUTINE'          49755003
************************************************************** @YM04960 49856002
*                                                              @YM04960 49859002
* T C C W   R E C O V E R Y  R O U T I N E                     @ZA16175 49860003
*                                                              @ZA16175 49862003
* THIS ROUTINE RECEIVES CONTROL FROM IECVXFRR, THE EXCP FRR    @ZA16175 49862503
* ROUTINE IN IECVEXPR, VIA RTM.  CONTROL IS RETURNED ON --     @ZA16175 49863003
*                                                              @ZA16175 49863503
* 1. INVALID PAGE FAULT RECOVERY ROUTINE:                      @ZA16175 49864003
*   THIS ENTRY IS NECESSARY FOR COMPATABILITY WITH OS MVT      @YM04960 49868003
*   AND VS2 RELEASE 1. IT ALLOWS THE USER TO SET A READ        @YM04960 49871003
*   COUNT LARGER THAN HIS BUFFER SIZE. THE CHANGES MADE FOR    @YM04960 49874003
*   THIS PTM WILL FIX ALL THE VALID PAGES IN THE BUFFER AND    @YM04960 49877003
*   SET THE LAST IDAL ENTRY TO ZERO SO THE CHANNEL PROGRAM     @YM04960 49880003
*   WILL GET A CHANNEL PROTECTION CHECK IF THE RECORD BEING    @YM04960 49883003
*   READ IS LARGER THAN THE VALID SIZE OF THE BUFFER.          @YM04960 49886003
*                                                              @YM04960 49895002
* 2. ABEND 028 FROM PAGE FIX SERVICES:                         @ZA16175 49895503
*    ALL PAGES UP TO ABEND CONDITION HAVE BEEN UNFIXED.  THE   @ZA16175 49896503
*    UNFIX ENTRY IS NOT NECESSARY FOR THE UNFIX PROCESS.       @ZA16175 49897003
*                                                              @ZA16175 49897503
* 3. ABEND 171 FROM PAGE FIX SERVICES:                         @ZA16175 49898003
*    ALL PAGES UP TO ABEND CONDITION HAVE BEEN UNFIXED. THE    @ZA16175 49899003
*    UNFIX ENTRY IS NOT NECESSARY FOR THE UNFIX PROCESS.       @ZA16175 49899503
************************************************************** @YM04960 49900002
IECVTCFR LR    BASREG,REG15        SAVE BASE AS FROM RTM       @ZA05153 49901003
         LA    REG15,IECVTCFR-IECVTCCW CALCULATE THIS DISP.    @ZA05153 49901203
         SR    BASREG,REG15        BACK UP BASE REGISTER       @ZA05153 49901403
         LH    REG2,TCCWSAVA+C2    LOAD SAVED ABEND CODE       @ZA16175 49901503
         CH    REG2,ABEND028       ABEND CODE 028 ??           @ZA16175 49901803
         BE    TCCWT000            YES, CK FOR UNFIXING        @ZA16175 49901903
         CH    REG2,ABEND171       ABEND CODE 171 ??           @ZA16175 49902203
         BE    TCCWT000            YES, CK FOR UNFIXING        @ZA16175 49902503
         SPACE 1                                               @ZA16175 49902803
*                             CHECK FOR COMPATABILITY CASE     @ZA16175 49903703
         L     REG15,TCCWPLKR      RESTORE FIX ENTRY PTR       @ZA05153 49904103
         L     REG2,C0(REG15)      GET FIRST PAGE TO BE FIXED  @YM04960 49904503
         CR    REG2,REG1           WAS FIRST PAGE INVALID      @YM04960 49905603
         BE    TCCWT000            YES, FREE CORE. 800 ABEND   @ZA16169 49905703
         L     WKREG1,TCCWTCB      GET TCB ADDRESS             @YM04960 49908002
         USING TCB,WKREG1          ADDRESSABILITY FOR TCB.     @YM04960 49910002
         TM    TCBPKF,TCBFLAG      KEY ZERO REQUESTOR ?        @YM04960 49912002
         BZ    TCCWT000            YES, FREE CORE. 800 ABEND.  @ZA16169 49914003
         OI    TCCWMODB,TCCWPC10   INDICATE A PIC 10 OCCURRED. @YM04960 49924002
         BCTR  REG1,REG0           GET LAST GOOD PAGE.         @YM08367 49926002
         STCM  REG1,LORD3BYT,C5(REG15)  SET LAST GOOD PAGE TO  @ZA26258 49928003
*                                       THIS FIX ENTRY.        @ZA26258 49930003
         ST    REG1,TCCWHICA       RESET HI FIX ADDRESS.       @YM04960 49932003
*        THE INSTRUCTION TO ADJUST THE END DATA ADDRESS TO THE @ZA26257 49934003
*        LAST GOOD DATA ADDRESS IS DELETED.  THE END DATA      @ZA26257 49936003
*        ADDRESS WILL BE ADJUSTED IN THE IDAL ROUTINE.         @ZA26257 49938003
         B     TCCWM063            RESUME PROCESSING           @YM04960 49944002
         DROP  WKREG1                                          @YM04960 49946002
         TITLE '    IECVTCCW -- CCW TRANSLATOR -- CONSTANTS'            49948002
TCCWFX   DC    V(IEAVPSIX)         PAGE FIX ENTRY POINT        @YM05518 49952002
TCCWFREE DC    V(IEAVPSIF)         UNFIX ENTRY POINT           @YM05518 49960002
TCCWTRUN DC    X'FFFFF000'         FIELD FOR TRUNCATING TO 4K BOUNDARY  50000021
TCCWROUN DC    X'00000FFF'         FIELD OO ROUND UP TO PAGE END        50050021
TCCWTEST TM    UCBTBYT3,C0         COMMAND TEST                         50150021
LISTFORM DC    AL1(128)            BIT 0 OF REG1 INDICATOR              50200021
         DC    AL3(0)              FOR FIX LIST FORMAT FOR FIX          50250021
TCCWTRN2 DC    X'FFFFF800'         2K BOUNDARY FOR CHANNEL              50300021
TCCWRON2 DC    X'000007FF'         2K BOUNDARY FOR CHANNEL              50350021
TCCWPOS  DC    X'0000FFFF'         MASK TO MAKE A POSITIVE VALUE FROM A 50400021
*                                  HALF WORD                            50450021
TCCWRFIX DC    X'40000000'         REGISTER FIX FLAGS                   50500003
TCCWPAGE DC    X'00001000'         PAGE SIZE FOR INCREMENT              50550021
*********************************************************************** 50570003
*****************INVALID IDAW FOR OS MVT COMPATABILITY***************** 50572003
*                                                              @ZA32872 50574003
* THE INVALID IDAW WORD MUST BE CONSTRUCTED TO CAUSE A CHANNEL @ZA32872 50576003
* PROTECTION CHECK INSTEAD OF CHANNEL PROGRAM CHECK. THERE IS  @ZA32872 50578003
* A CASE WHERE SOME CHANNELS WILL TAKE CHARGE OF THE NEXT IDAW @ZA32872 50579003
* AND TREAT THE 'INVALID IDAW' (FF00000F) AS THE NEXT IDAW AND @ZA32872 50580003
* SO PRESENT A FALSE CHANNEL PROGRAM CHECK.  THIS CASE OCCURS  @ZA32872 50581003
* WHEN THE LAST DATA TRANSFER COMPLETES ON THE LAST BYTE OF    @ZA32872 50582003
* THE LAST VALID PAGE.  SINCE THE BYTE COUNT IS NOT ZERO, THE  @ZA32872 50583003
* CHANNEL FETCHES THE NEXT IDAW AND TAKES CHARGE OF IT EVEN    @ZA32872 50584003
* THOUGH THERE IS NO DATA TRANSFER TO STORAGE.                 @ZA32872 50585003
*********************************************************************** 50594003
TCCWIDAL DC    X'00000000'                                     @ZA32872 50596003
TCCWAINC DC    H'8'                CCW LENGTH                           50600021
TCCW16   DC    H'16'               TWO CCWS WORTH                       50650021
ABEND028 DC    X'0028'             ABEND 028                   @ZA16175 50680003
ABEND171 DC    X'0171'             ABEND 171                   @ZA16175 50710003
         EJECT                                                          50750021
* THE OPTABLE CONTAINS AN INDICATOR FOR EACH COMMAND OF STATUS          50800021
* MODIFIERS AND CONTROL COMMANDS DEPENDING ON DEVICE TYPE               50850021
* X'80' INDICATES TAPE                                                  50900021
* X'40' INDICATES TELEPROCESSING                                        50950021
* X'20' INDICATES DIRECT ACCESS                                         51000021
* X'10' INDICATES DISPLAY                                               51050021
* X'08' INDICATES UNIT RECORD                                           51100021
*                                                              @ZA12710 51105003
* X'04' RESERVED                                               @ZA12710 51110003
* X'02' INDICATES UNIQUE DEVICE TESTING REQUIRED FOR FOLLOWING @ZA12710 51120003
*       UNIT RECORD DEVICES: 1287, 1288, 3211, 3851, 3886      @ZA12710 51150003
*       3890, 3540 AND 3800.                                   @ZA12710 51158003
* X'01' 0 - STATUS MODIFIER REQUIRED FOR COMMAND CODE          @ZA12710 51166003
*       1 - INDICATES CONTROL COMMAND, NONE DATA TRANSFER      @ZA12710 51174003
         SPACE 1                                               @ZA12710 51182003
* THE MASK IS TESTED AGAINST THE DEVICE TYPE. IF A BIT IS ON IN         51200021
* COMMON, THEN THE COMMAND IS EITHER A STATUS MODIFIER OR               51250002
* CONTROL COMMAND. THE LOW ORDER BIT IS THEN TESTED TO SEE WHICH        51300002
* IT IS.                                                                51350021
         SPACE 2                                                        51400021
*        DC    X'-0-1-2-3-4-5-6-7-8-9-A-B-C-D-E-F'     X'--'            51450021
OPTABLE  DS    0XL256                                                   51500021
         DC    X'000A00F90000438B0042001900000081'     X'0-'   @ZA24880 51510003
         DC    X'000000A9000000990000000908004099'     X'1-'   @ZA12710 51550003
         DC    X'0000009B002000CB002000D9002000D1'     X'2-'   @ZA16184 51570003
         DC    X'0020009B002000990020009908000099'     X'3-'   @ZA12710 51650003
         DC    X'0000009B002000090020000900200000'     X'4-'   @ZA12710 51700003
         DC    X'00200091002000090000009B08000000'     X'5-'   @ZA12710 51740003
         DC    X'0000009B002000090020009900200000'     X'6-'   @ZA12710 51780003
         DC    X'0020009B002000090000009908000000'     X'7-'   @ZA12710 51820003
         DC    X'0000009B0000000A0000001900000000'     X'8-'   @ZA12710 51860003
         DC    X'00000899210000090000009900000000'     X'9-'   @ZA12710 51900003
         DC    X'0000009B002000090020009900200000'     X'A-'   @ZA12710 51940003
         DC    X'0020089B212000090020009900000000'     X'B-'   @ZA13435 51980003
         DC    X'00000099002000090020009900200000'     X'C-'   @ZA12710 52020003
         DC    X'00200099412000090000009900000000'     X'D-'   @ZA12710 52060003
         DC    X'00000099002000090020009900200000'     X'E-'   @ZA12710 52100003
         DC    X'00200091412000090000009100000000'     X'F-'   @ZA12710 52140003
*                                                              @ZA04760 52308003
TCCWZAP  DC    3CL16'IECVTCCW PATCH  '  ZAP AREA               @ZA08754 52309003
IDENTF   DC    C'IECVTCCW'         TRANSLATOR ID                        52310002
         DC    C' UZ19523  '       PTF NUMBER                  @ZA32872 52310503
         DC    C'&SYSDATE'                                     @ZA08128 52360503
         END                                                            52410503
