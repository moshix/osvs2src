         TITLE 'IGG01931 SECOND LOAD OF TCAM MESSAGE QUEUES OPEN'       00010004
IGG01931 CSECT                                                          00020004
*A-000000-999999                                               @Y02X6N0 00025008
         SPACE 3                                                        00030004
*CHANGE-ACTIVITY = AS FOLLOWS:                                   S21903 00040004
******************** MICROFICHE FLAGS *********************** SUPT CODE 00050004
*A335000,363000,470000,516000,570000                             X01004 00060004
*C341000-342000                                                  X01004 00070004
*C088000                                                         Y01004 00080004
*A363000,409000,509000,512000,517000                             A41033 00230022
*D369000-370000,378000,410000                                    A41033 00230122
*A335000,363000,470000,516000,570000                             X01004 00230222
*C084000,341000-342000,542000-545000                             X01004 00230322
*C088000                                                         Y01004 00230422
*A002000                                                         S21903 00230522
*C002000                                                         S21903 00230622
*C003000,137000,202000,497000,523000,528000-531000               S21903 00230722
*C004000,019000,022000,028000,039000,040000,042000,088000        Y02027 00230806
*C228000,333000,470560                                           Y02027 00230906
*D085000                                                         Y02027 00231006
*A086300,086600,465400,466400,498500,516050                      Y02027 00231106
*C004000,230000,374000,470080-470280,470480,470680,487000      @Z30X8NM 00231208
*D470400,470560-470600,519000-523000,525000,527000-531000      @Z30X8NM 00231308
*A302000,470020,517500,526000,570500                           @Z40X9NG 00231409
*C004000,303000-363400,450000-465000,468000-470000             @Z40X9NG 00231509
*C570700-570910                                                @OZ26164 00261511
         EJECT                                                 @Z40X9NG 00300009
*********************************************************************** 00310022
*                                                                     * 00320022
*MODULE-NAME = IGG01931                                          S21903 00330022
*                                                                S21903 00340022
*DESCRIPTIVE-NAME = SECOND LOAD OF TCAM MESSAGE QUEUES OPEN      S21903 00350022
*                                                                S21903 00360022
*COPYRIGHTS = 'NONE'                                             S21903 00370022
*                                                                S21903 00380022
*STATUS - CHANGE LEVEL 9                                       @Z40X9NG 00400009
*                                                                     * 00500020
*FUNCTION/OPERATION - THIS ROUTINE COMPLETES INITIALIZATION OF        * 00600020
*   THE DEB EXTENTS AND COMPUTES VARIOUS TOTALS REQUIRED BY           * 00700020
*   EXCP DRIVER.  IN ADDITION THIS ROUTINE BUILDS AND INITIALIZES     * 00800020
*   ALL INPUT/OUTPUT BLOCKS, ONE PER DEB EXTENT, REQUIRED FOR         * 00900020
*   DISK OPERATION.                                                   * 01000020
*                                                                     * 01100020
*ENTRY POINTS - THIS ROUTINE IS ENTERED AT IGG01931 VIA AN XCTL       * 01200020
*   FROM AN I/O SUPPORT MOULE OR FROM ANOTHER ACCESS METHOD'S         * 01300020
*   OPEN EXECUTOR.  IT MAY ALSO BE RE-ENTERED FROM THE RELOOP         * 01400020
*   PORTION OF THIS ROUTINE IF IT DETERMINES THAT THERE IS            * 01500020
*   ANOTHER DATA CONTROL BLOCK TO BE OPENED.                          * 01600020
*                                                                     * 01700020
*INPUT - THE REGISTER'S 5,6,7, AND 8 ARE THE INPUT AS FOLLOWS,        * 01800020
*   5 - THE ADDRESS OF THE WTG TABLE PREFIX                      Y02027 01900006
*   6  - THE ADDRESS OF THE BEGINNING OF THE WHERE-TO-GO TABLE        * 02100020
*   7 - THE ADDRESS OF THE COPY OF THE CURRENT DCB               Y02027 02200006
*    8 - THE ADDRESS OF THE CURRENT EXECUTOR'S ENTRY IN THE           * 02400020
*    WHERE-TO-GO TABLE.                                               * 02500020
*                                                                     * 02600020
*OUTPUT - REGISTERS 7 AND 8 WILL BE POSITIONED AT THE NEXT ENTRIES    * 02700020
*   IN THE WHERE-TO-GO TABLE PREFIX AND THE WHERE-TO-GO TABLE    Y02027 02800006
*                                                                     * 02900020
*EXTERNAL ROUTINES - NONE                                             * 03000020
*                                                                     * 03100020
*EXITS - NORMAL                                                       * 03200020
*    THIS ROUTINE EXITS VIA AN XCTL TO THE MODULE IDENTIFIED BY       * 03300020
*    THE NEXT NON-ZERO ENTRY IN THE WHERE TO GO TABLE.                * 03400020
*                                                                     * 03500020
*      - ERROR                                                        * 03600020
*              XCTL TO IGG01933 WITH ERROR CODE IN AVTOPERT    @Z40X9NG 03650009
*                                                                     * 03700020
*TABLES/WORKAREAS - THE WHERE-TO-GO TABLE CONTAINS THE ID      @Z40X9NG 03800009
*   OF THE OPEN EXECUTORS. THE WHERE-TO-GO TABLE PREFIX        @Z40X9NG 03900009
*   CONTAINS THE ADDRESSES OF A COPY OF EACH DCB SPECIFIED       Y02027 04000006
*    IN THE OPEN MACRO INSTRUCTION.  THE OPEN WORK AREA               * 04100020
*   DESCRIBES THE CHARACTERISTICS AND UP TO 16 EXTENTS OF        Y02027 04200006
*    A DATA SET.  THE ADDRESS VECTOR TABLE IS A RESIDENT VECTOR       * 04300020
*    LIST USED IN ALL OPEN EXECUTORS                                  * 04400020
*                                                                     * 04500020
*ATTRIBUTES - THIS ROUTINE IS LOCATED IN LPALIB AND RUNS       @Z40X9NG 04600009
*    AS ENABLED, PRIVILEGED, AND RE-ENTRANT.                          * 04700020
*********************************************************************** 04750009
         EJECT                                                          04800020
*        REGISTER USAGE                                                 04900020
*                                                                       05000020
RE       EQU   0                        WORK REGISTER                   05100020
REG0     EQU   0                        REGISTER 0             @Z40X9NG 05150009
RF       EQU   1                        WORK REGISTER                   05200020
REG1     EQU   1                        REGISTER 1             @Z40X9NG 05250009
RDCB     EQU   2                        ADDRESS OF THE CURRENT DCB      05300020
RTIOT    EQU   3                        WORK REGISTER                   05400020
RWORK    EQU   3                        WORK REGISTER          @Z40X9NG 05450009
RCORE    EQU   4                        ADDRESS OF DCB WORK AREA        05500020
RPAR     EQU   5                        ADDRESS OF FIRST ENTRY IN       05600020
*                                         THE DCB PARAMETER LIST        05700020
RWTG     EQU   6                        ADDRESS OF THE WHERE-TO-GO      05800020
*                                         TABLE                         05900020
RPARC    EQU   7                        ADDRESS OF THE CURRENT          06000020
*                                         ENTRY IN THE DCB              06100020
*                                         PARAMETER LIST                06200020
RWTGC    EQU   8                        ADDRESS OF THE CURRENT          06300020
*                                         ENTRY IN THE WTG TABLE        06400020
RAVT     EQU   9                        ADDRESS OF THE AVT              06500020
REXTENT  EQU   10                       DEB EXTENT             @Z40X9NG 06600009
RDEB     EQU   11                       WORK REGISTER                   06700020
RBASE    EQU   12                       BASE OF THIS ROUTINE            06800020
RC       EQU   13                       WORK REGISTER                   06900020
REG13    EQU   13                       REGISTER 13            @Z40X9NG 06950009
RD       EQU   14                       WORK REGISTER                   07000020
REG14    EQU   14                       REGISTER 14            @Z40X9NG 07050009
RJ       EQU   15                       WORK REGISTER                   07100020
REG15    EQU   15                       REGISTER 15            @Z40X9NG 07150009
*                                                                       07200020
         USING IEDQAVTD,RAVT            AVT DSECT                       07300020
         USING IHADCB,RDCB              DCB DSECT                       07400020
         USING FORCORE,RCORE            DSCB DSECT                      07500020
         USING IEDQDEB,RDEB             DEB DSECT                       07600020
         USING IEDQTCB,RC               TCB DSECT                       07800020
         USING EXTENT,REXTENT           DEB EXTENT             @Z40X9NG 07850009
         EJECT                                                 @Z40X9NG 08000009
         BALR  RBASE,0                  ESTABLISH ADDRESSABILITY        08100020
         USING *,RBASE                                                  08200020
*                                                                       08300020
IGG01931 IEDHJN RESTART                                          S22024 08400022
         L     RCORE,4(RWTGC)           ADDRESS OF THE OPEN WORK AREA   08600020
         L     RDCB,DXUDCBAD            GET THE ADDRESSES OF THE Y02027 08630006
*                                       CURRENT DCB              Y02027 08660006
         L     RAVT,DCBIOBAD            ADDRESS OF THE AVT              08700020
         L     RDEB,DCBDEBAD            LOAD THE BEGINNING ADDR  Y02027 08800006
*                                         OF THE DEB                    08900020
         LA    RF,DEBPRFSZ              GET THE SIZE OF THE DEB         09000020
*                                         PREFIX                        09100020
         SR    RDEB,RF                  SET THE DEB DSECT BASE          09200020
         EJECT                                                          09300020
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     09400020
*                                                                 *     09500020
*        PREPARE FOR SCAN OF DSCB'S TO BUILD THE DEB EXTENTS      *     09600020
*                                                                 *     09700020
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     09800020
         L     RC,AVTTCB                ADDRESS OF THE TCB              09900020
         L     RC,TCBTIO-IEDQTCB(RC)    ADDRESS OF TIOT        @Z40X9NG 10000009
         AH    RC,DCBTIOT               ADD THE OFFSET TO THE DD        10100020
*                                         ENTRY IN THE TIOT             10200020
         SR    RE,RE                    CLEAR EXTENT                    10300020
         SR    RDCB,RDCB                COUNT REGISTERS                 10400020
         IC    RDCB,DSCNOEXT            LOAD THE NUMBER OF EXTENTS      10500020
*                                         ON THE FIRST VOLUME           10600020
         IC    RE,DEBNMEXT              THE TOTAL NUMBER OF EXTENTS     10700020
*                                         TO BE BUILT                   10800020
         LA    REXTENT,DEBUCBAD         LOAD ADDRESS OF 1ST    @Z40X9NG 10900009
*                                         DEB EXTENT                    11000020
         LA    RJ,12(RC)                POINTER TO THE FIRST UCB        11100020
*                                         ADDRESS WORD IN THE TIOT      11200020
         XC    SVCYLNO(FOUR),SVCYLNO    CLEAR FIELD FOR COUNT  @Z40X9NG 11300009
*                                         OF TOTAL CYLINDERS IN         11400020
*                                         THIS DATA SET                 11500020
         EJECT                                                          11600020
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     11700020
*                                                                 *     11800020
*        BUILD FIRST/NEXT DEB EXTENT                              *     11900020
*                                                                 *     12000020
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     12100020
NEXTDSCB EQU   *                                                        12200020
         LA    RF,DSCEXTYP              SET POINTER TO FIRST DSCB       12300020
*                                         EXTENT FIELD ASSUMING A       12400020
*                                         FORMAT 1 DSCB                 12500020
         LA    RD,THREE                 SET THE NUMBER OF EXTENTS       12600020
*                                         ON A FORMAT 1 DSCB            12700020
         SLR   RWORK,RWORK              CLEAR FORMAT 3 INDEX   @Z40X9NG 12800009
         CLI   DSCFMTID,FORM1           FORMAT 1 DSCB ?        @Z40X9NG 12900009
         BE    FORMAT1                  DSCB IS A FORMAT 1              13000020
         LA    RD,FORMAT3               SET THE NUMBER OF EXTENTS       13100020
*                                         ON A FORMAT 3 DSCB            13200020
         LA    RF,4(RCORE)              SET POINTER TO FIRST DSCB       13300020
*                                         EXTENT FIELD ASSUMING A       13400020
*                                         FORMAT 3 DSCB                 13500020
         LA    RWORK,FORM3EXT           SET FORMAT 3 INDEX     @Z40X9NG 13600009
         B     CHECKCT                  GO CK NUMBER OF EXTENTS  S21903 13700022
*                                                                       13800020
FORMAT1  EQU   *                                                        13900020
         LA    RJ,4(RJ)                 INCREMENT UCB POINTRE TO        14000020
*                                         THE NEXT UCB                  14100020
         IC    RDCB,DSCNOEXT            LOAD THE NUMBER OF EXTENTS      14200020
*                                         ON THIS VOLUME                14300020
         EJECT                                                          14400020
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     14500020
*                                                                 *     14600020
*        SET THE POSSIBLE NUMBER OF EXTENTS EQUAL TO THE          *     14700020
*        ACTUAL REMAINING EXTENTS ON THIS VOLUME                  *     14800020
*                                                                 *     14900020
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     15000020
CHECKCT  EQU   *                                                        15100020
         CR    RD,RDCB                  COMPARE THE POSSIBLE NUMBER     15200020
*                                         OF EXTENTS AGAINST THE        15300020
*                                         NUMBER ACTUALLY ON VOLUME     15400020
         BNH   REDUCE                   BRANCH IF THE ACTUAL NUMBER     15500020
*                                         IS GREATER THAN THE INDEX     15600020
         LR    RD,RDCB                  LOAD WITH THE ACTUAL NUMBER     15700020
*                                         OF EXTENTS                    15800020
REDUCE   SR    RDCB,RD                  REDUCE THE NUMBER OF            15900020
*                                         REMAINING EXTENTS             16000020
         EJECT                                                          16100020
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     16200020
*                                                                 *     16300020
*        BUILD THE NEXT EXTENT ON THE DEB                         *     16400020
*                                                                 *     16500020
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     16600020
         USING DEXTENT,RF               ADDRESSABILITY FOR     @Z40X9NG 16630009
*                                       DISK EXTENT            @Z40X9NG 16660009
MOVEUCB  EQU   *                                                        16700020
         MVC   EXUCBAD,ONE(REG15)       MOVE UCB ADDR TO       @Z40X9NG 16800009
*                                         EXTENT                        16900020
         MVI   EXFLAG1,EXWRTSK          ALLOW WRITE SEEKS      @Z40X9NG 17000009
         XC    EXBIN,EXBIN              CLEAR BIN VALUES       @Z40X9NG 17100009
         MVC   EXCCHH,DEXLLMT           MOVE THE BEGINNING AND @Z40X9NG 17200009
*                                         ENDING CCHH'S TO THE          17300020
*                                         EXTENT                        17400020
         ST    RDCB,SVEXTENT            SAVE EXTENT COUNT      @Z40X9NG 17500009
         LH    RDCB,EXECYL              LOAD ENDING CYL ADDR   @Z40X9NG 17600009
*                                         ADDRESS                       17700020
         SH    RDCB,EXSCYL              SUBTRACT THE STARTING  @Z40X9NG 17800009
*                                         CYLINDER ADDRESS              17900020
         LTR   RDCB,RDCB                ARE ALL TRACKS ON THE SAME      18000020
*                                         CYLINDER                      18100020
         BNZ   TRACKCOM                 NO, COMPUTE THE TOTAL  @Z40X9NG 18200009
*                                         NUMBER OF TRACKS              18300020
         LA    RDCB,ONE(RDCB)           ADD ONE TO THE DIFFERENCE       18400020
         A     RDCB,SVCYLNO             BUMP COUNT BY THE      @Z40X9NG 18500009
*                                         TOTAL TO DATE                 18600020
         ST    RDCB,SVCYLNO             SAVE NEW COUNT         @Z40X9NG 18700009
         LH    RDCB,EXETRK              LOAD THE ENDING TRACK  @Z40X9NG 18800009
*                                         ADDRESS                       18900020
         SH    RDCB,EXSTRK              SUBTRACT STARTING ADDR @Z40X9NG 19000009
         LA    RDCB,ONE(RDCB)           BUMP TRACK COUNT BY 1  @Z40X9NG 19100009
         STH   RDCB,EXTRACKS            STORE IN DEB EXTENT    @Z40X9NG 19200009
         B     RESTORE                  RESET RDCB                      19300020
STORECCT EQU   *                                                        19400020
         LA    RDCB,ONE(RDCB)           BUMP COUNT BY 1        @Z40X9NG 19500009
         A     RDCB,SVCYLNO             BUMP COUNT BY THE      @Z40X9NG 19600009
*                                         TO DATE                       19700020
         ST    RDCB,SVCYLNO             SAVE NEW CPOUNT        @Z40X9NG 19800009
         L     RDCB,SVEXTENT            RESTORE EXTENT COUNT   @Z40X9NG 19900009
RESTORE  EQU   *                                                        20000020
         LA    RF,DEXLN(RF)             BUMP DSCB EXTENT PTR   @Z40X9NG 20100009
         BCT   RE,MOREXT                MORE EXTENTS, BR IF YES  S21903 20200022
*                                         EXTENTS TO BUILD              20300020
         B     NOMOEXT                  NO MORE EXTENTS TO BE BUILT     20400020
         EJECT                                                          20500020
MOREXT   EQU   *                                                        20600020
         LA    REXTENT,EXLEN(REXTENT)   POINT TO THE           @Z40X9NG 20700009
*                                       NEXT DEB EXTENT                 20800020
         BCT   RD,SAMEDSCB              BRANCH IF THERE ARE MORE        20900020
*                                         EXTENTS ON THIS DSCB          21000020
         B     GETDCB                   NO MORE EXTENTS ON DSCB         21100020
SAMEDSCB EQU   *                                                        21200020
         CLI   DEXTYPE,DEXFORM3         IS THE NEXT EXTENT THE @Z40X9NG 21300009
*                                       FIFTH EXTENT ON A FORMAT        21400020
*                                         3 DSCB                        21500020
         BNE   MOVEUCB                  NOT FIFTH EXTENT, BUILD THE     21600020
*                                         NEXT EXTENT                   21700020
         LA    RF,ONE(RF)               SKIP TO THE NEXT EXTENT         21800020
         B     MOVEUCB                  BUILD THE NEXT EXTENT           21900020
GETDCB   EQU   *                                                        22000020
         L     RCORE,DSCCORE(RWORK)     LOAD ADDR OF THE NEXT  @Z40X9NG 22100009
*                                       DSCB                            22200020
         B     NEXTDSCB                 BUILD FROM NEXT DSCB            22300020
*                                                                       22400020
         DROP  RF                       DROP ADDRESSABILITY OF @Z40X9NG 22430009
*                                       DISK EXTENT            @Z40X9NG 22460009
         EJECT                                                          22500020
NOMOEXT  EQU   *                                                        22600020
         L     RCORE,4(RWTGC)           RESET WORK AREA POINTER         22700020
         L     RDCB,DXUDCBAD            RESET THE DCB ADDRESS    Y02027 22800006
*                                                                       22900020
         TM    DCBOPTCD,CHKPOINT+CKP3705 IS THIS A CHKPT DCB   @ZM46687 22950000
         BNZ   ENDLOAD                  YES, EXIT TO NEXT LOAD   S22024 23100022
         SR    RE,RE                    CLEAR TWO                       23200020
         SR    RF,RF                    WORK REGISTERS                  23300020
         IC    RF,DSCLSTAR+2            GET RECORDS/TRACK VALUE         23400020
*                                       FROM THE DSCB                   23500020
         LTR   RF,RF                    HAS THE DATA SET BEEN           23600020
*                                         FORMATTED CORRECTLY           23700020
         BZ    NOFORMAT                 NO, BRANCH                      23800020
         SR    RCORE,RCORE              CLEAR UNDEX REGISTER            23900020
         TM    DCBOPTCD,DCBOPTRM        TEST FOR REUSABLE      @Z40X9NG 24000009
*                                       QUEUEING               @Z40X9NG 24050009
         BO    SKIP1                    YES, SKIP QUEUE        @Z40X9NG 24100009
*                                       CONSTANT UPDATE        @Z40X9NG 24150009
         LA    RCORE,QUECONST           SET THE QUEUEING CONSTANT       24200020
SKIP1    EQU   *                                               @Z40X9NG 24250009
         ST    RF,AVTRCTRR(RCORE)       STORE RECORDS/TRACK VALUE       24300020
*                                         IN THE AVT                    24400020
         LR    RJ,RF                    COPY RECORDS/TRACK VALUE        24500020
         M     RE,AVTTRCYR(RCORE)       MULTIPLY RECORDS/TRACK BY       24600020
*                                         TRACKS/CYLINDER GIVING        24700020
*                                         RECORDS/CYLINDER              24800020
         SR    RE,RE                    CLEAR MULTIPLY REGISTER         24900020
         M     RE,SVCYLNO               MULT. RECORDS/TRACK BY @Z40X9NG 25000009
*                                         BY TOTAL CYLINDERS GIVING     25100020
*                                         THE TOTAL NUMBER OF RECORDS   25200020
         ST    RF,AVTTOTNR(RCORE)       STORE TOTAL NUMBER OF           25300020
*                                         RECORDS IN THE AVT            25400020
         LTR   RCORE,RCORE              TEST FOR NON - REUSABLE         25500020
*                                         QUEUEING                      25600020
         BNE   THRESH                   QUEUEING IS NON-REUSABLE,       25700020
*                                         CALCULATE THE THRESHOLD       25800020
*                                         VALUE                         25900020
         EJECT                                                          26000020
*        QUEUEING IS REUSABLE, CALCULATE                                26100020
*             THE LOADPOINT VALUE                                       26200020
*                                                                       26300020
         LR    RD,RF                    COPY NUMBER OF RECORDS          26400020
         SRL   RD,SHIFT3                DIVIDE RECORDS BY 8             26500020
         SRL   RF,SHIFT2                DIVIDE RECORDS BY 4             26600020
         AR    RF,RD                    WE HAVE JUST COMPUTED           26700020
*                                         3/8 THS OF THE TOTAL          26800020
*                                         NUMBER OF RECORSD ON THIS     26900020
*                                         DATA SET                      27000020
         ST    RF,AVTLODPT              STORE IN THE AVT                27100020
         B     RECTRKXT                 BRANCH AROUND THE THRESHOLD     27200020
*                                         CODE                          27300020
         EJECT                                                          27400020
THRESH   EQU   *                                                        27500020
         SR    RF,RF                    CLEAR THRESHOLD REGISTER        27600020
         IC    RF,DCBTHRES              INSERT THRESHOLD VALUE          27700020
         LTR   RF,RF                    HAS A THRESHOLD VALUE BEEN      27800020
*                                         SPECIFIED                     27900020
         BNZ   MULTIPLY                 YES, BRANCH                     28000020
         LA    RF,DEFAULT               ASSIGN A DEFAULT VALUE OF 95    28100020
MULTIPLY EQU   *                                                        28200020
         M     RE,AVTTOTNR(RCORE)       MULTIPLY THE TOTAL NUMBER       28300020
*                                         OF RECORDS IN THE DATA        28400020
*                                         SET BY THE THRESHOLD VALUE    28500020
         LA    RC,PERCENT               LOAD THE PERCENTAGE FACTOR      28600020
         DR    RE,RC                    DIVIDE THE THRESHOLD VALUE      28700020
*                                         BY THE PERCENTAGE FACTOR      28800020
         LTR   RE,RE                    WAS THERE A REMAINDER           28900020
         BZ    NOINC                    NO, BRANCH             @Z40X9NG 29000009
         LA    RF,1(RF)                 YES, INCREMENT THE              29100020
NOINC    EQU   *                                               @Z40X9NG 29200009
         ST    RF,AVTHRESN              STORE THE CLOSEDOWN             29300020
*                                         THRESHOLD VALUE IN THE AVT    29400020
         SPACE 2                                               @Z40X9NG 29500009
RECTRKXT EQU   *                                                        29600020
         SR    RF,RF                    CLEAR THE EXTENT REGISTER       29700020
         IC    RF,DEBNMEXT              LOAD THE NUMBER OF EXTENTS      29800020
         MR    RE,RJ                    MULTIPLY TOTAL NUMBER OF        29900020
*                                         EXTENTS BY RECORDS/TRACK      30000020
         ST    RF,AVTVOLRR(RCORE)       STORE TOTAL IN AVT              30100020
         EJECT                                                          30200020
************************************************************** @Z40X9NG 30200709
*                                                            * @Z40X9NG 30201409
*        GET BLOCK OF SRB/IOSB'S - ONE PAIR FOR EACH EXTENT  * @Z40X9NG 30202109
*                                                            * @Z40X9NG 30202809
************************************************************** @Z40X9NG 30203509
         MVI   AVTOPERT,TCAMER0F        SET ERROR ID           @Z40X9NG 30204209
         SLR   REG14,REG14              CLEAR WORK REGISTER    @Z40X9NG 30204909
         SLR   REG15,REG15              CLEAR WORK REGISTER    @Z40X9NG 30205609
         IC    REG15,DEBNMEXT           GET NUMBER OF EXTENTS  @Z40X9NG 30206309
         LA    REG1,BLKSIZE             GET LENGTH OF ONE      @Z40X9NG 30207009
*                                       SRB/IOSB PAIR          @Z40X9NG 30207709
         MR    REG14,REG1               CALCULATE SIZE OF BLOCK@Z40X9NG 30208409
*                                       OF SRB/IOSB'S          @Z40X9NG 30209109
         LA    REG0,PREFIX(,REG15)      ADD LENGTH OF PREFIX   @Z40X9NG 30209809
*                                       TO SRB/IOSB BLOCK      @Z40X9NG 30210509
         LR    RWORK,REG0               SAVE LENGTH            @Z40X9NG 30211209
         SPACE 1                                               @Z40X9NG 30211909
*        GET STORAGE FOR SRB/IOSB'S IN CSA - ADDRESS OF        @Z40X9NG 30212609
*        STORAGE IS RETURNED IN REGISTER 1                     @Z40X9NG 30213309
         GETMAIN RC,LV=(0),SP=CSA,BNDRY=PAGE GET STORAGE       @VS41082 30214009
         SPACE 1                                               @Z40X9NG 30214709
         LTR   REG15,REG15              WAS GETMAIN GOOD       @Z40X9NG 30215409
         BNZ   WTGSETUP                 NO, BRANCH             @Z40X9NG 30216109
         EJECT                                                 @Z40X9NG 30216809
************************************************************** @Z40X9NG 30217509
*                                                            * @Z40X9NG 30218209
*        INITIALIZE PREFIX AND CHAIN BLOCK OFF TCX           * @Z40X9NG 30218909
*                                                            * @Z40X9NG 30219609
************************************************************** @Z40X9NG 30220309
         USING IEDQTCX,REG15            TCX ADDRESSABILITY     @Z40X9NG 30221009
         ST    RWORK,PRELENG(,REG1)     PUT LENGTH IN FIRST    @Z40X9NG 30221709
*                                       WORD OF PREFIX         @Z40X9NG 30222409
         L     REG15,CVTPTR             GET CVT ADDRESS        @Z40X9NG 30223109
         L     REG15,CVTAQAVT-CVT(,REG15) GET TCX ADDRESS      @Z40X9NG 30223809
         L     REG13,TCXSIOSB           GET ADDR OF 1ST BLOCK  @Z40X9NG 30224509
*                                       OF SRB/IOSB'S          @Z40X9NG 30225209
CHAIN    EQU   *                                               @Z40X9NG 30225909
         ST    REG13,PRELINK(,REG1)     POINT NEW BLOCK TO     @Z40X9NG 30226609
*                                       FIRST BLOCK            @Z40X9NG 30227309
         CS    REG13,REG1,TCXSIOSB      WAS ELEMENT UPDATED ?  @Z40X9NG 30228009
         BNE   CHAIN                    YES, TRY AGAIN         @Z40X9NG 30228709
*                                       NO, NEW BLOCK IS NOW   @Z40X9NG 30229409
*                                       FIRST BLOCK            @Z40X9NG 30230109
         DROP  REG15                                           @Z40X9NG 30230809
         SPACE 3                                               @Z40X9NG 30231509
************************************************************** @Z40X9NG 30232209
*                                                            * @Z40X9NG 30232909
*        FIX THE BLOCK OF SRB/IOSB'S                         * @Z40X9NG 30233609
*                                                            * @Z40X9NG 30234309
************************************************************** @Z40X9NG 30235009
         SPACE 1                                               @Z40X9NG 30235709
FIXBLK   EQU   *                                               @Z40X9NG 30236409
         LR    REG15,RWORK              GET LENGTH OF BLOCK    @Z40X9NG 30237109
         BAL   REG14,FIXPAGE            FIX SRB/IOSB BLOCK     @Z40X9NG 30237809
         EJECT                                                 @Z40X9NG 30238509
************************************************************** @Z40X9NG 30239209
*                                                            * @Z40X9NG 30239909
*        SET UP REGISTERS TO USE MVCL TO CLEAR ENTIRE BLOCK  * @Z40X9NG 30240609
*                                                            * @Z40X9NG 30241309
*              0  - START OF FIELD TO CLEAR                  * @Z40X9NG 30242009
*              1  - PAD CHARACTER IN HI ORDER BYTE           * @Z40X9NG 30242709
*                   LENGTH IN LOW ORDER THREE BYTES          * @Z40X9NG 30243409
*              14 - NOT CHANGED IF REG15=0                   * @Z40X9NG 30244109
*              15 - SET TO 0 IMPLIES USE PAD CHARACTER ONLY  * @Z40X9NG 30244809
************************************************************** @Z40X9NG 30245509
         SPACE 1                                               @Z40X9NG 30246209
         L     REG14,AVTGETMN+FOUR      GET BLOCK ADDR SAVED   @Z40X9NG 30246909
*                                       BY FIXPAGE SUBROUTINE  @Z40X9NG 30247609
         L     REG1,PRELENG(,REG14)     GET LENGTH OF BLOCK    @Z40X9NG 30248309
         SH    REG1,PRELEN              DECREMENT FOR PREFIX   @Z40X9NG 30249009
         LA    REG1,ZERO(,REG1)         CLEAR HI ORDER BYTE -  @Z40X9NG 30249709
*                                       IT CONTAINS THE PAD    @Z40X9NG 30250409
*                                       CHARACTER FOR MVCL     @Z40X9NG 30251109
         SLR   REG15,REG15              CLEAR TO INDICATE NO   @Z40X9NG 30251809
*                                       BYTES MOVED FROM       @Z40X9NG 30252509
*                                       'FROM' FIELD           @Z40X9NG 30253209
         LA    REG14,PREFIX(,REG14)     BUMP PAST PREFIX       @Z40X9NG 30253909
         LR    REG0,REG14               SET FIELD TO CLEAR     @Z40X9NG 30254609
*                                       (USE R14 TO SAVE ADDR  @Z40X9NG 30255309
*                                       OF SRB/IOSB BLOCK)     @Z40X9NG 30256009
         MVCL  REG0,REG14               CLEAR SRB/IOSB BLOCK   @Z40X9NG 30256709
         EJECT                                                 @Z40X9NG 30257409
************************************************************** @Z40X9NG 30258109
*                                                            * @Z40X9NG 30258809
*        INITIALIZE SRB AND IOSB                             * @Z40X9NG 30259509
*                                                            * @Z40X9NG 30260209
************************************************************** @Z40X9NG 30260909
         SPACE 1                                                        30261609
         LA    REXTENT,DEBUCBAD         GET PTR TO UCB ADDR    @Z40X9NG 30262309
         LA    REG15,SRBSIZE(,REG14)    POINT TO IOSB THAT     @Z40X9NG 30263009
*                                       FOLLOWS 1ST SRB        @Z40X9NG 30263709
         ST    REG15,DCBIOBAD           USE DCB AS TEMPORARY   @Z40X9NG 30264409
*                                       SAVE AREA OF 1ST IOSB  @Z40X9NG 30265109
*                                       ADDRESS                @Z40X9NG 30265809
         SLR   REG13,REG13              CLEAR FOR INSERT       @Z40X9NG 30266509
         IC    REG13,DEBNMEXT           GET # OF SRB/IOSB'S    @Z40X9NG 30267209
         SPACE 1                                               @Z40X9NG 30267909
         USING SRBSECT,REG14            SRB ADDRESSABILITY     @Z40X9NG 30268609
         USING IOSB,REG15               IOSB ADDRESSABILITY    @Z40X9NG 30269309
INIT     EQU   *                                               @Z40X9NG 30270009
         ST    REG15,SRBPARM            POINT SRB TO IOSB      @Z40X9NG 30270709
         MVC   SRBID,IDSRB              SET SRB ID             @Z40X9NG 30271409
         MVI   IOSDVRID,TCAM            SET TCAM'S DRIVER ID   @Z40X9NG 30272109
         L     REG1,CVTPTR              GET CVT POINTER        @Z40X9NG 30272809
         LA    REG0,CVTBRET-CVT(,REG1)  GET ADDRESS OF BR 14   @VS41093 30273509
         ST    REG0,IOSPGAD             SET IO TERMINATION     @VS41093 30274209
*                                       ROUTINE ADDRESS        @Z40X9NG 30274909
         L     REG1,CVTAQAVT-CVT(,REG1) GET TCX ADDRESS        @VS41093 30275609
         MVC   IOSASID,TCXASID-IEDQTCX(REG1) SET ASID          @VS41093 30276309
         ST    REG14,IOSSRB             SET SRB ADDRESS        @Z40X9NG 30277009
         MVC   IOSUCB+ONE(THREE),EXUCBAD GET UCB ADDR FROM DEB @Z40X9NG 30277709
         MVC   IOSFMSK,EXFLAG1          SET MODE SET/FILE MASK @Z40X9NG 30278409
         MVI   IOSCKEY,TCAMKEY          SET PROTECT KEY OF     @Z40X9NG 30279109
*                                       THE CHANNEL PROGRAMS   @Z40X9NG 30279809
         ST    RDEB,IOSDSID             SET DEB ADDRESS        @Z40X9NG 30280509
         SPACE 1                                               @Z40X9NG 30281209
         LA    REG14,BLKSIZE(,REG14)    POINT TO NEXT SRB      @Z40X9NG 30281909
         LA    REG15,BLKSIZE(,REG15)    POINT TO NEXT IOSB     @Z40X9NG 30282609
         LA    REXTENT,EXLEN(,REXTENT)  POINT TO NEXT UCB ADDR @Z40X9NG 30283309
         BCT   REG13,INIT               CONTINUE IF MORE       @Z40X9NG 30284009
*                                       SRB/IOSB'S             @Z40X9NG 30284709
         SPACE 1                                               @Z40X9NG 30285409
         DROP  REG14                    SRB ADDRESSABILITY     @Z40X9NG 30286109
         DROP  REG15                    IOSB ADDRESSABILITY    @Z40X9NG 30286809
         EJECT                                                 @Z40X9NG 30287509
************************************************************** @Z40X9NG 30300009
*                                                            * @Z40X9NG 30350009
*        GET AND FIX ALL IOSB EXTENSIONS (IOSBE'S)           * @Z40X9NG 30400009
*                                                            * @Z40X9NG 30450009
************************************************************** @Z40X9NG 30500009
         SLR   REG1,REG1                CLEAR WORK REGISTER    @Z40X9NG 30550009
         IC    REG1,DEBNMEXT            GET # OF EXTENTS       @Z40X9NG 30600009
         MH    REG1,SZIOSBE             GET SIZE OF IOSBE'S    @Z40X9NG 30650009
         LA    REG0,AVTIOBR             ASSUME REUS QUEUES     @Z40X9NG 30700009
         LTR   RCORE,RCORE              TEST INDEX REGISTER    @Z40X9NG 30750009
         BZ    GET                      IF 0, QUEUES ARE       @Z40X9NG 30800009
*                                       REUS - BRANCH          @Z40X9NG 30850009
         LA    REG0,AVTIOBN             IF NOT 0, QUEUES ARE   @Z40X9NG 30900009
*                                       NON-REUS               @Z40X9NG 30950009
GET      EQU   *                                               @Z40X9NG 31000009
         LR    RWORK,REG1               SAVE LENGTH            @Z40X9NG 31050009
         ICM   REG1,HIBYTE,SPIOSBE      SET SUBPOOL ID         @Z40X9NG 31100009
         BAL   REG14,AVTPAR             BR TO GETMAIN CODE     @Z40X9NG 31150009
         SPACE 1                                               @Z40X9NG 31200009
         L     REG15,AVTGETMN           GET LENGTH OF          @Z40X9NG 31250009
*                                       GETMAINED STORAGE      @Z40X9NG 31300009
         L     REG1,AVTGETMN+FOUR       GET PTR TO WORD WITH   @Z40X9NG 31350009
*                                       ADDR OF STORAGE        @Z40X9NG 31400009
         L     REG1,ZERO(,REG1)         GET PTR TO STORAGE     @Z40X9NG 31450009
         BAL   REG14,FIXPAGE            FIX IOSBE'S            @Z40X9NG 31500009
         EJECT                                                 @Z40X9NG 31550009
************************************************************** @Z40X9NG 31600009
*                                                            * @Z40X9NG 31650009
*        INITIALIZE IOSBE'S                                  * @Z40X9NG 31700009
*                                                            * @Z40X9NG 31750009
************************************************************** @Z40X9NG 31800009
         LA    REG1,ZERO(,RWORK)        GET LENGTH OF IOSBE'S  @Z40X9NG 31850009
*                                       AND CLEAR HI-ORDER BYTE@Z40X9NG 31900009
*                                       (PAD CHARACTER)        @Z40X9NG 31950009
         L     REG14,AVTGETMN+FOUR      GET ADDR OF IOSBE'S -  @Z40X9NG 32000009
*                                       (SAVED BY FIXPAGE)     @Z40X9NG 32050009
         LR    REG0,REG14               SET FIELD TO BE CLEARED@Z40X9NG 32100009
         SLR   REG15,REG15              INDICATE NO BYTES MOVED@Z40X9NG 32150009
*                                       FROM 'FROM' FIELD      @Z40X9NG 32200009
         MVCL  REG0,REG14               CLEAR IOSB'S           @Z40X9NG 32250009
         LR    RWORK,REG14              SAVE START ADDR OF     @Z40X9NG 32300009
*                                       IOSBE'S                @Z40X9NG 32350009
         L     REG13,DCBIOBAD           GET ADDR OF 1ST IOSB - @Z40X9NG 32400009
*                                       SAVED HERE DURING      @Z40X9NG 32450009
*                                       IOSB INITIALIZATION    @Z40X9NG 32500009
         SH    REG14,SZIOSBE            SUBT SIZE OF 1 IOSBE   @Z40X9NG 32550009
         ST    REG14,DCBIOBAD           SET IOSBE ADDR IN DCB  @Z40X9NG 32600009
         SLR   REG15,REG15              CLEAR FOR INSERT       @Z40X9NG 32650009
         IC    REG15,DEBNMEXT           GET NO. OF IOSBE'S     @Z40X9NG 32700009
         SPACE 2                                               @Z40X9NG 32750009
         USING IOSBE,RWORK              IOSBE ADDRESSABILITY   @Z40X9NG 32800009
         USING IOSB,REG13               IOSB ADDRESSABILITY    @Z40X9NG 32850009
INITLOOP EQU   *                                               @Z40X9NG 32900009
         STCM  REG13,AD,IOSBEIOS        SET PTR TO IOSB        @Z40X9NG 32950009
         ST    RWORK,IOSUSE             MAKE IOSBE THE WORK    @Z40X9NG 33000009
*                                       AREA FOR THE IOSB      @Z40X9NG 33050009
         MVI   IOSBEENT,IOSBESIO        SET ENTRY CODE FOR     @Z40X9NG 33100009
*                                       SVC 102                @Z40X9NG 33150009
         MVI   IOSBEFLG,IOSBEEOL+IOSBERDY SET EOL FLAG AND     @Z40X9NG 33200009
*                                       READY FOR I/O FLAG     @Z40X9NG 33250009
         TM    DCBOPTCD,DCBOPTRM        REUS QUEUES            @Z40X9NG 33300009
         BO    REUS                     YES, BRANCH            @Z40X9NG 33350009
         OI    IOSBEFLG,IOSBENRQ        SET NON-REUS QUEUES    @Z40X9NG 33400009
REUS     EQU   *                                               @Z40X9NG 33450009
         SPACE 1                                               @Z40X9NG 33500009
         LA    REG13,BLKSIZE(,REG13)    PTR TO NEXT IOSB       @Z40X9NG 33550009
         LA    RWORK,IOSBELEN(,RWORK)   PTR TO NEXT IOSBE      @Z40X9NG 33600009
         BCT   REG15,INITLOOP           CONTINUE IF MORE IOSBE @Z40X9NG 33650009
         DROP  RWORK                                           @Z40X9NG 33700009
         DROP  REG13                                           @Z40X9NG 33750009
         EJECT                                                 @Z40X9NG 33800009
************************************************************** @Z40X9NG 33850009
*                                                            * @Z40X9NG 33900009
*        INITIALIZE TCAM'S PURGE ENTRY IN THE VECTOR OF IOS  * @Z40X9NG 33950009
*        DRIVERS (VOID). THIS ENTRY POINTS TO CODE IN IEDQEB * @Z40X9NG 34000009
*        (IGC0010B) THAT IS BRANCHED TO BY THE PURGE CODE    * @Z40X9NG 34050009
*        OF IOS. IEDQOT01 WILL RESET THIS ENTRY IN THE VOID. * @Z40X9NG 34100009
*                                                            * @Z40X9NG 34150009
************************************************************** @Z40X9NG 34200009
         L     RWORK,CVTPTR             GET CVT ADDR                    34250009
         L     RWORK,CVTIXAVL-CVT(,RWORK) GET IOCOM ADDRESS    @Z40X9NG 34300009
         L     RWORK,IOCVOID-IOCOM(,RWORK) GET VOID ADDRESS    @Z40X9NG 34350009
         LA    RWORK,VOIEL*TCAM(,RWORK) POINT TO TCAM'S SLOT   @Z40X9NG 34400009
*                                       IN THE VOID            @Z40X9NG 34450009
         USING VOID,RWORK               VOID ADDRESSABILITY    @Z40X9NG 34500009
         CLC   VOIPRG,VOIRSTR           HAS PURGE ADDR BEEN    @Z40X9NG 34550009
*                                       CHANGED FROM INITIAL   @Z40X9NG 34600009
*                                       NO-OP                  @Z40X9NG 34650009
         BNE   FIXDCB                   YES,BRANCH             @Z40X9NG 34700009
         SPACE 1                                               @Z40X9NG 34750009
*                                       ISSUE LOAD TO FIND     @Z40X9NG 34800009
*                                       ADDRESS OF TCAM'S      @Z40X9NG 34850009
         LOAD  EP=IGC0010B              PURGE ROUTINE          @Z40X9NG 34900009
         SPACE 1                                               @Z40X9NG 34950009
         LR    REG1,REG0                COPY IGC0010B ADDR     @Z40X9NG 35000009
         AH    REG0,PURGEOFF(,REG1)     ADDR OF PURGE CODE     @Z40X9NG 35050009
*                                       IN IGC0010B            @Z40X9NG 35100009
         ST    REG0,VOIPRG              SET PURGE ADDRESS      @Z40X9NG 35150009
         DELETE EP=IGC0010B             DELETE PURGE ROUTINE   @Z40X9NG 35200009
         SPACE 1                                               @Z40X9NG 35250009
         DROP  RWORK                                           @Z40X9NG 35300009
         EJECT                                                 @Z40X9NG 35350009
************************************************************** @Z40X9NG 35400009
*                                                            * @Z40X9NG 35450009
*        FIX THE DCB                                         * @Z40X9NG 35500009
*                                                            * @Z40X9NG 35550009
************************************************************** @Z40X9NG 35600009
FIXDCB   EQU   *                                               @Z40X9NG 35650009
         LR    REG1,RDCB                ADDRESS OF DCB         @Z40X9NG 35700009
         LA    REG15,DCBLNG             LENGTH OF DCB          @Z40X9NG 35750009
         BAL   REG14,FIXPAGE            FIX THE DCB            @Z40X9NG 35800009
         EJECT                                                          36350021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     36400020
*                                                                 *     36500020
*              XCTL TO THE NEXT OPEN EXECUTOR                     *     36600020
*                                                                 *     36700020
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     36800020
ENDLOAD  EQU   *                                                        37100020
         L     RCORE,4(RWTGC)           LOAD THE ADDRESS OF THE         37200020
*                                         OPEN WORK AREA                37300020
         MVC   AVTEZERO(TWO,RWTGC),OPENLD3 MOVE THE ID FOR THE @Z30X8NM 37400008
*                                         THIRD LOAD TO THE OPEN        37500020
*                                         WORK AREA                     37600020
RELOOP   EQU   *                                                        37700020
         LA    RWTGC,8(RWTGC)           INCREMENT POINTER TO NEXT       37900020
*                                         ENTRY IN THE WTG TABLE        38000020
         LA    RPARC,4(RPARC)           INCREMENT POINTER TO THE        38100020
*                                         NEXT DCB IN THE LIST          38200020
         CLC   0(2,RWTGC),AMIDCNST      IS IGG01931 REQUIRED AGAIN      38300020
         BE    RESTART                  IF YES, RETURN TO BEGINNING     38400020
         CLC   0(2,RWTGC),OPIDCNST      HAVE WE PROCESSED THE LAST      38500020
*                                         ENTRY IN THE WTG TABLE        38600020
         BNE   RELOOP                   NO, TEST THE NEXT ENTRY         38700020
         LR    RPARC,RPAR               RESET POINTER TO FIRST OF       38800020
*                                         THE DCB PARAMETER LIST        38900020
         LA    RWTGC,32(RWTG)           RESET POINTER TO FIRST          39000020
*                                         ENTRY IN WTG TABLE            39100020
ZCHEK    EQU   *                                                        39200020
         CLI   ZERO(RWTGC),ZERO         HAVE WE COMPLETED      @Z40X9NG 39300009
*                                         FOR THIS DCB                  39400020
         BNE   XCTLRTNE                 IF NOT, TRANSFER CONTROL        39500020
         LA    RWTGC,8(RWTGC)           PICK UP ADDRESS OF THE NEXT     39600020
*                                         ENTRY IN THE WTG TABLE        39700020
         LA    RPARC,4(RPARC)           PICK UP ADDRESS OF THE NEXT     39800020
*                                         DCB IN PARAMETER LIST         39900020
         B     ZCHEK                    TEST THE NEXT ENTRY             40000020
XCTLRTNE EQU   *                                                        40100020
         LA    RJ,DXCCW12               ADDRESS OF A DOUBLE WORD        40200020
         MVC   6(2,RWTG),0(RWTGC)       PUT ID IN PARAMETER LIST        40300020
         XCTL  DE=(RWTG),SF=(E,(15))    TRANSFER CONTROL                40500020
         EJECT                                                          40600020
TRACKCOM EQU   *                                                        40700020
         ST    RDCB,SVCYLCNT            SAVE CYL COUNT         @Z40X9NG 40800009
         ST    RCORE,SVDSCBAD           SAVE DSCB ADDRESS      @Z40X9NG 40900009
         L     RCORE,CVTPTR             GET CVT ADDRESS        @Z40X9NG 40906009
         L     RCORE,CVTZDTAB-CVT(RCORE) GET ADDR OF I/O       @Z40X9NG 40912009
*                                       DEVICE CHARACTERISTIC  @Z40X9NG 40914009
*                                       TABLE                  @Z40X9NG 40916009
         L     REG13,EXUCB              GET ADDRESS OF UCB     @Z40X9NG 40930009
         IC    RC,UCBTYPE(RC)           PICK UP DIRECT ACCESS    A41033 40936021
*                                         INDEX BYTE             A41033 40942021
         N     RC,FULLWORD              REMOVE EXTRANEOUS BITS   A41033 40948021
         IC    RC,0(RC,RCORE)           PICK UP THE OFFSET BYTE  A41033 40954021
*                                         INTO THE DADT          A41033 40960021
         LH    RCORE,TWO(RC,RCORE)      GET THE NUMBER OF TRACKS A41033 40966021
*                                       PER CYLINDER FOR DEVICE  A41033 40972021
         STH   RCORE,SVTRKCYL           SAVE THE TRK/CYL       @Z40X9NG 40978009
*                                       IN CASE THERE IS MORE    A41033 40984021
*                                       THAN ONE CYLINDER        A41033 40990021
         SH    RCORE,EXSTRK             SUBTRACT STARTING TRK  @Z40X9NG 41100009
*                                         ADDRESS                       41200020
         AH    RCORE,EXETRK             ADD THE ENDING TRACK   @Z40X9NG 41300009
*                                         ADDRESS                       41400020
         LA    RCORE,1(RCORE)           INCREMENT TRACK COUNT BY 1      41500020
         CH    RDCB,CYLCOUNT            DO WE HAVE MORE THAN ONE        41600020
*                                         CYLINDER                      41700020
         BNE   MULTICYL                 YES, WE HAVE MULTIPLE           41800020
*                                         CYLINDERS                     41900020
RETURNIN EQU   *                                                        42000020
         STH   RCORE,EXTRACKS           SAVE TRACK COUNT       @Z40X9NG 42100009
         L     RCORE,SVDSCBAD           RESTORE DSCB ADDR      @Z40X9NG 42200009
         B     STORECCT                 GO TO STORE CYLINDER COUNT      42300020
*                                                                       42400020
MULTICYL EQU   *                                                        42500020
         BCTR  RDCB,0                   REDUCE CYLINDER COUNT BY 1      42600020
         MH    RDCB,SVTRKCYL            MULTIPLY CYLINDERS-1 BY@Z40X9NG 42700009
*                                         TRACKS/CYLINDER               42800020
         AR    RCORE,RDCB               ADD THE TOTALS                  42900020
         L     RDCB,SVCYLCNT            RESTORE THE ORIGINAL   @Z40X9NG 43000009
*                                         CYLINDER COUNT                43100020
         B     RETURNIN                 RETURN TO IN-LINE CODE          43200020
         EJECT                                                          43300020
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     43400020
*                                                                 *     43500020
*        THIS SECTION OF ERROR CODE IS EXECUTED ONLY WHEN         *     43600020
*        THE MESSAGE QUEUES DATA SET HAS NOT BEEN FORMATTED       *     43700020
*        CORRECTLY AND THE LAST RECORD NUMBER WRITTEN IS RECORD   *     43800020
*                         NUMBER ZERO                             *     43900020
*                                                                 *     44000020
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     44100020
NOFORMAT EQU   *                                                        44200020
         MVI   AVTOPERT,TCAMER10        MOVE THE ERROR IDENTIFIER       44300020
*                                         FOR TCAM INTO THE AVT         44400020
         B     WTGSETUP                 SET THE WHERE-TO-GO ENTRY       44800020
         EJECT                                                          44900020
************************************************************** @Z40X9NG 45000009
*                                                            * @Z40X9NG 45090009
*        GETMAIN SUBROUTINE                                  * @Z40X9NG 45180009
*              INPUT: REG0  - ADDR OF WORD TO RECEIVE ADDR   * @Z40X9NG 45270009
*                             OF GETMAINED AREA              * @Z40X9NG 45360009
*                     REG1  - LENGTH REQUESTED; SUBPOOL ID   * @Z40X9NG 45450009
*                             IN HIGH ORDER BYTE             * @Z40X9NG 45540009
*                     REG14 - RETURN ADDRESS                 * @Z40X9NG 45630009
*                                                            * @Z40X9NG 45720009
************************************************************** @Z40X9NG 45810009
AVTPAR   EQU   *                                               @Z40X9NG 45900009
         ST    REG1,AVTGETMN            SET LENGTH TO GET      @Z40X9NG 45990009
         MVI   AVTGETMN,ZERO            CLEAR HIGH BYTE        @Z40X9NG 46080009
         ST    REG0,AVTGETMN+FOUR       SET ADDR TO RECEIVE    @Z40X9NG 46170009
         STCM  REG1,HIBYTE,AVTGETMN+NINE SET SUBPOOL ID        @Z40X9NG 46260009
         LA    REG1,AVTGETMN            SET PARM LIST ADDR     @Z40X9NG 46350009
         SPACE 2                                                        46520006
         MODESET EXTKEY=TCAM            GET IOB IN TCAM'S KEY    Y02027 46540006
         SPACE 2                                                        46560006
         GETMAIN ,MF=(E,(1))                                            46600020
         SPACE 2                                                        46620006
         MODESET EXTKEY=SUPR            RETURN TO KEY 0          Y02027 46640006
         SPACE 2                                                        46660006
*                                                                       46700020
         LTR   REG15,REG15              WAS GETMAIN GOOD       @Z40X9NG 46800009
         BNZ   WTGSETUP                 NO, BRANCH             @Z40X9NG 46860009
         BR    REG14                    RETURN TO CALLER       @Z40X9NG 46920009
         EJECT                                                          47002006
************************************************************** @Z40X9NG 47002209
*                                                            * @Z40X9NG 47002409
*        PAGE FIX SUBROUTINE                                 * @Z40X9NG 47002609
*              INPUT: REG1  - AREA TO FIX                    * @Z40X9NG 47002809
*                     REG14 - RETURN ADDRESS                 * @Z40X9NG 47003009
*                     REG15 - LENGTH OF AREA                 * @Z40X9NG 47003209
*                                                            * @Z40X9NG 47003409
************************************************************** @Z40X9NG 47003609
FIXPAGE  EQU   *                                                 X01004 47004004
         ST    REG1,AVTGETMN+FOUR       SAVE ADDR TO FIX       @Z40X9NG 47008009
         LA    REG15,ZERO(REG1,REG15)   SET END ADDRESS        @Z40X9NG 47017009
         LA    REG0,AVTDMECB            ADDR OF FIX ECB        @Z40X9NG 47026009
         XC    AVTDMECB(FOUR),AVTDMECB  CLEAR ECB                X01004 47036004
*                                                                X01004 47044004
         PGFIX R,A=(1),EA=(15),ECB=(0)  FIX DATA AREA          @Z30X8NM 47048008
*                                                                X01004 47052004
*                                                                X01004 47064004
         WAIT  ECB=AVTDMECB             WAIT FOR PAGE FIX      @Z30X8NM 47068008
*                                                                X01004 47072004
         TM    AVTDMECB+THREE,FOUR      CHECK RETURN CODE        X01004 47076004
         BZR   REG14                    IF GOOD, RETURN TO     @Z40X9NG 47080009
*                                       CALLER                 @Z40X9NG 47090009
         EJECT                                                          47100020
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     47200020
*                                                                 *     47300020
*        THIS SECTION OF CODE IS USED TO SAVE THE ID OF THE       *     47400020
*        CURRENT OPEN EXECUTOR AND TO MOVE THE ID OF THE          *     47500020
*        ERROR RECOVERY MODULE INTO THE WHERE-TO-GO PARAMETER     *     47600020
*                            LIST                                 *     47700020
*                                                                 *     47800020
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     47900020
WTGSETUP EQU   *                                                        48000020
         L     RCORE,FOUR(RWTGC)        LOAD THE ADDRESS OF THE         48100020
*                                         OPEN WORK AREA                48200020
         MVC   AVTOPXCL(TWO),AMIDCNST   MOVE THE ID OF THE CURRENT      48300020
*                                         EXECUTOR INTO THE AVT         48400020
*                                         FOR THE RETURN TO THIS        48500020
*                                         EXECUTOR                      48600020
         MVC   AVTEZERO(TWO,RWTGC),OPENERP MOVE THE ID FOR THE @Z30X8NM 48700008
*                                         ERROR HANDLER INTO THE        48800020
*                                         WHERE-TO-GO PARAMETER LIST    48900020
         B     XCTLRTNE                 GO TO THE XCTL ROUTINE          49000020
         EJECT                                                          49100020
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     49200020
*                                                                 *     49300020
*        CONSTANTS AND EQUATES                                    *     49400020
*                                                                 *     49500020
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     49600020
OPIDCNST DC    C'0S'                    ID OF LAST OPEN MODULE   S21903 49700022
AMIDCNST DC    C'31'                    ID OF THIS MODULE IGG01931      49800020
ZERO     EQU   0                        VALUE 0                  Y02027 49850006
ONE      EQU   1                        VALUE 1                  S22024 49900022
TWO      EQU   2                        VALUE 2                  S22024 49990022
SHIFT2   EQU   2                        VALUE 2                  S22024 50080022
THREE    EQU   3                        VALUE 3                  S22024 50170022
SHIFT3   EQU   3                        VALUE 3                  S22024 50260022
FOUR     EQU   4                        VALUE 4                  S22024 50350022
FIVE     EQU   5                        VALUE 5                  S22024 50440022
NINE     EQU   9                        VALUE 9                  Y02027 50445006
FORMAT3  EQU   13                       VALUE 13                 S22024 50530022
TCAMER0F EQU   15                       VALUE 15                 S22024 50620022
TCAMER10 EQU   16                       VALUE 1L                 S22024 50800022
UCBTYPE  EQU   19                       INDEX BYTE OFFSET        A41033 50950021
QUECONST EQU   24                       NUMERIC CONSTANT                51000020
DEBPRFSZ EQU   36                       SIZE OF THE DEB PREFIX          51100020
FORM3EXT EQU   44                       VALUE 44                 S22024 51200022
DADT     EQU   64                       DEVICE TABLE OFFSET      A41033 51250021
DEFAULT  EQU   95                       VALUE 95                 S22024 51300022
PERCENT  EQU   100                      A NUMERIC PERCENTAGE            51400020
FORM1    EQU   C'1'                     FORMAT 1 DSCB          @Z40X9NG 51500009
WAIT     EQU   1                        WAIT SVC NUMBER.         X01004 51590004
AD       EQU   7                        ICM/STCM MASK            X01004 51600004
EIGHT    EQU   8                        CONSTANT                 X01004 51620004
CHKPOINT EQU   X'20'                    OPTCD=C                  S22024 51630022
CKP3705  EQU   X'10'                    OPTCD=I                  S22024 51660022
         SPACE 1                                               @Z40X9NG 51700009
HIBYTE   EQU   B'1000'                  MASK FOR HI-ORDER BYTE @Z40X9NG 51703009
         SPACE 1                                               @Z40X9NG 51706009
*        SRB/IOSB BLOCK PREFIX EQUATES                         @Z40X9NG 51709009
PREFIX   EQU   8                        LENGTH OF SRB/IOSB     @Z40X9NG 51712009
*                                       BLOCK PREFIX           @Z40X9NG 51715009
PRELENG  EQU   0                        OFFSET TO LENGTH FIELD @Z40X9NG 51718009
*                                       IN PREFIX              @Z40X9NG 51721009
PRELINK  EQU   4                        OFFSET TO LINK FIELD   @Z40X9NG 51724009
*                                       IN PREFIX              @Z40X9NG 51727009
         SPACE 1                                               @Z40X9NG 51730009
TCAM     EQU   5                        TCAM DRIVER ID FOR IOS @Z40X9NG 51733009
TCAMKEY  EQU   6*16                     TCAM KEY               @Z40X9NG 51736009
CSA      EQU   241                      SUBPOOL FOR CSA GETMAIN@VS41091 51739009
PURGEOFF EQU   6                        OFFSET IN IGC0010B OF  @Z40X9NG 51742009
*                                       PTR TO PURGE CODE      @Z40X9NG 51745009
FULLWORD DC    F'15'                    EXTRANEOUS BIT REMOVAL   A41033 51750021
CYLCOUNT DC    H'1'                     CYLINDER COUNT OF 1    @Z40X9NG 51756009
         DS    0H                                              @Z40X9NG 51762009
SZIOSBE  DC    AL2(IOSBELEN)            LENGTH OF IOSBE        @Z40X9NG 51768009
PRELEN   DC    AL2(PREFIX)              LENGTH OF SRB/IOSB     @Z40X9NG 51774009
*                                       BLOCK PREFIX           @Z40X9NG 51780009
SPIOSBE  DC    AL1(250)                 SUBPOOL ID FOR IOSBE   @Z40X9NG 51786009
IDSRB    DC    CL4'SRB'                 SRB ID                 @Z40X9NG 51792009
         SPACE 3                                               @Z40X9NG 51800009
OPENERP  DC    C'33'                    OPEN ERROR RECOVERY MODULE      52400020
OPENLD3  DC    C'34'                    ID FOR IGG01934                 52600020
         EJECT                                                 @Z40X9NG 52620009
*        DEB EXTENT DSECT                                      @Z40X9NG 52640009
         SPACE 1                                               @Z40X9NG 52660009
EXTENT   DSECT                                                 @Z40X9NG 52680009
EXUCB    DS    0A                       UCB ADDRESS            @Z40X9NG 52700009
EXFLAG1  DS    XL1                      FLAG BYTE              @Z40X9NG 52720009
EXWRTSK  EQU   X'C0'                    ALLOW WRITE SEEK       @Z40X9NG 52740009
EXUCBAD  DS    AL3                      UCB ADDRESS            @Z40X9NG 52760009
EXBIN    DS    H                        BIN BYTES              @Z40X9NG 52780009
EXCCHH   DS    0CL8                     BEGINNING AND ENDING   @Z40X9NG 52800009
*                                       CCHH'S                 @Z40X9NG 52820009
EXSCYL   DS    CL2                      STARTING CYLINDER      @Z40X9NG 52840009
EXSTRK   DS    CL2                      STARTING TRACK         @Z40X9NG 52860009
EXECYL   DS    CL2                      ENDING CYLINDER        @Z40X9NG 52880009
EXETRK   DS    CL2                      ENDING TRACK           @Z40X9NG 52900009
EXTRACKS DS    H                        NUMBER OF TRACKS       @Z40X9NG 52920009
EXLEN    EQU   *-EXTENT                 LENGTH OF DEB EXTENT   @Z40X9NG 52940009
         SPACE 5                                               @Z40X9NG 52960009
*        DISK EXTENT DSECT                                     @Z40X9NG 52980009
         SPACE 1                                               @Z40X9NG 53000009
DEXTENT  DSECT                                                 @Z40X9NG 53020009
DEXTYPE  DS    CL1                                             @Z40X9NG 53040009
DEXFORM1 EQU   C'1'                     FORMAT 1               @Z40X9NG 53060009
DEXFORM3 EQU   C'3'                     FORMAT 3               @Z40X9NG 53080009
DEXSEQ   DS    CL1                                             @Z40X9NG 53100009
DEXLLMT  DS    CL4                      BEGINNING CCHH         @Z40X9NG 53120009
DEXULMT  DS    CL4                      ENDING CCHH            @Z40X9NG 53140009
DEXLN    EQU   *-DEXTENT                LENGTH OF DISK EXTENT  @Z40X9NG 53160009
         EJECT                                                          53200020
         TAVTD                          AVT DSECT                       53300020
         SPACE 4                                                        53306009
*********************************************************************** 53312009
*                                                                     * 53318009
*        EQUATES FOR FIELDS IN THE AVT USED AS WORK AREAS             * 53324009
*                                                                     * 53330009
*********************************************************************** 53336009
SVCYLNO  EQU   AVTDOUBL+FOUR            SAVE AREA FOR NUMBER   @Z40X9NG 53342009
*                                       OF CYLINDERS           @Z40X9NG 53348009
SVTRKCYL EQU   AVTSAVE3+10              HALF WORD SAVE AREA    @Z40X9NG 53354009
*                                       FOR TRACKS/CYLINDER    @Z40X9NG 53360009
SVDSCBAD EQU   AVTSAVE3+12              SAVE AREA FOR DSCB     @Z40X9NG 53366009
SVCYLCNT EQU   AVTSAVE3+16              SAVE AREA FOR CYL COUNT@Z40X9NG 53372009
SVEXTENT EQU   AVTSAVE3+20              SAVE AREA FOR EXTENT   @Z40X9NG 53378009
*                                       COUNT                  @Z40X9NG 53384009
         EJECT                                                          53400020
         TTCBD                          TCB DSECT                       53500020
         EJECT                                                          53600020
         TDEBD                          DEB DSECT                       53700020
         EJECT                                                          53800020
IEDJCIOB DSECT          PRIVATE IOB DSECT USED ONLY BY DISK OPEN        54100020
JOBFLAG1 DS    C                        FIRST  FLAG  BYTE        S21903 54200022
JOBFLAG2 DS    C                        SECOND FLAG  BYTE        S21903 54300022
JOBSENSO DS    C                        FIRST  SENSE  BYTE       S21903 54400022
JOBSENS1 DS    C                        SECOND SENSE  BYTE       S21903 54500022
JOBECBCC DS    C                   COMPLETION CODE                      54600020
JOBECBPT DS    AL3                 ADDRESS OF THE ECB                   54700020
JOBFLAG3 DS    C                   I/O ERROR FLAGS                      54800020
JOBCSW   DS    CL7                 CSW                                  54900020
JOBSIOCC DS    C                   SIO CONDITION CODES                  55000020
JOBSTART DS    AL3                 ADDRESS OF CHANNEL PROGRAM           55100020
JOBRSVD  DS    C                   RESERVED                             55200020
JOBDCBPT DS    AL3                 ADDRESS OF THE DCB                   55300020
JOBOPCOD DS    C                   OP CODE                              55400020
JOBRESTR DS    AL3                 RESTART ADDRESS OF IOS               55500020
JOBINCAM DS    H                   BLOCK COUNT                          55600020
JOBERRCT DS    H                   NUMBER OF ERROR RETRIES              55700020
JOBSEEK  DS    CL8                 MBBCCHHR                             55800020
JOBXECB  DS    F                   ECB                                  55900020
JOBXCC   DS    C                   CURRENT ARM POSITION - CYL           56000020
JOBXRETQ DS    AL3                 ADDRESS OF QUEUE OF CPB'S            56100020
*                                    AVAILABLE TO DISK END FOR RETRY    56200020
JOBXLOCK DS    C                   FLAG BITS                            56300020
JOBXNEWQ DS    AL3                 ADDR OF CPB QUE BEING BUILT          56400020
JOBEND   EQU   *                                                        56500020
         EJECT                                                          56600020
FORCORE  DSECT                          WORK AREA DSECT                 56700020
         IECDSECT                                                       56800020
         EJECT                                                          56900020
         DCBD  DSORG=TQ                 DCB DSECT                       57000020
DCBLNG   EQU   *-IHADCB                                          X01004 57050004
         EJECT                                                 @Z40X9NG 57051009
         CVT   DSECT=YES                                       @Z40X9NG 57052009
         EJECT                                                 @Z40X9NG 57053009
*        SRB DSECT                                             @Z40X9NG 57054009
         SPACE 1                                               @Z40X9NG 57055009
         IHASRB                                                @Z40X9NG 57056009
         EJECT                                                 @Z40X9NG 57057009
         IECDVOID                                              @Z40X9NG 57058009
         EJECT                                                 @Z40X9NG 57059009
         IECDIOCM                                              @Z40X9NG 57060009
         EJECT                                                 @Z40X9NG 57061009
*        IOSB DSECT                                            @Z40X9NG 57062009
         SPACE 1                                               @Z40X9NG 57063009
         IECDIOSB                                              @Z40X9NG 57064009
         SPACE 4                                               @Z40X9NG 57065009
*        LENGTH OF CONTROL BLOCKS                              @Z40X9NG 57066009
LENIOSB  EQU   IOSEND-IOSB              LENGTH OF IOSB         @Z40X9NG 57067009
BLKSIZE  EQU   LENIOSB+SRBSIZE          LENGTH OF SRB/IOSB     @Z40X9NG 57068009
         EJECT                                                 @Z40X9NG 57069009
         TIOSBED                                               @OZ26164 57070011
         EJECT                                                 @Z40X9NG 57092009
         TTCXD                                                 @Z40X9NG 57093009
         END                                                            57100020
