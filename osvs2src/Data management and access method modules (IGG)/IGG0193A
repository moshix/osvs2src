193A     TITLE 'IGG0193A -  BDAM OPEN EXECUTOR'                         00010037
IGG0193A CSECT                                                          00189802
*********************************************************************** 00199802
*                                                                     * 00201802
*  MODULE NAME = IGG0193A                                             * 00203802
*                                                                     * 00204202
*  DESCRIPTIVE NAME = BDAM OPEN EXECUTOR                              * 00204602
*                                                                     * 00205902
*  COPYRIGHT = NONE                                                   * 00206302
*                                                                     * 00206702
*  STATUS = 001                                                       * 00207102
*                                                                     * 00207502
*                                                                     * 00208202
*  FUNCTION/OPERATION:                                                * 00210902
*   THIS ROUTINE, CONSISTING OF 7 FUNCTIONS, IS THE ONLY OPEN EXECUTOR* 00211302
*   DURING OPEN PROCESSING OF A DCB WITH DSORG=DA. IT INCORPORATES    * 00211602
*   THE FUNCTIONS ASSOCIATED IN EARLIER RELEASES WITH BDAM EXECUTORS, * 00212302
*   IGG0193C,IGG0193E,IGG0193G AND IGG0193F. THESE 4 EXECUTORS NO     * 00213002
*   LONGER EXIST AS OF VS 2,RELEASE 2.                                * 00213702
*                                                                     * 00214402
*   FUNCTION I:                                                       * 00215102
*   THIS ROUTINE(A) DETERMINES THE PROTECTED CORE REQUIRED FOR AN IOS * 00215802
*   APPENDAGE LIST AND THE DEB AND GETS THE REQUIRED CORE.THE 2ND HALF* 00216502
*   OF THIS ROUTINE(B) CONSTRUCTS THE DEB AND ATTACHES AS MANY EXTENTS* 00217202
*   AS ARE PRESENT IN THE DSCB(S).  IF THE BDAM DATA SET RESIDES ON   * 00217903
*   MSS VIRTUAL DASD, THE DEB IS USED TO BUILD AN EXTENT LIST FOR     * 00218003
*   ACQUIRING SPACE ON DASD FOR THAT DATA SET.                        * 00218103
*   IF THIS IS A VIO DATA SET AND THE DCBOPTCD FIELD SPECIFIES        * 00218637
*   EXTENDED SEARCH, THE DEB EXTENT WILL BE TRUNCATED TO THE TRUE     * 00218737
*   SIZE OF THE DATA SET AS DETERMINED BY THE LAST RECORD WRITTEN     * 00218837
*   DURING BDAM CREATE. THIS IS TO PREVENT SEARCHING OF UNUSED        * 00218937
*   TRACKS.                                                           * 00219037
*                                                                     * 00219137
*   FUNCTION II:                                                      * 00219302
*   THIS ROUTINE LOADS ALL REQUIRED BDAM MODULES AS SPECIFIED IN THE  * 00220002
*   DCB FIELDS- MACRF, RECFM, OPTCD, BUFTEK- AND STORES THEIR         * 00223002
*   MODULE ID AND A COUNT OF MODULES LOADED INTO THE DEB. MODULE      * 00223402
*   ADDRESSES ARE STORED IN THE DEBAVT OR DCB AS REQUIRED.            * 00223802
*                                                                     * 00224202
*   FUNCTION III:                                                     * 00224302
*   THIS ROUTINE INITIALIZES CERTAIN FIELDS IN THE DCB.  AN IRB IS    * 00224402
*   CONSTRUCTED AND ITS ADDRESS PLACED IN THE DEB.  IF EXCLUSIVE      * 00224502
*   CONTROL IS REQUESTED OR REQUIRED, THIS ROUTINE GETS CORE FOR      * 00224602
*   THE READ EXCLUSIVE LIST AND INITIALIZES IT.                       * 00224702
*                                                                     * 00224802
*   FUNCTION IV:                                                      * 00238402
*   IF RELATIVE BLOCK ADDRESSING IS SPECIFIED, THE RELATIVE EXTENTS   * 00238502
*   WILL BE APPENDED TO THE DEB WHICH HAS ALREADY BEEN CONSTRUCTED    * 00238602
*   IN FUNCTION I. THE FORMAT OF THESE RELATIVE EXTENTS IS,           * 00238702
*          BLOCKS PER TRACK - ONE BYTE                                * 00243802
*          BLOCKS PER EXTENT- THREE BYTES                             * 00244102
*   IF TRACK OVERFLOW IS ALSO SPECIFIED TWO ADDITIONAL FIELDS ARE     * 00244402
*   INSERTED BETWEEN THE RELATIVE AND ACTUAL EXTENTS. THESE ARE       * 00244702
*          TRACKS PER PERIOD                                          * 00245002
*          BLOCKS PER PERIOD                                          * 00245302
*                                                                     * 00245602
*   FUNCTION V:                                                       * 00245902
*   IF DYNAMIC BUFFERING IS SPECIFIED THIS ROUTINE WILL CALCULATE     * 00246202
*   AND OBTAIN (BY A GETMAIN) THE NUMBER OF BYTES REQUIRED FOR THE    * 00246502
*   BUFFERS AND FOR A BUFFER CONTROL BLOCK.  IT WILL DIVIDE THE       * 00246802
*   ACQUIRED AREA INTO A BUFFER CONTROL BLOCK AND THE SPECIFED        * 00247102
*   NUMBER OF BUFFERS. THIS FUNCTION IS APPLICABLE TO NON-VS FORMATS. * 00247402
*                                                                     * 00247702
*   FUNCTION VI:                                                      * 00248002
*   IF DYNAMIC BUFFERING IS SPECIFIED WITH VARIABLE SPANNED FORMAT    * 00248302
*   THIS ROUTINE WILL CALCULATE AND OBTAIN (BY A GETMAIN) THE NUMBER  * 00248602
*   OF BYTES REQUIRED FOR THE BUFFERS AND THE BUFFER CONTROL BLOCK.   * 00248902
*   IT WILL DIVIDE THE ACQUIRED AREA INTO A BUFFER CONTROL BLOCK      * 00249202
*   AND THE SPECIFIED NUMBER OF BUFFERS.                              * 00249502
*   IF DYNAMIC BUFFERING IS NOT SPECIFIED THIS ROUTINE WILL CALCULATE * 00249802
*   AND OBTAIN (BY A GETMAIN) THE NUMBER OF BYTES REQUIRED FOR A      * 00250102
*   SEGMENT WORKAREA POOL. IT WILL DIVIDE THE AREA INTO A BUFFER      * 00250402
*   CONTROL BLOCK AND THE SPECIFIED NUMBER OF SEGMENT WORKAREAS.      * 00250702
*                                                                     * 00251002
*   FUNCTION VII:                                                     * 00251302
*   THIS ROUTINE PREPARES FOR EXIT FROM THIS MODULE.  IT UPDATES THE  * 00251602
*   USER DCB BY MOVING THE DCB COPY FROM THE OPEN WORKAREA TO THE     * 00251902
*   USER'S DCB CORE. IT SEARCHES FOR THE NEXT MODULE IN THE PARM      * 00252202
*   LIST PREPARING TO RELOOP THROUGH THE MODULE SHOULD IT BE REQUIRED.* 00252502
*   IF NOT, AN XCTL IS ISSUED TO RETURN TO COMMON OPEN.               * 00252802
*                                                                     * 00253102
*                                                                     * 00253402
*  NOTES:                                                             * 00253702
*   EACH FUNCTION IS INDEPENDENT OF ALL PREVIOUS FUNCTIONS HAVING AS  * 00254002
*   THE ONLY INTERFACE THE ASSUMPTION THAT THE DCB ADDRESS IS IN      * 00254302
*   REGISTER 10,THE OPEN WORKAREA ADDRESS IS IN REGISTER 4, THE DEB   * 00254602
*   AVT ADDRESS IS IN REGISTER 9, AND THAT ENTRY TO EACH FUNCTION     * 00254902
*   IS IN DATA MANAGEMENT KEY.  FUNCTION VII ALSO ASSUMES THAT        * 00255202
*   FUNCTION I STORED COMMON OPEN'S REGISTERS IN THE OPEN WORKAREA    * 00255502
*   AT OFFSET DWASAVE.                                                * 00255802
*                                                                     * 00256102
*   THE DEB IS CONSTRUCTED, INCLUDING EXTENTS AND RELATIVE EXTENTS    * 00256402
*   IN DATA MANAGEMENT KEY, AS IS ALL INITIALIZATION TO THE DCB COPY. * 00256702
*   A MODESET IS ISSUED TO HANDLE ALL PROCESSING OF BUFFERS AND       * 00257002
*   SEGMENT WORKAREAS IN USER KEY.                                    * 00257302
*                                                                     * 00257402
*   AUDIT TRAIL BITS ARE SET AFTER EACH GETMAIN IS ISSUED TO GET CORE * 00257502
*   FOR WHICH IT IS THE RESPONSIBILITY OF THE BDAM CLOSE EXECUTOR,    * 00263102
*   IGG0203A, TO FREE.  THESE BITS ARE INTERROGATED BY THE FORCE      * 00265102
*   CLOSE EXECUTOR IF AN ABEND OCCURS DURING OPEN PROCESSING, BUT     * 00267102
*   AFTER THE DCB HAS BEEN COPIED BACK TO USER CORE. BITS ARE SET     * 00269102
*   TO INDICATE THAT A READ EXCLUSIVE LIST, A BUFFER CONTROL BLOCK    * 00271102
*   AND BUFFERS, AN USL LIST OR A SEGMENT WORKAREA WERE OBTAINED.     * 00271202
*   THE BITS ARE SET IN THE OPEN WORKAREA AT DXATEXC1.                * 00271302
*                                                                     * 00271502
*     DEPENDENCIES = NONE                                             * 00276802
*                                                                     * 00282402
*     DATA AREAS = NONE                                               * 00288002
*                                                                     * 00293602
*     RESTRICTIONS = IF AN EXTENT IS ALLOCATED AS A USER LABEL EXTENT * 00299202
*        (EXTENT TYPE CODE=X'40') IT WILL NOT BE REFLECTED IN THE DEB * 00304802
*        EXTENTS. THE USER LABEL EXTENT IS NOT INCLUDED IN F1 EXTENT  * 00310402
*        COUNT.                                                       * 00316002
*                                                                     * 00321602
*     REGISTER CONVENTIONS = SEE REGISTER EQUATES BELOW               * 00327202
*                                                                     * 00332802
*     PATCH LABEL = NONE                                              * 00338402
*                                                                     * 00344002
*  MODULE TYPE = OPEN EXECUTOR                                        * 00349602
*                                                                     * 00355202
*     PROCESSOR = ASSEMBLER XF                                        * 00360802
*                                                                     * 00366402
*     MODULE SIZE = 3800 DECIMAL BYTES                                * 00372002
*                                                                     * 00377602
*     ATTRIBUTES = REENTRANT,ENABLED,PRIVILEGED, ENTERED IN DATA      * 00383202
*       MANAGEMENT KEY. MODESET IS ISSUED TO DO BUFFER PROCESSING IN  * 00388802
*       USER KEY.                                                     * 00394402
*                                                                     * 00400002
*                                                                     * 00405602
*  ENTRY POINT = 'FUNCT1'                                             * 00411202
*                                                                     * 00416802
*     PURPOSE = SEE FUNCTION                                          * 00422402
*                                                                     * 00428002
*     LINKAGE = THIS MODULE RECEIVES CONTROL EITHER FROM COMMON OPEN  * 00433602
*       OR ANOTHER EXECUTOR WHEN ITS ID APPEARS AS THE NEXT NON-ZERO  * 00439202
*       ENTRY IN THE WTG TABLE.                                       * 00444802
*                                                                     * 00450402
*     INPUT - INPUTS TO THIS ROUTINE ARE                              * 00456002
*        REGISTER 5 - BEGINNING OF THE DCB PARAMETER LIST             * 00461602
*        REGISTER 6 - BEGINNING OF THE WHERE-TO-GO TABLE (WTG)        * 00467202
*        REGISTER 7 - BEGINNING OF THE CURRENT ENTRY IN THE DCB       * 00472802
*                     PARAMETER LIST                                  * 00478402
*        REGISTER 8 - ADDRESS OF THE CURRENT ENTRY IN THE WTG         * 00484002
*                                                                     * 00489602
*        OPEN WORKAREA - CONTAINS FORMAT1 DSCB, DCB COPY, PARM LIST,  * 00495202
*          USER DCB ADDRESS AND KEY, DEB EXTENSION ADDRESS, SAVEAREA, * 00500802
*          WTG TABLE, AND AT LOCATION DXCCW7, THE CCHHR OF THE FORMAT * 00506402
*          ONE DSCB. ALL THESE FIELDS ARE REFERENCED BY THIS MODULE,  * 00512002
*          THEIR PARTICULAR LABELS AS FOLLOWS:                        * 00517602
*                      DWASAVE  - SAVE OPEN'S REGISTERS               * 00523202
*                      DSCNOEXT - 1ST DSCB NO. OF EXTENTS             * 00528802
*                      DSCEXTYP - SPLIT CYL FLAG                      * 00534402
*                      DWATTCTR - TT COUNTER                          * 00540002
*                      DWASAVE2 - REG SAVE FOR CNVRT RTN              * 00545602
*                      DXDAADDR - ADDR FIELD PASSED TO CNVRT RTN      * 00551202
*                      DXATEXC1 - AUDIT TRAIL BYTE FOR FORCE CLOSE    * 00553202
*                      DXDEBXAD - DEB EXTENTSION PTR                  * 00556802
*                      DWAFLAGS - FLAG BYTE USED BY 193A              * 00562402
*                      DWATRKLN - TRK LENGTH SAVEAREA                 * 00568002
*                      DWADVTOL - OVERHEAD SAVED HERE                 * 00573602
*                      DWARCOVH - OVERHEAD+-KEY OVERHEAD              * 00579202
*                      DWARCTKY - OVERHEAD+ KEY LENGTH                * 00584802
*                      DWARLREC - REC LEN+ OVERHEAD, LAST REC         * 00590402
*                      DWARNREC - REC LEN+ OVERHEAD, MIDDLE REC       * 00596002
*                      DWATTRKS - TOTAL NUMBER OF TRACKS              * 00601602
*                      DWAOFLOW - SAVEAREA FOR REMAINING BYTES        * 00607202
*                      DXUKEY   - USER KEY                            * 00612802
*                      DXUDCBAD - USER DCB ADDRESS                    * 00618402
*                      DXUDCBPL - LENGTH OF NULL PREFIX               * 00624002
*                      DXUDCBML - NUMBER OF BYTES COPIED              * 00629602
*                      DXCCW12  - PASSED TO XCTL                      * 00635202
*                      DXCALLID - PROBLEM DETERMINATION PARMLIST      * 00640802
*                      DXREG9   - SAVEAREA FOR REGS DURING PROB DET   * 00646402
*                                                                     * 00652002
*        SYSTEM CONTROL BLOCKS REFERENCED BY IGG0193A:                * 00657602
*                                       CVT                           * 00663202
*                                       UCB                           * 00668802
*                                       TCB                           * 00674402
*                                       TIOT                          * 00680002
*                                       DVCT                          * 00685602
*                                                                     * 00691202
*                                                                     * 00696802
*     OUTPUT = THIS ROUTINE XCTLS TO COMMON OPEN. REGISTERS 5 AND 6   * 00702402
*        ARE LEFT UNCHANGED. REGISTERS 7 AND 8 ARE POSITIONED TO      * 00708002
*        THE NEXT UNCOMPLETED ENTRY IN THE PARM LIST AND WTG TABLE.   * 00713602
*                                                                     * 00719202
*           CONTROL BLOCKS/DATA AREAS BUILT OR INITIALIZED:           * 00724802
*                          DEB INCLUDING RELATIVE EXTENTS             * 00730402
*                          IRB                                        * 00736002
*                          BCB INCLUDING BUFFERS                      * 00741602
*                          SWA INCLUDING BUFFERS                      * 00747202
*                          READ EXCLUSIVE LIST                        * 00752802
*                          DCB                                        * 00758402
*                                                                     * 00764002
*           ALL REQUIRED MODULES WILL HAVE BEEN LOADED.               * 00769602
*                                                                     * 00775202
*                                                                     * 00780802
*     EXIT-NORMAL = XCTL BACK TO COMMON OPEN IF SCAN OF THE WTG TABLE * 00786402
*        DOES NOT FIND A NON-ZERO ENTRY. OTHERWISE AN XCTL IS MADE    * 00792002
*        TO THE FIRST NON-ZERO ENTRY IN THE TABLE.                    * 00797602
*                                                                     * 00803202
*     EXIT-ABNORMAL = THERE ARE 4 OCCASIONS TO ENTER THE ERREXIT RTN, * 00808803
*        WHICH ISSUES A DMABCOND MACRO TO GO TO PROBLEM DETERMINA-    * 00814402
*        TION BEFORE ABENDING.  THE ENTRY IS MADE IF BUFL=0 FOR       * 00820002
*        A DYNAMIC BUFFERING REQUEST, IF THE MACRF FIELD WAS NOT      * 00825602
*        SPECIFIED, IF THERE ARE NO EXTENTS, OR IF THE ICBACREL       * 00831203
*        MACRO RETURNS AN ERROR CODE.                                 * 00831703
*                                                                     * 00836802
*  EXTERNAL REFERENCES = NONE                                         * 00842402
*                                                                     * 00848002
*     ROUTINES:  SYSTEM CONVERT ROUTINE                               * 00853602
*                GETMAIN(SVC 10) IS CALLED TO GET DEB,RDXLIST,BUFFERS * 00859202
*                DEBCHK(SVC 117) IS CALLED FOR DEB VALIDITY CHECK     * 00864802
*                XCTL(SVC 7) IS CALLED TO PASS CONTROL                * 00870402
*                LOAD(SVC 8) IS CALLED TO LOAD BDAM MODULES           * 00876003
*                ICBACREL(SVC 126) ACQUIRE MSS DASD SPACE             * 00889303
*                                                                     * 00893903
*                                                                     * 00898503
*  TABLES/WORK AREAS- 1.DCB PARAMETER LIST IS THE ADDRESS OF EACH DCB * 00903103
*   SPECIFIED IN THE OPEN MACRO INSTRUCTION. THE HI-ORDER BYTE        * 00907703
*   CONTAINS A CODE INDICATING THE MODE (INPUT, OUTPUT, UPDATE).      * 00912303
*   2.WHERE-TO-GO TABLE CONTAINS THE ID AND TTR OF THE ROUTINE WHICH  * 00916903
*   IS TO PROCESS THE CORRESPONDING DCB AND THE ADDRESS OF A WORK AREA* 00921503
*   ASSIGNED TO THAT DCB.                                             * 00926103
*   3.WORK AREA IS A TEMPORARY AREA USED BY THIS ROUTINE              * 00930703
*   AS A REGISTER SAVE AREA AND WORKAREA AS DESCRIBED ABOVE.          * 00935303
*   4.COMMUNICATION VECTOR TABLE IS A RESIDENT VECTOR LIST USED TO    * 00939903
*   LOCATE THE CONVERT ROUTINE, AND THE TASK CONTROL BLOCK.           * 00944503
*                                                                     * 00949103
*                                                                     * 00954402
*  MACROS = GETMAIN, DEBCHK, MODESET, XCTL, LOAD, ICBACREL, IECRES    * 00960003
*                                                                     * 00965602
*                                                                     * 00971202
*                                                                     * 00976802
*  CHANGE ACTIVITY = AS FOLLOWS:                                      * 00982402
*                                                                     * 00988002
*                    OS 21 DELETIONS/CHANGES                          * 00993602
*                                                               A44855  00999202
*                                                               M1795   01004802
*                                                               SM4356  01010402
*                                                               SA49438 01016002
*                                                               M0024   01021602
*                                                               S21042  01027202
*                                                               A35339  01032802
*                                                               A30797  01038402
*                                                               SA53239 01044002
*                                                               SA60608 01046002
*                    VS1-1 DELETIONS/CHANGES                            01049602
*                                                               XM6189  01055202
*                    VS1-2 DELETIONS/CHANGES                            01060802
*                    VS1-3 DELETIONS/CHANGES                            01066402
*                    VS2-1 DELETIONS/CHANGES                            01072002
*                                                                YM3693 01077602
*                    VS2-2 DELETIONS/CHANGES                            01083202
*                                                                YM7957 01083602
*                                                                YM1383 01085202
*                                                                YM1394 01087202
*                                                                YM1140 01088002
*                                                                YM1421 01088402
*                                                                YM1489 01088502
*                                                                YM3057 01091703
*                                                                YM2368 01096303
*                                                                YM2886 01100902
*                                                                YM5761 01110902
*                                                                YM7386 01112902
*                    VS2-3 DELETIONS/CHANGES                            01113003
*                                                              @Y30LSBS 01115037
*                                                              @ZA04216 01117037
*D107602-109563                                                 ZA02523 01117402
*A013101,108095-110429                                          ZA02523 01119402
*A063057,063058                                                 ZA09152 01128437
*                    UPDATES SUBSEQUENT TO VS2-3                        01130437
*                                                                       01132437
*D106334-106346,106348-116350                                  @ZA08000 01133437
*                    UPDATES SUBSEQUENT TO VS2-3.7                      01134437
*A033660,C051000,D051200-051300                                @ZA17540 01135437
*********************************************************************** 01137802
         EJECT                                                          01150002
*********************************************************************** 01200002
****                                                               **** 01240002
****     REGISTER USAGE                                            **** 01260002
****                                                               **** 01280002
*********************************************************************** 01290002
         SPACE                                                          01292002
R0       EQU   0                        PARAMETER REGISTER              01310002
RWRK0    EQU   0                        WORK REG (IV)           ZA02523 01310102
REVEN    EQU   0                        EVEN REG OF EVEN/ODD PAIR       01310402
RCTR     EQU   0                        COUNTER REGISTER (I)   @Y30LSBS 01320403
R1       EQU   1                        PARAMETER REGISTER              01330002
RODD     EQU   1                        ODD REG OF EVEN/ODD PAIR        01330402
RETURN   EQU   2                        RETURN REG FOR INTERNAL SUBRTNS 01332402
R2       EQU   2                        PARM REG TO CONVERT RTN  Y02072 01352002
RBASE    EQU   3                        BASE OF THIS ROUTINE            01360002
RCORE    EQU   4                        WORK AREA ADDRESS               01380002
RPAR     EQU   5                        PARAMETER LIST ADDRESS          01400002
RTCB     EQU   5                        TCB BASE REG                    01400402
RXTENT   EQU   5                        ADDR OF CURRENT DSCB EXT(I)     01400802
RDEBAM   EQU   5                        BASE FOR DEB EXTENT(IV)         01401202
RAOFFS   EQU   5                        RECORD AREA OFFSET((VI)         01401602
RWTG     EQU   6                        FRONT OF WHERE-TO-GO TABLE      01420002
RMSSUCB  EQU   6                        MSS UCB BASE REG (I)   @Y30LSBS 01430003
RDVCT    EQU   6                        DEVICE CHAR TABLE(IV,V,VI)      01432002
RDEBAMX  EQU   6                        DEB REL EXT BASE(IV)            01434002
RPARC    EQU   7                        CURRENT ENTRY IN PARAMETER LIST 01440002
RBUFR    EQU   7                        BUFFER ADDRESS(VI)              01450002
RDEBEXT  EQU   7                        DEB EXT BASE(II,IV)             01452002
RBCB     EQU   7                        BUFFER CONTROL BLK BASE(V)      01454002
RWTGC    EQU   8                        CURRENT ENTRY IN WTG            01460002
RLEN     EQU   8                        BCB LENGTH(VI)                  01470002
RDSCB    EQU   8                        DSCB BASE(I)                    01480002
RDSSSZ   EQU   8                        DATA SET SIZE(IV)               01482002
R9       EQU   9                        PARAMETER REGISTER              01490002
RDEBA    EQU   9                        DEBAVT BASE REG(I,II,III)       01500002
RDCB     EQU   10                       DCB BASE REG                    01502002
RDEBSZ   EQU   11                       DEB SIZE REQUIRED(I)            01512002
RXTNMAX  EQU   11                       MAXIMUM NO. OF EXTENTS(I)       01522002
RPARPTR  EQU   11                       PARAMETER POINTER(I)   @Y30LSBS 01524003
RNRCD    EQU   11                       RECS/PERIOD OR RECS/EXT(IV)     01532002
RBUFLN   EQU   11                       BUFFER LENGTH(V,VI)             01534002
RXTNTOT  EQU   12                       TOTAL NO. OF EXTENTS(I)         01544002
RNTRK    EQU   12                       TRKS/PERIOD OR RECS/PERIOD(IV)  01546002
RBUFNO   EQU   12                       BUFFER NUMBER(V,VI)             01586002
RXTNCUR  EQU   13                       CURRENT EXTENT BASE(I,IV)       01586402
RSWA     EQU   13                       PTR TO SEGMENT WORK AREA(VI)    01588002
RPOOLSZ  EQU   13                       SIZE OF BUFFER POOL(V,VI)       01598002
R14      EQU   14                       RETURN ADDRESS REGISTER         01610002
RWRKX    EQU   14                       WORK REGISTER                   01620002
REXTN    EQU   14                       NUMBER OF DEB EXT(I)   @Y30LSBS 01622003
REXTB    EQU   15                       ACQUIRE EXT BASE (I)   @Y30LSBS 01622403
R15      EQU   15                       ENTRY ADDR AND RETURN CODE REG  01624002
RWRKY    EQU   15                       WORK REGISTER                   01634002
*                                       IECRES MACRO IS FIXED           01634302
         SPACE 3                                                        01634402
*********************************************************************** 01636002
****                                                               **** 01638002
****     MASKS, DISPLACEMENTS, AND OTHER EQUATES                   **** 01638402
****                                                               **** 01638802
*********************************************************************** 01640002
         SPACE                                                          01650002
DEBSEEKF EQU   X'08'                    USED TO INHIBIT ALL SEEKS       01652002
OUTPUT   EQU   X'0F'                    DCB BEING OPENED FOR OUT Y02072 01654102
DEBIDFYR EQU   X'0F'                    IDENTIFIER FOR A DEB            01662102
DEBWSEEK EQU   X'10'                    USED TO PERMIT WRITES AND SEEKS 01663302
DSCULABL EQU   X'40'                    USER LABEL EXTENT               01664502
DEBSEEKN EQU   X'50'                    USED TO PERMIT SEEKS            01665702
DSCSPLIT EQU   X'80'                    SPLIT CYLINDER EXTENT           01666902
DSCYLBDY EQU   X'81'                    EXTENT ON CYLINDER BOUNDARIES   01668102
UCB23051 EQU   X'06'                    UCB TYPE BIT FOR 2305-1  Y02072 01670502
UCB23052 EQU   X'07'                    UCB TYPE BIT FOR 2305-2  YO2072 01671702
FORMAT2  EQU   X'02'                    ID FOR FORMAT 2 DSCB     Y02072 01672902
FRMT1KEY EQU   44                       KEY FOR FORMAT 1 -       Y02072 01674102
*                                       NEEDED TO ADJUST FOR     Y02072 01675302
OPPATRUB EQU   0                        OFFSET TO ATTRIBUTE BYTE        01677702
DUMYXTNT EQU   1                        USED TO IND A DUMMY DEB EXTENT  01678902
IDINCR   EQU   2                        CORE REQUIRED FOR MODULE ID'S   01680102
TIMES4   EQU   2                        USED TO MULT REG CONTENTS BY 4  01681302
F1XTENTS EQU   3                        NUMBER OF EXTENTS IN A F1 DSCB  01682502
F3XTNTS1 EQU   4                        NUMBER OF EXTENTS IN FIRST      01683702
*                                       EXTENT SECTION OF A F3 DSCB     01684902
TIMES16  EQU   4                        USED TO MULT REG CONTENTS BY 16 01686102
OPMEXSCL EQU   4                        DEB EXTENT SIZE SCALE           01688502
CCHHRLNG EQU   5                        LENGTH OF CCHHR FIELD           01689702
OFLOINCR EQU   8                        EXTRA SIZE FOR OVERFLOW RECORDS 01692102
F3XTNTS2 EQU   9                        NUMBER OF EXTENTS IN SECOND     01693302
*                                       EXTENT SECTION OF A F3 DSCB     01694502
USERPOOL EQU   0                        REQUEST SPACE IN SP0     Y02072 01695702
POOL230  EQU   230                      REQUEST SPACE IN SP230   Y02072 01696902
NEXTVOL  EQU   6                        JFCB OFFSET FOR VOL NO  SA53239 01698102
PD51     EQU   51                       INTERNAL RET CODE IF DYN Y02072 01698202
*                                       BUF AND BUFL=0           Y02072 01698302
PD111    EQU   111                      INTERNAL RET CODE IF   @Y30LSBS 01698403
*                                       MSS ACQUIRE FAILS      @Y30LSBS 01699803
PD211    EQU   211                      INTERNAL RET CODE IF     Y02072 01701803
*                                       MACRF NOT A,K OR I       Y02072 01703203
PD212    EQU   212                      INTERNAL RET CODE IF NO  Y02072 01704603
*                                       PRIMARY EXTENT           Y02072 01706003
BLANK    EQU   X'40'                    BLANK TO TEST JFCBVOL   SA53239 01707403
NOSUBRTN EQU   0                        NO SUBROUTINES LOADED BY OPEN   01714403
RELTRKAD EQU   8                        OFFSET TO RELATIVE TRACK        01715803
*                                       CONVERSION MODULE ADDRESS       01717203
ASYNCAD  EQU   16                       OFFSET TO ASYNCHRONOUS          01718603
*                                       INTERRUPT ROUTINE ADDRESS       01720003
DYNOFFST EQU   2                        BYTES TO NEXT DYN BUF ID Y02072 01724203
VERIFYAD EQU   12                       OFFSET TO VERIFY MODULE ADDRESS 01725603
ADDR     EQU   B'0111'                  MASK FOR STORING 24-BIT ADDRESS 01727003
BFRNUM1  EQU   1                        FIRST BUFFER IN AVAILABLE       01728403
*                                       BUFFER QUEUE                    01729803
BFRNUM2  EQU   2                        BEGINNING OF BUFFER CHAIN TO BE 01731203
*                                       INITIALIZED                     01732603
BFRDFALT EQU   2                        DEFAULT VALUE WHEN NO. OF BFRS  01734003
*                                       IS NOT SPECIFIED FOR DYN BFRING 01735403
CCHHLG   EQU   4                        LENGTH OF CCHH           YM5761 01736803
FOURBYTS EQU   4                        USED TO ADD 4 BYTES TO AN ADDR  01738203
FWDBNDRY EQU   4                        USED TO ALIGN TO A FW BOUNDARY  01739603
RNDFCTOR EQU   7                        FACTOR USED FOR ROUNDING        01741003
NOTDOUBL EQU   7                        USED TO TEST FOR DOUBLE WD QUAN 01742403
DOUBLEWD EQU   8                        LENGTH OF A DOUBLE WORD         01743803
MULTOF4  EQU   3                        USED TO ROUND NUMBER OF BFRS TO 01748003
*                                       A MULTIPLE OF 4                 01749403
FWRNDFTR EQU   3                        USED IN ROUNDING TO A FULLWORD  01750803
*                                       BOUNDARY                        01752203
         EJECT                                                          01771803
*********************************************************************** 01782202
*  FUNCTION I: THIS FUNCTION DETERMINES THE AMOUNT OF CORE REQUIRED   * 01792202
*  FOR THE DEB, GETS THE CORE AND BUILDS THE DEB EXTENTS, TAKING      * 01802202
*  THE EXTENT INFORMATION FROM THE DSCBS READ INTO THE OPEN WORKAREA  * 01812202
*  BY COMMON OPEN. THIS ROUTINE PROCESSES IN DATA MANAGEMENT KEY      * 01822202
*  EXCEPT FOR CHAINING THE DEB OFF THE TCB IN SUPERVISOR KEY.         * 01823002
*  INPUT TO THIS FUNCTION IS AS FOLLOWS:                              * 01823402
*              REGISTER INPUT AS DESCRIBED IN THE PROLOGUE            * 01823802
*              OPEN WORKAREA AS DESCRIBED IN THE PROLOGUE             * 01831502
*              DATA MANAGEMENT KEY                                    * 01839202
*  OUTPUT FROM THIS FUNCTION IS AS FOLLOWS:                           * 01841202
*              REGISTER 4 = OPEN WORKAREA ADDRESS                     * 01841602
*              REGISTER 9 = DEB AVT ADDRESS                           * 01842002
*              REGISTER 10 = DCB ADDRESS                              * 01843202
*              DCBDEBAD CONTAINS DEB ADDRESS                          * 01845602
*              COMMON OPEN'S REGISTERS 0-9 STORED AT DWASAVE          * 01846002
*              DEB CONSTRUCTED AND PRIMARY EXTENTS INITIALIZED        * 01846402
*********************************************************************** 01846902
         SPACE                                                          01854602
FUNCT1   EQU   *                        BEGINNING OF MODULE             01862302
         USING PSA,0                    ESTABLISH PSA DSECT      Y02072 01864302
         USING WTGENTRY,RWTGC           ESTABLISH WTG ENTRY BASE REG    01870002
         USING PARML,RPARC              ESTABLISH PARMLIST BASE         01872002
         BALR  RBASE,0                  ESTABLISH BASE FOR THIS ROUTINE 01880002
         USING *,RBASE                  BASE REG LOCATION FOR ASSEMBLY  01890002
         L     RDCB,PARDCBAD            LOAD DCB BASE ADDRESS           01900002
         DROP  RPARC                                                    01902002
         USING IHADCB,RDCB              ESTABLISH DCB BASE REG          01910002
         L     RCORE,WTGCORE-1          SET WORK AREA POINTER           01920002
         USING FORCORE,RCORE            ESTABLISH WORK AREA BASE REG    01930002
         DROP  RWTGC                                                    01932002
         STM   R0,R9,DWASAVE            SAVE OPEN REGS IN WKAREA        01934002
         TM    DCBRECFM,DCBRECL         IF RECORD FORMAT HAS NOT BEEN   01960002
         BNZ   RECFMOK                  SPECIFIED AS F, V, OR U         01980002
         OI    DCBRECFM,DCBRECU         ASSUME U                        02000002
*                                                                       02020000
RECFMOK  EQU   *                                                        02030002
         NI    DCBOPTCD,X'FF'-(DCBOPTDB+DCBOPTRE+DCBOPTTO) TURN OFF     02032002
*                                       BUF AND READ EXCLUSIVE, TRK     02034002
*                                       OVERFLO IF MERGED FROM DSCB     02036002
         TM    DCBMACF1,DCBMRRDK+DCBMRRDI  READ TYPE ID AND/OR KEY      02040002
         BNZ   FUNCT1A                  YES, DCB IS OK                  02060002
         TM    DCBMACF2,DCBMRWRK+DCBMRIDW+DCBMRAWR  IS WRITE TYPE KEY,  02080002
*                                       ID, OR ADD                      02090002
         BNZ   FUNCT1A                  YES, DCB IS OK                  02100002
         LA    R0,PD211                 LOAD INTERNAL RET CODE   Y02072 02102002
*                                       INDICATING MACRF DID NOT Y02072 02102402
*                                       SPECIFY A, K OR I        Y02072 02102802
         B     ERREXIT                  BR TO ERROR EXIT         Y02072 02104002
         SPACE 2                                                        02110002
****                                                                    02160002
****CALCULATE DEB CORE NEEDED FOR MODULE IDS DETERMINING THE AVT CORE   02192002
****REQUIREMENTS AND CORE NEEDED FOR PRIMARY AND RELATIVE EXTENTS. THE  02202002
****TOTAL CORE REQUIRED IS ACCUMULATED IN RWRK2.                        02202402
****                                                                    02204002
FUNCT1A  EQU   *                        CALCULATE CORE REQUIRED         02216102
         LA    RWRKX,IDINCR             SET CONSTANT TO 2 BYTES  A35339 02217402
         LA    RDEBSZ,2*IDINCR          CORE FOR FDN.,CE-XCE IDS Y02072 02220002
         AR    RDEBSZ,RWRKX             ADD TWO BYTES FOR SIO/ @ZA08000 02270037
*                                       DYNBUF -ALWAYS LOADED  @ZA08000 02320037
         TM    DCBMACF2,DCBMRAWR        IS ONE OF THE FORMAT MODULES    02460037
*                                       NEEDED                          02462002
         BZ    TACT                     NO, GO TEST ADDRESSING    M6121 02470002
         AR    RDEBSZ,RWRKX             YES, ADD FOR MODULE ID    M6121 02490002
TACT     EQU   *                        TEST FOR FEEDBACK               02540002
         TM    DCBOPTCD,DCBOPTF         IS FEEDBACK SPECIFIED           02580002
         BNO   TDYN                     IF NOT, DON'T ADD 2 BYTES       02600002
         AR    RDEBSZ,RWRKX             ALLOW FOR ONE ID                02640037
TDYN     TM    DCBMACF1,DCBMRDBF        IS DYNAMIC BUFFER MODULE NEEDED 02660002
         BZ    TCHK                     BRANCH IF NOT                   02680002
         OI    DCBOPTCD,DCBOPTDB        MOVE OPTION BIT TO OPTCD        02700002
TCHK     TM    DCBMACF1,DCBMRCK         IS THE CHECK OPTION BEING USED  02800002
         BZ    TEOEXT                   NO, TRY NEXT OPTION      YM1489 02820002
         AR    RDEBSZ,RWRKX             YES, ADD TWO BYTES              02840002
TEOEXT   EQU   *                        TEST EXT SRCH FOR EOE    YM1489 02890002
         TM    DCBOPTCD,DCBOPTE         WAS EXT SRCH SPECIFIED   YM1489 02940002
         BNO   SETSZ                    NO, TRY NEXT OPTION      YM1489 02990002
         AR    RDEBSZ,RWRKX             YES,ADD 2 BYTES FOR EOE  YM1489 03040002
SETSZ    LA    RDEBSZ,DEBBASND-DEBAVT(RDEBSZ) ALLOW FOR APPENDAGE LIST  03120002
*                                       AND DEB BASE                    03140002
         SPACE 2                                                        03150002
****                                                                    03160002
****    DETERMINE SIZE OF DEB CORE REQUIRED FOR EXTENTS                 03180002
****                                                                    03200002
         SR    RWRKX,RWRKX              CLEAR WORK REG           Y02072 03210002
         SR    RXTNTOT,RXTNTOT          CLEAR WORK REG           Y02072 03220002
         IC    RXTNTOT,DSCNOEXT         FIRST DSCB NUMBER OF EXTENTS    03240002
         CLI   JFCBVOLS+NEXTVOL,BLANK   IS DATA SET MULTIVOL    SA53239 03250002
         BNE   MULTIVOL                 YES,OPEN INITIALIZED    SA53239 03252002
*                                       EXTENT FIELD            SA53239 03254002
         MVI   DCBDRDX,0                NO,ZERO OUT DCB EXTENT  SA53239 03256002
MULTIVOL EQU   *                                                SA53239 03258002
         IC    RWRKX,DCBDRDX            PLUS TOTAL NO. OF EXTENTS FROM  03260002
         AR    RXTNTOT,RWRKX            OTHER DSCB'S GIVE TOTAL NO. OF  03280002
*                                       EXTENTS FOR THE DATA SET        03300002
         TM    DCBRECFM,DCBRECTO        ARE OVERFLOW RECORDS PRESENT    03320002
         BZ    NOOVFLOW                 NO,CONTINUE              A28200 03340002
         OI    DCBOPTCD,DCBOPTTO        OR IN OVERFLOW BIT IN OPTCD     03360002
NOOVFLOW LTR   RXTNTOT,RXTNTOT          TEST FOR ZERO EXTENTS    Y02072 03364002
         BNZ   NOTZERO                  EXTENTS OK               Y02072 03366002
ABORT    EQU   *                                               @ZA17540 03366237
         LA    R0,PD212                 LOAD INTERNAL RET CODE   Y02072 03366402
*                                       INDICATING THERE WAS NO  Y02072 03366802
*                                       PRIMARY EXTENT           Y02072 03367202
         B     ERREXIT                  ABEND IF ZERO EXTENTS    Y02072 03368002
*                                                                       03380000
NOTZERO  EQU   *                        CONTINUE                 Y02072 03390002
         LR    RWRKY,RXTNTOT            GET TOTAL NO. OF EXTENTS Y02072 03420002
         SLL   RWRKY,TIMES16            MULTIPLY NO. OF EXTENTS         03440002
         AR    RDEBSZ,RWRKY             BY 16, ADD TO CORE SIZE         03460002
         TM    DCBOPTCD,DCBOPTRB        IF NOT RELATIVE RECORD          03480002
         BZ    OBDAM020                 ADDRESSING, GO TO NEXT ROUTINE  03500002
         SRL   RWRKY,TIMES4             DIVIDE NO. OF EXTENTS BY 4      03520002
         AR    RDEBSZ,RWRKY             TO ALLOW FOR RELATIVE EXTENTS   03540002
         TM    DCBRECFM,DCBRECTO        ARE OVERFLOW RECORDS PRESENT    03560002
         BZ    OBDAM020                 NO GO ON                        03580002
         LA    RDEBSZ,OFLOINCR(RDEBSZ)  YES ADD ON OVERFLOW SIZE        03600002
         SPACE 2                                                        03610002
****                                                                    03620002
****     REGISTER RDEBSZ NOW CONTAINS THE NUMBER OF BYTES OF PROTECTED  03640002
****     CORE REQUIRED FOR                                              03650002
****       1. APPENDAGE VECTOR LIST                                     03660002
****       2. DEB (BASE + VARIABLE NO. OF EXTENTS, SUBROUTINE IDS       03690002
****              PLUS THE RELATIVE EXTENTS.)                           03700002
****                                                                    03730002
OBDAM020 EQU   *                                                        03740000
         LA    RDEBSZ,RNDFCTOR(RDEBSZ)  ROUND TO NEXT HIGHEST DOUBLE    03760002
         SRL   RDEBSZ,3                 WORD FOR GETMAIN                03780002
         LR    RWRKX,RDEBSZ             SAVE DOUBLE WORD COUNT          03800002
         SLL   RDEBSZ,3                 REG NOW CONTAINS BYTES NEEDED   03820002
         LR    R1,RDEBSZ                PUT LEN IN R1 FOR SUBRTN Y02072 03822002
         BAL   RETURN,ENTSP230          GO GET CORE FOR DEB      Y02072 03830002
*                                                                       03840000
*                        CONSTRUCT THE DEB                       Y02072 03954037
         LA    RDEBA,0(,R1)             INITIALIZE POINTER REGISTER     03960002
         USING DEB,RDEBA                ESTABLISH DEB BASE REG          04010002
         XC    DEBAVT(DEBBASND-DEBAVT),DEBAVT  CLEAR ALL OF DEB         04200002
*                                       TO EXTENTS SECTION              04202002
         SPACE 2                                                        04212002
****                                                                    04220002
****     CONSTRUCT THE DEB BASE                                         04240002
****                                                                    04260002
         STC   RWRKX,DEBLNGTH           STORE DOUBLE WORD COUNT         04280002
         MVC   DEBDSCBA+2(CCHHRLNG),DWADSCB SAVE DSCB CCHHR ADDR Y02072 04300002
         STC   RXTNTOT,DEBNMEXT         STORE NO. OF EXTENTS            04320002
         ST    RDEBA,DEBAPPAD           APPENDAGE LIST ADDRESS          04340002
         L     RTCB,PSATOLD             GET CURRENT TCB ADDR     Y02072 04390002
         USING TCB,RTCB                 ESTABLISH TCB BASE REG          04410002
         ST    RTCB,DEBTCBAD            TCB ADDRESS                     04420002
         ST    RDCB,DEBDCBAD            DCB ADDRESS                     04440002
         MVC   DEBPROTG,TCBPKF          STORAGE PROTECTION KEY OF TCB   04460002
         OI    DEBDEBID,DEBIDFYR        DEB ID                          04480002
         MVC   DEBPRIOR,TCBDSP          PRIORITY INDICATOR              04500002
         MVC   DEBOPATB,OPPATRUB(RPARC) OPEN ATTRIBUTES                 04520002
         NI    DEBOPATB,X'FF'-DEBABEND                                  04540002
         MVI   DEBEXSCL,OPMEXSCL        EXTENT SIZE SCALE               04560002
*                                                                       04570002
         MODESET  EXTKEY=SUPR           CHANGE TO SUPERVISOR KEY Y02072 04610002
*                                       TO CHAIN THE DEB OFF TCB Y02072 04620002
*                                                                       04630002
         LA    RWRKY,DEBBASIC           GET ADDR OF MAIN DEB     Y02072 04640002
         L     RWRKX,TCBDEB             GET ADDR OF 1ST DEB      Y02072 04660002
CHAIN    ST    RWRKX,DEBDEBAD           CHAIN DEB TO 1ST DEB     Y02072 04662002
         CS    RWRKX,RWRKY,TCBDEB       PUT DEB PTR IN TCB       Y02072 04664002
         BNE   CHAIN                    BR WITH RWRKX CONTAINING Y02072 04666002
*                                       NEW VALUE IN TCBDEB      Y02072 04668002
         DROP  RTCB                     DROP TCB BASE REG               04668102
*                                                                       04668202
         MODESET  EXTKEY=DATAMGT        RETURN TO DATAMGT KEY    Y02072 04668402
*                                                                       04668802
         STCM  RWRKY,ADDR,DCBDEBA       STORE DEB ADDRESS IN DCB Y02072 04677602
*                                                                       04694802
         DEBCHK (RDCB),TYPE=ADD,AM=BDAM  ADD DEB TO DEB TABLE    Y01021 04703202
*                                                                       04711602
         LR    RXTENT,RCORE             SET DSCB INDEX SO ROUTINE CAN   04720002
*                                       UTILIZE A LOOP                  04740002
         LA    RWRKX,FRMT1KEY           LOAD KEY LG =44 INTO REG Y02072 04750002
         SR    RXTENT,RWRKX             SUBTRACT KEY LENGTH FROM Y02072 04760002
*                                       FORMAT1 DSCB ADDRESS     Y02072 04770002
         MVI   DEBOFLGS,DEBDISP                                         04780002
         NC    DEBOFLGS,JFCBIND2        OPEN OLD OR NEW                 04800002
         CLI   DSCEXTYP,DSCSPLIT        CHECK FOR SPLIT CYLINDER        04820002
         BNE   OBDAM060                 NO, BRANCH                      04840002
         OI    DEBOFLGS,DEBSPLIT        SET INDICATOR IN DEB            04860002
         SPACE 2                                                        04870002
****                                                                    04880002
**** THE FOLLOWING ROUTINE ENCOMPASSES 3 LOOPS CONTROLLED BY THE NUMBER 04892002
**** OF EXTENTS IN THE DATA SET, ON THE VOLUME AND IN THE DSCB.  THE    04894002
**** CONTROLLING REGISTERS ARE AS FOLLOWS:                              04896002
****           RXTNTOT - NO. OF EXTENTS IN DATA SET                     04896402
****           RXTNCUR - NO. OF EXTENTS IN THIS DSCB                    04896802
****           RXTNMAX - MAXIMUM NO. OF EXTENTS FOR THIS FORMAT         04897202
****           DWAFM3SW(IN WORKAREA) - FORMAT 3 SWITCH                  04897602
**** WHEN RXTNTOT IS 0, THE OUTSIDE LOOP IS COMPLETE.  AT DWATTCTR IN   04898802
**** THE OPEN WORKAREA, THE TOTAL NUMBER OF TRACKS IN THE DATA SET ARE  04898902
**** BEING SUMMED UP.                                                   04899002
****                                                                    04909602
OBDAM060 EQU   *                                                        04940000
         LA    RDEBEXT,DEBBASND         SET EXT INDEX TO EXT 1   Y02072 04942002
         USING DEBDASD,RDEBEXT          EST DEB DASD BASE        Y02072 04950002
         LR    RDSCB,RXTENT             SAVE CURRENT DSCB ADDRESS       04960002
         SR    RWRKY,RWRKY              ZERO M COUNTER                  04980002
         STC   RWRKY,DXDAADDR           SAVE M NO. FOR CONVRT RTN       05020402
         STH   RWRKY,DWATTCTR           SET TOTAL TT CTR TO ZERO Y02072 05020802
         SPACE                                                          05022002
         L     RWRKX,DXUCBADR           GET UCB ADDR OF 1ST DSCB Y02072 05024002
         ST    RWRKX,DEBUCBAD           ST UCB ADDR IN DEB EXT   Y02072 05026002
         B     OBDAM185                 BR AROUND UCB PICK UP    Y02072 05028002
*                                       FOR SUBSEQUENT DSCBS     Y02072 05028402
         DROP  RCORE                    DROP OPEN WORKAREA BASE  Y02072 05028502
         SPACE                                                          05028802
****                                                                    05030002
****           ENTRY FOR THE NEXT DSCB                                  05032002
****                                                                    05034002
OBDAM180 EQU   *                        PROCESS FORMAT 1 DSCB    Y02072 05036002
         USING DXDSCB-FRMT1KEY,RXTENT   ESTABLISH DSCB BASE REG  Y02072 05038002
         L     RWRKX,DSCBUCB            GET UCB PTR FOR CUR DSCB Y02072 05040002
         ST    RWRKX,DEBUCBAD           STORE UCB ADDRESS IN DEB EXT    05040102
OBDAM185 SR    RXTNCUR,RXTNCUR          CLEAR REGISTER FOR CUR EXT NO.  05040402
         STH   RXTNCUR,DEBBINUM         ZERO BB FOR NOW                 05040802
         IC    RXTNCUR,DSCNOEXT         GET NO. EXTENTS FOR THIS Y02072 05060002
*                                       VOLUME ONLY              Y02072 05070002
         LTR   RXTNCUR,RXTNCUR          CHECK FOR ZERO                  05080002
         BZ    ABORT                    ZERO EXTENTS - ABEND   @ZA17540 05100037
OBDAM190 LA    RXTENT,DSCEXTYP          PT TO 1ST EXTENT OF DSCB Y02072 05140002
         DROP  RXTENT                   DROP DSCB BASE REG              05150002
         MVI   DEBDVMOD,DEBSEEKN        INHIBIT WRITE PERMIT ALL SEEKS  05430002
         MVC   DEBDSCBA(L'DEBBINUM),DEBBINUM  MOVE BB TO PREFIX         05500002
         TM    DEBOPATB,OUTPUT          CHECK FOR OUTPUT         YM1290 05540002
         BZ    OBDAM210                 BRANCH IF NO                    05560002
         MVI   DEBDVMOD,DEBWSEEK        PERMIT ALL WRITES AND SEEKS     05580002
         USING FORCORE,RCORE            WORKAREA BASE SET UP     Y02072 05590002
OBDAM210 MVI   DWAFM3SW,0               SET FORMAT 3 SWITCH OFF  Y02072 05600002
         DROP  RCORE                                             Y02072 05610002
         USING DSCEXTYP,RXTENT          EST BASE FOR DSCB EXT    Y02072 05612002
         LA    RXTNMAX,F1XTENTS         MAXIMUM 3 EXTENTS FOR FORMAT 1  05620002
         CLI   DSCEXTYP,DSCULABL        TEST, BR IF 1ST EXTNT NOT  UL17 05624002
         BNE   OBDAM220                 A USER LABEL TRACK         UL17 05628002
         BCTR  RXTNMAX,0                DECREMENT NO OF EXTENTS    UL17 05632002
         LA    RXTENT,L'DSCEXT1(,RXTENT)  POINT TO NEXT DSCB       UL17 05636002
*                                       EXTENT                     UL17 05638002
OBDAM220 MVC   DEBSTRCC(DAADRLNG),DSCLOWLM  SET UP ONE EXTENT FROM      05640002
*                                       STARTING CCHH TO ENDING CCHH    05650002
         NI    DEBDVMOD,DEBSEEKN        PERMIT HEAD SEEKS               05660002
         CLI   DSCEXTYP,DSCYLBDY        CHECK FOR CYLINDER BOUNDARY     05680002
         BE    OBDAM224                 YES  BRANCH                     05700002
         OI    DEBDVMOD,DEBSEEKF        INHIBIT ALL SEEKS               05720002
         DROP  RXTENT                   DROP DSCB EXTENT BASE REG       05730002
         SPACE 2                                                        05730402
*********************************************************************** 05732002
*  THE FOLLOWING ROUTINE SETS UP FOR AND BALRS TO THE SYSTEM CONVERT  * 05734002
*  ROUTINE TO GET THE NUMBER OF TRACKS IN EACH EXTENT. THE CONVERT    * 05736002
*  ROUTINE EXPECTS THE DEB TO BE IN REG 1 AND THE POINTER TO THE      * 05736402
*  ADDRESS TO BE CONVERTED IN REG 2.THE CONVERT ROUTINE USES REGISTERS* 05736802
*  9-13 AS WELL AS 0,1,2,AND 15. THE TTR IS RETURNED IN REG 0.        * 05737202
*********************************************************************** 05738002
OBDAM224 EQU   *                                                        05740000
         USING FORCORE,RCORE            EST OPEN WORK AREA BASE REG     05750002
         SPACE 1                                                        05750402
         STM   R9,R15,DWASAVEA          SAVE REGS USED BY CNVRT  Y02072 05906502
         MVC   DXDAADDR+1(L'DEBBINUM),DEBBINUM  SET UP BIN NUMBER       05911002
         MVC   DXDAADDR+3(CCHHLNG),DEBENDCC  PUT END CCHH INTO EXTENT   05915502
         L     R1,DCBDEBAD              SET A POINTER TO THE DEB        05920002
         LA    R2,DXDAADDR              POINT TO CONSTANT FOR CONVERT   05940002
*                                       ROUTINE                         05960002
         L     R15,CVTPTR               GET ADDRESS OF CVT              05980002
         USING CVT,R15                  ESTABLISH CVT BASE REG          05990002
         L     R15,CVTPRLTV             CONVERT RTNE                    06000002
         DROP  R15                      DROP CVT BASE REG               06010002
         BALR  R14,R15                                                  06020002
*                                                                       06040000
         LM    R9,R15,DWASAVEA          RESTORE ALL REGS         Y02072 06050002
         SRL   R0,16                    USE TT ONLY                     06080002
         LR    RWRKX,R0                 PUT TT IN WORK REG              06090002
         LA    RWRKX,1(RWRKX)           ADD ONE TO TT(REL TO 0)         06100002
         LR    RWRKY,RWRKX              SAVE NO. OF TOTAL TRACKS        06120002
         SH    RWRKX,DWATTCTR           SUBTRACT TT OF LAST EXT  Y02072 06122002
         STH   RWRKX,DEBNMTRK           STORE NO. OF TRACKS IN THIS     06160002
*                                       EXTENT                          06180002
         STH   RWRKY,DWATTCTR           UPDATE TT TO CURR EXTENT Y02072 06190002
         SR    RWRKX,RWRKX              CLEAR WORK REG           Y02072 06240002
         IC    RWRKX,DXDAADDR           GET CURRENT EXT NUMBER   Y02072 06250002
         LA    RWRKX,1(,RWRKX)          ADD ONE TO M FOR NEXT EXT.      06260002
         STC   RWRKX,DXDAADDR           SET UP M FOR NEXT EXTENT Y02072 06270002
         SPACE 2                                                        06270402
****                                                                    06272002
****      CHECK FOR VIO & EXTENDED SEARCH. IF BOTH, ADJUST DEB          06274037
****      EXTENT SIZE SO THAT IT DOES NOT EXCEED THE REAL SIZE          06276002
****      OF THE DATA SET. THE LAST TRACK WILL BE THAT ON WHICH         06278002
****      THE EOF MARK WAS WRITTEN (AS INDICATED IN THE DSCB) OR        06278402
****      THE END OF THAT CYLINDER IF ALLOCATION IS IN CYLINDERS.       06278802
****      THIS IS NECESSARY BECAUSE IT IS IMPOSSIBLE TO RELEASE         06279202
****      EXTRA SPACE DURING THE CREATION OF A VIO DATA SET. AS         06279602
****      A RESULT, EXTENDED SEARCH OPERATIONS DURING PROCESSING        06279702
****      CAN CAUSE THE UNNECESSARY SEARCH OF UNUSED SPACE.             06279802
****                                                                    06279902
         L     RWRKX,DEBUCBAD           GET UCB ADDR FROM DEB    YM5761 06293202
         USING UCB,RWRKX                ESTABLISH UCB BASE       YM5761 06303202
         TM    UCBJBNR,UCBVRDEV         IS THIS VIO DATA SET     YM5761 06305202
         BNO   OBDAM250                 NO CONTINUE BUILDING DEB YM5761 06305602
         TM    DCBOPTCD,DCBOPTE         EXTENDED SEARCH OPTION? ZA09152 06305737
         BNO   OBDAM250                 NO - CONT BUILDING DEB  ZA09152 06305837
*                                                                       06306002
*    SET UP TO CONVERT LAST BLOCK ADDR - TTR TO CCHHR                   06306402
*    THE CONVERT ROUTINE EXPECTS THE DEB TO BE IN REG 1, THE            06306502
*    TTR0 TO BE IN R0, AND THE ADDR OF THE AREA IN WHICH TO             06306602
*    PUT THE ACTUAL ADDRESS IN R2. IT USES REGS 9-13 ALSO.              06311002
*                                                                       06313002
         STM   R9,R15,DWASAVEA          SAVE REGS USED BY CNVRT  YM5761 06315002
         SR    R1,R1                    CLEAR PARM REG           YM5761 06315402
         IC    R1,DSCLSTAR              GET TT OF THE LAST       YM5761 06315502
         SLL   R1,8                     TRACK WRITTEN ON         YM5761 06319102
         IC    R1,DSCLSTAR+1            DURING CREATION OF THE   YM5761 06321102
         LA    R1,1(R1)                 ADD 1 TO TT              YM5894 06321202
         STH   R1,DWATTCTR              SAVE NO. TRKS IN WKA     YM5894 06321302
         STH   R1,DEBNMTRK              PUT NO. TRKS IN DEB EXT  YM5894 06323602
         BCTR  R1,0                     SUBT 1 AGAIN FOR TTR     YM5894 06328102
         SLL   R1,16                    DATA SET -PASS TTR0      YM5761 06330402
         LR    R0,R1                    PASS TTR0 IN R0          YM5894 06332402
         LA    R2,DCBXARG               PASS LOCATION FOR CNVRT  YM5761 06332702
*                                       RTN TO PUT ACTUAL ADDR   YM5761 06335002
*                                       THIS DCB FIELD IS UNUSED YM5761 06337302
         L     R1,DCBDEBAD              PUT DEB ADDR IN R1       YM5761 06339602
         L     R15,CVTPTR               GET ADDR OF CVT          YM5761 06341902
         USING CVT,R15                  ESTABLISH CVT BASE       YM5761 06344202
         L     R15,CVTPCNVT             GET ADDR OF CNVT RTN     YM5761 06346502
*                                       TO CNVT TTR TO ACTUAL    YM5761 06348802
         DROP  R15                      DROP CVT BASE            YM5761 06351102
         BALR  R14,R15                  BRANCH TO CNVRT RTN      YM5761 06353402
         LM    R9,R15,DWASAVEA          RESTORE REGS             YM5761 06355702
         MVC   DEBENDCC(CCHHLG),DCBXARG+3 MV CCHH INTO DEB       YM5761 06358002
         XC    DCBXARG(L'DCBXARG+L'DCBDRDX),DCBXARG  CLEAR DCB   YM5761 06360302
*                                       AREA USED FOR ADDR RET   YM5761 06362602
         TM    DEBDVMOD,DEBSEEKF        IS ALLOCATION IN CYL     YM5761 06364902
         BO    OBDAM250                 NO, TRK ALLOCATION OK    YM5761 06367202
****                                                                    06369502
****        ROUND UP EXTENT TO CYL IF ALLOCATED IN CYLINDERS            06371802
****                                                                    06374102
         L     RWRKY,CVTPTR             GET ADDRESS OF THE CVT   YM5761 06376402
         USING CVT,RWRKY                ESTABLISH CVT BASE REG   YM5761 06378702
         L     RDVCT,CVTZDTAB           GET ADDR OF DEV TABLE    YM5761 06381002
         DROP  RWRKY                    DROP CVT BASE            YM5761 06383302
         USING DVCTI,RDVCT              EST BASE FOR DEV CHAR    YM5761 06385602
*                                       TABLE INDEX              YM5761 06387902
         LA    RWRKY,DVCTYPMK           GET MASK FOR UNIT TYPE   YM5761 06390202
         N     RWRKY,UCBTYP             GET UNIT TYPE            YM5761 06392502
         IC    RWRKY,DVCTIOFF(RWRKY)    GET OFFSET IN TABLE      YM5761 06394802
         DROP  RDVCT,RWRKX              DROP UCB AND DVCT REG    YM5761 06397102
         LA    RDVCT,0(RWRKY,RDVCT)     GET DEVICE ENTRY ADDR    YM5761 06399402
         USING DVCT,RDVCT               EST BASE FOR TABLE       YM5761 06401702
         LH    RWRKX,DVCTRK             GET NO. TRKS/CYLINDER    YM5761 06404002
         DROP  RDVCT                    DROP DEV TAB BASE        YM5761 06406302
         BCTR  RWRKX,0                  DECREMENT MAX TRKS BY 1  YM5761 06408602
         LH    RWRKY,DEBENDHH           GET END TRK BEFORE ROUND YM5894 06410602
         STH   RWRKX,DEBENDHH           END OF EXT=END OF CYL    YM5761 06410902
         SR    RWRKX,RWRKY              HOW MANY TRKS ADDED      YM5894 06412902
         AH    RWRKX,DWATTCTR           ADD THIS TO TOTAL TRKS   YM5894 06413002
         STH   RWRKX,DWATTCTR           SAVE NO. TRKS IN WKA     YM5894 06413102
         STH   RWRKX,DEBNMTRK           SAVE NO. TRKS IN DEB EXT YM5894 06415802
****                                                                    06418702
         SPACE 2                                                        06421402
OBDAM250 EQU   *                        TEST FOR MORE EXTENTS    YM5761 06424102
         BCT   RXTNTOT,OBDAM260         ANY MORE EXTENTS (TOTAL)        06426802
         B     OBDAMOUT                 NO, ALL EXTENTS ARE BUILT       06429502
         DROP  RCORE                                             Y02072 06432202
*********************************************************************** 06434902
         SPACE 2                                                        06437602
OBDAM260 EQU   *                        CONTINUE BUILDING EXTENTS       06440302
         BCT   RXTNCUR,OBDAM280         TEST MORE EXTENTS IN THIS DSCB  06443002
****                                                                    06445702
****           PREPARE TO GET NEXT DSCB                                 06448402
****                                                                    06451102
OBDAM270 EQU   *                        PROCESS NEW DSCB         Y02072 06453802
         USING DXDSCB-FRMT1KEY,RDSCB    ESTABLISH DSCB BASE REG  Y02072 06456502
         L     RXTENT,DSCCORE           GET NEXT DSCB ADDRESS    Y02072 06459202
         LA    RWRKX,FRMT1KEY           LOAD 44 BYTE KEY OFFSET  Y02072 06461902
         SR    RXTENT,RWRKX             SUBTR KEY NOT IN CORE    Y02072 06464602
         LR    RDSCB,RXTENT             NEXT SET OF EXTENTS             06467302
         CLI   DSCBFMID,FORMAT2         IS THIS FORMAT 2 DSCB    Y02072 06470002
         BNE   OBDAM275                 IF NOT, PROCEED          Y02072 06472002
         B     OBDAM270                 ELSE, GO GET NEXT DSCB   Y02072 06474002
OBDAM275 EQU   *                        PROCESS THIS DSCB        Y02072 06476002
         LA    RDEBEXT,DEBDASDL(RDEBEXT)   NEXT DEB EXTENT       Y02072 06500002
         B     OBDAM180                 RET TO PROCESS NEXT DSCB Y02072 06520002
         SPACE 2                                                        06530002
****                                                                    06540002
****     MORE EXTENTS FOR CURRENT DATA SET CONTROL BLOCK                06560002
****                                                                    06580002
OBDAM280 LA    RXTENT,L'DSCEXT1(,RXTENT)  UPDATE DSCB POINTER           06600002
         BCT   RXTNMAX,OBDAM300         BRANCH IF MORE EXTENTS FOR      06620002
*                                       CURRENT FORMAT                  06640002
****                                                                    06650002
****           END OF EXTENTS IN CURRENT FORMAT                         06652002
****                                                                    06654002
         LA    RXTENT,1(,RXTENT)        NO, INCREMENT DSCB POINTER      06660002
         USING FORCORE,RCORE            SET UP WORKAREA BASE     Y02072 06662002
         CLI   DWAFM3SW,0               IS THIS FORMAT 3         Y02072 06670002
         DROP  RCORE                                             Y02072 06680002
         BNE   OBDAM320                 BRANCH IF YES            Y02072 06700002
OBDAM290 EQU   *                        PROCESS THIS DSCB        Y02072 06710002
         L     RXTENT,FOURBYTS(RXTENT)  GET ADDRESS OF FORMAT 3  YM1290 06720402
         USING DXDSCB3K,RXTENT          ESTABLISH F3 DSCB BASE REG      06722002
         LR    RDSCB,RXTENT             SAVE CURRENT DSCB ADDRESS       06760002
         CLI   DSCBFMID,FORMAT2         IS THIS FORMAT 2 DSCB    Y02072 06770002
         BNE   OBDAM295                 IF NOT, PROCEED          Y02072 06772002
         LA    RXTENT,DSCCORE           GET NEXT DSCB ADDRESS    Y02072 06772402
         B     OBDAM290                 ELSE, GO GET NEXT DSCB   Y02072 06774002
         SPACE                                                          06774102
****                                                                    06774402
****            FORMAT 3 DSCB PROCESSING                                06774802
****                                                                    06775202
OBDAM295 EQU   *                        PROCESS THIS DSCB        Y02072 06776002
         DROP  RDSCB                    DROP DSCB BASE REG       Y02072 06778002
         LA    RXTENT,DSCBEXSK          GO TO FIRST EXTENT FIELD        06780002
         DROP  RXTENT                   DROP F3 DSCB BASE REG           06790002
         LA    RXTNMAX,F3XTNTS1         SET LIMIT TO 4 EXTENTS IN KEY   06800002
         USING FORCORE,RCORE            SET UP WORKAREA BASE     Y02072 06802002
         STC   RXTNMAX,DWAFM3SW         TURN ON FORMAT 3 SWITCH  Y02072 06810002
         SPACE                                                          06812002
****                                                                    06820002
****           MORE EXTENTS IN CURRENT FORMAT TO BUILD                  06840002
****                                                                    06850002
OBDAM300 MVC   DEBDASD+DEBDASDL(FLDUCBBB),DEBDASD  COPY UCB AND BB      06860002
*                                       FIELDS FOR THE NEXT EXTENT      06870002
         LA    RDEBEXT,DEBDASDL(RDEBEXT)  POINT TO THE NEXT DEB EXTENT  06880002
         B     OBDAM220                                                 06900002
         DROP  RDEBEXT                  DROP DEB EXTENT SECTION BASE    06910002
*                                                                       06920000
*                                                                       06940000
OBDAM320 LA    RXTNMAX,F3XTNTS2         RESET EXTENT COUNT TO 9         06960002
         MVI   DWAFM3SW,0               TURN OFF FORMAT 3 SWITCH Y02072 06970002
         B     OBDAM300                                                 07000002
         SPACE 2                                                        07020002
****                                                                    07060002
****     STORE TOTAL TRACKS IN THE DATA SET IN THE DCB                  07080002
****                                                                    07100002
OBDAMOUT EQU   *                        DEB BUILT, INITIALIZE DCB FLDS  07100402
         LH    RWRKX,DWATTCTR           LOAD TOTAL TRKS IN D.S.  Y02072 07140002
         IC    RWRKY,DCBKEYLE           STORE TOTAL SIZE OF DATA SET    07180002
         ST    RWRKX,DCBKEYLE           (IN TRACKS) IN THE DCB,         07200002
         STC   RWRKY,DCBKEYLE           SAVING KEY LENGTH               07220003
*                                                              @Y30LSBS 07221003
****           THIS ROUTINE TAKES THE EXTENTS FROM THE DEB JUST@Y30LSBS 07222003
****     BUILT AND TESTS THE UCB OF EACH EXTENT TO SEE IF IT   @Y30LSBS 07223003
****     RESIDES ON MSS VIRTUAL DASD.  IF SO, IT WILL USE THE  @Y30LSBS 07224003
****     EXTENT INFORMATION IN THAT EXTENT AS WELL AS ALL      @Y30LSBS 07225003
****     FOLLOWING EXTENTS ON THE SAME UCB, AND BUILD A PARA-  @Y30LSBS 07226003
****     METER LIST FOR ACQUIRING DASD SPACE FOR STAGING IN    @Y30LSBS 07227003
****     THE DATA.                                             @Y30LSBS 07228003
*                                                              @Y30LSBS 07229003
*                                                              @Y30LSBS 07230003
         L     RWTG,DWASAVE6            LOAD SAVED WTG TAB     @Y30LSBS 07230103
         USING WTG,RWTG                 WTG TABLE BASE         @Y30LSBS 07230203
OBDAMGET IECRES GET,PREFIX=YES,SP=230,LV=ACQPLN,ID=MSS2,       @Y30LSBS.07230303
               STM=(R2,R15,WTGPREFX)    GET THE ACQUIRE LIST   @Y30LSBS 07231403
         DROP  RWTG                     DROP BASE              @Y30LSBS 07234303
         USING ACQLST,R1                ACQLST ADDRESSABILITY  @Y30LSBS 07235003
         SR    REXTN,REXTN              ZERO OUT A REGISTER    @Y30LSBS 07238503
         IC    REXTN,DEBNMEXT           GET NUMBER OF EXTENTS  @Y30LSBS 07239603
         LA    RDEBEXT,DEBBASND         POINT TO 1ST DEB EXTENT@Y30LSBS 07240703
         USING DEBDASD,RDEBEXT                                 @Y30LSBS 07241403
*                                                              @Y30LSBS 07242903
****     BEGINNING OF OUTER LOOP TO HANDLE EACH UCB.           @Y30LSBS 07244003
****     INITIALIZE PARAMETER LIST HEADERS.                    @Y30LSBS 07245103
*                                                              @Y30LSBS 07246203
OBDAM350 EQU   *                                               @Y30LSBS 07247303
         SR    RCTR,RCTR                ZERO COUNTER REGISTER  @Y30LSBS 07248403
         XC    ACQLST(ACQPLN),ACQLST    ZERO OUT THE PARM LIST @Y30LSBS 07249503
         LA    REXTB,AREXT              POINT TO LIST ENTRY    @Y30LSBS 07250603
         USING AREXTSEC,REXTB           ACQUIRE EXT BASE       @Y30LSBS 07251403
         L     RMSSUCB,DEBUCBAD         GET COMPARATOR UCB     @Y30LSBS 07251703
         USING UCB,RMSSUCB              MSS UCB BASE REG       @Y30LSBS 07252803
*                                                              @Y30LSBS 07253903
****     START OF THE INNER LOOP TO HANDLE EACH DEB EXTENT FOR @Y30LSBS 07255003
****     EACH SAME UCB.  COPY LOW AND HIGH CCS FROM DEB TO     @Y30LSBS 07256103
****     PARAMETER LIST UNTIL NEW UCB IS ENCOUNTERED OR NUMBER @Y30LSBS 07257203
****     OF DEB EXTENTS ARE EXHAUSTED.                         @Y30LSBS 07258303
*                                                              @Y30LSBS 07259403
OBDAM360 EQU   *                                               @Y30LSBS 07260503
         CLM   RMSSUCB,ADDR,DEBUCBAD+1  IS IT THE SAME UCB     @Y30LSBS 07261603
         BNE   OBDAM380                 NO, CHECK IF ACQUIRABLE@Y30LSBS 07263803
         TM    UCBTBYT2,UCBRVDEV        IS EXT ON MSS  DASD    @Y30LSBS 07264903
         BZ    OBDAM370                 NO, CHECK NEXT EXTENT  @Y30LSBS 07266003
         CLC   FOXES,DEBSTRCC           VALID EXTENT           @Y30LSBS 07267103
         BE    OBDAM370                 NO, DONT PROCESS       @Y30LSBS 07268203
         MVC   LOCC,DEBSTRCC            MOVE IN LOW CC         @Y30LSBS 07269303
         MVC   HICC,DEBENDCC            MOVE IN THE HIGH CC    @Y30LSBS 07270403
         LA    REXTB,AREXTLN(REXTB)     INCREMENT LIST POINTER @Y30LSBS 07271503
         AH    RCTR,ONEMOR              INCREMENT NUMB ENTRIES @Y30LSBS 07272603
OBDAM370 EQU   *                                               @Y30LSBS 07273703
         LA    RDEBEXT,DEBDASDL(RDEBEXT) POINT TO NEXT EXTENT  @Y30LSBS 07274803
         BCT   REXTN,OBDAM360           GO BACK TO CHECK IT OUT@Y30LSBS 07275903
OBDAM380 EQU   *                                               @Y30LSBS 07277003
         LTR   RCTR,RCTR                ANY SPACE TO ACQUIRE   @Y30LSBS 07278103
         BZ    OBDAM450                 NO, CHECK FOR MORE EXTS@Y30LSBS 07279203
*                                                              @Y30LSBS 07280303
****     THIS ROUTINE USES THE PARAMETER LIST JUST BUILT TO    @Y30LSBS 07281403
****     ACQUIRE DASD SPACE VIA THE ICBACREL MACRO ON MSS      @Y30LSBS 07282503
****     DASD.  NOTE THAT ANY ERRORS WILL CAUSE AN ABEND ERR.  @Y30LSBS 07283603
*                                                              @Y30LSBS 07284703
         STC   RCTR,ARNMEXTS            STORE NUMB EXTS TO GET @Y30LSBS 07286903
         MVC   ARVOL,UCBVOLI            AND FOR WHAT VOLUME    @Y30LSBS 07288003
         DROP  RMSSUCB                                         @Y30LSBS 07289103
         MVI   ACQLST+PLUS3,ACQPLN      SET LIST LENGTH        @Y30LSBS 07289503
*                                                              @Y30LSBS 07290203
        ICBACREL TYPE=ACQ,MF=(E,ACQLST) ACQUIRE THE SPACE      @Y30LSBS 07291303
*                                                              @Y30LSBS 07292403
         LTR   R15,R15                  ANY ERRORS             @Y30LSBS 07293503
         BZ    OBDAM450                 NO, MORE EXTENTS?      @Y30LSBS 07294603
***       ACQUIRE FAILED - ABEND                               @Y30LSBS 07295737
         LR    RPARPTR,R1               PASS PARM LIST PTR     @Y30LSBS 07297903
         LA    R0,PD111                 SET FAILURE CODE       @Y30LSBS 07299037
         B     ERREXIT                  ABEND                  @Y30LSBS 07300137
OBDAM450 EQU   *                                               @Y30LSBS 07301203
         LTR   REXTN,REXTN              MORE EXTENTS TO PROCESS@Y30LSBS 07302303
         BNZ   OBDAM350                 YES, START OUTER LOOP  @Y30LSBS 07303403
         L     RWTG,DWASAVE6            NO, RESTORE WTG TABL AD@ZM30030 07305403
         USING WTG,RWTG                                        @ZM30030 07305503
OBDAMFRE IECRES FREE,PREFIX=YES,A=(R1),STM=(R2,R14,WTGPREFX)   @Y30LSBS 07305603
         DROP  RWTG,RDEBEXT,R1,REXTB    DROP ALL BASES USED    @Y30LSBS 07306403
*                                                              @Y30LSBS 07306703
****     THIS ENDS  MSS PROCESSING.                            @Y30LSBS 07307803
*                                                              @Y30LSBS 07308903
         EJECT                                                          07310002
*********************************************************************** 07320002
*  FUNCTION II: THE FOLLOWING FUNCTION LOADS ALL THE ROUTINES REQUIRED* 07330002
*  FOR BDAM AND STORES THEIR IDS IN THE DEB AND THEIR ADDRESSES IN THE* 07340002
*  DCB AND DEBAVT. IT BALRS TO A SUBROUTINE FOR THE LOAD, RETURNING   * 07350002
*  VIA REG 2.  THIS ROUTINE PROCESSES TOTALLY IN DATA MANAGEMENT KEY. * 07352002
*  INPUT TO THIS FUNCTION IS AS FOLLOWS:                              * 07352402
*              REGISTER 4 = OPEN WORKAREA ADDRESS                     * 07353202
*              REGISTER 9 = DEB AVT ADDRESS                           * 07354002
*              REGISTER 10 = DCB ADDRESS                              * 07356002
*              COMMON OPEN'S REGISTERS STORED AT DWASAVE              * 07357602
*              ENTRY IN DATA MANAGEMENT KEY                           * 07358402
*              DEB WITH PRIMARY EXTENTS INITIALIZED                   * 07359202
*  OUTPUT FROM THIS FUNCTION IS AS FOLLOWS:                           * 07360002
*              SAME AS INPUT                                          * 07365902
*              ALL MODULES REQUIRED FOR PROCESSING HAVE BEEN LOADED   * 07378602
*********************************************************************** 07380002
         SPACE                                                          07404002
FUNCT2   EQU   *                        BEGINNING OF FUNCTION II        07410002
         L     RWTG,DWASAVE6            LOAD SAVED WTG TAB ADDR  Y02072 07460002
         USING WTG,RWTG                 ADDRESSABILITY FOR WTG   Y02072 07510002
         SPACE 2                                                        10121902
****                                                                    10129902
****  INITIALIZE AND POSITION TO DEBAVT AND ACCESS METHOD ID SECTION    10131902
****                                                                    10133902
         MVI   DEBNMSUB,NOSUBRTN        INITIALIZE NO. OF SUBROUTINES   10160602
         TM    DCBOPTCD,DCBOPTRB        IS ADDRESSING BY RELATIVE BLOCK 10164702
         BZ    FIXAPP                   NO, SKIP NEXT STEP              10168802
         MVC   DEBAMLNG,DEBNMEXT        SET BDAM LENGTH TO WORD COUNT   10172902
         TM    DCBOPTCD,DCBOPTTO        IS OVERFLOW BEING USED          10177002
         BZ    FIXAPP                   NO- BRANCH                      10181102
         SR    RWRKX,RWRKX              CLEAR WORK REGISTER      Y02072 10183102
         IC    RWRKX,DEBAMLNG           GET SIZE OF ACCESS METHOD SECT  10185202
         LA    RWRKX,IDINCR(,RWRKX)     INCREMENT WORD COUNT BY TWO     10189302
         STC   RWRKX,DEBAMLNG           STORE BACK INTO DEB             10193402
*                                       RELATIVE EXTENTS                10197502
FIXAPP   EQU   *                        GET APPENDAGE ADDRESSES         10201602
         L     RWRKX,CVTPTR             GET CVT ADDRESS                 10219802
         USING CVT,RWRKX                ESTABLISH CVT BASE REG          10229802
         L     RWRKX,CVTXAPG            LOCATE IOS APPENDAGE LIST       10239802
         DROP  RWRKX                    DROP CVT BASE REG               10241802
         MVC   DEBAVT(DEBAVTLN),0(RWRKX)  MOVE TO OUR APPENDAGE LIST    10243802
         LA    RDEBEXT,DEBBASND         ESTABLISH A POINTER TO THE      10247802
         SR    RWRKX,RWRKX              SUBROUTINE ID AREA OF THE DEB   10248202
         IC    RWRKX,DEBNMEXT           BY OFFSETTING FOR               10248602
         SLL   RWRKX,TIMES16            NUMBER OF EXTENTS X 16          10249002
         AR    RDEBEXT,RWRKX            ADDRESS OF END OF EXTENTS       10249402
         SR    RWRKX,RWRKX              CLEAR REGISTER                  10249502
         IC    RWRKX,DEBAMLNG           ACCESS METHOD LENGTH (WORD      10249602
         SLL   RWRKX,TIMES4             COUNT FOR RELATIVE EXTENTS)     10249702
         AR    RDEBEXT,RWRKX            TIMES 4                         10299702
         SPACE 2                                                        10301702
****                                                                    10303702
****    LOAD THE FOUNDATION MODULE REQUIRED. THE ID OF THE MODULE       10319702
****    TO BE LOADED IS PASSED IN RWRKX(R14). THE ADDRESS OF MODULE     10321702
****    ON RETURN IS IN R0. RETURN LINKAGE IS VIA RETURN(R2).           10323702
****                                                                    10329702
         TM    DCBBFTEK,DCBBFTKR        TEST FOR BUFTEK=R        S19015 10339702
         BZ    LOADS                    BR TO LOAD KA IF NOT R   S19015 10341702
         TM    DCBRECFM,DCBRECV+DCBRECSB  IS RECFM=VS            S19015 10343702
         BO    VBOK                     YES,BRANCH               S19015 10345702
ROFF     NI    DCBBFTEK,X'FF'-DCBBFTKR  TURN OFF BUFTEK=R BIT    S19015 10347702
         B     LOADS                    LOAD NON VRE MODULES     S19015 10348102
VBOK     TM    DCBRECFM,DCBRECBR        TEST FOR RECFM=VBS       S19015 10348502
         BO    ROFF                     BRANCH IF YES            S19015 10348902
         LA    RWRKX,IDVREKJ            INITIALIZE POINTER TO KJ Y02072 10349302
         BAL   RETURN,MODLOAD           GO LOAD FOUNDATION MOD   Y02072 10349402
         B     RTPT                     GO TO NEXT ROUTINE       Y02072 10349502
LOADS    LA    RWRKX,IDNOVSKA           INITIALIZE POINTER TO KA Y02072 10349602
         BAL   RETURN,MODLOAD           LOAD FOUNDATION MODULE   Y02072 10379702
RTPT     SR    RWRKY,RWRKY              CLEAR WORK REGISTER      Y02072 10389702
         IC    RWRKY,DCBOFLGS           SAVE OPEN FLAGS                 10429702
         ST    R0,DCBREAD               STORE FOUNDATION MODULE ADDR    10439702
         STC   RWRKY,DCBOFLGS           RESTORE OPEN FLAGS              10439802
         SPACE 2                                                        10483202
****                                                                    10493202
****     THE NEXT ROUTINE CHECKS FOR FEEDBACK OPTION AND WRITE ADD      10495202
****     FUNCTION. BOTH MODULE'S ADDRESSES WILL BE PUT IN THE DCB.      10497202
****                                                                    10499202
*                        TEST FOR FEEDBACK OPTION                       10499637
         TM    DCBOPTCD,DCBOPTF         TEST NEED FOR THE RELATIVE      10499802
         BZ    WRITEADD                 BLOCK FEEDBACK MODULE    Y02072 10499902
         LA    RWRKX,IDFEEDKG           LOAD FIXED FORMAT ID     Y02072 10509902
         TM    DCBOPTCD,DCBOPTTO        IS IT TRK OVERFLOW       Y02072 10511902
         BNO   RELFEED                  NO, ID FOR 19KG OK       Y02072 10512302
         LA    RWRKX,IDFEEDKH           GET OVERFLO FORMAT       Y02072 10512702
RELFEED  EQU   *                        GO LOAD REL BLK FORMAT   Y02072 10513102
         BAL   RETURN,MODLOAD           LOAD IT IF REQUIRED AND  Y02072 10513202
         ST    R0,DCBDFBK               STORE THE ADDRESS IN THE DCB    10523202
WRITEADD EQU   *                        TEST IF WRITE ADD REQ    Y02072 10533202
         TM    DCBMACF2,DCBMRAWR        WRITE ADD MODULE REQUIRED       10535202
         BZ    TSTCHK                   BRANCH NO                       10537202
         TM    DCBBFTEK,DCBBFTKR        TEST FOR BUFTEK=R        S19015 10539202
         BZ    LDFMTMOD                 BR IF BUFTEK IS NOT R    S19015 10539602
         LA    RWRKX,IDWAKN             INITIALIZE POINTER TO KN Y02072 10539702
         BAL   RETURN,MODLOAD           LOAD MODULE KN           Y02072 10539802
         ST    R0,DCBDFOR               STORE THE ADDRESS IN DCB S19015 10539902
         B     TSTCHK                   GO PROCESS NEXT RTN      Y02072 10543202
LDFMTMOD TM    DCBRECFM,DCBRECV         IS DATA SET              S19015 10545202
*                                       PRE-FORMATTED            S19015 10547202
         BZ    PREFM                    YES, GO LOAD FIXED INDEX        10549202
         LA    RWRKX,IDWAKM             INITIALIZE POINTER TO KM Y02072 10549602
LDADD    BAL   RETURN,MODLOAD           LOAD FORMAT MODULE AND   Y02072 10549702
         ST    R0,DCBDFOR               STORE THE ADDRESS IN THE DCB    10549802
         B     TSTCHK                   BR TO PROCESS NEXT RTN   Y02072 10549902
PREFM    LA    RWRKX,IDWAKO             INITIALIZE POINTER TO KO Y02072 10550602
         B     LDADD                    ENTRIES AND GO LOAD MODULE.     10551002
         SPACE                                                          10601002
****                                                                    10627602
****     THIS ROUTINE TESTS FOR ADDITIONAL OPTIONS AND LOADS THE        10628002
****     REQUIRED OPTION MODULES INCLUDING CHECK AND THE APPENDAGES     10628102
****                                                                    10628202
TSTCHK   EQU   *                        LOAD CHECK MOD           Y02072 10628302
         TM    DCBMACF1,DCBMRCK         IS CHECK MACRO BEING USED       10628502
         BZ    TDYNBUF                  NO,GO TEST DYN BUFFERING Y02072 10628902
         LA    RWRKX,IDCHKLI            POINT TO CHECK ID, 19LI  Y02072 10629102
         BAL   RETURN,MODLOAD           LOAD THE CHECK ROUTINE   Y02072 10632002
         SR    RWRKY,RWRKY              CLEAR WORK REGISTER      Y02072 10632102
         IC    RWRKY,DCBOPTCD           SAVE THE OPTCD BITS             10632202
         ST    R0,DCBCHECK              STORE THE CHECK ROUTINE ADDRESS 10632402
         STC   RWRKY,DCBOPTCD           RESTORE THE OPTCD BITS          10632602
TDYNBUF  EQU   *                        TEST FOR DYN BUFFERING @ZA08000 10632837
*IS NO LONGER REQUIRED BECAUSE ONE OF THE APP. WILL            @ZA08000 10634637
* ALWAYS BE LOADED                                             @ZA08000 10634737
         LA    RWRKX,IDSIOLE            LOAD SIO APPENDAGE 19LE  Y02072 10635002
         L     RTCB,DEBTCBAD            GET TCB ADDRESS                 10635402
         USING TCB,RTCB                 ESTABLISH TCB BASE REG          10635602
         TM    TCBFLGS6,TCBRV           IS ADDRSPCE REAL         XM6189 10635802
         BO    REALOK                   BRANCH IF ADDRSPCE REAL         10636002
         LA    RWRKX,DYNOFFST(RWRKX)    INCREMENT TO VIRTUAL            10636202
         DROP  RTCB                     DROP TCB BASE REGISTER          10636402
REALOK   EQU   *                                                        10636602
         BAL   RETURN,MODLOAD           LOAD THE APPENDAGE       Y02072 10636802
         ST    R0,DEBSIOA               DYN BUF MOD = SIO APD           10637002
*                        TEST FOR EXTENDED SEARCH                Y02072 10637137
         TM    DCBOPTCD,DCBOPTE         REQUIRED IF EXTEND SRCH  YM1383 10637402
         BZ    LDCEXCE                  HAS BEEN SPECIFIED              10637602
         LA    RWRKX,IDEOELC            END OF EXTENT APPENDAGE  Y02072 10637702
         BAL   RETURN,MODLOAD           LOAD THE APPENDAGE       Y02072 10637802
         ST    R0,DEBEOEA               STORE ADDR IN AVT               10638002
LDCEXCE  LA    RWRKX,IDCEKU             LOAD CHANNEL END AND     Y02072 10638202
         BAL   RETURN,MODLOAD           EXCEPTIONAL CHAN. END    Y02072 10638402
         ST    R0,DEBCEA                STORE ADDR IN AVT               10638602
         LR    RWRKX,R0                 OFFSET TO EXCEPTIONAL CHANNEL   10638802
         L     RWRKY,FOURBYTS(RWRKX)    ABE OFFSET IS 4 BYTES INTO 19KU 10639002
         AR    RWRKY,RWRKX              ADD TO BEGIN OF 19KU            10639202
         ST    RWRKY,DEBXCEA            ABNORMAL END APPENDAGE ADDR     10639402
         DROP  RWTG                     DROP WTG TABLE BASE      Y02072 10639502
         EJECT                                                          10639802
*********************************************************************** 10640002
*  FUNCTION III: THE FOLLOWING FUNCTION INITIALIZES THE REMAINING     * 10640302
*  DCB FIELDS, CALLS FOR THE CONSTRUCTION OF THE IRB AND CONSTRUCTS   * 10640702
*  A READ EXCLUSIVE LIST IF REQUIRED. ALL PROCESSING IS IN DATA       * 10641102
*  MANAGEMENT KEY.                                                    * 10641202
*  INPUT TO THIS FUNCTION IS AS FOLLOWS:                              * 10645202
*              REGISTER 4 = OPEN WORKAREA ADDRESS                     * 10645302
*              REGISTER 9 = DEB AVT ADDRESS                           * 10645502
*              REGISTER 10= DCB ADDRESS                               * 10648002
*              OPEN WORKAREA CONTAINS ADDRESS OF DEB EXTENSION        * 10648402
*              ENTRY IN DATA MANAGEMENT KEY                           * 10648602
*  OUTPUT FROM THIS FUNCTION IS AS FOLLOWS:                           * 10648802
*              SAME AS INPUT                                          * 10649002
*              IRB HAS BEEN CONSTRUCTED AND INITIALIZED               * 10649202
*              READ EXCLUSIVE LIST HAS BEEN OBTAINED AND INITIALIZED  * 10649402
*              DCB FIELDS HAVE BEEN INITIALIZED                       * 10649602
*********************************************************************** 10650002
         SPACE                                                          10650202
FUNCT3   EQU   *                        BEGINNING OF FUNCTION 3  Y02072 10650402
         SPACE 2                                                        10650602
****                                                                    10651202
****   INITIALIZE THE DCB FIELDS WHICH ARE USED BY BDAM.                10651302
****                                                                    10651402
         XC    DCBIOBAD,DCBIOBAD        CLEAR IOB POOL POINTER AND      10651602
         XC    DCBIOBSQ(DCBIOBQS),DCBIOBSQ  IOB QUEUE POINTERS          10651802
         SPACE 2                                                        10652002
****                                                                    10652202
**** THE FOLLOWING ROUTINE DETERMINES IF A READ EXCLUSIVE LIST IS       10652302
**** REQUIRED AND IF SO BALRS TO THE SUBROUTINE TO GET IT FROM SP230.   10652402
**** THE POINTER TO THE READX LIST IS STORED IN THE DEB EXTENSION AT    10652602
**** LABEL DEBXXARG.  THE DEB EXTENSION IS GOTTEN AND INITIALIZED BY    10652802
**** COMMON OPEN.  ITS ADDRESS IS STORED BY COMMON OPEN IN THE OPEN     10653002
**** WORKAREA AT LABEL DXDEBXAD.                                        10653202
****                                                                    10653402
         TM    DCBMACF1,DCBMRRDX        DID USER SPECIFY READ    A35339 10653902
*                                       EXCLUSIVE                A35339 10654002
         BO    ORRDX                    BRANCH IF YES            A35339 10654202
         TM    DCBMACF2,DCBMRAWR        DID USER SPECIFY WR ADD  A35339 10654702
         BZ    SETUPIRB                 NO,BR TO NEXT ROUTINE    Y02072 10654802
         TM    DCBRECFM,DCBRECV         IF FORMAT FIXED          Y02072 10654902
         BO    ORRDX                    NO,XLUSIVE CNTRL REQ     Y02072 10655302
         LA    RWRKY,DEBBASND           GO TO DASD SECTION       Y02072 10655602
         USING DEBDASD,RWRKY            BASE FOR DASD SECTION    Y02072 10656002
         L     RWRKY,DEBUCBAD           GET UCB FROM 1ST EXT     Y02072 10656202
         DROP  RWRKY                                             Y02072 10656302
         USING UCBOB,RWRKY              BASE FOR UCB             Y02072 10656402
         CLI   UCBTBYT4,UCB23051        IS DEVICE 2305-1         Y02072 10657002
         BE    ORRDX                    YES, XCLUSIVE CNTROL REQ Y02072 10667002
         CLI   UCBTBYT4,UCB23052        IS DEVICE 2305-2         Y02072 10669002
         BNE   SETUPIRB                 NO, NO XLUSIVE CNTRL     Y02072 10671002
         DROP  RWRKY                                             Y02072 10673002
****                                                                    10673402
****                GET CORE FOR EXCLUSIVE CONTROL LIST                 10673802
****                                                                    10674202
ORRDX    OI    DCBOPTCD,DCBOPTRE        SET EXCLUSIVE OPTION     A35339 10674602
         LA    R1,RDXLSTLG              LOAD LENGTH IN REG 1-    Y02072 10675202
*                                       SUBRTN EXPECTS LEN IN REG 1     10675602
         BAL   RETURN,ENTSP230          GO GET CORE              Y02072 10675802
         USING RDXLIST,R1               ESTABLISH READX LIST BASE       10680902
         XC    RDXLIST(RDXLSTLG),RDXLIST  CLEAR CORE FOR XLIST   A35339 10681602
         L     RWRKX,DXDEBXAD           GET DEBEXT PTR IN WKAREA Y02072 10682302
         USING DEBXTN,RWRKX             EST BASE FOR DEB EXT     Y02072 10683002
         ST    R1,DEBXXARG              ST RDXLST PTR IN DEBEXT  Y02072 10683702
         OI    DXATEXC1,FCAORDX         SET AUDIT TRAIL BIT      Y02072 10684102
*                                       FOR FORCE CLOSE CLEANUP  Y02072 10684202
*                                       INDICATING READX LIST    Y02072 10684302
         DROP  R1,RWRKX                 DROP READX AND DEBEXT BASES     10684402
         SPACE 2                                                        10685102
****                                                                    10685802
****     INITIALIZE THE IRB                                             10686502
****                                                                    10687202
SETUPIRB EQU   *                                                        10687902
         L     RWRKX,DCBREAD             LOCATE ASI ADDRESS             10688602
         L     R0,ASYNCAD(,RWRKX)        LOAD ASI ADDR INTO PARAMETER   10689302
*                                        REGISTER                       10690002
         CLI   DXUKEY,USERPOOL          CALLER IN KEY ZERO?      YM7957 10690402
         BE    ZEROCIRB                 YES, CIRB SUP STATE/KEY  YM7957 10690502
         CIRB  EP=(0),KEY=PP,MODE=PP,STAB=(RE)                          10690702
         B     DONECIRB                 CIRB HAS BEEN DONE       YM7957 10691102
ZEROCIRB EQU   *                                                 YM7957 10691202
         CIRB  EP=(0),KEY=SUPR,MODE=SUPR,STAB=(RE)               YM7957 10691902
DONECIRB EQU   *                                                 YM7957 10708402
         O     R1,DEBIRBAD              SAVE HI ORDER BYTE BY OR'ING IT 10709102
         ST    R1,DEBIRBAD              INTO REG ,THEN STORE IRB ADDR   10709802
****                                                                    10710502
****            DETERMINE WHERE TO GO FROM HERE                         10711202
****                                                                    10711902
         TM    DCBBFTEK,DCBBFTKR        TEST FOR BUFTEK=R               10712602
         BZ    NOVRE                    IF NOT R BRANCH                 10713302
         TM    DCBMACF2,DCBMRSWA        DID USER SUPPLY SWA             10714002
         BO    FUNCT7                   YES, DCB COMPLETED       Y02072 10714702
         B     FUNCT6                   BRANCH TO GET SWAS       Y02072 10715402
NOVRE    EQU   *                                                        10716102
         TM    DCBOPTCD,DCBOPTRB        RELATIVE BLOCK SPECIFIED Y02072 10716802
         BO    FUNCT4                   BR TO REL BLK RTN        Y02072 10717502
         TM    DCBOPTCD,DCBOPTDB        DYN BUFFERING SPECIFIED  Y02072 10718202
         BO    FUNCT5                   YES, GO TO DYN BUF RTN   Y02072 10718902
         B     FUNCT7                   NO, GO TO EXIT MODULE    Y02072 10719602
         EJECT                                                          10720302
*********************************************************************** 10721002
*  FUNCTION IV:  THE FOLLOWING FUNCTION IS EXECUTED FOR RECFM=F OR FT * 10721702
*  ONLY WHEN OPTCD=R (RELATIVE BLOCK ADDRESSING). IN THIS CASE, REL-  * 10722402
*  ATIVE EXTENTS, ONE PER PRIMARY EXTENT, ARE APPENDED TO THE DEB.    * 10723102
*  EACH RELATIVE EXTENT CONTAINS THE FOLLOWING:                       * 10723802
*    OVERFLOW:  NUMBER OF TRACKS PER PERIOD- 4 BYTES(OCCURS ONCE/DEB) * 10724502
*               NUMBER OF BLOCKS PER PERIOD- 4 BYTES(OCCURS ONCE/DEB) * 10725202
*               NUMBER OF BLOCKS PER EXTENT- 4 BYTES(OCCURS ONCE/EXT) * 10725902
*    NOT OVFLO: NUMBER OF BLOCKS PER TRACK- 1 BYTE(OCCURS ONCE/EXT)   * 10726602
*               NUMBER OF BLOCKS PER EXTENT- 3 BYTES(OCCURS ONCE/EXT) * 10727302
*  THESE RELATIVE EXTENTS ARE USED TO CALCULATE THE POSITION OF A     * 10728002
*  RELATIVE BLOCK WITHIN THE DATA SET. ALL PROCESSING IS IN DATA      * 10728702
*  MANAGEMENT KEY.                                                    * 10729402
*  INPUT TO THIS FUNCTION IS AS FOLLOWS:                              * 10730102
*              REGISTER 4 = OPEN WORKAREA ADDRESS                     * 10730802
*              REGISTER 9 = DEB AVT ADDRESS                           * 10731502
*              REGISTER 10= DCB ADDRESS                               * 10732202
*              ENTRY IN DATA MANAGEMENT KEY                           * 10732902
*              DEB WITH PRIMARY EXTENTS INITIALIZED                   * 10733602
*  OUTPUT FROM THIS FUNCTION IS AS FOLLOWS:                           * 10734302
*              SAME AS INPUT                                          * 10735002
*              RELATIVE EXTENTS IN DEB HAVE BEEN INITIALIZED          * 10735702
*********************************************************************** 10736402
         SPACE                                                          10737102
FUNCT4   EQU   *                        BEGINNING OF FUNCTION IV        10737802
         MVI   DWAFLAGS,0               INIT TO FIRST PASS       A49438 10738502
         SR    RDSSSZ,RDSSSZ            SET DATA SET SIZE TO ZERO       10739202
         SR    RXTNCUR,RXTNCUR          CLEAR NUMBER OF EXTENTS REG     10739902
         IC    RXTNCUR,DEBNMEXT         GET NUMBER OF EXTENTS           10740602
         LA    RDEBAM,DEBBASND          POINT TO DEB DASD        Y02072 10741302
EXTLOOP  LA    RDEBAM,DEBDASDL(,RDEBAM) ADD ON EXTENT SIZE AS MANY      10742002
         BCT   RXTNCUR,EXTLOOP          TIMES AS THERE ARE EXTENTS      10742702
         USING DEBACSMD,RDEBAM          ESTABLISH DAM ACCESS METHOD     10743402
*                                       SECTION BASE REG                10744102
         IC    RXTNCUR,DEBNMEXT         GET NUMBER OF EXTENTS           10744802
         L     RWRKY,CVTPTR             GET ADDRESS OF THE CVT          10746202
         USING CVT,RWRKY                ESTABLISH CVT BASE REG          10746902
         L     RDVCT,CVTZDTAB           GET ADDR OF DEV CHAR TABL INDEX 10747602
         DROP  RWRKY                    DROP CVT BASE REG               10748302
         USING DVCTI,RDVCT              ESTABLISH DEVICE CHAR TABLE     10749002
*                                       INDEX BASE REG                  10749702
         LR    RDEBEXT,RDEBA            DEBAVT ADDR IN EXT REG   Y02072 10750402
         USING DEBDASD-(DEBBASND-DEBAVT),RDEBEXT  ESTABLISH DEB DASD    10751102
*                                       BASE (RDEBA PTS TO AVT)  Y02072 10751802
         L     RWRKX,DEBUCBAD           LOCATE DEVICE TYPE TO MATCH UCB 10752502
         USING UCBOB,RWRKX              ESTABLISH UCB BASE REG          10753202
         LA    RWRKY,DVCTYPMK           GET MASK FOR UNIT TYPE          10753902
         N     RWRKY,UCBTYP             GET UNIT TYPE                   10754602
         IC    RWRKY,DVCTIOFF(RWRKY)    GET OFFSET TO DEV CHAR TAB      10755302
         DROP  RDVCT,RWRKX              DROP UCB AND DVCT BASES         10756002
         LA    RDVCT,0(RWRKY,RDVCT)     GET DEVICE ENTRY IN TABLE       10756702
*                                                                       10757402
         USING DVCT,RDVCT               EST DEVICE CHAR TABLE BASE REG  10758102
         SR    RWRKX,RWRKX              CLEAR REGISTER                  10758802
         SR    RWRKY,RWRKY              CLEAR REGISTER                  10759502
         LH    RWRK0,DVCTOL             GET TOLERANCE           ZA02523 10809502
         STH   RWRK0,DWADVTOL           SAVE TOLER IN WKAREA    ZA02523 10859502
         SR    RWRK0,RWRK0              CLEAR WORK REG          ZA02523 10961502
*                                                                       10963502
*                                                                       10965502
*    TWO VALUES NEED BE CALCULATED, APPLICABLE TO BOTH TRACK            10965902
*    OVERFLOW AND NON-OVERFLOW - BLKSIZE AND KEY LENGTH + OVERHEAD      10966302
*    (MINUS KEY OVERHEAD IF NO KEYS) FOR:  A) THE LAST RECORD ON        10968202
*    THE TRACK (DWARLREC) AND, B) THE FIRST OR INTERMEDIATE RECORD      10970202
*    ON THE TRACK (DWARNREC), WHICH INCLUDES TOLERANCE.                 10970602
*                                                                       10971002
*                                                                       10971402
*     CALCULATE SIZE OF THE LAST RECORD ON THE TRACK                    10971502
*                                                                       10971602
         IC    RWRKY,DVCOVLB            GET OVERHD,LAST BLK     ZA02523 10971702
         TM    DVCFLAGS,DVC2BOV         TWO BYTE OVERHEAD       ZA02523 10971802
         BNO   NOT2BYTA                 NO, NOT 2305            ZA02523 10972002
         LH    RWRKY,DVCOVHD            YES, GET 2 BYTES        ZA02523 10972102
NOT2BYTA EQU   *                        TEST FOR KEYS           ZA02523 10972202
         IC    RWRKX,DCBKEYLE           GET KEY LENGTH          ZA02523 10972302
         LTR   RWRKX,RWRKX              ARE THERE KEYS          ZA02523 10972402
         BNZ   KEYS                     YES, DONT SUBTR OVERHD  ZA02523 10972502
         IC    RWRK0,DVCOVNK            NO, GET OVERHD TO SUBTR ZA02523 10972602
KEYS     EQU   *                        SUBT KEY OVERHEAD       ZA02523 10972702
         AH    RWRKX,DCBBLKSI           ADD BLKSIZE TO KEY LEN  ZA02523 10972802
         SR    RWRKY,RWRK0              SUBT KEY OVERHD FROM    ZA02523 10972902
*                                       OVERHEAD FOR LAST BLK   ZA02523 10973002
         AR    RWRKX,RWRKY              ADD BLKSIZE+KEYLEN+     ZA02523 10973102
*                                       OVERHEAD FOR LAST BLK   ZA02523 10973202
*                                       MINUS KEY OVRHD IF NONE ZA02523 10973302
         ST    RWRKX,DWARLREC           SAVE # BYTES FOR LAST   ZA02523 10973402
*                                       ENTIRE RECORD ON TRK    ZA02523 10974002
*                                                                       10974402
*   CALCULATE SIZE OF FIRST OR INTERMEDIATE RECORD ON TRACK             10974802
*                                                                       10975202
         SR    RWRKX,RWRKY              SUBT OVERHD LEAVING     ZA02523 10975302
*                                       BLKSIZE AND KEYS        ZA02523 10975802
         MH    RWRKX,DWADVTOL           CALCULATE TOLERANCE     ZA02523 10976202
*                                       (1.049/1.0 X KL+DL)     ZA02523 10976602
         SRL   RWRKX,9                  DIVIDE BY 512           ZA02523 10977002
         IC    RWRKY,DVCOVNLB           OVERHD FOR NOT-LAST BLK ZA02523 10977102
         TM    DVCFLAGS,DVC2BOV         2 BYTE OVERHEAD         ZA02523 10977202
         BNO   NOT2BYTB                 NO, BRANCH AROUND       ZA02523 10977502
         LH    RWRKY,DVCOVHD            GET 2 BYTE OVERHD       ZA02523 10977902
NOT2BYTB EQU   *                        CALCULATE OVERHEAD      ZA02523 10978302
         SR    RWRKY,RWRK0              SUBTRACT KEY OVERHD     ZA02523 10978402
         AR    RWRKX,RWRKY              ADD 1ST/MID REC OVHD    ZA02523 10978502
*                                       TO BLKSIZE+KEY          ZA02523 10978602
         ST    RWRKX,DWARNREC           SAVE TOTAL REC BYTES-   ZA02523 10978702
*                                       INCLUDES OVERHD FOR NOT ZA02523 10978802
*                                       LAST REC+DL+KL+TOLER    ZA02523 10978902
         LH    RWRKY,DVCTRKLN           GET TRK LG FROM TABLE   ZA02523 10979002
         ST    RWRKY,DWATRKLN           SAVE TRK LG IN WKAREA   ZA02523 10979402
         TM    DCBRECFM,DCBRECTO        OVERFLOW RECORDS PRESENT        10979502
         BNZ   OVERFLOW                 YES, BRANCH THERE       ZA02523 10979602
*                                                                       10979702
*                                                                       10979802
*     APPEND THE RELATIVE EXTENTS TO THE DEB FOR RELATIVE TRACK         10980202
*     ADDRESSING WITHOUT TRACK OVERFLOW.                                10980602
*                                                                       10981002
*                                                                       10981102
RECTRK   EQU   *                        CALC PERIODS-NO OVFLO   ZA02523 10981202
         SR    RWRKY,RWRKY              CLEAR FOR RECORDS/TRACK ZA02523 10981402
         SR    RNRCD,RNRCD              CLEAR FOR RECORDS/EXT   ZA02523 10981802
         L     RWRKX,DWATRKLN           GET TRACK LENGTH        ZA02523 10981902
COMPLNG  C     RWRKX,DWARLREC           COMPARE TO LAST REC REQ ZA02523 10982002
         BL    RECEXT                   BRANCH IF TRACK IS FULL ZA02523 10982102
         S     RWRKX,DWARNREC           DECRMENT BY MID-REC LEN ZA02523 10982202
         LA    RWRKY,1(RWRKY)           ADD ONE TO RECS/TRK     ZA02523 10982302
         B     COMPLNG                  LOOP                            10982402
RECEXT   EQU   *                                                        10982502
         LR    RWRK0,RWRKY              SAVE RECS/TRK IN WKREG0 ZA02523 10982802
         MH    RWRKY,DEBNMTRK           RECS/TRK * TRKS/EXTENT  ZA02523 10983202
         STCM  RWRKY,ADDR,DEBDBPE       STORE RECORDS/EXTENT    ZA02523 10983302
         STC   RWRK0,DEBDBPT            STORE RECORDS PER TRACK ZA02523 10983602
         AR    RDSSSZ,RWRKY             ADD TO DATA SET SIZE    ZA02523 10983702
         LA    RDEBAM,L'DEBDBLK(RDEBAM) INCREMENT BOTH                  10983802
         LA    RDEBEXT,DEBDASDL(RDEBEXT) EXTENT POINTERS                10983902
         BCT   RXTNCUR,RECTRK           TEST FOR LAST EXTENT IN DEB     10984202
         B     STDCBREL                 GO STORE TOTAL BLKS     ZA02523 10984302
*                                                                       10984402
*                                                                       10984502
*                                                                       10984602
*        FOR OVERFLOW RECORDS THREE ADDITIONAL VALUES MUST BE           10984902
*        CALCULATED BEFORE BUILDING THE RELATIVE EXTENTS:               10985302
*             A) OVERHEAD FOR A FULL TRACK SEGMENT OTHER THAN THE       10985402
*                THE FIRST SEGMENT OF THE BLOCK - WILL ALWAYS           10985502
*                BE LAST RECORD ON TRACK AND WILL HAVE NO KEYS          10985602
*                (DWARCOVH)                                             10985702
*             B) OVERHEAD FOR 1ST SEGMENT OF A RECORD -                 10985802
*                ALWAYS LAST RECORD ON THE TRACK AND WILL               10985902
*                HAVE A KEY, IF SPECIFIED (DWARCTKY)                    10986002
*             C) OVERHEAD FOR LAST SEGMENT OF A BLOCK THAT IS           10986102
*                NOT THE LAST RECORD ON THE TRACK - NO KEY,             10986202
*                BUT REQUIRES CALCULATION FOR TOLERANCE (DWAOFLOW)      10986302
*                                                                       10986702
*                                                                       10987102
*                                                                       10987502
*    CALCULATE OVERHEAD FOR FULL TRACK SEGMENT OTHER THAN THE           10987902
*    FIRST SEGMENT (LAST RECORD ON TRACK - NO KEY OVERHEAD)             10988002
*                                                                       10988102
OVERFLOW EQU   *                        CALCULATE OVERFLOW DEB  ZA02523 10988202
         SR    RWRKX,RWRKX              CLEAR WORK REG          ZA02523 10988302
         SR    RWRKY,RWRKY              CLEAR WORK REG          ZA02523 10988402
         IC    RWRKX,DVCOVLB            GET OVERHD,LAST BLK     ZA02523 10988502
         TM    DVCFLAGS,DVC2BOV         2 BYTE OVERHEAD-2305    ZA02523 10988602
         BNO   NOT2BYTC                 NO, BRANCH AROUND       ZA02523 10989202
         LH    RWRKX,DVCOVHD            GET 2 BYTE OVERHEAD     ZA02523 10989302
NOT2BYTC EQU   *                        CALCULATE OVERHEAD      ZA02523 10989402
         IC    RWRKY,DVCOVNK            GET OVERHEAD FOR KEYS   ZA02523 10989502
         SR    RWRKX,RWRKY              SUBT KEY OVERHD FROM    ZA02523 10989902
*                                       TOTAL LAST-REC OVERHD   ZA02523 10990002
         ST    RWRKX,DWARCOVH           OVERHD IF FULL TRACK    ZA02523 10990102
*                                       SEG OTHER THAN 1ST      ZA02523 10990202
*                                                                       10990302
*    CALCULATE OVERHEAD FOR FIRST SEGMENT OF BLOCK - KEEP               10990702
*    KEY OVERHEAD IF KEYS. IT IS ALWAYS LAST RECORD ON TRACK            10990802
*                                                                       10990902
         CLI   DCBKEYLE,0               ARE THERE KEYS          ZA02523 10991002
         BE    NOKEYS                   NO,SAME OVERHEAD AS     ZA02523 10991102
*                                       FULL TRACK SEGMENT      ZA02523 10991502
         AR    RWRKX,RWRKY              ADD BACK KEY OVERHEAD   ZA02523 10991602
NOKEYS   EQU   *                        SAVE 1ST SEG OVERHEAD   ZA02523 10991702
         ST    RWRKX,DWARCTKY           OVERHEAD FOR 1ST SEG    ZA02523 10991802
*                                       OF OVERFLOW RECORD      ZA02523 10991902
*                                                                       10992302
*    CALCULATE OVERHEAD FOR LAST SEGMENT OF A BLOCK IF IT               10992402
*    IS NOT THE LAST RECORD ON THE TRACK. THERE IS NO KEY,              10992502
*    BUT DOES NEED TOLERANCE CALCULATED.                                10992602
*                                                                       10994002
         SR    RWRKX,RWRKX              CLEAR WORK REG          ZA02523 10996002
         SR    RWRKY,RWRKY              CLEAR WORK REG          ZA02523 10996402
         IC    RWRKX,DVCOVNLB           OVERHEAD FOR NOT-LAST   ZA02523 10996502
         TM    DVCFLAGS,DVC2BOV         2 BYTE OVERHEAD-2305    ZA02523 10996602
         BNO   NOT2BYTD                 NO, BRANCH AROUND       ZA02523 10997002
         LH    RWRKX,DVCOVHD            GET 2 BYTE OVERHEAD     ZA02523 10997402
NOT2BYTD EQU   *                        CALCULATE OVERHEAD      ZA02523 10997502
         IC    RWRKY,DVCOVNK            GET KEY OVERHEAD        ZA02523 10997602
         SR    RWRKX,RWRKY              SUBT KEY OVERHD FROM    ZA02523 10997702
*                                       OVHEAD OF NOT-LAST REC  ZA02523 10997802
         ST    RWRKX,DWAOFLOW           OVERHEAD FOR LAST SEG   ZA02523 10997902
*                                       OF BLK IF NOT LAST REC  ZA02523 10998002
*                                                                       10998402
*                                                                       10998802
*      THE FOLLOWING CALCULATES THE RELATIVE EXTENTS FOR OVERFLOW       10999202
*                                                                       10999302
         MVI   DWATTRKS,DWAFAIL1        INITIAL COMPARE FAILURE ZA02523 10999402
*                                                                       10999802
NEXTEXT  EQU   *                        CALCULATE THIS EXTENT   ZA02523 11000202
         SR    RNRCD,RNRCD              CLEAR RECS/PERIOD REG   ZA02523 11000602
         SR    RNTRK,RNTRK              CLEAR TRKS/PERIOD REG   ZA02523 11000702
         L     RWRKX,DWARLREC           GET LAST REC LG+OVERHD  ZA02523 11000802
         CLC   DWARLREC,DWATRKLN        DOES REC FIT ON 1 TRK   ZA02523 11001102
         BH    BIGRECRD                 NO, BR TO BIGREC RTN    ZA02523 11001502
*                                                                       11001902
*                                                                       11002302
*      THE FOLLOWING CALCULATES PERIOD SIZE WHEN BLKSIZE+KEYLENGTH+     11002502
*      OVERHEAD IS LESS THAN A FULL TRACK                               11002602
*                                                                       11002702
*                                                                       11002802
         L     RODD,DWATRKLN            GET TRACK LENGTH        ZA02523 11002902
*                                                                       11003002
*     ON ENTRY TO THIS ROUTINE RODD CONTAINS THE NUMBER OF              11003102
*     BYTES ON THE TRACK STILL TO BE DIVIDED INTO RECORDS               11003202
*                                                                       11003402
LOOP     EQU   *                        CALCULATE PERIOD        ZA02523 11003802
         SR    REVEN,REVEN              CLEAR REG FOR DIVISION  ZA02523 11004202
         D     REVEN,DWARNREC           DIVIDE TO GET NO. RECS/ ZA02523 11004302
*                                       TRK(RODD) AND NO.BYTES  ZA02523 11004402
*                                       REMAINING ON TRK FOR    ZA02523 11004502
*                                       1ST SEGMENT OF NEXT REC ZA02523 11004602
         LA    RNTRK,1(RNTRK)           ADD 1 TO TRK COUNT      ZA02523 11004702
         AR    RNRCD,RODD               ADD QUOT TO REC TOTAL   ZA02523 11004802
         S     REVEN,DWARCTKY           SUBT OVERHD REQUIRED    ZA02523 11005002
*                                       FOR 1ST SEG OF OVFLO    ZA02523 11005402
         BNP   FINI                     IF NO ROOM FOR OVERHD   ZA02523 11005802
*                                       +1 BYTE,END OF PERIOD   ZA02523 11006202
         A     REVEN,DWARCTKY           ADJUST BACK PREVIOUS    ZA02523 11006402
*                                       1ST-REC OVERHD.         ZA02523 11006802
         TM    DWAFLAGS,DWAPASS2        TEST FOR 2ND PASS       ZA02523 11007202
         BZ    FSTPASS1                 IF NOT, PROCEED         ZA02523 11007602
         C     RNTRK,DWATTRKS           COMPARE TRKS TO TOTAL   ZA02523 11007702
         BE    FINI2                    YES, END OF EXT&PERIOD  ZA02523 11007802
*                                                                       11007902
*      CALCULATE SIZE OF FIRST(OVERFLOW) SEGMENT OF NEW RECORD          11008302
*                                                                       11008402
FSTPASS1 EQU   *                        NOT END OF EXTENT       ZA02523 11008502
         LA    RNRCD,1(RNRCD)           ADD 1 TO RECORD COUNT   ZA02523 11008702
*                                       FOR CURRENT RECORD      ZA02523 11009102
         L     RWRKY,DWARLREC           SUBT LAST RECORD SIZE   ZA02523 11009202
         SR    RWRKY,REVEN              FROM NUMBER OF BYTES    ZA02523 11009302
*                                       LEFT ON TRACK. RESULT   ZA02523 11009402
*                                       IS NO. DATA BYTES TO BE ZA02523 11009502
*                                       WRITTEN ON NEXT TRACK   ZA02523 11009702
         BNP   FINI                     IF WHOLE LAST REC FITS  ZA02523 11010102
*                                       ON CURRENT TRK,HOWEVER  ZA02523 11010502
*                                       END OF PERIOD           ZA02523 11010902
*                                                                       11011002
*      RWRKY CONTAINS NUMBER OVERFLOW DATA BYTES TO BE WRITTEN          11011102
*      ON NEXT TRACK.                                                   11011202
*                                                                       11011302
         MH    RWRKY,DWADVTOL           ADD TOLERANCE TO TOTAL  ZA02523 11011402
         SRL   RWRKY,9                  DIVIDE BY 512           ZA02523 11011502
         A     RWRKY,DWAOFLOW           ADD OVERHD FOR LAST SEG ZA02523 11011602
*                                       OF BLK THAT IS NOT LAST ZA02523 11011802
*                                       RECORD ON THE TRACK     ZA02523 11012202
         L     RODD,DWATRKLN            GET TRK LENGTH          ZA02523 11012602
         SR    RODD,RWRKY               SUBT # BYTES ALREADY    ZA02523 11012702
*                                       USED FOR OVERFLOW SEG   ZA02523 11012802
         S     RODD,DWARCTKY            SUBT OVERHEAD REQUIRED  ZA02523 11012902
*                                       FOR ANOTHER RECORD ON   ZA02523 11013002
*                                       THIS TRACK              ZA02523 11013202
         BNP   LASTTRK2                 IF NOT ENOUGH BYTES,    ZA02523 11013602
*                                       END OF PERIOD           ZA02523 11014002
         A     RODD,DWARCTKY            ELSE, ADD BACK ON THE   ZA02523 11014102
*                                       OVERHEAD BYTES          ZA02523 11014202
         B     LOOP                     RETURN TO CALCULATE     ZA02523 11014302
*                                       REMAINING RECORDS ON    ZA02523 11014402
*                                       THIS TRACK              ZA02523 11014502
*                                                                       11014602
LASTTRK2 EQU   *                        END OF PERIOD           ZA02523 11014702
         LA    RNTRK,1(RNTRK)           INCLUDE CURRENT TRK     ZA02523 11014802
         B     FINI                     GO STORE PERIOD VALUES  ZA02523 11014902
*                                                                       11015302
*                                                                       11015502
*     THE FOLLOWING CALCULATES PERIODS WHEN DL + KL  + OVERHEAD         11017502
*     IS GREATER THAN TRACK CAPACITY.                                   11017602
*                                                                       11017702
*                                                                       11018102
BIGRECRD EQU   *                        CALCULATE LARGE RECS    ZA02523 11018202
         LA    RNTRK,1(RNTRK)           ADD 1 TO TRACK COUNT    ZA02523 11018302
         L     RWRKY,DWARLREC           GET REC LEN IF LAST REC ZA02523 11018402
*                                       ON TRACK                ZA02523 11018802
         S     RWRKY,DWATRKLN           SUBTR LENGTH OF TRK     ZA02523 11018902
*                                       FROM LENGTH OF 1 RECORD ZA02523 11019002
*                                                                       11019102
*      RWRKY CONTAINS NUMBER OF DATA BYTES THAT DID NOT FIT             11019502
*      ON THAT TRACK                                                    11019902
*                                                                       11020302
LOOP2    EQU   *                        CALCULATE BYTE NEXT TRK ZA02523 11020702
         TM    DWAFLAGS,DWAPASS2        TEST FOR 2ND PASS       ZA02523 11020802
*                                       NOTE: 2ND PASS CALCULATES       11020902
*                                       RECORDS/EXTENT. 1ST PASS        11021002
*                                       CALCULATES RECORDS/PERIOD       11021102
         BZ    FSTPASS2                 IF NOT, GO ON           ZA02523 11021502
         C     RNTRK,DWATTRKS           COMPARE TRKS TO TOTAL   ZA02523 11021902
         BE    FINI2                    IF EQUAL,END OF EXTENT  ZA02523 11022302
*                                                                       11022702
FSTPASS2 EQU   *                        CONTINUE CALCULATIONS   ZA02523 11022802
         LA    RNTRK,1(RNTRK)           ADD 1 TO TRACK COUNT    ZA02523 11023202
         A     RWRKY,DWARCOVH           ADD OVERHD FOR LAST     ZA02523 11023602
*                                       RECORD ON TRACK         ZA02523 11024002
         S     RWRKY,DWATRKLN           SUBTR TRACK LENGTH      ZA02523 11024402
         BP    LOOP2                    IF POS. LOOP TO FIGURE  ZA02523 11024502
*                                       SEGMENT ON NEXT TRACK   ZA02523 11024602
*                                                                       11025002
*                        REC ENDS ON THIS TRACK                 ZA02523 11025437
         LA    RNRCD,1(RNRCD)           ADD 1 TO REC COUNT      ZA02523 11025802
*                                       AND BEGIN CALCULATING NEXT REC  11026202
         LTR   RWRKY,RWRKY              STILL MORE BYTES TO WRT ZA02523 11026302
         BZ    FINI                     NO, END OF PERIOD       ZA02523 11027102
         A     RWRKY,DWATRKLN           ADD BACK TRK LENGTH     ZA02523 11029102
*                                       SO DATA BYTES NOT NEG   ZA02523 11031102
         S     RWRKY,DWARCOVH           REMOVE OVERHD SO TOLER  ZA02523 11033102
*                                       CAN BE CALCULATED               11035102
*                                                                       11035202
*   ADD ON OVERHEAD FOR RECORD AS IF IT WERE NOT LAST ON TRACK - WILL   11035402
*   THE FIRST SEGMENT OF THE NEXT RECORD FIT, I.E. ARE THERE ENOUGH     11035802
*   BYTES LEFT ON THE TRACK AFTER THIS RECORD(+ TOLERANCE AND OVER-     11036102
*   HEAD) TO HOLD THE OVERHEAD FOR THE LAST RECORD ON TRACK + KEY       11036502
*   OVERHEAD IF ANY + 1 DATA BYTE MINUMUM?                              11036602
*                                                                       11036702
         MH    RWRKY,DWADVTOL           CALCULATE TOLERANCE     ZA02523 11036802
         SRL   RWRKY,9                  FOR RECORD THATS NOT    ZA02523 11037002
         A     RWRKY,DWAOFLOW           LAST - ADD BACK OVERHD  ZA02523 11037402
         L     RWRKX,DWATRKLN           GET TRACK LENGTH        ZA02523 11037802
         SR    RWRKX,RWRKY              SUBT TO GET # BYTES     ZA02523 11038102
*                                       LEFT ON TRACK           ZA02523 11038502
         S     RWRKX,DWARCTKY           SUBT MINIMUM OVERHD     ZA02523 11038602
*                                       (LAST REC ON TRK) REQUIRED      11038802
*                                       FOR NEXT SEGMENT (IF NOT        11039202
*                                       ENOUGH ROOM FOR LAST REC        11039302
*                                       OVERHEAD FOR NEXT REC, THIS     11039402
*                                       IS STILL END OF PERIOD          11039702
         BNP   FINI                     IF NONE, END OF PERIOD  ZA02523 11040102
         A     RWRKX,DWARCTKY           IF ROOM, CONTINUE WITH  ZA02523 11040202
*                                       ORIGINAL NUMBER OF      ZA02523 11040302
*                                       UNUSED BYTES ON TRACK   ZA02523 11040402
         L     RWRKY,DWARLREC           PUT FULL SIZE OF LAST   ZA02523 11040502
*                                       REC ON TRACK IN REG     ZA02523 11040602
         SR    RWRKY,RWRKX              SUBT SIZE OF TRK LEFT   ZA02523 11040702
*                                       RESULT IS NUMBER OF DATA BYTES  11040802
*                                       THAT MUST BE WRITTEN ON NEXT    11041202
*                                       TRACK(S)                        11041302
         B     LOOP2                    AND RETURN              ZA02523 11041702
*                                                                       11042102
*                                                                       11042202
*      STORE CALCULATED VALUES FOR TRKS/PERIOD AND TRKS/EXTENT          11042302
*      IN THE DEB RELATIVE EXTENT                                       11042502
*                                                                       11042902
FINI     EQU   *                                                        11043002
         ST    RNRCD,DEBDBPP            SAVE RECORD COUNT               11043202
         ST    RNTRK,DEBDTPP            SAVE TRACK COUNT                11043402
         LA    RDEBAMX,DEBDBPEF         INCREMENT EXTENT ADDR BY SIZE   11043602
         USING DEBDBPEF,RDEBAMX         ESTABLISH DEB DAM SECTION       11043802
*                                       EXTENTS BASE REG                11044002
EACHEXT  EQU   *                                                        11044202
         SR    REVEN,REVEN              CLEAR THE EVEN REGISTER  Y02072 11044402
         SR    RNRCD,RNRCD              CLEAR OUT RECORD COUNT          11044602
         LH    RODD,DEBNMTRK            DIVIDE NUMBER OF TRACKS  Y02072 11044802
         D     REVEN,DEBDTPP            BY THE PERIOD VALUE      Y02072 11045002
         LTR   REVEN,REVEN              TEST REVEN- IF  ZERO AN  Y02072 11045202
         BZ    FINI2                    EVEN AMOUNT OF PERIODS FIT      11045402
         ST    REVEN,DWATTRKS           STORE TRACKS IN WORKAREA Y02072 11045702
         OI    DWAFLAGS,DWAPASS2        INDICATE SECOND PASS            11046502
         B     NEXTEXT                  GO FOR SECOND PASS              11047302
FINI2    EQU   *                                                        11048102
         NI    DWAFLAGS,X'FF'-DWAPASS2  TURN OFF SECOND PASS SWITCH     11048902
         SR    REVEN,REVEN              DIVIDE NUMBER OF TRACKS  Y02072 11049702
         LH    RODD,DEBNMTRK            BY THE PERIOD VALUE      Y02072 11050502
         D     REVEN,DEBDTPP            DIVIDE BY TRACKS/PERIOD  Y02072 11051302
         M     REVEN,DEBDBPP            MULTIPLY NO. PERIODS BY  Y02072 11052102
         AR    RODD,RNRCD               RECORDS/PERIOD AND ADD   Y02072 11052902
*                                       EXTRA RECORDS                   11053702
         AR    RDSSSZ,RODD              ADD EXTENT SZ TO DS SZ   Y02072 11054502
         ST    RODD,DEBDBPEF            ST RECS/EXTENT IN EXTENT Y02072 11055302
         LA    RDEBAMX,L'DEBDBPEF(RDEBAMX)  UPDATE TO NEXT EXTENT       11056102
         LA    RDEBEXT,DEBDASDL(RDEBEXT) INCR DEB ADDR BY EXTENT SIZE   11056902
         BCT   RXTNCUR,EACHEXT          LOOP FOR EACH EXTENT            11057702
         DROP  RDEBAM,RDEBEXT,RDEBAMX   DROP DEB DAM/EXT SECTION REGS   11058502
         SPACE 2                                                        11059302
****                                                                    11060102
****     STORE TOTAL BLOCKS IN THE DATA SET, INTO THE DCB               11060902
****                                                                    11061702
STDCBREL EQU   *                                                        11062502
         IC    RWRKX,DCBRELB            STORE TOTAL SIZE OF THE         11063302
         ST    RDSSSZ,DCBRELB           DATA SET IN THE DCB SAVING      11064102
         STC   RWRKX,DCBRELB            THE KEY LENGTH                  11064902
         EJECT                                                          11065702
*********************************************************************** 11066502
*  FUNCTION V:  THE FOLLOWING FUNCTION GETS BUFFERS FOR ALL RECORD    * 11067302
*  FORMATS OTHER THAN VARIABLE SPANNED IF DYNAMIC BUFFERING WAS       * 11068102
*  SPECIFIED IN THE OPTCD FIELD (=S). BUFFERS ARE OBTAINED AND        * 11068902
*  INITIALIZED IN USER KEY.                                           * 11069702
*  INPUT TO THIS FUNCTION IS AS FOLLOWS:                              * 11070502
*              REGISTER 4 = OPEN WORKAREA ADDRESS                     * 11071302
*              REGISTER 9 = DEB AVT ADDRESS                           * 11072102
*              REGISTER 10= DCB ADDRESS                               * 11072902
*              ENTRY IN DATA MANAGEMENT KEY                           * 11073702
*  OUTPUT FROM THIS FUNCTION IS AS FOLLOWS:                           * 11074502
*              SAME AS INPUT                                          * 11075302
*              BUFFER CONTROL BLOCK AND BUFFERS OBTAINED AND          * 11076102
*                   INITIALIZED                                       * 11076902
*              EXIT IS IN EITHER DATA MANAGEMENT KEY OR USER KEY,     * 11077702
*                   DEPENDING ON THE PATH TAKEN                       * 11078502
*********************************************************************** 11079302
         SPACE                                                          11080102
FUNCT5   EQU   *                        BEGINNING OF FUNCTION 5  Y02072 11080902
         TM    DCBOPTCD,DCBOPTDB        WAS DYNAMIC BUFFERING REQUESTED 11081702
         BZ    FUNCT7                   NO RESTORE REG AND RET   Y02072 11082502
         SPACE 2                                                        11083302
****                                                                    11084102
****     DETERMINE CORE REQUIRED FOR BUFFERS AND BUFFER CONTROL         11084902
****     BLOCK AND INITIALIZE BUFFERS FOR DYNAMIC BUFFERING OPTION      11085702
****                                                                    11086502
         SR    RBUFNO,RBUFNO            CLEAR NUMBER OF BUFFERS REG     11087302
         IC    RBUFNO,DCBBUFNO          CALCULATE THE NUMBER OF         11088102
         LTR   RBUFNO,RBUFNO            BUFFERS NEEDED,                 11088902
         BP    NOBUFNO                  IF THE USER OMITTED THIS        11089702
         LA    RBUFNO,BFRDFALT          PARAMETER ASSUME TWO BUFFERS.   11090502
         SPACE                                                          11091302
NOBUFNO  EQU   *                                                        11092102
         LR    RODD,RBUFNO              PUT BUF NUM IN ODD REG   Y02072 11092902
         LH    RBUFLN,DCBBUFL           LOAD SPECIFIED LENGTH           11093702
         LTR   RBUFLN,RBUFLN            TEST FOR ZERO BUFFER LENGTH     11094502
         BNZ   BUFOK                    IF NOT 0, CONTINUE       Y02072 11095302
         LA    R0,PD51                  GET INTERNAL RET CODE    Y02072 11096102
*                                       INDICATING BUFL=0 WHEN   Y02072 11096902
*                                       DYN BUFFERING SPECIFIED  Y02072 11097702
         B     ERREXIT                  GO TO PROB DETERMINATION Y02072 11098502
*                                                                       11099302
BUFOK    EQU   *                        BUFFER LENGTH SPECIFIED  Y02072 11100102
         TM    DCBBUFL+1,NOTDOUBL       AND CHECK THAT IT IS A          11100902
         BZ    OKALN                    DOUBLE WORD MULTIPLE.           11101702
         SRL   RBUFLN,3                 IF NOT                          11102502
         SLL   RBUFLN,3                 CLEAR THE 1-7 VALUE             11103302
         LA    RBUFLN,DOUBLEWD(RBUFLN)  AND ADD EIGHT.                  11104102
OKALN    MR    REVEN,RBUFLN             MULTIPLY LENGTH X NO. OF BFRS   11104902
         L     RTCB,DEBTCBAD            GET TCB ADDRESS                 11105702
         USING TCB,RTCB                 ESTABLISH TCB BASE REG          11106502
         TM    TCBFLGS6,TCBRV           TEST IF ADDRSPCE IS REAL        11107302
         BO    NOBCBSFX                 BRANCH IF SO, NO BCB SUFFIX     11108102
         SPACE 2                                                        11108902
****                                                                    11109702
****     CORE NEEDED= UNSCHEDULED LIST LENGTH + BUFFER CONTROL BLOCK    11110502
****     LENGTH + BUFFER SUFFIX OF 1 BYTE PER BUFFER + 7 FOR ROUNDING   11111302
****                                                                    11112102
         LA    RPOOLSZ,USLSZFST+BCBLNTHV+RNDFCTOR(RBUFNO,RODD)          11112902
         TM    DCBBFALN,DCBBFAF1        IF BUFFER ALIGNMENT IS FULL-WD  11113702
         BZ    ROUND1                   (NOT DOUBLE WD),                11114502
         LA    RPOOLSZ,FWDBNDRY(RPOOLSZ) THEN ADD 4 BYTES               11115302
ROUND1   SRL   RPOOLSZ,3                ROUNDED TO A MULTIPLE OF 8      11116102
         SLL   RPOOLSZ,3                RESET                           11116902
         LR    R1,RPOOLSZ               PUT LENGTH IN PARM REG   Y02072 11117702
****                                                                    11118502
****         GETMAIN ROUTINE MODESETS TO USER KEY BEFORE RETURNING      11119302
****                                                                    11120102
         BAL   RETURN,ENTUSER           GO TO GET CORE FOR BCB   Y02072 11120902
*                                       RETURN IS IN USER KEY    Y02072 11121702
         B     GOTCORE                  BRANCH AROUND NEXT INSTR Y02072 11122502
*                                                                       11123302
NOBCBSFX EQU   *                        ADDRESS SPACE IS REAL           11124102
         LA    RPOOLSZ,BCBLENTH+FOURBYTS(RODD)  ADD LENGTH OF BCB AND   11124902
*                                       BUFFERS -DBLWD BDY; THEN ADD    11125702
*                                       4 MORE IN CASE WANT FULLWD      11126502
         LR    R1,RPOOLSZ               PUT LENGTH IN PARM REG   Y02072 11127302
****                                                                    11128102
****         GETMAIN ROUTINE MODESETS TO USER KEY BEFORE RETURNING      11128902
****                                                                    11129702
         BAL   RETURN,ENTUSER           GO TO GET CORE FOR BCB   Y02072 11130502
*                                       RETURN IS IN USER KEY    Y02072 11131302
*                                                                       11132102
GOTCORE  EQU   *                        RETURN FROM GETMAIN      Y02072 11132902
         LR    RBCB,R1                  PUT GOTTEN CORE IN BASE  Y02072 11133702
         TM    TCBFLGS6,TCBRV           IS ADDRESS SPACE = REAL         11134502
         BO    SAVSIZ                   BRANCH IF YES                   11135302
         DROP  RTCB                     DROP TCB BASE REG               11136102
         SPACE 2                                                        11136902
****                                                                    11137702
****     INITIALIZE THE UNSCHEDULED LIST (ADDRESS SPACE = VIRTUAL)      11138502
****                                                                    11139302
         USING USL,RBCB                 ESTABLISH USL BASE REG          11140102
         XC    USL(USLSZFST),USL        CLEAR THE LIST                  11140902
         MVI   USLSIZE+1,USLSZFST       INITIALIZE SIZE FIELD           11141702
         OI    USLFLAGS,USLCURNT        TURN ON 'CURRENT' BIT           11142502
         LA    RWRKX,USL+USLSZFST-L'USLSLOT1  ADDRESS LAST USL SLOT     11143302
         USING USLSLOT,RWRKX            EST USL IOB ADDR SECT BASE REG  11144102
         OI    USLSLTFL,USLENDL         TURN ON END-OF-LIST INDICATOR   11144902
         DROP  RWRKX                    DROP USL IOB ADDR SECT BASE REG 11145702
*                                                                       11146502
         MODESET  EXTKEY=DATAMGT        CHANGE TO DATAMGT KEY    Y02072 11147302
*                                                                       11148102
         ST    RBCB,DCBDYNB             STORE POINTER TO USL            11148902
         OI    DXATEXC1,FCAOUSL         SET AUDIT TRAIL BIT      Y02072 11149702
*                                       FOR FORCE CLOSE CLEANUP  Y02072 11150502
*                                       INDICATING USL GOTTEN    Y02072 11151302
*                                                                       11152102
         MODESET  KEYADDR=DXUKEY,WORKREG=14 CHANGE TO USER KEY   Y02072 11153002
*                                                                       11153902
         SPACE 2                                                        11154802
****                                                                    11155702
****     INITIALIZE BUFFER CONTROL BLOCK (ADDRESS SPACE = VIRTUAL)      11156602
****                                                                    11157502
         LA    RBCB,USLSZFST(RBCB)      POINT TO BUFFER CONTROL BLOCK   11158402
         DROP  RBCB                     DROP USL BASE REG               11159302
         USING BCBDEFV,RBCB             EST BFR CONTROL BLK BASE REG    11160202
         ST    RPOOLSZ,BCBTBRS1         TOTAL SIZE GETMAIN AREA         11161102
         ST    RBUFLN,BCBBUFL           LENGTH OF EACH BUFFER           11162002
         SPACE 2                                                        11162902
****                                                                    11163802
****     CALCULATE ADDR OF 1ST BUFFER                                   11164702
****                                                                    11165602
         LA    RWRKY,BCBSUFFX(RBUFNO)   ADDR END OF BUFFER SUFFIX       11166502
         SR    RWRKX,RWRKX              CLEAR REGISTER                  11167402
         TM    DCBBFALN,DCBBFAF1        IF FULL WORD ALIGNMENT FOR      11168302
         BZ    ROUND2                   BUFFERS, ADD 4 BEFORE ROUND     11169202
         LA    RWRKX,FWDBNDRY           SET UP FOR FW ALIGNMENT         11170102
ROUND2   LA    RWRKY,RNDFCTOR(RWRKX,RWRKY)  BUMP ADDRESS TO NEXT        11171002
         SRL   RWRKY,3                  DOUBLE WORD BOUNDARY            11171902
         SLL   RWRKY,3                  RESET                           11172802
         SR    RWRKY,RWRKX              IF FULL WORD ALIGNMENT,         11173702
*                                       SUBTRACT 4.                     11174602
         ST    RWRKY,BCBBUF1            ADDRESS OF FIRST BUFFER         11175502
         SPACE 2                                                        11176402
****                                                                    11177302
****     INITIALIZE AVAILABLE BUFFER CHAIN.                             11178202
****                                                                    11179102
         MVI   BCBBFAVL,BFRNUM1         SET FIRST AVAILABLE BFR = NO. 1 11180002
         LA    RPOOLSZ,1(RBUFNO)        NO. OF BUFFERS+1=COMPARAND(R13) 11180902
         LA    RBUFNO,BFRNUM1           SET INCR OF 1- BXLE LOOP CONTRL 11181802
         LA    RWRKX,BFRNUM2            INITIALIZE NEXT BFR IN CHAIN TO 11182702
*                                       BFR NUMBER 2                    11183602
STORENXT STC   RWRKX,BCBTBRS1+2(RWRKX)  CHAIN TO NEXT AVAILABLE BFR     11184502
         BXLE  RWRKX,RBUFNO,STORENXT    LOOP ONCE FOR EACH BUFFER       11185402
         LA    RBUFNO,BCBTBRS1+1(RWRKX) POINT TO LAST BFR IN CHAIN      11186302
         MVI   0(RBUFNO),0              IND NO MORE BUFFERS IN CHAIN    11187202
*                                                                       11188102
         MODESET  EXTKEY=DATAMGT        CHANGE TO DATAMGT KEY    Y02072 11189002
*                                                                       11189902
         STCM  RBCB,ADDR,DCBBUFCA       STORE PTR TO BCB                11190802
         OI    DXATEXC1,FCAOBUF         SET AUDIT TRAIL BIT      Y02072 11191202
*                                       FOR FORCE CLOSE CLEANUP  Y02072 11191602
*                                       INDICATING BCB GOTTEN    Y02072 11191802
         B     FUNCT7                   GO RESTORE REGS AND RET  Y02072 11192402
         DROP  RBCB                     DROP BFR CONTROL BLK BASE REG   11192602
         SPACE 2                                                        11193502
****                                                                    11194402
****     DIVIDE AREA INTO A BUFFER CONTROL BLOCK (BCB) AND THE          11195302
****     SPECIFIED NO. OF BUFFERS. LINK ALL TO NEXT AVAILABLE FIELD     11196202
****     IN THE BUFFER CONTROL BLOCK. (ADDRESS SPACE = REAL)            11197102
****     ENTRY INTO THIS ROUTINE IS IN USER KEY.                        11198002
****                                                                    11198902
SAVSIZ   EQU   *                                                        11199802
*                                                                       11200702
         MODESET  EXTKEY=DATAMGT        CHANGE TO DATAMGT KEY    Y02072 11201602
*                                                                       11202502
         USING BCBDEFR,RBCB             EST BFR CONTROL BLK BASE REG    11203402
         IC    RWRKX,DCBBUFNO           STORE THE RETURNED CORE  Y02072 11204302
         ST    RBCB,DCBBUFCB            ADDR AS BCB ADDR                11205202
         STC   RWRKX,DCBBUFNO           REPLACE TOP BYTE         Y02072 11206102
         OI    DXATEXC1,FCAOBUF         SET AUDIT TRAIL BIT      Y02072 11206502
*                                       FOR FORCE CLOSE CLEANUP  Y02072 11206902
*                                       INDICATING BCB GOTTEN    Y02072 11207002
*                                                                       11207402
         MODESET  KEYADDR=DXUKEY,WORKREG=14 CHANGE TO USER KEY   Y02072 11207902
*                                                                       11208802
         LR    RWRKX,RPOOLSZ            SAVE SIZE OF AREA               11209702
         ST    RPOOLSZ,BCBTBRS          STORE SIZE IN THE BCB           11210602
         XC    BCBIOBS,BCBIOBS          CLEAR IOB POINTERS              11211502
         LA    RWRKY,BCBLENTH(RBCB)     DEVELOP THE ADDRESS OF BUFFER   11212402
         TM    DCBBFALN,DCBBFAF1        (ALIGN TO A WORD BOUNDARY THATS 11213302
         BZ    NOTFULWD                 NOT A DOUBLE WORD BOUNDARY IF   11214202
         LA    RWRKY,FWDBNDRY(,RWRKY)   SO SPECIFIED)                   11215102
         SPACE                                                          11216002
NOTFULWD EQU   *                                                        11216902
         ST    RWRKY,BCBNABFR           AND STORE AS NEXT AVAILABLE BFR 11217802
         DROP  RBCB                     DROP BCB BASE REG               11218702
         SH    RWRKX,CONH20             SUBTRACT FROM SIZE- BCB, SM4366 11219602
         SR    RWRKX,RBUFLN             FIRST BUFFER,ALIGNMENT FACTOR   11220502
         LR    RBCB,RWRKY               POINT OT NEXT BUFFER LOCATION   11221402
BFRLOOP  AR    RBCB,RBUFLN              (BUFFER 1 + BUFFER LENGTH)      11222302
         SR    RWRKX,RBUFLN             REDUCE TOTAL SIZE BY BUFL       11223202
         BM    FNDLAST                  IF MINUS ALL BUFFERS ARE LINKED 11224102
         ST    RBCB,0(,RWRKY)           LINK BFR. 2 TO BFR. 1 ETC.      11225002
         LR    RWRKY,RBCB               INCREMENT THE TWO BFR. POINTERS 11225902
         B     BFRLOOP                  AND LOOP                        11226802
FNDLAST  SR    RBCB,RBCB                ZERO THE                        11227702
         ST    RBCB,0(,RWRKY)           END BUFFER LINK ADDRESS         11228602
         B     FUNCT7                   RETURN TO COMMON OPEN    Y02072 11229502
         EJECT                                                          11230402
*********************************************************************** 11231302
*  FUNCTION VI:  THE FOLLOWING FUNCTION PROCESSES VARIABLE SPANNED    * 11232202
*  RECORDS ONLY. IT OBTAINS AND INITIALIZES THE SEGMENT WORKAREAS AND * 11233102
*  GETS A BUFFER AREA IF DYNAMIC BUFFERING IS SPECIFIED. BUFFERS      * 11234002
*  ARE OBTAINED AND INITIALIZED IN USER KEY.                          * 11234902
*  INPUT TO THIS FUNCTION IS AS FOLLOWS:                              * 11235802
*              REGISTER 4 = OPEN WORKAREA ADDRESS                     * 11236702
*              REGISTER 9 = DEB AVT ADDRESS                           * 11237602
*              REGISTER 10= DCB ADDRESS                               * 11238502
*              ENTRY IN DATA MANAGEMENT KEY                           * 11239402
*  OUTPUT FROM THIS FUNCTION IS AS FOLLOWS:                           * 11240302
*              SAME AS INPUT                                          * 11241202
*              BUFFER CONTROL BLOCK OR SWA CONTROL BLOCK, BUFFERS     * 11242102
*                       AND SEGMENT WORKAREAS ARE OBTAINED AND        * 11243002
*                       INITIALIZED.                                  * 11243902
*********************************************************************** 11244802
         SPACE                                                          11245702
FUNCT6   EQU   *                        BEGINNING OF FUNCTION 6         11246602
         LR    RDEBEXT,RDEBA            GET DEB ADDR FOR DASD SECTION   11247502
         USING DEBDASD-(DEBBASND-DEBAVT),RDEBEXT  ESTABLISH DEB DASD    11248402
*                                       SECTION BASE REG                11249302
         SPACE 2                                                        11250202
****                                                                    11251102
****     CONSTRUCT BUFFERS FOR VRE OPTION                               11252002
****                                                                    11252902
         SR    RBUFNO,RBUFNO            DEVELOP IN REGISTER RBUFNO      11253802
         IC    RBUFNO,DCBBUFNO          THE NUMBER OF BUFFERS           11254702
         LTR   RBUFNO,RBUFNO            NEEDED, IF USER OMITTED         11255602
         BP    FINDLNTH                 THIS PARAMETER ASSUME 2         11256502
         LA    RBUFNO,BFRDFALT          BUFFERS                         11257402
FINDLNTH L     RWRKX,DEBUCBAD           LOAD UCB ADDRESS                11258302
         DROP  RDEBEXT                                           Y02072 11259202
         USING UCB,RWRKX                ESTABLISH UCB BASE REG          11260102
         L     RDVCT,CVTPTR             LOAD CVT ADDRESS                11261002
         USING CVT,RDVCT                ESTABLISH CVT BASE REG   A44855 11261902
         L     RDVCT,CVTZDTAB           LOAD DEVICE TABLE ADDR   A44855 11262802
         DROP  RDVCT                    DROP CVT BASE REG        A44855 11263702
         USING DVCTI,RDVCT              ESTABLISH DEVICE CHAR TABLE     11264602
*                                       INDEX BASE REG                  11265502
         LA    RWRKY,DVCTYPMK           MASK FOR UNIT TYPE NUMBER       11266402
         N     RWRKY,UCBTYP             PICK UP UNIT TYPE NUMBER        11267302
         IC    RWRKY,DVCTIOFF(RWRKY)    FIND ENTRY OFFSET               11268202
         LA    RDVCT,0(RWRKY,RDVCT)     POINT TO ENTRY TRACK LNGTH      11269102
         DROP  RWRKX,RDVCT              DROP UCB AND DEV CHAR TABLE     11270002
*                                       INDEX BASE REGISTERS            11270902
         USING DVCT,RDVCT               EST DEVICE CHAR TABLE BASE REG  11271802
         TM    DCBOPTCD,DCBOPTDB        DYNAMIC BUFFERING REQUIRED      11272702
         BZ    GETSWA                   NO, BRANCH                      11273602
         SPACE 2                                                        11274502
****                                                                    11275402
****     CONSTRUCT BUFFERS FOR DYNAMIC BUFFERING OPTION WITH VRE        11276302
****                                                                    11277202
****           FIRST DETERMINE SIZE OF SEGMENT WORK AREA                11278102
****                                                                    11278202
         SR    RAOFFS,RAOFFS            CLEAR WORK REGISTER             11278402
         IC    RAOFFS,DCBKEYLE          LOAD KEY LENGTH                 11278502
         AH    RAOFFS,DCBBLKSI          ADD BLKSIZE                     11278902
         CH    RAOFFS,DVCTRKLN          COMPARE MAXIMUM LOGICAL RECORD  11279302
*                                       LENGTH + KEY LENGTH AND TRACK   11279702
*                                       SIZE                            11280102
         BNH   ADD                      RECORD LENGTH IS LOW            11280502
         LH    RAOFFS,DVCTRKLN          USE TRACK LENGTH                11280902
         DROP  RDVCT                    DROP DEVICE CHAR TABLE BASE REG 11281002
****                                                                    11281302
****           ADD IN LENGTHS OF SWA HEADER AND RECORD AREA PREFIX,     11281502
****           THEN PAD TO WORD BOUNDARY                                11281602
****                                                                    11281702
ADD      LA    RAOFFS,SWACSLNG+L'BUFBFPTR+MULTOF4(RAOFFS)        Y02072 11282002
         N     RAOFFS,RNDFULL           ROUND TO WORD BOUNDARY   Y02072 11282402
****                                                                    11283702
****           RAOFFS NOW CONTAINS RECORD AREA OFFSET FROM SWA HEADER.  11283902
****           FULLWORD OR DOUBLE WORD ALIGNMENT FOR RECORD AREA WILL   11284102
****           BE CONTROLLED BY PADDING THE BCB IF NECESSARY.           11284502
****                                                                    11284902
****           CALCULATE THE LENGTH OF THE RECORD AREA, THEN OF THE     11285402
****           ENTIRE BUFFER, PADDING TO A DOUBLE WORD BOUNDARY         11285502
****                                                                    11286002
         SR    RBUFLN,RBUFLN            CLEAR BUFFER LENGTH REG         11286102
         IC    RBUFLN,DCBKEYLE          RECORD AREA=KEY LENGTH   A44855 11286202
         AH    RBUFLN,DCBBLKSI          PLUS BLOCKSIZE           A44855 11286302
         LA    RBUFLN,RNDFCTOR(RAOFFS,RBUFLN)  ROUND ENTIRE BUFFER      11286402
         N     RBUFLN,RNDDBL            LENGTH TO A MULTIPLE OF 8       11286502
****                                                                    11286602
****           CALCULATE LENGTH OF BUFFER CONTROL BLOCK                 11286702
****                                                                    11286802
         LA    RLEN,BCBLENTH            ASSUME NO BUFFER SUFFIX  Y02072 11287002
         L     RWRKY,DEBTCBAD           GET TCB ADDRESS          YM1421 11287302
         USING TCB,RWRKY                ESTABLISH TCB BASE REG   YM1421 11287402
         TM    TCBFLGS6,TCBRV           IS ADDRESS SPACE REAL           11287702
         BO    BCBPAD                   BRANCH IF YES                   11288102
         AR    RLEN,RBUFNO              ADD ONE BYTE PER BUFFER  Y02072 11288502
****                                                                    11289402
****           PAD BCB AS NECESSARY FOR PROPER RECORD AREA ALIGNMENT    11289502
****                                                                    11289602
BCBPAD   EQU   *                        PAD BCB FOR ALIGNMENT           11290302
         AR    RLEN,RAOFFS              ADD OFFSET TO RECORD AREA       11315402
         SR    RWRKX,RWRKX              ASSUME FULLWORD,NOT      A44855 11316102
*                                       DOUBLEWORD ALIGNMENT OF RECORD  11316802
         TM    DCBBFALN,DCBBFAF1        TEST SPECIFIED ALIGNMENT A44855 11317502
         BZ    DOUBWORD                 BRANCH IF DOUBLEWORD     A44855 11318202
         LA    RWRKX,FWDBNDRY           SET INCR TO A FULLWORK BOUNDARY 11318902
DOUBWORD LA    RLEN,RNDFCTOR(RWRKX,RLEN)  ADD FOR BUF ALIGNMENT  Y02072 11319602
         N     RLEN,RNDDBL              ROUND TO DOUBLE WORD     Y02072 11321002
*                                       BOUNDARY                 Y02072 11321702
         SR    RLEN,RWRKX               THEN TO A FULLWORD IF    Y02072 11322402
*                                       SPECIFIED                Y02072 11323102
         SR    RLEN,RAOFFS              TAKE OFF OFFSET TO REC   Y02072 11323802
****                                                                    11324502
****           CALCULATE BUFFER POOL SIZE AS RBUFNO * RBUFLN + BCBSIZE. 11325202
****           PAD TO DOUBLE WORD BOUNDARY FOR GETMAIN.                 11325902
****                                                                    11326602
         SR    REVEN,REVEN              CLEAR REGISTER                  11327302
         LR    RODD,RBUFLN              GET BUFFER SIZE                 11328002
         MR    REVEN,RBUFNO             CALCULATE BUFFER POOL SIZE      11328702
         LA    RPOOLSZ,RNDFCTOR(RLEN,RODD) ADD BCB LENGTH        Y02072 11329402
         N     RPOOLSZ,RNDDBL           ROUND TO MULTIPLE OF 8          11330102
         TM    TCBFLGS6,TCBRV           TEST FOR REAL ADDRESS SPACE     11330802
         BO    GETREAL                  BRANCH IF SO                    11331502
         LA    RPOOLSZ,USLSZFST(RPOOLSZ)  ADD SIZE OF FIRST USL  Y02072 11332202
         DROP  RWRKY                                             YM1421 11333602
****                                                                    11334302
****         GETMAIN ROUTINE MODESETS TO USER KEY BEFORE RETURNING      11335002
****                                                                    11335702
         LR    R1,RPOOLSZ               PUT LENGTH IN PARM REG   Y02072 11337102
         BAL   RETURN,ENTUSER           GET MAIN STORAGE         Y02072 11337802
*                                       RETURN IS IN USER KEY    Y02072 11338502
         LR    RWRKX,R1                 GET ADDR TO GOTTEN CORE  Y02072 11338902
         SPACE 2                                                        11339902
****                                                                    11340602
****     INITIALIZE THE UNSCHEDULED LIST.                               11341302
****                                                                    11342002
         USING USL,RWRKX                ESTABLISH UNSCHED LIST BASE REG 11342702
         XC    USL(USLSZFST),USL        CLEAR THE LIST                  11343402
         MVI   USLSIZE+1,USLSZFST       INITIALIZE SIZE FIELD           11344102
         OI    USLFLAGS,USLCURNT        TURN ON 'CURRENT' BIT           11344802
         LA    RWRKY,USL+USLSZFST-L'USLSLOT1 ADDR LAST USL SLOT  Y02072 11345502
         USING USLSLOT,RWRKY            EST USL IOB ADDR BASE    Y02072 11346202
         OI    USLSLTFL,USLENDL         TURN ON END-OF-LIST INDICATOR   11346902
         DROP  RWRKY                    DROP USL IOB ADDR BASE   Y02072 11347602
*                                                                       11348302
         MODESET  EXTKEY=DATAMGT        CHANGE TO DATAMGT KEY    Y02072 11349002
*                                                                       11349702
         ST    RWRKX,DCBDYNB            STORE POINTER TO USL            11350402
         OI    DXATEXC1,FCAOUSL         SET AUDIT TRAIL BIT      Y02072 11350802
*                                       FOR FORCE CLOSE CLEANUP  Y02072 11350902
*                                       INDICATING USL GOTTEN    Y02072 11351002
*                                                                       11351102
         MODESET  KEYADDR=DXUKEY,WORKREG=15  CHANGE TO USER KEY  Y02072 11351802
*                                                                       11352502
         SPACE 2                                                        11353202
****                                                                    11353902
****     INITIALIZE BUFFER CONTROL BLOCK (ADDRESS SPACE = VIRTUAL)      11354602
****                                                                    11355302
         LA    RWRKX,USLSZFST(RWRKX)    POINT TO BUFFER CONTROL BLOCK   11356002
         DROP  RWRKX                    DROP UNSCHED LIST BASE REG      11356702
         USING BCBDEFV,RWRKX            EST VIRTUAL BCB BASE REG        11357402
         ST    RPOOLSZ,BCBTBRS1         TOTAL SIZE OF GETMAIN AREA      11358102
         ST    RBUFLN,BCBBUFL           LENGTH OF EACH BUFFER           11358802
         STCM  RAOFFS,ADDR,BCBRAOFS     RECORD AREA OFFSET IN BUFFER    11359502
         LA    RBUFR,BCBDEFV(RLEN)      GET ADDRESS OF FIRST BUFFER     11360202
         ST    RBUFR,BCBBUF1            STORE IT IN BCB                 11360902
*                                                                       11361602
         MODESET  EXTKEY=DATAMGT        CHANGE TO DATAMGT KEY    Y02072 11362302
*                                                                       11363002
         STCM  RWRKX,ADDR,DCBBUFCB+1    STORE ADDRESS OF BCB            11363702
         OI    DXATEXC1,FCAOBUF         SET AUDIT TRAIL BIT      Y02072 11364102
*                                       FOR FORCE CLOSE CLEANUP  Y02072 11364202
*                                       INDICATING BCB GOTTEN    Y02072 11364302
         SPACE 2                                                        11364402
****                                                                    11365102
****     INITIALIZE AVAILABLE BUFFER CHAIN                              11365802
****                                                                    11366502
*                                                                       11367202
         MODESET  KEYADDR=DXUKEY,WORKREG=15  CHANGE TO USER KEY  Y02072 11367902
*                                                                       11368602
         MVI   BCBBFAVL,BFRNUM1         SET FIRST AVAILABLE BFR = NO. 1 11369302
         LA    RODD,1(,RBUFNO)          NO. OF BUFFERS + 1 = COMPARAND  11370002
         LA    REVEN,BFRNUM1            SET INCR OF 1-BXLE LOOP CONTROL 11370702
         LA    RWRKY,BFRNUM2            INITIALIZE NEXT BFR TO   Y02072 11371402
*                                       BFR NUMBER 2                    11372102
STORNEXT STC   RWRKY,BCBTBRS1+2(RWRKY)  CHAIN TO NEXT AVAIL BFR  Y02072 11372802
         BXLE  RWRKY,REVEN,STORNEXT     LOOP ONCE FOR EACH BUFFR Y02072 11373502
         LA    RWRKY,BCBTBRS1+1(RWRKY)  POINT TO LAST CHAIN      Y02072 11374202
*                                       ELEMENT INITIALIZED.            11374902
         MVI   0(RWRKY),0               NO MORE BUFFERS IN CHAIN Y02072 11375602
         B     INITBUFS                 GO TO INITIALIZE BUFFERS        11376302
         DROP  RWRKX                    DROP BFR CONTROL BLK BASE REG   11377002
         SPACE 3                                                        11377702
GETREAL  EQU   *                        ENTERED IN KEY 5                11378402
****                                                                    11379102
****         GETMAIN ROUTINE MODESETS TO USER KEY BEFORE RETURNING      11379802
****                                                                    11380502
         LR    R1,RPOOLSZ               LOAD LG IN PARM REG      Y02072 11381202
         BAL   RETURN,ENTUSER           GET MAIN STORAGE         Y02072 11382602
*                                       RETURN IS IN USER KEY    Y02072 11383302
         LR    RWRKX,R1                 GET ADDR OF GOTTEN CORE  Y02072 11383702
         SPACE 2                                                        11384702
****                                                                    11385402
****     INITIALIZE THE BUFFER CONTROL BLOCK (ADDRESS SPACE = REAL)     11386102
****                                                                    11386802
*                                                                       11387502
         MODESET  EXTKEY=DATAMGT        CHANGE TO DATAMGT KEY    Y02072 11388202
*                                                                       11388902
         USING BCBDEFR,RWRKX            EST BUFFER CONTROL BLK BASE REG 11389602
         IC    RWRKY,DCBBUFNO           SAVE BUFFER NUMBER              11390302
         ST    RWRKX,DCBBUFCB           STORE POINTER TO BUFCB          11391002
         STC   RWRKY,DCBBUFNO           RESTORE BUFNO IN DCB            11391702
         OI    DXATEXC1,FCAOBUF         SET AUDIT TRAIL BIT      Y02072 11392102
*                                       FOR FORCE CLOSE CLEANUP  Y02072 11392202
*                                       INDICATING BCB GOTTEN    Y02072 11392302
*                                                                       11392402
         MODESET  KEYADDR=DXUKEY,WORKREG=15 CHANGE TO USER KEY   Y02072 11393102
*                                                                       11393802
         XC    BCBIOBS,BCBIOBS          CLEAR FIRST 2 WORDS OF BUFFER   11394502
*                                       CONTROL BLOCK                   11395202
         ST    RPOOLSZ,BCBTBRS          INITIALIZE BUFFR POOL SZ Y02072 11395902
         LA    RBUFR,BCBLENTH(RWRKX)    POINT TO FIRST BUFFER           11396602
         ST    RBUFR,BCBNABFR           INITIALIZE POINTER TO BUFS      11397302
         DROP  RWRKX                    DROP BFR CONTROL BLK BASE REG   11398002
INITBUFS EQU   *                                                 A44855 11398702
         S     RAOFFS,FOUR              OFFSET TO SWA POINTER    A44855 11399402
         LR    RSWA,RBUFR               INCREMENT BUFFER POINTER        11400102
         AR    RBUFR,RBUFLN             POINT TO NEXT BUFFER            11400802
         LA    RWRKY,1                  SET BUFFER COUNT TO 1           11401502
         SPACE 2                                                        11402202
****                                                                    11402902
****     INITIALIZE BUFFER CHAIN AND RECORD AREA POINTER IN BUFFERS     11403602
****                                                                    11404302
         USING SWA,RSWA                 EST SEG WORK AREA BASE   A44855 11405002
CHAINIT  CR    RWRKY,RBUFNO             ARE ALL BUFFERS CHAINED         11405702
         BE    LASTBUF                  YES, BRANCH                     11406402
         LA    RWRKY,1(,RWRKY)          INCREMENT BUFFER COUNT          11407102
         ST    RBUFR,SWANXTPT           SET POINTER TO NEXT BUFFER      11407802
         LA    RWRKX,SWA+L'BUFBFPTR(RAOFFS)  CALCULATE REC AREA PTR     11408502
         ST    RWRKX,SWARAPT            SET POINTER TO REC AREA         11409202
         LA    RWRKX,SWA(RAOFFS)        GET ADDR OF SWA ADDR FIELD      11409902
         USING BUFFERB,RWRKX            EST BUFFER PREFIX BASE REG      11410602
         ST    RSWA,BUFBFPTR            STORE ADDR OF SWA               11411302
         XC    SWABFINC,SWABFINC        CLEAR WORKING OFFSET     A44855 11412002
*                                       FIELD                    A44855 11412702
         LR    RSWA,RBUFR               UPDATE BUFFER POINTER    Y02072 11413402
         AR    RBUFR,RBUFLN             UPDATE NEXT BUFFER POINTER      11414102
         B     CHAINIT                  CONTINUE CHAINING BUFFERS       11414802
LASTBUF  XC    SWANXTPT,SWANXTPT        CLEAR LAST BUFFER POINTER       11415502
         XC    SWABFINC,SWABFINC        CLEAR OFFSET IN REC FLD  YM3693 11415902
         LA    RWRKX,SWA+L'BUFBFPTR(RAOFFS)  CALCULATE REC AREA PTR     11416202
         ST    RWRKX,SWARAPT            SET POINTER TO REC AREA         11416902
         LA    RWRKX,SWA(RAOFFS)        GET ADDR OF SWA ADDR FIELD      11417602
         ST    RSWA,BUFBFPTR            STORE ADDR OF SWA               11418302
         B     FUNCT7                   CONTINUE PROCESSING      Y02072 11419002
         DROP  RWRKX,RSWA               DROP BUFFER PREFIX AND SEGMENT  11419702
*                                       WORK AREA BASE REGISTERS        11420402
         SPACE 2                                                        11421102
****                                                                    11421802
****     CONSTRUCT THE BUFFER CONTROL BLOCK AND SEGMENT WORK AREAS FOR  11422502
****     VRE OPTION WITHOUT DYNAMIC BUFFERING.                          11423202
****                                                                    11423902
GETSWA   EQU   *                                                        11424602
         USING DVCT,RDVCT               EST DEVICE CHAR TABLE BASE REG  11425302
         CLC   DCBBLKSI,DVCTRKLN        COMPARE MAXIMUM LOGICAL         11426002
*                                       RECORD LENGTH + TRACK SIZE      11426702
         BNH   LOWBLKSI                 BRANCH IF MAXIMUM LOGICAL       11427402
*                                       RECORD LENGTH IS LOW            11428102
         LH    RLEN,DVCTRKLN            USE TRACK LENGTH                11428802
         B     ADDCNTL                  BRANCH TO ADD CONTROL BYTE      11429502
         DROP  RDVCT                    DROP DEVICE CHAR TABLE BASE REG 11430202
LOWBLKSI LH    RLEN,DCBBLKSI            USE MAX LOGICAL REC LENGTH      11430902
ADDCNTL  LA    RLEN,SWACSLNG(RLEN)      ADD CONTROL BYTES               11431602
         SPACE 2                                                        11432302
****                                                                    11433002
****     ROUND TO FULLWORD ALIGNMENT FOR THE BUFFER CONTROL BLOCK AND   11433702
****     SEGMENT WORK AREAS.                                            11434402
****                                                                    11435102
         LA    RLEN,FWRNDFTR(RLEN)      ADD FULLWORK ROUNDING FACTOR    11435802
         N     RLEN,RNDFULL             ROUND TO A FULLWORD             11436502
         SPACE 2                                                        11437202
****                                                                    11437902
****     CALCULATE TOTAL BUFFER CONTROL BLOCK AND SEGMENT WORK AREA     11438602
****     LENGTH AND GET MAIN STORAGE.                                   11439302
****                                                                    11440002
         SR    REVEN,REVEN              CLEAR EVEN REGISTER             11440702
         LR    RODD,RLEN                PUT BUFFER LENGTH IN ODD REG    11441402
         MR    REVEN,RBUFNO             CALCULATE TOTAL SWA SIZE        11442102
         LA    RPOOLSZ,BCBLNTHS(RODD)   ADD BUFCB SIZE                  11442802
****                                                                    11443502
****         GETMAIN ROUTINE MODESETS TO USER KEY BEFORE RETURNING      11444202
****                                                                    11444902
         LR    R1,RPOOLSZ               GET LG IN PARM REG       Y02072 11445602
         BAL   RETURN,ENTUSER           GET MAIN STORAGE         Y02072 11447002
*                                       RETURN IS IN USER KEY    Y02072 11447702
*                                                                       11449102
         MODESET  EXTKEY=DATAMGT        CHANGE TO DATAMGT KEY    Y02072 11449802
*                                                                       11450502
         LR    RWRKX,R1                 GET ADDR OF GOTTEN CORE  Y02072 11450902
         ST    RWRKX,DCBDYNB            PUT BUFCB POINTER IN DCB        11451202
         OI    DXATEXC1,FCAOSWA         SET AUDIT TRAIL BIT      Y02072 11451602
*                                       FOR FORCE CLOSE CLEANUP  Y02072 11451702
*                                       INDICATING SWA GOTTEN    Y02072 11451802
         SPACE 2                                                        11456102
****                                                                    11457002
****     INITIALIZE THE BUFFER CONTROL BLOCK                            11457902
****                                                                    11458802
*                                                                       11459702
         MODESET  KEYADDR=DXUKEY,WORKREG=15 CHANGE TO USER KEY   Y02072 11460602
*                                                                       11461502
         USING BCBDEFS,RWRKX            EST BUFFER CONTROL BLK BASE REG 11462402
         LA    RSWA,BCBLNTHS(RWRKX)     POINT TO FIRST BUFFER    YM1300 11463302
         ST    RSWA,BCBNXBUF            PUT POINTER TO BUFR 1 IN BCB    11464202
         STH   RBUFNO,BCBBFNUM          PUT SWA BUFNO IN BCB            11465102
         STH   RLEN,BCBBFLG             PUT SWA BUF LNGTH IN BCB        11466002
         DROP  RWRKX                    DROP BFR CONTROL BLK BASE REG   11466902
         SPACE 2                                                        11467802
****                                                                    11468702
****     INITIALIZE SEGMENT WORK AREA POOL CHAIN                        11469602
****                                                                    11470502
         USING SWA,RSWA                 EST SEGMENT WORK AREA BASE REG  11471402
         LA    RWRKY,1                  INITIALIZE COUNT REGISTER       11472302
         LR    RBUFR,RLEN               INITIALIZE TO LENGTH OF SWA     11473202
         AR    RBUFR,RSWA               INITIALIZE NEXT BUF PTR         11474102
CHAINSWA CR    RWRKY,RBUFNO             ARE ALL BUFFERS CHAINED         11475002
         BE    LASTSWA                  BRANCH IF YES                   11475902
         ST    RBUFR,SWANXTPT           CHAIN BUFFER POINTER            11476802
         XC    SWARCDPT,SWARCDPT        CLEAR BUFFER CONTROL FIELD      11477702
         LA    RWRKY,1(,RWRKY)          INCREMENT COUNT REGISTER        11478602
         LR    RSWA,RBUFR               UPDATE BUFFER POINTER           11479502
         AR    RBUFR,RLEN               POINT TO NEXT BUFFER            11480402
         B     CHAINSWA                 BRANCH                          11481302
LASTSWA  XC    SWA(SWACSLNG),SWA        ZERO LAST BUFFER POINTER AREA   11482202
         DROP  RSWA                     DROP SEGMENT WORK AREA BASE REG 11483102
         EJECT                                                          11484002
*********************************************************************** 11484902
*  FUNCTION VII:  THE FOLLOWING FUNCTION PREPARES FOR EXIT FROM THIS  * 11485802
*  MODULE.  THIS REQUIRES THAT THE DCB COPY BE MOVED INTO THE USER    * 11486702
*  DCB AND THAT THE WTG TAB BE CHECKED TO DETERMINE THE NEXT MODULE   * 11487602
*  TO RECEIVE CONTROL.                                                * 11488502
*  INPUT TO THIS FUNCTION IS AS FOLLOWS:                              * 11489402
*              REGISTER 4 = OPEN WORKAREA ADDRESS                     * 11490302
*              REGISTER 10= DCB ADDRESS                               * 11491202
*              OPEN REGISTERS 0-9 STORED AT DWASAVE                   * 11492102
*              OPEN WORKAREA CONTAINING PARM LIST AND WTG TABLE       * 11493002
*              EITHER DATA MANAGEMENT KEY OR USER KEY                 * 11493902
*  OUTPUT FROM THIS FUNCTION AND MODULE IS AS FOLLOWS:                * 11494802
*              SEE 'OUTPUT' IN THE PROLOGUE                           * 11495702
*              DATA MANAGEMENT KEY                                    * 11496602
*********************************************************************** 11497502
         SPACE                                                          11498402
FUNCT7   EQU   *                        BEGINNING OF FUNCTION 7         11499302
*                                                                       11500202
         MODESET  EXTKEY=DATAMGT        RETURN TO DATAMGT KEY    Y02072 11500902
*                                                                       11501602
         MVC   DEBDCBB,DXUDCBAD+1       MV USER DCB ADDR TO DEB  Y02072 11502002
         LM    R0,R9,DWASAVE            RESTORE OPEN'S REGISTERS        11502102
         USING PARML,RPARC              EST OPEN PARM LIST BASE REG     11502202
         USING WTGENTRY,RWTGC           ESTABLISH WTG ENTRY BASE REG    11502302
         MVI   WTGENTRY,0               INDICATE THIS DCB FINISHED      11502402
****                                                                    11503002
****  THE FOLLOWING MACRO CALLS A ROUTINE TO COPY THE DCB IN THE        11503102
****  OPEN WORKAREA INTO THE USER'S DCB.  THE COPY HAS BEEN UPDATED     11503202
****  BY THE OPEN EXECUTOR.  THIS WILL BE THE FIRST REFERENCE IN THIS   11503302
****  EXECUTOR TO THE USER'S DCB.                                       11503402
****                                                                    11503502
         USING WTG,RWTG                                                 11505102
*                                                                       11505502
         IECRES  INIT,DCBCOPY=FRWKAR,STM=(R0,R14,WTGPREFX)       Y02072 11505602
*                                                                       11505702
         OI    DXATEXC1,FCAOCOPY        SET AUDIT TRAIL BIT      Y02072 11506802
*                                       FOR FORCE CLOSE CLEANUP  Y02072 11508802
*                                       INDICATING DCB COPY DONE Y02072 11510802
         SPACE 2                                                        11511802
****                                                                    11512902
**** ROUTINE TO SCAN DCB LIST FOR OTHER DCBS REQUIRING THIS EXECUTOR.   11514002
**** IF NONE ARE FOUND, CONTROL IS TRANSFERRED TO THE NEXT EXECUTOR OF  11515102
**** THE FIRST DCB WHICH IS NOT COMPLETED.                              11516202
****                                                                    11517302
SCAN4EQ  EQU   *                                                        11518402
         LA    RWTGC,L'WTGENTRY(,RWTGC) INCREMENT WHERE TO GO INDEX     11519502
         LA    RPARC,L'PARDCBAD(,RPARC) AND DCB PARAMETER LIST INDEX    11520602
         CLC   WTGIDNX,AMIDCNST         DOES TABLE NAME THE EXEC Y02072 11521702
         BER   RBASE                    YES,BRANCH TO ENTRY POINT       11522802
         CLC   WTGIDNX,OPIDCNST         NO, IS THIS END OF TABLE Y02072 11523902
         BNE   SCAN4EQ                  NO, LOOP TO INCREMENT STEPS     11525002
*                                                                       11526102
         LR    RPARC,RPAR               RESTORE BOTH INDEX REGISTERS TO 11527202
         DROP  RWTGC                                             Y02072 11528302
         LA    RWTGC,WTGENTRY           THEIR INITIAL VALUES     Y02072 11529402
         USING WTGENTRY,RWTGC           SET UP BASE FOR WTG      Y02072 11530502
SCAN4ANY CLI   WTGIDTTR,0               IS THIS DCB COMPLETED    Y02072 11531602
         BNE   XCTLRTN                  IF NOT, GO TO NAMED EXECUTOR    11532702
         LA    RWTGC,L'WTGENTRY(,RWTGC) INCREMENT BOTH INDEX REGISTERS  11533802
         LA    RPARC,L'PARDCBAD(,RPARC) TO THE NEXT ENTRIES             11534902
         B     SCAN4ANY                 LOOP TO CHECK COMPLETION        11536002
*                                                                       11537102
XCTLRTN  EQU   *                                                        11538202
         MVC   WTGMODID,WTGENTRY        MV EXEC ID TO PARAM LIST Y02072 11539302
         XC    DXXCTL,DXXCTL            CLEAR PARM LIST FIELD    YM2886 11539702
         LA    R15,DXXCTL               PASS PARM LIST IN R15    YM2886 11540402
         XCTL  EPLOC=(RWTG),SF=(E,(15))                          Y02072 11541502
         DROP  RWTG,RPARC,RWTGC                                         11542602
         EJECT                                                          11543702
*********************************************************************** 11544802
*   ERROR EXIT- ENTERED IF MACRF NOT SPECIFIED, BUFL=0 WITH DYNAMIC   * 11545902
*   BUFFERING, THERE ARE NO PRIMARY EXTENTS OR IF THE ICBACREL @Y30LSBS 11547003
*   MACRO RETURNS AN ERROR CODE.  CONTROL IS PASSED TO         @Y30LSBS 11547103
*   PROBLEM DETERMINATION MODULES WHICH WILL ISSUE A WTP MESSAGE      * 11548102
*   IDENTIFYING THE DATA SET IN ERROR.  AN ACCOMPANYING RETURN CODE   * 11549202
*   WILL IDENTIFY THE CAUSE OF THE ERROR.                             * 11550302
*********************************************************************** 11551402
ERREXIT  EQU   *                        GO TO PROBLEM DETERMINATION     11552502
         LM    R1,R9,DWASAVE1           RESTORE OPEN'S REGISTERS YM3057 11553602
         LR    R2,RDCB                  LOAD REG2 WITH DCB PTR  ZA01362 11553702
*                                       R0 HAS INTERNAL ABEND CD YM3057 11554002
         USING WTG,RWTG                 SET UP BASE FOR WTG      YM7386 11554402
         MVC   WTGMODID,AMIDCNST        MOVE IN 3A ID TO WTG     YM7386 11554502
         DROP  RWTG                     DROP BASE                YM7386 11554602
         DMABCOND  (0),PDLOAD,RETURN=NONE,RES=NO,REGSAVE=YES     Y02072 11554702
         B     XCTLRTN                  GO TO RTN TO XCTL ONLY   S21042 11555802
*********************************************************************** 11556902
*********************************************************************** 11558002
*  THE FOLLOWING SUBROUTINE GETS CORE FROM THE SP230 OR FROM SUBPOOL  * 11559102
*  ZERO, DEPENDING ON THE ENTRY POINT. THE LENGTH IS IN R1 UPON ENTRY.* 11560202
*********************************************************************** 11561302
ENTSP230 LA    R0,POOL230               COMBINE THE GETMAIN PARAMETERS  11562402
         B     GETCORE                  BR AROUND INST FOR SP0   Y02072 11563502
ENTUSER  EQU   *                        ENTRY TO GET CORE IN SP0 Y02072 11564602
*                                                                       11565702
         MODESET  KEYADDR=DXUKEY,WORKREG=14 CHANGE TO USER KEY   Y02072 11566802
*                                                                       11567902
         LA    R0,USERPOOL              GET CORE FROM SP0        Y02072 11569002
GETCORE  EQU   *                        GET CORE                 Y02072 11570102
         SLL   R0,24                    (SUBPOOL NUMBER                 11571202
         OR    R0,R1                    AND SIZE).                      11572302
         GETMAIN R,LV=(0)                                               11573402
*                                                                       11574502
         BR    RETURN                   RETURN TO MAIN ROUTINE   Y02072 11575602
*********************************************************************** 11576702
*********************************************************************** 11577802
*  THIS SUBROUTINE LOADS ALL BDAM MODULES AS REQUIRED.  THE ID OF THE * 11578902
*  MODULE TO BE LOADED IS PASSED FROM THE MAIN ROUTINE IN RWRKX(R14). * 11580002
*  AFTER THE MODULE HAS BEEN LOADED RDEBEXT(R7) IS POSITIONED TO THE  * 11581102
*  NEXT ID LOCATION IN THE DEB. THE ADDRESS OF THE LOADED MODULE IS   * 11582202
*  RETURNED TO THE MAIN ROUTINE IN REG 0. RETURN IS VIA RETURN(R2).   * 11583302
*********************************************************************** 11584402
MODLOAD  EQU   *                                                        11585502
         USING WTG,RWTG                 ESTAB BASE FOR WTG TAB   Y02072 11586602
         MVC   WTGMODID,0(RWRKX)        MOVE ID AS LAST 2 BYTES OF NAME 11587702
         LR    R0,RWTG                  SET POINTER TO MODULE NAME      11588802
         L     R1,CVTPTR                GET CVT ADDRESS                 11589902
         USING CVT,R1                   ESTABLISH CVT BASE REG          11591002
         L     R1,CVTLINK               GET POINTER TO LPALIB    YM1140 11592102
         DROP  R1,RWTG                  DROP CVT AND WTG BASE REGS      11593202
         LOAD  EPLOC=(0),DCB=(1)        LOAD BDAM MODULE         Y02072 11594302
         USING DEBSUBNM,RDEBEXT         ESTABLISH DEB SUBROUTINE NAME   11596502
*                                       SECTION BASE REG                11597602
         MVC   DEBSUBID,0(RWRKX)        MOVE ROUTINE ID TO THE   S19015 11598702
*                                       DEB                      S19015 11599802
         LA    RDEBEXT,IDINCR(RDEBEXT)  INCREMENT DEB ID INDEX          11600902
         DROP  RDEBEXT                  DROP DEB SUBRTN SECTION BASE    11602002
         SR    RWRKY,RWRKY              CLEAR WORK REGISTER      Y02072 11603102
         IC    RWRKY,DEBNMSUB           DEB COUNT OF                    11604202
         LA    RWRKY,1(,RWRKY)          SUBROUTINES                     11605302
         STC   RWRKY,DEBNMSUB           STORE BACK IN DEB               11606402
         BR    RETURN                   RETURN TO DECISIONS             11607502
         DROP  RDEBA,RDCB,RCORE         DROP BASE REGS                  11608602
*********************************************************************** 11609702
         EJECT                                                          11610802
*********************************************************************** 11611902
****                                                               **** 11613002
****     CONSTANTS                                                 **** 11614102
****                                                               **** 11615202
*********************************************************************** 11616302
         SPACE                                                          11617402
         DS    0F                                                       11618502
MODIDTBL DS    0D                       TABLE OF MODULE IDS             11619602
IDNOVSKA DC    C'KA'                    FOUNDATION MODULE FOR NON VS    11620702
IDVREKJ  DC    C'KJ'                    FOUNDATION MODULE FOR VS        11621802
IDFEEDKH DC    C'KH'                    FEEDBACK-REL BLK WITH OVERFLO   11622902
IDFEEDKG DC    C'KG'                    FEEDBACK-REL BLOCK ,NO OVERFLO  11624002
IDWAKN   DC    C'KN'                    SELF FORMAT FOR VAR SPANNED     11625102
IDWAKM   DC    C'KM'                    SELF FORMAT FOR VAR AND UNDEF   11626202
IDWAKO   DC    C'KO'                    PRE FORMAT FOR FIXED            11627302
IDCHKLI  DC    C'LI'                    CHECK MODULE                    11628402
IDSIOLE  DC    C'LE'                    SIO ADRESPACE=REAL,NO VS        11629502
         DC    C'JA'                    VIRTUAL DYNAMIC BUFFERING SIO   11630602
IDEOELC  DC    C'LC'                    END OF EXTENT APPENDAGE         11631702
IDCEKU   DC    C'KU'                    CHANNNEL END APPENDAGE          11632802
PDLOAD   DC    C'6M',VL3(IGG0196M)      PROB DETER MODULE      @ZA04216 11636137
OPIDCNST DC    C'0S'                    LAST WTG TABLE ENTRY            11638302
FOUR     DC    F'4'                     CONSTANT TO ROUND TO F WORD     11639402
RNDDBL   DC    X'FFFFFFF8'              ROUND BUFFER LENGTH TO D        11640502
RNDFULL  DC    X'FFFFFFFC'              ROUND BUFFER LENGTH TO F        11641602
FOXES    DC    F'-1'                    INVALID EXTENT         @Y30LSBS 11642703
ONEMOR   DC    H'1'                     CONSTANT OF ONE        @Y30LSBS 11642903
CONH20   DC    H'20'                    CONSTANT OF 20           SM4366 11643003
MODID    DC    CL6'IGG019'              THIS MODULE ID           Y02072 11643102
AMIDCNST DC    C'3A'                    THIS EXECUTOR'S ID       Y02072 11643502
FIX      DC    C'@ZA17540'              LATEST FIX PUT IN      @ZA08000 11643637
DATE     DC    C'&SYSDATE'              DATE OF LATEST FIX     @ZA08000 11643737
PATCH    DC    XL((*-FUNCT1)/20)'0'     5% PATCH AREA            Y02072 11643802
         SPACE 2                                                        11644902
         EJECT                                                          11646002
*********************************************************************** 11649402
****                                                               **** 11652802
****     CONTROL BLOCK DEFINITIONS                                 **** 11656202
****                                                               **** 11659602
*********************************************************************** 11663002
         SPACE                                                          11666402
         IGGBCB TYPE=DAM                                                11669802
*********************************************************************** 11673202
*              BUFFER FORMAT FOR VRE DYNAMIC BUFFERING                  11676602
*********************************************************************** 11680002
BUFFERB  DSECT                          REST OF BUFFER (BUFRECAR A44855 11683402
*                                       IS ALIGNED AS SPECIFIED IN      11686802
*                                       DCBBFALN)                       11690202
BUFBFPTR DS    A                        ADDR OF SEGMENT WORKAREA A44855 11693602
BUFRECAR EQU   *                        RECORD AREA (LENGTH =    A44855 11697002
*                                       BLKSIZE+ KEYLENGTH)      A44855 11700402
*********************************************************************** 11703802
         EJECT                                                          11703902
         IECDSECS  (MAIN,(IOB,NO)),PREFX,WTG,EXPAND=YES          Y02072 11704202
*                                                              @Y30LSBS 11707703
*                                                              @Y30LSBS 11714703
*                                                                       11715703
*             WHERE-TO-GO TABLE ADDITIONAL LABELS                       11719203
*                                                                       11722703
         ORG   WTGIDTTR                                                 11726203
WTGIDNX  DS    CL2                      ID OF NEXT MODULE        Y02072 11729703
*****                                                                   11733203
*****                                                                   11736703
FORCORE  DSECT                          WORKAREA DSECT CONTINUED Y02072 11740203
*****    THE FOLLOWING ARE AUDIT TRAIL BITS SET FOR FORCE CLOSE   ***** 11743703
         IHAFCAUD ORG=YES                                        Y02072 11747203
*****                                                                   11750703
         ORG   DSCBEND                                           Y02072 11754203
DSCBUCB  DS    A                        ADDR OF UCB FOR FM1 DSCB Y02072 11757703
*********************************************************************** 11761203
****     THIS DSECT MAPS THE WORK AREA WITHIN THE OPEN WORK AREA   **** 11764703
****     WHICH IS USED BY THIS MODULE.                             **** 11768203
*********************************************************************** 11771703
         ORG   DXCCW                                                    11775203
DWAWORK  DS    0CL96                    WORKAREA FOR OPEN EXEC   Y02072 11778703
DWASAVE  DS    0CL40                    SAVE AREA FOR OPEN REGS  Y02072 11782203
*                                       REGS 0-9                 Y02072 11785703
DWASAVE0 DS    F                        REG 0                    Y02072 11789203
DWASAVE1 DS    F                        REG 1                    Y02072 11792703
DWASAVE2 DS    F                        REG 2                    Y02072 11796203
DWASAVE3 DS    F                        REG 3                    Y02072 11799703
DWASAVE4 DS    F                        REG 4                    Y02072 11803203
DWASAVE5 DS    F                        REG 5                    Y02072 11806703
DWASAVE6 DS    F                        REG 6                    Y02072 11810203
DWASAVE7 DS    F                        REG 7                    Y02072 11813703
DWASAVE8 DS    F                        REG 8                    Y02072 11817203
DWASAVE9 DS    F                        REG 9                    Y02072 11820703
DWATTCTR DS    H                        SUMMATION OF TRKS IN DS  Y02072 11824203
DWAFM3SW DS    XL1                      FORMAT 3 SWITCH          Y02072 11827703
         DS    XL1                                                      11831203
         DS    F                                                        11834703
DWADSCB  DS    2F                       5 BYTE DSCB CCHHR -OPEN  Y02072 11838203
DWASAVEA DS    7F                       SAVEAREA FOR REGS 9-15 ON BR TO 11841703
*                                       SYSTEM CONVRT RTN-FUNCT2 Y02072 11845203
         ORG   DWATTCTR                 FIELDS NOT NEEDED AFTER FUNCT2  11848703
DWARCTKY DS    F                        SAVES LAST REC OVERHEAD  Y02072 11852203
*                                       + KEY LENGTH (IV)        Y02072 11855703
DWARCOVH DS    F                        SAVES MID SEG OVERHEAD   Y02072 11859203
*                                       WITH NO KEY OVERHEAD(IV) Y02072 11862703
DWARLREC DS    F                        BLKSIZE+KEYLG+OVERHEAD   Y02072 11866203
*                                       FOR LAST REC (IV)        Y02072 11869703
DWARNREC DS    F                        BLKSIZE+KEYLG+OVERHEAD   Y02072 11873203
*                                       FOR NOT LAST REC (IV)    Y02072 11876703
DWATRKLN DS    F                        DEVICE TRACK LG IN BYTES Y02072 11880203
DWAOFLOW DS    F                        SIZE OF OVERFLOW RECORD ON LAST 11883703
*                                       TRACK (IV)               Y02072 11887203
DWAFLAGS DS    B                        FLAG BYTE (IV)           Y02072 11890703
DWAPASS2 EQU   X'80'                    USED TO CHECK FOR SECOND PASS   11894203
*                                       THROUGH LOOP (IV)        Y02072 11897703
         DS    XL1                      UNUSED                          11901203
DWADVTOL DS    H                        DEVICE TOLERANCE FACTOR  Y02072 11904703
DWATTRKS DS    F                        TOTAL NO TRCKS IN EXTENT Y02072 11908203
DWAFAIL1 EQU   X'FF'                    USED TO CAUSE FIRST COMPARE ON  11911703
*                                       THE ABOVE FIELD TO FAIL  Y02072 11915203
DWAWKLG  EQU   *-DWAWORK                WORKAREA USED            Y02072 11918703
         EJECT                                                          11922203
         CVT   DSECT=YES                                                11925702
         EJECT                                                          11975702
         DCBD  DSORG=DA                                                 12025702
         EJECT                                                          12075702
         IEZDEB                                                         12125702
*********************************************************************** 12275702
*        DSECT DEPENDENT EQUATES                                        12325702
*********************************************************************** 12375702
DEBDASDL EQU   (DEBNMTRK+L'DEBNMTRK)-DEBDASD  LENGTH OF DEB DASD SECT   12425702
DAADRLNG EQU   L'DEBSTRCC+L'DEBSTRHH+L'DEBENDCC+L'DEBENDHH  LENGTH OF   12475702
*                                       STARTING AND ENDING CCHH FIELDS 12525702
CCHHLNG  EQU   L'DEBENDCC+L'DEBENDHH    LENGTH OF ENDING CCHH FIELDS    12575702
FLDUCBBB EQU   L'DEBUCBAD+L'DEBBINUM    LENGTH OF DEB UCB AND BB FIELDS 12625702
DEBAVTLN EQU   (DEBXCEAD+L'DEBXCEAD)-DEBAVT  LENGTH OF DEB AVT SECTION  12675702
MODFLDS  EQU   L'WTGATTRB+L'WTGMODSZ+L'WTGTXTLN  LENGTH OF ATTRIBUTE,   12725702
*                                       STORAGE REQUIRED, AND LENGTH    12775702
*                                       FIELDS OF XCTL MODULE           12825702
DCBIOBQS EQU   L'DCBIOBSQ+L'DCBSQND+L'DCBIOBUQ+L'DCBUQND  USED TO CLEAR 12875702
****                                                               **** 12925702
         EJECT                                                          12975702
         IHADVCT                                                 Y02072 13025702
         EJECT                                                          13075702
         IGGPARML                                                Y02072 13125702
         IGGSWA                                                  Y02072 13175702
         EJECT                                                          13225702
         IKJTCB                                                         13275702
         EJECT                                                          13285702
         IHAPSA                                                  Y02072 13295702
         EJECT                                                          13325702
UCB      DSECT                                                          13375702
         IEFUCBOB  LIST=YES                                      Y02072 13425702
         EJECT                                                          13475702
         IGGUSL                                                  Y02072 13525702
         SPACE 2                                                        13575702
         IGGRDX                                                  Y02072 13625702
         EJECT                                                          13626103
*                                                                       13626203
***************************************************************@Y30LSBS 13626303
*                                                              @Y30LSBS 13626403
*        THE FOLLOWING DSECT FORMATS THE ICBACREL MACRO FOR    @Y30LSBS 13626503
*        ACQUIRE LIST USED IN STAGING MSS DATA SETS ONTO REAL  @Y30LSBS 13639003
*        DASD.                                                 @Y30LSBS 13649003
*                                                              @Y30LSBS 13651003
***************************************************************@Y30LSBS 13651403
ACQLST   DSECT                                                 @Y30LSBS 13651637
ACQPLN   EQU   96                       PARAMETER LIST LENGTH  @Y30LSBS 13664103
PLUS3    EQU   3                        DISPLACEMENT OF THREE  @Y30LSBS 13676603
         ICBACREL TYPE=ACQ,MF=L         LIST FORM OF ACQUIRE   @Y30LSBS 13726603
*                                                              @Y30LSBS 13736603
***************************************************************@Y30LSBS 13746603
*                                                              @Y30LSBS 13756603
*        THE FOLLOWING DSECT FORMATS ONE ENTRY IN THE AREXT    @Y30LSBS 13766603
*        LIST.  THE AREXT LIST IS AT OFFSET 28(1C) IN THE      @Y30LSBS 13769003
*        ACQLST DSECT ABOVE.                                   @Y30LSBS 13769403
*                                                              @Y30LSBS 13770603
***************************************************************@Y30LSBS 13772603
AREXTSEC DSECT                                                 @Y30LSBS 13776603
AREXTLN  EQU   4                        LENGTH OF ACQUIRE EXT  @Y30LSBS 13786603
LOCC     DS    CL2                      LOW CC OF ACQUIRE EXT  @Y30LSBS 13806603
HICC     DS    CL2                      HIGH CC OF ACQUIRE EXT @Y30LSBS 13816603
         END                                                            13825702
