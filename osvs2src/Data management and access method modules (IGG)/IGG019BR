         TITLE 'IGG019BR-WRITE RTN, BDAM VRE, LOAD MOAD'         20201  00030020
IGG019BR CSECT                                                          00061019
*MODULE NAME = IGG019BR                                               * 00061402
*                                                                     * 00061802
*DESCRIPTIVE NAME = BDAM CREATE WRITE, VARIABLE SPANNED FORMAT        * 00061902
*                                                                     * 00064202
*COPYRIGHT = NONE                                                     * 00066202
*                                                                     * 00068202
*CHANGE ACTIVITY                                                      * 00070202
*                                                                     * 00072302
*        RELEASE 20 CHANGES/DELETIONS                                   00079202
*0961091200,205800,263400-264000,265800,270000-277200,298200-    20201  00081502
*0961298800,451800-456600,464400,466800,657000,675000-675600,    20201  00083802
*0961711600,741000                                               20201  00086102
*                                                                A29270 00088402
*0961438000                                                      A33103 00090702
*        RELEASE 21 CHANGES/DELETIONS                                   00092702
*D088800,093700-094800                                          SA50661 00092802
*        VS1-1 CHANGES/DELETIONS                                        00092902
*        VS2-1 CHANGES/DELETIONS                                        00093202
*        VS1-2 CHANGES/DELETIONS                                        00093602
*        VS2-2 CHANGES/DELETIONS                                        00093702
*046800-047400                                                   Y02072 00093802
*                                                                YM1171 00093902
*680400,749400                                                   YM3849 00096702
*                                                                YM2865 00098702
*375660-375690,708060-708090                                     YM7542 00100702
*        VS2-4CHANGES/DELETIONS                                         00101737
*D541860-541920,A541801-541810,A865210-865220,A045610           ZM40313 00102737
*A706800,761000                                                 ZA10211 00105237
*D706800,C167400,C169500,A028200,A030000,A167700-168300        @ZA15097 00106137
*A733870-734290                                                @ZA15097 00107037
*STATUS CHANGE LEVEL 004                                                00108002
*                                                                       00110802
*FUNCTIONS - THIS WRITE ROUTINE IS LOAD AT OPEN TIME IF DCB SPECIFIES,  00113602
*            MACRF=(WL),DSORG=PS,RECFM=VS,BFTEK=R AND DD CARD SPECIFIES 00116402
*            DSORG=DA                                                   00119202
*            IT OPERATES AS FOLLOWS                                     00122002
*           *WRITE-SF REQUST                                            00124802
*               IF THE RECORD FIT ON THE TRACK,THE ROUTINE DETERMINES   00127602
*              TRACK BALANCE.IF TRACK BALANCE IS LESS THAN 9,IT CONST-  00130402
*              RUCT CHANNEL PROGRAM TO UPDATE R0.IT THEN ISSUES EXCP.   00133202
*                                                                       00136002
*              IF THE RECORD DOES NOT FIT ON THE TRACK,AND DOES FIT     00138802
*              ON THE CURRENT EXTENT,THE ROUTINE CONSTRUCT CHANNEL      00141602
*              PROGRAM TO WRITE 1ST SEGMENT AND R0 OF THE TRACK (THE    00144402
*              SUCCESSIVE SEGMENTS WILL BE WRITTEN BY A.S.I. ROUTINE)   00147202
*                                                                       00150002
*              IF THE RECORD DOES NOT FIT ON THE CURRENT EXTENT,THE     00152802
*              ROUTINE WILL CONSTRUCT CHANNEL PROGRAM TO WRITE R0 OF    00155602
*              THE TRACK.THE R0 OF THE REST OF TRACKS IN CURRENT EXTENT 00158402
*              WILL BE WRITTEN BY A.S.I. ROUTINE.AFTER THE SECONDARY    00161202
*              SPACE ALLOCATION,THE RECORD WILL BE WRITTEN ON THE NEW   00164002
*              VOLUME IF THE ALLOCATION IS ON THE NEW VOLUME. IF IT IS  00166802
*              ON THE SAME VOLUME,THE RECORD WILL BE RE-WRITTEN SPANN-  00169602
*              ING EXTENTS.                                             00172402
*                                                                       00175202
*           *WRITE REQUEST                                              00178002
*              THE ROUTINE CONSTRUCT CHANNEL PROGRAM TO WRITE R0 .      00180802
*                                                                       00183602
*                                                                       00186402
*           *ASYCHROUNOUS EXIT ROUTINE                                  00189202
*              THE ROUTINE RECEIVES CONTROL FROM THE CHANNEL END APP.   00192002
*              THROUGH EXIT EFFECTOR WHEN A SPANNED RECORD IS TO BE     00194802
*              PROCESSED.                                               00197602
*                                                                       00200402
*              WHEN THE RECORD IS A SPANNED RECORD IT CONSTRUCTS A      00203202
*              SEGMENT FROM THE REMAINING PART OF THE RECORD AND ISSUES 00206002
*              EXCP TO WRITE THE SEGMENT.                               00208802
*                                                                       00211602
*              WHEN THE RECORD IS A SPANNED VOLUME RECORD,IT ISSUES     00214402
*              EXCP TO THE WRITE R0 FOR THE REST OF EXTENT              00217202
*                                                                       00220002
*                                                                       00222802
*ENTRY POINTS- 'WRTENTRY' IS THE NORMAL ENTRY POINT FROM THE WRITE      00225602
*    MACRO EXPANSION. CALLING SEQUENCE IS     L     15,DCBWRITE         00228402
*                                             BALR  14,15               00231202
*                                                                       00234002
*    'EOVENTRY' IS THE ENTRY FROM THE BSAM END-OF-VOLUME EXECUTOR TO    00236802
*    RESTART A WRITE WHICH WAS ISSUED AFTER THE CURRENT SPACE           00239602
*     ALLOCATION WAS FILLED. THE RECORD WILL NOW BE WRITTEN INTO THE    00242402
*    SPACE OBTAINED AS SECONDARY ALLOCATION. CALLING SEQUENCE IS        00245202
*                                              L    15,DCBWRITE         00248002
*                                              BAL  14,4(15)            00250802
*   'ASYENTRY' IS THE ENTRY FROM EXIT EFFECTOR TO SCHEDULE EXCP ON THE  00253602
*   SUCCESSIVE SEGMENTS.                                                00256402
*INPUT- TO 'WRTENTRY'- DECB ADDRESS IN REGISTER 1                       00259202
*       TO 'EOVENTRY'- IOB ADDRESS IN REGISTER 3                        00262002
*                      DCB ADDRESS IN REGISTER 2                        00264802
*                      DEB ADDRESS IN REGISTER 5                        00267602
*                                                                       00270402
*OUTPUT- AN IOB FROM THE POOL OF IOBS WILL BE ASSIGNED TO THIS DECB     00273202
*    AND ITS ADDRESS PLACED IN THE DECB, EXCP WILL BE ISSUED TO         00276002
*    SCHEDULE THIS WRITE.                                               00278802
*                                                                       00281602
*       TO - 'ASYENTRY' - RQE ADDRESS IN REGISTER 1                     00284402
*                                                                       00287202
*EXTERNAL ROUTINES-                                                     00290002
*                                                                       00292802
*EXITS- 'RETURN' IS AN EXIT BACK TO THE USER, REGISTER 15 WILL CONTAIN  00295602
*    A RETURN CODE AS FOLLOWS,                                          00298402
*        0 = RECORD WAS WRITTEN, THERE IS MORE SPACE ON THE TRACK       00301202
*        4 = RECORD NOT WRITTEN, THE TRACK IS FILLED, TYPE SZ SHOULD BE 00304002
*            ISSUED AND THEN THE TYPE SF MAY BE REISSUED.               00306802
*        8 = RECORD WAS WRITTEN, DATA SET IS FILLED                     00309602
*        12= RECORD NOT WRITTEN, NO IOB IS AVAILABLE UNTIL 'CHECK' HAS  00312402
*            BEEN ISSUED.                                               00315202
*    'EOVEXIT' IS A RETURN TO THE END-OF-VOLUME EXECUTOR.               00318002
*                                                                       00320802
*     'ASYENTRY' IS AN EXIT TO EXIT EFFECTOR.                           00323602
*                                                                       00326402
*TABLES  1. DIRECT ACCESS DEVICE TABLE IS USED TO CALCULATE THE BYTES   00329202
*           OF OVERHEAD FOR THIS RECORD AND TO DETERMINE THE NEXT       00332002
*           VALID TRACK ADDRESS AND TRACK LENGTH.                       00334802
*                                                                       00337602
*ATTRIBUTES- THIS ROUTINE IS REENTRANT AND EXECUTED ENABLED.            00340402
*                                                                       00343202
*NOTES- THE REGISTER USAGE IN THIS MODULE AND THE BSAM END-OF-VOLUME    00346002
*    EXECUTOR MUST REMAIN CONSISTENT.                                   00348802
*                                                                       00351602
*********************************************************************** 00354402
*                                                                       00357202
*   REGISTER CONVENTIONS                                                00360021
*                                                                       00420019
*********************************************************************** 00480019
*                                                                       00540019
WKREG    EQU   0                   WORK REGISTER                        00600019
PARAM1   EQU   1                   PARAMETER REGISTER                   00660019
DECBREG  EQU   1                   DECB ADDRESS                         00720019
INDEXR   EQU   1                   INDEX REG. USED IN NEXTCCHH RTN      00780019
DCBREG   EQU   2                   DCB ADDRESS                          00840019
CCHHRG   EQU   2                   CCHH REG USED IN NEXTCCHH RTN        00900019
IOBREG   EQU   3                   IOB ADDRESS                          00960019
EOVRTRN  EQU   4                   EOV RETURN ADDRESS                   01020019
DEBREG   EQU   5                   DEB ADDRESS                          01080019
WKREG6   EQU   6                   WORK REGISTER                        01140019
WKREG7   EQU   7                   WORK REGISTER                        01200019
WKREG8   EQU   8                   WORK REGISTER                        01260019
WKREG9   EQU   9                   WORK REGISTER                        01320019
WKREG10  EQU   10                  WORK REGISTER                        01380019
WKREG11  EQU   11                  WORK REGISTER                        01440019
BASEREG  EQU   12                  BASE REGISTER                        01500019
SAVEREG  EQU   13                  USER'S SAVE AREA                     01560019
RETREG   EQU   14                  RETURN ADDRESS WHEN ENTERED          01620019
EPREG    EQU   15                  ENTRY POINT.                         01680019
*                                                                       01740019
*********************************************************************** 01800019
*                                                                       01980019
*********************************************************************** 02040019
*                                                                       02100019
*   EQUATES AND MASKS                                                   02160019
*                                                                       02220019
*********************************************************************** 02280019
*                                                                       02340019
TBOVHD   EQU   X'08'                    2305 MASK FOR DEV TABL   20201  02360020
SETSECT  EQU   X'23'                    SET SECTOR CCW           20201  02380020
OFFSDW   EQU   4                   OFFSET TO SEGMENT DESCRIPTOR WORD    02400019
OFFLAGBT EQU   2                   OFFSET TO FLAG BYTE IN SEG.DES. WORD 02460019
*                                                                       02520019
RTNCD0C  EQU   X'0C'               RETURN CODE = 0C                     02580019
RTNCD00  EQU   X'00'               RETURN CODE = 00                     02640019
RTNCD04  EQU   X'04'               RETURN CODE = 04                     02700019
RTNCD08  EQU   X'08'               RETURN CODE = 08                     02760019
NXT      EQU   X'08'               NEXT TRACK FOR NEXT WRITE   @ZA15097 02820037
WZEROBIT EQU   X'40'               PREVIOUS WRITE WAS WRITE-R0          02880037
VOLFULL  EQU   X'20'               VOLUME IS FULL                       02940037
NXTOFF   EQU   X'F7'               MASK TO TURN OFF NXT        @ZA15097 03000037
SEVEN    EQU   7                   CONSTANT '7'                         03060019
NULL     EQU   0                   CONSTANT '0'                         03120019
MSKFF    EQU   X'FF'               CONSTANT 'FF'                        03180019
NOSCHDL  EQU   X'80'               SET IOB IS NOT SCHEDULED             03240019
EIGHT    EQU   8                   CONSTANT '8'                         03300019
ONE      EQU   1                   CONSTANT '1'                         03360019
FIVE     EQU   5                   CONSTANT '5'                         03420019
THREE    EQU   3                   CONSTANT '3'                         03480019
SIX      EQU   6                   CONSTANT '6'                         03540019
SPANBIT  EQU   X'04'               RECORD IS SPANNED                    03600019
WRTCHK   EQU   X'80'               DCB OPTCD=WRITE CHECK                03660019
CCHAIN   EQU   X'40'               COMMAND CHAINNING                    03720019
FOUR     EQU   4                   CONSTANT '4'                         03780019
ONEMIX   EQU   X'07'               CONDITION CODE = NOT ZERO            03840019
WRITESZ  EQU   X'04'               TYPE=SZ                              03900019
NINE     EQU   9                   CONSTANT '9'                         03960019
TWO      EQU   2                   CONSTANT '2'                         04020019
ECBPTR   EQU   12                  OFFSET IN IOB TO ECB                 04080019
COMPLETE EQU   X'7F'               ECB COMPLETE CODE                    04140019
ZEROMIXD EQU   5                   CONDITION CODE = 5                   04200019
ERASEOFF EQU   44                  OFFSET TO ERASE CCW                  04260019
SIXTEEN  EQU   16                  CONSTANT '16'                        04320019
EOVBIT   EQU   X'80'               EOV BIT IN IOB                       04380019
FRSTSEG  EQU   X'01'               FLAG = 1ST SEGMENT                   04440019
MDLSEG   EQU   X'03'               FLAG = MIDDLE SEGMENT                04500019
ENDSEG   EQU   X'02'               FLAG = LAST SEGMENT                  04560019
DEBBASE  EQU   X'20'               DEB BASIC SECTION LENGTH     ZM40313 04590037
*                                                                       04620019
FSTENTRY EQU   X'FF'               1ST ENTRY FROM EOV                   04800019
IOBDCB   EQU   20                  OFFSET TO DCB FROM IOS/IOB           04860019
*                                                                       04920019
*********************************************************************** 04980019
*                                                                       05040019
*                                                                       05160019
*                                                                       05220019
*********************************************************************** 05280019
*                                                                       05340019
*   INITIALIZE REGISTERS                                                05400019
*                                                                       05460019
*********************************************************************** 05520019
*                                                                       05580019
         USING IGG019BR,EPREG      ESTABLISH ENTRY POINT                05640019
         USING IHADCB,DCBREG       ESTABLISH DCB REGISTER               05700019
         USING IOBDEF,IOBREG       ESTABLISH IOB REGISTER               05760019
         USING DEB,DEBREG          ESTABLISH DEB REGISTER               05820019
         USING DECBDEF,DECBREG     ESTABLISH DECB REGISTER              05880019
*                                                                       05940019
*********************************************************************** 06000019
*                                                                       06060019
WRTENTRY EQU   *                                                        06120019
*                                                                       06180019
*********************************************************************** 06240019
*                                                                       06300019
*   NORMAL ENTRY FROM 'WRITE' MACRO EXPANSION                           06360019
*                                                                       06420019
*********************************************************************** 06480019
*                                                                       06540019
         B     GOGOGO              GOTO BEGINNING OF 'WRITE' CODE       06600019
*                                                                       06660019
         DROP  EPREG               DROP ENTRY REG AND                   06720019
         USING IGG019BR,BASEREG    RE-ESTABLISH BASE                    06780019
*                                                                       06840019
*********************************************************************** 06900019
*                                                                       06960019
*   ENTRY FROM EOV EXECUTOR - IFG0551L                                  07020002
*                                                                       07080019
*********************************************************************** 07140019
*                                                                       07200019
         B     EIGHT(EPREG)        GOTO EOV ENTRY                       07260019
*                                                                       07320019
*********************************************************************** 07380019
*                                                                       07440019
ASYPTR   DC    A(ASYENTRY)              OFFSET TO ASYNCHRONOUS   Y02072 07500002
*                                       ROUTINE ENTRY                   07560019
*                                                                       07620019
*********************************************************************** 07680019
*                                                                       07740019
*********************************************************************** 07800019
*                                                                       07860019
EOVENTRY EQU   *                                                        07920019
*                                                                       07980019
*********************************************************************** 08040019
*                                                                       08100019
*   EOV ENTRY FROM IFG0551L TO SCHEDULE ALL REQUESTS ON SECONDARY       08160002
*   ALLOCATION                                                          08220019
*      1.IF SECONDARY ALLOCATION IS ON THE SAME VOLUME,THE SPANNED      08280019
*        RECORD WILL BE RE-WRITTEN SPANNING THE PREVIOUS EXTENT TO THE  08340019
*        SECONDARY ALLOCATION.                                          08400019
*      2.IF IT IS ON THE DIFFERENT VOLUME, THE SPANNED RECORD WILL BE   08460002
*        WRITTEN ON THE NEW VOLUME                                      08520019
*                                                                       08580019
*********************************************************************** 08640019
*                                                                       08700019
         L     DECBREG,IOBECBPT    LOAD DECB ADDR                       08760019
         L     BASEREG,DCBWRITE    SET BASE REGISTER                    08820019
         NI    IOBLINK,MSKFF-SPANBIT   RESET 'SPANNED' BIT              08940019
         OI    IOBLINK,NOSCHDL     SET ENTRY IS FROM EOV                09000019
*                                                                       09060019
         SR    EPREG,EPREG              ZERO OUT A REGISTER      20201  09090020
         IC    EPREG,DCBOFFSW           GET OFFSET TO WRT CCW    20201  09120020
         L     EPREG,NULL(EPREG,IOBREG) LOAD ADDR OF S.W.A.      20201  09150020
         SH    EPREG,CONST10       POINT TO THE BEGINNING OG SWA        09180019
*                                                                       09240019
         USING SGWKAREA,EPREG      ESTABLISH BASE FOR SWA               09300019
         USING EOVLAST,EOVRTRN     551L PASSES THE EOV WORKAREA  Y02072 09350002
*                                  IN R4-ESTABLISH BASE          Y02072 09352002
*                                                                       09360019
         CLI   EOVENT1,FSTENTRY    TEST IF 1ST ENTRY FROM EOV    Y02072 09370002
         BNE   TESTR01             NO,GOTO TEST TYPE OF         SA50661 09380021
*                                  PREVIOUS ENTRY               SA50661 09382021
         CLI   EOVVOLSW+3,ONE      TEST IF ALLOCATION WAS ON     YM1171 09420002
*                                  THE SAME VOLUME              SA50661 09480002
         DROP  EOVRTRN             DROP EOV WORKAREA BASE        Y02072 09490002
         LR    EOVRTRN,RETREG      SAVE EOV RETURN IN R4        SA50661 09530002
         BE    SAMEVOL             YES,GOTO SAME VOLUME                 09540019
*                                                                       09600019
*   WHEN ALLOCATION WAS ON THE DIFFERENT VOLUME THE MASTER 'TT' IN SWA  09660002
*   C.B. HAS TO BE UPDATED AND THE RECORD WILL BE WRITTEN ON THE        09720019
*   NEW VOLUME                                                          09780019
*                                                                       09840019
         L     WKREG7,DCBEOBW      LOAD ADDR OF SWA. C.B.               09900019
         USING SWACB,WKREG7        ESTABLISH BASE FOR SWA C.B.          09960019
*                                                                       10020019
         LH    RETREG,SWACBTT      LOAD VOLUME 'TT' OF PREVIOUS VOLUME  10080019
         AH    RETREG,SWACBTT+TWO  ADD MASTER 'TT' AND VOLUME 'TT'      10140019
         STH   RETREG,SWACBTT+TWO  STORE IT AS NEW MASTER 'TT'          10200019
         OI    DCBCIND2,WZEROBIT   SET PREVIOUS WRITE WAS 'SZ' BIT      10260019
         DROP  WKREG7              DROP BASE FOR SWACB                  10320019
*                                                                       10560019
         NI    SGWKFLAG,MSKFF-SPANVLM   RESET SPANNED VOLUME BIT        10590019
         B     TSTTYPE             GOTO TEST IF TYPE IS 'SF' OR 'SZ'    10620019
TESTR01  LR    EOVRTRN,RETREG      SAVE EOV RETURN IN R4        SA50661 10670021
         B     TESTR0                                           SA50661 10672021
*                                                                       10680019
SAMEVOL  EQU   *                                                        10740019
*                                                                       10800019
*   WHEN ALLOCATION WAS ON THE SAME VOLUME THE MBBCCHHR AND TRACK       10860019
*   BALANCE OF THE PREVIOUS RECORD ARE TO BE RESTORED IN THE DCB.       10920019
*                                                                       10980019
         TM    SGWKFLAG,SPANVLM    TEST IF SPAN VOLUME IS ON            11040019
         BNO   SETR0BIT            NO,GOTO SET WRITE/R0 BIT 'ON'        11100019
*                                                                       11160019
         MVC   DCBFDAD,SGWKDATA    MOVE MBBCCHHR OF PREVIOUS RECORD     11220019
         MVC   DCBTRBAL(TWO),IOBDNRCF  MOVE TRACK BALANCE               11280019
         NI    SGWKFLAG,MSKFF-SPANVLM   RESET SPANNED VOLUME BIT        11310019
         B     TSTTYPE             GOTO TEST REQUEST TYPE               11340019
*                                                                       11400019
SETR0BIT EQU   *                                                        11460019
*                                                                       11520019
         OI    DCBCIND2,WZEROBIT   SET PREVIOUS WRITE WAS 'SZ' 'ON'     11820019
         B     TSTTYPE             GOTO TEST TYPE IS 'SF' OR 'SZ        11880019
*                                                                       11940019
*********************************************************************** 12000019
*                                                                       12060019
GOGOGO   EQU   *                                                        12120019
*                                                                       12180019
         SAVE  (14,12)             SAVE USER'S REGISTERS                12240019
*                                                                       12300019
         L     DCBREG,DECDCBAD     LOAD DCB ADDR FROM DECB              12360019
         L     DEBREG,DCBDEBAD     LOAD DEB ADDR FROM DCB               12420019
         LR    BASEREG,EPREG       MOVE ENTRY POINT TO BASE REG.        12480019
*                                                                       12540019
*********************************************************************** 12600019
*                                                                       12660019
*   TEST IF THE CURRENT IOB OR THE NEXT IOB AVAILABLE                   12720019
*        YES - PROCEED                                                  12780019
*        NO - RETURN WITH CODE=12                                       12840019
*                                                                       12900019
*********************************************************************** 12960019
*                                                                       13020019
         L     IOBREG,DCBIOBA      LOAD ADDR OF NEXT IOB                13080019
*                                                                       13140019
         TS    IOBIOBA             TEST IF THE CURRENT IOB IS AVAILABLE 13200019
         BZ    USEIOB              YES,PROCEED TO NEXT ROUTINE          13260019
*                                                                       13320019
*   GET TO NEXT IOB AND EXAMINE IT                                      13380019
*                                                                       13440019
         L     IOBREG,IOBLINK      LOAD NEXT IOB ADDR                   13500019
*                                                                       13560019
         TS    IOBIOBA             TEST IF THE IOB IS AVAILABLE         13620019
         BZ    USEIOB              YES,PROCEED TO NEXT ROUTINE          13680019
*                                                                       13740019
*********************************************************************** 13800019
*                                                                       13860019
*   WHEN THE CURRENT IOB AND THE NEXT IOB IS NOT AVAILABLE,RETURN TO    13920019
*   USER WITH CODE=0C                                                   13980019
*       'BLOCK WILL NOT BE WRITTEN.ISSUE A CHECK MACRO INSTRUCTION      14040019
*        FOR PREVIOUS WRITE MACRO INSTRUCTION,THEN RE-ISSUE'            14100019
*                                                                       14160019
*********************************************************************** 14220019
*                                                                       14280019
         LA    EPREG,RTNCD0C       LOAD RETURN CODE = 0C                14340019
*                                                                       14400019
RETURN   EQU   *                                                        14460019
*                                                                       14520019
         RETURN (14,12),RC=(15)    RETURN TO THE USER                   14580019
*                                                                       14640019
*********************************************************************** 14700019
*                                                                       14760019
USEIOB   EQU   *                                                        14820019
*                                                                       14880019
         LA    IOBREG,NULL(IOBREG)  CLEAR 1ST BYTES                     14940019
         ST    IOBREG,DCBIOBA      STORE CURRENT IOB ADDR IN DCB        15000019
         LA    WKREG,IOBFLAG1      LOAD  ADDR OF IOB FOR EXCP AND       15060019
         ST    WKREG,DECIOBPT      STORE IT IN DECB                     15120019
         ST    DECBREG,IOBECBPT    STORE DECB ADDR IN IOB               15180019
*                                                                       15240019
*********************************************************************** 15300019
*                                                                       15360019
*   THIS ROUTINE WILL CHECK IF VOLUME FULL CONDITION EXITS              15420019
*        YES - GOTO NORMAL RETURN                                       15480019
*        NO  - PROCEED TO NEXT ROUTINE                                  15540019
*                                                                       15600019
*********************************************************************** 15660019
*                                                                       15720019
         TM    DCBCIND1,VOLFULL    TEST IF VOLUME FULL IS 'ON'          15780019
         BO    NOSCHRTN            GOTO NORMAL RETURN                   15840019
*                                                                       15900019
*********************************************************************** 15960019
*                                                                       16020019
TESTR0   EQU   *                                                        16080019
*                                                                       16140019
*********************************************************************** 16200019
*                                                                       16260019
*   TEST IF PREVIOUS WRITE WAS WRITE/R0                                 16320019
*       YES - GOTO GET NEXT CCHH                                        16380019
*       NO -  PROCEED TO NEXT ROUTINE                                   16440019
*                                                                       16500019
*********************************************************************** 16560019
*                                                                       16620019
         TM    DCBCIND2,WZEROBIT   TEST IF PREVIOUS REQUEST WAS W/R0    16680019
         BO    GETNEXT             YES - GET NEXT TRK          @ZA15097 16740037
         TM    DCBCIND1,NXT        NEED NEXT TRK?              @ZA15097 16770037
         BZ    TSTTYPE             NO - BRANCH                 @ZA15097 16800037
         NI    DCBCIND1,NXTOFF     YES - TURN OFF IND          @ZA15097 16830037
*                                                                       16860037
*   GOTO CALCULATE NEXT CCHH ROUTINE                                    16890037
*                                                                       16920037
GETNEXT  MVC   IOBR0DAT,DCBFDAD    MBBCCHHR TO IOB WRK AREA    @ZA15097 16950037
*                                                                       17040019
         BAL   WKREG11,NEXTCCHH    GOTO CALCULATE NEXT CCHH ROUTINE     17100019
*                                                                       17160019
*   TEST DCBIND1 FOR 'VOLUME FULL' CONDITION                            17220019
*                                                                       17280019
         TM    DCBCIND1,VOLFULL    TEST IF VOLUME FULL BIT IS 'ON'      17340019
         BNO   MOVECCHH            NO,GOTO UPDATE CCHH                  17400019
*                                                                       17460019
*********************************************************************** 17520019
*                                                                       17580019
*   WHEN 'VOLUME FULL' IS ON THE IOB IS MARKED NON-SCHEDULED SO THAT    17640019
*   THIS REQUEST WILL BE SCHEDULED AT EOV TIME. THE RETURN CODE=0 IS    17700019
*   RETURNED TO THE USER                                                17760019
*                                                                       17820019
*********************************************************************** 17880019
*                                                                       17940019
         TM    IOBLINK,EOVBIT      TEST IF ENTRY IS FROM EOV            18000019
         BNO   NOSCHRTN            NO,GOTO SET NON-SCHDL BIT            18060019
*                                                                       18120019
         BR    EOVRTRN             YES,GO BACK TO EOV ROUTINE           18180019
*                                                                       18240019
NOSCHRTN EQU   *                                                        18300019
*                                                                       18360019
         OI    IOBLINK,NOSCHDL     SET THIS IOB IS NOT SCHEDULED        18420019
*                                                                       18480019
NORMALRT EQU   *                                                        18540019
*                                                                       18600019
         SR    EPREG,EPREG         RESET REG.15 TO '0'                  18660019
*                                                                       18720019
         B     RETURN              GOTO RETURN                          18780019
*                                                                       18840019
*********************************************************************** 18900019
*                                                                       18960019
MOVECCHH EQU   *                                                        19020019
*                                                                       19080019
*   UPDATE DCBFDAD WITH NEW CCHH                                        19140019
*                                                                       19200019
         MVC   DCBFDAD,IOBR0DAT    MOVE NEW MBBCCHHR INTO DCBFDAD       19260019
*                                                                       19320019
*   RESET TRACK BALANCE TO MAXIMUM                                      19380019
*                                                                       19440019
         L     WKREG9,DCBDVTBL     LOAD DEVICE TABLE ADDR               19500019
         USING DASDTBL,WKREG9      ESTABLISH BASE FOR DEVICE TABLE      19560019
*                                                                       19620019
         MVC   DCBTRBAL,DASDLNGH   UPDATE TRACK CAPACITY                19680019
*                                                                       19740019
*********************************************************************** 19800019
*                                                                       19860019
TSTTYPE  EQU   *                                                        19920019
*                                                                       19980019
*********************************************************************** 20040019
*                                                                       20100019
*   TEST TYPE FIELD                                                     20160019
*        'SZ' - GOTO 'SZ ROUTINE'                                       20220019
*        'SF' - GOTO 'SF ROUTINE'                                       20280019
*                                                                       20340019
*********************************************************************** 20400019
*                                                                       20460019
         SR    RETREG,RETREG            ZERO OUT A REG           20201  20500020
         IC    RETREG,DCBOFFSW          GET OFFSET TO WRT CCW    20201  20540020
         L     RETREG,NULL(RETREG,IOBREG) GET ADDR OF SWA        20201  20580020
         SH    RETREG,CONST10      POINT TO THE BEGINNING OF S.W.A.     20640019
*                                                                       20700019
         DROP  EPREG               DROP BASE FOR S.W.A. FOR NEW         20760019
         USING SGWKAREA,RETREG     ESTABLISH BASE FOR S.W.A.            20820019
*                                                                       20880019
         TM    DECTYPE+ONE,WRITESZ TEST IF THIS IS A WRITE-SZ           20940019
         BO    WRTSZRTN            YES,GOTO WRITE-SZ ROUTINE            21000019
*                                                                       21060019
*                                                                       21120019
*********************************************************************** 21180019
*                                                                       21240019
*   WRITE-SF ROUTINE                                                    21300019
*                                                                       21360019
*********************************************************************** 21420019
*                                                                       21480019
TESTFIT  EQU   *                                                        21540019
*                                                                       21600019
*********************************************************************** 21660019
*                                                                       21720019
*   THIS ROUTINE TEST IF RECORD FITS ON THE TRACK                       21780019
*     NO - GOTO SPANNED RECORD ROUTINE                                  21840019
*     YES- IT EXAMINES IF THE RECORD IS THE LAST RECORD ON THE TRACK    21900019
*                                                                       21960019
*********************************************************************** 22020019
*                                                                       22080019
         L     WKREG7,DECAREA      LOAD RECORD AREA ADDR                22140019
*                                                                       22200019
         SR    WKREG8,WKREG8       RESET WKREG8 TO '0'                  22260019
         IC    WKREG8,DCBKEYLE     INSERT KEY LENGTH INTO REG.7         22320019
*                                                                       22380019
         SR    WKREG6,WKREG6       RESET REG.6 TO '0'                   22440019
         IC    WKREG6,NULL(WKREG8,WKREG7)    INSERT 1ST CHAR OF 'LL'    22500019
         SLL   WKREG6,EIGHT        MOVE 1ST CHAR OF 'LL' 1 POSITION     22560019
         IC    WKREG6,ONE(WKREG8,WKREG7)     INSERT 2ND CHAR OF 'LL'    22620019
         LA    WKREG10,NULL(WKREG8,WKREG7)  OBTAIN ADDR OF 'LL'         22680019
         ST    WKREG10,SGWKRCRD    STORE ADDR OF 'LL' INTO RECORD ADDR  22740019
         STH   WKREG6,SGWKOFF      STORE 'LL' INTO OFFSET               22800019
         STH   WKREG6,IOBDNRCF+TWO STORE 'LL' INTO SAVE AREA            22860019
         STH   WKREG8,IOBDNRCF     STORE KEYLEN IN SAVE AREA            22920019
*                                                                       22980019
         AR    WKREG6,WKREG8       ADD DATA LENGTH=KEY + BLKSIZE        23040019
*                                                                       23100019
         BAL   WKREG11,OVERHEAD    GOTO CALCULATE OVERHEAD              23160019
*                                                                       23220019
*   AFTER CALCULATION OF 'RECORD LENGTH PLUS OVERHEAD'.                 23280019
*        WKREG7 = SIZE OF INTERMEDIATE RECORD                           23340019
*        WKREG8 = SIZE OF LAST RECORD ON TRACK                          23400019
*                                                                       23460019
         CH    WKREG8,DCBTRBAL     DOES RECORD FIT AS THE LAST RECORD   23520019
         BH    SPANNED             NO,GOTO SPANNED RECORD ROUTINE       23580019
*                                                                       23640019
         LH    WKREG8,DCBTRBAL     GET TRACK BALANCE FROM DCB           23700019
         SR    WKREG8,WKREG7       NEW DCBTRBAL=(OLD - INTERMEDIATE)    23760019
         LTR   WKREG8,WKREG8       TEST IF TRACK BALANCE IS '-'         23820019
         BP    OKBAL               +,GOTO STORE BALANCE                 23880019
*                                                                       23940019
         SR    WKREG8,WKREG8       TRACK BALANCE=0                      24000019
*                                                                       24060019
OKBAL    EQU   *                                                        24120019
*                                                                       24180019
         STH   WKREG8,DCBTRBAL     STORE IT INTO DCBTRBAL               24240019
*                                                                       24300019
*********************************************************************** 24360019
*                                                                       24420019
*   NORMAL RECORD(NO RECORD SPANNING)                                   24480019
*        THE ROUTINE DETERMINES WHETHER THE RECORD IS THE LAST RECORD   24540019
*        ON THE TRACK (CAN TRACK HOLD MORE THAN 8 BYTES DATA FIELD)     24600019
*          YES - CCWS=WRITE/RN CHAINED TO WRITE/R0 OF THAT TRACK        24660019
*          NO  - CCWS=WRITE/RN                                          24720019
*                                                                       24780019
*********************************************************************** 24840019
*                                                                       24900019
         NI    IOBLINK,MSKFF-SPANBIT    RESET SPANNED BIT OFF           24960019
*                                                                       25020019
*   GOTO MOVE CHARACTER ROUTINE                                         25080019
*                                                                       25140019
         L     WKREG8,DECAREA      LOAD ADDR OF RECORD AREA             25200019
         BAL   WKREG11,MOVEDATA    GOTO MOVE DATA ROUTINE               25260019
*                                                                       25320019
         MVC   IOBSEEK,DCBFDAD     MOVE MBBCCHHR(N-1) TO SEEK FIELD     25380019
         SR    WKREG9,WKREG9       RESET TO '0'                         25440019
         IC    WKREG9,DCBFDAD+SEVEN INSERT 'R' OF MBBCCHHR              25500019
         LA    WKREG9,ONE(WKREG9)  INCREMENT 'R' TO 'R+1'               25560019
         STC   WKREG9,DCBFDAD+SEVEN STORE 'R+1' INTO DCBFDAD            25620019
*                                                                       25680019
         MVC   IOBDNRCF(FIVE),DCBFDAD+THREE  MOVE CURRENT CCHHR TO CNT  25740019
*                                                                       25800019
CCWGOGO  EQU   *                                                        25860019
*                                                                       25920019
         NI    DCBCIND2,MSKFF-WZEROBIT  SET WRITE/R0 BIT OFF            25980019
         SR    WKREG9,WKREG9       RESET WKREG9                         26040019
         IC    WKREG9,DCBKEYLE     INSERT KEY LENGTH                    26100019
         STC   WKREG9,IOBDNRCF+FIVE  INSERT KEY LENGTH INTO COUNT       26160019
         LA    WKREG8,SGWKDATA     LOAD ADDR OF DATA AREA               26220019
         AR    WKREG8,WKREG9       ADD KEY LENGTH TO DATA ADDR          26280019
         SR    WKREG11,WKREG11          ZERO OUT A REG           20201  26300020
         IC    WKREG11,DCBOFFSW         GET OFFSET TO WRT CCW    20201  26320020
         AR    WKREG11,IOBREG           PT TO WRT CCW            20201  26340020
         MVC   SIX(TWO,WKREG11),NULL(WKREG8) MOVE 'LL' TO WRT    20201  26360020
*                                       CCW                      20201  26380020
         LH    WKREG8,SIX(WKREG11)      LOAD 'LL' INTO REG       20201  26400020
         STH   WKREG8,IOBDNRCF+SIX  STORE 'LL' INTO COUNT FIELD         26460019
         AR    WKREG8,WKREG9       ADD 'LL' + 'K6'=DATA LENGTH          26520019
         STH   WKREG8,SIX(WKREG11)      ST IT IN WRT DATA CCW    20201  26580020
*                                                                       26640019
         LA    EPREG,IOBCCW1       LOAD ADDR OF FIRST CCW               26700019
         ST    EPREG,IOBSTART      SET CCW PTR TO WRITE/RN              26760019
*                                                                       26820019
*   OBTAIN OFFSET TO WRITE/R0 CCWS                                      26880019
*                                                                       26940019
         SR    WKREG11,WKREG11          ZERO OUT A REG           20201  27040020
         IC    WKREG11,DCBWCPO          GET OFFSET TO WRT/R0     20201  27140020
*                                       C.P.                     20201  27240020
         AR    WKREG11,IOBREG           POINT TO IT              20201  27340020
         SH    WKREG11,CONST8           PT TO PRECEEDING CCW     20201  27440020
*                                                                       27780019
CHKTRBAL EQU   *                                                        27840019
*                                                                       27900019
*   TEST IF SPANNED RECORD                                              27960019
*        YES - WRITE/R0 IS REQUIRED                                     28020019
*        NO  - CHECK IF WRITE0R0 IS REQUIRED                            28080019
*                                                                       28140019
         TM    IOBLINK,SPANBIT     TEST IF SPANNED RECORD               28200019
         BO    BUILDR0             YES,GOTO BUILD WRITE/R0              28260019
*                                                                       28320019
*   WHETHER THE RECORD IS THE LAST RECORD ON THE TRACK                  28380019
*        * WKREG CONTAINS THE MINIMUM BYTES REQUIRED ON A TRACK         28440019
*                                                                       28500019
         NI    FOUR(WKREG11),MSKFF-CCHAIN    RESET COMMAND CHAIN TO R0  28560019
*                                                                       28620019
         CH    WKREG,DCBTRBAL      TEST IF MINIMUM .LE. TRACK BALANCE   28680019
         BL    SCHEXCP             YES,GOTO SCHEDULE EXCP               28740019
*                                                                       28800019
*   WHEN TRACK BALANCE IS .LE. 8,COMMAND CHAIN TO WRITE/R0 AND BUILD    28860019
*   R0 RECORD                                                           28920019
*                                                                       28980019
         XC    DCBTRBAL(TWO),DCBTRBAL   RESET DCB TRACK BALANCE TO '0'  29040019
*                                                                       29100019
*********************************************************************** 29160019
*                                                                       29220019
BUILDR0  EQU   *                                                        29280019
*                                                                       29340019
*********************************************************************** 29400019
*                                                                       29460019
*   THIS ROUTINE WILL BUILD WRITE/R0 DATA FOR WRITE/R0 CCW              29520019
*                                                                       29580019
*********************************************************************** 29640019
*                                                                       29700019
         OI    FOUR(WKREG11),CCHAIN     SET COMMAND CHAIN TO WRITE/R0   29760019
         SR    WKREG11,WKREG11          ZERO OUT A REG           20201  29790020
         IC    WKREG11,DCBOFFSR         GET OFFSET TO RD CCW     20201  29820020
         AR    WKREG11,IOBREG           POINT TO RD CCW          20201  29850020
         NI    FOUR(WKREG11),MSKFF-CCHAIN RESET CC TO ERASE CCW  20201  29880020
*                                                                       29940019
         MVC   IOBR0CNT(FOUR),IOBDNRCF       MOVE CCHH TO COUNT FOR R0  30000019
         MVI   IOBR0CNT+FOUR,NULL  SET R TO '0'                         30060019
         MVC   IOBR0DAT(FIVE),IOBDNRCF       MOVE CCHHR TO DATA FOR R0  30120019
         XC    IOBR0DAT+FIVE(THREE),IOBR0DAT+FIVE SET TRACK BALANCE=0   30180019
*                                                                       30240019
*   IF THE LAST SEGMENT IS THE LAST RECORD ON THAT TRACK                30300019
*        YES - SET WRITE/R0 BIT IN DCBCIND2                             30360019
*                                                                       30420019
         CH    WKREG,DCBTRBAL      TEST IF TRACK BAL .GT. MINIMUM       30480019
         BL    SCHEXCP             YES,GOTO EXCP                        30540019
*                                                                       30600019
         OI    DCBCIND2,WZEROBIT   SET WRITE/R0 BIT IN DCB              30660019
         OI    SGWKFLAG,WRITESZ    SET THIS I/O C.C. TO WRITE/R0        30720019
         XC    DCBTRBAL(TWO),DCBTRBAL   CLEAR TRACK BALANCE TO '0'      30780019
*                                                                       30840019
*********************************************************************** 30900019
*                                                                       30960019
SCHEXCP  EQU   *                                                        31020019
*                                                                       31080019
*********************************************************************** 31140019
*                                                                       31200019
*   THIS ROUTINE EXECUTE THE FOLLOWING FUNCTION                         31260019
*                                                                       31320019
*        1. IT EXAMINES THE PREVIOUS IOB. IF IT IS FOR A SPANNED        31380019
*           RECORD,THE ROUTINE ISSUES WAIT ON THE COMPLETION OF THE     31440019
*           SPANNED RECORD PROCESSING BEFORE IT ISSUES EXCP             31500019
*        2.IT ISSUES EXCP                                               31560019
*        3.IT THEN DETERMINES IF THE NEXT RECORD REQUIRES               31620019
*          SECONDARY ALLOCATION                                         31680019
*          YES - RETURN CODE = X'08'                                    31740019
*          NO  - RETURN CODE = X'00'                                    31800019
*                                                                       31860019
*********************************************************************** 31920019
*                                                                       31980019
         LR    WKREG11,IOBREG      LOAD IOB ADDR TO WKREG.11            32040019
*                                                                       32100019
LOOP03   EQU   *                                                        32160019
*                                                                       32220019
         LR    WKREG9,WKREG11      SAVE ADDR OF PREVIOUS IOB            32280019
         L     WKREG11,NULL(WKREG9) LOAD NEXT IOB ADDR                  32340019
         LA    WKREG11,NULL(WKREG11) CLEAR 1ST BYTE OF IOB ADDR         32400019
         CR    IOBREG,WKREG11      TEST IF SAME ADDR                    32460019
         BNE   LOOP03              NO,REPEAT UNTILL GET TO NEXT IOB     32520019
*                                                                       32580019
         LR    WKREG11,DECBREG          SAVE DECB POINTER               32590019
         TM    NULL(WKREG9),SPANBIT     TEST IF SPAN BIT IS ON          32640019
         BNO   EXCPGO              NO,GOTO ISSUE EXCP                   32700019
*                                                                       32760019
         CR    IOBREG,WKREG9       TEST IF THE SAME IOB(ONLY ONE IOB)   32820019
         BE    EXCPGO              YES,GOTO ISSUE EXCP                  32880019
*                                                                       32940019
PREVREQ  EQU   *                        WAIT ON PREVIOUS REQ     YM2865 32990002
         L     PARAM1,ECBPTR(WKREG9)    LOAD ADDR OF ECB                33000019
         LA    PARAM1,0(PARAM1)         CLEAR TOP BYTE OF ECBAD  YM2865 33050002
         LA    WKREG,IOBCSW-IOBDEF(WKREG9) SET UP IOBCSW ADDR    YM2865 33052002
         CR    WKREG,PARAM1             IS ECB ADDR DUMMY        YM2865 33054002
         BNE   TESTCOMP                 NO, CONTINUE TESTING     YM2865 33056002
         ICM   PARAM1,B'0111',IOBIOBA+1-IOBDEF(WKREG9) YES, GET  YM2865 33058002
*                                       USER ECB SAVED BY ASI    YM2865 33058402
         LTR   PARAM1,PARAM1            IS IT ZERO -IE. HAS AN   YM2865 33058802
*                                       INTERRUPT RESTORED ECB   YM2865 33059202
*                                       CORRECTLY SINCE TEST -   YM2865 33059602
*                                       DONE BY CEA, 19BT        YM2865 33059802
         BZ    PREVREQ                  YES, GO GET USER ECB PTR YM2865 33059902
TESTCOMP EQU   *                        IS PREVIOUS REQ COMPLETE YM2865 33079902
         TM    NULL(PARAM1),COMPLETE    TEST IF NOT COMPLETE            33100002
         BC    ONEMIX,EXCPGO            COMPLETE, GO ISSUE EXCP         33120019
*                                                                       33180019
*   ISSUE WAIT                                                          33240019
*                                                                       33300019
         WAIT  ,ECB=(1)            ISSUE WAIT ON SPANNED RECORD         33360019
*                                                                       33420019
EXCPGO   EQU   *                                                        33480019
*                                                                       33540019
         LA    PARAM1,IOBFLAG1     LOAD IOB ADDR FOR IOS                33600019
*                                                                       33660019
         EXCP  (1)                 ISSUE EXCP                           33720019
         LR    DECBREG,WKREG11     RESTORE DECB POINTER                 33730019
*                                                                       33780019
*   TEST IF ENTRY IS FROM EOV                                           33840019
*                                                                       33900019
         TM    IOBLINK,EOVBIT      TEST IF EOV BIT IS ON IN IOB         33960019
         BO    EOVOUT              YES,GOTO EOV EXIT                    34020019
*                                                                       34080019
         TM    DECTYPE+ONE,WRITESZ TEST IF WRITE/SZ REQUEST             34140019
         BNO   NORMALRT            NO,GOTO NORMAL RETURN                34200019
*                                                                       34260019
         BAL   WKREG11,EXTNTCHK    GOTO EXTENT CHECK ROUTINE            34320019
         BL    NORMALRT            IF NOT,GOTO NORMAL RETURN            34380019
*                                                                       34440019
*   IF THIS IS THE LAST TRACK  RETURN CODE=X'08'                        34500019
*                                                                       34560019
         LA    EPREG,RTNCD08       SET RETURN CODE=08                   34620019
         B     RETURN              GOTO RETURN                          34680019
*                                                                       34740019
*                                                                       34800019
EOVOUT   EQU   *                                                        34860019
*                                                                       34920019
*   EXIT EOV ENTRY POINT (IGG0551A)                                     34980019
*                                                                       35040019
         NI    IOBLINK,MSKFF-EOVBIT  RESET EOV BIT OF IOB               35100019
         BR    EOVRTRN             GO BACK TO EOV ROUTINE               35160019
*                                                                       35220019
*********************************************************************** 35280019
*                                                                       35340019
SPANNED  EQU   *                                                        35400019
*                                                                       35460019
*********************************************************************** 35520019
*                                                                       35580019
*   THIS ROUTINE FUNCTIONS AS FOLLOWS                                   35640019
*     1. IF THE RECORD CAN BE WRITTEN WITHIN THE ALLOCATED SPACE,       35700019
*        IT SCHEDULES WRITE/RN(1ST SEGMENT) COMMAND CHAINED TO WRITE/R0 35760019
*     2. IF THE RECORD CAN NOT BE WRITTEN WITHIN THE ALLOCATED SPACE,   35820019
*        IT SETS SPANNED BIT IN IOB AND SCHEDULES WRITE/R0 FOR THE REST 35880019
*        OF THE ALLOCATED TRACK.EVENTUALLY EOV ALLOCATE SECONDARY SPACE 35940019
*      * IF THE SECONDARY SPACE IS ALLOCATED ON THE SAME VOLUME,THE     36000019
*        RECORD WILL BE RE-SCHEDULED SO THAT IT WILL BE WRITTEN SPAN-   36060019
*        NING THE EXTENT ON THE SAME VOLUME                             36120019
*      * IF THE SECONDARY SPACE IS ON THE DEFERENT VOLUME,THE RECORD    36180019
*        WILL BE RE-SCHEDULED SO THAT IT WILL BE WRITTEN ON THE NEXT    36240019
*        VOLUME                                                         36300019
*                                                                       36360019
*********************************************************************** 36420019
*                                                                       36480019
         OI    IOBLINK,SPANBIT     SET THIS IS A SPANNED RECORD         36540019
*                                                                       36600019
         SH    WKREG10,IOBDNRCF    'SL'=NO OF BYTES CAN GO-KEYLEN       36660019
         STH   WKREG10,IOBDNRCF+TWO  STORE 'SL' INTO SAVE AREA          36720019
         L     WKREG8,DECAREA      LOAD ADDR OF RECORD AREA             36780019
*                                                                       36840019
         BAL   WKREG11,MOVEDATA    GOTO CONSTRUCT AND MOVE 1ST SEGMENT  36900019
*                                                                       36960019
         SH    WKREG10,CONST4      POINT TO THE S.D.W.                  37020019
         MVI   TWO(WKREG10),FRSTSEG  SET FIRST SEGMENT FLAG ON          37080019
         LH    WKREG10,SGWKOFF     LOAD 'LL' OF UPTO LAST SEG           37140019
         SH    WKREG10,IOBDNRCF+TWO  'DL'='LL'-'SL'                     37200019
         STH   WKREG10,IOBDNRCF+FOUR STORE 'DL' INTO SAVE AREA          37260019
*                                                                       37320019
*   GOTO CALCULATE NEXT CCHH ROUTINE                                    37380019
*                                                                       37440019
         MVC   IOBR0DAT,DCBFDAD    MOVE MBBCCHHR FROM DCB TO WORK AREA  37500019
         MVC   IOBSEEK,IOBR0DAT    SAVE THIS MBBCCHHR                   37560019
*                                                                       37563020
         SR    EPREG,EPREG              ZERO OUT A REG           20201  37572020
         SR    WKREG11,WKREG11          ZERO OUT A REG           20201  37575020
         IC    WKREG11,DASDINTR         GET REC OVERHEAD         20201  37578020
         TM    DASDFLAG,TBOVHD          DEVICE WITH 2 BYTE OVHD  20201  37581020
         BNO   LOTRPS2A                 BR AROUND HALFWD RTN     20201  37584020
         LH    WKREG11,DASDINTR         GET OVERHEAD IF TOW      20201  37587020
*                                       BYTES                    20201  37590020
LOTRPS2A EQU *                                                   20201  37593020
         IC    EPREG,DASDKEY            GET KEY OVERHEAD         20201  37596020
         SR    WKREG11,EPREG            GET REC OVHD - KEY OVHD  20201  37599020
         LH    EPREG,DASDLNGH           GET TRK CAPACITY         20201  37602020
         SR    EPREG,WKREG11            GET TRK CAP - OVHD - KEY 20201  37605020
*                                       OVHD                     20201  37608020
         SH    EPREG,CONST8             ALLOW FOR SDW & BDW      20201  37611020
*                                                                       37620019
LOOP01   EQU   *                                                        37680019
*                                                                       37740019
         BAL   WKREG11,NEXTCCHH    GOTO CALCULATE NEXT CCHH ROUTINE     37800019
*                                                                       37860019
*   TEST IF VOLUME IS FULL                                              37920019
*                                                                       37980019
         TM    DCBCIND1,VOLFULL    TEST IF VOLUME FULL IS 'ON'          38040019
         BO    SPANVOL             GOTO SPANNED VOLUME PROCESSING       38100019
*                                                                       38160019
         MVC   IOBSEEK,IOBR0DAT    SAVE THIS MBBCCHHR                   38220019
*                                                                       38280019
*   IF THE VOLUME IS NOT FULL,TEST WHETHER THE REMAINNG SEGMENT FITS ON 38340019
*   THE NEXT TRACK                                                      38400019
*   EPREG  =NO.OF BYTES CAN BE WRITTEN ON A TRACK                       38460019
*                                                                       38520019
         CH    EPREG,IOBDNRCF+FOUR  TEST IF REMAINNING BYTES FIT        38580019
         BNL   ITFITS              YES,GOTO SCHEDULE 1ST SEGMENT        38640019
*                                                                       38700019
*   WHEN REMAING SEGMENT CANNOT FIT ON A TRACK UPDATE REMAINNG SEGMENT  38760019
*   LENGTH BY TRACK SIZE AND REPEAT THIS PROCESS                        38820019
*                                                                       38880019
         LH    WKREG11,IOBDNRCF+FOUR  LOAD REMINNING BYTES              38940019
         SR    WKREG11,EPREG       NEW REMAINNING BYTE=REMAIN - TRACK   39000019
         STH   WKREG11,IOBDNRCF+FOUR STORE REMINNING BYTES              39060019
*                                                                       39120019
         B     LOOP01              GO BACK TO CALCULATE NEXT CCHH       39180019
*                                                                       39240019
*********************************************************************** 39300019
*                                                                       39360019
ITFITS   EQU   *                                                        39420019
*                                                                       39480019
*********************************************************************** 39540019
*                                                                       39600019
*                                                                       39660019
*   THE ROUTINE DOES THE FOLLOWING                                      39720019
*     1. SETS 'SPANNED' BIT IN IOB FOR C.E.A.                           39780019
*     2. MOVES THE MBBCCHHR OF THE LAST SEGMENT TO DCBFDAD              39840019
*     3. UPDATE TRACK BALANCE WITH THE TRACK WHICH HAVE LAST SEGMENT    39900019
*     4. CONSTRUCT WRITE/RN COMMAND CHAINND TO WRITE/R0 OF THAT TRACK   39960019
*                                                                       40020019
*********************************************************************** 40080019
*                                                                       40140019
*   MOVE PREVIOUS MBBCCHHR INTO IOBSEEK AND MOVE THE MBBCCHHR OF THE    40200019
*   LAST SEGMENT INTO DCBFDAD                                           40260019
*                                                                       40320019
         MVC   IOBSEEK,DCBFDAD     MOVE CCHHR OF PREVIOUS RECORD        40380019
         MVC   SGWKOFF(TWO),IOBDNRCF+TWO  MOVE 'SL' AS OFFSET OF 'LL'   40440019
*                                                                       40500019
*   CALCULATE TRACK BALANCE FOR THE LAST SEGMENT                        40560019
*                                                                       40620019
         LH    WKREG6,IOBDNRCF+FOUR LOAD REMAINNING BYTE LENGTH         40680019
         LA    WKREG6,EIGHT(WKREG6)  ADD '8' FOR 'SDW/BDW'              40740019
         MVC   IOBR0CNT(ONE),DCBKEYLE   SAVE KEYLEN                     40800019
         MVI   DCBKEYLE,NULL       SET KEYLEN=0                         40860019
         MVC   IOBDNRCF+TWO(TWO),IOBDNRCF+FOUR  MOVE 'DL' OF LAST SEG.  40920019
*                                                                       40980019
         BAL   WKREG11,OVERHEAD    GOTO CALCULATE OVERHEAD              41040019
*                                                                       41100019
         MVC   DCBKEYLE(ONE),IOBR0CNT   RESTORE KEYLEN                  41160019
         SR    WKREG11,WKREG11          ZERO WKREG11                    41170019
         SR    WKREG,WKREG              ZERO WKREG                      41180019
         CLI   DCBKEYLE,NULL            IS KEY LENGTH = 0               41190019
         BE    NOKEYBAL                 BR IF YES                       41200019
         IC    WKREG11,DASDLAST-DASDTBL(WKREG9)  GET LAST OVERHEAD      41210019
         TM    DASDFLAG,TBOVHD          IS IT A 2305             20201  41210220
         BNO   MZ001                    IF NOT, OVERHEAD O.K.    20201  41210420
         LH    WKREG11,DASDINTR         ELSE GET 2 BYTES INSTEAD 20201  41210620
MZ001    EQU   *                                                 20201  41210820
         IC    WKREG,DCBKEYLE           GET KEY LENGTH                  41211019
         AR    WKREG,WKREG11            ADD OVERHEAD AND KEYLENGTH      41211119
NOKEYBAL EQU   *                                                        41212019
         AH    WKREG,CONST8             ADD MIN DATA LENGTH             41213019
*                                                                       41220019
         AH    EPREG,CONST8        OBTAIN TRACK CAPACITY                41280019
         SR    EPREG,WKREG7        TRACK CAPACITY - INTERMEDIATE RECORD 41340019
         LTR   EPREG,EPREG         TEST IF TRACK BALANCE .LE.0          41400019
         BP    OKGOGO              .GT.,THEN TRACK BAL IS AS IS         41460019
         SR    EPREG,EPREG         .LE.0,TRACK BALANCE=0                41520019
*                                                                       41580019
OKGOGO   EQU   *                                                        41640019
*                                                                       41700019
         STH   EPREG,DCBTRBAL      STORE TRACK BALANCE FOR THE TRACK    41760019
*                                                                       41820019
         SR    WKREG11,WKREG11     RESET REG. TO '0'                    41880019
         MVI   IOBR0DAT+SEVEN,ONE  SET R=1                              41940019
         MVC   DCBFDAD,IOBR0DAT    MOVE HIGHEST MBBCCHHR TO DCBFDAD     42000019
*                                                                       42060019
         MVC   IOBDNRCF(FIVE),IOBSEEK+THREE  MOVE NEW MBBCCHHR          42120019
         SR    WKREG11,WKREG11     RESET WKREG11 TO '0'                 42180019
         IC    WKREG11,IOBDNRCF+FOUR   INSERT R OF PREVIOUS CCHHR       42240019
         LA    WKREG11,ONE(WKREG11)  INCREMENT BY '1' TO R+1            42300019
         STC   WKREG11,IOBDNRCF+FOUR  STORE IT (R+1)                    42360019
*                                                                       42420019
         B     CCWGOGO             GOTO CONSTRUCT CCW AND EXCP          42480019
*                                                                       42540019
*********************************************************************** 42600019
*                                                                       42660019
SPANVOL  EQU   *                                                        42720019
*                                                                       42780019
*********************************************************************** 42840019
*                                                                       42900019
*   WHEN THE RECORD CANNOT BE WRITTEN ON ALLOCATED SPACE,THE R0 OF ALL  42960019
*   THE TRACKS WILL BE WRITTEN.AFTER EOV PROCESSING THE RECORD MAY BE   43020019
*   WRITTEN ON THE SAME VOLUME OR ON THE NEXT VOLUME                    43080019
*                                                                       43140019
*********************************************************************** 43200019
*                                                                       43260019
         MVC   IOBR0DAT,IOBSEEK    MOVE CCHHR OF THE LAST SEGMENT       43320019
         MVC   IOBSEEK,DCBFDAD     MOVE PREVIOUS CCHHR AS SEEK FIELD    43380019
         MVC   SGWKDATA(EIGHT),DCBFDAD  SAVE MBBCCHHR OF PREVIOUS RCD   43440019
         MVC   IOBDNRCF(TWO),DCBTRBAL   SAVE TRACK BALANCE OF THE TRACK 43500019
         MVC   DCBFDAD,IOBR0DAT    MOVE CCHHR OF LAST SEGMENT           43560019
         OI    SGWKFLAG,SPANVLM    SET SPAN VOLUME BIT                  43620019
*                                                                       43680019
         BAL   WKREG11,EXTNTCHK    GOTO EXTENT CHECK ROUTINE            43740019
         BL    WRTSZRTN            DON'T SET LAST SEG BIT,UPDATE A33103 43780020
*                                       SEEK                     A33103 43820020
*                                                                       43860019
         OI    SGWKFLAG,LASTSEG    SET LAST SEGMENT BIT                 43920019
         B     WRTR0CCW            GOTO WRITE/R0 CONSTRUCTION           43980019
*                                                                       44040019
*********************************************************************** 44100019
*                                                                       44160019
WRTSZRTN EQU   *                                                        44220019
*                                                                       44280019
*********************************************************************** 44340019
*                                                                       44400019
*   WRITE-SZ ROUTINE                                                    44460019
*                                                                       44520019
*     1. IT CONSTRUCTS WRITE-R0 CHANNEL PROGRAM                         44580019
*     2. IT DETERMINES IF ERASE COMMAND IS TO BE COMMAND CHAINED.       44640019
*     3. IT THEN ISSUES EXCP                                            44700019
*                                                                       44760019
*********************************************************************** 44820019
*                                                                       44880019
         MVC   IOBSEEK,DCBFDAD     MOVE MBBCCHHR                        44940019
         OI    SGWKFLAG,LASTSEG        TURN ON BIT FOR LAST      A33103 44960020
*                                       SEGMENT                  A33103 44980020
*                                                                       45000019
WRTR0CCW EQU   *                                                        45060019
*                                                                       45120019
         SR    WKREG11,WKREG11          ZERO OUT A REG           20201  45220020
         IC    WKREG11,DCBWCPO          GET OFFSET TO WRT R0     20201  45320020
*                                       C.P.                     20201  45420020
         AR    WKREG11,IOBREG           POINT TO IT              20201  45520020
*                                                                       45720019
STORECCW EQU   *                                                        45780019
*                                                                       45840019
         ST    WKREG11,IOBSTART    STORE IT AS START ADDR               45900019
         MVC   IOBR0CNT(FOUR),IOBSEEK+THREE  MOVE CCHH TO COUNT FLD     45960019
         MVI   IOBR0CNT+FOUR,NULL  SET R=0                              46020019
         MVC   IOBR0DAT(FIVE),DCBFDAD+THREE  MOVE CCHHR TO R0 DATA FLD  46080019
         MVC   IOBR0DAT+FIVE(TWO),DCBTRBAL  MOVE TRACK BALANCE TO R0    46140019
*                                                                       46200019
*   IF PREVIOUS WRITE WAS WRITE/SZ THEN IT COMMAND CHAINS TO 'ERASE'    46260019
*   CCW                                                                 46320019
*                                                                       46380019
         SR    WKREG11,WKREG11          ZERO OUT A REGISTER      20201  46390020
         IC    WKREG11,DCBOFFSR         GET OFFSET TO READ R0    20201  46400020
*                                       CCW                      20201  46410020
         AR    WKREG11,IOBREG           POINT TO IT              20201  46420020
         NI    FOUR(WKREG11),MSKFF-CCHAIN  SET  CC OFF           20201  46430020
         CLI   DCBFDAD+SEVEN,NULL       FIRST RECORD ON THIS     A29270 46450019
*                                       TRACK                    A29270 46460019
         BE    SETCC                    BR IF YES, INDICATE      A29270 46470019
*                                       TRACK                    A29270 46480019
*                                       MUST BE ZEROED OUT              46490019
         TM    DCBCIND2,WZEROBIT   TEST IF THE PREVIOUS WRITE IS 'SZ'   46500019
         BNO   NOWRTSZ             NO,DON'T C.C. TO 'ERASE'             46560019
*                                                                       46620019
SETCC    EQU   *                                                 A29270 46650019
         OI    FOUR(WKREG11),CCHAIN     SET CC TO ERASE          20201  46690020
*                                                                       46740019
NOWRTSZ  EQU   *                                                        46800019
*                                                                       46860019
         OI    DCBCIND2,WZEROBIT   SET WRITE/SZ REQUEST BIT             46920019
         OI    SGWKFLAG,WRITESZ    SET THIS I/O C.C. TO WRITE/R0        46980019
*                                                                       47040019
         B     SCHEXCP             GOTO ISSUE EXCP                      47100019
*                                                                       47160019
*                                                                       47220019
*********************************************************************** 47280019
*                                                                       47340019
*                                                                       47400019
*********************************************************************** 47460019
*                                                                       47520019
MOVEDATA EQU   *                                                        47580019
*                                                                       47640019
*********************************************************************** 47700019
*                                                                       47760019
*   MOVE DATA FROM USER'S RECORD AREA TO S.W.A. WHICH IS POINTED BY     47820019
*   S.W.A                                                               47880019
*        WKREG6 - LENGTH OF DATA TO BE MOVED                            47940019
*        WKREG7 - ADDR OF AREA TO WHICH DATA IS MOVED                   48000019
*        WKREG8 - ADDR OF DATA TO BE MOVED                              48060019
*                                                                       48120019
*********************************************************************** 48180019
*                                                                       48240019
         ST    WKREG11,IOBR0DAT    SAVE RETURN ADDR                     48300019
         LA    WKREG7,SGWKDATA     LOAD ADDR OF S.W.A. DATA FIELD       48360019
*                                                                       48420019
         LH    WKREG6,IOBDNRCF     LOAD KEYLEN                          48480019
         LTR   WKREG6,WKREG6       TEST IF KEYLEN .EQ. '0'              48540019
         BZ    MOVESEG             YES,GOTO MOVE SEGMENT                48600019
*                                                                       48660019
*   MOVE KEY TO S.W.A.                                                  48720019
*                                                                       48780019
         BAL   WKREG11,SMOVE       GOTO MOVE DATA ROUTINE               48840019
*                                                                       48900019
MOVESEG  EQU   *                                                        48960019
*                                                                       49020019
*   MOVE 1 ST SEGMENT INTO S.W.A. AND SETUP B.D.W. AND S.D.W.           49080019
*                                                                       49140019
         AH    WKREG7,IOBDNRCF     ADD KEYLEN TO ADDR OF SDW            49200019
         XC    NULL(EIGHT,WKREG7),NULL(WKREG7)    CLEAR BDW/SDW         49260019
*                                                                       49320019
         AH    WKREG8,IOBDNRCF     ADD KEYLEN TO RECORD ADDR            49380019
         LH    WKREG10,IOBDNRCF+TWO  LOAD 'SL'OR 'LL'                   49440019
*                                                                       49500019
*   SETUP B.D.W. AND S.D.W.FOR THE 1ST SEGMENT                          49560019
*                                                                       49620019
         SH    WKREG10,CONST4      MINUS '4' TO ALLOW FOR SDW           49680019
         STC   WKREG10,FIVE(WKREG7)  STORE 'RL/SL' INTO SDW             49740019
         SRL   WKREG10,EIGHT       MOVE IT TO THE HIGH ORDER BYTE       49800019
         STC   WKREG10,FOUR(WKREG7)  STORE 1ST CHAR OF 'RL/SL'          49860019
*                                                                       49920019
         LH    WKREG6,IOBDNRCF+TWO LOAD 'LL' INTO REG.                  49980019
         MVC   NULL(TWO,WKREG7),IOBDNRCF+TWO MOVE 'LL' INTO BDW         50040019
         SH    WKREG6,CONST8       DATA LENGTH='LL'-8                   50100019
*                                                                       50160019
         LA    WKREG7,EIGHT(WKREG7) INCREMENT TO ADDR BY '8' FOR D.W'S  50220019
         LA    WKREG8,EIGHT(WKREG8)  INCREMENT BY '8' FOR 'DW'S'        50280019
         LR    WKREG10,WKREG7      SAVE RECORD AREA ADDRESS             50340019
*                                                                       50400019
*   MOVE 1ST SEGMENT TO WORK AREA                                       50460019
*                                                                       50520019
         BAL   WKREG11,SMOVE       GOTO MOVE DATA ROUTINE               50580019
*                                                                       50640019
         L     WKREG11,IOBR0DAT    RESTORE RETURN REG.                  50700019
*                                                                       50760019
         BR    WKREG11             RETURN TO THE MAIN ROUTINE           50820019
*                                                                       50880019
*                                                                       50940019
MOVE     MVC   NULL(NULL,WKREG7),NULL(WKREG8)     MOVE .LT. 256 BYTES   51000019
*                                                                       51060019
MOVE256  EQU   *                                                        51120019
*                                                                       51180019
         MVC   NULL(MSKFF+ONE,WKREG7),NULL(WKREG8)  MOVE 256 BYTES      51240019
         AH    WKREG7,CONST256     INCREMENT BY '256'                   51300019
         AH    WKREG8,CONST256     INCREMENT BY '256'                   51360019
*                                                                       51420019
SMOVE    EQU   *                                                        51480019
*                                                                       51540019
         SH    WKREG6,CONST256     SUBTRACT 256                         51600019
         BP    MOVE256             IF GT 0,MOVE 256 BYTES AT A TIME     51660019
*                                                                       51720019
         AH    WKREG6,CONST255     CORRECT TO ORIGINAL LENGTH-1         51780019
         EX    WKREG6,MOVE         MOVE REST OF BYTES                   51840019
*                                                                       51900019
         BR    WKREG11             RETURN TO MAIN                       51960019
*                                                                       52020019
*********************************************************************** 52080019
*                                                                       52140019
*********************************************************************** 52200019
*                                                                       52260019
OVERHEAD EQU   *                                                        52320019
*                                                                       52380019
*********************************************************************** 52440019
*                                                                       52500019
*   CALCULATE THE FOLLOWINGS                                            52560019
*     1. INTERMEDIATE RECORD LENGTH IN WKREG7                           52620019
*     2. LAST RECORD LENGTH IN WKREG8                                   52680019
*     3. MINIMUM RECORD LENGTH IN WKREG                                 52740019
*     4. TRACK CAPACITY IN EPREG                                        52800019
*     5. NO. OF BYTES CAN BE WRITTEN ON THE CURRENT TRACK IN WKREG10    52860019
*                                                                       52920019
*     AT ENTRY WKREG6 CONTAINS 'LL+KL'                                  52980019
*                                                                       53040019
*********************************************************************** 53100019
*                                                                       53160019
         L     WKREG9,DCBDVTBL     LOAD ADDR OF DEVICE TABLE            53220019
         USING DASDTBL,WKREG9      ESTABLISH BASE FOR DEVICE TABLE      53280019
*                                                                       53340019
         SR    EPREG,EPREG         RESET REG.0 TO '0'                   53400019
*                                                                       53460019
         CLI   DCBKEYLE,NULL       TEST IF KEY IS SPECIFIED             53520019
         BNE   KEYGOGO             NO, SKIP KEY OVERHEAD                53580019
*                                                                       53640019
         IC    EPREG,DASDKEY       INSERT OVERHEAD FOR KEY              53700019
*                                                                       53760019
KEYGOGO  EQU   *                                                        53820019
*                                                                       53880019
         SR    WKREG8,WKREG8       RESET REG. TO '0'                    53940019
         IC    WKREG8,DASDLAST     INSERT LAST RECORD OVERHEAD          54000019
         TM    DASDFLAG,TBOVHD          2305 DEVICE ONLINE       20201  54010020
         BNO   MZ002                    IF NOT OVERHEAD O.K.     20201  54020020
         LH    WKREG8,DASDINTR         IF SO GET 2 BYTE OVERHEAD 20201  54030020
MZ002    EQU   *                                                 20201  54040020
*                                                                       54060019
         LH    WKREG10,DCBTRBAL    LOAD TRACK BALANCE                   54120019
*                                                                       54180019
         USING UCB,WKREG7                                      ZM40313  54186037
         SR    WKREG7,WKREG7           CLEAR REGISTER          ZM40313  54187037
         IC    WKREG7,IOBSEEK          'M' FROM IOBSEEK        ZM40313  54188037
         SLL   WKREG7,FOUR             MPY BY 16 FOR EXTENTS   ZM40313  54189037
         AR    WKREG7,DEBREG           ADD DEB ADDRESS         ZM40313  54190037
         L     WKREG7,DEBBASE(WKREG7)  ADD DEB BASIC SECTION   ZM40313  54191037
*                                      FOR UCB ADDRESS         ZM40313  54192037
         TM    UCBTBYT2,UCBRPS         RPS DEVICE?             ZM40313  54193037
         BNO   NODEVRPS                NO - BRANCH             ZM40313  54194037
         DROP  WKREG7                                          ZM40313  54195037
         AR    WKREG10,EPREG            OTHERWISE ADD THE KEY    20201  54198020
*                                       OVHD IF THERE ARE NO KEYS       54204020
*                                       (SOUNDS DUMB DOESNT IT?)        54210020
         B     RPSDEV                   GO SUBTRACT OFF THELAST  20201  54216020
*                                       REC OVERHD                      54222020
NODEVRPS EQU   *                                                 20201  54228020
         CLI   DCBKEYLE,NULL            TEST IF KEYLEN=0                54240019
         BE    NOKEY               NO,GOTO SKIP KEY OVERHEAD            54300019
*                                                                       54360019
RPSDEV   EQU   *                                                 20201  54390020
         SR    WKREG10,WKREG8      TRACK BALANCE - LAST RECORD OVERHEAD 54420019
*                                                                       54480019
NOKEY    EQU   *                                                        54540019
*                                                                       54600019
         AR    WKREG8,WKREG6       ADD DL + KL + LAST RECORD OVERHEAD   54660019
*                                                                       54720019
         SR    WKREG8,EPREG        LAST RECORD=DL+KL+OVERHEAD           54780019
*                                                                       54840019
         SR    WKREG7,WKREG7       REST REG.                            54900019
         IC    WKREG7,DASDINTR     INSERT INTERMEDIATE RECORD OVERHEAD  54960019
         TM    DASDFLAG,TBOVHD          SOME DEVICES LIKE A 2305 20201  54970020
         BNO   MZ003                      HAVE 2 BYTE OVERHEADS  20201  54980020
         LH    WKREG7,DASDINTR          INSTEAD OF ONE           20201  54990020
MZ003    EQU   *                                                 20201  55000020
         LR    WKREG,WKREG6        MOVE KL+DL                           55020019
         MH    WKREG,DASDTOL       CALCULATE TOLERANCE*(KL+DL) AND      55080019
         SRL   WKREG,NINE          DIVIDE THE ABOVE BY 512              55140019
         AR    WKREG7,WKREG        ADJUST BY INTERMEDIATE RECORD OVERH  55200019
         SR    WKREG7,EPREG        ADJUST BY KEY OVERHEAD               55260019
*                                                                       55320019
         LR    WKREG,WKREG8        LOAD LAST RECORD LENGTH AND          55380019
         SH    WKREG,IOBDNRCF+TWO  SUBTRACT 'LL' FROM IT.THEN           55440019
         AH    WKREG,CONST8        ADD '8' TO IT.                       55500019
*                                                                       55560019
         LH    EPREG,DASDLNGH      LOAD TRACK CAPACITY INTO EPREG       55620019
         SH    EPREG,CONST8        TRACK CAPACITY - 8 FOR SDW/BDW       55680019
*                                                                       55740019
         BR    WKREG11             GO BACK TO ENTRY POINT               55800019
*                                                                       55860019
*********************************************************************** 55920019
*                                                                       55980019
EXTNTCHK EQU   *                                                        56040019
*                                                                       56100019
*********************************************************************** 56160019
*                                                                       56220019
*   CHECK IF THIS IS THE LAST TRACK OF THE LAST EXTENT                  56280019
*                                                                       56340019
*********************************************************************** 56400019
*                                                                       56460019
         SR    WKREG6,WKREG6       RESET REG.6 TO '0'                   56520019
         IC    WKREG6,DEBNMEXT     INSERT DEB NO. OF EXTENT             56580019
         BCTR  WKREG6,NULL         DECREMENT BY '1'                     56640019
         SLL   WKREG6,FOUR         MULTIPLY BY '16'                     56700019
         AR    WKREG6,DEBREG       ADD DEB ADDR TO GET TO THE LAST EXT. 56760019
*                                                                       56820019
         CLC   IOBSEEK+THREE(FOUR),DEBENDCC-DEB(WKREG6) IS THIS LAST TR 56880019
         BR    WKREG11             GO BACK TO THE ENTRY                 56940019
*                                                                       57000019
*********************************************************************** 57060019
*                                                                       57120019
NEXTCCHH EQU   *                                                        57180019
*                                                                       57240019
*********************************************************************** 57300019
*                                                                       57360019
*   THIS ROUTINE CALCULATE NEXT CCHH                                    57420019
*                                                                       57480019
*        AT ENTRY IOBR0DAT CONTAINS THE MBBCCHHR OF CURRENT TRACK       57540019
*        AT EXIT  IOBR0DAT CONTAINS THE MBBCCHHR OF NEXT TRACK          57600019
*                                                                       57660019
*********************************************************************** 57720019
*                                                                       57780019
         LA    IOBREG,NULL(IOBREG) CLEAR 1ST BYTE                       57840019
*                                                                       57900019
         L     WKREG9,DCBDVTBL     LOAD ADDR OF DEVICE TABLE            57960019
         STM   DECBREG,DCBREG,IOBR0CNT SAVE REGISTERS TEMPORARILY       58020019
*                                                                       58080019
         MVC   IOBCSW(FOUR),DASDCYL  MOVE MAX. CCHH INTO WORK AREA      58140019
         MVC   IOBCSW+FOUR(FOUR),IOBR0DAT+THREE  MOVE CURRENT TO AREA   58200019
*                                                                       58260019
         SR    WKREG6,WKREG6       RESET REG TO '0'                     58320019
         IC    WKREG6,IOBR0DAT     INSERT 'M' OF CURRENT TO GET TO THE  58380019
         SLL   WKREG6,FOUR         PROPER DEB EXTENT                    58440019
         AR    WKREG6,DEBREG       WKREG9 POINT TO PROPER EXTENT IN DEB 58500019
*                                                                       58560019
         LA    INDEXR,THREE(IOBREG)     SET CCHH VALUE TO HH            58620019
         L     CCHHRG,IOBCSW+FOUR  LOAD CURRENT CCHH                    58680019
*                                                                       58740019
         TM    DASDFLAG,BYTEMODE   ARE BYTES NON-CONTIGUOUS             58800019
         BZ    DOWNONE             NO,GOTO CONTIGUOUS                   58860019
*                                                                       58920019
ADDONE   EQU   *                                                        58980019
*                                                                       59040019
         AH    CCHHRG,CONST1       ADD '1' TO NEXT ADDR                 59100019
*                                                                       59160019
         TM    DASDFLAG,BYTEMODE   TEST IF NON-CONTIGUOUS               59220019
         BO    USEBYTE             YES,TREAT EACH SEPARATELY            59280019
*                                                                       59340019
         STH   CCHHRG,OFFTONEW(INDEXR)  STORE NEW CC OR HH              59400019
*                                                                       59460019
         CLC   OFFTONEW(TWO,INDEXR),OFFTOMAX(INDEXR) CHK FOR VALIDITY   59520019
         BL    TSTEXT              VALID,CHECK IF WITHIN EXTENT         59580019
*                                                                       59640019
*   ADDR IS NOT VALID                                                   59700019
*                                                                       59760019
         SRL   CCHHRG,SIXTEEN      SHIFT IT TO 'CC'                     59820019
         XC    OFFTONEW(TWO,INDEXR),OFFTONEW(INDEXR) SET ZERO THE BYTES 59880019
*                                                    PROCESSED OF CCHH  59940019
*                                                                       60000019
         BCTR  INDEXR,NULL         DECREMENT INDEX BY '1'.(FOR NON-CONT 60060019
*                                  IGUOUS NEXT BCTR WILL DECREMENT      60120019
DOWNONE  EQU   *                   AGAIN)                               60180019
*                                                                       60240019
         BCTR  INDEXR,NULL         DECREMENT INDEX BY '1'               60300019
*                                                                       60360019
         CR    INDEXR,IOBREG       TEST IF ALL ADDR BEEN PROCESSED      60420019
         BNL   ADDONE              NO,LOOP TO ADD ONE TO NEXT BYTE      60480019
*                                                                       60540019
NEXTENT  EQU   *                                                        60600019
*                                                                       60660019
         IC    INDEXR,IOBR0DAT     INCREMENT M AND SEE IF THIS WAS THE  60720019
         LA    INDEXR,ONE(INDEXR)  LAST EXTENT.                         60780019
         STC   INDEXR,IOBR0DAT     REPLACE M BY 'M+1'                   60840019
*                                                                       60900019
         CLC   IOBR0DAT(ONE),DEBNMEXT   IF THE M+1 .GT. NO OF EXTENT    60960019
         BE    SETEOV                YES,GOTO SET 'VOLUME FULL'         61020019
*                                                                       61080019
         LA    WKREG6,SIXTEEN(WKREG6)   INCREMENT TO NEXT EXTENT        61140019
         MVC   IOBR0DAT+ONE(SIX),DEBBINUM-DEB(WKREG6)  MOVE BBCCHH OF   61200019
*                                                      THE NEXT EXTENT  61260019
GOOUT    EQU   *                                                        61320019
*                                                                       61380019
         MVI   IOBR0DAT+SEVEN,NULL SET R=0                              61440019
*                                                                       61500019
         LM    DECBREG,DCBREG,IOBR0CNT  RESTORE DECB/DCB REGISTERS      61560019
*                                                                       61620019
         BR    WKREG11             RETURN TO THE MAIN ROUTINE           61680019
*                                                                       61740019
USEBYTE  EQU   *                                                        61800019
*                                                                       61860019
         STC   CCHHRG,OFFTONEW(INDEXR)  STORE THE BYTE PROCEED AND      61920019
         SRL   CCHHRG,EIGHT             SHIFT TO THE NEXT ONE           61980019
*                                                                       62040019
         CLC   OFFTONEW(ONE,INDEXR),OFFTOMAX(INDEXR) TEST VALIDITY      62100019
         BL    TSTEXT              VALID,GOTO CHECK EXTENT LIMIT        62160019
*                                                                       62220019
         MVI   OFFTONEW(INDEXR),NULL SET THE BYTE TO '0'                62280019
         B     DOWNONE             GOTO NEXT BYTE                       62340019
*                                                                       62400019
TSTEXT   EQU   *                                                        62460019
*                                                                       62520019
         CLC   IOBCSW+FOUR(FOUR),DEBENDCC-DEB(WKREG6)  TEST IF WITHIN   62580019
*                                                      EXTENT           62640019
         BH    NEXTENT             NO,GOTO CHECK NEXT EXTENT            62700019
*                                                                       62760019
         MVC   IOBR0DAT+THREE(FOUR),IOBCSW+FOUR   YES,MOVE NEW CCHH     62820019
*                                                                       62880019
         B     GOOUT               GOTO RETURN                          62940019
*                                                                       63000019
SETEOV   EQU   *                                                        63060019
*                                                                       63120019
         LM    DECBREG,DCBREG,IOBR0CNT  RESTORE DECB/DCB REGISTER       63180019
         OI    DCBCIND1,VOLFULL    SET VOLUME IS FULL                   63240019
*                                                                       63300019
         B     GOOUT               GOTO RETURN                          63360019
*                                                                       63420019
*********************************************************************** 63480019
         EJECT                                                          63540019
 TITLE 'IGG019BR-ASYNCHRONOUS EXIT ROUTINE FOR BSAM WRITE(CREATE BDAM)-X63600019
               VS FORMAT'                                               63660019
*                                                                       63720019
*********************************************************************** 63780019
*                                                                       63840019
*FUNCTION - 1. FOR SPANNED VOLUME RECORD THE ROUTINE SCHEDULES WRITE/R0 63900019
*              CHANNEL PROGRAM SO THAT ALL THE REMAINNG TRACK WILL      63960019
*              HAVE CAPACITY RECORD                                     64020019
*           2. FOR REGULAR SPANNED RECORD IT SCHEDULES WRITE/SN C.C. TO 64080019
*                                                                       64140019
*********************************************************************** 64200019
*                                                                       64260019
ASYENTRY EQU   *                                                        64320019
*              WRITE/RO CHANNEL PROGRAM.                                64380019
*                                                                       64440019
*ENTRY - FROM EXIT EFFECTOR WHICH HAS GAINNED CONTROL FROM C.E.A.       64500019
*        REGISTERS                                                      64560019
*        R1 - ADDRESS OF RQE                                            64620019
*        R14- RETURN ADDRESS TO SUPERVISOR                              64680019
*        R15- ENTRY                                                     64740019
*                                                                       64800019
*********************************************************************** 64860019
*                                                                       64920019
*   ESTABLISH REGISTERS                                                 64980019
*                                                                       65040019
*********************************************************************** 65100019
*                                                                       65160019
         L     IOBREG,FOUR(PARAM1) LOAD IOB ADDR FROM RQE               65220019
         LA    IOBREG,NULL(IOBREG) CLEAR 1ST BYTE OF IOB REG.           65280019
         L     DCBREG,IOBDCB(IOBREG)  LOAD DCB REG                      65340019
         L     BASEREG,DCBWRITE    ESTABLISH BASE ADDR                  65400019
         SH    IOBREG,CONST8       IOB ADDR - 8                         65460019
         L     DEBREG,DCBDEBAD     LOAD DEB ADDR                        65520019
*                                                                       65580019
         LR    SAVEREG,RETREG      SAVE RETURN TO SUPERVISOR ADDR       65640019
         SR    RETREG,RETREG            ZERO OUT A REGISTER      20201  65670020
         IC    RETREG,DCBOFFSW          GET OFFSET TO WRT CCW    20201  65700020
         L     RETREG,NULL(RETREG,IOBREG) LOAD ADDR OF S.W.A.    20201  65730020
         SH    RETREG,CONST10      POINT TO THE START OF S.W.A.         65760019
*                                                                       65820019
         OI    SGWKFLAG,ASYCNTRL   SET A.S.I. IS IN CONTROL BIT         65880019
*                                                                       65940019
         MVC   IOBR0DAT,IOBSEEK    MOVE PREVIOUS MBBCCHH INTO WORK AREA 66000019
         BAL   WKREG11,NEXTCCHH    OBTAIN CCHH+1                        66060019
*                                                                       66120019
         MVC   IOBSEEK,IOBR0DAT    MOVE NEW MBBCCH TO SEEK FIELD        66180019
         MVC   IOBR0CNT(FIVE),IOBR0DAT+THREE MOVE NEW CCHHR INTO COUNT  66240019
         MVC   IOBR0DAT(FIVE),IOBR0CNT       MOVE NEW CCHHR INTO DATA   66300019
         XC    IOBR0DAT+FIVE(THREE),IOBR0DAT+FIVE  CLEAR TRACK BALANCE  66360019
*                                                                       66420019
         TM    SGWKFLAG,SPANVLM    TEST IF SPAN VOLUME BIT IS ON        66480019
         BNO   NEXTSEG             NO,GOTO PROCESS NEXT SEGMENT         66540019
*                                                                       66600019
         USING DASDTBL,WKREG9      ESTABLISH BASE FOR DEVICE TABLE      66660019
         L     WKREG9,DCBDVTBL     LOAD DEVICE TABLE ADDR               66720019
*                                                                       66780019
         MVC   IOBR0DAT+FIVE(TWO),DASDLNGH  MOVE TRACK CAPACITY         66840019
*                                                                       66900019
*********************************************************************** 66960019
*                                                                       67020019
*   SPANNED VOLUME HANDLING                                             67080019
*                                                                       67140019
*        CONSTRUCT WRITE/R0 C.C. TO ERASE CHANNEL PROGRAM               67200019
*                                                                       67260019
*********************************************************************** 67320019
*                                                                       67380019
*                                                                       67440019
         SR    WKREG11,WKREG11          ZERO OUT A REG           20201  67470020
         IC    WKREG11,DCBOFFSR         GET OFFSET TO READ R0    20201  67500020
*                                       CCW                      20201  67530020
         AR    WKREG11,IOBREG           PT TO READ R0 CCW        20201  67560020
         OI    FOUR(WKREG11),CCHAIN     SET COMMAND CHN TO ERASE 20201  67590020
*                                                                       67620019
         LA    PARAM1,IOBFLAG1     LOAD ADDR OF IOB                     67680019
         L     WKREG6,IOBECBPT          LOAD USER DECB ADDR      YM3849 67690002
         STCM  WKREG6,B'0111',IOBIOBA+1 SAVE IN IOB PREF+4       YM3849 67700002
         LA    WKREG11,IOBCSW           GET CSW ADDRESS TO USE   YM3849 67730002
         ST    WKREG11,IOBECBPT         AS DUMMY ECB FOR IOS     YM3849 67732002
*                                       USER ECB PTR WILL BE     YM3849 67734002
*                                       RESTORED BY CEA(19BT)    YM3849 67736002
*                                                                       67860019
         EXCP  (1)                                                      67920019
*                                                                       67980019
         BAL   WKREG11,EXTNTCHK    GOTO CHECK IF THIS IS THE LAST TRACK 68100019
*                                                                       68160019
         BL    ASYEXIT             NO,EXIT TO SUPERVISOR                68220019
*                                                                       68280019
         OI    SGWKFLAG,LASTSEG    SET THIS IS THE LAST SEGMENT BIT     68340019
*                                                                       68400019
*********************************************************************** 68460019
*                                                                       68520019
ASYEXIT  EQU   *                                                        68580019
*                                                                       68640019
*********************************************************************** 68700019
*                                                                       68760019
*   EXIT TO SUPERVISOR ON REGISTER 14                                   68820019
*                                                                       68880019
*********************************************************************** 68940019
*                                                                       69000019
         LR    RETREG,SAVEREG      RESTORE RETURN REGISTER              69060019
         BR    RETREG              RETURN TO SUPERVISOR                 69120019
*                                                                       69180019
*********************************************************************** 69240019
*                                                                       69300019
NEXTSEG  EQU   *                                                        69360019
*                                                                       69420019
*********************************************************************** 69480019
*                                                                       69540019
*   THIS ROUTINE CONSTRUCTS WRITE/SN+N C.C. TO WRITE/R0 CHANNEL PROGRAM 69600019
*   AND ISSUES EXCP                                                     69660019
*                                                                       69720019
*********************************************************************** 69780019
*                                                                       69840019
         MVC   IOBDNRCF+SIX(ONE),DCBKEYLE    MOVE KEYLEN INTO SAVE AREA 69900019
         MVI   DCBKEYLE,NULL       SET KEYLEN=0                         69960019
*                                                                       70020019
         L     WKREG7,SGWKRCRD     OBTAIN RECORD AREA ADDRESS           70080019
         SR    WKREG6,WKREG6       RESET REG.6 TO '0'                   70140019
         STH   WKREG6,IOBDNRCF     STORE KEYLEN=0 INTO SAVE AREA        70200019
         IC    WKREG6,NULL(WKREG7) INSERT 1ST BYTE OF 'LL'              70260019
         SLL   WKREG6,EIGHT        SHIFT 1 BYTE LEFT                    70320019
         IC    WKREG6,ONE(WKREG7)  INSERT 2ND BYTE OF 'LL'              70380019
*                                                                       70440019
         SH    WKREG6,SGWKOFF      DATA LENGTH = 'LL' - SL (SEG. LNGTH) 70500019
         STH   WKREG6,IOBDNRCF+TWO STORE 'DL' INTO SAVE AREA            70560019
         AH    WKREG6,CONST8       ADD '8' TO 'DL' FOR 'SDW AND BDW'    70620019
         BAL   WKREG11,OVERHEAD    GOTO CALCULATE OVERHEAD              70740019
*                                                                       70800019
*                                                                       70803020
         SR    WKREG11,WKREG11          ZERO OUT A REG           20201  70812020
         SR    EPREG,EPREG              ZERO OUT A REGISTER      20201  70815020
         IC    WKREG11,DASDINTR         GET INTERMED REC OVHD    20201  70818020
         TM    DASDFLAG,TBOVHD          DEVICE WITH 2 BYTE OVHD  20201  70821020
         BNO   NOTRPS2A                 NO, USE INSERT IN REG    20201  70824020
         LH    WKREG11,DASDINTR         ELSE, GET 2 BYTE OVHD    20201  70827020
NOTRPS2A EQU  *                                                  20201  70830020
         IC    EPREG,DASDKEY            GET KEY OVERHEAD         20201  70833020
         SR    WKREG11,EPREG            GET REC OVHD - KEY OVHD  20201  70836020
         LH    EPREG,DASDLNGH           GET TRK CAPACITY         20201  70839020
         SR    EPREG,WKREG11            TRKCAP - REC OVHD - KEY  20201  70842020
*                                       OVHD                     20201  70845020
         SH    EPREG,CONST8             ALLOW FOR SDW & BDW      20201  70848020
         CH    EPREG,IOBDNRCF+TWO  TEST IF REMAINNING BYTES FITS        70860019
         BL    NOTFIT              NO,GOTO WRITE MIDLE SEGMENT          70920019
*                                                                       70980019
*   THIS IS TO WRITE/LAST SEGMENT                                       71040019
*                                                                       71100019
         LH    WKREG11,DASDLNGH         GET CAP OF TRK           20201  71160020
         SR    WKREG11,WKREG7           TRACK BAL=CAPACITY-INTERMEDIATE 71220019
         STC   WKREG11,IOBR0DAT+SIX     STORE LAST CHAR OF TRACK BAL    71280019
         SRL   WKREG11,EIGHT       SHIFT TO NEXT BYTES                  71340019
         STC   WKREG11,IOBR0DAT+FIVE    STORE 1ST CHAR OF TRACK BAL     71400019
*                                                                       71460019
         OI    SGWKFLAG,LASTSEG    SET THIS IS THE LAST SEGMENT BIT ON  71520019
         B     SKIP01              GOTO MOVE DATA ROUTINE               71580019
*                                                                       71640019
NOTFIT   EQU   *                                                        71700019
*                                                                       71760019
*   WHEN THE REMAINNING DATA IS LONGER THAN TRACK CAPACITY,SET TRACK    71820019
*   CAPACITY AS SEGMENT LENGTH                                          71880019
*                                                                       71940019
         STH   EPREG,IOBDNRCF+TWO  SAVE 'DL' IN WORK AREA               72000019
*                                                                       72060019
SKIP01   EQU   *                                                        72120019
*                                                                       72180019
         L     WKREG8,SGWKRCRD     LOAD ADDR OF 'LL' FIELD IN RECORD    72240019
         AH    WKREG8,SGWKOFF      ADD 'LL' TO POINT TO THE 1ST CHAR OF 72300019
*                                  THIS SEGMENT                         72360019
         LH    WKREG7,SGWKOFF      LOAD 'SL' OF PREVIOUS SEGMENTS       72420019
         AH    WKREG7,IOBDNRCF+TWO ADD 'SL'+'DL'='SL' UPTO THIS SEGMENT 72480019
         STH   WKREG7,SGWKOFF      STORE NEW 'SL' INTO 'OFFSET'         72540019
*                                                                       72600019
         LH    WKREG7,IOBDNRCF+TWO LOAD 'DL' OF THIS SEGMENT            72660019
         LA    WKREG7,EIGHT(WKREG7) ADD '8' FOR DW'S                    72720019
         STH   WKREG7,IOBDNRCF+TWO STORE 'DL+8' AS SEGMENT LENGTH       72780019
         SH    WKREG8,CONST8       MINUS '8' TO POINT TO THIS SEGMENT   72840019
*                                  -8                                   72900019
*                                                                       72960019
         BAL   WKREG11,MOVEDATA    GOTO MOVE SEGMENT                    73020019
*                                                                       73080019
         MVC   DCBKEYLE(ONE),IOBDNRCF+SIX    RESTORE KEYLEN INTO DCB    73140019
         TM    SGWKFLAG,LASTSEG    TEST IF LAST SEGMENT FLAG IS ON      73200019
         BNO   SETMDDLE            GOTO SET MIDDLE SEGMENT FLAG         73260019
*                                                                       73320019
         MVI   SGWKDATA+SIX,ENDSEG SET LAST SEGMENT BIT ON              73380019
         SR    WKREG6,WKREG6       DEVELOP MINIMUM SPACE...    @ZA15097 73387037
         IC    WKREG6,DASDLAST     ...REQD FOR...              @ZA15097 73394037
         AH    WKREG6,CONST8       ...ONE MORE RECORD          @ZA15097 73401037
         CH    WKREG6,DCBTRBAL     GREATER THAN TRBAL?         @ZA15097 73408037
         BNH   WRTSGCCW            NO - GO WRITE SEGMENT       @ZA15097 73415037
         OI    SGWKFLAG,WRITESZ    YES - IN R0 FOR CHK RTN     @ZA15097 73422037
         OI    DCBCIND1,NXT        AND NEXT WRITE REQUEST      @ZA15097 73429037
         B     WRTSGCCW            GOTO CONSTRUCT WRITE/SG CCW          73440019
*                                                                       73500019
SETMDDLE EQU   *                                                        73560019
*                                                                       73620019
         MVI   SGWKDATA+SIX,MDLSEG SET 'MIDLE SEGENT' BITS ON           73680019
*                                                                       73740019
WRTSGCCW EQU   *                                                        73800019
*                                                                       73860019
*                                                                       73920019
*   CONSTRUCTS WRITE/SEGMENT CHANNEL PROGRAM                            73980019
*                                                                       74040019
         SR    WKREG11,WKREG11          ZERO OUT A REG           20201  74060020
         IC    WKREG11,DCBOFFSW         GET OFFSET TO WRT CCW    20201  74080020
         AR    WKREG11,IOBREG           POINT TO WRT CCW         20201  74100020
         MVC   SIX(TWO,WKREG11),SGWKDATA  MOVE DATA LEN TO CCW   20201  74120020
         MVI   IOBDNRCF+FOUR,ONE        SET R=1                         74160019
         MVC   IOBDNRCF(FOUR),IOBSEEK+THREE  MOVE CCHH OF THIS TRACK    74220019
         MVI   IOBDNRCF+FIVE,NULL  SET KEY LENGTH = 0                   74280019
         MVC   IOBDNRCF+SIX(TWO),SGWKDATA MOVE 'DATA LENGTH'            74340019
*                                                                       74400019
         MVC   IOBR0DAT(FIVE),IOBDNRCF  MOVE 'CCHHR' TO R0 DATA FIELD   74460019
*                                                                       74520019
         LA    PARAM1,IOBFLAG1     LOAD IOS/IOB ADDR                    74580019
         L     WKREG6,IOBECBPT          LOAD USER DECB ADDR      YM3849 74630002
         STCM  WKREG6,B'0111',IOBIOBA+1 SAVE IN IOB PREF+4       YM3849 74632002
         LA    WKREG11,IOBCSW           GET CSW ADDRESS TO USE   YM3849 74634002
         ST    WKREG11,IOBECBPT         AS DUMMY ECB FOR IOS     YM3849 74636002
*                                       USER ECB PTR WILL BE     YM3849 74638002
*                                       RESTORED BY CEA(19BT)    YM3849 74638402
*                                                                       74760019
         EXCP  (1)                                                      74820019
*                                                                       74880019
         LR    RETREG,SAVEREG      RESTORE RETURN REGISTER              75000019
*                                                                       75060019
         BR    RETREG              GO BACK TO SUPERVISOR                75120019
*                                                                       75180019
*********************************************************************** 75240019
*                                                                       75300019
*********************************************************************** 75360019
*                                                                       75420019
*   CONSTANTS                                                           75480019
*                                                                       75540019
*********************************************************************** 75600019
*                                                                       75660019
CONST1   DC    H'1'                CONSTANT = 1                         75720019
CONST4   DC    H'4'                CONSTANT = 4                         75780019
CONST8   DC    H'8'                CONSTANT=8                           75840019
CONST10  DC    H'10'               CONSTANT=10                          75900019
*                                                                       75960019
CONST256 DC    H'256'              CONSTANT = 256                       76020019
CONST255 DC    H'255'              CONSTANT = 255                       76080019
MODID    DC    CL8'IGG019BR'            MODULE ID                Y02072 76090002
FIX      DC    C' Z15097 '              LATEST FIX              ZA10211 76100037
DATE     DC    CL8'&SYSDATE'            DATE OF LATEST FIX      ZA10211 76150037
PATCH    DC    XL100'0'                 PATCH AREA              ZA10211 76200037
         EJECT                                                          76260019
**********************************************************************  76320019
*                                                                       76380019
*    CONTROL BLOCK DEFINITIONS FOLLOW                                   76440019
*                                                                       76500019
**********************************************************************  76560019
         SPACE 2                                                        76620019
*                                                                       76680019
**********************************************************************  76740019
*                                                                       76800019
         DCBD  DSORG=(PS),DEVD=(DA)                                     76860019
*                                                                       76920019
*********************************************************************** 76980019
         EJECT                                                          77030002
         IECDSECS  EOVLAST,EXPAND=YES                            Y02072 77090002
         EJECT                                                          77100002
*                                                                       77160019
DEB      DSECT                          THIS DSECT DESCRIBES A DEB      77220019
DEBNMSUB DS    0CL1                    NO. OF SUB RTNS                  77280019
DEBTCBAD DS    CL4                     TASK CONTROL BLOCK ADDR          77340019
DEBAMLNG DS    0CL1                    LENGTH OF ACCESS METHOD SEC      77400019
DEBDEBAD DS    CL4                     ADDR OF NEXT DEB IN DEB CHAIN    77460019
DEBOFLGS DS    0CL1                    DEB OPEN FLAGS                   77520019
DEBIRBAD DS    CL4                     ADDR OF THE IRB CONTROL BLOCK    77580019
DEBOPATB DS    0CL1                    OPEN ATRIBUTES                   77640019
DEBSYSPG DS    CL4                     SYSTEM PURGE FIELD               77700019
DEBNMEXT DS    0CL1                    NUMBER OF EXTENTS IN DEB         77760019
DEBUSRPG DS    CL4                     USER PURGE FIELD                 77820019
DEBPRIOR DS    0CL1                    INFO BYTE                        77880019
DEBECBAD DS    CL4                     EVENT CONTROL BLOCK ADDR         77940019
DEBPROTG DS    0CL1                    INFO BYTE                        78000019
DEBDEBID DS    0CL1                    INFO BYTE                        78060019
DEBDCBAD DS    CL4                     ADDR OF DCB                      78120019
DEBEXSCL DS    0CL1                    SCALING FACTOR OF DEB EXTENT     78180019
DEBAPPAD DS    CL4                     APPENDAGE TABLE ADDR             78240019
DEBDVMOD DS    0CL1                    DEVICE MODIFIER BYTE             78300019
DEBUCBAD DS    CL4                     UNIT CTL BLOCK ADDR              78360019
DEBTVLSQ DS    0CL2                VOL SEQ FOR TAPE                     78420019
DEBBINUM DS    CL2                     BIN NUMBER                       78480019
DEBTVLNM DS    0CL2                NO OF VOL FOR TAPE                   78540019
DEBSTRCC DS    CL2                     START CYLINDER NUMBER            78600019
DEBSTRHH DS    CL2                     START HEAD NUMBER                78660019
DEBENDCC DS    CL2                     END CYLINDER NUMBER              78720019
DEBENDHH DS    CL2                     END HEAD NUMBER                  78780019
DEBNMTRK DS    CL2                     NUMBER OF TRACKS                 78840019
*  FOR ADDITIONAL EXTENT ON DIRECT ACCESS THE FOLLOWING FIELDS          78900019
*  WILL HAVE TO BE OFFSET ANOTHER 16 BYTES                              78960019
DEBVOLSQ DS    H                       VOL SEQUENCE NUMBER              79020019
DEBVOLNM DS    H                       VOLUME NUMBER                    79080019
*  FOR EACH SUBROUTINE LOADED BUMP THIS OFFSET BY 2                     79140019
DEBSUBID DS    H                       SUBROUTINE ID ( 2 BYTES )        79200019
*                                                                       79260019
*********************************************************************** 79320019
*                                                                       79380019
         SPACE 5                                                        79440002
*********************************************************************** 79500019
*                                                                       79560019
IOBDEF   DSECT      I/O BLOCK DEFINITION                                79620019
IOBLINK  DS    F         IOB LINK ADDRESS                               79680019
IOBIOBA  DS    F         IOB ADDRESS FOR EOV                            79740019
IOBFLAG1 DS    CL1       ERROR FLAG 1                                   79800019
IOBFLAG2 DS    CL1       ERROR FLAG 2                                   79860019
IOBSENSE DS    CL2       I/O SENSE BITS                                 79920019
IOBECBPT DS    F         ECB ADDRESS                                    79980019
IOBCSW   DS    D         CSW STORED BY IOS                              80040019
IOBSIOCC DS    0BL1      SIO CONDITION CODE                             80100019
IOBSTART DS    F         CHANNEL PROGRAM STARTING CCW                   80160019
IOBDCBPT DS    F         DCB ADDRESS                                    80220019
IOBRESTR DS    F         CHANNEL PROGRAM RESTART ADDRESS                80280019
IOBINCAM DS    CL2       BLOCK INCREMENT AMOUNT                         80340019
IOBERRCT DS    CL2       ERROR COUNTS                                   80400019
IOBSEEK  DS    D         SEEK ADDRESS                                   80460019
IOBDNRCF DS    D         NEW RECORD COUNT FIELD                         80520019
IOBR0CNT DS    D         COUNT FIELD OF R0                              80580019
IOBR0DAT DS    D         DATA FIELD OF R0                               80640019
IOBCCW1  DS    D         FIRST CCW OF CHANNEL PROGRAM                   80700019
IOBCCW2  DS    D         2ND CCW OF CHANNEL PROGRAM                     80760019
IOBCCW3  DS    D         3RD CCW OF CHANNEL PROGRAM                     80820019
IOBCCW4  DS    D         4TH CCW OF CHANNEL PROGRAM                     80880019
IOBCCW5  DS    D         5TH CCW OF CHANNEL PROGRAM                     80940019
IOBCCW6  DS    D         6TH CCW OF CHANNEL PROGRAM                     81000019
IOBCCW7  DS    D         7TH CCW OF CHANNEL PROGRAM                     81060019
IOBCCW8  DS    D         8TH CCW OF CHANNEL PROGRAM                     81120019
IOBCCW9  DS    D         9TH CCW OF CHANNEL PROGRAM                     81180019
IOBCCW10 DS    D         10TH CCW OF CHANNEL PROGRAM                    81240019
IOBCCW11 DS    D         11TH CCW OF CHANNEL PROGRAM                    81300019
IOBCCW12 DS    D         12TH CCW OF CHANNEL PROGRAM                    81360019
IOBCCW13 DS    D         13TH CCW OF CHANNEL PROGRAM                    81420019
IOBCCW14 DS    D         LAST CCW OF LONGEST CHANNEL PROGRAM            81480019
*                                                                       81540019
OFFTOMAX EQU   IOBCSW-IOBDEF                                            81600019
OFFTONEW EQU   IOBCSW+FOUR-IOBDEF                                       81660019
*                                                                       81720019
         SPACE 2                                                        81780019
**********************************************************************  81840019
*                                                                       81900019
*  DSECT FOR DECB                                                       81960019
*                                                                       82020019
*********************************************************************** 82080019
DECBDEF  DSECT     DATA EVENT CONTROL BLOCK                             82140019
DECSDECB DS    F         STANDARD ECB                                   82200019
DECTYPE  DS    CL2       TYPE AND OPTIONS                               82260019
DECLNGTH DS    CL2       DATA LENGTH                                    82320019
DECDCBAD DS    F         DCB ADDRESS                                    82380019
DECAREA  DS    F         AREA ADDRESS                                   82440019
DECIOBPT DS    F         IOB ADDRESS                                    82500019
DECNEXT  DS    F                   NEXT ADDRESS                         82560019
         SPACE 2                                                        82620019
*********************************************************************** 82680019
*                                                                       82740019
         SPACE 3                                                        82800019
*                                                                       82860019
*********************************************************************** 82920019
*                                                                       82980019
*   DSECT FOR SEGMENT WORK AREA CONTROL BLOCK - 8 BYTES                 83040019
*                                                                       83100019
*********************************************************************** 83160019
*                                                                       83220019
SWACB    DSECT                                                          83280019
*                                                                       83340019
SWACBPTR DS    AL4                 POINTER TO THE 1ST SEG. WORK AREA    83400019
SWACBNO  DS    H                   NUMBER OF SEGMENT WORK AREAS         83460019
SWACBLNG DS    H                   LENGTH OF A SEGMENT WORK AREA        83520019
SWACBTT  DS    H                   TT OF THIS VOLUME RELATIVE TO THE    83580019
*                                  BEGINNING OF DATA SET                83640019
         DS    H                   NOT USED                             83700019
*                                                                       83760019
         SPACE 3                                                        83820019
*                                                                       83880019
*********************************************************************** 83940019
*                                                                       84000019
*   DSECT FOR SEGMENT WORK AREA                                         84060019
*                                                                       84120019
*********************************************************************** 84180019
*                                                                       84240019
SGWKAREA DSECT                                                          84300019
*                                                                       84360019
SGWKPTR  DS    AL4                 POINTER TO NEXT SEG WORK AREA        84420019
SGWKRCRD DS    AL4                 POINTER TO RECORD AREA               84480019
*                                                                       84540019
SGWKFLAG EQU   SGWKRCRD            FLAG BYTES                           84600019
*                                                                       84660019
SPANVLM  EQU   X'80'               SPAN VOLUME                          84720019
LASTSEG  EQU   X'40'               LAST SEGMENT WAS WRITTEN             84780019
ASYCNTRL EQU   X'20'               ASYNCHRONOU RTN IS IN CONTROL        84840019
*                                                                       84900019
SGWKOFF  DS    H                   OFFSET OF THE CURRENT SEGMENT        84960019
SGWKDATA DS    0H                  SEGMENT AREA                         85020019
*                                                                       85080019
         SPACE 3                                                        85140019
*                                                                       85200019
*********************************************************************** 85260019
*                                                                       85320019
*   DSECT FOR DASD DEVICE CHARACTERISTIC TABLE                          85380019
*                                                                       85440019
*********************************************************************** 85500019
*                                                                       85560019
DASDTBL  DSECT                                                          85620019
*                                                                       85680019
DASDCYL  DS    H                   NO. OF CYLINDERS                     85740019
DASDTRK  DS    H                   NO. OF TRACKS/CYLINDER               85800019
DASDLNGH DS    H                   TRACK LENGTH                         85860019
DASDINTR DS    AL1                 OVERHEAD FOR INTERMEDIATE RECORD     85920019
DASDLAST DS    AL1                 OVERHEAD FOR LAST RECORD             85980019
DASDKEY  DS    AL1                 OVERHEAD FOR KEY                     86040019
DASDFLAG DS    AL1                 FLAGS                                86100019
*                                                                       86160019
BYTEMODE EQU   X'02'               MBBCCHHR IS BY BYTE (2321)           86220019
TOLERANC EQU   X'01'               TOLERANCE FACTOR MUST BE ADDED       86280019
*                                                                       86340019
DASDTOL  DS    AL2                 TOLERANCE FACTOR                     86400019
*                                                                       86460019
         SPACE 2                                                        86520019
UCB      DSECT                                                  ZM40313 86580037
         IEFUCBOB   LIST=YES                                    ZM40313 89580037
         END                                                            92580037
