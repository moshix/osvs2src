         TITLE 'IGG019DJ -- SAM-SI QSAM PROCESSOR                      *00001000
                        '                                               00002000
IGG019DJ CSECT ,                                                   0001 00003000
@PROLOG  DS    0H                                                  0002 00004000
         EJECT                                                          00005000
         EJECT                                                          00006000
         EJECT                                                          00007000
         EJECT                                                          00008000
         EJECT                                                          00009000
         EJECT                                                          00010000
         EJECT                                                          00011000
EIGHT    EQU   8                        SYMBOLIC EQUATE                 00012000
TWELVE   EQU   12                       SYMBOLIC EQUATE                 00013000
TWENTY   EQU   20                       SYMBOLIC EQUATE                 00014000
*                                                                       00015000
         DC    A(GETENTRY)              ADDR FOR GET IN BRANCH TABLE    00016000
         DC    A(PUTENTRY)              ADDR FOR PUT IN BRANCH TABLE    00017000
         DC    A(CNTRLENT)              ADDR FOR CNTRL IN TABLE  XM3766 00018000
*                                                                   **  00019000
*********************************************************************/  00020000
*                                                                   */  00021000
*   ENTRY BRANCH TABLE                                              */  00022000
*                                                                   */  00023000
**********************************************************************  00024000
*                                                                   **  00025000
         USING GETENTRY,R15             /* ENTRY ADDRESSABILITY     */  00026000
         USING @DATD-CIWK1,RCICB                                        00027000
GETENTRY B     GETROUTN                 /* ENTRY FOR GET            */  00028000
         B     NOOPRTN                  /* DUMMY ENTRY -- INVALID   */  00029000
         B     RELSERTN                 /* BRANCH TO RELSE EP       */  00030000
         DROP  R15                                                      00031000
         USING PUTENTRY,R15             /* TEMP ADDRESSABILITY      */  00032000
PUTENTRY B     PUTROUTN                 /* ENTRY FOR USER PUT       */  00033000
         B     PUTXRTN                  /* BRANCH TO PUTX EP        */  00034000
         B     TRUNCRTN                 /* BRANCH TO TRUNC EP       */  00035000
         DROP  R15                                                      00036000
         USING CNTRLENT,R15             TEMORARY ADDRESSABILITY  XM3766 00037000
CNTRLENT B     CNTRLRTN                 BRANCH TO CNTRL ROUTINE  XM3766 00038000
         DROP  R15                                               XM3766 00039000
         USING GETENTRY,R11             /* RESET BASE ADDRESS       */  00040000
         EJECT                                                          00041000
GETROUTN STM R14,R12,12(R13)                                            00042000
*        RDCB = R1;                     /* ESTABLISH DCB BASE       */  00043000
         LR    RDCB,R1                                             0102 00044000
*        RCICB = DCBCICB;               /* ESTABLISH CICB BASE      */  00045000
         L     RCICB,DCBCICB(,RDCB)                                0103 00046000
*        R11 = R15;                     /* ESTABLISH BASE REGISTER  */  00047000
         LR    R11,R15                                             0104 00048000
*        CIREGBC = R13;                 /* KEEP USER SAVE POINTER   */  00049000
         ST    R13,CIREGBC(,RCICB)                                 0105 00050000
*        R13 = ADDR(CIREGSAV);          /* SET CI SAVE ADDRESS      */  00051000
         LA    R13,CIREGSAV(,RCICB)                                0106 00052000
*        RRPL = ADDR(CIRPL);            /* ESTABLISH RPL BASE       */  00053000
         LA    RRPL,CIRPL(,RCICB)                                  0107 00054000
*        RPLRLEN = ZERO;                /* ZERO LENGTH FIELD        */  00055000
*                                                                  0108 00056000
         MVC   RPLRLEN(4,RRPL),ZERO                                0108 00057000
*        IF DCBMACRF(5)   = '1'B THEN   /* GET-LOCATE MODE ?         */ 00058000
         TM    DCBMACRF(RDCB),B'00001000'                          0109 00059000
         BNO   @RF00109                                            0109 00060000
*                                       /* YES, BUFR PTR ALREADY SET */ 00061000
*          IF DCBRECFM(1:2) = '01'B THEN/* IS IT ALSO V FORMAT ?     */ 00062000
         TM    DCBRECFM(RDCB),B'01000000'                          0110 00063000
         BNO   @RF00110                                            0110 00064000
         TM    DCBRECFM(RDCB),B'10000000'                          0110 00065000
         BNZ   @RF00110                                            0110 00066000
*            RPLAREA = RPLAREA + FOUR;  /* THEN ADJUST BUFR PTR TO 0111 00067000
*                                       ALLOW SPACE FOR AN RDW.      */ 00068000
         LH    @10,FOUR                                            0111 00069000
         AL    @10,RPLAREA(,RRPL)                                  0111 00070000
         ST    @10,RPLAREA(,RRPL)                                  0111 00071000
*          ELSE;                        /* NOT V, USE BUFR PTR AS IS.*/ 00072000
@RF00110 DS    0H                                                  0113 00073000
*        ELSE                           /* NOT LOCATE,IS MOVE OR SUBS*/ 00074000
*          IF DCBRECFM(1:2) = '01'B THEN/* V FORMAT ?                */ 00075000
         B     @RC00109                                            0113 00076000
@RF00109 TM    DCBRECFM(RDCB),B'01000000'                          0113 00077000
         BNO   @RF00113                                            0113 00078000
         TM    DCBRECFM(RDCB),B'10000000'                          0113 00079000
         BNZ   @RF00113                                            0113 00080000
*            RPLAREA = R0 + FOUR;       /* YES, SET BUFR PTR TO CALLERS 00081000
*                                       AREA AND LEAVE ROOM FOR RDW. */ 00082000
         LR    @10,R0                                              0114 00083000
         AH    @10,FOUR                                            0114 00084000
         ST    @10,RPLAREA(,RRPL)                                  0114 00085000
*          ELSE                         /* IS U OR F FORMAT          */ 00086000
*            RPLAREA = R0;              /* USE CALLERS BUFR PTR      */ 00087000
*                                                                  0115 00088000
         B     @RC00113                                            0115 00089000
@RF00113 ST    R0,RPLAREA(,RRPL)                                   0115 00090000
*/*******************************************************************/  00091000
*JESGET: GEN   (GET RPL=(RRPL));        /* JES GET REQUEST          */  00092000
@RC00113 DS    0H                                                  0116 00093000
@RC00109 DS    0H                                                  0116 00094000
JESGET   GET RPL=(RRPL)                                                 00095000
*/*******************************************************************/  00096000
*                                                                  0117 00097000
*        IF R15 = 0 THEN                /* NORMAL JES RETURN ? Y02082*/ 00098000
         LTR   R15,R15                                             0117 00099000
         BNZ   @RF00117                                            0117 00100000
*          IF DCBRECFM(1:2) = '10'B &   /* BUT IF F FORMAT AND Y02082*/ 00101000
*          RPLRLEN ^= RPLBUFL THEN      /* NOT EXACT LENGTH,   Y02082*/ 00102000
         TM    DCBRECFM(RDCB),B'10000000'                          0118 00103000
         BNO   @RF00118                                            0118 00104000
         TM    DCBRECFM(RDCB),B'01000000'                          0118 00105000
         BNZ   @RF00118                                            0118 00106000
         CLC   RPLRLEN(4,RRPL),RPLBUFL(RRPL)                       0118 00107000
         BE    @RF00118                                            0118 00108000
*            DO;                        /* FORCE LOGICAL ERROR Y02082*/ 00109000
*              RPLRTNCD = 8;            /* SET LOGICAL ERR     Y02082*/ 00110000
         MVI   RPLRTNCD(RRPL),X'08'                                0120 00111000
*              RPLERRCD = RPLINBUF;     /* SET LENGTH ERR      Y02144*/ 00112000
         MVC   RPLERRCD(1,RRPL),RPLINBUF                           0121 00113000
*            END;                       /*                     Y02082*/ 00114000
*          ELSE                         /* VALID NORMAL RETURN Y02082*/ 00115000
*            GO TO FINGET;              /* RESUME NORMAL PATH  Y02082*/ 00116000
*        ELSE                           /* ABNORMAL JES RETURN Y02082*/ 00117000
*          IF RPLRTNCD = 8              /* IS IT LOGICAL ERR,  Y02082*/ 00118000
*          & RPLERRCD = RPLEODER        /* DUE TO END OF DATA  Y02144*/ 00119000
*          & DCBIFLGS(1:2) ^= '11'B THEN/* FOR FIRST TIME?   @ZA15667*/ 00120000
         B     @RC00117                                            0124 00121000
@RF00117 CLI   RPLRTNCD(RRPL),8                                    0124 00122000
         BNE   @RF00124                                            0124 00123000
         CLC   RPLERRCD(1,RRPL),RPLEODER                           0124 00124000
         BNE   @RF00124                                            0124 00125000
         TM    DCBIFLGS(RDCB),B'11000000'                          0124 00126000
         BNO   @RT00124                                            0124 00127000
*             GO TO EODADDR;            /* BRANCH IF END OF FILE     */ 00128000
*          ELSE;                        /* MUST BE A REAL ERROR      */ 00129000
*                                                                  0126 00130000
@RF00124 DS    0H                                                  0127 00131000
*        /* SET THE ERROR INDEX FOR SYNAD HANDLER                    */ 00132000
*        IF RPLRTNCD = '08'X            /* FOR LOGICAL ERROR   Y02144*/ 00133000
*        & RPLERRCD = RPLINBUF THEN     /* DUE TO WRONG LEN    Y02144*/ 00134000
@RC00117 CLI   RPLRTNCD(RRPL),8                                    0127 00135000
         BNE   @RF00127                                            0127 00136000
         CLC   RPLERRCD(1,RRPL),RPLINBUF                           0127 00137000
         BNE   @RF00127                                            0127 00138000
*          CIFLAG1 = ERR4;              /* SET QSAM LEN ERROR  Y02144*/ 00139000
         MVC   CIFLAG1(1,RCICB),ERR4                               0128 00140000
*        ELSE                           /* FOR ANY OTHER,      Y02144*/ 00141000
*          CIFLAG1 = ERR5;              /* SET QSAM READ ERROR Y02144*/ 00142000
*                                                                  0129 00143000
         B     @RC00127                                            0129 00144000
@RF00127 MVC   CIFLAG1(1,RCICB),ERR5                               0129 00145000
*        IF DCBEROPT(2)   = '1'B THEN   /* IF USER EROPT=SKIP        */ 00146000
@RC00127 TM    DCBEROPT(RDCB),B'01000000'                          0130 00147000
         BNO   @RF00130                                            0130 00148000
*          RETREG = ADDR(JESGET);       /* SET FOR ANOTHER GET       */ 00149000
         LA    RETREG,JESGET                                       0131 00150000
*        ELSE                           /* YES                       */ 00151000
*          RETREG = ADDR(FINGET);       /* OTHERWISE TO FINISH       */ 00152000
*                                                                  0132 00153000
         B     @RC00130                                            0132 00154000
@RF00130 LA    RETREG,FINGET                                       0132 00155000
*        GO TO ERROR;                   /* GO TO SUBROUTINE          */ 00156000
*                                                                  0133 00157000
*                                                                  0133 00158000
         B     ERROR                                               0133 00159000
*FINGET: IF DCBRECFM(1:2) = '01'B       /* VARIABLE LENGTH RECORD   */  00160000
*          THEN                         /* IF YES,                  */  00161000
FINGET   TM    DCBRECFM(RDCB),B'01000000'                          0134 00162000
         BNO   @RF00134                                            0134 00163000
         TM    DCBRECFM(RDCB),B'10000000'                          0134 00164000
         BNZ   @RF00134                                            0134 00165000
*            DO;                        /* DO THE FOLLOWING         */  00166000
*              RPLAREA = RPLAREA - FOUR;/* MOVE BUFFER POINTER TO   */  00167000
         LH    @10,FOUR                                            0136 00168000
         L     @09,RPLAREA(,RRPL)                                  0136 00169000
         SLR   @09,@10                                             0136 00170000
         ST    @09,RPLAREA(,RRPL)                                  0136 00171000
*                                       /*   INCLUDE RDW            */  00172000
*              RDW = RPLRLEN + FOUR;    /*PUT REC LGTH IN RDW YM5231*/  00173000
         AL    @10,RPLRLEN(,RRPL)                                  0137 00174000
         STH   @10,RDW(,@09)                                       0137 00175000
*            END;                       /* END OF VLR DO GROUP      */  00176000
*          ELSE;                        /* NOT VLR RECORD           */  00177000
*                                                                  0139 00178000
*                                                                  0139 00179000
@RF00134 DS    0H                                                  0140 00180000
*/*******************************************************************/  00181000
*/*          RETURN TO USER                                         */  00182000
*/*******************************************************************/  00183000
*                                                                  0140 00184000
*        R13 = CIREGBC;                 /* GET POINTER TO USER SAVE */  00185000
         L     R13,CIREGBC(,RCICB)                                 0140 00186000
*        CIREGSV1 = RPLAREA;            /* SET POINTER TO RECORD    */  00187000
         MVC   CIREGSV1(4,R13),RPLAREA(RRPL)                       0141 00188000
*        IF DCBRECFM(1:2) = '10'B       /* IF RECFM IS FIXED    */ 0142 00189000
*          THEN                         /* YES, FIXED               */  00190000
         TM    DCBRECFM(RDCB),B'10000000'                          0142 00191000
         BNO   @RF00142                                            0142 00192000
         TM    DCBRECFM(RDCB),B'01000000'                          0142 00193000
         BZ    @RT00142                                            0142 00194000
*            GO TO FIXRCD;              /* DO NOT UPDATE DCBLRECL   */  00195000
*        IF DCBRECFM(1:2) = '01'B  /*IF RECFM VARIABLE @ZA02426*/  0144 00196000
*          THEN                         /*@ZA02426*/               0144 00197000
@RF00142 TM    DCBRECFM(RDCB),B'01000000'                          0144 00198000
         BNO   @RF00144                                            0144 00199000
         TM    DCBRECFM(RDCB),B'10000000'                          0144 00200000
         BNZ   @RF00144                                            0144 00201000
*            DCBLRECL=RDW;              /*@ZA02426*/               0145 00202000
         L     @10,RPLAREA(,RRPL)                                  0145 00203000
         MVC   DCBLRECL(2,RDCB),RDW(@10)                           0145 00204000
*        ELSE DCBLRECL=RPLRLEN;         /*@ZA02426*/               0146 00205000
         B     @RC00144                                            0146 00206000
@RF00144 MVC   DCBLRECL(2,RDCB),RPLRLEN+2(RRPL)                    0146 00207000
*FIXRCD:                                /* END OF RETURN SETUP      */  00208000
*        GEN (LM R14,R12,12(R13));      /* RESTORE USERS REGISTERS  */  00209000
@RC00144 DS    0H                                                  0147 00210000
FIXRCD   LM R14,R12,12(R13)                                             00211000
*        GEN (BR R14);                  /* RETURN TO USER           */  00212000
         BR R14                                                         00213000
*/*******************************************************************/  00214000
*        GEN   (EJECT);                 /* SKIP TO A NEW PAGE       */  00215000
         EJECT                                                          00216000
*                                                                  0150 00217000
*                                                                  0150 00218000
*/*******************************************************************/  00219000
*/*     END OF DATA EXIT TO QSAM GERR MODULE                        */  00220000
*/*******************************************************************/  00221000
*                                                                  0150 00222000
*EODADDR:                                                          0150 00223000
*        DCBIFLGS (1:2) = '11'B;        /* SET ERROR FLAGS  @ZA15667*/  00224000
EODADDR  OI    DCBIFLGS(RDCB),B'11000000'                          0150 00225000
*        R15 = DCBGERR;                 /* QSAM GERR ADDRESS        */  00226000
         SLR   R15,R15                                             0151 00227000
         ICM   R15,7,DCBGERR(RDCB)                                 0151 00228000
*        R13 = CIREGBC;                 /* GET POINTER TO USER SAVE */  00229000
         L     R13,CIREGBC(,RCICB)                                 0152 00230000
*        GEN;                                                      0153 00231000
         L     R14,TWELVE(R13)          USER RETURN ADDR                00232000
         LM    @0,R12,TWENTY(R13)       RESTORE USERS REGS              00233000
         STM   R14,@8,TWENTY(R13)       STORE USER REGS FOR GERR        00234000
         LR    @2,@1                    DCB ADDR TO R2 FOR GERR         00235000
         BR    R15                      BR TO QSAM GERR                 00236000
*/*******************************************************************/  00237000
*        GEN   (EJECT);                 /* SKIP TO A NEW PAGE       */  00238000
         EJECT                                                          00239000
*                                                                  0155 00240000
*                                                                  0155 00241000
*/*******************************************************************/  00242000
*/*                                                                 */  00243000
*/* PUT ENTRY FROM USER                                             */  00244000
*/*                                                                 */  00245000
*/*******************************************************************/  00246000
*                                                                  0155 00247000
*PUTROUTN:                                                         0155 00248000
*        GEN   (STM R14,R12,12(R13));   /* SAVE USER'S REGISTERS    */  00249000
PUTROUTN STM R14,R12,12(R13)                                            00250000
*        RDCB = R1;                     /* ESTABLISH DCB BASE       */  00251000
         LR    RDCB,R1                                             0156 00252000
*        RCICB = DCBCICB;               /* ESTABLISH CICB BASE      */  00253000
         L     RCICB,DCBCICB(,RDCB)                                0157 00254000
*        RBUF = R0;                     /* SAVE USER BUF ADDRESS    */  00255000
         LR    RBUF,R0                                             0158 00256000
*        GEN   (LA RBUF,0(RBUF));       /* CLEAR HI BYTE    @ZA08245*/  00257000
         LA RBUF,0(RBUF)                                                00258000
*        R11 = R15;                     /* CHANGE BASE REGISTER     */  00259000
         LR    R11,R15                                             0160 00260000
*        GEN;                                                      0161 00261000
         LA    R7,PUTENTRY-GETENTRY     DISPLACEMENT-ENTRY TO BASE      00262000
         SR    R11,R7                   POINT TO GETENTRY               00263000
*/*******************************************************************/  00264000
*                                                                  0162 00265000
*        IF CIFCLOSE = '1'B             /* ENTRY FROM CLOSE         */  00266000
*          THEN                         /* YES                      */  00267000
         TM    CIFCLOSE(RCICB),B'01000000'                         0162 00268000
         BNO   @RF00162                                            0162 00269000
*            CIWK2 = R14;               /* SAVE REG 14 FOR CLOSE    */  00270000
         ST    R14,CIWK2(,RCICB)                                   0163 00271000
*        CIREGBC = R13;                 /* KEEP POINTER TO USER SAVE*/  00272000
@RF00162 ST    R13,CIREGBC(,RCICB)                                 0164 00273000
*        R13 = ADDR(CIREGSAV);          /* POINTER TO CI SAVE AREA  */  00274000
         LA    R13,CIREGSAV(,RCICB)                                0165 00275000
*        RRPL = ADDR(CIRPL);            /* ESTABLISH RPL BASE       */  00276000
*                                                                  0166 00277000
         LA    RRPL,CIRPL(,RCICB)                                  0166 00278000
*/*******************************************************************/  00279000
*/*      TEST FOR LOCATE MODE, RECORD FORMAT TYPE                   */  00280000
*/*******************************************************************/  00281000
*                                                                  0167 00282000
*        IF DCBMACRF(13)  = '1'B        /* LOCATE MODE              */  00283000
*          THEN                         /* YES                      */  00284000
         TM    DCBMACRF+1(RDCB),B'00001000'                        0167 00285000
         BNO   @RF00167                                            0167 00286000
*            RBUF = RPLAREA;            /* SET RBUF = DATA AREA ADR */  00287000
         L     RBUF,RPLAREA(,RRPL)                                 0168 00288000
*          ELSE                         /* NO, PUT MOVE MODE        */  00289000
*            GO TO PUTMOVE;             /* GO TO PROCESS IT         */  00290000
*                                       /* LOCATE MODE, CONTINUE    */  00291000
*        IF CIFFSTP = '0'B              /* TEST IF FIRST PASS       */  00292000
*          THEN                         /* YES, CALLER HAS PROVIDED */  00293000
         TM    CIFFSTP(RCICB),B'10000000'                          0170 00294000
         BNZ   @RF00170                                            0170 00295000
*            DO;                        /* NO DATA FOR PUT YET      */  00296000
*              CIFFSTP = '1'B;          /* CLEAR FIRST PASS CONDIT  */  00297000
         OI    CIFFSTP(RCICB),B'10000000'                          0172 00298000
*              GO TO GOBACK;            /* AND RETURN TO CALLER     */  00299000
         B     GOBACK                                              0173 00300000
*            END;                       /* END OF FIRST PASS LOGIC  */  00301000
*                                       /* NOT FIRST PASS, CONTINUE */  00302000
*        IF DCBRECFM(1:2) = '10'B | DCBRECFM(1:2) = '11'B/*        0175 00303000
*                                          U OR F FORMAT ?          */  00304000
*          THEN                         /* YES, PERFORM CHECKING    */  00305000
@RF00170 TM    DCBRECFM(RDCB),B'10000000'                          0175 00306000
         BNO   @GL00005                                            0175 00307000
         TM    DCBRECFM(RDCB),B'01000000'                          0175 00308000
         BZ    @RT00175                                            0175 00309000
@GL00005 TM    DCBRECFM(RDCB),B'11000000'                          0175 00310000
         BNO   @RF00175                                            0175 00311000
@RT00175 DS    0H                                                  0176 00312000
*            DO;                        /* SEQUENCE REQD FOR COBOL  */  00313000
*              IF DCBRECAD ^= DCBEOBAD  /* TEST 'EOB' CONDITION     */  00314000
*                THEN                   /* NOT 'EOB'                */  00315000
         L     @10,DCBRECAD(,RDCB)                                 0177 00316000
         C     @10,DCBEOBAD(,RDCB)                                 0177 00317000
         BNE   @RT00177                                            0177 00318000
*                  GO TO GOBACK;        /* SUPPRESS PUT             */  00319000
*              IF DCBRECFM(1:2) = '11'B /* U FORMAT ?               */  00320000
*                THEN                   /* YES, CALC RECORD SIZE    */  00321000
         TM    DCBRECFM(RDCB),B'11000000'                          0179 00322000
         BNO   @RF00179                                            0179 00323000
*                  RPLRLEN = DCBRECAD - RPLAREA; /* FROM RECAD VALUE*/  00324000
         SL    @10,RPLAREA(,RRPL)                                  0180 00325000
         ST    @10,RPLRLEN(,RRPL)                                  0180 00326000
*              GO TO JESPUT;            /* GO TO ISSUE PUT          */  00327000
         B     JESPUT                                              0181 00328000
*            END;                       /* END OF U, F GROUP        */  00329000
*                                       /* NOT U OR F, CONTINUE     */  00330000
*        IF DCBRECFM(1:2) = '01'B       /* V FORMAT ?               */  00331000
*          THEN                         /* YES, VARIABLE LENGTH     */  00332000
@RF00175 TM    DCBRECFM(RDCB),B'01000000'                          0183 00333000
         BNO   @RF00183                                            0183 00334000
         TM    DCBRECFM(RDCB),B'10000000'                          0183 00335000
         BNZ   @RF00183                                            0183 00336000
*            IF DCBRECFM(5)   = '1'B    /* SPANNED RECORDS ?        */  00337000
*              THEN                     /* YES, VS                  */  00338000
         TM    DCBRECFM(RDCB),B'00001000'                          0184 00339000
         BO    @RT00184                                            0184 00340000
*                GO TO SPANNED;         /* GO PROCESS SEGMENT       */  00341000
*              ELSE                     /* NO, V ONLY               */  00342000
*                GO TO LENTEST;         /* GO TEST RDW              */  00343000
         B     LENTEST                                             0186 00344000
*                                       /* NOT V FORMAT, RECFM=?    */  00345000
*        GO TO PUTMOVE;                 /* DEFAULT TO PUT-MOVE      */  00346000
         B     PUTMOVE                                             0187 00347000
*/*******************************************************************/  00348000
*/*      PROCESS VARIABLE-SPANNED RECORD SEGMENTS (LOCATE MODE)     */  00349000
*/*******************************************************************/  00350000
*                                                                  0188 00351000
*SPANNED:                                                          0188 00352000
*        IF RDW < FOUR THEN             /* IF A NULL RECORD?  XA01145*/ 00353000
SPANNED  LH    @10,FOUR                                            0188 00354000
         L     @09,RPLAREA(,RRPL)                                  0188 00355000
         LH    @06,RDW(,@09)                                       0188 00356000
         CR    @06,@10                                             0188 00357000
         BL    @RT00188                                            0188 00358000
*          GO TO GOBACK;                /* RETURN...NO DATA   XA01145*/ 00359000
*        CISEGLEN = RDW - FOUR;         /* COMPUTE SEGMENT LENGTH   */  00360000
         SLR   @06,@10                                             0190 00361000
         ST    @06,CISEGLEN(,RCICB)                                0190 00362000
*        IF SEGCC = '00'B               /* IS SEGMENT COMPLETE ?    */  00363000
*          THEN                         /* YES                      */  00364000
         TM    SEGCC(@09),B'00000011'                              0191 00365000
         BNZ   @RF00191                                            0191 00366000
*            DO;                        /* PROCESS COMPLETE RECORD  */  00367000
*              RPLRLEN = 0;             /* SET RECD LENGTH TO 0     */  00368000
         SLR   @10,@10                                             0193 00369000
         ST    @10,RPLRLEN(,RRPL)                                  0193 00370000
*              GO TO COMPLRCD;          /* GO TO WRITE RECORD       */  00371000
         B     COMPLRCD                                            0194 00372000
*            END;                       /* END OF COMPL RCD GROUP   */  00373000
*                                       /* NOT COMPLETE RECORD      */  00374000
*        IF SEGCC = '01'B               /* FIRST SEGMENT OF RECORD ?*/  00375000
*          THEN                         /* YES                      */  00376000
@RF00191 L     @10,RPLAREA(,RRPL)                                  0196 00377000
         TM    SEGCC(@10),B'00000001'                              0196 00378000
         BNO   @RF00196                                            0196 00379000
         TM    SEGCC(@10),B'00000010'                              0196 00380000
         BNZ   @RF00196                                            0196 00381000
*            DO;                        /* PROCESS FIRST SEGMENT    */  00382000
*              RPLRLEN = 0;             /* INITIALIZE RECORD LENGTH */  00383000
         SLR   @10,@10                                             0198 00384000
         ST    @10,RPLRLEN(,RRPL)                                  0198 00385000
*CONTIN01:                              /* POINT TO LAST WORD OF SEG*/  00386000
*              RPLAREA = RPLAREA + CISEGLEN;                       0199 00387000
CONTIN01 L     @10,CISEGLEN(,RCICB)                                0199 00388000
         L     @09,RPLAREA(,RRPL)                                  0199 00389000
         ALR   @09,@10                                             0199 00390000
         ST    @09,RPLAREA(,RRPL)                                  0199 00391000
*              CIRECPTR = RPLAREA;      /* SAVE POINTER             */  00392000
         ST    @09,CIRECPTR(,RCICB)                                0200 00393000
*                                       /* SAVE LAST WORD OF SEG    */  00394000
*              CILWAREA = RPLAREA -> SEGMENT(1:4);                 0201 00395000
         MVC   CILWAREA(4,RCICB),SEGMENT(@09)                      0201 00396000
*              RPLRLEN = RPLRLEN + CISEGLEN;  /* UPDATE RECORD LEN  */  00397000
         AL    @10,RPLRLEN(,RRPL)                                  0202 00398000
         ST    @10,RPLRLEN(,RRPL)                                  0202 00399000
*              RBUF = RPLAREA;          /* PTR FOR NEXT SEGMENT     */  00400000
         LR    RBUF,@09                                            0203 00401000
*              GO TO GOBACK;            /* RETURN TO USER           */  00402000
         B     GOBACK                                              0204 00403000
*            END;                       /* END OF 1ST SEGMENT GROUP */  00404000
*                                                                  0205 00405000
*          ELSE                         /* NOT 1ST SEGMT OF RECORD  */  00406000
*            DO;                        /* SEE IF LAST OR INTERMED  */  00407000
@RF00196 DS    0H                                                  0207 00408000
*              IF SEGCC = '11'B         /* INTERMEDIATE SEGMENT ?   */  00409000
*                THEN                   /* YES                      */  00410000
         L     @10,RPLAREA(,RRPL)                                  0207 00411000
         TM    SEGCC(@10),B'00000011'                              0207 00412000
         BO    @RT00207                                            0207 00413000
*                  GO TO CONTIN01;      /* PREPARE RETURN TO USER   */  00414000
*                ELSE                   /* NO, MUST BE LAST SEGMENT */  00415000
*                  DO;                                             0209 00416000
*                    /* RESTORE LAST WORD OF PRECEDING SEGMENT      */  00417000
*                    CIRECPTR -> SEGMENT(1:4) = CILWAREA;          0210 00418000
*                                                                  0210 00419000
         L     @10,CIRECPTR(,RCICB)                                0210 00420000
         MVC   SEGMENT(4,@10),CILWAREA(RCICB)                      0210 00421000
*COMPLRCD:           /* POINT TO BEGINNING OF RECORD                */  00422000
*                    RPLAREA = CIRAREA + 4;                        0211 00423000
*                                                                  0211 00424000
COMPLRCD L     @10,CIRAREA(,RCICB)                                 0211 00425000
         LA    @09,4                                               0211 00426000
         ALR   @09,@10                                             0211 00427000
         ST    @09,RPLAREA(,RRPL)                                  0211 00428000
*                    RBUF = CIRAREA;    /* INIT RECORD POINTER      */  00429000
*                                                                  0212 00430000
         LR    RBUF,@10                                            0212 00431000
*                    /* UPDATE RECORD LENGTH                        */  00432000
*                    RPLRLEN = RPLRLEN + CISEGLEN;                 0213 00433000
*                                                                  0213 00434000
         L     @10,RPLRLEN(,RRPL)                                  0213 00435000
         AL    @10,CISEGLEN(,RCICB)                                0213 00436000
         ST    @10,RPLRLEN(,RRPL)                                  0213 00437000
*                    GO TO JESPUT;      /* GO TO WRITE RECORD       */  00438000
         B     JESPUT                                              0214 00439000
*                  END;                 /* END OF LAST SEGMT GROUP  */  00440000
*            END;                       /* END OF NOT 1ST SEG GRP   */  00441000
*/*******************************************************************/  00442000
*        GEN   (EJECT);                 /* SKIP TO A NEW PAGE       */  00443000
         EJECT                                                          00444000
*                                                                  0218 00445000
*                                                                  0218 00446000
*/*******************************************************************/  00447000
*/*       THIS ROUTINE HANDLES MOVE MODE OF PUT                     */  00448000
*/*******************************************************************/  00449000
*                                                                  0218 00450000
*PUTMOVE:                                                          0218 00451000
*                                                                  0218 00452000
*        RPLAREA = RBUF;                /* STORE BUFFER PTR IN RPL  */  00453000
PUTMOVE  ST    RBUF,RPLAREA(,RRPL)                                 0218 00454000
*        IF DCBRECFM(1:2) = '01'B       /* VARIABLE LENGTH RECORD   */  00455000
*          THEN                         /* YES                      */  00456000
         TM    DCBRECFM(RDCB),B'01000000'                          0219 00457000
         BNO   @RF00219                                            0219 00458000
         TM    DCBRECFM(RDCB),B'10000000'                          0219 00459000
         BNZ   @RF00219                                            0219 00460000
*            DO;                        /* DO FOLLOWING FOR VLR     */  00461000
*              IF DCBMACRF(10)  = '1'B & DCBMACRF(16) = '1'B/*     0221 00462000
*                                               DATA MODE SPECIFIED */  00463000
*                THEN                   /* YES                      */  00464000
         TM    DCBMACRF+1(RDCB),B'01000001'                        0221 00465000
         BNO   @RF00221                                            0221 00466000
*                  DO;                                             0222 00467000
*                    RPLRLEN = DCBPRECL;/* GET DATA RECORD LENGTH   */  00468000
         LH    @10,DCBPRECL(,RDCB)                                 0223 00469000
         ST    @10,RPLRLEN(,RRPL)                                  0223 00470000
*                    GO TO JESPUT;      /* GO TO ISSUE PUT          */  00471000
         B     JESPUT                                              0224 00472000
*                  END;                 /* END OF DATA MODE GROUP   */  00473000
*                ELSE                   /* NOT DATA MODE            */  00474000
*                  GO TO LENTEST;       /* GO TEST RDW LENGTH       */  00475000
*            END;                       /* END OF DO GROUP          */  00476000
*          ELSE                         /* NOT VLR                  */  00477000
*            DO;                        /* DO THE FOLLOWING         */  00478000
@RF00219 DS    0H                                                  0229 00479000
*              RPLRLEN = DCBLRECL;      /* SET UP RPL LENGTH        */  00480000
         SLR   @10,@10                                             0229 00481000
         ICM   @10,3,DCBLRECL(RDCB)                                0229 00482000
         ST    @10,RPLRLEN(,RRPL)                                  0229 00483000
*              GO TO JESPUT;            /* BRANCH TO ISSUE JES PUT  */  00484000
         B     JESPUT                                              0230 00485000
*             END;                      /* END OF DO GROUP          */  00486000
*                                                                  0231 00487000
*/********************************************************************/ 00488000
*/*     TEST FOR EXCESS LENGTH FOR VARIABLE LENGTH RECORD            */ 00489000
*/*     NOTE: LOCATE MODE SPANNED RECORDS NOT CHECKED HERE           */ 00490000
*/********************************************************************/ 00491000
*                                                                  0232 00492000
*LENTEST:                               /* EXAMINE CALLER'S RDW      */ 00493000
*                                                                  0232 00494000
*        IF RDW < ZERO THEN             /* IS RDW NEGATIVE   @ZA09636*/ 00495000
LENTEST  L     @10,RPLAREA(,RRPL)                                  0232 00496000
         LH    @10,RDW(,@10)                                       0232 00497000
         C     @10,ZERO                                            0232 00498000
         BNL   @RF00232                                            0232 00499000
*          GEN (DMABCOND 213,SVC=YES,DCB=(RDCB)); /* YES -         0233 00500000
*                                          REQUEST 002 ABEND @ZA09636*/ 00501000
*                                                                  0233 00502000
         DMABCOND 213,SVC=YES,DCB=(RDCB)                                00503000
*        IF RDW < FOUR THEN             /* IS IT A NULL RECORD ?     */ 00504000
@RF00232 LH    @10,FOUR                                            0234 00505000
         L     @09,RPLAREA(,RRPL)                                  0234 00506000
         LH    @09,RDW(,@09)                                       0234 00507000
         CR    @09,@10                                             0234 00508000
         BL    @RT00234                                            0234 00509000
*          GO TO GOBACK;                /* YES, BYPASS PUT PROCESS   */ 00510000
*                                                                  0235 00511000
*        IF DCBRECFM(1:2) = '01'B & DCBRECFM(5)   = '1'B THEN/*    0236 00512000
*                                          SPANNED RECORDS SPECIFIED */ 00513000
         TM    DCBRECFM(RDCB),B'01000000'                          0236 00514000
         BNO   @RF00236                                            0236 00515000
         TM    DCBRECFM(RDCB),B'10000000'                          0236 00516000
         BNZ   @RF00236                                            0236 00517000
         TM    DCBRECFM(RDCB),B'00001000'                          0236 00518000
         BNO   @RF00236                                            0236 00519000
*          DO;                          /* YES DO SPANNED LEN CHECK  */ 00520000
*            IF RDW > DCBLRECL THEN     /* TEST RDW VALUE            */ 00521000
         SLR   @06,@06                                             0238 00522000
         ICM   @06,3,DCBLRECL(RDCB)                                0238 00523000
         CR    @09,@06                                             0238 00524000
         BNH   @RF00238                                            0238 00525000
*              DO;                      /* RDW IS TOO LARGE          */ 00526000
*                RPLRLEN=DCBLRECL-FOUR; /* TRUNC TO LRECL SIZE       */ 00527000
         SLR   @06,@10                                             0240 00528000
         ST    @06,RPLRLEN(,RRPL)                                  0240 00529000
*                GO TO LENTEST3;        /* GO PREPARE FOR JESPUT     */ 00530000
         B     LENTEST3                                            0241 00531000
*              END;                     /* END OF OVERSIZE RECORD    */ 00532000
*            ELSE GO TO LENTEST2;       /* RDW IS ACCEPTABLE         */ 00533000
*          END;                         /* END SPANNED LEN CHECK     */ 00534000
*        ELSE;                          /* NOT SPANNED RECORDS       */ 00535000
*                                                                  0245 00536000
@RF00236 DS    0H                                                  0246 00537000
*        IF RDW > DCBBLKSI - FOUR THEN  /* RDW > MAX ALLOWED ?       */ 00538000
         L     @10,RPLAREA(,RRPL)                                  0246 00539000
         SLR   @09,@09                                             0246 00540000
         ICM   @09,3,DCBBLKSI(RDCB)                                0246 00541000
         SH    @09,FOUR                                            0246 00542000
         CH    @09,RDW(,@10)                                       0246 00543000
         BNL   @RF00246                                            0246 00544000
*          GEN (DMABCOND 213,SVC=YES,DCB=(RDCB)); /* YES,      Y02144   00545000
*                                       REQUEST 002 ABEND            */ 00546000
         DMABCOND 213,SVC=YES,DCB=(RDCB)                                00547000
*        ELSE;                          /* RDW ^> MAX ALLOWED        */ 00548000
*                                                                  0248 00549000
@RF00246 DS    0H                                                  0249 00550000
*LENTEST2:                                                         0249 00551000
*        RPLRLEN = RDW - FOUR;          /* PUT RECORD LENGTH IN RPL  */ 00552000
LENTEST2 L     @10,RPLAREA(,RRPL)                                  0249 00553000
         LH    @10,RDW(,@10)                                       0249 00554000
         SH    @10,FOUR                                            0249 00555000
         ST    @10,RPLRLEN(,RRPL)                                  0249 00556000
*LENTEST3:                                                         0250 00557000
*        RPLAREA = RPLAREA + FOUR;      /* POINT BUFFER PAST RDW     */ 00558000
LENTEST3 LH    @10,FOUR                                            0250 00559000
         AL    @10,RPLAREA(,RRPL)                                  0250 00560000
         ST    @10,RPLAREA(,RRPL)                                  0250 00561000
*/*******************************************************************/  00562000
*                                                                  0251 00563000
*        GEN   (EJECT);                 /* SKIP TO A NEW PAGE       */  00564000
         EJECT                                                          00565000
*                                                                  0252 00566000
*                                                                  0252 00567000
*/*******************************************************************/  00568000
*/*  ISSUE JES PUT REQUEST                                          */  00569000
*/*******************************************************************/  00570000
*                                                                  0252 00571000
*JESPUT:                                                           0252 00572000
*                                                                  0252 00573000
*/*******************************************************************/  00574000
*/* TEST FOR CONTROL CHARACTER SPECIFIED IN DCB                     */  00575000
*/*******************************************************************/  00576000
*                                                                  0252 00577000
*        IF DCBRECFM(6:7) = '10'B | DCBRECFM(6:7) = '01'B          0252 00578000
*          THEN DO;                                                0252 00579000
JESPUT   TM    DCBRECFM(RDCB),B'00000100'                          0252 00580000
         BNO   @GL00007                                            0252 00581000
         TM    DCBRECFM(RDCB),B'00000010'                          0252 00582000
         BZ    @RT00252                                            0252 00583000
@GL00007 TM    DCBRECFM(RDCB),B'00000010'                          0252 00584000
         BNO   @RF00252                                            0252 00585000
         TM    DCBRECFM(RDCB),B'00000100'                          0252 00586000
         BNZ   @RF00252                                            0252 00587000
@RT00252 DS    0H                                                  0253 00588000
*            RPLCCHAR = RPLAREA;        /* PTR TO CONTROL CHARACTER */  00589000
         L     @10,RPLAREA(,RRPL)                                  0254 00590000
         ST    @10,RPLCCHAR(,RRPL)                                 0254 00591000
*            RPLAREA = RPLAREA + ONE;   /* STORE BUFFER POINTER     */  00592000
         LH    @09,ONE                                             0255 00593000
         ALR   @10,@09                                             0255 00594000
         ST    @10,RPLAREA(,RRPL)                                  0255 00595000
*            RPLRLEN = RPLRLEN - ONE;   /* STORE ADJUSTED LENGTH    */  00596000
         LCR   @09,@09                                             0256 00597000
         AL    @09,RPLRLEN(,RRPL)                                  0256 00598000
         ST    @09,RPLRLEN(,RRPL)                                  0256 00599000
*               END;                    /* END OF DO GROUP          */  00600000
*          ELSE;                                                   0258 00601000
@RF00252 DS    0H                                                  0259 00602000
*/*******************************************************************/  00603000
*                                                                  0259 00604000
*        GEN (PUT RPL=(RRPL));          /* JES PUT REQUEST          */  00605000
*                                                                  0259 00606000
         PUT RPL=(RRPL)                                                 00607000
*/*******************************************************************/  00608000
*/*  LOAD BUFFER ADDRESS INTO REGISTER ONE AND RETURN               */  00609000
*/*******************************************************************/  00610000
*                                                                  0260 00611000
*        IF R15 ^= 0 THEN               /* ABNORMAL RETURN          */  00612000
         LTR   R15,R15                                             0260 00613000
         BZ    @RF00260                                            0260 00614000
*          DO;                                                     0261 00615000
*            CIFLAG1 = ERR6;            /* SET QSAM WRITE ERR  Y02144*/ 00616000
         MVC   CIFLAG1(1,RCICB),ERR6                               0262 00617000
*            RETREG = ADDR(GOBACK);     /* SET SUBROUTINE RETURN    */  00618000
         LA    RETREG,GOBACK                                       0263 00619000
*            GOTO ERROR;                /* AND GO TO SUBROUTINE     */  00620000
         B     ERROR                                               0264 00621000
*          END;                                                    0265 00622000
*                                                                  0265 00623000
*GOBACK:                                                           0266 00624000
*        R13 = CIREGBC;                 /* GET PTR TO USER SAVE AREA */ 00625000
@RF00260 DS    0H                                                  0266 00626000
GOBACK   L     R13,CIREGBC(,RCICB)                                 0266 00627000
*        CIREGSV1 = RBUF;               /* SAVE BUFFER ADDR IN USERS    00628000
*                                          REG 1 LOCATION.           */ 00629000
*                                                                  0267 00630000
         ST    RBUF,CIREGSV1(,R13)                                 0267 00631000
*        IF DCBMACRF(13)  = '1'B        /* PUT LOCATE MODE          */  00632000
*          THEN                         /* YES                      */  00633000
         TM    DCBMACRF+1(RDCB),B'00001000'                        0268 00634000
         BNO   @RF00268                                            0268 00635000
*            DO;                        /* DO FOLLOWING             */  00636000
*                                                                  0269 00637000
*              IF DCBRECFM(1:2) = '01'B THEN/*                     0270 00638000
*                                          IF V FORMAT,       XA01145*/ 00639000
         TM    DCBRECFM(RDCB),B'01000000'                          0270 00640000
         BNO   @RF00270                                            0270 00641000
         TM    DCBRECFM(RDCB),B'10000000'                          0270 00642000
         BNZ   @RF00270                                            0270 00643000
*                RBUF -> RDW = 0;       /* CLEAR OUT RDW      XA01145*/ 00644000
*                                                                  0271 00645000
         SLR   @10,@10                                             0271 00646000
         STH   @10,RDW(,RBUF)                                      0271 00647000
*              IF DCBRECFM(1:2) = '01'B & DCBRECFM(5)   = '1'B/*   0272 00648000
*                                          SPANNED RECORDS ?        */  00649000
*                THEN                   /* YES, SPANNED RECORDS     */  00650000
@RF00270 TM    DCBRECFM(RDCB),B'01000000'                          0272 00651000
         BNO   @RF00272                                            0272 00652000
         TM    DCBRECFM(RDCB),B'10000000'                          0272 00653000
         BNZ   @RF00272                                            0272 00654000
         TM    DCBRECFM(RDCB),B'00001000'                          0272 00655000
         BNO   @RF00272                                            0272 00656000
*                  /* RETURN REMAINDER OF BLOCK TO USER IN R0. THIS */  00657000
*                  /* IS USED FOR SPANNED RECORDS ONLY.             */  00658000
*                  CIREGSV0 = CIRAREA + RPLBUFL - RBUF;            0273 00659000
         L     @10,CIRAREA(,RCICB)                                 0273 00660000
         AL    @10,RPLBUFL(,RRPL)                                  0273 00661000
         SLR   @10,RBUF                                            0273 00662000
         ST    @10,CIREGSV0(,R13)                                  0273 00663000
*                ELSE;                  /* NOT SPANNED RECORDS      */  00664000
@RF00272 DS    0H                                                  0275 00665000
*              IF DCBRECFM(1:2) = '10'B | DCBRECFM(1:2) = '11'B/*  0275 00666000
*                                          F OR U FORMAT ?          */  00667000
*                THEN                   /* YES, MAINTAIN DCB FIELDS */  00668000
         TM    DCBRECFM(RDCB),B'10000000'                          0275 00669000
         BNO   @GL00009                                            0275 00670000
         TM    DCBRECFM(RDCB),B'01000000'                          0275 00671000
         BZ    @RT00275                                            0275 00672000
@GL00009 TM    DCBRECFM(RDCB),B'11000000'                          0275 00673000
         BNO   @RF00275                                            0275 00674000
@RT00275 DS    0H                                                  0276 00675000
*                  DO;                  /* FOR COBOL PROGRAMS       */  00676000
*                    DCBRECAD = RBUF + DCBLRECL; /* SET 'NEXT' BUFR */  00677000
         LR    @10,RBUF                                            0277 00678000
         SLR   @09,@09                                             0277 00679000
         ICM   @09,3,DCBLRECL(RDCB)                                0277 00680000
         ALR   @10,@09                                             0277 00681000
         ST    @10,DCBRECAD(,RDCB)                                 0277 00682000
*                    DCBEOBAD = DCBRECAD;  /* SET 'EOB' CONDITION   */  00683000
         ST    @10,DCBEOBAD(,RDCB)                                 0278 00684000
*                  END;                 /* END OF U/F GROUP         */  00685000
*              RPLRLEN = DCBLRECL;      /* SET LENGTH FOR NEXT PUT  */  00686000
@RF00275 SLR   @10,@10                                             0280 00687000
         ICM   @10,3,DCBLRECL(RDCB)                                0280 00688000
         ST    @10,RPLRLEN(,RRPL)                                  0280 00689000
*              RPLAREA = RBUF;          /* RESET PTR TO RPLAREA     */  00690000
         ST    RBUF,RPLAREA(,RRPL)                                 0281 00691000
*            END;                       /* END OF DO GROUP          */  00692000
*/*******************************************************************/  00693000
*        GEN   (EJECT);                 /* SKIP TO A NEW PAGE       */  00694000
@RF00268 DS    0H                                                  0283 00695000
         EJECT                                                          00696000
*                                                                  0284 00697000
*                                                                  0284 00698000
*/*******************************************************************/  00699000
*/* IF PUT REQUEST IS FROM CLOSE, REGISTERS ARE NOT RESTORED        */  00700000
*/*******************************************************************/  00701000
*                                                                  0284 00702000
*                                                                  0284 00703000
*        IF CIFCLOSE = '1'B             /* WAS ENTRY FROM CLOSE RTN */  00704000
*          THEN                         /* YES                      */  00705000
         TM    CIFCLOSE(RCICB),B'01000000'                         0284 00706000
         BNO   @RF00284                                            0284 00707000
*            DO;                                                   0285 00708000
*              R14 = CIWK2;             /* RESTORE REGISTER 14      */  00709000
         L     R14,CIWK2(,RCICB)                                   0286 00710000
*              GOTO CLOSE;              /* GO RETURN TO CLOSE       */  00711000
         B     CLOSE                                               0287 00712000
*            END;                       /* END OF DO GROUP          */  00713000
*          ELSE;                                                   0289 00714000
@RF00284 DS    0H                                                  0290 00715000
*          GEN;                                                    0290 00716000
         LM    R14,R12,TWELVE(R13)      /* RESTORE USER'S REGSISTER */  00717000
*/*******************************************************************/  00718000
*CLOSE:  GEN   (BR R14);                /*   RETURN TO USER         */  00719000
CLOSE    BR R14                                                         00720000
*/*******************************************************************/  00721000
*        GEN   (EJECT);                 /* SKIP TO A NEW PAGE       */  00722000
         EJECT                                                          00723000
*                                                                  0293 00724000
*                                                                  0293 00725000
*/*******************************************************************/  00726000
*/*  SEE IF ERROR PROCESSING IS REQUIRED                            */  00727000
*/*******************************************************************/  00728000
*                                                                  0293 00729000
*ERROR:                                                            0293 00730000
*        IF CIFCLOSE = '1'B THEN        /* ENTRY FROM CLOSE  XA00008*/  00731000
ERROR    TM    CIFCLOSE(RCICB),B'01000000'                         0293 00732000
         BNO   @RF00293                                            0293 00733000
*          GOTO RETREG;                 /* YES - DON'T GO    XA00008*/  00734000
         BR    RETREG                                              0294 00735000
*                                       /* TO SYNAD ROUTINE  XA00008*/  00736000
*                                                                  0295 00737000
*        IF CIFERROR = '0'B THEN        /* SYNAD RTN NOT YET INVOKED*/  00738000
@RF00293 TM    CIFERROR(RCICB),B'00000100'                         0295 00739000
         BNZ   @RF00295                                            0295 00740000
*          DO;                          /* NO                       */  00741000
*            R0 = ADDR(CISYNNAM);       /* COMING FROM INTERF. RTN  */  00742000
         LA    R0,CISYNNAM(,RCICB)                                 0297 00743000
*            GEN  (LOAD  EPLOC=(0));    /* LOAD SYNAD ROUTINE       */  00744000
         LOAD  EPLOC=(0)                                                00745000
*            R15 = R0;                  /* SET UP ADDRESS FOR CALL  */  00746000
         LR    R15,R0                                              0299 00747000
*            R1 = RRPL;                 /* SET UP LINKAGE AS IF     */  00748000
         LR    R1,RRPL                                             0300 00749000
*            GEN (BALR R14,R15);        /* GO TO SYNAD ROUTINE      */  00750000
         BALR R14,R15                                                   00751000
*            R0 = ADDR(CISYNNAM);       /* POINT TO NAME AGAIN      */  00752000
         LA    R0,CISYNNAM(,RCICB)                                 0302 00753000
*            GEN (DELETE EPLOC=(0));    /* AND DELETE SYNAD MODULE  */  00754000
         DELETE EPLOC=(0)                                               00755000
*          END;                         /* END OF PROCESSING FOR NOT*/  00756000
*        CIFERROR = '0'B;               /* TURN OFF 'SYNAD ENTERED' */  00757000
@RF00295 NI    CIFERROR(RCICB),B'11111011'                         0305 00758000
*        GOTO RETREG;                   /* AND EXIT ERROR PROCESSING*/  00759000
         BR    RETREG                                              0306 00760000
*/*******************************************************************/  00761000
*        GEN   (EJECT);                 /* SKIP TO A NEW PAGE       */  00762000
         EJECT                                                          00763000
*                                                                  0308 00764000
*                                                                  0308 00765000
*/********************************************************************/ 00766000
*/*                                                                  */ 00767000
*/* ENTRY POINTS FOR RELSE, CNTRL,  AND TRUNC                        */ 00768000
*/*                                                                  */ 00769000
*/********************************************************************/ 00770000
*                                                                  0308 00771000
*RELSERTN:                              /* RELSE EP                  */ 00772000
*TRUNCRTN:                              /* TRUNC EP                  */ 00773000
*CNTRLRTN:                              /* CNTRL EP            XM3766*/ 00774000
*NOOPRTN:                               /* INVALID EP (NO-OP)        */ 00775000
*                                                                  0308 00776000
*/********************************************************************/ 00777000
*/* BECAUSE NO FUNCTION IS PERFORMED BY CI, CONTROL IS RETURNED      */ 00778000
*/*                                          TO THE USER.            */ 00779000
*/********************************************************************/ 00780000
*                                                                  0308 00781000
*                                                                  0308 00782000
*        GEN   (BR 14);                 /* RETURN TO USER OR CLOSE   */ 00783000
RELSERTN DS    0H                                                  0308 00784000
TRUNCRTN DS    0H                                                  0308 00785000
CNTRLRTN DS    0H                                                  0308 00786000
NOOPRTN  BR 14                                                          00787000
*/********************************************************************/ 00788000
*        GEN   (EJECT);                 /* SKIP TO A NEW PAGE       */  00789000
         EJECT                                                          00790000
*                                                                  0310 00791000
*                                                                  0310 00792000
*/*******************************************************************/  00793000
*/*                                                                 */  00794000
*/*  PUTX ROUTINE                                                   */  00795000
*/*                                                                 */  00796000
*/*******************************************************************/  00797000
*                                                                  0310 00798000
*PUTXRTN:                                                          0310 00799000
*        GEN (STM R14,R12,12(R13));     /* SAVE USERS REGISTERS     */  00800000
PUTXRTN  STM R14,R12,12(R13)                                            00801000
*        RBUF = R0;                     /* SAVE POINTER TO INPUT DCB*/  00802000
         LR    RBUF,R0                                             0311 00803000
*        RDCB = R1;                     /* ESTABLISH DCB BASE       */  00804000
         LR    RDCB,R1                                             0312 00805000
*        RCICB = DCBCICB;               /* ESTABLISH CICB BASE      */  00806000
         L     RCICB,DCBCICB(,RDCB)                                0313 00807000
*        R11 = R15;                     /* SET UP BASE REGISTER     */  00808000
         LR    R11,R15                                             0314 00809000
*        GEN;                                                      0315 00810000
         LA    R7,PUTENTRY-GETENTRY     DISPLACEMENT-ENTRY TO BASE      00811000
         SR    R11,R7                   POINT TO GETENTRY               00812000
*/*******************************************************************/  00813000
*                                                                  0316 00814000
*        CIREGBC = R13;                 /* BACK POINTER TO USER SAVE*/  00815000
         ST    R13,CIREGBC(,RCICB)                                 0316 00816000
*        R13 = ADDR(CIREGSAV);          /* SET CI SAVE ADDRESS      */  00817000
         LA    R13,CIREGSAV(,RCICB)                                0317 00818000
*        RRPL = ADDR(CIRPL);            /* ESTABLISH RPL BASE       */  00819000
*                                                                  0318 00820000
         LA    RRPL,CIRPL(,RCICB)                                  0318 00821000
*/*******************************************************************/  00822000
*/* RBUF POINTS TO THE INPUT DCB, WHICH CONTAINS THE ADDRESS OF THE */  00823000
*/* INPUT RECORD TO BE WRITTEN OUT BY PUTX FOR SIMPLE BUFFERING,    */  00824000
*/* OR THE ADDR OF A CCW WHICH POINTS TO THE RECORD FOR EXCHANGE    */  00825000
*/* BUFFERING.                                                      */  00826000
*/* THIS ROUTINE PUTS THE BUFFER ADDR IN RBUF AND BRANCHES TO THE   */  00827000
*/* PUT MOVE ROUTINE.                                               */  00828000
*/*******************************************************************/  00829000
*                                                                  0319 00830000
*        R7 = RBUF;                     /* INPUT DCB ADDR           */  00831000
         LR    R7,RBUF                                             0319 00832000
*        RBUF = R7 ->DCBRECAD;          /* ADDR OF INPUT BUFFER     */  00833000
         L     RBUF,DCBRECAD(,R7)                                  0320 00834000
*        IF R7 ->DCBCIND1(8) = '1'B     /* EXCH BUFFERING SUPPORTED?*/  00835000
*         THEN                          /* YES, DCBRECAD POINTS TO  */  00836000
         TM    DCBCIND1(R7),B'00000001'                            0321 00837000
         BNO   @RF00321                                            0321 00838000
*          DO;                          /* CCW WHICH POINTS TO THE  */  00839000
*           RBUF = RBUF -> IOBCCW;      /* THE BUFFER               */  00840000
         L     RBUF,IOBCCW(,RBUF)                                  0323 00841000
*          END;                                                    0324 00842000
*        GO TO PUTMOVE;                 /* GO TO PUT MOVE ROUTINE   */  00843000
         B     PUTMOVE                                             0325 00844000
*/*******************************************************************/  00845000
*        END   IGG019DJ                 /* END OF QSAM PUT MODULE   */  00846000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 00847000
*/*%INCLUDE SYSLIB  (IFGSDCB )                                        * 00848000
*/*%INCLUDE SYSLIB  (IFGJCICB)                                        * 00849000
*/*%INCLUDE SYSLIB  (IFGRPL  )                                        * 00850000
*/*%INCLUDE SYSLIB  (IDARMRCD)                                        * 00851000
*;                                                                 0326 00852000
@EL00001 DS    0H                                                  0326 00853000
@EF00001 DS    0H                                                  0326 00854000
@ER00001 BR    @14                                                 0326 00855000
@DATA    DS    0H                                                       00856000
@DATD    DSECT                                                          00857000
         DS    0F                                                       00858000
@ZTEMPS  DS    C                                                        00859000
@ZTEMPND EQU   *                                                        00860000
@ZLEN    EQU   @ZTEMPND-@ZTEMPS                                         00861000
@TEMPS   EQU   @ZTEMPS                                                  00862000
@L       EQU   @ZLEN                                                    00863000
IGG019DJ CSECT                                                          00864000
         DS    0F                                                       00865000
@DATD    DSECT                                                          00866000
         DS    0D                                                       00867000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                00868000
@ENDDATD EQU   *                                                        00869000
@DATEND  EQU   *                                                        00870000
IGG019DJ CSECT                                                          00871000
         DS    0F                                                       00872000
@SIZDATD DC    AL1(0)                                                   00873000
         DC    AL3(@ENDDATD-@DATD)                                      00874000
@SIZ001  EQU   @SIZDATD                                                 00875000
         DS    0D                                                       00876000
GREQTYP  DC    XL4'00000000'                                            00877000
PREQTYP  DC    XL4'00000001'                                            00878000
ZERO     DC    F'0'                                                     00879000
ONE      DC    AL2(1)                                                   00880000
FOUR     DC    AL2(4)                                                   00881000
RPLDVOL  DC    AL1(4)                                                   00882000
RPLMOKEY DC    AL1(8)                                                   00883000
RPLWTBFR DC    AL1(12)                                                  00884000
RPLEODER DC    AL1(4)                                                   00885000
RPLDUP   DC    AL1(8)                                                   00886000
RPLSEQCK DC    AL1(12)                                                  00887000
RPLNOREC DC    AL1(16)                                                  00888000
RPLEXCL  DC    AL1(20)                                                  00889000
RPLNOMNT DC    AL1(24)                                                  00890000
RPLNOEXT DC    AL1(28)                                                  00891000
RPLINRBA DC    AL1(32)                                                  00892000
RPLNOKR  DC    AL1(36)                                                  00893000
RPLNOVRT DC    AL1(40)                                                  00894000
RPLINBUF DC    AL1(44)                                                  00895000
RPLNOPLH DC    AL1(64)                                                  00896000
RPLINACC DC    AL1(68)                                                  00897000
RPLINKEY DC    AL1(72)                                                  00898000
RPLINADR DC    AL1(76)                                                  00899000
RPLERSER DC    AL1(80)                                                  00900000
RPLINLOC DC    AL1(84)                                                  00901000
RPLNOPTR DC    AL1(88)                                                  00902000
RPLINUPD DC    AL1(92)                                                  00903000
RPLKEYCH DC    AL1(96)                                                  00904000
RPLDLCER DC    AL1(100)                                                 00905000
RPLINVP  DC    AL1(104)                                                 00906000
RPLINLEN DC    AL1(108)                                                 00907000
RPLKEYLC DC    AL1(112)                                                 00908000
RPLINLRQ DC    AL1(116)                                                 00909000
RPLINTCB DC    AL1(120)                                                 00910000
RPLSRLOC DC    AL1(132)                                                 00911000
RPLARSRK DC    AL1(136)                                                 00912000
RPLSRISG DC    AL1(140)                                                 00913000
RPLNBRCD DC    AL1(144)                                                 00914000
RPLNXPTR DC    AL1(148)                                                 00915000
RPLNOBFR DC    AL1(152)                                                 00916000
RPLIRRNO DC    AL1(192)                                                 00917000
RPLRRADR DC    AL1(196)                                                 00918000
RPLPAACI DC    AL1(200)                                                 00919000
RPLPUTBK DC    AL1(204)                                                 00920000
RPLRDERD DC    AL1(4)                                                   00921000
RPLRDERI DC    AL1(8)                                                   00922000
RPLRDERS DC    AL1(12)                                                  00923000
RPLWTERD DC    AL1(16)                                                  00924000
RPLWTERI DC    AL1(20)                                                  00925000
RPLWTERS DC    AL1(24)                                                  00926000
RPLBASER DC    AL1(0)                                                   00927000
RPLBASUM DC    AL1(1)                                                   00928000
RPLAIXER DC    AL1(2)                                                   00929000
RPLAIXUM DC    AL1(3)                                                   00930000
RPLUPGER DC    AL1(4)                                                   00931000
RPLUPGUM DC    AL1(5)                                                   00932000
ERR4     DC    AL1(4)                                                   00933000
ERR5     DC    AL1(5)                                                   00934000
ERR6     DC    AL1(6)                                                   00935000
PATCH    DC    CL60' '                                                  00936000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00937000
@01      EQU   01                                                       00938000
@02      EQU   02                                                       00939000
@03      EQU   03                                                       00940000
@04      EQU   04                                                       00941000
@05      EQU   05                                                       00942000
@06      EQU   06                                                       00943000
@07      EQU   07                                                       00944000
@08      EQU   08                                                       00945000
@09      EQU   09                                                       00946000
@10      EQU   10                                                       00947000
@11      EQU   11                                                       00948000
@12      EQU   12                                                       00949000
@13      EQU   13                                                       00950000
@14      EQU   14                                                       00951000
@15      EQU   15                                                       00952000
@0       EQU   00                                                       00953000
@1       EQU   01                                                       00954000
@2       EQU   02                                                       00955000
@3       EQU   03                                                       00956000
@4       EQU   04                                                       00957000
@5       EQU   05                                                       00958000
@6       EQU   06                                                       00959000
@7       EQU   07                                                       00960000
@8       EQU   08                                                       00961000
@9       EQU   09                                                       00962000
@A       EQU   10                                                       00963000
@B       EQU   11                                                       00964000
@C       EQU   12                                                       00965000
@D       EQU   13                                                       00966000
@E       EQU   14                                                       00967000
@F       EQU   15                                                       00968000
R0       EQU   @00                                                      00969000
R1       EQU   @01                                                      00970000
RRPL     EQU   @02                                                      00971000
RCICB    EQU   @03                                                      00972000
RDCB     EQU   @04                                                      00973000
RBUF     EQU   @05                                                      00974000
R7       EQU   @07                                                      00975000
RETREG   EQU   @08                                                      00976000
R11      EQU   @11                                                      00977000
R12      EQU   @12                                                      00978000
R13      EQU   @13                                                      00979000
R14      EQU   @14                                                      00980000
R15      EQU   @15                                                      00981000
IFGSDCB  EQU   0                                                        00982000
DCBBUFCB EQU   IFGSDCB+20                                               00983000
DCBIOBAD EQU   IFGSDCB+28                                               00984000
@NM00003 EQU   IFGSDCB+32                                               00985000
DCBHIARC EQU   @NM00003                                                 00986000
DCBBFTEK EQU   DCBHIARC                                                 00987000
DCBRECFM EQU   IFGSDCB+36                                               00988000
DCBDDNAM EQU   IFGSDCB+40                                               00989000
DCBMACRF EQU   DCBDDNAM+2                                               00990000
DCBIFLGS EQU   DCBDDNAM+4                                               00991000
DCBREAD  EQU   IFGSDCB+49                                               00992000
DCBWRITE EQU   DCBREAD                                                  00993000
DCBGET   EQU   DCBWRITE                                                 00994000
DCBPUT   EQU   DCBGET                                                   00995000
DCBCHECK EQU   IFGSDCB+53                                               00996000
DCBGERR  EQU   DCBCHECK                                                 00997000
DCBCIND1 EQU   IFGSDCB+60                                               00998000
DCBBLKSI EQU   IFGSDCB+62                                               00999000
DCBIOBA  EQU   IFGSDCB+68                                               01000000
DCBCICB  EQU   DCBIOBA                                                  01001000
DCBEOBAD EQU   IFGSDCB+72                                               01002000
DCBLCCW  EQU   DCBEOBAD                                                 01003000
DCBEOBR  EQU   DCBLCCW                                                  01004000
@NM00004 EQU   IFGSDCB+76                                               01005000
DCBEOBW  EQU   @NM00004                                                 01006000
DCBRECAD EQU   DCBEOBW                                                  01007000
DCBDIRCT EQU   IFGSDCB+80                                               01008000
DCBLRECL EQU   IFGSDCB+82                                               01009000
@NM00005 EQU   IFGSDCB+84                                               01010000
DCBEROPT EQU   @NM00005                                                 01011000
DCBCNTRL EQU   @NM00005+1                                               01012000
DCBNOTE  EQU   DCBCNTRL                                                 01013000
DCBPRECL EQU   IFGSDCB+90                                               01014000
IFGJCICB EQU   0                                                        01015000
CIDUMIOB EQU   IFGJCICB                                                 01016000
CISYNNAM EQU   IFGJCICB+108                                             01017000
CIREGSAV EQU   IFGJCICB+116                                             01018000
CIREGBC  EQU   CIREGSAV+4                                               01019000
CIFLAGS  EQU   IFGJCICB+188                                             01020000
CIFLAG1  EQU   CIFLAGS                                                  01021000
CIFLAG2  EQU   CIFLAGS+1                                                01022000
CIFLAG3  EQU   CIFLAGS+2                                                01023000
CIFFSTP  EQU   CIFLAG3                                                  01024000
CIFCLOSE EQU   CIFLAG3                                                  01025000
CIFERROR EQU   CIFLAG3                                                  01026000
CIRPL    EQU   IFGJCICB+192                                             01027000
CILWAREA EQU   IFGJCICB+304                                             01028000
CIIOCNT  EQU   IFGJCICB+308                                             01029000
CISEGLEN EQU   CIIOCNT                                                  01030000
CIRAREA  EQU   IFGJCICB+316                                             01031000
CIRECPTR EQU   IFGJCICB+320                                             01032000
CIWK2    EQU   IFGJCICB+332                                             01033000
CISVCLST EQU   IFGJCICB+336                                             01034000
CISYNADA EQU   CISVCLST                                                 01035000
CIBLDL   EQU   CISVCLST+4                                               01036000
CIBSP    EQU   CISVCLST+8                                               01037000
CIFEOV   EQU   CISVCLST+12                                              01038000
CISTOW   EQU   CISVCLST+16                                              01039000
IFGRPL   EQU   0                                                        01040000
RPLCOMN  EQU   IFGRPL                                                   01041000
RPLIDWD  EQU   RPLCOMN                                                  01042000
RPLLEN   EQU   RPLIDWD+3                                                01043000
RPLECB   EQU   RPLCOMN+8                                                01044000
RPLFDBWD EQU   RPLCOMN+12                                               01045000
RPLFDBK  EQU   RPLFDBWD+1                                               01046000
RPLRTNCD EQU   RPLFDBK                                                  01047000
RPLCNDCD EQU   RPLFDBK+1                                                01048000
RPLCMPON EQU   RPLCNDCD                                                 01049000
RPLFDB2  EQU   RPLCMPON                                                 01050000
RPLERRCD EQU   RPLCNDCD+1                                               01051000
RPLFDB3  EQU   RPLERRCD                                                 01052000
RPLKEYLE EQU   RPLCOMN+16                                               01053000
RPLCCHAR EQU   RPLCOMN+20                                               01054000
RPLAREA  EQU   RPLCOMN+32                                               01055000
RPLARG   EQU   RPLCOMN+36                                               01056000
RPLOPTCD EQU   RPLCOMN+40                                               01057000
RPLOPT1  EQU   RPLOPTCD                                                 01058000
RPLECBSW EQU   RPLOPT1                                                  01059000
RPLOPT2  EQU   RPLOPTCD+1                                               01060000
RPLADR   EQU   RPLOPT2                                                  01061000
RPLOPT3  EQU   RPLOPTCD+2                                               01062000
RPLNXTRP EQU   RPLCOMN+44                                               01063000
RPLRLEN  EQU   RPLCOMN+48                                               01064000
RPLBUFL  EQU   RPLCOMN+52                                               01065000
RPLOPTC2 EQU   RPLCOMN+56                                               01066000
RPLOPT5  EQU   RPLOPTC2                                                 01067000
RPLWRTYP EQU   RPLOPT5                                                  01068000
RPLOPT6  EQU   RPLOPTC2+1                                               01069000
RPLUNTYP EQU   RPLOPT6                                                  01070000
RPLOPT7  EQU   RPLOPTC2+2                                               01071000
RPLCNOPT EQU   RPLOPT7                                                  01072000
RPLOPT8  EQU   RPLOPTC2+3                                               01073000
RPLRBAR  EQU   RPLCOMN+60                                               01074000
RPLAIXID EQU   RPLRBAR+2                                                01075000
RPLEXTDS EQU   RPLCOMN+68                                               01076000
RPLEXTD1 EQU   RPLEXTDS                                                 01077000
BUFFER   EQU   0                                                        01078000
ALLROW   EQU   BUFFER                                                   01079000
RDW      EQU   ALLROW                                                   01080000
@NM00016 EQU   ALLROW+2                                                 01081000
SEGCC    EQU   @NM00016                                                 01082000
REGSAVE  EQU   0                                                        01083000
CIREGSV0 EQU   REGSAVE+20                                               01084000
CIREGSV1 EQU   REGSAVE+24                                               01085000
SEGMENT  EQU   0                                                        01086000
IOBCCW   EQU   0                                                        01087000
*                                      START UNREFERENCED COMPONENTS    01088000
CIREGSV7 EQU   REGSAVE+48                                               01089000
@NM00019 EQU   REGSAVE+28                                               01090000
CIREGSVF EQU   REGSAVE+16                                               01091000
@NM00018 EQU   REGSAVE                                                  01092000
BUFREC   EQU   BUFFER+4                                                 01093000
FILLER   EQU   ALLROW+3                                                 01094000
@NM00017 EQU   @NM00016                                                 01095000
RPLERMSA EQU   RPLCOMN+72                                               01096000
RPLEMLEN EQU   RPLCOMN+70                                               01097000
RPLACTIV EQU   RPLCOMN+69                                               01098000
RPLBRANC EQU   RPLEXTD1                                                 01099000
RPLNIB   EQU   RPLEXTD1                                                 01100000
@NM00015 EQU   RPLEXTD1                                                 01101000
RPLEXIT  EQU   RPLEXTD1                                                 01102000
RPLNEXIT EQU   RPLEXTD1                                                 01103000
RPLEXSCH EQU   RPLEXTD1                                                 01104000
RPLDDDD  EQU   RPLRBAR+4                                                01105000
@NM00014 EQU   RPLRBAR+3                                                01106000
@NM00013 EQU   RPLAIXID                                                 01107000
RPLAXPKP EQU   RPLAIXID                                                 01108000
RPLAIXPC EQU   RPLRBAR                                                  01109000
RPLRSV88 EQU   RPLOPT8                                                  01110000
RPLUNCON EQU   RPLOPT8                                                  01111000
RPLACTV  EQU   RPLOPT8                                                  01112000
RPLSESS  EQU   RPLOPT8                                                  01113000
RPLPEND  EQU   RPLOPT8                                                  01114000
RPLODPRM EQU   RPLOPT8                                                  01115000
RPLODACP EQU   RPLOPT8                                                  01116000
RPLODACQ EQU   RPLOPT8                                                  01117000
RPLRSV78 EQU   RPLOPT7                                                  01118000
RPLRSV77 EQU   RPLOPT7                                                  01119000
RPLRLSOP EQU   RPLOPT7                                                  01120000
RPLTPOST EQU   RPLOPT7                                                  01121000
RPLQOPT  EQU   RPLOPT7                                                  01122000
RPLCNIMM EQU   RPLCNOPT                                                 01123000
RPLCNANY EQU   RPLCNOPT                                                 01124000
RPLCNALL EQU   RPLCNOPT                                                 01125000
RPLRSV68 EQU   RPLOPT6                                                  01126000
RPLRSV67 EQU   RPLOPT6                                                  01127000
RPLLOCK  EQU   RPLOPT6                                                  01128000
RPLNCOND EQU   RPLOPT6                                                  01129000
RPLCOND  EQU   RPLOPT6                                                  01130000
RPLEOT   EQU   RPLUNTYP                                                 01131000
RPLEOM   EQU   RPLUNTYP                                                 01132000
RPLEOB   EQU   RPLUNTYP                                                 01133000
RPLWROPT EQU   RPLOPT5                                                  01134000
RPLNODE  EQU   RPLOPT5                                                  01135000
RPLERACE EQU   RPLWRTYP                                                 01136000
RPLEAU   EQU   RPLWRTYP                                                 01137000
RPLNERAS EQU   RPLWRTYP                                                 01138000
RPLPSOPT EQU   RPLOPT5                                                  01139000
RPLSSNIN EQU   RPLOPT5                                                  01140000
RPLDLGIN EQU   RPLOPT5                                                  01141000
RPLCHAIN EQU   RPLNXTRP                                                 01142000
RPLOPT4  EQU   RPLOPTCD+3                                               01143000
RPLALIGN EQU   RPLOPT3                                                  01144000
RPLFMT   EQU   RPLOPT3                                                  01145000
RPLFLD   EQU   RPLOPT3                                                  01146000
RPLVFY   EQU   RPLOPT3                                                  01147000
RPLBLK   EQU   RPLOPT3                                                  01148000
RPLSFORM EQU   RPLOPT3                                                  01149000
RPLEODS  EQU   RPLOPT3                                                  01150000
RPLNSP   EQU   RPLOPT2                                                  01151000
RPLUPD   EQU   RPLOPT2                                                  01152000
RPLWAITX EQU   RPLOPT2                                                  01153000
RPLLRD   EQU   RPLOPT2                                                  01154000
RPLBWD   EQU   RPLOPT2                                                  01155000
RPLCNV   EQU   RPLOPT2                                                  01156000
RPLADD   EQU   RPLADR                                                   01157000
RPLKEY   EQU   RPLOPT2                                                  01158000
RPLECBIN EQU   RPLECBSW                                                 01159000
RPLGEN   EQU   RPLOPT1                                                  01160000
RPLKGE   EQU   RPLOPT1                                                  01161000
RPLASY   EQU   RPLOPT1                                                  01162000
RPLSKP   EQU   RPLOPT1                                                  01163000
RPLSEQ   EQU   RPLOPT1                                                  01164000
RPLDIR   EQU   RPLOPT1                                                  01165000
RPLLOC   EQU   RPLOPT1                                                  01166000
RPLDAF   EQU   RPLARG+2                                                 01167000
RPLSAF   EQU   RPLARG                                                   01168000
RPLTCBPT EQU   RPLCOMN+28                                               01169000
RPLDACB  EQU   RPLCOMN+24                                               01170000
RPLSTRID EQU   RPLCOMN+18                                               01171000
RPLKEYL  EQU   RPLKEYLE                                                 01172000
RPLRDSOH EQU   RPLFDB3                                                  01173000
RPLRLG   EQU   RPLFDB3                                                  01174000
RPLLGFRC EQU   RPLFDB3                                                  01175000
RPLREOT  EQU   RPLFDB3                                                  01176000
RPLREOM  EQU   RPLFDB3                                                  01177000
RPLREOB  EQU   RPLFDB3                                                  01178000
RPLSV32  EQU   RPLFDB3                                                  01179000
RPLUINPT EQU   RPLFDB3                                                  01180000
RPLSTSAV EQU   RPLFDB2                                                  01181000
RPLCUERR EQU   RPLFDB2                                                  01182000
RPLDLGFL EQU   RPLFDB2                                                  01183000
RPLIOERR EQU   RPLFDB2                                                  01184000
RPLDVUNS EQU   RPLFDB2                                                  01185000
RPLATND  EQU   RPLFDB2                                                  01186000
RPLRVID  EQU   RPLFDB2                                                  01187000
RPLERLK  EQU   RPLFDB2                                                  01188000
RPLERREG EQU   RPLRTNCD                                                 01189000
RPLSTAT  EQU   RPLFDBWD                                                 01190000
RPLPOST  EQU   RPLECB                                                   01191000
RPLWAIT  EQU   RPLECB                                                   01192000
RPLPLHPT EQU   RPLCOMN+4                                                01193000
RPLLEN2  EQU   RPLLEN                                                   01194000
RPLREQ   EQU   RPLIDWD+2                                                01195000
RPLSTYP  EQU   RPLIDWD+1                                                01196000
RPLID    EQU   RPLIDWD                                                  01197000
CISTOWRC EQU   CISTOW                                                   01198000
CIFEOVRC EQU   CIFEOV                                                   01199000
CIBSPRC  EQU   CIBSP                                                    01200000
CIBLDLRC EQU   CIBLDL                                                   01201000
CISYNRC  EQU   CISYNADA                                                 01202000
CIWK1    EQU   IFGJCICB+328                                             01203000
CISAMWA  EQU   IFGJCICB+324                                             01204000
CIBLKPTR EQU   IFGJCICB+312                                             01205000
CIFDBCK  EQU   IFGJCICB+284                                             01206000
CIRPLEXT EQU   IFGJCICB+268                                             01207000
CIFLAG4  EQU   CIFLAGS+3                                                01208000
@NM00012 EQU   CIFLAG3                                                  01209000
CIFPOINT EQU   CIFLAG3                                                  01210000
CIFVSEOB EQU   CIFLAG3                                                  01211000
CIFVSRI  EQU   CIFLAG3                                                  01212000
CIFRAGM  EQU   CIFLAG3                                                  01213000
@NM00011 EQU   CIFLAG2                                                  01214000
CIFMDEVT EQU   CIFLAG2                                                  01215000
CIFMDSOR EQU   CIFLAG2                                                  01216000
CIREGS   EQU   CIREGSAV+12                                              01217000
CIREGFC  EQU   CIREGSAV+8                                               01218000
@NM00010 EQU   CIREGSAV                                                 01219000
CIACBED  EQU   IFGJCICB+88                                              01220000
CIACBD   EQU   IFGJCICB+32                                              01221000
CIDCBPTR EQU   CIDUMIOB+28                                              01222000
@NM00009 EQU   CIDUMIOB+24                                              01223000
CIRESID  EQU   CIDUMIOB+20                                              01224000
@NM00008 EQU   CIDUMIOB+16                                              01225000
CIECBPTR EQU   CIDUMIOB+12                                              01226000
CIIOB    EQU   CIDUMIOB+8                                               01227000
@NM00007 EQU   CIDUMIOB+5                                               01228000
CIECBCD  EQU   CIDUMIOB+4                                               01229000
CINXTIOB EQU   CIDUMIOB                                                 01230000
DCBEOB   EQU   IFGSDCB+92                                               01231000
@NM00006 EQU   IFGSDCB+88                                               01232000
DCBPOINT EQU   DCBNOTE                                                  01233000
DCBQSWS  EQU   DCBDIRCT                                                 01234000
DCBCCCW  EQU   DCBRECAD                                                 01235000
DCBNCP   EQU   DCBEOBR                                                  01236000
DCBOFFSW EQU   IFGSDCB+67                                               01237000
DCBOFFSR EQU   IFGSDCB+66                                               01238000
DCBWCPL  EQU   IFGSDCB+65                                               01239000
DCBWCPO  EQU   IFGSDCB+64                                               01240000
DCBCIND2 EQU   IFGSDCB+61                                               01241000
DCBSYNAD EQU   IFGSDCB+57                                               01242000
DCBIOBL  EQU   IFGSDCB+56                                               01243000
DCBPERR  EQU   DCBGERR                                                  01244000
DCBOPTCD EQU   IFGSDCB+52                                               01245000
DCBMACR  EQU   DCBPUT+1                                                 01246000
DCBIFLG  EQU   DCBPUT                                                   01247000
DCBOFLGS EQU   IFGSDCB+48                                               01248000
DCBDEBAD EQU   DCBDDNAM+5                                               01249000
DCBTIOT  EQU   DCBDDNAM                                                 01250000
DCBEXLST EQU   IFGSDCB+37                                               01251000
DCBEODAD EQU   IFGSDCB+33                                               01252000
DCBBFALN EQU   DCBBFTEK                                                 01253000
DCBSVCXL EQU   DCBIOBAD                                                 01254000
DCBDSORG EQU   IFGSDCB+26                                               01255000
DCBBUFL  EQU   IFGSDCB+24                                               01256000
DCBBUFNO EQU   DCBBUFCB                                                 01257000
@NM00002 EQU   IFGSDCB+16                                               01258000
@NM00001 EQU   IFGSDCB                                                  01259000
*                                      END UNREFERENCED COMPONENTS      01260000
@RF00118 EQU   FINGET                                                   01261000
@RT00124 EQU   EODADDR                                                  01262000
@RC00130 EQU   ERROR                                                    01263000
@RT00142 EQU   FIXRCD                                                   01264000
@RF00167 EQU   PUTMOVE                                                  01265000
@RT00177 EQU   GOBACK                                                   01266000
@RF00179 EQU   JESPUT                                                   01267000
@RT00184 EQU   SPANNED                                                  01268000
@RF00184 EQU   LENTEST                                                  01269000
@RF00183 EQU   PUTMOVE                                                  01270000
@RT00188 EQU   GOBACK                                                   01271000
@RT00207 EQU   CONTIN01                                                 01272000
@RF00221 EQU   LENTEST                                                  01273000
@RT00234 EQU   GOBACK                                                   01274000
@RF00238 EQU   LENTEST2                                                 01275000
@RF00321 EQU   PUTMOVE                                                  01276000
@EL01    EQU   @EL00001                                                 01277000
@ENDDATA EQU   *                                                        01278000
         END   IGG019DJ,(C'PLS1815',0701,76336)                         01279000
