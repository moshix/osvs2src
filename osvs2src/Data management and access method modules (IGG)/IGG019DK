         TITLE 'IGG019DK -- SAM-SI BSAM PROCESSING MODULE.             *00001000
                        '                                               00002000
IGG019DK CSECT                          START CSECT AT ZERO             00003000
        DC    A(ENTREAD)                READ ROUTINE ENTRY              00004000
        DC    A(ENTWRITE)               WRITE ROUTINE ENTRY             00005000
        DC    A(ENTCHECK)               CHECK ROUTINE ENTRY             00006000
        DC    A(ENTCNTRL)               CNTRL ROUTINE ENTRY             00007000
        DC    A(ENTNOTE)                NOTE ROUTINE ENTRY              00008000
        DC    A(ENTPOINT)               POINT ROUTINE ENTRY             00009000
         EJECT                                                          00010000
         EJECT                                                          00011000
         EJECT                                                          00012000
         EJECT                                                          00013000
         EJECT                                                          00014000
         EJECT                                                          00015000
         EJECT                                                          00016000
         EJECT                                                          00017000
         USING  *,15                                                    00018000
ENTREAD  SAVE  (14,12)                                                  00019000
*       RDECB = R1;                     /* PTR TO DECB  (REG 7)     */  00020000
         LR    RDECB,R1                                            0117 00021000
*       RDCB  = DECDCBAD;               /* PTR TO DCB   (REG 8)     */  00022000
         L     RDCB,DECDCBAD(,RDECB)                               0118 00023000
*       R6 = 0;                         /* OFFSET INTO BRANCH TABLE */  00024000
         SLR   R6,R6                                               0119 00025000
*       GEN (B  BEGIN-ENTREAD(,R15));   /* BRANCH DOWN              */  00026000
*                                                                  0120 00027000
         B  BEGIN-ENTREAD(,R15)                                         00028000
*/*******************************************************************/  00029000
*                                                                  0121 00030000
*                                                                  0121 00031000
*ENTWRITE:                              /* ENTRY FOR WRITE MACRO    */  00032000
*       GEN (SAVE  (14,12));            /* SAVE BSAM USER'S REGS    */  00033000
ENTWRITE SAVE  (14,12)                                                  00034000
*       RDECB = R1;                     /* PTR TO DECB  (REG 7)     */  00035000
         LR    RDECB,R1                                            0122 00036000
*       RDCB  = DECDCBAD;               /* PTR TO DCB   (REG 8)     */  00037000
         L     RDCB,DECDCBAD(,RDECB)                               0123 00038000
*       R6 = 4;                         /* OFFSET INTO BRANCH TABLE */  00039000
         LA    R6,4                                                0124 00040000
*       GEN  (B  BEGIN-ENTWRITE(,R15)); /* BRANCH DOWN              */  00041000
*                                                                  0125 00042000
         B  BEGIN-ENTWRITE(,R15)                                        00043000
*/*******************************************************************/  00044000
*                                                                  0126 00045000
*                                                                  0126 00046000
*ENTCHECK:                              /* ENTRY FOR CHECK MACRO    */  00047000
*       GEN (SAVE  (14,12));            /* SAVE BSAM USER'S REGS    */  00048000
ENTCHECK SAVE  (14,12)                                                  00049000
*       RDECB = R1;                     /* PTR TO DECB  (REG 7)     */  00050000
         LR    RDECB,R1                                            0127 00051000
*       RDCB  = DECDCBAD;               /* PTR TO DCB   (REG 8)     */  00052000
         L     RDCB,DECDCBAD(,RDECB)                               0128 00053000
*       R6 = 8;                         /* OFFSET INTO BRANCH TABLE */  00054000
         LA    R6,8                                                0129 00055000
*       GEN (B  BEGIN-ENTCHECK(,R15));  /* BRANCH DOWN              */  00056000
*                                                                  0130 00057000
         B  BEGIN-ENTCHECK(,R15)                                        00058000
*/*******************************************************************/  00059000
*                                                                  0131 00060000
*                                                                  0131 00061000
*ENTCNTRL:                              /* ENTRY FOR CNTRL MACRO    */  00062000
*       GEN (SAVE  (14,12));            /* SAVE BSAM USER'S REGS    */  00063000
ENTCNTRL SAVE  (14,12)                                                  00064000
*       RDCB = R1;                      /* PTR TO DCB (REG 8)       */  00065000
         LR    RDCB,R1                                             0132 00066000
*       R6 = 12;                        /* OFFSET INTO BRANCH TABLE */  00067000
         LA    R6,12                                               0133 00068000
*       GEN (B  BEGIN-ENTCNTRL(,R15));  /* BRANCH DOWN              */  00069000
*                                                                  0134 00070000
         B  BEGIN-ENTCNTRL(,R15)                                        00071000
*/*******************************************************************/  00072000
*                                                                  0135 00073000
*                                                                  0135 00074000
*ENTPOINT:                              /* ENTRY FOR POINT MACRO    */  00075000
*       GEN (B ENTNOTE-ENTPOINT(,R15)); /* BRANCH IF NOTE           */  00076000
ENTPOINT B ENTNOTE-ENTPOINT(,R15)                                       00077000
*       GEN (SAVE  (14,12));            /* SAVE BSAM USER'S REGS    */  00078000
         SAVE  (14,12)                                                  00079000
*       RDCB = R1;                      /* PTR TO DCB (REG 8)       */  00080000
         LR    RDCB,R1                                             0137 00081000
*       R6 = 20;                        /* OFFSET INTO BRANCH TABLE */  00082000
         LA    R6,20                                               0138 00083000
*       GEN  (B  BEGIN-ENTPOINT(,R15)); /* BRANCH DOWN              */  00084000
*                                                                  0139 00085000
         B  BEGIN-ENTPOINT(,R15)                                        00086000
*/*******************************************************************/  00087000
*                                                                  0140 00088000
*                                                                  0140 00089000
*ENTNOTE:                               /* ENTRY FOR NOTE MACRO     */  00090000
*       GEN (SAVE  (14,12));            /* SAVE BSAM USER'S REGS    */  00091000
ENTNOTE  SAVE  (14,12)                                                  00092000
*       RDCB = R1;                      /* PTR TO DCB (REG 8)       */  00093000
         LR    RDCB,R1                                             0141 00094000
*       R6 = 16;                        /* OFFSET INTO BRANCH TABLE */  00095000
*                                                                  0142 00096000
         LA    R6,16                                               0142 00097000
*/*******************************************************************/  00098000
*                                                                  0143 00099000
*                                                                  0143 00100000
*        GEN;                           /* GENERATE ASSEMBLY CODE   */  00101000
*                                                                  0143 00102000
BEGIN    BALR  R11,0                    LOAD R11 FOR BASE REG           00103000
         USING *,R11                    ASSIGN ASSEMBLER BASE REG       00104000
*/*******************************************************************/  00105000
*        GEN   (EJECT);                 /* SKIP TO A NEW PAGE       */  00106000
         EJECT                                                          00107000
*                                                                  0145 00108000
*                                                                  0145 00109000
*/*******************************************************************/  00110000
*                                                                  0145 00111000
*                                                                  0145 00112000
*        RCICB = DCBCICB;               /* PTR TO JCICB (REG 4)     */  00113000
*                                                                  0145 00114000
         L     RCICB,DCBCICB(,RDCB)                                0145 00115000
*/*******************************************************************/  00116000
*                                                                  0146 00117000
*                                                                  0146 00118000
*        GEN;                           /* GENERATE ASSEMBLY CODE   */  00119000
*                                                                  0146 00120000
         ST    R13,CIREGBC(,RCICB)      BACKCHAIN                       00121000
         LA    R13,CIREGSAV(,RCICB)     ADDR THIS SAVEAREA              00122000
         USING @DATD-CIWK1,RCICB        ADDRESSIBILITY FOR TEMPS        00123000
*/*******************************************************************/  00124000
*                                                                  0147 00125000
*                                                                  0147 00126000
*        RRPL=ADDR(CIRPL);              /* PTR TO RPL (REG 2)       */  00127000
*                                                                  0147 00128000
         LA    RRPL,CIRPL(,RCICB)                                  0147 00129000
*/******BRANCH TO APPROPRIATE PROCESSING ROUTINE*********************/  00130000
*                                                                  0148 00131000
*                                                                  0148 00132000
*        R6 = R6+ADDR(BRNCHTAB);        /* POINT TO BRNCH TAB ENTRY */  00133000
         LA    @12,BRNCHTAB                                        0148 00134000
         ALR   R6,@12                                              0148 00135000
*        GEN (L    R6,0(,R6)                GET ADDRESS CORRECT RTN);   00136000
         L    R6,0(,R6)                GET ADDRESS CORRECT RTN          00137000
*        GEN (BR   R6                       GO TO CORRECT ROUTINE );    00138000
*                                                                  0150 00139000
*                                                                  0150 00140000
         BR   R6                       GO TO CORRECT ROUTINE            00141000
*        RELEASE (R6);                  /* RELEASE TO COMPILER      */  00142000
*                                                                  0151 00143000
*/*******************************************************************/  00144000
*        GEN   (EJECT);                 /* SKIP TO A NEW PAGE       */  00145000
         EJECT                                                          00146000
*                                                                  0153 00147000
*                                                                  0153 00148000
*/*******************************************************************/  00149000
*/*                                                                 */  00150000
*/*             JES TRANSLATOR BSAM READ ROUTINE                    */  00151000
*/*                                                                 */  00152000
*/*******************************************************************/  00153000
*                                                                  0153 00154000
*                                                                  0153 00155000
*READRTN: ;                             /* ENTER READ ROUTINE       */  00156000
*                                                                  0153 00157000
*                                                                  0153 00158000
READRTN  DS    0H                                                  0154 00159000
*/*******************************************************************/  00160000
*                                                                  0154 00161000
*                                                                  0154 00162000
*        RPLDECB = RDECB;               /* RPL PTR TO DECB          */  00163000
*                                                                  0154 00164000
         ST    RDECB,RPLDECB(,RRPL)                                0154 00165000
*/*******************************************************************/  00166000
*                                                                  0155 00167000
*                                                                  0155 00168000
*        IF CIFPOINT = '0'B             /* TEST IF POINT ERROR      */  00169000
*          THEN DECSDECB = 0;           /* NO - ZERO OUT ENTIRE ECB */  00170000
         TM    CIFPOINT(RCICB),B'00000010'                         0155 00171000
         BNZ   @RF00155                                            0155 00172000
         SLR   @12,@12                                             0156 00173000
         ST    @12,DECSDECB(,RDECB)                                0156 00174000
*          ELSE DO;                     /* INVALID POINT REQUEST    */  00175000
         B     @RC00155                                            0157 00176000
@RF00155 DS    0H                                                  0158 00177000
*               DECSDECB = '41200000'X; /* SET ERROR CODE IN ECB    */  00178000
         MVC   DECSDECB(4,RDECB),@CF00501                          0158 00179000
*               GO TO EXIT;             /* RETURN TO CALLER         */  00180000
         B     EXIT                                                0159 00181000
*               END;                                               0160 00182000
*                                                                  0160 00183000
*/*******************************************************************/  00184000
*                                                                  0161 00185000
*                                                                  0161 00186000
*        RPLAREA = DECAREA;             /* INIT RPL I/O AREA FIELD  */  00187000
*                                                                  0161 00188000
@RC00155 L     @12,DECAREA(,RDECB)                                 0161 00189000
         ST    @12,RPLAREA(,RRPL)                                  0161 00190000
*/*******************************************************************/  00191000
*                                                                  0162 00192000
*                                                                  0162 00193000
*                                                                  0162 00194000
*        IF DCBRECFM(1:2) = '01'B       /* VARIABLE LENGTH RECORD   */  00195000
*          THEN DO;                     /* YES, DO FOLLOWING        */  00196000
         TM    DCBRECFM(RDCB),B'01000000'                          0162 00197000
         BNO   @RF00162                                            0162 00198000
         TM    DCBRECFM(RDCB),B'10000000'                          0162 00199000
         BNZ   @RF00162                                            0162 00200000
*            RPLAREA = RPLAREA + 8;     /* MOVE PTR > BDW & RDW     */  00201000
         AH    @12,@CH00059                                        0164 00202000
         ST    @12,RPLAREA(,RRPL)                                  0164 00203000
*            GO TO GTCNT;               /* GO TO SET I/O COUNTER    */  00204000
         B     GTCNT                                               0165 00205000
*               END;                    /* END OF DO GROUP          */  00206000
*          ELSE;                        /* NO, NOT VARIABLE LENGTH  */  00207000
*                                                                  0167 00208000
@RF00162 DS    0H                                                  0168 00209000
*/*******************************************************************/  00210000
*                                                                  0168 00211000
*                                                                  0168 00212000
*        IF DCBRECFM(4)   = '1'B        /* TEST IF BLOCKED RECORDS  */  00213000
*          THEN DO;                     /* YES - MULTIPLE RECORDS   */  00214000
         TM    DCBRECFM(RDCB),B'00010000'                          0168 00215000
         BNO   @RF00168                                            0168 00216000
*            CIIOCNT = DCBBLKSI/DCBLRECL;/* NUMBER OF BLOCKS        */  00217000
         SLR   @15,@15                                             0170 00218000
         ICM   @15,3,DCBBLKSI(RDCB)                                0170 00219000
         SLR   @14,@14                                             0170 00220000
         SLR   @12,@12                                             0170 00221000
         ICM   @12,3,DCBLRECL(RDCB)                                0170 00222000
         DR    @14,@12                                             0170 00223000
         ST    @15,CIIOCNT(,RCICB)                                 0170 00224000
*            CIWK1 = CIIOCNT;           /* FOR TEST FOR SHORT BLOCK */  00225000
         ST    @15,CIWK1(,RCICB)                                   0171 00226000
*            GO TO GETIT;               /* GO TO GET MACRO          */  00227000
         B     GETIT                                               0172 00228000
*               END;                    /* END OF DO GROUP          */  00229000
*          ELSE;                        /* UNBLOCKED RECORDS        */  00230000
*                                                                  0174 00231000
@RF00168 DS    0H                                                  0175 00232000
*/*******************************************************************/  00233000
*                                                                  0175 00234000
*                                                                  0175 00235000
*GTCNT:  CIIOCNT = 1;                   /* SET I/O COUNTER TO 1     */  00236000
*                                                                  0175 00237000
*                                                                  0175 00238000
GTCNT    MVC   CIIOCNT(4,RCICB),@CF00061                           0175 00239000
*/*******************************************************************/  00240000
*/*                                                                 */  00241000
*/*            ISSUE JES GET MACRO                                  */  00242000
*/*                                                                 */  00243000
*/*******************************************************************/  00244000
*                                                                  0176 00245000
*                                                                  0176 00246000
*GETIT:  GEN  (GET   RPL=(RRPL));       /* JES GET MACRO            */  00247000
*                                                                  0176 00248000
GETIT    GET   RPL=(RRPL)                                               00249000
*/******AFTER RETURN FROM JES ***************************************/  00250000
*                                                                  0177 00251000
*                                                                  0177 00252000
*                                                                  0177 00253000
*        IF R15 = 0 THEN                /* NORMAL COMPLETION?  Y02082*/ 00254000
         LTR   R15,R15                                             0177 00255000
         BNZ   @RF00177                                            0177 00256000
*          IF DCBRECFM(1:2) = '10'B     /* YES, BUT IF FIXED,  Y02082*/ 00257000
*           & RPLRLEN ^= RPLBUFL THEN   /* AND NOT EXACT LEN,  Y02082*/ 00258000
         TM    DCBRECFM(RDCB),B'10000000'                          0178 00259000
         BNO   @RF00178                                            0178 00260000
         TM    DCBRECFM(RDCB),B'01000000'                          0178 00261000
         BNZ   @RF00178                                            0178 00262000
         CLC   RPLRLEN(4,RRPL),RPLBUFL(RRPL)                       0178 00263000
         BE    @RF00178                                            0178 00264000
*            DO;                        /* TREAT AS LOGIC ERR. Y02082*/ 00265000
*              RPLRTNCD = '08'X;        /* SET LOGIC ERROR     Y02082*/ 00266000
         MVI   RPLRTNCD(RRPL),X'08'                                0180 00267000
*              RPLERRCD = RPLINBUF;     /* SET WRONG LEN CODE  Y02144*/ 00268000
         MVC   RPLERRCD(1,RRPL),RPLINBUF                           0181 00269000
*            END;                       /*                     Y02082*/ 00270000
*          ELSE                         /* NO ERROR CONDITION  Y02082*/ 00271000
*            DO;                        /* ENCOUNTERED.        Y02082*/ 00272000
         B     @RC00178                                            0183 00273000
@RF00178 DS    0H                                                  0184 00274000
*              DECBCODE = '7F'X;        /* SET NORMAL ECB CODE Y02082*/ 00275000
         MVI   DECBCODE(RDECB),X'7F'                               0184 00276000
*              GO TO RECV;              /* GO CHECK FOR V FMT  Y02082*/ 00277000
         B     RECV                                                0185 00278000
*            END;                       /*                     Y02082*/ 00279000
*        ELSE;                          /* AN ERROR EXISTS     Y02082*/ 00280000
@RF00177 DS    0H                                                  0188 00281000
*        IF RPLRTNCD = '08'X            /* FOR LOGICAL ERRORS, Y02082*/ 00282000
*           & RPLERRCD = RPLEODER THEN  /* DUE TO END OF DATA, Y02144*/ 00283000
@RC00177 CLI   RPLRTNCD(RRPL),8                                    0188 00284000
         BNE   @RF00188                                            0188 00285000
         CLC   RPLERRCD(1,RRPL),RPLEODER                           0188 00286000
         BE    @RT00188                                            0188 00287000
*          GO TO EODADRTN;              /* GO SET UP FOR EODAD Y02082*/ 00288000
*        ELSE                           /* OTHER LOGICAL ERROR Y02082*/ 00289000
*          GO TO QMAPPED;               /* GO SET UP FOR SYNAD Y02082*/ 00290000
*                                                                  0190 00291000
         B     QMAPPED                                             0190 00292000
*/*******************************************************************/  00293000
*                                                                  0191 00294000
*                                                                  0191 00295000
*RECV:   IF DCBRECFM(1:2) = '01'B       /* VARIABLE LENGTH RECORDS  */  00296000
*          THEN DO;                     /* YES, DO FOLLOWING        */  00297000
RECV     TM    DCBRECFM(RDCB),B'01000000'                          0191 00298000
         BNO   @RF00191                                            0191 00299000
         TM    DCBRECFM(RDCB),B'10000000'                          0191 00300000
         BNZ   @RF00191                                            0191 00301000
*            RDW = RPLRLEN + 4;         /* SET LENGTH OF RECORD     */  00302000
         L     @12,RPLAREA(,RRPL)                                  0193 00303000
         LA    @10,4                                               0193 00304000
         L     @09,RPLRLEN(,RRPL)                                  0193 00305000
         ALR   @09,@10                                             0193 00306000
         LR    @06,@12                                             0193 00307000
         AL    @06,@CF00554                                        0193 00308000
         ST    @09,RDW+4(,@06)                                     0193 00309000
*            FILLER = 0;                /* ZERO OUT FILLER          */  00310000
         SLR   @09,@09                                             0194 00311000
         LR    @06,@12                                             0194 00312000
         BCTR  @06,0                                               0194 00313000
         BCTR  @06,0                                               0194 00314000
         STH   @09,FILLER+2(,@06)                                  0194 00315000
*            BDW = RDW + 4;             /* SET LENGTH OF BLOCK      */  00316000
         L     @06,DECAREA(,RDECB)                                 0195 00317000
         AL    @12,@CF00554                                        0195 00318000
         AL    @10,RDW+4(,@12)                                     0195 00319000
         ST    @10,BDW(,@06)                                       0195 00320000
*            FILLERB = 0;               /* ZERO OUT FILLER          */  00321000
         STH   @09,FILLERB(,@06)                                   0196 00322000
*            GO TO REND;                /* BYPASS FOLLOWING TEST    */  00323000
         B     REND                                                0197 00324000
*               END;                    /* END OF DO GROUP          */  00325000
*          ELSE;                        /* NOT VARIABLE LENGTH RCD  */  00326000
*                                                                  0199 00327000
@RF00191 DS    0H                                                  0200 00328000
*/*******************************************************************/  00329000
*                                                                  0200 00330000
*                                                                  0200 00331000
*        CIIOCNT = CIIOCNT - 1;         /* REDUCE I/O COUNTER BY 1  */  00332000
*                                                                  0200 00333000
         L     @12,CIIOCNT(,RCICB)                                 0200 00334000
         BCTR  @12,0                                               0200 00335000
         ST    @12,CIIOCNT(,RCICB)                                 0200 00336000
*        IF CIIOCNT ^= 0                /* MORE RECORDS             */  00337000
*          THEN DO;                     /* YES                      */  00338000
         LTR   @12,@12                                             0201 00339000
         BZ    @RF00201                                            0201 00340000
*            IF DCBLRECL = 0            /* TEST FOR RECORD LENGTH   */  00341000
*               THEN RPLAREA = RPLAREA + DCBBLKSI;/* USE BLKSIZE    */  00342000
         ICM   @12,3,DCBLRECL(RDCB)                                0203 00343000
         BNZ   @RF00203                                            0203 00344000
         SLR   @12,@12                                             0204 00345000
         ICM   @12,3,DCBBLKSI(RDCB)                                0204 00346000
         AL    @12,RPLAREA(,RRPL)                                  0204 00347000
         ST    @12,RPLAREA(,RRPL)                                  0204 00348000
*               ELSE RPLAREA = RPLAREA + DCBLRECL;/* USE RCD LENGTH */  00349000
         B     @RC00203                                            0205 00350000
@RF00203 SLR   @12,@12                                             0205 00351000
         ICM   @12,3,DCBLRECL(RDCB)                                0205 00352000
         AL    @12,RPLAREA(,RRPL)                                  0205 00353000
         ST    @12,RPLAREA(,RRPL)                                  0205 00354000
*            GO TO GETIT;               /* GET ANOTHER RECORD       */  00355000
         B     GETIT                                               0206 00356000
*               END;                    /* END OF DO GROUP          */  00357000
*          ELSE;                        /* NO MORE RECORDS          */  00358000
*                                                                  0208 00359000
@RF00201 DS    0H                                                  0209 00360000
*/*******************************************************************/  00361000
*/*   TEST FOR FIXED BLOCKED RECORDS AND DCBNCP NOT EQUAL TO @ZA29473*/ 00362000
*/*   ONE AND IF FOUND - PLACE RESIDUAL COUNT IN PSEUSE IOB  @ZA29473*/ 00363000
*/********************************************************** @ZA29473*/ 00364000
*                                                                  0209 00365000
*REND:   IF DCBRECFM(1:2) = '10'B & DCBRECFM(4)   = '1'B/*         0209 00366000
*                                          IF FIXED BLOCK RECORDS    */ 00367000
*        & DCBNCP >  '01'X              /* GO STORE RESIDUAL @ZA29473*/ 00368000
*             THEN GO TO FIXBLOCK;      /* IN PSEUDO IOB     @ZA29473*/ 00369000
REND     TM    DCBRECFM(RDCB),B'10000000'                          0209 00370000
         BNO   @RF00209                                            0209 00371000
         TM    DCBRECFM(RDCB),B'01000000'                          0209 00372000
         BNZ   @RF00209                                            0209 00373000
         TM    DCBRECFM(RDCB),B'00010000'                          0209 00374000
         BNO   @RF00209                                            0209 00375000
         CLI   DCBNCP(RDCB),1                                      0209 00376000
         BH    @RT00209                                            0209 00377000
*        IF DCBRECFM(1:2) = '10'B & DCBRECFM(4)   = '1'B/*         0211 00378000
*                                                            @ZA29473*/ 00379000
*          THEN DECRESDU = RPLRLEN * CIIOCNT;                      0211 00380000
@RF00209 TM    DCBRECFM(RDCB),B'10000000'                          0211 00381000
         BNO   @RF00211                                            0211 00382000
         TM    DCBRECFM(RDCB),B'01000000'                          0211 00383000
         BNZ   @RF00211                                            0211 00384000
         TM    DCBRECFM(RDCB),B'00010000'                          0211 00385000
         BNO   @RF00211                                            0211 00386000
         L     @15,RPLRLEN(,RRPL)                                  0212 00387000
         M     @14,CIIOCNT(,RCICB)                                 0212 00388000
         STH   @15,DECRESDU(,RDECB)                                0212 00389000
*          ELSE DECRESDU = DCBBLKSI - RPLRLEN;                     0213 00390000
*                                                                  0213 00391000
         B     @RC00211                                            0213 00392000
@RF00211 SLR   @12,@12                                             0213 00393000
         ICM   @12,3,DCBBLKSI(RDCB)                                0213 00394000
         SL    @12,RPLRLEN(,RRPL)                                  0213 00395000
         STH   @12,DECRESDU(,RDECB)                                0213 00396000
*        IF DECRESDU < '0000'X          /* TEST IF NEGATIVE         */  00397000
*          THEN DECRESDU = '0000'X;     /* SET TO ZERO VALUE        */  00398000
*                                                                  0214 00399000
@RC00211 CLC   DECRESDU(2,RDECB),@CB00519                          0214 00400000
         BNL   @RF00214                                            0214 00401000
         MVC   DECRESDU(2,RDECB),@CB00519                          0215 00402000
*        CIRESID = DECRESDU;            /* COUNT INTO DUMY IOB Y02082*/ 00403000
@RF00214 SLR   @12,@12                                             0216 00404000
         ICM   @12,3,DECRESDU(RDECB)                               0216 00405000
         ST    @12,CIRESID(,RCICB)                                 0216 00406000
*        DECIOBPT = ADDR(CIIOB);        /* POINT DECB TO 'IOB' Y02082*/ 00407000
*                                                                  0217 00408000
         LA    @12,CIIOB(,RCICB)                                   0217 00409000
         ST    @12,DECIOBPT(,RDECB)                                0217 00410000
*        GO TO EXIT;                    /* RETURN TO REQUESTOR      */  00411000
         B     EXIT                                                0218 00412000
*FIXBLOCK:                              /*                   @ZA29473*/ 00413000
*         DECRESDU = RPLRLEN * CIIOCNT; /*SAVE RESIDUAL CNT  @ZA29473*/ 00414000
FIXBLOCK L     @15,RPLRLEN(,RRPL)                                  0219 00415000
         M     @14,CIIOCNT(,RCICB)                                 0219 00416000
         STH   @15,DECRESDU(,RDECB)                                0219 00417000
*         CIRESID  = DUMMYPTR;          /*POINT TO NEXT IOB  @ZA29473*/ 00418000
         L     @12,CIRESID(,RCICB)                                 0220 00419000
         L     @12,DUMMYPTR(,@12)                                  0220 00420000
         ST    @12,CIRESID(,RCICB)                                 0220 00421000
*         DUMMYCNT = DECRESDU;          /*STORE CNT IN IOB   @ZA29473*/ 00422000
         ST    @15,DUMMYCNT(,@12)                                  0221 00423000
*         DECIOBPT = ADDR(DUMMYIOB);    /*POINT DECB TO IOB  @ZA29473*/ 00424000
         LA    @12,DUMMYIOB(,@12)                                  0222 00425000
         ST    @12,DECIOBPT(,RDECB)                                0222 00426000
*         GO TO EXIT;                   /*RETURN TO REQUESTOR@ZA29473*/ 00427000
         B     EXIT                                                0223 00428000
*/*******************************************************************/  00429000
*        GEN   (EJECT);                 /* SKIP TO A NEW PAGE       */  00430000
         EJECT                                                          00431000
*                                                                  0225 00432000
*                                                                  0225 00433000
*/*******************************************************************/  00434000
*/*                                                                 */  00435000
*/*                 JES TRANSLATOR BSAM WRITE ROUTINE               */  00436000
*/*                                                                 */  00437000
*/*******************************************************************/  00438000
*                                                                  0225 00439000
*                                                                  0225 00440000
*WRITERTN: ;                            /* ENTRY TO WRITE ROUTINE   */  00441000
*                                                                  0225 00442000
WRITERTN DS    0H                                                  0226 00443000
*        DECSDECB=0;                    /* ZERO OUT ENTIRE ECB      */  00444000
*                                                                  0226 00445000
         SLR   @12,@12                                             0226 00446000
         ST    @12,DECSDECB(,RDECB)                                0226 00447000
*        RPLAREA = DECAREA;             /* INIT RPL I/O AREA FIELD  */  00448000
*                                                                  0227 00449000
         MVC   RPLAREA(4,RRPL),DECAREA(RDECB)                      0227 00450000
*        RPLDECB = RDECB;               /* RPL PTR TO DECB          */  00451000
*                                                                  0228 00452000
         ST    RDECB,RPLDECB(,RRPL)                                0228 00453000
*/*******************************************************************/  00454000
*                                                                  0229 00455000
*        IF DCBRECFM(1:2) = '11'B       /* UNDEFINED RECORDS        */  00456000
*          THEN IF DECTYP(1) = '1'B     /* LENGTH SPECIFIED AS 'S'  */  00457000
         TM    DCBRECFM(RDCB),B'11000000'                          0229 00458000
         BNO   @RF00229                                            0229 00459000
*            THEN DO;                   /* YES                      */  00460000
         TM    DECTYP(RDECB),B'10000000'                           0230 00461000
         BNO   @RF00230                                            0230 00462000
*              RPLRLEN = DCBBLKSI;      /* GET LENGTH FROM BLOCKSIZE*/  00463000
         SLR   @12,@12                                             0232 00464000
         ICM   @12,3,DCBBLKSI(RDCB)                                0232 00465000
         ST    @12,RPLRLEN(,RRPL)                                  0232 00466000
*              GO TO WRCNT;             /* PUT ONE RECORD           */  00467000
         B     WRCNT                                               0233 00468000
*                 END;                  /* END OF DO GROUP          */  00469000
*            ELSE DO;                   /* OTHERWISE                */  00470000
@RF00230 DS    0H                                                  0236 00471000
*              RPLRLEN = DECLNGTH;      /* GET LENGTH FROM DECB     */  00472000
         LH    @12,DECLNGTH(,RDECB)                                0236 00473000
         ST    @12,RPLRLEN(,RRPL)                                  0236 00474000
*              GO TO WRCNT;             /* PUT ONE RECORD           */  00475000
         B     WRCNT                                               0237 00476000
*                 END;                  /* END OF DO GROUP          */  00477000
*          ELSE;                        /* NOT UNDEFINED RECORDS    */  00478000
*                                                                  0239 00479000
@RF00229 DS    0H                                                  0240 00480000
*        IF DCBRECFM(1:2) = '10'B       /* FIXED LENGTH RECORD      */  00481000
*          THEN DO;                     /* YES                      */  00482000
         TM    DCBRECFM(RDCB),B'10000000'                          0240 00483000
         BNO   @RF00240                                            0240 00484000
         TM    DCBRECFM(RDCB),B'01000000'                          0240 00485000
         BNZ   @RF00240                                            0240 00486000
*            RPLRLEN = DCBBLKSI;        /* GET LENGTH FROM BLOCKSIZE*/  00487000
         SLR   @12,@12                                             0242 00488000
         ICM   @12,3,DCBBLKSI(RDCB)                                0242 00489000
         ST    @12,RPLRLEN(,RRPL)                                  0242 00490000
*            IF DCBRECFM(4)   = '1'B    /* BLOCKED RECORD FORMAT    */  00491000
*              THEN DO;                 /* YES                      */  00492000
         TM    DCBRECFM(RDCB),B'00010000'                          0243 00493000
         BNO   @RF00243                                            0243 00494000
*                RPLRLEN = DCBLRECL;    /* GET LENGTH FROM DCBLRECL */  00495000
         SLR   @10,@10                                             0245 00496000
         ICM   @10,3,DCBLRECL(RDCB)                                0245 00497000
         ST    @10,RPLRLEN(,RRPL)                                  0245 00498000
*                CIIOCNT = DCBBLKSI/DCBLRECL;  /* DETERMINE COUNTER */  00499000
         LR    @15,@12                                             0246 00500000
         SLR   @14,@14                                             0246 00501000
         DR    @14,@10                                             0246 00502000
         ST    @15,CIIOCNT(,RCICB)                                 0246 00503000
*                GO TO WRITIT;          /* GO TO TEST CONTROL CHAR  */  00504000
         B     WRITIT                                              0247 00505000
*                   END;                /* END OF DO GROUP          */  00506000
*              ELSE GO TO WRCNT;        /* UNBLOCKED RECORD FORMAT  */  00507000
*               END;                    /* END OF DO GROUP          */  00508000
*          ELSE;                        /* NOT FIXED OR FIXED BLOCK */  00509000
*                                                                  0251 00510000
@RF00240 DS    0H                                                  0252 00511000
*/*******************************************************************/  00512000
*                                                                  0252 00513000
*        /* VARIABLE LENGTH SPANNED RECORDS ?                       */  00514000
*        IF DCBRECFM(1:2)='01'B & DCBRECFM(5)='1'B THEN            0252 00515000
*                                                                  0252 00516000
         TM    DCBRECFM(RDCB),B'01000000'                          0252 00517000
         BNO   @RF00252                                            0252 00518000
         TM    DCBRECFM(RDCB),B'10000000'                          0252 00519000
         BNZ   @RF00252                                            0252 00520000
         TM    DCBRECFM(RDCB),B'00001000'                          0252 00521000
         BNO   @RF00252                                            0252 00522000
*          DO;                          /* YES PROCESS VS RECORDS    */ 00523000
*            IF BDWLL > DCBBLKSI THEN   /* BDW GT BLKSIZE?    XA01441*/ 00524000
         L     @12,DECAREA(,RDECB)                                 0254 00525000
         SLR   @10,@10                                             0254 00526000
         ICM   @10,3,DCBBLKSI(RDCB)                                0254 00527000
         CH    @10,BDWLL(,@12)                                     0254 00528000
         BL    @RT00254                                            0254 00529000
*              GO TO ABEND;             /* BAD BDW, TERMINATE XA01441*/ 00530000
*                                                                  0255 00531000
*            RPLAREA = RPLAREA + 8;     /* ADJUST PTR TO RPLAREA    */  00532000
*                                                                  0256 00533000
         LA    @12,8                                               0256 00534000
         AL    @12,RPLAREA(,RRPL)                                  0256 00535000
         ST    @12,RPLAREA(,RRPL)                                  0256 00536000
*            IF CIFVSRI = '0'B          /* INCOMPLETE RECORD BEING 0257 00537000
*                                          PROCESSED ?              */  00538000
*              THEN                     /* NO                       */  00539000
         TM    CIFVSRI(RCICB),B'00010000'                          0257 00540000
         BNZ   @RF00257                                            0257 00541000
*                CIRECPTR = CIRAREA;    /* PTR TO RECORD AREA       */  00542000
         MVC   CIRECPTR(4,RCICB),CIRAREA(RCICB)                    0258 00543000
*              ELSE;                    /* PROCESSING INCOMPLETE   0259 00544000
*                                          RECORD                   */  00545000
@RF00257 DS    0H                                                  0260 00546000
*            CIFVSRI = '0'B;            /* RESET INCOMPL RECORD FLG */  00547000
*                                                                  0260 00548000
         NI    CIFVSRI(RCICB),B'11101111'                          0260 00549000
*            CIBLKPTR = RPLAREA - 8;    /* PTR TO USER BLOCK        */  00550000
         L     @12,RPLAREA(,RRPL)                                  0261 00551000
         SH    @12,@CH00059                                        0261 00552000
         ST    @12,CIBLKPTR(,RCICB)                                0261 00553000
*CONTIN01:   CISEGLEN = RDWLL - 4;      /* GET SEGMENT LENGTH       */  00554000
*                                                                  0262 00555000
CONTIN01 L     @12,RPLAREA(,RRPL)                                  0262 00556000
         AL    @12,@CF00554                                        0262 00557000
         LH    @12,RDWLL+4(,@12)                                   0262 00558000
         SH    @12,@CH00147                                        0262 00559000
         ST    @12,CISEGLEN(,RCICB)                                0262 00560000
*            IF CIRECPTR = CIRAREA + CILWAREA  /* IS REC AREA FILLED*/  00561000
*              THEN GO TO NOMOVE;       /* YES, DONT MOVE SEGMENT IN*/  00562000
         L     @10,CIRECPTR(,RCICB)                                0263 00563000
         L     @09,CIRAREA(,RCICB)                                 0263 00564000
         AL    @09,CILWAREA(,RCICB)                                0263 00565000
         CR    @10,@09                                             0263 00566000
         BE    @RT00263                                            0263 00567000
*                                       /* NO, WILL ENTIRE SEG FIT ?*/  00568000
*            RWORK = CIRECPTR + CISEGLEN; /* CALC SPACE NEEDED      */  00569000
         ALR   @12,@10                                             0265 00570000
         LR    RWORK,@12                                           0265 00571000
*            IF RWORK > CIRAREA + CILWAREA /* DOES IT FIT IN AREA?  */  00572000
*              THEN                     /* NO, FILL IN WHAT FITS    */  00573000
         CR    RWORK,@09                                           0266 00574000
         BNH   @RF00266                                            0266 00575000
*                CISEGLEN = CIRAREA + CILWAREA - CIRECPTR;         0267 00576000
*                                                                  0267 00577000
         SLR   @09,@10                                             0267 00578000
         ST    @09,CISEGLEN(,RCICB)                                0267 00579000
*/******MOVE SEGMENT TO RECORD AREA**********************************/  00580000
*         GEN;                                                     0268 00581000
@RF00266 DS    0H                                                  0268 00582000
             L    R14,RPLAREA(,RRPL)                 /*     @ZA09150*/  00583000
             LR   R0,R11                             /*     @ZA09150*/  00584000
             L    R15,CISEGLEN(,RCICB)               /*     @ZA09150*/  00585000
             LR   R11,R15                            /*     @ZA09150*/  00586000
             L    R10,CIRECPTR(,RCICB)               /*     @ZA09150*/  00587000
             MVCL R10,R14                            /*     @ZA09150*/  00588000
             LR   R11,R0                             /*     @ZA09150*/  00589000
             LR   R0,R0                              /*     @ZA09150*/  00590000
*            CIRECPTR = CIRECPTR + CISEGLEN; /* UPDATE SEGMENT PTR  */  00591000
         L     @12,CISEGLEN(,RCICB)                                0269 00592000
         L     @10,CIRECPTR(,RCICB)                                0269 00593000
         ALR   @10,@12                                             0269 00594000
         ST    @10,CIRECPTR(,RCICB)                                0269 00595000
*            RPLRLEN = RPLRLEN + CISEGLEN; /* UPDATE RECORD LENGTH  */  00596000
*                                                                  0270 00597000
         AL    @12,RPLRLEN(,RRPL)                                  0270 00598000
         ST    @12,RPLRLEN(,RRPL)                                  0270 00599000
*/******IS THIS END OF BLOCK ****************************************/  00600000
*NOMOVE:                                                           0271 00601000
*            RWORK = RPLAREA + RDWLL;   /* CALC END OF THIS SEGMENT */  00602000
NOMOVE   L     @12,RPLAREA(,RRPL)                                  0271 00603000
         LR    @10,@12                                             0271 00604000
         AL    @10,@CF00554                                        0271 00605000
         LH    RWORK,RDWLL+4(,@10)                                 0271 00606000
         ALR   RWORK,@12                                           0271 00607000
*            IF RWORK = CIBLKPTR + BDWLL + 4  /* IS IT ALSO EOB?    */  00608000
*              THEN                     /* YES, END OF BLOCK        */  00609000
         L     @10,DECAREA(,RDECB)                                 0272 00610000
         LH    @10,BDWLL(,@10)                                     0272 00611000
         AL    @10,CIBLKPTR(,RCICB)                                0272 00612000
         AH    @10,@CH00147                                        0272 00613000
         CR    RWORK,@10                                           0272 00614000
         BNE   @RF00272                                            0272 00615000
*                DO;                                               0273 00616000
*                /* COMPLETE RECORD OR LAST SEGMENT OF RECORD       */  00617000
*                IF SEGCC = '00'X | SEGCC = '02'X                  0274 00618000
*                  THEN DO;             /* YES                      */  00619000
         LR    @10,@12                                             0274 00620000
         BCTR  @10,0                                               0274 00621000
         BCTR  @10,0                                               0274 00622000
         CLI   SEGCC+2(@10),X'00'                                  0274 00623000
         BE    @RT00274                                            0274 00624000
         BCTR  @12,0                                               0274 00625000
         BCTR  @12,0                                               0274 00626000
         CLI   SEGCC+2(@12),X'02'                                  0274 00627000
         BNE   @RF00274                                            0274 00628000
@RT00274 DS    0H                                                  0275 00629000
*                    CIFVSEOB = '1'B;   /* INDICATE END OF BLOCK    */  00630000
         OI    CIFVSEOB(RCICB),B'00001000'                         0276 00631000
*                    GO TO CONTIN02;    /* RECORD READY FOR WRITE   */  00632000
         B     CONTIN02                                            0277 00633000
*                       END;            /* END OF DO GROUP          */  00634000
*                  ELSE DO;             /* NOT COMPLETE RECORD NOR 0279 00635000
*                                          LAST SEGMENT             */  00636000
@RF00274 DS    0H                                                  0280 00637000
*                    CIFVSRI = '1'B;    /* INDICATE INCOMPLETE RECD */  00638000
         OI    CIFVSRI(RCICB),B'00010000'                          0280 00639000
*                    DECBCODE = '7F'X;  /* POST AS COMPLETE W/NO ER */  00640000
         MVI   DECBCODE(RDECB),X'7F'                               0281 00641000
*                    GO TO EXIT;        /* WAIT FOR NEXT BLOCK      */  00642000
         B     EXIT                                                0282 00643000
*                       END;            /* END OF DO GROUP          */  00644000
*                END;                   /* DO GROUP-NOT LAST SEG    */  00645000
*              ELSE;                    /* NOT END OF BLOCK         */  00646000
@RF00272 DS    0H                                                  0286 00647000
*              /* IS POINTER WITHIN BOUNDS ?                        */  00648000
*              RWORK = RPLAREA + RDWLL; /* CALC END OF SEGMENT      */  00649000
         L     @12,RPLAREA(,RRPL)                                  0286 00650000
         LR    @10,@12                                             0286 00651000
         AL    @10,@CF00554                                        0286 00652000
         LH    @10,RDWLL+4(,@10)                                   0286 00653000
         ALR   @10,@12                                             0286 00654000
         LR    RWORK,@10                                           0286 00655000
*              IF RWORK > CIBLKPTR + BDWLL + 4 THEN   /* TOO LONG?  */  00656000
         L     @12,DECAREA(,RDECB)                                 0287 00657000
         LH    @12,BDWLL(,@12)                                     0287 00658000
         AL    @12,CIBLKPTR(,RCICB)                                0287 00659000
         AH    @12,@CH00147                                        0287 00660000
         CR    RWORK,@12                                           0287 00661000
         BH    @RT00287                                            0287 00662000
*                                       /* POINTER NOT WITHIN BOUNDS*/  00663000
*                  GO TO ABEND;         /* ISSUE ABEND FOR USER     */  00664000
*              ELSE;                    /* POINTER IS WITHIN BOUNDS */  00665000
*                                                                  0289 00666000
*              CIRECPTR = RPLAREA + RDWLL;/* UPDATE RECORD PTR      */  00667000
         ST    @10,CIRECPTR(,RCICB)                                0290 00668000
*CONTIN02:     RPLAREA = CIRAREA;       /* SAVE AREA POINTER        */  00669000
CONTIN02 MVC   RPLAREA(4,RRPL),CIRAREA(RCICB)                      0291 00670000
*              GO TO WRITIT;            /* GO WRITE RECORD          */  00671000
*                                                                  0292 00672000
         B     WRITIT                                              0292 00673000
*CONTIN03:     RPLAREA = CIRECPTR;      /* RESTORE RECORD POINTER   */  00674000
CONTIN03 MVC   RPLAREA(4,RRPL),CIRECPTR(RCICB)                     0293 00675000
*              RPLRLEN = 0;             /* INITIALIZE RECORD LENGTH */  00676000
         SLR   @12,@12                                             0294 00677000
         ST    @12,RPLRLEN(,RRPL)                                  0294 00678000
*              CIRECPTR = CIRAREA;      /* INITIALIZE RECORD PTR    */  00679000
         MVC   CIRECPTR(4,RCICB),CIRAREA(RCICB)                    0295 00680000
*              GO TO CONTIN01;          /* CONTINUE WITH BLOCK      */  00681000
         B     CONTIN01                                            0296 00682000
*          END;                         /* END OF SPANNED RCD GROUP */  00683000
*                                                                  0297 00684000
*/*******************************************************************/  00685000
*                                       /* NOT VARIABLE SPANNED     */  00686000
*        IF DCBRECFM(1:2) = '01'B THEN  /* VARIABLE LENGTH RECORD ? */  00687000
@RF00252 TM    DCBRECFM(RDCB),B'01000000'                          0298 00688000
         BNO   @RF00298                                            0298 00689000
         TM    DCBRECFM(RDCB),B'10000000'                          0298 00690000
         BNZ   @RF00298                                            0298 00691000
*          DO;                          /* YES                      */  00692000
*            IF BDWLL > DCBBLKSI THEN   /* IS BDW TOO BIG?    XA01441*/ 00693000
         L     @12,DECAREA(,RDECB)                                 0300 00694000
         LH    @12,BDWLL(,@12)                                     0300 00695000
         SLR   @10,@10                                             0300 00696000
         ICM   @10,3,DCBBLKSI(RDCB)                                0300 00697000
         CR    @12,@10                                             0300 00698000
         BH    @RT00300                                            0300 00699000
*              GO TO ABEND;             /* YES, TERMINATE     XA01441*/ 00700000
*            RPLAREA = RPLAREA + 8;     /* SET POINTER > BDW & RDW  */  00701000
         LA    @10,8                                               0302 00702000
         AL    @10,RPLAREA(,RRPL)                                  0302 00703000
         ST    @10,RPLAREA(,RRPL)                                  0302 00704000
*            RPLRLEN = RDWLL - 4;       /* GET LENGTH FROM RDWLL    */  00705000
         LA    @09,4                                               0303 00706000
         AL    @10,@CF00554                                        0303 00707000
         LH    @10,RDWLL+4(,@10)                                   0303 00708000
         LR    @06,@10                                             0303 00709000
         SLR   @06,@09                                             0303 00710000
         ST    @06,RPLRLEN(,RRPL)                                  0303 00711000
*            CIIOCNT = RDWLL;           /* SET RECORD LENGTH        */  00712000
         ST    @10,CIIOCNT(,RCICB)                                 0304 00713000
*            CISAMWA = BDWLL - 4;       /* SET BLOCK LENGTH         */  00714000
         SLR   @12,@09                                             0305 00715000
         ST    @12,CISAMWA(,RCICB)                                 0305 00716000
*            GO TO WRITIT;              /* GO TO TEST CONTROL CHAR  */  00717000
         B     WRITIT                                              0306 00718000
*          END;                         /* END OF DO GROUP          */  00719000
*        ELSE                           /* LOGICAL ERROR-NO RECFM   */  00720000
*          RPLRLEN = DCBBLKSI;          /* ASSUME U,TYPE S          */  00721000
*                                                                  0308 00722000
@RF00298 SLR   @12,@12                                             0308 00723000
         ICM   @12,3,DCBBLKSI(RDCB)                                0308 00724000
         ST    @12,RPLRLEN(,RRPL)                                  0308 00725000
*/*******************************************************************/  00726000
*                                                                  0309 00727000
*WRCNT:  CIIOCNT = 1;                   /* SET I/O COUNTER TO 1.    */  00728000
*                                                                  0309 00729000
WRCNT    MVC   CIIOCNT(4,RCICB),@CF00061                           0309 00730000
*/*******************************************************************/  00731000
*/*                                                                 */  00732000
*/*            ISSUE JES PUT MACRO                                  */  00733000
*/*                                                                 */  00734000
*/*******************************************************************/  00735000
*                                                                  0310 00736000
*                                       /* CARRIAGE CONTROL CHAR    */  00737000
*WRITIT: IF DCBRECFM(6:7)='10'B | DCBRECFM(6:7)='01'B  /* SPECIFIED */  00738000
*              THEN DO;                 /* YES                      */  00739000
WRITIT   TM    DCBRECFM(RDCB),B'00000100'                          0310 00740000
         BNO   @GL00008                                            0310 00741000
         TM    DCBRECFM(RDCB),B'00000010'                          0310 00742000
         BZ    @RT00310                                            0310 00743000
@GL00008 TM    DCBRECFM(RDCB),B'00000010'                          0310 00744000
         BNO   @RF00310                                            0310 00745000
         TM    DCBRECFM(RDCB),B'00000100'                          0310 00746000
         BNZ   @RF00310                                            0310 00747000
@RT00310 DS    0H                                                  0311 00748000
*                   RPLCCHAR = RPLAREA;  /* POINTER TO CONTROL CHAR */  00749000
         L     @12,RPLAREA(,RRPL)                                  0312 00750000
         ST    @12,RPLCCHAR(,RRPL)                                 0312 00751000
*                   RPLAREA  = RPLAREA + 1;  /* SET PTR > CTL CHAR  */  00752000
         AL    @12,@CF00061                                        0313 00753000
         ST    @12,RPLAREA(,RRPL)                                  0313 00754000
*                   RPLRLEN  = RPLRLEN - 1;  /* REDUCE LENGTH BY 1  */  00755000
         L     @12,RPLRLEN(,RRPL)                                  0314 00756000
         BCTR  @12,0                                               0314 00757000
         ST    @12,RPLRLEN(,RRPL)                                  0314 00758000
*                   END;                                           0315 00759000
*              ELSE;                    /* NO CONTROL CHARACTER     */  00760000
*                                                                  0316 00761000
@RF00310 DS    0H                                                  0317 00762000
*/*******************************************************************/  00763000
*                                                                  0317 00764000
*        GEN (PUT   RPL=(RRPL));        /* JES PUT MACRO            */  00765000
         PUT   RPL=(RRPL)                                               00766000
*/*******************************************************************/  00767000
*                                                                  0318 00768000
*                                                                  0318 00769000
*                                                                  0318 00770000
*        IF R15 ^= 0 THEN               /* TEST FOR ANY ERRORS       */ 00771000
         LTR   R15,R15                                             0318 00772000
         BZ    @RF00318                                            0318 00773000
*          DO;                          /* JES DETECTED AN ERROR     */ 00774000
*            DECBCODE = '41'X;          /* POST ECB IN ERROR         */ 00775000
         MVI   DECBCODE(RDECB),X'41'                               0320 00776000
*            DECBCOND = ERR3;           /* SET BSAM WRITE ERR  Y02144*/ 00777000
         MVC   DECBCOND(1,RDECB),ERR3                              0321 00778000
*            GO TO EXIT;                /* RETURN TO USER     ZA02178*/ 00779000
         B     EXIT                                                0322 00780000
*          END;                                                    0323 00781000
*        ELSE                           /* WRITE WAS OK              */ 00782000
*          DECBCODE = '7F'X;            /* POST ECB AS NORMAL        */ 00783000
*                                                                  0324 00784000
@RF00318 MVI   DECBCODE(RDECB),X'7F'                               0324 00785000
*/*******************************************************************/  00786000
*                                                                  0325 00787000
*        IF DCBRECFM(1:2) = '01'B & DCBRECFM(5)   = '1'B THEN/*    0325 00788000
*                                          VAR LENGTH SPANNED RCDS  */  00789000
*                                                                  0325 00790000
         TM    DCBRECFM(RDCB),B'01000000'                          0325 00791000
         BNO   @RF00325                                            0325 00792000
         TM    DCBRECFM(RDCB),B'10000000'                          0325 00793000
         BNZ   @RF00325                                            0325 00794000
         TM    DCBRECFM(RDCB),B'00001000'                          0325 00795000
         BNO   @RF00325                                            0325 00796000
*          DO;                          /* YES                      */  00797000
*            RPLRLEN = 0;               /* INITIALIZE RECORD LENGTH */  00798000
         SLR   @12,@12                                             0327 00799000
         ST    @12,RPLRLEN(,RRPL)                                  0327 00800000
*            IF CIFVSEOB = '1'B THEN    /* IS IT END OF BLOCK ?     */  00801000
         TM    CIFVSEOB(RCICB),B'00001000'                         0328 00802000
         BNO   @RF00328                                            0328 00803000
*              DO;                      /* YES                      */  00804000
*                CIFVSEOB = '0'B;       /* RESET END OF BLOCK FLAG  */  00805000
         NI    CIFVSEOB(RCICB),B'11110111'                         0330 00806000
*                GO TO EXIT;            /* WAIT FOR NEXT BLOCK      */  00807000
         B     EXIT                                                0331 00808000
*              END;                     /* END OF EOB GROUP         */  00809000
*            ELSE                       /* NOT END OF BLOCK         */  00810000
*              GO TO CONTIN03;          /* PROCESS NEXT SEGMENT     */  00811000
*          END;                         /* END OF SPANNED RECD GROUP*/  00812000
*        ELSE;                          /* NOT SPANNED RECORDS      */  00813000
*                                                                  0335 00814000
@RF00325 DS    0H                                                  0336 00815000
*        IF DCBRECFM(1:2) = '01'B THEN  /* VARIABLE LENGTH RECORDS  */  00816000
         TM    DCBRECFM(RDCB),B'01000000'                          0336 00817000
         BNO   @RF00336                                            0336 00818000
         TM    DCBRECFM(RDCB),B'10000000'                          0336 00819000
         BNZ   @RF00336                                            0336 00820000
*          DO;                          /* YES, DO FOLLOWING        */  00821000
*            CISAMWA = CISAMWA - CIIOCNT;/* REDUCE BLOCK COUNT      */  00822000
         L     @12,CISAMWA(,RCICB)                                 0338 00823000
         SL    @12,CIIOCNT(,RCICB)                                 0338 00824000
         ST    @12,CISAMWA(,RCICB)                                 0338 00825000
*            IF CISAMWA =< 0 THEN       /* TEST IF MORE TO WRITE    */  00826000
         LTR   @12,@12                                             0339 00827000
         BNP   @RT00339                                            0339 00828000
*              GO TO EXIT;              /* NO, PROCESSING COMPLETE  */  00829000
*            ELSE                       /* YES, DO FOLLOWING        */  00830000
*              DO;                      /* MORE DATA TO WRITE       */  00831000
*                RPLAREA = RPLAREA + RPLRLEN + 4;/* POINT PAST RCD  */  00832000
         LA    @12,4                                               0342 00833000
         L     @10,RPLAREA(,RRPL)                                  0342 00834000
         AL    @10,RPLRLEN(,RRPL)                                  0342 00835000
         ALR   @10,@12                                             0342 00836000
         ST    @10,RPLAREA(,RRPL)                                  0342 00837000
*                RPLRLEN = RDWLL - 4;   /* SUBTRACT LENGTH OF RDWLL */  00838000
         AL    @10,@CF00554                                        0343 00839000
         LH    @10,RDWLL+4(,@10)                                   0343 00840000
         LCR   @12,@12                                             0343 00841000
         ALR   @12,@10                                             0343 00842000
         ST    @12,RPLRLEN(,RRPL)                                  0343 00843000
*                CIIOCNT = RDWLL;       /* SET TO RECORD LENGTH     */  00844000
         ST    @10,CIIOCNT(,RCICB)                                 0344 00845000
*                GO TO WRITIT;          /* GO TO TEST CONTROL CHAR  */  00846000
         B     WRITIT                                              0345 00847000
*              END;                     /* END OF DO GROUP          */  00848000
*          END;                         /* END OF DO GROUP          */  00849000
*                                                                  0347 00850000
*        ELSE;                          /* NOT VARIABLE RECORDS     */  00851000
@RF00336 DS    0H                                                  0349 00852000
*        CIIOCNT = CIIOCNT - 1;         /* DECREMENT COUNT          */  00853000
         L     @12,CIIOCNT(,RCICB)                                 0349 00854000
         BCTR  @12,0                                               0349 00855000
         ST    @12,CIIOCNT(,RCICB)                                 0349 00856000
*        IF CIIOCNT ^= 0 THEN           /* FIXED BLOCKED | UNBLOCKED*/  00857000
         LTR   @12,@12                                             0350 00858000
         BZ    @RF00350                                            0350 00859000
*          DO;                          /* FIXED LENGTH BLOCKED     */  00860000
*            IF DCBLRECL = 0 THEN       /* USE LRECL OR BLKSIZE     */  00861000
         ICM   @12,3,DCBLRECL(RDCB)                                0352 00862000
         BNZ   @RF00352                                            0352 00863000
*              RPLAREA = RPLAREA + DCBBLKSI;  /* BLOCKSIZE          */  00864000
         SLR   @12,@12                                             0353 00865000
         ICM   @12,3,DCBBLKSI(RDCB)                                0353 00866000
         AL    @12,RPLAREA(,RRPL)                                  0353 00867000
         ST    @12,RPLAREA(,RRPL)                                  0353 00868000
*            ELSE                                                  0354 00869000
*              RPLAREA = RPLAREA + DCBLRECL;  /* USE LRECL          */  00870000
         B     @RC00352                                            0354 00871000
@RF00352 SLR   @12,@12                                             0354 00872000
         ICM   @12,3,DCBLRECL(RDCB)                                0354 00873000
         AL    @12,RPLAREA(,RRPL)                                  0354 00874000
         ST    @12,RPLAREA(,RRPL)                                  0354 00875000
*            /* CARRIAGE CONTROL CHARACTER SPECIFIED ?              */  00876000
*            IF DCBRECFM(6:7)='10'B | DCBRECFM(6:7)='01'B THEN     0355 00877000
@RC00352 TM    DCBRECFM(RDCB),B'00000100'                          0355 00878000
         BNO   @GL00010                                            0355 00879000
         TM    DCBRECFM(RDCB),B'00000010'                          0355 00880000
         BZ    @RT00355                                            0355 00881000
@GL00010 TM    DCBRECFM(RDCB),B'00000010'                          0355 00882000
         BNO   @RF00355                                            0355 00883000
         TM    DCBRECFM(RDCB),B'00000100'                          0355 00884000
         BNZ   @RF00355                                            0355 00885000
@RT00355 DS    0H                                                  0356 00886000
*              DO;                      /* YES, CONTROL CHARACTER   */  00887000
*                RPLAREA = RPLAREA - 1; /* REPOSITION RPLAREA       */  00888000
         L     @12,RPLAREA(,RRPL)                                  0357 00889000
         BCTR  @12,0                                               0357 00890000
         ST    @12,RPLAREA(,RRPL)                                  0357 00891000
*                RPLRLEN = RPLRLEN +1;  /* RESTORE LENGTH           */  00892000
         LA    @12,1                                               0358 00893000
         AL    @12,RPLRLEN(,RRPL)                                  0358 00894000
         ST    @12,RPLRLEN(,RRPL)                                  0358 00895000
*              END;                                                0359 00896000
*            GO TO WRITIT;              /* PUT ANOTHER RECORD       */  00897000
         B     WRITIT                                              0360 00898000
*          END;                         /* END OF DO GROUP          */  00899000
*        ELSE;                          /* UNBLOCKED                */  00900000
*                                                                  0362 00901000
@RF00350 DS    0H                                                  0363 00902000
*        GO TO EXIT;                    /* RETURN TO REQUESTOR      */  00903000
         B     EXIT                                                0363 00904000
*/*******************************************************************/  00905000
*        GEN   (EJECT);                 /* SKIP TO A NEW PAGE       */  00906000
         EJECT                                                          00907000
*                                                                  0365 00908000
*                                                                  0365 00909000
*/*******************************************************************/  00910000
*/*                                                                 */  00911000
*/*             JES TRANSLATOR BSAM CHECK ROUTINE                   */  00912000
*/*                                                                 */  00913000
*/*                 FOR OUTPUT ONLY                                 */  00914000
*/*                 FOR INPUT, IGG019BB IS ENTERED                  */  00915000
*/*                                                                 */  00916000
*/*******************************************************************/  00917000
*                                                                  0365 00918000
*                                                                  0365 00919000
*CHECKRTN: ;                            /* ENTER CHECK ROUTINE      */  00920000
*                                                                  0365 00921000
CHECKRTN DS    0H                                                  0366 00922000
*/*******************************************************************/  00923000
*/*                                                                 */  00924000
*/* TEST FOR ANY ERRORS - ALL BITS ON EXCEPT FIRST                  */  00925000
*/*                                                                 */  00926000
*/*******************************************************************/  00927000
*                                                                  0366 00928000
*        RESTRICT (R12);                /* RESTRICT FROM COMPILER   */  00929000
*                                                                  0366 00930000
*                                                                  0366 00931000
*        IF DECBCODE='7F'X              /* TEST FOR ANY ERRORS      */  00932000
*          THEN                         /* NO                       */  00933000
         CLI   DECBCODE(RDECB),X'7F'                               0367 00934000
         BE    @RT00367                                            0367 00935000
*            GO TO EXIT;                /* BRANCH OUT IF NONE       */  00936000
*                                                                  0368 00937000
*          ELSE DO;                     /* IF AN ERROR IS PRESENT   */  00938000
*            R0 = ADDR(CISYNNAM);       /* COMING FROM INTERF. RTN  */  00939000
         LA    R0,CISYNNAM(,RCICB)                                 0370 00940000
*      GEN  (LOAD  EPLOC=(0));          /* LOAD SYNAD ROUTINE       */  00941000
         LOAD  EPLOC=(0)                                                00942000
*            R15 = R0;                  /* SET UP ADDRESS FOR CALL  */  00943000
         LR    R15,R0                                              0372 00944000
*            R1 = RRPL;                 /* SET UP LINKAGE AS IF     */  00945000
         LR    R1,RRPL                                             0373 00946000
*      GEN  (BALR  R14,R15);            /* CALL SYNAD ROUTINE       */  00947000
*                                                                  0374 00948000
         BALR  R14,R15                                                  00949000
*            R0 = ADDR(CISYNNAM);       /* POINT TO NAME AGAIN      */  00950000
         LA    R0,CISYNNAM(,RCICB)                                 0375 00951000
*      GEN  (DELETE EPLOC=(0));         /* AND DELETE SYNAD MODULE  */  00952000
         DELETE EPLOC=(0)                                               00953000
*               END;                                               0377 00954000
*                                                                  0377 00955000
*        RELEASE (R12);                 /* RELEASE REG TO COMPILER  */  00956000
*                                                                  0378 00957000
*/*******************************************************************/  00958000
*        GEN   (EJECT);                 /* SKIP TO A NEW PAGE       */  00959000
         EJECT                                                          00960000
*                                                                  0380 00961000
*                                                                  0380 00962000
*/*******************************************************************/  00963000
*/*                                                                 */  00964000
*/*             SAVE ERROR DATA IN CURRENT DECB FOR CHECK           */  00965000
*/*                                                                 */  00966000
*/*******************************************************************/  00967000
*                                                                  0380 00968000
*                                                                  0380 00969000
*                                                                  0380 00970000
*        RESTRICT (R6);                 /* RESTRICT FROM COMPILER   */  00971000
*                                                                  0380 00972000
*QMAPPED:                               /* BSAM ERROR               */  00973000
*                                                                  0381 00974000
*        DECBCODE = '41'X;              /* SET ERROR CONDITION      */  00975000
*                                                                  0381 00976000
QMAPPED  MVI   DECBCODE(RDECB),X'41'                               0381 00977000
*        /* MAP JES RETURN CODE TO SAM-SI ERROR INDEX FOR SYNAD      */ 00978000
*                                                                  0382 00979000
*        IF RPLRTNCD = '08'X            /* FOR LOGICAL ERROR   Y02144*/ 00980000
*           & RPLERRCD = RPLINBUF THEN  /* DUE TO WRONG LENGTH Y02144*/ 00981000
         CLI   RPLRTNCD(RRPL),8                                    0382 00982000
         BNE   @RF00382                                            0382 00983000
         CLC   RPLERRCD(1,RRPL),RPLINBUF                           0382 00984000
         BNE   @RF00382                                            0382 00985000
*          DECBCOND = ERR1;             /* SET BSAM LEN ERROR  Y02144*/ 00986000
         MVC   DECBCOND(1,RDECB),ERR1                              0383 00987000
*        ELSE                           /* OTHERWISE ,         Y02144*/ 00988000
*          DECBCOND = ERR2;             /* SET BSAM READ ERROR Y02144*/ 00989000
*                                                                  0384 00990000
         B     @RC00382                                            0384 00991000
@RF00382 MVC   DECBCOND(1,RDECB),ERR2                              0384 00992000
*        /* CHECK ROUTINE WILL PICK UP CODE AND PUT IT IN REGISTER  */  00993000
*                                                                  0385 00994000
*        GO TO REND;                    /* RETURN TO REQUESTOR      */  00995000
*                                                                  0385 00996000
         B     REND                                                0385 00997000
*        RELEASE (R6);                  /* RELEASE REG TO COMPILER  */  00998000
*                                                                  0386 00999000
*/*******************************************************************/  01000000
*        GEN   (EJECT);                 /* SKIP TO A NEW PAGE       */  01001000
         EJECT                                                          01002000
*                                                                  0388 01003000
*                                                                  0388 01004000
*/*******************************************************************/  01005000
*/*                                                                 */  01006000
*/*            RETURN TO REQUESTOR                                  */  01007000
*/*                                                                 */  01008000
*/*******************************************************************/  01009000
*                                                                  0388 01010000
*                                                                  0388 01011000
*        GEN;                           /* GENERATE EXIT            */  01012000
*                                                                  0388 01013000
*                                                                  0388 01014000
*                                                                  0388 01015000
*                                                                  0388 01016000
*                                                                  0388 01017000
EXIT     L     R13,CIREGBC(,RCICB)      POINT TO USER SAVEAREA          01018000
         RETURN (14,12)                 RESTORE USER REGS               01019000
*/********************************************************************/ 01020000
*/*                                                                  */ 01021000
*/*      SCHEDULE 002 ABEND FOR INVALID BDW OR RDW                   */ 01022000
*/*                                                                  */ 01023000
*/********************************************************************/ 01024000
*                                                                  0389 01025000
*ABEND:  GEN (DMABCOND 204,SVC=YES,DCB=(RDCB)); /* REQUEST     Y02144   01026000
*                                       ABEND VIA PROB. DETERMINATION*/ 01027000
ABEND    DMABCOND 204,SVC=YES,DCB=(RDCB)                                01028000
*/********************************************************************/ 01029000
*        GEN   (EJECT);                 /* SKIP TO A NEW PAGE       */  01030000
         EJECT                                                          01031000
*                                                                  0391 01032000
*                                                                  0391 01033000
*/*******************************************************************/  01034000
*/*                                                                 */  01035000
*/*            JES TRANSLATOR BSAM CNTRL ROUTINE                    */  01036000
*/*                                                                 */  01037000
*/*******************************************************************/  01038000
*                                                                  0391 01039000
*                                                                  0391 01040000
*/*******************************************************************/  01041000
*/*   THE REQUEST IS IGNORED AND                                    */  01042000
*/*   CONTROL IS RETURNED TO THE PROGRAM                            */  01043000
*/*   REQUESTING THIS FUNCTION.                                     */  01044000
*/*******************************************************************/  01045000
*                                                                  0391 01046000
*                                                                  0391 01047000
*                                                                  0391 01048000
*CNTRLRTN: ;                            /* ENTER CNTRLRTN           */  01049000
*                                                                  0391 01050000
*/*******************************************************************/  01051000
*                                                                  0392 01052000
*        GO TO EXIT;                    /* RETURN TO REQUESTOR      */  01053000
*                                                                  0392 01054000
         B     EXIT                                                0392 01055000
*/*******************************************************************/  01056000
*        GEN   (EJECT);                 /* SKIP TO A NEW PAGE       */  01057000
         EJECT                                                          01058000
*                                                                  0394 01059000
*                                                                  0394 01060000
*/*******************************************************************/  01061000
*/*                                                                 */  01062000
*/*            JES TRANSLATOR NOTE ROUTINE                          */  01063000
*/*                                                                 */  01064000
*/*******************************************************************/  01065000
*                                                                  0394 01066000
*                                                                  0394 01067000
*                                                                  0394 01068000
*NOTERTN: ;                             /*  ENTRY TO NOTERTN        */  01069000
*                                                                  0394 01070000
NOTERTN  DS    0H                                                  0395 01071000
*        USERSAV(25:28) = RPLDDDD;      /* MOVE RBA TO REG 1 AREA   */  01072000
*                                                                  0395 01073000
         L     @12,CIREGBC(,RCICB)                                 0395 01074000
         MVC   USERSAV+24(4,@12),RPLDDDD(RRPL)                     0395 01075000
*/*******************************************************************/  01076000
*                                                                  0396 01077000
*        GO TO EXIT;                    /* RETURN TO REQUESTOR      */  01078000
*                                                                  0396 01079000
         B     EXIT                                                0396 01080000
*/*******************************************************************/  01081000
*        GEN   (EJECT);                 /* SKIP TO A NEW PAGE       */  01082000
         EJECT                                                          01083000
*                                                                  0398 01084000
*                                                                  0398 01085000
*/*******************************************************************/  01086000
*/*                                                                 */  01087000
*/*           JES TRANSLATOR POINT ROUTINE                          */  01088000
*/*                                                                 */  01089000
*/*******************************************************************/  01090000
*                                                                  0398 01091000
*                                                                  0398 01092000
*        RESTRICT (R5);                 /* RESTRICT FROM COMPILER   */  01093000
*                                                                  0398 01094000
*                                                                  0398 01095000
*POINTRTN: ;                            /* ENTRY TO POINT ROUTINE   */  01096000
*                                                                  0399 01097000
POINTRTN DS    0H                                                  0400 01098000
*        IF DCBMACRF(11)  = '1'B | DCBMACRF(10)  = '1'B/*          0400 01099000
*                                          DCB OPENED FOR OUTPUT    */  01100000
*          THEN DO;                     /* YES                      */  01101000
         TM    DCBMACRF+1(RDCB),B'01100000'                        0400 01102000
         BZ    @RF00400                                            0400 01103000
*            CIFPOINT = '1'B;           /* INVALID POINT REQUEST    */  01104000
         OI    CIFPOINT(RCICB),B'00000010'                         0402 01105000
*            GO TO EXIT;                /* SKIP PROCESSING          */  01106000
         B     EXIT                                                0403 01107000
*               END;                    /* END OF DO GROUP          */  01108000
*          ELSE;                        /* THIS IS INPUT            */  01109000
*                                                                  0405 01110000
@RF00400 DS    0H                                                  0406 01111000
*/*******************************************************************/  01112000
*                                                                  0406 01113000
*                                                                  0406 01114000
*        RPLARG  = R0;                  /* PTR TO ARGUMENT          */  01115000
         ST    R0,RPLARG(,RRPL)                                    0406 01116000
*        R5 = R0;                       /* ADDRESSIBILITY - RPLARGAR*/  01117000
         LR    R5,R0                                               0407 01118000
*        RPLDDDD = RPLARGAR;            /* MOVE ARGUMENT INTO RPL   */  01119000
         MVC   RPLDDDD(4,RRPL),RPLARGAR(R5)                        0408 01120000
*        RPLARG = ADDR(RPLRBAR);        /* ADDRESS OF POINT ARGUMENT*/  01121000
*                                                                  0409 01122000
         LA    @12,RPLRBAR(,RRPL)                                  0409 01123000
         ST    @12,RPLARG(,RRPL)                                   0409 01124000
*        RELEASE  (R5);                 /* RELEASE REG TO COMPILER  */  01125000
*                                                                  0410 01126000
*                                                                  0410 01127000
*        IF R15 ^= 0                    /* TEST FOR ANY ERRORS      */  01128000
*          THEN CIFPOINT = '1'B;        /* YES - JES ERROR          */  01129000
         LTR   R15,R15                                             0411 01130000
         BZ    @RF00411                                            0411 01131000
         OI    CIFPOINT(RCICB),B'00000010'                         0412 01132000
*          ELSE CIFPOINT = '0'B;        /* NO ERRORS                */  01133000
*                                                                  0413 01134000
         B     @RC00411                                            0413 01135000
@RF00411 NI    CIFPOINT(RCICB),B'11111101'                         0413 01136000
*/*******************************************************************/  01137000
*                                                                  0414 01138000
*        GO TO EXIT;                    /* RETURN TO REQUESTOR      */  01139000
*                                                                  0414 01140000
         B     EXIT                                                0414 01141000
*/*******************************************************************/  01142000
*        GEN   (EJECT);                 /* SKIP TO A NEW PAGE       */  01143000
         EJECT                                                          01144000
*                                                                  0416 01145000
*                                                                  0416 01146000
*/*******************************************************************/  01147000
*/*                                                                 */  01148000
*/*            EODAD (END OF DATA) ROUTINE                          */  01149000
*/*                                                                 */  01150000
*/*******************************************************************/  01151000
*                                                                  0416 01152000
*                                                                  0416 01153000
*EODADRTN: ;                            /* ENTRY TO EODAD ROUTINE   */  01154000
*                                                                  0416 01155000
EODADRTN DS    0H                                                  0417 01156000
*/*******************************************************************/  01157000
*                                                                  0417 01158000
*        IF DCBRECFM(1:2) = '10'B &     /* IF FIXED                 */  01159000
*           DCBRECFM(4)   = '1'B &      /* AND BLOCKED              */  01160000
*           CIWK1 ^= CIIOCNT            /* AND SHORT BLOCK          */  01161000
*          THEN DECBCODE = '7F'X;       /* SET COMPLETION CODE      */  01162000
         TM    DCBRECFM(RDCB),B'10000000'                          0417 01163000
         BNO   @RF00417                                            0417 01164000
         TM    DCBRECFM(RDCB),B'01000000'                          0417 01165000
         BNZ   @RF00417                                            0417 01166000
         TM    DCBRECFM(RDCB),B'00010000'                          0417 01167000
         BNO   @RF00417                                            0417 01168000
         CLC   CIWK1(4,RCICB),CIIOCNT(RCICB)                       0417 01169000
         BE    @RF00417                                            0417 01170000
         MVI   DECBCODE(RDECB),X'7F'                               0418 01171000
*          ELSE DECBCODE = '42'X;       /* SET COMPLETION CODE - EOF*/  01172000
         B     @RC00417                                            0419 01173000
@RF00417 MVI   DECBCODE(RDECB),X'42'                               0419 01174000
*        GO TO REND;                    /* RETURN TO CALLER         */  01175000
*                                                                  0420 01176000
         B     REND                                                0420 01177000
*/*******************************************************************/  01178000
*        GEN   (EJECT);                 /* SKIP TO A NEW PAGE       */  01179000
         EJECT                                                          01180000
*                                                                  0422 01181000
*                                                                  0422 01182000
*/*******************************************************************/  01183000
*                                                                  0422 01184000
*        GEN;                           /* ADDRESS CONSTANTS        */  01185000
*                                                                  0422 01186000
BRNCHTAB DC    A(READRTN)               ADDRESS READ ROUTINE            01187000
         DC    A(WRITERTN)              ADDRESS WRITE ROUTINE           01188000
         DC    A(CHECKRTN)              ADDRESS CHECK ROUTINE           01189000
         DC    A(CNTRLRTN)              ADDRESS CONTROL ROUTINE         01190000
         DC    A(NOTERTN)               ADDRESS NOTE ROUTINE            01191000
         DC    A(POINTRTN)              ADDRESS POINT ROUTINE           01192000
*/*******************************************************************/  01193000
*                                                                  0423 01194000
*                                                                  0423 01195000
*       END IGG019DK                    /* END OF BSAM MODULE       */  01196000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 01197000
*/*%INCLUDE SYSLIB  (IFGSDCB )                                        * 01198000
*/*%INCLUDE SYSLIB  (IFGRPL  )                                        * 01199000
*/*%INCLUDE SYSLIB  (IDARMRCD)                                        * 01200000
*/*%INCLUDE SYSLIB  (IFGJCICB)                                        * 01201000
*;                                                                 0423 01202000
@EL00001 DS    0H                                                  0423 01203000
@EF00001 DS    0H                                                  0423 01204000
@ER00001 BR    @14                                                 0423 01205000
@DATA    DS    0H                                                       01206000
@CH00147 DC    H'4'                                                     01207000
@CH00059 DC    H'8'                                                     01208000
@DATD    DSECT                                                          01209000
         DS    0F                                                       01210000
@ZTEMPS  DS    C                                                        01211000
@ZTEMPND EQU   *                                                        01212000
@ZLEN    EQU   @ZTEMPND-@ZTEMPS                                         01213000
@TEMPS   EQU   @ZTEMPS                                                  01214000
@L       EQU   @ZLEN                                                    01215000
IGG019DK CSECT                                                          01216000
         DS    0F                                                       01217000
@CF00061 DC    F'1'                                                     01218000
@CF00554 DC    F'-4'                                                    01219000
@CF00501 DC    XL4'41200000'                                            01220000
@DATD    DSECT                                                          01221000
         DS    0D                                                       01222000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01223000
@ENDDATD EQU   *                                                        01224000
@DATEND  EQU   *                                                        01225000
IGG019DK CSECT                                                          01226000
         DS    0F                                                       01227000
@SIZDATD DC    AL1(0)                                                   01228000
         DC    AL3(@ENDDATD-@DATD)                                      01229000
@SIZ001  EQU   @SIZDATD                                                 01230000
         DS    0D                                                       01231000
ERR1     DC    AL1(1)                                                   01232000
ERR2     DC    AL1(2)                                                   01233000
ERR3     DC    AL1(3)                                                   01234000
RPLDVOL  DC    AL1(4)                                                   01235000
RPLMOKEY DC    AL1(8)                                                   01236000
RPLWTBFR DC    AL1(12)                                                  01237000
RPLEODER DC    AL1(4)                                                   01238000
RPLDUP   DC    AL1(8)                                                   01239000
RPLSEQCK DC    AL1(12)                                                  01240000
RPLNOREC DC    AL1(16)                                                  01241000
RPLEXCL  DC    AL1(20)                                                  01242000
RPLNOMNT DC    AL1(24)                                                  01243000
RPLNOEXT DC    AL1(28)                                                  01244000
RPLINRBA DC    AL1(32)                                                  01245000
RPLNOKR  DC    AL1(36)                                                  01246000
RPLNOVRT DC    AL1(40)                                                  01247000
RPLINBUF DC    AL1(44)                                                  01248000
RPLNOPLH DC    AL1(64)                                                  01249000
RPLINACC DC    AL1(68)                                                  01250000
RPLINKEY DC    AL1(72)                                                  01251000
RPLINADR DC    AL1(76)                                                  01252000
RPLERSER DC    AL1(80)                                                  01253000
RPLINLOC DC    AL1(84)                                                  01254000
RPLNOPTR DC    AL1(88)                                                  01255000
RPLINUPD DC    AL1(92)                                                  01256000
RPLKEYCH DC    AL1(96)                                                  01257000
RPLDLCER DC    AL1(100)                                                 01258000
RPLINVP  DC    AL1(104)                                                 01259000
RPLINLEN DC    AL1(108)                                                 01260000
RPLKEYLC DC    AL1(112)                                                 01261000
RPLINLRQ DC    AL1(116)                                                 01262000
RPLINTCB DC    AL1(120)                                                 01263000
RPLSRLOC DC    AL1(132)                                                 01264000
RPLARSRK DC    AL1(136)                                                 01265000
RPLSRISG DC    AL1(140)                                                 01266000
RPLNBRCD DC    AL1(144)                                                 01267000
RPLNXPTR DC    AL1(148)                                                 01268000
RPLNOBFR DC    AL1(152)                                                 01269000
RPLIRRNO DC    AL1(192)                                                 01270000
RPLRRADR DC    AL1(196)                                                 01271000
RPLPAACI DC    AL1(200)                                                 01272000
RPLPUTBK DC    AL1(204)                                                 01273000
RPLINVEQ DC    AL1(208)                                                 01274000
RPLRDERD DC    AL1(4)                                                   01275000
RPLRDERI DC    AL1(8)                                                   01276000
RPLRDERS DC    AL1(12)                                                  01277000
RPLWTERD DC    AL1(16)                                                  01278000
RPLWTERI DC    AL1(20)                                                  01279000
RPLWTERS DC    AL1(24)                                                  01280000
RPLBASER DC    AL1(0)                                                   01281000
RPLBASUM DC    AL1(1)                                                   01282000
RPLAIXER DC    AL1(2)                                                   01283000
RPLAIXUM DC    AL1(3)                                                   01284000
RPLUPGER DC    AL1(4)                                                   01285000
RPLUPGUM DC    AL1(5)                                                   01286000
@CB00519 DC    X'0000'                                                  01287000
PATCH    DC    CL100' '                                                 01288000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01289000
@01      EQU   01                                                       01290000
@02      EQU   02                                                       01291000
@03      EQU   03                                                       01292000
@04      EQU   04                                                       01293000
@05      EQU   05                                                       01294000
@06      EQU   06                                                       01295000
@07      EQU   07                                                       01296000
@08      EQU   08                                                       01297000
@09      EQU   09                                                       01298000
@10      EQU   10                                                       01299000
@11      EQU   11                                                       01300000
@12      EQU   12                                                       01301000
@13      EQU   13                                                       01302000
@14      EQU   14                                                       01303000
@15      EQU   15                                                       01304000
@0       EQU   00                                                       01305000
@1       EQU   01                                                       01306000
@2       EQU   02                                                       01307000
@3       EQU   03                                                       01308000
@4       EQU   04                                                       01309000
@5       EQU   05                                                       01310000
@6       EQU   06                                                       01311000
@7       EQU   07                                                       01312000
@8       EQU   08                                                       01313000
@9       EQU   09                                                       01314000
@A       EQU   10                                                       01315000
@B       EQU   11                                                       01316000
@C       EQU   12                                                       01317000
@D       EQU   13                                                       01318000
@E       EQU   14                                                       01319000
@F       EQU   15                                                       01320000
R0       EQU   @00                                                      01321000
RWORK    EQU   @00                                                      01322000
R1       EQU   @01                                                      01323000
RRPL     EQU   @02                                                      01324000
RCICB    EQU   @04                                                      01325000
R5       EQU   @05                                                      01326000
R6       EQU   @06                                                      01327000
RDECB    EQU   @07                                                      01328000
RDCB     EQU   @08                                                      01329000
R11      EQU   @11                                                      01330000
R12      EQU   @12                                                      01331000
R15      EQU   @15                                                      01332000
R10      EQU   @10                                                      01333000
R13      EQU   @13                                                      01334000
R14      EQU   @14                                                      01335000
DECB     EQU   0                                                        01336000
DECSDECB EQU   DECB                                                     01337000
DECBCODE EQU   DECSDECB                                                 01338000
DECBCOND EQU   DECSDECB+1                                               01339000
DECRESDU EQU   DECSDECB+2                                               01340000
DECTYP   EQU   DECB+4                                                   01341000
DECLNGTH EQU   DECB+6                                                   01342000
DECDCBAD EQU   DECB+8                                                   01343000
DECAREA  EQU   DECB+12                                                  01344000
DECIOBPT EQU   DECB+16                                                  01345000
IFGSDCB  EQU   0                                                        01346000
DCBBUFCB EQU   IFGSDCB+20                                               01347000
DCBIOBAD EQU   IFGSDCB+28                                               01348000
@NM00004 EQU   IFGSDCB+32                                               01349000
DCBHIARC EQU   @NM00004                                                 01350000
DCBBFTEK EQU   DCBHIARC                                                 01351000
DCBRECFM EQU   IFGSDCB+36                                               01352000
DCBDDNAM EQU   IFGSDCB+40                                               01353000
DCBMACRF EQU   DCBDDNAM+2                                               01354000
DCBREAD  EQU   IFGSDCB+49                                               01355000
DCBWRITE EQU   DCBREAD                                                  01356000
DCBGET   EQU   DCBWRITE                                                 01357000
DCBPUT   EQU   DCBGET                                                   01358000
DCBCHECK EQU   IFGSDCB+53                                               01359000
DCBGERR  EQU   DCBCHECK                                                 01360000
DCBBLKSI EQU   IFGSDCB+62                                               01361000
DCBIOBA  EQU   IFGSDCB+68                                               01362000
DCBCICB  EQU   DCBIOBA                                                  01363000
DCBEOBAD EQU   IFGSDCB+72                                               01364000
DCBLCCW  EQU   DCBEOBAD                                                 01365000
DCBEOBR  EQU   DCBLCCW                                                  01366000
DCBNCP   EQU   DCBEOBR                                                  01367000
@NM00005 EQU   IFGSDCB+76                                               01368000
DCBEOBW  EQU   @NM00005                                                 01369000
DCBRECAD EQU   DCBEOBW                                                  01370000
DCBDIRCT EQU   IFGSDCB+80                                               01371000
DCBLRECL EQU   IFGSDCB+82                                               01372000
@NM00006 EQU   IFGSDCB+84                                               01373000
DCBCNTRL EQU   @NM00006+1                                               01374000
DCBNOTE  EQU   DCBCNTRL                                                 01375000
IFGRPL   EQU   0                                                        01376000
RPLCOMN  EQU   IFGRPL                                                   01377000
RPLIDWD  EQU   RPLCOMN                                                  01378000
RPLLEN   EQU   RPLIDWD+3                                                01379000
RPLECB   EQU   RPLCOMN+8                                                01380000
RPLFDBWD EQU   RPLCOMN+12                                               01381000
RPLFDBK  EQU   RPLFDBWD+1                                               01382000
RPLRTNCD EQU   RPLFDBK                                                  01383000
RPLCNDCD EQU   RPLFDBK+1                                                01384000
RPLCMPON EQU   RPLCNDCD                                                 01385000
RPLFDB2  EQU   RPLCMPON                                                 01386000
RPLERRCD EQU   RPLCNDCD+1                                               01387000
RPLFDB3  EQU   RPLERRCD                                                 01388000
RPLKEYLE EQU   RPLCOMN+16                                               01389000
RPLCCHAR EQU   RPLCOMN+20                                               01390000
RPLAREA  EQU   RPLCOMN+32                                               01391000
RPLARG   EQU   RPLCOMN+36                                               01392000
RPLOPTCD EQU   RPLCOMN+40                                               01393000
RPLOPT1  EQU   RPLOPTCD                                                 01394000
RPLECBSW EQU   RPLOPT1                                                  01395000
RPLOPT2  EQU   RPLOPTCD+1                                               01396000
RPLADR   EQU   RPLOPT2                                                  01397000
RPLOPT3  EQU   RPLOPTCD+2                                               01398000
RPLNXTRP EQU   RPLCOMN+44                                               01399000
RPLRLEN  EQU   RPLCOMN+48                                               01400000
RPLBUFL  EQU   RPLCOMN+52                                               01401000
RPLOPTC2 EQU   RPLCOMN+56                                               01402000
RPLOPT5  EQU   RPLOPTC2                                                 01403000
RPLWRTYP EQU   RPLOPT5                                                  01404000
RPLOPT6  EQU   RPLOPTC2+1                                               01405000
RPLUNTYP EQU   RPLOPT6                                                  01406000
RPLOPT7  EQU   RPLOPTC2+2                                               01407000
RPLCNOPT EQU   RPLOPT7                                                  01408000
RPLOPT8  EQU   RPLOPTC2+3                                               01409000
RPLRBAR  EQU   RPLCOMN+60                                               01410000
RPLAIXID EQU   RPLRBAR+2                                                01411000
RPLDDDD  EQU   RPLRBAR+4                                                01412000
RPLEXTDS EQU   RPLCOMN+68                                               01413000
RPLEXTD1 EQU   RPLEXTDS                                                 01414000
IFGJCICB EQU   0                                                        01415000
CIDUMIOB EQU   IFGJCICB                                                 01416000
CIIOB    EQU   CIDUMIOB+8                                               01417000
CIRESID  EQU   CIDUMIOB+20                                              01418000
CISYNNAM EQU   IFGJCICB+108                                             01419000
CIREGSAV EQU   IFGJCICB+116                                             01420000
CIREGBC  EQU   CIREGSAV+4                                               01421000
CIFLAGS  EQU   IFGJCICB+188                                             01422000
CIFLAG2  EQU   CIFLAGS+1                                                01423000
CIFLAG3  EQU   CIFLAGS+2                                                01424000
CIFVSRI  EQU   CIFLAG3                                                  01425000
CIFVSEOB EQU   CIFLAG3                                                  01426000
CIFPOINT EQU   CIFLAG3                                                  01427000
CIRPL    EQU   IFGJCICB+192                                             01428000
CILWAREA EQU   IFGJCICB+304                                             01429000
CIIOCNT  EQU   IFGJCICB+308                                             01430000
CISEGLEN EQU   CIIOCNT                                                  01431000
CIBLKPTR EQU   IFGJCICB+312                                             01432000
CIRAREA  EQU   IFGJCICB+316                                             01433000
CIRECPTR EQU   IFGJCICB+320                                             01434000
CISAMWA  EQU   IFGJCICB+324                                             01435000
CIWK1    EQU   IFGJCICB+328                                             01436000
CISVCLST EQU   IFGJCICB+336                                             01437000
CISYNADA EQU   CISVCLST                                                 01438000
CIBLDL   EQU   CISVCLST+4                                               01439000
CIBSP    EQU   CISVCLST+8                                               01440000
CIFEOV   EQU   CISVCLST+12                                              01441000
CISTOW   EQU   CISVCLST+16                                              01442000
RPLEXT   EQU   76                                                       01443000
RPLCICB  EQU   RPLEXT                                                   01444000
RPLSAVE  EQU   RPLEXT+4                                                 01445000
RPLDECB  EQU   RPLEXT+8                                                 01446000
USERSAV  EQU   0                                                        01447000
BDW      EQU   0                                                        01448000
BDWLL    EQU   BDW                                                      01449000
FILLERB  EQU   BDW+2                                                    01450000
RDW      EQU   -4                                                       01451000
RDWLL    EQU   RDW                                                      01452000
FILLER   EQU   RDW+2                                                    01453000
SEGCC    EQU   FILLER                                                   01454000
RPLARGAR EQU   0                                                        01455000
DUMMYIO  EQU   0                                                        01456000
DUMMYPTR EQU   DUMMYIO                                                  01457000
DUMMYIOB EQU   DUMMYIO+8                                                01458000
DUMMYCNT EQU   DUMMYIO+20                                               01459000
SEGMENT  EQU   0                                                        01460000
*                                      START UNREFERENCED COMPONENTS    01461000
DUMMYDCB EQU   DUMMYIO+28                                               01462000
@NM00023 EQU   DUMMYIO+24                                               01463000
@NM00022 EQU   DUMMYIO+16                                               01464000
DUMMYEPT EQU   DUMMYIO+12                                               01465000
@NM00021 EQU   DUMMYIO+5                                                01466000
DYMMYECB EQU   DUMMYIO+4                                                01467000
@NM00020 EQU   FILLER+1                                                 01468000
RPLRPLPT EQU   RPLEXT+12                                                01469000
@NM00019 EQU   RPLDECB+1                                                01470000
RPLRUDYN EQU   RPLDECB                                                  01471000
@NM00018 EQU   RPLSAVE+1                                                01472000
RPLBFREL EQU   RPLSAVE                                                  01473000
@NM00017 EQU   RPLCICB+1                                                01474000
RPLCIFLG EQU   RPLCICB                                                  01475000
CISTOWRC EQU   CISTOW                                                   01476000
CIFEOVRC EQU   CIFEOV                                                   01477000
CIBSPRC  EQU   CIBSP                                                    01478000
CIBLDLRC EQU   CIBLDL                                                   01479000
CISYNRC  EQU   CISYNADA                                                 01480000
CIWK2    EQU   IFGJCICB+332                                             01481000
CIFDBCK  EQU   IFGJCICB+284                                             01482000
CIRPLEXT EQU   IFGJCICB+268                                             01483000
CIFLAG4  EQU   CIFLAGS+3                                                01484000
@NM00016 EQU   CIFLAG3                                                  01485000
CIFERROR EQU   CIFLAG3                                                  01486000
CIFRAGM  EQU   CIFLAG3                                                  01487000
CIFCLOSE EQU   CIFLAG3                                                  01488000
CIFFSTP  EQU   CIFLAG3                                                  01489000
@NM00015 EQU   CIFLAG2                                                  01490000
CIFMDEVT EQU   CIFLAG2                                                  01491000
CIFMDSOR EQU   CIFLAG2                                                  01492000
CIFLAG1  EQU   CIFLAGS                                                  01493000
CIREGS   EQU   CIREGSAV+12                                              01494000
CIREGFC  EQU   CIREGSAV+8                                               01495000
@NM00014 EQU   CIREGSAV                                                 01496000
CIACBED  EQU   IFGJCICB+88                                              01497000
CIACBD   EQU   IFGJCICB+32                                              01498000
CIDCBPTR EQU   CIDUMIOB+28                                              01499000
@NM00013 EQU   CIDUMIOB+24                                              01500000
@NM00012 EQU   CIDUMIOB+16                                              01501000
CIECBPTR EQU   CIDUMIOB+12                                              01502000
@NM00011 EQU   CIDUMIOB+5                                               01503000
CIECBCD  EQU   CIDUMIOB+4                                               01504000
CINXTIOB EQU   CIDUMIOB                                                 01505000
RPLERMSA EQU   RPLCOMN+72                                               01506000
RPLEMLEN EQU   RPLCOMN+70                                               01507000
RPLACTIV EQU   RPLCOMN+69                                               01508000
RPLBRANC EQU   RPLEXTD1                                                 01509000
RPLNIB   EQU   RPLEXTD1                                                 01510000
@NM00010 EQU   RPLEXTD1                                                 01511000
RPLEXIT  EQU   RPLEXTD1                                                 01512000
RPLNEXIT EQU   RPLEXTD1                                                 01513000
RPLEXSCH EQU   RPLEXTD1                                                 01514000
@NM00009 EQU   RPLRBAR+3                                                01515000
@NM00008 EQU   RPLAIXID                                                 01516000
RPLAXPKP EQU   RPLAIXID                                                 01517000
RPLAIXPC EQU   RPLRBAR                                                  01518000
RPLRSV88 EQU   RPLOPT8                                                  01519000
RPLUNCON EQU   RPLOPT8                                                  01520000
RPLACTV  EQU   RPLOPT8                                                  01521000
RPLSESS  EQU   RPLOPT8                                                  01522000
RPLPEND  EQU   RPLOPT8                                                  01523000
RPLODPRM EQU   RPLOPT8                                                  01524000
RPLODACP EQU   RPLOPT8                                                  01525000
RPLODACQ EQU   RPLOPT8                                                  01526000
RPLRSV78 EQU   RPLOPT7                                                  01527000
RPLRSV77 EQU   RPLOPT7                                                  01528000
RPLRLSOP EQU   RPLOPT7                                                  01529000
RPLTPOST EQU   RPLOPT7                                                  01530000
RPLQOPT  EQU   RPLOPT7                                                  01531000
RPLCNIMM EQU   RPLCNOPT                                                 01532000
RPLCNANY EQU   RPLCNOPT                                                 01533000
RPLCNALL EQU   RPLCNOPT                                                 01534000
RPLRSV68 EQU   RPLOPT6                                                  01535000
RPLRSV67 EQU   RPLOPT6                                                  01536000
RPLLOCK  EQU   RPLOPT6                                                  01537000
RPLNCOND EQU   RPLOPT6                                                  01538000
RPLCOND  EQU   RPLOPT6                                                  01539000
RPLEOT   EQU   RPLUNTYP                                                 01540000
RPLEOM   EQU   RPLUNTYP                                                 01541000
RPLEOB   EQU   RPLUNTYP                                                 01542000
RPLWROPT EQU   RPLOPT5                                                  01543000
RPLNODE  EQU   RPLOPT5                                                  01544000
RPLERACE EQU   RPLWRTYP                                                 01545000
RPLEAU   EQU   RPLWRTYP                                                 01546000
RPLNERAS EQU   RPLWRTYP                                                 01547000
RPLPSOPT EQU   RPLOPT5                                                  01548000
RPLSSNIN EQU   RPLOPT5                                                  01549000
RPLDLGIN EQU   RPLOPT5                                                  01550000
RPLCHAIN EQU   RPLNXTRP                                                 01551000
RPLOPT4  EQU   RPLOPTCD+3                                               01552000
RPLALIGN EQU   RPLOPT3                                                  01553000
RPLFMT   EQU   RPLOPT3                                                  01554000
RPLFLD   EQU   RPLOPT3                                                  01555000
RPLVFY   EQU   RPLOPT3                                                  01556000
RPLBLK   EQU   RPLOPT3                                                  01557000
RPLSFORM EQU   RPLOPT3                                                  01558000
RPLEODS  EQU   RPLOPT3                                                  01559000
RPLNSP   EQU   RPLOPT2                                                  01560000
RPLUPD   EQU   RPLOPT2                                                  01561000
RPLWAITX EQU   RPLOPT2                                                  01562000
RPLLRD   EQU   RPLOPT2                                                  01563000
RPLBWD   EQU   RPLOPT2                                                  01564000
RPLCNV   EQU   RPLOPT2                                                  01565000
RPLADD   EQU   RPLADR                                                   01566000
RPLKEY   EQU   RPLOPT2                                                  01567000
RPLECBIN EQU   RPLECBSW                                                 01568000
RPLGEN   EQU   RPLOPT1                                                  01569000
RPLKGE   EQU   RPLOPT1                                                  01570000
RPLASY   EQU   RPLOPT1                                                  01571000
RPLSKP   EQU   RPLOPT1                                                  01572000
RPLSEQ   EQU   RPLOPT1                                                  01573000
RPLDIR   EQU   RPLOPT1                                                  01574000
RPLLOC   EQU   RPLOPT1                                                  01575000
RPLDAF   EQU   RPLARG+2                                                 01576000
RPLSAF   EQU   RPLARG                                                   01577000
RPLTCBPT EQU   RPLCOMN+28                                               01578000
RPLDACB  EQU   RPLCOMN+24                                               01579000
RPLSTRID EQU   RPLCOMN+18                                               01580000
RPLKEYL  EQU   RPLKEYLE                                                 01581000
RPLRDSOH EQU   RPLFDB3                                                  01582000
RPLRLG   EQU   RPLFDB3                                                  01583000
RPLLGFRC EQU   RPLFDB3                                                  01584000
RPLREOT  EQU   RPLFDB3                                                  01585000
RPLREOM  EQU   RPLFDB3                                                  01586000
RPLREOB  EQU   RPLFDB3                                                  01587000
RPLSV32  EQU   RPLFDB3                                                  01588000
RPLUINPT EQU   RPLFDB3                                                  01589000
RPLSTSAV EQU   RPLFDB2                                                  01590000
RPLCUERR EQU   RPLFDB2                                                  01591000
RPLDLGFL EQU   RPLFDB2                                                  01592000
RPLIOERR EQU   RPLFDB2                                                  01593000
RPLDVUNS EQU   RPLFDB2                                                  01594000
RPLATND  EQU   RPLFDB2                                                  01595000
RPLRVID  EQU   RPLFDB2                                                  01596000
RPLERLK  EQU   RPLFDB2                                                  01597000
RPLERREG EQU   RPLRTNCD                                                 01598000
RPLSTAT  EQU   RPLFDBWD                                                 01599000
RPLPOST  EQU   RPLECB                                                   01600000
RPLWAIT  EQU   RPLECB                                                   01601000
RPLPLHPT EQU   RPLCOMN+4                                                01602000
RPLLEN2  EQU   RPLLEN                                                   01603000
RPLREQ   EQU   RPLIDWD+2                                                01604000
RPLSTYP  EQU   RPLIDWD+1                                                01605000
RPLID    EQU   RPLIDWD                                                  01606000
DCBEOB   EQU   IFGSDCB+92                                               01607000
DCBPRECL EQU   IFGSDCB+90                                               01608000
@NM00007 EQU   IFGSDCB+88                                               01609000
DCBPOINT EQU   DCBNOTE                                                  01610000
DCBEROPT EQU   @NM00006                                                 01611000
DCBQSWS  EQU   DCBDIRCT                                                 01612000
DCBCCCW  EQU   DCBRECAD                                                 01613000
DCBOFFSW EQU   IFGSDCB+67                                               01614000
DCBOFFSR EQU   IFGSDCB+66                                               01615000
DCBWCPL  EQU   IFGSDCB+65                                               01616000
DCBWCPO  EQU   IFGSDCB+64                                               01617000
DCBCIND2 EQU   IFGSDCB+61                                               01618000
DCBCIND1 EQU   IFGSDCB+60                                               01619000
DCBSYNAD EQU   IFGSDCB+57                                               01620000
DCBIOBL  EQU   IFGSDCB+56                                               01621000
DCBPERR  EQU   DCBGERR                                                  01622000
DCBOPTCD EQU   IFGSDCB+52                                               01623000
DCBMACR  EQU   DCBPUT+1                                                 01624000
DCBIFLG  EQU   DCBPUT                                                   01625000
DCBOFLGS EQU   IFGSDCB+48                                               01626000
DCBDEBAD EQU   DCBDDNAM+5                                               01627000
DCBIFLGS EQU   DCBDDNAM+4                                               01628000
DCBTIOT  EQU   DCBDDNAM                                                 01629000
DCBEXLST EQU   IFGSDCB+37                                               01630000
DCBEODAD EQU   IFGSDCB+33                                               01631000
DCBBFALN EQU   DCBBFTEK                                                 01632000
DCBSVCXL EQU   DCBIOBAD                                                 01633000
DCBDSORG EQU   IFGSDCB+26                                               01634000
DCBBUFL  EQU   IFGSDCB+24                                               01635000
DCBBUFNO EQU   DCBBUFCB                                                 01636000
@NM00003 EQU   IFGSDCB+16                                               01637000
@NM00002 EQU   IFGSDCB                                                  01638000
DECNEXT  EQU   DECB+20                                                  01639000
DECTYPE  EQU   DECB+5                                                   01640000
@NM00001 EQU   DECBCODE                                                 01641000
DECBCOMP EQU   DECBCODE                                                 01642000
DECBWAIT EQU   DECBCODE                                                 01643000
*                                      END UNREFERENCED COMPONENTS      01644000
@RC00178 EQU   @RC00177                                                 01645000
@RT00188 EQU   EODADRTN                                                 01646000
@RF00188 EQU   QMAPPED                                                  01647000
@RC00203 EQU   GETIT                                                    01648000
@RT00209 EQU   FIXBLOCK                                                 01649000
@RF00243 EQU   WRCNT                                                    01650000
@RT00254 EQU   ABEND                                                    01651000
@RT00263 EQU   NOMOVE                                                   01652000
@RT00287 EQU   ABEND                                                    01653000
@RT00300 EQU   ABEND                                                    01654000
@RF00328 EQU   CONTIN03                                                 01655000
@RT00339 EQU   EXIT                                                     01656000
@RF00355 EQU   WRITIT                                                   01657000
@RT00367 EQU   EXIT                                                     01658000
@RC00382 EQU   REND                                                     01659000
CNTRLRTN EQU   EXIT                                                     01660000
@RC00411 EQU   EXIT                                                     01661000
@RC00417 EQU   REND                                                     01662000
@EL01    EQU   @EL00001                                                 01663000
@ENDDATA EQU   *                                                        01664000
         END   IGG019DK,(C'PLS0858',0701,78076)                         01665000
