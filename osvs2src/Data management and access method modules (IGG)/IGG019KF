   TITLE 'IGG019KF - BDAM RELATIVE BLOCK CONVERT WITH TRACK OVERFLOW'   00040002
IGG019KF CSECT                                                          00040402
*MODULE NAME - IGG019KF                                               * 00042002
*                                                                     * 00042402
*DESCRIPTIVE NAME - BDAM RELATIVE BLOCK CONVERSION, TRK OVERFLOW      * 00042802
*                                                                     * 00042902
*COPYRIGHT - NONE                                                     * 00047902
*                                                                     * 00049902
*CHANGE ACTIVITY                                                      * 00051902
*                                                                     * 00053002
*          OS REL 20 CHANGES/DELETIONS                                  00065002
*2970000600-000620,000660-000700                                  20201 00075021
*          OS REL 21 CHANGES/DELETIONS                                  00075102
*3565                                                            A49315 00075202
*3565037000                                                      A43932 00075302
*          VS 1-1 CHANGES/DELETIONS                                     00077802
*          VS 2-1 CHANGES/DELETIONS                                     00079802
*          VS 1-2 CHANGES/DELETIONS                                     00080202
*          VS 2-2 CHANGES/DELETIONS                                     00080302
*                                                                Y02072 00080402
*                                                                YM3029 00084302
*                                                                       00088302
*STATUS CHANGE LEVEL 005                                                00092202
*                                                                       00096102
*FUNCTION/OPERATION- THIS MODULE IS ENTERED TO CONVERT THE USER'S     * 00100000
*   RELATIVE BLOCK ADDRESS TO AN ACTUAL TRACK ADDRESS OF THE FORM     * 00120000
*   MBBCCHHR. THIS IS ACCOMPLISHED BY OBTAINING THE RELATIVE BLOCK    * 00140000
*   NUMBER FROM THE BLKREF FIELD ASSOCIATED WITH THIS REQUEST AND     * 00160000
*   CONVERTING TO A TTR(RELATIVE TRACK AND ID) VALUE. THIS CONVERSION * 00180000
*   IS ACCOMPLISHED BY USING RELATIVE EXTENTS, RECORDS/PERIOD, AND    * 00200000
*   TRACKS/PERIOD,ALL OF WHICH ARE PUT IN THE DEB AT OPEN TIME. THE   * 00220000
*   ROUTINE ALSO SIMULATES THE WRITING OF AN OVERFLOW DATA SET TO     * 00240000
*   GET THE EXACT POSITION OF THE BLOCK IN THE DATA SET.              * 00260000
*   THE TTR VALUE IS THEN PASSED TO THE RESIDENT ROUTINE WHICH        * 00280000
*   CONVERTS TTR TO AN ACTUAL ADDRESS.                                * 00300000
*                                                                     * 00320000
*ENTRY POINT- 'IGG019KF' IS THE ENTRY POINT TO THIS ROUTINE FROM THE  * 00340000
*   BDAM FOUNDATION MODULE(IGG019KA) AND FROM THE READ EXCLUSIVE SVC. * 00360002
*   THE CALLING SEQUENCE IS AS FOLLOWS:                               * 00370002
*            L    15,4(FOUNDATION BASE)                               * 00380002
*            BALR 14,15 - IF 19KA                                     * 00400002
*         OR SYNCH (15) - IF SVC 53                                   * 00410002
*   'BEGIN' IS THE ENTRY POINT FROM THE OVERFLOW FEEDBACK MODULE.     * 00420000
*   CALLING SEQUENCE IS                                               * 00440000
*            L    15,4(FOUNDATION BASE)                               * 00460002
*            B    4(0,15)                                             * 00480002
*                                                                     * 00500000
*INPUT- THE REGISTERS HAVE BEEN LOADED AS FOLLOWS,                    * 00520000
*   3 - ADDRESS OF THE DEB                                            * 00540000
*   4 - ADDRESS OF THE DCB                                            * 00560000
*   5 - ADDRESS OF THE DECB                                           * 00580000
*   7 - ADDRESS OF THE IOB FOR THIS REQUEST                           * 00600000
*   11- BASE ADDRESS OF THE FOUNDATION MODULE                         * 00620000
*   THE RELATIVE BLOCK NUMBER IS OBTAINED BY LOADING THE ADDRESS OF   * 00640000
*   BLKREF FROM THE DECB (DECRECPT) AND MOVING THE CONTENTS OF BLKREF * 00660000
*   TO THE IOB FOR ALIGNMENT                                          * 00680000
*                                                                     * 00700000
*OUTPUT- THE ACTUAL ADDRESS WILL BE DEVELOPED AND STORED INTO THE IOB * 00720000
*   AT THE LOCATION 'IOBSEEK'. THE REGISTERS DESCRIBED AS INPUT WILL  * 00740000
*   BE UNCHANGED WHEN THIS MODULE RETURNS TO THE FOUNDATION MODULE    * 00760000
*                                                                     * 00780000
*EXTERNAL ROUTINE- 'IECPCNVT IS USED TO CONVERT TTR TO AN ACTUAL      * 00800000
*   ADDRESS AND STORE IT IN THE IOB.                                  * 00820000
*                                                                     * 00840000
*EXIT-NORMAL- 'EXITFDN' IS THE EXIT TO RETURN TO THE FOUNDATION       * 00860000
*   MODULE AFTER CONVERSION HAS BEEN SUCCESSFULLY COMPLETED.          * 00880000
*   'RLBLFDBK' IS THE RETURN TO THE FEEDBACK ROUTINE.                 * 00900000
*                                                                     * 00920000
*    -ERROR- 'EXITERR' IS THE EXIT TO THE INVALID REQUEST ERROR       * 00940000
*   ROUTINE IN THE FOUNDATION MODULE. AN ERROR CODE IS PASSED IN      * 00960000
*   REGISTER 12 AND WILL BE PLACED IN THE ECB WHEN THE ERROR ROUTINE  * 00980000
*   ISSUES A POST. THE CAUSE OF THE INVALID REQUEST IS A RELATIVE     * 01000000
*   BLOCK NUMBER GREATER THAN THE TOTAL BLOCKS IN THE DATA SET.       * 01020000
*                                                                     * 01040000
*TABLES/WORK AREAS- THE COMMUNICATION VECTOR TABLE IS REFERENCED      * 01060000
*   TO LOCATE THE RESIDENT TTR TO ACTUAL CONVERSION ROUTINE.          * 01080000
*   THE DIRECT ACCESS DEVICE TABLE (DADT) IS REFERENCED TO GET THE    * 01100000
*   ATTRIBUTES OF THE DEVICE ON WHICH THE DATA SET RESIDES            * 01120000
*                                                                     * 01140000
*ATTRIBUTES- THIS MODULE IS REENTRANT  AND EXECUTED ENABLED           * 01160000
*   IT EXECUTES IN PROBLEM PROGRAM STATE, USER KEY.                   * 01170002
*                                                                     * 01180000
*NOTES- THE REGISTER USAGE IN THIS MODULE MUST REMAIN CONSISTENT      * 01200000
*   WITH THE MODULES IGG019KA AND IECPCNVT.                           * 01220000
*                                                                     * 01240000
*                                                                     * 01260000
         EJECT                                                          01280000
*                                                                       01300000
         USING IGG019KF,BASE                                            01320000
         USING IOBSTDRD,IOBREG                                   Y02072 01330002
         USING DEBDEF,DEBREG                                            01360000
         USING IHADCB,DCBREG                                            01380000
         USING DECBDEF,DECBREG                                          01400000
*                                                                       01420000
*              REGISTER USAGE                                           01440000
*                                                                       01460000
WKREG0   EQU   0                       WORKING REGISTER                 01480000
SREG1    EQU   1                        PARAMETER REGISTER FOR BPAM     01500000
REXREG2  EQU   1                                                        01520000
RRREG    EQU   2                       LENGTH OF A REGULAR RECORD       01540000
SREG2    EQU   2                        PARAMETER REGISTER FOR BPAM     01560000
DEBREG   EQU   3                       DEB ADDRESS                      01580000
CTOVREG  EQU   3                       CT+ITS OVERHEAD                  01600000
DCBREG   EQU   4                       DCB ADDRESS                      01620000
WORKREG  EQU   4                       TEMPORARY DEB BASE & UCB  A49315 01626021
*                                       PTR                      A49315 01632021
DECBREG  EQU   5                       DECB ADDRESS                     01640000
WKREG3   EQU   6                       WORKING REGISTER                 01660000
IOBREG   EQU   7                        IOB ADDRESS                     01680000
WKREG1   EQU   8                       WORKING REGISTER                 01700000
SREG8    EQU   8                                                        01720000
WKREG2   EQU   9                       WORKING REGISTER                 01740000
WKREG4   EQU   10                      WORKING REGISTER                 01760000
CTKYREG  EQU   10                      COUNT + KEY LENGTH               01780000
NRCDREG  EQU   11                      NUMBER OF RECORDS/PERIOD         01800000
FDNBASE  EQU   11                      BASE FOR FOUNDATION MODULE       01820000
INTREG   EQU   12                      INTERNAL RETURN FOR THIS MODULE  01840000
SREG12   EQU   12                      ERROR CONDITION REGISTER         01860000
TABREG   EQU   12                      POINTER TO TABLE ENTRY FOR TYPE  01880000
TRLREG   EQU   12                      LENGTH OF TRACK FOR OUR TYPE DEV 01900000
NTRKREG  EQU   13                      NUMBER OF TRACKS/PERIOD          01920000
LRREG    EQU   14                      LENGTH OF LAST RECORD            01940000
RETREG   EQU   14                      RETURN TO FOUNDATION MODULE      01960000
SREG14   EQU   14                       PARAMETER REGISTER FOR BPAM     01980000
BASE     EQU   15                      BASE REGISTER FOR THIS MODULE    02000000
SREG15   EQU   15                       PARAMETER REGISTER FOR BPAM     02020000
*                                                                       02040000
*                                                                       02060000
         EJECT                                                          02080000
         B     RRSTART                 BRANCH TO START OF THIS MODULE   02100000
         B     BEGIN                   BRANCH TO OVERFLOW ROUTINE       02120000
RRSTART  L     WKREG3,DECRECPT          LOAD ADDR. OF RELATIVE RECORD   02140000
*                                        VALUE                          02160000
         MVC   IOBCSW(3),0(WKREG3)      MOVE VALUE TO IOB        Y02072 02180002
         L     WKREG3,IOBCSW-1          LOAD VALUE INTO REGISTER Y02072 02200002
         LA    SREG2,IOBSEEK            SET POINTER TO IOBSEEK FIELD    02220000
DEBPT    LR    WKREG1,DEBREG            LOAD ADDR. OF DEB               02240000
         LA    WKREG1,EXT1(0,WKREG1)    SET POINTER TO FIRST EXTENT     02260000
         LR    WKREG2,WKREG1            SET UP TO DETERMINE ADDRESS OF  02280000
         SR    WKREG4,WKREG4             FIRST RELATIVE RECORD EXTENT   02300000
         IC    WKREG4,DEBNMEXT          LOAD NUMBER OF EXTENTS          02320000
RREXT    LA    WKREG2,EXTSN(0,WKREG2)   ADD EXTENT SIZE TO RELATIVE     02340000
*                                        RECORD EXTENT POINTER          02360000
         BCT   WKREG4,RREXT             WAS THIS THE LAST EXTENT        02380000
*                                       NO-INCREMENT POINTER            02400000
*                                       YES-WKREG2 NOW POINTS TO FIRST  02420000
*                                        RELATIVE RECORD EXTENT         02440000
         LR    WKREG4,WKREG2            SAVE POINTER TO PERIOD FIELD    02460000
         LA    WKREG2,8(0,WKREG2)       UPDATE POINTER TO EXTENTS       02480000
         SR    SREG1,SREG1                                              02500000
         IC    SREG1,DEBNMEXT          LOAD NUMBER OF EXTENTS           02520000
         SR    WKREG0,WKREG0            CLEAR REGISTER                  02540000
RELTRK   EQU   *                                                        02560000
         MVC   IOBCSW(3),1(WKREG2)      MOVE NO. OF RECORDS IN THIS     02580002
*                                        EXTENT TO ALIGN VALUE          02600000
         S     WKREG3,IOBCSW-1          SUBTRACT VALUE FROM GIVEN       02620002
*                                        RELATIVE RECORD ADDRESS        02640000
         BC    4,OVER                   ADDRESS IN THIS EXTENT          02660000
         AH    WKREG0,TRK(0,WKREG1)     NO-ADD NO. OF TRACKS IN THIS    02680000
*                                        EXTENT TO RESULT REG.          02700000
         LA    WKREG1,EXTSN(0,WKREG1)   INCREMENT NORMAL EXTENT POINTER 02720000
         LA    WKREG2,EXTSR(0,WKREG2)   INCREMENT REL. REC. EXTENT PTR. 02740000
         BCT   SREG1,RELTRK            WAS THIS LAST EXTENT             02760000
*                                       NO CONTINUE  CALCULATION        02780000
         SR    SREG12,SREG12            YES-ERROR,REL. REC. NOT IN DATA 02800000
         IC    SREG12,ERRCODE            SET                            02820000
         TM    IOBSTAT1,IOBSYNCH        MODULE ENTERED BY SYNCH? Y02072 02830002
*                                       (ENTRY FROM EXCL CNTROL) Y02072 02830402
         BOR   RETREG                   YES, RETURN ON R14       Y02072 02832002
         L     RETREG,20(0,FDNBASE)    LOAD ADDRESS OF ERROR RETURN     02840000
EXITERR  BR    RETREG                   AND GO TO ERROR ROUTINE         02860000
*                                                                       02880000
OVER     EQU   *                                                        02900000
         A     WKREG3,IOBCSW-1          ADD NO. OF RECORDS IN THIS      02920002
*                                        EXTENT BACK TO REL. REC. VALUE 02940000
SUBPRD   EQU   *                                                        02960000
         S     WKREG3,4(0,WKREG4)      SUBTRACT RECORDS/PERIOD          02980000
         BM    OVER1                   IF MINUS LEAVE THE LOOP          03000000
         A     WKREG0,0(0,WKREG4)      ADD ON TRACKS/PERIOD             03020000
         B     SUBPRD                  LOOP BACK                        03040000
OVER1    EQU   *                                                        03060000
         A     WKREG3,4(0,WKREG4)      ADD RECORDS PER PERIOD BACK ON   03080000
         B     BEGIN                   GO TO OVERFLOW ROUTINE           03100000
SETUPREG EQU   *                                                        03120000
         LA    WKREG2,1(0,WKREG2)       ADD ONE TO REMAINDER            03140000
         SLL   WKREG0,8                 SHIFT TT REG ONE BYTE TO LEFT   03160000
         OR    WKREG0,WKREG2            PLACE REC. ID IN TT REG         03180000
CONVERT  SLL   WKREG0,8                 SHIFT TTR REG ONE BYTE TO LEFT  03200000
*                                        REG IS NOW IN FORMAT REQUIRED  03220000
*                                        BY BPAM                        03240000
*              SAVE REGISTERS                                           03260000
         STM   SREG8,SREG15,IOBDNCRF    SAVE REGISTERS 8-15             03280002
         LR    SREG1,DEBREG             SET POINTER TO DEB              03300000
         L     SREG15,CVTPTR(0,0)       LOAD ADDR. OF COMM.VECTOR TABLE 03320000
         L     SREG15,CVTPCNVT-CVTDEF(0,SREG15)  LOAD ADDRESS OF        03340000
*                                            CONVERSION ROUTINE         03360000
         BALR  SREG14,SREG15            GO TO CONVERT ROUTINE           03380000
*              RESTORE REGISTERS                                        03400000
RETURN   EQU   *                                                        03420000
         LM    SREG8,SREG15,IOBDNCRF    RESTORE REGISTERS 8-15          03440002
         TM    IOBSTAT1,IOBSYNCH        MODULE ENTERED BY SYNCH? Y02072 03450002
*                                       ENTRY FROM EXCL CNTROL   Y02072 03450402
         BZ    TSTEXSCH                 BRANCH IF NOT            Y02072 03452002
         SR    SREG12,SREG12            ZERO RETURN CODE         Y02072 03454002
         BR    RETREG                   RETURN                   Y02072 03456002
TSTEXSCH TM    IOBDTYPE,IOBEXTSC        IS EXTENDED SEARCH OPTION USED  03460002
         BCR   8,RETREG                 NO-RETURN TO FOUNDATION MODULE  03480000
RREXTS1  TM    IOBSTAT1,IOBPASS2        FIRST PASS FOR THIS IOB         03500002
         BC    1,CLEANUP                NO                              03520000
         L     WKREG3,DECRECPT          YES-MOVE STARTING RELATIVE      03540000
         MVC   IOBCSW(3),0(WKREG3)       RECORD VALUE TO IOB            03560002
         LA    SREG2,IOBUPLIM           SET POINTER FOR CONVERT ROUTINE 03580000
         OI    IOBSTAT1,IOBPASS2        SET FIRST PASS INDICATOR        03600002
         L     WKREG3,0(0,WKREG4)      LOAD TRACKS/PERIOD               03620000
         L     WKREG2,4(0,WKREG4)      LOAD RECORDS/PERIOD              03640000
         SR    WKREG1,WKREG1                                            03660000
         DR    WKREG1,WKREG3           DIVIDE RECORDS/PER BY TRACKS/PER 03680000
         LA    WKREG4,1(0,WKREG2)       ADD ONE TO QUOTIENT IF 0 A43932 03700021
         L     WKREG3,DCBLIMCT-1       GET LIMCT                        03720000
         LA    WKREG3,0(0,WKREG3)      CLEAR HI ORDER BYTE              03740000
         AR    WKREG3,WKREG4           ADD RECORDS/TRACK(APPROXIMATE)   03760000
*                                      TO LIMCT                         03780000
         L     WKREG4,DCBKEYLE         GET DATA SET SIZE                03800000
         LA    WKREG4,0(0,WKREG4)      CLEAR HI ORDER BYTE              03820000
         CR    WKREG3,WKREG4           COMPARE LIMCT+ RECORDS/TRACK TO  03840000
         BL    ADDSTART                DATA SET SIZE. IF LOW BRANCH     03860000
         MVC   IOBUPLIM,IOBSEEK         YES-SET ENDING ADDRESS EQUAL TO 03880002
*                                        START ADDRESS                  03900000
CLEANUP  NI    IOBSTAT1,X'FF'-IOBPASS2  CLEAR FIRST PASS INDICATOR      03920002
         MVI   IOBUPLIM+7,X'00'         SET R IN UPLIM TO ZERO          03940000
         CLC   IOBUPLIM(1),IOBSEEK      IS EXTENDED SEARCH LIMIT IN     03960000
*                                        SAME EXTENT AS START ADDRESS   03980000
         BC    6,DUMMYID                NO                              04000000
         CLC   IOBSEEK+3(4),IOBUPLIM+3  DOES SEARCH WRAP AROUND         04020000
         BCR   4,RETREG                 NO-RETURN TO FOUNDATION MODULE  04040000
DUMMYID  MVI   IOBUPLIM+7,X'FE'         SET RECORD ID IN UPLIM TO 255   04060000
EXITFDN  EQU   *                                                        04080000
         BCR   15,RETREG                RETURN TO FOUNDATION MODULE     04100000
*                                                                       04120000
*                                                                       04140000
ADDSTART EQU   *                                                        04160000
         A     WKREG3,IOBCSW-1          ADD STARTING RELATIVE RECORD TO 04180002
*                                        EXTENDED SEARCH VALUE          04200000
         MVC   IOBCSW(3),DCBREL         ALIGN SIZE OF DATA SET          04220002
         CL    WKREG3,IOBCSW-1          COMPARE RESULT WITH SIZE OF     04240002
*                                        DATA SET                       04260000
         BL    DEBPT                    BRANCH IF SEARCH DOES NOT WRAP  04280000
*                                        AROUND TO START OF DATA SET    04300000
         S     WKREG3,IOBCSW-1          ADJUST ENDING ADDRESS SO THAT   04320002
*                                        IT FALLS WITHIN DATA SET       04340000
         B     DEBPT                    GO TO CONVERT ENDING ADDRESS    04360000
*                                                                       04380000
*                                                                       04400000
*                                                                       04420000
BEGIN    EQU   *                                                        04440000
         STM   SREG2,DEBREG,IOBCSW-1   SAVE REGISTERS NECESSARY         04460002
         STM   WKREG2,SREG14,IOBDNCRF   FOR THIS ROUTINE                04480002
NEWEXT   EQU   *                                                        04500000
         L     WKREG2,CVTPTR(0,0)      GET A POINTER TO THE DIRECT      04520000
         L     WKREG2,CVTZDTAB-CVTDEF(0,WKREG2) ACCESS DEVICE TABLE     04540000
         L     TABREG,DEBUCBAD         LOCATE DEVICE TYPE TO MATCH UCB  04560000
         SR    LRREG,LRREG             CLEAR OUT REGISTER               04580000
         IC    LRREG,UCBTYPCD(0,TABREG) IN THE TABLE BY USING TYPE CODE 04600000
         LA    TABREG,15               SET THE MASK                     04620000
         NR    LRREG,TABREG             CLEAR ALL BUT LOW ORDER 4 BITS  04640000
         IC    LRREG,0(LRREG,WKREG2)    IN FRONT OF THE TABLE           04660000
         LA    TABREG,0(LRREG,WKREG2)  TABREG POINTS TO TABLE ENTRY     04680000
*                                                                       04700000
         SR    RRREG,RRREG             CLEAR OUT WORK REGISTERS         04720000
         SR    WKREG1,WKREG1                                            04740000
         IC    RRREG,DCBKEYLE          IF THERE ARE NO KEYS, THE        04760000
         LTR   RRREG,RRREG              OVERHEAD FACTOR WILL BE REDUCED 04780000
         BC    7,*+8                    BY OVERHEAD FOR KEYS            04800000
         IC    WKREG1,OVERK(0,TABREG)                                   04820000
         IC    LRREG,OVERL(0,TABREG)                                    04840000
         TM    BYTEDEV(TABREG),TBOVHD   2 BYTE OVERHD USED       20201  04844020
         BNO   MZ0010                   NO, USE ONE BYTE OVHD    20201  04848020
         LH    LRREG,OVERI(TABREG)      GET 2 BYTE OVERHEAD      20201  04852020
MZ0010   EQU   *                                                 20201  04856020
         SR    LRREG,WKREG1            LRREG HAS OVERHEAD FACTOR        04860000
         LR    CTKYREG,LRREG           GET COUNT + KEY INTO             04880000
         AR    CTKYREG,RRREG             REGISTER CTKYREG               04900000
         AH    RRREG,DCBBLKSI          KL+DL IN RRREG                   04920000
         AR    LRREG,RRREG             LRREG HAS LAST RECORD LENGTH     04940000
         MH    RRREG,TOLER(0,TABREG)   CALCULATE 1.049(KL+DL)+OVERHEAD  04960000
         SRL   RRREG,9                                                  04980000
         SR    WKREG2,WKREG2           DEVELOP OVERHEAD FOR             05000000
         IC    WKREG2,OVERI(0,TABREG)   INTERMEDIATE RECORDS            05020000
         TM    BYTEDEV(TABREG),TBOVHD   2 BYTE OVERHD USED       20201  05024020
         BNO   MZ0020                   NO, USE ONE BYTE OVHD    20201  05028020
         LH    WKREG2,OVERI(TABREG)     GET 2 BYTE OVERHEAD      20201  05032020
MZ0020   EQU   *                                                 20201  05036020
         SR    WKREG2,WKREG1            (REDUCE IF NO KEYS PRESENT)     05040000
         AR    RRREG,WKREG2            RRREG HAS SIZE OF REGULAR REC'D  05060000
         SR    CTOVREG,CTOVREG                                          05080000
         IC    CTOVREG,OVERI(0,TABREG) GET OVERHEAD FOR REGULAR RECORDS 05100000
         TM    BYTEDEV(TABREG),TBOVHD   2 BYTE OVERHD USED       20201  05104020
         BNO   MZ0030                   NO, USE ONE BYTE OVHD    20201  05108020
         LH    CTOVREG,OVERI(TABREG)    GET 2 BYTE OVERHEAD      20201  05112020
MZ0030   EQU   *                                                 20201  05116020
         IC    WKREG1,OVERK(0,TABREG)  AND SUBTRCT OVERHEAD FOR KEYS TO 05120000
         SR    CTOVREG,WKREG1          GET COUNT AND ITS OVERHEAD.      05140000
         LH    WKREG1,TOLER(0,TABREG)                                   05160000
         STH   WKREG1,IOBUPLIM         SAVE THE OVERHEAD FACTOR         05180000
         LH    TRLREG,TRKL(0,TABREG)   GET TRACK LENGTH                 05200000
         SR    NTRKREG,NTRKREG         CLEAR OUT FOR TRACKS/PERIOD      05220000
         SR    NRCDREG,NRCDREG         CLEAR OUT FOR RECORDS/PERIOD     05240000
         CR    LRREG,TRLREG           COMPARE RECORD LENGTH TO THIS     05260000
         BH    BIGRECRD                IF HIGH IT'S MORE THAN ONE TRACK 05280000
         LR    WKREG2,TRLREG           GET TRACK LENGTH                 05300000
LOOP     SR    WKREG1,WKREG1           CLEAR OUT REGISTER FOR DIVISION  05320000
         DR    WKREG1,RRREG            DIVIDE LENGTH OF TRACK BY        05340000
*                                      REGULAR RECORD LENGTH WKREG2=    05360000
*                                      QUOTIENT,WKREG1= REMAINDER       05380000
         LA    NTRKREG,1(0,NTRKREG)    ADD ONE TO TRACK COUNT           05400000
         AR    NRCDREG,WKREG2          ADD QUOTIENT TO NO. OF RECORDS   05420000
         TM    IOBDTYP2,IOBRBFDB       FROM THE RELATIVE BLOCK FEEDBACK 05440002
         BZ    CONVERTP                ROUTINE. NO CONTINUE             05460000
         CR    WKREG0,NTRKREG          COMPARE TRACKS REMAINING T.      05480000
         BE    RLBLFDBK                TRACK COUNT.                     05500000
         B     COMMONCD                BRANCH AROUND CONVERT PORTION    05520000
CONVERTP EQU   *                                                        05540000
         CR    WKREG3,NRCDREG          COMPARE BLOCK COUNT AGAINST      05560000
         BC    12,RLBLCNVT             RECORD COUNT.IF LOW OR EQUAL BR. 05580000
COMMONCD EQU   *                                                        05600000
         LR    WKREG2,WKREG1                                            05620000
         SR    WKREG2,CTKYREG          SUBTRACT COUNT + KEY LENGTH      05640000
         LA    NRCDREG,1(0,NRCDREG)    ADD ONE TO RECORD COUNT          05660000
         LH    WKREG1,DCBBLKSI         GET THE SIZE OF A RECORD AND     05680000
         SR    WKREG1,WKREG2           SUBTRACT THE AMOUNT OF BYTES     05700000
         MH    WKREG1,IOBUPLIM         ALREADY WRITTEN ON LAST TRACK    05720000
         SRL   WKREG1,9                THEN MULTIPLY BY TOLERANCE       05740000
         LR    WKREG2,TRLREG           GET TRACK LENGTH AND SUBTRACT    05760000
         SR    WKREG2,CTOVREG          CT AND ITS OVERHEAD FROM IT AND  05780000
         SR    WKREG2,WKREG1           THEN SUBTRACT DATA+ALL OVERHEAD  05800000
         B     LOOP                    GO BACK FOR NEXT TRACK           05820000
BIGRECRD EQU   *                                                        05840000
         LA    NTRKREG,1(0,NTRKREG)    ADD ONE TO TRACK COUNT           05860000
         LR    WKREG1,LRREG            GET RECORD LENGTH AND            05880000
         SR    WKREG1,TRLREG           SUBTRACT LENGTH OF TRACK FROM IT 05900000
LOOP2    EQU   *                                                        05920000
         SR    WKREG2,WKREG2                                            05940000
LOOP3    EQU   *                                                        05960000
         TM    IOBDTYP2,IOBRBFDB       FROM THE RELATIVE BLOCK FEEDBACK 05980002
         BZ    CONVERTL                 ROUTINE. NO CONTINUE            06000000
         CR    WKREG0,NTRKREG          COMPARE TRACKS REMAINING T.      06020000
         BE    RLBLFDBK                TRACK COUNT.                     06040000
         B     LARGCOMM                BRANCH AROUND CONVERT PORTION    06060000
CONVERTL EQU   *                                                        06080000
         CR    WKREG3,NRCDREG          COMPARE BLOCK COUNT AGAINST      06100000
         BC    12,RLBLCNVT             RECORD COUNT.IF LOW OR EQUAL BR. 06120000
LARGCOMM EQU   *                                                        06140000
         LA    NTRKREG,1(0,NTRKREG)    ADD ONE TO TRACK COUNT           06160000
         SR    WKREG1,TRLREG           SUBTRACT LENGTH OF TRACK         06180000
         DROP  DCBREG                                            A49315 06182021
         L     WORKREG,IOBCSW+3        LOAD DEB PTR SAVED IN IOB A49315 06184002
         USING DEBDEF,WORKREG          ESTABLISH R4 AS DEB BASE  A49315 06186021
         L     WORKREG,DEBUCBAD        LOAD UCB ADDR FROM DEB    A49315 06188021
         DROP  WORKREG                                           A49315 06190021
         TM    UCBTYP+1(WORKREG),RPSDEV   IS THIS AN RPS DEVICE  A49315 06192021
         L     DCBREG,IOBDCBPT         RELOAD DCB BASE BEFORE BR A49315 06194021
         USING IHADCB,DCBREG           REESTABLISH REG AS DCB    A49315 06196021
*                                       BASE                     A49315 06198021
         BNO   NOTRPS                  IF NOT, BR AROUND         A49315 06200021
*                                       OVERHEAD LOGI            A49315 06202021
RPS      EQU   *                                                 A49315 06204021
         AR    WKREG1,CTOVREG          ADD ON OVERHEAD FOR RPS   A49315 06206021
         LTR   WKREG1,WKREG1           IS RECORD STILL LARGER    A49315 06208021
*                                       THAN TRK                 A49315 06210021
         BP    LOOP3                   YES, GO GET NEXT TRACK    A49315 06212021
         SR    WKREG1,CTOVREG          ELSE, SUBTRACT OVERHEAD   A49315 06214021
         B      LASTTRK                BRANCH AROUND NEXT INST   A49315 06216021
NOTRPS   EQU   *                                                 A49315 06218021
         LTR   WKREG1,WKREG1           TEST TO SEE IF THE RESULT IS     06220000
         BP    LOOP3                   POSITIVE YES LOOP BACK           06240000
LASTTRK  EQU   *                                                        06260000
         LA    NRCDREG,1(0,NRCDREG)    ADD ONE TO RECORD COUNT          06280000
         AR    WKREG1,TRLREG           ADD TRACK LENGTH BACK ON         06300000
         LR    WKREG2,TRLREG           GET TRACK LENGTH AND             06340000
         SR    WKREG2,CTOVREG          SUBTRACT COUNT FROM IT AND THEN  06360000
         MH    WKREG1,IOBUPLIM         MULTIPLY REMAINING DATA BYTES    06380000
         SRL   WKREG1,9                BY THE OVERHEAD FACTOR AND       06400000
         SR    WKREG2,WKREG1           SUBTRACT IT FROM THE RESULT AND  06420000
         LR    WKREG1,LRREG            GET LENGTH OF RECORD AND         06440000
         SR    WKREG1,WKREG2           SUBTRACT AMOUNT OF BYTES LEFT ON 06460000
         B     LOOP2                   THIS TRACK AND GO BACK TO START  06480000
RLBLCNVT EQU   *                                                        06500000
         SR    NRCDREG,WKREG2          REDUCE RCD CT BY AMT JUST ADDED  06520000
         SR    WKREG3,NRCDREG          REDUCE BLKREF BY RCD CT IN PRD   06540000
         LA    WKREG2,1(0,WKREG3)      INCREMENT BLOCK ID BY ONE        06560000
         BCT   NTRKREG,RLBLCONT        SUBTRACT ONE FROM TRACK COUNT    06580000
         BCTR  WKREG2,0                IF RESULT IS ZERO LOWER BLOCK 1  06600000
RLBLCONT EQU   *                                                        06620000
         AR    WKREG0,NTRKREG          INCREMENT TRACK COUNT BY NO. OF  06640000
         LM    WKREG4,SREG14,IOBDNCRF+4  RESTORE REGISTERS USED         06660002
         LM    SREG2,DEBREG,IOBCSW-1                                    06680002
         B     SETUPREG                GO TO SET UP WKREG0              06700000
RLBLFDBK EQU   *                                                        06720000
* ADD ONE TO RECORD COUNT FOR LAST RECORD(I.E. THE OVERFLOW RECORD)     06740000
* BUT THEN SUBTRACT ONE BECAUSE     THE R IN THE TTR WAS REALLY ONE     06760000
* TOO HIGH. IF WE ARE WORKING ON RECORDS/EXTENT THEN DON'T ADD          06780000
* ONE FOR OVERFLOW SINCE THIS IS LAST TRACK IN THIS EXTENT              06800000
         A     NRCDREG,IOBDNCRF+8      ADD RECORDS THIS EXTENT TO TOTAL 06820002
         LM    WKREG2,WKREG4,IOBDNCRF   RESTORE REGISTERS USED          06840002
         LM    SREG12,SREG14,IOBDNCRF+12                                06860002
         L     SREG2,IOBCSW-1          RESTORE SREG2                    06880002
         L     BASE,DCBDFBK            GET FEEDBACK ADDR AND BRANCH     06900000
         B     4(0,BASE)               TO RETURN POINT IN IT            06920000
EXT1     EQU   32             OFFSET OF FIRST EXTENT FROM START OF DEB  06940000
EXTSN    EQU   16             SIZE OF NORMAL EXTENT FOR DIRECT ACCESS   06960000
TRK      EQU   14             NO. OF TRACKS OFFSET FROM START OF EXTENT 06980000
EXTSR    EQU   4              SIZE OF RELATIVE RECORD EXTENT            07000000
ERRCODE  DC    FL1'16'                                                  07060000
*              EXCEPTION CODES                                          07080000
NOREC    EQU   X'80'                                                    07100000
LGNCK    EQU   X'40'                                                    07120000
NOSPA    EQU   X'20'                                                    07140000
INVAL    EQU   X'10'                                                    07160000
UNCOR    EQU   X'08'                                                    07180000
ENDOD    EQU   X'04'                                                    07200000
UNREL    EQU   X'02'                                                    07220000
*              OPTIONS AND TYPE                                         07240000
UCBTYP   EQU   X'10'                   OFFSET INTO UCB FOR       A49315 07241021
*                                       DEVTYP                   A49315 07242021
RPSDEV   EQU   X'10'                   THIS BIT ON AT X'11' IN   A49315 07243021
*                                       THE                      A49315 07244021
*                                      UCB INDICATES RPS DEVICE         07245021
BYTEDEV  EQU   9                        DEV TYPE OFFSET          20201  07246020
TBOVHD   EQU   X'08'                    DEV TYPE MASK            20201  07252020
TRKL     EQU   4                                                        07280000
OVERI    EQU   6                                                        07300000
OVERL    EQU   7                                                        07320000
OVERK    EQU   8                                                        07340000
TOLER    EQU   10                                                       07360000
UCBTYPCD EQU   19                                                       07400000
KEY      EQU   X'04'                                                    07420000
ADD      EQU   X'02'                                                    07440000
MODID    DC    C'IGG019KF'              MODULE ID                Y02072 07450002
PATCH    DC    XL50'0'                  PATCH AREA               Y02072 07490002
         EJECT                                                          07500002
*********************************************************************** 07510002
*                           DSECTS                                      07512002
*********************************************************************** 07514002
CVTDEF   DSECT                                                          07520000
         CVT                                                            07540000
         EJECT                                                          07560000
*      DATA CONTROL BLOCK (DCB) DEFINITION                              07580000
*                                                                       07600000
         DCBD  DSORG=DA                                                 07620000
         EJECT                                                          07640000
*      DATA EVENT CONTROL BLOCK (DECB) DEFINITION                       07660000
         DS    0F                                                       07680000
DECBDEF  DSECT                                                          07700000
DECSDECB DS    CL4            STANDARD EVENT CONTROL BLOCK (ECB)        07720000
DECTYPE  DS    CL2            TYPE FIELD                                07740000
DECLNGTH DS    CL2            DATA LENGTH                               07760000
DECDCBAD DS    CL4            ADDRESS OF DCB                            07780000
DECAREA  DS    CL4            ADDRESS OF DATA AREA                      07800000
DECIOBPT DS    CL4            ADDRESS OF THE IOB                        07820000
DECKYADR DS    CL4            ADDRESS OF KEY                            07840000
DECRECPT DS    CL4            ADDRESS OF RECORD REFERENCE               07860000
         EJECT                                                          07880000
*                                                                       07900000
*      I/O BLOCK (IOB) DEFINITION                                       07920000
*                                                                       07940000
         IEZIOB                                                  Y02072 07990002
         ORG   IOBRSV35                                                 08140002
IOBUPLIM DS    D                                                        08190002
         ORG   IOBDTYP2                                                 08240002
IOBRBFDB EQU   X'20'          INDICATES ENTRY FROM IGG019KH             08290002
         EJECT                                                          08780000
*                                                                       08800000
*      DATA EXTENT BLOCK (DEB) DEFINITION                               08820000
*                                                                       08840000
         DS    0F                                                       08860000
DEBDEF   DSECT                                                          08880000
*                                                                       08900000
         DS    0F                                                       08920000
DEBNMSUB DS    0CL1                    COUNT OF ROUTINES LOADED         08940000
DEBTCBAD DS    CL4                     TASK CONTROL BLOCK ADDRESS       08960000
DEBAMLNG DS    0CL1                    WORD CNT OF BDAM ADDED CORE      08980000
DEBDEBAD DS    CL4                     DEB CHAIN ADDRESS                09000000
DEBOFLGS DS    0CL1                    OPEN FLAGS                       09020000
DEBIRBAD DS    CL4                     IRB ADDRESS                      09040000
DEBOPATB DS    0CL1                    DATA SET ATTRIBUTES              09060000
DEBSYSPG DS    CL4                                                      09080000
DEBNMEXT DS    0CL1                    COUNT OF EXTENTS                 09100000
DEBUSRPG DS    CL4                                                      09120000
DEBPRIOR DS    0CL1                                                     09140000
DEBECBAD DS    CL4                                                      09160000
DEBPROTG DS    0CL1                                                     09180000
DEBDEBID DS    0CL1                                                     09200000
DEBDCBAD DS    CL4                     DCB ADDRESS                      09220000
DEBEXSCL DS    0CL1                    EXTENT SIZE SCALE                09240000
DEBAPPAD DS    CL4                     IOS APPENDAGE LIST ADDRESS       09260000
DEBDVMOD DS    0CL1                    FILE MASK CODE                   09280000
DEBUCBAD DS    CL4                     UCB ADDRESS                      09300000
DEBBINUM DS    CL2                     BIN NUMBER (BB)                  09320000
DEBSTRCC DS    CL2                     STARTING CYLINDER NUMBER         09340000
DEBSTRHH DS    CL2                     STARTING TRACK NUMBER            09360000
DEBENDCC DS    CL2                     ENDING CYLINDER NUMBER           09380000
DEBENDHH DS    CL2                     ENDING TRACK NUMBER              09400000
DEBNMTRK DS    CL2                     NO. OF TRACKS IN THIS EXTENT     09420000
DEBSUBID EQU   0         SUBROUTINE ID'S                                09440000
         END                                                            09460000
