        TITLE 'IGG019KJ - BDAM VRE FOUNDATION MODULE'                   00050002
IGG019KJ CSECT                                                          00100019
*MODULE NAME - IGG019KJ                                               * 00102002
*                                                                     * 00104002
*DESCRIPTIVE NAME - BDAM FOUNDATION MODULE, VARIABLE SPANNED RECORDS  * 00106002
*                                                                     * 00106402
*COPYRIGHT - NONE                                                     * 00106802
*                                                                     * 00107202
*CHANGE ACTIVITY                                                      * 00107602
*                                                                     * 00108002
*          OS REL 20 CHANGES/DELETIONS                                  00118002
*3572230600-230700                                               M5471  00128002
*3572                                                            A33688 00138002
*3572001100,002000-003400,172000,197000-197500,280000,371000,    20201  00138402
*3572516500,518100                                               20201  00138802
*          OS REL 21 CHANGES/DELETIONS                                  00140002
*1132                                                            A44088 00145021
*                                                               SA53267 00145521
*3572184530,196860-196940,272500,309500-310000,311000,325500-326000     00146021
*351000-353000,608000,667000-669000,708000,720500-721500,766700  21905  00147002
*3572269000,577000,577500,583500,584500,600000                   A35339 00148021
*3572588000-588500,609000-611500,613500                          A30797 00149021
*158500,162000-164500                                           SA54515 00159002
*          VS 1-1 CHANGES/DELETIONS                                     00199002
*          VS 2-1 CHANGES/DELETIONS                                     00249002
*                                                               XA00093 00259002
*          VS 1-3 CHANGES/DELETIONS                                     00299002
*                                                               XA02033 00301002
*                                                               XA03071 00303002
*          VS 2-2 CHANGES/DELETIONS                                     00309002
*                                                                Y02072 00319002
*                                                                YM1143 00329002
*                                                                YM1458 00339002
*                                                                YM5969 00341002
*461060-461080                                                   YM7542 00341402
*                                                                YM5853 00341802
*D147000                                                         YM7841 00341902
*A138100-138300,146600,147100-147300,147600-148100              ZA01524 00363500
*          VS 2-4 CHANGES/DELETIONS                                     00363903
*D314030-322124                                                @ZA08000 00364303
*                                                                       00365219
*STATUS CHANGE LEVEL 006                                                00376802
*                                                                       00388419
*FUNCTION/OPERATION - THIS IS THE BASIC MODULE OF BDAM FOR VRE.  THIS * 00400019
*   FOUNDATION MODULE CONSISTS OF THREE MAIN FUNCTIONAL ROUTINES -    * 00450019
*   ROUTINE 1. INITIAL ENTRY FOR ANY BDAM READ OR WRITE, CHECK THE    * 00500019
*    VALIDITY OF SPECIFIED TYPE AND OPTIONS, OBTAIN AN IOB, PROVIDE   * 00550019
*    LINKAGE FOR ADDRESS CONVERSION AND CHANNEL PROGRAM CONSTRUCTION, * 00600019
*    ISSUE THE 'EXCP' AND RETURN TO THE USER.                         * 00650019
*                                                                     * 00700019
*   ROUTINE 2. ASYNCHRONOUS INTERRUPT ROUTINE (ASI) WHICH IS ENTERED  * 00750002
*    FROM THE SUPERVISOR AT THE COMPLETION OF THE CHANNEL END MODULE. * 00800019
*    IT PERFORMS THE SEGMENTATION PROCESSING, CHANNEL PROGRAM         * 00850019
*    MODIFICATION AND CHANNEL PROGRAM RESTART, IT LINKS NEWLY GOTTEN  * 01000002
*    IOBS TO THE DCB, PROVIDES LINKAGE TO THE FEEDBACK, SELF-FORMAT   * 01010002
*    AND READ EXCLUSIVE MODULES, MAKES THE IOB AVAILABLE, ISSUES THE  * 01020002
*    'POST' AND RETURNS TO THE SUPERVISOR.                            * 01030002
*                                                                     * 01200019
*   ROUTINE 3. ERROR ROUTINES, RELEASE THE IOB, SET THE PROPER        * 01250019
*    EXCEPTION CODES, ISSUE THE 'POST'.                               * 01300019
*                                                                     * 01350019
*ENTRY POINTS- 'IGG019KJ' (ENTRYPT) IS THE ENTRY FOR A BDAM READ OR   * 01360002
*   WRITE MACRO INSTRUCTION. THE GENERATED CALLING SEQUENCE IS,       * 01370002
*            L    15,DCBREAD   (DCB+48)                               * 01400002
*            BALR 14,15                                               * 01450002
*                                                                     * 01500019
*   'IECDFDNA' IS THE ENTRY POINT TO THE ASI ROUTINE FROM SUPERVISOR  * 01550019
*   WHEN THE REQUEST HAS TERMINATED. THE CALLING SEQUENCE USED IS,    * 01600019
*            L    15,IRBRBEP   (IRB+12)                               * 01650002
*            BALR 14,15                                               * 01700002
*                                                                     * 01750019
*   'LATERR' IS AN ENTRY TO THE INVALID REQUEST ERROR ROUTINE FROM    * 01800019
*   THE ADDRESS CONVERSION OR PRE-FORMAT MODULES. CALLING SEQUENCE IS,* 01850019
*            L    REG,20(IGG019KA BASE)                               * 01900002
*            BR   REG                                                 * 01950002
*                                                                     * 02000019
*INPUT- ROUTINE 1.- DECB ADDRESS IN REGISTER 1, SAVE AREA ADDRESS IN  * 02050019
*   REGISTER 13, RETURN ADDRESS IN REGISTER 14, ENTRY POINT IN        * 02100019
*   REGISTER 15.                                                      * 02150019
*                                                                     * 02200019
*   ROUTINE 2.(ASI)- IOS QUEUEING ELEMENT ADDRESS IN REGISTER 1,      * 02250019
*   RETURN ADDRESS IN REGISTER 14, ENTRY POINT IN REGISTER 15.        * 02300019
*                                                                     * 02350019
*   ROUTINE 3.(INVALID REQUEST)- REGISTERS 5,7,11,13 WILL CONTAIN THE * 02400019
*   DECB ADDRESS, IOB ADDRESS, IGG019KJ ADDRESS, SAVE AREA ADDRESS,   * 02450019
*   RESPECTIVELY. REGISTER 12 WILL CONTAIN THE REASON CODE WHICH WILL * 02500019
*   APPEAR IN BYTE TWO OF THE DECB AFTER 'POST' IS EXECUTED.          * 02550019
*                                                                     * 02600019
*OUTPUT- ROUTINE 1.- AN IOB WILL BE OBTAINED, CHANNEL PROGRAM         * 02650019
*   CONSTRUCTED AND 'EXCP' EXCECUTED FOR A VALID READ OR WRITE.       * 02700019
*                                                                     * 02750019
*   ROUTINE 2.(ASI)- FEEDBACK WILL BE RETURNED IF REQUESTED, AND A    * 02800019
*   COMPLETION CODE PLACED IN THE DECB BY THE 'POST' ROUTINE.         * 02850019
*                                                                     * 02900019
*   ROUTINE 3.(INVALID REQUEST)- A COMPLETION CODE AND REASON CODE    * 02950019
*   ARE PLACED IN THE DECB BY THE 'POST' ROUTINE.                     * 03000019
*                                                                     * 03050019
*EXTERNAL ROUTINES- 'IGG019KC'-CONVERT RELATIVE TRACK ADDRESS (TT OR  * 03100019
*   TTR) TO AN ACTUAL ADDRESS OR CONVERT ACTUAL TO TTR FOR FEEDBACK.  * 03150019
*                                                                     * 03200019
*   'IGG019KR'-CONSTRUCT A CHANNEL PROGRAM TO SEARCH BY BLOCK ID OR   * 03250019
*             -CONSTRUCT A CHANNEL PROGRAM TO SEARCH BY BLOCK KEY.    * 03300019
*                                                                     * 03350019
*   'IGG019KN'-CONSTRUCT A CHANNEL PROGRAM TO ADD A NEW BLOCK TO A    * 03400019
*   DATA SET OF VARIABLE LENGTH SPANNED RECORDS, (SELF-FORMAT MODULE).* 03450019
*   ALSO ENTERED TO DETERMINE IF THE NEW BLOCK WILL FIT ON THE TRACK  * 03500019
*   AFTER THE CAPACITY RECORD IS READ INTO THE IOB.                   * 03550019
*   ALSO ENTERED AFTER THE WRITE-ADD REQUEST HAS COMPLETED, TO SCAN   * 03600019
*   THE UNSCHEDULED QUEUE FOR OTHER WRITE-ADD REQUESTS AND EXECUTE    * 03650019
*   THE FIRST REQUEST FOUND, IF ANY.                                  * 03700019
*                                                                     * 03750019
*   SVC 53 -   PLACE A RECORD ON THE READ EXCLUSIVE LIST FOR A READ   * 03800002
*   OR WRITE ADD REQUEST, OR REMOVE A RECORD FROM THE LIST FOR WRITE  * 03810002
*   WHEN EXCLUSIVE CONTROL IS SPECIFIED.                              * 03900019
*                                                                     * 03950019
*   'IGG019KG'-CONVERT AN ACTUAL ADDRESS TO A RELATIVE BLOCK NUMBER   * 04000019
*   IF FEEDBACK IS REQUESTED.                                         * 04050019
*                                                                     * 04100019
*EXITS-NORMAL- 'RSTOR' IS THE RETURN TO THE PROGRAM WHICH ISSUED THE  * 04150019
*   READ OR WRITE MACRO-INSTRUCTION. THE REQUEST HAS EITHER BEEN      * 04200019
*   EXECUTED VIA 'EXCP' OR HAS BEEN POSTED COMPLETE AS AN INVALID     * 04250019
*   REQUEST.                                                          * 04300019
*   'SUPEXIT' IS THE EXIT FROM THE ASI ROUTINE TO SUPERVISOR. THE DECB* 04350019
*   HAS BEEN POSTED AS COMPLETE WITH A CODE INDICATING SUCCESSFUL OR  * 04400019
*   ERROR COMPLETION.                                                 * 04450019
*   'EXCPEXIT' IS THE EXIT FROM THE ASI ROUTINE AFTER A CHANNEL       * 04500019
*   PROGRAM HAS BEEN RESTARTED.                                       * 04550019
*                                                                     * 04600019
*TABLES/WORK AREAS- N/A                                               * 04650019
*                                                                     * 04700019
*ATTRIBUTES- THE INITIAL ENTRY ROUTINE AND INVALID REQUEST ERROR      * 04750019
*   ROUTINE ARE REENTRANT AND EXECUTED ENABLED.                       * 04800019
*   THE ASI ROUTINE IS REUSEABLE AND EXECUTED ENABLED, PROBLEM PGM    * 04850002
*   STATE AND THE PROBLEM PROGRAM PROTECT KEY.                        * 04900002
*                                                                     * 04950019
*NOTE- THE BDAM MODUES BRANCH AND LINK TO EACH OTHER WITHOUT USE OF   * 05000019
*   A REGISTER SAVE AREA SO THE REGISTER USAGE MUST REMAIN CONSISTENT * 05050019
*   IN THE BDAM MODULES, IGG019KJ, IGG019KC, IGG019KQ, IGG019KR,      * 05100019
*   IGG019KG, IGG019KN.                                               * 05150019
*                                                                     * 05200019
*                                                                     * 05250002
*                                                                       05350019
*                                                                       05400019
         IEZBITS                                                        05670021
*                                                                       05700019
*  REGISTER USAGE                                                       05750019
*                                                                       05800019
PARAM2   EQU   0                                                        05850019
PARAM    EQU   1         PARAMETERS                                     05900019
WKREG1   EQU   2         WORK REGISTER                                  05950019
DEBREG   EQU   3         DEB ADDRESS                                    06000019
DCBREG   EQU   4         DCB ADDRESS                                    06050019
DECBREG  EQU   5         DECB ADDRESS                                   06100019
WKREG2   EQU   6         WORK REGISTER                                  06150019
IOBREG   EQU   7         IOB ADDRESS                                    06200019
FDNBASE  EQU   11        BASE FOR THE FOUNDATION MODULE                 06250019
INTRET   EQU   12        RETURN FOR INTERNAL LINKAGES                   06300019
SAVE     EQU   13        POINTER TO USER SAVE AREA                      06350019
RETREG   EQU   14        RETURN REGISTER                                06400019
EPREG    EQU   15        ENTRY POINT                                    06450019
*                                                                       06500019
         EJECT                                                          06550019
*                                                                       06600019
         USING IGG019KJ,EPREG                                           06610002
*                                                                       06650019
ENTRYPT  B     BEGIN                    BRANCH AROUND ADDRESS LOCATIONS 06700019
*                                                                       06750019
RRAD     DC    F'0'                     RELATIVE BLOCK MODULE ADDRESS   06800019
RTAD     DC    V(IGG019KC)              RELATIVE TRACK MOD ADDR  Y02072 06850002
VERAD    DC    V(IGG019KQ)              VERIFY MODULE ADDRESS    Y02072 06900002
ASIAD    DC    A(IECDFDNA)              ASYNCH INTERRUPT ROUTINE Y02072 06950002
ERRENTRY DC    A(LATERR)                INVALID REQUEST ERROR RT Y02072 07000002
KEYMODAD DC    V(IGG019KR)              ADDRESS OF THE KEY MOD   Y02072 07050002
IDMODAD  DC    V(IGG019KR)              ADDRESS OF THE ID MODULE Y02072 07100002
*                                                                       07150019
*                                                                       07200019
*                                                                       07250019
         DROP  EPREG                                                    07300019
         USING IGG019KJ,FDNBASE                                         07350019
BEGIN    SAVE  (14,12)                  SAVE USER REGISTERS IN HIS AREA 07400019
         LR    FDNBASE,EPREG            ESTABLISH A BASE FOR MODULE     07450019
         LR    DECBREG,PARAM            SET BASE REGISTERS FOR DECB     07500019
         USING DECBDEF,DECBREG                                   Y02072 07510002
         L     DCBREG,DECDCBAD          SET BASE REGISTER FOR DCB       07550002
         USING IHADCB,DCBREG                                     Y02072 07560002
         L     DEBREG,DCBDEBAD          SET BASE REGISTER FOR DEB       07600002
         USING DEBDEF,DEBREG                                            07620001
*                                                                       07650019
         IC    INTRET,DECTYPE           SAVE REQUESTED OPTIONS IN A REG 07700019
         OI    DECTYPE,VERIFY+EXSCH+ACTAD+RELRD+OFLOW                   07750019
         NC    DECTYPE(ONE),DCBOPTCD    COMBINE DCB OPTIONS WITH THE    07800019
         EX    INTRET,ORBACK            REQUEST OPTIONS.                07850019
         N     INTRET,OPSMSK            VALIDITY CHECK READX,DYN. BFR.  07900019
         BZ    OKOPTS                   OPTIONS (BR IF NONE PRESENT),BY 07950019
         EX    INTRET,VALCHK            EXECUTING A TM INSTRUCTION.     08000019
         BO    OKOPTS                   OK IF ALSO SPECIFIED IN DCB,    08050019
         IC    INTRET,INVOPT            ELSE FLAG THIS REQUEST AS       08100019
         B     ABORT                    INVALID AND GO POST COMPLETION. 08150019
*                                                                       08200019
ORBACK   OI    DECTYPE,NULL  EXECUTED-RETURN FEEDBACK OPTION BIT.       08250019
VALCHK   TM    DCBOPTCD,NULL EXECUTED-CHECK READX,DYN. BFR. REQUEST.    08300019
*                                                                       08350019
OKOPTS   TM    DECTYPE+ONE,READ         IS THIS A READ REQUEST          08400019
         BO    LGNCHK                   YES, GO TEST LENGTH OPTION      08450019
         TM    DEBOPATB,WRTMSK          DID OPEN SPECIFY OUTPUT/UPDATE  08500019
         BC    ONE+MIXED,FORMCHK        YES, WRITE REQUEST IS VALID     08550019
         IC    INTRET,INVWRT            FLAG THIS WRITE TO INPUT DATA   08600019
         B     ABORT                    SET, GO POST COMPLETION         08650019
*                                                                       08700019
*                                                                       08750019
FORMCHK  EQU   *                                                        08800019
         L     WKREG2,DECAREA            USE FIRST TWO BYTES OF DATA AS 08850019
         MVC   DECLNGTH(TWO),NULL(WKREG2) BLOCK LENGTH FOR THE WRITE    08900019
         B     SZRTN                     GO DETERMINE IOB SIZE          08950019
*                                                                       09000019
LGNCHK   EQU   *                                                        09050019
         TM    DECTYPE+ONE,LGNOP         DID USER CODE LENGTH AS 'S'    09100019
         BZ    SZRTN                     NO, USE DECB LENGTH            09150019
         MVC   DECLNGTH(TWO),DCBBLKSI    USE MAXIMUM BLOCK SIZE         09200019
*                                                                       09250019
SZRTN    EQU   *                                                        09300019
*********************************************************************** 09400019
*                                                                     * 09450019
*  THE FOLLOWING ROUTINE CALCULATES THE SIZE OF THE IOB WHICH IS      * 09500019
*  REQUIRED FOR THIS REQUEST.                                           09550019
*                                                                       09600019
*                                                                       09650019
         LA    WKREG1,BASESZ            IOB SIZE = BASE + OPTIONS       09700019
         TM    DECTYPE+ONE,KEY          IS TYPE = DK                    09750019
         BZ    TSTRD                    BR IF NO                        09800019
         TM    DECTYPE,EXSCH            TEST FOR EXTENDED SEARCH        09850019
         BZ    TSTRD                    BR IF NO                        09900019
         CLC   ZEROS(THREE),DCBLIMCT    IS LENGTH OF SEARCH SPECIFIED   09950019
         BC    ONE+MIXED,ESOK           YES, REQUEST IS VALID           10000019
         IC    INTRET,INVLIMCT          FLAG INVALID REQUEST (LIMCT=0)  10050019
         B     ABORT                    GO POST COMPLETION              10100019
*                                                                       10150019
ESOK     EQU   *                                                        10200019
         TM    DECTYPE+ONE,ADD          IS IT WRITE ADD                 10250019
         BO    ITISADD                  BR IF YES                       10300019
         LA    WKREG1,EXTNDSCH(WKREG1)  ADD EXTENDED SEARCH CHANNEL     10350019
*                                       PROGRAM SIZE                    10400019
         TM    DECTYPE,VERIFY           IS WRITE VALIDITY CHECK REQ'D   10450019
         BZ    READXTST                 BR IF NO                        10500019
         LA    WKREG1,WCUPDTES(WKREG1)  ELSE, ADD ON SIZE FOR WRITE     10550019
*                                       CHECK CCW'S.                    10600019
         B     READXTST                 GO TEST FOR EXCLUSIVE CONTROL   10650019
*                                                                       10700019
TSTRD    EQU   *                                                        10750019
         TM    DECTYPE+ONE,READ         IS THIS A READ REQUEST          10800019
         BZ    ADDTST                   BR IF NO                        10850019
         LA    WKREG1,RDDIORDK(WKREG1)  ADD READ CHANNEL PROGRAM SIZE   10900019
         TM    DECTYPE+ONE,NEXTADR      IS NEXT ADDRESS REQ'D           10950019
         BZ    READXTST                 BR IF NO                        11000019
         TM    DECTYPE+ONE,KEY          IS THIS A READ TYPE = DK        11050019
         BZ    RDTYPDI                  BR IF NO                        11100019
         LA    WKREG1,RNDK(WKREG1)      ADD FOR NEXT ADDRESS CCW'S      11150019
         B     READXTST                 GO TEST FOR READ EXCLUSIVE      11200019
*                                                                       11250019
RDTYPDI  EQU   *                                                        11300019
         LA    WKREG1,RNDI(WKREG1)      ADD FOR NEXT ADDRESS CCW'S      11350019
         B     READXTST                 GO TEST FOR READ EXCLUSIVE      11400019
*                                                                       11450019
ADDTST   EQU   *                                                        11500019
         TM    DECTYPE+ONE,ADD          IS IT WRITE ADD                 11550019
         BZ    NOTADD                   BR IF NO                        11600019
ITISADD  EQU   *                                                        11650019
         LA    WKREG1,WRTADD+EXCNTRL(WKREG1) ADD ON THE WRITE ADD       11700019
*                                       CHANNEL PROGRAM SIZE AND THE    11750019
*                                       EXCLUSIVE CONTROL LIST.         11800019
         TM    DECTYPE,VERIFY           IS WRITE VALIDITY CHECK REQ'D   11850019
         BZ    GOTIOBSZ                 BR IF NO                        11900019
         LA    WKREG1,WCADD(WKREG1)     ADD ON SIZE OF WRITE CHECK CCWS 11950019
         B     GOTIOBSZ                 GO GET AN IOB                   12000019
*                                                                       12050019
NOTADD   EQU   *                                                        12100019
         LA    WKREG1,WRDIORDK(WKREG1)  ADD WRITE CHANNEL PROGRAM SIZE  12150019
         TM    DECTYPE,VERIFY           IS WRITE VALIDITY CHECK REQ'D   12200019
         BZ    READXTST                 BR IF NO                        12250019
         TM    DECTYPE+ONE,KEY          IS THIS A WRITE TYPE = DK       12300019
         BZ    WRTDI                    BR IF NO                        12350019
         LA    WKREG1,WCUPDTDK(WKREG1)  ADD SIZE OF WRITE CHECK CCW'S   12400019
         B     READXTST                 GO TEST FOR EXCLUSIVE CONTROL   12450019
*                                                                       12500019
WRTDI    EQU   *                                                        12550019
         LA    WKREG1,WCUPDTDI(WKREG1)  ADD SIZE OF WRITE CHECK CCW'S   12600019
READXTST EQU   *                                                        12650019
         TM    DECTYPE,READX            IS THIS A READ EXCLUSIVE OR A   12700019
*                                       WRITE TO RELEASE                12750019
         BZ    GOTIOBSZ                 BR IF NEITHER                   12800019
         LA    WKREG1,EXCNTRL(WKREG1)   ADD FOR ENQ PARAMETER LIST      12850019
         SPACE 5                                                        12900019
GOTIOBSZ EQU   *                                                        12950019
         AH    WKREG1,H8                ADD A DOUBLE WORD FOR    20201  12960020
*                                       SECTOR VALUES JUST IN CASE      12970020
*                                       RPS IS USED                     12980020
*********************************************************************** 12990002
*    THE FOLLOWING ROUTINE OBTAINS AN IOB AREA FROM THE POOL OF AREAS   13000019
*     IF ONE OF ENOUGH SIZE IS AVAILABLE                                13050019
*********************************************************************** 13060002
*                                                                       13100019
         USING IOBSTDRD,IOBREG          EST BASE FOR IOB         Y02072 13110002
         L     IOBREG,DCBIOBAD          LOAD FIRST LINK ADDRESS         13150003
SHFT     LA    IOBREG,NULL(IOBREG)      BE SURE HI-ORDER BYTE IS ZERO   13200019
         LTR   IOBREG,IOBREG            TEST FOR ZERO LINK ADDRESS.     13250019
         BZ    GETCR                    IF ADDR=0, GO GET CORE FOR IOB  13300019
         CH    WKREG1,IOBDIOBS          IS THIS IOB AREA LARGE ENOUGH   13350019
         BH    TRYNEXT                  IF NOT GO SEE IF THERE ARE MORE 13400019
         TS    IOBDAYLI                 IS THIS IOB AVAILABLE    Y02072 13450002
         BZ    CLRIOB                   YES, GO INITIALIZE AREA         13500019
*                                                                       13550019
TRYNEXT  L     IOBREG,IOBDPLAD          LOAD NEXT POOL LINK             13600019
         B     SHFT                     GO TEST FOR END OF CHAIN        13650019
*                                                                       13700019
*                                                                       13750019
******************** EXECUTE INSTRUCTIONS**********************         13760000
CLRXC    XC    IOBDTYPE(ONE),IOBDTYPE   EXECUTED-- CLEAR LAST OF IOB    13800019
CLRXXC   XC    IOBDTYPE+Q255(1),IOBDTYPE+Q255 CLR IF IOB+CCWS   ZA01524 13810000
*                                       EXTENDS BEYOND IOBDTYPE ZA01524 13820000
*                                       +255 BYTES              ZA01524 13830000
*                                                                       13850019
*                                                                       13900019
*  GETMAIN ROUTINE                                                      13950019
*                                                                       13960002
GETCR    LR    PARAM2,WKREG1            MOVE BYTE COUNT TO PARAM REG    14000019
         AH    PARAM2,PREFSZ            ADD FOR PREFIX                  14050019
         GETMAIN R,LV=(0)                                               14100019
*                                                                       14150019
         LR    IOBREG,PARAM             LOAD CORE ADDRESS TO IOB BASE   14200019
         AH    IOBREG,PREFSZ            INCREMENT TO FORM IOB PREFIX    14250019
         STH   WKREG1,IOBDIOBS          STORE THE AREA SIZE IN IOB      14300019
         SR    WKREG2,WKREG2            CLEAR THE POOL                  14350019
         ST    WKREG2,IOBDAYLI          ADDRESS AREA             Y02072 14400002
CLRIOB   XC    IOBFLAG1(FT),IOBFLAG1    CLEAR TO IOB SIZE FIELD         14450019
         LR    WKREG2,IOBREG                                            14550019
         SH    WKREG2,PREFSZ            POINT TO START OF IOB PREFIX    14600019
         XC    NULL(L'PREFSZ,WKREG2),NULL(WKREG2) CLEAR PREFIX   Y02072 14650002
         LH    WKREG1,IOBDIOBS          GET SIZE OF IOB         ZA01524 14660000
         SH    WKREG1,K49               REDUCE SIZE TO REMAINING SIZE   14700000
         CH    WKREG1,H255              IOB GREATER THAN 255+   ZA01524 14710000
*                                       49(ALREADY CLEARED)     ZA01524 14720000
         BH    CLROVFF                  YES, GO CLEAR BEYOND    ZA01524 14730000
         EX    WKREG1,CLRXC             CLEAR THE REST OF THE AREA      14750019
         B     CORCLRD                  BR AROUND NEXT INST     ZA01524 14760000
*                                                                       14800019
CLROVFF  EQU   *                        CLEAR IOB GREATER 255   ZA01524 14810000
         XC    IOBDTYPE(Q255),IOBDTYPE  CLEAR 1ST 255 BYTES     ZA01524 14820000
         SH    WKREG1,H255              SUBT AMOUNT CLEARED     ZA01524 14830000
         EX    WKREG1,CLRXXC            CLEAR OUT THE REMAINDER ZA01524 14840000
*                                                                       14850019
CORCLRD  EQU   *                        INITIALIZE IOB          ZA01524 14860000
         ST    DCBREG,IOBDCBPT          STORE DCB ADDRESS IN IOB        14900019
         ST    DECBREG,IOBECBPT         STORE ECB ADDRESS IN IOB        14950019
         ST    IOBREG,DECIOBPT          STORE IOB ADDR IN DECB          15000019
         LA    WKREG1,IOBCHNPR          DEVELOP CHANNEL PROGRAM START   15050002
         ST    WKREG1,IOBSTART          ADDRESS AND STORE IT IN IOB     15100019
         MVC   IOBDTYPE(L'DECTYPE),DECTYPE  MOVE OPT,TYPE CODES  YM1143 15150002
         MVI   IOBFLAG1,CPFLAG          MARK AS UNRELATED,COMMAND CHAIN 15200019
*                                                                       15250019
*    THE FOLLOWING ROUTINE DETERMINES THE ADDRESSING METHOD BEING       15300019
*     USED AND CHECKS THE VALIDITY OF THE ADDRESS.                      15350019
*                                                                       15400019
         L     PARAM,DECRECPT           LOAD POINTER TO USER'S ADDRESS  15450003
         LA    RETREG,CLRCP             LOAD COMMON RETURN POINT ADDR   15500019
         TM    IOBDTYP2,IOBRQUST+IOBADDTY  BYPASS NEXT RTN IF READ/ADD  15550002
         BC    ONE+MIXED,D1NOFDBK       AND GO DETERMINE ADDRESS TYPE   15600019
         TM    IOBDTYP2,IOBTYPE         IF TYPE IS KEY, BYPASS CHECKING 15650002
         BO    TRYX                     FOR A WRITE TO R ZERO           15700019
         TM    IOBDTYPE,IOBACTAD        IS ADDRESS ACTUAL               15750002
         BZ    TRYRT                    NO, GO TEST FURTHER             15800019
TESTR0   EQU   *                        WRT R0 INVALID -TEST IT OX02033 15850002
         CLI   IDDISP(PARAM),IDOFZERO   IS THIS A WRITE TO R0           15900019
         BNE   ACTUAL                   NO, ACTUAL ADDRESS IS OK        15950019
SETIRBIT IC    INTRET,INVID             FLAG INVAL REQ. (WRITE TO R0)   16000019
         B     LATERR                   GO POST COMPLETION, FREE IOB    16050019
*                                                                       16100019
TRYRT    EQU   *                                                        16150019
         TM    DCBOPTCD,DCBOPTF         FEEDBACK IN DCB OPTCD?  XA02033 16200002
         BO    TRYRT2                   YES, NOT ACTUAL ADDRESS XA02033 16250002
         TM    IOBDTYPE,IOBRDEXC+IOBFDBCK  WRT REL/FDBK IN DECB XA03071 16300002
         BO    TESTR0                   YES, ASSUME ACTUAL ADDR XA02033 16350002
*                                       BECAUSE FEEDBACK ALWAYS XA02033 16400002
*                                       PROVIDED FOR READX REQ  XA02033 16450002
*                                       AND WRT REL MUST ASSUME XA02033 16460002
*                                       PREVIOUS READX REQUEST  XA02033 16470002
TRYRT2   EQU   *                        NOT ACTUAL ADDRESSING   XA02033 16480002
         CLI   ROFTTR(PARAM),IDOFZERO   IS R OF TTR A 0                 16500019
         BE    SETIRBIT                 YES,WRITE REQUEST IS INVALID    16550019
*                                                                       16600019
RELTRKX  L     EPREG,RTAD               EXIT TO CONVERT TTR TO AN       16650019
         B     CNVENTRY(EPREG)          ACTUAL ADDRESS                  16700019
*                                                                       16750019
TRYX     TM    IOBDTYPE,IOBRDEXC        IS THIS A WRITE WITH FEEDBACK   16800002
         BZ    D1NOFDBK                 NO, GO TEST ADDRESS TYPE        16850019
         TM    DCBOPTCD,DCBOPTF         WAS FEEDBACK RELATIVE FOR READ  16900002
         BZ    ACTUAL                   NO, GO MOVE ACTUAL ADDR TO IOB  16950019
D1NOFDBK TM    IOBDTYPE,IOBACTAD        IF ADDRESS IS ALREADY ACTUAL,   17000002
         BO    ACTUAL                   GO MOVE IT TO THE IOB,          17050002
         B     RELTRKX                  GO TO RELATIVE TRACK EXIT       17100019
*                                                                       17150019
CLRCP    EQU   *                                                 20201  17170020
         XC    IOBDNCRF(FZ+CCWLN),IOBDNCRF  CLEAR AREA TO STORE  20201  17190002
*                                       REG'S PLUS REC REDY DW          17210020
         B     GETSWA                   OBTAIN SEGMENT WORK AREA        17250019
*                                                                       17300019
*  THE FOLLOWING ROUTINE DETERMINES THE TYPE OF READ OR WRITE           17350019
*    AND PROVIDES LINKAGE TO THE PROPER MODULE                          17400019
*                                                                       17450019
ACTUAL   MVC   IOBSEEK,NULL(PARAM)      MOVE USER ADDRESS TO            17500019
         MVC   IOBUPLIM(SEVN),IOBSEEK   SEEK AND LIMIT FIELDS           17550019
*                                                                       17600019
*   THIS SECTION OF CODE WILL LOCATE A SEGMENT WORK AREA AND            17650019
*   ASSIGN IT TO THE IOB FOR THIS REQUEST IF DYNAMIC BUFFERING          17700019
*   IS NOT USED.  IF DYNAMIC BUFFERING IS USED, A BUFFER WILL BE        17750019
*   OBTAINED AT SIO TIME.                                               17800019
*                                                                       17850019
GETSWA   EQU   *                                                        17900019
         LR    WKREG1,IOBREG                                            17950019
         SH    WKREG1,IOBASWA           POINT TO SWA ADDR FIELD         18000019
         TM    IOBDTYPE,IOBDYNBF        TEST FOR DYNAMIC BUFFERING      18050002
         BZ    PRELOOP                  GET A SWA IF NOT                18100019
         TM    DECTYPE+ONE,READ         IS THIS A READ REQUEST          18150019
         BO    TYPEDEC                  IF YES, NO SWA REQUIRED         18200019
         L     WKREG2,DECAREA           GET RECORD AREA ADDRESS         18250019
         SH    WKREG2,FOUR              GET SWA ADDRESS                 18300019
         TM    IOBDTYP2,IOBSKEY         WAS KEY ADDR 'S'?       XA00093 18310002
         BZ    MOVESWAD                 BR IF NOT               XA00093 18320002
         SR    RETREG,RETREG            CLEAR REG               XA00093 18330002
         IC    RETREG,DCBKEYLE          BACK UP BY LENGTH OF    XA00093 18340002
         SR    WKREG2,RETREG            KEY WHICH PRECEDES      XA00093 18342002
MOVESWAD EQU   *                        RECORD                  XA00093 18344002
         MVC   NULL(EQU4,WKREG1),NULL(WKREG2)  MOVE SWA ADDR TO IOB     18350019
         B     TYPEDEC                  GO GENERATE THE CHANNEL PROGRAM 18400019
PRELOOP  EQU   *                                                        18450019
         TM    DCBOPTCD,DCBOPTDB        SEE IF DYNAMIC BUFFERING IN DCB 18451002
         BZ    GETSWA2                  BRANCH IF NO                    18452019
         L     PARAM,DEBUCBAD           LOAD UCB ADDRESS                18453002
         L     WKREG2,CVTPTR(NULL,NULL) LOAD CVT ADDRESS                18454019
         L     WKREG2,DTABOFF(NULL,WKREG2) LOAD DEVICE TABLE ADDRESS    18455002
         IC    PARAM,TYPCD(PARAM)       LOAD DEVICE CODE                18457019
         N     PARAM,LASTFOUR           CLEAR ALL BUT LOW ORDER 4 BITS  18458019
         IC    PARAM,NULL(PARAM,WKREG2) FIND ENTRY TRK LENGTH OFFSET    18459019
         LA    WKREG2,EQU4(PARAM,WKREG2) POINT TO ENTRY TRK LENGTH      18460019
         LH    WKREG2,NULL(WKREG2)      LOAD TRK LNGTH                  18461019
         CH    WKREG2,DCBBLKSI          COMPARE MAX LOG REC LNGTH AND   18462019
*                                       TRK SIZE                        18463019
         BL    ADDCNTL                  TRK SIZE LOW, BRANCH            18464019
         LH    WKREG2,DCBBLKSI          USE MAX LOGICAL REC LNGTH       18465019
ADDCNTL  EQU   *                                                        18466019
         LA    PARAM2,CNTLBYTE(WKREG2)  ADD CNTL BYTES                  18467019
         GETMAIN R,LV=(0)               GET CORE                        18468019
         LA    WKREG2,TEN(WKREG2)       ADD CNTL FIELD TO SWA SIZE      18469019
         STH   WKREG2,SIX(PARAM)        PUT BUFFER SIZE IN BUFCB        18470019
         XC    RAINC(EQU4,PARAM),RAINC(PARAM)                           18471019
*                                       PUT ZERO IN BUFFER POINTER      18472019
         LA    WKREG2,ONE                                               18473019
         STH   WKREG2,EQU4(PARAM)       PUT NO OF BUFFERS IN BUFCB      18474019
         LA    WKREG2,RAINC(PARAM)      GET ADDRESS OF SWA              18475019
         ST    WKREG2,NULL(PARAM)       PUT ADD IN BUFCB                18476019
         B     GOTSWA                   GO LINK SWA TO IOB              18477019
*                                                                       18500019
*   LOCATE A SEGMENT WORK AREA                                          18550019
*                                                                       18600019
GETSWA2  EQU   *                                                        18620019
         L     WKREG2,DCBDYNB           GET ADDRESS OF BCB              18650019
SWALOOP  L     WKREG2,NULL(WKREG2)      GET A SWA ADDRESS               18700019
         LA    WKREG2,NULL(WKREG2)      CLEAR HI ORDER BYTE             18750019
         LTR   WKREG2,WKREG2            SEE IF NO MORE SWA'S            18800019
         BZ    NOSWA                    BRANCH IN NO SWA AVAIL.         18850019
         TS    NULL(WKREG2)             DETERMINE IF SWA IS AVAIL.      18900019
         BZ    GOTSWA                   BRANCH IF SWA CAN BE USED       18950019
         B     SWALOOP                  ELSE TRY FOR ANOTHER ONE        19000019
*                                                                       19050019
GOTSWA   EQU   *                                                        19100019
         ST    WKREG2,NULL(WKREG1)      STORE SWA ADDRESS               19150019
         MVC   RADSP(RALEN,WKREG2),DECAREA  PUT RECORD AREA PTR IN SWA  19200019
         MVI   RADSP(WKREG2),NULL       SET TRACK COUNT TO ZERO         19250019
         XC    RAINC(RAINCLN,WKREG2),RAINC(WKREG2)  ZERO B.I. FIELD     19300019
         B     TYPEDEC                  GO CONSTRUCT CCW'S              19350019
*                                                                       19400019
NOSWA    IC    INTRET,NOSWACD           SET NO SWA ERROR CODE           19450019
         B     LATERR                   GO POST COMPLETION              19500019
*                                                                       19550019
*                                                                     * 19600019
TYPEDEC  LA    RETREG,EXPCTEND          LOAD COMMON RETURN ADDR  Y02072 19650002
*                                                                       19654020
* CHECK FOR RPS AND IF USED BUILD FIRST SECTOR ADDRESS AND              19658020
* PUT IN FIRST CCW ALSO SET SECTOR CMND WHICH WILL BE USED TO           19662020
*      INDICATE RPS CHANNEL PROGRAMS ARE TO BE BUILT                    19666020
*                                                                       19670020
         SR    WKREG1,WKREG1            CLEAR REG FOR IT         20201  19674020
         IC    WKREG1,IOBM              GET EXTENT NO.           20201  19678002
         SLL   WKREG1,FOURB             MULTIPLY BY 16           20201  19682020
         L     WKREG2,DEBUCBAD(WKREG1)  GET UCB ADDRESS FOR      20201  19686002
*                                       PRESENT EXTENT           20201  19692102
         TM    OPTOFF(WKREG2),RCDRY     IS RCD READY TO BE USED  20201  19698020
         BNO   NOTRRA                   BRANCH IF NO             20201  19702020
         LH    WKREG2,IOBDIOBS          GET IOB SIZE             20201  19706020
         AR    WKREG2,IOBREG            ADD IOB ADDR             20201  19710020
         LH    WKREG1,H8                DOUBLE WORD OF RCD READY 20201  19714020
         TM    DECTYPE,READX            READ EXCLUSIVE USED      20201  19718020
         BO    ADDIT                    BRANCH IF YES            20201  19722020
         TM    DECTYPE+ONE,ADD          WRITE ADD                20201  19726020
         BZ    NOTREX                   BRANCH IF NO             20201  19730020
*                                                                       19734020
ADDIT    EQU   *                                                 20201  19738020
         LA    WKREG1,EXCNTRL(WKREG1)   ADD ENQ SIZE             20201  19742020
NOTREX   EQU   *                                                 20201  19746020
         SR    WKREG2,WKREG1            OBTAIN SECTOR ADDRESS    20201  19750020
*                                                                       19754020
         ST    WKREG2,IOBDCPND          PUT TEMPORARILY IN IOB   20201  19758020
         MVI   IOBDCPND,SETSC           PUT CMND IN FOR          20201  19762020
*                                       INDICATOR                20201  19766020
         SH    IOBREG,PREFSZ            GET IOB PREFIX           20201  19770020
         OI    NULL(IOBREG),RCDRYM      TURN ON RCD READY MASK   20201  19774020
         AH    IOBREG,PREFSZ            RESTORE IOB REG          20201  19778020
NOTRRA   EQU   *                                                 20201  19782020
         LA    WKREG2,IOBCHNPR          INIT CCW PTR.            20201  19786002
*                                                                       19790020
         TM    IOBDTYP2,IOBADDTY+IOBTYPE  IS TYPE KEY OR WRITE ADD      19800003
         BZ    IDEXIT                   NO, GO GENERATE ID CHAN PROGRAM 19850019
         MVI   IOBR,IDOFZERO            MAKE R BYTE ZERO TO SEARCH ON 0 19900002
*                                                                       19950019
         TM    IOBDTYP2,IOBADDTY        IS TYPE WRITE ADD               20000002
         BO    SOMEWA                   YES, GO TEST RECORD FORMAT      20050019
         CLI   DCBKEYLE,NULL            HAVE KEYS BEEN SPECIFIED        20100003
         BE    SETNOKEY                 NO, GO SET ERROR CODE           20150019
         L     WKREG1,DECKYADR          LOAD AND TEST FOR MISSING KEY   20200019
         LTR   WKREG1,WKREG1            ADDRESS FIELD IN DECB           20250019
         BC    NONZERO,PROCEED          IF NOT MISSING GO TEST EXIT     20300019
SETNOKEY IC    INTRET,INVKEY            SET INVALID REQUEST CODE        20350019
         B     LATERR                   GO POST COMPLETION, FREE IOB    20400019
*                                                                       20450019
PROCEED  EQU   *                                                        20500019
         L     EPREG,KEYMODAD           EXIT TO GENERATE KEY CHANNEL    20550019
         BR    EPREG                    PROGRAM                         20600019
IDEXIT   L     EPREG,IDMODAD            LOAD ID MODULE ADDRESS AND      20650019
         BR    EPREG                    GO TO GENERATE ID CHANNEL PROG. 20700019
*                                                                       20750019
SOMEWA   EQU   *                                                        20800019
         L     EPREG,DCBDFOR            LOAD ENTRY POINT OF THE         20850003
         BR    EPREG                    WRITE ADD MODULE AND BR. TO IT  20900002
*                                                                       20950019
*                                                                       21000019
EXPCTEND EQU   *                                                        21100019
         LA    WKREG2,CCWLN(WKREG2)      UPDATE POINTER TO PROGRAM END  21150002
         ST    WKREG2,IOBDCPND           EXPECTED ENDING ADDRESS        21200019
         MVC   IOBDNCRF+ONE(ONE),IOBBB2  MOVE B TO INLINE SEEK          21250002
*                                                                       21300019
         LR    PARAM,IOBREG              LOAD IOB ADDR AS THE PARAMETER 21350003
         EXCP  (1)                                                      23050019
*                                                                       23100019
RSTOR    RETURN (14,12),T,RC=0                                          23150019
*                                                                       23200019
*                                                                       23250019
*    THE FOLLOWING ROUTINE COMPLETES THE PROCESSING OF AN INVALID       23300019
*     REQUEST AND RETURNS TO THE USER.                                  23350019
*                                                                       23400019
LATERR   EQU   *                                                        23450019
         LR    WKREG1,IOBREG                                            23500019
         SH    WKREG1,IOBASWA           POINT TO SWA ADDR FIELD         23550019
         L     WKREG1,NULL(WKREG1)                                      23600019
         LTR   WKREG1,WKREG1                                            23650019
         BZ    NOSWATF                  BR IF NO SWA                    23700019
         MVI   NULL(WKREG1),NULL        ZERO THE SWA IN USE BYTE        23750019
NOSWATF  EQU   *                                                        23800019
         TM    IOBDAYLI,AVLMSK          IF THE AVAILABILITY BIT IS SET  23850002
         BO    FRMPOOL                  THIS IOB IS LINKED TO THE POOL  23900019
         LH    PARAM2,IOBDIOBS          SET SIZE PARAMETER FOR FREEMAIN 23950019
         AH    PARAM2,PREFSZ            ADD FOR PREFIX                  24000019
         LR    PARAM,IOBREG             SET ADDRESS PARAMETER           24050019
         SH    PARAM,PREFSZ             POINT TO START OF PREFIX        24100019
         FREEMAIN R,LV=(0),A=(1)                                        24150019
         B     ABORT                    GO POST                         24200019
*                                                                       24250019
FRMPOOL  EQU   *                                                        24300019
         MVI   IOBDAYLI,AVLABLE         AVAILABLE                       24350002
ABORT    AH    INTRET,INVREQ            SET INVALID REQ. EXCEPT. CODE   24400019
         SR    WKREG2,WKREG2            ZERO OUT THE IOB POINTER FIELD  24450019
         ST    WKREG2,DECIOBPT          OF THE DECB                     24500002
         LR    PARAM2,INTRET            POSITION THE POST CODE          24550019
         SLL   PARAM2,EIGHT             (EXCEPTION CODES)               24600002
         LR    PARAM,DECBREG            LOAD ECB ADDRESS PARAMETER      24650019
         LA    PARAM,0(0,PARAM)         CLEAR TOP BYTE IN REG    A44088 24670002
         MVI   NULL(PARAM),NULL         AND CLEAR THE OLD POST CODE AND 24700019
         POST  (1),(0)                  POST.                           24750019
         B     RSTOR                    GO RESTORE REGISTERS AND RETURN 24800019
*                                                                       24850019
OPSMSK   DC    F'6'                     OPTIONS-READX,DYNAMIC BFR.      24900019
INVREQ   DC    H'4096'                  INVALID REQUEST BIT             25200019
K49      DC    H'49'                    CONSTANT 49                     25250019
PREFSZ   DC    H'8'                     SIZE OF IOB PREFIX              25300019
IOBASWA  DC    H'4'                     DISPLACEMENT TO SWA ADDRESS     25350019
*                                                                       25400019
*   THE FOLLOWING EQUATES SHOW THE INCREMENT WHICH MUST BE ADDED TO     25450019
*   THE BASE SIZE OF THE IOB FOR A PARTICULAR OPTION.                   25500019
*                                                                       25550019
RNDI     EQU   32                       NEXT ADDRESS TYPE DI            25600019
RNDK     EQU   40                       NEXT ADDRESS TYPE DK            25650019
WCADD    EQU   48                       WRITE VERIFY WITH WRITE ADD     25750019
WCUPDTDI EQU   40                       WRITE VERIFY TYPE DI UPDATE     25800019
WCUPDTDK EQU   24                       WRITE VERIFY TYPE DK UPDATE     25850019
WCUPDTES EQU   32                       WRITE VERIFY WITH EXTENDED SRCH 25900019
EXTNDSCH EQU   128                      EXTENDED SEARCH                 25950019
WRTADD   EQU   104                      WRITE ADD                       26000019
EXCNTRL  EQU   28                       EXCLUSIVE CONTROL               26050019
RDDIORDK EQU   32                       READ (NO EXTENDED SEARCH)       26100019
WRDIORDK EQU   40                       WRITE (NO EXTENDED SEARCH)      26150019
         SPACE 3                                                        26200019
INVID    DC    X'08'                   INVALID ZERO ID                  26250019
INVOPT   DC    X'02'                   INVALID OPTIONS                  26300019
INVWRT   DC    X'40'                   WRITE TO INPUT DATA SET          26350019
INVLIMCT DC    X'20'                   EXTENDED SEARCH, LIMIT IS ZERO   26400019
NOSWACD  DC    X'00'                    NO SWA INDICATION         21905 26420021
*                                                                       26450019
INVKEY   DC    X'04'                    KEYS ARE MISSING                26500019
AVLMSK   EQU   X'80'                    IOB AVAILABILITY FLAG           26550019
ZEROS    EQU   OPSMSK                   PLUS ZEROS FOR COMPARING.       26600019
MIXED    EQU   4                                                        26650019
ONE      EQU   1                                                        26700019
IDDISP   EQU   7                        DISPLACEMENT OF BLOCK ID        26750019
IDOFZERO EQU   0                        ZERO BLOCK ID                   26800019
ROFTTR   EQU   2                        DISPLACEMENT OF R IN TTR        26850019
CNVENTRY EQU   4                        ENTRY IN ADDR CNVRT RTN  Y02072 26900002
NONZERO  EQU   7                                                        26950019
TWO      EQU   2                                                        27000019
AVLABLE  EQU   0                        IOB AVAILABLE SETTING           27050019
WRTMSK   EQU   15                       DCB WAS OPENED FOR              27100019
*                                        OUTPUT OF UPDATE               27150019
CCWLN    EQU   8                        LENGTH OF A CCW                 27450019
RALEN    EQU   4                        LENGTH OF RECORD AREA POINTER   27500019
RADSP    EQU   4                        DISPLACEMENT OF R.A. PTR IN SWA 27550019
RAINC    EQU   8                        DISPLACEMENT OF B.I. IN SWA     27600019
RAINCLN  EQU   2                        LENGTH OF B.I. FIELD IN SWA     27650019
NULL     EQU   0                        ZERO CONST. FOR REGISTER INSTR. 27700019
RCDRYM   EQU   X'40'                    RCD READY MASK/BIT       20201  27960020
OPTOFF   EQU   17                       OFFSET IN UCB TO OPTION  20201  27970020
*                                       CDE                      20201  27980020
RCDRY    EQU   X'10'                    RCD READY BIT IN OPTION  20201  27990020
*                                       FLD                      20201  28000020
SETSC    EQU   X'23'                    SET SECTOR CCW COMMAND   20201  28010020
RDSC     EQU   X'22'                    READ SECTOR CCW COMMAND  20201  28020020
CPFLAG   EQU   X'42'                    SET UNRELATED, COMMAND CHAIN    28200019
NOPCODE  EQU   X'03'                    NO OP                           28300019
FT       EQU   42                                                       28450019
FZ       EQU   40                                                       28500019
SEVN     EQU   7                                                        28550019
         DROP DECBREG                                             21905 28580021
         DROP DEBREG                                              21905 28610021
         DROP IOBREG,FDNBASE,DCBREG                              Y02072 28620002
         TITLE 'IGG019KJ - BDAM VRE FOUNDATION MODULE  - ASI ROUTINE'   28650019
*                                                                       28700019
*                                                                       28750019
*  ASYNCHRONOUS INTERRUPT ROUTINE                                       28800019
*   THIS ROUTINE IS ENTERED BY THE SUPERVISOR SO THAT BDAM MAY          28850002
*   COMPLETE THE PROCESSING OF A REQUEST.                               28900019
*   BDAM EXPECTS THE FOLLOWING REGISTER USAGE'                          28950019
*            1 RQE ADDRESS                                              29000002
*           14 RETURN POINT                                             29050002
*           15 ENTRY POINT OF THIS ROUTINE                              29100002
*                                                                       29150019
         USING IECDFDNA,EPREG                                           29200019
*                                                                       29250002
*                                                                       29300002
SWAPTR   EQU   2                                                        29500019
RIOB     EQU   2                        IOB ADDRESS                     29520002
DATALN   EQU   3                        DATA LENGTH REGISTER            29550019
MVCLNGTH EQU   3                        RECORD LENGTH                   29600002
TOTLN    EQU   4                        TOTAL LENGTH REGISTER           29650019
RAPTR    EQU   5                        RECORD AREA POINTER             29700019
POSINRA  EQU   6                        POINTER TO NEXT DATA BYTE IN    29750019
*                                       THE RECORD AREA                 29800019
FROMADR  EQU   6                        POINTER TO RECORD TO BE MOVED   29850002
RRQE     EQU   7                        RQE BASE REG             Y02072 29900002
CPSTART  EQU   8                        CHANNEL PROGRAM STARTING ADDR.  29950019
TOADR    EQU   9                        POINTER TO RECORD DESTINATION   30050019
DECBPTR  EQU   10                       DECB POINTER                    30100019
READADD  EQU   10                       ENTRY POINT REG FOR READX & ADD 30150019
RETFMOVE EQU   14                       RETURN ADDRESS                  30200019
WORKR2   EQU   14                       WORK REGISTER IN ASI ROUTINE    30202002
WORKR1   EQU   15                       WORK REGISTER IN ASI ROUTINE    30204002
*                                                                       30250019
IECDFDNA B     DASIA                    ENTRY FROM SUPERVISOR           30300019
         B     DASIB                    ENTRY FROM SELF-FORMAT          30350019
*                                       TO POST IOB                     30370002
*                   NOTE:  THIS ENTRY ASSUMES THAT THERE MAY BE AN IOB  30380002
*                          ADDR SAVED IN REG 6 WHICH MUST BE MAIN-      30390002
*                          TAINED THROUGHOUT ASI PROCESSING ON THIS     30392002
*                          PATH. CONTROL IS THEN RETURNED TO 19KN VIA   30394002
*                          THE ADDR PUT IN IOBDQPTR BY 19KN.            30396002
         B     DASIC                    ENTRY TO CLEAN UP AND RETURN    30400002
*                                                                       30500019
DASIA    EQU   *                                                        30550019
         LR    FDNBASE,EPREG            BASE TO TRANSPARENT REG  Y02072 30560002
         DROP  EPREG                    DROP ENTRY BASE REG      Y02072 30570002
         USING IECDFDNA,FDNBASE         ESTABLISH NEW BASE       Y02072 30580002
         LR    RRQE,PARAM               SAVE IOS RQE ADDRESS     Y02072 30600002
         USING RQE,RRQE                 ESTABLISH RQE BASE       Y02072 30610002
         L     PARAM,RQEIOB             GET IOB ADDRESS FROM RQE Y02072 30650002
         USING IOBSTDRD,PARAM           ESTABLISH IOB BASE       Y02072 30660002
         L     SAVE,IOBDCBPT            GET DCB ADDR FROM IOB    Y02072 30670002
         USING IHADCB,SAVE              ESTABLISH DCB BASE       Y02072 30680002
         LR    INTRET,RETREG            MOVE SUPERVISOR RETURN ADDRESS  30700002
         L     DECBPTR,IOBECBPT         GET DECB ADDRESS          21905 30710021
         USING DECBDEF,DECBPTR                                    21905 30720021
*                                                                       30730002
*********************************************************************** 30732002
*  THE FOLLOWING ROUTINE LINKS IOBS TO THE DCB POOL IF THEY WERE      * 30740002
*  OBTAINED BY GETMAIN. THEY ARE ADDED IN ORDER OF INCREASING SIZE.   * 30742002
*********************************************************************** 30744002
*                        POOL THE IOB                            Y02072 30746003
         L     WORKR1,IOBDPLAD          WAS IOB FROM POOL OR     Y02072 30748002
         LTR   WORKR1,WORKR1            OBTAINED BY GETMAIN      Y02072 30748402
         BNZ   INPOOL                   IF NOT 0,ALREADY IN POOL Y02072 30748802
*                                                                       30749602
*                        ADD NEW IOB TO IOB POOL                 Y02072 30749703
         MVI   IOBDAYLI,UNAVALSW        MARK CURRENT IOB UNAVAIL Y02072 30749802
*                                       ABLE BEFORE ADD TO POOL  Y02072 30754002
         LA    PARAM,0(0,PARAM)         INSURE 0 HI-ORDER BYTE   A30797 30758202
         L     WORKR1,DCBIOBAD          PUT DCB POOL ADDRESS IN         30762402
         LA    WORKR2,NULL(WORKR1)      BOTH WORK REGS.                 30766602
LOOP     LA    WORKR1,NULL(WORKR1)      CLEAR HI BYTE.                  30776602
         LTR   WORKR1,WORKR1            ANY IOB'S BEYOND THIS.          30778602
         BZ    TSTEQ                    NO, GO TEST FOR FIRST IOB       30780602
*                                                                       30782602
*   PUT IOB ON POOL IN ORDER OF INCREASING SIZE. PUT NEW IOB IN QUEUE   30783002
*   AS THE FIRST IOB IN THAT SIZE GROUP.                                30783102
*                                                                       30783202
         CLC   IOBDIOBS,IOBDIOBS-IOBSTDRD(WORKR1)                       30783302
         BH    SEENEXT1                 NEW IOB IS LARGER               30788802
         IC    PARAM2,IOBDAYLI          SAVE AVAILABILITY BYTE   Y02072 30789202
         SLL   PARAM2,SHFT3BYT          WHILE STORING INTO       Y02072 30789602
         OR    WORKR1,PARAM2            IOB CHAINING FIELD       Y02072 30790002
         ST    WORKR1,IOBDPLAD          STORE NXT IOB ADDR IN    A30797 30790802
         LA    WORKR1,0(WORKR1)         CLR TOP BYTE TO COMPARE  Y02072 30792802
TSTEQ    CR    WORKR1,WORKR2            IF EQUAL, THIS IOB IS THE       30793602
         BE    FIRSTIOB                 FIRST ONE TO BE POOLED          30794002
*                                                                       30794102
*   RELINK THE POOL CHAIN WITHOUT DESTROYING THE AVAILABILITY FLAG.     30794202
*                                                                       30794302
         IC    PARAM2,IOBDAYLI-IOBSTDRD(WORKR2)                   21905 30808202
         SLL   PARAM2,SHFT3BYT                                          30818202
         OR    PARAM,PARAM2                                       21905 30820202
         ST    PARAM,IOBDPLAD-IOBSTDRD(WORKR2)                          30820602
         LA    PARAM,0(PARAM)           CLEAR TOP BYTE-NOT NEG   YM1458 30820702
         B     INPOOL                   CONTINUE IOB PROCESSING  Y02072 30821002
*                                                                       30821402
FIRSTIOB ST    PARAM,DCBIOBAD           INSERT THIS IOB AS TOP OF CHAIN 30821802
         B     INPOOL                   CONTINUE IOB PROCESSING  Y02072 30822002
SEENEXT1 LR    WORKR2,WORKR1            SAVE THE ADDRESS OF PRIOR LINK, 30822202
         L     WORKR1,IOBDPLAD-IOBSTDRD(WORKR1)  LOAD THE ADDRESS OF    30826702
*                                       THE NEXT IOB IN POOL            30828702
         B     LOOP                     GO TEST LINK ADDRESS = ZERO     30830702
*                                                                       30830802
*                                                                       30831002
*                                                                       30831102
INPOOL   EQU   *                        TEST FOR ERRORS          Y02072 30831202
         TM    IOBSTAT1,IOBNEWVL        DID END OF EXTENT CAUSE ASI     30831502
         BZ    TSTERR                   NO, CONTINUE LOOKING FOR CAUSE. 30836102
         XI    IOBSTAT1,IOBNEWVL+IOBABNRM YES,CLEAR EXCP AND ABN BITS   30850002
         L     DECBPTR,IOBECBPT         GET USER ECB ADDRESS     Y02072 30950002
         ST    DECBPTR,IOBDQPTR         SAVE IT IN IOB, TO BE    Y02072 31000002
*                                       RESTORED BY CEA OR EOE   Y02072 31010002
         LA    WKREG2,IOBCSW+3          GET CSW ADDRESS TO USE   Y02072 31020002
         ST    WKREG2,IOBECBPT          AS DUMMY ECB FOR IOS     Y02072 31030002
         EXCP  (1)                      RESTART THE CHANNEL PROGRAM     31050019
         BR    INTRET                   GO BACK TO SUPERVISOR.          31150019
*                                                                       31200019
TSTERR   EQU   *                        TEST FOR ERROR           Y02072 31210002
         DROP  RRQE                                              Y02072 31407002
         ST    INTRET,IOBDQPTR          SAVE SUPVERVISOR RETURN IN IOB. 32270801
         LR    INTRET,PARAM             PUT IOB ADDR INTO READX REG     32300019
         LR    SWAPTR,PARAM             *                               32350019
         SH    SWAPTR,FOUR               * SET UP SWA POINTER           32400019
         L     SWAPTR,NULL(SWAPTR)       *                              32450019
         USING SWA,SWAPTR               *                               32500019
         L     CPSTART,IOBSTART         SET UP CHANNEL PROGRAM ADDRESS  32650019
         TM    IOBSTAT1,IOBABNRM        WAS THIS ABNORMAL COMPLETION    32700002
         BO    ASIERR                   BRANCH IF YES                   32750019
*                                                                       32800019
GOODCMPL EQU   *                                                        32850019
         L     RAPTR,SWARAPT            SET UP RECORD AREA POINTER      32900019
         LR    POSINRA,RAPTR                                            32950019
         TM    IOBDTYPE,IOBDYNBF        IS DYN BUF BEING USED   XA00093 32960002
         BNO   NOTDYNBF                 NO, BR AROUND           XA00093 32970021
         TM    IOBDTYP2,IOBTYPE         IS THIS READ BY BLK ID  XA00093 32980002
         BO    NOTDYNBF                 NO, BR AROUND           XA00093 32990021
         TM    IOBDTYP2,IOBSKEY         WAS KEY ADDR CODED 'S'  XA00093 32992002
         BZ    NOTDYNBF                 NO, BR AROUND           XA00093 32994021
         SR    POSINRA,POSINRA          CLEAR REG TO GET KEY    XA00093 32996021
         IC    POSINRA,DCBKEYLE         LENGTH IN DCB.KEY WAS   XA00093 32998002
         AR    POSINRA,RAPTR            READ INTO RECORD AREA   XA00093 32998402
         LR    RAPTR,POSINRA            SO NEED OFFSET TO       XA00093 32998802
*                                       MOVE DATA.              XA00093 32999202
NOTDYNBF EQU   *                                                XA00093 32999621
         AH    POSINRA,SWABFINC         POINT TO NEXT DATA BYTE         33000019
         SR    DATALN,DATALN                                            33050019
         SR    TOTLN,TOTLN                                              33100019
         L     WORKR1,IOBCSW-1          GET LAST CCW ADDRESS            33150002
         SH    WORKR1,H8                BACK UP ONE CCW                 33200019
         TM    DECTYPE+ONE,READ         IS THIS A READ REQUEST          33250019
         BZ    WRITEREQ                 BR IF NO                        33300019
         CLI   NULL(WORKR1),NOPCODE     IS IT A NOP CCW                 33350019
         BE    NATST                    BR IF YES                       33400019
         TM    IOBDTYPE,IOBRDEXC        IS THIS A READ EXCLUSIVE CNTRL. 33450002
         BZ    ASIREAD                  BR IF NO                        33500019
         TM    IOBSTAT1,IOBENQUE        HAS RECORD BEEN ENQ'D YET       33550002
         BZ    ENQUEUE                  GO ENQ IF NOT                   33600019
ASIREAD  EQU   *                                                        33650019
         TM    DECTYPE+ONE,KEY          IF TYPE IS DK,                  33700019
         BO    ASIREAD2                 BR AROUND READ R0 TEST          33750019
         CLI   IOBR,NULL                SEE IF THIS WAS A READ ON R0    33800002
         BNE   ASIREAD2                 BR IF NOT                       33850019
         LH    DATALN,DECLNGTH                                          33900019
         EX    DATALN,MOVER0            MOVE R0 TO THE RECORD AREA      33950019
         B     ISITNA                   SEE IF NEXT ADDRESS IS REQ'D    34000019
*                                                                       34050019
MOVER0   MVC   NULL(NULL,RAPTR),SWABDW  * EXECUTED *   MOVE R0          34100019
*                                                                       34150019
ASIREAD2 EQU   *                                                        34200019
         LH    DATALN,SWABDW            GET SEGMENT LENGTH              34250019
         SH    DATALN,H8                SUBTRACT 8 FROM DATA LENGTH     34300019
         LH    TOTLN,SWABFINC                                           34350019
         AR    TOTLN,DATALN             ADD LL-8 TO TOTAL               34400019
*                                                                       34450019
         TM    SEGFLGS,FIRSTSEG         IS THIS A FIRST SEGMENT         34500019
         BO    VERMID                   BR IF NO                        34550019
         CR    RAPTR,POSINRA            IF ANOTHER SEG HAS BEEN READ    34600019
         BNE   BADFLGS                  GO SET ERROR FLAG BECAUSE THE   34650019
*                                       SEG CONTROL FLAGS ARE BAD.      34700019
         MVC   NULL(SEGDATA-SWABDW,RAPTR),SWABDW  MOVE DESCRIPTORS      34750019
         LA    POSINRA,SEGDATA-SWABDW(POSINRA)    UPDATE DATA POINTER   34800019
         LA    TOTLN,SEGDATA-SWABDW(TOTLN)        UPDATE DATA COUNT     34850019
NOTFIRST LR    TOADR,POSINRA            *  SET UP FOR                   34900019
         LA    FROMADR,SEGDATA          *     DATA MOVE                 34950019
         CH    TOTLN,DECLNGTH           WAS TOO MUCH DATA READ          35000019
         BNH   NOTTM                    BR IF NO                        35050019
         LR    DATALN,TOTLN             TOTAL INDICATED IN BDW    21905 35100021
         SH    TOTLN,DECLNGTH           EXCESS OVER MAX REC LNGTH 21905 35130021
         SR    DATALN,TOTLN             ONLY MOVE TO MAX RECLNGTH 21905 35160021
         BAL   RETFMOVE,MOVE            MOVE THE SEGMENT DATA TO        35200019
*                                           THE RECORD AREA             35250019
         B     BADFLGS                  GO TO SET ERROR FLAG      21905 35300021
VERMID   EQU   *                                                        35350019
         CR    RAPTR,POSINRA            SINCE THIS IS NOT A FIRST SEG,  35400019
         BNE   NOTFIRST                 MAKE SURE A SEG HAS ALREADY     35450019
*                                       BEEN READ.  IF NOT, SET ERROR.  35500019
BADFLGS  EQU   *                                                        35550019
         OI    IOBSTAT1,IOBABNRM        SET ABNORMAL COMPLETION         35600002
         B     SETLGNCK                 GO SET WRONG LENGTH RECORD      35650019
NOTTM    BAL   RETFMOVE,MOVE            MOVE THE SEGMENT DATA TO        35700019
*                                        THE RECORD AREA                35750019
         STH   TOTLN,SWABFINC           STORE BUFFER INCREMENT          35760019
         MVC   NULL(TWO,RAPTR),SWABFINC UPDATE LL IN RECORD AREA        35800019
         CH    TOTLN,DECLNGTH           BR IF THE REQUIRED NUMBER OF    35850019
         BE    LASTRD                   BYTES HAVE BEEN READ            35900019
         TM    SEGFLGS,LASTSEG          WAS THIS THE LAST SEGMENT       35950019
         BZ    LASTRD                   BR IF LAST                      36000019
         TM    SEGFLGS,FIRSTSEG         IS THIS A FIRST SEGMENT         36100019
         BO    MIDREAD                  BR IF NO                        36150019
         TM    DECTYPE+ONE,KEY          IS TYPE = DK                    36200003
         BO    FRSTDK                   BR IF YES                       36250019
         CLI   DCBKEYLE,NULL            IS KEY LENGTH ZERO IN DCB       36300019
         BE    MIDREAD                  BR IF YES, CHNL PROG IS OK      36350019
         L     WORK3,DECKYADR                                           36400019
         LTR   WORK3,WORK3              IS KEY ADDRESS SPECIFIED        36450019
         BZ    MIDREAD                  BR IF NO, CHNL PROG IS OK       36500019
         L     WORKR1,IOBDCPND          GET CHNL PROG ENDING ADDR.      36550019
         SH    WORKR1,SIXTEEN           BACK UP TWO CCW'S               36600019
         MVC   NULL(CCWLN,WORKR1),CCWLN(WORKR1)  MOVE LAST CCW UP ONE   36650019
*                                       POSITION TO BYPASS KEY READ     36700019
         LA    WORKR1,CCWLN(WORKR1)     ESTABLISH NEW CHANNEL PROGRAM   36750019
         ST    WORKR1,IOBDCPND               ENDING ADDRESS             36800019
         B     MIDREAD                  SET UP FOR NEXT READ            36850019
FRSTDK   EQU   *                                                        36900019
         TM    DECTYPE,EXSCH            TEST FOR EXTENDED SEARCH        36950019
         BO    FRSTES                   BR IF YES                       37000019
         USING READDK1,CPSTART          SET UP CHANNEL PROGRAM DSECT    37050019
*                                                                       37055020
         LR    WORKR1,PARAM             GET IOB PTR              20201  37060020
         SH    WORKR1,H8                BACK UP TO PREFIX        20201  37065020
         TM    NULL(WORKR1),RCDRYM      RCD READY USED           20201  37070020
         BNO   NOTRRA1                  BRANCH IF NO             20201  37075020
         LA    WORKR1,RDK1NOP2          GET 2ND NOP ADDR         20201  37080020
         TM    DECTYPE+ONE,NEXTADR      NEXT ADDR REQUESTED      20201  37085020
         BZ    NOADDX                   BRANCH IF NO             20201  37090020
         LA    WORKR1,RDK1NOP3+BIT8     GET SECTOR ADDR          20201  37095020
NOADDX   EQU   *                                                 20201  37100020
         ST    WORKR1,RDK1NOP1          PUT IN SECTOR ADDR       20201  37105020
         MVI   RDK1NOP1,SETSC           SET SECTOR CMND          20201  37110020
         B     FEATA1                   GO AROUND NEXT           20201  37115020
NOTRRA1  EQU   *                                                 20201  37120020
         MVI   RDK1NOP1,NOPCODE         MAKE CCW1 A NOP          20201  37125020
FEATA1   EQU   *                                                 20201  37130020
         LA    WORKR1,IOBCC             *                               37150002
         ST    WORKR1,RDK1SIE1           *   CONSTRUCT SEARCH-ID-EQUAL  37200019
         MVI   RDK1SIE1,SIEOP           *    CCW                        37250019
         MVI   RDK1SIE1+BYTE7,FIVE      *    SET COUNT TO FIVE          37260019
*                                                                       37300019
         LA    WORKR1,RDK1SIE1          *                               37350019
         ST    WORKR1,RDK1TIC1           *   CONSTRUCT A TIC CCW        37400019
         MVI   RDK1TIC1,TICOP           *                               37450019
         B     MIDREAD                  SET UP FOR NEXT READ            37500019
FRSTES   EQU   *                                                        37550019
         MVC   IOBDNCRF+SEVN(ONE),IOBSEEK   SAVE EXTENT NUMBER          37560002
         MVC   SAVEID+TWO(TWO),IOBDSTAT SAVE THE IOB STATUS             37600019
         USING READES1,CPSTART          SET UP CHANNEL PROGRAM DSECT    37650019
         MVC   RE1RD,RERD-RENOP1(CPSTART) MOVE READ DATA CCW TO CCW4    37700019
         LA    WORKR1,RE1NOP2           SET NEW EXPECTED CHANNEL END    37750019
         ST    WORKR1,IOBDCPND               IN IOB                     37800019
         MVC   IOBCC(CCHHLN),DNRCFP2    MOVE NEW CCHH TO IOBSEEK+3      37850002
MIDREAD  EQU   *                                                        37900019
         BAL   WORK3,ADD1RTN            INCREMENT TRACK NBR BY ONE      37950019
         MVI   IOBR,R1                  SET R OF MBBCCHHR TO 1          38000002
         TM    IOBDTYP2,IOBADDTY+IOBTYPE  IS THIS TYPE DI               38050002
         BC    ONE+MIXED,AFTDITST       BR IF NOT                       38100019
         MVC   IOBUPLIM+THREE(EQU4),IOBCC                               38150002
         B     EXCPAGN                  GO EXCP                         38200019
AFTDITST EQU   *                                                        38250019
         TM    IOBDTYP2,IOBADDTY        IS THIS A WRITE ADD             38300002
         BZ    EXCPAGN                  BR IF NO                        38350019
         MVC   IOBDNCRF(FIVE),IOBCC     MOVE CCHHR TO COUNT FIELD       38400002
         MVC   IOBCHNPR+(WASIE1-WRITEADD)+THREE(EQU4),IOBCC             38450002
*                                       MOVE CCHH TO OLD CCW2           38500019
*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   38550002
EXCPAGN  EQU   *                        READ OR WRT NEXT SEGMENT        38600002
         L     DECBPTR,IOBECBPT         GET USER ECB ADDRESS     Y02072 38610002
         ST    DECBPTR,IOBDQPTR         SAVE IT IN IOB, TO BE    Y02072 38620002
*                                       RESTORED BY CEA OR EOE   Y02072 38630002
         LA    WKREG2,IOBCSW+3          GET CSW ADDRESS TO USE   Y02072 38640002
         ST    WKREG2,IOBECBPT          AS DUMMY ECB FOR IOS     Y02072 38642002
         EXCP  (1)                      RESTART THE CHANNEL PROGRAM     38644002
         SVC   EXIT                     EXIT                            39600019
*                                                                       39650019
*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   39660002
LASTRD   EQU   *                                                        39700019
         SH    TOTLN,FOUR                                               39750019
         STH   TOTLN,SWABFINC           PUT DATA LENGTH IN SEGMENT      39800019
         MVC   SDW(TWO,RAPTR),SWABFINC  DESCRIPTOR WORD                 39850002
ISITNA   TM    DECTYPE+ONE,NEXTADR      IS NEXT ADDRESS REQUESTED       39900019
         BZ    DASIB                    BR IF NO                        39950019
         MVC   SAVEID+TWO(TWO),IOBDSTAT SAVE THE IOB STATUS             40000019
         NC    IOBDSTAT,CLRSTAT         CLEAR OUT CURRENT STATUS        40050019
         TM    DECTYPE+ONE,KEY          IS TYPE = DK                    40100019
         BO    NADK                     BR IF YES                       40150019
         MVC   SAVEID(ONE),IOBR         SAVE ID OF CURRENT RECORD       40200002
         MVC   SWABDW(FIVE),DNRCFP2     SAVE CCHHR FROM CAPACITY RCD.   40250019
         USING READDI0N,CPSTART                                         40300019
         MVC   RDINASI1,RDINASI2        MOVE CCW5 TO CCW2               40350019
         LA    WORKR1,SWABDW            *                               40400019
         ST    WORKR1,RDINARD            * PUT SWA ADDR IN CCW4         40450019
         MVI   RDINARD,READCCW          *                               40500019
         MVI   RDINASI2,NOPCODE         MAKE CCW5 A NOP                 40550019
         MVI   RDINASI2+FLAGS,SWL       SET NOP FLAGS                   40600019
         B     GETNA                    CALCULATE NEXT ADDRESS          40650019
NADK     EQU   *                                                        40700019
         MVI   IOBR,NULL                SET R=0 IN IOBSEEK              40750002
         TM    SEGFLGS,FIRSTSEG         WAS THIS A ONE SEGMENT RECORD   40800019
         BO    MIDNADK                  BR IF NO                        40850019
         MVC   IOBCC(EQU4),DNRCFP2      MOVE CCHH TO IOBSEEK+3          40900002
         MVC   SAVEID(ONE),IOBDNCRF+SIX SAVE ID OF CURRENT RECORD       40950002
         TM    DECTYPE,EXSCH            TEST FOR EXTENDED SEARCH        41000019
         BZ    NADKNES                  BR IF NOT                       41050019
         USING READES1,CPSTART          SET UP CHANNEL PROGRAM DSECT    41100019
         MVC   RE1RD(CCPADR),RERD-RENOP1(CPSTART) MOVE READ DATA TO CCW 41150019
MIDNAES  EQU   *                                                        41200019
         MVI   RE1RD+FLAGS,COMCHAN+SWL  SET FLAGS                       41250019
         MVC   RE1NOP2,RENOP2-RENOP1(CPSTART) MAKE CCW5 A NOP           41300019
         B     EXCPAGN                  EXCP FOR NEXT ADDRESS           41350019
MIDNADK  EQU   *                                                        41400019
         MVI   SAVEID,ONE               SAVE ID OF LAST SEGMENT         41450019
         TM    DECTYPE,EXSCH                                            41500019
         BZ    NADKNES                  BR IF NOT EXTENDED SEARCH       41550019
         MVC   RE1RD+SIX(TWO),RE1SIDE+SIX  SET READ LENGTH TO FIVE      41600019
         B     MIDNAES                  GO FINISH THE CCW'S             41650019
NADKNES  EQU   *                                                        41700019
         USING READDK1,CPSTART          SET UP CHANNEL PROGRAM DSECT    41750019
         LA    WORKR1,RDK1NOP2                                          41800019
         ST    WORKR1,IOBSTART          SET NEW CHNL PROG START ADDR    41850019
         B     EXCPAGN                  EXCP FOR NEXT ADDRESS           41900019
NATST    EQU   *                                                        41950019
         TM    DECTYPE+ONE,NEXTADR      IS NEXT ADDRESS REQUESTED       42000019
         BZ    ASIERR2                  BR IF NO                        42050019
         SH    WORKR1,H8                                                42100019
         CLI   NULL(WORKR1),TICOP       WAS THE PRECEDING CCW A TIC     42150019
         BE    ASIERR2                  BR IF YES                       42200019
GETNA    EQU   *                                                        42250019
*                                                                       42300019
*  AT THI POINT, THE SWA CONTAINS THE CCHHR OF THE LAST BLOCK ON THE    42350019
*  TRACK IN THE FIRST 5 BYTES AND THE ID OF THE LAST BLOCK READ IN THE  42400019
*  6TH BYTE.                                                            42450019
*                                                                       42500019
         MVC   IOBDSTAT,SAVEID+TWO      RESTORE IOB STATUS              42550019
         CLC   SAVEID(ONE),SWABDW+CCHHLN WAS THIS THE LAST BLOCK ON     42600019
*                                        THE TRACK                      42650019
         BNE   NEXTTID                  BR IF NOT                       42700019
         BAL   WORK3,ADD1RTN            INCREMENT TRACK NBR BY ONE      42750019
         L     DECBPTR,IOBECBPT         RESTORE DECB POINTER            42800019
         TM    DECTYPE+ONE,TYPERU       IS TYPE = RU                    42850019
         BM    NOTRU                    BR IF NO                        42900019
ACTTST   EQU   *                                                        42950019
         TM    IOBDTYPE,IOBACTAD        IS ACTUAL ADDRESSING USED       43000002
         BO    ACTNA                    BR IF YES                       43050019
*                                                                       43100019
*  THE FOLLOWING ROUTINE WILL CONVERT THE MBBCCHHR ADDRESS IN IOBSEEK   43150019
*  TO A RELATIVE TTR BY USING THE RESIDENT CONVERSION ROUTINE IECPRLTV. 43200019
*                                                                       43250019
         STM   WREG9,ACTADR,IOBCHNPR    SAVE REGISTERS USED             43300002
         LA    ACTADR,IOBSEEK           SET ACTUAL ADR. PARAMETER       43350019
         L     PARAM,DCBDEBAD           SET DEB ADDRESS                 43400019
         L     IECPRLTV,CVTPTR          GET ADDR OF CONVERSION ROUTINE  43450019
         L     IECPRLTV,APRLTV(IECPRLTV)     FROM THE CVT.              43500019
         BALR  RETREG,IECPRLTV          GO TO CONVERSION ROUTINE        43550019
*                                                                       43600019
         ST    CONVID,IOBDCPND-IOBSEEK(ACTADR) SAVE THE RETURNED TTR0   43650019
         LM    WREG9,ACTADR,IOBCHNPR-IOBSEEK(ACTADR) RESTORE THE REGS   43700002
         L     WORKR1,DECNA                                             43750019
         MVC   NULL(TTRLN,WORKR1),IOBDCPND MOVE TTR TO USER AREA        43800019
         B     DASIB                    NEXT ADDRESS FEEDBACK COMPLETED 43850019
*                                                                       43900019
NEXTTID  EQU   *                                                        43950019
         IC    WORKR1,SAVEID            *                               44000019
         LA    WORKR1,ONE(WORKR1)        * ADD 1 TO R IN IOBSEEK        44050019
         STC   WORKR1,IOBR              *                               44100002
         B     ACTTST                   GO SUPPLY NEXT ADDRESS          44150019
NOTRU    EQU   *                                                        44200019
         MVI   SAVEID,NULL              SET CURRENT ID TO ZERO          44250019
         NC    IOBDSTAT,CLRSTAT         CLEAR IOB STATUS                44300019
         B     EXCPAGN                  GO READ NEXT CAPACITY RECORD    44350019
ACTNA    EQU   *                                                        44400019
         L     WORKR1,DECNA                                             44450019
         MVC   NULL(ACTLN,WORKR1),IOBSEEK MOVE MBBCCHHR TO USER AREA    44500019
         B     DASIB                    NEXT ADDRESS FEEDBACK COMPLETED 44550019
*                                                                       44600019
*                                                                       44650019
WRTDONE  EQU   *                                                        44700019
         TM    IOBDTYP2,ADD             WAS THIS A WRITE ADD     Y02072 44750002
         BZ    DASIB                    BR IF NO                        44800019
         L     READADD,DCBDFOR          GET ADDRESS OF ADD MODULE AND   44850019
         B     ADDDONE(READADD)         BRANCH TO IT                    44900019
*                                                                       44950019
USETRKCP EQU   *                                                        45000019
         LH    DATALN,TRKLN(DTABREG)    SET SEGMENT LNGTH TO TRACK SIZE 45050019
RPSDEV1  EQU   *                                                 20201  45070020
         MVI   SEGFLGS,MIDSEG           SET FLAGS TO MIDDLE SEGMENT     45100019
         B     AFTRFLG                  GO FINISH WRITE SETUP           45150019
WRITEREQ EQU   *                                                        45200019
         CLI   NULL(WORKR1),READCCW     WAS LAST CCW A READ DATA        45250019
         BNE   SUBSQWRT                 BR IF NO                        45300019
         CLC   CNTOFF(CNTLN,WORKR1),H7  WAS DATA LENGTH = 7             45350019
         BNE   FRSTWRT                  BR IF NO                        45400019
         TM    IOBSTAT1,IOBENQUE        IS RECORD ENQ'ED YET            45450002
         BZ    ENQUEUE                  GO ENQUEUE IF NO                45500019
KNP8EXIT L     READADD,DCBDFOR          GET BASE OF SELF-FORMAT MODULE  45550019
         B     ADDSRCH(READADD)         AND BRANCH TO IT                45600019
SUBSQWRT EQU   *                                                        45650019
         SH    WORKR1,H8                BACK UP ONE CCW                 45700019
         CLI   NULL(WORKR1),READCCW                                     45750019
         BE    FRSTWDK                  BR IF ENTRY FROM FIRST WRITE DK 45800019
         LH    DATALN,DECLNGTH          GET TOTAL DATA LENGTH FROM DECB 45850019
         SH    DATALN,SWABFINC          SUBTRACT LENGTH WRITTEN SO FAR  45900019
         BZ    WRTDONE                  BR IF ALL OF RECORD IS DONE     45950019
         AH    DATALN,H8                                                46000019
         BAL   RETREG,GETDVTB           GET A POINTER TO DEVICE TABLE   46050019
*                                       ENTRY                           46100019
         LR    RETREG,PARAM             GET IOB ADDR             20201  46102020
         SH    RETREG,H8                POINT TO PREFIX          20201  46104020
         SR    TOADR,TOADR              ZERO OUT A COUPLE OF     20201  46110020
*                                       REGS                     20201  46112020
         SR    RETREG,RETREG                                     20201  46114020
         IC    RETREG,OVERI(DTABREG)    GET OVERHD               20201  46116020
         TM    BYTEDEV(DTABREG),TBOVHD  IS TWO BYTE OVHD USED    20201  46118020
         BNO   MZ0001                   IF NOT, OVHD IS O.K.     20201  46120020
         LH    RETREG,OVERI(DTABREG)    ELSE GET TWO BYTES       20201  46122020
MZ0001   EQU   *                                                 20201  46124020
         IC    TOADR,OVERK(DTABREG)     GET KEY OVERHEAD         20201  46126020
         SR    RETREG,TOADR             REC OVHD - KEY OVHD      20201  46128020
         LH    TOADR,TRKLN(DTABREG)     GET TRK CAPACITY         20201  46130020
         SR    TOADR,RETREG             TRK CAP - REC OVHD + KEY 20201  46132020
*                                       OVHD                     20201  46134020
         CR    DATALN,TOADR             WILL DATA FIT ON TRK     20201  46136020
         BNH   WALOON                   YES  THEN GO TO IT       20201  46138020
         LR    DATALN,TOADR             USE TRK LEN AS SEG LEN   20201  46140020
         B     RPSDEV1                  DO YOUR THING            20201  46142020
*                                                                       46144002
         CH    DATALN,TRKLN(DTABREG)    COMPARE DATA LENGTH WITH        46150019
*                                       TRACK CAPACITY                  46200019
         BH    USETRKCP                 BR IF DATA LENGTH IS GREATER    46250019
*                                                                       46300019
*   THIS ROUTINE WILL CALCULATE THE REMAINING TRACK BALANCE AFTER       46350019
*   WRITING THE LAST SEGMENT.  THIS TRACK BALANCE WILL BE PLACED IN     46400019
*   THE UPDATED CAPACITY RECORD.                                        46450019
*                                                                       46500019
W2       EQU   9                        WORK REGISTER                   46550019
W3       EQU   14                       WORK REGISTER                   46600019
W4       EQU   15                       WORK REGISTER                   46650019
*                                                                       46660020
*                                                                       46670020
WALOON   EQU   *                                                 20201  46680020
         SR    W3,W3                    *  ZERO WORK REGISTERS          46700019
         SR    W4,W4                    *                               46750019
         LR    W2,DATALN                GET DATA LENGTH                 46800019
         IC    W4,OVERK(DTABREG)        GET VALUE TO BE SUBTRACTED FROM 46850019
*                                       OVERHEAD FOR NON-KEYED RECORDS  46900019
         IC    W3,OVERI(DTABREG)        GET OVERHEAD FOR NOT LAST RCD.  46950019
         TM    BYTEDEV(DTABREG),TBOVHD  DEV WITH 2 BYTE OVHD     20201  46960020
         BNO   MZ0002                   NO, OVHD O.K.            20201  46970020
         LH    W3,OVERI(DTABREG)           GET 2 BYTES           20201  46980020
MZ0002   EQU   *                                                 20201  46990020
         MH    W2,TOLER(DTABREG)        MULTIPLY DATA LENGTH BY         47000019
         SRA   W2,NINE                  DIVIDE RESULT BY 512            47050019
         SR    W3,W4                    SUBTRACT NO-KEY OVERHEAD FROM   47100019
*                                       TOTAL OVERHEAD                  47150019
         AR    W2,W3                    ADD OVERHEAD TO DATA LENGTH     47200019
         N     W2,ZEROH                 ZERO 2 HI ORDER BYTES           47250019
         LH    W3,TRKLN(DTABREG)        GET TRACK CAPACITY              47300019
         SR    W3,W2                    GET NEW TRACK BALANCE           47350019
         BM    ZEROTB                   SET TRK BAL TO 0 IF NEGATIVE    47400019
         STH   W3,IOBDBYTR              ELSE, STORE NEW TRK BALANCE     47450019
SETLAST  EQU   *                                                        47500019
         MVI   SEGFLGS,LASTSEGF         SET FLAGS FOR LAST SEGMENT      47550019
AFTRFLG  EQU   *                                                        47600019
         TM    DECTYPE+ONE,ADD+KEY      IS TYPE =DA OR DK               47650019
         BZ    DIWRT                    BR IF NEITHER (TYPE = DI)       47700019
         TM    DECTYPE+ONE,ADD                                          47750019
         BO    WRTADD2                  BR IF ADD                       47800019
         TM    DECTYPE,EXSCH            TEST FOR EXTENDED SEARCH        47850019
         BO    ESWCHNG                  BR IF YES                       47900019
         USING WRITEDK1,CPSTART                                         47950019
         CLI   WDK1NOP1,SETSC           RCD READY USED           20201  47957020
         BNE   NOTRRA9                  BRANCH IF NO             20201  47964020
         L     WORKR1,WDK1NOP1          GET SECTOR ADDR          20201  47971020
         MVI   NULL(WORKR1),NULL        SECTOR=0                 20201  47978020
NOTRRA9  EQU   *                                                 20201  47985020
*                                                                       47992020
         STH   DATALN,WDK1WD+CNTOFF     STORE DATA LENGTH IN WRITE CCW  48000019
FINWRT   EQU   *                                                        48050019
         BAL   RETFMOVE,PREMOVE         MOVE DATA AND FILL IN BDW,SDW   48100019
         AH    TOTLN,SWABFINC           UPDATE THE BUFFER               48150019
         STH   TOTLN,SWABFINC            INCREMENT FIELD                48200019
         B     MIDREAD                  GO UP TRACK ADDRESS             48250019
ZEROTB   EQU   *                                                        48300019
         XC    IOBDBYTR,IOBDBYTR        SET TRK BALANCE TO ZERO         48350019
         B     SETLAST                  GO SET SEGMENT FLAGS            48400019
ESWCHNG  EQU   *                                                        48450019
         USING WRITEES1,CPSTART                                         48500019
         STH   DATALN,WEWD+CNTOFF       STORE DATA LENGTH IN WRITE CCW  48550019
         B     FINWRT                   GO MOVE DATA TO SWA             48600019
DIWRT    EQU   *                                                        48650019
         USING WRITEDI1,CPSTART         SET UP CHANNEL PROGRAM DSECT    48700019
         SH    PARAM,H8                 IOB PREFIX               20201  48705020
         TM    NULL(PARAM),RCDRYM       RCD READY USED           20201  48710020
         BNO   NOTRRB1                  BRANCH IF NO             20201  48715020
         LA    WORKR1,WDI1NOP1+BYTE6    GET ZERO BYTE ADDR       20201  48720020
         ST    WORKR1,WDI1NOP1          PUT IN CCW               20201  48725020
         MVI   WDI1NOP1,SETSC           INSERT CMND              20201  48730020
NOTRRB1  EQU   *                                                 20201  48735020
         AH    PARAM,H8                 RESTORE IOB REG          20201  48740020
         CLI   WDI1WD,WDOP              IS CCW4 A WRITE DATA CCW        48750019
         BNE   WDIKEYS                  BR IF NO                        48800019
         STH   DATALN,WDI1WD+CNTOFF     PUT SEG LNGTH IN CCW            48850019
         B     FINWRT                   CONTINUE WRITE PROCESSING       48900019
WDIKEYS  EQU   *                                                        48950019
         LA    WORKR1,WDI1WDK           *                               49000019
         ST    WORKR1,WDI1WKD            * MAKE CCW4 TIC TO CCW5        49050019
         MVI   WDI1WKD,TICOP            *                               49100019
         STH   DATALN,WDI1WDK+CNTOFF    PUT SEG LNGTH IN CCW            49150019
         B     FINWRT                   CONTINUE WRITE PROCESSING       49200019
WRTADD2  EQU   *                                                        49250019
         USING WRITADD1,CPSTART         SET UP ADD DSECT                49300019
         CLI   WA1SIE2,TICOP            IS CCW6 STILL A TIC             49350019
         BE    CHNGWA                   BR IF YES                       49400019
FINWA    EQU   *                                                        49450019
         STH   DATALN,WA1WD+CNTOFF      PUT SEG LNGTH IN CCW            49500019
         STH   DATALN,CNTDL             PUT SEG LNGTH IN COUNT FIELD    49550019
         B     FINWRT                   FINISH WRITE PROCESSING         49600019
CHNGWA   EQU   *                                                        49650019
         MVC   WA1WC,WAWCKD1-WANOP2(CPSTART) MOVE WRITE COUNT CCW       49700019
         TM    WAKWK-WANOP2+FLAGS(CPSTART),DATACHAN  WERE KEYS WRITTEN  49750019
         BO    WAKEYS                   BR IF YES                       49800019
         LA    WORKR1,WANKWD-WANOP2(CPSTART) POINT TO WRITE DATA CCW    49850019
MVCWD    EQU   *                                                        49900019
         MVC   WA1WD,NULL(WORKR1)       MOVE IN WRITE DATA CCW          49950019
         MVI   WA1WD+FLAGS,COMCHAN      SET COMMAND CHAINING FLAG       50000019
         MVC   WA1SIE2(WA1WCR-WA1SIE2),WA1SIE  MOVE IN SEARCH ID EQUAL  50050019
*                                       AND TIC CCW'S                   50100019
         LA    PARAM2,WA1SIE2           *                               50150019
         ST    PARAM2,WA1TIC2            *  INSERT TIC ADDRESS          50200019
         MVI   WA1TIC2,TICOP            *                               50250019
         LA    PARAM2,IOBCC                                             50300002
         ST    PARAM2,WA1WCR            PUT ADDR OF IOBSEEK+3 IN THE    50350019
*                                       CCW WHICH UPDATES R0            50400019
         MVI   WA1WCR,WDOP              INSERT WRITE DATA OP CODE       50450019
         MVC   WA1WCR+FLAGS(EQU4),WCRF  INSERT FLAGS AND DATA LENGTH    50500019
         TM    DECTYPE,VERIFY           WRITE CHECK REQUESTED           50550019
         BO    WAWC                     BR IF YES                       50600019
ZEROKL   MVI   CNTKL,NULL               SET KEY LNGTH TO 0 IN COUNT FLD 50650019
         B     FINWA                    GO FINISH ADD PREPERATION       50700019
WAKEYS   EQU   *                                                        50750019
         LA    WORKR1,WAKWD-WANOP2(CPSTART)  POINT TO WRITE DATA CCW    50800019
         B     MVCWD                    GO MOVE IN WRITE DATA CCW       50850019
WAWC     EQU   *                                                        50900019
         MVC   WA1NOP2,WA1NOP1          MOVE IN NOP OR SET SECTOR=0     50950019
         MVC   WA1RR0,WANKRR0-WANKWD(WORKR1) MOVE IN READ R0 CCW        51000019
         OI    WA1RR0+FLAGS,COMCHAN     SET COMMAND CHAINING FLAG       51050019
         MVC   WA1RD,WANKRKD-WANKWD(WORKR1) MOVE IN READ-KEY-DATA CCW   51100019
         NI    WA1RD+FLAGS,COMCOFF      TURN OFF COMMAND CHAINING       51150019
         B     ZEROKL                   GO ZERO KEY LENGTH              51200019
FRSTWRT  EQU   *                                                        51250019
         TM    DECTYPE+ONE,KEY          IS TYPE = DK                    51300019
         BZ    FRSTWDI                  BR IF NO (TYPE = DI)            51350019
FRSTWDK  EQU   *                                                        51400019
         MVC   IOBCC(FIVE),DNRCFP2      MOVE CCHHR TO IOBSEEK+3         51450002
         TM    DECTYPE,EXSCH            TEST FOR EXTENDED SEARCH        51500019
         BO    FRSTWES                  BR IF YES                       51550019
         USING WRITEDK1,CPSTART         SET UP DSECT                    51600019
         CLI   WDK1NOP2,RDSC            RCD READY IMPLEMENTED    20201  51609020
         BNE   NOTRRB9                  BRANCH NO                20201  51618020
         MVC   WDK1NOP1,WDK1NOP2        MOVE RD SECTOR TO CCW1   20201  51627020
         MVI   WDK1NOP1,SETSC           CHANGE CMND              20201  51636020
         MVI   WDK1NOP1+BYTE4,COMCHAN   CMND CHAIN CCW           20201  51645020
         MVI   WDK1NOP2,SETSC           CHANGE RD SECTOR TO SET  20201  51654020
         B     FEATB9                   SKIP NEXT INST           20201  51663020
NOTRRB9  EQU   *                                                 20201  51672020
         MVI   WDK1NOP1,NOPCODE         CCW1 A NOP               20201  51681020
FEATB9   EQU   *                                                 20201  51690020
         LA    WORKR1,IOBCC             *                               51700002
         ST    WORKR1,WDK1SIE            * MAKE CCW2 A SEARCH-ID-EQUAL  51750019
         MVI   WDK1SIE,SIEOP            *                               51800019
         MVI   WDK1SIE+BYTE7,FIVE       SET LENGTH TO 5          20201  51820020
         LA    WORKR1,WDK1SIE           *                               51850019
         ST    WORKR1,WDK1TIC1           * MAKE CCW3 TIC TO CCW2        51900019
         MVI   WDK1TIC1,TICOP           *                               51950019
         LA    WORKR1,WDK1WD            POINT TO WRITE DATA CCW         52000019
         MVI   WDK1WD+FLAGS,NULL        TURN OFF COMMAND CHAINING       52010019
         B     MAKEAWD                  GO CONSTRUCT WRITE DATA CCW     52050019
FRSTWDI  EQU   *                                                        52100019
         USING WRITEDI1,CPSTART         SET UP DSECT                    52150019
         LA    WORKR1,WDI1WD            POINT TO WRITE DATA CCW         52200019
         CLI   WDI1WDK,WDOP             ARE KEYS BEING WRITTEN          52250019
         BNE   MAKEAWD                  BR IF NO                        52300019
         MVC   WDI1WKD(CCPADR),DECKYADR PUT KEY ADDR IN CCW             52350019
         MVI   WDI1WKD,WKDOP            MOVE IN WRITE-KEY-DATA OP CODE  52400019
         MVI   WDI1WKD+FLAGS,DATACHAN   SET DATA CHAINING FLAG          52450019
         MVC   WDI1WKD+CNTOFF+ONE(ONE),DCBKEYLE MOVE IN KEY LENGTH      52500019
         LA    WORKR1,WDI1WDK           POINT TO WRITE DATA CCW         52550019
         B     MAKEAWDL                 PUT LENGTH IN THE CCW           52600019
FRSTWES  EQU   *                                                        52650019
         MVC   IOBDNCRF+SEVN(ONE),IOBSEEK  SAVE THE EXTENT NUMBER       52660002
         USING WRITEES1,CPSTART         SET UP DSECT                    52700019
         OI    WE1NOP1+BYTE3,BYTE1      CHANGE ADDR IN CASE SET  20201  52710020
*                                       SECTOR                          52720020
         LA    WORKR1,WEWD              *                               52750019
         ST    WORKR1,WE1TIC2            * MAKE CCW4 A TIC TO CCW16     52800019
         MVI   WE1TIC2,TICOP            *                               52850019
MAKEAWD  EQU   *                                                        52900019
         LA    WREG9,SWABDW                                             52950019
         ST    WREG9,NULL(WORKR1)       PUT SWA ADDR IN WRITE CCW       53000019
         MVI   NULL(WORKR1),WDOP        PUT IN WRITE-DATA OP CODE       53050019
MAKEAWDL LH    DATALN,DECLNGTH          GET DATA LENGTH FROM USER       53100019
         CH    DATALN,SWABDW            IS THE LENGTH GREATER THAN THE  53150019
*                                       SIZE OF THE FIRST SEGMENT       53200019
         BH    USESEGLN                 BR IF YES                       53250019
         MVI   SEGFLGS,NULL             SET FLAGS TO 00                 53300019
ENDFW    EQU   *                                                        53350019
         STH   DATALN,CNTOFF(WORKR1)    PUT DATA LENGTH IN THE CCW      53400019
         STH   DATALN,SWABFINC          PUT LENGTH IN BUF INCR FIELD    53450019
         LA    FROMADR,EIGHT(RAPTR)     POINT TO DATA TO BE MOVED       53500019
         BAL   RETFMOVE,PREMOVE         MOVE DATA AND FILL IN BDW,SDW   53550019
         TM    DECTYPE,VERIFY                                           53600019
         BZ    EXCPAGN                  BR IF NOT WRITE CHECK           53650019
         MVI   FLAGS(WORKR1),COMCHAN    SET COMMAND CHAINING FOR VERIFY 53700019
         TM    DECTYPE+ONE,KEY          IS TYPE =DK                     53750019
         BZ    EXCPAGN                  BR IF NO                        53800019
         OI    CCWLN+FLAGS(WORKR1),COMCHAN SET COMMAND CHAINING IN THE  53850019
*                                          NEXT CCW                     53900019
         B     EXCPAGN                  WRITE THE SEGMENT               53950019
USESEGLN EQU   *                                                        54000019
         LH    DATALN,SWABDW            USE SEG LENGTH AS DATA LENGTH   54050019
         MVI   SEGFLGS,ONE              INDICATE FIRST SEGMENT          54100019
         B     ENDFW                    INSERT DATA LENGTH IN CCW       54150019
*                                                                       54200019
*                                                                       54250019
*  THIS ROUTINE WILL MOVE A RECORD WHOSE LENGTH MAY EXCEED 256 BYTES    54300019
*                                                                       54350019
*                                                                       54400019
AMOVE    MVC   NULL(NULL,TOADR),NULL(FROMADR) MOVE LESS THAN 256 BYTES  54450019
*                                                                       54500019
MOVE256  MVC   NULL(FFF,TOADR),NULL(FROMADR)  MOVE 256 BYTES            54550019
         LA    TOADR,FFF(TOADR)                                         54600019
         LA    FROMADR,FFF(FROMADR)                                     54650019
*                                                                       54700019
MOVE     SH    MVCLNGTH,H256            IF SIZE IS GREATER OR EQUAL TO  54750019
         BH    MOVE256                   256, GO MOVE 256 BYTES         54800019
         AH    MVCLNGTH,H255            ELSE,                           54850019
         EX    MVCLNGTH,AMOVE            MOVE REMAINING NBR OF BYTES    54900019
         BR    RETFMOVE                 RETURN TO CALLING SEQUENCE      54950019
*                                                                       55000019
*                                                                       55050019
PREMOVE  EQU   *                                                        55100019
         STH   DATALN,SWABDW            PUT LENGTH IN BLK. DESCP. WORD  55150019
         SH    DATALN,FOUR                                              55200019
         STH   DATALN,SEGLL             PUT LENGTH IN SEG. DESCP. WORD  55250019
         SH    DATALN,FOUR                                              55300019
         LR    TOTLN,DATALN             SAVE ACTUAL DATA LENGTH         55350019
         LA    TOADR,SEGDATA                                            55400019
         B     MOVE                     MOVE THE DATA TO THE SWA        55450019
*                                                                       55500019
DASIB    TM    IOBDTYPE,IOBRDEXC+IOBFDBCK   IF NOT READ EXCLUSIVE OR    55550002
         BZ    DASIC                    FEEDBACK OPTION, SKIP NEXT RTN. 55600019
         TM    IOBDTYP2,IOBTYPE+IOBADDTY  IS TYPE = DI                  55650002
         BC    ONE+MIXED,FDBKNDI        BRANCH IF NO                    55670019
         TM    IOBDTYP2,IOBRQUST        IS THIS A READ                  55690002
         BO    DASIC                    BRANCH IF YES                   55710019
FDBKNDI  EQU   *                                                        55730019
*                                                                       55750019
*  THE FOLLOWING ROUTINE LOCATES OR DEVELOPS ACTUAL ADDRESS FOR USE AS  55800019
*     FEEDBACK AND/OR READ EXCLUSIVE ARGUMENT                           55850019
*                                                                       55900019
         TM    IOBSTAT1,IOBADDVU        IS THIS A SELF FORMAT ADD       55950002
         BO    TSTEXIT                  YES-SKIP MOVING FEEDBACK        56000019
         MVC   IOBBB2(SIX),IOBDNCRF+ONE  MOVE ACTUAL                    56050002
         MVC   IOBM,IOBDNCRF+SEVN       RESTORE EXTENT NUMBER           56060002
*                                                                       56100019
*  IF THIS WAS A WRITE TO RELEASE AN EXCLUSIVE RECORD, GO TO THE READ   56150019
*   EXCLUSIVE MODULE WITHOUT TESTING FOR FEEDBACK TO BE RETURNED.       56200019
*                                                                       56250019
TSTEXIT  TM    IOBDTYP2,IOBRQUST        IS THIS A READ OR WRITE         56300002
         BO    TSTFDB                   READ, GO TEST FOR FEEDBACK      56350019
         TM    IOBDTYPE,IOBRDEXC        IF WRITE AND EXCLUSIVE BITS SET 56400002
         BO    RDXEXIT                  GO TO THE READX MODULE          56450019
TSTFDB   TM    DCBOPTCD,DCBOPTF         IF DCB DOES NOT SPECIFY         56500002
         BZ    ACTFDBK                  FEEDBACK                        56550002
         TM    IOBDTYPE,IOBACTAD        OR ADDRESSING IS ACTUAL         56600002
         BZ    TSTRR                    RETURN                          56650002
ACTFDBK  L     WORKR1,IOBECBPT          ACTUAL ADDRESS                  56700002
         L     WORKR1,DECRECPT-DECBDEF(WORKR1)    AS                    56750019
         MVC   NULL(EIGHT,WORKR1),IOBSEEK             FEEDBACK.         56800019
         B     DASIC                    GO TEST FOR DYNAMIC BUFFERING   56850019
         SPACE 2                                                        56852002
*********************************************************************** 56860002
*  THE FOLLOWING ROUTINE SETS UP FOR AND ISSUES SVC 53, THE EXCLUSIVE * 56870002
*  CONTROL MODULE.  THE FIRST EXIT IS TO GET EXCLUSIVE CONTROL OF     * 56880002
*  THE BLOCK JUST READ IN (FOR EITHER A READ EXCLUSIVE OR WRITE ADD   * 56882002
*  REQUEST.) THE SECOND EXIT IS TO RELEASE EXCLUSIVE CONTROL OF THE   * 56884002
*  BLOCK JUST WRITTEN OUT (WRITE RELEASE). IGC0005C EXPECTS THE IOB   * 56886002
*  TO BE IN REG 1 UPON ENTRY. THIS REGISTER WILL BE COMPLEMENTED.     * 56894002
*********************************************************************** 56896402
ENQUEUE  EQU   *                                                        56900019
         LCR   PARAM,PARAM               REG 1, IOB-COMPLEMENTED Y02072 56930002
*                                                                       56940002
         SVC   53                        GO ENQUEUE CURRENT REC  Y02072 56942002
*                                                                       56944002
         SVC   EXIT                      RETURN TO SUPERVISOR           57050002
RDXEXIT  EQU   *                         RELEASE CONTROL OF BLK  Y02072 57102002
         LR    IOBREG,PARAM              SAVE IOB REG ACROSS SVC Y02072 57102402
         LCR   PARAM,PARAM               REG 1, IOB-COMPLEMENTED Y02072 57104002
         DROP  PARAM                     DROP IOB BASE REG       Y02072 57114002
*                                                                       57140002
         SVC   53                        GO DEQUEUE CURRENT REC  Y02072 57142002
*                                                                       57144002
         LR    PARAM,IOBREG              RESTORE IOB REG         Y02072 57194002
         USING IOBSTDRD,PARAM            REESTABLISH ADDRESSING  Y02072 57196002
         B    DASIC                      NO, GO CHK DYN BUF      Y02072 57198402
*********************************************************************** 57210002
*                                                                       57260002
TSTRR    LA    INTRET,DASIC             SET UP TO TEST FOR DYN. BUFF.   57300019
*                                       ON RETURN FROM ADDR CONVERSION  57350019
*                                                                       57600019
         L     EPREG,DCBREAD            LOCATE THE                      57650003
         USING IGG019KJ,EPREG                                    A35339 57700021
         L     EPREG,RTAD               LOAD ADDR OF REL TRK MOD A35339 57710021
         DROP  EPREG                                             A35339 57720021
         BR    EPREG                    AND GO THERE (19KC+0)    Y02072 57750002
*                                                                       57800019
*                                                                       57850019
DASIC    EQU   *                                                        57900019
         TM    IOBDTYPE,IOBDYNBF        TEST FOR DYNAMIC BUFFERING      57950002
         BO    ASIDB                    BR IF YES                       58000019
         TM    DCBOPTCD,DCBOPTDB        SEE IF DYNAMIC BUFFERING IN DCB 58010002
         BZ    FREESWA                  BRANCH IF NO                    58020019
*                                                                       58050019
*   THE SEGMENT WORK AREA WILL NOW BE RETURNED TO THE POOL              58100019
*                                                                       58150019
         LR    IOBREG,PARAM             SAVE IOB ADDRESS                58154019
         SH    PARAM,FOUR               GET ADDRESS OF IOB-4            58158019
         L     PARAM,NULL(PARAM)        GET SWA ADDRESS IN IOB          58162019
         SH    PARAM,H8                 GET BCB ADDRESS                 58166019
         LH    PARAM2,SIX(PARAM)        GET BUFFER SIZE                 58170019
         AH    PARAM2,H8                ADD BUFFER CONTROL BLOCK SIZE   58174019
         FREEMAIN R,LV=(0),A=(1)        FREE BUFFER                     58178019
         LR    PARAM,IOBREG             RESTORE IOB REGISTER            58182019
         B     ASIDB                    CONTINUE                        58186019
FREESWA  EQU   *                                                        58190019
         LR    WORKR1,PARAM                                             58200019
         SH    WORKR1,FOUR              GET SWA ADDRESS                 58250019
         L     WORKR1,NULL(WORKR1)                                      58300019
         MVI   NULL(WORKR1),NULL        MAKE SWA AVAILABLE              58400019
*                                                                       58500019
ASIDB    EQU   *                                                        58550019
         TM    IOBDTYP2,IOBRQUST        IS THIS A READ REQUEST          58600002
         BO    MAKEAVL                  YES- MAKE IOB AVAILABLE  Y02072 58650002
         TM    IOBDTYPE,IOBDYNBF        NO-TEST FOR DYN. BUFFERING      58700002
         BZ    MAKEAVL                  NO- MAKE IOB AVAILABLE   Y02072 58750002
*                                                                       58800021
*                       FREE DYNAMIC BUFFER                             58810021
*                                                                       58820021
         LR    SAVE,PARAM               SAVE IOB POINTER         A30797 58830021
         L     PARAM2,IOBECBPT          ADDR OF DECB             A30797 58840021
         L     PARAM,IOBDCBPT           ADDR OF DCB              A30797 58850021
         FREEDBUF (0),D,(1)             FREE THE BUFFER          A30797 58860021
         LR    PARAM,SAVE               RESTORE IOB POINTER      A30797 58870021
         L     SAVE,IOBDCBPT            RESTORE DCB POINTER      A30797 58880021
         USING IHADCB,SAVE                                       A30797 58890021
*                                                                       58900019
*   THE FOLLOWING ROUTINE ZEROES THE AVAILABILITY BYTE IN THE IOB       58950002
*   AND POSTS THE ECB COMPLETE.                                         59000002
*                                                                       59100019
MAKEAVL  SR    PARAM2,PARAM2            CLEAR FOR EXCEPTION CODES.      59300019
         IC    PARAM2,IOBSTAT2          INSERT EXCEP. CODES FROM IOB    59350002
         SLL   PARAM2,HIPOS             POSITION THEM FOR POST.         59400019
         LR    RIOB,PARAM               SAVE IOB REG IN POST     Y02072 59450002
         DROP  PARAM,SWAPTR             DROP PREVIOUS BASES      Y02072 59500002
         USING  IOBSTDRD,RIOB           NEW BASE FOR IOB         Y02072 59550002
         L     FDNBASE,IOBDQPTR         LOAD SAVED SUPER RETURN  YM5969 59600002
         L     PARAM,IOBECBPT           SET DECB PARAMETER              59650019
*                                                                       59700019
         POST  (1),(0)                  POST.                           59750002
         TM    DCBMACRF,DCBMRCK         IS CHECK MACRO SPECIFIED Y02072 59820002
         BOR   FDNBASE                  YES, RETURN DIRECTLY     Y02072 59830002
         MVI   IOBDAYLI,NULL            ELSE, MAKE IOB AVAILABLE Y02072 59840002
         BR    FDNBASE                  RETURN TO SUPERVISOR     Y02072 59842002
         DROP  RIOB                     DROP TEMPORARY IOB BASE  Y02072 59844002
         USING IOBSTDRD,PARAM           REESTABLISH OLD IOB BASE Y02072 59846002
         USING SWA,SWAPTR               REESTABLISH SWA BASE     Y02072 59848002
*                                                                       59850019
*                                                                       59900019
*                                                                       61600019
*    THE FOLLOWING ROUTINE DETERMINES THE CAUSE OF ABNORMAL COMPLETION  61650019
*     BY ANALYZING THE SENSE BYTES AND CSW STORED IN THE IOB BY IOS.    61700002
*                                                                       61750019
*                                                                       61800019
ASIERR   TM    IOBSTAT2,ALLMSK          HAS ERROR ALREADY BEEN FLAGGED  61850002
         BM    ERREXIT                  IF YES , EXIT                   61900019
         TM    IOBCSW+3,UCMSK           TEST FOR UNIT CHECK             61950002
         BZ    TSTEXC                   BR. IF NOT                      62000019
         TM    IOBSENS0,DCMSK           TEST FOR DATA CHECK      YM5853 62050002
         BO    SETUDC                   BRANCH IF YES                   62100019
         TM    IOBSENS1,NRMSK           TEST NO RECORD FOUND     YM5853 62150002
         BZ    SETUE                    IF NOT SET, MUST BE UNRELATED   62200019
ASIERR2  OI    IOBSTAT2,NOREC           SET NO RECORD FOUND EX. CODE    62250002
         TM    IOBDTYP2,IOBADDTY        IS TYPE WRITE ADD               62300002
         BZ    DASIC                    NO, RETURN TO POOLING ROUTINE   62350019
         XI    IOBSTAT2,FLIPMSK         CHG NO-RCD-FOUND TO NO-SPACE    62400002
         B     KNP8EXIT                 GO TO SELF FORMAT MODULE        62450019
*                                                                       62500019
SETUDC   OI    IOBSTAT2,UNCOR           SET UNCORRECTABLE DATA CHECK    62550002
         B     ERREXIT                  GO TEST FOR EXIT                62600019
*                                                                       62650019
TSTEXC   EQU   *                                                        62700019
         TM    IOBCSW+4,INCLMSK         WAS THE RECORD WRONG LENGTH     62750002
         BO    SETINCL                  IF YES GO SET FLAG              62800019
SETUE    OI    IOBSTAT2,UNREL           SET UNRELATED ERROR FLAG        62850002
*                                                                       62900019
ERREXIT  TM    IOBDTYP2,IOBADDTY        IF THIS WAS A FORMAT WRITE,     62950002
         BO    KNP8EXIT                 GO SCAN UNSCHEDULED QUEUE       63000019
         TM    IOBSTAT2,INCLMSK+ENDOD   IF INCORRECT LENGTH OR EOD      63050002
         BZ    DASIC                    BYPASS FEEDBACK TEST            63100019
         B     ISITNA                   ELSE TEST FOR NEXT ADDRESS      63150019
*                                                                       63200019
SETINCL  EQU   *                                                        63250019
         TM    IOBDTYP2,IOBRQUST        WAS THIS A READ REQUEST         63300002
         BZ    SETLGNCK                 BR IF NOT                       63350019
         LH    WORKR1,DECLNGTH          GET SPECIFIED LENGTH            63400019
         SH    WORKR1,IOBCSW+5          SUBTRACT RESIDUAL COUNT         63450002
         CH    WORKR1,SWABDW            REMAINDER SHOULD EQUAL THE      63500019
*                                       LENGTH OF THE RECORD JUST READ  63550019
         BNE   SETLGNCK                 SET ERROR IF NOT                63600019
         NI    IOBFLAG1,CLRLNER1        CLEAR LENGTH ERROR              63650019
         NI    IOBCSW+4,CLRLNER2        CLEAR LENGTH ERROR              63700002
         NI    IOBDSTAT,CLRABN          TURN OFF ABNORMAL COMPLETION    63750019
         B     GOODCMPL                 CONTINUE PROCESSING             63800019
SETLGNCK EQU   *                                                        63850019
         OI    IOBSTAT2,LGNCK           SET INCORRECT LENGTH EXCEPTION  63900002
         B     ERREXIT                  CODE, GO DETERMINE EXIT         63950019
*                                                                       64000019
*                                                                       64050019
ADD1RTN  EQU   *                                                        64100019
*                                                                       64150019
*********************************************************************** 64200019
*                                                                       64250019
*              ADD1RTN ROUTINE IN IGG019KJ                              64300019
*                                                                       64350019
*********************************************************************** 64400019
*                                                                       64450019
*                                                                       64500019
*        REGISTER USAGE                                                 64550019
*                                                                       64600019
*                                                                       64650019
WORK3    EQU   3                        REG TO RETURN TO CALLING RTN    64700019
CVTREG   EQU   4                        CVT POINTER                     64750019
DTABREG  EQU   CVTREG                   DEVICE TABLE POINTER            64800019
IOBADR   EQU   PARAM                    IOB POINTER                     64850019
DEBREG2  EQU   7                        DEB POINTER                     64900019
WKREGA   EQU   9                        GENERAL PURPOSE REGISTER        64950019
WKREGB   EQU   10                       GENERAL PURPOSE REGISTER        65000019
WKREG3   EQU   8                        GENERAL PURPOSE REGISTER        65050019
RQEREG   EQU   15                       POINTER OF 12*                  65100019
UCBREG   EQU   RQEREG                   UCB POINTER                     65150019
TWLVSTAR EQU   7                                                        65200019
*                                                                       65250019
*                                                                       65300019
         USING DEBDEF,DEBREG2           DEB BASE REG                    65350019
         LA    RETREG,GOTDVTB                                           65400019
*                                                                       65450019
*                                                                       65500019
*        CALCULATE THE DEVICE TYPE ENTRY IN THE DEVICE TABLE            65550019
*                                                                       65600019
*                                                                       65650019
GETDVTB  LR    RQEREG,TWLVSTAR          GET 12* POINTER                 65700019
         USING RQE,RQEREG               ESTABLISH RQE BASE       Y02072 65710002
         L     UCBREG,RQEUCB            LOAD 3 BYTE UCB ADDR     Y02072 65720002
         DROP  RQEREG                                            Y02072 65730002
         L     CVTREG,CVTPTR(NULL,NULL)      LOAD CVT ADDRESS           65800019
         L     DTABREG,DTABOFF(NULL,CVTREG)  LOAD DEVICE TABLE ADDRESS  65850019
*                                            FROM CVT                   65900019
         IC    WKREGA,TYPCD(UCBREG)     LOAD DEVICE CODE FROM UCB       65950019
         N     WKREGA,LASTFOUR          CLEAR ALL BUT LOW ORDER 4 BITS  66000019
         IC    WKREGA,NULL(WKREGA,DTABREG)   GET DEVICE ENTRY OFFSET    66050019
         LA    DTABREG,NULL(WKREGA,DTABREG)  POINTER TO DESIRED ENTRY   66100019
*                                            TO THE DEVICE TABLE        66150019
*                                                                       66200019
*                                                                       66250019
         BR    RETREG                   RETURN IF JUST DEV TAB WANTED   66300019
GOTDVTB  EQU   *                                                        66350019
         MVC   IOBCSW-1(BYTE4),NULL(DTABREG)  MOVE TOTAL NO. OF CCHH TO 66400002
*                                            IOBCSW FIELD TEMPORARILY   66450019
         MVC   IOBCSW+3(BYTE4),IOBCC     NEXT MOVE IN THE CURRENT CCHH  66500002
         MVI   IOBR,NULL                 ZERO OUT R IN IOBSEEK FIELD    66600002
         L     DEBREG2,DCBDEBAD          GET DEB ADDRESS                66650002
         LA    IOBADR,NULL(NULL,IOBADR) CLEAR HI-ORDER BYTE TO ZERO     66950019
         LA    WKREGB,BYTE3(NULL,IOBADR)     POINT TO LAST H IN CCHH    67000019
         L     WKREG3,IOBCSW+3          LOAD CURRENT CCHH ADDRESS       67050002
         TM    BYTEDEV(DTABREG),CONTIG  ARE ADDRESS BYTES NON-CONTIG.   67100019
         BZ    DOWNONE                  BRANCH IF THEY ARE CONTIGUOUS   67150019
*                                                                       67200019
*                                                                       67250019
ADDONE   EQU   *                                                        67300019
*                                                                       67350019
*                                                                       67400019
         AH    WKREG3,ONEH              INCREMENT CURRENT CCHH BY ONE   67450019
         TM    BYTEDEV(DTABREG),CONTIG  IF THIS DEVICE HAS NON-CONTIG-  67500019
*                                       UOUS BYTES                      67550019
         BO    USEBYTE                  BRANCH IF IT HAS                67600019
         STH   WKREG3,IOBCSW-1-IOBSTDRD+BYTE4(NULL,WKREGB) ST NEW CC OR 67650002
*                                                      HH VALUE         67700019
         CLC   IOBCSW-1-IOBSTDRD+4(2,WKREGB),IOBCSW-1-IOBSTDRD(WKREGB)  67750002
*                                       IS VALUE OF NEW CC OR HH VALID  67800019
         BL    TESTEXT                  IF IT IS, GO TEST EXTENT LIMIT  67850019
         SRL   WKREG3,BIT16             SHIFT TO NEW CC VALUE           67900019
         MVC   IOBCSW-1-IOBSTDRD+BYTE4(BYTE2,WKREGB),ZERO  ZERO 2 BYTES 67950002
         BCTR  WKREGB,NULL              DECREMENT INDEX TO NEXT VALUE   68000019
*                                                                       68050019
*                                                                       68100019
DOWNONE  EQU   *                                                        68150019
*                                                                       68200019
*                                                                       68250019
         BCTR  WKREGB,NULL              DECREMENT INDEX TO NEXT VALUE   68300019
         CR    WKREGB,IOBADR            IF ALL OF CCHH BEEN INCREMENTED 68350019
         BNL   ADDONE                   IF NO, REPEAT LOOP              68400019
*                                                                       68450019
*                                                                       68500019
CALEXT   EQU   *                                                        68550019
*                                                                       68600019
*                                                                       68650019
*        CALCULATE THE NEXT EXTENT                                      68700019
*                                                                       68750019
*                                                                       68800019
         SR    WKREGA,WKREGA                                            68850019
         IC    WKREGA,IOBM              LOAD CURRENT EXTENT NUMBER      68900002
         LA    WKREGA,BYTE1(NULL,WKREGA)    ADJUST EXTENT NUMBER        68950019
         SR    WKREGB,WKREGB            CLEAR REGISTER                  69000019
         IC    WKREGB,DEBNMEXT          FETCH NO. OF TOTAL EXTENTS      69050019
         CR    WKREGA,WKREGB            CHECK IF IT IS THE LAST EXTENT  69100019
         BNE   NEXTEXT                  BRANCH IF NOT                   69150019
         SR    WKREGA,WKREGA            OTHERWISE, USE THE 1ST EXTENT   69200019
*                                                                       69250019
NEXTEXT  EQU   *                                                        69300019
*                                                                       69350019
*                                                                       69400019
         STC   WKREGA,IOBM              STORE NEW EXTENT NO. IN IOBSEEK 69450002
         SLL   WKREGA,FOURB             MULT EXTENT NO. BY 16 FOR       69500019
*                                       INDEXING                        69550019
         LA    WKREGB,DEBDVMOD(WKREGA)  FETCH ADDRESS OF EXTENT IN DEB  69600019
         MVC   IOBBB1(BYTE6),BYTE4(WKREGB) MOVE BBCCHH IN THE           69650002
*                                                 IOBSEEK FIELD         69700019
         BR    WORK3                    RETURN TO CALLING ROUTINE       69750019
*                                                                       69800019
*                                                                       69850019
USEBYTE  EQU   *                                                        69900019
*                                                                       69950019
*                                                                       70000019
         STC   WKREG3,IOBCSW-1-IOBSTDRD+BYTE4(WKREGB) STORE NEW BYTE    70050002
         SRL   WKREG3,BIT8              SHIFT TO NEXT VALUE             70100019
         CLC   IOBCSW-1-IOBSTDRD+4(1,WKREGB),IOBCSW-1-IOBSTDRD(WKREGB)  70150002
*                                       CHECK VALIDITY OF NEW BYTE      70200019
         BL    TESTEXT                  BRANCH IF NEW BYTE IS VALID     70250019
         MVI   IOBCSW-1-IOBSTDRD+BYTE4(WKREGB),NULL  OTHERWISE ZERO OUT 70300002
*                                                 THIS NEW BYTE         70350019
         B     DOWNONE                  GO CHECK IF ALL BYTES PROCESSED 70400019
*                                                                       70450019
*                                                                       70500019
TESTEXT  EQU   *                                                        70550019
*                                                                       70600019
         SR    WKREGA,WKREGA            CLEAR REG                 21905 70607021
         IC    WKREGA,IOBM              GET CURRENT EXTENT NO     21905 70614002
         SLL   WKREGA,FOURB             MULTIPLY BY 16 FOR INDEX  21905 70621021
         LA    WKREGA,DEBDVMOD(WKREGA)  LOAD ADDR OF CUR EXT      21905 70628021
*                                       IN DEB                          70635021
         USING DEBDVMOD,WKREGA                                    21905 70642021
*                                                                       70650019
         MVC   IOBCC(BYTE4),IOBCSW+3    MOVE NEW CCHH BACK TO           70700002
*                                                 IOBSEEK FIELD         70750019
         CLC   IOBCC(BYTE4),DEBENDCC    CHECK IF THE NEW CCHH IS        70800002
*                                       THE NEW CCHH IS OUTSIDE OF THE  70850019
*                                       CURRENT EXTENT                  70900019
         BH    CALEXT                   IF YES, GO TO CALCULATE THE     70950019
*                                       NEXT EXTENT                     71000019
         BR    WORK3                    OTHERWISE, RETURN TO CALLING    71050019
*                                       ROUTINE                         71100019
*                                                                       71150019
*                                                                       71200019
*********************************************************************** 71250019
*                 CONSTANTS AND EQUATES                                 71300002
*********************************************************************** 71310002
*                                                                       71350019
         DS    0F                                                       71400019
LASTFOUR DC    X'0000000F'              USED TO CLEAR ALL BUT LAST 4    71450019
*                                       BITS                            71500019
ZEROH    DS    0F                       * USED TO ZERO THE HI ORDER     71550019
         DC    X'0000FFFF'              * HALF WORD OF A REGISTER       71600019
ONEH     DC    H'1'                     GENERAL PURPOSE CONSTANT        71650019
H7       DC    H'7'                     GENERAL PURPOSE CONSTANT        71700019
H8       DC    H'8'                     CCW LENGTH                      71750019
SIXTEEN  DC    H'16'                    GENERAL PURPOSE CONSTANT        71800019
FOUR     DC    H'4'                     GENERAL PURPOSE CONSTANT        71850019
H255     DC    H'255'                   *                               71900019
H256     DC    H'256'                    * CONSTANTS USED BY MOVE RTN   71950019
FFF      EQU   256                      *                               72000019
Q255     EQU   255                      MAX TO CLEAR IOB        ZA01524 72010000
ZERO     DC    H'0'                     GENERAL PURPOSE CONSTANT  21905 72050021
WCRF     DC    X'20000007'              FLAGS AND DATA LENGTH USED TO   72200019
*                                       UPDATE R0                       72250019
UNAVALSW EQU   X'FF'              IOB UNAVAILABLE SWITCH                72292001
SHFT3BYT EQU   X'18'              USED FOR SLL 24 BITS(3 BYTES)         72294001
CLRSTAT  DC    X'0400'                  USED TO CLEAR IOBDSTAT EXCEPT   72300019
*                                       FOR DYNAMIC BUFFERING BIT       72350019
*                                                                       72400019
*   DEVICE TABLE OFFSETS                                                72450019
*                                                                       72500019
TRKLN    EQU   4                        TRACK LENGTH                    72550019
OVERI    EQU   6                        OVERHEAD NOT LAST RECORD        72600019
OVERK    EQU   8                        OVERHEAD KEYED RECORD           72650019
TOLER    EQU   10                       TOLERANCE FACTOR                72700019
DTABOFF  EQU   64                       DEVICE TABLE OFFSET IN CVT      72750019
*                                                                       72800019
NINE     EQU   9                        USED TO DIVIDE BY 512 (SHIFT)   72850019
EQU4     EQU   4                                                        72900019
SIX      EQU   6                                                        72950019
HIPOS    EQU   16                                                       73000019
TYPCD    EQU   19                       DEVICE TYPE OFFSET IN UCB       73050019
BYTE1    EQU   1                        ONE BYTE                        73100019
BYTE2    EQU   2                        TWO BYTES                       73150019
BYTE3    EQU   3                        THREE BYTES                     73200019
BYTE4    EQU   4                        FOUR BYTES                      73250019
FOURB    EQU   4                        USED AS MULTIPLIED BY 16        73300019
BYTEDEV  EQU   9                        FLAG BYTE OFFSET IN THE DEVICE  73350019
*                                       TABLE                           73400019
BYTE6    EQU   6                        SIX BYTES                       73450019
BYTE7    EQU   7                        SEVEN BYTES                     73500019
BIT8     EQU   8                        EIGHT BITS                      73550019
BIT16    EQU   16                       SIXTEEN BITS                    73600019
CONTIG   EQU   2                        FLAGS INDICATING BYTES OF CCHH  73700019
*                                       ARE NON-CONTIGUOUS              73750019
FIRSTSEG EQU   2                        FIRST SEGMENT IF BIT IS ZERO    73800019
LASTSEG  EQU   1                        LAST SEGMENT IF BIT IS ZERO     73850019
SIEOP    EQU   X'31'                    SEARCH-ID-EQUAL COMM. CODE      73900019
TICOP    EQU   8                        TIC  COMMAND CODE               73950019
CCHHLN   EQU   4                                                        74000019
R1       EQU   1                        BLOCK ID = 1                    74050019
SDW      EQU   4                        OFFSET OF SEG DESCRIPTOR WORD   74100019
NEXTADR  EQU   X'10'                    NEXT ADDRESS MASK               74150019
TYPERU   EQU   X'30'                    MASK FOR TYPE = RU TEST         74200019
TBOVHD   EQU   X'08'                    MASK FOR 2 BYTE OVHD     20201  74210020
*                                       DEVS                     20201  74220020
FIVE     EQU   5                        LENGTH OF CCHHR                 74250019
CCPADR   EQU   4                        LENGTH OF COMM. CODE AND ADDR.  74300019
WREG9    EQU   9                                                        74350019
ACTADR   EQU   2                                                        74400019
IECPRLTV EQU   15                       BALR REG TO GO TO IECPRLTV      74450019
CVTPTR   EQU   16                       CVT ADDRESS                     74500019
APRLTV   EQU   32                       DISPLACEMENT OF IECPRLTV ADDR.  74550019
*                                       IN THE CVT                      74600002
CONVID   EQU   0                        TTR0 AFTER CONVERSION           74650019
TTRLN    EQU   3                                                        74700019
ACTLN    EQU   8                        LENGTH OF MBBCCHHR              74750019
CNTOFF   EQU   6                        OFFSET OF COUNT FIELD IN CCW    74800019
ADDSRCH  EQU   8                        OFFSET OF SEARCH RTN IN ADD MOD 74850019
LASTSEGF EQU   2                        LAST SEGMENT FLAG               74900019
ADDDONE  EQU   12                                                       74950019
CNTLN    EQU   2                                                        75000019
WDOP     EQU   5                        WRITE DATA CHANNEL COMMAND CODE 75050019
MIDSEG   EQU   3                        MIDDLE SEGMENT IF BITS ARE ONES 75100019
THREE    EQU   3                                                        75150019
TEN      EQU   10                       CONTROL FIELD LENGTH IN SWA     75160019
CNTLBYTE EQU   18                       CONTROL FIELD AND BCB LNGTH     75170019
DATACHAN EQU   X'80'                    DATA CHAINING IF A ONE          75200019
FLAGS    EQU   4                        OFFSET OF FLAG FIELD IN CCW     75250019
COMCHAN  EQU   X'40'                    COMMAND CHAINING IF A ONE       75300019
COMCOFF  EQU   X'BF'                    MASK TO TURN OFF COMCHAN        75350019
SWL      EQU   X'20'                    SUPPRESS WRONG LENGTH IF A 1    75400019
WKDOP    EQU   X'0D'                    WRITE-KEY-DATA COMMAND CODE     75450019
EIGHT    EQU   8                                                        75500019
READCCW  EQU   X'06'                                                    75550019
EXIT     EQU   3                        SVC NUMBER TO RETURN TO SUPERV. 75600019
CLRLNER1 EQU   X'FB'                    CLEAR LENGTH ERROR IN IOBFLAG1  75950019
CLRLNER2 EQU   X'BF'                    CLEAR LENGTH ERROR IN IOBCSW    76000019
CLRABN   EQU   X'7F'                    TURN OFF ABNORMAL COMPLETION    76050019
FLIPMSK  EQU   X'A0'                    CHANGE NO RECORD FOUND TO       76200019
*                                             NO SPACE FOUND            76210019
ALLMSK   EQU   X'FF'                    TEST FOR EXCEPTION CODES        76400019
INCLMSK  EQU   X'40'                    INCORRECT LENGTH                76450019
NRMSK    EQU   X'08'                    NO RECORD FOUND                 76500019
UCMSK    EQU   X'02'                    UNIT CHECK                      76550019
DCMSK    EQU   X'08'                    DATA CHECK                      76600019
*              EXCEPTION CODES                                          76800019
NOREC    EQU   X'80'                                                    76850019
LGNCK    EQU   X'40'                                                    76900019
UNCOR    EQU   X'08'                                                    77050019
ENDOD    EQU   X'04'                                                    77100019
UNREL    EQU   X'02'                                                    77150019
*              OPTIONS AND TYPE                                         77200019
VERIFY   EQU   X'80'                                                    77250019
OFLOW    EQU   X'40'                                                    77300019
EXSCH    EQU   X'20'                                                    77350019
ACTAD    EQU   X'08'                                                    77450019
READX    EQU   X'02'                                                    77550019
RELRD    EQU   X'01'                                                    77600019
LGNOP    EQU   X'40'                                                    77700019
READ     EQU   X'08'                                                    77750019
KEY      EQU   X'04'                                                    77800019
ADD      EQU   X'02'                                                    77850019
MODID    DC    C'IGG019KJ'              MODULE ID                Y02072 77852002
FIX      DC    C'@ZA08000'              LATEST FIX IN MODULE   @ZA08000 77854003
DATE     DC    C'&SYSDATE'              DATE OF LATEST FIX     @ZA08000 77856003
PATCH    DC    XL((*-IGG019KJ)/20)'0'   5% PATCH AREA            Y02072 77860002
         EJECT                                                          77870002
*********************************************************************** 77880002
*                       DSECTS                                          77890002
*********************************************************************** 77892002
         DCBD  DSORG=DA                                                 78050019
         EJECT                                                          78060002
         IEFUCBOB  LIST=YES                                             78062002
         EJECT                                                          78064002
         IECDRQE                                                 Y02072 78070002
         EJECT                                                          78100019
*      DATA EVENT CONTROL BLOCK (DECB) DEFINITION                       78150019
         DS    0F                                                       78200019
DECBDEF  DSECT                                                          78250019
DECSDECB DS    CL4            STANDARD EVENT CONTROL BLOCK (ECB)        78300019
DECTYPE  DS    CL2            TYPE FIELD                                78350019
DECLNGTH DS    CL2            DATA LENGTH                               78400019
DECDCBAD DS    CL4            ADDRESS OF DCB                            78450019
DECAREA  DS    CL4            ADDRESS OF DATA AREA                      78500019
DECIOBPT DS    CL4            ADDRESS OF THE IOB                        78550019
DECKYADR DS    CL4            ADDRESS OF KEY                            78600019
DECRECPT DS    CL4            ADDRESS OF RECORD REFERENCE               78650019
DECNA    DS    CL4            ADDRESS OF NEXT ADDRESS FEEDBACK AREA     78700019
         EJECT                                                          78750019
*                                                                       78800019
*      I/O BLOCK (IOB) DEFINITION                                       78850019
*                                                                       78900019
         IEZIOB                                                  Y02072 78950002
*                                                                       79000002
*        IOB EQUATES                                                    79050002
*                                                                       79100002
IOBUPLIM EQU   IOBRSV35                 UPPER LIMIT COUNT        Y02072 79150002
DNRCFP2  EQU   IOBDNCRF+2                                               81050002
CNTKL    EQU   IOBDNCRF+5     OFFSET OF KEY LENGTH IN COUNT             81100002
CNTDL    EQU   IOBDNCRF+6     OFFSET OF DATA LENGTH IN COUNT            81150002
IOBDIOBX EQU   42             OFFSET FOR IOBDIOS                        81250019
IOBDPLAX EQU   44             OFFSET FOR IOBDPLAD                       81300019
BASESZ   EQU   IOBCHNPR-IOBSTDRD   IOB BASE SIZE WITHOUT PREFIX         81350002
         ORG   IOBSTAT2                                          Y02072 81360002
OTHERERR EQU   BIT6                                                     81365001
         EJECT                                                          81382002
         IKJTCB                                                         81390001
         EJECT                                                          81400019
*                                                                       81450019
*      DATA EXTENT BLOCK (DEB) DEFINITION                               81500019
*                                                                       81550019
DEBDEF   DSECT                                                          81600019
         DS    0F                                                       81650019
DEBNMSUB DS    0CL1      NO. OF SUBR. LOADED BY OPEN                    81700019
DEBTCBAD DS    CL4       ADDRESS OF THE TCB FOR THIS DEB                81750019
DEBAMLNG DS    0CL1      NO. OF BYTES IN THE ACCESS MTHD. DPDT. SECTION 81800019
DEBDEBAB DS    CL4       ADDRESS OF THE PREVIOUS DEB IN THE SAME TASK   81850019
DEBOFLGS DS    0CL1      DATA SET STATUS FLAGS                          81900019
DEBIRBAD DS    CL4       IRB ADDRESS                                    81950019
DEBOPATB DS    0CL1      TYPE OF FILES                                  82000019
DEBSYSPG DS    CL4       ADDRESS OF FIRST IOB IN THE SYSTEM PURGE CHAIN 82050019
DEBNMEXT DS    0CL1      NUMBER OF EXTENTS SPECIFIED IN THE DSCB        82100019
DEBUSRPG DS    CL4       ADDRESS OF FIRST IOB IN THE USER PURGE CHAIN   82150019
DEBPRIOR DS    0CL1      ALWAYS ZERO                                    82200019
DEBECBAD DS    CL4       ECB ADDRESS FOR SVC PURGE REQUEST              82250019
DEBPROTG DS    0CL1      RESERVED FOR FUTURE USE (FIRST 4 BITS)         82300019
DEBDEBID DS    0CL1      HEX 'F' TO IDENTIFY THIS BLOCK AS A DEB        82350019
DEBDCBAD DS    CL4       ADDRESS OF THE DCB ASSOCIATED WITH THIS DEB    82400019
DEBEXSCL DS    0CL1      EXTENT SCALE                                   82450019
DEBAPPAD DS    CL4       ADDRESS OF I/O APPENDAGE VECTOR TABLE          82500019
DEBDVMOD DS    0CL1      DEVICE MODIFIER FILE MASK                      82550019
DEBUCBAD DS    CL4       ADDR OF UCB ASSOCIATED WITH THIS DATA EXTENT   82600019
DEBBINUM DS    CL2       RESERVED FOR FUTURE USE-ALWAYS ZERO            82650019
DEBSTRCC DS    CL2       STARTING CYLINDER NUMBER FOR EXTENT            82700019
DEBSTRHH DS    CL2       STARTING HEAD NUMBER FOR EXTENT                82750019
DEBENDCC DS    CL2       ENDING CYLINDER NUMBER FOR EXTENT              82800019
DEBENDHH DS    CL2       ENDING HEAD NUMBER FOR EXTENT                  82850019
DEBNMTRK DS    CL2       NUMBER OF TRACKS ALLOCATED TO A GIVEN EXTENT   82900019
DEBSUBID EQU   0         SUBROUTINE ID'S                                82950019
         EJECT                                                          83000019
*   THE FOLLOWING DSECT SHOWS THE FORMAT OF THE SEGMENT WORK AREA       83050019
*                                                                       83100019
SWA      DSECT                          SEGMENT WORK AREA DSECT         83150019
SWANXTPT DS    F                        POINTER TO NEXT SWA             83200019
SWARAPT  DS    F                        POINTER TO THE RECORD AREA      83250019
SWABFINC DS    CL2                      BUFFER INCREMENT FIELD          83300019
SWABDW   DS    CL4                      BLOCK DESCRIPTOR WORD           83350019
SAVEID   EQU   SWABDW+5                 SAVE AREA FOR ID OF LAST SEGMNT 83400019
SWASDW   DS    0CL4                     SEGMENT DESCRIPTOR WORD         83450019
SEGLL    DS    H                        SEGMENT LENGTH (LL)             83500019
SEGFLGS  DS    C                        SEGMENTATION FLAGS              83550019
SEGUNUSD DS    C                        CURRENTLY UNUSED                83600019
SEGDATA  DS    C                        DATA PORTION OF RECORD          83650019
         EJECT                                                          83700019
*********************************************************************** 83750019
*                                                                     * 83800019
*                                                                     * 83850019
*                       CHANNEL PROGRAM DSECTS                        * 83900019
*                                                                     * 83950019
*                                                                     * 84000019
*********************************************************************** 84050019
         SPACE 10                                                       84100019
*                                                                       84150019
*   ORIGINAL CHANNEL PROGRAM TO WRITE (ADD) A NEW VRE RECORD            84200019
*                                                                       84250019
WRITEADD DSECT                                                          84300019
WANOP1   DS    D                  CCW1  NOP                             84350019
WASIE1   DS    D                  CCW2  SEARCH ID EQUAL (R0)            84400019
WATIC1   DS    D                  CCW3  TIC TO CCW2                     84450019
WARD     DS    D                  CCW4  READ DATA (R0)                  84500019
WANOP2   DS    D                  CCW5  NOP                             84550019
WASIE2   DS    D                  CCW6  SEARCH ID EQUAL (R0)            84600019
WATIC2   DS    D                  CCW7  TIC TO CCW6                     84650019
WAWDR0   DS    D                  CCW8  UPDATE CAPACITY RECORD          84700019
WASIE3   DS    D                  CCW9  SEARCH ID EQUAL                 84750019
WATIC3   DS    D                  CCW10 TIC TO CCW9                     84800019
WAWCKD1  DS    D                  CCW11 WRITE COUNT                     84850019
* THE NEXT CCW'S MAY BE PRESENT ONLY IF KEYS ARE TO BE WRITTEN.         84900019
WAKWK    DS    D                  CCW12 WRITE KEY                       84950019
WAKWD    DS    D                  CCW13 WRITE DATA                      85000019
WAKNOP1  DS    D               ** CCW14 NOP                             85050019
WAKNOP2  DS    D               ** CCW15 NOP                             85100019
WAKSIE   DS    D               ** CCW16 SEARCH ID EQUAL                 85150019
WAKTIC   DS    D               ** CCW17 TIC TO CCW16                    85200019
WAKRKD   DS    D               ** CCW18 READ-KEY-DATA TO DO WRITE CHECK 85250019
WAKRR0   DS    D               ** CCW19 WRITE CHECK R0                  85300019
* IF KEYS ARE NOT TO BE WRITTEN, THE FOLLOWING CCW'S ARE USED           85350019
WANK     EQU   WAKWK-WRITEADD                                           85400019
         ORG   WRITEADD+WANK      ORG BACK TO CCW12                     85450019
WANKWD   DS    D                  CCW12 WRITE DATA                      85500019
WANKNOP1 DS    D               ** CCW13 NOP                             85550019
WANKNOP2 DS    D               ** CCW14 NOP                             85600019
WANKSIE  DS    D               ** CCW15 SEARCH ID EQUAL                 85650019
WANKTIC  DS    D               ** CCW16 TIC TO CCW15                    85700019
WANKRKD  DS    D               ** CCW17 READ-KEY-DATA TO DO WRITE CHECK 85750019
WANKRR0  DS    D               ** CCW18 WRITE CHECK R0                  85800019
*                                                                       85850019
*                              ** THESE CCW'S ARE INCLUDED ONLY IF      85900019
*                                 WRITE CHECK IS REQUESTED.             85950019
         SPACE 3                                                        86000019
*                                                                       86050019
*   CHANNEL PROGRAM FOR WRITE ADD AFTER WRITING THE FIRST SEGMENT       86100019
*                                                                       86150019
WRITADD1 DSECT                                                          86200019
WA1NOP1  DS    D                  CCW1  NOP                             86250019
WA1SIE   DS    D                  CCW2  SEARCH ID EQUAL (R0)            86300019
WA1TIC   DS    D                  CCW3  TIC TO CCW2                     86350019
WA1WC    DS    D                  CCW4  WRITE COUNT                     86400019
WA1WD    DS    D                  CCW5  WRITE DATA                      86450019
WA1SIE2  DS    D                  CCW6  SEARCH ID EQUAL (R0)            86500019
WA1TIC2  DS    D                  CCW7  TIC TO CCW6                     86550019
WA1WCR   DS    D                  CCW8  UPDATE CAPACITY RECORD          86600019
WA1NOP2  DS    D               ** CCW9  NOP                             86650019
WA1RR0   DS    D               ** CCW10 READ R0 FOR WRITE CHECK         86700019
WA1RD    DS    D               ** CCW11 READ DATA FOR WRITE CHECK       86750019
*                                                                       86800019
*                              ** THESE CCW'S ARE INCLUDED WHEN WRITE   86850019
*                                 CHECK IS REQUESTED.                   86900019
         SPACE 6                                                        86950019
*                                                                       87000019
*   ORIGINAL CHANNEL PROGRAM TO READ BY BLOCK KEY USING EXTENDED SEARCH 87050019
*                                                                       87100019
READES0  DSECT                                                          87150019
RENOP1   DS    D                  CCW1  NOP                             87200019
RESIE    DS    D                  CCW2  SEARCH ID EQUAL (R0)            87250019
RETIC1   DS    D                  CCW3  TIC TO CCW2                     87300019
REMTSIE  DS    D                  CCW4  MULTI-TRACK SEARCH ID EQUAL     87350019
RETIC2   DS    D                  CCW5  TIC TO CCW7                     87400019
RENOP2   DS    D                  CCW6  NOP                             87450019
RESKE1   DS    D                  CCW7  SEARCH KEY EQUAL                87500019
RETIC3   DS    D                  CCW8  TIC TO CCW4                     87550019
RENOP3   DS    D                  CCW9  NOP                             87600019
RENOP4   DS    D                  CCW10 NOP                             87650019
RERHA    DS    D                  CCW11 READ HOME ADDRESS               87700019
RENOP5   DS    D                  CCW12 NOP                             87750019
RERDCNT  DS    D                  CCW13 READ COUNT                      87800019
RESKE2   DS    D                  CCW14 SEARCH KEY EQUAL                87850019
RETIC4   DS    D                  CCW15 TIC TO CCW13                    87900019
RERD     DS    D                  CCW16 READ DATA                       87950019
         SPACE 3                                                        88000019
*                                                                       88050019
*  CHANNEL PROGRAM TO READ BY BLOCK KEY USING EXTENDED SEARCH AFTER     88100019
*  READING THE FIRST SEGMENT.                                           88150019
*                                                                       88200019
READES1  DSECT                                                          88250019
RE1NOP1  DS    D                  CCW1  NOP                             88300019
RE1SIDE  DS    D                  CCW2  SEARCH ID EQUAL                 88350019
RE1TIC   DS    D                  CCW3  TIC TO CCW2                     88400019
RE1RD    DS    D                  CCW4  READ DATA                       88450019
RE1NOP2  DS    D                  CCW5  NOP. THIS CCW IS PRESENT ONLY   88500019
*                                       WHEN THE NEXT ADDRESS IS BEING  88550019
*                                       DETERMINED.                     88600019
         SPACE 6                                                        88650019
*                                                                       88700019
*   ORIGINAL CHANNEL PROGRAM TO WRITE BY BLOCK KEY USING EXTENDED       88750019
*   SEARCH.                                                             88800019
*                                                                       88850019
WRITEES0 DSECT                                                          88900019
WENOP1   DS    D                  CCW1  NOP                             88950019
WESIE1   DS    D                  CCW2  SEARCH ID EQUAL (R0)            89000019
WETIC1   DS    D                  CCW3  TIC TO CCW2                     89050019
WEMTSIE  DS    D                  CCW4  MULTI-TRACK SEARCH ID EQUAL     89100019
WETIC2   DS    D                  CCW5  TIC TO CCW7                     89150019
WENOP2   DS    D                  CCW6  NOP                             89200019
WESKE1   DS    D                  CCW7  SEARCH KEY EQUAL                89250019
WETIC3   DS    D                  CCW8  TIC TO CCW4                     89300019
WENOP3   DS    D                  CCW9  NOP                             89350019
WENOP3A  DS    D                  CCW10 NOP                             89400019
WERHA    DS    D                  CCW11 READ HOME ADDRESS               89450019
WENOP3B  DS    D                  CCW12 NOP                             89500019
WERC     DS    D                  CCW13 READ COUNT                      89550019
WESKE2   DS    D                  CCW14 SEARCH KEY EQUAL                89600019
WETIC4   DS    D                  CCW15 TIC TO CCW13                    89650019
WERD1    DS    D                  CCW16 READ DATA TO GET SEGMENT LENGTH 89700019
WENOP4   DS    D               ** CCW17 NOP                             89750019
WESIE2   DS    D               ** CCW18 SEARCH ID EQUAL                 89800019
WETIC5   DS    D               ** CCW19 TIC TO CCW18                    89850019
WERD2    DS    D               ** CCW20 READ DATA TO DO WRITE CHECK     89900019
*                                                                       89950019
*                              ** INDICATES THAT THE CCW'S ARE PRESENT  90000019
*                                 ONLY IF WRITE CHECK IS REQUESTED.     90050019
*                                                                       90100019
         SPACE 3                                                        90150019
*                                                                       90200019
*  CHANNEL PROGRAM AFTER DETERMINING THE LENGTH OF THE FIRST SEGMENT.   90250019
*                                                                       90300019
WRITEES1 DSECT                                                          90350019
WE1NOP1  DS    D                  CCW1  NOP                             90400019
WE1SIE1  DS    D                  CCW2  SEARCH ID EQUAL                 90450019
WE1TIC1  DS    D                  CCW3  TIC TO CCW2                     90500019
WE1TIC2  DS    D                  CCW4  TIC TO CCW16                    90550019
WENTUSED DS    11D                CCW5-CCW15 ARE BYPASSED BY THE TIC IN 90600019
*                                       CCW4.                           90650019
WEWD     DS    D                  CCW16 WRITE DATA                      90700019
WE1WC    DS    D                  CCW17-CCW20 SAME AS BEFORE            90750019
         SPACE 6                                                        90800019
*                                                                       90850019
*   ORIGINAL CHANNEL PROGRAM FOR READ TYPE = DI  WHEN THE NEXT ADDRESS  90900019
*   IS REQUESTED.                                                       90950019
*                                                                       91000019
READDI0N DSECT                                                          91050019
RDINANOP DS    D                  CCW1  NOP                             91100019
RDINASI1 DS    D                  CCW2  SEARCH ID EQUAL (R0)            91150019
RDINAT1  DS    D                  CCW3  TIC TO CCW2                     91200019
RDINARD  DS    D                  CCW4  READ DATA (R0)                  91250019
RDINASI2 DS    D                  CCW5  SEARCH ID EQUAL                 91300019
RDINAT2  DS    D                  CCW6  TIC TO CCW5                     91350019
* THE NEXT CCW IS INCLUDED ONLY IF KEYS ARE TO BE READ                  91400019
RDINARK  DS    D                  CCW7  READ KEY                        91450019
RDINADK  DS    D                  CCW8  READ DATA                       91500019
RDINANK  EQU   RDINARK-READDI0N                                         91550019
         ORG   READDI0N+RDINANK         POSITION FOR NO KEYS            91600019
* THE FOLLOWING CCW IS PRESENT IF KEYS ARE NOT TO BE READ               91650019
RDINAD   DS    D                  CCW7  READ DATA                       91700019
         SPACE 3                                                        91750019
*                                                                       91800019
*   CHANNEL PROGRAM FOR READ TYPE = DI  WHEN THE NEXT ADDRESS IS        91850019
*   REQUESTED AND AFTER READING THE FIRST SEGMENT.                      91900019
*                                                                       91950019
READDI1N DSECT                                                          92000019
RDINAN1  DS    D                  CCW1  NOP                             92050019
RDINASI5 DS    5D                 CCW2-CCW6 ARE THE SAME AS BEFORE      92100019
RDINARD1 DS    D                  CCW7  READ DATA                       92150019
         SPACE 6                                                        92200019
*                                                                       92250019
*   ORIGINAL CHANNEL PROGRAM FOR READ TYPE = DI AND THE NEXT ADDRESS    92300019
*   IS NOT REQUESTED.                                                   92350019
*                                                                       92400019
READDI0  DSECT                                                          92450019
RDISIE   DS    D                  CCW1  SEARCH ID EQUAL                 92500019
RDITIC   DS    D                  CCW2  TIC TO CCW1                     92550019
* THE FOLLOWING CCW IS INCLUDED ONLY IF KEYS ARE TO BE READ             92600019
RDIRK    DS    D                  CCW3  READ KEY                        92650019
RDIRD    DS    D                  CCW4  READ DATA                       92700019
RDINK    EQU   RDIRK-READDI0                                            92750019
         ORG   READDI0+RDINK            POSITION FOR NO KEYS            92800019
RDIRDNK  DS    D                  CCW3  READ DATA                       92850019
         SPACE 3                                                        92900019
*                                                                       92950019
*  CHANNEL PROGRAM FOR READ TYPE = DI AFTER READING THE FIRST SEGMENT   93000019
*  (NEXT ADDRESS IS NOT REQUESTED).                                     93050019
*                                                                       93100019
READDI1  DSECT                                                          93150019
RDISIE1  DS    D                  CCW1  SEARCH ID EQUAL                 93200019
RDITIC1  DS    D                  CCW2  TIC TO CCW1                     93250019
RDIRD1   DS    D                  CCW3  READ DATA                       93300019
         SPACE 6                                                        93350019
*                                                                       93400019
*   ORIGINAL CHANNEL PROGRAM FOR WRITE TYPE = DI                        93450019
*                                                                       93500019
WRITEDI0 DSECT                                                          93550019
WDINOP1  DS    D                  CCW1  NOP                             93600019
WDISIE   DS    D                  CCW2  SEARCH ID EQUAL                 93650019
WDITICL  DS    D                  CCW3  TIC TO CCW2                     93700019
WDIRDD   DS    D                  CCW4  READ DATA TO GET SEG LENGTH     93750019
* THE FOLLOWING 6 CCW'S MAY BE PRESENT ONLY IF KEYS ARE TO BE WRITTEN   93800019
WDIWDK   DS    D                  CCW5  WRITE DATA                      93850019
WDINOP2K DS    D               ** CCW6  NOP                             93900019
WDINOP3K DS    D               ** CCW7  NOP                             93950019
WDISIE2K DS    D               ** CCW8  SEARCH ID EQUAL                 94000019
WDITIC2K DS    D               ** CCW9  TIC TO CCW8                     94050019
WDIRKDK  DS    D               ** CCW10 READ KEY DATA TO DO WRITE CHECK 94100019
WDINK    EQU   WDIWDK-WRITEDI0                                          94150019
* THE FOLLOWING 5 CCW'S MAY BE PRESENT IF KEYS ARE NOT TO BE WRITTEN    94200019
         ORG   WRITEDI0+WDINK           ORG BACK TO WRITE DATA CCW      94250019
WDINOP2  DS    D               ** CCW5  NOP                             94300019
WDINOP3  DS    D               ** CCW6  NOP                             94350019
WDISIE2  DS    D               ** CCW7  SEARCH ID EQUAL                 94400019
WDITIC2  DS    D               ** CCW8  TIC TO CCW7                     94450019
WDIRKD   DS    D               ** CCW9  READ KEY DATA TO DO WRITE CHECK 94500019
*                                                                       94550019
*                              ** INDICATES THAT THESE CCW'S ARE        94600019
*                                 PRESENT ONLY FOR WRITE CHECK OPTION   94650019
*                                                                       94700019
         SPACE 3                                                        94750019
*                                                                       94800019
*   CHANNEL PROGRAM FOR WRITE TYPE = DI AFTER DETERMINING THE           94850019
*   LENGTH OF THE FIRST SEGMENT                                         94900019
*                                                                       94950019
WRITEDI1 DSECT                                                          95000019
WDI1NOP1 DS    D                  CCW1  NOP                             95050019
WDI1SIE  DS    D                  CCW2  SEARCH ID EQUAL                 95100019
WDI1TIC1 DS    D                  CCW3  TIC TO CCW2                     95150019
* THE FOLLOWING 7 CCW'S MAY BE PRESENT IF KEYS ARE TO BE WRITTEN        95200019
WDI1WKD  DS    D                  CCW4  WRITE KEY                       95250019
WDI1WDK  DS    D                  CCW5  WRITE DATA                      95300019
WDI1WCK  DS    5D                 CCW6-CCW10 ARE THE SAME AS BEFORE FOR 95350019
*                                       WRITE CHECK.                    95400019
WDINK1   EQU   WDI1WKD-WRITEDI1                                         95450019
* THE FOLLOWING 6 CCW'S MAY BE PRESENT IF KEYS ARE NOT TO BE WRITTEN    95500019
         ORG   WRITEDI1+WDINK1    ORG BACK TO CCW4                      95550019
WDI1WD   DS    D                  CCW4  WRITE DATA                      95600019
WDI1WC   DS    5D                 CCW5-CCW9 ARE THE SAME AS BEFORE FOR  95650019
*                                       WRITE CHECK                     95700019
         SPACE 6                                                        95750019
*                                                                       95800019
*   ORIGINAL CHANNEL PROGRAM FOR READ TYPE = DK                         95850019
*                                                                       95900019
READDK0  DSECT                                                          95950019
RDKRDCNT DS    D                  CCW1  READ COUNT INTO IOBDNRCF+2      96000019
RDKSKE   DS    D                  CCW2  SEARCH KEY EQUAL                96050019
RDKTIC1  DS    D                  CCW3  TIC TO CCW1                     96100019
RDKRDD   DS    D                  CCW4  READ DATA                       96150019
RDKNOP1  DS    D               ** CCW5  NOP                             96200019
RDKSIE   DS    D               ** CCW6  SEARCH ID EQUAL (R0)            96250019
RDKTIC2  DS    D               ** CCW7  TIC TO CCW6                     96300019
RDKRDD2  DS    D               ** CCW8  READ DATA (R0)                  96350019
RDKNOP2  DS    D               ** CCW9  NOP                             96400019
*                                                                       96450019
*                              ** THESE CCW'S ARE INCLUDED ONLY IF THE  96500019
*                                 NEXT ADDRESS IS REQUESTED.            96550019
         SPACE 3                                                        96650019
*                                                                       96700019
*   CHANNEL PROGRAM FOR READ TYPE = DK AFTER BEING MODIFIED             96750019
*                                                                       96800019
READDK1  DSECT                                                          96850019
RDK1NOP1 DS    D                  CCW1  NOP                             96900019
RDK1SIE1 DS    D                  CCW2  SEARCH ID EQUAL (ID=1)          96950019
RDK1TIC1 DS    D                  CCW3  TIC TO CCW2                     97000019
RDK1RDD1 DS    D                  CCW4  READ DATA                       97050019
RDK1NOP2 DS    D               ** CCW5  NOP                             97100019
RDK1SIE2 DS    D               ** CCW6  SEARCH ID EQUAL (R0)            97150019
RDK1TIC2 DS    D               ** CCW7  TIC TO CCW6                     97200019
RDK1RDD2 DS    D               ** CCW8  READ DATA (R0)                  97250019
RDK1NOP3 DS    D               ** CCW9  NOP                             97300019
*                                                                       97350019
*                              ** THESE CCW'S ARE INCLUDED ONLY IF THE  97400019
*                                 NEXT ADDRESS IS REQUESTED.            97450019
*                                                                       97500019
         SPACE 6                                                        97550019
*                                                                       97600019
*   ORIGINAL CHANNEL PROGRAM FOR WRITE TYPE = DK                        97650019
*                                                                       97700019
WRITEDK0 DSECT                                                          97750019
WDKRDCNT DS    D                  CCW1  READ COUNT INTO IOBDNRCF+2      97800019
WDKSKE   DS    D                  CCW2  SEARCH KEY EQUAL                97850019
WDKTIC1  DS    D                  CCW3  TIC TO CCW1                     97900019
WDKRDD   DS    D                  CCW4  READ DATA TO GET SEG LENGTH     97950019
WDKNOP1  DS    D                  CCW5  NOP                             98000019
WDKWCSIE DS    D               ** CCW6  SEARCH ID EQUAL (WRITE CHECK)   98050019
WDKWCTIC DS    D               ** CCW7  TIC TO CCW6     (WRITE CHECK)   98100019
WDKWCRDD DS    D               ** CCW8  READ DATA TO DO WRITE CHECK     98150019
*                                                                       98200019
*                              ** INDICATES THAT THESE CCW'S ARE        98250019
*                                 PRESENT ONLY FOR WRITE CHECK OPTION.  98300019
*                                                                       98350019
         SPACE 3                                                        98400019
*                                                                       98450019
*   CHANNEL PROGRAM FOR  WRITE TYPE = DK  AFTER BEING MODIFIED          98500019
*                                                                       98550019
WRITEDK1 DSECT                                                          98600019
WDK1NOP1 DS    D                  CCW1  NOP                             98650019
WDK1SIE  DS    D                  CCW2  SEARCH ID EQUAL                 98700019
WDK1TIC1 DS    D                  CCW3  TIC TO CCW2                     98750019
WDK1WD   DS    D                  CCW4  WRITE DATA                      98800019
WDK1NOP2 DS    D               ** CCW5  NOP                             98850019
WDK1WCSI DS    D               ** CCW6  SEARCH ID EQUAL (WRITE CHECK)   98900019
WDK1WCT  DS    D               ** CCW7  TIC TO CCW6     (WRITE CHECK)   98950019
WDK1WCRD DS    D               ** CCW8  READ DATA TO DO WRITE CHECK     99000019
*                                                                       99050019
*                              ** INDICATES THAT THESE CCW'S ARE        99100019
*                                 PRESENT ONLY FOR WRITE CHECK OPTION.  99150019
*                                                                       99200019
         END                                                            99250019
