 TITLE 'IGG019MC - BTAM PCI APPENDAGE'                                  00200013
*********************************************************************** 00250002
*                                                                     * 00300002
* MODULE NAME: IGG019MC   (OS/VS)                                     * 00350002
*                                                                     * 00400002
* DESCRIPTIVE NAME: BTAM PCI APPENDAGE                                * 00450002
*                                                                     * 00500002
* COPYRIGHT: NONE                                                     * 00550002
*                                                                     * 00600002
* STATUS: RELEASE 2                                                   * 01200002
*                                                                     * 01400002
* FUNCTION:         THE PROGRAM CONTROLLED INTERRUPT IS USED TO       * 01800002
*                   PROVIDE DYNAMIC BUFFERING (*) BY ASSIGNING BUFFER * 02000002
*                   N+1  DURING THE TIME BUFFER N IS BEING READ INTO  * 02200002
*                   OR WRITTEN FROM.  ONLY THE CURRENT BUFFER AND 1   * 02400002
*                   SUCCEEDING BUFFER CAN BE MADE AVAILABLE AT ANY    * 02600002
*                   ONE TIME.                                         * 02800002
*                                                                     * 03000002
*                   *  SEE NOTE BELOW FOR BRIEF DESCRIPTION OF        * 03200002
*                      DYNAMIC BUFFERING.                             * 03400002
*                                                                     * 03600002
* ENTRY POINT:      ENTRY IS 1ST EXECUTIVE INSTRUCTION                * 04000002
*                                                                     * 04200002
* INPUT:            REGISTER 2 CONTAINS A POINTER TO THE PERTINENT    * 04600002
*                              IOB                                    * 04650002
*                   REGISTER 15 CONTAINS THE BASE ADDRESS             * 04800002
*                                                                     * 05000002
* OUTPUT:           NONE                                              * 05400002
*                                                                     * 05600002
* EXTERNAL ROUTINE: THE REQUEST-RELEASE BUFFER ROUTINE IS USED TO     * 06000002
*                   GET OR RELEASE BFRS FROM OR TO THE BUFFER POOL.   * 06200002
*                                                                     * 06400002
* EXIT:             RETURN IS TO IOS AFTER ASSIGNING A BUFFER OR      * 06800002
*                   QUEUING A REQUEST FOR ONE                         * 07000002
*                                                                     * 07200002
* IN LINE ROUTINES: THE PCI OCCURS FOR ALL READ OR WRITE CHANNEL      * 07600002
*                   COMMANDS SET UP FOR DYNAMIC BUFFERING.            * 07800002
*                   READ                                              * 08000002
*                        READ OR READ-SKIP                            * 08200002
*                        READ                                         * 08400002
*                           AN ATTEMPT IS MADE TO ASSIGN A BUFFER     * 08600002
*                           TO THE NEXT READ CCW WHICH IS BLOCKED BY  * 08800002
*                           A READ-SKIP CCW UNTIL THE BFR IS ASSIGNED * 09000002
*                           IF A BUFFER IS ASSIGNED THE READ-SKIP IS  * 09200002
*                           ALTERED TO A TIC TO THE BLOCKED READ CCW. * 09400002
*                           AND THIS READ IS IN TURN BLOCKED BY ALTER * 09600002
*                           ING THE FOLLOWING TIC CCW TO READ-SKIP    * 09800002
*                           IF NO BUFFER IS AVAILABLE TO BE ASSIGNED  * 10000002
*                           A REQUEST IS ADDED TO THE REQUEST QUEUE.  * 10200002
*                           POINTERS TO THE 1ST AND LAST ENTRIES IN   * 10400002
*                           THIS QUEUE ARE STORED IN THE DATA EXTENT  * 10600002
*                           BLOCK ASSOCIATED WITH THIS IOB.  THE      * 10800002
*                           CHAINING POINTERS ARE STORED IN THE READ  * 11000002
*                           CCW'S IN PLACE OF THE BUFFER ADDRESSES.   * 11200002
*                                                                     * 11400002
*                        READ-SKIP                                    * 11600002
*                           A BUFFER NEVER DID GET ASSIGNED.  THE     * 11800002
*                           PCI ON THE PREVIOUS READ WAS EITHER LOST  * 12000002
*                           OR HANDLED.  IF IT WAS LOST THE TWO       * 12200002
*                           PREVIOUS READ BUFFERS MUST BE POSTED,     * 12400002
*                           THE MOST RECENT WITH AN ERROR INDICATION, * 12600002
*                           AND ANOTHER READ-SKIP COMMAND OVERLAYED   * 12800002
*                           IN THE NEXT CCW TO PERMIT COMPLETION OF   * 13000002
*                           THE READ.  IF THE PCI ON THE PREVIOUS     * 13200002
*                           READ WERE HANDLED THE BUFFER REQUEST WAS  * 13400002
*                           QUEUED.  THIS REQUEST MUST BE PURGED      * 13600002
*                           FROM THE QUEUE AND THE PREVIOUS READ      * 13800002
*                           BUFFER POSTED.  ANOTHER READ-SKIP COMMAND * 14000002
*                           PLACED IN THE NEXT CCW TO ALLOW COMPLE-   * 14200002
*                           TION OF THE READ.                         * 14400002
*                           IF A BUFFER WERE ASSIGNED PRIOR TO HAND-  * 14600002
*                           LING THIS INTERRUPT, BUT AFTER FETCHING   * 14800002
*                           THE CCW COMMAND CODE IN STORAGE WILL      * 15000002
*                           BE A TIC.  IN THIS CASE THE BFR WILL BE   * 15200002
*                           RELEASED AND THE READ BFR WILL BE POSTED. * 15400002
*                           IN EITHER CASE DATA WILL HAVE BEEN LOST   * 15600002
*                           AND THE POSTING WILL SO INDICATE.         * 15800002
*                   WRITE                                             * 16000002
*                        THE BUFFER CHAIN ADDRESS IS TESTED FOR 0 TO  * 16200002
*                        SEE IF THIS IS THE LAST BUFFER IN THE WRITE  * 16400002
*                        CHAIN.  IF IT IS THE BUFFER IS POSTED.  IF   * 16600002
*                        NOT THE NEXT BUFFER ADDRESS IS PLACED IN THE * 16800002
*                        NEXT WRITE CCW, THE FOLLOWING TIC IS MADE    * 17000002
*                        VALID AND THE TIC TO THE CURRENT WRITE CCW   * 17200002
*                        IS INVALIDATED BY ORRING A 1 TO ITS TRANSFER * 17400002
*                        ADDRESS.  SHOULD THE INVALID TIC ADDRESS BE  * 17600002
*                        FETCHED AN ABNORMAL END WOULD OCCUR.         * 17800002
*                                                                     * 18000002
*                   CCW 1 ----------------------------------------    * 18200002
*                        IRD/WR CMD*   B U F F E R   A D D R E S S    * 18400002
*                        I---------------------------------------I    * 18600002
*                        I FLAGS   *T/P OP CD*    C O U N T      I    * 18800002
*                        -----------------------------------------    * 19000002
*                                                                     * 19200002
*                   CCW 2-----------------------------------------    * 19400002
*                        IR-S / TIC* A D D R E S S  OF  C C W  3 I    * 19600002
*                        I---------------------------------------I    * 19800002
*                        I FLAGS   *T/P OP CD*    C O U N T      I    * 20000002
*                        -----------------------------------------    * 20200002
*                                                                     * 20400002
*                   CCW 3-----------------------------------------    * 20600002
*                        IRD/WR CMD*  B U F F E R   A D D R E S S     * 20800002
*                        I---------------------------------------I    * 21000002
*                        I FLAGS   *T/P OP CD*    C O U N T      I    * 21200002
*                        -----------------------------------------    * 21400002
*                                                                     * 21600002
*                   CCW 4-----------------------------------------    * 21800002
*                        IR-S / TIC* A D D R E S S  OF  C C W 1  I    * 22000002
*                        I---------------------------------------I    * 22200002
*                        I FLAGS   *T/P OP CD*    C O U N T      I    * 22400002
*                        -----------------------------------------    * 22600002
*                                                                     * 22800002
* ATTRIBUTES:       THIS ROUTINE IS RUN IN SUPERVISOR MODE, DISABLED  * 23200002
*                                                                     * 23400002
* NOTE:             'DYNAMIC BUFFERING' IS DEFINED AS THE ABILITY TO  * 23800002
*                   PROVIDE I/O BUFFERS JUST PRECEDING AN IMPENDING   * 24000002
*                   I/O OPERATION TO PERMIT MORE FLEXIBLE USE OF      * 24200002
*                   LIMITED STORAGE SPACE.                            * 24400002
*                                                                     * 24600002
* CHANGE ACTIVITY AS FOLLOWS:                                         * 24650002
*            APARS                          PTMS                      * 24700002
*        YA02154  (10/17/73)            YM4064  (10/3/73)             * 24750002
*        YA02155  (10/17/73)            YM4072  (10/15/73)            * 24752002
*        YA02156  (10/17/73)            YM5663  (12/11/73) PROLOG     * 24754002
*        ZA02312  (11/18/74)            YM5662  (12/11/73) DELETE     * 24756003
*        ZA02335  (11/18/74)                                          * 24758003
*        AZ04150  (04/29/75)                                          * 24758500
*        AZ04157  (07/15/75)                                          * 24759000
*        AZ04188  (10/08/75)                                          * 24759500
*        AZ11431  (06/10/76)                                          * 24759700
*        AZ13192  (09/15/76)                                          * 24760000
*********************************************************************** 24770002
         EJECT                                                          24800013
IGG019MC CSECT                                                          24850002
         SPACE 5                                                        24852002
DEVTYPE  EQU   16                                                  000C 24860015
DCBBSENQ EQU   68                                                A27624 24930019
ZEROREG  EQU   0                        REGISTER ZERO                   25000013
PARREG   EQU   1                        PARAMETER REGISTER              25200013
RQEREG   EQU   1                        RQE ADDRESS              Y02947 25250002
IOBREG   EQU   2                        PTR TO INPUT OUTPUT BLOCK       25400013
WKRG2    EQU   2                   WORK REG FOR ALTERCCW RTN     Y02947 25450002
DEBREG   EQU   3                        PTR TO DATA EXTENT BLOCK        25600013
WKRG3    EQU   3                   WORK REG FOR ALTERCCW RTN     Y02947 25650002
DCBREG   EQU   4                        PTR TO DATA CONTROL BLOCK       25800013
WKRG4    EQU   4                   WORK REG FOR ALTERCCW RTN     Y02947 25850002
TCBREG   EQU   5                   PTR TO TASK CONTROL BLOCK     Y02947 26050002
QREG     EQU   6                        PTR TO REQ-REL BFR & REQ QUEUE  26200013
BUFREG   EQU   7                        PTR TO BUFFER                   26400013
BUF2REG  EQU   8                        PTR TO NEXT BUFFER              26600013
CCWREG   EQU   9                        PTR TO CHANNEL COMMAND WORD     26800013
CCW2REG  EQU   10                       PTR TO NEXT CH COMMAND WORD     27000013
WORKREG  EQU   11                       WORK REGISTER                   27200013
UCBREG   EQU   11                       UCB ADDRESS             YA02155 27250002
BASEREG  EQU   12                       BASE REGISTER                   27400013
SAVEREG  EQU   13                       PTR TO SAVE AREA                27600013
RETREG   EQU   14                       RETURN ADDRESS REGISTER         27800013
BRREG    EQU   15                       PTR TO REQUESTED BFR OR ER IND  28000013
RCCWREG  EQU   15                  ADDRESS OF REAL CCW           Y02947 28050002
         EJECT                                                   Y02947 28150002
DEBNMEXT EQU   16                                                       28200013
DEBUCBAD EQU   32                                                       28400013
SIXTEEN  EQU   16                                                       28800013
DCBXMODE EQU   X'38'                                            YA02154 28850002
DCBBSETX EQU   X'3F'                                            YA02154 28900002
DCBBSETB EQU   X'46'                                            YA02154 28950002
INTBLCHK EQU   X'40'                                            YA02154 28960002
DCBBUFCB EQU   20                       OFFSET TO BCB ADDRESS           29000013
IOBECBPT EQU   4                        OFFSET TO ECB POINTER           29200013
DEBTCBAD EQU   0                        OFFSET TO TCB ADDRESS           29400013
DECTYPE  EQU   4                                                   000A 29600013
DECLNGTH EQU   6                        OFFSET TO LAST BFR LENGTH       29800013
DECAREA  EQU   12                                                  000A 30000013
DECPOLPT EQU   36                                                  000A 30200013
DECWLNG  EQU   42                                                  000B 30300014
DCBBUFCT EQU   34                                                  7752 30330017
DECBUFCT EQU   8                                                   7752 30360017
INVTIC   EQU   X'01'               INVALID TIC DATA ADDR         Y02947 30370002
IDAWFLAG EQU   X'04'               CCW IDAW FLAG                 Y02947 30380002
DCBEIOBX EQU   X'24'               DISP IN DCB OF IOB SIZE       Y02947 30390002
DATACHN  EQU   X'80'               CCW DATA CHAINING FLAG        Y02947 30392002
PCIOFF   EQU   X'BF'               TURN OFF 1ST TIME PCI         Y02947 30394002
IDAWOFF  EQU   X'FB'               TURN OFF CCW IDAW FLAG        Y02947 30396002
TWOBITS  EQU   2                                                 Y02947 30398002
TWO      EQU   2                                                 Y02947 30398402
IOBUCBX  EQU   32                  IOB DISP TO UCB INDEX         Y02947 30399202
IOBCPA   EQU   64                  IOB DISP TO CHANNEL PROGRAM   Y02947 30399602
*                                  AREA                          Y02947 30399702
LEN8     EQU   8                   LENGTH OF 8                   Y02947 30399802
LEN16    EQU   16                  LENGTH OF 16                  Y02947 30399902
AUTOPOLL EQU   X'80'                                               000A 30400013
FIRSTPCI EQU   X'40'                    FIRST TIME PCI FLAG        3712 30440016
RDCMND   EQU   X'02'                    READ COMMAND               3712 30480016
RSTICOP  EQU   X'12'                    READ SKIP/TIC TP OP CODE   3712 30520016
RDRESP   EQU   X'25'               READ RESP TO TXT OP CODE LD @ZA02312 30530003
TICCMND  EQU   X'08'                    TIC COMMAND                3712 30560016
SKIP     EQU   X'10'                    SKIP FLAG                       30600013
PC       EQU   X'20'                   PROGRAM CHECK BIT                30800013
RRTXT    EQU   X'20'               READ RESO TO TEXT CODE   LD @ZA02335 30802003
HEX21    EQU   X'21'                                        LD @ZA02335 30804003
HEXA1    EQU   X'A1'                                        LD @ZA02335 30806003
FORTY    EQU   X'40'               CCW COMMAND CHAINING FLAG    YA02156 30810002
BF       EQU   X'BF'               MASK TO RESET CCW COMMAND    YA02156 30820002
*                                  CHAINING FLAG                YA02156 30830002
DISP0    EQU   0                   DISPLACEMENT OF 0             Y02947 30850002
DISP1    EQU   1                   DISPLACEMENT OF 1             Y02947 30860002
DISP2    EQU   2                   DISPLACEMENT OF 2             Y02947 30900002
DISP3    EQU   3                   DISPLACEMENT OF 3             Y02947 30902002
DISP4    EQU   4                   DISPLACEMENT OF 4             Y02947 30910002
DISP5    EQU   5                   DISPLACEMENT OF 5             Y02947 30950002
DISP6    EQU   6                   DISPLACEMENT OF 6             Y02947 30960002
DISP8    EQU   8                   DISPLACEMENT OF 8             Y02947 30970002
DISP11   EQU   11                  DISPLACEMENT OF 11            Y02947 30980002
DISP12   EQU   12                  DISPLACEMENT OF 12            Y02947 30990002
DISP13   EQU   13                  DISPLACEMENT OF 13            Y02947 30990402
DISP16   EQU   16                  DISPLACEMENT OF 16            Y02947 30992002
DISP17   EQU   17                  DISPLACEMENT OF 17            Y02947 30992402
DISP19   EQU   19                  DOSPLACEMENT OF 19           YA02155 30992802
DISP20   EQU   20                  DISPLACEMENT OF 20            Y02947 30994002
DISP24   EQU   24                  DISPLACEMENT OF 24            Y02947 30994102
LEN2     EQU   2                   LENGTH OF 2                   Y02947 30994402
ELEVEN   EQU   11                  NUMBER OF BITS IN 2K          Y02947 30994802
         SPACE 5                                                 Y02947 30996002
         USING *,BASEREG                                                31000013
         USING TCB,TCBREG                                        Y02947 31050002
         STM   RETREG,CCWREG,DISP0(SAVEREG)      SAVE REGISTERS  Y02947 31200002
         LR    BASEREG,BRREG                                            31400013
         B     AROUND                                            Y02947 31410002
         DC    C'IGG019MC'                                       Y02947 31420002
         DC    C',VS2/R2, DEC  73'                               Y02947 31430002
         DS    0F                                                Y02947 31440002
PATCH    DC    XL86'00'         PATCH AREA                       Y02947 31442002
AROUND   L     CCWREG,DISP8(IOBREG)  LOAD CCW ADDR FROM IOBCSW   Y02947 31450002
         LA    CCWREG,DISP0(CCWREG)  CLEAR HIGH ORDER BYTE       Y02947 31500002
         SH    CCWREG,EIGHT        BACK UP TO INTERRUPTED CCW    Y02947 31550002
         L     TCBREG,DEBTCBAD(DEBREG) LOAD TCB ADDR             Y02947 31600002
         TM    TCBFLGS6,TCBRV        VIRTUAL = REAL              Y02947 31650002
         BO    TESTSTS               YES, CHECK PCI ALONE        YM4072 31700002
         TM    DISP5(CCWREG),FIRSTPCI FIRST TIME PCI             Y02947 31750002
         BNO   TESTSTS               NO, CHECK PCI ALONE         YM4072 31800002
         NI    DISP5(CCWREG),PCIOFF  TURN OFF 1ST TIME PCI       Y02947 31802002
         B     EXIT                  RETURN                      Y02947 31804002
*     APPROXIMATELY 32 LINES DELETED BY THE FOLLOWING PTM:       YM5662 31806002
TESTSTS  EQU   *                                                        32145002
         CLC   DISP12(LEN2,IOBREG),STATUS IS STATUS PCI ONLY     Y02947 32172502
         BE    CHKWRT                                            A49691 32200002
         CLI   0(CCWREG),RDCMND         IS COMMAND READ            3712 32400016
         BNE   PROGCK                  IF NO, IS THERE PROG CK   A28629 32460019
         CLI   5(CCWREG),RDPCI         IS THIS FIRST PCI         A28629 32520019
         BNE   EXIT                    IF NOT, EXIT              A28629 32580019
         TM    DISP12(IOBREG),UCORUE   UNIT CHECK OR UNIT EXCP   Y02947 32760002
         BNZ   EXIT                    IF SO, EXIT               A28629 32820019
         B     MOVEIND                 CHECK FOR AUTOPOLL        A28629 32880019
PROGCK   TM    DISP13(IOBREG),PC       WAS THERE PROG CHECK      Y02947 32940002
         BZ    WRTIC                    IF NOT, GO TO WRITE ROUTINE3712 33000016
         TM    5(CCWREG),RSTICOP        IS TIC TPOP CODE PRESENT   3712 33200016
         BNO   EXIT                     IF NOT, EXIT               3712 33400016
         CLI   0(CCWREG),TICCMND        AND IS COMMAND TIC         3712 33600016
         BNE   EXIT                     IF NOT, EXIT               3712 33800016
         SH    CCWREG,EIGHT             IF SO BACK UP TO WRITE CMND3712 34000016
         B     WRTIC                    GO POST PREVIOUS BUFFER    3712 34200016
CHKWRT   EQU   *                                                 A49691 34220002
         CLI   0(CCWREG),TICCMND                                 A49691 34240002
         BNE   LBCB                                              A49691 34260002
         TM    3(CCWREG),X'01'                                   A49691 34280002
         BNO   EXIT                                              A49691 34300002
         CLI   DISP5(CCWREG),HEX21 TP OP CODE, ALL RESET    LD @ZA02335 34310003
         BE    EXIT                YES, EXIT                LD @ZA02335 34312003
         CLI   DISP5(CCWREG),HEXA1 TP OP CODE, ALL RESET    LD @ZA02335 34314003
         BE    EXIT                YES, EXIT                LD @ZA02335 34316003
         SH    CCWREG,EIGHT                                      A49691 34320002
         B     WRTIC                                             A49691 34340002
LBCB     EQU   *                                                 Y02947 34400002
         CLI   DISP5(CCWREG),RRTXT RD RESP TO TXT (STR/STP) LD @ZA02335 34450003
         BE    EXIT                YES, EXIT                LD @ZA02335 34500003
         SR    WORKREG,WORKREG          COMPUTE PTR TO REQUEST BFR Q    34600013
         IC    WORKREG,DEBNMEXT(DEBREG)                                 34800013
         SLL   WORKREG,2                                                35000013
         LA    QREG,DEBUCBAD(WORKREG,DEBREG)                            35200013
         MVC   BYTE(1),5(CCWREG)        IS T/P OP CODE READ-SKIP OR TIC 35400013
         NI    BYTE,X'3F'               TEST BITS 2-7 ONLY              35600013
         CLI   BYTE,X'12'               IS TP OP CODE 22                35800013
         BE    READSKIP                 YES                             36000013
WRTIC    L     CCW2REG,8(CCWREG)        LOAD ADRS OF PREVIOUS CCW       36200013
         N     CCW2REG,TICMASK          VALIDATE TIC ADDRESS IN REG     36400013
         MVC   SAVEBFR+1(3),1(CCW2REG)  SAVE ADRS OF PREVIOUS BUFFER    36600013
         L     BUFREG,0(CCWREG)         LOAD PTR TO THIS CCW BUFFER     36800013
         N     BUFREG,BUFMSK            ADJUST TO 1ST BYTE OF BFR       37000013
         SH    BUFREG,FOUR                                              37200013
         CLI   0(CCWREG),X'01'          IS COMMAND WRITE                37400013
         BE    WRPCI                    YES                             37600013
*                                                                       37602002
*              2 LINES DELETED FOR ----->                   LD @ZA02312 37602403
*                                                                       37602802
         SH    CCW2REG,EIGHT       PREV CCW                 LD @ZA02312 37604803
         TM    DISP5(CCW2REG),RDRESP CK RD RESP TO TXT(BSC) LD @ZA02312 37606803
         BNO   NOT25               IF NOT BRANCH            LD @ZA02312 37608803
         L     WORKREG,DISP8(CCW2REG)  LOAD DATA ADDR...    LD @ZA02312 37609203
*                                      FOR READ TEXT        LD @ZA02312 37609603
         SH    WORKREG,TWENTY      SUB CNT OF RD RESP CCW   LD @ZA02312 37609703
         CL    WORKREG,0(CCW2REG)  EQ DATA AREA OF RD RESP? LD @ZA04157 37609800
         BNO   NOT25               IF NOT BRANCH            LD @ZA02312 37609903
         LA    WORKREG,DISP0(WORKREG)  CLEAR HI ORDER BYTE  LD @ZA02312 37613203
         ST    WORKREG,SAVEBFR     STORE AS BUFFER PTR      LD @ZA02312 37615203
NOT25    EQU   *                                            LD @ZA02312 37615603
         AH    CCW2REG,EIGHT       RESTORE CCW              LD @ZA02312 37616003
         L     PARREG,DISP12(SAVEREG)   RQE ADDRESS              Y02947 37616702
         USING RQE,PARREG         ESTABLISH RQE ADDRESSABILITY   Y02947 37620002
         L     PARREG,RQEUCB      LOAD UCB ADDRESS               Y02947 37630002
         DROP  PARREG             DROP RQE ADDRESSABILITY        Y02947 37632002
         SR    WORKREG,WORKREG                                     000C 37640015
         IC    WORKREG,DEVTYPE+3(PARREG)                           000C 37660015
         SRL   WORKREG,4                                           000C 37680015
         EX    WORKREG,COMPARE                                     000C 37700015
         BNE   READPCI                                             000C 37720015
         CLC   4(1,BUFREG),DCBBSENQ(DCBREG)                        000C 37740015
         BE    CKEXIT            CK FOR USASCII CODE           @ZA04188 37760000
         CLC   5(1,BUFREG),DCBBSENQ(DCBREG)                      A46838 37766002
         BE    EXIT                                              A46838 37772002
         B     READPCI          CHAR IS NOT AN ENQ             @ZA04188 37772800
CKEXIT   EQU   *                       CK USASCII CODE         @ZA04188 37773600
         L     PARREG,IOBECBPT(IOBREG)   DECB POINTER          @ZA04188 37774400
         TM    DCBXCODE(DCBREG),USASCII   USASCII CODE ?       @ZA04188 37775200
         BNO   EXIT                   CHAR IS AN ENQ           @ZA04188 37776000
         CLI   DECTYPE+1(PARREG),RDTI    READ INITIAL          @ZA04188 37776800
         BNE   EXIT                   NO, CHAR IS AN ENQ       @ZA04188 37777600
*              CHARACTER IS AN INDEX BYTE                      @ZA04188 37778400
READPCI  EQU   *                                                   000C 37780015
         SR    UCBREG,UCBREG            CLEAR REGISTER          YA02155 37830002
         IC    UCBREG,IOBUCBX(IOBREG)   UCB INDEX FOR LINE      YA02155 37840002
         SLL   UCBREG,DISP2             MULT INDEX BY 4         YA02155 37842002
         L     UCBREG,IOBUCBX(DEBREG,UCBREG) UCB ADDR FOR LINE  YA02155 37844002
         TM    DISP19(UCBREG),BISYNC    BSC LINE?               YA02155 37846002
         BNO   CONTINU                  NO, START STOP          YA02155 37848002
         CLI   5(CCWREG),RDPCI          IS THIS FIRST PCI ?    @ZA13192 37848100
         BE    CONTINU                  YES CONTINUE           @ZA13192 37848200
         LH    WORKREG,DISP6(CCW2REG)   COUNT OF PREVIOUS CCW   YA02154 37848402
         A     WORKREG,DISP0(CCW2REG)   ADD ADDR OF PREV. CCW   YA02154 37848802
         BCTR  WORKREG,DISP0            POINT TO LAST CHARACTER YA02154 37849202
         TM    DCBXMODE(DCBREG),INTBLCHK INT BLK CHECK USED?    YA02154 37849602
         BZ    CHKETX                   NO                      YA02154 37849702
         BCTR  WORKREG,DISP0            POINT TO NEXT TO LAST   YA02154 37849802
*                                       CHARACTER               YA02154 37849902
CHKETX   CLC   DISP0(DISP1,WORKREG),DCBBSETX(DCBREG) ETX?       YA02154 37866602
         BE    EXIT                     YES, DON'T GET ANOTHER  YA02154 37876602
*                                       BUFFER                  YA02154 37878602
         CLC   DISP0(DISP1,WORKREG),DCBBSETB(DCBREG) ETB?       YA02154 37880602
         BE    EXIT                     YES, DON'T GET ANOTHER  YA02154 37882602
*                                       BUFFER                  YA02154 37883002
CONTINU  EQU   *                                                YA02155 37883102
         L     BUF2REG,DCBBUFCB(DCBREG) LOAD POINTER TO BCB      Y02947 37883302
         CLI   DISP5(BUF2REG),DISP0 ARE ANY BUFFERS AVAILABLE    Y02947 37900002
         BE    QUEUE                    NO                              38000013
         L     PARREG,IOBECBPT(IOBREG)  GET POINTER TO DECB        7752 38020017
         CLC   DECBUFCT(1,PARREG),DCBBUFCT(DCBREG) ALL BUFFERS USED7752 38040017
         BNL   QPCI                     IF SO, BRANCH              7752 38060017
         SR    RETREG,RETREG            CLEAR REGISTER           Y02947 38070002
         IC    RETREG,DCBEIOBX(DCBREG)  IOB SIZE                 Y02947 38072002
         LR    WORKREG,IOBREG           IOB ADDRESS              Y02947 38074002
         AR    WORKREG,RETREG           POINT TO END OF IOB      Y02947 38076002
         SH    WORKREG,EIGHT            POINT TO DYN BUF EXT     Y02947 38078002
         IC    WORKREG,DECBUFCT(PARREG) PICKUP BUFFER COUNT        7752 38080017
         LA    WORKREG,1(WORKREG)       BUMP BY ONE                7752 38100017
         STC   WORKREG,DECBUFCT(PARREG) STORE BUFFER COUNT         7752 38120017
         L     ZEROREG,ZEROE            SETUP PARAM TO REQUEST 1 BUFFER 38200013
         LR    PARREG,DCBREG            LOAD PTR TO DCB INTO REG 1      38400013
         L     BRREG,0(QREG)            LOAD PTR TO REQ BFR ROUTINE     38600013
         LR    WORKREG,SAVEREG          SAVE IOS SAVEAREA ADDR   YM4064 38650002
         LA    SAVEREG,SAVEAREA         SAVEAREA ADDR FOR 19MS   YM4064 38700002
         BALR  RETREG,BRREG             LINK TO REQUEST BUFFER ROUTINE  38800013
         LR    SAVEREG,WORKREG       RESTORE IOS SAVEAREA ADDR   YM4064 38850002
         LA    BRREG,4(BRREG)           INCR BY 4 TO 1ST DATA BYTE      39000013
         ST    BRREG,0(CCW2REG)         STORE BUFFER ADRS IN CCW        39200013
         LH    WORKREG,DISP6(BUF2REG)        LOAD BFR LENGTH     Y02947 39400002
         SH    WORKREG,FOUR                                             39600013
         STH   WORKREG,6(CCW2REG)       STORE AS COUNT                  39800013
         MVI   0(CCW2REG),X'02'         RESTORE READ COMMAND CODE       40000013
         MVI   8(CCW2REG),X'02'         MAKE TIC COMMAND A READ SKIP    40200013
         SPACE 2                                                   000A 40400013
         BCR   15,0                     THIS INSTRUCTION IS        000A 40600013
*    REQUIRED FOR MODEL 91 SUPPORT TO ENSURE THAT THE FOLLOWING    000A 40800013
*    INSTRUCTION (WHICH CHANGES THE READ-SKIP TO A TIC) WILL BE    000A 41000013
*    EXECUTED IN SEQUENCE.                                         000A 41200013
         MVI   8(CCWREG),X'08'          MAKE THIS READ-SKIP A TIC       41400013
         TM    TCBFLGS6,TCBRV           VIRTUAL = REAL           Y02947 41410002
         BO    QPCI                     YES, DO NOT ALTER CCWS   Y02947 41420002
         SPACE 1                                                        41450002
         BAL   RETREG,BLDPARM     BUILD ENTRIES IN PCI PARM LIST        41500002
         BAL   RETREG,ALTERCCW          ALTER REAL CCWS          Y02947 41510002
         B     QPCI                                                     41800013
         SPACE 2                                                 Y02947 41850002
READSKIP SR    ZEROREG,ZEROREG          CLEAR REGISTER TO        Y02947 41900002
*                          INDICATE THAT IT IS NOT NECCESSARY    Y02947 41950002
*                          TO POST A BUFFER.                     Y02947 41960002
         CLI   0(CCWREG),X'08'          IS THE CMND CODE TIC            42000002
         BE    TIC                      YES                             42200013
         L     CCWREG,0(CCWREG)         LOAD PTR TO NEXT READ CCW       42400013
         C     CCWREG,4(QREG)           IS CCW TO BE PURGED 1ST         42600013
         BNE   NOT1ST                                                   42800013
         MVC   4(4,QREG),0(CCWREG)      MAKE 2ND CCW 1ST NOW            43000013
         B     SETUPRS                                                  43200013
NOT1ST   L     CCW2REG,4(QREG)          LOAD PTR TO 1ST INTO REG        43400013
NXTCMP   C     CCW2REG,ZERO             IS THIS THE END OF THE QUEUE    43600013
         BE    NOTINQ                   YES, NOT IN QUEUE               43800013
         C     CCWREG,0(CCW2REG)        COMPARE CCW PTR TO NEXT CCW PTR 44000013
         BE    FOUND                                                    44200013
         L     CCW2REG,0(CCW2REG)       LOAD PTR TO NEXT CCW PTR IN CHN 44400013
         B     NXTCMP                                                   44600013
FOUND    MVC   0(4,CCW2REG),0(CCWREG)   CHAIN FRONT & BACK BFRS TOGETHR 44800013
LAST     C     CCWREG,8(QREG)           IS PURGED CCW LAST ONE IN QUEUE 45000013
         BNE   SETUPRS                                                  45200013
         ST    CCW2REG,8(QREG)          UPDATE PTR TO LAST CCW IN CHAIN 45400013
         B     SETUPRS                                                  45600013
NOTINQ   L     CCW2REG,8(CCWREG)        LOAD PTR TO PREVIOUS READ       45800013
         TM    5(CCW2REG),X'40'         IS THIS FIRST PCI               46000013
         BZ    NOTINQ1                  IF NOT, BRANCH             000A 46200013
         L     PARREG,IOBECBPT(IOBREG)  LOAD PTR TO DECB           000A 46400013
         TM    DECTYPE(PARREG),AUTOPOLL IS AN AUTOPOLL OPERATION   000A 46600013
         BZ    SETUPRS    IN PROGRESS.  IF NOT, BRANCH             000C 46800015
         L     WORKREG,DECAREA(PARREG)  LOAD BUFFER ADDRESS        000A 47000013
         MVC   DECPOLPT(1,PARREG),4(WORKREG) MOVE INDEX BYTE FROM  000A 47200013
*    INPUT AREA TO HIGH ORDER BYTE OF DECPOLPT.                    000A 47400013
         B     SETUPRS                                             000A 47600013
NOTINQ1  EQU   *                                                 Y02947 47800002
         LA    ZEROREG,DISP4            SET NON ZERO VALUE TO    Y02947 47850002
*                            INDICATE A BUFFER MUST BE POSTED.   Y02947 47900002
         L     DEBREG,0(CCWREG)     LOAD PTR TO COMPLETED BFR    Y02947 48200002
         N     DEBREG,BUFMSK        ADJUST TO 1ST BYTE OF BFR    Y02947 48400002
         SH    DEBREG,FOUR                                       Y02947 48600002
         L     BUFREG,0(CCW2REG)      SET UP PARM FOR SV POST    Y02947 48700002
         N     BUFREG,BUFMSK          ADJUST TO 1ST BYTE OF BFR  Y02947 48800002
         SH    BUFREG,FOUR              BACK UP TO LINK FIELD    Y02947 48900002
         O     BUFREG,POSTMSK           OR IN COMPLETION CODE    Y02947 49000002
SETUPRS  MVC   1(3,CCWREG),RS2+1        MOVE ADRS OF 4 TO READ CCW 0583 50400013
         L     CCW2REG,8(CCWREG)        LOAD PTR TO PREVIOUS READ       50600013
         MVC   16(8,CCW2REG),RS2        OVERLAY R-S IN CCW 3 OR 5       50800013
*        CONSTRUCT A PCI MODIFY ENTRY FOR THE ALTERED CCW               50806002
         OI    12(CCW2REG),X'80'        TURN ON DATA CHAIN BIT   A32459 50830020
         L     PARREG,IOBECBPT(IOBREG)  GET POINTER TO DECB      A32452 50860020
         CLC   DECBUFCT(1,PARREG),DCBBUFCT(DCBREG) ALL BUFS USED A32452 50890020
         BL    CHECK                    IF NOT, BRANCH           Y02947 50920002
         MVC   22(2,CCW2REG),CCWCOUNT   MAKE COUNT 'C0'          A32452 50950020
CHECK    TM    TCBFLGS6,TCBRV           VIRTUAL = REAL           Y02947 50960002
         BO    EXIT1                    YES, CHECK FOR BUFFER    Y02947 50970002
*                                     POSTING.                   Y02947 50972002
         BAL   RETREG,BLDPARM           GET ADDR OF REAL CCWS    Y02947 50980002
         OI    DISP12(RCCWREG),DATACHN  TURN ON DATA CHAIN       Y02947 50990002
*                           IN REAL CCW                          Y02947 50992002
         L     WORKREG,DISP16(RCCWREG) LOAD VIRT DATA ADDR       Y02947 50994002
         LA    WORKREG,DISP0(WORKREG)  CLEAR HIGH ORDER BYTE     Y02947 50996002
         LRA   WORKREG,DISP0(WORKREG)  LOAD REAL DATA ADDR AND   Y02947 50998002
         STCM  WORKREG,7,DISP17(RCCWREG) STORE IN REAL CCW       Y02947 50998402
EXIT1    LTR   ZEROREG,ZEROREG          ANY BUFFERS TO BE        Y02947 51048402
*                                       POSTED?                  Y02947 51098402
         BZ    EXIT                     NO, PREPARE TO RETURN    Y02947 51148402
         LR    CCWREG,DEBREG            LOAD ECB ADDRESS         Y02947 51198402
         LR    CCW2REG,BUFREG           LOAD POST CODE           Y02947 51198802
EXIT2    EQU   *                                                 Y02947 51199202
*        IT IS NOT NECESSARY TO RESTORE REGISTERS 10,11,12,      Y02947 51199302
*        AND 13 BEFORE RETURNING TO IOS.                         Y02947 51199402
         LM    RETREG,BUF2REG,DISP0(SAVEREG) RESTORE REGISTERS   Y02947 51199602
*                     SO THAT SAVE AREA CAN BE USED BY PCIPOST   Y02947 51199702
         LR   IOBREG,BASEREG            REG 2 IS NOW THE BASE    Y02947 51199802
         DROP BASEREG                   DROP REG 12 ADDR         Y02947 51204802
         USING IGG019MC,IOBREG          REG 2 ADDRESSABILITY     Y02947 51206802
         PCIPOST ECB=(CCWREG),SVAREA=(SAVEREG),RQE=(RQEREG),CODE=(CCW2R-51209902
               EG)                                               Y02947 51214902
         DROP  IOBREG                   DROP REG 2 ADDR          Y02947 51215302
         USING IGG019MC,BASEREG         REG 12 ADDRESSABILITY    Y02947 51215702
*                                REG 12 RESTORED BY MACRO        Y02947 51216102
         L     IOBREG,RQEIOB-RQE(RQEREG)    RESTORE IOB ADDRESS  Y02947 51216902
         LA    IOBREG,DISP0(IOBREG)     CLEAR HIGH ORDER BYTE    Y02947 51218902
*       IF REGISTER 9 IS NOT RESTORED TO ITS ORIGINAL VALUE,     Y02947 51219802
*       IT MUST BE ZEROED BEFORE RETURNING TO IOS.               Y02947 51223102
         SR    CCWREG,CCWREG            CLEAR REGISTER BEFORE    Y02947 51226602
*                                       RETURNING TO IOS         Y02947 51229902
         BR    RETREG                   RETURN TO IOS            Y02947 51239902
         SPACE 2                                                        51246602
QUEUE    L     CCW2REG,8(CCWREG)        LOAD PTR TO NEXT CCW            51253302
         OI    15(CCWREG),X'01'        TURN ON PCI ENTRANCE BIT    1265 51260018
         NI    15(CCW2REG),X'FE'       TURN OFF PREVIOUS PCI     A27624 51330019
         L     WORKREG,4(QREG)          LOAD PTR TO 1ST CCW IN QUEUE    51400013
         C     WORKREG,ZERO             IS THIS FIRST ENTRY TO QUEUE    51600013
         BE    QIST                                                     51800013
         L     WORKREG,8(QREG)          LOAD PTR TO LAST CCW IN QUEVE   52000013
         ST    CCW2REG,0(WORKREG)       STORE CHAIN ADRS IN LAST ENTRY  52200013
         B     STLAST                                                   52400013
QIST     ST    CCW2REG,4(QREG)                                          52600013
STLAST   ST    CCW2REG,8(QREG)          ST PTR OF CCW AS LAST IN QUEUE  52800013
         MVC   0(4,CCW2REG),ZERO        ZERO IN CCW                     53000013
QPCI     TM    5(CCWREG),X'40'          IS T/P OP CODE 2ND PCI          53200013
         BZ    POSTBUF                  YES                             53400013
         NI    5(CCWREG),X'BF'          CHANGE T/P OP CODE PCI BIT      53600013
MOVEIND  L     PARREG,IOBECBPT(IOBREG) LOAD PTR TO DECB          A28629 53800019
         TM    DECTYPE(PARREG),AUTOPOLL IS AN AUTOPOLL OPERATION   000A 54000013
         BZ    EXIT                IN PROGRESS?  IF NOT, BRANCH    000A 54200013
         L     WORKREG,DECAREA(PARREG)  LOAD BUFFER ADDRESS        000A 54400013
         MVC   DECPOLPT(1,PARREG),4(WORKREG) MOVE INDEX BYTE FROM  000A 54600013
*    INPUT AREA TO HIGH ORDER BYTE OF DECPOLPT                     000A 54800013
         B     EXIT                                                     55000013
TIC      L     CCWREG,0(CCWREG)         LOAD ADRS OF NEXT READ CCW 0583 55200013
         L     BUFREG,0(CCWREG)         LOAD PTR TO BUFFER              55400013
         N     BUFREG,BUFMSK            ADJUST TO 1ST BYTE OF BFR       55600013
         SH    BUFREG,FOUR                                              55800013
         LA    ZEROREG,0(BUFREG)        PLACE BFR PTR IN REG 0          56000013
         LR    PARREG,DCBREG            LOAD PTR TO DCB INTO REG 1      56200013
         L     BRREG,0(QREG)            LOAD PTR TO RELEASE BFR ROUTINE 56400013
         LR    WORKREG,SAVEREG          SAVE IOS SAVEAREA ADDR   YM4064 56450002
         LA    SAVEREG,SAVEAREA         SAVEAREA ADDR FOR 19MS   YM4064 56500002
         BALR  RETREG,BRREG             LINK TO RELEASE BFR             56600013
         LR    SAVEREG,WORKREG       RESTORE IOS SAVEAREA ADDR   YM4064 56610002
         SR    ZEROREG,ZEROREG          CLEAR REGISTER TO        Y02947 56650002
*                             INDICATE NO BUFFER POSTING         Y02947 56700002
         B     SETUPRS                  GO TO SETUP READ-SKIP      0583 56800013
WRPCI    CLC   1(3,BUFREG),ZERO+1       IS CHAIN ADRS IN BFR ZERO       57000013
         BE    LASTWR                   YES, LAST BUFFER, POST ONLY     57200013
         OI    11(CCW2REG),X'01'        INVALIDATE FOLLOWING TIC ADRS   57400013
         TM    5(CCWREG),FIRSTPCI       IS THIS FIRST PCI INT      3712 57470016
         BZ    WRB                      IF NOT, BRANCH             3712 57540016
         L     BUF2REG,16(CCWREG)       LOAD NEXT BUFFER ADDRESS   3712 57610016
         SH    BUF2REG,FOUR             BACK UP TO LONK FIELD      3712 57680016
         B     WRC                                                 3712 57750016
WRB      L     BUF2REG,0(BUFREG)        LOAD NEXT BUFFER ADDRESS   3712 57820016
WRC      CLC   1(3,BUF2REG),ZERO+1      IS THE NEXT BUFFER THE LAST3712 57890016
         BNE   QWPCI                                                    58000013
         L     PARREG,IOBECBPT(IOBREG)  LOAD PTR TO ECB                 58200013
         TM    DECTYPE+1(PARREG),X'0D'  IS OPERATION CONVERSATIONAL000B 58260014
         BO    WRWL                     YES, BRANCH                000B 58320014
         LH    WORKREG,DECLNGTH(PARREG) LOAD LAST BFR COUNT             58400013
WRL      SH    WORKREG,FOUR             ADJUST COUNT               000B 58600014
         STH   WORKREG,6(CCW2REG)       STORE IN CCW                    58800013
         LA    CCWREG,0(CCWREG)         CLEAR HIGH BYTE        @ZA11431 58820000
         LA    CCW2REG,0(CCW2REG)       CLEAR HIGH BYTE        @ZA11431 58840000
         LR    WORKREG,CCWREG                                  @ZA04150 58860000
         AR    WORKREG,CCW2REG                                 @ZA04150 58880000
*****THE FOLLOWING INST DELETED BY AZ04150.******              @ZA04150 58900000
******   LA    WORKREG,0(CCWREG,CCW2REG) ADD TWO WRITE ADRS TOGETHER    58920000
         SRL   WORKREG,1                DIVIDE BY 2, RESULT = 1ST TIC   59200013
         NI    DISP4(CCW2REG),BF        SUPPRESS COMMAND        YA02156 59250002
*                                                    CHAINING   YA02156 59300002
         TM    21(WORKREG),X'80'        IS NEXT TIC CMND LAST CCW       59400013
         BO    NODC                     IF SO, BYPASS SET UP CHAINING   59600013
         OI    DISP4(CCW2REG),FORTY     INVOKE COMMAND CHAINING YA02156 59650002
         A     WORKREG,TICCHN           ADD CMND AND DIFFERENCE TO CCW  59800013
         ST    WORKREG,8(CCW2REG)           BEYOND 2ND TIC AND STORE    60000013
         OI    4(CCW2REG),X'20'         LEAVE SLI FLG ON           3712 60200016
NODC     NI    4(CCW2REG),X'7F'                                  A49689 60400002
QWPCI    TM    5(CCWREG),X'40'          IS T/P OP CODE FOR 2ND PCI      60600013
         BZ    MOVEPTR                                                  60800013
         NI    5(CCWREG),X'BF'          ZERO T/P OP CODE BIT  1         61000013
         SPACE 2                                                   000A 61200013
         BCR   15,0                     THIS INSTRUCTION IS        000A 61400013
*    REQUIRED FOR MODEL 91 SUPPORT TO ENSURE THAT THE FOLLOWING    000A 61600013
*    INSTRUCTION (WHICH VALIDATES THE ADDRESS IN THE NEXT TIC      000A 61800013
*    COMMAND) WILL BE EXECUTED IN SEQUENCE.                        000A 62000013
         NI    11(CCWREG),X'FE'         VALIDATE NEXT TIC ADDRESS  000A 62200013
         SPACE 1                                                        62250002
         BAL   RETREG,BLDPARM     BUILD ENTRIES IN PCI PARM LIST        62300002
         BAL   RETREG,ALTERCCW         ALTER REAL CCWS           Y02947 62310002
         B     EXIT                                                     62600013
         SPACE 2                                                 Y02947 62650002
WRWL     LH    WORKREG,DECWLNG(PARREG)  LOAD COUNT                 000B 62660014
         B     WRL                                                 000B 62720014
MOVEPTR  MVC   1(3,CCW2REG),1(BUFREG)   MOVE PTR TO NXT BFR TO CCW      62800013
         L     WORKREG,0(CCW2REG)       ADD 4 TO CCW BFR ADRS FOR       63000013
         AH    WORKREG,FOUR                                             63200013
         ST    WORKREG,0(CCW2REG)                                       63400013
         SPACE 2                                                   000A 63600013
         BCR   15,0                     THIS INSTRUCTION IS        000A 63800013
*    REQUIRED FOR MODEL 91 SUPPORT TO ENSURE THAT THE FOLLOWING    000A 64000013
*    INSTRUCTION (WHICH VALIDATES THE ADDRESS IN THE NEXT TIC      000A 64200013
*    COMMAND) WILL BE EXECUTED IN SEQUENCE.                        000A 64400013
         NI    11(CCWREG),X'FE'         VALIDATE NEXT TIC ADDRESS  000A 64600013
         SPACE 1                                                        64660002
         BAL   RETREG,BLDPARM     BUILD ENTRIES IN PCI PARM LIST        64720002
         BAL   RETREG,ALTERCCW         ALTER REAL CCWS           Y02947 64770002
         B     ZEROCC                                                   65000013
         SPACE 2                                                        65010002
*        CONSTRUCT ENTRIES IN THE PCI MODIFY PARAMETER LIST             65020002
         SPACE 1                                                        65030002
BLDPARM  DS    0H                                                       65040002
         TM    TCBFLGS6,TCBRV           VIRTUAL = REAL           Y02947 65050002
         BO    RETURN0                  YES, NO VIRTUAL CCW'S    Y02947 65060002
         L     WORKREG,DISP12(SAVEREG)  LOAD RQE ADDRESS         Y02947 65090002
         USING RQE,WORKREG          ESTABLISH RQE ADDR           Y02947 65118002
         L     BUF2REG,RQETCCW     LOAD TCCW ADDR (TRANSLATED)   Y02947 65118402
         DROP  WORKREG              DROP RQE ADDRESSABILITY      Y02947 65118802
         USING TCCW,BUF2REG         ESTABLISH TCCW ADDR          Y02947 65119202
         LR    RCCWREG,CCW2REG      VIRT ADDR OF DESIRED CCW     Y02947 65119602
         S     RCCWREG,IOBCPA(IOBREG) GET CCW OFFSET FROM        Y02947 65119702
*                        BEGINNING OF CHANNEL PROGRAM AREA       Y02947 65119802
         L     WORKREG,TCCWFRC GET ADDR OF FIRST REAL CCW        Y02947 65119902
         AR    RCCWREG,WORKREG    GET REAL ADDR OF DESIRED CCW   Y02947 65123202
         DROP  BUF2REG            DROP TCCW ADDRESSABILITY       Y02947 65125202
RETURN0  BR    RETREG                                                   65126702
         SPACE 1                                                        65130002
LASTWR   TM    13(CCWREG),X'80'         IS NEXT CWW THE LAST            65200013
         BO    ZEROCC                   IF SO, NO SWEAT, ADRS O.K.      65400013
         TM    21(CCWREG),X'2E'        IS FOLLOWING CCW DATA     A26889 65460019
         BNZ   SUB32                   NO, BRANCH                A26889 65520019
         TM    21(CCWREG),X'10'         IS FOLLOWING CCW A DATA CCW     65600013
         BO    MVCSAVE                  IF SO, BRANCH                   65800013
SUB32    SH    CCWREG,THIRTY2          SUBTRACT 32               A26889 66000019
MVCSAVE  MVC   SAVEBFR+1(3),17(CCWREG)  MOVE BUFFER ADRS TO SAVE AREA   66200013
ZEROCC   MVI   0(BUFREG),X'00'          ZERO COMPLETION CODE IN THIS BF 66400013
POSTBUF  EQU   *                                                 Y02947 66600002
         ST    BUFREG,BUFPOST           STORE BUFFER ADDRESS            67000013
         MVC   BUFPOST(1),POSTCODE      MOVE IN WRROR CODE IF ANY       67200013
         L     CCW2REG,BUFPOST       LOAD BFR ADRS AS ECB CODE   Y02947 67400002
         NI    SAVEBFR+3,X'FC'                                          67600013
         L     CCWREG,SAVEBFR        LOAD PTR TO COMPLETED BFR   Y02947 67800002
         SH    CCWREG,FOUR           ADJUST TO 1ST BYTE OF BFR   Y02947 68000002
         MVI   POSTCODE,X'7F'           RESET POSTING CODE              69000013
         B    EXIT2                     GO POST BUFFER           Y02947 69050002
EXIT     LM    RETREG,CCWREG,DISP0(SAVEREG) RESTORE REGISTERS    Y02947 69200002
         BR    RETREG                 RETURN                     Y02947 69250002
         SPACE 3                                                 Y02947 69300002
ALTERCCW TM    TCBFLGS6,TCBRV           VIRTUAL = REAL           Y02947 69350002
         BO    RETURN1                  YES, NO VIRTUAL CCW'S    Y02947 69400002
         MVC   DISP0(LEN16,RCCWREG),DISP0(CCW2REG) MOVE NEXT     Y02947 69498002
*                     R/W CCW AND FOLLOWING TIC OR RD SKIP       Y02947 69498402
         LR    BUF2REG,CCWREG      LOAD INTERRUPTED CCW ADDR     Y02947 69498802
         S     BUF2REG,IOBCPA(IOBREG) GET CCW OFFSET FROM        Y02947 69499202
*                     BEGINNING OF CHANNEL PROGRAM AREA          Y02947 69499602
         AR    BUF2REG,WORKREG     GET ADDR OF REAL CCW          Y02947 69499702
         MVC   DISP8(LEN8,BUF2REG),DISP8(CCWREG) MOVE TIC OR     Y02947 69499802
*                     RD SKIP CCW AFTER INTERRUPTED CCW          Y02947 69499902
         STCM  RCCWREG,7,DISP8(BUF2REG) MAKE REAL TIC OR         Y02947 69533202
*                     RD SKIP POINT TO NEXT CCW                  Y02947 69543202
         TM    DISP11(CCW2REG),INVTIC INVALID TIC ADDR           Y02947 69553202
         BNO   NOTON0              NO, DO NOT ALTER REAL CCW     Y02947 69563202
         OI    DISP11(RCCWREG),INVTIC MAKE REAL TIC INVALID      Y02947 69565202
NOTON0   STCM  BUF2REG,7,DISP8(RCCWREG) MAKE REAL TIC OR         Y02947 69565602
*                     RD SKIP POINT TO NEXT CCW                  Y02947 69566002
         TM    DISP11(CCWREG),INVTIC INVALID TIC ADDR            Y02947 69566402
         BNO   NOTON1              NO, DO NOT ALTER REAL CCW     Y02947 69566502
         OI    DISP11(BUF2REG),INVTIC MAKE REAL TIC CCW          Y02947 69566602
*                             ADDRESS INVALID                    Y02947 69576602
NOTON1   L     WORKREG,DISP0(RCCWREG) LOAD VIRT DATA ADDR        Y02947 69577702
         LA    WORKREG,DISP0(WORKREG) CLEAR HIGH ORDER BYTE      Y02947 69587702
         LR    WKRG3,WORKREG       VIRT DATA ADDR                Y02947 69588102
         N     WORKREG,PAGE4K      GET STARTING PAGE BOUNDARY    Y02947 69588502
         AH    WKRG3,DISP6(RCCWREG) ADD DATA LENGTH              Y02947 69588602
         N     WKRG3,PAGE4K        GET ENDING PAGE BOUNDARY      Y02947 69588702
         CR    WKRG3,WORKREG       DOES DATA CROSS PAGE BNDRY    Y02947 69588802
         BNH   GETREAL             NO, DO NOT NEED IDAL          Y02947 69592502
         SR    WORKREG,WORKREG     CLEAR REGISTER                Y02947 69594502
         IC    WORKREG,DCBEIOBX(DCBREG) IOB SIZE                 Y02947 69594902
         AR    IOBREG,WORKREG      POINT TO END OF IOB           Y02947 69595302
         SH    IOBREG,EIGHT        POINT TO DYN BUF EXT          Y02947 69595702
         L     WORKREG,DISP4(IOBREG) GET VSL ADDR                Y02947 69596102
         L     WORKREG,DISP0(WORKREG) GET 1ST IDAL ADDR          Y02947 69596202
         OI    DISP4(RCCWREG),IDAWFLAG TURN ON IDAW FLAG IN      Y02947 69646202
*                             REAL CCW                           Y02947 69648202
         CR    CCWREG,CCW2REG      USE 1ST OR 2ND IDAL           Y02947 69656202
         BL    KEEP                KEEP ADDR OF 1ST IDAL         Y02947 69666202
         L     WORKREG,DISP0(WORKREG) LOAD ADDR OF 2ND IDAL      Y02947 69676202
KEEP     LA    WORKREG,DISP8(WORKREG) ADDR IDAW ENTRIES          Y02947 69686202
         LRA   WKRG3,DISP0(WORKREG) GET REAL IDAW ADDR AND       Y02947 69688202
         STCM  WKRG3,7,DISP1(RCCWREG) STORE IN REAL CCW          Y02947 69690202
         L     WKRG3,DISP0(CCW2REG) GET VIRT DATA ADDR           Y02947 69692202
         LA    WKRG3,DISP0(WKRG3)  CLEAR HIGH ORDER BYTE         Y02947 69694202
         LR    WKRG2,WKRG3         VIRT DATA ADDR                Y02947 69694602
         N     WKRG2,PAGE2K        GET STARTING 2K ADDR          Y02947 69695002
         CLC   DISP6(LEN2,RCCWREG),TWOK LENGTH GREATER THAN 2K   Y02947 69695402
         BH    SETUP               YES, DETERMINE NUM OF IDAWS   Y02947 69695802
         LA    WKRG4,TWO           NUM OF IDAWS                  Y02947 69695902
MORE     LRA   WKRG3,DISP0(WKRG3)  REAL DATA ADDR                Y02947 69696002
         ST    WKRG3,DISP0(WORKREG) STORE REAL DATA ADDR IN      Y02947 69696102
*                             IDAW                               Y02947 69706102
         LA    WORKREG,DISP4(WORKREG) ADDR NEXT IDAW             Y02947 69712802
         A     WKRG2,FUL2K         LOAD NEXT 2K BOUNDARY         Y02947 69722802
         LR    WKRG3,WKRG2         PUT IN RIGHT REG              Y02947 69724802
         BCT   WKRG4,MORE          BRANCH UNTIL NUM OF IDAWS=0   Y02947 69726802
         B     EXIT0               PREPARE TO RETURN             Y02947 69728802
GETREAL  L     WKRG3,DISP0(RCCWREG) VIRT DATA ADDR               Y02947 69729202
         LA    WKRG3,DISP0(WKRG3)  CLEAR HIGH ORDER BYTE         Y02947 69729302
         LRA   WKRG3,DISP0(WKRG3)  GET REAL DATA ADDR AND        Y02947 69729402
         STCM  WKRG3,7,DISP1(RCCWREG) STORE IN REAL CCW          Y02947 69735002
         NI    DISP4(RCCWREG),IDAWOFF TURN OFF IDAW CCW FLAG     Y02947 69737002
         B     EXIT0               PREPARE TO RETURN             Y02947 69739002
SETUP    LH    WKRG4,DISP6(RCCWREG) GET LENGTH                   Y02947 69739402
         SRL   WKRG4,ELEVEN DIVIDE BY 2K TO GET NUM OF IDAWS     Y02947 69739802
         LA    WKRG4,DISP2(WKRG4) ADD TWO FOR START AND END      Y02947 69740202
         B     MORE                SET UP CCW                    Y02947 69740302
EXIT0    LM    IOBREG,DCBREG,DISP16(SAVEREG) RESTORE REGISTERS   Y02947 69740402
RETURN1  BR    RETREG              RETURN                        Y02947 69740502
         SPACE 5                                                 Y02947 69755302
COMPARE  CLI   NINE,0                                                   69770402
EIGHT    DC    H'8'                                                     69785202
FOUR     DC    H'4'                                                     69800013
THIRTY2  DC    H'32'                                                    70000013
TWOK     DC    H'2048'             2K (2048) BYTES               Y02947 70050002
TWENTY   DC    H'20'                                        LD @ZA02312 70100003
ZERO     DC    F'0'                                                     70200013
SAVEBFR  DC    F'0'                     PREVIOUS BUFFER ADDRESS         70400013
BUFPOST  DC    F'0'                     BUFFER AS ECB ADDRESS           70600013
         DS    0F                                                Y02947 70602002
PAGE4K   DC    X'00FFF000'         MASK TO OBTAIN 4K PG BNDRY    Y02947 70610002
PAGE2K   DC    X'00FFF800'         MASK TO OBTAIN 2K PG BNDRY    Y02947 70612002
FUL2K    DC    X'00000800'         2K (2048) BYTES               Y02947 70614002
TEXT     EQU   X'10'                                                    70620002
POLL     EQU   X'09'                                                    70640002
NOP      EQU   X'03'                                                    70660002
NOPTPCD  EQU   X'09'                                                    70680002
DYNBUF   EQU   X'08'                                                    70700002
DCBBFTEK EQU   32                                                       70720002
BISYNC   EQU   X'90'                    BSC DEVICE TYPE         YA02155 70730002
BUFFIX   EQU   X'40'                    ECB COMPLETION BIT       Y02947 70770002
RDTI     EQU   X'01'                    READ INITIAL           @ZA04188 70777000
USASCII  EQU   X'14'                    USASCII DCB CODE       @ZA04188 70784000
DCBXCODE EQU   X'39'           CONTROL STATION FLAG XMISSION   @ZA04188 70791000
BYTE     DC    X'12'                                                    70800013
POSTCODE DC    X'7F'                    POSTING CODE                    71000013
NINE     DC    X'09'                                               000C 71100015
SAVEAREA DC    18F'0'                   SAVE AREA FOR BUFFER     YM4064 71400002
*                                       ROUTINE (IGG019MS)       YM4064 71450002
POSTMSK  DC    X'7F000000'              COMPLETION CODE MASK            71600013
ZEROE    DC    X'01000000'                                              71800013
TICCHN   DC    X'08000018'                                              72000013
TICMASK  DC    X'FFFFFFFE'              TIC MASK FOR VALIDATING ADRS    72200013
BUFMSK   DC    X'00FFFFFC'                                         3712 72400016
RS2      DC    X'02'                    COMMAND - READ                  72600013
         DC    X'000004'                AREA                            72800013
         DC    X'30'                    FLAGS - SLI,SKIP                73000013
         DC    X'12'                    T/P OP CODE                     73200013
         DC    X'7FFD'                  COUNT                           73400013
CCWCOUNT DC    X'00C0'                                           A32452 73500020
STATUS   DC    X'0080'                                                  73600013
CEDEPCI  DC    X'0C80'                  CHAN/DEVICE END PCI        3712 73700016
R10DISP  EQU   48                                                       73710002
RDPCI    EQU   X'51'                                             A28629 73730019
UCORUE   EQU   X'03'                                             A28629 73760019
         EJECT                                                   Y02947 73762002
CVT      DSECT                                                   Y02947 73770002
         CVT   LIST=NO                                           Y02947 73780002
         EJECT                                                   Y02947 73790002
         IKJTCB DSECT=YES,LIST=YES                               Y02947 73792002
         EJECT                                                   Y02947 73794002
         IECDRQE                                                 Y02947 73796002
         EJECT                                                   Y02947 73798002
         IECDTCCW                                                Y02947 73798402
         EJECT                                                   Y02947 73798802
         IHASRB                                                  Y02947 73799202
         EJECT                                                   Y02947 73799602
         IHAASVT                                                 Y02947 73799702
         EJECT                                                   Y02947 73799802
         IECDIOSB                                                Y02947 73799902
         CNOP  0,8                                                      73800013
         END                                                            74000013
