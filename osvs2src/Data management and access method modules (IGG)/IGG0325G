 TITLE ' IGG0325G - DADSM - DADSM RECORD UPDATE MODULE'                 00020000
IGG0325G CSECT                                                          00021021
*                                                                       00021402
*MODULE NAME = IGG0325G                                                 00021802
*                                                                       00022202
*DESCRIPTIVE NAME = DADSM - DADSM RECORD UPDATE MODULE                  00022602
*                                                                       00022702
*COPYRIGHT = NONE                                                       00022802
*                                                                       00022902
*CHANGE ACTIVITY = SEE BELOW                                            00025102
*                                                                       00029402
*          RELEASE 17 DELETIONS                                         00031602
*0092000400,                                                          * 00033802
*          RELEASE 18 DELETIONS                                         00036002
*          RELEASE 19 DELETIONS                                         00038202
*          RELEASE 20 DELETIONS                                         00040402
*2412044000                                                      A37231 00042602
*          RELEASE 21 DELETIONS                                         00044802
*1199017400-017600,018000-018200,044800,087600,089000,092800     A37199 00047002
*1199000230,015600,024800-025400,087200,087600,089000,110600     S21042 00049202
*          RELEASE 22 DELETIONS                                         00051402
*          VS2 RELEASE 02 DELETIONS/CHANGES                             00053602
*0000000030-000150,000470-000530,001400-001600,004400,005600,    Y02080 00055802
*0000006000,006600,007800,016000,017000,017800-018100,026600-    Y02080 00058002
*0000026800,027400-027600,029000,029400,029800,040200,042800,    Y02080 00060202
*0000043400,044000-044040,044120-044400,044800,046400,047800,    Y02080 00062402
*0000063400,064000-064200,066800,072200,072800,074200,075800,    Y02080 00064602
*0000078200-078400,079200,079600,087200,087600-094600,095000-    Y02080 00066802
*0000110400                                                      Y02080 00069002
*0000028000                                                      Y02082 00071202
*0000018100-018200,068600                                        XM2969 00073202
*                                                                       00073402
*STATUS CHANGE LEVEL 003                                                00075602
*FUNCTION/OPERATION: TO REDUCE THE FORMAT 5 DSCB'S -DADSM - BY THE    * 00077802
*   SPACE ALLOCATED AND TO ELIMINATE ALL HOLES IN THE FORMAT 5 DSCB'S.* 00080000
*                                                                     * 00100000
*ENTRY POINTS:                                                        * 00120000
*        IGG0325G - ENTRY IS MADE FROM IGG0325E VIA A BRANCH.         * 00140002
*   ZERO QUANTITY REQUESTS DO NOT EXECUTE THIS MODULE.                * 00180000
*                                                                     * 00200000
*INPUT: UPON ENTRY TO THIS MODULE THE WORK AREA WILL CONTAIN THE DATA * 00220000
*   PORTION OF THE FORMAT 4 DSCB, AND THE ABSOLUTE ADDRESSES OF THE   * 00240000
*   FORMAT 4 DSCB AND THE FIRST FORMAT 5 DSCB.  THE DADSM TABLE WILL  * 00260000
*   CONTAIN THE NUMBER OF EXTENTS AND THE ACTUAL SPACE ALLOCATED.     * 00280000
*   THE KEY/DATA OF THE FIRST F5 MAY ALSO BE IN CORE, IF SO THE       * 00300000
*   'FIRST FORMAT 5 IN CORE SWITCH' WILL BE ON.   THE WORK AREA WILL  * 00320000
*   ALSO CONTAIN A DEB, AN IOB, AN ECB, AND A CHANNEL PROGRAM TO      * 00340000
*   SEARCH FOR HOLES AND TO READ AND WRITE DADSM RECORDS.             * 00360000
*   REGISTER 11 WILL POINT TO THE FIRST JFCB.                         * 00380000
*   REGISTER 13 WILL POINT TO THE WORK AREA.                          * 00400000
*                                                                     * 00420000
*OUTPUT: UPON TRANSFER OF CONTROL, THE WORK AREA REGISTERS WILL BE AS * 00440002
*   AT INPUT.  NEW/UPDATED FORMAT 5 DSCB'S WILL BE WRITTEN OUT.       * 00460000
*                                                                     * 00480000
*EXTERNAL ROUTINES:                                                   * 00500000
*        EXCP(0) - READ FROM OR WRITE TO DIRECT ACCESS DEVICE         * 00520000
*        WAIT(1) - WAIT ON EVENT CONTROL BLOCK                        * 00540000
*        IECRES  - BRANCH TO THE NEXT ALLOCATE MODULE                 * 00560002
*                                                                     * 00580000
*EXITS-NORMAL: BRANCH TO IGG0325H TO WRITE OUT AN UPDATED F4 DSCB     * 00600002
*   AND TO WRITE OUT A ZERO RECORD IF REQUIRED.  ERROR CODE PASS      * 00620000
*   REGISTER WILL CONTAIN A ZERO.                                     * 00640000
*   -ERROR: BRANCH TO IGG0325H WITH CODE IN ERROR CODE PASS REGISTER. * 00660002
*                                                                     * 00680000
*   ERROR CODES THAT CAN BE ISSUED BY 'DADSM RECORD UPDATE MODULE'    * 00700000
*                                                                     * 00720000
*   0C - PERMANENT I/O ERROR                                          * 00740000
*                                                                     * 00760000
*TABLES/WORK AREAS: DADSM WORK AREA DESCRIBED BY MACRO 'IECALLWA'     * 00780002
*                                                                     * 00800000
*              ***************************************                * 00820000
*              *             DADSM TABLE             *                * 00840000
*              ***************************************                * 00860000
*                                                                     * 00880000
*              ***************************************                * 00900000
*              *        *         *                  *                * 00920000
*              *  TYPE  *  NO OF  *     USED HOLE    *                * 00940000
*              *  FLAG  * ENTRIES *      COUNTER     *                * 00960000
*              *        *         *                  *                * 00980000
*              ***************************************                * 01000000
*              *                  *                  *                * 01020000
*              *       RTA        *      RTA+1       *                * 01040000
*              *                  *                  *                * 01060000
*              ***************************************                * 01080000
*              *                  *                  *                * 01100000
*              *       RTA        *      RTA+1       *                * 01120000
*              *                  *                  *                * 01140000
*              ***************************************                * 01160000
*              *                  *                  *                * 01180000
*              *       RTA        *      RTA+1       *                * 01200000
*              *                  *                  *                * 01220000
*              ***************************************                * 01240000
*              *                  *                  *                * 01260000
*              *       RTA        *      RTA+1       *                * 01280000
*              *                  *                  *                * 01300000
*              ***************************************                * 01320000
*              *                  *                  *                * 01340000
*              *       RTA        *      RTA+1       *                * 01360000
*              *                  *                  *                * 01380000
*              ***************************************                * 01400000
*                                                                     * 01420000
*              TYPEFLG  =  02 - BPAM DIRECTORIES REQUESTED.           * 01440000
*                                                                     * 01460000
*                       =  40 - USER LABELS REQUESTED                 * 01464021
*                                                                     * 01468021
*                       =  80 - SET MUST COMPLETE IS ACTIVE           * 01472021
*                                                                     * 01476021
*              NO OF ENTRIES = NUMBER OF ENTRIES WITHIN DADSM TABLE.  * 01480000
*                                                                     * 01500000
*              RTA = THE STARTING TRACK OF THE ALLOCATED EXTENT.      * 01520000
*                                                                     * 01540000
*              RTA+1 = THE STARTING TRACK OF THE NEXT AVAILABLE EXTENT* 01560021
*                                                                     * 01580000
*ATTRIBUTES: REENTRANT                                                * 01600002
*                                                                     * 01620000
*NOTES:                                                               * 01640000
*   OTHER MACROS USED                                                 * 01660000
*   IECALLWA - ALLOCATE WORK AREA EXPANSION                           * 01670002
*   IECSDSL1 - BUILD DSCB'S                                           * 01680000
*   MODESET  - ASSUME DATAMGT KEY                                     * 01690002
*   CVT - BUILD CVT                                                   * 01700002
*                                                                     * 01720000
*STORAGE: PROGRAM CODE - LESS THAN 2048 BYTES                         * 01800002
*   WORK AREA - AS DEFINED IN THE IECALLWA MACRO                 XM2969 01810002
*   RPS WORK AREA - AS DEFINED IN THE IECRPS MACRO               XM2969 01820002
*                                                                     * 01840000
*                                                                       01860000
*REGISTER NAMES-                                                        01880000
*                                                                       01900000
R0       EQU   0                        CHNL PRG START PTR AND WORK REG 01920000
R1       EQU   1                        WORK REGISTER                   01940000
RCNT     EQU   1                        DADSM ENTRY COUNT REG           01960000
RTAB     EQU   2                        DADSMTBL POINTER                01980000
RIN      EQU   3                        INPUT POINTER                   02000000
R4       EQU   4                        OUTPUT POINTER                  02020000
ROUT     EQU   4                        OUTPUT POINTER                  02040000
R5       EQU   5                        CONVERTED OUTPUT POINTER        02060000
ROEND    EQU   5                        END OF OUTPUT POINTER           02080000
R6       EQU   6                        CONVERT ROUTINE WORK REGISTER   02100000
R7       EQU   7                        CONVERT ROUTINE WORK REGISTER   02120000
R8       EQU   8                        CONVERT ROUTINE WORK REGISTER   02140000
RERRPASS EQU   8                        ERROR PASS REGISTER             02160000
R9       EQU   9                        CONVERT ROUTINE WORK REGISTER   02180000
RA       EQU   10                       CONVERT ROUTINE LOOP COUNTER    02200000
RB       EQU   11                       I/O LINK REGISTER               02220000
RJFCB    EQU   11                       JFCB POINTER                    02240000
RBASE    EQU   12                       BASE REGISTER                   02260000
RWKA     EQU   13                       WORK AREA POINTER.              02280000
RBAK     EQU   14                       RETURN REGISTER                 02300000
RWRK     EQU   15                       WORK REGISTER                   02320000
RERR     EQU   15                       ERROR CODE REGISTER             02340000
RF       EQU   15                       INPUT CONVERT LOOP COUNTER      02360000
*                                                                       02380000
* * * * * * * * * * * * *                                               02400000
*                                                                       02420000
*                                                                       02440000
* * * * * * * * * * * * *                                               02460000
*                                                                       02470002
* OTHER EQUATES                                                         02510002
*                                                                       02520002
K2       EQU   2                        CONSTANT OF 2            Y02080 02530002
K4       EQU   4                        CONSTANT OF 4            Y02080 02540002
*                                                                       02560000
*REGISTER USAGE-                                                        02580000
*                                                                       02600000
         BALR  RBASE,0                                                  02620000
         USING DADSMSTR,RBASE                                           02640000
         USING ALLOCWKA,RWKA            WORK AREA ADDRESSABILITY Y02080 02660002
*                                                                       02700000
* INITIALIZE DADSM OUTPUT RECORD, DADSM INPUT AND OUTPUT ADDRESSES,     02720000
* AND SWITCHES.  PICK UP THE NUMBER OF ENTRIES IN THE DADSM TABLE,      02740002
* AND INITIALIZE POINTERS.                                              02760002
*                                                                       02780000
DADSMSTR EQU   *                        BRANCH LABEL             Y02082 02790002
         MODESET EXTKEY=DATAMGT         ASSUME DATAMGT KEY       Y02082 02800002
         MVC   DS1DSNAM(K4),FIVES       MOVE IN F5 KEY ID        Y02082 02810002
         MVC   IDAREA(5),FMTOUTAD       SET UP SRCH/ID FOR FIRST F5     02820000
         MVC   FMTINAD(5),FMTOUTAD      SET UP CURRENT F5 ADDRESS       02840000
         NI    SWITCH,FRSTF5            CLEAR ALL BUT 1ST F5 SWITCH     02860000
         OI    SWITCH,OUTBYP            SET READ/WRITE SWITCH           02880000
         SR    RCNT,RCNT                                                02920000
         IC    RCNT,AENTRYNM            GET NUMBER OF ENTRIES    Y02080 02940002
         LA    ROEND,F5OUT+108          LOAD END OF OUTPUT POINTER.     02960000
         LA    RTAB,AENTRIES            PT TO 1ST DADSMTBL ENTRY Y02080 02980002
RESTOUT  LA    ROUT,F5OUT+4             LOAD PTR TO START OF OUTPUT     03000000
RESTORE  XC    DS1DSNAM+4(136),DS1DSNAM+4  CLEAR OUTPUT AREA            03020000
*                                                                       03040000
* TEST FOR FIRST DADSM RECORD IN CORE.  IF FIRST F5 IS IN CORE GO       03060000
* CONVERT IT TO RTA-RTA+1.  IF FIRST F5 IS NOT IN CORE GO READ          03080000
* IT IN AND CONVERT IT.                                                 03100000
*                                                                       03120000
         TM    SWITCH,FRSTF5            IS THE 1ST F5 STILL IN CORE     03140000
         BZ    SETFSTRD                 BRANCH IF 1ST F5 NOT IN CORE    03160000
         BAL   RBAK,CONVF5              GO CONVERT THIS F5              03180000
         B     DUELOOP                                                  03200000
SETFSTRD OI    SWITCH,FRSTF5            SET FIRST F5 IN CORE SWITCH     03220000
FSTRD    BAL   RBAK,READF5              GO READ AND CONVERT 1ST F5      03240000
*                                                                       03260000
* THIS SECTION DETERMINES WHEN THE DADSM TABLE EXTENTS SHOULD BE        03280000
* MERGED INTO THE OUTPUT FORMAT 5                                       03300000
*                                                                       03320000
DUELOOP  CLR   ROEND,ROUT               IS OUTPUT AREA FULL.            03340000
         BNH   TEST1                    BRANCH IF OUTPUT IS FULL        03360000
COMZE    CLC   0(4,RIN),ZEROS           IS THIS INPUT EXTENT ZERO       03380000
         BE    CHEND                    BRANCH IF YES                   03400000
         LTR   RCNT,RCNT                IS DADSMTBL EMPTY               03420000
         BZ    MOVEOUT                  BRANCH IF EMPTY                 03440000
         LH    R0,2(RTAB)               GET THIS ENTRY RTA+1       UL17 03442000
         CH    R0,4(RTAB)               IS IT EQ TO NEXT ENTRY RTA UL17 03444000
         BNE   CMPSPACE                 BRANCH IF NO               UL17 03446000
         LH    R0,0(RTAB)               GET FIRST ENTRY RTA        UL17 03448000
         STH   R0,4(RTAB)              MERGE THIS WITH NEXT ENTRY  UL17 03450000
         LA    RTAB,4(RTAB)             STEP POINTER TO NEXT ENTRY UL17 03452000
         BCTR  RCNT,0                  DECREMENT ENTRIES COUNTER   UL17 03454000
         B     DUELOOP                  REPEAT MERGE LOOP          UL17 03456000
CMPSPACE EQU   *                                                   UL17 03458000
         CLC   2(2,RTAB),2(RIN)         IS THIS SPACE ALLOCATED.        03460000
         BL    ALTEREX                  CHECK FOR MIDDLE OR FRONT       03480000
*                                       ALLOCATION IF LOW               03500000
         BE    TOTALL                   CHECK FOR TOTAL OR REAR         03520000
*                                       ALLOCATION IF EQUAL             03540000
*                                                                       03560000
* MOVE FORMAT 5 DSCB EXTENTS TO OUTPUT AREA                             03580000
*                                                                       03600000
MOVEOUT  TM    SWITCH,DADBYP            IS WRITE DADSM PENDING          03620000
         BO    CHEXTRTN                 BRANCH IF YES                   03640000
         MVC   0(4,ROUT),0(RIN)         MOVE INPUT TO OUTPUT            03660000
INPUT    BCT   RWRK,UPDATEPT            BRANCH IF INPUT NOT EMPTY       03680000
         LA    ROUT,4(ROUT)             STEP OUTPUT POINTER             03700000
         OI    SWITCH,PRCNTL            SET PROCESS CONTROL SWITCH      03720000
*                                                                       03740000
* TEST FOR MULTIPLE FORMAT 5 RECORDS                                    03760000
*                                                                       03780000
CHECHAIN TM    DS5PTRDS+4,X'FF'         IS INPUT RECORD CHAINED.        03800000
         BZ    CHECALT                  NO - CHECK IF RECORD ALTERED    03820000
         MVC   ALLCCHHR,IDAREA          SAVE F5 CCHHR            XM2969 03830002
         TM    SWITCH,RCDALT            WAS DADSM RECORD ALTERED        03840000
         BC    1,BRTORDF5               BRANCH IF YES                   03860000
         XI    SWITCH,OUTBYP            FLIP/FLOP READ/WRITE SWITCH     03880000
*                                                                       03900000
* OUTPUT DADSM RECORD IS THE SAME AS THE INPUT DADSM RECORD.  BYPASS    03920000
* WRITE DADSM AND CLEAR THE OUTPUT AREA.                                03940000
*                                                                       03960000
TSTPROC  EX    0,RESTORE                CLEAR OUTPUT AREA               03980000
         LA    ROUT,F5OUT+4             RESET OUTPUT POINTER            04000000
         NI    SWITCH,X'FF'-PRCNTL      CLEAR PROCESS CONTROL SW Y02080 04020002
*                                                                       04040000
* LINK TO READ THE NEXT FORMAT 5 DSCB.                                  04060000
*                                                                       04080000
BRTORDF5 BAL   RBAK,SAVEID              GO READ IN NEXT F5              04100000
         B     DUELOOP                                                  04120000
*                                                                       04140000
* TEST IF LAST DADSM OUTPUT RECORD WAS ALTERED.  IF ALTERED WRITE       04160000
* DADSM, IF NOT ALTERED BYPASS THE WRITE DADSM.                         04180000
*                                                                       04200000
CHECALT  TM    SWITCH,RCDALT            WAS DADSM RECORD ALTERED        04220000
         BZ    EXIT1                    BRANCH IF NOT ALTERED           04240000
WRITEFNL OI    SWITCH,WRTFNL            SET WRITE FINAL RECORD SWITCH   04260000
         XC    CCHHRSAV,CCHHRSAV        CLEAR CHAIN ADDRESS      Y02080 04280002
         BAL   RBAK,WRITEF5             WRITING FINAL RECORD.           04300000
*                                                                       04320000
* SET UP TO BRANCH TO THE NEXT LOAD.                                    04340002
*                                                                       04360000
EXIT1    SR    RERRPASS,RERRPASS        CLEAR ERROR PASS REGISTER       04380000
ERREXIT  EQU   *                                                 A37231 04384020
         TM    SWITCH,NEWF5             TEST IF NEW F5 WAS       A37231 04388020
*                                       CREATED                  A37231 04392020
         BNO   NONEWF5                  BRANCH IF NOT            A37231 04396020
         NI    SWITCH,X'FF'-WRZERO-NEWF5  CLEAR WRITE ZERO DSCB  Y02080 04400002
*                                       AND NEW F5 CREATED BITS  Y02080 04404002
NONEWF5  EQU   *                                                 A37231 04408020
         L     RJFCB,AJFCBPTR           RESTORE JFCB POINTER     Y02080 04412002
         MODESET EXTKEY=ZERO            RETURN TO KEY ZERO       Y02082 04420002
*                                                                       04460000
         IECRES LOAD,EXTPR=(RWKA),MODID=ALLOCD2,BRANCH=DIRECT    Y02080 04480002
*                                                                       04500000
* TEST IF OTHER THAN THE FIRST DADSM RECORD HAS BEEN READ IN.           04520000
*                                                                       04540000
TEST1    TM    SWITCH,PRCNTL            IS PROCESS CONTROL SWITCH ON    04560000
         BZ    TSTCH                    BRANCH IF NO                    04580000
         TM    SWITCH,OUTBYP            IS WRITE BEFORE READ            04600000
         BZ    TSTCH                    BRANCH IF YES                   04620000
         MVC   CCHHRSAV,FMTOUTAD        OUTPUT F5 CHAIN ADDRESS  Y02080 04640002
         B     BRTOWR5                  GO TO WRITE F5 ROUTINE          04660000
*                                                                       04680000
* TEST IF ANOTHER DADSM RECORD EXISTS                                   04700000
*                                                                       04720000
TSTCH    TM    DS5PTRDS+4,X'FF'         IS INPUT DADSM RECORD CHAINED   04740000
         BZ    CHEXT                    NO-CHECK FOR ZERO INPUT EXTENT  04760000
WRITE1   EQU   *                        BRANCH LABEL             Y02080 04780002
         MVC   CCHHRSAV,DS5PTRDS        INSERT CHAIN ADDRESS     Y02080 04790002
BRTOWR5  BAL   RBAK,WRITEF5             GO WRITE OUT F5                 04800000
         B     DUELOOP                                                  04820000
*                                                                       04840000
* TEST IF THE FIRST DADSM RECORD IS STILL IN CORE.                      04860000
*                                                                       04880000
CHEND    TM    SWITCH,FRSTF5            IS THE 1ST DADSM RCD IN CORE    04900000
         BO    WRITEFNL                 BRANCH IF YES                   04920000
*                                                                       04940000
* TEST IF THERE HAS BEEN MORE INPUT DADSM RECORDS THAN OUTPUT DADSM     04960000
* RECORDS.  IF SO THEN SET UP TO ZERO OUT THE LAST INPUT DADSM RECORD.  04980000
*                                                                       05000000
TSTZERO  TM    SWITCH,OUTBYP            IS NBR OF WRTS EQUAL TO NBR RDS 05020000
         BO    WRITEZER                 BRANCH IF NO                    05040000
         MVC   IDAREA(5),FMTOUTAD       NO - SET UP SRCH/ID ADDRESS     05060000
         B     WRITEFNL                 GO WRITE LAST F5                05080000
WRITEZER OI    SWITCH,WRZERO            SET WRITE ZERO RECORD SWITCH    05100000
         MVC   FMTINAD(5),FMTOUTAD      SET UP ZERO RECORD ADDRESS      05120000
         B     WRITEFNL                 GO WRITE THE LAST F5            05140000
*                                                                       05160000
* THIS SECTION MERGES DADSM TABLE ENTRIES WITH F5 DSCB                  05180000
*                                                                       05200000
ALTEREX  OI    SWITCH,RCDALT            SET DADSM RECORD ALTERED SWITCH 05220000
*                                                                       05240000
* TEST IF A WRITE DADSM IS PENDING                                      05260000
*                                                                       05280000
         TM    SWITCH,DADBYP            IS DADSM WRITE BYPASS SWITCH ON 05300000
         BO    CHEXTRTN                 BRANCH IF YES                   05320000
         CLC   0(2,RTAB),0(RIN)         TEST FOR MIDDLE OR FRONT ALLOC  05340000
         BNE   MIDDLE                   LOW OR NOT EQUAL - MIDDLE ALLOC 05360000
FRONT    MVC   0(2,ROUT),2(RTAB)        FRONT ALLOC-INSERT NEW LOW RTA  05380000
         MVC   2(2,ROUT),2(RIN)         KEEP OLD UPPER RTA              05400000
*                                                                       05420000
* UPDATE POINTERS AND COUNTERS                                          05440000
*                                                                       05460000
DECRMNT  BCTR  RCNT,0                   DECREMENT TABLE ENTRY COUNTER   05480000
         LA    RTAB,4(RTAB)             STEP PTR TO NEXT DADSMTBL ENTRY 05500000
         B     INPUT                    GO CHECK FOR INPUT EMPTY        05520000
UPDATEPT LA    ROUT,4(ROUT)             UPDATE OUTPUT POINTER.          05540000
UPDATIN  LA    RIN,4(RIN)               UPDATE INPUT  POINTER.          05560000
         B     DUELOOP                                                  05580000
*                                                                       05600000
*                                                                       05620000
MIDDLE   MVC   0(2,ROUT),0(RIN)         MIDDLE ALLOC-INSERT OLD LOW RTA 05640000
         MVC   2(2,ROUT),0(RTAB)        INSERT NEW UPPER RTA            05660000
         LA    ROUT,4(ROUT)             UPDATE OUTPUT AREA POINTER      05680000
         CLR   ROEND,ROUT               IS OUTPUT AREA FULL             05700000
         BH    FRONT                    NO - INSERT NEXT EXTENT         05720000
         MVC   0(2,RIN),2(RTAB)         SAVE NEW LOW RTA IN INPUT       05740000
         LA    RTAB,4(RTAB)             STEP DADSMTBL POINTER           05760000
         BCTR  RCNT,0                   DECREMENT DADSMTBL ENTRY COUNT  05780000
         B     TEST1                    GO SET UP THIS DADSM WRITE      05800000
TOTALL   OI    SWITCH,RCDALT            SET DADSM RECORD ALTERED SWITCH 05820000
         CLC   0(2,RIN),0(RTAB)         IS ENTIRE EXTENT ALLOCATED.     05840000
         BNE   NOTALL                   NO - GO INSERT OLD LOW RTA      05860000
         SH    ROUT,FOUR                COMPENSATE FOR OUTPUT PTR STEP  05880000
         B     DECRMNT                  GO UPDATE POINTERS              05900000
NOTALL   TM    SWITCH,DADBYP            IS A WRITE DADSM PENDING        05920000
         BO    CHEXTRTN                 BRANCH IF YES                   05940000
         MVC   0(2,ROUT),0(RIN)          INSERT LOW OLD RTA             05960000
         MVC   2(2,ROUT),0(RTAB)        INSERT NEW UPPER RTA            05980000
         B     DECRMNT                  GO STEP POINTERS                06000000
*                                                                       06020000
* IS ALL OF DADSM PROCESSED                                             06040000
*                                                                       06060000
CHEXT    CLC   0(4,RIN),ZEROS           IS NEXT INPUT EXTENT ZERO       06080000
         BE    WRITEFNL                 BRANCH IF YES                   06100000
*                                                                       06120000
* THIS ROUTINE SEARCHES FOR HOLE IN VTOC TO WRITE NEW DSCB              06140000
*                                                                       06160000
SEARCH   MVC   FMTINAD(5),IDAREA        SAVE IDAREA                     06180000
         MVC   IDAREA(5),VTOCADR        START SEEK/SRCH AT F4 DSCB      06200000
         LA    R0,CCW1                  START CHANNEL PROG AT CCW1      06220000
         MVI   CCW5+4,X'30'             STOP CHANNEL PROG AFTER CCW5    06240000
         BAL   RB,CHANNLGO              GO SEARCH FOR A HOLE            06260000
         LH    R0,DS4DSREC              GET NUMBER OF AVAIL HOLES       06280000
         BCTR  R0,0                     DECREMENT COUNT BY ONE          06300000
         STH   R0,DS4DSREC              RESET NUMBER OF AVAIL HOLES     06320000
         MVC   CCHHRSAV,IDAREA          SAVE HOLE ADDRESS        Y02080 06340002
         MVC   IDAREA(5),FMTINAD        RESTORE IDAREA                  06360000
AFTERSRH BAL   RBAK,WRITEF5             GO WRITE THIS DADSM RECORD      06380000
         MVC   IDAREA,CCHHRSAV          SET NEXT OUTPUT F5 ADDR  Y02080 06400002
         MVC   FMTOUTAD,CCHHRSAV        SET NEXT OUTPUT F5 ADDR  Y02080 06420002
         OI    SWITCH,NEWF5             SET NEW F5 CREATED BIT   A37231 06430020
         B     DUELOOP                                                  06440000
*                                                                       06460000
* THIS CONVERTS DADSM ENTRIES FROM RTA-RTA+1 BACK TO XXYYZ BEFORE       06480000
* WRITING THE FORMAT 5 DSCB.                                            06500000
*                                                                       06520000
WRITEF5  LA    ROUT,F5OUT+4             LOAD POINTER TO OUTPUT AREA     06540000
         TM SWITCH,WRTFNL               IS WRITE FINAL RECORD SW ON     06560000
         BO    CHEXTRT                  BRANCH IF YES                   06580000
         ST    RBAK,PDLIST5             SAVE RETURN                     06600000
         OI    SWITCH,DADBYP            SET DADSM WRITE PENDING SW      06620000
         B     DUELOOP                  GO PROCESS DADSM                06640000
CHEXTRTN L     RBAK,PDLIST5             RELOAD RETURN                   06660000
CHEXTRT  EQU   *                        BRANCH LABEL             Y02080 06680002
         STM   R4,R5,CCW13              SAVE REGISTERS           Y02080 06690002
         LA    R5,DS1DSNAM+5            LOAD POINTER TO CONVERTED AREA  06700000
         LA    RA,26                    SET TO MAXIMUN NBR OF EXTENTS   06720000
         LH    R0,DS4DEVSZ+2            GET NBR OF TRKS/CYL             06740000
NEXTEXT  SR    R6,R6                    CLEAR HIGH DIVIDEND REGISTERS   06760000
         SR    R8,R8                                                    06780000
         SR    R9,R9                    CLEAR FULL CYLINDER REGISTER    06800000
         LH    R7,0(ROUT)               GET EXTENT RTA                  06820000
         LTR   R7,R7                    IS THIS EXTENT ZERO             06840000
         BNZ   NONZEROS                 BRANCH IF NOT ZERO       XM2969 06850002
         CH    RA,H26                   TEST FOR 26 EXTENTS      XM2969 06860002
         BNE   STORE                    BRANCH IF NOT EQUAL      XM2969 06870002
         OI    ACNVSW,AF5ZERO           SET BIT TO INDICATE      XM2969 06872002
*                                       26 ZERO EXTENTS          XM2969 06874002
         B     STORE                    CONTINUE                 XM2969 06876002
NONZEROS EQU   *                        BRANCH LABEL             XM2969 06878002
         LH    R9,2(ROUT)               GET EXTENT RTA+1                06880000
         DR    R6,R0                    CONVERT RTA TO CYL/TRK          06900000
         DR    R8,R0                    CONVERT RTA+1 TO CYL/TRKS       06920000
         SR    R9,R7                    CALCULATE CYL DIFFERENCE        06940000
         SR    R8,R6                    CALCULATE TRK DIFFERENCE        06960000
         LTR   R9,R9                    IS CYL DIFFERENCE ZERO          06980000
         BZ    STORE                    BRANCH IF YES                   07000000
         LTR   R6,R6                    IS RTA TRK REMAINDER ZERO       07020000
         BZ    STORE                    BRANCH IF YES                   07040000
         AR    R8,R0                    ADD TRK CONSTANT TO TRK DIFF    07060000
         BCTR  R9,0                     DECREMENT NBR OF CYLS           07080000
STORE    STH   R9,2(ROUT)               STORE NBR OF FULL CYLINDERS     07100000
         MVC   0(4,R5),0(ROUT)          MOVE RTA AND CYLS TO OUTPUT     07120000
         STC   R8,4(R5)                 STORE NBR OF EXCESS TRKS        07140000
         LA    R5,5(R5)                 STEP CONVERTED AREA POINTER     07160000
         LA    ROUT,4(ROUT)             STEP OUTPUT POINTER             07180000
         BCT   RA,NEXTEXT               BRANCH IF MORE OUTPUT TO PROC   07200000
         MVC   DS1PTRDS,CCHHRSAV        INSERT CHAIN ADDRESS     Y02080 07220002
INSERTF5 MVC   DS1DSNAM+4(40),DS1DSNAM+5  OPEN F5 HOLE                  07240000
         MVI   DS1FMTID,X'F5'           INSERT FORMAT ID                07260000
         LM    R4,R5,CCW13              RESTORE REGISTERS        Y02080 07280002
         MVI   CCW11+4,X'10'            SET SKIP FLAG FOR WRITE CHECK   07300000
         LA    R0,CCW6                  START CHANNEL PROG AT CCW6      07320000
         BAL   RB,CHANNLGO              GO WRITE THIS DADSM RECORD      07340000
         MVC   IDAREA(5),DS1PTRDS       SET UP NEXT OUTPUT DADSM ADDR   07360000
         EX    0,RESTORE                CLEAR OUTPUT AREA               07380000
         XI    SWITCH,OUTBYP            FLIP/FLOP READ/WRITE SWITCH     07400000
WRTRTN   EQU   *                        BRANCH LABEL             Y02080 07420002
         NI    SWITCH,X'FF'-DADBYP      CLEAR WRT PENDING SWITCH Y02080 07430002
         BR    RBAK                                                     07440000
*                                                                       07460000
* THIS SECTION READS IN FORMAT 5 (DADSM) DSCB AND CONERTS ENTRIES       07480000
* FROM XXYYZ TO RTA-RTA+1 FOR PROCESSING                                07500000
*                                                                       07520000
SAVEID   MVC   FMTINAD(5),IDAREA        SAVE IDAREA                     07540000
         MVC   FMTOUTAD(5),DS5PTRDS     SET UP NEXT OUTPUT DADSM ADDR   07560000
         NI    SWITCH,X'FF'-FRSTF5      CLEAR 1ST F5 IN CORE SW  Y02080 07580002
         MVC   IDAREA(5),DS5PTRDS       SET UP NEXT INPUT DADSM ADDR    07600000
READF5   LA    R0,CCW9                  START CHANNEL PROG AT CCW9      07620000
         MVI   CCW11+4,X'00'            CLEAR READ CCW FLAGS            07640000
         BAL   RB,CHANNLGO              GO READ A DADSM RECORD          07660000
         MVC   DS5KEYID+44(90),DS5KEYID+45   REMOVE FORMAT ID           07680000
CONVF5   LA    RIN,DS5AVEXT             RESET INPUT POINTER             07700000
         LR    R8,RIN                   SET UP PTR TP CONVERTED EXTENTS 07720000
         LA    RWRK,26                  SET TO MAX NUMBER OF EXTENTS    07740000
         SR    R6,R6                    CLEAR PICK UP REGISTER          07760000
TEST0    CLC   0(2,RIN),ZEROS           IS THIS EXTENT ZERO             07780000
         BE    INCRIN                   BRANCH IF YES                   07800000
         MVC   FULLWORD(K4),0(RIN)      ALIGN RTA & NBR OF CYLS  Y02080 07820002
         LH    R7,FULLWORD+K2           LOAD NBR OF CYLS         Y02080 07840002
         MH    R7,DS4DEVSZ+2            MULTIPLY BY TRACK CONSTANT      07860000
         IC    R6,4(RIN)                GET ODD TRACKS                  07880000
         AR    R7,R6                    ADD ODD TRACKS FOR TOAL TRACKS  07900000
         AH    R7,FULLWORD              ADD RTA                  Y02080 07920002
         STH   R7,2(R8)                 STORE RTA+1 IN INPUT CONV AREA  07940000
         MVC   0(K2,R8),FULLWORD        MOVE RTA TO CONV AREA    Y02080 07960002
         LA    R8,4(R8)                 UPDATE POINTER TO NEXT SPACE.   07980000
INCRIN   LA    RIN,5(RIN)               INCREMENT INPUT POINTER         08000000
         BCT   RF,TEST0                 BRANCH IF MORE EXTENTS          08020000
         LA    RIN,DS5AVEXT             RESET INPUT POINTER.            08040000
         XC    0(26,R8),0(R8)           CLEAR EXCESS BITS               08060000
         LA    RWRK,26                  RESET COUNT OF EXTENTS.         08080000
         XI    SWITCH,OUTBYP            FLIP/FLOP READ/WRITE SWITCH     08100000
         BZ    RETNBACK                 BRANCH IF READ BEFORE WRITE     08120000
         MVC   IDAREA(5),FMTINAD        SET UP NEXT OUTPUT WRT ADDR     08140000
RETNBACK BR    RBAK                                                     08160000
*                                                                       08180000
* EXECUTE CHANNEL PROGRAM TO READ OR WRITE F5                           08200000
*                                                                       08220000
CHANNLGO MVC   SEEK+3(4),IDAREA         INSERT SEEK ADDRESS FOR IOS.    08240000
         STM   RF,R1,REGSAVEA           SAVE REGISTERS                  08260000
         ST    R0,IOB+16                STORE STARTING CCW INTO IOB.    08280000
         MVI   ECB,X'00'                CLEAR STATUS BYTE OF ECB.       08300000
         EXCP  IOB                      EXECUTE CHHNNEL PROGRAM.        08320000
         WAIT  ECB=ECB                  WAIT FOR I/O COMPLETION         08340000
         LM    RF,R1,REGSAVEA           RESTORE REGISTERS               08360000
         TM    ECB,X'20'                TEST FOR PERM IO ERROR          08380000
         BCR   5,RB                     NO - CONTINUE PROCESSING        08400000
*                                                                       08420000
* ERROR - PERMANENT I/O ERROR                                           08440000
*                                                                       08460000
         LA    RERRPASS,X'0C'           SET ERROR CODE 'PERM I/O ERROR  08480000
         B     ERREXIT                                                  08500000
*                                                                       08520000
* * * * * * * * * * * * *                                               08540000
*                                                                       08560000
***   CONSTANTS                                                         08580000
*                                                                       08600000
* * * * * * * * * * * * *                                               08620000
*                                                                       08640000
FOUR     DC    H'4'                                                     08660000
FIVES    DC    X'05050505'                                              08680000
H26      DC    H'26'                    CONSTANT OF 26           XM2969 08690002
*                                                                       08700000
* TABLE OF MODULE IDS AND ENTRY POINT ADDRESSES                         08720002
*                                                                       08740000
         XCTLTABL ID=(ALLOCD2,5H),SVC=032,LENGTH=,BRT=YES        Y02080 08790002
         EJECT                                                   Y02080 08840002
DSCBWKAR IECALLWA EP,F4,D1=(1),D2=(5)   ALLOCATE WORK AREA       Y02080 09060002
SWITCH   EQU   ASWITCH                  ALLOCATE SWITCH EQUATE   Y02080 09110002
REGSAVEA EQU   IECREGSV+12              REGISTER SAVE AREA       Y02080 09160002
ZEROS    EQU   CCW4+4                   4 BYTES OF ZEROS                09480000
         EJECT                                                   Y02080 09530002
CVT      DSECT                          CVT DSECT                Y02080 09580002
         CVT                                                     Y02080 09630002
         END   IGG0325G                                          S21042 51040021
