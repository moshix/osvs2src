 TITLE 'IGG0CLCB - SECOND CSECT OF INTERFACE MAPPER'                    00010002
IGG0CLCB CSECT                                                          00020002
*A193924-193944,297710,C297800,D193960                         @YM04820 00020202
*A029996,306380,C192181                                        @YM07060 00020302
*A029434,C194113                                               @YM05170 00020402
********THIS ENTIRE PROGRAM WRITTEN BY                         @YL026ZB 00021002
*********************************************************************** 00240002
* STATUS -- CHANGE LEVEL                                              * 00250002
*    THIS MODULE IS A MODIFIED VERSION OF OS VS2-1 MODULE IKJEHCT1    * 00252002
*    WHICH WAS USED FOR TSO LISTCAT COMMAND.                          * 00254002
*                                                                     * 00260002
* FUNCTION --                                                         * 00270002
*    THIS IS THE MAIN PROCESSING MODULE FOR GENERIC LOCATE.           * 00280002
*    IT GETS CONTROL FROM IGG0CLCA VIA BALR 14,15                     * 00290002
*    AND WILL SEARCH THE SYSCTLG DATA SET USING THE CATALOG           * 00300002
*    MANAGEMENT ROUTINE LOCATE AND RETURN THE NAMES OF ALL DATA       * 00310002
*    SETS SETS THAT ARE FOUND TO HAVE THE REQUESTED HIGH LEVEL        * 00320002
*    QUALIFIERS AS THE FIRST PART OF THE DATASET NAME.                * 00322002
*    THE CIR SUBROUTINE IS USED TO DO THE ACTUAL LOCATES AND BUILD    * 00332002
*    LISTS OF QUALIFIERS TO BE PROCESSED.                             * 00342002
*                                                                     * 00580002
*                                                                     * 00660002
* ENTRY POINTS --                                                     * 00670002
*         IGG0CLCB                                                    * 00680002
*                                                                     * 00690002
* INPUT --                                                            * 00700002
*    INPUT CONSISTS OF FOUR REGISTERS CONTAINING THE FOLL0WING;       * 00710002
*                                                                     * 00712002
*          REG 0  - ADDRESS OF THE HIGH LEVEL QUALIFIERS OF THE       * 00720002
*                   DATASET NAMES TO BE LOCATED.                      * 00730002
*          REG 1  - ADDRESS OF THE USER'S WORK AREA WHERE THE LOCATED * 00732002
*                   DATASET NAMES ARE TO BE RETURNED.                 * 00734002
*          REG 2  - TCB ADDRESS.                                      * 00736002
*          REG 12 - ADDRESS OF SVC 26(CONTROLLER III) WORK AREA       * 00738002
*                                                                     * 00740002
* OUTPUT --                                                           * 00750002
*    A LIST OF DSNAMES FOUND CATALOGED UNDER THE REQUESTED HIGH       * 00760002
*    QUALIFIERS.                                                      * 00770002
*                                                                     * 00780002
* EXTERNAL REFERENCES --                                              * 00790002
*        IGG0CLCC - OS CATALOG MANAGEMENT                             * 00791002
*                                                                     * 00860002
* EXITS, NORMAL -- RETURN TO IGG0CLCA VIA BR 14 WITH RETURN CODE IN   * 00870002
*                  REGISTER 15 OF ZERO.                               * 00872002
*                                                                     * 00880002
* EXITS, ERROR -- RETURN TO IGG0CLCA VIA BR 14 WITH ONE OF THE        * 00890002
*                 FOLLOWING RETURN CODES IN REGISTER 15;              * 00894002
*                 4 - DATASET(S) NOT FOUND                            * 00896002
*                 8 - OUT OF CORE OR ESTAE MACRO FAILURE              * 00898002
*                12 - USER'S WORK AREA TOO SMALL                      * 00898402
*                                                                     * 00900002
* TABLES/WORK AREAS --                                                * 00910002
*    WORKCORE- MAIN WORK AREA CONTAINING SWITCHS, MACRO LIST FORMS,   * 00970002
*    POINTERS AND BLOCKS OF CORE USED IN NORMAL PROCESSING.           * 00974002
*                                                                     * 00990002
* ATTRIBUTES -- REENTRANT, READ-ONLY, REFRESHABLE                     * 01000002
*                                                                     * 01010002
* CHARACTER CODE DEPENDENCY -- CHARACTER CODE INDEPENDENT             * 01020002
*                                                                     * 01030002
* NOTES --                                                            * 01040002
*    REGISTER CONVENTIONS                                             * 01050002
*       R11 - BASE REGISTER                                           * 01051002
*       R12 - POINTER TO CONTROLLER III WORKAREA                      * 01052002
*       R13 - POINTER TO WORKCORE OF WHICH THE FIRST                  * 01053002
*             72 BYTES IS A SAVE AREA                                 * 01054002
*********************************************************************** 01060002
         EJECT                                                          01070002
R0       EQU   0                   REGISTER 0                           01110002
R1       EQU   1                    POINTS TO CURRENT SLOT IN MAINLINE  01120002
R2       EQU   2                   REGISTER 2                           01130002
R3       EQU   3                   REGISTER 3                           01140002
R4       EQU   4                   REGISTER 4                           01150002
R5       EQU   5                   REGISTER 5                           01160002
R6       EQU   6                   REGISTER 6                           01170002
R7       EQU   7                   REGISTER 7                           01180002
R8       EQU   8                   REGISTER 8                           01190002
R9       EQU   9                   REGISTER 9                           01200002
R10      EQU   10                  REGISTER 10                          01210002
R11      EQU   11                       MAIN BASE REG FOR THE PROGRAM   01220002
R12      EQU   12                  POINTS TO CNTRLR III WORKAREA        01230002
R13      EQU   13                           POINTS TO WORK AREA.        01240002
R14      EQU   14                  REGISTER 14                          01250002
R15      EQU   15                  REGISTER 15                          01260002
BLKSP    EQU   0                   SUBPOOL FOR LOCATE BLOCKS            01740002
WORKSP   EQU   0                   SUBPOOL FOR WORKAREA                 01760002
TTROFF   EQU   9                   OFFSET TO TTR FIELD                  01790002
CIRVOLS  EQU   X'04'               VOLUMES OPTION                       01800002
CIRDSN   EQU   X'01'               DSNAME  OPTION                       01810002
CIRIND   EQU   X'02'               INDEX   OPTION                       01820002
CIROFF   EQU   8                   OFFSET TO CIR ENTRY                  01850002
DSNENT   EQU   X'07'               CIR DSNAME CODE                      01860002
DSNLEN   EQU   9                   LENGTH OF DSNAME ENTRY               01870002
GDGENT   EQU   X'02'               GDG ENTRY CODE                       01880002
GDGLEN   EQU   16                  LENGTH OF GDG ENTRY                  01890002
INDENT   EQU   X'00'               INDEX ENTRY                          01900002
INDLEN   EQU   12                  LENGTH OF INDEX ENTRY                01910002
VOLENT   EQU   X'08'               VOLUMES WITH DSNAME ENTRY            01920002
VCBENT   EQU   X'01'               VOLUME CONTROL BLOCK ENTRY           01930002
VCBLEN   EQU   12                  LENGTH OF VCB ENTRY                  01940002
ALIENT   EQU   X'04'               ALIAS ENTRY                          01950002
ALILEN   EQU   20                  LENGTH OF ALIAS ENTRY                01960002
CVOLENT  EQU   X'05'               CVOL POINTER ENTRY                   01970002
CVOLLEN  EQU   19                  LENGTH OF CVOL ENTRY                 01980002
CIRVOLID EQU   259                 OFFSET TO VOLID IN CIR LIST (LOCATE) 01990002
ASTSW    EQU   X'80'               OPTMASK-ASTERISK IN INDEX STRUCTURE  02020002
GDGSW    EQU   X'20'               OPTMASK GDG SWITCH                   02070002
ANYOPT   EQU   X'07'               HISTORY + DATA + MEMBERS             02090002
GDGSWOFF EQU   X'DF'               AND MASK FOR GDGSW                   02120002
LOCSAVOF EQU   72                  OFFSET TO LOCAL SAVEAREA             02150002
HIGHBIT   EQU   X'80'              USED FOR TEST OF HIGH BIT            02190002
BLANK    EQU   C' '                BLANK                                02200002
CHARG    EQU   C'G'                G                                    02210002
CHARV    EQU   C'V'                V                                    02220002
COMPZONE EQU   X'F0'               MASK TO TEST FOR COMPLEMENT          02230002
FOXES    EQU   X'FF'               VALUE OF HEX FF                      02240002
ON       EQU   X'01'               SWITCH ON VALUE                      02250002
OFF      EQU   X'00'               SWITCH OFF VALUE                     02260002
EIGHT    EQU   X'08'               VALUE OF HEX 08                      02270002
FORTY5   EQU   45                  VALUE OF 45                          02280002
ENTPTR   EQU   4                   OFFSET OF 4 FOR CIR RTN              02290002
CHARA    EQU   C'A'                TYPE CODE FOR NON-VSAM DATASETS      02350002
HEX00    EQU   X'00'               BYTE COMPARE FIELD                   02360002
FORWARD  EQU   8                   OFFSET TO FORWARD CHAIN SAVE         02420002
BACKWARD EQU   4                   OFFSET TO BACKWARD CHAIN SAVE        02430002
L0       EQU   0                   USED FOR LENGTH OFFSETS WHEN NECC    02450002
L1       EQU   1                   LENGTH OFFSET OF ONE                 02460002
L3       EQU   3                   LENGTH OF 3                          02480002
L4       EQU   4                   LENGTH OF 4                          02490002
D0       EQU   0                   DISPLACEMENT OF 0                    02530002
D1       EQU   1                   DISPLACEMENT OF 1                    02540002
D2       EQU   2                   DISPLACEMENT OF 2                    02550002
D3       EQU   3                   DISPLACEMENT OF 3                    02560002
D4       EQU   4                   DISPLACEMENT OF 4                    02570002
D6       EQU   6                   DISPLACEMENT OF 6                    02590002
D8       EQU   8                   DISPLACEMENT OF 8                    02592002
L8       EQU   8                   LENGTH OF EIGHT                      02600002
PERIOD   EQU   C'.'                USED FOR PERIOD CONSTANT             02660002
D14      EQU   14                  OFFSET OF 14                         02730002
D15      EQU   15                  OFFSET OF 15                         02740002
L43      EQU   43                  LENGTH OF 43                         02750002
TWELVE   EQU   12                  USED FOR OFFSET OF 12                02760002
CIROPT   EQU   0                   OFFSET TO OPTION BYTE IN PARM LIST   02770002
CIRSRCH  EQU   4                   OFFSET TO WORD PTR TO TTR OR NAME    02780002
CIRWA    EQU   12                  OFFSET TO WORK AREA FOR LIST         02790002
ACIRSAVE EQU   16                  OFFSET TO WORK SAVE AREA PASSED      02800002
HEXFF    EQU   X'FF'               MASK FOR ALL BITS ON                 02810002
FRSTNTRY EQU   2                   OFFSET TO FIRST ENTRY IN A CTLG BLK  02820002
CODEOFF  EQU   0                   OFFSET TO CODE IN ENTRY FOR OUTPUT   02822002
NAMEOFF  EQU   1                   OFFSET TO NAME IN ENTRY FOR OUTPUT   02824002
ATTROFF  EQU   256                 OFFSET TO TTR OF NEXT CATALOG BLOCK  02826002
VOLOFF   EQU   259                 OFFSET TO VOLSER OF CATALOG CVOL     02828002
VOLSEROF EQU   4                   OFFSET TO VOLSER IN LINK ENTRY       02828402
GDGDATA  EQU   12                  OFFSET TO GDGDATA FIELD IN ENTRY     02828802
DEVCDEOF EQU   9                   OFFSET TO DEVICE CODE FIELD IN ENTRY 02829202
CVOLVOL  EQU   13                  OFFSET TO VOLSER OF CVOL IN ENTRY    02829602
NAMLEN   EQU   8                   LENGTH OF SIMPLE NAME                02829702
ONE      EQU   1                   ONE MEANS 1--USED MAINLY IN SHIFTING 02829802
CATENTLN EQU   12                  LENGTH OF BASIC CATALOG ENTRY        02829902
TTRLEN   EQU   3                   LENGTH OF TTR                        02833202
VOLLEN   EQU   6                   LENGTH OF VOLSER                     02835202
ALIASLEN EQU   12                  LENGTH OF ALIAS ENTRY IN LIST        02835602
DSLEN    EQU   9                   LENGTH OF BASIC PART OF LIST ENTRY   02836002
DATALEN  EQU   4                   LENGTH OF GDG DATA IN OUTPUT LIST    02836402
DEVCDELN EQU   4                   LENGTH OF DEVICE CODE IN CVOL ENTRY  02836502
INDXNTRY EQU   X'00'               INDEX ENTRY CODE                     02836602
DSNMNTRY EQU   X'07'               DS NAME ENTRY CODE                   02837702
MULTIVOL EQU   X'F8'               DS NAME ENTRY WITH MULTIVOLUMES      02838102
GDGENTRY EQU   X'02'               GDG ENTRY CODE                       02838502
VCBENTRY EQU   X'01'               VOLUME CONTROL BLOCK ENTRY CODE      02838602
ALIAS    EQU   X'04'               ALIAS ENTRY CODE                     02838702
OLDPTR   EQU   X'03'               OLD CVOL PTR CODE (BEFORE REL. 17)   02838802
NEWPTR   EQU   X'05'               NEW CVOL PTR CODE (AFTER RELEASE 17) 02841602
DSOPT    EQU   X'01'               OPT CODE FOR SIMPLE DSNAMES IN LIST  02843602
INDOPT   EQU   X'02'               OPT CODE FOR SIMPLE QUALS IN LIST    02844002
VOLOPT   EQU   X'04'               OPTION CODE FOR VOLS TO BE INCLUDED  02844102
OTHROPT  EQU   X'08'               OPTION CODE FOR ALL OTHER ENTRIES    02844202
ALLOPT   EQU   X'0F'               MASK FOR ALL OPTIONS                 02844302
INDXCODE EQU   X'00'               LIST CODE FOR AN INDEX ENTRY         02845202
VCBCODE  EQU   X'01'               VOLUME CONTROL BLOCK ENTRY LIST CODE 02845602
GDGCODE  EQU   X'02'               GDG ENTRY LIST CODE                  02846002
ALIASCDE EQU   X'04'               ALIAS ENTRY LIST CODE                02846102
CVOLCODE EQU   X'05'               CVOL ENTRY LIST CODE                 02846202
DSNWOVOL EQU   X'07'               SIMPLE DSNAME ENTRY WITHOUT VOLUMES  02847102
DSNWVOLS EQU   X'08'               SIMPLE DSNAME ENTRY WITH VOLUMES     02847602
LINKCODE EQU   X'FF'               LINK ENTRY LIST CODE                 02848002
INDXCBLK EQU   X'00'               FOR TESTING FOR INDEX CTL ENTRIES    02848102
TWENTY5  EQU   25                  MINIMUM COUNT FOR VALID INDEX BLOCK  02850402
VOLPLUS  EQU   X'0B'               ALL OPTIONS EXCEPT VOLOPT            02852402
CNT      EQU   11                  OFFSET TO CNT FIELD IN CTLG ENTRIES  02852802
ERR01    EQU   8                   VOLS ONLY REQUEST--INDEX BLOCK FOUND 02852902
ERR02    EQU   12                  VCB FOUND IN ERROR                   02853002
ERR03    EQU   4                   LOCATE FAILED-- RC STORED INTO LIST  02853802
ABENDCD  EQU   X'11A'              ABEND CODE WHEN UNDER USERS KEY      02854002
         EJECT                                                          02854602
         SAVE  (14,12),,*                                               02855402
         LR    R11,R15             SET UP ADDRESSABILITY                02857702
         USING IGG0CLCB,R11        USE R11 FOR MAIN BASE.               02860002
         LR    R4,R1               SAVE OUT AREA ADDRESS                02880002
         LR    R3,R0         SAVE DSNAME AREA ADDRESS                   02882002
         GETMAIN  R,LV=WORKSIZE,SP=WORKSP    GET INITIAL CORE           02890002
         ST    R13,BACKWARD(R1)      SET UP BACKWARD CHAIN              02900002
         ST    R1,FORWARD(R13)       SET UP FORWARD CHAIN               02910002
         LR    R13,R1              SETUP ADDRESSABILITY FOR WORK SPACE. 02920002
         USING WORKCORE,R13          USE R13 FOR WORKCORE BASE          02930002
         ST    R4,OUTADDR      SAVE OUT AREA ADDRESS                    02932002
         ST    R2,TCBADDR    SAVE ADDRESS OF TCB                        02934002
         MVI   TOOSMALL,OFF  INIT SWITCH TO OFF                         02936002
         MVI   KEYTYPE,OFF   INIT SWITCH TO SVC KEY                     02938002
*********************************************************************** 02938202
*                                                                       02938402
*        INITIALIZE CHAIN ADDRESSES OF CIR BLOCKS AND POINT TO START    02938602
*        OF CHAIN FROM FIRSTBLK LOCATION.                               02938802
*                                                                       02938902
*      BLOCKS ARE OBTAINED DYNAMICALLY AS NEEDED AND ARE KEPT           02939902
*      IN THE TABLE UNTIL THE END OF THE PROGRAM WHEN THEY ARE FREED.   02940202
*                                                                       02940402
*********************************************************************** 02940602
         LA    R1,CIRBLOCK         POINT AT FIRST BLOCK                 02940802
         ST    R1,FRSTBLK          SAVE ADDR OF FIRST CIR BLOCK         02941102
         ST    R1,CURNTBLK         INITIALIZE CURRENT CIR BLOCK PTR     02941302
         XC    ENTPTR(L4,R1),ENTPTR(R1) CLEAR CURRNT ENTRY PT           02941502
         LA    R1,CIRBLOCK+CIRBLKLN LINK FOUR BLOCKS TOGETHER           02941602
         ST    R1,CIRBLOCK         LINK ONE TO TWO                      02941702
         XC    ENTPTR(L4,R1),ENTPTR(R1) CLEAR CRRNT ENTRY PTR           02942002
         LA    R2,CIRBLKLN(R1)     LINK BLOCK TWO TO THREE              02942202
         ST    R2,D0(R1)           STORE PTR                            02942302
         XC    ENTPTR(L4,R2),ENTPTR(R2)   CLEAR CURRENT ENTPTR          02942402
         LA    R1,CIRBLKLN(R2)     LINK THREE TO FOUR                   02942502
         ST    R1,D0(R2)           STORE PTR                            02942602
         XC    D0(L8,R1),D0(R1)    CLEAR CHAIN ADDR -CURRENT ENTRY PTR  02942802
         XC    ESTAELST(16),ESTAELST ZERO ESTAE MACRO LIST FORM         02943302
         STM   R11,R13,SAVER11 SAVE REGS FOR ESTAE             @YM05170 02943402
         ESTAE ESTAEXIT,CT,PARAM=SAVER11,XCTL=NO,RECORD=YES,           *02943802
               MF=(E,ESTAELST) ISSUE ESTAE                              02943902
         LTR   R15,R15       IS RETURN CODE ZERO                        02944302
         BZ    ESTAEOK       YES,CONTINUE                               02944602
         MVC   RETCD,RC8     SET RETURN CODE                            02944902
         B     WRAPUP        EXIT                                       02945902
ESTAEOK  EQU   *                                                        02946102
         NI    OPTMASK,HEX00       CLEAR OPTION BYTE                    02946902
         MVI   FIRSTCIR,OFF        TURN OFF FIRST CIR SWITCH            02950002
         MVI   FIRSTIME,ON         TURN ON FIRST ALLOCATE SWITCH        02960002
         MVC   GETML(LILFS),GETMLMDL  MOVE LIST FORM OF MACROS TO WORK  02970002
         CLI   0(R3),L43     IS NODE TOO LARGE                          02971002
         BH    NOENTRY       YES,EXIT WITH RETURN CODE 4                02972002
         CLI   0(R3),L1      IS NODE TOO SMALL                          02973002
         BL    NOENTRY       YES,EXIT WITH RETURN CODE 4                02974002
         MVI   USERNODE,BLANK        PROPAGATE BLANKS FOR USERID        02980002
         MVC   USERNODE+D1(L'USERNODE-D1),USERNODE CLEAR USERND AREA    02990002
         SR    R1,R1         CLEAR REG 1                                02992002
         IC    R1,D0(R3)     PUT DSNAME LENGTH IN R1                    02994002
         LA    R7,D0(R3,R1)  POINT TO LAST BYTE OF NAME                 02995002
         CLI   D0(R7),PERIOD IS THIS A PERIOD                           02995202
         BNE   MOVENODE      NO,GO AHEAD WITH REQUEST                   02995402
         BCTR  R1,R0         YES,DECREMENT LENGTH BY ONE                02995602
         LTR   R1,R1         IS LENGTH NOW ZERO                         02995802
         BZ    NOENTRY       YES,CANNOT PROCESS SO EXIT WITH RC=4       02995902
MOVENODE EQU   *                                                        02996602
         STH   R1,USRNODEL   SAVE LENGTH                                02997302
         LA    R3,D1(R3)     POINT TO DSNAME                            02998002
         BCTR  R1,R0         DECREMENT LENGTH FOR MOVE                  02998402
         LA    R7,USERNODE   POINT TO HOLD AREA FOR NODE                02998802
         EX    R1,MOVE       MOVE NODE TO HOLD AREA                     02999202
         MVC   SAVENODE,USERNODE      SAVE NODE FOR BUILD NAME @YM07060 02999602
         XC    RETCD,RETCD         SET RETURN CODE TO ZERO INITIALLY    03000002
         XC    GDGCNT,GDGCNT       CLEAR GDG COUNT AREA                 03010002
         LA    R1,USERNODE         POINT AT NAME TO SEARCH ON           05560002
         ST    R1,CIRINDX          STORE IN PARM LIST                   05570002
         LA    R1,CIRSAVE          CIR SAVE AREA                        05580002
         ST    R1,CIRWK2           STORE IN LIST                        05590002
         XC    CIRVOL,CIRVOL       CLEAR VOLUME PTR                     05600002
MAIN00A  XC    CIRPARM,CIRPARM      CLEAR OPTIONS                       05610002
         OI    CIRPARM,CIRDSN+CIRIND REQUEST DSNAMES AND INDEX NAMES    05660002
         BAL   R8,OBTBLK           GET FIRST FREE BLK                   05670002
         MVI   FIRSTCIR,ON         TURN ON FIRST CIR SWITCH             05680002
         BAL   R8,CIRROUT          CALL CIR                             05690002
         LTR   R15,R15             TEST R15 FOR 0                       05700002
         BZ    MAIN00              YES, GO PROCESS                      05710002
         MVC   RETCD,RC4     INDICATE DATASET NOT FOUND                 05720002
         B     WRAPUP              GO TERMINATE                         05760002
         EJECT                                                          05770002
MAIN00   EQU   *                                                        05780002
*********************************************************************** 05790002
*                                                                       05800002
* CHECK FOR A NULL LIST AND RETURN TO CALLER WITH RC OF 4 IF THE INDEX  05810002
* STRUCTURE SPECIFIED, OR USERID, HAD NO DATA SETS CATALOGED            05820002
* UNDER IT.                                                             05830002
*                                                                       05840002
*********************************************************************** 05850002
         L     R1,CURNTBLK         GET CURRENT BLK POINTER              05860002
         LA    R6,D8(R1)           POINT AT LIST                        05870002
         ST    R6,D4(R1)           MAKE FIRST ENTRY CURRENT             05880002
         CLI   D0(R6),FOXES        CHECK FOR LINK ENTRY                 05890002
         BNE   MAIN01              NO, PROCESS LIST                     05900002
         CLC   D1(L3,R6),ZERO      SEE IF TTR IS ZERO                   05910002
         BE    NOENTRY             YES, TERMINATE                       05920002
MORDATA  LA    R1,D4(R6)           PT AT VOLSER IN LINK ENTRY           05930002
         MVC   CIRCVOL(L'CIRCVOL),D0(R1) MOVE CVOL TO SAVE AREA         05940002
         LA    R1,CIRCVOL          POINT AT CVOL                        05950002
         ST    R1,CIRVOL           STORE INTO LIST                      05960002
         LA    R1,D1(R6)           POINT AT TTR                         05970002
         MVC   CIRTTR(L'CIRTTR),D0(R1) MOVE TTR TO SAVE AREA            05980002
         LA    R1,CIRTTR           ADDRESS OF TTR FOR PARM LIST         05990002
         ST    R1,CIRINDX          STORE IN LIST                        06000002
         OI    CIRINDX,ASTSW       TURN ON TTR INDICATOR BIT            06010002
         B     MAIN00A             TRY AGAIN                            06020002
NOENTRY  EQU   *                                                        06030002
         MVC   RETCD,RC4     INDICATE DATASET NOT FOUND                 06040002
         B     WRAPUP              GO TERMINATE                         06060002
*                                                                       06070002
MAIN01   EQU   *                                                        06080002
*********************************************************************** 06090002
*                                                                       06100002
*        ENTRY IS MADE TO THIS ROUTINE WITH REG 6 POINTING TO A NEW     06110002
*        LIST ELEMENT. THE LIST ENTRY IS ANALYZED AND THE APPROPRIATE   06120002
*        ROUTINE IS USED TO PROCESS IT. DSNAME ENTRIES ARE USED TO      06130002
*        COMPLETE FULLY QUALIFIED DATA SET NAMES, AND ARE RETURNED      06140002
*        TO THE CALLERS OUTPUT AREA                                     06150002
*                                                                       06160002
*********************************************************************** 06170002
         CLI   D0(R6),DSNENT       DSNAME ENTRY                         06180002
         BE    DSNAMRT             YES, GO BUILD FULL DSNAME            06190002
*                                                                       06200002
         CLI   D0(R6),VOLENT       DSNAME ENTRY WITH VOLUMES            06210002
         BE    DSNAMRT             YES, GO BUILD FULL DSNAME            06220002
*                                                                       06230002
         CLI   D0(R6),VCBENT       VOLUME CONTROL BLOCK ENTRY           06240002
         BE    VCBROUT             YES, GO PROCESS--BUILD FULL DSNAME   06250002
*                                                                       06260002
         CLI   D0(R6),INDENT       INDEX ENTRY                          06270002
         BE    INDEXRT             YES, GO PROCESS-GET A NEW LIST       06280002
*                                                                       06290002
         CLI   D0(R6),GDGENT       GENERATION DATA GROUP ENTRY          06300002
         BE    GDGROUT             YES, GO PROCESS SIMPLE NAMES         06310002
         CLI   D0(R6),FOXES        CHECK FOR LINK ENTRY                 06320002
         BE    MAIN01A             PROCESS NORMALLY                     06330002
         CLC   D1(L3,R6),ZERO      SEE IF TTR IS ZERO                   06340002
         BE    WRAPUP              GO TERMINATE                         06350002
         B     MORDATA             MORE DATA TO BE PROCESSED            06360002
*                                                                       06370002
MAIN01A  EQU   *                                                        06380002
         BAL   R8,POINTER          GO UPDATE CURRENT ENTRY PTR TO NEXT  06390002
         L     R6,CURNTBLK         GET CURRENT BLOCK POINTER            06400002
         L     R6,D4(R6)           GET CURRENT ENTRY POINTER            06410002
         B     MAIN01              GO ANALYZE ENTRY TYPE.               06420002
       EJECT                                                            06430002
INDEXRT  DS    0H                                                       06440002
*********************************************************************** 06450002
*                                                                       06460002
*        THIS ROUTINE GETS CONTROL WHEN AN INDEX ENTRY IS DISCOVERED    06470002
*        IN THE LIST FROM CIR. IT SETS UP A PARAMETER LIST FOR CIR      06480002
*        AND USES OBTBLK TO ALLOCATE ANOTHER BLOCK FOR A NEW LIST       06490002
*        OF LOWER QUALIFIERS. IF THE NEW LIST IS FOUND TO BE EMPTY,     06500002
*        THE NEXT ENTRY IS PROCESSED.OTHERWISE THE NEW LIST             06510002
*        IS MADE CURRENT.                                               06530002
*              CURNTBLK POINTS TO CURRENT CIR LIST                      06540002
*                                                                       06550002
*********************************************************************** 06560002
         XC    CIRPARM,CIRPARM     CLEAR CIR OPTIONS                    06570002
         LA    R1,TTROFF(R6)       POINT AT TTR FIELD IN INDEX ENTRY    06580002
         ST    R1,CIRINDX          STORE IN CIRPARM LIST                06590002
         OI    CIRINDX,HIGHBIT     TURN ON HIGH BIT EQUALTTR            06600002
         L     R1,CURNTBLK         GET CURNT BLOCK ADDRESS              06610002
         LA    R1,CIRVOLID+VOLENT(R1) POINT PAST CHAIN ADDRS TO VOLSER  06620002
*                                AT END OF CIR LIST.                    06630002
         ST    R1,CIRVOL           PUT PTR IN PARM LIST                 06640002
IND00    EQU   *                                                        06680002
         OI    CIRPARM,CIRDSN+CIRIND REQUEST DSNAMES AND INDEXNAMES     06690002
         BAL   R8,OBTBLK           GET FIRST FREE BLOCK                 06700002
         BAL   R8,CIRROUT          CALL CIR                             06710002
         LTR   R15,R15             TEST RETURN CODE                     06720002
         BNZ   CIR08               NONZERO, LET CIRROUT HANDLE ERROR    06730002
*                                                                       06740002
*        CHECK FOR EMPTY INDEX STRUCTURE                                06750002
*                                                                       06760002
         L     R1,CURNTBLK         GET ADDR OF NEW BLOCK                06770002
         LA    R6,D8(R1)           POINT AT FIRST ENTRY                 06780002
         ST    R6,D4(R1)           MAKE IT CURRENT ENTRY                06790002
         CLI   D0(R6),FOXES        CHECK FOR LINK ENTRY                 06800002
         BNE   MAIN01              NO, GO PROCESS LIST                  06810002
         CLC   D1(D3,R6),ZERO      SEE IF TTR IS ZERO                   06820002
         BE    EMPTYIND            YES, IT IS AN EMPTY INDEX            06830002
         LA    R1,D4(R6)           POINT AT VOLSER IN LINK ENTRY        06840002
         ST    R1,CIRVOL           PUT INTO CIR PARM LIST               06850002
         LA    R1,D1(R6)           POINT AT TTR                         06860002
         ST    R1,CIRINDX          STORE INTO LIST                      06870002
         OI    CIRINDX,ASTSW       INDICATE TTR ENTRY                   06880002
         XC    CIRPARM,CIRPARM     CLEAR OPTION BYTES                   06890002
         B     IND00               TRY AGAIN                            06900002
EMPTYIND EQU   *                                                        06910002
         XC    D4(L4,R1),D4(R1)    FREE CURRENT BLK                     06920002
         B     MAIN01A       GO PROCESS NEXT ENTRY                      06930002
       EJECT                                                            06950002
DSNAMRT  DS    0H                                                       06960002
VCBROUT  DS    0H                                                       06970002
*********************************************************************** 06980002
*                                                                       06990002
*        THIS ROUTINE IS GIVEN CONTROL WHEN A DATA SET ENTRY OR         07000002
*        VOLUME CONTROL BLOCK ENTRY IS FOUND IN THE LIST FROM CIR.      07010002
*        A CHECK IS MADE TO DETERMINE IF A GENERATION DATA GROUP IS     07020002
*        BEING PROCESSED. IF SO, THE GENERATION PORTION OF THE SIMPLE   07030002
*        NAME MUST BE COMPLEMENTED. THEN THE FULLY QUALIFIED NAME,      07040002
*        WITH THE NODE, IS CONSTRUCTED AND RETURNED TO THE CALLERS      07050002
*        OUTPUT AREA.                                                   07051002
*              REG 6 POINTS TO CURRENT ENTRY                            07080002
*                                                                       07090002
*********************************************************************** 07100002
*  CHECK FOR GENERATION DATA GROUP DATA SET NAME                        07110002
         CLI   D1(R6),CHARG        TEST FOR A G                         07120002
         BNE   GDGTEST             NO, CONTINUE                         07130002
         CLI   D6(R6),CHARV        TEST FOR A V                         07140002
         BNE   GDGTEST             NO, CONTINUE                         07150002
         L     R1,FOUR             SET LOOP CONTROL                     07160002
GDGLOOP  LA    R7,D0(R1,R6)        POINT TO CHARACTER TO BE TESTED      07170002
         TM    D1(R7),COMPZONE     TEST FOR COMPLEMENTED NUMBER         07180002
         BNZ   GDGTEST             NOT COMPLEMENT, CONTINUE             07190002
         BCT   R1,GDGLOOP          YES, CHECK NEXT CHARACTER            07200002
         XC    D2(L4,R6),FOXMASK   COMPLEMENT GENERATION NUMBER         07210002
GDGTEST  TM    OPTMASK,GDGSW       SEE IF GDG SWITCH IS ON              07220002
         BNO   DSN01               NO, SKIP COMPLEMENT                  07230002
         L     R1,GDGCNT           GET NUMBER OF DATASETS REMAINING     07240002
         BCT   R1,DSN01A           DECREMENT COUNT                      07250002
         NI    OPTMASK,GDGSWOFF    TURN OFF GDGSW                       07260002
DSN01A   ST    R1,GDGCNT           SAVE UPDATED COUNT                   07270002
DSN01    EQU   *                                                        07280002
         BAL   R8,BUILDNAM         USE PORTION OF OBTBLK ROUT TO BUILD  07300002
*                                  DSNAME                               07310002
         B     MAIN01A             PROCESS NORMALLY                     07800002
         EJECT                                                          07810002
GDGROUT  DS    0H                                                       07820002
*********************************************************************** 07830002
*                                                                       07840002
*        THIS ROUTINE IS ENTERED IF A GDG ENTRY IS FOUND IN THE CIR     07850002
*        LIST. IT TURNS ON THE GDGSW SWITCH SO THAT THE DSNAME ENTRY    07860002
*        ROUTINE WILL KNOW THAT THE GENERATION NUMBER IN THE SIMPLE     07870002
*        NAMES WILL REQUIRE COMPLEMENTING. A CHECK IS MADE TO SEE       07880002
*        IF ANY GENERATIONS EXIST. IF NOT, THE ENTRY IS SKIPPED.        07890002
*        IF IT IS NOT EMPTY THE COUNT IS KEPT AND DECREMENTED EACH      07900002
*        TIME A GENERATION NAME IS PROCESSED. CONTROL IS PASSED TO THE  07910002
*        INDEX ENTRY ROUTINE TO READ IN THE LIST OF NAMES THROUGH CIR.  07920002
*                                                                       07940002
*              REG 6 POINTS TO CURRENT ENTRY                            07950002
*                                                                       07960002
*********************************************************************** 07970002
         XR    R1,R1               CLEAR REG FOR IC                     07980002
*  COUNT IS LAST 2 BYTES OF ENTRY                                       07990002
         IC    R1,D14(R6)          GET FIRST BYTE                       08000002
         SLL   R1,L8               SHIFT FIRST BYTE OVER                08010002
         IC    R1,D15(R6)          GET SECOND CHARCTER                  08020002
         LTR   R1,R1               IS COUNT ZERO                        08030002
         BZ    MAIN01A             YES,GO PROCESS NEXT ENTRY            08040002
         ST    R1,GDGCNT           NO, SAVE COUNT                       08050002
         OI    OPTMASK,GDGSW       TURN ON GDG SWITCH                   08060002
         B     INDEXRT             GO GET LIST FROM CIR                 08070002
         EJECT                                                          08110002
WRAPUP   DS    0H                                                       08120002
*********************************************************************** 08130002
*                                                                       08140002
*        THIS ROUTINE GETS CONTROL WHEN COMPLETE OR                     08150002
*        AN ERROR RESULTING IN TERMINATION OCCURS. IT FREES ALL         08160002
*        DYNAMIC CORE OBTAINED.                                         08170002
*                                                                       08190002
*********************************************************************** 08200002
         ESTAE 0             REMOVE ESTAE                               08201002
         L     R1,FRSTBLK        GET PTR TO FIRST CIR BLOCK             08202002
         L     R1,CIRBLKLN*3(R1) GET CHAIN PTR OUT OF LAST BLOCK        08210002
WRAPUP00 C     R1,ZERO             IS IT ZERO                           08250002
         BE    WRAPUP01            YES, ALL EXTRA BLOCKS ARE FREED      08260002
         L     R2,D0(R1)           CHAIN PTR TO NEXT                    08270002
         FREEMAIN R,LV=CIRBLKLN,A=(1),SP=BLKSP                          08280002
         LR    R1,R2               COPY CHAIN PTR                       08290002
         B     WRAPUP00            GO CHECK NEXT PTR                    08300002
WRAPUP01 EQU   *                                                        08310002
         L     R2,RETCD      SAVE RETURN CODE ACCROSS FREEMAIN          08320002
         CLI   TOOSMALL,ON   WAS USER AREA EXCEEDED?                    08330002
         BNE   WRAPUP02      NO,LEAVE RETURN CODE AS IS                 08340002
         L     R2,RC12       YES,INDICATE USER AREA EXCEEDED            08350002
WRAPUP02 EQU   *                                                        08360002
         L     R3,D4(R13)    SAVE PREVIOUS SAVEAREA ADDRESS             08370002
         FREEMAIN R,LV=WORKSIZE,A=(13),SP=WORKSP                        08380002
         LR    R15,R2        RESET RETURN CODE                          08390002
         LR    R13,R3        RESET PREVIOUS SAVE AREA ADDRESS           08400002
         RETURN (14,12),RC=(15)                                         08450002
         EJECT                                                          13300002
POINTER  DS    0H                                                       17220002
*********************************************************************** 17230002
*                                                                       17240002
*        THIS ROUTINE IS ENTERED TO UPDATE THE CURRENT ENTRY POINTER    17250002
*        IN THE CURRENT BLOCK. THE CURRENT BLOCK IS DETERMINED BY       17260002
*        SEARCHING THE CHAIN FOR THE FIRST ONE WITH A ZERO ENTRY        17270002
*        POINTER AND THEN BACKING UP ONE. THE CURRENT ENTRY TYPE IS     17280002
*        DETERMINED AND THE POINTER IS ADVANCED ACCORDINGLY. IF THE     17290002
*        NEXT ENTRY IS A LINK ENTRY WHICH CONTAINS A NONZERO TTR,       17300002
*        THE CIR IS CALLED TO PROVIDE THE NEXT BLOCK OF ENTRIES. IF     17310002
*        THE TTR IS ZERO, THE CURRENT BLOCK IS RELEASED AND THE         17320002
*        PRECEDING BLOCK IS CONSIDERED. WHEN ALL BLOCKS ARE PROCESSED,  17330002
*        IE, THE CURRENT BLOCK EQUALS THE FIRST BLOCK AND THE ENTRY     17340002
*        POINTER IS ZERO, THE WRAPUP ROUTINE IS ENTERED.                17350002
*                                                                       17360002
*********************************************************************** 17370002
         STM   R0,R9,LOCSAVOF(R13)  SAVE REGISTERS LOCALLY              17380002
PTR00    L     R1,FRSTBLK          GET PTR TO FIRST BLOCK               17390002
         CLC   D4(L4,R1),ZERO      SEE IF PTR IS ZERO                   17400002
         BE    WRAPUP              YES, WE ARE FINISHED                 17410002
PTR01    ST    R1,PREVBLK          SAVE THIS BLOCK PTR                  17420002
         L     R1,D0(R1)           GET PTR TO NEXT BLOCK                17430002
         CLC   D4(L4,R1),ZERO      SEE IF PTR IS ZERO                   17440002
         BE    PTR02               YES,PROCESS LAST PTR                 17450002
         CLC   D0(L4,R1),ZERO      NO, CHECK CHAIN ADDRESS              17460002
         BNE   PTR01               IF NOT ZERO, TRY NEXT BLOCK.         17470002
         B     PTR03               GO AROUND NEXT INSTRUCTION           17480002
PTR02    L     R1,PREVBLK          GET PREVIOUS BLOCK POINTER.          17490002
PTR03    L     R2,ENTPTR(R1)       PICK UP CURRENT ENTRY POINTER        17500002
         CLI   D0(R2),DSNENT       CHECK FOR DSNAME ENTRY               17510002
         BNE   PTR04               NO, CHECK NEXT CODE                  17520002
         LA    R2,DSNLEN(R2)       UPDATE PTR                           17530002
         B     PTRFFCHK            GO CHECK FOR LINK ENTRY              17540002
*                                                                       17550002
PTR04    CLI   D0(R2),GDGENT       GDG ENTRY                            17560002
         BNE   PTR05               NO, CHECK NEXT                       17570002
         LA    R2,GDGLEN(R2)       BUMP PTR                             17580002
         B     PTRFFCHK            GO CHECK FOR LINK ENTRY              17590002
*                                                                       17600002
PTR05     CLI   D0(R2),INDENT      INDEX ENTRY                          17610002
         BNE   PTR06               NO, CHECK NEXT                       17620002
         LA    R2,INDLEN(R2)       BUMP PTR                             17630002
         B     PTRFFCHK            GO CHECK FOR LINK ENTRY              17640002
*                                                                       17650002
PTR06    CLI  D0(R2),VOLENT        VOLUMES WITH DSNAME                  17660002
         BNE   PTR07               NO, CHECK NEXT                       17670002
         XR    R4,R4               CLEAR FOR INSERT CHARACTER           17680002
         IC    R4,DSNLEN+D1(R2)       GET VOLUME COUNT                  17690002
         LA    R5,VCBLEN           LENGTH OF EACH ENTRY IN VOLUME LIST  17700002
         MR    R4,R4               TOTAL LENGTH OF LIST                 17710002
         LA    R2,DSNLEN+D2(R2,R5)    BUMP PTR BEYOND ENTRY             17720002
         B     PTRFFCHK            GO CHECK FOR LINK ENTRY.             17730002
*                                                                       17740002
PTR07    CLI   D0(R2),VCBENT       VOLUME CONTROL BLOCK PTR ENTRY       17750002
         BNE   PTR08               NO, CHECK NEXT                       17760002
         LA    R2,VCBLEN(R2)       BUMP POINTER                         17770002
         B     PTRFFCHK            CHECK FOR LINK ENTRY                 17780002
*                                                                       17790002
PTR08    CLI   D0(R2),ALIENT       ALIAS ENTRY                          17800002
         BNE   PTR09               NO, CHECK NEXT                       17810002
         LA    R2,ALILEN(R2)       BUMP POINTER                         17820002
         B     PTRFFCHK            CHECK FOR LINK ENTRY                 17830002
*                                                                       17840002
PTR09    CLI   0(R2),CVOLENT       CHECK FOR CVOL PTR ENTRY             17850002
         BNE   PTR10               NO, MUST BE LINK ENTRY               17860002
         LA    R2,CVOLLEN(R2)      BUMP POINTER                         17870002
PTRFFCHK EQU   *                                                        17880002
         ST    R2,ENTPTR(R1)       UPDATE ENTRY PTR IN BLOCK            17890002
         CLI   D0(R2),FOXES        CHECK FOR LINK ENTRY                 17900002
         BNE   PTREXIT             GO TO EXIT IF NOT LINK ENTRY         17910002
PTR10    CLC   D1(L3,R2),ZERO      IS TTR ZERO                          17920002
         BNE   PTR11               NO, GET ANOTHER BLOCK                17930002
         XC    D4(L4,R1),D4(R1)    CLEAR ENTRY POINTER                  17940002
         B     PTR00               GO BACK TO START OF ROUTINE          17950002
PTR11    EQU   *                                                        17960002
*                                                                       17970002
*        A LINK ENTRY WAS FOUND WITH A NONZERO TTR. UNCHAIN LAST        17980002
*        BLOCK AND PASS IT BACK TO CIR TO COMPLETE LIST.                17990002
*                                                                       18000002
         XC    D4(L4,R1),D4(R1)     UNCHAIN LAST BLOCK                  18010002
         LA    R3,D8(R1)           POINT AT AREA FOR LIST FROM CIR      18020002
         ST    R3,CIRWK1           STORE IN PARM LIST                   18030002
         LA    R3,D1(R2)           POINT AT TTR                         18040002
         MVC   CIRTTR(L'CIRTTR),D0(R3)  MOVE TTR TO SAVE AREA           18050002
         LA    R1,CIRTTR           POINT AT TTR OF NEXT BLOCK           18060002
         ST    R1,CIRINDX          PUT IN LIST                          18070002
         OI    CIRINDX,ASTSW       TURN ON BIT INDICATING TTR           18080002
         LA    R3,D3(R3)           POINT AT VOLID FOR CATALOG           18090002
         MVC   CIRCVOL(L'CIRCVOL),D0(R3)  MOVE CVOL TO SAVE AREA        18100002
         LA    R1,CIRCVOL          GET ADDRESS OF CVOL                  18110002
         ST    R1,CIRVOL           PUT ADDRESS IN LIST                  18120002
         XC    CIRPARM,CIRPARM     CLEAR OPTION BYTE                    18130002
         TM    OPTMASK,ANYOPT      CHECK FOR HISTORY, VOLUMES, MEMBERS  18140002
         BZ    PTR12               NONE, SKIP VOLUME REQUEST OPT        18150002
         OI    CIRPARM,CIRVOLS     REQUEST VOLUMES                      18160002
PTR12    OI    CIRPARM,CIRDSN+CIRIND REQUEST DSNAMES AND INDEX NAMES    18170002
*                                                                       18180002
         BAL   R8,CIRROUT          CALL CIR                             18190002
         LTR   R15,R15             CHECK R15 FOR ZERO                   18200002
         BNZ   CIR08               NO, PROCESS ERROR BACK IN CIRROUT    18210002
*                                                                       18220002
         L     R2,CIRWK1           GET AREA POINTER                     18230002
         LR    R1,R2                                                    18240002
         LA    R3,D8               GET DECREMENT FACTOR                 18250002
         SR    R1,R3               POINT AT LINK FIELDS OF BLOCK        18260002
         ST    R2,D4(R1)           STORE IN BLOCK                       18270002
PTREXIT  EQU   *                                                        18280002
         ST    R1,CURNTBLK         POINT TO NEW BLOCK AS CURRENT        18290002
         LM    R0,R9,LOCSAVOF(R13)  REFRESH REGISTERS                   18300002
         BR    R8                  RETURN TO CALLER                     18310002
CIRROUT  EQU   *                                                        18320002
         LA    R1,CIRPARM          PARM LIST FOR CALL MACRO             18330002
         LA    R15,CIR       GET CIR ADDRESS                            18332002
         BALR  R14,R15       CALL CIR SUBROUTINE                        18340002
         B     CIRRC(R15)          ANALYZE RETURN CODE                  18360002
*                                                                       18370002
CIRRC    B     CIROK               RC=00 SUCCESSFUL OPERATION           18380002
         B     CIR04               RC=04 LOCATE FAILED                  18390002
         B     CIR08               RC=08 VOL REQUEST-INCOMPATIBLE OPT   18400002
         B     CIR12               RC=12 VOLUMES FOUND-INCOMPATIBLE OPT 18410002
CIR04    EQU   *                                                        18420002
CIR08    EQU   *                                                        18430002
         MVC   RETCD,RC4     INDICATE DATASET NOT FOUND                 18440002
         B     WRAPUP        TERMINATE                                  18450002
CIROK    EQU   *                                                        18630002
CIR12    EQU   *                                                        18640002
         BR    R8                  RETURN TO CALL.                      18650002
         EJECT                                                          18660002
OBTBLK   DS    0H                                                       18670002
*********************************************************************** 18680002
*                                                                       18690002
*        THIS ROUTINE IS ENTERED VIA 'BAL R8,OBTBLK' AND IS USED TO     18700002
*        OBTAIN A NEW BLOCK TO BE USED AS A WORK AREA FOR CIR AND       18710002
*        TO BECOME THE CURRENT BLOCK. IF NO FREE BLOCKS ARE AVAILABLE   18720002
*        THEN A CONDITIONAL GETMAIN IS ISSUED AND THE NEW BLOCK IS      18730002
*        ADDED ON THE CHAIN. IF THE GETMAIN FAILS, CONTROL IS           18740002
*        RETURNED TO THE CALLER WITH RETURN CODE OF 8.                  18750002
*                                                                       18770002
*********************************************************************** 18780002
         STM   R0,R9,LOCSAVOF(R13)  SAVE REGISTERS LOCALLY.             18790002
         L     R1,FRSTBLK          GET PTR TO FIRST BLOCK.              18800002
OBTBLK01 CLC   ENTPTR(D4,R1),ZERO     SEE IF THE ENTRY POINTER IS ZERO  18810002
         BE    OBTBLK03            YES, USE THIS BLOCK                  18820002
         CLC   D0(L4,R1),ZERO      SEE IF CHAIN ADDRESS IS ZERO         18830002
         BE    OBTBLK02            YES, ISSUE GETMAIN FOR ANOTHER BLOCK 18840002
         L     R1,0(R1)            NO, PICK UP CHAIN ADDRESS            18850002
         B     OBTBLK01            GO CHECK NEXT BLOCK.                 18860002
OBTBLK02 LR    R3,R1               SAVE PTR TO CURRENT LAST BLK         18870002
         LA    R1,GETML            POINT AT LIST FORM OF MACRO          18880002
         LA    R2,TEMPSAVE         ANSWER PLACE                         18890002
         GETMAIN A=(R2),LV=CIRBLKLN,SP=BLKSP,MF=(E,(1))                 18900002
         LTR   R15,R15             CHECK FOR RETURN CODE                18910002
         BNZ   OBTBLK04            YES, PROCESS ERROR                   18920002
         L     R1,TEMPSAVE         GET NEW BLK ADDRESS                  18930002
         ST    R1,D0(R3)           CHAIN IT ONTO LAST BLK               18940002
         XC    D0(L8,R1),D0(R1)     CLEAR ENTRY PTR AND CHAIN ADDR      18950002
OBTBLK03 EQU   *                                                        18960002
         ST    R1,CURNTBLK         SAVE IT AS CURRENT BLOCK             18970002
         LA    R1,CIROFF(R1)       POINT AT CIR BLOCK                   18980002
         ST    R1,CIRWK1           PUT IN LIST                          18990002
         LM    R0,R9,LOCSAVOF(R13)  REFRESH REGISTERS                   19000002
         BR    R8                  RETURN TO CALLER                     19010002
OBTBLK04 EQU   *                                                        19020002
         MVC   RETCD,RC8     INDICATE OUT OF CORE                       19080002
         B     WRAPUP        TERMINATE                                  19090002
BUILDNAM EQU   *                                                        19200002
         MVI   KEYTYPE,ON    INDICATE CHANGE TO USER KEY                19202002
         L     R10,TCBADDR   GET ADDRESS OF TCB                         19202802
         USING TCB,R10       ESTABLISH ADDRESSABILITY TO TCB            19203202
* GET INTO USER'S KEY                                                   19203602
         MODESET EXTKEY=RBT234,SAVEKEY=OLDKEY,WORKREG=3                 19204402
         DROP  R10           DONE WITH TCB                              19204802
         SR    R0,R0         CLEAR REG 0                                19205202
         L     R7,OUTADDR    GET ADDRESS OF USER WORKAREA               19206002
         CH    R0,D2(R7)     IS CURRENT LENGTH ZERO?                    19208002
         BNE   OBTBLKA       NO,GO CALCULATE NEXT ENTRY ADDR            19208402
         L     R0,FOUR       LOAD R0 WITH A FOUR                        19208802
         STH   R0,D2(R7)     SET INITIAL LENGTH TO FOUR                 19209202
OBTBLKA  EQU   *                                                        19210002
         LH    R2,D2(R7)     GET CURRENT LENGTH IN R2                   19210802
         LA    R3,FORTY5(R2) R3=CURRENT LENGTH + 45                     19211602
         STH   R3,D2(R7)     SET CURRENT LENGTH                         19212402
         CH    R3,D0(R7)     IS THERE ROOM FOR NEXT ENTRY?              19213202
         BH    OBTBLK08      NO,GO SET TOOSMALL INDICATOR               19215202
         AR    R7,R2         R7=ADDR OF NEXT ENTRY                      19215602
         MVI   D0(R7),CHARA  SET TYPE FIELD TO NONVSAM -A-              19216002
         LA    R7,D1(R7)     BUMP PAST TYPE FIELD                       19216402
         MVI   D0(R7),BLANK  CLEAR ENTRY AREA TO BLANKS                 19216502
         MVC   D1(L43,R7),D0(R7)                                        19216602
         LH    R2,USRNODEL   GET LENGTH OF NODE                         19217702
         LA    R3,SAVENODE   GET ADDRESS OF NODE               @YM07060 19218102
         BCTR  R2,R0         DECREMENT LENGTH FOR MOVE                  19218502
         EX    R2,MOVE       MOVE NODE TO USER WORKAREA                 19218602
         LA    R1,D1(R2,R7)  BUMP PAST NODE                             19218702
         MVI   D0(R1),PERIOD PUT A PERIOD AFTER NODE                    19218802
         LA    R1,D1(R1)     BUMP PAST PERIOD                           19221602
         L     R2,FRSTBLK          GET FIRST BLK PTR                    19224402
         L     R3,D4(R2)           GET CURRENT ENTRY POINTER            19227202
OBTBLK05 MVC   D0(L8,R1),D1(R3)    MOVE QUALIFIER TO USER AREA          19230002
         LA    R1,D8(R1)           POINT BEYOND NAME                    19240002
OBTBLK06 BCTR  R1,R0               BACKUP POINTER BY ONE AND            19250002
         CLI   D0(R1),BLANK        TRUNCATE BLANKS.IS IT A BLANK        19260002
         BE    OBTBLK06            YES, TRY AGAIN                       19270002
         LA    R1,D1(R1)           POINT JUST BEYOND NAME               19280002
         L     R2,D0(R2)           GET NEXT BLOCK                       19290002
         LTR   R2,R2               SEE IF ADDRESS IS ZERO               19300002
         BZ    OBTBLK07            YES, WE ARE DONE                     19310002
         CLC   D4(L4,R2),ZERO      IS ENTRY PTR ZERO                    19320002
         BE    OBTBLK07            YES, WE ARE DONE                     19330002
         L     R3,ENTPTR(R2)       NO, PICK UP PTR                      19340002
         MVI   D0(R1),PERIOD       PLACE PERIOD AFTER LAST QUALIFIER    19350002
         LA    R1,D1(R1)           UPDATE POINTER                       19360002
         B     OBTBLK05            PROCESS NEXT QUALIFIER               19370002
OBTBLK07 EQU   *                                                        19380002
* GET BACK INTO SVC KEY                                                 19380402
         MODESET KEYADDR=OLDKEY,WORKREG=3                               19382002
         MVI   KEYTYPE,OFF   INDICATE CHANGE BACK TO SVC KEY            19386002
         BR    R8                  RETURN TO CALLER                     19390002
OBTBLK08 EQU   *                                                        19392002
* GET BACK INTO SVC KEY                                        @YM04820 19392402
         MODESET KEYADDR=OLDKEY,WORKREG=3                      @YM04820 19392802
         MVI   KEYTYPE,OFF   INDICATE CHANGE BACK TO SVC KEY   @YM04820 19393202
         MVI   TOOSMALL,ON   SET WORKAREA TOO SMALL INDICATOR  @YM04820 19394002
         BR    R8                  RETURN TO CALLER            @YM04820 19394402
         EJECT                                                          19397002
ESTAEXIT EQU   *             ESTAE EXIT ROUTINE                         19398002
         DROP  R11                                                      19399002
         USING *,R15                                                    19399202
         C     R0,RC12       IS RTCA AVAILABLE                          19399402
         BE    NORTCA        NO,GO PROCESS WITHOUT IT                   19399602
         DROP  R15                                                      19399802
         USING IGG0CLCB,R11                                             19399902
         STM   R14,R12,TWELVE(R13) SAVE REGS                            19400902
         LR    R4,R14        SAVE RETURN POINT                          19401102
         L     R15,D0(R1)    GET PARM LIST ADDRESS                      19401302
         LM    R11,R13,D0(R15) RESET NEEDED REGS                        19401502
         LR    R3,R1         SAVE SDWA-RTCA ADDRESS                     19401702
         USING SDWA,R3       SET ADDRESSABILITY TO SDWA                 19401802
         TM    SDWAERRC,SDWAPERC WERE WE PERCOLLATED TO                 19402802
         BO    ESTX0020      YES,BYPASS DUMPING                         19403002
         CLI   KEYTYPE,ON    WERE WE UNDER USERS KEY                    19403202
         BNE   ESTX0010      NO,BYPASS SETTING ABEND CODE               19403402
         SETRP DUMP=YES,COMPCOD=(ABENDCD,SYSTEM),RC=0,WKAREA=(3)        19403602
         B     ESTX0030      GO TO CLEAN UP                             19403702
ESTX0010 EQU   *                                                        19404702
         SETRP DUMP=NO,RECORD=YES,RC=0,RECPARM=RECORD,WKAREA=(3)        19404902
         SDUMP SDATA=LPA                                                19405102
         B     ESTX0030      GO TO CLEAN UP                             19405302
ESTX0020 EQU   *                                                        19405502
         SETRP DUMP=IGNORE,RECORD=YES,RC=0,WKAREA=(3),RECPARM=RECORD    19405602
ESTX0030 EQU   *                                                        19406602
         L     R1,FRSTBLK    GET PTR TO FIRST CIR BLOCK                 19406802
         L     R1,CIRBLKLN*3(R1) GET CHAIN PTR OUT OF LAST BLOCK        19407002
ESTX0040 EQU   *                                                        19407202
         C     R1,ZERO       HAVE ALL BLOCKS BEEN FREED                 19407402
         BE    ESTX0050      YES,BYPASS FREEMAIN                        19407502
         L     R2,D0(R1)     CHAIN TO NEXT BLOCK                        19408502
         FREEMAIN R,LV=CIRBLKLN,A=(1),SP=BLKSP                          19408702
         LR    R1,R2         COPY CHAIN PTR                             19408902
         B     ESTX0040      GO CHECK NEXT PTR                          19409102
ESTX0050 EQU   *                                                        19409302
         FREEMAIN R,LV=WORKSIZE,A=(13),SP=WORKSP FREEMAIN WORKAREA      19409402
         LR    R14,R4        RESET RETURN POINT                         19410402
         SR    R15,R15       ZERO RETURN CODE                           19410602
         BR    R14           RETURN TO RTM                              19410802
NORTCA   EQU   *                                                        19411002
         LR    R4,R14        SAVE RETURN POINT                          19411202
         LM    R11,R13,D0(R2) RESET NEEDED REGISTERS           @YM05170 19411302
         B     ESTX0030      GO TO CLEAN UP                             19412302
         DROP  R3                                                       19412502
         EJECT                                                          19413302
*********************************************************************** 26230002
* THIS CODE IS A MODIFIED VERSION OF OS VS2-1 MODULE IKJEHCIR WHICH   * 26240002
* WAS USED FOR TSO LISTCAT COMMAND.                                   * 26244002
*                                                                     * 26250002
* FUNCTION --                                                         * 26260002
*                                                                     * 26270002
*    THIS SUBROUTINE IS DESIGNED TO PROVIDE AN INTERFACE BETWEEN      * 26280002
*    IGG0CLCB AND THE SYSTEM CATALOG.  IT ABBREVIATES                 * 26290002
*    INFORMATION FOUND IN THE CATALOG INDEX BLOCKS ACCORDING TO       * 26300002
*    OPTIONS SPECIFIED BY THE CALLER.  THE LIST OF INFORMATION        * 26310002
*    RETURNED TO THE CALLER AS A RESULT OF ONE CALL TO THIS           * 26320002
*    MODULE WILL INCLUDE ONLY WHAT IS FOUND IN ONE INDEX BLOCK.       * 26330002
*    MULTIPLE CALLS MAY THEREFORE BE REQUIRED IF ALL OF THE           * 26340002
*    INFORMATION AT A PARTICULAR LEVEL OF INDEX IS DESIRED.           * 26350002
*    THE INFORMATION OBTAINED BY THIS MOUDLE IS GOTTEN BY A CALL TO OS* 26360002
*    CATALOG MANAGEMENT WITH EITHER THE BLOCK OR NAME OPTION.         * 26370002
*    THE SECOND WORD OF THE PARAMETER LIST INPUT TO THIS MODULE       * 26380002
*    INDICATES WHICH OPTION IS TO BE SELECTED AS DESCRIBED LATER.     * 26390002
*    THE WORK AREA PROVIDED BY THE CALLER IS USED TO HOLD THE         * 26400002
*    INDEX BLOCK READ AND ULTIMATELY THE INFORMATION LIST. EACH       * 26410002
*    ENTRY IN THE INDEX BLOCK IS EXAMINED AND REQUESTED               * 26420002
*    INFORMATION IS RIPPLED DOWN TO THE FORWARD PORTION OF THE        * 26430002
*    BLOCK.                                                           * 26440002
*                                                                     * 26450002
* ENTRY POINTS --                                                     * 26460002
*                                                                     * 26470002
*         CIR                                                         * 26480002
*                                                                     * 26490002
* INPUT --                                                            * 26500002
*                                                                     * 26510002
*    THE FOLLOWING PARMETER LIST MUST BE SUPPLIED BY THE CALLING      * 26520002
*    PROGRAM FOR EACH ENTRY TO THIS MODULE.                           * 26530002
*                                                                     * 26540002
*                   *************************                         * 26550002
*               + 0 * OPTIONS*   UNUSED     *                         * 26560002
*                   *************************                         * 26570002
*               + 4 * A(INDEXNAME OR TTR)   *  IF TTR, HIGH ORDER BIT * 26580002
*                   *************************     SHOULD BE ON.       * 26590002
*               + 8 * A(VOLID OF CVOL)      *  DEFAULTS TO SYSRES IF  * 26600002
*                   *************************     NOT SPECIFIED.      * 26610002
*               + C * A(WORKAREA1)          *  265 BYTE AREA FOR      * 26620002
*                   *************************     LOCATE AND LIST     * 26630002
*               +10 * A(WORKAREA2)          *  72 BYTE AREA USED AS   * 26640002
*                   *************************     REG SAVEAREA        * 26650002
*                                                                     * 26660002
*    OPTIONS IS A 1 BYTE FIELD THAT COULD CONTAIN ANY COMBINATION     * 26670002
*    OF THE FOLLOWING BIT DEFINITIONS.                                * 26680002
*                                                                     * 26690002
*              X'01'-LOWEST LEVEL QUALIFIERS ARE REQUESTED            * 26700002
*              X'02'-INDEX NAMES ARE REQUESTED                        * 26710002
*              X'04'-VOLIDS ARE REQUESTED                             * 26720002
*              X'08'-ALL OTHER VALID ENTRIES ARE REQUESTED            * 26730002
*                                                                     * 26740002
* OUTPUT --                                                           * 26750002
*                                                                     * 26760002
*    LIST ENTRIES OF THE FORM SHOWN BELOW DEPENDING ON SELECTED       * 26770002
*    OPTION CODES.                                                    * 26780002
*                                                                     * 26790002
*           OPTION X'01' -   **************                           * 26800002
*                            *07* DSNAME  *                           * 26810002
*                            **************                           * 26820002
*                            / 2/   8     /                           * 26830002
*                                                                     * 26840002
*                            ************************                 * 26850002
*                            *02* GDGNAME *TTR* DATA*                 * 26860002
*                            ************************                 * 26870002
*                            / 2/   8     / 3 /  4  /                 * 26880002
*                                                                     * 26890002
*           OPTION X'02' -   *******************                      * 26900002
*                            *00* INDEXNAME*TTR*                      * 26910002
*                            *******************                      * 26920002
*                            / 2/    8     / 3 /                      * 26930002
*                                                                     * 26940002
*           OPTION X'04'     ***********************************      * 26950002
*                            *08* DSNAME *CT*CODE*VOLSER1*SEQ*        * 26960002
*                            ***********************************..... * 26970002
*                            / 2/    8   / 2/  4 /  6    / 2 /        * 26980002
*                                                                     * 26990002
*                             CT   -NUMBER OF VOLSERS DESCRIBED       * 27000002
*                             CODE -4 BYTE DEVICE CODE                * 27010002
*                             VOLSER- A VOLUME ID                     * 27020002
*                             SEQ  -SEQUENCE FIELD FOR TAPE DEVICE    * 27030002
*                                                                     * 27040002
*                            *****************                        * 27050002
*                            *01* DSNAME *TTR*                        * 27060002
*                            *****************                        * 27070002
*                            / 2/   8    / 3 /                        * 27080002
*                             TTR POINTS TO VOLUME CONTROL BLOCK      * 27090002
*                                                                     * 27100002
*           OPTION X'08'     *****************************            * 27110002
*                            *04* ALIASNAME*TTR* TRUENAME*            * 27120002
*                            *****************************            * 27130002
*                            / 2/   8      / 3 /    8    /            * 27140002
*                                                                     * 27150002
*                            **************************               * 27160002
*                            *05* DSNAME *CODE*CVOLSER*               * 27170002
*                            **************************               * 27180002
*                            / 2/   8    / 4  /   6   /               * 27190002
*                                                                     * 27200002
*    THE LAST ENTRY IN EVERY LIST WILL BE A LINK ENTRY AS SHOWN       * 27210002
*    BELOW. IT MARKS THE END OF THE LIST AND IF THE TTR IS NONZERO    * 27220002
*    IT POINTS TO THE NEXT INDEX BLOCK IN THE CURRENT STRUCTURE       * 27230002
*    AND THE VOLSER WILL INDICATE THE CVOL IT IS ON.                  * 27240002
*                                                                     * 27250002
*                            ***************                          * 27260002
*                            *FF*TTR*VOLSER*                          * 27270002
*                            ***************                          * 27280002
*                            / 2/ 3 /   6  /                          * 27290002
*                                                                     * 27300002
*                                                                     * 27310002
* EXTERNAL REFERENCES --                                              * 27320002
*                                                                     * 27330002
*    IGG0CLCC - OS CATALOG MANAGEMENT                                 * 27340002
*                                                                     * 27360002
* EXITS, NORMAL --                                                    * 27370002
*                                                                     * 27380002
*    BR 14 RETURN CODE IN REG 15 SET TO 00.                           * 27390002
*                                                                     * 27400002
* EXITS, ERROR                                                        * 27410002
*    BR 14 WITH A RETURN CODE IN REG 15 AS FOLLOWS                    * 27420002
*                                                                     * 27430002
*                        RC=04 LOCATE FAILED. THE LOCATE RETURN CODE  * 27440002
*                              IS STORED IN THE FIRST WORD OF THE     * 27450002
*                              USERS PARAMETER LIST                   * 27460002
*                                                                     * 27470002
*                        RC=08 ONLY VOLUMES WERE REQUESTED BUT THE    * 27480002
*                              DSNAME POINTED TO WAS NOT FULLY        * 27490002
*                              QUALIFIED OR IF A TTR WAS SPECIFIED,   * 27500002
*                              IT DID NOT POINT TO A VOLUME CONTROL   * 27510002
*                              BLOCK.                                 * 27520002
*                                                                     * 27530002
*                        RC=12 VOLUMES WERE RETURNED BY LOCATE BUT    * 27540002
*                              THIS WAS NOT COMPATIBLE WITH THE       * 27550002
*                              OPTIONS REQUESTED.                     * 27560002
*                                                                     * 27570002
* TABLES/WORK AREAS --                                                * 27580002
*                                                                     * 27590002
*    ONLY THOSE DESCRIBED IN THE INPUT PARM LIST                      * 27600002
*                                                                     * 27610002
* ATTRIBUTES --                                                       * 27620002
*    REENTRANT,READ ONLY,REFRESHABLE                                  * 27630002
*                                                                     * 27640002
* CHARACTER CODE DEPENDENCY -- NONE                                   * 27650002
*                                                                     * 27660002
* NOTES -- N/A                                                        * 27670002
*                                                                     * 27680002
* REGISTER USAGE                                                      * 27700002
*  R1  POINTS AT ENTRY IN WORK AREA.                                  * 27720002
*  R2  POINTS AT CURRENT ENTRY IN BLOCK                               * 27730002
*  R4  CONTAINS PARAMETER LIST ADDRESS                                * 27750002
*  R11 MAIN BASE REG                                                  * 27820002
*  R12 ADDRESS OF CONTROLLER III WORKAREA                             * 27830002
*  R15 WILL CONTAIN RETURN CODE                                       * 27860002
*********************************************************************** 27870002
      EJECT                                                             28600002
CIR      SAVE  (14,12),,*                                               28610002
         L     R2,ACIRSAVE(R1)     GET ADDR OF SAVEAREA FROM PARM LIST  28640002
         ST    R2,FORWARD(R13)     ESTABLISH FORWARD CHAIN              28650002
         ST    R13,BACKWARD(R2)    ESTABLISH BACKWARD CHAIN             28660002
         LR    R13,R2              NEW SAVEAREA                         28670002
         LR    R4,R1               COPY PARAMETER LIST ADDRESS.         28680002
         L     R5,CIROPT(R4)       SAVE OPTION BITS                     28690002
         TM    CIRSRCH(R4),HIGHBIT TEST FOR TTR ADDRESS OR NAME         28700002
         BO    TTRADD              TTR WAS SPECIFIED.                   28710002
         MVC   CIROPT(L4,R4),CAM1  SET CAMLST OPTIONS TO NAME           28720002
         B     LOCATE        GO LOCATE                                  28730002
TTRADD   MVC   CIROPT(L4,R4),CAM2  SET CAMLST OPTION TO BLOCK           28750002
         NI    CIRSRCH(R4),HEXFF-HIGHBIT TURN OFF TTR ADDRESS INDICATOR 28760002
LOCATE   EQU   *                                                        28770002
         L     R15,CLCCADDR  R15 = ENTRY POINT OF OS CAT.MGMT.          28780002
         BALR  R14,R15       GO DO LOCATE                               28782002
         LTR   R15,R15             TEST LOCATE RETURN CODE              28790002
         BZ    CODE00              SUCCESS, CONTINUE                    28800002
         C     R15,TWELVERC        TEST FOR RC = 12                     28810002
         BE    CODE12              OK, INDEX BLOCK READ                 28820002
ERRCODE  EQU   *                                                        28830002
         ST    R15,CIROPT(R4)      SAVE LOCATE CODE IN 1ST WORD OF LIST 28840002
         LA    R15,ERR03           SET RC=4 FOR CALLER.                 28850002
ERREXIT  EQU   *                                                        28860002
         L     R13,BACKWARD(R13)   GET CALLERS SAVEAREA                 28870002
         RETURN (14,12),RC=(15)    RETURN  TO CALLER                    28880002
*                                                                       28890002
CODE12   ST    R5,CIROPT(R4)       REPLACE OPTION BITS IN LIST          28900002
         TM    CIROPT(R4),ALLOPT-VOLOPT WAS VOLUMES ONLY REQUESTED      28910002
         BNZ   CODE12A             NO, PROCESS BLOCK                    28920002
         LA    R15,ERR01           SET ERROR CODE                       28930002
         B     ERREXIT             GO EXIT WITH ERROR                   28940002
CODE12A  L     R1,CIRWA(R4)        POINT TO LOCATE WORKAREA             28950002
         LR    R7,R1               SAVE BLOCK ADDRESS.                  28960002
         LH    R6,D0(R1)           GET BYTE COUNT FOR BLOCK             28970002
         LA    R6,D0(R1,R6)        POINT AT END OF USED PART OF BLOCK   28980002
         LA    R2,FRSTNTRY(R1)     POINT AT FIRST ENTRY                 28990002
CHKTYPE  EQU   *                                                        29000002
         CLI   CNT(R2),INDXNTRY    CHECK FOR INDEX PTR ENTRY            29010002
         BE    INDEXPTR            YES, GO                              29020002
         TM    CIROPT(R4),DSOPT    CHECK FOR DSNAME OPTION SPECIFIED    29030002
         BNO   ALLCHK              NO, GO CHECK                         29040002
         TM    CNT(R2),DSNMNTRY    CHECK FOR DSNAME ENTRY.              29050002
         BO    DSENTRY             PROCESS AS A DS                      29060002
         TM    CNT(R2),MULTIVOL    IS IT A DS PTR WITH SEVERAL VOLUMES  29070002
         BNZ   DSENTRY             YES, GO                              29080002
         CLI   CNT(R2),GDGENTRY    IS IT A GDG PTR                      29090002
         BE    GDGPTR              YES, GO                              29100002
         CLI   CNT(R2),VCBENTRY    IS IT A VOL CONTROL BLOCK            29110002
         BE    VOLPTR              YES, GO                              29120002
ALLCHK   EQU   *                                                        29130002
         TM    CIROPT(R4),OTHROPT  CHECK FOR OTHER OPTION               29140002
         BNO   NEXENTRY            NO, SKIP THIS ENTRY.                 29150002
         CLI   CNT(R2),ALIAS       IS IT AN ALIAS ENTRY                 29160002
         BE    ALIASENT            YES, GO                              29170002
         CLI   CNT(R2),OLDPTR      IS IT AN OLD CVOL PTR                29180002
         BE    OLDCVOL             YES, GO                              29190002
         CLI   CNT(R2),NEWPTR      IS IT A NEW CVOL PTR                 29200002
         BE    NEWCVOL             YES, GO                              29210002
         B     NEXENTRY            SKIP TO NEXT ENTRY                   29220002
*                                                                       29230002
DSENTRY  TM    CIROPT(R4),VOLOPT   CHECK FOR VOLUME OPTION              29240002
         BO    DSENTRY1            YES, GO BUILD ENTRIES WITH VOLUMES   29250002
         MVI   CODEOFF(R1),DSNWOVOL DSNAME WITH OUT VOLUMES CODE        29260002
         MVC   NAMEOFF(NAMLEN,R1),D0(R2) MOVE NAME TO LIST              29270002
         LA    R1,DSLEN(R1)        INCREMENT WORKAREA POINTER           29280002
NEXENTRY EQU *                                                          29290002
         XR    R3,R3               CLEAR REG FOR INSERT INSTRUCTION     29300002
         IC    R3,CNT(R2)          PICK UP HW COUNT                     29310002
         SLL   R3,ONE              MULTIPLY BY 2 TO MAKE IT BYTES       29320002
         LA    R2,CATENTLN(R3,R2)  ADJUST POINTER TO NEXT ENTRY         29330002
EOBCHK   EQU   *                                                        29340002
         CR    R2,R6               SEE IF END OF BLOCK IS REACHED       29350002
         BL    CHKTYPE             IF NOT, PROCESS ANOTHER ENTRY        29360002
         MVI   CODEOFF(R1),LINKCODE INDICATE LINK ENTRY                 29370002
         MVC   NAMEOFF(TTRLEN,R1),ATTROFF(R7) MOVE TTR TO ENTRY         29380002
         MVC   VOLSEROF(VOLLEN,R1),VOLOFF(R7) MOVE VOLSER TO ENTRY      29390002
         B     NORMEXIT            NORMAL EXIT FROM ROUTINE             29400002
DSENTRY1 MVI   CODEOFF(R1),DSNWVOLS INDICATE DSNAME WITH VOLUMES        29410002
         MVC   NAMEOFF(NAMLEN,R1),D0(R2) MOVE NAME TO LIST              29420002
         LA    R1,DSLEN(R1)        INCREMENT WORKAREA POINTER           29430002
         XR    R3,R3               CLEAR FOR INSERT INSTRUCTION         29440002
         IC    R3,CNT(R2)          GET HW COUNT                         29450002
         SLL   R3,ONE              MULTIPLY BY 2 TO MAKE IT BYTES       29460002
         BCTR  R3,R0               DECREMENT CNT BY ONE FOR EX          29470002
         EX    R3,MOVEVOLS         MOVE VOLUME LIST                     29480002
         LA    R3,L1(R3)           ADD BACK DECREMENT VALUE             29490002
         LA    R2,CATENTLN(R3,R2)  POINT TO NEXT ENTRY IN BLOCK         29500002
         LA    R1,L0(R3,R1)        POINT TO NEXT LIST ENTRY LOCATION.   29510002
         B     EOBCHK              CHK FOR END OF BLOCK                 29520002
INDEXPTR CLI   D0(R2),LINKCODE     CHECK FOR LINK ENTRY                 29530002
         BE    LINKPTR             YES, GO EXIT.                        29540002
         TM    CIROPT(R4),INDOPT   WAS INDEX INFORMATION REQUESTED      29550002
         BO    INDEXGO             YES, GO                              29560002
         B     NEXENTRY            GET NEXT ENTRY                       29570002
INDEXGO  MVI   CODEOFF(R1),INDXCODE INDICATE INDEX NAME.                29580002
         MVC   NAMEOFF(CNT,R1),D0(R2) MOVE NAME AND TTR TO LIST ENTRY   29590002
         LA    R1,INDLEN(R1)       POINT TO NEXT LIST ENTRY             29600002
         B     NEXENTRY            GET NEXT ENTRY                       29610002
NODATA   LR    R1,R2               POINT TO WORKAREA                    29620002
         LR    R7,R1               SAVE BLK ADDRESS                     29630002
         LA    R2,FRSTNTRY(R2)     ADJUST R2 POINTER                    29640002
LINKPTR  MVI   CODEOFF(R1),LINKCODE INDICATE LINK ENTRY                 29650002
         MVC   NAMEOFF(TTRLEN,R1),NAMLEN(R2) MOVE TTR TO LIST           29660002
         MVC   VOLSEROF(VOLLEN,R1),VOLOFF(R7) MOVE VOLSER TO ENTRY      29670002
NORMEXIT EQU   *                                                        29680002
         L     R13,BACKWARD(R13)   GET CALLERS SAVE AREA ADDRESS        29690002
         XR    R15,R15             SET RC=0                             29700002
         RETURN (14,12),RC=(15)    RETURN TO CALLER                     29710002
*                                                                       29720002
VOLPTR   EQU   *                                                        29730002
         TM    CIROPT(R4),VOLOPT   SEE IF VOLUMES WERE REQUESTED        29740002
         BO    VOLPTR1             YES, GO                              29750002
         MVI   CODEOFF(R1),DSNWOVOL INDICATE DSNAME WITHOUT VOLUMES     29760002
         MVC   NAMEOFF(NAMLEN,R1),D0(R2) MOVE NAME TO LIST              29770002
         LA    R1,DSLEN(R1)        INCREMENT WORKAREA POINTER  @YM04820 29771002
         B     NEXENTRY            GET NEXT ENTRY              @YM04820 29780002
VOLPTR1  MVI   CODEOFF(R1),VCBCODE INDICATE DSNAME AND TTR OF VCB       29790002
         MVC   NAMEOFF(CNT,R1),D0(R2) MOVE NAME AND TTR TO LIST         29800002
VOLEXIT  LA    R1,VCBLEN(R1)       INCREMENT LIST PTR                   29810002
         B     NEXENTRY            GET NEXT ENTRY                       29820002
GDGPTR   MVI   CODEOFF(R1),GDGCODE INDICATE GDG ENTRY IN LIST           29830002
         MVC   NAMEOFF(CNT,R1),D0(R2) MOVE NAME AND TTR TO LIST ENTRY   29840002
         XR    R3,R3               CLEAR REGISTER FOR INSERT            29850002
         IC    R3,CNT(R2)                                               29860002
         MVC   GDGDATA(DATALEN,R1),CATENTLN(R2) PUT FLAGS IN LIST       29870002
         LA    R1,GDGLEN(R1)       ADJUST LIST PTR                      29880002
         SLL   R3,ONE              MULT HW COUNT BY 2-- MAKE IT BYTES   29890002
         LA    R2,CATENTLN(R3,R2)  POINT TO NEXT ENTRY IN BLOCK         29900002
         B     EOBCHK              CHECK FOR END OF BLOCK               29910002
ALIASENT EQU   *                                                        29920002
         MVI   CODEOFF(R1),ALIASCDE INDICATE ALIAS ENTRY                29930002
         MVC   NAMEOFF(CNT,R1),D0(R2) MOVE ALIAS AND TTR TO LIST.       29940002
         XR    R3,R3               CLEAR FOR INSERT CHARA               29950002
         IC    R3,CNT(R2)                                               29960002
         MVC   ALIASLEN(NAMLEN,R1),CATENTLN(R2) MOVE TRUE NAME TO LIST  29970002
         LA    R1,ALIASLEN+NAMLEN(R1) ADJUST LIST PTR                   29980002
         SLL   R3,ONE              CONVERT HALFWORDS TO BYTES           29990002
         LA    R2,CATENTLN(R3,R2)  POINT TO NEXT ENTRY IN BLOCK         30000002
         B     EOBCHK              CHECK FOR END OF BLOCK               30010002
OLDCVOL  CLI   D0(R2),INDXCBLK     INDEX CONTROL ENTRY                  30020002
         BE    NEXENTRY            YES, GO TRY NEXT                     30030002
         MVI   CODEOFF(R1),CVOLCODE INDICATE CVOL PTR IN LIST ENTRY     30040002
         MVC   NAMEOFF(NAMLEN,R1),D0(R2) MOVE NAME TO LIST              30050002
         XC    DEVCDEOF(DEVCDELN,R1),DEVCDEOF(R1) ZERO DEVICE CODE      30060002
         MVC   CVOLVOL(VOLLEN,R1),CATENTLN(R2) MOVE VOLID TO LIST       30070002
         XR    R3,R3               CLEAR FOR INSERT CHARA               30080002
         IC    R3,CNT(R2)                                               30090002
CVOLEXIT SLL   R3,ONE              CONVERT HALFWORD COUNT TO BYTES      30100002
         LA    R2,CATENTLN(R3,R2)  POINT AT NEXT ENTRY IN BLOCK         30110002
         LA    R1,CVOLLEN(R1)      POINT AT NEXT LIST ENTRY             30120002
         B     EOBCHK              CHECK FOR END OF BLOCK               30130002
NEWCVOL  CLI   D0(R2),INDXCBLK     INDEX CONTROL ENTRY CHECK            30140002
         BE    NEXENTRY            GET NEXT ENTRY                       30150002
         MVI   CODEOFF(R1),CVOLCODE  INDICATE CVOL                      30160002
         MVC   NAMEOFF(NAMLEN,R1),D0(R2) PUT NAME INTO LIST ENTRY       30170002
         MVC   DEVCDEOF(DEVCDELN+VOLLEN,R1),CATENTLN(R2) MOVE DEVICE    30180002
*                             CODE AND VOLSER TO LIST ENTRY.            30190002
         XR    R3,R3               CLEAR FOR INSERT CHARACTER           30200002
         IC    R3,CNT(R2)                                               30210002
         B     CVOLEXIT            EXIT FROM ROUTINE                    30220002
**********************************************************************  30230002
*                                                                       30240002
*   THIS ROUTINE GETS CONTROL IF A ROUTINE CODE OF ZERO IS PASSED BACK  30250002
*   FROM LOCATE.                                                        30260002
*                                                                       30270002
**********************************************************************  30280002
CODE00   EQU   *                                                        30290002
         L     R2,CIRWA(R4)        PICK UP BLOCK ADDRESS                30300002
         CLC   CIROPT(L4,R4),CAM1  WAS THIS A LOCATE BY NAME            30310002
         ST    R5,D0(R4)           RESTORE OPTION BYTES                 30320002
         BE    TESTVCB             YES, BLOCK MUST BE A VCB             30330002
         CLI   FRSTNTRY(R2),LINKCODE TEST FOR NO ENTRY                  30340002
         BE    NODATA              YES, GO TO NODATA RTN                30350002
         LA    R3,TWENTY5          GET MINIMUM POSSIBLE BYTE COUNT      30360002
         CH    R3,D0(R2)           CHECK AGAINST ACTUAL BYTE COUNT      30370002
         BH    TESTVCB             IF COUNT IS LESS THAN MINIMUM, VCB   30380002
         TM    CIROPT(R4),VOLPLUS  WAS OTHER THAN VOLUMES REQUESTED     30390002
         BNZ   CODE12A             YES, PROCESS AS INDEX BLOCK.         30400002
*                                                                       30410002
*   SINCE NO OTHER OPTIONS WERE REQUESTED, WE MUST ASSUME IT IS A       30420002
*   VOLUME CONTROL BLOCK.  THE FOLLOWING CHECKS ARE MADE BASED          30430002
*   ON THAT ASSUMPTION. IF NO OPTIONS WERE REQUESTED, IT IS STILL       30440002
*   AN ERROR AND IS CAUGHT HERE. EVEN IF IT IS NOT A VCB, SINCE         30450002
*   OPTIONS DID NOT INDICATE HE EXPECTED OTHER THAN A VCB AND WE        30460002
*   CAN NOT DETERMINE FOR SURE WHAT IT IS, HE WILL GET WHATEVER         30470002
*   HE POINTED AT WITH THE TTR HE FURNISHED.                            30480002
*                                                                       30490002
TESTVCB  TM    CIROPT(R4),VOLOPT   WAS VOLUMES REQUESTED                30500002
         BZ    ERRVCB              NO, PROCESS ERROR                    30510002
         TM    CIROPT(R4),VOLPLUS  WERE THERE OTHER REQUESTS            30520002
         BNZ   ERRVCB              YES, PROCESS AS ERROR.               30530002
         B     NORMEXIT            NO, EXIT NORMALLY                    30540002
ERRVCB   EQU   *                                                        30550002
         LA    R15,ERR02           SET RC=12, VOLUME BLK FOUND IN ERROR 30560002
         B     ERREXIT             EXIT IN ERROR                        30570002
         EJECT                                                          30572002
CAM1     CAMLST  NAME,1,,3         LOCATE CAMLST                        30580002
CAM2     CAMLST                    BLOCK,1,2,3                          30590002
GETMLMDL GETMAIN                   EC,MF=L                              30612002
FREEMMDL FREEMAIN                  E,MF=L                               30614002
EILFS    EQU   *                   END OF LIST FORMS FOR INITCORE       30616002
LILFS    EQU   EILFS-GETMLMDL      LENGTH OF LIST FORMS FOR INITCORE    30618002
MOVE     MVC   D0(L0,R7),D0(R3)    MVC INSTRUCTION FOR MOVES            30618402
MOVEVOLS MVC   D0(L0,R1),TWELVE(R2) USED FOR EXECUTE                    30618502
RC0      EQU   *                   RETURN CODE 0                        30618602
ZERO     DC    F'0'                VALUE OF 0                           30618802
RC4      EQU   *                   RETURN CODE 4                        30618902
FOUR     DC    F'4'                VALUE OF 4                           30619202
RC8      DC    F'8'                RETURN CODE 8                        30619602
RC12     EQU   *                   RETURN CODE 12                       30620702
TWELVERC DC    F'12'               TWELVE FOR RC TEST                   30622402
RECORD   DC    C'IGG0CLCA',C'IGG0CLCB',8X'00'  RECORD AREA FOR SETRP    30623202
FOXMASK  DC    X'FFFFFFFF'         MASK TO COMPLEMENT GENERATION NUMBER 30623902
CLCCADDR DC    V(IGG0CLCC)   ADDRESS OF OS CATLG.MGMT.                  30624302
         EJECT                                                          30625402
WORKCORE DSECT                                                          30626902
STRTDSCT EQU   *                   START OF DSECT                       30628402
SAVE     DS    28F                 SAVE AREA                            30629902
GETML    GETMAIN EC,MF=L                                                30631902
FREEML   FREEMAIN E,MF=L                                                30633902
USRNODEL DS    H                   LENGTH OF USERID OR NODE             30635902
USERNODE DS    CL44                USERID OR NODE IS KEPT HERE          30637902
SAVENODE DS    CL44                USERID OR NODE IS SAVED HERE@YM07060 30638002
OPTMASK  DS    CL1                 MASK OF USER OPTS SPECIFIED IN CMD.  30638302
FIRSTIME DS    CL1                 ALLOCATE FIRST TIME  SWITCH          30638702
FIRSTCIR DS    CL1                 FIRST TIME SWITCH FOR CIRROUT        30639102
TOOSMALL DS    CL1           WORKAREA TOO SMALL SWITCH                  30639502
OLDKEY   DS    CL1           KEY SAVE AREA FOR MODESET MACRO            30639602
KEYTYPE  DS    CL1           KEYTYPE SWITCH. 01=USER,00=SVC             30639702
SAVER11  DS    F             REGISTER 11 SAVE FOR ESTAE                 30641702
SAVER12  DS    F             REGISTER 12 SAVE FOR ESTAE                 30642102
SAVER13  DS    F             REGISTER 13 SAVE FOR ESTAE                 30642502
ESTAELST DS    4F            ESTAE MACRO LIST FORM                      30642702
TCBADDR  DS    F             SAVE AREA FOR TCB ADDRESS                  30643002
OUTADDR  DS    F             ADDRESS OF USER WORKAREA                   30646502
CURNTBLK DS    F                   PTR TO CURRENT BLOCK FROM CIR.       30649802
FRSTBLK  DS    F                   PTR TO FIRST BLOCK IN CHAIN.         30651802
         DS    0D                                                       30653802
CIRBLOCK DS    4CL280              WORKAREAS FOR CIR--DBLWORD ALIGNED   30655802
CIRBLKLN EQU   L'CIRBLOCK          LENGTH OF ONE CIRBLOCK.              30657802
*                                                                       30658202
*                                                                       30658602
*     PARMLIST FOR CIR RTN    *********                                 30659002
CIRPARM  DS    0F                  BEGIN OF PARMLIST                    30659402
CIROPTNS DS    1F                  OPTIONS USED                         30659502
CIRINDX  DS    1F                  ADDR OF INDEXNAMES OR TTR            30659602
CIRVOL   DS    1F                  ADDR OF VOLID OF CVOL                30659702
CIRWK1   DS    1F                  ADDR OF WORKAREA1                    30669702
CIRWK2   DS    1F                  ADDR OF WORKAREA2                    30671702
*                                                                       30673702
*    END OF CIR PARMLIST                                                30675702
*                                                                       30677702
*                                                                       30678102
CIRSAVE  DS    28F                 SAVEAREA FOR CIR PLUS SUBROUTINES    30678502
CIRTTR   DS    CL3                 HOLDS TTR OF NEXT BLOCK FOR CIRROUT  30678902
CIRCVOL  DS    CL6                 HOLDS CVOL VOLID FOR NEXT BLOCK      30679302
PREVBLK  DS    F             USED BY POINTER ROUTINE                    30679402
GDGCNT   DS    F             GDG COUNT OF GENERATIONS                   30679502
RETCD    DS    F                   RETURN CODE FOR TMP                  30679602
TEMPSAVE DS    F                   FOR GETMAIN ADDR, ALIGNING VOL COUNT 30689602
ENDDSCT  EQU   *                   END OF WORKCORE DSECT                30691602
WORKSIZE EQU   ENDDSCT-STRTDSCT    SIZE OF WORKAREA                     30693602
         EJECT                                                          30695602
         IKJTCB                                                         30696002
         EJECT                                                          30696402
         IHARB                                                          30696802
         EJECT                                                          30697202
         IHASDWA                                                        30697402
         EJECT                                                          30697502
IGG0CLCB CSECT                                                          30697602
         DS    0F            FORCE ALIGNMENT FOR PATCH AREA             30698402
PATCH    DC    50C'Z'        PATCH AREA                                 30698802
         END                                                            30699602
