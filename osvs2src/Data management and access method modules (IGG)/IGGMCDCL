 /********************************************************************/ 00202037
 /*                                                                  */ 00204037
 /*   MACRO NAME = IGGMCDCL                                          */ 00206037
 /*                                                                  */ 00208037
 /*   DESCRIPTIVE NAME = VSAM CATALOG COMMON DECLARATIONS            */ 00210037
 /*                                                                  */ 00212037
 /*   FUNCTION = CONTAINS THE COMMONLY USED CONTROL BLOCK FORMATS,   */ 00214037
 /*              CONSTANTS, FUNDAMENTAL MAPPINGS, AND INTERFACE      */ 00216037
 /*              MACROS FOR VSAM CATALOG MANAGEMENT PROCESSING.      */ 00218037
 /*                                                                  */ 00220037
 /*   INCLUDED MACROS = IGGMCTRC      IKJTCB       IEZCTGWA          */ 00222037
 /*                     IGGCCA        IFGACB       IEZCTGVL          */ 00224037
 /*                     IEZCTGPL      AMCBS        IEZCTGCV          */ 00226037
 /*                     IEZCTGFL      IGGCAXWA                       */ 00228037
 /*                     CVT           IEZCTGFV                       */ 00230037
 /*                                                                  */ 00232037
 /*   METHOD OF ACCESS = PL/S - RESPECIFY A BASE FOR SOME STRUCTURES */ 00234037
 /*                                                                  */ 00236037
* /* MACSTAT Y-2 74218/ZA00964                              @ZA00964*/  00352002
 /*   STATUS = VS/2 RELEASE 3   (CHANGE FLAG @Y30SSXX)               */ 00400037
 /*                                                                  */ 00440037
 /*   DATE OF LAST CHANGE = 17 JAN 75                        @Y30SSPJ*/ 00480037
 /*                                                                  */ 00520037
 /********************************************************************/ 00560037
 % EXECPARM:                                                            02000090
           MACRO;                   /* SETS MACRO VARIABLES IN       */ 02200037
                                    /* ACCORDANCE WITH EXEC STMT     */ 02400037
                                    /* MACPARM VALUES                */ 02600037
           DCL SYSTEM CHAR EXT ;    /* TYPE OF SYSTEM INDICATOR      */ 02800037
           IF MACPARM = 'DOS'       /* COMPILE FOR DOS SYSTEM?       */ 03000037
             THEN SYSTEM = 'DOS';   /* YES - INDICATE DOS            */ 03200037
             ELSE SYSTEM = 'AOS';   /* NO  - DEFAULT TO AOS          */ 03400037
 % END;                                                                 03600090
           %DCL SYSTEM CHAR EXT;    /* TYPE OF SYSTEM INDICATOR      */ 03800037
           ?EXECPARM;                                                   04000037
 /********************************************************************/ 04100037
 /*                    DECLARATION  OF  CONSTANTS                    */ 04200037
 /********************************************************************/ 04400037
    DECLARE                                                             04600037
      ON       BIT(1)    CONSTANT('1'B), /* ON - A '1' BIT           */ 04800037
      OFF      BIT(1)    CONSTANT('0'B), /* OFF - A '0' BIT          */ 05000037
      TRUEGC   BIT(8)    CONSTANT('3F'X), /* TO GET TRUE GROUP CODE  */ 05200037
      LOWKEYTY BIT(8)    CONSTANT('00'X), /* LOW KEY TYPE            */ 05400037
      CATEXTID CHAR(1)   CONSTANT('E'), /* CATALOG EXTENSION RECRD ID*/ 05600037
      VOLEXTID CHAR(1)   CONSTANT('W'), /* VOLUME EXTENSION RECRD ID */ 05800037
      VOLGOPLN FIXED(31) CONSTANT(6), /* VOLUME GOP LENGTH           */ 06000037
      CATGOPLN FIXED(31) CONSTANT(5), /* CATALOG GOP LENGTH          */ 06200037
      VOLSNLN  FIXED(31) CONSTANT(2), /* VOLUME SEQUENCE NO. LENGTH  */ 06400037
      CATSNLN  FIXED(31) CONSTANT(1), /* CATALOG SEQUENCE NO. LENGTH */ 06600037
      PSWDGC   FIXED(31) CONSTANT(4), /* SECURITY GROUP CODE         */ 06800037
      K256     FIXED(31) CONSTANT(256),/* CONSTANT OF 256    @Y30SSPJ*/ 06805037
      IGNOREIT FIXED(31) CONSTANT(0),  /* CLEAR ERROR CODE   @Y30SSPJ*/ 06807037
      NOGETMSE FIXED(31) CONSTANT(0),  /* NO GETMAIN ERROR CODE         06810037
                                                             @Y30SSPJ*/ 06815037
      VSRELID1 PTR(8) CONSTANT(0),  /* VSAM REL 1 ID         @Y30SSPJ*/ 06820037
      VSRELID2 PTR(8) CONSTANT(1),  /* VSAM REL 2 ID         @Y30SSPJ*/ 06825037
      CURELID  PTR(8) CONSTANT(1),  /* CURRENT VSAM REL ID   @Y30SSPJ*/ 06830037
      SSUBPOOL FIXED(8) CONSTANT(241), /* SYSTEM SUBPOOL NO. @Y30SSDW*/ 06835037
      FSUBPOOL FIXED(8) CONSTANT(229), /* FETCH PROTECTED SP @ZA29164*/ 06837037
      USUBPOOL FIXED(8) CONSTANT(252),/* USER SUBPOOL NUMBER @Y30SSDW*/ 06840037
      SASIZ    FIXED(31) CONSTANT(12); /* SAVE AREA SIZE             */ 07000037
 /********************************************************************/ 07010037
 /*                   DECLARATION  OF  REGISTERS                     */ 07020037
 /********************************************************************/ 07030037
    DECLARE                         /* GENERAL REGISTERS             */ 07040037
      (RP0 REG(0),                  /* PARAMETER REG 0               */ 07400037
       RP1 REG(1),                  /* PARAMETER REG 1               */ 07600037
       WKR2 REG(2),                 /* WORK REGISTER                 */ 07800037
       WKR3 REG(3),                 /* WORK REGISTER                 */ 08000037
       WKR4 REG(4),                 /* WORK REGISTER                 */ 08200037
       RSAVE REG(13),               /* SAVE AREA REGISTER 13         */ 08400037
       RET   REG(14),               /* RETURN REGISTER               */ 08600037
       RGO   REG(15)) PTR(31);      /* ENTRY POINT REGISTER          */ 08800037
 /********************************************************************/ 08810037
 /*                   DECLARATION  OF  REGISTERS                     */ 08820037
 /********************************************************************/ 08830037
    DECLARE                         /* GENERAL REGISTERS             */ 08840037
      (RZERO REG(0),                /* GR 0 FOR GETMAIN USAGE        */ 09200037
       RWA  REG(2),                 /* GR 2 POINTS TO WORK AREA      */ 09400037
       RNDX REG(3),                 /* GR 3 FOR INDEX                */ 09600037
       RFLD REG(4),                 /* GR 4 POINTS TO FIELD          */ 09800037
       RWK1 REG(6),                 /* GR 6 IS WORK REGISTER         */ 10000037
       RWK2 REG(7),                 /* GR 7 IS WORK REGISTER         */ 10200037
       RWK3 REG(8),                 /* GR 8 IS WORK REGISTER         */ 10400037
       RWK4 REG(9)) PTR(31);        /* GR 9 IS WORK REGISTER         */ 10600037
 /********************************************************************/ 10640037
 /*                   DECLARATION  OF  REGISTERS                     */ 10680037
 /********************************************************************/ 10720037
    DECLARE                         /* GENERAL REGISTERS             */ 10760037
      R0  REG(0)  PTR(31),          /* STANDARD REGISTER             */ 11200037
      R1  REG(1)  PTR(31),          /* STANDARD REGISTER             */ 11400037
      R2  REG(2)  PTR(31) RSTD,     /* LOCAL WORK REGISTER           */ 11600037
      R3  REG(3)  PTR(31) RSTD,     /* LOCAL WORK REGISTER           */ 12000037
      R4  REG(4)  PTR(31) RSTD,     /* LOCAL WORK REGISTER           */ 12400037
      R5  REG(5)  PTR(31),          /* WORK REGISTER                 */ 12800037
      R6  REG(6)  PTR(31),          /* WORK REGISTER                 */ 13000037
      R7  REG(7)  PTR(31),          /* WORK REGISTER                 */ 13200037
      R8  REG(8)  PTR(31),          /* WORK REGISTER                 */ 13400037
      R9  REG(9)  PTR(31),          /* WORK REGISTER                 */ 13600037
      R10 REG(10) PTR(31),          /* WORK REGISTER                 */ 13800037
      R11 REG(11) PTR(31) RSTD,     /* CCA BASE REGISTER             */ 14000037
      R12 REG(12) PTR(31) RSTD,     /* ASSEMBLER CODE BASE REGISTER  */ 14400037
      R13 REG(13) PTR(31),          /* SAVE AREA REGISTER            */ 14800037
      R14 REG(14) PTR(31),          /* RETURN REGISTER               */ 15000037
      R15 REG(15) PTR(31);          /* ENTRY POINT REGISTER          */ 15200037
 @EJECT;                                                                15300037
 %INCLUDE SYSLIB(IGGMCTRC);         /* CATALOG RETURN CODES          */ 15400037
 @EJECT;                                                                15500037
 %CCAPTR   = 'R11';                 /* NEW CCA BASE VARIABLE         */ 15600037
 %INCLUDE SYSLIB(IGGCCA);           /* CATALOG COMMUNICATIONS AREA   */ 15800037
 %DCL IGGMODID CHAR EXT;            /* GLOBAL MODULE ID      @Y30SSPJ*/ 15810037
 @EJECT;                                                                15820037
 %CTGPLPTR = 'CCACPL';              /* NEW IEZCTGPL BASE             */ 16000037
 %INCLUDE SYSLIB(IEZCTGPL);         /* CATALOG PARAMETER LIST        */ 16200037
 @EJECT;                                                                16230037
 %CTGFLPTR = 'CCAFLPT';             /* TEMPORARY IEZCTGFL BASE       */ 16260037
 %INCLUDE SYSLIB(IEZCTGFL);         /* FIELD PARAMETER LIST          */ 16290037
 @EJECT;                                                                16320037
 /********************************************************************/ 16350037
 /*                  USER  WORKAREA  DECLARATION                     */ 16400037
 /********************************************************************/ 16460037
    DECLARE                                                             16520037
      1 USERWKA  BASED(CTGWKA),     /* USER WORK AREA                */ 16600037
        2 WKALEN1  FIXED(15),       /* LENGTH OF USER WORK AREA      */ 16800037
        2 WKALEN2  FIXED(15),       /* REQUIRED LENGTH FOR USER AREA */ 17000037
        2 WKA      CHAR(0),         /* SPACE FOR RETRIEVED INFO      */ 17200037
          3 ENTNAMES(*),            /* ENTRYNAME SET ARRAY           */ 17400037
            4 ENTNAMET CHAR(1),     /* ENTRYNAME TYPE CODE           */ 17600037
            4 ENTNAMEV CHAR(44);    /* ENTRYNAME VALUE               */ 17800037
    DCL CTGVLDSP FIXED(15) BASED(ADDR(CTGFLDGC)); /* PARTIAL EXTRACT */ 18600037
 /********************************************************************/ 18700037
 /*                DECLARATION  OF  FIELD  NAME                      */ 18800037
 /********************************************************************/ 18900037
    DECLARE FIELDNM CHAR(8) BASED(CTGFLDNM); /* FIELD NAME           */ 19000037
 /********************************************************************/ 19100037
 /*      CATALOG  FIELD  DICTIONARY  INFORMATION  DECLARATION        */ 19200037
 /********************************************************************/ 19260037
    DECLARE                                                             19320037
      1 DICTENT BASED(ADDR(CTGFLDWA)), /* DICTIONARY ENTRY           */ 19400037
        2 DICTFLGS BIT(8),          /* FIELD FLAGS                   */ 19600037
          3 DICTVAR  BIT(1),        /* VARIABLE OR FIXED             */ 19800037
          3 DICTREP  BIT(1),        /* REPEATING OR NON-REPEATING    */ 20000037
          3 DICTCOMB BIT(1),        /* COMBINATION/SPECIAL OR NOT    */ 20200037
          3 DICTFLG  BIT(1),        /* FLAG FIELD OR NOT             */ 20400037
          3 DICTMV   BIT(1),        /* MULTI-VALUED OR NOT           */ 20600037
          3 DICTSCRA BIT(1),        /* SUPPRESS CRA UPDATES  @Y30SSPJ*/ 20660037
          3 DICTUPGD BIT(1),        /* UPGRADE ENTRY NAME    @Y30SSPJ*/ 20720037
          3 *        BIT(1),        /* RESERVED              @Y30SSPJ*/ 20800037
        2 DICTST   PTR(8),          /* STARTING POINT                */ 21000037
        2 DICTLC   PTR(8),          /* LENGTH OR COUNT               */ 21200037
        2 DICTGC   PTR(8);          /* GROUP CODE                    */ 21400037
    DECLARE                                                             21410037
      DTCMBMK BIT(8) CONSTANT('F0'X), /* COMBINATION MASK    @Y30SSPJ*/ 21420037
                                      /* A FIELD IS A COMBINATION    */ 21470037
                                      /* FIELD IF DICTFLGS&DTCMBMK = */ 21520037
                                      /* DTCMB                       */ 21570037
      /* THE FOLLOWING DICTIONARY ENTRY FLAGS ARE USED TO IDENTIFY   */ 21580037
      /*   SPECIAL FIELD NAMES                                       */ 21590037
      DTCMB   BIT(8) CONSTANT('20'X), /* COMBINATION FIELD NAME      */ 21600037
      DTSRR   BIT(8) CONSTANT('60'X), /* RELREPNO, REPNO FIELD NAME  */ 21800037
      DTSTR   BIT(8) CONSTANT('E8'X), /* TRBAEXT FIELD NAME          */ 22000037
      DTSCC   BIT(8) CONSTANT('60'X); /* CATACB, CNTREPNO, GENDSP    */ 22200037
                                      /* FIELD NAMES                 */ 22250037
    /* THE FOLLOWING DICTIONARY ENTRY VALUES ARE USED TO IDENTIFY    */ 22300037
    /*    SPECIFIC SPECIAL FIELD NAMES                               */ 22350037
    DECLARE                                                             22400037
      DTREL   BIT(8) CONSTANT('03'X), /* RELREPNO - CTGFLDWA(2)      */ 22600037
      DTREP   BIT(8) CONSTANT('04'X), /* REPNO    - CTGFLDWA(2)      */ 22800037
      DTCNT   BIT(8) CONSTANT('02'X), /* CNTREPNO - CTGFLDWA(2)      */ 23000037
      DTCAT   BIT(8) CONSTANT('01'X), /* CATACB   - CTGFLDWA(2)      */ 23200037
      DTGDP   BIT(8) CONSTANT('05'X); /* GENDSP   - CTGFLDWA(2)      */ 23400037
 /********************************************************************/ 23500037
 /*      CATALOG  FIELD  DICTIONARY  INFORMATION  DECLARATION        */ 23600037
 /********************************************************************/ 23660037
    DECLARE                                                             23720037
      1 DIC2ENT BASED(ADDR(CCADICT)), /* DICTIONARY ENTRY            */ 23800037
        2 DIC2FLGS BIT(8),          /* FIELD FLAGS                   */ 24000037
          3 DIC2VAR  BIT(1),        /* VARIABLE OR FIXED             */ 24200037
          3 DIC2REP  BIT(1),        /* REPEATING OR NON-REPEATING    */ 24400037
          3 DIC2COMB BIT(1),        /* COMB/SPECIAL OR NOT           */ 24600037
          3 DIC2FLG  BIT(1),        /* FLAG FIELD OR NOT             */ 24800037
          3 DIC2MV   BIT(1),        /* MULTI-VALUED OR NOT           */ 25000037
          3 DIC2SCRA BIT(1),        /* SUPPRESS CRA UPDATES  @Y30SSPJ*/ 25010037
          3 DIC2UPGD BIT(1),        /* UPGRADE ENTRY NAME    @Y30SSPJ*/ 25020037
          3 *        BIT(1),        /* RESERVED              @Y30SSPJ*/ 25030037
        2 DIC2ST   PTR(8),          /* STARTING POINT                */ 25400037
        2 DIC2LC   PTR(8),          /* LENGTH OR COUNT               */ 25600037
        2 DIC2GC   PTR(8);          /* GROUP CODE                    */ 25800037
 /********************************************************************/ 25900037
 /*              CATALOG  ENTRY  POINTERS  DECLARATION               */ 26000037
 /********************************************************************/ 26060037
    DECLARE                                                             26120037
      1 CCARAB BASED(CCAURAB),      /* CATALOG RAB POINTERS          */ 26200037
        2 CCARABFL PTR(8),          /* RAB FLAGS                     */ 26400037
          3 CCARBUR BIT(1),         /* RAB IN-USE MODIFY, EXTRACT    */ 26600037
          3 CCARBU1 BIT(1),         /* RAB IN-USE TESTS              */ 26800037
          3 CCARBU2 BIT(1),         /* RAB IN-USE TESTS              */ 27000037
          3 CCARBWR BIT(1),         /* WRITE IT BEFORE READ          */ 27200037
          3 CCARBPA BIT(1),         /* PUT-ADD WRITE                 */ 27400037
          3 *       BIT(2),         /* RESERVED                      */ 27600037
          3 CCARBUPD BIT(1),        /* UPDATE BUFFER NOT REUSED      */ 27800037
        2 CCARABRI PTR(8),          /* LAST ASSIGNED RPL INDEX       */ 28000037
        2 * CHAR(2),                /* RESERVED                      */ 28200037
        2 CCACPE1 PTR(31),          /* START ENTRY RECORD PTR        */ 28400037
        2 CCACPE2 PTR(31),          /* PTR TO REPEATING FIELD        */ 28600037
                                    /* CONTROL INFORMATION           */ 28800037
        2 CCACPE3 PTR(31),          /* PTR TO FIRST GROUP OCCURRENCE */ 29000037
        2 CCACPE4 PTR(31);          /* PTR TO END OF RECORD ENTRY    */ 29400037
 /********************************************************************/ 29500037
 /*             GROUP  OCCURRENCE  POINTER  DECLARATION              */ 29600037
 /********************************************************************/ 29660037
    DECLARE                                                             29720037
      1 CATGOPT BASED(CCACPE5),     /* GROUP OCCURRENCE POINTER      */ 29800037
        2 CATGOCI CHAR(3),          /* CI NUMBER OR                  */ 30000037
          3 CATGOFLG BIT(8),        /* GROUP OCCURRENCE FLAG         */ 30200037
            4 *      BIT(8),        /* RESERVED                      */ 30400037
          3 CATGODSP FIXED(15)      /* DISPLACEMENT TO GROUP         */ 30600037
                     BDY(BYTE),     /*   OCCURRENCE                  */ 30800037
        2 CATGOGC1 PTR(8),          /* GROUP CODE INFORMATION        */ 31000037
          3 CATGOEXT BIT(1),        /* GROUP OCCURRENCE OUTSIDE RECD */ 31200037
          3 CATGODEL BIT(1),        /* DELETED GROUP OCCURRENCE PTR  */ 31600037
          3 CATGOGC  BIT(6),        /* TRUE GROUP CODE               */ 31800037
        2 CATGOSEQ PTR(8);          /* (HIGH) SEQUENCE NUMBER        */ 32000037
 /********************************************************************/ 32100037
 /*       DECLARATION  OF  VARIABLE  LENGTH  SEQUENCE  NUMBER        */ 32200037
 /********************************************************************/ 32300037
    DECLARE CATSN CHAR(2) BASED(ADDR(CATGOSEQ)); /* SEQUENCE NUMBER  */ 32400037
 /********************************************************************/ 32500037
 /*        DECLARATION  OF  CATALOG  RECORD  KEY  INFORMATION        */ 32600037
 /********************************************************************/ 32660037
    DECLARE                                                             32720037
      1 CATRCD   BASED(CCACPE1),    /* CATALOG RECORD                */ 32800037
        2 RCDKEYTY CHAR(1),         /* KEY TYPE                      */ 33000037
        2 RCDCINO  PTR(24),         /* RECORD CI NUMBER              */ 33200037
        2 RCDRELID PTR(8),          /* RELEASE INDICATOR     @Y30SSPJ*/ 33205037
        2 RCDCRAVL CHAR(6),         /* CRA VOLUME SERIAL     @Y30SSPJ*/ 33210037
        2 RCDCRACI PTR(24) BDY(BYTE), /* CRA CI NUMBER       @Y30SSPJ*/ 33215037
        2 RCDCRADT CHAR(4),         /* CRA DEVICE TYPE       @Y30SSPJ*/ 33220037
        2 RCDRACTS CHAR(4),         /* CRA CREATION TIME STAMP          33225037
                                                             @Y30SSSB*/ 33230037
        2 RCDDICTS CHAR(4),         /* D/I IDENTIFIER TIME STAMP        33235037
                                                             @Y30SSSB*/ 33240037
        2 *        CHAR(18),        /* RESERVED              @Y30SSSB*/ 33400037
        2 RCDID    CHAR(1),         /* RECORD ID                     */ 33600037
        2 RCDSIZ   FIXED(15) BDY(BYTE), /* RECORD SIZE               */ 33800037
        2 NREPCV   PTR(8),          /* COUNT OF VARIABLE FIELDS      */ 34200037
        2 NREPLF   PTR(8);          /* LENGTH OF FIXED FIELDS        */ 34400037
 /********************************************************************/ 34500037
 /*     DECLARATION OF CONTROL INFORMATION FOR REPEATING FIELDS      */ 34600037
 /********************************************************************/ 34660037
    DECLARE                                                             34720037
      1 REPCNTRL BASED(CCACPE2),    /* CONTROL INFORMATION           */ 34800037
        2 EXTRCDPT CHAR(5),         /* EXTENSION RECORD POINTER      */ 35000037
          3 EXTGOCI  CHAR(3),       /* CI NUMBER OF EXTENSION RECORD */ 35200037
          3 *        CHAR(2),       /* RESERVED                      */ 35250037
        2 REPCNT   PTR(8),          /* COUNT OF GROUP OCCURRENCE PTRS*/ 36400037
        2 REPGOPT(*) CHAR(5);       /* VARIABLE NUMBER OF GROUP      */ 36800037
                                    /*   OCCURRENCE POINTERS         */ 37000037
 /********************************************************************/ 37100037
 /*             DECLARATION  OF  VARIABLE  LENGTH  FIELD             */ 37200037
 /********************************************************************/ 37260037
    DECLARE                                                             37320037
      1 VARFIELD BASED(CCACPE7),    /* VARIABLE FIELD                */ 37400037
        2 VARLEN  FIXED(15) BDY(BYTE), /* LENGTH OF FIELD            */ 37600037
        2 VARINFO CHAR(512);        /* FIELD INFORMATION             */ 38000037
 /********************************************************************/ 38100037
 /*              DECLARATION  OF  CONTROL  INFORMATION               */ 38200037
 /********************************************************************/ 38260037
    DECLARE                                                             38320037
      1 CNTRLINF BASED(CCACPE6),    /* CONTROL INFORMATION           */ 38400037
        2 CNTVAR  PTR(8),           /* COUNT OF VARIABLE FIELDS      */ 38600037
        2 LENFIX  PTR(8);           /* LENGTH OF FIXED FIELDS        */ 38800037
 @EJECT;                                                                38860037
 /********************************************************************/ 38920037
 /*               DECLARATION  OF  CVT  BASE  POINTER                */ 39000037
 /********************************************************************/ 39100037
    DECLARE CVTPTR PTR(31) LOCATION(16); /* BASE FOR CVT             */ 39400037
 %INCLUDE SYSLIB(CVT);              /* COMMUNICATIONS VECTOR TABLE   */ 39600037
 %DEACT OFF;                                                            39650090
 @EJECT;                                                                39800090
 /********************************************************************/ 39900037
 /*             POINTERS  TO  NEXT  AND  CURRENT  TCB'S              */ 40000037
 /********************************************************************/ 40060037
    DECLARE                                                             40120037
      1 TCBWORDS BASED(CVTTCBP),    /* TCB LIST                      */ 40200037
        2 NEXTTCB PTR(31),          /* POINTER TO NEXT TCB           */ 40400037
        2 TCBPTR  PTR(31);          /* POINTER TO CURRENT TCB        */ 40600037
 %INCLUDE SYSLIB(IKJTCB);           /* TASK CONTROL BLOCK            */ 41000037
 @EJECT;                                                                41200090
 %INCLUDE SYSLIB(IHAPSA);                                               41450002
 @EJECT;                                                                41500037
 %INCLUDE SYSLIB(IFGACB);                                               43000090
 RFY IFGACB BASED(CCAACB);          /* ACB BASE IN CCA               */ 43050037
 @EJECT;                                                                43200090
 /********************************************************************/ 43240037
 /*                    ACCESS  METHOD  FLAGS                         */ 43280037
 /********************************************************************/ 43320037
    DECLARE                                                             43360037
      1 MCATDSTR PTR(31) BDY(BYTE) DEF(CVTAMFF), /* FLAGS ARE IN CVT */ 44200037
        2 CVTAMF1 BIT(8),           /* VSAM CVT FLAGS        @Y30SSPJ*/ 44600037
          3 AMF1OPEN BIT(1),        /* MASTER CATALOG OPEN           */ 44800037
          3 AMF1NONX BIT(1),        /* MASTER CATALOG NON-EXISTENT   */ 45000037
          3 * BIT(6),               /* RESERVED                      */ 45200037
        2 * PTR(24) BDY(BYTE);      /* RESERVED                      */ 45400037
 %DECLARE MCATOPEN CHAR,            /* MASTER CATALOG OPEN           */ 45450037
          MCATNONX CHAR,            /* MASTER CATALOG NON-EXISTENT   */ 45500037
          CBSPTR   CHAR;            /* ADDRESS OF THE AMCBS          */ 45550037
 %MCATOPEN = 'AMF1OPEN';            /* MASTER CATALOG OPEN           */ 45600037
 %MCATNONX = 'AMF1NONX';            /* MASTER CATALOG NON-EXISTENT   */ 45800037
 %CBSPTR = 'CVTCBSP';               /* ADDRESS OF THE AMCBS          */ 46800037
 @EJECT;                                                                47200090
 %INCLUDE SYSLIB(AMCBS);            /* ACCESS METHOD CNTRL BLK STRUC */ 47400037
 @EJECT;                                                                47600090
 /********************************************************************/ 47700037
 /*              D U M M Y     D E C L A R A T I O N S               */ 47800037
 /********************************************************************/ 47900037
    DECLARE CI CHAR(3) BASED;       /* DUMMY CI NUMBER               */ 48000037
    DECLARE TNAM CHAR(44) BASED;    /* DUMMY TRUE NAME               */ 48200037
 @EJECT;                                                                48400090
 %CAXWAPTR = 'ACBUAPTR';                                                48800090
 %INCLUDE SYSLIB(IGGCAXWA);         /* CATALOG AUXILIARY WORKAREA    */ 49000037
 @EJECT;                                                                49200090
 %INCLUDE SYSLIB(IEZCTGFV);         /* FIELD VECTOR TABLE            */ 49400037
 @EJECT;                                                                49800090
 %INCLUDE SYSLIB(IEZCTGWA);         /* SCHEDULER WORK AREA           */ 50400037
 @EJECT;                                                                50500037
 %INCLUDE SYSLIB(IEZCTGVL);         /* CATALOG VOLUME LIST           */ 50600037
 @EJECT;                                                                50700037
 %INCLUDE SYSLIB(IEZCTGCV);         /* CONTROL VOLUME LIST           */ 50800037
 @EJECT;                                                                50830037
 /********************************************************************/ 50860037
 /*                WORK  AREA  FOR  OS/VS  LOCATE                    */ 50890037
 /********************************************************************/ 50920037
    DECLARE                                                             50950037
      1 MWA BASED(RWA),             /* WORK AREA FOR OS/VS LOCATE    */ 51000037
        3 VOLENTCT FIXED(15),       /* VOLUME ENTRY COUNT            */ 51200037
        3 VLST(20) BDY(HWORD),      /* VOLUME LIST                   */ 51400037
          5 DEVTYP CHAR(4),         /* DEVICE TYPE                   */ 51600037
          5 VOLSER CHAR(6),         /* VOLUME SERIAL NUMBER          */ 51800037
          5 FSN PTR(16) BDY(BYTE),  /* FILE SEQUENCE NUMBER          */ 52000037
        3 * CHAR(10),               /* BINARY ZEROS                  */ 52200037
        3 CVOLIND BDY(BYTE),        /* CAN BE DEVICE TYPE            */ 52400037
          5 TTR1 CHAR(3),           /* TTR - NEXT BLOCK(OVER 20 VOL) */ 52600037
          5 BIN0 BIT(8),            /* BINARY ZEROS                  */ 52800037
        3 TTR2 CHAR(3),             /* TTR FOR NEXT BLOCK READ       */ 53000037
        3 CVLSER CHAR(6);           /* VOLUME SERIAL OF REQ CVOL     */ 53200037
 % CALLSF: MACRO ;                      /*GENERATES LABELED CALLS   */  53400090
     DCL IGGMODID EXT;              /* GLOBAL MODULE ID      @Y30SSPJ*/ 53400437
     DCL IGGBASE2 EXT;              /* SECONDARY BASE REG    @ZA29164*/ 53400737
     DCL (XMODTBL,XMODTBLB,WARG) CHAR;  /* WORK VARIABLES    @Y30SSPJ*/ 53401037
     DCL (HIT1,HIT2) FIXED;         /* WORK VARIABLES        @Y30SSPJ*/ 53402037
     XMODTBL='-SLEN-SLIV-AA;-ACDV-AB;-MCO-AC;-MCO2-TINQ'|| /*@Y30SSPJ*/ 53403037
  '-TIDQ-RAOP-AD;-DCME-MEBM-AE;-DELC-EMSG-EMIO-AF;-IORA'|| /*@Y30SSPJ*/ 53406637
       '-ISCI-PUPC-PDE-PDEC-PAD-PADC-AOCI-AXCI-RCCR'    || /*@Y30SSPJ*/ 53407237
       '-CCCR-XIO-AG;-SCAT-QNQC-AH;-FDSP-DFM1-AI;-DBDI' || /*@Y30SSPJ*/ 53407837
       '-AJ;-DCMB-AK;-DTIM-DEF-AL;-DBVC-SLOC-SLEI-SLEL' || /*@Y30SSPJ*/ 53408437
  '-AM;-DRDA-DSCB-DCCE-PSEM-AN;-DEFB-DEFX-AO;-DCDA-AP;' || /*@Y30SSPJ*/ 53409037
  '-DEFS-AQ;-SALL-AR;-DCRC-DEFC-AS;-CDVR-ARFS-AT;-SALS' || /*@Y30SSPJ*/ 53411037
       '-AU;-MOD-UPD-DEL2-SGOP-AV;-ADGO-GNEX-GREL-IGOP' || /*@Y30SSPJ*/ 53412037
       '-PREC-AW;-ALT2-EXPD-SHNK-MGO-DGO-DGOP-AX;-SCNC' || /*@Y30SSPJ*/ 53413037
       '-AY;-EXT-LOC-AZ;-GLOC-GDGL-A2;-SC2-GRE-RPLM'    || /*@Y30SSPJ*/ 53413437
       '-RPLF-A3;-DGDS-ERUG-A4;-DELX-DALL-DELB'         || /*@Y30SSPJ*/ 53415037
     '-A5;-DFS2-BJFB-CBPT-CRTC-A6;-VMSC-DEMV-DVMV-DUSC' || /*@Y30SSDW*/ 53417037
       '-MCRA-DF4T-A7;-DFRS-A8;-CMRR-CCBC-A9;' ;           /*@Y30SSPJ*/ 53417437
     XMODTBLB='-TSTS-GVAL-GREC-BA;-UPDE-BB;-INIT-SVOL'  || /*@Y30SSPJ*/ 53419437
       '-BC;-ALT-BD;-ALVL-ALEC-ANVV-BE;-SSCR-BF;-DEL'   || /*@Y30SSPJ*/ 53420037
       '-DOPN-DEXA-DLXT-BG;-DEFA-DAVO-BH;-GET-GETC-TNXO'|| /*@Y30SSPJ*/ 53421437
       '-UCRS-TXO-BI;-GDSP-BJ;-LSP-LDCS-BK;-DELS-DUCB'  || /*@Y30SSPJ*/ 53422037
       '-DLVM-DLET-BL;-CKAU-BM;-ALVR-VRD-ALMD-ALSV-BN;' || /*@Y30SSPJ*/ 53423037
       '-RAPA-RAPU-RAG-RAPD-RARC-XRIO-RASC-BO;-SPAC-RET1'||/*@Y30SSPJ*/ 53423437
       '-BP;-LSTC-BQ;-BMR-BR;-XVAL-XEXT-BS;-XMOD-XLT2'  || /*@Y30SSPJ*/ 53425037
       '-XEL2-XDGO-BT;-F4RD-F4WR-F4DQ-BU;-SMFA-SMFF-SMFS'||/*@Y30SSPJ*/ 53426037
       '-SMFL-SMFR-SMFZ-BV;-DEIN-BW;-DSPC-BX;-DRSP-BY;' || /*@Y30SSPJ*/ 53428037
       '-CONV-GALO-VALI-BZ;'                            || /*@Y30SSSG*/ 53428837
       '-DCNV-ITER-CMKY-DPBI-DCCO-FPDA-B0;'             || /*@Y30SSSG*/ 53428937
       '-UADD-UDEL-B1;-AUPG-B2;'                        || /*@Y30SSDW*/ 53429237
       '-SMF-SMFG-B3;-DCRA-B4;-DEAX-DIAX-DEPT-DIPT'     || /*@Y30SSDW*/ 53430837
       '-DCLS-DUPG-B5;-WTSO-SPSC-INMD-B6;-RUS-B7;-DFBO' || /*@Y30SSPJ*/ 53431237
       '-DUND-CNBO-B8;-PAIX-PATH-B9;'                   || /*@Y30SSDW*/ 53432237
       '-RAPV-MODI-WCRA-WCAT-DA;' ;                        /*@Y30SSDW*/ 53432337
     WARG='-'||MACLIST(1)||'-';     /* SEARCH AGUMENT        @Y30SSPJ*/ 53432437
     HIT1=INDEX(XMODTBL,WARG);      /* SEARCH TABLE A        @Y30SSPJ*/ 53432737
     IF HIT1=0 THEN                 /* NAME FOUND TABLE A?   @Y30SSPJ*/ 53433037
       DO;                          /* NO-NOT FOUND IN TBL A @Y30SSPJ*/ 53433337
         XMODTBL=XMODTBLB;          /* SET-UP TABLE A WITH B @Y30SSPJ*/ 53433637
         HIT1=INDEX(XMODTBL,WARG);  /* SEARCH TABLE B        @Y30SSPJ*/ 53433937
       END;                                                /*@Y30SSPJ*/ 53434037
     ELSE;                                                 /*@Y30SSPJ*/ 53434237
     IF HIT1^=0 THEN                /* NAME FOUND TABLES?    @Y30SSPJ*/ 53434637
       DO;                          /* YES-NAME FOUND        @Y30SSPJ*/ 53434737
         HIT2=INDEX(XMODTBL(HIT1:LENGTH(XMODTBL)),';')+HIT1-1;          53434837
                                    /* SEARCH FOR MOD NAME   @Y30SSPJ*/ 53435137
         IF IGGMODID(2:3) ^= XMODTBL(HIT2-2:HIT2-1) THEN                53435437
           DO;                                             /*@Y30SSPJ*/ 53435837
             ANS ('/') SKIP COL(MACCOL);                   /*@Y30SSPJ*/ 53436037
             ANS ('*') COL(MACCOL+1);                      /*@Y30SSPJ*/ 53459337
             ANS(' CALL TO MODULE IGG0CL' ||               /*@Y30SSPJ*/ 53469337
                       XMODTBL(HIT2-2:HIT2-1) || ' ')                   53479337
                         COL(MACCOL+2);                    /*@Y30SSPJ*/ 53481337
             ANS('*') COL(70);      /*GENERATE COMMENT       @Y30SSPJ*/ 53481737
             ANS('/') COL(71);      /*GENERATE COMMENT       @Y30SSPJ*/ 53481937
           END;                                            /*@Y30SSPJ*/ 53482537
         ELSE;                                             /*@Y30SSPJ*/ 53482937
       END;                             /*                   @Y30SSPJ*/ 53576637
     ANS ('Z' || MACINDEX(2:4) || MACLIST(1) || ':') SKIP COL(2);       53699937
     IF IGGBASE2 ^= '' THEN         /* BASE REG 2 SPECIFIED? @ZA29164*/ 53800037
       DO;                          /* YES                   @ZA29164*/ 53809037
         ANS('DO;') COL(MACCOL);    /*                       @ZA29164*/ 53818037
         ANS('CALL IGGP'||MACLIST(1)||';') COL(MACCOL+2);/*  @ZA29164*/ 53827037
         ANS('GEN(RLDSBREG IGGP'||MACLIST(1)||');') COL(MACCOL+2);      53836037
         ANS('/* RELOAD SECONDARY BASE REG */') COL(37);/*   @ZA29164*/ 53845037
         ANS('END;') COL(MACCOL);   /*                       @ZA29164*/ 53854037
       END;                         /*                       @ZA29164*/ 53863037
     ELSE                           /* NO BASE REG 2         @ZA29164*/ 53872037
       ANS ('CALL IGGP' || MACLIST(1) || ';') COL(MACCOL); /*@Y30SSPJ*/ 53890037
     ANS (' ') SKIP COL(MACCOL+LENGTH(MACLIST)+7);         /*@Y30SSPJ*/ 54000037
 % END ;                                                                54200090
 % CATPROB:                         /* PROBLEM DETERMINATION @Y30SSPJ*/ 54250037
     MACRO KEYS(MODID,ECD,RCD);     /* MACRO                 @Y30SSPJ*/ 54300037
     DCL IGGMODID CHAR EXT;         /* EBCDIC MODULE ID      @Y30SSPJ*/ 54310037
     DCL (ERROR,REASON,ERRCOM) CHAR;/* WORK VARIABLES        @Y30SSPJ*/ 54320037
     DCL (RSNTBL,RNUM,CARG) CHAR;   /* WORK VARIABLES        @Y30SSPJ*/ 54330037
     DCL (HIT1,HIT2,RCODE) FIXED;   /* WORK VARIABLES        @Y30SSPJ*/ 54340037
     RCODE = 0;                     /* INTERNAL RETURN CODE  @Y30SSPJ*/ 54340437
     RNUM = '0,1,2,3,4,5,6,7,8,9,'; /* NUMERIC SEARCH TABLE  @Y30SSPJ*/ 54340537
     RSNTBL = '0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,'||              54340637
              '30,32,34,36,38,40,42,44,46,48,50,52,54,' ||              54340737
              '56,58,60,62,64,66,68,70,72,74,76,78,80,' ||              54344537
              '82,84,86,88,90,92,94,96,98,100,102,104,' ||              54346537
              '106,108,110,112,114,116,118,120,122,124,'||              54348537
              '126,' ;              /* REASON SEARCH TABLE   @Y30SSPJ*/ 54349037
     IF MODID(1) = '*' THEN         /* MODULE ID ONLY?       @Y30SSPJ*/ 54349437
       DO;                          /* YES-MODULE ID ONLY    @Y30SSPJ*/ 54349837
         ANS('/') SKIP COL(MACCOL);                        /*@Y30SSPJ*/ 54349937
         ANS('*') COL(MACCOL+1);                           /*@Y30SSPJ*/ 54353237
         ANS(' SET CCAMODID=' || IGGMODID ||                            54355237
          ', CCAREASN=RSN0, CCARETRN=RCS ' ) COL(MACCOL+2);/*@Y30SSPJ*/ 54355637
         ANS('*') COL(70);                                 /*@Y30SSPJ*/ 54356037
         ANS('/') COL(71);                                 /*@Y30SSPJ*/ 54356437
         ANS('CCAPROB=IGGSEGID;') SKIP COL(MACCOL);        /*@Y30SSPJ*/ 54356537
         ANS(' ') COL(MACCOL+LENGTH(MACKEYS)+8);           /*@Y30SSPJ*/ 54356637
         RETURN CODE(RCODE);        /* RETURN                @Y30SSPJ*/ 54356737
       END;                                                /*@Y30SSPJ*/ 54357837
     ELSE;                                                 /*@Y30SSPJ*/ 54359837
     ERROR = ECD(1);                /* PICK-UP ERROR CODE    @Y30SSPJ*/ 54359937
     IF RCD(1) = '' THEN            /*REASON CODE SPECIFIED? @Y30SSPJ*/ 54362737
       IF MODID(1) ^= 'NO' THEN     /*NO-MODID = NO?         @Y30SSPJ*/ 54364737
         REASON = '0';              /*DEFAULT REASON         @Y30SSPJ*/ 54365137
       ELSE;                                               /*@Y30SSPJ*/ 54365537
     ELSE                           /*YES-REASON SPECIFIED   @Y30SSPJ*/ 54365937
       REASON = RCD(1);             /*USER SPECIFIED REASON  @Y30SSPJ*/ 54366137
     IF REASON ^= '' THEN           /*REASON SPECIFIED?      @Y30SSPJ*/ 54366537
       IF REASON(1:1) ^= '(' THEN   /*YES-IS IT IN A FIELD?  @Y30SSPJ*/ 54366637
         DO;                        /*NO-NOT IN A FIELD      @Y30SSPJ*/ 54367437
           CARG = REASON(1:1)||','; /*FORM SEARCH ARGUMENT   @Y30SSPJ*/ 54367837
           HIT1 = INDEX(RNUM,CARG); /*SEARCH FOR NUMERIC     @Y30SSPJ*/ 54368237
           IF HIT1 = 0 THEN         /*1ST CHAR NUMERIC?      @Y30SSPJ*/ 54368637
             DO;                    /*NO-INVALID SPECIFIED   @Y30SSPJ*/ 54369037
               RCODE = 12;          /*SET RETURN CODE        @Y30SSPJ*/ 54369137
               ERRCOM = '   ***ERROR***   RCD(' || REASON ||            54371737
                 ') IS NOT AN VALID NUMERIC REASON CODE.'; /*@Y30SSPJ*/ 54373737
               ANS(COMMENT(ERRCOM)) SKIP COL(2);           /*@Y30SSPJ*/ 54374137
               REASON = '(' || REASON || ')';              /*@Y30SSPJ*/ 54374237
               GO TO BV;            /*BYPASS FURTHER TESTS   @Y30SSPJ*/ 54374337
             END;                                          /*@Y30SSPJ*/ 54375037
           ELSE;                                           /*@Y30SSPJ*/ 54375437
 BU:       HIT2=HIT2+1;             /*REASON CHAR POINTER    @Y30SSPJ*/ 54375837
           IF REASON(HIT2:HIT2)='0' THEN /*REASON CHAR = 0?  @Y30SSPJ*/ 54376237
             IF HIT2<LENGTH(REASON)THEN /*FINISHED ?         @Y30SSPJ*/ 54376337
               GO TO BU;            /*NO-LOOP TIL DONE       @Y30SSPJ*/ 54376437
             ELSE;                                         /*@Y30SSPJ*/ 54376637
           ELSE;                                           /*@Y30SSPJ*/ 54376737
           CARG = REASON(HIT2:LENGTH(REASON)) || ',';      /*@Y30SSPJ*/ 54376837
           HIT1 = INDEX(RSNTBL,CARG); /*SEARCH FOR REASON    @Y30SSPJ*/ 54376937
           IF HIT1 = 0 THEN         /*VALID REASON CODE?     @Y30SSPJ*/ 54377537
             DO;                    /*NO-NONE FOUND          @Y30SSPJ*/ 54377937
               RCODE = 12;          /*SET RETURN CODE        @Y30SSPJ*/ 54378337
               ERRCOM = '   ***ERROR***   RCD(' || REASON ||            54378737
                 ') IS NOT A VALID REASON CODE.';          /*@Y30SSPJ*/ 54378937
               ANS(COMMENT(ERRCOM)) SKIP COL(2);           /*@Y30SSPJ*/ 54379337
               REASON = '(' || REASON || ')';              /*@Y30SSPJ*/ 54392237
               GO TO BV;            /*SKIP FURTHER TESTS     @Y30SSPJ*/ 54402237
             END;                                          /*@Y30SSPJ*/ 54404237
           ELSE;                                           /*@Y30SSPJ*/ 54406237
           REASON = 'RSN'||REASON(HIT2:LENGTH(REASON));    /*@Y30SSPJ*/ 54406337
         END;                                              /*@Y30SSPJ*/ 54406437
       ELSE;                                               /*@Y30SSPJ*/ 54410737
     ELSE                           /*NO-NO REASON CODE      @Y30SSPJ*/ 54412737
       IF ERROR = '' THEN           /*ERROR CODE SPECIFIED?  @Y30SSPJ*/ 54414737
         IF MODID(1) = 'NO' THEN    /*NO-MODID = NO?         @Y30SSPJ*/ 54414837
           DO;                      /*YES-DEFAULT TO 0       @Y30SSPJ*/ 54414937
             ERROR = 'RCS';         /*SET ERROR TO 0         @Y30SSPJ*/ 54415037
             REASON = 'RSN0';       /*SET REASON TO 0        @Y30SSPJ*/ 54419337
           END;                                            /*@Y30SSPJ*/ 54421337
         ELSE;                                             /*@Y30SSPJ*/ 54423337
       ELSE;                                               /*@Y30SSPJ*/ 54423437
 BV: IF ERROR ^= 'RCS' THEN         /*REASON NOT RCS?        @Y30SSPJ*/ 54423537
       IF REASON ^= '' THEN         /*YES-REASON NOT NULL?   @Y30SSPJ*/ 54423637
         IF REASON(1:1) ^= '(' THEN /*YES-REASON NOT FIELD?  @Y30SSPJ*/ 54427937
           IF MODID(1) ^= 'NO' THEN /*YES-MODID NOT NO?      @Y30SSPJ*/ 54429937
             DO;                    /*YES-ALL TRUE           @Y30SSPJ*/ 54431937
               ANS('/') SKIP COL(MACCOL);                  /*@Y30SSPJ*/ 54432037
               ANS('*') COL(MACCOL+1);                     /*@Y30SSPJ*/ 54432137
               ANS(' SET CCAMODID=' || IGGMODID ||                      54432237
                 ', CCAREASN=' || REASON || ', CCARETRN='||             54436537
                 ERROR ) COL(MACCOL+2);                    /*@Y30SSPJ*/ 54438537
               ANS('*') COL(70);                           /*@Y30SSPJ*/ 54440537
               ANS('/') COL(71);                           /*@Y30SSPJ*/ 54440637
               ANS('CCAPROB=IGGSEGID+('||REASON||'*K256)+'||ERROR||';') 54440737
                  COL(MACCOL);                             /*@Y30SSPJ*/ 54440837
               ANS(' ') COL(MACCOL+LENGTH(MACKEYS)+8);     /*@Y30SSPJ*/ 54445137
               RETURN CODE(RCODE);  /* RETURN                @Y30SSPJ*/ 54447137
             END;                                          /*@Y30SSPJ*/ 54449137
           ELSE;                                           /*@Y30SSPJ*/ 54449237
         ELSE;                                             /*@Y30SSPJ*/ 54449337
       ELSE;                                               /*@Y30SSPJ*/ 54449437
     ELSE;                                                 /*@Y30SSPJ*/ 54453737
     IF MODID(1) ^= 'NO' THEN       /*MODID NOT NO?          @Y30SSPJ*/ 54455737
       IF ERROR = 'RCS' THEN        /*YES-ERROR CODE RCS?    @Y30SSPJ*/ 54457737
         IF REASON(1:1) ^= '(' THEN /*YES-REASON NOT FIELD?  @Y30SSPJ*/ 54457837
           DO;                      /*YES-ALL TRUE           @Y30SSPJ*/ 54457937
             ANS(COMMENT(' CLEAR CCAMODID, CCAREASN, AND CCARETRN'))    54458037
               COL(MACCOL+2);                              /*@Y30SSPJ*/ 54462337
             ANS('CCAPROB=IGNOREIT;') SKIP COL(MACCOL);    /*@Y30SSPJ*/ 54464337
             ANS(' ') COL(MACCOL+LENGTH(MACKEYS)+8);       /*@Y30SSPJ*/ 54466337
             RETURN CODE(RCODE);    /* RETURN                @Y30SSPJ*/ 54466437
           END;                                            /*@Y30SSPJ*/ 54466537
         ELSE;                                             /*@Y30SSPJ*/ 54466637
       ELSE;                                               /*@Y30SSPJ*/ 54470937
     ELSE;                                                 /*@Y30SSPJ*/ 54472937
     ANS('DO;') COL(MACCOL);                               /*@Y30SSPJ*/ 54474937
     IF MODID(1) ^= 'NO' THEN       /*MODID NOT NO?          @Y30SSPJ*/ 54475037
       DO;                          /*YES-GENERATE MODULE ID @Y30SSPJ*/ 54475137
         ANS('CCAMODID='||IGGMODID||';')SKIP COL(MACCOL+2);/*@Y30SSPJ*/ 54475237
         ANS(COMMENT('SET MODULE ID')) COL(MACCOL+17);     /*@Y30SSPJ*/ 54479537
       END;                                                /*@Y30SSPJ*/ 54481537
     ELSE;                                                 /*@Y30SSPJ*/ 54483537
     IF REASON ^= '' THEN           /*REASON NOT NULL?       @Y30SSPJ*/ 54483637
       DO;                          /*YES-GENTERATE REASON   @Y30SSPJ*/ 54483737
         IF REASON(1:1) = '(' THEN  /*REASON IN A FIELD/REG? @Y30SSPJ*/ 54483837
           REASON=REASON(2:LENGTH(REASON)-1);/*YES-DEL PAREN @Y30SSPJ*/ 54488137
         ELSE;                                             /*@Y30SSPJ*/ 54490137
         ANS('CCAREASN='||REASON||';') SKIP COL(MACCOL+2); /*@Y30SSPJ*/ 54492137
         ANS(COMMENT('SET REASON CODE')) COL(MACCOL+LENGTH(REASON)+13); 54492237
       END;                                                /*@Y30SSPJ*/ 54492337
     ELSE;                                                 /*@Y30SSPJ*/ 54492437
     IF ERROR ^= '' THEN            /*ERROR NOT NULL?        @Y30SSPJ*/ 54496737
       DO;                          /*YES-GENERATE ERROR     @Y30SSPJ*/ 54498737
         ANS('CCARETRN='||ERROR||';') COL(MACCOL+2);       /*@Y30SSPJ*/ 54500737
         ANS(COMMENT('SET RETURN CODE')) COL(MACCOL+LENGTH(ERROR)+13);  54500837
       END;                                                /*@Y30SSPJ*/ 54500937
     ELSE;                                                 /*@Y30SSPJ*/ 54501037
     ANS('END;') SKIP COL(MACCOL);                         /*@Y30SSPJ*/ 54505337
     ANS(' ') COL(MACCOL+LENGTH(MACKEYS)+8);               /*@Y30SSPJ*/ 54507337
     RETURN CODE(RCODE);            /* RETURN                @Y30SSPJ*/ 54509337
 % END;                                                    /*@Y30SSPJ*/ 54509437
 % SPAT:   MACRO;                       /*SPILL,PUSH & TRACK   Y02020*/ 54509737
           ANS ('DO;') SKIP COL(MACCOL);                    /* Y02020*/ 54514037
           ANS ('IF MNATFULL=ON THEN') SKIP COL(MACCOL+2);  /* Y02020*/ 54518337
           ANS ('/*TRACKING TABLE FULL       */') COL(41);  /* Y02020*/ 54522637
           ANS ('?CALLSF (ARFS);') SKIP RESCAN COL(MACCOL+2);           54526937
                                                            /* Y02020*/ 54531237
           ANS ('/*YES,CALL SPILL ROUTINE    */') COL(41);  /* Y02020*/ 54535537
           ANS ('GEN REFS(CCAMNAT)') SKIP COL(MACCOL+2);    /* Y02020*/ 54539837
              ANS ('(MVC CCAMNAT(248,11),CCAMNAT+8(11));')              54544137
                 SKIP COL(MACCOL+5);                        /* Y02020*/ 54548437
           ANS ('/*PUSH AND TRACK            */') COL(41);              54552737
                                                            /* Y02020*/ 54557037
           ANS ('END;') SKIP COL(MACCOL);                   /* Y02020*/ 54561337
 % END ;                                                    /* Y02020*/ 54574237
 % GETREC: ADDREC: UPDREC: DELREC:                                      54587137
           MACRO KEYS(BY,FOR,RAB);                                      54600090
           DCL(IOI1,IOI2,IOI3,IOI4) CHAR;                               54800090
           DCL OP(1) CHAR;                                              55000090
           OP(1) = MACNAME(1:1);                                        55200090
           ANS ('DO;') SKIP COL(MACCOL);                                55400090
           IF    OP(1) ^= 'G'                                           55600090
             THEN GOTO IOIJ ;                                           55800090
           IF BY(1) = '*'                                               56000090
            THEN GOTO IOIB ;                                            56200090
           IF BY(1) = 'KEY' THEN                                        56400090
             DO;                                                        56600090
     ANS ('CCAF1KEY = ON;     /* TRUE NAME GET*/')        /* @Y30SSDW*/ 56800037
         SKIP COL(MACCOL);                                /* @Y30SSDW*/ 56900037
     ANS ('CCAF1KGE = OFF;    /*NOT GET NEXT */')         /* @Y30SSDW*/ 57000037
         SKIP COL(MACCOL);                                /* @Y30SSDW*/ 57100037
               GOTO IOIB ;                                              57200090
             END;                                                       57400090
           IF BY(1) = 'KGE' THEN                                        57600090
             DO;                                                        57800090
     ANS ('CCAF1KEY = ON;     /*TRUE NAME GET*/')         /* @Y30SSDW*/ 58000037
         SKIP COL(MACCOL);                                /* @Y30SSDW*/ 58100037
     ANS ('CCAF1KGE = ON;     /* GET NEXT    */')         /* @Y30SSDW*/ 58200037
         SKIP COL(MACCOL);                                /* @Y30SSDW*/ 58300037
               GOTO IOIB ;                                              58400090
             END;                                                       58600090
     ANS ('CCAF1KEY = OFF;    /*GET BY CI NO. */')        /* @Y30SSDW*/ 58800037
         SKIP COL(MACCOL);                                /* @Y30SSDW*/ 58900037
     ANS ('CCAF1KGE = OFF;    /*NOT GET NEXT */')         /* @Y30SSDW*/ 59000037
         SKIP COL(MACCOL);                                /* @Y30SSDW*/ 59100037
 IOIB:     IF FOR(1) = '*'                                              59200090
             THEN GOTO IOIJ ;                                           59400090
             IF FOR(1) = 'NUP'                                          59600090
             THEN                                                       59800090
     ANS ('CCAF1UP = OFF;     /*NOT GET UPD  */') SKIP COL(MACCOL);     60000037
             ELSE                                                       60200090
     ANS ('CCAF1UP = ON;      /*GET FOR UPD  */') SKIP COL(MACCOL);     60400037
 IOIJ:     IF RAB(1) = ''                                               60600090
             THEN GOTO IOIM ;                                           60800090
           IOI1 = RAB(1) ;                                              61000090
           IF LENGTH(IOI1) = 1                                          61200090
             THEN IOI1 = 'CCARAB' || RAB(1) ;                           61400090
     ANS ('CCAURAB = ADDR( IOI1 ) ; /*SET RAB PTR*/')                   61600090
             SKIP RESCAN COL(MACCOL) ;                                  61800090
 IOIM:                                                                  62000090
           IF OP(1) = 'G' THEN          /* GETREC ?                 */  62200090
             DO;                        /* YES                      */  62400090
               ANS ('?CALLSF (GET);') SKIP RESCAN COL(MACCOL+2);        62600090
               ANS ('/* GET RECORD             */') COL(41);            62800090
               GOTO IOIP;                                               63000090
             END;                                                       63200090
           IF OP(1) = 'A' THEN          /* ADDREC ?                 */  63400090
             DO;                        /* YES                      */  63600090
               ANS ('?CALLSF (PAD);') SKIP RESCAN COL(MACCOL+2);        63800090
               ANS ('/* PUT-ADD RECORD         */') COL(41);            64000090
               GOTO IOIP;                                               64200090
             END;                                                       64400090
           IF OP(1) = 'U' THEN          /* UPDREC ?                 */  64600090
             DO;                        /* YES                      */  64800090
               ANS ('?CALLSF (PUPC);') SKIP RESCAN COL(MACCOL+2);       65000090
               ANS ('/* PUT-UPDATE RECORD      */') COL(41);            65200090
               GOTO IOIP;                                               65400090
             END;                                                       65600090
                                        /* DELREC                   */  65800090
           ANS ('?CALLSF (PDE);') SKIP RESCAN COL(MACCOL+2);            66000090
           ANS ('/* PUT-DELETE RECORD        */') COL(41);              66200090
 IOIP: ANS ('END;') SKIP COL(MACCOL);                                   66400090
 % END ;                                                                66600090
 % GETMS: FREEMS:                                                       66800090
           MACRO KEYS(CLASS,RFR);                           /* Y02020*/ 67000002
           DCL (SPL, POOLTYPE) CHAR;    /*SUBPOOL VARIABLES  @Y30SSDW*/ 67600037
           IF CLASS(1) = 'S' THEN                         /* @Y30SSDW*/ 67800037
             DO;                                          /* @Y30SSDW*/ 67900037
               SPL = 'SSUBPOOL';                          /* @Y30SSDW*/ 68000037
               POOLTYPE = 'SYSTEM SUBPOOL 241';           /* @Y30SSDW*/ 68050037
             END;                                         /* @Y30SSDW*/ 68100037
           ELSE;                                          /* @Y30SSDW*/ 68150037
           IF CLASS(1) = 'U' THEN                         /* @Y30SSDW*/ 68200037
             DO;                                          /* @Y30SSDW*/ 68300037
               SPL  = 'USUBPOOL';                         /* @Y30SSDW*/ 68400037
               POOLTYPE = 'USER SUBPOOL 252';             /* @Y30SSDW*/ 68450037
             END;                                         /* @Y30SSDW*/ 68500037
           ELSE;                                          /* @Y30SSDW*/ 68550037
           IF CLASS(1) = 'F' THEN                         /* @ZA29164*/ 68557037
             DO;                                          /* @ZA29164*/ 68564037
               SPL = 'FSUBPOOL';                          /* @ZA29164*/ 68571037
               POOLTYPE = 'SYSTEM SUBPOOL 229';           /* @ZA29164*/ 68578037
             END;                                         /* @ZA29164*/ 68585037
           ELSE;                                          /* @ZA29164*/ 68592037
           ANS ('R1 = ADDR(CCAMSSPL);') SKIP COL(MACCOL); /* @Y30SSDW*/ 68600037
           ANS ('/* POINT TO STRG MGMT P.L.  */') COL(41);/* @Y30SSDW*/ 68800037
           IF SPL ^= '' THEN                                            69000090
             DO;                                                        69200090
               ANS ('CCAMNSPL = SPL;') SKIP COL(MACCOL);  /* @Y30SSDW*/ 69400037
               ANS ('/* STORE SUBPOOL VALUE      */') COL(41);          69600090
             END;                                                       69800090
           IF MACNAME = 'FREEMS' THEN                                   70000090
             DO;                                                        70200090
               IF RFR(1)^='NO' THEN     /*RFR ALLOWED          Y02020*/ 70202037
                 ANS ('?SPAT;') SKIP RESCAN COL(MACCOL);                70204037
                                        /*GEN SPILL,PUSH,TRK   Y02020*/ 70206037
               ANS ('/') SKIP COL(MACCOL);                /* @Y30SSDW*/ 70207037
               ANS ('*') COL(MACCOL+1);                   /* @Y30SSDW*/ 70214037
               ANS (' RELEASE MAIN STORAGE FROM ' || POOLTYPE)          70221037
                   COL(MACCOL+3);                         /* @Y30SSDW*/ 70228037
               ANS ('*') COL(70);                         /* @Y30SSDW*/ 70235037
               ANS ('/') COL(71);                         /* @Y30SSDW*/ 70242037
               ANS ('GEN(FREEMAIN L,MF=(E,(1))) ;') SKIP COL(MACCOL);   70400002
                                                            /* Y02020*/ 70450002
             END;                                                       70800090
           ELSE                                                         71000090
             DO;                                                        71200090
               ANS ('/') SKIP COL(MACCOL);                /* @Y30SSDW*/ 71220037
               ANS ('*') COL(MACCOL+1);                   /* @Y30SSDW*/ 71240037
               ANS (' ALLOCATE MAIN STORAGE FROM ' || POOLTYPE)         71260037
                   COL(MACCOL+3);                         /* @Y30SSDW*/ 71280037
               ANS ('*') COL(70);                         /* @Y30SSDW*/ 71300037
               ANS ('/') COL(71);                         /* @Y30SSDW*/ 71320037
               ANS ('GEN(GETMAIN LC,MF=(E,(1)));') SKIP COL(MACCOL);    71400002
                                                            /* Y02020*/ 71450002
               ANS ('/* GET MAIN STORAGE SPACE   */') COL(41);          71600037
               ANS ('GEN(LR R1,R15);')  SKIP COL(MACCOL);               71800090
               ANS ('/* PICK UP RETURN CODE      */') COL(41);          72000090
               ANS ('IF R1 ^= NOGETMSE THEN') SKIP COL(MACCOL);         72200037
               ANS ('/* CHECK FOR ERROR RETURN   */') COL(41);          72400090
               ANS ('?CATPROB ECD(RCINSSWA) RCD(2);')      /*@Y30SSPJ*/ 72450037
                    SKIP RESCAN COL(MACCOL);               /*@Y30SSPJ*/ 72500037
               ANS ('/* INSUFFICIENT CORE ERROR  */')      /*@Y30SSPJ*/ 72550037
                   COL(41);                                /*@Y30SSPJ*/ 72600037
               ANS(' ') COL(MACCOL+LENGTH(MACKEYS)+6);     /*@Y30SSPJ*/ 72650037
               IF RFR(1)^='NO' THEN     /*RFR ALLOWED          Y02020*/ 72850002
                 DO;                                        /* Y02020*/ 72900002
                   ANS ('ELSE') SKIP COL(MACCOL);           /* Y02020*/ 72950002
                   ANS ('/* GETMAIN SUCCESSFUL            */')          72952037
                       COL(37);                           /* @Y30SSDW*/ 72954037
                   ANS ('DO;') SKIP COL(MACCOL+2);          /* Y02020*/ 72960002
                   ANS ('?SPAT;') SKIP RESCAN COL(MACCOL+4);/* Y02020*/ 72970002
                   IF CLASS(1)='S' THEN /*CLASS S CORE         Y02020*/ 72980002
                     DO;                                    /* Y02020*/ 72990002
                       ANS ('MNATSCLS=ON;') SKIP COL(MACCOL+4);         72992002
                                                            /* Y02020*/ 72994002
                       ANS ('/*INDICATE CLASS S CORE     */')           72996002
                            COL(41);                        /* Y02020*/ 72998002
                     END;                                   /* Y02020*/ 72998402
                   ANS ('END;') SKIP COL(MACCOL+2);         /* Y02020*/ 72998802
                 END;                                       /* Y02020*/ 72999202
             END;                                                       73000090
 % END;                                                                 80400090
 % CKADD:                                                               80600090
         MACRO KEYS(START,LENG);                                        80800090
         DCL SYSTEM CHAR EXTERNAL;                                      80850037
         DCL (STADD,EDADD) CHAR;                                        81400090
         STADD=START(1);                                                81600090
         EDADD=LENG(1);                                                 81800090
 CKN1:   VALC2 = 'V1' || MACINDEX;                                      83850037
         ANS('RFY (R7,R8,R9,R10,R13,R14,R15) RESTRICTED;')  /* Y02020*/ 83900002
               SKIP COL(MACCOL);                            /* Y02020*/ 83950002
         ANS('R7=R4;') SKIP COL(MACCOL);                    /* Y02020*/ 84000002
         ANS('/* SAVE REGISTERS */') COL(41);               /* Y02020*/ 84050002
         ANS('R8=R11;') SKIP COL(MACCOL);                   /* Y02020*/ 84060002
         ANS('R9=R12;') SKIP COL(MACCOL);                   /* Y02020*/ 84100002
         ANS('R10=R13;') SKIP COL(MACCOL);                  /* Y02020*/ 84150002
         ANS('GEN REFS(PSALITA,FLC)                         /* Y02020*/ 84450002
               SETS(R11,R12,R13,R14,R15)                    /* Y02020*/ 84500002
               SEQFLOW;') SKIP COL(MACCOL);                 /* Y02020*/ 84550002
         ANS('SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,')      /* Y02020*/ 84600002
               SKIP COL(10);                                /* Y02020*/ 84650002
         ANS('X') COL(72);                                  /* Y02020*/ 84700002
         ANS('RELATED=(''AFTER VALIDITY CHECK ROUTINE'')')  /* Y02020*/ 84750002
               COL(16);                                     /* Y02020*/ 84800002
         ANS('@ENDGEN;') SKIP COL(MACCOL);                  /* Y02020*/ 84810002
         ANS('R11=R8;') SKIP COL(MACCOL);                   /* Y02020*/ 84850002
         ANS('/* RESTORE CCA BASE */') COL(41);             /* Y02020*/ 84900002
         ANS('R12=R9;') SKIP COL(MACCOL);                   /* Y02020*/ 84950002
         ANS('/* RESTORE MODULE BASE */') COL(41);          /* Y02020*/ 84960002
         ANS('RFY (R14,R15) UNRESTRICTED;')                 /* Y02020*/ 84970002
               SKIP COL(MACCOL);                            /* Y02020*/ 84972002
         ANS('RFY (R1) RESTRICTED;') SKIP COL(MACCOL);      /* Y02020*/ 84980002
         IF STADD^='R1' THEN ANS('R1=STADD;')               /* Y02020*/ 84990002
               SKIP COL(MACCOL);                            /* Y02020*/ 84990402
         ANS('R13=R2;') SKIP COL(MACCOL);                   /* Y02020*/ 84990802
         ANS('R2=STADD+EDADD-1;') SKIP COL(MACCOL);         /* Y02020*/ 84992002
         ANS('/* ENDING ADDRESS TO CHECK */') COL(41);      /* Y02020*/ 84994002
         ANS('R4=CCATCB;') SKIP COL(MACCOL);                /* Y02020*/ 84996002
         ANS('CALL CVT0VL00;') SKIP COL(MACCOL);            /* Y02020*/ 84998002
         ANS('/* INVOKE VALIDITY CHK RTN */') COL(41);      /* Y02020*/ 84998402
         ANS('R2=R13;') SKIP COL(MACCOL);                   /* Y02020*/ 84998502
         ANS('RFY (R1) UNRESTRICTED;') SKIP COL(MACCOL);    /* Y02020*/ 84998802
         ANS('BC (8,VL'||MACINDEX||');') SKIP COL(MACCOL);  /* Y02020*/ 84999202
         ANS('/* SKIP IF AREA VALID */') COL(41);           /* Y02020*/ 84999602
         ANS('?CATPROB ECD(RCBLKVCK) RCD(2);') SKIP COL(MACCOL);        85005937
                                        /*USE PROB DET MACRO @Y30SSPJ*/ 85007937
         ANS('/* SET RETURN CODE */') COL(41);              /* Y02020*/ 85008237
         ANS('VL'||MACINDEX||':') SKIP COL(MACCOL);         /* Y02020*/ 85012437
         ANS('RFY (R14,R15) RESTRICTED;') SKIP COL(MACCOL); /* Y02020*/ 85016602
         ANS('GEN REFS(PSALITA,FLC)                         /* Y02020*/ 85026602
               SETS(R11,R12,R13,R14,R15)                    /* Y02020*/ 85028602
               SEQFLOW;') SKIP COL(MACCOL);                 /* Y02020*/ 85030602
         ANS('SETLOCK RELEASE,TYPE=LOCAL,') SKIP COL(10);   /* Y02020*/ 85350002
         ANS('X') COL(72);                                  /* Y02020*/ 85400002
         ANS('RELATED=(''BEFORE VALIDITY CHECK ROUTINE'')') /* Y02020*/ 85450002
               COL(16);                                     /* Y02020*/ 85500002
         ANS('@ENDGEN;') SKIP COL(MACCOL);                  /* Y02020*/ 85550002
         ANS('R4=R7;') SKIP COL(MACCOL);                    /* Y02020*/ 85600002
         ANS('/* RESTORE REGISTERS */') COL(41);            /* Y02020*/ 85650002
         ANS('R11=R8;') SKIP COL(MACCOL);                   /* Y02020*/ 85660002
         ANS('R12=R9;') SKIP COL(MACCOL);                   /* Y02020*/ 85700002
         ANS('R13=R10;') SKIP COL(MACCOL);                  /* Y02020*/ 85750002
         ANS('RFY (R13,R14,R15) UNRESTRICTED;')             /* Y02020*/ 85800002
               SKIP COL(MACCOL);                            /* Y02020*/ 85850002
         ANS('RFY (R7,R8,R9,R10) UNRSTD;') SKIP COL(MACCOL);            92200090
 %END;                                                                  92400090
 % RECID   ='CCASRID' ;                                                 92600090
 % RECKY    = 'CCASRCH' ;                                               92800090
 % VOLKY ='CCASRCH = CCASRCH  && CCASRCH; /*CLEAR SRCH ARG FLD*/        93000090
           CCASRCH(1:6)' ;                                              93200090
 % IDCOUNT = 'CCAASCIK' ;                                               93400090
 % INVOKE = 'RFY (R5,R6,R7,R8,R9,R10) RSTD;                             93600090
             RFY (R5,R6,R7,R8,R9,R10) UNRSTD;                           93800090
             CALL';                                                     94000090
                                                                        94010090
 % CATERR: MACRO KEYS(TYPE,REASON,CCHN,R); /*CATALOG ERROR MACRO    */  94050090
           IF R(1)^='' THEN                                             94100090
             DO;                                                        94150090
               ANS ('/****************************/') SKIP COL(41);     94160090
               ANS ('/' || '*' || R(1) ) SKIP COL(41);                  94170090
               ANS ('*' || '/') COL(69);                                94180090
               ANS ('/****************************/') SKIP COL(41);     94190090
             END;                                                       94192090
           ANS ('DO;') SKIP COL(MACCOL);                                94194090
           IF TYPE(1)= '' THEN                                          94196090
             GOTO CB;                                                   94198090
           IF TYPE(1) ^= '*' THEN                                       94198490
             DO;                                                        94198890
               ANS ('CCACD1='|| TYPE(1) ||';') SKIP COL(MACCOL+2);      94199290
               ANS ('/*STORE ERROR TYPE CODE     */') COL(41);          94199690
             END;                                                       94199790
 CB:       IF REASON(1) = '' THEN                                       94199890
             GOTO CC;                                                   94199990
           IF REASON(1) ^= '*' THEN                                     94249990
             DO;                                                        94259990
               ANS ('CCACD2='|| REASON(1) ||';') SKIP COL(MACCOL+2);    94269990
               ANS ('/* STORE REASON CODE        */') COL(41);          94279990
             END;                                                       94289990
 CC:       IF CCHN(1) = 'YES' THEN                                      94291990
             DO;                                                        94293990
               ANS ('CCACRRP=128;') SKIP COL(MACCOL+2);                 94295990
               ANS ('/*INCLUDE CALLER CHN IN MSG */') COL(41);          94297990
             END;                                                       94298390
           ANS ('?CALLSF (EMSG);') SKIP RESCAN COL(MACCOL+2);           94298790
           ANS ('/*ISSUE WTP ERROR MSG       */') COL(41);              94299190
           ANS ('END;') SKIP COL(MACCOL);                               94299590
 % END;                                                                 94299690
                                                                        94299790
 @LIST ON;                                                              94299990
