         TITLE 'IFCECUA0  MES DATA EDIT BY CUA'                         00100002
         MACRO                                                          00200002
&NAME    DSGEN                                                          00300002
.*                            THIS MACRO GENERATES ONE DSECT WORD       00400002
.*                                 FORMATTED FOR THE SUBJECT LOG RECORD 00500002
.*                                 EACH OPERAND HAS TWO SUB LISTS. THE  00600002
.*                                 FIRST IS THE NAME OF THE LOG ITEM    00700002
.*                                 WHILE THE SECOND IS THE # OF BITS TO 00800002
.*                                 ALLOCATE FOR THIS ITEM. ITEMS MUST   00900002
.*                                 BE DEFINED CONTIGUOUSLY WITHOUT GAPS 01000002
.*                                 UNUSED BIT GROUPS MUST BE GIVEN      01100002
.*                                 DUMMY NAMES. THE NAMES PROVIDED FOR  01200002
.*                                 THE LOG ITEMS MAY THEN BE USED IN    01300002
.*                                 THE CONVERSION MACRO INSTRUCTIONS.   01400002
         GBLC &ITEM(1000)                                               01500002
         GBLA &ITEMNBR,&BITS(1000),&SHIFT(1000)                         01600002
         LCLB  &ONLY1,&CTIND                                            01700002
         LCLA  &START1,&START2,&END1,&END2                              01800002
         LCLC  &SYMBOL,&EQUSYM                                          01900002
         LCLA  &OP,&COUNT,&BYTE,&EQUCNT                                 02000002
         ACTR  100000                                                   02100002
.START   AIF   (N'&SYSLIST(&OP+1) LT 3).LOOP                            02200002
         AIF   ('&SYSLIST(&OP+1,3)' EQ 'EQU').LOOP     TEST FOR EQU     02300002
  AIF   ('&SYSLIST(&OP+1,3)' EQ '' AND '&SYSLIST(&OP+1,4)' EQ '').ERR1  02400002
  AIF   ('&SYSLIST(&OP+1,3)' EQ '' OR '&SYSLIST(&OP+1,4)' EQ '').ERR1   02500002
         AIF   ('&SYSLIST(&OP+1,3)' GT '&SYSLIST(&OP+1,4)').ERR3        02600002
&START1  SETA  &SYSLIST(&OP+1,3)        GET START COUNT OF 1            02700002
&START2  SETA  &SYSLIST(&OP+1,4)        GET FIRST END COUNT             02800002
         AGO   .SET2A                   BRANCH AROUND                   02900002
.ERR1    MNOTE '**FIRST SYMBOL CONCATENATION INCOMPLETE**'              03000002
         MEXIT                                                          03100002
.SET2A   AIF   ('&SYSLIST(&OP+1,5)' EQ ''AND '&SYSLIST(&OP+1,6)' EQ '' X03200002
               ).SET2                   TEST FOR NO SECOND              03300002
  AIF   ('&SYSLIST(&OP+1,5)' EQ '' OR '&SYSLIST(&OP+1,6)' EQ '').ERR2   03400002
         AIF   ('&SYSLIST(&OP+1,5)' GT '&SYSLIST(&OP+1,6)').ERR3        03500002
&END1    SETA  &SYSLIST(&OP+1,5)        GET START COUNT OF 2            03600002
&END2    SETA  &SYSLIST(&OP+1,6)        GET END COUNT OF 2              03700002
         AGO   .LOOP                                                    03800002
.SET2    ANOP                                                           03900002
&ONLY1   SETB  1                        INDICATE ONLY ONE CONCATENATION 04000002
         AGO   .LOOP                                                    04100002
.ERR2    MNOTE '**SECOND SYMBOL CONCATENATION INCOMPLETE**'             04200002
         MEXIT                                                          04300002
.ERR3    MNOTE '**START GREATER THAN END CONCATENATION**'               04400002
         MEXIT                                                          04500002
.LOOP    ANOP                                                           04600002
&OP      SETA  &OP+1                                                    04700002
         AIF   (&OP GT N'&SYSLIST).DONE      TEST IF ALL DONE           04800002
&ITEMNBR SETA  &ITEMNBR+1                                               04900002
         AIF   ('&SYSLIST(&OP,2)' NE '').OK1                            05000002
         MNOTE '**NULL BIT COUNT FIELD**'                               05100002
         MEXIT                                                          05200002
.OK1     ANOP                                                           05300002
&SYMBOL  SETC  '&SYSLIST(&OP,1)'                                        05400002
         AIF   ('&SYMBOL' NE '').OK                                     05500002
*              *****     LOG ITEM SYMBOL NOT PROVIDED     *****         05600002
         AIF   ('&SYSLIST(&OP,3)' NE 'EQU').CNT                         05700002
         AGO   .START                   GET NEXT                        05800002
.OK      AIF   (N'&SYSLIST(&OP) LT 3).NO3    TEST FOR OLD FORMAT        05900002
         AIF   ('&SYSLIST(&OP,3)' EQ 'EQU').EQU   TEST FOR EQU          06000002
         AIF   (&ONLY1).OK2             TEST FOR ONLY ONE CONCAT        06100002
&SYMBOL  SETC  '&SYMBOL.&START1.&END1'       GET 1 AND 2 CONCAT         06200002
         AGO   .NO3                     BRANCH AROUND                   06300002
.OK2     ANOP                                                           06400002
&SYMBOL  SETC  '&SYMBOL.&START1'        GET 1 CONCATENATED              06500002
.NO3     ANOP                                                           06600002
&SYMBOL  EQU   *+&BYTE                                                  06700002
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL IN GLOBAL             06800002
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)                                    06900002
&SHIFT(&ITEMNBR) SETA &COUNT-&BYTE*8                                    07000002
.CNT     ANOP                                                           07100002
&CTIND   SETB  1                        SET COUNT INDICATOR             07200002
&COUNT   SETA  &COUNT+&SYSLIST(&OP,2)                                   07300002
&BYTE    SETA  &COUNT/8                                                 07400002
         AIF   (N'&SYSLIST(&OP) LT 3).START  TEST FOR OLD FORMAT        07500002
         AIF   (&ONLY1).TSTST           TEST FOR ONLY ONE CONCAT        07600002
         AIF   (&END1 EQ &END2).TSTST   TEST FOR SECOND END             07700002
&END1    SETA  &END1+1                  INCREMENT COUNT                 07800002
&OP      SETA  &OP-1                    DECREMENT INCREMENT             07900002
         AGO   .LOOP                    GENERATE NEXT                   08000002
.TSTST   ANOP                                                           08100002
         AIF   (&START1 EQ &START2).LPDONE   TEST FOR END               08200002
         AIF   (&ONLY1).NSET1           TEST FOR ONLY ONE CONCAT        08300002
&END1    SETA  &SYSLIST(&OP,5)          RE-INIT SECOND START COUNT      08400002
.NSET1   ANOP                                                           08500002
&OP      SETA  &OP-1                    DECREMENT INDEX                 08600002
&START1  SETA  &START1+1                INCREMENT FIRST COUNT           08700002
         AGO   .LOOP                    GO DO NEXT                      08800002
.LPDONE  ANOP                                                           08900002
&ONLY1   SETB  0                        CLEAR INDICATOR                 09000002
         AGO   .START                   GO TEST FOR MORE SUB-LISTS      09100002
.DONE    AIF   (&COUNT-&COUNT/8*8 NE 0).ERR  TEST FOR MULTIPLE OF EIGHT 09200002
         AIF   (&CTIND EQ 0).END        NO DS IF NO COUNT               09300002
&COUNT   SETA  &COUNT/8                 GET NUMBER OF BYTES             09400002
&NAME    DS    &COUNT.C                                                 09500002
.END     MEXIT                                                          09600002
.ERR     MNOTE '**BIT COUNT FLDS DO NOT TOTAL MULTIPLE OF 8**'          09700002
         MEXIT                                                          09800002
.EQU     AIF   ('&SYSLIST(&OP,4)' NE '').EQU1     TEST FOR NULL LABEL   09900002
.ERR4    MNOTE '**EQU OPERAND OMITTED OR NOT FOUND**'                   10000002
         MEXIT                                                          10100002
.EQU1    AIF   (&SYSLIST(&OP,2) LT 16).EQU2  COUNT OVER FIFTEEN         10200002
*****               THE FOLLOWING STATEMENT                *****        10300002
*****     NUMBER OF BITS EXCEED 15 - DO NOT USE AS BIN     *****        10400002
.EQU2    ANOP                                                           10500002
&EQUCNT  SETA  0                        CLEAR COUNTER                   10600002
&EQUSYM  SETC  '&SYSLIST(&OP,4)'        GET EQU OPERAND                 10700002
.EQULOP  ANOP                                                           10800002
&EQUCNT  SETA  &EQUCNT+1                INCREMENT INDEX                 10900002
         AIF   ('&ITEM(&EQUCNT)' EQ '&EQUSYM').EQUOUT  LABEL FOUND?     11000002
         AIF   (&EQUCNT EQ &ITEMNBR).ERR3    ALL TESTED?                11100002
         AGO   .EQULOP                  NO-GET NEXT                     11200002
.EQUOUT  ANOP                                                           11300002
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL NAME                  11400002
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)    GET NUMBER OF BITS              11500002
&SHIFT(&ITEMNBR) SETA &SHIFT(&EQUCNT)   GET SHIFT COUNT                 11600002
&SYMBOL  EQU   &EQUSYM                  THIS SYMBOL EQUATED             11700002
         AGO   .START                   RETURN FOR NEXT                 11800002
         MEND                                                           11900002
*  LINE MACRO     LINE MACRO     LINE MACRO     LINE MACRO            * 12000002
         SPACE 2                                                        12100002
         MACRO                                                          12200002
&NAME    LINE  &DATA,&LABEL,&SKIP=                                      12300002
.*                            THIS MACRO ESTABLISHES THE MARGINS OR     12400002
.*                                 COLUMN SETTINGS FOR EACH LINE. IT    12500002
.*                                 GENERATES NECESSARY CARRIAGE CONTROL 12600002
.*                                 ENTRIES. LASTLY IT DETERMINES THE    12700002
.*                                 NUMBER OF ENTRIES ASSOCIATED WITH    12800002
.*                                 THE PREVIOUS LINE AND STORES THAT #  12900002
.*                                 INTO THE APPROPRIATE BYTE.           13000002
.*                            &DATA(1) - CHARACTER POSITION TO BEGIN    13100002
.*                                 DATA.                                13200002
.*                            &DATA(2) - # OF SPACES BETWEEN SUCCESSIVE 13300002
.*                                 DATA COLUMN STARTING CHARACTERS.     13400002
.*                            &LABEL(1) - CHAR. POS. TO BEGIN LABELS.   13500002
.*                            &LABEL(2) - # SPACES BETWEEN LINE'S LABEL 13600002
.*                                 STARTING CHARACTERS.                 13700002
.*                            &SKIP= - # OF LINES TO ADVANCE CARRIAGE   13800002
.*                                 TO BEGIN NEXT PRINTED LINE.          13900002
.*                            NEW ENTRIES ARE GENERATED ONLY WHEN       14000002
.*                                 NECESSARY. OMISSION OF ITEMS MEANS   14100002
.*                                 THEY HAVE NOT CHANGED SINCE PREVIOUS 14200002
.*                                 SETTINGS. A LINE MACRO IS REQUIRED   14300002
.*                                 FOR EACH PRINTED LINE. IF NO SETTING 14400002
.*                                 CHANGES ARE REQUIRED ALL OPERANDS    14500002
.*                                 ARE OMITTED IN WHICH CASE ONLY THE   14600002
.*                                 # OF ENTRIES FOR THE PREVIOUS LINE   14700002
.*                                 IS COMPUTED. THIS MACRO MUST BE THE  14800002
.*                                 FIRST MACRO INSTRUCTION ISSUED FOR   14900002
.*                                 THE SUBJECT LINE                     15000002
         GBLA  &DB,&DT,&LB,&LT,&NRENTS                                  15100002
         GBLA  &LASTCC,&INITIAL                                         15200002
         GBLC  &NRENTSX                                                 15300002
         GBLC  &CARRCON                                                 15400002
         GBLB  &TEST                                                    15500002
         LCLA  &S                                                       15600002
&NAME    DS    0C                                                       15700002
         AIF   (&INITIAL EQ 0).FIRSTLN                                  15800002
         LINEND                                                         15900002
         AGO   .NTFIRST                                                 16000002
.FIRSTLN ANOP                                                           16100002
&NRENTSX SETC  'N&SYSNDX'                                               16200002
&INITIAL SETA  1                                                        16300002
N&SYSNDX EQU   *                                                        16400002
.NTFIRST ANOP                                                           16500002
         DC    AL1(0)                                                   16600002
         AIF   ('&DATA(1)' EQ '').CKDTABS                               16700002
         AIF   (&DATA(1) EQ &DB).CKDTABS                                16800002
&DB      SETA  &DATA(1)                                                 16900002
         AGO   .AA                                                      17000002
.CKDTABS AIF   ('&DATA(2)' EQ '').NCDATA                                17100002
         AIF   (&DATA(2) EQ &DT).NCDATA                                 17200002
         AGO   .CC                                                      17300002
.AA      AIF   ('&DATA(2)' EQ '').BB                                    17400002
         AIF   (&DATA(2) EQ &DT).BB                                     17500002
.CC      ANOP                                                           17600002
&DT      SETA  &DATA(2)                                                 17700002
.BB      DC    XL2'FFFE'                                                17800002
         DC    FL1'&DB'                                                 17900002
         DC    FL1'&DT'                                                 18000002
&NRENTS  SETA  &NRENTS+1                                                18100002
.NCDATA  ANOP                                                           18200002
         AIF   ('&LABEL(1)' EQ '').CKLTABS                              18300002
         AIF   (&LABEL(1) EQ &LB).CKLTABS                               18400002
&LB      SETA  &LABEL(1)                                                18500002
         AGO   .AAA                                                     18600002
.CKLTABS AIF   ('&LABEL(2)' EQ '').NCLABEL                              18700002
         AIF   (&LABEL(2) EQ &LT).NCLABEL                               18800002
         AGO   .CCC                                                     18900002
.AAA     AIF   ('&LABEL(2)' EQ '').BBB                                  19000002
         AIF   (&LABEL(2) EQ &LT).BBB                                   19100002
.CCC     ANOP                                                           19200002
&LT      SETA  &LABEL(2)                                                19300002
.BBB     DC    XL2'FFFF'                                                19400002
         DC    FL1'&LB'                                                 19500002
         DC    FL1'&LT'                                                 19600002
&NRENTS  SETA  &NRENTS+1                                                19700002
.NCLABEL ANOP                                                           19800002
         AIF   ('&SKIP' NE '').CONT                                     19900002
         AIF   (&TEST EQ 0).NOCHANG                                     20000002
&S       SETA  &LASTCC                                                  20100002
         AGO   .DEFAULT                                                 20200002
.CONT    ANOP                                                           20300002
         AIF   (&TEST EQ 0).AB                                          20400002
&S       SETA  &SKIP                                                    20500002
.DEFAULT ANOP                                                           20600002
         ORG   &CARRCON+3                                               20700002
         DC    AL.3(0),AL.2(&S),AL.3(1)                                 20800002
         ORG                                                            20900002
&LASTCC  SETA  &S                                                       21000002
&TEST    SETB  0                                                        21100002
         AGO   .DD                                                      21200002
.AB      AIF   (&SKIP EQ &LASTCC).NOCHANG                               21300002
A&SYSNDX DC    XL2'FFFB'                                                21400002
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)                              21500002
         DC    FL1'9'                                                   21600002
&LASTCC  SETA  &SKIP                                                    21700002
&TEST    SETB  1                                                        21800002
&CARRCON SETC  'A&SYSNDX'                                               21900002
&NRENTS  SETA  &NRENTS+1                                                22000002
.DD      ANOP                                                           22100002
.NOCHANG ANOP                                                           22200002
         MEND                                                           22300002
         EJECT                                                          22400002
*  BIN MACRO     BIN MACRO     BIN MACRO     BIN MACRO     BIN MACRO  * 22500002
         SPACE 2                                                        22600002
         MACRO                                                          22700002
         BIN   &LOGITEM,&SKIP$OR                                        22800002
.*                                 &LOGITEM - NAME OF ITEM IN LOG       22900002
.*                                      RECORD DSECT                    23000002
.*                                 &SKIP$OR - NBR OF SPACES TO SKIP ON  23100002
.*                                 MULTIPLE PRINT OR NBR OF SPACES      23200002
.*                                      TO BACK UP FROM COLUMN FOR      23300002
.*                                      START OF PRINTING. THE LETTER   23400002
.*                                      B PRECEEDS THE NUMBER (B5) IF   23500002
.*                                      THE LATTER IS DESIRED. OMISSION 23600002
.*                                      OF THIS OPERAND FORCES OPTION 2 23700002
.*                                      WITH BACKUP SPACING EQUAL TO    23800002
.*                                 THE NUMBER OF BITS IN THE ITEM       23900002
.*                                 DEFINITION (VIA MACRO 'DSGEN').      24000002
.*                            A LIMIT OF 15 BITS IS IMPOSED FOR THE     24100002
.*                                 TOTAL NUMBER OF BITS TO PRINT.       24200002
         GBLC &ITEM(1000)                                               24300002
         GBLA &ITEMNBR,&BITS(1000),&SHIFT(1000),&NRENTS                 24400002
         GBLC  &DSECT                                                   24500002
         LCLB  &B                                                       24600002
         LCLA  &IBITS,&NDX,&ISHIFT,&K                                   24700002
         LCLA  &TEMP,&T                                                 24800002
         LCLC  &S                                                       24900002
.LOOP    ANOP                                                           25000002
&NDX     SETA  &NDX+1                                                   25100002
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND                      25200002
         AIF   (&NDX LT &ITEMNBR).LOOP                                  25300002
         MNOTE *,'YOU BLEW IT'                                          25400002
         ROUTINE DUM,SKIPPER                                            25500002
         MEXIT                                                          25600002
.FOUND   ANOP                                                           25700002
&ISHIFT  SETA  &SHIFT(&NDX)                                             25800002
&IBITS   SETA  &BITS(&NDX)                                              25900002
&T       SETA  &IBITS-1                                                 26000002
&B       SETB  0                                                        26100002
         AIF   ('&SKIP$OR' EQ '').BACKUP                                26200002
&K       SETA  K'&SKIP$OR                                               26300002
&B       SETB  ('&SKIP$OR'(1,1) EQ 'B')                                 26400002
&S       SETC  '&SKIP$OR'(&B+1,&K-&B)                                   26500002
&T       SETA  &S                                                       26600002
.BACKUP  ANOP                                                           26700002
&NRENTS  SETA  &NRENTS+1                                                26800002
&TEMP    SETA  &ISHIFT                                                  26900002
A&SYSNDX DC    AL.12(&LOGITEM-&DSECT),XL.4'&TEMP'                       27000002
         AIF (&IBITS EQ 1 AND &B EQ 0).OUT                              27100002
         ORG   A&SYSNDX                                                 27200002
&B       SETB  1                                                        27300002
         DC    AL.12(&LOGITEM-&DSECT),XL.4'C'                           27400002
         DC    BL.1'&B',AL.7(&T),AL.4(&IBITS),FL.4'&ISHIFT'             27500002
.OUT     ANOP                                                           27600002
         MEND                                                           27700002
         EJECT                                                          27800002
*  HEX MACRO     HEX MACRO     HEX MACRO    HEXN MACRO     HEX MACRO  * 27900002
         SPACE 2                                                        28000002
         MACRO                                                          28100002
         HEX   &LOGITEM,&SKIP$OR,&BYTES                                 28200002
.*                            THIS MACRO FACILITATES GENERATION OF THE  28300002
.*                                 TABLE ENTRIES SPECIFYING HEX TYPE    28400002
.*                                 CONVERSIONS.                         28500002
.*                            &LOGITEM - NAME OF DATA ITEM TO BE        28600002
.*                                 CONVERTED                            28700002
.*                            &SKIP$OR - NUMBER OF SPACES TO SKIP ON    28800002
.*                                 MULTIPLE PRINT OR NBR OF SPACES TO   28900002
.*                                 BACK UP FROM COLUMN FOR START OF     29000002
.*                                 PRINTING. THE LETTER B PRECEEDS THE  29100002
.*                                 NUMBER (B8) IF THE LATTER OPTION IS  29200002
.*                                 DESIRED. OMISSION OF THIS OPERAND    29300002
.*                                 FORCES OPTION 2 WITH BACKUP SPACING  29400002
.*                                 EQUAL TO THE NUMBER OF BYTES SPECI-  29500002
.*                                 FIED BY THE NEXT OPERAND (TWICE THIS 29600002
.*                                 NUMBER IF SUFFIX IS EXPLICITLY OR    29700002
.*                                 IMPLICITLY B).                       29800002
.*                            &BYTES - NUMBER OF TOTAL INPUT BYTES TO   29900002
.*                                 PROCESS. THIS NUMBER IS SUFFIXED     30000002
.*                                 WITH AN L,R, OR B TO STIPULATE       30100002
.*                                 PRINTING OF THE LEFT HALF, RIGHT     30200002
.*                                 HALF, OR BOTH HALVES OF THE BYTE     30300002
.*                                 RESPECTIVELY. OMISSION OF THIS       30400002
.*                                 OPERAND DEFAULTS TO B WITH THE NUM-  30500002
.*                                 BER OF BYTES EQUAL TO THE ITEM LNGTH 30600002
.*                            A NEW ENTRY IS GENERATED ONLY WHEN NECES- 30700002
.*                                 SARY. THIS MACRO MUST BE THE FIRST   30800002
.*                                 MACRO INSTRUCTION ISSUED FOR THE     30900002
.*                                 SUBJECT LINE(S).                     31000002
         GBLC &ITEM(1000),&DSECT                                        31100002
         GBLA &ITEMNBR,&BITS(1000),&SHIFT(1000),&NRENTS                 31200002
         LCLB  &B                                                       31300002
         LCLA  &IBITS,&NDX,&ISHIFT,&K,&T,&CODE,&BYTESP                  31400002
         LCLC  &S,&LETTER                                               31500002
.LOOP    ANOP                                                           31600002
&NDX     SETA  &NDX+1                                                   31700002
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND                      31800002
         AIF   (&NDX LT &ITEMNBR).LOOP                                  31900002
         MNOTE *,'LOG ITEM NOT DEFINED'                                 32000002
         MEXIT                                                          32100002
.FOUND   ANOP                                                           32200002
&ISHIFT  SETA  &SHIFT(&NDX)                                             32300002
&IBITS   SETA  &BITS(&NDX)                                              32400002
&CODE    SETA  1                                                        32500002
&K       SETA  K'&BYTES                                                 32600002
         AIF   (&IBITS-(&IBITS/4)*4 EQ 0).OK                            32700002
         MNOTE *,'BIT LENGTH SPECIFICATION INCONSISTENT WITH CONTROL'   32800002
         MEXIT                                                          32900002
.OK      AIF   ('&BYTES' EQ '').USEDEFN                                 33000002
&LETTER  SETC  '&BYTES'(&K,1)                                           33100002
&S       SETC  '&BYTES'(1,&K-1)                                         33200002
&BYTESP  SETA  &S                                                       33300002
         AIF   ('&LETTER' EQ 'B').BOTH                                  33400002
         AIF   (&ISHIFT EQ 0 OR &ISHIFT EQ 4).OK2                       33500002
.ERR     MNOTE *,'DATA NOT ALLIGNED ON HEX OR BYTE BOUNDARY'            33600002
         MEXIT                                                          33700002
.USEDEFN ANOP                                                           33800002
&BYTESP  SETA  &IBITS/8                                                 33900002
.BOTH    AIF   (&ISHIFT NE 0).ERR                                       34000002
&CODE    SETA  3                                                        34100002
&T       SETA  &BYTESP*2-1                                              34200002
&S       SETC  '&T'                                                     34300002
.OK2     AIF   (&ISHIFT EQ 0).L                                         34400002
&CODE    SETA  2                                                        34500002
.L       ANOP                                                           34600002
&B       SETB  1                                                        34700002
         AIF   ('&SKIP$OR' EQ '').BACKUP                                34800002
&K       SETA  K'&SKIP$OR                                               34900002
&B       SETB  ('&SKIP$OR'(1,1) EQ 'B')                                 35000002
&S       SETC  '&SKIP$OR'(&B+1,&K-&B)                                   35100002
.BACKUP  ANOP                                                           35200002
&NRENTS  SETA  &NRENTS+1                                                35300002
         DC    AL.12(&LOGITEM-&DSECT),XL.4'A'                           35400002
         DC    BL.1'&B',FL.7'&S',FL.4'&BYTESP',FL.4'&CODE'              35500002
.OUT     ANOP                                                           35600002
         MEND                                                           35700002
         SPACE 2                                                        35800002
*  ROUTINE MACRO     ROUTINE MACRO     ROUTINE MACRO     ROUTINE MACRO* 35900002
         SPACE 2                                                        36000002
         MACRO                                                          36100002
&NAME    ROUTINE &LOGITEM,&RNAME                                        36200002
         GBLC  &DSECT,&CSECT                                            36300002
         GBLC  &ITEM(1000)                                              36400002
         GBLA  &SHIFT(1000),&ITEMNBR                                    36500002
         GBLA  &NRENTS                                                  36600002
         LCLA  &ISHIFT,&NDX                                             36700002
.LOOP    ANOP                                                           36800002
&NDX     SETA  &NDX+1                                                   36900002
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND                      37000002
         AIF   (&NDX LT &ITEMNBR).LOOP                                  37100002
         MNOTE *,'LOG ITEM NOT DEFINED'                                 37200002
         MEXIT                                                          37300002
.FOUND   ANOP                                                           37400002
&ISHIFT  SETA  &SHIFT(&NDX)                                             37500002
&NAME    DC    AL.12(&LOGITEM-&DSECT),XL.4'D'                           37600002
         DC    AL.4(&ISHIFT),AL.12(&RNAME-&CSECT)                       37700002
&NRENTS  SETA  &NRENTS+1                                                37800002
         MEND                                                           37900002
         EJECT                                                          38000002
*  LABEL MACRO     LABEL MACRO     LABEL MACRO     LABEL MACRO        * 38100002
         SPACE 2                                                        38200002
         MACRO                                                          38300002
&NAME    LABEL &LABEL1,&LABEL2,&LABEL3,&LABEL4,&LABEL5,&LABEL6,        C38400002
               &LABEL7,&LABEL8                                          38500002
.*                            THIS MACRO ALLOWS UP TO ACHT LABELS TO    38600002
.*                                 BE SPECIFIED FOR A GIVEN LINE. THE   38700002
.*                                 LABELS SHOULD BE ENCLOSED IN QUOTA-  38800002
.*                                 TION MARKS. THE COLUMN AND LINE END  38900002
.*                                 CONTROLS WILL BE INSERTED BY THE     39000002
.*                                 MACRO. OMITTED OPERANDS MEAN NO      39100002
.*                                 LABEL REQUIRED FOR RESPECTIVE        39200002
.*                                 COLUMN. THIS MACRO WILL ALSO ALERT   39300002
.*                                 THE PROGRAMMER TO EXACTLY WHERE THE  39400002
.*                                 TABLE MUST BE BROKEN IF NECESSARY    39500002
.*                                 TO AVOID EXCEEDING THE MAXIMUM LIMIT 39600002
         GBLC &LABELS(2000)                                             39700002
         GBLC  &LBL(100)                                                39800002
         GBLA  &LBLCTR(100)                                             39900002
         GBLA  &LABELNR                                                 40000002
         GBLA  &NRENTS,&LPTR                                            40100002
         LCLC  &MARGIN,&TACK                                            40200002
         LCLC  &TEXT                                                    40300002
         LCLA  &OP,&K,&START,&NRCHAR,&REMAIN                            40400002
&MARGIN  SETC  '*'                                                      40500002
         AIF   ('&NAME' EQ '').LOOPOUT                                  40600002
&LPTR    SETA  &LPTR+1                                                  40700002
&LBL(&LPTR) SETC '&NAME'                                                40800002
&LBLCTR(&LPTR) SETA &LABELNR+1                                          40900002
.LOOPOUT ANOP                                                           41000002
&OP      SETA  &OP+1                                                    41100002
&K       SETA  K'&SYSLIST(&OP)                                          41200002
         AIF (&K GE 2).NORM                                             41300002
&K       SETA  2                                                        41400002
.NORM    ANOP                                                           41500002
&START   SETA  2                                                        41600002
         AIF (&OP LT N'&SYSLIST).NOTLAST                                41700002
&MARGIN  SETC  '$'                                                      41800002
.NOTLAST ANOP                                                           41900002
&NRCHAR  SETA  8                                                        42000002
&TACK    SETC  ''                                                       42100002
.LOOPIN  ANOP                                                           42200002
&REMAIN  SETA  &K-&START                                                42300002
         AIF (&REMAIN GE 8).MORE                                        42400002
&TACK    SETC  '&MARGIN'                                                42500002
&NRCHAR  SETA  &REMAIN                                                  42600002
.MORE    ANOP                                                           42700002
&TEXT    SETC  ''                                                       42800002
         AIF (&REMAIN EQ 0).ENDTEXT                                     42900002
&TEXT    SETC  '&SYSLIST(&OP)'(&START,&NRCHAR)                          43000002
.ENDTEXT ANOP                                                           43100002
&LABELNR SETA  &LABELNR+1                                               43200002
&LABELS(&LABELNR) SETC '&TEXT'.'&TACK'                                  43300002
&START   SETA  &START+8                                                 43400002
         AIF ('&TACK' EQ '').LOOPIN                                     43500002
         AIF ('&TACK' EQ '*').LOOPOUT                                   43600002
         MEND                                                           43700002
         SPACE 2                                                        43800002
         MACRO                                                          43900002
         LSTART                                                         44000002
.*                            THIS MACRO IS ISSUED WHEN THE LABEL AREA  44100002
.*                                 OF THE TABLE IS TO BEGIN.            44200002
         GBLC &LABELS(2000)                                             44300002
         GBLA  &LABELNR                                                 44400002
         GBLC  &LBL(100)                                                44500002
         GBLA  &LBLCTR(100)                                             44600002
         LCLA  &NDX,&CTR                                                44700002
         LINEND                                                         44800002
&CTR     SETA  1                                                        44900002
.LOOP    ANOP                                                           45000002
&NDX     SETA  &NDX+1                                                   45100002
         AIF   (&LBLCTR(&CTR) NE &NDX).NOLBL                            45200002
&LBL(&CTR) DC  C'&LABELS(&NDX)'                                         45300002
&CTR     SETA  &CTR+1                                                   45400002
         AGO   .LOOPCTL                                                 45500002
.NOLBL   ANOP                                                           45600002
         DC    C'&LABELS(&NDX)'                                         45700002
.LOOPCTL AIF   (&NDX LT &LABELNR).LOOP                                  45800002
         MEND                                                           45900002
         SPACE 2                                                        46000002
         MACRO                                                          46100002
         LINEND                                                         46200002
.*                            THIS MACRO IS USED ONLY BY THE LINE       46300002
.*                                 MACRO TO SET THE NUMBER OF ENTRIES   46400002
.*                                 ASSOCIATED WITH EACH LINE.           46500002
         GBLA  &NRENTS                                                  46600002
         GBLC &NRENTSX                                                  46700002
         ORG   &NRENTSX                                                 46800002
         DC    FL1'&NRENTS'                                             46900002
         ORG                                                            47000002
&NRENTS  SETA  0                                                        47100002
B&SYSNDX EQU   *                                                        47200002
&NRENTSX SETC  'B&SYSNDX'                                               47300002
         MEND                                                           47400002
         GBLC  &DSECT,&CSECT                                            47500002
IFCECUA0 CSECT                                                          47600002
&CSECT   SETC  'IFCECUA0'                                               47700002
&DSECT   SETC  'M3420'                                                  47800002
M3420    DSECT                                                          47900002
         DSGEN (CLASSRC,8),(SYSREL,8),(SWITCH1,8),(SWITCH2,8),         C48000002
               (SPARES,32)                                              48100002
         DSGEN (DUM1,8),(YEAR,8),(DAY,16),(TIME,32)                     48200002
         DSGEN (DUM2,8),(CPUSER,24),(CPUID,16),(DUM3,16)                48300002
         DSGEN (,256)                                                   48400002
         DSGEN (,8),(PRIMCUA,24),(IORETRY,16),(SNSCNT,16)               48500002
         DSGEN (VOLID,48),(BLKLENG,16),(,32),(TEMPRDS,8),(TEMPWRTS,8), C48600002
               (SIOCNT,16),(PERMRDS,8),(PERMWRTS,8),(NOISEBLK,8),      C48700002
               (,8),(ERASEGPS,16),(CLNRACTS,16)                         48800002
         DSGEN (SPAR,8),(NOISE,8),(RWVRC,8),(MTELRCR,8)                 48900002
         DSGEN (EDCCRC,8),(ENVCKVRC,8),(OVERRUN,4),(SKEWCHK,4),        C49000002
               (CCOMPARE,4),(WRTTRVRC,4)                                49100002
         DSGEN (PEIDCHK,1),(MASKEXP,6),(PARITY,1),(TRKINERR,8),        C49200002
               (WRTTMCHK,4),(STRDCHK,4),(PARTREC,4),(EXCPAMB,4)         49300002
         DSGEN  (ORDROP,4),(FEEDTHRU,4),(EXP,4),(EARLBGRD,4),          C49400002
               (EARLNDRD,4),(SLBGRD,4),(SLWNDRD,4),(VELRETRY,4),       C49500002
               (EXP2,4),(VELCHNG,4),(EXP3A,4),(EXP3,4),(BACKWARD,8),   C49600002
               (BUSOCHK,4),(ALUHRDER,4)                                 49700002
         DSGEN (SNB,1,0,23,0,7)                                         49800002
         DSGEN (TUSERIAL,16,EQU,SNB150)                                 49900002
IFCECUA0 CSECT                                                          50000002
         USING *,R9                                                     50100002
         USING M3420,R2                                                 50200002
         DC    A(ENTRIES)                                               50300002
         DC    CL8'IFCECUA0'                                            50400002
NINE     DC    F'0'                                                     50500002
LABELPTR DC    F'0'                                                     50600002
L0       EQU   0                                                        50700002
L1       EQU   1                                                        50800002
L2       EQU   2                                                        50900002
L3       EQU   3                                                        51000002
L4       EQU   4                                                        51100002
L6       EQU   6                                                        51200002
L8       EQU   8                                                        51300002
L21      EQU   21                                                       51400002
L24      EQU   24                                                       51500002
L28      EQU   28                                                       51600002
R2       EQU   2                                                        51700002
R3       EQU   3                                                        51800002
R4       EQU   4                                                        51900002
R5       EQU   5                                                        52000002
R6       EQU   6                                                        52100002
R7       EQU   7                                                        52200002
R8       EQU   8                                                        52300002
R9       EQU   9                                                        52400002
R14      EQU   14                                                       52500002
R15      EQU   15                                                       52600002
CHAR0    EQU   X'F0'                                                    52700002
DENS16   EQU   X'04'                                                    52900002
BIRCH    EQU   X'08'                                                    52950002
DISMOUNT EQU   X'84'                                                    53000002
LONG     EQU   X'40'                                                    53100002
SHORT    EQU   X'30'                                                    53300002
*                                                                     * 53400002
* THIS ROUTINE WILL CONVERT ONE BYTE OF BITS TO THEIR EBCDIC          * 53500002
* EQUIVALENT.                                                         * 53600002
*                                                                     * 53700002
SETBINA  STM   R5,R8,STOREREG     SAVE REGISTERS                        53800002
         LR    R8,R3              PUT LINE POINTER TO REGISTER          53900002
         LA    R5,L8              PUT COUNTER IN REGISTER               54000002
         IC    R7,L0(R4)          GET THE BYTE TO PRINT                 54100002
         SLL   R7,L24             SHIFT TO LOW BIT POSITIONS            54200002
CHNGBITS SR    R6,R6              CLEAR REGISTER                        54300002
         SLDL  R6,L1              MOVE ONE BIT INTO REG                 54400002
         STC   R6,L0(R8)          STORE THE BIT ON PRINT LINE           54500002
         OI    L0(R8),CHAR0       MOVE ZONE TO MAKE IT A PRINTABLE CHAR 54600002
         LA    R8,L1(R8)          INCREMENT PRINT LINE                  54700002
         BCT   R5,CHNGBITS        ALL BITS BEEN PRINTED                 54800002
         LM    R5,R8,STOREREG     RESTORE REGISTERS                     54900002
DONOTHNG BR    R14                RETURN                                55000002
PUTVOL   MVC   L21(L6,R3),VOLID        MOVE VOLID TO PRINT LINE         55100002
         LA    R3,L6(R3)               SET PRINT BUFFER POINTER         55200002
         CLC   SNSCNT(L2),NINER   IF MORE THAN NINE SENSE BYTES SA55024 55300002
*                                 THE COUNTER IS VALID AND PUT IN THE   55400002
*                                 PRINTOUT                              55500002
         BNH   NOTAPP             ONLY 9 SENSE PUT N/A           XM9111 55600002
         TM    SWITCH2,DISMOUNT   IS THIS A DISMOUNT RECORD      XM9111 55700002
         BZ    TWOBYTES           YES - GO TO CONVERT IT         XM9111 55800002
         B     NOTAPP                  NO PUT IN N/A                    56000002
NINER    DC    H'9'                                                     56050002
*                                                                     * 56100002
*  THE NRZI NOISE COUNTER IS ONLY VALID FOR NRZI TAPES - - THE 1600   * 56200002
* BPI BIT IS CHECKED TO SEE IF IT IS A PE TAPE -- IF IT IS WE RETURN  * 56300002
* WITHOUT PRINTING THE COUNTER VALUE SINCE IT IS INVALID              * 56400002
*                                                                     * 56500002
CHKNRZI  TM    L0(R4),DENS16      IS THIS A 1600 BPI TAPE DRIVE         56600002
         LA    R4,NOISE           ADDRESS OF NOISE CTR FOR CONVERSION   56800002
         BZ    ONEBYTE            COUNTER VALID-GO CONVERT IT    S99223 56900002
         MVC   L1(L3,R3),NA       NO-PUT N/A IN PRINT BUFFER     S99223 56920002
         LA    R3,4(R3)           INCREMENT PRINT BUFFER PTR     S99223 56940002
         BR    R14                RETURN                         S99223 56960002
*                                                                     * 57000002
*                                                                     * 57100002
*                                                                     * 57200002
*THIS ROUTINE WILL TAKE A ONE BYTE COUNTER FROM THE LOGREC ENTRY AND  * 57300002
* CONVERT IT TO EBCDIC AND PUT IT INTO THE PRINT BUFFER               * 57400002
* IT IS ALSO USED TO CONVERT WHATEVER BINARY VALUE THAT IS IN R4 TO   * 57500002
* A PRINTABLE FORM.R6 MUST BE SET TO THE LENGTH OF THE RECEIVING FIELD* 57600002
* FOR THE EXECUTE INSTRUCTION                                         * 57700002
*                                                                     * 57800002
ONEBYTE  STM   R5,R8,STOREREG     STORE REGISTERS                       57900002
         SR    R5,R5              CLEAR REGISTER5                       58000002
         IC    R5,L0(R4)          GET THE BYTE TO BE CONVERTED          58100002
PROCDEC  LA    R8,INLINE          LOAD THE RETURN ADDRESS               58200002
         LA    R6,SHORT           GET LENGTH FOR EXECUTE INSTRUCTION    58300002
CONVERT  CVD   R5,DECBYTES        CONVERT TO DECIMAL                    58400002
         EX    R6,UNPACK          UNPACK INTO THE PRINT BUFFER          58500002
         BR    R8                 RETURN TO INLINE PROCESSING           58600002
INLINE   OI    L3(R3),CHAR0       MAKE THE LAST CHAR A PRINTABLE NBR    58700002
         LM    R5,R8,STOREREG     RELOAD REGISTERS                      58800002
         LA    R3,4(R3)           INCREMENT PRINT BUFFER PTR     S99223 58850002
         BR    R14                RETURN                                58900002
UNPACK   UNPK  L0(L1,R3),DECBYTES(8) UNPACK NUMBER5 TO PRINT LINE       59000002
*                                                                     * 59100002
* THIS ROUTINE IS USED TO ISOLATE THE RIGHT HALF OF A BYTE AND GOES   * 59200002
* TO HAVE IT CONVERTED TO PRINTABLE FORM                              * 59300002
*                                                                     * 59400002
RGHTHALF STM   R5,R8,STOREREG     STORE REGISTERS                       59500002
         SR    R5,R5              CLEAR REGISTER                        59600002
         IC    R5,L0(R4)          GET A BYTE FROM RECORD                59700002
         SLL   R5,L28             GET RID OF LOW ORDER BITS             59800002
         SRL   R5,L28             MOVE BACK                             59900002
         B     PROCDEC            GO TO CONVERT IT                      60000002
*                                                                     * 60100002
NOTAPP   MVC   L1(L3,R3),NA            MOVE N/A TO PRINT BUFFER IF      60200002
         BR    R14                     COUNTER IS NOT VALID             60300002
CHKDEV   CLC   SNSCNT(L2),NINER   IF MORE THAN 9 SENSE BYTES THE        60400002
*                                 COUNTER IS VALID AND PUT IN THE       60600002
*                                 PRINTOUT                              60800002
         BC    2,RGHTHALF              YES IT IS GO PUT IT OUT          61000002
         MVC   0(L3,R3),NA        MOVE NA TO PRINT BUFFER        S99223 61100002
         LA    R3,4(R3)           INCREMENT PRINT BUFFER PTR     S99223 61130002
         BR    R14                RETURN                         S99223 61160002
WHERETO  ST    R5,STOREREG             SAVE REGISTERS                   61200002
         TM    SWIND,CHAR0             IS THIS FIRST TIME HERE          61300002
         MVI   SWIND,CHAR0             SET LABELS PRINTED SWITCH        61400002
         BCR   8,R14                   NO DO NOT PRINT LABELS AGAIN     61500002
         LA    R5,ONLYENT-4            GO TO PRINT OUT INFORMATION      61600002
         ST    R5,NINE                 STORE ADDRESS                    61700002
         LA    R5,NOLAB                GET NEW LABEL ADDRESS            61800002
         ST    R5,LABELPTR             STORE NEW LABEL ADDRESS          61900002
         L     R5,STOREREG             RELOAD REGISTER                  62000002
         BR       R14                  RETURN CONTROL                   62100002
*                                                                     * 62200002
* USED TO GET A HALFWORD COUNTER FROM THE RECORD AND GOES TO HAVE IT  * 62300002
* CONVERTED TO PRINTABLE FORM.RETURNS TO HAVE THE ZONE CHANGED BECAUSE* 62400002
* THIS WILL BE REPRESENTED AS A FIVE DIGIT NUMERAL RATHER THAN A FOUR * 62500002
* DIGIT AS THE SINGLE AND HALF BYTE COUNTERS.                         * 62600002
*                                                                     * 62700002
TWOBYTES STM   R5,R8,STOREREG     STORE REGISTERS                       62800002
         MVC   HALFCNTR(L2),L0(R4) MOVE THE COUNTER TO STORAGE          62900002
         L     R5,FULLCNTR        PUT THE COUNTER INTO A REGISTER       63000002
         LA    R6,LONG            GET LENGTH FOR EXECUTE INSTRUCTION    63100002
         BAL   R8,CONVERT         GO TO CONVERT THE NUMBER TO EBCDIC    63200002
         OI    L4(R3),CHAR0       MAKE LAST CHARACTER PRINTABLE         63300002
         LM    R5,R8,STOREREG     RESTORE REGISTERS                     63400002
         BR    R14                RETURN                                63500002
*                                                                     * 63600002
* THIS CODE WILL TAKE THE DATE FROM THE RECORD UNPACK IT AND PUT IT   * 63700002
* IN THE PRINT BUFFER.                                                * 63800002
*                                                                     * 63900002
SETDATE  UNPK  DECBYTES(5),L0(L3,R4) UNPACK THE DATE                    64000002
         LA    R3,6(R3)           SET BUFFER POINTER             S99223 64050002
         MVC   L0(L3,R3),DECBYTES+L2 MOVE DAY TO PRINT BUFFER           64100002
         OI    L2(R3),CHAR0       MAKE LAST DIGIT PRINTABLE             64200002
         MVC   L4(L2,R3),DECBYTES MOVE YEAR TO PRINT BUFFER             64300002
         LA    R3,15(R3)          SET BUFFER POINTER             S99223 64350002
         BR    R14                  RETURN                              64400002
*                                                                     * 64500002
* THE FOLLOWING ARE ROUTINES TO INCREMENT THE PRINT BUFFER POINTER.   * 64600002
*                                                                     * 64700002
*                                                                     * 64800002
ADD3     LA    R3,L3(R3)          INCREMENT PRINT POSITION BY 3 BYTES   64900002
         BR    R14                                                      65000002
ADD4     LA    R3,4(R3)                                          S99223 65020002
         BR    R14                                               S99223 65040002
ADD11    LA    R3,11(R3)                                         S99223 65060002
         BR    R14                                               S99223 65080002
*                                                                     * 65100002
* THIS CODE INSPECTS THE SENSE BITS TO DETERMINE WHAT DENSITY IS TO   * 65200002
* BE PUT IN THE PRINT BUFFER..                                        * 65300002
*                                                                     * 65400002
*                                                                     * 65500002
*                                                                     * 65600002
WHATDENS TM    SWITCH2,DISMOUNT   IS THIS A DISMOUNT RECORD      XM9111 65700002
         BM    NOTAPP             INFORMATION NOT AVAILABLE      XM9111 65730002
CHKDENS  TM    SNB30,DENS16       IS THIS A 1600 BPI DRIVE       S99223 65760002
         BO    PUT1600            YES PUT IT IN PRINTOUT         S99223 65860002
         TM    SNB60,BIRCH        IS THIS A NEW DRIVE            S99223 65960002
         BO    PUT6250            YES PUT IN 6250                S99223 66060002
PUT800   MVC   L0(L3,R3),BPI800   PUT 800 IN PRINT BUFFER               66300002
         BR    R14                RETURN                                66400002
PUT1600  MVC   L0(L4,R3),BPI1600  PUT 1600 IN PRINT BUFFER              66500002
         BR    R14                RETURN                                66600002
PUT6250  MVC   L0(L4,R3),BPI6250  MOVE IN BPI                           66630002
         BR    R14                                                      66660002
BPI800   DC    CL3'800'                                                 66800002
BPI1600  DC    CL4'1600'                                                66900002
BPI6250  DC    CL4'6250'                                                66950002
DECBYTES DC    D'0'                                                     67000002
STOREREG DC    6F'0'                                                    67100002
FULLCNTR EQU   STOREREG+20                                              67200002
HALFCNTR EQU   STOREREG+22                                              67300002
NA       DC    CL3'N/A'                                                 67700002
SWIND    DC    X'00'                                                    67800002
*                                                                     * 67900002
*                                                                     * 68000002
ENTRIES  DS    0F                                                       68100002
         DC    XL4'00'                                                  68200002
         DC    XL4'00'                                                  68300002
         DC    A(LABELS)                                                68400002
         DC    H'0'                                                     68500002
         LINE                                                           68600002
         ROUTINE DUM1,WHERETO                                           68700002
         LABEL ''                                                       68800002
         DC    X'01'                                                    68900002
         DC    X'000B8B00'                                              69000002
         LABEL ''                                                       69100002
         LINE  ,(11,50),SKIP=1                                          69200002
         ROUTINE DUM1,DONOTHNG                                          69300002
         LABEL 'TU    DATE   VOLUME     TIME      --TEMP--  SIO',      C69400002
               'DEN- NRZI  R/W WR TG LRC  CRC  ECC  SKEW ERLY VEL'      69500002
         LINE  ,(3,52),SKIP=1                                           69600002
         ROUTINE DUM1,DONOTHNG                                          69700002
         LABEL 'CUA   SERIAL DAY YR  SERIAL  HH MM SS.TH  RDS  WRTS',  C69800002
               'COUNT SITY NOISE VRC  VRC  MTE  EDC  ENV  ERR  BOR',   C69900002
               'CHG   TIE'                                              70000002
         LINE                                                           70100002
         ROUTINE DUM1,DONOTHNG                                          70200002
NOLAB    LABEL ''                                                       70300002
ONLYENT  LINE  (2,1),,SKIP=1                                     S99223 70400002
         HEX   PRIMCUA,0,3B                                      S99223 70500002
         ROUTINE TUSERIAL,PUTVOL                                 S99223 70600002
         ROUTINE YEAR,SETDATE                                    S99223 70700002
         HEX   TIME,1,4B                                         S99223 70800002
         ROUTINE DUM1,ADD11                                      S99223 70900002
         ROUTINE TEMPRDS,ONEBYTE                                        71300002
         ROUTINE TEMPWRTS,ONEBYTE                                       71500002
         ROUTINE SIOCNT,TWOBYTES                                        71700002
         ROUTINE DUM1,ADD4                                       S99223 71800002
         ROUTINE SNB60,WHATDENS                                         72000002
         ROUTINE SPARES,ADD3                                            72100002
         ROUTINE SNB30,CHKNRZI                                          72200002
         ROUTINE DUM1,DONOTHNG                                          72300002
         ROUTINE RWVRC,ONEBYTE                                          72500002
         ROUTINE CCOMPARE,CHKDEV                                        72600002
         ROUTINE MTELRCR,ONEBYTE                                        72700002
         ROUTINE EDCCRC,ONEBYTE                                         72800002
         ROUTINE ENVCKVRC,ONEBYTE                                       72900002
         ROUTINE SKEWCHK,RGHTHALF                                       73000002
         ROUTINE EXP,CHKDEV                                             73100002
         ROUTINE EXP2,CHKDEV                                            73200002
         BIN   PARITY,0                                                 73300002
         ROUTINE TRKINERR,SETBINA                                       73600002
         LABEL ''                                                       73700002
         DC    X'FF'                                                    73800002
         DC    XL2'0000'                                                73900002
         DC    XL2'0000'                                                74000002
         DC    XL2'0000'                                                74100002
LABELS   DS    0F                                                       74200002
         LSTART                                                         74300002
         END                                                            74400002
