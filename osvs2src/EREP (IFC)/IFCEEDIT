         TITLE 'IFCEEDIT-EDIT MODULE FOR IFCEREP0'                      00001000
IFCEEDIT CSECT ,                                                   0001 00002000
@MAINENT DS    0H                                                  0001 00003000
         USING *,@15                                               0001 00004000
         B     @PROLOG                                             0001 00005000
         DC    AL1(16)                                             0001 00006000
         DC    C'IFCEEDIT  79.010'                                 0001 00007000
         DROP  @15                                                      00008000
@PROLOG  ST    @14,12(,@13)                                        0001 00009000
         STM   @00,@12,20(@13)                                     0001 00010000
         BALR  @11,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@11                                         0001 00013000
         ST    @13,@SA00001+4                                      0001 00014000
         LA    @14,@SA00001                                        0001 00015000
         ST    @14,8(,@13)                                         0001 00016000
         LR    @13,@14                                             0001 00017000
*                                                                       00018000
*        THESE ARE USED FOR LENGH VALUES                                00019000
*                                                                       00020000
L0       EQU   0                                                        00021000
L1       EQU   1                                                        00022000
L2       EQU   2                                                        00023000
L3       EQU   3                                                        00024000
L4       EQU   4                                                        00025000
L5       EQU   5                                                        00026000
L6       EQU   6                                                        00027000
L7       EQU   7                                                        00028000
L8       EQU   8                                                        00029000
L12      EQU   12                                                       00030000
L14      EQU   14                                                       00031000
L15      EQU   15                                                       00032000
L16      EQU   16                                                       00033000
L17      EQU   17                                                       00034000
L18      EQU   18                                                       00035000
L20      EQU   20                                                       00036000
L24      EQU   24                                                       00037000
L27      EQU   27                      FJD                              00038000
L28      EQU   28                                                       00039000
L29      EQU   29                                                       00040000
L32      EQU   32                                                       00041000
L119     EQU   119                                                      00042000
L127     EQU   127                                                      00043000
*                                                                       00044000
*        FOR MASKS                                                      00045000
*                                                                       00046000
*                                                                       00047000
HEX01    EQU   X'01'                                                    00048000
HEX02    EQU   X'02'                                                    00049000
HEX08    EQU   X'08'                                                    00050000
HEX09    EQU   X'09'                                                    00051000
HEX0A    EQU   X'0A'                                                    00052000
HEX0B    EQU   X'0B'                                                    00053000
HEX0C    EQU   X'0C'                                                    00054000
HEX0D    EQU   X'0D'                                                    00055000
HEX0E    EQU   X'0E'                                                    00056000
HEX0F    EQU   X'0F'                                                    00057000
HEX7F    EQU   X'7F'                                                    00058000
HEX80    EQU   X'80'                                                    00059000
HEXFE    EQU   X'FE'                                                    00060000
HEXFF    EQU   X'FF'                                                    00061000
*                                                                       00062000
*        MISC                                                           00063000
*                                                                       00064000
STAR     EQU   C'*'                                                     00065000
DOLLAR   EQU   C'$'                                                     00066000
BLANK    EQU   C' '                                                     00067000
         B     @PB00002                                            0092 00068000
PRINTIT  STM   @14,@12,@SA00002                                    0092 00069000
*  SWAPR2 = R2;                   /* SAVE R2                 @Z427VLS*/ 00070000
         ST    R2,SWAPR2                                           0093 00071000
*  R2 = SAVER2;                   /* COMMUNICATIONS ADDRESS  @Z427VLS*/ 00072000
         L     R2,SAVER2                                           0094 00073000
*  MOVETOLN = MOVELINE;           /* OUTPUT LINE             @Z427VLS*/ 00074000
         MVC   MOVETOLN(133),MOVELINE                              0095 00075000
*  PRINTADR = ADDR(DUMBUFF);                               /*@Z427VLS*/ 00076000
         LA    @10,DUMBUFF                                         0096 00077000
         L     @01,SAVER2                                          0096 00078000
         ST    @10,PRINTADR(,@01)                                  0096 00079000
*  CALL IOHND(RITEPRTR);                                   /*@Z427VLS*/ 00080000
         L     @10,SAVER2                                          0097 00081000
         L     @15,ADIOHND(,@10)                                   0097 00082000
         LA    @01,@AL00097                                        0097 00083000
         BALR  @14,@15                                             0097 00084000
*  PRBUFF = DUMBUFF(3:120);                                /*@Z427VLS*/ 00085000
         MVI   PRBUFF+118,C' '                                     0098 00086000
         MVC   PRBUFF+119(14),PRBUFF+118                           0098 00087000
         MVC   PRBUFF(118),DUMBUFF+2                               0098 00088000
*  R2 = SWAPR2;                                            /*@Z427VLS*/ 00089000
         L     R2,SWAPR2                                           0099 00090000
* END;                                                     /*@Z427VLS*/ 00091000
@EL00002 DS    0H                                                  0100 00092000
@EF00002 DS    0H                                                  0100 00093000
@ER00002 LM    @14,@12,@SA00002                                    0100 00094000
         BR    @14                                                 0100 00095000
@PB00002 DS    0H                                                  0101 00096000
*/********************************************************************/ 00097000
*/*                                                          @Z427VLS*/ 00098000
*/*      SET UP PRIOR TO PROCESSING                          @Z427VLS*/ 00099000
*/*                                                          @Z427VLS*/ 00100000
*/********************************************************************/ 00101000
*        SAVER2 = R2;                                      /*@Z427VLS*/ 00102000
         ST    R2,SAVER2                                           0101 00103000
*         SAVER7 = R7;                                     /*@Z427VLS*/ 00104000
         ST    R7,SAVER7                                           0102 00105000
*        EDPRBUF=ADDR(PRBUFF);          /* SAVE PRINT BUFF PTR       */ 00106000
         LA    @10,PRBUFF                                          0103 00107000
         ST    @10,EDPRBUF                                         0103 00108000
*/********************************************************************/ 00109000
*/*                                                          @Z427VLS*/ 00110000
*/*      SET UP FOR TABLE                                    @Z427VLS*/ 00111000
*/*                                                          @Z427VLS*/ 00112000
*/********************************************************************/ 00113000
*EDPR0000:    ;                                            /*@Z427VLS*/ 00114000
EDPR0000 DS    0H                                                  0105 00115000
*        R3 = ADDR(PRBUFF);                                /*@Z427VLS*/ 00116000
         LA    R3,PRBUFF                                           0105 00117000
*        R2 = SAVER7;                                      /*@Z427VLS*/ 00118000
         L     R2,SAVER7                                           0106 00119000
*        EDSPBASE=R9;                   /* SAVE TABLE PTR    @Z427VLS*/ 00120000
         ST    R9,EDSPBASE                                         0107 00121000
*        GEN(L     R9,L0(R9));          /* SET PTR TO ENTRIES        */ 00122000
         L     R9,L0(R9)                                                00123000
*        GEN(MVC   EDFORM(L8),L0(R9));  /* SAVE FORMAT 1 & 2 @Z427VLS*/ 00124000
         MVC   EDFORM(L8),L0(R9)                                        00125000
*        GEN(MVC   EDLBBASE(L4),L8(R9));/* SAVE LABEL PTR    @Z427VLS*/ 00126000
         MVC   EDLBBASE(L4),L8(R9)                                      00127000
*        GEN(SH    R2,L12(R9));         /* DECREMENT BY DISP IF ANY  */ 00128000
         SH    R2,L12(R9)                                               00129000
*        GEN(LA    R9,L14(R9));         /* BUMP TO FIRST TRUE ENTRY  */ 00130000
         LA    R9,L14(R9)                                               00131000
*/********************************************************************/ 00132000
*/*                                                          @Z427VLS*/ 00133000
*/*      DETERMINE SUBROUTINE TO PROCESS ENTRY FOUND-SPECIAL @Z427VLS*/ 00134000
*/*                                                          @Z427VLS*/ 00135000
*/********************************************************************/ 00136000
*EDPR0001:    ;                         /*                   @Z427VLS*/ 00137000
EDPR0001 DS    0H                                                  0114 00138000
*        IF COUNT='FF'X                 /* IS TABLE DONE     @Z427VLS*/ 00139000
*              THEN                     /* IF YES EXIT       @Z427VLS*/ 00140000
         CLI   COUNT(R9),X'FF'                                     0114 00141000
         BE    @RT00114                                            0114 00142000
*                   GOTO EDDONE;        /* IF NO CONTINUE    @Z427VLS*/ 00143000
*        IF COUNT^='FE'X                /* IS ANOTHER TABLE  @Z427VLS*/ 00144000
*              THEN                     /* WANTED            @Z427VLS*/ 00145000
         CLI   COUNT(R9),X'FE'                                     0116 00146000
         BNE   @RT00116                                            0116 00147000
*                   GOTO EDPR0002;      /* BR-IF NO          @Z427VLS*/ 00148000
*        GEN(MVC   EDLOAD(L8),L1(R9));  /* PICK UP NAME OF NEEDED TBL*/ 00149000
         MVC   EDLOAD(L8),L1(R9)                                        00150000
*        DUMSW = OFF;                                      /*@Z427VLS*/ 00151000
         NI    DUMSW,B'10111111'                                   0119 00152000
*        IF DEBUG1 = ON THEN  /*PRINT THE NAME OF THE EDIT MODULE */    00153000
         L     @10,SAVER2                                          0120 00154000
         TM    DEBUG1(@10),B'01000000'                             0120 00155000
         BNO   @RF00120                                            0120 00156000
*         DO;                 /*THAT IS PRODUCING THE FOLLOWING   */    00157000
*          BUG1(8:15) = EDLOAD;/*LINES OF PRINT              @0001VLS*/ 00158000
         MVC   BUG1+7(8),EDLOAD                                    0122 00159000
*          PRBUFF = BUG1;    /*MOVE THE LINE OF INFO TO PRINT BUFFER*/  00160000
         MVI   PRBUFF+50,C' '                                      0123 00161000
         MVC   PRBUFF+51(82),PRBUFF+50                             0123 00162000
         MVC   PRBUFF(50),BUG1                                     0123 00163000
*          CALL PRINTIT;     /*GO PRINT THE MODULE NAME      @0001VLS*/ 00164000
         BAL   @14,PRINTIT                                         0124 00165000
*         END;                                             /*@0001VLS*/ 00166000
*        DO I = 1 BY 1 TO EDITNUM                                  0126 00167000
*          WHILE (DUMSW = OFF);         /* SEARCH FOR NAME IN TABLE  */ 00168000
@RF00120 LA    @10,1                                               0126 00169000
         ST    @10,I                                               0126 00170000
         B     @DE00126                                            0126 00171000
@DL00126 TM    DUMSW,B'01000000'                                   0126 00172000
         BNZ   @DC00126                                            0126 00173000
*           IF EDLOAD = LOADNAME(I) THEN                           0127 00174000
         MH    @10,@CH00064                                        0127 00175000
         L     @01,SAVER2                                          0127 00176000
         L     @01,ADEDITB(,@01)                                   0127 00177000
         ALR   @01,@10                                             0127 00178000
         AL    @01,@CF00675                                        0127 00179000
         CLC   EDLOAD(8),LOADNAME-4(@01)                           0127 00180000
         BNE   @RF00127                                            0127 00181000
*             DO;                                          /*@Z427VLS*/ 00182000
*               R9 = LOADPTR (I);       /* SET UP ENTRY POINTER      */ 00183000
         L     @01,SAVER2                                          0129 00184000
         L     @01,ADEDITB(,@01)                                   0129 00185000
         L     R9,LOADPTR-12(@10,@01)                              0129 00186000
*               DUMSW = ON;                                /*@Z427VLS*/ 00187000
         OI    DUMSW,B'01000000'                                   0130 00188000
*             END;                                         /*@Z427VLS*/ 00189000
*        END;                                              /*@Z427VLS*/ 00190000
@RF00127 LA    @10,1                                               0132 00191000
         AL    @10,I                                               0132 00192000
         ST    @10,I                                               0132 00193000
@DE00126 L     @01,SAVER2                                          0132 00194000
         L     @01,ADEDITB(,@01)                                   0132 00195000
         CH    @10,EDITNUM(,@01)                                   0132 00196000
         BNH   @DL00126                                            0132 00197000
@DC00126 DS    0H                                                  0133 00198000
*        IF DUMSW = OFF THEN                                       0133 00199000
         TM    DUMSW,B'01000000'                                   0133 00200000
         BNZ   @RF00133                                            0133 00201000
*          DO;                                             /*@Z427VLS*/ 00202000
*            EDITNUM = EDITNUM + 1;     /* NEXT ENTRY        @Z427VLS*/ 00203000
         L     @10,SAVER2                                          0135 00204000
         L     @10,ADEDITB(,@10)                                   0135 00205000
         L     @01,SAVER2                                          0135 00206000
         L     @01,ADEDITB(,@01)                                   0135 00207000
         LA    @00,1                                               0135 00208000
         AH    @00,EDITNUM(,@01)                                   0135 00209000
         STH   @00,EDITNUM(,@10)                                   0135 00210000
*            LOADNAME(EDITNUM) = EDLOAD;  /* NEW NAME        @Z427VLS*/ 00211000
         L     @10,SAVER2                                          0136 00212000
         L     @10,ADEDITB(,@10)                                   0136 00213000
         LH    @10,EDITNUM(,@10)                                   0136 00214000
         MH    @10,@CH00064                                        0136 00215000
         L     @01,SAVER2                                          0136 00216000
         L     @01,ADEDITB(,@01)                                   0136 00217000
         ALR   @01,@10                                             0136 00218000
         AL    @01,@CF00675                                        0136 00219000
         MVC   LOADNAME-4(8,@01),EDLOAD                            0136 00220000
*             GEN (LOADEREP EPLOC=EDLOAD);  /* LOAD IT       @G51DGVS*/ 00221000
         LOADEREP EPLOC=EDLOAD                                          00222000
*            LOADPTR(EDITNUM) = R0;       /* ENTRY POINT     @Z427VLS*/ 00223000
         L     @10,SAVER2                                          0138 00224000
         L     @01,ADEDITB(,@10)                                   0138 00225000
         LH    @10,EDITNUM(,@01)                                   0138 00226000
         MH    @10,@CH00064                                        0138 00227000
         L     @01,SAVER2                                          0138 00228000
         L     @01,ADEDITB(,@01)                                   0138 00229000
         ST    R0,LOADPTR-12(@10,@01)                              0138 00230000
*            R9 = R0;                                      /*@Z427VLS*/ 00231000
         LR    R9,R0                                               0139 00232000
*          END;                                            /*@Z427VLS*/ 00233000
*        GOTO  EDPR0000 ;               /* LOOP BACK TO SET UP AGAIN */ 00234000
         B     EDPR0000                                            0141 00235000
*/********************************************************************/ 00236000
*/*                                                          @Z427VLS*/ 00237000
*/*      END OF TABLE ROUTINE   BLOCK GENERATE FOR SPECIAL HNDLING   */ 00238000
*/*                                                          @Z427VLS*/ 00239000
*/********************************************************************/ 00240000
*EDDONE :     ;                                            /*@Z427VLS*/ 00241000
EDDONE   DS    0H                                                  0143 00242000
*GENERATE ;                                                /*@Z427VLS*/ 00243000
         MVC   EDFORM1(L6),L1(R9)       PICK UP DUMP VALUES             00244000
EDDONE1  BAL   R9,EDHEXDMP              NO-DUMP RECORD IN HEX           00245000
         L     R9,EDSPBASE              PICK UP TABLE ADDRESS           00246000
         B     EDEND                    EXIT                            00247000
*/********************************************************************/ 00248000
*/*                                                          @Z427VLS*/ 00249000
*/*      DETERMINE NORMAL ENTRY TYPE                         @Z427VLS*/ 00250000
*/*                                                          @Z427VLS*/ 00251000
*/********************************************************************/ 00252000
*EDPR0002:    ;                                            /*@Z427VLS*/ 00253000
EDPR0002 DS    0H                                                  0145 00254000
*        R8=ADDR(EDPR0004);             /* ADDR OF RETURN POINT      */ 00255000
         LA    R8,EDPR0004                                         0145 00256000
*        R3=R3+EDFORM(1);               /* SET PTR INTO PRNT BUFF    */ 00257000
         AH    R3,EDFORM                                           0146 00258000
*        R12=COUNT;                     /* PICK UP ENTRY COUNT       */ 00259000
         SLR   R12,R12                                             0147 00260000
         IC    R12,COUNT(,R9)                                      0147 00261000
*        R9=R9+1 ;                      /* BUMP PTR OVER COUNT       */ 00262000
         AL    R9,@CF00051                                         0148 00263000
*        IF R12=0                       /* IF COUNT ZERO-NULL LINE   */ 00264000
*              THEN                     /* NOTHING TO DO THIS LINE   */ 00265000
         LTR   R12,R12                                             0149 00266000
         BZ    @RT00149                                            0149 00267000
*                   GOTO EDPR0005;      /* GO TO END OF SECTION      */ 00268000
*EDPR0003:    ;                         /*                   @Z427VLS*/ 00269000
EDPR0003 DS    0H                                                  0152 00270000
*/*                                                          @Z427VLS*/ 00271000
*/*      BLOCK GENERATE FOR TM INST EARLY BSL WOULD NOT WORK @Z427VLS*/ 00272000
*/*                                                          @Z427VLS*/ 00273000
*GENERATE;                                                 /*@Z427VLS*/ 00274000
         CLC   L0(2,R9),HEX0017         IS ENTRY SYSREL        @D35UGFD 00275000
         BE    EDSYSREL                 YES                    @D35UGFD 00276000
         TM    L1(R9),HEX08             IS ENTRY 2 BYTE BIN             00277000
         BZ    EDBIN2                   YES                             00278000
         TM    L1(R9),HEX0F             IS ENTRY  FORMAT 2              00279000
         BO    EDFORMT2                 YES                             00280000
         TM    L1(R9),HEX0E             IS ENTRY  FORMAT 1              00281000
         BO    EDFORMT1                 YES                             00282000
         TM    L1(R9),HEX0D             IS ENTRY SPECIAL RTNE           00283000
         BO    EDSPCRTN                 YES                             00284000
         TM    L1(R9),HEX0C             IS ENTRY 4 BYTE BIN             00285000
         BO    EDBIN4                   YES                             00286000
         TM    L1(R9),HEX0B             IS ENTRY CARRIAGE CNTRL         00287000
         BO    EDCCLOOP                 YES                             00288000
         TM    L1(R9),HEX0A             IS ENTRY HEX                    00289000
         BO    EDHEX                    YES                             00290000
         TM    L1(R9),HEX09             IS IT CONVERT TO DEC ENTRY      00291000
         BO    EDCONV                   YES                             00292000
*        R9=R9+4 ;                      /* NO IGNORE ENTRY   @Z427VLS*/ 00293000
         AL    R9,@CF00060                                         0153 00294000
*EDPR0004 :    ;                                           /*@Z427VLS*/ 00295000
EDPR0004 DS    0H                                                  0155 00296000
*        R12=R12-1 ;                    /* DECREMENT ENTRY COUNT     */ 00297000
         BCTR  R12,0                                               0155 00298000
*        IF R12^=0                      /* IS LINE DONE ALL ENTRIES  */ 00299000
*              THEN                     /* PROCESSED         @Z427VLS*/ 00300000
         LTR   R12,R12                                             0156 00301000
         BNZ   @RT00156                                            0156 00302000
*                   GOTO EDPR0003;      /* BR-NO MORE TO DO  @Z427VLS*/ 00303000
*/********************************************************************/ 00304000
*/*                                                          @Z427VLS*/ 00305000
*/*      SETUP TO PLACE LABELS ONTO PRINT BUFF               @Z427VLS*/ 00306000
*/*                                                          @Z427VLS*/ 00307000
*/********************************************************************/ 00308000
*RESPECIFY (R4,R6,R7,R8) RESTRICTED;                       /*@Z427VLS*/ 00309000
*EDPR0005:    ;                         /* SET UP            @Z427VLS*/ 00310000
EDPR0005 DS    0H                                                  0160 00311000
*        R3=EDPRBUF ;                   /* PICK UP BUFF ADDR @Z427VLS*/ 00312000
         L     R3,EDPRBUF                                          0160 00313000
*        R4=R3  ;                       /* SET WORK REG      @Z427VLS*/ 00314000
         LR    R4,R3                                               0161 00315000
*        R3=R3-2;                       /* DECREMENT TO START OF BUFF*/ 00316000
         BCTR  R3,0                                                0162 00317000
         BCTR  R3,0                                                0162 00318000
*        R4=R4+EDFORM(3);               /* ADD IN FORMAT 2 CONSTANT  */ 00319000
         AH    R4,EDFORM+4                                         0163 00320000
*        R8=EDLBBASE;                   /* SET LABEL PTR     @Z427VLS*/ 00321000
         L     R8,EDLBBASE                                         0164 00322000
*EDLBLOOP:    ;                                            /*@Z427VLS*/ 00323000
EDLBLOOP DS    0H                                                  0166 00324000
*        R7=R8;                         /* SET RUNNING PTR   @Z427VLS*/ 00325000
         LR    R7,R8                                               0166 00326000
*        R6=0 ;                         /* SET COUNT OF CHARS        */ 00327000
         SLR   R6,R6                                               0167 00328000
*EDLBLP01:    ;                                            /*@Z427VLS*/ 00329000
EDLBLP01 DS    0H                                                  0169 00330000
*        IF LABELST='*' |               /* IS CHAR BEING INDEXED     */ 00331000
*           LABELST='$'                 /* THE * OR $ MARKING END OF */ 00332000
*              THEN                     /* A LABEL           @Z427VLS*/ 00333000
         CLI   LABELST(R7),C'*'                                    0169 00334000
         BE    @RT00169                                            0169 00335000
         CLI   LABELST(R7),C'$'                                    0169 00336000
         BE    @RT00169                                            0169 00337000
*                   GOTO EDLBLP02;      /* BR-YES            @Z427VLS*/ 00338000
*        R6=R6+1;                       /*  BUMP R6 BY 1     @Z427VLS*/ 00339000
         LA    @10,1                                               0171 00340000
         ALR   R6,@10                                              0171 00341000
*        R7=R7+1;                       /*  BUMP PTR TO NEXT CHAR    */ 00342000
         ALR   R7,@10                                              0172 00343000
*        GOTO EDLBLP01;                 /*  BACK TO DO COMPARE       */ 00344000
         B     EDLBLP01                                            0173 00345000
*EDLBLP02:    ;                         /*                   @Z427VLS*/ 00346000
EDLBLP02 DS    0H                                                  0175 00347000
*        IF NOPRINT='1'B                /*  IS NO PRINT SWITCH SET   */ 00348000
*              THEN                     /*  IF YES SKIP TO LP03      */ 00349000
         TM    NOPRINT,B'10000000'                                 0175 00350000
         BO    @RT00175                                            0175 00351000
*                   GOTO EDLBLP03;      /*                   @Z427VLS*/ 00352000
*        IF R6=0                        /*  IF COUNT(R6) IS ZERO     */ 00353000
*              THEN                     /*  ALSO SKIP TO LP03        */ 00354000
         LTR   R6,R6                                               0177 00355000
         BZ    @RT00177                                            0177 00356000
*                   GOTO EDLBLP03;      /*                   @Z427VLS*/ 00357000
*        R6=R6-1;                       /*  IF NOT THEN DECREMENT    */ 00358000
         BCTR  R6,0                                                0179 00359000
*        GEN(EX    R6,EDLBMOVE);        /*  COUNT FOR EX TO MOVE LABL*/ 00360000
         EX    R6,EDLBMOVE                                              00361000
*EDLBLP03:    ;                         /*                   @Z427VLS*/ 00362000
EDLBLP03 DS    0H                                                  0182 00363000
*        IF LABELST='$'                 /*  IS IT END OF LINE VERSUS */ 00364000
*              THEN                     /*  END OF LABEL     @Z427VLS*/ 00365000
         CLI   LABELST(R7),C'$'                                    0182 00366000
         BE    @RT00182                                            0182 00367000
*                   GOTO EDLBLP04;      /*  BR-END OF LINE   @Z427VLS*/ 00368000
*        R8=R7+1;                       /*  SET R8 TO START NXT LABEL*/ 00369000
         LA    R8,1                                                0184 00370000
         ALR   R8,R7                                               0184 00371000
*        R4=R4+EDFORM(4);               /*  BUMP BUFF PTR BY FORMT2  */ 00372000
         AH    R4,EDFORM+6                                         0185 00373000
*        GOTO EDLBLOOP;                 /*  LOOP BACK TO GET NXT LBL */ 00374000
         B     EDLBLOOP                                            0186 00375000
*EDLBLP04:    ;                         /*  LINE SET ENTRY   @Z427VLS*/ 00376000
EDLBLP04 DS    0H                                                  0188 00377000
*        IF NOPRINT='1'B                /*  IS NO PRINT ON   @Z427VLS*/ 00378000
*              THEN                     /*  IF YES           @Z427VLS*/ 00379000
         TM    NOPRINT,B'10000000'                                 0188 00380000
         BO    @RT00188                                            0188 00381000
*                   GOTO NOPUT;         /*  SKIP PUT         @Z427VLS*/ 00382000
*        CALL PRINTIT;                                     /*@Z427VLS*/ 00383000
         BAL   @14,PRINTIT                                         0190 00384000
*/********************************************************************/ 00385000
*/*                                                          @Z427VLS*/ 00386000
*/*      CLEAR PRINT BUFF WITH BLANKS   BLOCK GENERATE       @Z427VLS*/ 00387000
*/*                                                          @Z427VLS*/ 00388000
*/********************************************************************/ 00389000
*NOPUT  :     ;                                            /*@Z427VLS*/ 00390000
NOPUT    DS    0H                                                  0192 00391000
*GENERATE ;                                                /*@Z427VLS*/ 00392000
         MVC   L1(L1,R3),L0(R3)         RESET CHARIAGE CONTROL          00393000
         MVI   L2(R3),BLANK             SET IN BLANK                    00394000
         MVC   L3(L119,R3),L2(R3)       BLANK OUT LINE                  00395000
*                                                                    *  00396000
*        OTHER  CLEANUP                                              *  00397000
*                                                                    *  00398000
         NI    FLAGS,HEX7F              TURN OF NO PRINT FLAG           00399000
         LA    R8,L1(R7)                BUMP R8 TO NEXT LABEL           00400000
         LA    R3,L2(R3)                BUMP R3 TO PRINT BUFF           00401000
         ST    R8,EDLBBASE              SAVE R8 PTR TO NXT LABEL        00402000
         B     EDPR0001                 RETURN TO TOP OF LOOP           00403000
EDLBMOVE MVC   L0(L0,R4),L0(R8)                                         00404000
*        RESPECIFY(R6,R7) UNRESTRICTED;                    /*@Z427VLS*/ 00405000
*/********************************************************************/ 00406000
*/*                                                          @Z427VLS*/ 00407000
*/*      CARRIAGE CONTROL LOOP  CHANGE CC CHAR ON THE PRINT LINE     */ 00408000
*/*                                                          @Z427VLS*/ 00409000
*/********************************************************************/ 00410000
*EDCCLOOP:    ;                                            /*@Z427VLS*/ 00411000
EDCCLOOP DS    0H                                                  0195 00412000
*        R4=EDPRBUF;                    /* PICK UP PTR TO PRINT BUFF */ 00413000
         L     R4,EDPRBUF                                          0195 00414000
*        R4=R4-2 ;                      /* BACK OFF TO CARRIAGE CNTRL*/ 00415000
         BCTR  R4,0                                                0196 00416000
         BCTR  R4,0                                                0196 00417000
*        SAVECC=CC ;                    /* FIELDS AND SAVE CURRENT CC*/ 00418000
         MVC   SAVECC(1),CC                                        0197 00419000
*        IF BEFFLD1='00'X               /* IF FIELD 1 IS ZERO        */ 00420000
*              THEN                     /* THE CURRENT CC IS TO BE   */ 00421000
         CLI   BEFFLD1(R9),X'00'                                   0198 00422000
         BE    @RT00198                                            0198 00423000
*                   GOTO EDCCLP1;       /* USED WITHOUT CHANGE       */ 00424000
*        CC=BEFFLD1;                    /* IF NOT ZERO MOVE IN FIELD */ 00425000
         MVC   CC(1),BEFFLD1(R9)                                   0200 00426000
*EDCCLP1:      ;                        /*                   @Z427VLS*/ 00427000
EDCCLP1  DS    0H                                                  0202 00428000
*        IF BEFFLD2='00'X               /* IF FIELD 2 IS ZERO        */ 00429000
*              THEN                     /* THE SAVED CC IS TO BE LEFT*/ 00430000
         CLI   BEFFLD2(R9),X'00'                                   0202 00431000
         BE    @RT00202                                            0202 00432000
*                   GOTO EDCCLP2;       /* ALONE             @Z427VLS*/ 00433000
*        SAVECC=BEFFLD2;                /* IF NOT ZERO IT IS TO BE   */ 00434000
         MVC   SAVECC(1),BEFFLD2(R9)                               0204 00435000
*EDCCLP2:      ;                        /* OVERLAYED         @Z427VLS*/ 00436000
EDCCLP2  DS    0H                                                  0206 00437000
*        R9=R9+4 ;                      /* BUMP ENTRY PTR OVER ENTRY */ 00438000
         AL    R9,@CF00060                                         0206 00439000
*        GOTO R8 ;                      /* RETURN            @Z427VLS*/ 00440000
         BR    R8                                                  0207 00441000
*/********************************************************************/ 00442000
*/*                                                          @Z427VLS*/ 00443000
*/*      CONVERT LOOP CONVERT BINARY TO DECIMAL              @Z427VLS*/ 00444000
*/*                                                          @Z427VLS*/ 00445000
*/********************************************************************/ 00446000
*        RESPECIFY (R5,R6,R7) RESTRICTED;                  /*@Z427VLS*/ 00447000
*EDCONV  :     ;                                           /*@Z427VLS*/ 00448000
EDCONV   DS    0H                                                  0210 00449000
*        R4=NOFFSET;                    /* PICK UP DATA OFFSET       */ 00450000
         SLR   R4,R4                                               0210 00451000
         ICM   R4,3,NOFFSET(R9)                                    0210 00452000
*        GEN(SRL   R4,L4);              /* DROP OFF SIGN     @Z427VLS*/ 00453000
         SRL   R4,L4                                                    00454000
*        R4=R4+R2;                      /* COMPUTE ADDRESS OF DATA   */ 00455000
         ALR   R4,R2                                               0212 00456000
*        R5=0;                          /*                   @Z427VLS*/ 00457000
         SLR   R5,R5                                               0213 00458000
*        R6=NIN;                        /* PICK UP NUMBER OF CHARS IN*/ 00459000
         SLR   R6,R6                                               0214 00460000
         IC    R6,NIN(,R9)                                         0214 00461000
*CONVLOOP:     ;                                           /*@Z427VLS*/ 00462000
CONVLOOP DS    0H                                                  0216 00463000
*        GEN(SLL   R5,L8);              /* SHIFT DATA ONE BYTE LEFT  */ 00464000
         SLL   R5,L8                                                    00465000
*        GEN(IC    R5,L0(R4));          /* PICK UP A BYTE OF DATA    */ 00466000
         IC    R5,L0(R4)                                                00467000
*        R4=R4+1;                       /* BUMP DATA POINTER TO NXT  */ 00468000
         AL    R4,@CF00051                                         0218 00469000
*        GEN(BCT   R6,CONVLOOP);        /* LOOP TILL ALL PICKED UP   */ 00470000
         BCT   R6,CONVLOOP                                              00471000
*        GEN(CVD   R5,DBLWORK);         /* CONVERT TO DECIMAL        */ 00472000
         CVD   R5,DBLWORK                                               00473000
*        GEN(UNPK  WORK(L8),DBLWORK(L8));         /* UNPACK DECIMAL  */ 00474000
         UNPK  WORK(L8),DBLWORK(L8)                                     00475000
*        GEN(MVZ   WORK+L7(L1),WORK);   /* SET UP PROPER SIGN        */ 00476000
         MVZ   WORK+L7(L1),WORK                                         00477000
*        R4=NOUT;                       /* PICK UP NBR OF CHARS OUT  */ 00478000
         SLR   R4,R4                                               0223 00479000
         IC    R4,NOUT(,R9)                                        0223 00480000
*        Y=9-R4;                                           /*@ZA24135*/ 00481000
         LA    @10,9                                               0224 00482000
         SLR   @10,R4                                              0224 00483000
         STH   @10,Y                                               0224 00484000
*        X=R4-1;                                           /*@ZA24135*/ 00485000
         LR    @15,R4                                              0225 00486000
         BCTR  @15,0                                               0225 00487000
         STH   @15,X                                               0225 00488000
*        R4=R3-ADDR(PRBUFF)+1;                             /*@ZA24135*/ 00489000
         LA    R4,PRBUFF                                           0226 00490000
         LCR   R4,R4                                               0226 00491000
         ALR   R4,R3                                               0226 00492000
         AL    R4,@CF00051                                         0226 00493000
*        PRBUFF(R4:R4+X)=WORK(Y:8);     /* MOVE DATA TO PRINT BUFF   */ 00494000
         LA    @01,PRBUFF-1(R4)                                    0227 00495000
         LA    @14,WORK-1(@10)                                     0227 00496000
         EX    @15,@SM00677                                        0227 00497000
*        R9=R9+4;                       /* BUMP POINTER TO NEXT ENTRY*/ 00498000
         AL    R9,@CF00060                                         0228 00499000
*        R3=R3+EDFORM(2);               /* BUMP PTR TO NEXT COLUMN   */ 00500000
         AH    R3,EDFORM+2                                         0229 00501000
*        GOTO  R8;                      /* RETURN TO MAINLINE        */ 00502000
         BR    R8                                                  0230 00503000
*        RESPECIFY (R5,R6,R7) UNRESTRICTED;                /*@Z427VLS*/ 00504000
*/********************************************************************/ 00505000
*/*                                                          @Z427VLS*/ 00506000
*/*      FORMAT ROUTINE RESET THE COLUMN BOUNDARIES/SPACING  VALUE   */ 00507000
*/*                                                          @Z427VLS*/ 00508000
*/********************************************************************/ 00509000
*        RESPECIFY (R5) RESTRICTED;                        /*@Z427VLS*/ 00510000
*EDFORMT1:    ;                         /* FORMAT 1 ENTRY    @Z427VLS*/ 00511000
EDFORMT1 DS    0H                                                  0234 00512000
*        R4=1;                          /* SET INDEX TO 1    @Z427VLS*/ 00513000
         LA    R4,1                                                0234 00514000
*        GOTO  EDFORMLP ;               /* GOTO COMMON       @Z427VLS*/ 00515000
         B     EDFORMLP                                            0235 00516000
*EDFORMT2:     ;                        /* FORMAT 2 ENTRY    @Z427VLS*/ 00517000
EDFORMT2 DS    0H                                                  0237 00518000
*        R4=3 ;                         /* SET INDEX TO 3    @Z427VLS*/ 00519000
         LA    R4,3                                                0237 00520000
*EDFORMLP:    ;                         /*        COMMON     @Z427VLS*/ 00521000
EDFORMLP DS    0H                                                  0239 00522000
*        R5=BEFFLD1;                    /* PICK UP VALUE IN FLD 1    */ 00523000
         SLR   R5,R5                                               0239 00524000
         IC    R5,BEFFLD1(,R9)                                     0239 00525000
*        IF R5=0                        /* IF IT IS ZERO     @Z427VLS*/ 00526000
*              THEN                     /* NO CHANGE TO      @Z427VLS*/ 00527000
         LTR   R5,R5                                               0240 00528000
         BZ    @RT00240                                            0240 00529000
*                   GOTO EDFRMLP1;      /* COLUMN START VALUE        */ 00530000
*        R5=R5-1 ;                      /* DECREMENT BY 1    @Z427VLS*/ 00531000
         BCTR  R5,0                                                0242 00532000
*        IF R4=3                        /* IF FORMAT 2 ENTRY CHANGE  */ 00533000
*              THEN                     /* DOES NO AFFECT PRESENT    */ 00534000
         C     R4,@CF00073                                         0243 00535000
         BE    @RT00243                                            0243 00536000
*                   GOTO EDFRMLP0;      /* IF FORMAT C MUST RESET R3 */ 00537000
*        R3=EDPRBUF;                    /* RESET  STARTING  COL POS  */ 00538000
         L     R3,EDPRBUF                                          0245 00539000
*        R3=R3+R5;                      /* B4 ADDING OFFSET TO PRNTBF*/ 00540000
         ALR   R3,R5                                               0246 00541000
*EDFRMLP0:    ;                         /*                   @Z427VLS*/ 00542000
EDFRMLP0 DS    0H                                                  0248 00543000
*        EDFORM(R4)=R5;                 /* SAVE VALUE        @Z427VLS*/ 00544000
         LR    @10,R4                                              0248 00545000
         ALR   @10,@10                                             0248 00546000
         STH   R5,EDFORM-2(@10)                                    0248 00547000
*EDFRMLP1:    ;                                            /*@Z427VLS*/ 00548000
EDFRMLP1 DS    0H                                                  0250 00549000
*        R5=BEFFLD2 ;                   /* PICK UP SPACING VALUE     */ 00550000
         SLR   R5,R5                                               0250 00551000
         IC    R5,BEFFLD2(,R9)                                     0250 00552000
*        IF R5=0                        /* IF VALUE IS ZERO  @Z427VLS*/ 00553000
*              THEN                     /* SPACEING DOES NOT @Z427VLS*/ 00554000
         LTR   R5,R5                                               0251 00555000
         BZ    @RT00251                                            0251 00556000
*                   GOTO EDFRMLP2;      /* CHANGE            @Z427VLS*/ 00557000
*        R4=R4+1;                       /* IF NOT ZERO BUMP TO 2ND   */ 00558000
         AL    R4,@CF00051                                         0253 00559000
*        EDFORM(R4)=R5;                 /* HALF OF FORMAT & SAVE     */ 00560000
         LR    @10,R4                                              0254 00561000
         ALR   @10,@10                                             0254 00562000
         STH   R5,EDFORM-2(@10)                                    0254 00563000
*EDFRMLP2:                              /*                   @Z427VLS*/ 00564000
*        R9=R9+4;                       /* BUMP POINTER TO NXT ENTRY */ 00565000
EDFRMLP2 AL    R9,@CF00060                                         0255 00566000
*        GOTO R8;                       /* EXIT              @Z427VLS*/ 00567000
         BR    R8                                                  0256 00568000
*        RESPECIFY (R5) UNRESTRICTED;                      /*@Z427VLS*/ 00569000
*/********************************************************************/ 00570000
*/*                                                          @Z427VLS*/ 00571000
*/*      SPECIAL ENTRY   PASSES CONTROL TO SPECIAL SECTION OF TABLE  */ 00572000
*/*                                                          @Z427VLS*/ 00573000
*/********************************************************************/ 00574000
*EDSPCRTN:    ;                                            /*@Z427VLS*/ 00575000
EDSPCRTN DS    0H                                                  0259 00576000
*        RESPECIFY (R5,R6,R7,R8) RESTRICTED;               /*@Z427VLS*/ 00577000
*        R4=0 ;                         /* ZERO WORK REG     @Z427VLS*/ 00578000
         SLR   R4,R4                                               0260 00579000
*        GEN(IC    R4,L0(R9));          /* PICK UP           @Z427VLS*/ 00580000
         IC    R4,L0(R9)                                                00581000
*        GEN(SLL   R4,L8);              /* 12 BIT            @Z427VLS*/ 00582000
         SLL   R4,L8                                                    00583000
*        GEN(IC    R4,L1(R9));          /* ADDRESS           @Z427VLS*/ 00584000
         IC    R4,L1(R9)                                                00585000
*        GEN(SRL   R4,L4);              /* OFFSET            @Z427VLS*/ 00586000
         SRL   R4,L4                                                    00587000
*        R4=R4+R2 ;                     /* ADD R2 PTR INTO REC       */ 00588000
         ALR   R4,R2                                               0265 00589000
*        R6=DOFFSET ;                   /* PICK UP SPEC RTN OFFSET   */ 00590000
         SLR   R6,R6                                               0266 00591000
         ICM   R6,3,DOFFSET(R9)                                    0266 00592000
*        GEN(SRDL  R6,L12);             /* SHIFT 12 BIT OFFSET TO R7 */ 00593000
         SRDL  R6,L12                                                   00594000
*        GEN(SRL   R7,L20);             /* R6 HAS SPACE VALUE(SPEC)  */ 00595000
         SRL   R7,L20                                                   00596000
*        R5=R6 ;                        /* SET WORK REG      @Z427VLS*/ 00597000
         LR    R5,R6                                               0269 00598000
*        R6=R9 ;                        /* SAVE CURRENT ENTRY PTR    */ 00599000
         LR    R6,R9                                               0270 00600000
*        R9=EDSPBASE;                   /* PICK UP TABLE BASE        */ 00601000
         L     R9,EDSPBASE                                         0271 00602000
*        EDSPSV9=R6 ;                   /* SAVE CURR PTR IN TABLE    */ 00603000
         STCM  R6,15,EDSPSV9(R9)                                   0272 00604000
*        LABELPTR=EDLBBASE;             /* SAVE CURR LBL PTR IN TABLE*/ 00605000
         MVC   LABELPTR(4,R9),EDLBBASE                             0273 00606000
*        R7=R7+R9 ;                     /* COMPUTE OFFSET TO SPEC RTN*/ 00607000
         ALR   R7,R9                                               0274 00608000
*        R15=R7 ;                       /* LOAD R15          @Z427VLS*/ 00609000
         LR    R15,R7                                              0275 00610000
*        RESPECIFY (R0) RESTRICTED;                        /*@Z427VLS*/ 00611000
*        R0 = EDPRBUF - 1;                                 /*@Z427VLS*/ 00612000
         L     R0,EDPRBUF                                          0277 00613000
         BCTR  R0,0                                                0277 00614000
*        GEN(L R1,SAVER2);                                 /*@D35UGHS*/ 00615000
         L R1,SAVER2                                                    00616000
*        GEN(L R10,SAVER7);                                /*@D35UGHS*/ 00617000
         L R10,SAVER7                                                   00618000
*        GEN(BALR  R14,R15);            /* BALR TO SPECIAL RTN IN TBL*/ 00619000
         BALR  R14,R15                                                  00620000
*        RESPECIFY (R0) UNRESTRICTED;                      /*@Z427VLS*/ 00621000
*        R5=R15 ;                       /* SAVE RTN CODE     @Z427VLS*/ 00622000
         LR    R5,R15                                              0282 00623000
*        EDLBBASE=LABELPTR;             /* RESET LABEL PTR   @Z427VLS*/ 00624000
         MVC   EDLBBASE(4),LABELPTR(R9)                            0283 00625000
*        R9=EDSPSV9 ;                   /* RESET R9 WITH CURR ENTRY  */ 00626000
         ICM   R9,15,EDSPSV9(R9)                                   0284 00627000
*        R9=R9+4;                       /* PTR AND BUMP TO NXT ENTRY */ 00628000
         AL    R9,@CF00060                                         0285 00629000
*        R3=R3+EDFORM(2);               /* BUMP TO NEXT COLUMN       */ 00630000
         AH    R3,EDFORM+2                                         0286 00631000
*        IF R5=0                        /* IF RETURN CODE    @Z427VLS*/ 00632000
*              THEN                     /* IS 0 THEN         @Z427VLS*/ 00633000
         LTR   R5,R5                                               0287 00634000
         BNZ   @RF00287                                            0287 00635000
*                   NOPRINT='1'B ;      /* NOPRINT HAS BEEN REQUESTED*/ 00636000
         OI    NOPRINT,B'10000000'                                 0288 00637000
*              ELSE                     /* IF NOT ZERO       @Z427VLS*/ 00638000
*                   NOPRINT='0'B ;      /* NOPRINT SW IS OFF @Z427VLS*/ 00639000
         B     @RC00287                                            0289 00640000
@RF00287 NI    NOPRINT,B'01111111'                                 0289 00641000
*        GOTO R8 ;                      /* RETURN            @Z427VLS*/ 00642000
@RC00287 BR    R8                                                  0290 00643000
*        RESPECIFY (R5,R6,R7) UNRESTRICTED;                /*@Z427VLS*/ 00644000
*/********************************************************************/ 00645000
*/*                                                          @Z427VLS*/ 00646000
*/*      HEX ENTRY ROUTINE   PRINT OUT DATA IN HEX           @Z427VLS*/ 00647000
*/*                                                          @Z427VLS*/ 00648000
*/********************************************************************/ 00649000
*        RESPECIFY (R1,R5,R6,R7) RESTRICTED;               /*@Z427VLS*/ 00650000
*EDHEX  :     ;                                            /*@Z427VLS*/ 00651000
EDHEX    DS    0H                                                  0294 00652000
*        EDSPSV8=R8;                    /* SAVE RTN POINT    @Z427VLS*/ 00653000
         ST    R8,EDSPSV8                                          0294 00654000
*        R1=R3;                         /* SET PTR FOR WORK  @Z427VLS*/ 00655000
         LR    R1,R3                                               0295 00656000
*        R4=0 ;                         /* ZERO R4           @Z427VLS*/ 00657000
         SLR   R4,R4                                               0296 00658000
*        GEN(IC    R4,L0(R9));          /* PICK UP           @Z427VLS*/ 00659000
         IC    R4,L0(R9)                                                00660000
*        GEN(SLL   R4,L8);              /* 12 BIT            @Z427VLS*/ 00661000
         SLL   R4,L8                                                    00662000
*        GEN(IC    R4,L1(R9));          /* OFFSET            @Z427VLS*/ 00663000
         IC    R4,L1(R9)                                                00664000
*        GEN(SRL   R4,L4);              /* TO ADD TO REC     @Z427VLS*/ 00665000
         SRL   R4,L4                                                    00666000
*        R4=R4+R2;                      /* ADD OFFSET-PTR INTO REC   */ 00667000
         ALR   R4,R2                                               0301 00668000
*        R6=0 ;                         /*                   @Z427VLS*/ 00669000
         SLR   R6,R6                                               0302 00670000
*        GEN(IC    R6,L3(R9));          /* PICK UP NUMBER    @Z427VLS*/ 00671000
         IC    R6,L3(R9)                                                00672000
*        GEN(SRL   R6,L4);              /* OF CHARS TO DO    @Z427VLS*/ 00673000
         SRL   R6,L4                                                    00674000
*        IF R6=0                        /* IF NO. OF CHARS   @Z427VLS*/ 00675000
*              THEN                     /* IS ZERO           @Z427VLS*/ 00676000
         LTR   R6,R6                                               0305 00677000
         BZ    @RT00305                                            0305 00678000
*                   GOTO EDHLOOP3;      /* SKIP TO LOOP3     @Z427VLS*/ 00679000
*        R8=ADDR(CHARTAB);              /* SET PTR TO EBCDIC CHARS   */ 00680000
         LA    R8,CHARTAB                                          0307 00681000
*EDHLOOP:    ;                          /*                   @Z427VLS*/ 00682000
EDHLOOP  DS    0H                                                  0309 00683000
*        R5=0;                          /*                   @Z427VLS*/ 00684000
         SLR   R5,R5                                               0309 00685000
*        GEN(IC    R5,L2(R9));          /* PICK UP SPACEING BTWN CHAR*/ 00686000
         IC    R5,L2(R9)                                                00687000
*        R7=127 ;                       /* SET VALUE 7F FOR ANDING   */ 00688000
         LA    R7,127                                              0311 00689000
*        GEN(NR    R5,R7);              /* DROP OF UNUSED BITS       */ 00690000
         NR    R5,R7                                                    00691000
*        IF ACMIN^='1'B                 /* IF SWITCH SET VALUE IS A  */ 00692000
*              THEN                     /* NEGATIVE OFFSET   @Z427VLS*/ 00693000
         TM    ACMIN(R9),B'10000000'                               0313 00694000
         BNO   @RT00313                                            0313 00695000
*                   GOTO EDHLOOP0;      /* SWITCH OFF IS SPACE VALUE */ 00696000
*        R1=R1-R5 ;                     /* ON-DECREMENT WORK PTR TO  */ 00697000
         SLR   R1,R5                                               0315 00698000
*        R5=0 ;                         /* BUFFER & SET SPACE VALUE=0*/ 00699000
         SLR   R5,R5                                               0316 00700000
*EDHLOOP0:    ;                         /*                   @Z427VLS*/ 00701000
EDHLOOP0 DS    0H                                                  0318 00702000
*        GEN(TM    L3(R9),HEX01);       /* IS RIGHT HALF ONLY ASKED  */ 00703000
         TM    L3(R9),HEX01                                             00704000
*        GEN(BZ    EDHLOOP1);           /* FOR IF SW OFF-BR-YES      */ 00705000
         BZ    EDHLOOP1                                                 00706000
*        R7=0 ;                         /* IF ON LEFT HALF WANTED    */ 00707000
         SLR   R7,R7                                               0320 00708000
*        GEN(IC    R7,L0(R4));          /* PICK UP BYTE INDEXED TO   */ 00709000
         IC    R7,L0(R4)                                                00710000
*        GEN(SRL   R7,L4);              /* DROP RIGHT HALF   @Z427VLS*/ 00711000
         SRL   R7,L4                                                    00712000
*        R7=R7+R8;                      /* INDEX INTO CHAR TABLE     */ 00713000
         ALR   R7,R8                                               0323 00714000
*        GEN(MVC   L0(L0,R1),L0(R7));   /* MOVE IN INDEXED CHAR      */ 00715000
         MVC   L0(L0,R1),L0(R7)                                         00716000
*EDHLOOP1:    ;                         /*                   @Z427VLS*/ 00717000
EDHLOOP1 DS    0H                                                  0326 00718000
*        GEN(TM    L3(R9),HEX02);       /* IS LEFT HALF ONLY ASKED   */ 00719000
         TM    L3(R9),HEX02                                             00720000
*        GEN(BZ    EDHLOOP2);           /* FOR IF SW OFF-BR-YES      */ 00721000
         BZ    EDHLOOP2                                                 00722000
*        GEN(IC    R7,L0(R4));          /* IF ON RIGHT HALF WANTED   */ 00723000
         IC    R7,L0(R4)                                                00724000
*        GEN(SLL   R7,L28);             /* PICK UP INDEXED BYTE &    */ 00725000
         SLL   R7,L28                                                   00726000
*        GEN(SRL   R7,L28);             /* DROP UNUSED BITS E        */ 00727000
         SRL   R7,L28                                                   00728000
*        R7=R7+R8;                      /* INDEX INTO CHAR TABLE     */ 00729000
         ALR   R7,R8                                               0331 00730000
*        GEN(MVC   L1(L1,R1),L0(R7));   /* MOVE IN INDEXED CHAR      */ 00731000
         MVC   L1(L1,R1),L0(R7)                                         00732000
*EDHLOOP2:    ;                         /*                   @Z427VLS*/ 00733000
EDHLOOP2 DS    0H                                                  0334 00734000
*        R4=R4+1 ;                      /* BUMP PTR TO NEXT INPUT CHR*/ 00735000
         AL    R4,@CF00051                                         0334 00736000
*        R1=R1+R5+2;                    /* BUMP OUT BUFF PTR BY 2+   */ 00737000
         LR    @10,R1                                              0335 00738000
         ALR   @10,R5                                              0335 00739000
         AL    @10,@CF00071                                        0335 00740000
         LR    R1,@10                                              0335 00741000
*        R6=R6-1;                       /* SPACING VALUE DECREMENT LP*/ 00742000
         BCTR  R6,0                                                0336 00743000
*        IF R6^=0                       /* COUNT IF IT IS NOT ZERO   */ 00744000
*              THEN                     /* LOOP BACK TO      @Z427VLS*/ 00745000
         LTR   R6,R6                                               0337 00746000
         BNZ   @RT00337                                            0337 00747000
*                   GOTO EDHLOOP0;      /* LOOP0             @Z427VLS*/ 00748000
*EDHLOOP3:    ;                         /* IF IS ZERO DONE   @Z427VLS*/ 00749000
EDHLOOP3 DS    0H                                                  0340 00750000
*        R9=R9+4;                       /* BUMP TO NEXT ENTRY        */ 00751000
         AL    R9,@CF00060                                         0340 00752000
*        R3=R3+EDFORM(2);               /* BUMR BUFF PTR TO NXT COL  */ 00753000
         AH    R3,EDFORM+2                                         0341 00754000
*        R8=EDSPSV8;                    /* RESTORE R8        @Z427VLS*/ 00755000
         L     R8,EDSPSV8                                          0342 00756000
*        GOTO R8;                       /* RETURN            @Z427VLS*/ 00757000
         BR    R8                                                  0343 00758000
*        RESPECIFY (R1,R5,R6,R7) UNRESTRICTED;             /*@Z427VLS*/ 00759000
*/********************************************************************/ 00760000
*/*                                                          @D35UGFD*/ 00761000
*/*      SYSREL    ROUTINE   PRINT OUT SYSTEM & RELEASE LEVEL@D35UGFD*/ 00762000
*/*                                                          @D35UGFD*/ 00763000
*/********************************************************************/ 00764000
*        RESPECIFY (R1,R5,R6,R7) RESTRICTED;               /*@D35UGFD*/ 00765000
*EDSYSREL:    ;                                            /*@D35UGFD*/ 00766000
EDSYSREL DS    0H                                                  0347 00767000
*        EDSPSV8=R8;                    /* SAVE RTN POINT    @D35UGFD*/ 00768000
         ST    R8,EDSPSV8                                          0347 00769000
*        R1=R3;                         /* SET PTR FOR WORK  @D35UGFD*/ 00770000
         LR    R1,R3                                               0348 00771000
*        R1=EDPRBUF;                    /* SET PTR TO PRINT BUFFER   */ 00772000
         L     R1,EDPRBUF                                          0349 00773000
*        R4=1 ;                         /* SET R4 TO SYSREL OFFSET   */ 00774000
         LA    R4,1                                                0350 00775000
*                                       /* IN INPUT RECORD   @D35UGFD*/ 00776000
*        R4=R4+R2;                      /* ADD OFFSET-PTR INTO REC   */ 00777000
         ALR   R4,R2                                               0351 00778000
*        R6=0 ;                         /*                   @D35UGFD*/ 00779000
         SLR   R6,R6                                               0352 00780000
*        GEN(IC R6,L0(R4));          /* PICK UP SYS + REL.@D35UGFD*/    00781000
         IC R6,L0(R4)                                                   00782000
*        GEN(SRDL  R6,L5);              /* PUT REL LVL IN REG 7      */ 00783000
         SRDL  R6,L5                                                    00784000
*        GEN(SLL   R6,L2);              /* MULT. SYS VALUE BY 4      */ 00785000
         SLL   R6,L2                                                    00786000
*        GEN(LA    R6,RELTAB(R6));      /* INDEX  INTO SYS TABLE     */ 00787000
         LA    R6,RELTAB(R6)                                            00788000
*        GEN(SRL   R7,L27);             /* MOVE VALUE TO LOW ORDER   */ 00789000
         SRL   R7,L27                                                   00790000
*        IF DOSCONST  = R6->SYSNAM      /* IS SYSTEM NAME DOS ?      */ 00791000
*        THEN                           /* YES - DO                  */ 00792000
         CLC   DOSCONST(4),SYSNAM(R6)                              0358 00793000
         BNE   @RF00358                                            0358 00794000
*        DO;                            /*                   @D35UGFD*/ 00795000
*          R7 = R7 + 26;                /* MUST ADD 26    */       0360 00796000
         AL    R7,@CF00658                                         0360 00797000
*          IF R7 >  THIRTY4             /* GREATER THAN REL 34 ?  */    00798000
*          THEN                         /* YES - DO       */       0361 00799000
         C     R7,THIRTY4                                          0361 00800000
         BNH   @RF00361                                            0361 00801000
*            R7 = R7 - 34;              /* MUST SUBT 34  */        0362 00802000
         SL    R7,@CF00573                                         0362 00803000
*        END;                           /* END DOS ONLY CODE @D35UGFD*/ 00804000
@RF00361 DS    0H                                                  0364 00805000
*         R5 = SYSSTART;           /* PICK UP SYS NAME START POS. */    00806000
@RF00358 SLR   R5,R5                                               0364 00807000
         IC    R5,SYSSTART(,R9)                                    0364 00808000
*         R1 = R1 + R5;           /* POINT TO SYS NAME O/P AREA   */    00809000
         ALR   R1,R5                                               0365 00810000
*         SYSSTUF = R6 ->SYSNAM;  /* MOVE SYS NAME TO PRINT BUFFER */   00811000
         MVC   SYSSTUF(4,R1),SYSNAM(R6)                            0366 00812000
*         R1 = R1 + 5;           /* POINT TO LABEL O/P AREA   */   0367 00813000
         AL    R1,@CF00076                                         0367 00814000
*         SYSSTUF = RELCONST;     /* MOVE REL LABELTO PRINT BUFFER */   00815000
         MVC   SYSSTUF(4,R1),RELCONST                              0368 00816000
*         R1 = R1 + 8;           /* POINT TO REL # O/P AREA   */   0369 00817000
         AL    R1,@CF00062                                         0369 00818000
*          IF R7 >  0                   /* DOES REL NUM EXIST  ?  */    00819000
*          THEN                         /* YES - DO       */       0370 00820000
         LTR   R7,R7                                               0370 00821000
         BNP   @RF00370                                            0370 00822000
*          DO;                                                     0371 00823000
*            GEN(CVD   R7,WORK);        /* CONV REL LEVEL*/        0372 00824000
         CVD   R7,WORK                                                  00825000
*            GEN(UNPK  L0(L2,R1),WORK+L6(L2));/* UNPK INTO PRINT BUF */ 00826000
         UNPK  L0(L2,R1),WORK+L6(L2)                                    00827000
*            GEN(MVZ   L1(L1,R1),L0(R1));     /* MOVE ZONES          */ 00828000
         MVZ   L1(L1,R1),L0(R1)                                         00829000
*          END;                         /* END GREATER THAN 34 CODE */  00830000
*          ELSE                         /* NO REL NUM     */       0376 00831000
*          DO;                                                     0376 00832000
         B     @RC00370                                            0376 00833000
@RF00370 DS    0H                                                  0377 00834000
*            SYSSTUF = NONE;            /* MOVE NONE TO REL LVL  */     00835000
         MVC   SYSSTUF(4,R1),NONE                                  0377 00836000
*          END;                         /* END NO REL NUM.     CODE */  00837000
*        R9=R9+4;                       /* BUMP TO NEXT ENTRY        */ 00838000
@RC00370 AL    R9,@CF00060                                         0379 00839000
*        R8=EDSPSV8;                    /* RESTORE R8        @D35UGFD*/ 00840000
         L     R8,EDSPSV8                                          0380 00841000
*        GOTO R8;                       /* RETURN            @D35UGFD*/ 00842000
         BR    R8                                                  0381 00843000
*        RESPECIFY (R1,R5,R6,R7) UNRESTRICTED;             /*@D35UGFD*/ 00844000
*/********************************************************************/ 00845000
*/*                                                          @Z427VLS*/ 00846000
*/*      BINARY ENTRIES (2/4 BYTE)  PRINTS OUT BINARY BITS(MAX 32)   */ 00847000
*/*                                                          @Z427VLS*/ 00848000
*/********************************************************************/ 00849000
*        RESPECIFY (R1,R5,R6,R7) RESTRICTED;               /*@Z427VLS*/ 00850000
*EDBIN2 :     ;                         /* TWO BYTE ENTRY POINT      */ 00851000
EDBIN2   DS    0H                                                  0385 00852000
*        EDSPSV8=R8 ;                   /* SAVE RTN PTR      @Z427VLS*/ 00853000
         ST    R8,EDSPSV8                                          0385 00854000
*        EDSPSV5=2;                     /* SET IN NO. OF BYTE ENTRY  */ 00855000
         MVC   EDSPSV5(4),@CF00071                                 0386 00856000
*        GEN(IC    R4,L1(R9));          /* PICK UP SHIFT CHARACTER   */ 00857000
         IC    R4,L1(R9)                                                00858000
*        GEN(SLL   R4,L29);             /* DROP ALL BUT LOW  @Z427VLS*/ 00859000
         SLL   R4,L29                                                   00860000
*        GEN(SRL   R4,L29);             /* ORDER 3 BITS      @Z427VLS*/ 00861000
         SRL   R4,L29                                                   00862000
*        R8=R3;                         /* SET PTR OF BUFF TO WORK R8*/ 00863000
         LR    R8,R3                                               0390 00864000
*        R7=1 ;                         /* SET NO. OF CHARS TO DO    */ 00865000
         LA    R7,1                                                0391 00866000
*        GOTO EDOFFSET ;                /* BR-COMMON         @Z427VLS*/ 00867000
         B     EDOFFSET                                            0392 00868000
*EDBIN4 :     ;                         /* 4 BYTE ENTRY POINT        */ 00869000
EDBIN4   DS    0H                                                  0394 00870000
*        EDSPSV8=R8;                    /* SAVE RTN ADDR     @Z427VLS*/ 00871000
         ST    R8,EDSPSV8                                          0394 00872000
*        EDSPSV5=4 ;                    /* SET VALUE TO INDICATE 4   */ 00873000
         MVC   EDSPSV5(4),@CF00060                                 0395 00874000
*        R4=0 ;                         /* BYTE ENTRY        @Z427VLS*/ 00875000
         SLR   R4,R4                                               0396 00876000
*        GEN(IC    R4,L3(R9));          /* PICK UP SHIFT & NO. CHAR  */ 00877000
         IC    R4,L3(R9)                                                00878000
*        R7=R4 ;                        /* SAVE VALUE IN R7  @Z427VLS*/ 00879000
         LR    R7,R4                                               0398 00880000
*        GEN(SLL   R4,L29);             /* DROP ALL BUT LAST 3 BITS  */ 00881000
         SLL   R4,L29                                                   00882000
*        GEN(SRL   R4,L29);             /* SHIFT VALUE       @Z427VLS*/ 00883000
         SRL   R4,L29                                                   00884000
*        GEN(SRL   R7,L4);              /* R7 HAS NO. OF CHARS TO DO */ 00885000
         SRL   R7,L4                                                    00886000
*        GEN(IC    R5,L2(R9));          /* PICK UP SPACE BTWN CHAR   */ 00887000
         IC    R5,L2(R9)                                                00888000
*        R6=127 ;                       /* AND OFF ALL       @Z427VLS*/ 00889000
         LA    R6,127                                              0403 00890000
*        GEN(NR    R5,R6);              /* UNUSED BITS       @Z427VLS*/ 00891000
         NR    R5,R6                                                    00892000
*        R8=R3 ;                        /* SET PTR TO BUFF IN WORK   */ 00893000
         LR    R8,R3                                               0405 00894000
*        IF ACMIN^='1'B                 /* IF BIT IS OFF VALUE IN R5 */ 00895000
*              THEN                     /* IS SPACE BETWEEN CHARS    */ 00896000
         TM    ACMIN(R9),B'10000000'                               0406 00897000
         BNO   @RT00406                                            0406 00898000
*                   GOTO EDBIN4A;       /* IF IT IS ON VALUE A NEG   */ 00899000
*        R8=R8-R5;                      /* OFFSET TO BE DECREMENTED  */ 00900000
         SLR   R8,R5                                               0408 00901000
*        R5=0 ;                         /* THEN SPACE BTWN=0 @Z427VLS*/ 00902000
         SLR   R5,R5                                               0409 00903000
*EDBIN4A:     ;                         /*                   @Z427VLS*/ 00904000
EDBIN4A  DS    0H                                                  0411 00905000
*        IF R7=0                        /* ANY CHARS TO DO   @Z427VLS*/ 00906000
*              THEN                     /* IF VALUE ZERO     @Z427VLS*/ 00907000
         LTR   R7,R7                                               0411 00908000
         BZ    @RT00411                                            0411 00909000
*                   GOTO EDBLOOPD;      /* SKIP              @Z427VLS*/ 00910000
*EDOFFSET:    ;                         /*                   @Z427VLS*/ 00911000
EDOFFSET DS    0H                                                  0414 00912000
*        R6=0 ;                         /*                   @Z427VLS*/ 00913000
         SLR   R6,R6                                               0414 00914000
*        GEN(IC    R6,R0(R9));          /* PICK UP           @Z427VLS*/ 00915000
         IC    R6,R0(R9)                                                00916000
*        GEN(SLL   R6,L8);              /* 12 BIT            @Z427VLS*/ 00917000
         SLL   R6,L8                                                    00918000
*        GEN(IC    R6,L1(R9));          /* OFFSET INTO       @Z427VLS*/ 00919000
         IC    R6,L1(R9)                                                00920000
*        GEN(SRL   R6,L4);              /* INPUT RECORD      @Z427VLS*/ 00921000
         SRL   R6,L4                                                    00922000
*        R6=R6+R2;                      /* SET UP PTR TO INDEXED BITS*/ 00923000
         ALR   R6,R2                                               0419 00924000
*        R1=ADDR(CHARTAB);              /* SET PTR TO EBCDIC CHARS   */ 00925000
         LA    R1,CHARTAB                                          0420 00926000
*        GEN(MVC   BINCHARS(L4),L0(R6));/* MOVE OVER 4 BYTES @Z427VLS*/ 00927000
         MVC   BINCHARS(L4),L0(R6)                                      00928000
*/*                                                          @Z427VLS*/ 00929000
*/*      BLOCK=GENERATE  FOR SPECIAL HANDLING                @Z427VLS*/ 00930000
*/*                                                          @Z427VLS*/ 00931000
*GENERATE;                                                 /*@Z427VLS*/ 00932000
         L     R15,BINCHARS             PICK UP CHARS                   00933000
         LTR   R4,R4                    IS SHIFTING REQUESTED           00934000
         BZ    EDBLOOP                  BR-NO                           00935000
EDSHIFT  SLL   R15,L1                   YES DROP OFF HI ORDER BITS      00936000
         BCT   R4,EDSHIFT               AS SPECIFIED                    00937000
EDBLOOP  SR    R14,R14                                                  00938000
         SLDL  R14,L1                   BRING 1 BIT TO R14              00939000
         AR    R14,R1                   INDEX INTO CHARS                00940000
         MVC   L0(L1,R8),L0(R14)        MOVE INDEXED CHAR TO BUFF       00941000
         AR    R8,R5                    ADD IN SPACING VALUE            00942000
         LA    R8,L1(R8)                PLUS 1 MORE                     00943000
         BCT   R7,EDBLOOP               LOOP TILL DONE                  00944000
*EDBLOOPD:    ;                         /*                   @Z427VLS*/ 00945000
EDBLOOPD DS    0H                                                  0424 00946000
*        R9=R9+EDSPSV5;                 /* BUMP OVER ENTRY TO NEXT   */ 00947000
         AL    R9,EDSPSV5                                          0424 00948000
*        R3=R3+EDFORM(2);               /* BUMP BUFF PTR TO NXT COL  */ 00949000
         AH    R3,EDFORM+2                                         0425 00950000
*        R8=EDSPSV8;                    /* RESET RTN ADDR    @Z427VLS*/ 00951000
         L     R8,EDSPSV8                                          0426 00952000
*        GOTO R8 ;                      /* RETURN            @Z427VLS*/ 00953000
         BR    R8                                                  0427 00954000
*        RESPECIFY (R1,R5,R6,R7) UNRESTRICTED;             /*@Z427VLS*/ 00955000
*/********************************************************************/ 00956000
*/*                                                          @Z427VLS*/ 00957000
*/*      HEX DUMP ROUTINE-PROVIDE A HEX DUMP  BLOCK GEN FOR EASE     */ 00958000
*/*                                                 OF CODING & SPACE*/ 00959000
*/********************************************************************/ 00960000
*EDHEXDMP:    ;                                            /*@Z427VLS*/ 00961000
EDHEXDMP DS    0H                                                  0430 00962000
*GENERATE REFS(RECLNGTH);                                  /*@VS48704*/ 00963000
*        R2    PTR TO RECORD                                            00964000
*        R3    PTR TO PRINT BUFF                                        00965000
*        R9    RETURN REG                                               00966000
*                                                                       00967000
         CLC   EDFORM1(L2),ZERO         ANY DUMP WANTED                 00968000
         BCR   L8,R9                    BR-NO                           00969000
         BCTR  R3,R0                    POINT TO CARRIAGE CONTROL CHAR  00970000
         ST    R3,EDBUFSVE              SAVE REGS                       00971000
         ST    R9,EDDMPSVE              FOR RETURN                      00972000
         L     R4,SAVER2                GET ADDRESS OF COMTABLE         00973000
         LH    R4,RECLNGTH(R4)          GET SIZE OF RECORD FROM COMTBL  00974000
         LH    R5,EDFORM1+L2            PICK UP OFFSET TO LOGOUT SECT   00975000
         LH    R6,EDFORM1+L4            PICK ADDR TO USE ON DUMP        00976000
         AR    R4,R2                    SET R4 TO END OF RECORD         00977000
         AR    R5,R2                    SET R5 TO END OF STANDARD SECT  00978000
*                                                                       00979000
*              HEADER MESSAGE OF HEX DUMP                               00980000
*                                                                       00981000
         MVC   L4(L18,R3),EDHEXMSG      PUT OUT MESSAGE                 00982000
*        CALL PRINTIT;                                     /*@Z427VLS*/ 00983000
         BAL   @14,PRINTIT                                         0431 00984000
*    GENERATE;                                             /*@Z427VLS*/ 00985000
         MVI   L4(R3),BLANK             CLEAR                           00986000
         MVC   L5(L17,R3),L4(R3)        BUFFER                          00987000
*                                                                       00988000
*              HEADER MESSAGE OF HEADER                                 00989000
*                                                                       00990000
         MVC   L4(L6,R3),EDHDMSG        SET HDR ON FIRST LINE OF DUMP   00991000
*                                                                       00992000
EDHDMP01 CR    R2,R5                    IS REGULAR SECT DONE            00993000
         BNL   EDHDMP02                 BR-YES                          00994000
         BAL   R9,EDHDMP05              BR TO SETUP LINE WITH NO ADDR   00995000
         L     R3,EDBUFSVE              RESET R3                        00996000
*        CALL  PRINTIT;                                    /*@Z427VLS*/ 00997000
         BAL   @14,PRINTIT                                         0433 00998000
*   GENERATE;                                              /*@Z427VLS*/ 00999000
         MVI   L1(R3),BLANK             BLANK                           01000000
         MVC   L2(L119,R3),L1(R3)       LINE                            01001000
         B     EDHDMP01                 LOOP TILL DONE                  01002000
*                                                                       01003000
*                                                                       01004000
*                                                                       01005000
EDHDMP02 EQU   *                                                        01006000
*        CALL  PRINTIT;                                    /*@Z427VLS*/ 01007000
         BAL   @14,PRINTIT                                         0435 01008000
*     GENERATE;                                            /*@Z427VLS*/ 01009000
EDHDMPA  EQU   *                                                        01010000
         BAL   R9,EDHDMP03              BR TO SETUP LINE WITH ADDR      01011000
         LA    R6,L32(R6)               UP INPUT PTR                    01012000
         L     R3,EDBUFSVE              RESET R3                        01013000
*        CALL  PRINTIT;                                    /*@Z427VLS*/ 01014000
         BAL   @14,PRINTIT                                         0437 01015000
*     GENERATE;                                            /*@Z427VLS*/ 01016000
         MVI   L1(R3),BLANK             BLANK                           01017000
         MVC   L2(L119,R3),L1(R3)       LINE                            01018000
         CR    R2,R4                    DONE WITH REC                   01019000
         BL    EDHDMPA                  NO LOOP                         01020000
         L     R9,EDDMPSVE              YES RESTORE RTN ADDR            01021000
         BR    R9                       RTN                             01022000
*                                                                       01023000
EDHDMP03 LA    R7,CHARTAB               PICK UP PTR TO CHARACTERS       01024000
         LA    R10,L4                   NUMBER OF BITS TO CONVERT       01025000
         LR    R15,R6                   NUMBER OF ADDR TO CONVERT       01026000
         SLL   R15,L16                  MOVE NUMBER TO HI END           01027000
EDHDMP04 SR    R14,R14                  MOVE 4 BITS TO R14              01028000
         SLDL  R14,L4                   INDEX INTO CHARACTERS           01029000
         AR    R14,R7                   TO FIND PROPER ONE              01030000
         MVC   L8(L1,R3),L0(R14)        THEN MOVE IT INTO BUFF          01031000
         LA    R3,L1(R3)                BUMP BUFF PTR                   01032000
         BCT   R10,EDHDMP04             LOOP TILL DONE                  01033000
         L     R3,EDBUFSVE              PICK UP BUFF PTR                01034000
         LR    R5,R4                    SET END OF AREA PTR             01035000
EDHDMP05 LA    R7,CHARTAB               SET PTR TO CHARS                01036000
         LA    R10,L2                   NO. DBL WDS PER LINE            01037000
         LA    R8,L4                    NO. WDS PER DBL WDS             01038000
         LR    R1,R8                    NO. BYTES PER WORD              01039000
EDHDMP06 CR    R2,R5                    DONE YET                        01040000
         BNL   EDHDMP07                 BR-YES                          01041000
         IC    R15,L0(R2)               PICK UP CHAR                    01042000
         SLL   R15,L24                  MOVE TO HI END                  01043000
         SR    R14,R14                  ZERO R14                        01044000
         SLDL  R14,L4                   MOVE 4 BITS TO R14              01045000
         AR    R14,R7                   INDEX TO CHAR                   01046000
         MVC   L14(L1,R3),L0(R14)       MOVE INDEXED CHAR TO BUFF       01047000
         SR    R14,R14                  ZERO R14                        01048000
         SLDL  R14,L4                   MOVE LAST 4 BITS TO R14         01049000
         AR    R14,R7                                                   01050000
         MVC   L15(L1,R3),L0(R14)                                       01051000
         LA    R3,L2(R3)                                                01052000
         LA    R2,L1(R2)                                                01053000
         BCT   R1,EDHDMP06                                              01054000
         LA    R1,L4                                                    01055000
         LA    R3,L4(R3)                                                01056000
         BCT   R8,EDHDMP06                                              01057000
         LA    R8,L4                                                    01058000
         LA    R3,L4(R3)                                                01059000
         BCT   R10,EDHDMP06                                             01060000
EDHDMP07 BR    R9                                                       01061000
EDHEXMSG DC    CL18'HEX DUMP OF RECORD'                                 01062000
EDHDMSG  DC    CL6'HEADER'                                              01063000
EDBUFSVE DS    F                                                        01064000
EDFORM1  DS    3H                                                       01065000
ZERO     DC    H'0'                                                     01066000
*/********************************************************************/ 01067000
*EDEND  :     ;                                            /*@Z427VLS*/ 01068000
*  RETURN;                                                 /*@Z427VLS*/ 01069000
@EL00001 L     @13,4(,@13)                                         0440 01070000
@EF00001 DS    0H                                                  0440 01071000
@ER00001 L     @14,12(,@13)                                        0440 01072000
         LM    @00,@12,20(@13)                                     0440 01073000
         BR    @14                                                 0440 01074000
*        END                                               /*@Z427VLS*/ 01075000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 01076000
*/*%INCLUDE SYSLIB  (COMTABLE)                                        * 01077000
*;                                                                 0441 01078000
         B     @EL00001                                            0441 01079000
@DATA    DS    0H                                                       01080000
@CH00064 DC    H'12'                                                    01081000
@SM00677 MVC   0(0,@01),0(@14)                                          01082000
         DS    0F                                                       01083000
@AL00097 DC    A(@CF00071+2)           LIST WITH   1 ARGUMENT(S)        01084000
         DS    0F                                                       01085000
@SA00001 DS    18F                                                      01086000
@SA00002 DS    15F                                                      01087000
         DS    0F                                                       01088000
@CF00051 DC    F'1'                                                     01089000
@CF00071 DC    F'2'                                                     01090000
@CH00071 EQU   @CF00071+2                                               01091000
@CF00073 DC    F'3'                                                     01092000
@CF00060 DC    F'4'                                                     01093000
@CF00076 DC    F'5'                                                     01094000
@CF00062 DC    F'8'                                                     01095000
@CF00658 DC    F'26'                                                    01096000
@CF00573 DC    F'34'                                                    01097000
@CF00675 DC    F'-8'                                                    01098000
         DS    0D                                                       01099000
SAVER2   DS    F                                                        01100000
EDSPSV8  DS    F                                                        01101000
EDPRBUF  DS    F                                                        01102000
EDLBBASE DS    F                                                        01103000
EDSPBASE DS    F                                                        01104000
EDSPSV5  DS    F                                                        01105000
SWAPR2   DS    F                                                        01106000
SAVER7   DS    F                                                        01107000
THIRTY4  DC    F'34'                                                    01108000
RELOFFST DC    F'16'                                                    01109000
I        DC    F'0'                                                     01110000
BINCHARS DS    F                                                        01111000
EDDMPSVE DS    F                                                        01112000
EDPRDCB  DS    F                                                        01113000
SYNAD    DS    F                                                        01114000
X        DS    H                                                        01115000
Y        DS    H                                                        01116000
BBLANK   DC    CL1' '                                                   01117000
EDLOAD   DS    CL8                                                      01118000
         DS    CL7                                                      01119000
WORK     DS    CL8                                                      01120000
DUMBUFF  DC    CL134' '                                                 01121000
         ORG   DUMBUFF                                                  01122000
DDTYPE   DC    CL1'0'                                                   01123000
MOVETOLN DS    CL133                                                    01124000
         ORG   MOVETOLN                                                 01125000
SPACING  DC    X'09'                                                    01126000
         ORG   DUMBUFF+134                                              01127000
BUFFER   DS    CL122                                                    01128000
         ORG   BUFFER                                                   01129000
SAVECC   DS    BL1                                                      01130000
MOVELINE DS    CL133                                                    01131000
         ORG   MOVELINE                                                 01132000
CC       DC    X'09'                                                    01133000
PRBUFF   DC    CL133' '                                                 01134000
         ORG   BUFFER+135                                               01135000
NONE     DC    CL4'NONE'                                                01136000
DOSCONST DC    CL4'DOS '                                                01137000
RELCONST DC    CL4'REL.'                                                01138000
FLAGS    DC    X'00'                                                    01139000
         ORG   FLAGS                                                    01140000
NOPRINT  DS    BL1                                                      01141000
DUMSW    EQU   FLAGS+0                                                  01142000
         ORG   FLAGS+1                                                  01143000
BUG1     DC    CL50'DEBUG1          IS PRODUCING THE FOLLOWING LINE(S)' 01144000
         DS    CL4                                                      01145000
DBLWORK  DS    CL8                                                      01146000
EDDEL    DS    CL8                                                      01147000
SUPERZAP DC    3CL10'SUPERZAP'                                          01148000
EDFORM   DS    4H                                                       01149000
PATCH    DC    20H'0'                                                   01150000
CHARTAB  DC    CL1'0'                                                   01151000
         DC    CL1'1'                                                   01152000
         DC    CL1'2'                                                   01153000
         DC    CL1'3'                                                   01154000
         DC    CL1'4'                                                   01155000
         DC    CL1'5'                                                   01156000
         DC    CL1'6'                                                   01157000
         DC    CL1'7'                                                   01158000
         DC    CL1'8'                                                   01159000
         DC    CL1'9'                                                   01160000
         DC    CL1'A'                                                   01161000
         DC    CL1'B'                                                   01162000
         DC    CL1'C'                                                   01163000
         DC    CL1'D'                                                   01164000
         DC    CL1'E'                                                   01165000
         DC    CL1'F'                                                   01166000
IFCEEDIT CSECT                                                          01167000
         DC    S(SUPERZAP)                                              01168000
IFCEEDIT CSECT                                                          01169000
HEX0017  DC    X'0017'                                         @D35UGFD 01170000
RELTAB   DS    0C                                              @D35UGFD 01171000
         DC    C'OS  '                                         @D35UGFD 01172000
         DC    C'DOS '                                         @D35UGFD 01173000
         DC    C'VS 1'                                         @D35UGFD 01174000
         DC    C'V370'                                         @D35UGFD 01175000
         DC    C'VS 2'                                         @D35UGFD 01176000
         DC    C'    '                                         @D35UGFD 01177000
         DC    C'    '                                         @D35UGFD 01178000
         DC    C'    '                                         @D35UGFD 01179000
IFCEEDIT CSECT                                                          01180000
    DC  S(PATCH)                                                        01181000
IFCEEDIT CSECT                                                          01182000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01183000
@01      EQU   01                                                       01184000
@02      EQU   02                                                       01185000
@03      EQU   03                                                       01186000
@04      EQU   04                                                       01187000
@05      EQU   05                                                       01188000
@06      EQU   06                                                       01189000
@07      EQU   07                                                       01190000
@08      EQU   08                                                       01191000
@09      EQU   09                                                       01192000
@10      EQU   10                                                       01193000
@11      EQU   11                                                       01194000
@12      EQU   12                                                       01195000
@13      EQU   13                                                       01196000
@14      EQU   14                                                       01197000
@15      EQU   15                                                       01198000
R0       EQU   @00                                                      01199000
R1       EQU   @01                                                      01200000
R2       EQU   @02                                                      01201000
R3       EQU   @03                                                      01202000
R4       EQU   @04                                                      01203000
R5       EQU   @05                                                      01204000
R6       EQU   @06                                                      01205000
R7       EQU   @07                                                      01206000
R8       EQU   @08                                                      01207000
R9       EQU   @09                                                      01208000
R12      EQU   @12                                                      01209000
R15      EQU   @15                                                      01210000
R10      EQU   @10                                                      01211000
R11      EQU   @11                                                      01212000
R13      EQU   @13                                                      01213000
R14      EQU   @14                                                      01214000
IOHND    EQU   0                                                        01215000
PARM     EQU   0                                                        01216000
RECTYPE  EQU   PARM                                                     01217000
SWITCHES EQU   PARM+2                                                   01218000
DEBUG    EQU   PARM+4                                                   01219000
DEBUG1   EQU   DEBUG                                                    01220000
DEBUGA   EQU   PARM+8                                                   01221000
MISC     EQU   PARM+12                                                  01222000
PRINTES  EQU   MISC                                                     01223000
OPENCLSE EQU   PARM+13                                                  01224000
OPENIO   EQU   OPENCLSE                                                 01225000
CLOSEIO  EQU   OPENCLSE+2                                               01226000
DATENOW  EQU   PARM+17                                                  01227000
STDT     EQU   PARM+23                                                  01228000
STDATE   EQU   STDT                                                     01229000
PSTD     EQU   STDATE+1                                                 01230000
ENDDT    EQU   PARM+31                                                  01231000
ENDDATE  EQU   ENDDT                                                    01232000
PEND     EQU   ENDDATE+1                                                01233000
STTIME1  EQU   PARM+39                                                  01234000
ENDTIME1 EQU   PARM+43                                                  01235000
STTIME2  EQU   PARM+47                                                  01236000
ENDTIME2 EQU   PARM+51                                                  01237000
STRTDATE EQU   PARM+55                                                  01238000
@NM00006 EQU   PARM+72                                                  01239000
@NM00007 EQU   PARM+75                                                  01240000
ERRID    EQU   PARM+92                                                  01241000
IDTIMEA  EQU   ERRID+6                                                  01242000
IDTIME   EQU   IDTIMEA                                                  01243000
CCHHRLNG EQU   PARM+112                                                 01244000
RECLNGTH EQU   CCHHRLNG+6                                               01245000
ADIOHND  EQU   PARM+124                                                 01246000
ADIFCMSG EQU   PARM+128                                                 01247000
ADEDITB  EQU   PARM+132                                                 01248000
EVPTR    EQU   PARM+136                                                 01249000
SORTADR  EQU   PARM+140                                                 01250000
PRINTADR EQU   PARM+148                                                 01251000
CUAPTR   EQU   PARM+152                                                 01252000
DEVPTR   EQU   PARM+156                                                 01253000
MODPTR   EQU   PARM+160                                                 01254000
SERPTR   EQU   PARM+164                                                 01255000
VOLPTR   EQU   PARM+168                                                 01256000
CPUPTR   EQU   PARM+172                                                 01257000
CPCUAPTR EQU   PARM+176                                                 01258000
LIBADPTR EQU   PARM+180                                                 01259000
SYMCDPTR EQU   PARM+184                                                 01260000
SYSUMPTR EQU   PARM+188                                                 01261000
TRENPTR  EQU   PARM+192                                                 01262000
SHAREPTR EQU   PARM+196                                                 01263000
MERDCPTR EQU   PARM+208                                                 01264000
DUMPTABL EQU   PARM+228                                                 01265000
DUMPINFO EQU   DUMPTABL+4                                               01266000
TRENDONE EQU   0                                                        01267000
TREGEN   EQU   TRENDONE+8                                               01268000
TRECCH0  EQU   TREGEN+8                                                 01269000
TREND2   EQU   0                                                        01270000
TRENDKEY EQU   TREND2                                                   01271000
TRENDRT  EQU   TRENDKEY+1                                               01272000
TRENCPUS EQU   TRENDKEY+3                                               01273000
TRENDITM EQU   TRENDKEY+4                                               01274000
EVTABLE  EQU   0                                                        01275000
EVSTOP   EQU   EVTABLE                                                  01276000
EVKEY    EQU   EVTABLE+6                                                01277000
SORTABLE EQU   0                                                        01278000
SORTKEY  EQU   SORTABLE                                                 01279000
SORTCCHR EQU   SORTABLE+5                                               01280000
SYSUMONE EQU   0                                                        01281000
SYSUM2   EQU   0                                                        01282000
SYSUMKEY EQU   SYSUM2                                                   01283000
SYSRT    EQU   SYSUMKEY+1                                               01284000
SYSCPUS  EQU   SYSUMKEY+3                                               01285000
SYSITEM  EQU   SYSUMKEY+4                                               01286000
SHARE    EQU   0                                                        01287000
SHAREIO  EQU   SHARE+2                                                  01288000
SHRBASE  EQU   SHAREIO+1                                                01289000
SHRCUCPU EQU   SHAREIO+8                                                01290000
EDITLOAD EQU   0                                                        01291000
EDITNUM  EQU   EDITLOAD                                                 01292000
EDITABLE EQU   EDITLOAD+4                                               01293000
LOADNAME EQU   EDITABLE                                                 01294000
LOADPTR  EQU   EDITABLE+8                                               01295000
CUA      EQU   0                                                        01296000
CUAVAL   EQU   CUA+2                                                    01297000
DEVICE   EQU   0                                                        01298000
MODELS   EQU   0                                                        01299000
DEVSERAL EQU   0                                                        01300000
VOLUME   EQU   0                                                        01301000
CPUS     EQU   0                                                        01302000
CPUCUAS  EQU   0                                                        01303000
CPUCUAV  EQU   CPUCUAS+2                                                01304000
LIBADR   EQU   0                                                        01305000
SYMCODE  EQU   0                                                        01306000
SYMVAL   EQU   SYMCODE+2                                                01307000
MERIDIAN EQU   0                                                        01308000
COUNT    EQU   0                                                        01309000
DUMMY    EQU   0                                                        01310000
B2ENTRY  EQU   0                                                        01311000
ACENTRY  EQU   0                                                        01312000
@NM00013 EQU   ACENTRY                                                  01313000
@NM00014 EQU   ACENTRY+2                                                01314000
ACMIN    EQU   @NM00014                                                 01315000
@NM00015 EQU   ACENTRY+3                                                01316000
BEFEN    EQU   0                                                        01317000
@NM00016 EQU   BEFEN                                                    01318000
BEFFLD1  EQU   BEFEN+2                                                  01319000
BEFFLD2  EQU   BEFEN+3                                                  01320000
DENTRY   EQU   0                                                        01321000
@NM00018 EQU   DENTRY                                                   01322000
DOFFSET  EQU   DENTRY+2                                                 01323000
SYSRELE  EQU   0                                                        01324000
@NM00019 EQU   SYSRELE                                                  01325000
SYSSTART EQU   SYSRELE+2                                                01326000
SYSSTUF  EQU   0                                                        01327000
SYSNAM   EQU   0                                                        01328000
NINENTRY EQU   0                                                        01329000
NOFFSET  EQU   NINENTRY                                                 01330000
NIN      EQU   NINENTRY+2                                               01331000
NOUT     EQU   NINENTRY+3                                               01332000
LABELST  EQU   0                                                        01333000
FRDTLD   EQU   0                                                        01334000
EDSPSV9  EQU   FRDTLD+12                                                01335000
LABELPTR EQU   FRDTLD+16                                                01336000
IFCMSG   EQU   0                                                        01337000
TRECCH   EQU   TRECCH0                                                  01338000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01339000
FIRSTMOD EQU   FRDTLD+4                                                 01340000
@NM00020 EQU   FRDTLD                                                   01341000
NSIGN    EQU   NOFFSET+1                                                01342000
NRECA    EQU   NOFFSET                                                  01343000
SSIGN    EQU   @NM00019+1                                               01344000
SRECA    EQU   @NM00019                                                 01345000
DADDR    EQU   DOFFSET                                                  01346000
DSHIFT   EQU   DOFFSET                                                  01347000
DSIGN    EQU   @NM00018+1                                               01348000
DRECA    EQU   @NM00018                                                 01349000
BEFSIGN  EQU   @NM00016+1                                               01350000
@NM00017 EQU   @NM00016                                                 01351000
ACSHFT   EQU   @NM00015                                                 01352000
ACNO     EQU   @NM00015                                                 01353000
ACSPAC   EQU   @NM00014                                                 01354000
ACSIGN   EQU   @NM00013+1                                               01355000
ACRECA   EQU   @NM00013                                                 01356000
B2SHIFT  EQU   B2ENTRY+1                                                01357000
B2RECA   EQU   B2ENTRY                                                  01358000
FLAG     EQU   DUMMY+1                                                  01359000
@NM00012 EQU   DUMMY                                                    01360000
MODEL    EQU   MERIDIAN+2                                               01361000
MRDNUMBR EQU   MERIDIAN                                                 01362000
SYMVAL2  EQU   SYMVAL+2                                                 01363000
SYMVAL1  EQU   SYMVAL                                                   01364000
SYMCDNUM EQU   SYMCODE                                                  01365000
LIBVAL   EQU   LIBADR+2                                                 01366000
LIBADNUM EQU   LIBADR                                                   01367000
CPUCUX3  EQU   CPUCUAV+5                                                01368000
CPUCUX2  EQU   CPUCUAV+3                                                01369000
CPUCUX1  EQU   CPUCUAV                                                  01370000
CPCUANUM EQU   CPUCUAS                                                  01371000
CPUVAL   EQU   CPUS+2                                                   01372000
CPUNUM   EQU   CPUS                                                     01373000
VOLVAL   EQU   VOLUME+2                                                 01374000
VOLNUM   EQU   VOLUME                                                   01375000
SERVAL   EQU   DEVSERAL+2                                               01376000
SERNUM   EQU   DEVSERAL                                                 01377000
MODVAL   EQU   MODELS+2                                                 01378000
MODNUM   EQU   MODELS                                                   01379000
MDRVAL   EQU   DEVICE+204                                               01380000
MDRNUM   EQU   DEVICE+202                                               01381000
DEVVAL   EQU   DEVICE+2                                                 01382000
DEVNUM   EQU   DEVICE                                                   01383000
CUA2     EQU   CUAVAL+2                                                 01384000
CUA1     EQU   CUAVAL                                                   01385000
CUANUM   EQU   CUA                                                      01386000
SHARLET  EQU   SHAREIO+15                                               01387000
SHRCUAAH EQU   SHRCUCPU+5                                               01388000
SHRCUAAL EQU   SHRCUCPU+3                                               01389000
SHARSERA EQU   SHRCUCPU                                                 01390000
SHRCUABH EQU   SHRBASE+5                                                01391000
SHRCUABL EQU   SHRBASE+3                                                01392000
SHARSERB EQU   SHRBASE                                                  01393000
SHAREFLG EQU   SHAREIO                                                  01394000
SHARENUM EQU   SHARE                                                    01395000
SYSTEMP  EQU   SYSUM2+10                                                01396000
SYSPERM  EQU   SYSUM2+8                                                 01397000
SYSRANGE EQU   SYSUM2+7                                                 01398000
SYSDEV   EQU   SYSUM2+5                                                 01399000
SYSOLDA  EQU   SYSITEM                                                  01400000
SYS3705  EQU   SYSITEM                                                  01401000
SYSOLD   EQU   SYSCPUS                                                  01402000
SYSCPU   EQU   SYSCPUS                                                  01403000
SYSTROLL EQU   SYSRT+1                                                  01404000
SYSSPAN  EQU   SYSRT+1                                                  01405000
SYSCUA   EQU   SYSRT                                                    01406000
SYSGROUP EQU   SYSUMKEY                                                 01407000
SYSUMEOD EQU   SYSUMONE+96                                              01408000
SYSUMPER EQU   SYSUMONE+92                                              01409000
SYSUMPEA EQU   SYSUMONE+88                                              01410000
SYSUMPEI EQU   SYSUMONE+84                                              01411000
SYSUMCH  EQU   SYSUMONE+20                                              01412000
SYSUMMCN EQU   SYSUMONE+16                                              01413000
SYSUMMCR EQU   SYSUMONE+12                                              01414000
SYSUMNXT EQU   SYSUMONE+8                                               01415000
SYSUMIPL EQU   SYSUMONE+4                                               01416000
SYSUMNUM EQU   SYSUMONE                                                 01417000
SORTCORE EQU   SORTCCHR                                                 01418000
SORTTIME EQU   SORTKEY+1                                                01419000
SORTYEAR EQU   SORTKEY                                                  01420000
EVLETTER EQU   EVKEY+5                                                  01421000
EVSERIAL EQU   EVKEY+2                                                  01422000
EVMODEL  EQU   EVKEY                                                    01423000
EVNUM    EQU   EVTABLE+4                                                01424000
EVDAY    EQU   EVSTOP+1                                                 01425000
EVYEAR   EQU   EVSTOP                                                   01426000
TRETMP   EQU   TREND2+10                                                01427000
TREPRM   EQU   TREND2+8                                                 01428000
TRENDDEV EQU   TREND2+6                                                 01429000
TRENDDAT EQU   TRENDKEY+5                                               01430000
TRENDOD  EQU   TRENDITM                                                 01431000
TREND037 EQU   TRENDITM                                                 01432000
TRENDOLD EQU   TRENCPUS                                                 01433000
TRENDCPU EQU   TRENCPUS                                                 01434000
@NM00011 EQU   TRENDRT+1                                                01435000
TRENDCUA EQU   TRENDRT                                                  01436000
TRENDGRP EQU   TRENDKEY                                                 01437000
TREPRE   EQU   TREGEN+72                                                01438000
TRECCHF  EQU   TREGEN+68                                                01439000
TRECCHE  EQU   TREGEN+64                                                01440000
TRECCHD  EQU   TREGEN+60                                                01441000
TRECCHC  EQU   TREGEN+56                                                01442000
TRECCHB  EQU   TREGEN+52                                                01443000
TRECCHA  EQU   TREGEN+48                                                01444000
TRECCH9  EQU   TREGEN+44                                                01445000
TRECCH8  EQU   TREGEN+40                                                01446000
TRECCH7  EQU   TREGEN+36                                                01447000
TRECCH6  EQU   TREGEN+32                                                01448000
TRECCH5  EQU   TREGEN+28                                                01449000
TRECCH4  EQU   TREGEN+24                                                01450000
TRECCH3  EQU   TREGEN+20                                                01451000
TRECCH2  EQU   TREGEN+16                                                01452000
TRECCH1  EQU   TREGEN+12                                                01453000
TREMCH   EQU   TREGEN+4                                                 01454000
TREIPL   EQU   TREGEN                                                   01455000
TRENUM   EQU   TRENDONE+4                                               01456000
TRENEXT  EQU   TRENDONE                                                 01457000
DUMPSIZE EQU   DUMPINFO+4                                               01458000
DUMPADR  EQU   DUMPINFO                                                 01459000
DUMPNUM  EQU   DUMPTABL                                                 01460000
@NM00010 EQU   PARM+212                                                 01461000
RECLNGT1 EQU   PARM+204                                                 01462000
FRAMEPTR EQU   PARM+200                                                 01463000
ADCPUT   EQU   PARM+144                                                 01464000
LINECT   EQU   PARM+120                                                 01465000
@NM00009 EQU   CCHHRLNG+5                                               01466000
RECCCHHR EQU   CCHHRLNG                                                 01467000
USERPGM  EQU   PARM+102                                                 01468000
IDTSEC   EQU   IDTIME+3                                                 01469000
IDSEC    EQU   IDTIME+2                                                 01470000
IDMIN    EQU   IDTIME+1                                                 01471000
IDHOUR   EQU   IDTIME                                                   01472000
IDASID   EQU   ERRID+4                                                  01473000
IDCPU    EQU   ERRID+3                                                  01474000
@NM00008 EQU   ERRID+2                                                  01475000
IDVALUE  EQU   ERRID                                                    01476000
NUMDAYS  EQU   PARM+88                                                  01477000
SORTNUM  EQU   PARM+84                                                  01478000
TABSIZE  EQU   PARM+80                                                  01479000
SYSRETRN EQU   @NM00007                                                 01480000
NUMIN222 EQU   @NM00006                                                 01481000
WRTHRSH  EQU   PARM+69                                                  01482000
RDTHRSH  EQU   PARM+66                                                  01483000
TERM     EQU   PARM+58                                                  01484000
EVSDAY   EQU   STRTDATE+1                                               01485000
EVSYEAR  EQU   STRTDATE                                                 01486000
PENSEC2  EQU   ENDTIME2+2                                               01487000
PENMIN2  EQU   ENDTIME2+1                                               01488000
PENHOUR2 EQU   ENDTIME2                                                 01489000
PSTSEC2  EQU   STTIME2+2                                                01490000
PSTMIN2  EQU   STTIME2+1                                                01491000
PSTHOUR2 EQU   STTIME2                                                  01492000
PENSEC1  EQU   ENDTIME1+2                                               01493000
PENMIN1  EQU   ENDTIME1+1                                               01494000
PENHOUR1 EQU   ENDTIME1                                                 01495000
PSTSEC1  EQU   STTIME1+2                                                01496000
PSTMIN1  EQU   STTIME1+1                                                01497000
PSTHOUR1 EQU   STTIME1                                                  01498000
@NM00005 EQU   ENDDT+4                                                  01499000
PENDY    EQU   PEND+1                                                   01500000
PENYR    EQU   PEND                                                     01501000
@NM00004 EQU   ENDDATE                                                  01502000
@NM00003 EQU   STDT+4                                                   01503000
PSTDY    EQU   PSTD+1                                                   01504000
PSTYR    EQU   PSTD                                                     01505000
@NM00002 EQU   STDATE                                                   01506000
YEARNOW  EQU   DATENOW+4                                                01507000
@NM00001 EQU   DATENOW+3                                                01508000
DAYNOW   EQU   DATENOW                                                  01509000
CSNAP    EQU   CLOSEIO                                                  01510000
CDRCTWRK EQU   CLOSEIO                                                  01511000
CSYSIN   EQU   CLOSEIO                                                  01512000
CACCDEV  EQU   CLOSEIO                                                  01513000
CACCIN   EQU   CLOSEIO                                                  01514000
CSERLOG  EQU   CLOSEIO                                                  01515000
CEREPPT  EQU   CLOSEIO                                                  01516000
CTOURIST EQU   CLOSEIO                                                  01517000
OSNAP    EQU   OPENIO                                                   01518000
ODRCTWRK EQU   OPENIO                                                   01519000
OSYSIN   EQU   OPENIO                                                   01520000
OACCDEV  EQU   OPENIO                                                   01521000
OACCIN   EQU   OPENIO                                                   01522000
OSERLOG  EQU   OPENIO                                                   01523000
OEREPPT  EQU   OPENIO                                                   01524000
OTOURIST EQU   OPENIO                                                   01525000
PASSFLAG EQU   MISC                                                     01526000
PLOGREC  EQU   MISC                                                     01527000
ERRORID  EQU   MISC                                                     01528000
PSUM     EQU   PRINTES                                                  01529000
PEDIT    EQU   PRINTES                                                  01530000
PHIST    EQU   MISC                                                     01531000
PACC     EQU   MISC                                                     01532000
PZERO    EQU   MISC                                                     01533000
DEBUG63  EQU   DEBUGA+3                                                 01534000
DEBUG62  EQU   DEBUGA+3                                                 01535000
DEBUG61  EQU   DEBUGA+3                                                 01536000
DEBUG60  EQU   DEBUGA+3                                                 01537000
DEBUG59  EQU   DEBUGA+3                                                 01538000
DEBUG58  EQU   DEBUGA+3                                                 01539000
DEBUG57  EQU   DEBUGA+3                                                 01540000
DEBUG56  EQU   DEBUGA+3                                                 01541000
DEBUG55  EQU   DEBUGA+2                                                 01542000
DEBUG54  EQU   DEBUGA+2                                                 01543000
DEBUG53  EQU   DEBUGA+2                                                 01544000
DEBUG52  EQU   DEBUGA+2                                                 01545000
DEBUG51  EQU   DEBUGA+2                                                 01546000
DEBUG50  EQU   DEBUGA+2                                                 01547000
DEBUG49  EQU   DEBUGA+2                                                 01548000
DEBUG48  EQU   DEBUGA+2                                                 01549000
DEBUG47  EQU   DEBUGA+1                                                 01550000
DEBUG46  EQU   DEBUGA+1                                                 01551000
DEBUG45  EQU   DEBUGA+1                                                 01552000
DEBUG44  EQU   DEBUGA+1                                                 01553000
DEBUG43  EQU   DEBUGA+1                                                 01554000
DEBUG42  EQU   DEBUGA+1                                                 01555000
DEBUG41  EQU   DEBUGA+1                                                 01556000
DEBUG40  EQU   DEBUGA+1                                                 01557000
DEBUG39  EQU   DEBUGA                                                   01558000
DEBUG38  EQU   DEBUGA                                                   01559000
DEBUG37  EQU   DEBUGA                                                   01560000
DEBUG36  EQU   DEBUGA                                                   01561000
DEBUG35  EQU   DEBUGA                                                   01562000
DEBUG34  EQU   DEBUGA                                                   01563000
DEBUG33  EQU   DEBUGA                                                   01564000
DEBUG32  EQU   DEBUGA                                                   01565000
DEBUG31  EQU   DEBUG+3                                                  01566000
DEBUG30  EQU   DEBUG+3                                                  01567000
DEBUG29  EQU   DEBUG+3                                                  01568000
DEBUG28  EQU   DEBUG+3                                                  01569000
DEBUG27  EQU   DEBUG+3                                                  01570000
DEBUG26  EQU   DEBUG+3                                                  01571000
DEBUG25  EQU   DEBUG+3                                                  01572000
DEBUG24  EQU   DEBUG+3                                                  01573000
DEBUG23  EQU   DEBUG+2                                                  01574000
DEBUG22  EQU   DEBUG+2                                                  01575000
DEBUG21  EQU   DEBUG+2                                                  01576000
DEBUG20  EQU   DEBUG+2                                                  01577000
DEBUG19  EQU   DEBUG+2                                                  01578000
DEBUG18  EQU   DEBUG+2                                                  01579000
DEBUG17  EQU   DEBUG+2                                                  01580000
DEBUG16  EQU   DEBUG+2                                                  01581000
DEBUG15  EQU   DEBUG+1                                                  01582000
DEBUG14  EQU   DEBUG+1                                                  01583000
DEBUG13  EQU   DEBUG+1                                                  01584000
DEBUG12  EQU   DEBUG+1                                                  01585000
DEBUG11  EQU   DEBUG+1                                                  01586000
DEBUG10  EQU   DEBUG+1                                                  01587000
DEBUG9   EQU   DEBUG+1                                                  01588000
DEBUG8   EQU   DEBUG+1                                                  01589000
DEBUG7   EQU   DEBUG                                                    01590000
DEBUG6   EQU   DEBUG                                                    01591000
DEBUG5   EQU   DEBUG                                                    01592000
DEBUG4   EQU   DEBUG                                                    01593000
DEBUG3   EQU   DEBUG                                                    01594000
DEBUG2   EQU   DEBUG                                                    01595000
DEBUG0   EQU   DEBUG                                                    01596000
SORTBRK  EQU   SWITCHES+1                                               01597000
COREFAIL EQU   SWITCHES+1                                               01598000
ANALYSIS EQU   SWITCHES+1                                               01599000
SHIFT3RD EQU   SWITCHES+1                                               01600000
DEVEXCL  EQU   SWITCHES+1                                               01601000
ZEROALL  EQU   SWITCHES+1                                               01602000
NOTALL   EQU   SWITCHES+1                                               01603000
NOSDR    EQU   SWITCHES                                                 01604000
TIMESEQ  EQU   SWITCHES                                                 01605000
SYSUM    EQU   SWITCHES                                                 01606000
PARMTHR  EQU   SWITCHES                                                 01607000
TREND    EQU   SWITCHES                                                 01608000
SHORTOBR EQU   SWITCHES                                                 01609000
PARMMES  EQU   SWITCHES                                                 01610000
RDESUM   EQU   SWITCHES                                                 01611000
PCCHFRAM EQU   RECTYPE+1                                                01612000
PMCHFRAM EQU   RECTYPE+1                                                01613000
PTTYP    EQU   RECTYPE+1                                                01614000
PEOD     EQU   RECTYPE                                                  01615000
PMIH     EQU   RECTYPE                                                  01616000
PDDR     EQU   RECTYPE                                                  01617000
PIPL     EQU   RECTYPE                                                  01618000
PSOFT    EQU   RECTYPE                                                  01619000
POBR     EQU   RECTYPE                                                  01620000
PCHAN    EQU   RECTYPE                                                  01621000
PMCH     EQU   RECTYPE                                                  01622000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01623000
@RT00114 EQU   EDDONE                                                   01624000
@RT00116 EQU   EDPR0002                                                 01625000
@RF00133 EQU   EDPR0000                                                 01626000
@RT00149 EQU   EDPR0005                                                 01627000
@RT00156 EQU   EDPR0003                                                 01628000
@RT00169 EQU   EDLBLP02                                                 01629000
@RT00175 EQU   EDLBLP03                                                 01630000
@RT00177 EQU   EDLBLP03                                                 01631000
@RT00182 EQU   EDLBLP04                                                 01632000
@RT00188 EQU   NOPUT                                                    01633000
@RT00198 EQU   EDCCLP1                                                  01634000
@RT00202 EQU   EDCCLP2                                                  01635000
@RT00240 EQU   EDFRMLP1                                                 01636000
@RT00243 EQU   EDFRMLP0                                                 01637000
@RT00251 EQU   EDFRMLP2                                                 01638000
@RT00305 EQU   EDHLOOP3                                                 01639000
@RT00313 EQU   EDHLOOP0                                                 01640000
@RT00337 EQU   EDHLOOP0                                                 01641000
@RT00406 EQU   EDBIN4A                                                  01642000
@RT00411 EQU   EDBLOOPD                                                 01643000
EDEND    EQU   @EL00001                                                 01644000
@ENDDATA EQU   *                                                        01645000
         END   IFCEEDIT                                                 01646000
