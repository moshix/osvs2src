         TITLE 'IFCFMTIO - LOGDATA I/O HANDLER'                         00001000
IFCFMTIO CSECT ,                                                   0001 00002000
@MAINENT DS    0H                                                  0001 00003000
         USING *,@15                                               0001 00004000
         B     @PROLOG                                             0001 00005000
         DC    AL1(16)                                             0001 00006000
         DC    C'IFCFMTIO  79.011'                                 0001 00007000
         DROP  @15                                                      00008000
@PROLOG  STM   @14,@06,12(@13)                                     0001 00009000
         STM   @08,@12,52(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         L     @00,@SIZDATD                                        0001 00014000
         GETMAIN  R,LV=(0)                                              00015000
         LR    @11,@01                                             0001 00016000
         USING @DATD,@11                                           0001 00017000
         ST    @13,@SA00001+4                                      0001 00018000
         LM    @00,@01,20(@13)                                     0001 00019000
         ST    @11,8(,@13)                                         0001 00020000
         LR    @13,@11                                             0001 00021000
*                                                                  0093 00022000
*/********************************************************************/ 00023000
*/* FUNCTION-                                                      0093 00024000
*       ROUTINE TO DETERMINE IF THE REQUEST WAS FOR A READ OR A WRITE.  00025000
*     IF IT WAS NOT EITHER OF THESE REQUESTS,THE FOLLOWING MESSAGE IS   00026000
*     PRINTED:                                                     0093 00027000
*                                                                  0093 00028000
*        *** AN INVALID I/O REQUEST WAS MADE BY THE EREP EDITOR ***     00029000
*     (THE REQUEST WAS OTHER THAN A DIRECT READ OR A WRITE TO PRINTER)  00030000
*                                                                  0093 00031000
*    CALLS-                                                        0093 00032000
*         PRINT, PRINTIT, AND READ                                 0093 00033000
*                                                                  0093 00034000
*    CALLED BY -                                                   0093 00035000
*         EREP MODULES IFCEDSUM AND IFCEEDIT FOR READING A RECORD AND   00036000
*         PRINTING A LINE OF OUTPUT.                               0093 00037000
*                                                                  0093 00038000
*    RETURNS TO -                                                  0093 00039000
*         CALLER WITH A RETURN CODE OF ZERO IF THE REQUEST WAS VALID,   00040000
*         FOUR IF THE REQUEST WAS NOT.                             0093 00041000
*                                                                    */ 00042000
*/********************************************************************/ 00043000
*                                                                  0093 00044000
*   RCREG=ZERO;                     /* SET A GOOD RETURN CODE        */ 00045000
         SLR   RCREG,RCREG                                         0093 00046000
*   IF ACTION=READIRCT THEN         /* READ THE NEXT RECORD          */ 00047000
         L     @14,ACTPTR(,INPUTPTR)                               0094 00048000
         CLC   ACTION(2,@14),@CH00045                              0094 00049000
         BNE   @RF00094                                            0094 00050000
*     CALL READ;                    /* ROUTINE TO PLACE RECORD IN  0095 00051000
*                                      BUFFER                        */ 00052000
         BAL   @14,READ                                            0095 00053000
*   ELSE                            /* NOT A DIRECT READ REQUEST     */ 00054000
*     IF ACTION=RITEPRTR THEN       /* WRITE A LINE OF OUTPUT        */ 00055000
         B     @RC00094                                            0096 00056000
@RF00094 L     @14,ACTPTR(,INPUTPTR)                               0096 00057000
         CLC   ACTION(2,@14),@CH00072                              0096 00058000
         BNE   @RF00096                                            0096 00059000
*       CALL PRINTIT;               /* ROUTINE TO PRINT              */ 00060000
         BAL   @14,PRINTIT                                         0097 00061000
*     ELSE                          /* INVALID ACTION                */ 00062000
*       DO;                                                        0098 00063000
         B     @RC00096                                            0098 00064000
@RF00096 DS    0H                                                  0099 00065000
*         ABDPLPTR=PDMPLIST;        /* PTR TO PRINT DUMP PARAMETER 0099 00066000
*                                      LIST                          */ 00067000
         L     ABDPLPTR,PDMPLIST(,PARMPTR)                         0099 00068000
*         BUFFER(1:LENGTH(INVACT))=INVACT;/* ERROR MESSAGE           */ 00069000
         L     @14,ADPLBUF(,ABDPLPTR)                              0100 00070000
         MVC   BUFFER(58,@14),INVACT                               0100 00071000
*         CALL PRINT;               /* PRINT IT                      */ 00072000
         L     @15,ADPLPRNT(,ABDPLPTR)                             0101 00073000
         BALR  @14,@15                                             0101 00074000
*         RCREG=BADACT;             /* SET A BAD RETURN CODE         */ 00075000
         LA    RCREG,4                                             0102 00076000
*       END;                        /* END INVALID ACTION REQUESTED  */ 00077000
*   RETURN CODE(RCREG);                                            0104 00078000
@RC00096 DS    0H                                                  0104 00079000
@RC00094 LR    @10,@15                                             0104 00080000
         L     @13,4(,@13)                                         0104 00081000
         L     @00,@SIZDATD                                        0104 00082000
         LR    @01,@11                                             0104 00083000
         FREEMAIN R,LV=(0),A=(1)                                        00084000
         LR    @15,@10                                             0104 00085000
         L     @14,12(,@13)                                        0104 00086000
         LM    @00,@06,20(@13)                                     0104 00087000
         LM    @08,@12,52(@13)                                     0104 00088000
         BR    @14                                                 0104 00089000
*READ:                                                             0105 00090000
*   PROC OPTIONS(SAVE(14));                                        0105 00091000
*                                                                  0105 00092000
@EL00001 L     @13,4(,@13)                                         0105 00093000
@EF00001 L     @00,@SIZDATD                                        0105 00094000
         LR    @01,@11                                             0105 00095000
         FREEMAIN R,LV=(0),A=(1)                                        00096000
@ER00001 LM    @14,@06,12(@13)                                     0105 00097000
         LM    @08,@12,52(@13)                                     0105 00098000
         BR    @14                                                 0105 00099000
READ     ST    @14,@SA00002                                        0105 00100000
*/********************************************************************/ 00101000
*/* FUNCTION-                                                      0106 00102000
*       ROUTINE TO MOVE THE RECORD INTO ANOTHER,ZEROED,BUFFFER IN ORDER 00103000
*     TO HAVE ALL RECORDS BE CONTIGUOUS INSTEAD OF WRAPPING AROUND THE  00104000
*     BUFFER. IT ALSO MOVES THE POINTER TO THE RECORD INTO REG 7 FOR TH 00105000
*     EDITOR. THE LENGTH OF THE RECORD IS PLACED IN THE 2 BYTES    0106 00106000
*     PRECEDING THE RECORD.                                        0106 00107000
*                                                                  0106 00108000
*    CALLS-                                                        0106 00109000
*         TIMECNV                                                  0106 00110000
*                                                                  0106 00111000
*    CALLED BY -                                                   0106 00112000
*         MAINLINE TO DO THE NECESSARY SET UP FOR THE EDITOR ON A READ  00113000
*         REQUEST.                                                 0106 00114000
*                                                                  0106 00115000
*    RETURNS TO -                                                  0106 00116000
*         CALLER WITHOUT SETTING A RETURN CODE.                    0106 00117000
*                                                                    */ 00118000
*/********************************************************************/ 00119000
*                                                                  0106 00120000
*   RECPTR=RECADR;                  /* FILL IN POINTER TO THE CONTROL   00121000
*                                      HEADER OF THE ENTRY TO BE READ*/ 00122000
         L     @14,RECADR(,PARMPTR)                                0106 00123000
         LR    RECPTR,@14                                          0106 00124000
*   IF WRAP=OFF THEN                /* BUFFER DOES NOT WRAP AROUND   */ 00125000
*                                                                  0107 00126000
         TM    WRAP(RECPTR),B'10000000'                            0107 00127000
         BNZ   @RF00107                                            0107 00128000
*     /***************************************************************/ 00129000
*     /*                                                             */ 00130000
*     /* THE RECORD DOES NOT WRAP THE BUFFER. THIS MEANS THE RECORD  */ 00131000
*     /* CAN BE COPIED ALL AT ONCE INTO THE NEW BUFFER               */ 00132000
*     /*                                                             */ 00133000
*     /***************************************************************/ 00134000
*                                                                  0108 00135000
*     DO;                                                          0108 00136000
*                                                                  0108 00137000
*       /*************************************************************/ 00138000
*       /*                                                           */ 00139000
*       /* SET UP FOR A MOVE CHARACTER LONG, IN CASE THE ENTRY IS    */ 00140000
*       /* LONGER THAN 256 BYTES. THE MOVE CHAR LONG WILL ALSO PAD   */ 00141000
*       /* THE REMAINDER OF THE NEW BUFFER TO ZEROS                  */ 00142000
*       /*                                                           */ 00143000
*       /*************************************************************/ 00144000
*                                                                  0109 00145000
*       RFY                                                        0109 00146000
*        (BUFREG,                                                  0109 00147000
*         BUFSIZE,                                                 0109 00148000
*         RECREG,                                                  0109 00149000
*         RECSIZE) RSTD;                                           0109 00150000
*       BUFREG=ADDR(NEWREC);        /* WHERE TO COPY THE RECORD TO   */ 00151000
         L     BUFREG,UNWRPBUF(,PARMPTR)                           0110 00152000
         LA    BUFREG,NEWREC(,BUFREG)                              0110 00153000
*       BUFSIZE=LENGTH(NEWREC);     /* BUFFER SIZE                   */ 00154000
         LA    BUFSIZE,4088                                        0111 00155000
*       RECREG=RECADR+LENGTH(BEHDR);/* ADDRESS OF ENTRY TO BE COPIED */ 00156000
         AH    @14,@CH00092                                        0112 00157000
         LR    RECREG,@14                                          0112 00158000
*       RECSIZE=BLEN;               /* LENGTH OF THE LOGREC ENTRY    */ 00159000
         LH    RECSIZE,BLEN(,RECPTR)                               0113 00160000
*       MVCL(BUFREG,RECREG);        /* MOVE RECORD INTO NEW BUFFER   */ 00161000
         MVCL  BUFREG,RECREG                                       0114 00162000
*       LNGTH=BLEN;                 /* FILL IN RECORD LENGTH         */ 00163000
         L     @14,UNWRPBUF(,PARMPTR)                              0115 00164000
         MVC   LNGTH(2,@14),BLEN(RECPTR)                           0115 00165000
*       RFY                                                        0116 00166000
*        (BUFREG,                                                  0116 00167000
*         BUFSIZE,                                                 0116 00168000
*         RECREG,                                                  0116 00169000
*         RECSIZE) UNRSTD;                                         0116 00170000
*     END;                          /* END RECORD DOES NOT WRAP      */ 00171000
*   ELSE                            /* RECORD WRAPS THE BUFFER       */ 00172000
*                                                                  0118 00173000
*     /***************************************************************/ 00174000
*     /*                                                             */ 00175000
*     /* THE RECORD WRAPS AROUND THE LOGREC BUFFER. CHECK IF THE     */ 00176000
*     /* HEADER WRAPS OR IF THE DATA ITSELF WRAPS                    */ 00177000
*     /*                                                             */ 00178000
*     /***************************************************************/ 00179000
*                                                                  0118 00180000
*     DO;                                                          0118 00181000
         B     @RC00107                                            0118 00182000
@RF00107 DS    0H                                                  0119 00183000
*       IF RECPTR+LENGTH(BEHDR)>=ENDADR THEN/* CHECK IF HEADER WRAPS */ 00184000
         LA    @14,16                                              0119 00185000
         LR    @10,RECPTR                                          0119 00186000
         ALR   @10,@14                                             0119 00187000
         L     @06,ENDADR(,PARMPTR)                                0119 00188000
         CR    @10,@06                                             0119 00189000
         BL    @RF00119                                            0119 00190000
*         DO;                       /* IF SO GET TO TOP OF BUFFER    */ 00191000
*           WRAPDIST=ENDADR-RECPTR; /* DIFFERENCE BETWEEN PTR AND END   00192000
*                                      OF BUFFER                     */ 00193000
         L     @10,ENDADR(,PARMPTR)                                0121 00194000
         SLR   @10,RECPTR                                          0121 00195000
         LR    WRAPDIST,@10                                        0121 00196000
*           WRAPDIST=LENGTH(BEHDR)-WRAPDIST;/* LENGTH LEFT IN HEADER    00197000
*                                      AFTER THE WRAP                */ 00198000
*                                                                  0122 00199000
         SLR   @14,WRAPDIST                                        0122 00200000
         LR    WRAPDIST,@14                                        0122 00201000
*           /*********************************************************/ 00202000
*           /*                                                       */ 00203000
*           /* SET UP FOR A MOVE CHARACTER LONG, IN CASE THE ENTRY IS*/ 00204000
*           /* LONGER THAN 256 BYTES. THE MOVE CHAR LONG WILL ALSO   */ 00205000
*           /* PAD THE REMAINDER OF THE NEW BUFFER TO ZEROS          */ 00206000
*           /*                                                       */ 00207000
*           /*********************************************************/ 00208000
*                                                                  0123 00209000
*           RFY                                                    0123 00210000
*            (BUFREG,                                              0123 00211000
*             BUFSIZE,                                             0123 00212000
*             RECREG,                                              0123 00213000
*             RECSIZE) RSTD;                                       0123 00214000
*           BUFREG=ADDR(NEWREC);    /* WHERE TO COPY THE RECORD TO   */ 00215000
         L     BUFREG,UNWRPBUF(,PARMPTR)                           0124 00216000
         LA    BUFREG,NEWREC(,BUFREG)                              0124 00217000
*           BUFSIZE=LENGTH(NEWREC); /* BUFFER SIZE                   */ 00218000
         LA    BUFSIZE,4088                                        0125 00219000
*           RECREG=BEGINADR+WRAPDIST;/* PTR TO LRB HEADER            */ 00220000
         LR    RECREG,WRAPDIST                                     0126 00221000
         AL    RECREG,BEGINADR(,PARMPTR)                           0126 00222000
*           RECSIZE=BLEN;           /* LENGTH OF THE LOGREC ENTRY    */ 00223000
         LH    RECSIZE,BLEN(,RECPTR)                               0127 00224000
*           MVCL(BUFREG,RECREG);    /* MOVE RECORD INTO NEW BUFFER   */ 00225000
         MVCL  BUFREG,RECREG                                       0128 00226000
*           LNGTH=BLEN;             /* FILL IN RECORD LENGTH         */ 00227000
         L     @14,UNWRPBUF(,PARMPTR)                              0129 00228000
         MVC   LNGTH(2,@14),BLEN(RECPTR)                           0129 00229000
*           RFY                                                    0130 00230000
*            (BUFREG,                                              0130 00231000
*             BUFSIZE,                                             0130 00232000
*             RECREG,                                              0130 00233000
*             RECSIZE) UNRSTD;                                     0130 00234000
*         END;                      /* END HEADER WRAP RECORD        */ 00235000
*       ELSE                        /* RECORD ITSELF WRAPS RECORD    */ 00236000
*                                                                  0132 00237000
*         /***********************************************************/ 00238000
*         /*                                                         */ 00239000
*         /* DATA IS THE PART THAT WRAPS                             */ 00240000
*         /*                                                         */ 00241000
*         /***********************************************************/ 00242000
*                                                                  0132 00243000
*         DO;                                                      0132 00244000
         B     @RC00119                                            0132 00245000
@RF00119 DS    0H                                                  0133 00246000
*           WRAPDIST=ENDADR-(RECPTR+LENGTH(BEHDR));/* DISTANCE TO THE   00247000
*                                      END OF THE BUFFER, LENGTH   0133 00248000
*                                      BEFORE WRAP                   */ 00249000
*                                                                  0133 00250000
         LA    @14,16                                              0133 00251000
         ALR   @14,RECPTR                                          0133 00252000
         L     WRAPDIST,ENDADR(,PARMPTR)                           0133 00253000
         SLR   WRAPDIST,@14                                        0133 00254000
*           /*********************************************************/ 00255000
*           /*                                                       */ 00256000
*           /* SET UP FOR A MOVE CHARACTER LONG, IN CASE THE ENTRY IS*/ 00257000
*           /* LONGER THAN 256 BYTES. THE MOVE CHAR LONG WILL ALSO   */ 00258000
*           /* PAD THE REMAINDER OF THE NEW BUFFER TO ZEROS          */ 00259000
*           /*                                                       */ 00260000
*           /*********************************************************/ 00261000
*                                                                  0134 00262000
*           RFY                                                    0134 00263000
*            (BUFREG,                                              0134 00264000
*             BUFSIZE,                                             0134 00265000
*             RECREG,                                              0134 00266000
*             RECSIZE) RSTD;                                       0134 00267000
*           BUFREG=ADDR(NEWREC);    /* WHERE TO COPY THE RECORD TO   */ 00268000
         L     BUFREG,UNWRPBUF(,PARMPTR)                           0135 00269000
         LA    BUFREG,NEWREC(,BUFREG)                              0135 00270000
*           BUFSIZE=LENGTH(NEWREC); /* BUFFER SIZE                   */ 00271000
         LA    BUFSIZE,4088                                        0136 00272000
*           RECREG=RECPTR+LENGTH(BEHDR);/* PTR TO LRB HDR OF ENTRY   */ 00273000
         LR    RECREG,@14                                          0137 00274000
*           RECSIZE=WRAPDIST;       /* LENGTH OF THE LOGREC ENTRY  0138 00275000
*                                      BEFORE WRAP                   */ 00276000
         LR    RECSIZE,WRAPDIST                                    0138 00277000
*           MVCL(BUFREG,RECREG);    /* MOVE IN PARTIAL RECORD        */ 00278000
         MVCL  BUFREG,RECREG                                       0139 00279000
*           SECONDLN=BLEN-WRAPDIST; /* LENGTH LEFT TO MOVE           */ 00280000
         LH    SECONDLN,BLEN(,RECPTR)                              0140 00281000
         SLR   SECONDLN,WRAPDIST                                   0140 00282000
*           BUFREG=ADDR(NEWREC)+WRAPDIST;/* WHERE TO COPY REST OF REC   00283000
*                                      TO                            */ 00284000
         L     BUFREG,UNWRPBUF(,PARMPTR)                           0141 00285000
         LA    BUFREG,NEWREC(,BUFREG)                              0141 00286000
         ALR   BUFREG,WRAPDIST                                     0141 00287000
*           BUFSIZE=LENGTH(NEWREC)-WRAPDIST;/* REMAINDER OF BUFFER 0142 00288000
*                                      SIZE                          */ 00289000
         LA    BUFSIZE,4088                                        0142 00290000
         SLR   BUFSIZE,WRAPDIST                                    0142 00291000
*           RECREG=BEGINADR;        /* PTR TO BEGINNING OF LOGREC  0143 00292000
*                                      BUFFER WRAPPED PART OF ENTRY  */ 00293000
         L     RECREG,BEGINADR(,PARMPTR)                           0143 00294000
*           RECSIZE=SECONDLN;       /* LENGTH OF REMAINDER OF ENTRY     00295000
*                                      AFTER WRAP                    */ 00296000
         LR    RECSIZE,SECONDLN                                    0144 00297000
*           MVCL(BUFREG,RECREG);    /* MOVE IN REST OF RECORD        */ 00298000
         MVCL  BUFREG,RECREG                                       0145 00299000
*           LNGTH=BLEN;             /* FILL IN RECORD LENGTH         */ 00300000
         L     @14,UNWRPBUF(,PARMPTR)                              0146 00301000
         MVC   LNGTH(2,@14),BLEN(RECPTR)                           0146 00302000
*           RFY                                                    0147 00303000
*            (BUFREG,                                              0147 00304000
*             BUFSIZE,                                             0147 00305000
*             RECREG,                                              0147 00306000
*             RECSIZE) UNRSTD;                                     0147 00307000
*         END;                      /* END RECORD ITSELF WRAPS AROUND*/ 00308000
*     END;                          /* END RECORD WRAPS THE BUFFER   */ 00309000
@RC00119 DS    0H                                                  0150 00310000
*   RECADR=ADDR(NEWREC);            /* FILL IN POINTER TO RECORD     */ 00311000
@RC00107 L     @14,UNWRPBUF(,PARMPTR)                              0150 00312000
         LA    @14,NEWREC(,@14)                                    0150 00313000
         ST    @14,RECADR(,PARMPTR)                                0150 00314000
*   RECLNGTH=BLEN;                  /* FILL IN RECORD LENGTH IN    0151 00315000
*                                      COMMUNICATIONS TABLE          */ 00316000
         MVC   RECLNGTH(2,PARMPTR),BLEN(RECPTR)                    0151 00317000
*   JUSTREAD=ON;                    /* JUST READ A RECORD- NEW PAGE     00318000
*                                      FOR OUTPUT WANTED             */ 00319000
         OI    JUSTREAD(PARMPTR),B'10000000'                       0152 00320000
*   RECPTR=ADDR(NEWREC);            /* PTR TO RECORD TO PASS TO    0153 00321000
*                                      CALLER                        */ 00322000
         LR    RECPTR,@14                                          0153 00323000
*   CALL TIMECNV;                   /* CONVERT TIME STAMP TO LOCAL 0154 00324000
*                                      TIME                          */ 00325000
         BAL   @14,TIMECNV                                         0154 00326000
*TIMECNV:                                                          0155 00327000
*   PROC OPTIONS(SAVE(14));                                        0155 00328000
*                                                                  0155 00329000
         B     @PB00003                                            0155 00330000
TIMECNV  ST    @14,@SA00003                                        0155 00331000
*/********************************************************************/ 00332000
*/* FUNCTION-                                                      0156 00333000
*       ROUTINE TO CONVERT THE TIME STAMP FROM NANOSECONDS INTO LOCAL   00334000
*       TIME IN DECIMAL, FOR THE EREP EDITOR.                      0156 00335000
*                                                                  0156 00336000
*    CALLS-                                                        0156 00337000
*       MAKES NO OUTSIDE CALLS                                     0156 00338000
*                                                                  0156 00339000
*    CALLED BY -                                                   0156 00340000
*         READ,TO CONVERT THE TIME                                 0156 00341000
*                                                                  0156 00342000
*    RETURNS TO -                                                  0156 00343000
*         CALLER WITHOUT SETTING A RETURN CODE.                    0156 00344000
*                                                                    */ 00345000
*/********************************************************************/ 00346000
*                                                                  0156 00347000
*   RFY                                                            0156 00348000
*    (DAYS,                                                        0156 00349000
*     TIME) RSTD;                   /* RESTRICT EXPLICIT REGS        */ 00350000
*   IF LRBHTMC=OFF THEN             /* IF THE TIME MACRO WAS NOT USED   00351000
*                                      - TIME NEEDS TO BE CONVERTED  */ 00352000
*                                                                  0157 00353000
         TM    LRBHTMC(RECPTR),B'00001000'                         0157 00354000
         BNZ   @RF00157                                            0157 00355000
*     /***************************************************************/ 00356000
*     /*                                                             */ 00357000
*     /* NEW SYSTEM TO YYDDD AND HHMMSS                              */ 00358000
*     /*                                                             */ 00359000
*     /***************************************************************/ 00360000
*                                                                  0158 00361000
*     DO;                                                          0158 00362000
*       DAYS=LRBHDATE;              /* SAVE DATE IN WORKAREA         */ 00363000
         L     DAYS,LRBHDATE(,RECPTR)                              0159 00364000
*       TIME=LRBHTIME;              /* SAVE TIME IN WORK AREA        */ 00365000
         L     TIME,LRBHTIME(,RECPTR)                              0160 00366000
*       LRBHNS=OFF;                 /* TURN OFF NS SWITCH            */ 00367000
*       LRBHTMC=ON;                 /* INDICATE TIME CONVERTED       */ 00368000
         OI    LRBHTMC(RECPTR),B'00001000'                         0162 00369000
         NI    LRBHNS(RECPTR),B'10111111'                          0162 00370000
*       IF((DAYS=ZERO)&(TIME=ZERO)) THEN                           0163 00371000
         SLR   @14,@14                                             0163 00372000
         CR    DAYS,@14                                            0163 00373000
         BNE   @RF00163                                            0163 00374000
         CR    TIME,@14                                            0163 00375000
         BE    @RT00163                                            0163 00376000
*         ;                         /* NO TIME TO BE CONVERTED       */ 00377000
*       ELSE                        /* NS TIME NEEDS TO BE CONVERTED */ 00378000
*         DO;                                                      0165 00379000
@RF00163 DS    0H                                                  0166 00380000
*           SRDL(DAYS,SHIFT12);     /* CONVERT FROM NANO SECS TO   0166 00381000
*                                      MICRO SECS                    */ 00382000
*                                                                  0166 00383000
         SRDL  DAYS,12                                             0166 00384000
*           /*********************************************************/ 00385000
*           /*                                                       */ 00386000
*           /* DIVIDE THE MICRO SECONDS TO GET THE NUMBER OF MINUTES */ 00387000
*           /* AND THE NUMBER OF MICRO SECONDS THAT REMAIN           */ 00388000
*           /*                                                       */ 00389000
*           /*********************************************************/ 00390000
*                                                                  0167 00391000
*           GEN REFS(DAYS,TIME,SIXTYMIL) SETS(DAYS,TIME)           0167 00392000
*               (D DAYS,SIXTYMIL);                                 0167 00393000
         D DAYS,SIXTYMIL                                                00394000
*           MINUTES=TIME;           /* SAVE NUMBER OF MINUTES        */ 00395000
         LR    MINUTES,TIME                                        0168 00396000
*           TIME=REMNDER;           /* MOVE THE REMAINING MICRO SECS    00397000
*                                      INTO TIME REG                 */ 00398000
         LR    TIME,REMNDER                                        0169 00399000
*           REMNDER=ZERO;           /* INITIALIZE FOR A DIVIDE       */ 00400000
*                                                                  0170 00401000
         SLR   REMNDER,REMNDER                                     0170 00402000
*           /*********************************************************/ 00403000
*           /*                                                       */ 00404000
*           /* DIVIDE THE MICRO SECONDS TO GET THE NUMBER OF SECONDS */ 00405000
*           /* AND THE NUMBER OF MICRO SECONDS THAT REMAIN           */ 00406000
*           /*                                                       */ 00407000
*           /*********************************************************/ 00408000
*                                                                  0171 00409000
*           GEN REFS(DAYS,TIME,MILLION) SETS(DAYS,TIME)(D DAYS,MILLION) 00410000
*               ;                                                  0171 00411000
         D DAYS,MILLION                                                 00412000
*           CVD(TIME,WORKDWRD);     /* CONVERT SECONDS TO DECIMAL    */ 00413000
         CVD   TIME,WORKDWRD                                       0172 00414000
*           TIME=REMNDER;           /* MOVE THE REMAINING MICRO    0173 00415000
*                                      SECONDS INTO TIME             */ 00416000
         LR    TIME,REMNDER                                        0173 00417000
*           CVDVALUE=VALUE;         /* MOVE CONVERTED VALUE INTO A 0174 00418000
*                                      REG                           */ 00419000
         SLR   CVDVALUE,CVDVALUE                                   0174 00420000
         ICM   CVDVALUE,3,VALUE                                    0174 00421000
*           SRL(CVDVALUE,SHIFT4);   /* ELIMINATE THE SIGN BITS       */ 00422000
         SRL   CVDVALUE,4                                          0175 00423000
*           SEC=CVDVALUE;           /* SAVE THE SECONDS              */ 00424000
         STC   CVDVALUE,SEC                                        0176 00425000
*           REMNDER=ZERO;           /* INITIALIZE FOR DIVIDE         */ 00426000
*                                                                  0177 00427000
         SLR   REMNDER,REMNDER                                     0177 00428000
*           /*********************************************************/ 00429000
*           /*                                                       */ 00430000
*           /* DIVIDE THE MICRO SECONDS TO GET THE TENTHS OF SECONDS */ 00431000
*           /*                                                       */ 00432000
*           /*********************************************************/ 00433000
*                                                                  0178 00434000
*           GEN REFS(DAYS,TIME,TTHOUS) SETS(DAYS,TIME)(D DAYS,TTHOUS);  00435000
         D DAYS,TTHOUS                                                  00436000
*           CVD(TIME,WORKDWRD);     /* CONVERT TENTHS OF SECS TO   0179 00437000
*                                      DECIMAL                       */ 00438000
         CVD   TIME,WORKDWRD                                       0179 00439000
*           CVDVALUE=VALUE;         /* MOVE CONVERTED VALUE INTO A 0180 00440000
*                                      REG                           */ 00441000
         SLR   CVDVALUE,CVDVALUE                                   0180 00442000
         ICM   CVDVALUE,3,VALUE                                    0180 00443000
*           SRL(CVDVALUE,SHIFT4);   /* ELIMINATE THE SIGN BITS       */ 00444000
         SRL   CVDVALUE,4                                          0181 00445000
*           TNTH=CVDVALUE;          /* SAVE TENTHS OF SECONDS        */ 00446000
         STC   CVDVALUE,TNTH                                       0182 00447000
*           REMNDER=ZERO;           /* DONE WITH SECONDS, INITIALIZE    00448000
*                                      FOR FOR A DIVIDE              */ 00449000
         SLR   REMNDER,REMNDER                                     0183 00450000
*           TIME=MINUTES;           /* RESTORE TIME WITH THE NUM OF     00451000
*                                      MINS                          */ 00452000
*                                                                  0184 00453000
         LR    TIME,MINUTES                                        0184 00454000
*           /*********************************************************/ 00455000
*           /*                                                       */ 00456000
*           /* DIVIDE THE MINUTES TO GET THE HOURS AND THE NUMBER OF */ 00457000
*           /* MINUTES REMAINING                                     */ 00458000
*           /*                                                       */ 00459000
*           /*********************************************************/ 00460000
*                                                                  0185 00461000
*           GEN REFS(DAYS,TIME,SIXTY) SETS(DAYS,TIME)(D DAYS,SIXTY);    00462000
         D DAYS,SIXTY                                                   00463000
*           CVD(DAYS,WORKDWRD);     /* CONVERT MINS TO DECIMAL       */ 00464000
         CVD   DAYS,WORKDWRD                                       0186 00465000
*           CVDVALUE=VALUE;         /* MOVE CONVERTED VALUE INTO A 0187 00466000
*                                      REG                           */ 00467000
         SLR   CVDVALUE,CVDVALUE                                   0187 00468000
         ICM   CVDVALUE,3,VALUE                                    0187 00469000
*           SRL(CVDVALUE,SHIFT4);   /* ELIMINATE THE SIGN BITS       */ 00470000
         SRL   CVDVALUE,4                                          0188 00471000
*           MINS=CVDVALUE;          /* SAVE THE MINUTES              */ 00472000
         STC   CVDVALUE,MINS                                       0189 00473000
*           REMNDER=ZERO;           /* INITIALIZE FOR THE DIVIDE     */ 00474000
*                                                                  0190 00475000
         SLR   REMNDER,REMNDER                                     0190 00476000
*           /*********************************************************/ 00477000
*           /*                                                       */ 00478000
*           /* DIVIDE THE HOURS TO GET THE NUMBER OF DAYS AND THE    */ 00479000
*           /* NUMBER OF HOURS REMAINING                             */ 00480000
*           /*                                                       */ 00481000
*           /*********************************************************/ 00482000
*                                                                  0191 00483000
*           GEN REFS(DAYS,TIME,TFOUR) SETS(DAYS,TIME)(D DAYS,TFOUR);    00484000
         D DAYS,TFOUR                                                   00485000
*           CVD(DAYS,WORKDWRD);     /* CONVERT HOURS TO DECIMAL      */ 00486000
         CVD   DAYS,WORKDWRD                                       0192 00487000
*           CVDVALUE=VALUE;         /* MOVE CONVERTED VALUE INTO A 0193 00488000
*                                      REG                           */ 00489000
         SLR   CVDVALUE,CVDVALUE                                   0193 00490000
         ICM   CVDVALUE,3,VALUE                                    0193 00491000
*           SRL(CVDVALUE,SHIFT4);   /* ELIMINATE THE SIGN BITS       */ 00492000
         SRL   CVDVALUE,4                                          0194 00493000
*           HR=CVDVALUE;            /* SAVE HOURS                    */ 00494000
         STC   CVDVALUE,HR                                         0195 00495000
*                                                                  0196 00496000
*           /*********************************************************/ 00497000
*           /*                                                       */ 00498000
*           /* DETERMINE THE DATE - YEAR AND DAY                     */ 00499000
*           /*                                                       */ 00500000
*           /*********************************************************/ 00501000
*                                                                  0196 00502000
*           YEAR=ZERO;              /* SET YEAR TO 0                 */ 00503000
         SLR   YEAR,YEAR                                           0196 00504000
*           TIME=TIME+1;            /* INCREMENT DAY COUNTER BY 1  0197 00505000
*                                      SINCE 1900 IS NOT A LEAP YEAR,   00506000
*                                      AND THE LOOP ASSUMES IT IS    */ 00507000
         AH    TIME,@CH00040                                       0197 00508000
*           DO WHILE(TIME-LEAPYEAR>=ZERO);/* LOOP TO COUNT NUM YEARS */ 00509000
         B     @DE00198                                            0198 00510000
@DL00198 DS    0H                                                  0199 00511000
*             TIME=TIME-LEAPYEAR;   /* DECREMENT DAYS BY NUMBER OF 0199 00512000
*                                      DAYS IN A LEAP YEAR           */ 00513000
         SH    TIME,@CH00606                                       0199 00514000
*             YEAR=YEAR+1;          /* ADD 1 TO YEAR NUM             */ 00515000
         LA    @14,1                                               0200 00516000
         ALR   YEAR,@14                                            0200 00517000
*             DO LOOP=1 TO 3 WHILE(TIME-NMALYEAR>=ZERO);/* LOOP TO 0201 00518000
*                                      COUNT NUMBER OF NORMAL YEARS  */ 00519000
         LR    LOOP,@14                                            0201 00520000
@DL00201 LA    @14,365                                             0201 00521000
         LR    @10,TIME                                            0201 00522000
         SLR   @10,@14                                             0201 00523000
         LTR   @10,@10                                             0201 00524000
         BM    @DC00201                                            0201 00525000
*               TIME=TIME-NMALYEAR; /* DECREMENT BY NUMBER OF DAYS IN   00526000
*                                      A NORMAL YEAR                 */ 00527000
         SLR   TIME,@14                                            0202 00528000
*               YEAR=YEAR+1;        /* ADD 1 TO YEAR NUM             */ 00529000
         AH    YEAR,@CH00040                                       0203 00530000
*             END;                  /* END LOOP TO COUNT NUM NORMAL     00531000
*                                      YEARS                         */ 00532000
         AH    LOOP,@CH00040                                       0204 00533000
         CH    LOOP,@CH00065                                       0204 00534000
         BNH   @DL00201                                            0204 00535000
@DC00201 DS    0H                                                  0205 00536000
*           END;                    /* END LOOP TO COUNT THE NUMBER     00537000
*                                      OF YEARS                      */ 00538000
@DE00198 LR    @14,TIME                                            0205 00539000
         SH    @14,@CH00606                                        0205 00540000
         LTR   @14,@14                                             0205 00541000
         BNM   @DL00198                                            0205 00542000
*           TIME=TIME+1;            /* ADD AN EXTRA DAY TO ACCOUNT 0206 00543000
*                                      FOR THE SECONDS               */ 00544000
         AH    TIME,@CH00040                                       0206 00545000
*           CVD(YEAR,WORKDWRD);     /* CONVERT NUM YEARS TO DECIMAL  */ 00546000
         CVD   YEAR,WORKDWRD                                       0207 00547000
*           CVDVALUE=VALUE;         /* MOVE CONVERTED VALUE INTO A 0208 00548000
*                                      REG                           */ 00549000
         SLR   CVDVALUE,CVDVALUE                                   0208 00550000
         ICM   CVDVALUE,3,VALUE                                    0208 00551000
*           SRL(CVDVALUE,SHIFT4);   /* ELIMINATE THE SIGN BITS       */ 00552000
         SRL   CVDVALUE,4                                          0209 00553000
*           YR=CVDVALUE;            /* SAVE NUMBER OF YEARS          */ 00554000
         STC   CVDVALUE,YR                                         0210 00555000
*           CVD(TIME,WORKDWRD);     /* CONVERT DAYS TO DECIMAL       */ 00556000
         CVD   TIME,WORKDWRD                                       0211 00557000
*           DY=(VALUE|'000F'X);     /* SAVE DAYS WITH SIGN           */ 00558000
         MVC   DY(2),VALUE                                         0212 00559000
         OC    DY(2),@CB00678                                      0212 00560000
*           DATEFLG=ZEROBYTE;       /* ZERO OUT HIGHORDER BYTE       */ 00561000
         MVC   DATEFLG(1),ZEROBYTE                                 0213 00562000
*           LRBHTIME=TIMESAVE;      /* FILL IN NEW TIME              */ 00563000
         MVC   LRBHTIME(4,RECPTR),TIMESAVE                         0214 00564000
*           LRBHDATE=DAYSAVE;       /* FILL IN NEW DATE              */ 00565000
         MVC   LRBHDATE(4,RECPTR),DAYSAVE                          0215 00566000
*         END;                      /* END NS TIME CONVERSION NEEDED */ 00567000
*     END;                          /* END TIME MACRO NOT USED-TIME     00568000
*                                      CONVERSION NEEDED             */ 00569000
*   ELSE                                                           0218 00570000
*     ;                             /* TIME ALREADY CONVERTED        */ 00571000
@RF00157 DS    0H                                                  0219 00572000
*   RFY                                                            0219 00573000
*    (DAYS,                                                        0219 00574000
*     TIME) UNRSTD;                                                0219 00575000
*   END TIMECNV;                                                   0220 00576000
@EL00003 DS    0H                                                  0220 00577000
@EF00003 DS    0H                                                  0220 00578000
@ER00003 L     @14,@SA00003                                        0220 00579000
         BR    @14                                                 0220 00580000
*   END READ;                                                      0221 00581000
@EL00002 DS    0H                                                  0221 00582000
@EF00002 DS    0H                                                  0221 00583000
@ER00002 L     @14,@SA00002                                        0221 00584000
         BR    @14                                                 0221 00585000
*PRINTIT:                                                          0222 00586000
*   PROC OPTIONS(SAVE(14));                                        0222 00587000
*                                                                  0222 00588000
PRINTIT  ST    @14,@SA00004                                        0222 00589000
*/********************************************************************/ 00590000
*/* FUNCTION-                                                      0223 00591000
*      ROUTINE TO INTERPRET THE CARRIAGE CONTROL AND PRINT THE LINE OF  00592000
*     OUTPUT PASSED BY THE EDITOR. IF THE LINE IS THE FIRST LINE OF A   00593000
*     NEW RECORD, THE RECORD BEGINS ON A NEW PAGE. IF THE OUTPUT WAS TO 00594000
*     GO TO THE MESSAGE ROUTINE, THE MESSAGE WILL APPEAR DOUBLE SPACED. 00595000
*                                                                  0223 00596000
*    CALLS-                                                        0223 00597000
*         PRINT                                                    0223 00598000
*                                                                  0223 00599000
*    CALLED BY -                                                   0223 00600000
*         MAINLINE TO PRINT THE LINE OF OUTPUT PASSED BY THE EDITOR     00601000
*                                                                  0223 00602000
*    RETURNS TO -                                                  0223 00603000
*         CALLER WITHOUT SETTING A RETURN CODE.                    0223 00604000
*                                                                    */ 00605000
*/********************************************************************/ 00606000
*                                                                  0223 00607000
*   ABDPLPTR=PDMPLIST;              /* RESTORE PRINT DUMP PARM LIST     00608000
*                                      PTR                           */ 00609000
         L     ABDPLPTR,PDMPLIST(,PARMPTR)                         0223 00610000
*   IF JUSTREAD=ON THEN             /* IF A NEW RECORD WAS READ,   0224 00611000
*                                      EJECT TO A NEW PAGE           */ 00612000
         TM    JUSTREAD(PARMPTR),B'10000000'                       0224 00613000
         BNO   @RF00224                                            0224 00614000
*     DO;                                                          0225 00615000
*       JUSTREAD=OFF;               /* DO NOT WANT A NEW PAGE FOR  0226 00616000
*                                      EACH LINE                     */ 00617000
*                                                                  0226 00618000
         NI    JUSTREAD(PARMPTR),B'01111111'                       0226 00619000
*       /*************************************************************/ 00620000
*       /*                                                           */ 00621000
*       /* SINCE AMDPRDMP IGNORES ALL BLANKS AT THE BEGINNING OF A   */ 00622000
*       /* PAGE AND STARTS PRINTING WITH THE FIRST LINE OF DATA,     */ 00623000
*       /* PRINT BLANKS FOR THE MAX NUMBER OF LINES ON A PAGE. THIS  */ 00624000
*       /* WILL FORCE AMDPRDMP TO START A NEW RECORD ON A NEW PAGE.  */ 00625000
*       /*                                                   @ZM44947*/ 00626000
*       /*                                                           */ 00627000
*       /*************************************************************/ 00628000
*                                                                  0227 00629000
*       DO LOOP=1 TO LINECT;        /* LOOP TO PRINT BLANK LINES   0227 00630000
*                                                            @ZM44947*/ 00631000
         LA    LOOP,1                                              0227 00632000
         B     @DE00227                                            0227 00633000
@DL00227 DS    0H                                                  0228 00634000
*         CALL PRINT;               /* PRINT A BLANK                 */ 00635000
         L     @15,ADPLPRNT(,ABDPLPTR)                             0228 00636000
         BALR  @14,@15                                             0228 00637000
*       END;                        /* END LOOP TO PRINT BLANK LINES */ 00638000
         AH    LOOP,@CH00040                                       0229 00639000
@DE00227 CH    LOOP,LINECT(,PARMPTR)                               0229 00640000
         BNH   @DL00227                                            0229 00641000
*     END;                          /* END EJECT TO A NEW PAGE       */ 00642000
*   ELSE                                                           0231 00643000
*     ;                             /* NEW RECORD NOT READ   @ZM44947*/ 00644000
@RF00224 DS    0H                                                  0232 00645000
*   IF DSET=MSG THEN                /* ERROR MESSAGE AS OPPOSED TO A    00646000
*                                      FORMATTED LINE OF OUTPUT      */ 00647000
         L     @14,PRINTADR(,PARMPTR)                              0232 00648000
         CLC   DSET(1,@14),MSG                                     0232 00649000
         BNE   @RF00232                                            0232 00650000
*     CC=DOUBLE;                    /* SET DOUBLE SPACE FOR MESSAGES */ 00651000
         MVC   CC(1,@14),DOUBLE                                    0233 00652000
*   ELSE                                                           0234 00653000
*     ;                             /* NOT A MESSAGE                 */ 00654000
*                                                                  0234 00655000
@RF00232 DS    0H                                                  0235 00656000
*   /*****************************************************************/ 00657000
*   /*                                                               */ 00658000
*   /* INTERPRET THE CARRIAGE CONTROL FOR THE OUTPUT LINE. IF THE    */ 00659000
*   /* CARRIAGE CONTROL INDICATED SPACING BEFORE THE PRINT, DETERMINE*/ 00660000
*   /* HOW MANY LINES ARE TO BE SPACED                               */ 00661000
*   /*                                                               */ 00662000
*   /*****************************************************************/ 00663000
*                                                                  0235 00664000
*   IF CC=TRIPLE|CC=MACHTRIP THEN   /* TRIPLE SPACE PRINTING         */ 00665000
         L     @14,PRINTADR(,PARMPTR)                              0235 00666000
         CLC   CC(1,@14),TRIPLE                                    0235 00667000
         BE    @RT00235                                            0235 00668000
         CLC   CC(1,@14),MACHTRIP                                  0235 00669000
         BNE   @RF00235                                            0235 00670000
@RT00235 DS    0H                                                  0236 00671000
*     LOOPEND=2;                    /* 2 BLANK LINES                 */ 00672000
         LA    LOOPEND,2                                           0236 00673000
*   ELSE                            /* NOT TRIPLE SPACE              */ 00674000
*     IF CC=DOUBLE|CC=MACHDBLE THEN /* DOUBLE SPACE PRINTING         */ 00675000
         B     @RC00235                                            0237 00676000
@RF00235 L     @14,PRINTADR(,PARMPTR)                              0237 00677000
         CLC   CC(1,@14),DOUBLE                                    0237 00678000
         BE    @RT00237                                            0237 00679000
         CLC   CC(1,@14),MACHDBLE                                  0237 00680000
         BNE   @RF00237                                            0237 00681000
@RT00237 DS    0H                                                  0238 00682000
*       LOOPEND=1;                  /* 1 BLANK LINES                 */ 00683000
         LA    LOOPEND,1                                           0238 00684000
*     ELSE                          /* NOT DOUBLE SPACED             */ 00685000
*       LOOPEND=ZERO;               /* SINGLE SPACE                  */ 00686000
         B     @RC00237                                            0239 00687000
@RF00237 SLR   LOOPEND,LOOPEND                                     0239 00688000
*   DO LOOP=1 TO LOOPEND;           /* LOOP TO PRINT BLANK LINES     */ 00689000
@RC00237 DS    0H                                                  0240 00690000
@RC00235 LA    LOOP,1                                              0240 00691000
         B     @DE00240                                            0240 00692000
@DL00240 DS    0H                                                  0241 00693000
*     CALL PRINT;                   /* BLANK LINE                    */ 00694000
         L     @15,ADPLPRNT(,ABDPLPTR)                             0241 00695000
         BALR  @14,@15                                             0241 00696000
*   END;                            /* END BLANK LINE LOOP           */ 00697000
*                                                                  0242 00698000
         AH    LOOP,@CH00040                                       0242 00699000
@DE00240 CR    LOOP,LOOPEND                                        0242 00700000
         BNH   @DL00240                                            0242 00701000
*   /*****************************************************************/ 00702000
*   /*                                                               */ 00703000
*   /* PRINT THE LINE OF OUTPUT                                      */ 00704000
*   /*                                                               */ 00705000
*   /*****************************************************************/ 00706000
*                                                                  0243 00707000
*   BUFFER(1:120)=TEXT(1:120);      /* MOVE 120 CHARACTERS INTO PRINT   00708000
*                                      DUMPS BUFFER                  */ 00709000
         L     @14,ADPLBUF(,ABDPLPTR)                              0243 00710000
         L     @10,PRINTADR(,PARMPTR)                              0243 00711000
         MVC   BUFFER(120,@14),TEXT(@10)                           0243 00712000
*   CALL PRINT;                     /* PRINT THE OUTPUT LINE         */ 00713000
*                                                                  0244 00714000
         L     @15,ADPLPRNT(,ABDPLPTR)                             0244 00715000
         BALR  @14,@15                                             0244 00716000
*   /*****************************************************************/ 00717000
*   /*                                                               */ 00718000
*   /* CHECK IF THE CARRIAGE CONTROL INDICATED THE SPACING TO BE     */ 00719000
*   /* AFTER THE LINE IS PRINTED. IF SO, DETERMINE HOW MANY LINES ARE*/ 00720000
*   /* TO BE BLANK                                                   */ 00721000
*   /*                                                               */ 00722000
*   /*****************************************************************/ 00723000
*                                                                  0245 00724000
*   IF CC=PRINTRIP THEN             /* PRINT THEN SPACE TWO LINES    */ 00725000
         L     @14,PRINTADR(,PARMPTR)                              0245 00726000
         CLC   CC(1,@14),PRINTRIP                                  0245 00727000
         BNE   @RF00245                                            0245 00728000
*     LOOPEND=2;                    /* TWO BLANK LINES               */ 00729000
         LA    LOOPEND,2                                           0246 00730000
*   ELSE                            /* NOT TRIPLE SPACE              */ 00731000
*     IF CC=PRNTDBLE THEN           /* PRINT THEN SPACE ONE LINES    */ 00732000
         B     @RC00245                                            0247 00733000
@RF00245 L     @14,PRINTADR(,PARMPTR)                              0247 00734000
         CLC   CC(1,@14),PRNTDBLE                                  0247 00735000
         BNE   @RF00247                                            0247 00736000
*       LOOPEND=1;                  /* 1 BLANK LINES                 */ 00737000
         LA    LOOPEND,1                                           0248 00738000
*     ELSE                          /* NOT DOUBLE SPACE              */ 00739000
*       LOOPEND=0;                  /* NO SPACEING WANTED AFTER    0249 00740000
*                                      PRINTING                      */ 00741000
         B     @RC00247                                            0249 00742000
@RF00247 SLR   LOOPEND,LOOPEND                                     0249 00743000
*   DO LOOP=1 TO LOOPEND;           /* LOOP TO PRINT BLANK LINES     */ 00744000
@RC00247 DS    0H                                                  0250 00745000
@RC00245 LA    LOOP,1                                              0250 00746000
         B     @DE00250                                            0250 00747000
@DL00250 DS    0H                                                  0251 00748000
*     CALL PRINT;                   /* BLANK LINE                    */ 00749000
         L     @15,ADPLPRNT(,ABDPLPTR)                             0251 00750000
         BALR  @14,@15                                             0251 00751000
*   END;                            /* END BLANK LINE LOOP           */ 00752000
         AH    LOOP,@CH00040                                       0252 00753000
@DE00250 CR    LOOP,LOOPEND                                        0252 00754000
         BNH   @DL00250                                            0252 00755000
*   TEXT(1:120)=BUFFER(1:120);      /* BLANK OUT EREP OUTPUT BUFFER  */ 00756000
         L     @14,PRINTADR(,PARMPTR)                              0253 00757000
         L     @10,ADPLBUF(,ABDPLPTR)                              0253 00758000
         MVC   TEXT(120,@14),BUFFER(@10)                           0253 00759000
*   END PRINTIT;                                                   0254 00760000
@EL00004 DS    0H                                                  0254 00761000
@EF00004 DS    0H                                                  0254 00762000
@ER00004 L     @14,@SA00004                                        0254 00763000
         BR    @14                                                 0254 00764000
*   END IFCFMTIO                                                   0255 00765000
*                                                                  0255 00766000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 00767000
*/*%INCLUDE SYSLIB  (IHAABDPL)                                       */ 00768000
*/*%INCLUDE SYSLIB  (IHALRB  )                                       */ 00769000
*/*%INCLUDE SYSLIB  (COMTABLE)                                       */ 00770000
*                                                                  0255 00771000
*       ;                                                          0255 00772000
@DATA    DS    0H                                                       00773000
@CH00040 DC    H'1'                                                     00774000
@CH00072 DC    H'2'                                                     00775000
@CH00065 DC    H'3'                                                     00776000
@CH00045 DC    H'6'                                                     00777000
@CH00092 DC    H'16'                                                    00778000
@CH00606 DC    H'366'                                                   00779000
@DATD    DSECT                                                          00780000
         DS    0F                                                       00781000
@SA00001 DS    18F                                                      00782000
@SA00002 DS    1F                                                       00783000
@SA00004 DS    1F                                                       00784000
@SA00003 DS    1F                                                       00785000
IFCFMTIO CSECT                                                          00786000
         DS    0F                                                       00787000
@DATD    DSECT                                                          00788000
         DS    0D                                                       00789000
LRBPTR   DS    A                                                        00790000
DAYSAVE  DS    CL4                                                      00791000
         ORG   DAYSAVE                                                  00792000
DATEFLG  DS    CL1                                                      00793000
         ORG   DATEFLG                                                  00794000
GMTSW    DS    BL1                                                      00795000
@NM00036 EQU   DATEFLG+0                                                00796000
         ORG   DAYSAVE+1                                                00797000
YR       DS    CL1                                                      00798000
DY       DS    CL2                                                      00799000
         ORG   DAYSAVE+4                                                00800000
TIMESAVE DS    BL4                                                      00801000
         ORG   TIMESAVE                                                 00802000
HR       DS    CL1                                                      00803000
MINS     DS    CL1                                                      00804000
SEC      DS    CL1                                                      00805000
TNTH     DS    CL1                                                      00806000
         ORG   TIMESAVE+4                                               00807000
         DS    CL4                                                      00808000
WORKDWRD DS    CL8                                                      00809000
         ORG   WORKDWRD                                                 00810000
@NM00049 DS    CL6                                                      00811000
VALUE    DS    CL2                                                      00812000
         ORG   WORKDWRD+8                                               00813000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                00814000
@ENDDATD EQU   *                                                        00815000
IFCFMTIO CSECT                                                          00816000
         DS    0F                                                       00817000
@SIZDATD DC    AL1(0)                                                   00818000
         DC    AL3(@ENDDATD-@DATD)                                      00819000
         DS    0D                                                       00820000
MILLION  DC    F'1000000'                                               00821000
SIXTY    DC    F'60'                                                    00822000
SIXTYMIL DC    F'60000000'                                              00823000
TFOUR    DC    F'24'                                                    00824000
TTHOUS   DC    F'10000'                                                 00825000
MACHDBLE DC    XL1'13'                                                  00826000
MACHTRIP DC    XL1'1B'                                                  00827000
PRINTRIP DC    XL1'19'                                                  00828000
PRNTDBLE DC    XL1'11'                                                  00829000
ZEROBYTE DC    XL1'00'                                                  00830000
@CB00678 DC    X'000F'                                                  00831000
DOUBLE   DC    CL1'1'                                                   00832000
MSG      DC    CL1'1'                                                   00833000
TRIPLE   DC    CL1'0'                                                   00834000
INVACT   DC    CL58'*** AN INVALID I/O REQUEST WAS MADE BY THE EREP EDIC00835000
               TOR ***'                                                 00836000
IFCIOPTH DC    CL200'IFCFMTIO PATCH AREA- IT IS 200 BYTES LONG'         00837000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00838000
@01      EQU   01                                                       00839000
@02      EQU   02                                                       00840000
@03      EQU   03                                                       00841000
@04      EQU   04                                                       00842000
@05      EQU   05                                                       00843000
@06      EQU   06                                                       00844000
@07      EQU   07                                                       00845000
@08      EQU   08                                                       00846000
@09      EQU   09                                                       00847000
@10      EQU   10                                                       00848000
@11      EQU   11                                                       00849000
@12      EQU   12                                                       00850000
@13      EQU   13                                                       00851000
@14      EQU   14                                                       00852000
@15      EQU   15                                                       00853000
YEAR     EQU   @08                                                      00854000
WRAPDIST EQU   @06                                                      00855000
SECONDLN EQU   @10                                                      00856000
MINUTES  EQU   @06                                                      00857000
LOOPEND  EQU   @04                                                      00858000
LOOP     EQU   @06                                                      00859000
ABDPLPTR EQU   @01                                                      00860000
RECPTR   EQU   @07                                                      00861000
PARMPTR  EQU   @02                                                      00862000
INPUTPTR EQU   @01                                                      00863000
DAYS     EQU   @04                                                      00864000
REMNDER  EQU   @04                                                      00865000
CVDVALUE EQU   @04                                                      00866000
BUFREG   EQU   @04                                                      00867000
BUFSIZE  EQU   @05                                                      00868000
TIME     EQU   @05                                                      00869000
RECREG   EQU   @08                                                      00870000
RECSIZE  EQU   @09                                                      00871000
RCREG    EQU   @15                                                      00872000
ABDPL    EQU   0                                                        00873000
ADPLFLAG EQU   ABDPL+7                                                  00874000
ADPLBUF  EQU   ABDPL+8                                                  00875000
ADPLPRNT EQU   ABDPL+12                                                 00876000
LRB      EQU   0                                                        00877000
LRBHREL  EQU   LRB+1                                                    00878000
LRBHSYS  EQU   LRBHREL                                                  00879000
LRBHSW0  EQU   LRB+2                                                    00880000
LRBHNS   EQU   LRBHSW0                                                  00881000
LRBHTMC  EQU   LRBHSW0                                                  00882000
LRBHSW1  EQU   LRB+3                                                    00883000
LRBHSW2  EQU   LRB+4                                                    00884000
LRBMACT  EQU   LRBHSW2                                                  00885000
LRBHSW3  EQU   LRB+5                                                    00886000
LRBHDATE EQU   LRB+8                                                    00887000
LRBHTIME EQU   LRB+12                                                   00888000
LRBHCPID EQU   LRB+16                                                   00889000
LRBBASE  EQU   LRB+24                                                   00890000
LRBCVAR  EQU   0                                                        00891000
LRBCMP   EQU   LRBCVAR+8                                                00892000
PRINT    EQU   0                                                        00893000
ACTION   EQU   0                                                        00894000
ACTPTR   EQU   0                                                        00895000
BEHDR    EQU   0                                                        00896000
BLEN     EQU   BEHDR                                                    00897000
BFLGS    EQU   BEHDR+2                                                  00898000
WRAP     EQU   BFLGS                                                    00899000
BUFFER   EQU   0                                                        00900000
EREPBUF  EQU   0                                                        00901000
DSET     EQU   EREPBUF                                                  00902000
CC       EQU   EREPBUF+1                                                00903000
TEXT     EQU   EREPBUF+2                                                00904000
NEWBUF   EQU   0                                                        00905000
LNGTH    EQU   NEWBUF+6                                                 00906000
NEWREC   EQU   NEWBUF+8                                                 00907000
PARM     EQU   0                                                        00908000
RECTYPE  EQU   PARM                                                     00909000
SWITCHES EQU   PARM+2                                                   00910000
DEBUG    EQU   PARM+4                                                   00911000
DEBUGA   EQU   PARM+8                                                   00912000
MISC     EQU   PARM+12                                                  00913000
PRINTES  EQU   MISC                                                     00914000
OPENCLSE EQU   PARM+13                                                  00915000
OPENIO   EQU   OPENCLSE                                                 00916000
CLOSEIO  EQU   OPENCLSE+2                                               00917000
DATENOW  EQU   PARM+17                                                  00918000
STDT     EQU   PARM+23                                                  00919000
STDATE   EQU   STDT                                                     00920000
PSTD     EQU   STDATE+1                                                 00921000
ENDDT    EQU   PARM+31                                                  00922000
ENDDATE  EQU   ENDDT                                                    00923000
PEND     EQU   ENDDATE+1                                                00924000
STTIME1  EQU   PARM+39                                                  00925000
ENDTIME1 EQU   PARM+43                                                  00926000
STTIME2  EQU   PARM+47                                                  00927000
ENDTIME2 EQU   PARM+51                                                  00928000
STRTDATE EQU   PARM+55                                                  00929000
@NM00043 EQU   PARM+72                                                  00930000
@NM00044 EQU   PARM+75                                                  00931000
ERRID    EQU   PARM+92                                                  00932000
IDTIMEA  EQU   ERRID+6                                                  00933000
IDTIME   EQU   IDTIMEA                                                  00934000
CCHHRLNG EQU   PARM+112                                                 00935000
RECCCHHR EQU   CCHHRLNG                                                 00936000
RECLNGTH EQU   CCHHRLNG+6                                               00937000
LINECT   EQU   PARM+120                                                 00938000
PRINTADR EQU   PARM+148                                                 00939000
DUMPTABL EQU   PARM+228                                                 00940000
DUMPINFO EQU   DUMPTABL+4                                               00941000
PDMPLIST EQU   PARM+328                                                 00942000
UNWRPBUF EQU   PARM+332                                                 00943000
ENDADR   EQU   PARM+336                                                 00944000
BEGINADR EQU   PARM+340                                                 00945000
WRITEBIT EQU   PARM+344                                                 00946000
JUSTREAD EQU   WRITEBIT                                                 00947000
LRBHRSW1 EQU   LRBHSW1                                                  00948000
LRBHCSW1 EQU   LRBHSW1                                                  00949000
LRBHMSW1 EQU   LRBHSW1                                                  00950000
LRBMMCH  EQU   LRBBASE                                                  00951000
LRBMCEIA EQU   LRBMMCH+8                                                00952000
LRBMTERM EQU   LRBMCEIA                                                 00953000
LRBMHARD EQU   LRBMCEIA+1                                               00954000
LRBMINTM EQU   LRBMCEIA+2                                               00955000
LRBMSOFT EQU   LRBMCEIA+3                                               00956000
LRBMPDAR EQU   LRBMMCH+12                                               00957000
LRBMRSR1 EQU   LRBMMCH+13                                               00958000
LRBMRSR2 EQU   LRBMMCH+14                                               00959000
LRBMFLO  EQU   LRBMMCH+24                                               00960000
LRBMCIC  EQU   LRBMFLO                                                  00961000
@NM00019 EQU   LRBMCIC                                                  00962000
@NM00021 EQU   LRBMCIC+1                                                00963000
@NM00023 EQU   LRBMCIC+2                                                00964000
@NM00025 EQU   LRBMCIC+3                                                00965000
LRBHDWR  EQU   LRBMCIC+4                                                00966000
@NM00028 EQU   LRBMCIC+5                                                00967000
LRBRDDR  EQU   LRBBASE                                                  00968000
LRBCCCH  EQU   LRBBASE                                                  00969000
LRBCCUA  EQU   LRBCCCH+49                                               00970000
LRBDMDR  EQU   LRBBASE                                                  00971000
LRBNMIH  EQU   LRBBASE                                                  00972000
LRBTTER  EQU   LRBBASE                                                  00973000
RECADR   EQU   RECCCHHR                                                 00974000
PARMP1   EQU   PARM                                                     00975000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    00976000
LRBTUSR  EQU   LRBTTER+8                                                00977000
LRBTWSC  EQU   LRBTTER+4                                                00978000
LRBTLNH  EQU   LRBTTER                                                  00979000
LRBNINT  EQU   LRBNMIH+24                                               00980000
LRBNDEVT EQU   LRBNMIH+20                                               00981000
LRBNVOL  EQU   LRBNMIH+14                                               00982000
LRBNCUA1 EQU   LRBNMIH+11                                               00983000
LRBNCUA2 EQU   LRBNMIH+8                                                00984000
LRBNJOB  EQU   LRBNMIH                                                  00985000
LRBDSENS EQU   LRBDMDR+8                                                00986000
LRBDVOL  EQU   LRBDMDR+2                                                00987000
LRBDCUA1 EQU   LRBDMDR                                                  00988000
LRBCCLOG EQU   LRBCCCH+56                                               00989000
LRBCLOGL EQU   LRBCCCH+54                                               00990000
LRBCHCUA EQU   LRBCCCH+52                                               00991000
LRBCCUA2 EQU   LRBCCUA+1                                                00992000
@NM00032 EQU   LRBCCUA                                                  00993000
LRBCCHID EQU   LRBCCCH+48                                               00994000
LRBCDEVT EQU   LRBCCCH+44                                               00995000
LRBCECSW EQU   LRBCCCH+40                                               00996000
LRBCFCSW EQU   LRBCCCH+32                                               00997000
LRBCFCCW EQU   LRBCCCH+24                                               00998000
LRBCAIO  EQU   LRBCCCH+8                                                00999000
LRBCJOB  EQU   LRBCCCH                                                  01000000
LRBRDEV2 EQU   LRBRDDR+32                                               01001000
LRBRCUA2 EQU   LRBRDDR+29                                               01002000
LRBRPH2  EQU   LRBRDDR+28                                               01003000
LRBRDEV1 EQU   LRBRDDR+24                                               01004000
LRBRCUA1 EQU   LRBRDDR+21                                               01005000
LRBRPH1  EQU   LRBRDDR+20                                               01006000
LRBRVOL2 EQU   LRBRDDR+14                                               01007000
LRBRVOL1 EQU   LRBRDDR+8                                                01008000
LRBRJOB  EQU   LRBRDDR                                                  01009000
LRBMCEL  EQU   LRBMMCH+304                                              01010000
@NM00031 EQU   LRBMFLO+20                                               01011000
LRBMFSA  EQU   LRBMFLO+16                                               01012000
@NM00030 EQU   LRBMFLO+8                                                01013000
LRBMCELL EQU   LRBMCIC+6                                                01014000
LRBMVCC  EQU   @NM00028                                                 01015000
LRBMVPT  EQU   @NM00028                                                 01016000
@NM00029 EQU   @NM00028                                                 01017000
@NM00027 EQU   LRBHDWR                                                  01018000
LRBMNVF  EQU   LRBHDWR                                                  01019000
LRBMVST  EQU   @NM00025                                                 01020000
LRBMVLG  EQU   @NM00025                                                 01021000
LRBMVCR  EQU   @NM00025                                                 01022000
LRBMVGR  EQU   @NM00025                                                 01023000
LRBMVFP  EQU   @NM00025                                                 01024000
@NM00026 EQU   @NM00025                                                 01025000
LRBMVRC  EQU   @NM00025                                                 01026000
LRBMVFA  EQU   @NM00025                                                 01027000
LRBMVIA  EQU   @NM00023                                                 01028000
LRBMVPM  EQU   @NM00023                                                 01029000
LRBMVMS  EQU   @NM00023                                                 01030000
LRBMVWP  EQU   @NM00023                                                 01031000
@NM00024 EQU   @NM00023                                                 01032000
LRBMFKE  EQU   @NM00023                                                 01033000
LRBMFSC  EQU   @NM00023                                                 01034000
LRBMFSE  EQU   @NM00023                                                 01035000
LRBMIDY  EQU   @NM00021                                                 01036000
LRBMIBU  EQU   @NM00021                                                 01037000
@NM00022 EQU   @NM00021                                                 01038000
LRBMFWN  EQU   @NM00021                                                 01039000
LRBMFDG  EQU   @NM00019                                                 01040000
@NM00020 EQU   @NM00019                                                 01041000
LRBMFED  EQU   @NM00019                                                 01042000
LRBMFCD  EQU   @NM00019                                                 01043000
LRBMFTD  EQU   @NM00019                                                 01044000
LRBMFSR  EQU   @NM00019                                                 01045000
LRBMFPD  EQU   @NM00019                                                 01046000
LRBMFSD  EQU   @NM00019                                                 01047000
LRBMMOSW EQU   LRBMMCH+16                                               01048000
LRBMPWL  EQU   LRBMMCH+15                                               01049000
LRBMVEQR EQU   LRBMRSR2                                                 01050000
LRBMPGFX EQU   LRBMRSR2                                                 01051000
LRBMLSQA EQU   LRBMRSR2                                                 01052000
LRBMFSQA EQU   LRBMRSR2                                                 01053000
LRBMNUCL EQU   LRBMRSR2                                                 01054000
LRBMSPER EQU   LRBMRSR2                                                 01055000
LRBMINTC EQU   LRBMRSR2                                                 01056000
LRBMOFLN EQU   LRBMRSR2                                                 01057000
LRBMCHNG EQU   LRBMRSR1                                                 01058000
LRBMSER  EQU   LRBMRSR1                                                 01059000
@NM00018 EQU   LRBMRSR1                                                 01060000
@NM00017 EQU   LRBMPDAR                                                 01061000
LRBMRSRF EQU   LRBMPDAR                                                 01062000
LRBMRSRC EQU   LRBMPDAR                                                 01063000
LRBMINVP EQU   LRBMPDAR                                                 01064000
@NM00016 EQU   LRBMPDAR                                                 01065000
LRBMSBUF EQU   LRBMSOFT                                                 01066000
LRBMSHIR EQU   LRBMSOFT                                                 01067000
LRBMSECC EQU   LRBMSOFT                                                 01068000
LRBMSEXD EQU   LRBMSOFT                                                 01069000
@NM00015 EQU   LRBMSOFT                                                 01070000
LRBMSSFT EQU   LRBMSOFT                                                 01071000
LRBMIL80 EQU   LRBMINTM                                                 01072000
LRBMICTM EQU   LRBMINTM                                                 01073000
LRBMICKC EQU   LRBMINTM                                                 01074000
LRBMITOD EQU   LRBMINTM                                                 01075000
@NM00014 EQU   LRBMINTM                                                 01076000
LRBMHIPD EQU   LRBMHARD                                                 01077000
LRBMHSPF EQU   LRBMHARD                                                 01078000
LRBMHSTO EQU   LRBMHARD                                                 01079000
LRBMHINV EQU   LRBMHARD                                                 01080000
@NM00013 EQU   LRBMHARD                                                 01081000
LRBMHHRD EQU   LRBMHARD                                                 01082000
LRBMTINV EQU   LRBMTERM                                                 01083000
LRBMTDMG EQU   LRBMTERM                                                 01084000
LRBMTWRN EQU   LRBMTERM                                                 01085000
LRBMTCKS EQU   LRBMTERM                                                 01086000
LRBMTSEC EQU   LRBMTERM                                                 01087000
@NM00012 EQU   LRBMTERM                                                 01088000
LRBMWSC  EQU   LRBMMCH+4                                                01089000
LRBMLNH  EQU   LRBMMCH                                                  01090000
@NM00011 EQU   LRBHMSW1                                                 01091000
LRBMSYST EQU   LRBHMSW1                                                 01092000
@NM00010 EQU   LRBHMSW1                                                 01093000
@NM00009 EQU   LRBHCSW1                                                 01094000
LRBCERPP EQU   LRBHCSW1                                                 01095000
LRBCDATA EQU   LRBHCSW1                                                 01096000
LRBCICUA EQU   LRBHCSW1                                                 01097000
LRBCNOSP EQU   LRBHCSW1                                                 01098000
@NM00008 EQU   LRBHCSW1                                                 01099000
LRBCINCO EQU   LRBHCSW1                                                 01100000
LRBCMESG EQU   LRBHCSW1                                                 01101000
@NM00007 EQU   LRBHRSW1                                                 01102000
LRBRSYSI EQU   LRBHRSW1                                                 01103000
LRBROPER EQU   LRBHRSW1                                                 01104000
LRBRSEC  EQU   LRBHRSW1                                                 01105000
LRBRPRIM EQU   LRBHRSW1                                                 01106000
@NM00048 EQU   PARM+346                                                 01107000
DUMPSIZE EQU   DUMPINFO+4                                               01108000
DUMPADR  EQU   DUMPINFO                                                 01109000
DUMPNUM  EQU   DUMPTABL                                                 01110000
@NM00047 EQU   PARM+212                                                 01111000
MERDCPTR EQU   PARM+208                                                 01112000
RECLNGT1 EQU   PARM+204                                                 01113000
FRAMEPTR EQU   PARM+200                                                 01114000
SHAREPTR EQU   PARM+196                                                 01115000
TRENPTR  EQU   PARM+192                                                 01116000
SYSUMPTR EQU   PARM+188                                                 01117000
SYMCDPTR EQU   PARM+184                                                 01118000
LIBADPTR EQU   PARM+180                                                 01119000
CPCUAPTR EQU   PARM+176                                                 01120000
CPUPTR   EQU   PARM+172                                                 01121000
VOLPTR   EQU   PARM+168                                                 01122000
SERPTR   EQU   PARM+164                                                 01123000
MODPTR   EQU   PARM+160                                                 01124000
DEVPTR   EQU   PARM+156                                                 01125000
CUAPTR   EQU   PARM+152                                                 01126000
ADCPUT   EQU   PARM+144                                                 01127000
SORTADR  EQU   PARM+140                                                 01128000
EVPTR    EQU   PARM+136                                                 01129000
ADEDITB  EQU   PARM+132                                                 01130000
ADIFCMSG EQU   PARM+128                                                 01131000
ADIOHND  EQU   PARM+124                                                 01132000
@NM00046 EQU   CCHHRLNG+5                                               01133000
USERPGM  EQU   PARM+102                                                 01134000
IDTSEC   EQU   IDTIME+3                                                 01135000
IDSEC    EQU   IDTIME+2                                                 01136000
IDMIN    EQU   IDTIME+1                                                 01137000
IDHOUR   EQU   IDTIME                                                   01138000
IDASID   EQU   ERRID+4                                                  01139000
IDCPU    EQU   ERRID+3                                                  01140000
@NM00045 EQU   ERRID+2                                                  01141000
IDVALUE  EQU   ERRID                                                    01142000
NUMDAYS  EQU   PARM+88                                                  01143000
SORTNUM  EQU   PARM+84                                                  01144000
TABSIZE  EQU   PARM+80                                                  01145000
SYSRETRN EQU   @NM00044                                                 01146000
NUMIN222 EQU   @NM00043                                                 01147000
WRTHRSH  EQU   PARM+69                                                  01148000
RDTHRSH  EQU   PARM+66                                                  01149000
TERM     EQU   PARM+58                                                  01150000
EVSDAY   EQU   STRTDATE+1                                               01151000
EVSYEAR  EQU   STRTDATE                                                 01152000
PENSEC2  EQU   ENDTIME2+2                                               01153000
PENMIN2  EQU   ENDTIME2+1                                               01154000
PENHOUR2 EQU   ENDTIME2                                                 01155000
PSTSEC2  EQU   STTIME2+2                                                01156000
PSTMIN2  EQU   STTIME2+1                                                01157000
PSTHOUR2 EQU   STTIME2                                                  01158000
PENSEC1  EQU   ENDTIME1+2                                               01159000
PENMIN1  EQU   ENDTIME1+1                                               01160000
PENHOUR1 EQU   ENDTIME1                                                 01161000
PSTSEC1  EQU   STTIME1+2                                                01162000
PSTMIN1  EQU   STTIME1+1                                                01163000
PSTHOUR1 EQU   STTIME1                                                  01164000
@NM00042 EQU   ENDDT+4                                                  01165000
PENDY    EQU   PEND+1                                                   01166000
PENYR    EQU   PEND                                                     01167000
@NM00041 EQU   ENDDATE                                                  01168000
@NM00040 EQU   STDT+4                                                   01169000
PSTDY    EQU   PSTD+1                                                   01170000
PSTYR    EQU   PSTD                                                     01171000
@NM00039 EQU   STDATE                                                   01172000
YEARNOW  EQU   DATENOW+4                                                01173000
@NM00038 EQU   DATENOW+3                                                01174000
DAYNOW   EQU   DATENOW                                                  01175000
CSNAP    EQU   CLOSEIO                                                  01176000
CDRCTWRK EQU   CLOSEIO                                                  01177000
CSYSIN   EQU   CLOSEIO                                                  01178000
CACCDEV  EQU   CLOSEIO                                                  01179000
CACCIN   EQU   CLOSEIO                                                  01180000
CSERLOG  EQU   CLOSEIO                                                  01181000
CEREPPT  EQU   CLOSEIO                                                  01182000
CTOURIST EQU   CLOSEIO                                                  01183000
OSNAP    EQU   OPENIO                                                   01184000
ODRCTWRK EQU   OPENIO                                                   01185000
OSYSIN   EQU   OPENIO                                                   01186000
OACCDEV  EQU   OPENIO                                                   01187000
OACCIN   EQU   OPENIO                                                   01188000
OSERLOG  EQU   OPENIO                                                   01189000
OEREPPT  EQU   OPENIO                                                   01190000
OTOURIST EQU   OPENIO                                                   01191000
PASSFLAG EQU   MISC                                                     01192000
PLOGREC  EQU   MISC                                                     01193000
ERRORID  EQU   MISC                                                     01194000
PSUM     EQU   PRINTES                                                  01195000
PEDIT    EQU   PRINTES                                                  01196000
PHIST    EQU   MISC                                                     01197000
PACC     EQU   MISC                                                     01198000
PZERO    EQU   MISC                                                     01199000
DEBUG63  EQU   DEBUGA+3                                                 01200000
DEBUG62  EQU   DEBUGA+3                                                 01201000
DEBUG61  EQU   DEBUGA+3                                                 01202000
DEBUG60  EQU   DEBUGA+3                                                 01203000
DEBUG59  EQU   DEBUGA+3                                                 01204000
DEBUG58  EQU   DEBUGA+3                                                 01205000
DEBUG57  EQU   DEBUGA+3                                                 01206000
DEBUG56  EQU   DEBUGA+3                                                 01207000
DEBUG55  EQU   DEBUGA+2                                                 01208000
DEBUG54  EQU   DEBUGA+2                                                 01209000
DEBUG53  EQU   DEBUGA+2                                                 01210000
DEBUG52  EQU   DEBUGA+2                                                 01211000
DEBUG51  EQU   DEBUGA+2                                                 01212000
DEBUG50  EQU   DEBUGA+2                                                 01213000
DEBUG49  EQU   DEBUGA+2                                                 01214000
DEBUG48  EQU   DEBUGA+2                                                 01215000
DEBUG47  EQU   DEBUGA+1                                                 01216000
DEBUG46  EQU   DEBUGA+1                                                 01217000
DEBUG45  EQU   DEBUGA+1                                                 01218000
DEBUG44  EQU   DEBUGA+1                                                 01219000
DEBUG43  EQU   DEBUGA+1                                                 01220000
DEBUG42  EQU   DEBUGA+1                                                 01221000
DEBUG41  EQU   DEBUGA+1                                                 01222000
DEBUG40  EQU   DEBUGA+1                                                 01223000
DEBUG39  EQU   DEBUGA                                                   01224000
DEBUG38  EQU   DEBUGA                                                   01225000
DEBUG37  EQU   DEBUGA                                                   01226000
DEBUG36  EQU   DEBUGA                                                   01227000
DEBUG35  EQU   DEBUGA                                                   01228000
DEBUG34  EQU   DEBUGA                                                   01229000
DEBUG33  EQU   DEBUGA                                                   01230000
DEBUG32  EQU   DEBUGA                                                   01231000
DEBUG31  EQU   DEBUG+3                                                  01232000
DEBUG30  EQU   DEBUG+3                                                  01233000
DEBUG29  EQU   DEBUG+3                                                  01234000
DEBUG28  EQU   DEBUG+3                                                  01235000
DEBUG27  EQU   DEBUG+3                                                  01236000
DEBUG26  EQU   DEBUG+3                                                  01237000
DEBUG25  EQU   DEBUG+3                                                  01238000
DEBUG24  EQU   DEBUG+3                                                  01239000
DEBUG23  EQU   DEBUG+2                                                  01240000
DEBUG22  EQU   DEBUG+2                                                  01241000
DEBUG21  EQU   DEBUG+2                                                  01242000
DEBUG20  EQU   DEBUG+2                                                  01243000
DEBUG19  EQU   DEBUG+2                                                  01244000
DEBUG18  EQU   DEBUG+2                                                  01245000
DEBUG17  EQU   DEBUG+2                                                  01246000
DEBUG16  EQU   DEBUG+2                                                  01247000
DEBUG15  EQU   DEBUG+1                                                  01248000
DEBUG14  EQU   DEBUG+1                                                  01249000
DEBUG13  EQU   DEBUG+1                                                  01250000
DEBUG12  EQU   DEBUG+1                                                  01251000
DEBUG11  EQU   DEBUG+1                                                  01252000
DEBUG10  EQU   DEBUG+1                                                  01253000
DEBUG9   EQU   DEBUG+1                                                  01254000
DEBUG8   EQU   DEBUG+1                                                  01255000
DEBUG7   EQU   DEBUG                                                    01256000
DEBUG6   EQU   DEBUG                                                    01257000
DEBUG5   EQU   DEBUG                                                    01258000
DEBUG4   EQU   DEBUG                                                    01259000
DEBUG3   EQU   DEBUG                                                    01260000
DEBUG2   EQU   DEBUG                                                    01261000
DEBUG1   EQU   DEBUG                                                    01262000
DEBUG0   EQU   DEBUG                                                    01263000
SORTBRK  EQU   SWITCHES+1                                               01264000
COREFAIL EQU   SWITCHES+1                                               01265000
ANALYSIS EQU   SWITCHES+1                                               01266000
SHIFT3RD EQU   SWITCHES+1                                               01267000
DEVEXCL  EQU   SWITCHES+1                                               01268000
ZEROALL  EQU   SWITCHES+1                                               01269000
NOTALL   EQU   SWITCHES+1                                               01270000
NOSDR    EQU   SWITCHES                                                 01271000
TIMESEQ  EQU   SWITCHES                                                 01272000
SYSUM    EQU   SWITCHES                                                 01273000
PARMTHR  EQU   SWITCHES                                                 01274000
TREND    EQU   SWITCHES                                                 01275000
SHORTOBR EQU   SWITCHES                                                 01276000
PARMMES  EQU   SWITCHES                                                 01277000
RDESUM   EQU   SWITCHES                                                 01278000
PCCHFRAM EQU   RECTYPE+1                                                01279000
PMCHFRAM EQU   RECTYPE+1                                                01280000
PTTYP    EQU   RECTYPE+1                                                01281000
PEOD     EQU   RECTYPE                                                  01282000
PMIH     EQU   RECTYPE                                                  01283000
PDDR     EQU   RECTYPE                                                  01284000
PIPL     EQU   RECTYPE                                                  01285000
PSOFT    EQU   RECTYPE                                                  01286000
POBR     EQU   RECTYPE                                                  01287000
PCHAN    EQU   RECTYPE                                                  01288000
PMCH     EQU   RECTYPE                                                  01289000
@NM00037 EQU   NEWBUF                                                   01290000
@NM00035 EQU   BEHDR+4                                                  01291000
@NM00034 EQU   BFLGS+1                                                  01292000
DATAP    EQU   BFLGS+1                                                  01293000
@NM00033 EQU   BFLGS                                                    01294000
WRITE    EQU   BFLGS                                                    01295000
LOG      EQU   BFLGS                                                    01296000
LRBCMPCS EQU   LRBCMP+2                                                 01297000
LRBCMPPA EQU   LRBCMP                                                   01298000
LRBCMPNO EQU   LRBCVAR+6                                                01299000
LRBCMPF2 EQU   LRBCVAR+5                                                01300000
LRBCMPF1 EQU   LRBCVAR+4                                                01301000
LRBCRESD EQU   LRBCVAR+2                                                01302000
LRBCFT   EQU   LRBCVAR                                                  01303000
LRBHMCEL EQU   LRBHCPID+6                                               01304000
LRBHMDL  EQU   LRBHCPID+4                                               01305000
LRBHCSER EQU   LRBHCPID+1                                               01306000
@NM00006 EQU   LRBHCPID                                                 01307000
@NM00005 EQU   LRB+7                                                    01308000
LRBHCNT  EQU   LRB+6                                                    01309000
LRBMCLB  EQU   LRBHSW3                                                  01310000
LRBNDEM  EQU   LRBMACT                                                  01311000
LRBNCEM  EQU   LRBMACT                                                  01312000
@NM00004 EQU   LRBHSW0                                                  01313000
@NM00003 EQU   LRBHSW0                                                  01314000
LRBHMORE EQU   LRBHSW0                                                  01315000
@NM00002 EQU   LRBHSYS                                                  01316000
LRBHSYSB EQU   LRBHSYS                                                  01317000
LRBHTYPE EQU   LRB                                                      01318000
ADPLEXT  EQU   ABDPL+52                                                 01319000
ADPLFMT2 EQU   ABDPL+48                                                 01320000
ADPLFMT1 EQU   ABDPL+44                                                 01321000
ADPLCOM4 EQU   ABDPL+40                                                 01322000
ADPLCOM3 EQU   ABDPL+36                                                 01323000
ADPLCOM2 EQU   ABDPL+32                                                 01324000
ADPLCOM1 EQU   ABDPL+28                                                 01325000
ADPLFRMT EQU   ABDPL+24                                                 01326000
ADPLMEMA EQU   ABDPL+20                                                 01327000
ADPLCVT  EQU   ABDPL+16                                                 01328000
@NM00001 EQU   ADPLFLAG                                                 01329000
ADPLSYTM EQU   ADPLFLAG                                                 01330000
ADPLSNPR EQU   ADPLFLAG                                                 01331000
ADPLSBPL EQU   ABDPL+6                                                  01332000
ADPLASID EQU   ABDPL+4                                                  01333000
ADPLTCB  EQU   ABDPL                                                    01334000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01335000
@RC00157 EQU   @EL00003                                                 01336000
@PB00003 EQU   @EL00002                                                 01337000
@RT00163 EQU   @RC00157                                                 01338000
@ENDDATA EQU   *                                                        01339000
         END   IFCFMTIO,(C'PLS0222',0702,79011)                         01340000
