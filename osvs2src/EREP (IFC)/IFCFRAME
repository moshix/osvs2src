         TITLE 'IFCFRAME - FRAME PROCESSOR/INTERPRETER                 *00001000
                        '                                               00002000
IFCFRAME CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IFCFRAME  78.139'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  ST    @14,12(,@13)                                        0001 00010000
         STM   @00,@12,20(@13)                                     0001 00011000
         BALR  @10,0                                               0001 00012000
@PSTART  LA    @11,4095(,@10)                                      0001 00013000
         LA    @12,4095(,@11)                                      0001 00014000
         USING @PSTART,@10                                         0001 00015000
         USING @PSTART+4095,@11                                    0001 00016000
         USING @PSTART+8190,@12                                    0001 00017000
         ST    @13,@SA00001+4                                      0001 00018000
         LA    @14,@SA00001                                        0001 00019000
         ST    @14,8(,@13)                                         0001 00020000
         LR    @13,@14                                             0001 00021000
*/********************************************************************/ 00022000
*/*                                                          @G51DGJJ*/ 00023000
*/* THIS IS THE ROOT SEGMENT.                                @G51DGJJ*/ 00024000
*/* FUNCTIONS - CHECKS FOR MISSING FRAMES, PRINTS APPROPRIATE        */ 00025000
*/*             ERROR MESSAGES.                              @G51DGJJ*/ 00026000
*/*           - INVOKES IFCFRAMM, IFCFRAMC TO EDIT AND PRINT @G51DGJJ*/ 00027000
*/*             MACHINE-INDEPEND. PARTS OF MCH, CCH LOG ERROR        */ 00028000
*/*             RECORDS, RESPECTIVELY.                       @G51DGJJ*/ 00029000
*/*           - INVOKES 'FRAMES' WHICH PERFORMS MORE MISSING @G51DGJJ*/ 00030000
*/*             FRAME CHECKS BEFORE PROCEEDING TO EDIT       @G51DGJJ*/ 00031000
*/*             AND PRINT EXTENDED LOGOUT, CHANNEL LOGOUT    @G51DGJJ*/ 00032000
*/*             AREAS OF MCH, CCH LOG ERROR RECORDS, RESPECTIVELY.   */ 00033000
*/*           - EXERCISES SELECTABLE DEBUGGING OPTIONS.      @G51DGJJ*/ 00034000
*/*                                                          @G51DGJJ*/ 00035000
*  IF DB4 = ON THEN                                                0164 00036000
         TM    DB4,B'10000000'                                     0164 00037000
         BNO   @RF00164                                            0164 00038000
*    DO;                                                   /*@G51DGJJ*/ 00039000
*      DB4 = OFF;                                          /*@G51DGJJ*/ 00040000
         NI    DB4,B'01111111'                                     0166 00041000
*      Q = LINECT/FRMSPACE;    /* ENSURE INTEGRAL NO. OF FRAMES ON A */ 00042000
         LA    @14,25                                              0167 00043000
         LH    @00,LINECT(,R2)                                     0167 00044000
         SRDA  @00,32                                              0167 00045000
         DR    @00,@14                                             0167 00046000
         ST    @01,Q                                               0167 00047000
*      LINECT1 = FRMSPACE * Q; /* PAGE - 25 LINES PER FRAME  @G51DGJJ*/ 00048000
         MR    @00,@14                                             0168 00049000
         ST    @01,LINECT1                                         0168 00050000
*      IF DEBUG4 = ON THEN                                         0169 00051000
         TM    DEBUG4(R2),B'00001000'                              0169 00052000
         BNO   @RF00169                                            0169 00053000
*        DO;                 /* PRINT PROGRAM NAME, COMPILE DATE     */ 00054000
*          R15 = R10 - 27;                                 /*@G51DGJJ*/ 00055000
         LR    R15,R10                                             0171 00056000
         SH    R15,@CH01142                                        0171 00057000
*          DDTYPE = '1';                                   /*@G51DGJJ*/ 00058000
         MVI   DDTYPE,C'1'                                         0172 00059000
*          GEN(MVC  PRTLINE1(16),0(15));                   /*@G51DGJJ*/ 00060000
         MVC  PRTLINE1(16),0(15)                                        00061000
*          R15 = ADDR(IFCFRAMM);                           /*@G51DGJJ*/ 00062000
         L     R15,@CV01143                                        0174 00063000
*          GEN(MVC  PRTLINE1+20(16),5(15));                /*@G51DGJJ*/ 00064000
         MVC  PRTLINE1+20(16),5(15)                                     00065000
*          R15 = ADDR(IFCFRAMC);                           /*@G51DGJJ*/ 00066000
         L     R15,@CV01144                                        0176 00067000
*          GEN(MVC  PRTLINE1+40(16),5(15));                /*@G51DGJJ*/ 00068000
         MVC  PRTLINE1+40(16),5(15)                                     00069000
*          CALL PRINT2;                                    /*@G51DGJJ*/ 00070000
         BAL   @14,PRINT2                                          0178 00071000
*          DDTYPE = '0';                                   /*@G51DGJJ*/ 00072000
         MVI   DDTYPE,C'0'                                         0179 00073000
*        END;                                              /*@G51DGJJ*/ 00074000
*    END;                                                  /*@G51DGJJ*/ 00075000
@RF00169 DS    0H                                                  0182 00076000
*  IF FIRSTFRM = ON & R5 = ZERO THEN                               0182 00077000
@RF00164 TM    FIRSTFRM,B'00100000'                                0182 00078000
         BNO   @RF00182                                            0182 00079000
         LTR   R5,R5                                               0182 00080000
         BNZ   @RF00182                                            0182 00081000
*     DO;                                                  /*@G51DGJJ*/ 00082000
*       IF (LRTKEY1 & 'F0'X) = MCHLG THEN                          0184 00083000
         MVC   @TS00001(1),LRTKEY1(R7)                             0184 00084000
         NI    @TS00001,X'F0'                                      0184 00085000
         CLI   @TS00001,X'10'                                      0184 00086000
         BNE   @RF00184                                            0184 00087000
*         CALL IFCFRAMM;      /* PRINT MCH MACH.-INDEPEND. DATA      */ 00088000
         L     @15,@CV01143                                        0185 00089000
         BALR  @14,@15                                             0185 00090000
*       ELSE                                                       0186 00091000
*         CALL IFCFRAMC;      /* PRINT CCH CHAN.-INDEPEND. DATA      */ 00092000
         B     @RC00184                                            0186 00093000
@RF00184 L     @15,@CV01144                                        0186 00094000
         BALR  @14,@15                                             0186 00095000
*       IF MCHCEL ^= ZERO THEN  /* TEST EXTENDED LOGOUT PRESENT      */ 00096000
@RC00184 MVC   @ZT00002+2(2),MCHCEL(R7)                            0187 00097000
         L     @14,@ZT00002                                        0187 00098000
         LTR   @14,@14                                             0187 00099000
         BZ    @RF00187                                            0187 00100000
*       CALL NOFRAMES;        /* NO FRAMES AVAILABLE TO EDIT LOGOUT  */ 00101000
         BAL   @14,NOFRAMES                                        0188 00102000
*       CALL HEXDUMPL;        /* HEX DUMP LOG ERROR RECORD   @G51DGJJ*/ 00103000
@RF00187 BAL   @14,HEXDUMPL                                        0189 00104000
*     END;                                                 /*@G51DGJJ*/ 00105000
*  ELSE                                                            0191 00106000
*    DO;                                                   /*@G51DGJJ*/ 00107000
         B     @RC00182                                            0191 00108000
@RF00182 DS    0H                                                  0192 00109000
*     CALL FRAMES;            /* FRAMES AVAILABLE            @G51DGJJ*/ 00110000
         BAL   @14,FRAMES                                          0192 00111000
*     IF HXDMPFRM = ON | DEBUG45 = ON THEN                         0193 00112000
         TM    HXDMPFRM,B'00000100'                                0193 00113000
         BO    @RT00193                                            0193 00114000
         TM    DEBUG45(R2),B'00000100'                             0193 00115000
         BNO   @RF00193                                            0193 00116000
@RT00193 DS    0H                                                  0194 00117000
*       CALL HEXDUMPF;        /* HEX DUMP FRAME              @G51DGJJ*/ 00118000
         BAL   @14,HEXDUMPF                                        0194 00119000
*     IF HXDMPLOG = ON THEN                                        0195 00120000
@RF00193 TM    HXDMPLOG,B'01000000'                                0195 00121000
         BNO   @RF00195                                            0195 00122000
*       DO;                        /* END OF FRAME SET       @G51DGJJ*/ 00123000
*         HXDMPLOG = OFF;                                  /*@G51DGJJ*/ 00124000
         NI    HXDMPLOG,B'10111111'                                0197 00125000
*         CALL HEXDUMPL;           /* HEXDUMP LOG ERROR RECORD       */ 00126000
         BAL   @14,HEXDUMPL                                        0198 00127000
*         IF DEBUG44 = ON THEN                                     0199 00128000
         TM    DEBUG44(R2),B'00001000'                             0199 00129000
         BNO   @RF00199                                            0199 00130000
*           GEN(ABEND 160,DUMP);                           /*@G51DGJJ*/ 00131000
         ABEND 160,DUMP                                                 00132000
*       END;                                               /*@G51DGJJ*/ 00133000
@RF00199 DS    0H                                                  0202 00134000
*    END;                                                  /*@G51DGJJ*/ 00135000
@RF00195 DS    0H                                                  0203 00136000
*  R15 = RETCODE;                                          /*@G51DGJJ*/ 00137000
@RC00182 LH    R15,RETCODE                                         0203 00138000
*  RESPECIFY (R15) UNRESTRICTED;                           /*@G51DGJJ*/ 00139000
*  RETURN;                                                 /*@G51DGJJ*/ 00140000
@EL00001 L     @13,4(,@13)                                         0205 00141000
@EF00001 DS    0H                                                  0205 00142000
@ER00001 L     @14,12(,@13)                                        0205 00143000
         LM    @00,@12,20(@13)                                     0205 00144000
         BR    @14                                                 0205 00145000
*/********************************************************************/ 00146000
*/*                                                          @G51DGJJ*/ 00147000
*/* THIS PROC PRINTS A 'NO FRAMES AVAILABLE' MESSAGE         @G51DGJJ*/ 00148000
*/* ON EREPPT PRINTER DATA SET.                              @G51DGJJ*/ 00149000
*/*                                                          @G51DGJJ*/ 00150000
*NOFRAMES: PROC;                                           /*@G51DGJJ*/ 00151000
NOFRAMES STM   @14,@12,@SA00002                                    0206 00152000
*  SPACING = SINGLE;                                       /*@G51DGJJ*/ 00153000
         MVI   SPACING,X'09'                                       0207 00154000
*  CALL PRINT2;              /* PRINT BLANK LINE, SINGLE SPACE       */ 00155000
         BAL   @14,PRINT2                                          0208 00156000
*  CALL IFCMSG(79,ADDR(MESSAGE)); /* GET ERROR MESSAGE       @G51DGJJ*/ 00157000
         LA    @06,MESSAGE                                         0209 00158000
         ST    @06,@AFTEMPS                                        0209 00159000
         L     @15,ADIFCMSG(,R2)                                   0209 00160000
         LA    @01,@AL00209                                        0209 00161000
         BALR  @14,@15                                             0209 00162000
*  IF (LRTKEY1 & 'F0'X) = MCHLG THEN /* INSERT VAR. INFO INTO MSG.   */ 00163000
         MVC   @TS00001(1),LRTKEY1(R7)                             0210 00164000
         NI    @TS00001,X'F0'                                      0210 00165000
         CLI   @TS00001,X'10'                                      0210 00166000
         BNE   @RF00210                                            0210 00167000
*    MCHCCH79 = MCHL;                                      /*@G51DGJJ*/ 00168000
         MVC   MCHCCH79(3),MCHL                                    0211 00169000
*  ELSE                                                            0212 00170000
*    MCHCCH79 = CCHL;                                      /*@G51DGJJ*/ 00171000
         B     @RC00210                                            0212 00172000
@RF00210 MVC   MCHCCH79(3),CCHL                                    0212 00173000
*    PARM3 = TWO;                                          /*@G51DGJJ*/ 00174000
@RC00210 MVC   PARM3(4),@CF00073                                   0213 00175000
*    CALL CONVERT(LRTMODEL,MOD79,PARM3);                   /*@G51DGJJ*/ 00176000
         MVC   @AL00001+4(8),@AL00214                              0214 00177000
         LA    @06,LRTMODEL(,R7)                                   0214 00178000
         ST    @06,@AL00001                                        0214 00179000
         LA    @01,@AL00001                                        0214 00180000
         BAL   @14,CONVERT                                         0214 00181000
*    PARM3 = THREE;                                        /*@G51DGJJ*/ 00182000
         MVC   PARM3(4),@CF00075                                   0215 00183000
*    CALL CONVERT(LRTCPUS,SER79,PARM3);                    /*@G51DGJJ*/ 00184000
         MVC   @AL00001+4(8),@AL00216                              0216 00185000
         LA    @06,LRTCPUS(,R7)                                    0216 00186000
         ST    @06,@AL00001                                        0216 00187000
         LA    @01,@AL00001                                        0216 00188000
         BAL   @14,CONVERT                                         0216 00189000
*    MESSAGET = MESSAGE;    /* MOVE MESSAGE TO TOURIST PRINT LINE    */ 00190000
         MVC   MESSAGET(58),MESSAGE                                0217 00191000
*    CALL PRINT2;           /* PRINT MESSAGE ON EREPPT, SINGLE SPACE */ 00192000
         BAL   @14,PRINT2                                          0218 00193000
*    CALL PRINT2;           /* PRINT BLANK LINE, SINGLE SPACE        */ 00194000
         BAL   @14,PRINT2                                          0219 00195000
* /* CALL PRINT3;              PRINT MESSAGE ON TOURIST,SINGLE SPACE */ 00196000
*END;                                                      /*@G51DGJJ*/ 00197000
@EL00002 DS    0H                                                  0220 00198000
@EF00002 DS    0H                                                  0220 00199000
@ER00002 LM    @14,@12,@SA00002                                    0220 00200000
         BR    @14                                                 0220 00201000
*/********************************************************************/ 00202000
*/*                                                          @G51DGJJ*/ 00203000
*/* THIS PROC CHECKS FOR MISSING FRAMES AT THE BEGINNING     @G51DGJJ*/ 00204000
*/* OF A FRAME SET. IF ANY ARE MISSING, MESSAGE(S) INDICATING        */ 00205000
*/* WHICH ONES ARE PRINTED ON EREPPT, TOURIST PRINTER DATA SETS.     */ 00206000
*/* FRAME PROCESSING CONTINUES.                              @G51DGJJ*/ 00207000
*/*                                                          @G51DGJJ*/ 00208000
*FRAMES:    PROC;                                          /*@G51DGJJ*/ 00209000
FRAMES   STM   @14,@12,@SA00003                                    0221 00210000
*  IF FIRSTFRM = ON THEN                                           0222 00211000
         TM    FIRSTFRM,B'00100000'                                0222 00212000
         BNO   @RF00222                                            0222 00213000
*    DO;                     /* 1ST FRAME - THIS SET         @G51DGJJ*/ 00214000
*      FIRSTFRM = OFF;                                     /*@G51DGJJ*/ 00215000
         NI    FIRSTFRM,B'11011111'                                0224 00216000
*      IF MCFKEY1 = MCF THEN                                       0225 00217000
         CLI   MCFKEY1(R5),X'A0'                                   0225 00218000
         BNE   @RF00225                                            0225 00219000
*        CALL IFCFRAMM;                                    /*@G51DGJJ*/ 00220000
         L     @15,@CV01143                                        0226 00221000
         BALR  @14,@15                                             0226 00222000
*      ELSE                                                        0227 00223000
*        CALL IFCFRAMC;                                    /*@G51DGJJ*/ 00224000
         B     @RC00225                                            0227 00225000
@RF00225 L     @15,@CV01144                                        0227 00226000
         BALR  @14,@15                                             0227 00227000
*      SPACING = UPSPACE;   /* SET NEW PAGE FOR FIRST FRAME  @G51DGJJ*/ 00228000
@RC00225 MVI   SPACING,X'89'                                       0228 00229000
*      CALL PRINT2;                                        /*@G51DGJJ*/ 00230000
         BAL   @14,PRINT2                                          0229 00231000
*      SPACING = SINGLE;                                   /*@G51DGJJ*/ 00232000
         MVI   SPACING,X'09'                                       0230 00233000
*      MYLINECT = ZERO;                                    /*@G51DGJJ*/ 00234000
         SLR   @06,@06                                             0231 00235000
         ST    @06,MYLINECT                                        0231 00236000
*      MCHS = MCHSER;                                      /*@G51DGJJ*/ 00237000
         MVC   MCHS(3),MCHSER(R7)                                  0232 00238000
*      MCHMO = MCHMOD;                                     /*@G51DGJJ*/ 00239000
         MVC   MCHMO(2),MCHMOD(R7)                                 0233 00240000
*      IF MCHSMO ^= MCFSMO THEN                                    0234 00241000
         CLC   MCHSMO(5),MCFSMO(R5)                                0234 00242000
         BE    @RF00234                                            0234 00243000
*        DO;                /* DIFF. MOD./SER. IN ERR. REC., FRAME   */ 00244000
*          CALL NFRAMES;    /* PRINT MESSAGE ON TOURIST      @G51DGJJ*/ 00245000
         BAL   @14,NFRAMES                                         0236 00246000
*          CALL NMTCHSER;   /* PRINT MESSAGE ON EREPPT       @G51DGJJ*/ 00247000
         BAL   @14,NMTCHSER                                        0237 00248000
*          SERSW = ON;                                     /*@G51DGJJ*/ 00249000
         OI    SERSW,B'00001000'                                   0238 00250000
*        END;                                              /*@G51DGJJ*/ 00251000
*      IF (MCFCNT - PREVSEQN) > 1 THEN                             0240 00252000
@RF00234 SLR   @06,@06                                             0240 00253000
         IC    @06,MCFCNT(,R5)                                     0240 00254000
         SL    @06,PREVSEQN                                        0240 00255000
         CH    @06,@CH00054                                        0240 00256000
         BNH   @RF00240                                            0240 00257000
*        DO;                /* MISSING FRAME(S) AT BEGINNING OF SET  */ 00258000
*          CALL MISSFRMS;                                  /*@G51DGJJ*/ 00259000
         BAL   @14,MISSFRMS                                        0242 00260000
*        END;                                              /*@G51DGJJ*/ 00261000
*      PREVSEQN = MCFCNT;    /* SAVE CURRENT FRAME SEQUENCE NO.      */ 00262000
@RF00240 SLR   @06,@06                                             0244 00263000
         IC    @06,MCFCNT(,R5)                                     0244 00264000
         ST    @06,PREVSEQN                                        0244 00265000
*    END;                                                  /*@G51DGJJ*/ 00266000
*  CALL NEXTFRMS;            /* CONTINUE PROCESSING          @G51DGJJ*/ 00267000
@RF00222 BAL   @14,NEXTFRMS                                        0246 00268000
*END;                                                      /*@G51DGJJ*/ 00269000
@EL00003 DS    0H                                                  0247 00270000
@EF00003 DS    0H                                                  0247 00271000
@ER00003 LM    @14,@12,@SA00003                                    0247 00272000
         BR    @14                                                 0247 00273000
*/********************************************************************/ 00274000
*/*                                                          @G51DGJJ*/ 00275000
*/* THIS PROC CHECKS FOR MISSING FRAMES AT THE END OF THE    @G51DGJJ*/ 00276000
*/* FRAME SET AND WITHIN THE SET AND PRINTS ERROR MESSAGES   @G51DGJJ*/ 00277000
*/* IDENTIFYING WHICH ONES - ON EREPPT AND TOURIST.          @G51DGJJ*/ 00278000
*/* THE FRAME INTERPRETER IS THEN INVOKED FOLLOWED BY A HEX DUMP     */ 00279000
*/* OF THE FRAME IF INDICATED BY THE INTERPRETER.            @G51DGJJ*/ 00280000
*/* THE LOG ERROR RECORD IS HEX DUMPED AFTER THE LAST FRAME  @G51DGJJ*/ 00281000
*/* OF THE SET IS PROCESED.                                  @G51DGJJ*/ 00282000
*/*                                                          @G51DGJJ*/ 00283000
*NEXTFRMS:  PROC;                                          /*@G51DGJJ*/ 00284000
NEXTFRMS STM   @14,@12,@SA00004                                    0248 00285000
*  IF R5 = ZERO THEN                                               0249 00286000
         LTR   R5,R5                                               0249 00287000
         BNZ   @RF00249                                            0249 00288000
*    DO;                     /* MISSING FRAME(S) AT END OF SET       */ 00289000
*      LASTFRM = ON;                                       /*@G51DGJJ*/ 00290000
         OI    LASTFRM,B'00010000'                                 0251 00291000
*      CALL MISSFRME;                                      /*@G51DGJJ*/ 00292000
         BAL   @14,MISSFRME                                        0252 00293000
*    END;                                                  /*@G51DGJJ*/ 00294000
*  ELSE                                                            0254 00295000
*    DO;                                                   /*@G51DGJJ*/ 00296000
         B     @RC00249                                            0254 00297000
@RF00249 DS    0H                                                  0255 00298000
*      IF SERSW = OFF THEN                                         0255 00299000
         TM    SERSW,B'00001000'                                   0255 00300000
         BNZ   @RF00255                                            0255 00301000
*        CALL PRINT1;                                      /*@G51DGJJ*/ 00302000
         BAL   @14,PRINT1                                          0256 00303000
*      SERSW = OFF;                                        /*@G51DGJJ*/ 00304000
@RF00255 NI    SERSW,B'11110111'                                   0257 00305000
*      IF (MCFCNT - PREVSEQN) > 1 THEN                             0258 00306000
         SLR   @06,@06                                             0258 00307000
         IC    @06,MCFCNT(,R5)                                     0258 00308000
         SL    @06,PREVSEQN                                        0258 00309000
         CH    @06,@CH00054                                        0258 00310000
         BNH   @RF00258                                            0258 00311000
*        CALL MISSFRMS;     /* MISSING FRAME(S) WITHIN SET   @G51DGJJ*/ 00312000
         BAL   @14,MISSFRMS                                        0259 00313000
*      PREVSEQN = MCFCNT;   /* SAVE CURRENT FRAME SEQUENCE NO.       */ 00314000
@RF00258 SLR   @06,@06                                             0260 00315000
         IC    @06,MCFCNT(,R5)                                     0260 00316000
         ST    @06,PREVSEQN                                        0260 00317000
*      CALL INTRPRET;       /* INTERPRET FRAME - EDIT,PRINT LOGOUT   */ 00318000
         BAL   @14,INTRPRET                                        0261 00319000
*    END;                                                  /*@G51DGJJ*/ 00320000
*  IF MCFLST = OFF | LASTFRM = ON THEN                             0263 00321000
@RC00249 TM    MCFLST(R5),B'10000000'                              0263 00322000
         BZ    @RT00263                                            0263 00323000
         TM    LASTFRM,B'00010000'                                 0263 00324000
         BNO   @RF00263                                            0263 00325000
@RT00263 DS    0H                                                  0264 00326000
*    DO;                                                   /*@G51DGJJ*/ 00327000
*      LASTFRM = OFF;                                      /*@G51DGJJ*/ 00328000
*      FIRSTFRM = ON;                                      /*@G51DGJJ*/ 00329000
         OI    FIRSTFRM,B'00100000'                                0266 00330000
         NI    LASTFRM,B'11101111'                                 0266 00331000
*      PREVSEQN = ZERO;                                    /*@G51DGJJ*/ 00332000
         SLR   @06,@06                                             0267 00333000
         ST    @06,PREVSEQN                                        0267 00334000
*      HXDMPLOG = ON;                                      /*@G51DGJJ*/ 00335000
         OI    HXDMPLOG,B'01000000'                                0268 00336000
*    END;                                                  /*@G51DGJJ*/ 00337000
*END;                                                      /*@G51DGJJ*/ 00338000
@EL00004 DS    0H                                                  0270 00339000
@EF00004 DS    0H                                                  0270 00340000
@ER00004 LM    @14,@12,@SA00004                                    0270 00341000
         BR    @14                                                 0270 00342000
*/********************************************************************/ 00343000
*/*                                                          @G51DGJJ*/ 00344000
*/* THIS PROC PRINTS A 'MISSING FRAME' ERROR MESSAGE         @G51DGJJ*/ 00345000
*/* ON EREPPT AND TOURIST, IDENTIFYING EACH MISSING FRAME.   @G51DGJJ*/ 00346000
*/* MESSAGE(S) ARE PRINTED IN THE SPACE RESERVED FOR THE FRAME.      */ 00347000
*MISSFRMS:  PROC;                                          /*@G51DGJJ*/ 00348000
MISSFRMS STM   @14,@12,@SA00005                                    0271 00349000
*    K = MCFCNT - PREVSEQN - 1;   /* NO. OF CONTIGUOUS MISSING FRAMES*/ 00350000
         SLR   @06,@06                                             0272 00351000
         IC    @06,MCFCNT(,R5)                                     0272 00352000
         SL    @06,PREVSEQN                                        0272 00353000
         BCTR  @06,0                                               0272 00354000
         ST    @06,K                                               0272 00355000
*    DO J = 1 TO K;                                        /*@G51DGJJ*/ 00356000
         LA    @06,1                                               0273 00357000
         B     @DE00273                                            0273 00358000
@DL00273 DS    0H                                                  0274 00359000
*      CALL IFCMSG(20,ADDR(MESSAGE));  /* GET ERROR MESSAGE  @G51DGJJ*/ 00360000
         LA    @06,MESSAGE                                         0274 00361000
         ST    @06,@AFTEMPS+4                                      0274 00362000
         L     @15,ADIFCMSG(,R2)                                   0274 00363000
         LA    @01,@AL00274                                        0274 00364000
         BALR  @14,@15                                             0274 00365000
*      IF (LRTKEY1 & 'F0'X) = MCHLG THEN /* INSERT VAR. INFO INTO MSG*/ 00366000
         MVC   @TS00001(1),LRTKEY1(R7)                             0275 00367000
         NI    @TS00001,X'F0'                                      0275 00368000
         CLI   @TS00001,X'10'                                      0275 00369000
         BNE   @RF00275                                            0275 00370000
*        MCFCCF20 = MCFL;                                  /*@G51DGJJ*/ 00371000
         MVC   MCFCCF20(3),MCFL                                    0276 00372000
*      ELSE                                                        0277 00373000
*        MCFCCF20 = CCFL;                                  /*@G51DGJJ*/ 00374000
         B     @RC00275                                            0277 00375000
@RF00275 MVC   MCFCCF20(3),CCFL                                    0277 00376000
*      PARM3 = TWO;                                        /*@G51DGJJ*/ 00377000
@RC00275 MVC   PARM3(4),@CF00073                                   0278 00378000
*      CALL CONVERT(MCHMOD,MOD20,PARM3);                   /*@G51DGJJ*/ 00379000
         MVC   @AL00001+4(8),@AL00279                              0279 00380000
         LA    @06,MCHMOD(,R7)                                     0279 00381000
         ST    @06,@AL00001                                        0279 00382000
         LA    @01,@AL00001                                        0279 00383000
         BAL   @14,CONVERT                                         0279 00384000
*      PARM3 = THREE;                                      /*@G51DGJJ*/ 00385000
         MVC   PARM3(4),@CF00075                                   0280 00386000
*      CALL CONVERT(MCHSER,SER20,PARM3);                   /*@G51DGJJ*/ 00387000
         MVC   @AL00001+4(8),@AL00281                              0281 00388000
         LA    @06,MCHSER(,R7)                                     0281 00389000
         ST    @06,@AL00001                                        0281 00390000
         LA    @01,@AL00001                                        0281 00391000
         BAL   @14,CONVERT                                         0281 00392000
*      PSN = PREVSEQN + J;        /* SEQ. NO. OF MISSING FRAME       */ 00393000
         L     @06,PREVSEQN                                        0282 00394000
         AL    @06,J                                               0282 00395000
         ST    @06,PSN                                             0282 00396000
*      CALL CONVBIN(PSN,BINOUT);                           /*@G51DGJJ*/ 00397000
         LA    @01,@AL00283                                        0283 00398000
         BAL   @14,CONVBIN                                         0283 00399000
*      FRAME20 = BINOUT(4:5);                              /*@G51DGJJ*/ 00400000
         MVC   FRAME20(2),BINOUT+3                                 0284 00401000
*      MESSAGET = MESSAGE;   /* MOVE MESSAGE TO TOURIST PRINT LINE   */ 00402000
         MVC   MESSAGET(58),MESSAGE                                0285 00403000
*      CALL PRINT1;          /* PRINT MESSAGE ON EREPPT, SINGLE SPACE*/ 00404000
         BAL   @14,PRINT1                                          0286 00405000
*      CALL PRINT3;          /* PRINT MESSAGE ON TOURIST,SINGLE SPACE*/ 00406000
         BAL   @14,PRINT3                                          0287 00407000
*    END;                                                  /*@G51DGJJ*/ 00408000
         LA    @06,1                                               0288 00409000
         AL    @06,J                                               0288 00410000
@DE00273 ST    @06,J                                               0288 00411000
         C     @06,K                                               0288 00412000
         BNH   @DL00273                                            0288 00413000
*    R = LINECT1 - MYLINECT; /* SET LINE CONTROL TO (LAST LINE)-1    */ 00414000
         L     @06,MYLINECT                                        0289 00415000
         L     @04,LINECT1                                         0289 00416000
         SLR   @04,@06                                             0289 00417000
         ST    @04,R                                               0289 00418000
*    Q = R/FRMSPACE;         /* IN FRAME SPACE.              @G51DGJJ*/ 00419000
         LA    @03,25                                              0290 00420000
         LR    @00,@04                                             0290 00421000
         SRDA  @00,32                                              0290 00422000
         DR    @00,@03                                             0290 00423000
         ST    @01,Q                                               0290 00424000
*    MYLINECT = MYLINECT + (R - FRMSPACE * Q) - 1;         /*@G51DGJJ*/ 00425000
         MR    @00,@03                                             0291 00426000
         SLR   @04,@01                                             0291 00427000
         ALR   @06,@04                                             0291 00428000
         BCTR  @06,0                                               0291 00429000
         ST    @06,MYLINECT                                        0291 00430000
*    CALL PRINT1;                                          /*@G51DGJJ*/ 00431000
         BAL   @14,PRINT1                                          0292 00432000
*END;                                                      /*@G51DGJJ*/ 00433000
@EL00005 DS    0H                                                  0293 00434000
@EF00005 DS    0H                                                  0293 00435000
@ER00005 LM    @14,@12,@SA00005                                    0293 00436000
         BR    @14                                                 0293 00437000
*/********************************************************************/ 00438000
*/*                                                          @G51DGJJ*/ 00439000
*/* THIS PROC PRINTS A 'MISSING FRAME' ERROR MESSAGE         @G51DGJJ*/ 00440000
*/* ON EREPPT AND TOURIST, IDENTIFYING AT LEAST THE LAST     @G51DGJJ*/ 00441000
*/* FRAME IN A POSSIBLE SERIES OF FRAMES MISSING AT THE END  @G51DGJJ*/ 00442000
*/* OF THE FRAME SET.                                        @G51DGJJ*/ 00443000
*/*                                                          @G51DGJJ*/ 00444000
*MISSFRME:  PROC;                                          /*@G51DGJJ*/ 00445000
MISSFRME STM   @14,@12,@SA00006                                    0294 00446000
*  CALL IFCMSG(20,ADDR(MESSAGE)); /* GET ERROR MESSAGE       @G51DGJJ*/ 00447000
         LA    @06,MESSAGE                                         0295 00448000
         ST    @06,@AFTEMPS+8                                      0295 00449000
         L     @15,ADIFCMSG(,R2)                                   0295 00450000
         LA    @01,@AL00295                                        0295 00451000
         BALR  @14,@15                                             0295 00452000
*  IF (LRTKEY1 & 'F0'X) = MCHLG THEN                               0296 00453000
         MVC   @TS00001(1),LRTKEY1(R7)                             0296 00454000
         NI    @TS00001,X'F0'                                      0296 00455000
         CLI   @TS00001,X'10'                                      0296 00456000
         BNE   @RF00296                                            0296 00457000
*    MCFCCF20 = MCFL;                                      /*@G51DGJJ*/ 00458000
         MVC   MCFCCF20(3),MCFL                                    0297 00459000
*  ELSE                                                            0298 00460000
*    MCFCCF20 = CCFL;                                      /*@G51DGJJ*/ 00461000
         B     @RC00296                                            0298 00462000
@RF00296 MVC   MCFCCF20(3),CCFL                                    0298 00463000
*    PARM3 = TWO;                                          /*@G51DGJJ*/ 00464000
@RC00296 MVC   PARM3(4),@CF00073                                   0299 00465000
*    CALL CONVERT(MCHMOD,MOD20,PARM3);                     /*@G51DGJJ*/ 00466000
         MVC   @AL00001+4(8),@AL00300                              0300 00467000
         LA    @06,MCHMOD(,R7)                                     0300 00468000
         ST    @06,@AL00001                                        0300 00469000
         LA    @01,@AL00001                                        0300 00470000
         BAL   @14,CONVERT                                         0300 00471000
*    PARM3 = THREE;                                        /*@G51DGJJ*/ 00472000
         MVC   PARM3(4),@CF00075                                   0301 00473000
*    CALL CONVERT(MCHSER,SER20,PARM3);                     /*@G51DGJJ*/ 00474000
         MVC   @AL00001+4(8),@AL00302                              0302 00475000
         LA    @06,MCHSER(,R7)                                     0302 00476000
         ST    @06,@AL00001                                        0302 00477000
         LA    @01,@AL00001                                        0302 00478000
         BAL   @14,CONVERT                                         0302 00479000
*    PSN = PREVSEQN + 1;     /* SEQ. NO. OF 1ST MISSING FRAME AT END */ 00480000
         LA    @06,1                                               0303 00481000
         AL    @06,PREVSEQN                                        0303 00482000
         ST    @06,PSN                                             0303 00483000
*    CALL CONVBIN(PSN,BINOUT);                             /*@G51DGJJ*/ 00484000
         LA    @01,@AL00304                                        0304 00485000
         BAL   @14,CONVBIN                                         0304 00486000
*    FRAME20 = BINOUT(4:5);                                /*@G51DGJJ*/ 00487000
         MVC   FRAME20(2),BINOUT+3                                 0305 00488000
*    MESSAGET = MESSAGE;     /* MOVE MESSAGE TO TOURIST PRINT LINE   */ 00489000
         MVC   MESSAGET(58),MESSAGE                                0306 00490000
*    CALL PRINT1;            /* PRINT MESSAGE ON EREPPT      @G51DGJJ*/ 00491000
         BAL   @14,PRINT1                                          0307 00492000
*    CALL PRINT3;            /* PRINT MESSAGE ON TOURIST,SINGLE SPACE*/ 00493000
         BAL   @14,PRINT3                                          0308 00494000
*END;                                                      /*@G51DGJJ*/ 00495000
@EL00006 DS    0H                                                  0309 00496000
@EF00006 DS    0H                                                  0309 00497000
@ER00006 LM    @14,@12,@SA00006                                    0309 00498000
         BR    @14                                                 0309 00499000
*/********************************************************************/ 00500000
*/*                                                          @G51DGJJ*/ 00501000
*/* THESE ARE THE PRINT PROC'S                               @G51DGJJ*/ 00502000
*/*                                                          @G51DGJJ*/ 00503000
*PRINT1:   PROC;                                           /*@G51DGJJ*/ 00504000
PRINT1   STM   @14,@12,@SA00007                                    0310 00505000
*  CALL PRINT2;              /* PRINT MESSAGE ON EREPPT, SINGLE SPACE*/ 00506000
         BAL   @14,PRINT2                                          0311 00507000
*  MYLINECT = MYLINECT + LNESPACE;                         /*@G51DGJJ*/ 00508000
         L     @06,MYLINECT                                        0312 00509000
         AL    @06,LNESPACE                                        0312 00510000
         ST    @06,MYLINECT                                        0312 00511000
*  IF MYLINECT = LINECT1 THEN                                      0313 00512000
         C     @06,LINECT1                                         0313 00513000
         BNE   @RF00313                                            0313 00514000
*    DO;                                                   /*@G51DGJJ*/ 00515000
*      SPACING = UPSPACE;                                  /*@G51DGJJ*/ 00516000
         MVI   SPACING,X'89'                                       0315 00517000
*      CALL PRINT2;          /* PRINT MESSAGE ON EREPPT, EJECT PAGE  */ 00518000
         BAL   @14,PRINT2                                          0316 00519000
*      SPACING = SINGLE;                                   /*@G51DGJJ*/ 00520000
         MVI   SPACING,X'09'                                       0317 00521000
*      MYLINECT = ZERO;                                    /*@G51DGJJ*/ 00522000
         SLR   @06,@06                                             0318 00523000
         ST    @06,MYLINECT                                        0318 00524000
*    END;                                                  /*@G51DGJJ*/ 00525000
*END;                                                      /*@G51DGJJ*/ 00526000
@EL00007 DS    0H                                                  0320 00527000
@EF00007 DS    0H                                                  0320 00528000
@ER00007 LM    @14,@12,@SA00007                                    0320 00529000
         BR    @14                                                 0320 00530000
*PRINT2:    PROC;                                          /*@G51DGJJ*/ 00531000
PRINT2   STM   @14,@12,@SA00008                                    0321 00532000
*  PRINTADR = ADDR(PRINTLNE);                              /*@G51DGJJ*/ 00533000
         LA    @06,PRINTLNE                                        0322 00534000
         ST    @06,PRINTADR(,R2)                                   0322 00535000
*  CALL IOHND(RITEPRTR);     /* PRINT MESSAGE ON EREPPT, CARR. CNTRL */ 00536000
         L     @15,ADIOHND(,R2)                                    0323 00537000
         LA    @01,@AL00323                                        0323 00538000
         BALR  @14,@15                                             0323 00539000
*END;                                                      /*@G51DGJJ*/ 00540000
@EL00008 DS    0H                                                  0324 00541000
@EF00008 DS    0H                                                  0324 00542000
@ER00008 LM    @14,@12,@SA00008                                    0324 00543000
         BR    @14                                                 0324 00544000
*PRINT3:    PROC;                                          /*@G51DGJJ*/ 00545000
PRINT3   STM   @14,@12,@SA00009                                    0325 00546000
*  PRINTADR = ADDR(PRINTLNT);                              /*@G51DGJJ*/ 00547000
         LA    @06,PRINTLNT                                        0326 00548000
         ST    @06,PRINTADR(,R2)                                   0326 00549000
*  CALL IOHND(RITEPRTR);     /* PRINT MESSAGE ON TOURIST,SINGLE SPACE*/ 00550000
         L     @15,ADIOHND(,R2)                                    0327 00551000
         LA    @01,@AL00327                                        0327 00552000
         BALR  @14,@15                                             0327 00553000
*END;                                                      /*@G51DGJJ*/ 00554000
@EL00009 DS    0H                                                  0328 00555000
@EF00009 DS    0H                                                  0328 00556000
@ER00009 LM    @14,@12,@SA00009                                    0328 00557000
         BR    @14                                                 0328 00558000
*/*                                                          @G51DGJJ*/ 00559000
*/* CONVERT BINARY TO DECIMAL PRINTABLE                      @G51DGJJ*/ 00560000
*/*                                                          @G51DGJJ*/ 00561000
*/*     CALL CONVBIN(A,B);                                   @G51DGJJ*/ 00562000
*/*        WHERE,   A IS FIXED(31) - INPUT (BINARY NO.)      @G51DGJJ*/ 00563000
*/*                 B IS CHAR(5)   - OUTPUT (DATA RIGHT-JUSTIFIED)   */ 00564000
*/*                                                          @G51DGJJ*/ 00565000
*CONVBIN: PROC(BINWORD,DECADDR);                           /*@G51DGJJ*/ 00566000
CONVBIN  STM   @14,@12,12(@13)                                     0329 00567000
         MVC   @PC00010(8),0(@01)                                  0329 00568000
* DCL  BINWORD FIXED(31);                                  /*@G51DGJJ*/ 00569000
* DCL  DECADDR CHAR(20);                                   /*@G51DGJJ*/ 00570000
* RESPECIFY (R8) RESTRICTED;                               /*@G51DGJJ*/ 00571000
* R8 = BINWORD;                  /*LOAD THE ITEM TO CONVERT  @G51DGJJ*/ 00572000
         L     @06,@PC00010                                        0333 00573000
         L     R8,BINWORD(,@06)                                    0333 00574000
* CVD(R8,DBLWORD);                                         /*@G51DGJJ*/ 00575000
         CVD   R8,DBLWORD                                          0334 00576000
* UNPK(WORK(1:8),DBLWORD);                                 /*@G51DGJJ*/ 00577000
         UNPK  WORK(8),DBLWORD(8)                                  0335 00578000
* WORK(8) = WORK(8) | FOXZERO;                             /*@G51DGJJ*/ 00579000
         OI    WORK+7,X'F0'                                        0336 00580000
* SWITCH1 = OFF;                                           /*@G51DGJJ*/ 00581000
         NI    SWITCH1,B'01111111'                                 0337 00582000
* DO L = 1 BY 1 TO 7 WHILE(SWITCH1 = OFF);                 /*@G51DGJJ*/ 00583000
         LA    @09,1                                               0338 00584000
         ST    @09,L                                               0338 00585000
@DL00338 TM    SWITCH1,B'10000000'                                 0338 00586000
         BNZ   @DC00338                                            0338 00587000
*  IF WORKOVER(L) = FOXZERO THEN /*REMOVE THE LEADING ZEROS  @G51DGJJ*/ 00588000
         LA    @06,WORKOVER-1(@09)                                 0339 00589000
         CLI   0(@06),X'F0'                                        0339 00590000
         BNE   @RF00339                                            0339 00591000
*    WORKOVER(L) = BLANK;        /*REPLACE WITH A BLANK CHARACTER*/     00592000
         LA    @06,WORKOVER-1(@09)                                 0340 00593000
         MVI   0(@06),C' '                                         0340 00594000
*   ELSE                                                           0341 00595000
*    SWITCH1 = ON;               /*TELL LOOP THE END OF LEADING ZEROS*/ 00596000
         B     @RC00339                                            0341 00597000
@RF00339 OI    SWITCH1,B'10000000'                                 0341 00598000
* END;                                                     /*@G51DGJJ*/ 00599000
@RC00339 LA    @09,1                                               0342 00600000
         AL    @09,L                                               0342 00601000
         ST    @09,L                                               0342 00602000
         CH    @09,@CH00082                                        0342 00603000
         BNH   @DL00338                                            0342 00604000
@DC00338 DS    0H                                                  0343 00605000
* DECADDR(1:5) = WORK(4:8);      /* MOVE THE DATA TO THE OUTPUT LINE */ 00606000
         L     @09,@PC00010+4                                      0343 00607000
         MVC   DECADDR(5,@09),WORK+3                               0343 00608000
* RESPECIFY (R8) UNRESTRICTED;                             /*@G51DGJJ*/ 00609000
*END;                                                      /*@G51DGJJ*/ 00610000
@EL00010 DS    0H                                                  0345 00611000
@EF00010 DS    0H                                                  0345 00612000
@ER00010 LM    @14,@12,12(@13)                                     0345 00613000
         BR    @14                                                 0345 00614000
* /*                                                         @G51DGJJ*/ 00615000
* /* CONVERT HEX CHARACTERS TO PRINTABLE                     @G51DGJJ*/ 00616000
* /*                                                         @G51DGJJ*/ 00617000
* /*     CALL CONVERT(A,B,C);                                @G51DGJJ*/ 00618000
* /*        WHERE,   A IS CHAR     - INPUT (HEX CHAR. STRING)        */ 00619000
* /*                 B IS CHAR     - OUTPUT (DATA LEFT-JUSTIFIED)    */ 00620000
* /*                 C IS FIXED(31)- INPUT (NO. OF LEFT-MOST BYTES   */ 00621000
* /*                                        TO CONVERT)      @G51DGJJ*/ 00622000
* /*                                                         @G51DGJJ*/ 00623000
*CONVERT: PROC(NEXTBYTE,ADDNUM,LENNUM);                    /*@G51DGJJ*/ 00624000
CONVERT  STM   @14,@12,12(@13)                                     0346 00625000
         MVC   @PC00011(12),0(@01)                                 0346 00626000
* DCL NEXTBYTE  CHAR(11);                                  /*@G51DGJJ*/ 00627000
* DCL ADDNUM    CHAR(133);                                 /*@G51DGJJ*/ 00628000
* DCL LENNUM    FIXED(31);        /* HOW MUCH TO CONVERT     @G51DGJJ*/ 00629000
* RESPECIFY (R8,R9) RESTRICTED;                            /*@G51DGJJ*/ 00630000
* DO LC= LENNUM BY -1 TO ONE;                              /*@G51DGJJ*/ 00631000
         L     @06,@PC00011+8                                      0351 00632000
         L     LC,LENNUM(,@06)                                     0351 00633000
         B     @DE00351                                            0351 00634000
@DL00351 DS    0H                                                  0352 00635000
*  R8 = NEXTBYTE(LC);             /* LOAD THE NEXT BYTE      @G51DGJJ*/ 00636000
         L     @06,@PC00011                                        0352 00637000
         BCTR  @06,0                                               0352 00638000
         SLR   R8,R8                                               0352 00639000
         IC    R8,NEXTBYTE(LC,@06)                                 0352 00640000
*  JC= TWO * LC;                  /* INDEX FOR STORING CONVERTED 1/2 */ 00641000
         LR    JC,LC                                               0353 00642000
         ALR   JC,JC                                               0353 00643000
*                                 /* BYTE.  INPUT IS 2 CHARS @G51DGJJ*/ 00644000
*  SRDL(R8,FOUR);                 /* SPLIT THE BYTE IN HALF  @G51DGJJ*/ 00645000
         SRDL  R8,4                                                0354 00646000
*  SRL(R9,28);                    /* RIGHT JUSTIFY SPLIT HALF BYTE   */ 00647000
         SRL   R9,28                                               0355 00648000
*  R9 = R9 + ONE;                                          /*@G51DGJJ*/ 00649000
         LA    @06,1                                               0356 00650000
         ALR   R9,@06                                              0356 00651000
*  R8 = R8 + ONE;                                          /*@G51DGJJ*/ 00652000
         ALR   R8,@06                                              0357 00653000
*  ADDNUM(JC-ONE)= CHARS(R8);     /* CHARS IS 16 CHAR STRING FOR     */ 00654000
         L     @06,@PC00011+4                                      0358 00655000
         LR    @01,@06                                             0358 00656000
         ALR   @01,JC                                              0358 00657000
         BCTR  @01,0                                               0358 00658000
         BCTR  @01,0                                               0358 00659000
         LA    @15,CHARS-1(R8)                                     0358 00660000
         MVC   ADDNUM(1,@01),0(@15)                                0358 00661000
*  ADDNUM(JC)    = CHARS(R9);     /* CONVERTING  HEX NUMS TO PRINT   */ 00662000
         ALR   @06,JC                                              0359 00663000
         BCTR  @06,0                                               0359 00664000
         LA    @01,CHARS-1(R9)                                     0359 00665000
         MVC   ADDNUM(1,@06),0(@01)                                0359 00666000
* END;                                                     /*@G51DGJJ*/ 00667000
         BCTR  LC,0                                                0360 00668000
@DE00351 LTR   LC,LC                                               0360 00669000
         BP    @DL00351                                            0360 00670000
*RESPECIFY (R8,R9) UNRESTRICTED;                           /*@G51DGJJ*/ 00671000
*END;                                                      /*@G51DGJJ*/ 00672000
@EL00011 DS    0H                                                  0362 00673000
@EF00011 DS    0H                                                  0362 00674000
@ER00011 LM    @14,@12,12(@13)                                     0362 00675000
         BR    @14                                                 0362 00676000
*/********************************************************************/ 00677000
*/*                                                          @G51DGJJ*/ 00678000
*/* THIS PROC PRINTS A HEX DUMP OF THE FRAME RECORD -        @G51DGJJ*/ 00679000
*/* HEADER + 24 LINES AT 80 CHARS PER LINE.                  @G51DGJJ*/ 00680000
*/*                                                          @G51DGJJ*/ 00681000
*HEXDUMPF:  PROC;                                          /*@G51DGJJ*/ 00682000
HEXDUMPF STM   @14,@12,@SA00012                                    0363 00683000
*  DUMPMSG = FRMHD;                                        /*@G51DGJJ*/ 00684000
         MVC   DUMPMSG(18),FRMHD                                   0364 00685000
*  CALL PRINT1;              /* PRINT HEADER MESSAGE         @G51DGJJ*/ 00686000
         BAL   @14,PRINT1                                          0365 00687000
*  FRMREG = R5;              /* START OF RECORD - HEADER     @G51DGJJ*/ 00688000
         ST    R5,FRMREG                                           0366 00689000
*  NUMBER = 24;                                            /*@G51DGJJ*/ 00690000
         MVC   NUMBER(4),@CF00227                                  0367 00691000
*                            /* CONVERT HEADER               @G51DGJJ*/ 00692000
*  CALL CONVERT(FRMRECD,PRNTAREA,NUMBER);                  /*@G51DGJJ*/ 00693000
         MVC   @AL00001+4(8),@AL00368                              0368 00694000
         L     @06,FRMREG                                          0368 00695000
         ST    @06,@AL00001                                        0368 00696000
         LA    @01,@AL00001                                        0368 00697000
         BAL   @14,CONVERT                                         0368 00698000
*  CALL PRINT1;              /* PRINT HEADER                 @G51DGJJ*/ 00699000
         BAL   @14,PRINT1                                          0369 00700000
*  RCL = RECLNGTH - 24;                                    /*@G51DGJJ*/ 00701000
         LA    @06,24                                              0370 00702000
         LH    @04,RECLNGTH(,R2)                                   0370 00703000
         SLR   @04,@06                                             0370 00704000
         ST    @04,RCL                                             0370 00705000
*  FRMREG = R5 + 24;         /* START BEYOND HEADER          @G51DGJJ*/ 00706000
         ALR   @06,R5                                              0371 00707000
         ST    @06,FRMREG                                          0371 00708000
*  NUMBER = 40;                                            /*@G51DGJJ*/ 00709000
         LA    @06,40                                              0372 00710000
         ST    @06,NUMBER                                          0372 00711000
*  DO J = 40 BY 40 TO RCL;                                 /*@G51DGJJ*/ 00712000
         ST    @06,J                                               0373 00713000
         B     @DE00373                                            0373 00714000
@DL00373 DS    0H                                                  0374 00715000
*                            /* CONVERT REST OF RECORD       @G51DGJJ*/ 00716000
*    CALL CONVERT(FRMRECD,PRNTAREA,NUMBER);                /*@G51DGJJ*/ 00717000
         MVC   @AL00001+4(8),@AL00374                              0374 00718000
         L     @06,FRMREG                                          0374 00719000
         ST    @06,@AL00001                                        0374 00720000
         LA    @01,@AL00001                                        0374 00721000
         BAL   @14,CONVERT                                         0374 00722000
*    CALL PRINT1;            /* PRINT                        @G51DGJJ*/ 00723000
         BAL   @14,PRINT1                                          0375 00724000
*    FRMREG = FRMREG + 40;   /* BUMP FRAME POINTER           @G51DGJJ*/ 00725000
         LA    @06,40                                              0376 00726000
         AL    @06,FRMREG                                          0376 00727000
         ST    @06,FRMREG                                          0376 00728000
*  END;                                                    /*@G51DGJJ*/ 00729000
         LA    @06,40                                              0377 00730000
         AL    @06,J                                               0377 00731000
         ST    @06,J                                               0377 00732000
@DE00373 C     @06,RCL                                             0377 00733000
         BNH   @DL00373                                            0377 00734000
*END;                                                      /*@G51DGJJ*/ 00735000
@EL00012 DS    0H                                                  0378 00736000
@EF00012 DS    0H                                                  0378 00737000
@ER00012 LM    @14,@12,@SA00012                                    0378 00738000
         BR    @14                                                 0378 00739000
*/********************************************************************/ 00740000
*/*                                                          @G51DGJJ*/ 00741000
*/* THIS PROC PRINTS A FORMATTED HEX DUMP OF THE LOG ERROR RECORD.   */ 00742000
*/* DATA IS CONVERTED ON A LINE BASIS INTO A BUFFER(CNVRTBUF).       */ 00743000
*/* A PRINT LINE(PRNTAREA) IS BUILT BY SEQUENTIALLY EXTRACTING       */ 00744000
*/* 8-BYTE DATA GROUPS FROM THE CONVERT BUFFER AND STORING   @G51DGJJ*/ 00745000
*/* THEM INTO THE PRINT LINE AT THE PRINT POSITIONS DICTATED @G51DGJJ*/ 00746000
*/* BY THE LOCATION OF AN OVERLAY DATA STRUCTURE. THE OVERLAY        */ 00747000
*/* ADVANCES ALONG THE PRINT LINE WITH EACH EXTRACTION.      @G51DGJJ*/ 00748000
*/*                                                          @G51DGJJ*/ 00749000
*HEXDUMPL:  PROC;                                          /*@G51DGJJ*/ 00750000
HEXDUMPL STM   @14,@12,@SA00013                                    0379 00751000
*  DUMPMSG = LOGHD1;                                       /*@G51DGJJ*/ 00752000
         MVC   DUMPMSG(18),LOGHD1                                  0380 00753000
*  CALL PRINT1;              /* PRINT HEADER MESSAGE         @G51DGJJ*/ 00754000
         BAL   @14,PRINT1                                          0381 00755000
*  DUMPMSG = LOGHD2;         /* SET UP 'HEADER' LABEL        @G51DGJJ*/ 00756000
         MVI   DUMPMSG+10,C' '                                     0382 00757000
         MVC   DUMPMSG+11(7),DUMPMSG+10                            0382 00758000
         MVC   DUMPMSG(10),LOGHD2                                  0382 00759000
*  LGREG = R7;               /* START OF RECORD - HEADER     @G51DGJJ*/ 00760000
         ST    R7,LGREG                                            0383 00761000
*  NUMBER = 24;                                            /*@G51DGJJ*/ 00762000
         MVC   NUMBER(4),@CF00227                                  0384 00763000
*                            /* CONVERT HEADER - HEX TO EBCDIC       */ 00764000
*  CALL CONVERT(LOGRECD,CNVRTBUF,NUMBER);                  /*@G51DGJJ*/ 00765000
         MVC   @AL00001+4(8),@AL00385                              0385 00766000
         L     @06,LGREG                                           0385 00767000
         ST    @06,@AL00001                                        0385 00768000
         LA    @01,@AL00001                                        0385 00769000
         BAL   @14,CONVERT                                         0385 00770000
*  GROUP = ADDR(PRNTAREA) + 13; /* SET PRINT AREA OVERLAY    @G51DGJJ*/ 00771000
         LA    @06,PRNTAREA                                        0386 00772000
         AH    @06,@CH01216                                        0386 00773000
         ST    @06,GROUP                                           0386 00774000
*  K = 1;                       /* SET BYTE INDEX            @G51DGJJ*/ 00775000
         LA    @06,1                                               0387 00776000
         ST    @06,K                                               0387 00777000
*  DO J = 1 TO 4;             /* MOVE TO PRINT AREA          @G51DGJJ*/ 00778000
         ST    @06,J                                               0388 00779000
@DL00388 DS    0H                                                  0389 00780000
*    PTGROUP = CNVRTBUF(K:K+7);                            /*@G51DGJJ*/ 00781000
         L     @04,GROUP                                           0389 00782000
         L     @03,K                                               0389 00783000
         LA    @01,CNVRTBUF-1(@03)                                 0389 00784000
         MVC   PTGROUP(8,@04),0(@01)                               0389 00785000
*    GROUP = GROUP + 12;      /* BUMP OVERLAY                @G51DGJJ*/ 00786000
         AH    @04,@CH00035                                        0390 00787000
         ST    @04,GROUP                                           0390 00788000
*    K = K + 8;                                            /*@G51DGJJ*/ 00789000
         AH    @03,@CH00065                                        0391 00790000
         ST    @03,K                                               0391 00791000
*  END;                                                    /*@G51DGJJ*/ 00792000
         AH    @06,@CH00054                                        0392 00793000
         ST    @06,J                                               0392 00794000
         CH    @06,@CH00063                                        0392 00795000
         BNH   @DL00388                                            0392 00796000
*  GROUP = GROUP + 4;         /* SET EXTRA  SPACING          @G51DGJJ*/ 00797000
         LA    @06,4                                               0393 00798000
         AL    @06,GROUP                                           0393 00799000
         ST    @06,GROUP                                           0393 00800000
*  DO J = 1 TO 2;                                          /*@G51DGJJ*/ 00801000
         LA    @06,1                                               0394 00802000
         ST    @06,J                                               0394 00803000
@DL00394 DS    0H                                                  0395 00804000
*    PTGROUP = CNVRTBUF(K:K+7); /* MOVE CONVERT. DATA TO PRINT AREA  */ 00805000
         L     @04,GROUP                                           0395 00806000
         L     @03,K                                               0395 00807000
         LA    @01,CNVRTBUF-1(@03)                                 0395 00808000
         MVC   PTGROUP(8,@04),0(@01)                               0395 00809000
*    GROUP = GROUP + 12;        /* BUMP OVERLAY              @G51DGJJ*/ 00810000
         AH    @04,@CH00035                                        0396 00811000
         ST    @04,GROUP                                           0396 00812000
*    K = K + 8;                                            /*@G51DGJJ*/ 00813000
         AH    @03,@CH00065                                        0397 00814000
         ST    @03,K                                               0397 00815000
*  END;                                                    /*@G51DGJJ*/ 00816000
         AH    @06,@CH00054                                        0398 00817000
         ST    @06,J                                               0398 00818000
         CH    @06,@CH00073                                        0398 00819000
         BNH   @DL00394                                            0398 00820000
*  CALL PRINT1;              /* PRINT HEADER                 @G51DGJJ*/ 00821000
         BAL   @14,PRINT1                                          0399 00822000
*  CALL PRINT1;              /* PRINT BLANK LINE             @G51DGJJ*/ 00823000
         BAL   @14,PRINT1                                          0400 00824000
*  LINEADDR = 0;             /* ADDRESS OF 1ST BYTE IN LINE  @G51DGJJ*/ 00825000
         SLR   @06,@06                                             0401 00826000
         STH   @06,LINEADDR                                        0401 00827000
*  LGREG = R7 + 24;          /* START BEYOND HEADER          @G51DGJJ*/ 00828000
         LA    @06,24                                              0402 00829000
         LR    @04,R7                                              0402 00830000
         ALR   @04,@06                                             0402 00831000
         ST    @04,LGREG                                           0402 00832000
*  RCL = RECLNGT1 - 24;                                    /*@G51DGJJ*/ 00833000
         LCR   @06,@06                                             0403 00834000
         AL    @06,RECLNGT1(,R2)                                   0403 00835000
         ST    @06,RCL                                             0403 00836000
*  DO L = 32 BY 32 TO RCL;                                 /*@G51DGJJ*/ 00837000
         LA    @06,32                                              0404 00838000
         ST    @06,L                                               0404 00839000
         B     @DE00404                                            0404 00840000
@DL00404 DS    0H                                                  0405 00841000
*    CALL CNVTPRNT;          /* CONVERT  REST OF RECORD TO EBCDIC    */ 00842000
         BAL   @14,CNVTPRNT                                        0405 00843000
*    CALL PRINT1;                                          /*@G51DGJJ*/ 00844000
         BAL   @14,PRINT1                                          0406 00845000
*    LGREG = LGREG + 32;     /* BUMP BYTE POINTER            @G51DGJJ*/ 00846000
         LA    @06,32                                              0407 00847000
         AL    @06,LGREG                                           0407 00848000
         ST    @06,LGREG                                           0407 00849000
*  END;                                                    /*@G51DGJJ*/ 00850000
         LA    @06,32                                              0408 00851000
         AL    @06,L                                               0408 00852000
         ST    @06,L                                               0408 00853000
@DE00404 C     @06,RCL                                             0408 00854000
         BNH   @DL00404                                            0408 00855000
*  NUMBER = RCL - (L - 32);                                /*@G51DGJJ*/ 00856000
         LA    @06,32                                              0409 00857000
         SL    @06,L                                               0409 00858000
         AL    @06,RCL                                             0409 00859000
         ST    @06,NUMBER                                          0409 00860000
*  IF NUMBER > ZERO THEN                                           0410 00861000
         LTR   @06,@06                                             0410 00862000
         BNP   @RF00410                                            0410 00863000
*    DO;                                                   /*@G51DGJJ*/ 00864000
*      CALL CNVTPRNT;       /* CLEAN UP                      @G51DGJJ*/ 00865000
         BAL   @14,CNVTPRNT                                        0412 00866000
*      CALL PRINT1;                                        /*@G51DGJJ*/ 00867000
         BAL   @14,PRINT1                                          0413 00868000
*    END;                                                  /*@G51DGJJ*/ 00869000
*END;                                                      /*@G51DGJJ*/ 00870000
@EL00013 DS    0H                                                  0415 00871000
@EF00013 DS    0H                                                  0415 00872000
@ER00013 LM    @14,@12,@SA00013                                    0415 00873000
         BR    @14                                                 0415 00874000
*CNVTPRNT:  PROC;                                          /*@G51DGJJ*/ 00875000
CNVTPRNT STM   @14,@12,@SA00014                                    0416 00876000
*  NUMBER = TWO;                                           /*@G51DGJJ*/ 00877000
         MVC   NUMBER(4),@CF00073                                  0417 00878000
*  CALL CONVERT(HEXA,PTADDR,NUMBER);                       /*@G51DGJJ*/ 00879000
         MVC   @AL00001(12),@AL00418                               0418 00880000
         LA    @06,PRNTAREA                                        0418 00881000
         LA    @06,PTADDR+7(,@06)                                  0418 00882000
         ST    @06,@AL00001+4                                      0418 00883000
         LA    @01,@AL00001                                        0418 00884000
         BAL   @14,CONVERT                                         0418 00885000
*  LINEADDR = LINEADDR + 32;   /* INCREMENT BYTE ADDRESS     @G51DGJJ*/ 00886000
         LA    @06,32                                              0419 00887000
         LH    @04,LINEADDR                                        0419 00888000
         ALR   @04,@06                                             0419 00889000
         STH   @04,LINEADDR                                        0419 00890000
*  CNVRTBUF = BLANKS;                                      /*@G51DGJJ*/ 00891000
         MVC   CNVRTBUF(64),BLANKS                                 0420 00892000
*  NUMBER = 32;                                            /*@G51DGJJ*/ 00893000
         ST    @06,NUMBER                                          0421 00894000
*  CALL CONVERT(LOGRECD,CNVRTBUF,NUMBER); /* CONVERT 32 BYTES        */ 00895000
         MVC   @AL00001+4(8),@AL00422                              0422 00896000
         L     @06,LGREG                                           0422 00897000
         ST    @06,@AL00001                                        0422 00898000
         LA    @01,@AL00001                                        0422 00899000
         BAL   @14,CONVERT                                         0422 00900000
*  GROUP = ADDR(PRNTAREA) + 13;                            /*@G51DGJJ*/ 00901000
         LA    @06,PRNTAREA                                        0423 00902000
         AH    @06,@CH01216                                        0423 00903000
         ST    @06,GROUP                                           0423 00904000
*  K = 1;                                                  /*@G51DGJJ*/ 00905000
         LA    @06,1                                               0424 00906000
         ST    @06,K                                               0424 00907000
*  DO M = 1 TO 2;                                          /*@G51DGJJ*/ 00908000
         ST    @06,M                                               0425 00909000
@DL00425 DS    0H                                                  0426 00910000
*    DO J = 1 TO 4;                                        /*@G51DGJJ*/ 00911000
         LA    @06,1                                               0426 00912000
         ST    @06,J                                               0426 00913000
@DL00426 DS    0H                                                  0427 00914000
*      PTGROUP = CNVRTBUF(K:K+7);                          /*@G51DGJJ*/ 00915000
         L     @04,GROUP                                           0427 00916000
         L     @03,K                                               0427 00917000
         LA    @01,CNVRTBUF-1(@03)                                 0427 00918000
         MVC   PTGROUP(8,@04),0(@01)                               0427 00919000
*      GROUP = GROUP + 12;           /* BUMP OVERLAY         @G51DGJJ*/ 00920000
         AH    @04,@CH00035                                        0428 00921000
         ST    @04,GROUP                                           0428 00922000
*      K = K + 8;                                          /*@G51DGJJ*/ 00923000
         AH    @03,@CH00065                                        0429 00924000
         ST    @03,K                                               0429 00925000
*    END;                                                  /*@G51DGJJ*/ 00926000
         AH    @06,@CH00054                                        0430 00927000
         ST    @06,J                                               0430 00928000
         CH    @06,@CH00063                                        0430 00929000
         BNH   @DL00426                                            0430 00930000
*    GROUP = GROUP + 4;              /* SET EXTRA SPACING    @G51DGJJ*/ 00931000
         LA    @06,4                                               0431 00932000
         AL    @06,GROUP                                           0431 00933000
         ST    @06,GROUP                                           0431 00934000
*  END;                                                    /*@G51DGJJ*/ 00935000
         LA    @06,1                                               0432 00936000
         AL    @06,M                                               0432 00937000
         ST    @06,M                                               0432 00938000
         CH    @06,@CH00073                                        0432 00939000
         BNH   @DL00425                                            0432 00940000
*END;                                                      /*@G51DGJJ*/ 00941000
@EL00014 DS    0H                                                  0433 00942000
@EF00014 DS    0H                                                  0433 00943000
@ER00014 LM    @14,@12,@SA00014                                    0433 00944000
         BR    @14                                                 0433 00945000
*/********************************************************************/ 00946000
*/*                                                          @G51DGJJ*/ 00947000
*/* THIS PROC PRINTS A 'NO FRAMES AVAILABLE' MESSAGE         @G51DGJJ*/ 00948000
*/* ON TOURIST WHEN THE CPU SERIAL NOS. OF THE ERROR         @G51DGJJ*/ 00949000
*/* RECORD AND THE FRAME DISAGREE.                           @G51DGJJ*/ 00950000
*/*                                                          @G51DGJJ*/ 00951000
*NFRAMES:   PROC;                                          /*@G51DGJJ*/ 00952000
NFRAMES  STM   @14,@12,@SA00015                                    0434 00953000
*  CALL IFCMSG(79,ADDR(MESSAGE));                          /*@G51DGJJ*/ 00954000
         LA    @06,MESSAGE                                         0435 00955000
         ST    @06,@AFTEMPS+12                                     0435 00956000
         L     @15,ADIFCMSG(,R2)                                   0435 00957000
         LA    @01,@AL00435                                        0435 00958000
         BALR  @14,@15                                             0435 00959000
*  IF (LRTKEY1 & 'F0'X) = MCHLG THEN                               0436 00960000
         MVC   @TS00001(1),LRTKEY1(R7)                             0436 00961000
         NI    @TS00001,X'F0'                                      0436 00962000
         CLI   @TS00001,X'10'                                      0436 00963000
         BNE   @RF00436                                            0436 00964000
*    MCHCCH79 = MCHL;                                      /*@G51DGJJ*/ 00965000
         MVC   MCHCCH79(3),MCHL                                    0437 00966000
*  ELSE                                                            0438 00967000
*    MCHCCH79 = CCHL;                                      /*@G51DGJJ*/ 00968000
         B     @RC00436                                            0438 00969000
@RF00436 MVC   MCHCCH79(3),CCHL                                    0438 00970000
*    PARM3 = TWO;                                          /*@G51DGJJ*/ 00971000
@RC00436 MVC   PARM3(4),@CF00073                                   0439 00972000
*    CALL CONVERT(LRTMODEL,MOD79,PARM3);                   /*@G51DGJJ*/ 00973000
         MVC   @AL00001+4(8),@AL00440                              0440 00974000
         LA    @06,LRTMODEL(,R7)                                   0440 00975000
         ST    @06,@AL00001                                        0440 00976000
         LA    @01,@AL00001                                        0440 00977000
         BAL   @14,CONVERT                                         0440 00978000
*    PARM3 = THREE;                                        /*@G51DGJJ*/ 00979000
         MVC   PARM3(4),@CF00075                                   0441 00980000
*    CALL CONVERT(LRTCPUS,SER79,PARM3);                    /*@G51DGJJ*/ 00981000
         MVC   @AL00001+4(8),@AL00442                              0442 00982000
         LA    @06,LRTCPUS(,R7)                                    0442 00983000
         ST    @06,@AL00001                                        0442 00984000
         LA    @01,@AL00001                                        0442 00985000
         BAL   @14,CONVERT                                         0442 00986000
*    MESSAGET = MESSAGE;                                   /*@G51DGJJ*/ 00987000
         MVC   MESSAGET(58),MESSAGE                                0443 00988000
*    CALL PRINT3;                                          /*@G51DGJJ*/ 00989000
         BAL   @14,PRINT3                                          0444 00990000
*END;                                                      /*@G51DGJJ*/ 00991000
@EL00015 DS    0H                                                  0445 00992000
@EF00015 DS    0H                                                  0445 00993000
@ER00015 LM    @14,@12,@SA00015                                    0445 00994000
         BR    @14                                                 0445 00995000
*/********************************************************************/ 00996000
*/*                                                          @G51DGJJ*/ 00997000
*/* THIS PROC PRINTS AN ATTENTION MESSAGE ON EREPT TO        @G51DGJJ*/ 00998000
*/* INDICATE THAT THE ERROR RECORD IS BEING EDITED BY        @G51DGJJ*/ 00999000
*/* A SET OF FRAMES FOR A DIFFERENT CPU SERIAL NO.           @G51DGJJ*/ 01000000
*/*                                                          @G51DGJJ*/ 01001000
*NMTCHSER:  PROC;                                          /*@G51DGJJ*/ 01002000
NMTCHSER STM   @14,@12,@SA00016                                    0446 01003000
*  MESSAGE = SERMSG;                                       /*@G51DGJJ*/ 01004000
         MVI   MESSAGE+50,C' '                                     0447 01005000
         MVC   MESSAGE+51(7),MESSAGE+50                            0447 01006000
         MVC   MESSAGE(50),SERMSG                                  0447 01007000
*  CALL PRINT1;                                            /*@G51DGJJ*/ 01008000
         BAL   @14,PRINT1                                          0448 01009000
*END;                                                      /*@G51DGJJ*/ 01010000
@EL00016 DS    0H                                                  0449 01011000
@EF00016 DS    0H                                                  0449 01012000
@ER00016 LM    @14,@12,@SA00016                                    0449 01013000
         BR    @14                                                 0449 01014000
*/********************************************************************/ 01015000
*/*                                                          @G51DGJJ*/ 01016000
*/* THIS PROC EDITS AND PRINTS THE EXTENDED LOGOUT AND       @G51DGJJ*/ 01017000
*/* CHANNEL LOGOUT OF THE MCH AND CCH ERROR RECORDS,         @G51DGJJ*/ 01018000
*/* RESPECTIVELY. THIS IS DONE BY INTERPRETING A FRAME       @G51DGJJ*/ 01019000
*/* (FROM A SET OF FRAMES) OF EDIT INFORMATION WHICH         @G51DGJJ*/ 01020000
*/* CONSISTS OF TEXT AND COMMANDS. TEXT IS HEADER            @G51DGJJ*/ 01021000
*/* INFORMATION AND LOG DATA LABELS. COMMANDS SPECIFY        @G51DGJJ*/ 01022000
*/* THE LOCATION OF THE LOG DATA WITHIN THE ERROR            @G51DGJJ*/ 01023000
*/* RECORD, HOW MUCH DATA TO RETRIEVE, AND HOW TO FORMAT     @G51DGJJ*/ 01024000
*/* IT FOR DISPLAY.                                          @G51DGJJ*/ 01025000
*/*                                                          @G51DGJJ*/ 01026000
*/* THE FOLLOWING IS A DESCRIPTION OF THE OVERALL PROGRAM    @G51DGJJ*/ 01027000
*/* LOGIC WHICH IS PATTERNED AFTER THE SVP MICRO-PROGRAM     @G51DGJJ*/ 01028000
*/* WHICH DISPLAYS FRAMES ON THE CONSOLE CRT.                @G51DGJJ*/ 01029000
*/*                                                          @G51DGJJ*/ 01030000
*/*  FOR EACH SCAN LINE IN THE FRAME:                        @G51DGJJ*/ 01031000
*/*                                                          @G51DGJJ*/ 01032000
*/*    - MOVE SCAN LINE TO PRINT BUFFER. INTERPRET SCAN      @G51DGJJ*/ 01033000
*/*      CODES,IF NECESSARY,IN PRINT BUFFER. OTHERWISE,      @G51DGJJ*/ 01034000
*/*      TRANSLATE PRINT BUFFER, PRINT IT, GET NEXT SCAN     @G51DGJJ*/ 01035000
*/*      LINE.                                               @G51DGJJ*/ 01036000
*/*    - INTERPRET:                                          @G51DGJJ*/ 01037000
*/*        - REPLACE COMMANDS WITH BLANKS.                   @G51DGJJ*/ 01038000
*/*        - FETCH LOG DATA AND FORMAT INTO PRINT BUFFER     @G51DGJJ*/ 01039000
*/*          AS SPECIFIED BY COMMANDS.                       @G51DGJJ*/ 01040000
*/*        - SKIP OVER TEXT.                                 @G51DGJJ*/ 01041000
*/*        - TRANSLATE PRINT BUFFER, PRINT IT, GET NEXT      @G51DGJJ*/ 01042000
*/*          SCAN LINE                                       @G51DGJJ*/ 01043000
*/*                                                          @G51DGJJ*/ 01044000
*INTRPRET:  PROC;                                          /*@G51DGJJ*/ 01045000
INTRPRET STM   @14,@12,@SA00017                                    0450 01046000
*  HXDMPFRM = OFF;                                         /*@G51DGJJ*/ 01047000
         NI    HXDMPFRM,B'11111011'                                0451 01048000
*  ENDSCN = OFF;                                           /*@G51DGJJ*/ 01049000
         NI    ENDSCN,B'01111111'                                  0452 01050000
*  FRMPOINT = R5 + 24;       /* SET FRAME POINTER TO FIRST   @G51DGJJ*/ 01051000
         LA    @06,24                                              0453 01052000
         ALR   @06,R5                                              0453 01053000
         ST    @06,FRMPOINT                                        0453 01054000
*                            /* SCAN LINE                    @G51DGJJ*/ 01055000
*  IF FRAMECHR = T1 |                                              0454 01056000
*     FRAMECHR = T2 |                                              0454 01057000
*     FRAMECHR = T7 THEN                                           0454 01058000
         CLI   FRAMECHR(@06),X'E9'                                 0454 01059000
         BE    @RT00454                                            0454 01060000
         CLI   FRAMECHR(@06),X'EA'                                 0454 01061000
         BE    @RT00454                                            0454 01062000
         CLI   FRAMECHR(@06),X'EF'                                 0454 01063000
         BNE   @RF00454                                            0454 01064000
@RT00454 DS    0H                                                  0455 01065000
*    DO;                     /* LOG TYPE SCAN CODE ERROR     @G51DGJJ*/ 01066000
*      HXDMPFRM = ON;        /* INDICATE HEX DUMP FRAME      @G51DGJJ*/ 01067000
         OI    HXDMPFRM,B'00000100'                                0456 01068000
*      CALL LOGTPERR;        /* PRINT ERROR MESSAGE          @G51DGJJ*/ 01069000
         BAL   @14,LOGTPERR                                        0457 01070000
*    END;                                                  /*@G51DGJJ*/ 01071000
*  ELSE                                                            0459 01072000
*    DO LINECTR = 1 TO 24;                                 /*@G51DGJJ*/ 01073000
         B     @RC00454                                            0459 01074000
@RF00454 LA    @06,1                                               0459 01075000
         ST    @06,LINECTR                                         0459 01076000
@DL00459 DS    0H                                                  0460 01077000
*      LINEPTR = ADDR(PRTBUFF);    /* SET POINTER TO START   @G51DGJJ*/ 01078000
         LA    @06,PRTBUFF                                         0460 01079000
         ST    @06,LINEPTR                                         0460 01080000
*                                  /* OF PRINT BUFFER        @G51DGJJ*/ 01081000
*      PRTBUFF = FRMCHARS;         /* MOVE NEXT SCAN LINE    @G51DGJJ*/ 01082000
         L     @06,FRMPOINT                                        0461 01083000
         MVC   PRTBUFF(80),FRMCHARS(@06)                           0461 01084000
*                                  /* TO PRINT BUFFER        @G51DGJJ*/ 01085000
*      IF ENDSCN = OFF THEN                                        0462 01086000
         TM    ENDSCN,B'10000000'                                  0462 01087000
         BNZ   @RF00462                                            0462 01088000
*        CALL LINEPREP;       /* INTERPRET 1 SCAN LINE       @G51DGJJ*/ 01089000
         BAL   @14,LINEPREP                                        0463 01090000
*                            /* IN PRINT BUFFER              @G51DGJJ*/ 01091000
*        CALL TRNSLATE;       /* TRANSLATE BUFFER, PRINT     @G51DGJJ*/ 01092000
@RF00462 BAL   @14,TRNSLATE                                        0464 01093000
*        FRMPOINT = FRMPOINT + 80; /* SET FRAME POINTER      @G51DGJJ*/ 01094000
         LA    @06,80                                              0465 01095000
         AL    @06,FRMPOINT                                        0465 01096000
         ST    @06,FRMPOINT                                        0465 01097000
*                                  /* TO NEXT SCAN LINE      @G51DGJJ*/ 01098000
*    END;                                                  /*@G51DGJJ*/ 01099000
         LA    @06,1                                               0466 01100000
         AL    @06,LINECTR                                         0466 01101000
         ST    @06,LINECTR                                         0466 01102000
         CH    @06,@CH00227                                        0466 01103000
         BNH   @DL00459                                            0466 01104000
*END;                                                      /*@G51DGJJ*/ 01105000
@EL00017 DS    0H                                                  0467 01106000
@EF00017 DS    0H                                                  0467 01107000
@ER00017 LM    @14,@12,@SA00017                                    0467 01108000
         BR    @14                                                 0467 01109000
*/********************************************************************/ 01110000
*/*                                                          @G51DGJJ*/ 01111000
*/* THIS PROC PRINTS AN ERROR MESSAGE ON EREPT, TOURIST      @G51DGJJ*/ 01112000
*/* WHEN AN INVALID LOG TYPE SCAN CODE IS DETECTED.          @G51DGJJ*/ 01113000
*/*                                                          @G51DGJJ*/ 01114000
*LOGTPERR:  PROC;                                          /*@G51DGJJ*/ 01115000
LOGTPERR STM   @14,@12,@SA00018                                    0468 01116000
*  CALL IFCMSG(80,ADDR(MESSAGE)); /* GET ERROR MESSAGE       @G51DGJJ*/ 01117000
         LA    @06,MESSAGE                                         0469 01118000
         ST    @06,@AFTEMPS+16                                     0469 01119000
         L     @15,ADIFCMSG(,R2)                                   0469 01120000
         LA    @01,@AL00469                                        0469 01121000
         BALR  @14,@15                                             0469 01122000
*  IF MCFKEY1 = MCF THEN     /* INSERT VAR. INFO INTO MSG.   @G51DGJJ*/ 01123000
         CLI   MCFKEY1(R5),X'A0'                                   0470 01124000
         BNE   @RF00470                                            0470 01125000
*    MCFCCF80 = MCFL;                                      /*@G51DGJJ*/ 01126000
         MVC   MCFCCF80(3),MCFL                                    0471 01127000
*  ELSE                                                            0472 01128000
*    MCFCCF80 = CCFL;                                      /*@G51DGJJ*/ 01129000
         B     @RC00470                                            0472 01130000
@RF00470 MVC   MCFCCF80(3),CCFL                                    0472 01131000
*    PARM3 = TWO;                                          /*@G51DGJJ*/ 01132000
@RC00470 MVC   PARM3(4),@CF00073                                   0473 01133000
*    CALL CONVERT(MCFMOD,MOD80,PARM3);                     /*@G51DGJJ*/ 01134000
         MVC   @AL00001+4(8),@AL00474                              0474 01135000
         LA    @06,MCFMOD(,R5)                                     0474 01136000
         ST    @06,@AL00001                                        0474 01137000
         LA    @01,@AL00001                                        0474 01138000
         BAL   @14,CONVERT                                         0474 01139000
*    PARM3 = THREE;                                        /*@G51DGJJ*/ 01140000
         MVC   PARM3(4),@CF00075                                   0475 01141000
*    CALL CONVERT(MCFSER,SER80,PARM3);                     /*@G51DGJJ*/ 01142000
         MVC   @AL00001+4(8),@AL00476                              0476 01143000
         LA    @06,MCFSER(,R5)                                     0476 01144000
         ST    @06,@AL00001                                        0476 01145000
         LA    @01,@AL00001                                        0476 01146000
         BAL   @14,CONVERT                                         0476 01147000
*    K = MCFCNT;                  /* FRAME SEQUENCE NO.      @G51DGJJ*/ 01148000
         SLR   @06,@06                                             0477 01149000
         IC    @06,MCFCNT(,R5)                                     0477 01150000
         ST    @06,K                                               0477 01151000
*    CALL CONVBIN(K,BINOUT);                               /*@G51DGJJ*/ 01152000
         LA    @01,@AL00478                                        0478 01153000
         BAL   @14,CONVBIN                                         0478 01154000
*    FRAME80 = BINOUT(4:5);                                /*@G51DGJJ*/ 01155000
         MVC   FRAME80(2),BINOUT+3                                 0479 01156000
*    MESSAGET = MESSAGE;     /* MOVE MSG. TO TOURIST PRINT   @G51DGJJ*/ 01157000
         MVC   MESSAGET(58),MESSAGE                                0480 01158000
*                            /* LINE                         @G51DGJJ*/ 01159000
*    CALL PRINT1;            /* PRINT MSG. ON EREPPT,        @G51DGJJ*/ 01160000
         BAL   @14,PRINT1                                          0481 01161000
*                            /* SINGLE SPACE                 @G51DGJJ*/ 01162000
*    CALL PRINT3;            /* PRINT MSG. ON TOURIST,       @G51DGJJ*/ 01163000
         BAL   @14,PRINT3                                          0482 01164000
*                            /* SINGLE SPACE                 @G51DGJJ*/ 01165000
*    R = LINECT1 - MYLINECT; /* SET LINE CONTROL TO (LAST    @G51DGJJ*/ 01166000
         L     @06,MYLINECT                                        0483 01167000
         L     @04,LINECT1                                         0483 01168000
         SLR   @04,@06                                             0483 01169000
         ST    @04,R                                               0483 01170000
*    Q = R/FRMSPACE;         /* LINE)-1 IN FRAME SPACE.      @G51DGJJ*/ 01171000
         LA    @03,25                                              0484 01172000
         LR    @00,@04                                             0484 01173000
         SRDA  @00,32                                              0484 01174000
         DR    @00,@03                                             0484 01175000
         ST    @01,Q                                               0484 01176000
*    MYLINECT = MYLINECT + (R - FRMSPACE * Q) - 1;         /*@G51DGJJ*/ 01177000
         MR    @00,@03                                             0485 01178000
         SLR   @04,@01                                             0485 01179000
         ALR   @06,@04                                             0485 01180000
         BCTR  @06,0                                               0485 01181000
         ST    @06,MYLINECT                                        0485 01182000
*END;                                                      /*@G51DGJJ*/ 01183000
@EL00018 DS    0H                                                  0486 01184000
@EF00018 DS    0H                                                  0486 01185000
@ER00018 LM    @14,@12,@SA00018                                    0486 01186000
         BR    @14                                                 0486 01187000
*/********************************************************************/ 01188000
*/*                                                          @G51DGJJ*/ 01189000
*/* THIS PROC INTERPRETS 1 SCAN LINE IN THE PRINT BUFFER.    @G51DGJJ*/ 01190000
*/* COMMANDS ARE REPLACED WITH BLANKS. LOG DATA IS FETCHED   @G51DGJJ*/ 01191000
*/* AND FORMATTED IN THE PRINT BUFFER. TEXT IS SKIPPED AS    @G51DGJJ*/ 01192000
*/* INDICATED BY THE 'SKIP' COMMAND. 'END-OF-LINE' IS        @G51DGJJ*/ 01193000
*/* SIGNALED IF THE 'SKIP' COMMAND INDICATES THERE ARE NO    @G51DGJJ*/ 01194000
*/* SCAN COMMANDS REMAINING IN THE LINE.                     @G51DGJJ*/ 01195000
*/*                                                          @G51DGJJ*/ 01196000
*LINEPREP:  PROC;                                          /*@G51DGJJ*/ 01197000
LINEPREP STM   @14,@12,@SA00019                                    0487 01198000
*  SCANERR = OFF;                                          /*@G51DGJJ*/ 01199000
*  ENDLINE = OFF;                                          /*@G51DGJJ*/ 01200000
         NI    SCANERR,B'10011111'                                 0489 01201000
*  CHARCNT = 0;                                            /*@G51DGJJ*/ 01202000
         SLR   @06,@06                                             0490 01203000
         ST    @06,CHARCNT                                         0490 01204000
*  SW = ON;                                                /*@G51DGJJ*/ 01205000
         OI    SW,B'00000010'                                      0491 01206000
*  DO WHILE(SW = ON);                                      /*@G51DGJJ*/ 01207000
         B     @DE00492                                            0492 01208000
@DL00492 DS    0H                                                  0493 01209000
*    IF (CHARCNT => 80) | ENDLINE = ON | ENDSCN = ON THEN          0493 01210000
         L     @06,CHARCNT                                         0493 01211000
         CH    @06,@CH00550                                        0493 01212000
         BNL   @RT00493                                            0493 01213000
         TM    ENDLINE,B'10100000'                                 0493 01214000
         BZ    @RF00493                                            0493 01215000
@RT00493 DS    0H                                                  0494 01216000
*      SW = OFF;                                           /*@G51DGJJ*/ 01217000
         NI    SW,B'11111101'                                      0494 01218000
*    ELSE                                                          0495 01219000
*      CALL CODETYPE;                                      /*@G51DGJJ*/ 01220000
         B     @RC00493                                            0495 01221000
@RF00493 BAL   @14,CODETYPE                                        0495 01222000
*  END;                                                    /*@G51DGJJ*/ 01223000
@RC00493 DS    0H                                                  0496 01224000
@DE00492 TM    SW,B'00000010'                                      0496 01225000
         BO    @DL00492                                            0496 01226000
*END;                                                      /*@G51DGJJ*/ 01227000
@EL00019 DS    0H                                                  0497 01228000
@EF00019 DS    0H                                                  0497 01229000
@ER00019 LM    @14,@12,@SA00019                                    0497 01230000
         BR    @14                                                 0497 01231000
*/********************************************************************/ 01232000
*/*                                                          @G51DGJJ*/ 01233000
*/* THIS PROC EXAMINES THE SCAN CODE POINTED TO BY           @G51DGJJ*/ 01234000
*/* 'LINEPTR' AND TURNS CONTROL TO THE CORRESPONDING         @G51DGJJ*/ 01235000
*/* SCAN CODE PROCESSOR.                                     @G51DGJJ*/ 01236000
*/*                                                          @G51DGJJ*/ 01237000
*CODETYPE:  PROC;                                          /*@G51DGJJ*/ 01238000
CODETYPE STM   @14,@12,@SA00020                                    0498 01239000
*  IF PRINTBUF => 'E8'X &                                          0499 01240000
*     PRINTBUF <= 'EF'X THEN                                       0499 01241000
         L     @06,LINEPTR                                         0499 01242000
         CLI   PRINTBUF(@06),X'E8'                                 0499 01243000
         BL    @RF00499                                            0499 01244000
         CLI   PRINTBUF(@06),X'EF'                                 0499 01245000
         BH    @RF00499                                            0499 01246000
*     CALL LOGTYPE;               /* LOG TYPE                @G51DGJJ*/ 01247000
         BAL   @14,LOGTYPE                                         0500 01248000
*  ELSE                                                            0501 01249000
*   IF PRINTBUF => 'F0'X &                                         0501 01250000
*      PRINTBUF <= 'F7'X THEN                                      0501 01251000
         B     @RC00499                                            0501 01252000
@RF00499 L     @06,LINEPTR                                         0501 01253000
         CLI   PRINTBUF(@06),X'F0'                                 0501 01254000
         BL    @RF00501                                            0501 01255000
         CLI   PRINTBUF(@06),X'F7'                                 0501 01256000
         BH    @RF00501                                            0501 01257000
*      CALL SKIP;                 /* SKIP                    @G51DGJJ*/ 01258000
         BAL   @14,SKIP                                            0502 01259000
*   ELSE                                                           0503 01260000
*    IF PRINTBUF => '00'X &                                        0503 01261000
*       PRINTBUF <= '3F'X THEN                                     0503 01262000
         B     @RC00501                                            0503 01263000
@RF00501 L     @06,LINEPTR                                         0503 01264000
         CLI   PRINTBUF(@06),X'00'                                 0503 01265000
         BL    @RF00503                                            0503 01266000
         CLI   PRINTBUF(@06),X'3F'                                 0503 01267000
         BH    @RF00503                                            0503 01268000
*       CALL TEXT;                /* TEXT                    @G51DGJJ*/ 01269000
         BAL   @14,TEXT                                            0504 01270000
*    ELSE                                                          0505 01271000
*     IF (PRINTBUF & 'C0'X) = '40'X &                              0505 01272000
*        ((PRINTB2 & 'C0'X) = '00'X |                              0505 01273000
*         (PRINTB2 & 'C0'X) = '80'X) THEN                          0505 01274000
         B     @RC00503                                            0505 01275000
@RF00503 L     @06,LINEPTR                                         0505 01276000
         MVC   @TS00001(1),PRINTBUF(@06)                           0505 01277000
         NI    @TS00001,X'C0'                                      0505 01278000
         CLI   @TS00001,X'40'                                      0505 01279000
         BNE   @RF00505                                            0505 01280000
         MVC   @TS00001(1),PRINTB2(@06)                            0505 01281000
         NI    @TS00001,X'C0'                                      0505 01282000
         CLI   @TS00001,X'00'                                      0505 01283000
         BE    @RT00505                                            0505 01284000
         MVC   @TS00001(1),PRINTB2(@06)                            0505 01285000
         NI    @TS00001,X'C0'                                      0505 01286000
         CLI   @TS00001,X'80'                                      0505 01287000
         BNE   @RF00505                                            0505 01288000
@RT00505 DS    0H                                                  0506 01289000
*        CALL DISPLAYB;           /* DISPLAY BINARY          @G51DGJJ*/ 01290000
         BAL   @14,DISPLAYB                                        0506 01291000
*     ELSE                                                         0507 01292000
*      IF (PRINTBUF & 'C0'X) = '40'X &                             0507 01293000
*         ((PRINTB2 & 'C0'X) = '40'X |                             0507 01294000
*          (PRINTB2 & 'C0'X) = 'C0'X) THEN                         0507 01295000
         B     @RC00505                                            0507 01296000
@RF00505 L     @06,LINEPTR                                         0507 01297000
         MVC   @TS00001(1),PRINTBUF(@06)                           0507 01298000
         NI    @TS00001,X'C0'                                      0507 01299000
         CLI   @TS00001,X'40'                                      0507 01300000
         BNE   @RF00507                                            0507 01301000
         MVC   @TS00001(1),PRINTB2(@06)                            0507 01302000
         NI    @TS00001,X'C0'                                      0507 01303000
         CLI   @TS00001,X'40'                                      0507 01304000
         BE    @RT00507                                            0507 01305000
         MVC   @TS00001(1),PRINTB2(@06)                            0507 01306000
         NI    @TS00001,X'C0'                                      0507 01307000
         CLI   @TS00001,X'C0'                                      0507 01308000
         BNE   @RF00507                                            0507 01309000
@RT00507 DS    0H                                                  0508 01310000
*         CALL DISPLAYH;          /* DISPLAY HEX             @G51DGJJ*/ 01311000
         BAL   @14,DISPLAYH                                        0508 01312000
*      ELSE                                                        0509 01313000
*       IF PRINTBUF = 'FF'X THEN                                   0509 01314000
         B     @RC00507                                            0509 01315000
@RF00507 L     @06,LINEPTR                                         0509 01316000
         CLI   PRINTBUF(@06),X'FF'                                 0509 01317000
         BNE   @RF00509                                            0509 01318000
*          CALL ENDSCAN;         /* END SCAN                 @G51DGJJ*/ 01319000
         BAL   @14,ENDSCAN                                         0510 01320000
*       ELSE                                                       0511 01321000
*        IF PRINTBUF = 'C0'X THEN                                  0511 01322000
         B     @RC00509                                            0511 01323000
@RF00509 L     @06,LINEPTR                                         0511 01324000
         CLI   PRINTBUF(@06),X'C0'                                 0511 01325000
         BNE   @RF00511                                            0511 01326000
*           CALL SPCASE10;        /* SPECIAL CASE 1-0        @G51DGJJ*/ 01327000
         BAL   @14,SPCASE10                                        0512 01328000
*        ELSE                                                      0513 01329000
*         IF PRINTBUF = 'C1'X THEN                                 0513 01330000
         B     @RC00511                                            0513 01331000
@RF00511 L     @06,LINEPTR                                         0513 01332000
         CLI   PRINTBUF(@06),X'C1'                                 0513 01333000
         BNE   @RF00513                                            0513 01334000
*            CALL SPCASE11;       /* SPECIAL CASE 1-1        @G51DGJJ*/ 01335000
         BAL   @14,SPCASE11                                        0514 01336000
*         ELSE                                                     0515 01337000
*          IF PRINTBUF = 'C2'X THEN                                0515 01338000
         B     @RC00513                                            0515 01339000
@RF00513 L     @06,LINEPTR                                         0515 01340000
         CLI   PRINTBUF(@06),X'C2'                                 0515 01341000
         BNE   @RF00515                                            0515 01342000
*             CALL SPCASE12;      /* SPECIAL CASE 1-2        @G51DGJJ*/ 01343000
         BAL   @14,SPCASE12                                        0516 01344000
*           ELSE                                                   0517 01345000
*           IF PRINTBUF = 'C3'X THEN                               0517 01346000
         B     @RC00515                                            0517 01347000
@RF00515 L     @06,LINEPTR                                         0517 01348000
         CLI   PRINTBUF(@06),X'C3'                                 0517 01349000
         BNE   @RF00517                                            0517 01350000
*              CALL SPCASE13;     /* SPECIAL CASE 1-3        @G51DGJJ*/ 01351000
         BAL   @14,SPCASE13                                        0518 01352000
*           ELSE                                                   0519 01353000
*            IF PRINTBUF ='C4'X THEN                               0519 01354000
         B     @RC00517                                            0519 01355000
@RF00517 L     @06,LINEPTR                                         0519 01356000
         CLI   PRINTBUF(@06),X'C4'                                 0519 01357000
         BNE   @RF00519                                            0519 01358000
*               CALL SPCASE14;    /* SPECIAL CASE 1-4        @G51DGJJ*/ 01359000
         BAL   @14,SPCASE14                                        0520 01360000
*           ELSE                                                   0521 01361000
*            IF PRINTBUF = 'C8'X THEN                              0521 01362000
         B     @RC00519                                            0521 01363000
@RF00519 L     @06,LINEPTR                                         0521 01364000
         CLI   PRINTBUF(@06),X'C8'                                 0521 01365000
         BNE   @RF00521                                            0521 01366000
*               CALL SPCASE20;    /* SPECIAL CASE 2-0        @G51DGJJ*/ 01367000
         BAL   @14,SPCASE20                                        0522 01368000
*             ELSE                                                 0523 01369000
*              IF PRINTBUF => 'D0'X &                              0523 01370000
*                 PRINTBUF <= 'D7'X THEN                           0523 01371000
         B     @RC00521                                            0523 01372000
@RF00521 L     @06,LINEPTR                                         0523 01373000
         CLI   PRINTBUF(@06),X'D0'                                 0523 01374000
         BL    @RF00523                                            0523 01375000
         CLI   PRINTBUF(@06),X'D7'                                 0523 01376000
         BH    @RF00523                                            0523 01377000
*                 CALL SPCASE30;  /* SPECIAL CASE 3-0        @G51DGJJ*/ 01378000
         BAL   @14,SPCASE30                                        0524 01379000
*              ELSE                                                0525 01380000
*                 CALL UNDEFINE;  /* UNDEFINED COMMAND       @G51DGJJ*/ 01381000
         B     @RC00523                                            0525 01382000
@RF00523 BAL   @14,UNDEFINE                                        0525 01383000
*END;                                                      /*@G51DGJJ*/ 01384000
@EL00020 DS    0H                                                  0526 01385000
@EF00020 DS    0H                                                  0526 01386000
@ER00020 LM    @14,@12,@SA00020                                    0526 01387000
         BR    @14                                                 0526 01388000
*/********************************************************************/ 01389000
*/*                                                          @G51DGJJ*/ 01390000
*/* THIS PROC PROCESSES THE 'LOG TYPE' SCAN CODE.            @G51DGJJ*/ 01391000
*/*                                                          @G51DGJJ*/ 01392000
*LOGTYPE:   PROC;                                          /*@G51DGJJ*/ 01393000
LOGTYPE  STM   @14,@12,12(@13)                                     0527 01394000
*  SAVELOGT = PRNTB123;      /* SAVE FOR P-BIT OFFSET-LATER  @G51DGJJ*/ 01395000
         L     @06,LINEPTR                                         0528 01396000
         MVC   @ZT00001+1(3),PRNTB123(@06)                         0528 01397000
         L     @04,@ZT00001                                        0528 01398000
         ST    @04,SAVELOGT                                        0528 01399000
*  PRNTB123 = BLANK3;        /* REPLACE WITH 3 BLANKS;       @G51DGJJ*/ 01400000
         MVC   PRNTB123(3,@06),BLANK3                              0529 01401000
*  LINEPTR = LINEPTR + 3;    /* BUMP PRINT BUFFER POINTER,   @G51DGJJ*/ 01402000
         LA    @04,3                                               0530 01403000
         ALR   @06,@04                                             0530 01404000
         ST    @06,LINEPTR                                         0530 01405000
*  CHARCNT = CHARCNT + 3;    /* SCAN CODE COUNTER            @G51DGJJ*/ 01406000
         AL    @04,CHARCNT                                         0531 01407000
         ST    @04,CHARCNT                                         0531 01408000
*   IF MCFKEY1 = MCF THEN                                          0532 01409000
         CLI   MCFKEY1(R5),X'A0'                                   0532 01410000
         BNE   @RF00532                                            0532 01411000
*     DO;                    /* MCH FRAME                    @G51DGJJ*/ 01412000
*      IF SVLOGTF = OFF THEN                                       0534 01413000
         TM    SVLOGTF,B'10000000'                                 0534 01414000
         BNZ   @RF00534                                            0534 01415000
*        LOGPTR = R7 + 328;  /* SET LOGREC POINTER TO        @XA21775*/ 01416000
         LA    @06,328                                             0535 01417000
         ALR   @06,R7                                              0535 01418000
         ST    @06,LOGPTR                                          0535 01419000
*                            /* BEGIN OF EXTENDED LOGOUT     @G51DGJJ*/ 01420000
*      ELSE                                                        0536 01421000
*        LOGPTR = R7 + 72;   /* SET LOGREC POINTER TO        @XA21775*/ 01422000
         B     @RC00534                                            0536 01423000
@RF00534 LA    @06,72                                              0536 01424000
         ALR   @06,R7                                              0536 01425000
         ST    @06,LOGPTR                                          0536 01426000
*                            /* BEGIN OF FIXED LOGOUT        @G51DGJJ*/ 01427000
*    END;                                                  /*@G51DGJJ*/ 01428000
*  ELSE                                                            0538 01429000
*    LOGPTR = R7 + 80;       /* CCH FRAME                    @G51DGJJ*/ 01430000
         B     @RC00532                                            0538 01431000
@RF00532 LA    @06,80                                              0538 01432000
         ALR   @06,R7                                              0538 01433000
         ST    @06,LOGPTR                                          0538 01434000
*                            /* SET LOGREC POINTER TO        @G51DGJJ*/ 01435000
*END;                        /* BEGIN OF CHANNEL LOGOUT      @G51DGJJ*/ 01436000
@EL00021 DS    0H                                                  0539 01437000
@EF00021 DS    0H                                                  0539 01438000
@ER00021 LM    @14,@12,12(@13)                                     0539 01439000
         BR    @14                                                 0539 01440000
*/*******************************************************************/  01441000
*/*                                                          @G51DGJJ*/ 01442000
*/* THIS PROC PROCESSES THE 'SKIP' COMMAND.                  @G51DGJJ*/ 01443000
*/*                                                          @G51DGJJ*/ 01444000
*SKIP:      PROC;                                          /*@G51DGJJ*/ 01445000
SKIP     STM   @14,@12,12(@13)                                     0540 01446000
*  J = PRINTBUF & '07'X;     /* GET SPACING CONTROL          @G51DGJJ*/ 01447000
         L     @06,LINEPTR                                         0541 01448000
         LA    @04,7                                               0541 01449000
         MVC   @ZT00003+3(1),PRINTBUF(@06)                         0541 01450000
         N     @04,@ZT00003                                        0541 01451000
         ST    @04,J                                               0541 01452000
*  PRINTBUF = BLANK;                                       /*@G51DGJJ*/ 01453000
         MVI   PRINTBUF(@06),C' '                                  0542 01454000
*  IF J = ZERO THEN                                                0543 01455000
         LTR   @04,@04                                             0543 01456000
         BNZ   @RF00543                                            0543 01457000
*    ENDLINE = ON;                                         /*@G51DGJJ*/ 01458000
         OI    ENDLINE,B'00100000'                                 0544 01459000
*  ELSE                                                            0545 01460000
*    DO;                                                   /*@G51DGJJ*/ 01461000
         B     @RC00543                                            0545 01462000
@RF00543 DS    0H                                                  0546 01463000
*      K = SKPCODE(J);                                     /*@G51DGJJ*/ 01464000
         L     @06,J                                               0546 01465000
         ALR   @06,@06                                             0546 01466000
         LH    @06,SKPCODE-2(@06)                                  0546 01467000
         ST    @06,K                                               0546 01468000
*      LINEPTR = LINEPTR + K + 1; /* BUMP PRINT BUFFER POINTER,      */ 01469000
         LA    @04,1                                               0547 01470000
         L     @03,LINEPTR                                         0547 01471000
         ALR   @03,@06                                             0547 01472000
         ALR   @03,@04                                             0547 01473000
         ST    @03,LINEPTR                                         0547 01474000
*      CHARCNT = CHARCNT + K + 1; /* SCAN CODE COUNTER       @G51DGJJ*/ 01475000
         AL    @06,CHARCNT                                         0548 01476000
         ALR   @06,@04                                             0548 01477000
         ST    @06,CHARCNT                                         0548 01478000
*    END;                                                  /*@G51DGJJ*/ 01479000
*END;                                                      /*@G51DGJJ*/ 01480000
@EL00022 DS    0H                                                  0550 01481000
@EF00022 DS    0H                                                  0550 01482000
@ER00022 LM    @14,@12,12(@13)                                     0550 01483000
         BR    @14                                                 0550 01484000
*/********************************************************************/ 01485000
*/*                                                          @G51DGJJ*/ 01486000
*/* THIS PROC PROCESSES THE 'TEXT' SCAN CODE.                @G51DGJJ*/ 01487000
*TEXT:      PROC OPTIONS(NOSAVEAREA);                      /*@G51DGJJ*/ 01488000
TEXT     STM   @14,@12,12(@13)                                     0551 01489000
*  LINEPTR = LINEPTR + 1;    /* BUMP PRINT BUFFER POINTER,   @G51DGJJ*/ 01490000
         LA    @06,1                                               0552 01491000
         L     @04,LINEPTR                                         0552 01492000
         ALR   @04,@06                                             0552 01493000
         ST    @04,LINEPTR                                         0552 01494000
*  CHARCNT = CHARCNT + 1;    /* SCAN CODE COUNTER            @G51DGJJ*/ 01495000
         AL    @06,CHARCNT                                         0553 01496000
         ST    @06,CHARCNT                                         0553 01497000
*END;                                                      /*@G51DGJJ*/ 01498000
@EL00023 DS    0H                                                  0554 01499000
@EF00023 DS    0H                                                  0554 01500000
@ER00023 LM    @14,@12,12(@13)                                     0554 01501000
         BR    @14                                                 0554 01502000
*/********************************************************************/ 01503000
*/*                                                          @G51DGJJ*/ 01504000
*/* THIS PROC PROCESSES THE 'DISPLAY BINARY' COMMAND.        @G51DGJJ*/ 01505000
*/*                                                          @G51DGJJ*/ 01506000
*DISPLAYB:  PROC;                                          /*@G51DGJJ*/ 01507000
DISPLAYB STM   @14,@12,@SA00024                                    0555 01508000
*  PREVD = PRINTB2 & '3F'X;  /* OFFSET TO STARTING BYTE      @G51DGJJ*/ 01509000
         L     @06,LINEPTR                                         0556 01510000
         LA    @04,63                                              0556 01511000
         MVC   @ZT00003+3(1),PRINTB2(@06)                          0556 01512000
         N     @04,@ZT00003                                        0556 01513000
         ST    @04,PREVD                                           0556 01514000
*  SLL(PREVD,5);             /* OF LOG DATA -- DDDDDD        @G51DGJJ*/ 01515000
         SLL   @04,5                                               0557 01516000
         ST    @04,PREVD                                           0557 01517000
*  PREVD = PREVD | PRINTB3 & '1F'X;    /*   -- DDDDDDDDDDD   @G51DGJJ*/ 01518000
         SLR   @04,@04                                             0558 01519000
         IC    @04,PRINTB3(,@06)                                   0558 01520000
         LA    @03,31                                              0558 01521000
         NR    @03,@04                                             0558 01522000
         O     @03,PREVD                                           0558 01523000
         ST    @03,PREVD                                           0558 01524000
*  PREVZ = PRINTB3;          /* OFFSET TO STARTING BIT       @G51DGJJ*/ 01525000
         ST    @04,PREVZ                                           0559 01526000
*  SRL(PREVZ,5);             /* WITHIN BYTE -- ZZZ           @G51DGJJ*/ 01527000
         SRL   @04,5                                               0560 01528000
         ST    @04,PREVZ                                           0560 01529000
*  PREVB = ZERO;                                           /*@G51DGJJ*/ 01530000
         SLR   @04,@04                                             0561 01531000
         ST    @04,PREVB                                           0561 01532000
*  CURRB = PRINTBUF & '07'X; /* LENGTH OF BIT STRING -- BBB  @G51DGJJ*/ 01533000
         LA    @03,7                                               0562 01534000
         MVC   @ZT00003+3(1),PRINTBUF(@06)                         0562 01535000
         N     @03,@ZT00003                                        0562 01536000
         ST    @03,CURRB                                           0562 01537000
*  IF CURRB = ZERO THEN                                            0563 01538000
         CR    @03,@04                                             0563 01539000
         BNE   @RF00563                                            0563 01540000
*    CURRB = EIGHT;                                        /*@G51DGJJ*/ 01541000
         MVC   CURRB(4),@CF00065                                   0564 01542000
*  CURRG = PRINTBUF & '38'X; /* NO. SPACES TO DISPLAY        @G51DGJJ*/ 01543000
@RF00563 L     @06,LINEPTR                                         0565 01544000
         LA    @04,56                                              0565 01545000
         MVC   @ZT00003+3(1),PRINTBUF(@06)                         0565 01546000
         N     @04,@ZT00003                                        0565 01547000
         ST    @04,CURRG                                           0565 01548000
*  SRL(CURRG,3);             /* BETWEEN BITS -- GGG          @G51DGJJ*/ 01549000
         SRL   @04,3                                               0566 01550000
         ST    @04,CURRG                                           0566 01551000
*  PRNTB123 = BLANK3;        /* REPLACE COMM. WITH 3 BLANKS  @G51DGJJ*/ 01552000
         MVC   PRNTB123(3,@06),BLANK3                              0567 01553000
*  LINEPTR = LINEPTR + 3;    /* BUMP PRINT BUFFER POINTER,   @G51DGJJ*/ 01554000
         LA    @04,3                                               0568 01555000
         ALR   @06,@04                                             0568 01556000
         ST    @06,LINEPTR                                         0568 01557000
*  CHARCNT = CHARCNT + 3;    /* SCAN CODE COUNTER            @G51DGJJ*/ 01558000
         AL    @04,CHARCNT                                         0569 01559000
         ST    @04,CHARCNT                                         0569 01560000
*  CALL BINLOG;              /* GET LOG DATA, FORMAT IT      @G51DGJJ*/ 01561000
         BAL   @14,BINLOG                                          0570 01562000
*  SW1 = ON;                                               /*@G51DGJJ*/ 01563000
         OI    SW1,B'00010000'                                     0571 01564000
*  DO WHILE (SW1 = ON);                                    /*@G51DGJJ*/ 01565000
         B     @DE00572                                            0572 01566000
@DL00572 DS    0H                                                  0573 01567000
*    IF CHARCNT => 80 THEN                                         0573 01568000
         L     @06,CHARCNT                                         0573 01569000
         CH    @06,@CH00550                                        0573 01570000
         BL    @RF00573                                            0573 01571000
*      SW1 = OFF;                                          /*@G51DGJJ*/ 01572000
         NI    SW1,B'11101111'                                     0574 01573000
*    ELSE                                                          0575 01574000
*      DO;                   /* EXAMINE NEXT SCAN CODE       @G51DGJJ*/ 01575000
         B     @RC00573                                            0575 01576000
@RF00573 DS    0H                                                  0576 01577000
*        IF (PRINTBUF & 'C0'X) = '80'X THEN                        0576 01578000
         L     @06,LINEPTR                                         0576 01579000
         MVC   @TS00001(1),PRINTBUF(@06)                           0576 01580000
         NI    @TS00001,X'C0'                                      0576 01581000
         CLI   @TS00001,X'80'                                      0576 01582000
         BNE   @RF00576                                            0576 01583000
*          CALL NEXTBIN;     /* 'DISPLAY NEXT' COMMAND       @G51DGJJ*/ 01584000
         BAL   @14,NEXTBIN                                         0577 01585000
*        ELSE                                                      0578 01586000
*          IF PRINTBUF => '00'X &                                  0578 01587000
*             PRINTBUF <= '3F'X THEN                               0578 01588000
         B     @RC00576                                            0578 01589000
@RF00576 L     @06,LINEPTR                                         0578 01590000
         CLI   PRINTBUF(@06),X'00'                                 0578 01591000
         BL    @RF00578                                            0578 01592000
         CLI   PRINTBUF(@06),X'3F'                                 0578 01593000
         BH    @RF00578                                            0578 01594000
*             CALL TEXT;     /* TEXT - TOO MANY PLACE-HOLDERS?       */ 01595000
         BAL   @14,TEXT                                            0579 01596000
*          ELSE              /* NOT 'DISPLAY NEXT' --        @G51DGJJ*/ 01597000
*            SW1 = OFF;      /* LET 'CODETYPE' PROCEDURE     @G51DGJJ*/ 01598000
         B     @RC00578                                            0580 01599000
@RF00578 NI    SW1,B'11101111'                                     0580 01600000
*      END;                  /* PROCESS IT                   @G51DGJJ*/ 01601000
@RC00578 DS    0H                                                  0581 01602000
@RC00576 DS    0H                                                  0582 01603000
*  END;                                                    /*@G51DGJJ*/ 01604000
@RC00573 DS    0H                                                  0582 01605000
@DE00572 TM    SW1,B'00010000'                                     0582 01606000
         BO    @DL00572                                            0582 01607000
*END;                                                      /*@G51DGJJ*/ 01608000
@EL00024 DS    0H                                                  0583 01609000
@EF00024 DS    0H                                                  0583 01610000
@ER00024 LM    @14,@12,@SA00024                                    0583 01611000
         BR    @14                                                 0583 01612000
*/********************************************************************/ 01613000
*/*                                                          @G51DGJJ*/ 01614000
*/* THIS PROC FETCHES THE LOG DATA AND THEN INVOKES          @G51DGJJ*/ 01615000
*/* 'FORMATB' WHICH FORMATS IT FOR DISPLAY.                  @G51DGJJ*/ 01616000
*/* THE PROC IS CALLED BY BOTH 'DISPLAYB'(DISPLAY BINARY)    @G51DGJJ*/ 01617000
*/* AND 'NEXTBIN'(DISPLAY NEXT BINARY). TWO OR THREE LOG     @G51DGJJ*/ 01618000
*/* DATA BYTES ARE FETCHED BY A "FLOG" ROUTINE DEPENDING     @G51DGJJ*/ 01619000
*/* ON DATA FORMAT M, G, OR Y.   EACH  "FLOG" ROUTINE        @G51DGJJ*/ 01620000
*/* COMPUTES - OFFSET TO 1ST DATA BYTE-(CURRD)               @G51DGJJ*/ 01621000
*/*          - OFFSET TO 1ST DATA BIT-(CURRZ)                @G51DGJJ*/ 01622000
*/*     FROM - OFFSET TO PREVIOUS 1ST DATA BYTE-(PREVD)      @G51DGJJ*/ 01623000
*/*          - OFFSET TO PREVIOUS 1ST DATA BIT-(PREVZ)       @G51DGJJ*/ 01624000
*/*          - LENGTH OF PREVIOUS BIT STRING-(PREVB)         @G51DGJJ*/ 01625000
*/*                                                          @G51DGJJ*/ 01626000
*BINLOG:   PROC;                                           /*@G51DGJJ*/ 01627000
BINLOG   STM   @14,@12,@SA00025                                    0584 01628000
*  IF SVLOGT1 = 'E8'X |                                            0585 01629000
*     SVLOGT1 = 'EC'X THEN                                         0585 01630000
         CLI   SVLOGT1,X'E8'                                       0585 01631000
         BE    @RT00585                                            0585 01632000
         CLI   SVLOGT1,X'EC'                                       0585 01633000
         BNE   @RF00585                                            0585 01634000
@RT00585 DS    0H                                                  0586 01635000
*     CALL FLOGM;            /* FETCH FORMAT M DATA          @G51DGJJ*/ 01636000
         BAL   @14,FLOGM                                           0586 01637000
*  ELSE                                                            0587 01638000
*    IF SVLOGT1 = 'ED'X THEN                                       0587 01639000
         B     @RC00585                                            0587 01640000
@RF00585 CLI   SVLOGT1,X'ED'                                       0587 01641000
         BNE   @RF00587                                            0587 01642000
*       CALL FLOGG;          /* FETCH FORMAT G DATA          @G51DGJJ*/ 01643000
         BAL   @14,FLOGG                                           0588 01644000
*    ELSE                                                          0589 01645000
*       CALL FLOGY;          /* FETCH FORMAT Y DATA          @G51DGJJ*/ 01646000
         B     @RC00587                                            0589 01647000
@RF00587 BAL   @14,FLOGY                                           0589 01648000
*  CALL FORMATB;             /* FORMAT BIN. DATA FOR PRINT   @G51DGJJ*/ 01649000
@RC00587 DS    0H                                                  0590 01650000
@RC00585 BAL   @14,FORMATB                                         0590 01651000
*END;                                                      /*@G51DGJJ*/ 01652000
@EL00025 DS    0H                                                  0591 01653000
@EF00025 DS    0H                                                  0591 01654000
@ER00025 LM    @14,@12,@SA00025                                    0591 01655000
         BR    @14                                                 0591 01656000
*/********************************************************************/ 01657000
*/*                                                          @G51DGJJ*/ 01658000
*/* THIS PROC FETCHES THE NEXT 2 LOG DATA BYTES              @G51DGJJ*/ 01659000
*/* AND COMPUTES THE OFFSET TO THE 1ST BIT OF                @G51DGJJ*/ 01660000
*/* THE BIT STRING. DATA IN 1ST OR BOTH BYTES.               @G51DGJJ*/ 01661000
*/*                                                          @G51DGJJ*/ 01662000
*FLOGM:     PROC;                                          /*@G51DGJJ*/ 01663000
FLOGM    STM   @14,@12,12(@13)                                     0592 01664000
*  Q = (PREVZ + PREVB)/NUM8;                               /*@G51DGJJ*/ 01665000
         L     @06,PREVZ                                           0593 01666000
         AL    @06,PREVB                                           0593 01667000
         LR    @00,@06                                             0593 01668000
         SRDA  @00,32                                              0593 01669000
         D     @00,@CF00065                                        0593 01670000
         ST    @01,Q                                               0593 01671000
*  R = (PREVZ + PREVB) - NUM8 * Q;                         /*@G51DGJJ*/ 01672000
         LR    @04,@01                                             0594 01673000
         SLA   @04,3                                               0594 01674000
         SLR   @06,@04                                             0594 01675000
         ST    @06,R                                               0594 01676000
*  PREVB = CURRB;             /* SAVE FOR NEXT TIME          @G51DGJJ*/ 01677000
         MVC   PREVB(4),CURRB                                      0595 01678000
*                             /* 'CURRB' = BBB IF BINARY,    @G51DGJJ*/ 01679000
*                             /* 'CURRB' = CC+MMM IF HEX     @G51DGJJ*/ 01680000
*  CURRD = PREVD + Q;         /* OFFSET TO 1ST DATA BYTE     @G51DGJJ*/ 01681000
         AL    @01,PREVD                                           0596 01682000
         ST    @01,CURRD                                           0596 01683000
*  PREVD = CURRD;             /* SAVE FOR NEXT TIME          @G51DGJJ*/ 01684000
         ST    @01,PREVD                                           0597 01685000
*  CURRZ = R;                 /* OFFSET TO 1ST DATA BIT      @G51DGJJ*/ 01686000
         ST    @06,CURRZ                                           0598 01687000
*  PREVZ = CURRZ;             /* SAVE FOR NEXT TIME          @G51DGJJ*/ 01688000
         ST    @06,PREVZ                                           0599 01689000
*  LOG1 = LOG;                /* FETCH 1ST LOG DATA BYTE     @G51DGJJ*/ 01690000
         L     @06,LOGPTR                                          0600 01691000
         LR    @04,@06                                             0600 01692000
         ALR   @04,@01                                             0600 01693000
         MVC   LOG1(1),LOG(@04)                                    0600 01694000
*  CURRD = CURRD + 1;                                      /*@G51DGJJ*/ 01695000
         AH    @01,@CH00054                                        0601 01696000
         ST    @01,CURRD                                           0601 01697000
*  LOG2 = LOG;                /* FETCH 2ND LOG DATA BYTE     @G51DGJJ*/ 01698000
         ALR   @06,@01                                             0602 01699000
         MVC   LOG2(1),LOG(@06)                                    0602 01700000
*END;                                                      /*@G51DGJJ*/ 01701000
@EL00026 DS    0H                                                  0603 01702000
@EF00026 DS    0H                                                  0603 01703000
@ER00026 LM    @14,@12,12(@13)                                     0603 01704000
         BR    @14                                                 0603 01705000
*/********************************************************************/ 01706000
*/*                                                          @G51DGJJ*/ 01707000
*/* THIS PROC CONVERTS THE BINARY LOG DATA TO SCAN CODE      @G51DGJJ*/ 01708000
*/* AND FORMATS IT INTO THE PRINT BUFFER(PRTBUFF),           @G51DGJJ*/ 01709000
*/* REPLACING THE LOG DATA PLACE-HOLDERS.                    @G51DGJJ*/ 01710000
*/*                                                          @G51DGJJ*/ 01711000
*FORMATB:   PROC;                                          /*@G51DGJJ*/ 01712000
FORMATB  STM   @14,@12,12(@13)                                     0604 01713000
*  WORKL = LOGDATA;                                        /*@G51DGJJ*/ 01714000
         MVC   WORKL(2),LOGDATA                                    0605 01715000
*  SLL(WORKL,CURRZ);        /* LEFT JUSTIFY BIT STRING       @G51DGJJ*/ 01716000
         MVC   @ZT00002+2(2),WORKL                                 0606 01717000
         L     @06,@ZT00002                                        0606 01718000
         L     @04,CURRZ                                           0606 01719000
         SLL   @06,0(@04)                                          0606 01720000
         STH   @06,@TF00001                                        0606 01721000
         MVC   WORKL(2),@TF00001                                   0606 01722000
*  DO J = 1 TO CURRB;                                      /*@G51DGJJ*/ 01723000
         LA    @06,1                                               0607 01724000
         B     @DE00607                                            0607 01725000
@DL00607 DS    0H                                                  0608 01726000
*    SCNCODE = '30'X;       /* SCAN CODE FOR 0               @G51DGJJ*/ 01727000
         MVI   SCNCODE,X'30'                                       0608 01728000
*    IF (WK & '80'X) ^= ZERO THEN                                  0609 01729000
         LA    @06,128                                             0609 01730000
         MVC   @ZT00003+3(1),WK                                    0609 01731000
         N     @06,@ZT00003                                        0609 01732000
         LTR   @06,@06                                             0609 01733000
         BZ    @RF00609                                            0609 01734000
*      SCNCODE = '31'X;     /* SCAN CODE FOR 1               @G51DGJJ*/ 01735000
         MVI   SCNCODE,X'31'                                       0610 01736000
*    PRINTBUF = SCNCODE;    /* PLACE CODE IN PRINT BUFFER    @G51DGJJ*/ 01737000
@RF00609 L     @06,LINEPTR                                         0611 01738000
         MVC   PRINTBUF(1,@06),SCNCODE                             0611 01739000
*    LINEPTR = LINEPTR + CURRG + 1;    /* BUMP POINTERS      @G51DGJJ*/ 01740000
         LA    @04,1                                               0612 01741000
         L     @03,CURRG                                           0612 01742000
         ALR   @06,@03                                             0612 01743000
         ALR   @06,@04                                             0612 01744000
         ST    @06,LINEPTR                                         0612 01745000
*    CHARCNT = CHARCNT + CURRG + 1;                        /*@G51DGJJ*/ 01746000
         AL    @03,CHARCNT                                         0613 01747000
         ALR   @03,@04                                             0613 01748000
         ST    @03,CHARCNT                                         0613 01749000
*    SLL(WK,1);                                            /*@G51DGJJ*/ 01750000
         SLR   @06,@06                                             0614 01751000
         IC    @06,WK                                              0614 01752000
         SLL   @06,1                                               0614 01753000
         STC   @06,WK                                              0614 01754000
*  END;                                                    /*@G51DGJJ*/ 01755000
         LA    @06,1                                               0615 01756000
         AL    @06,J                                               0615 01757000
@DE00607 ST    @06,J                                               0615 01758000
         C     @06,CURRB                                           0615 01759000
         BNH   @DL00607                                            0615 01760000
*  LINEPTR = LINEPTR - CURRG;          /* ADJUST POINTERS    @G51DGJJ*/ 01761000
         L     @06,CURRG                                           0616 01762000
         L     @04,LINEPTR                                         0616 01763000
         SLR   @04,@06                                             0616 01764000
         ST    @04,LINEPTR                                         0616 01765000
*  CHARCNT = CHARCNT - CURRG;                              /*@G51DGJJ*/ 01766000
         LCR   @06,@06                                             0617 01767000
         AL    @06,CHARCNT                                         0617 01768000
         ST    @06,CHARCNT                                         0617 01769000
*END;                                                      /*@G51DGJJ*/ 01770000
@EL00027 DS    0H                                                  0618 01771000
@EF00027 DS    0H                                                  0618 01772000
@ER00027 LM    @14,@12,12(@13)                                     0618 01773000
         BR    @14                                                 0618 01774000
*/********************************************************************/ 01775000
*/*                                                          @G51DGJJ*/ 01776000
*/* THIS PROC PROCESSES THE 'DISPLAY NEXT CHARACTER BINARY'  @G51DGJJ*/ 01777000
*/* COMMAND.                                                 @G51DGJJ*/ 01778000
*/*                                                          @G51DGJJ*/ 01779000
*NEXTBIN:   PROC;                                          /*@G51DGJJ*/ 01780000
NEXTBIN  STM   @14,@12,@SA00028                                    0619 01781000
*  CURRB = PRINTBUF & '07'X; /* LENGTH OF BIT STRING         @G51DGJJ*/ 01782000
         LA    @06,7                                               0620 01783000
         L     @04,LINEPTR                                         0620 01784000
         MVC   @ZT00003+3(1),PRINTBUF(@04)                         0620 01785000
         N     @06,@ZT00003                                        0620 01786000
         ST    @06,CURRB                                           0620 01787000
*  IF CURRB = ZERO THEN                                            0621 01788000
         LTR   @06,@06                                             0621 01789000
         BNZ   @RF00621                                            0621 01790000
*    CURRB = EIGHT;                                        /*@G51DGJJ*/ 01791000
         MVC   CURRB(4),@CF00065                                   0622 01792000
*  CURRG = PRINTBUF & '38'X; /* NO. SPACES TO DISPLAY        @G51DGJJ*/ 01793000
@RF00621 L     @06,LINEPTR                                         0623 01794000
         LA    @04,56                                              0623 01795000
         MVC   @ZT00003+3(1),PRINTBUF(@06)                         0623 01796000
         N     @04,@ZT00003                                        0623 01797000
         ST    @04,CURRG                                           0623 01798000
*  SRL(CURRG,3);             /* BETWEEN BITS                 @G51DGJJ*/ 01799000
         SRL   @04,3                                               0624 01800000
         ST    @04,CURRG                                           0624 01801000
*  PRINTBUF = BLANK;                                       /*@G51DGJJ*/ 01802000
         MVI   PRINTBUF(@06),C' '                                  0625 01803000
*  LINEPTR = LINEPTR + 1;    /* BUMP POINTERS                @G51DGJJ*/ 01804000
         LA    @04,1                                               0626 01805000
         ALR   @06,@04                                             0626 01806000
         ST    @06,LINEPTR                                         0626 01807000
*  CHARCNT = CHARCNT + 1;                                  /*@G51DGJJ*/ 01808000
         AL    @04,CHARCNT                                         0627 01809000
         ST    @04,CHARCNT                                         0627 01810000
*  CALL BINLOG;              /* GET LOG DATA, FORMAT IT      @G51DGJJ*/ 01811000
         BAL   @14,BINLOG                                          0628 01812000
*END;                                                      /*@G51DGJJ*/ 01813000
@EL00028 DS    0H                                                  0629 01814000
@EF00028 DS    0H                                                  0629 01815000
@ER00028 LM    @14,@12,@SA00028                                    0629 01816000
         BR    @14                                                 0629 01817000
*/********************************************************************/ 01818000
*/*                                                          @G51DGJJ*/ 01819000
*/* THIS PROC PROCESSES THE 'END SCAN' COMMAND.              @G51DGJJ*/ 01820000
*/*                                                          @G51DGJJ*/ 01821000
*ENDSCAN:   PROC;                                          /*@G51DGJJ*/ 01822000
ENDSCAN  STM   @14,@12,12(@13)                                     0630 01823000
*  PRINTBUF = BLANK;                                       /*@G51DGJJ*/ 01824000
         L     @06,LINEPTR                                         0631 01825000
         MVI   PRINTBUF(@06),C' '                                  0631 01826000
*  ENDSCN = ON;                                            /*@G51DGJJ*/ 01827000
         OI    ENDSCN,B'10000000'                                  0632 01828000
*END;                                                      /*@G51DGJJ*/ 01829000
@EL00029 DS    0H                                                  0633 01830000
@EF00029 DS    0H                                                  0633 01831000
@ER00029 LM    @14,@12,12(@13)                                     0633 01832000
         BR    @14                                                 0633 01833000
*/********************************************************************/ 01834000
*/*                                                          @G51DGJJ*/ 01835000
*/* THIS PROC PROCESSES AN UNDEFINED SCAN COMMAND.           @G51DGJJ*/ 01836000
*/*                                                          @G51DGJJ*/ 01837000
*UNDEFINE:  PROC;                                          /*@G51DGJJ*/ 01838000
UNDEFINE STM   @14,@12,12(@13)                                     0634 01839000
*  SCANERR = ON;             /* INDICATE SCAN CODE ERROR     @G51DGJJ*/ 01840000
         OI    SCANERR,B'01000000'                                 0635 01841000
*  HXDMPFRM = ON;            /* INDICATE HEX DUMP FRAME      @G51DGJJ*/ 01842000
         OI    HXDMPFRM,B'00000100'                                0636 01843000
*  PRNTB123 = '1C1C1C'X;     /* FLAG COMM. WITH '***'        @G51DGJJ*/ 01844000
         L     @06,LINEPTR                                         0637 01845000
         MVC   PRNTB123(3,@06),@CB01313                            0637 01846000
*  LINEPTR = LINEPTR + 3;    /* BUMP POINTERS                @G51DGJJ*/ 01847000
         LA    @04,3                                               0638 01848000
         ALR   @06,@04                                             0638 01849000
         ST    @06,LINEPTR                                         0638 01850000
*  CHARCNT = CHARCNT + 3;                                  /*@G51DGJJ*/ 01851000
         AL    @04,CHARCNT                                         0639 01852000
         ST    @04,CHARCNT                                         0639 01853000
*END;                                                      /*@G51DGJJ*/ 01854000
@EL00030 DS    0H                                                  0640 01855000
@EF00030 DS    0H                                                  0640 01856000
@ER00030 LM    @14,@12,12(@13)                                     0640 01857000
         BR    @14                                                 0640 01858000
*/********************************************************************/ 01859000
*/*                                                          @G51DGJJ*/ 01860000
*/* THIS PROC FETCHES THE NEXT 2 LOG DATA BYTES FOR FORMAT Y.        */ 01861000
*/* IT INSERTS A PARITY BIT FROM THE                         @G51DGJJ*/ 01862000
*/* PARITY BIT AREA INTO THE LOG DATA.                       @G51DGJJ*/ 01863000
*/*                                                          @G51DGJJ*/ 01864000
*FLOGY:     PROC;                                          /*@G51DGJJ*/ 01865000
FLOGY    STM   @14,@12,@SA00031                                    0641 01866000
* RESPECIFY (R8,R9) RESTRICTED;                            /*@G51DGJJ*/ 01867000
*  IF SVLOGTK = OFF THEN                                           0643 01868000
         TM    SVLOGTK,B'01000000'                                 0643 01869000
         BNZ   @RF00643                                            0643 01870000
*    CALL FLOGM;                       /* K = 0              @G51DGJJ*/ 01871000
         BAL   @14,FLOGM                                           0644 01872000
*  ELSE                                                            0645 01873000
*    DO;                               /* K = 1              @G51DGJJ*/ 01874000
         B     @RC00643                                            0645 01875000
@RF00643 DS    0H                                                  0646 01876000
*      IF (PREVD & '600'X) = ZERO THEN                             0646 01877000
         LA    @06,1536                                            0646 01878000
         N     @06,PREVD                                           0646 01879000
         LTR   @06,@06                                             0646 01880000
         BNZ   @RF00646                                            0646 01881000
*        CALL FLOGM;                   /* SS = 00            @G51DGJJ*/ 01882000
         BAL   @14,FLOGM                                           0647 01883000
*      ELSE                                                        0648 01884000
*        IF (PREVD & '600'X) = '600'X THEN                         0648 01885000
         B     @RC00646                                            0648 01886000
@RF00646 LA    @06,1536                                            0648 01887000
         L     @04,PREVD                                           0648 01888000
         NR    @04,@06                                             0648 01889000
         CR    @04,@06                                             0648 01890000
         BNE   @RF00648                                            0648 01891000
*          CALL UNDEFINE;              /* SS = 11            @G51DGJJ*/ 01892000
         BAL   @14,UNDEFINE                                        0649 01893000
*        ELSE                                                      0650 01894000
*          DO;                         /* SS = 01 OR 10      @G51DGJJ*/ 01895000
         B     @RC00648                                            0650 01896000
@RF00648 DS    0H                                                  0651 01897000
*            Q = (PREVZ + PREVB) / NUM8;                   /*@G51DGJJ*/ 01898000
         L     @06,PREVZ                                           0651 01899000
         AL    @06,PREVB                                           0651 01900000
         LR    @00,@06                                             0651 01901000
         SRDA  @00,32                                              0651 01902000
         D     @00,@CF00065                                        0651 01903000
         ST    @01,Q                                               0651 01904000
*            R = (PREVZ + PREVB) - NUM8 * Q;               /*@G51DGJJ*/ 01905000
         LR    @04,@01                                             0652 01906000
         SLA   @04,3                                               0652 01907000
         SLR   @06,@04                                             0652 01908000
         ST    @06,R                                               0652 01909000
*            PREVB = CURRB;       /* SAVE FOR NEXT TIME      @G51DGJJ*/ 01910000
         MVC   PREVB(4),CURRB                                      0653 01911000
*                                 /* CURRB = BBB IF BINARY,  @G51DGJJ*/ 01912000
*                                 /* CURRB = CC+MMM IF HEX   @G51DGJJ*/ 01913000
*            CURRD = PREVD + Q;   /* OFFSET TO 1ST BYTE      @G51DGJJ*/ 01914000
         AL    @01,PREVD                                           0654 01915000
         ST    @01,CURRD                                           0654 01916000
*            PREVD = CURRD;       /* SAVE FOR NEXT TIME      @G51DGJJ*/ 01917000
         ST    @01,PREVD                                           0655 01918000
*            CURRZ = R;           /* OFFSET TO 1ST BIT       @G51DGJJ*/ 01919000
         ST    @06,CURRZ                                           0656 01920000
*            PREVZ = CURRZ;       /* SAVE FOR NEXT TIME      @G51DGJJ*/ 01921000
         ST    @06,PREVZ                                           0657 01922000
*            CURRD = CURRD & '1FF'X;   /* RIGHT-MOST 9 BITS  @G51DGJJ*/ 01923000
         LA    @06,511                                             0658 01924000
         NR    @06,@01                                             0658 01925000
         ST    @06,CURRD                                           0658 01926000
*            LOG1 = LOG;          /* FETCH 1ST DATA BYTE     @G51DGJJ*/ 01927000
         L     @04,LOGPTR                                          0659 01928000
         LR    @03,@04                                             0659 01929000
         ALR   @03,@06                                             0659 01930000
         MVC   LOG1(1),LOG(@03)                                    0659 01931000
*            CURRD = CURRD + 1;                            /*@G51DGJJ*/ 01932000
         AH    @06,@CH00054                                        0660 01933000
         ST    @06,CURRD                                           0660 01934000
*            LOG2 = LOG;          /* FETCH 2ND DATA BYTE     @G51DGJJ*/ 01935000
         ALR   @04,@06                                             0661 01936000
         MVC   LOG2(1),LOG(@04)                                    0661 01937000
*            IF (PREVD & '400'X) = ZERO THEN                       0662 01938000
         N     @01,@CF01319                                        0662 01939000
         LTR   @01,@01                                             0662 01940000
         BNZ   @RF00662                                            0662 01941000
*               DO;                    /* SS = 01            @G51DGJJ*/ 01942000
*                 CURDL = CURRD - 1;                       /*@G51DGJJ*/ 01943000
         BCTR  @06,0                                               0664 01944000
         ST    @06,CURDL                                           0664 01945000
*                 CALL FETCHPAR;       /* FETCH PARITY BIT   @G51DGJJ*/ 01946000
         BAL   @14,FETCHPAR                                        0665 01947000
*                 R8 = PARBIT;         /* SHIFT BOTH BYTES RIGHT     */ 01948000
         L     R8,PARBIT                                           0666 01949000
*                 R9 = LOGDATA;        /* 1 BIT POSITION. INSERT     */ 01950000
         MVC   @ZT00002+2(2),LOGDATA                               0667 01951000
         L     R9,@ZT00002                                         0667 01952000
*                 SLL(R9,16);          /* PARITY BIT IN LEFT-        */ 01953000
         SLL   R9,16                                               0668 01954000
*                 SRDL(R8,17);         /* MOST POSITION OF 1ST       */ 01955000
         SRDL  R8,17                                               0669 01956000
*                 LOGDATA = R9;        /* LOG DATA BYTE.     @G51DGJJ*/ 01957000
         ST    R9,@TF00001                                         0670 01958000
         MVC   LOGDATA(2),@TF00001+2                               0670 01959000
*               END;                                       /*@G51DGJJ*/ 01960000
*            ELSE                                                  0672 01961000
*              DO;                     /* SS = 10            @G51DGJJ*/ 01962000
         B     @RC00662                                            0672 01963000
@RF00662 DS    0H                                                  0673 01964000
*                CURDL = CURRD;                            /*@G51DGJJ*/ 01965000
         MVC   CURDL(4),CURRD                                      0673 01966000
*                CALL FETCHPAR;   /* FETCH PARITY BIT        @G51DGJJ*/ 01967000
         BAL   @14,FETCHPAR                                        0674 01968000
*                R8 = PARBIT;     /* SHIFT 2ND DATA BYTE     @G51DGJJ*/ 01969000
         L     R8,PARBIT                                           0675 01970000
*                R9 = LOG2;       /* RIGHT 1 BIT POSITION    @G51DGJJ*/ 01971000
         SLR   R9,R9                                               0676 01972000
         IC    R9,LOG2                                             0676 01973000
*                SLL(R9,24);      /* AND INSERT PARITY BIT   @G51DGJJ*/ 01974000
         SLL   R9,24                                               0677 01975000
*                SRDL(R8,1);      /* IN LEFT-MOST BIT        @G51DGJJ*/ 01976000
         SRDL  R8,1                                                0678 01977000
*                R8 = LOG1;       /* POSITION.               @G51DGJJ*/ 01978000
         SLR   R8,R8                                               0679 01979000
         IC    R8,LOG1                                             0679 01980000
*                SRDL(R8,24);                              /*@G51DGJJ*/ 01981000
         SRDL  R8,24                                               0680 01982000
*                LOGDATA = R9;                             /*@G51DGJJ*/ 01983000
         ST    R9,@TF00001                                         0681 01984000
         MVC   LOGDATA(2),@TF00001+2                               0681 01985000
*               END;                                       /*@G51DGJJ*/ 01986000
*          END;                                            /*@G51DGJJ*/ 01987000
*    END;                                                  /*@G51DGJJ*/ 01988000
* RESPECIFY (R8,R9) UNRESTRICTED;                          /*@G51DGJJ*/ 01989000
*END;                                                      /*@G51DGJJ*/ 01990000
@EL00031 DS    0H                                                  0686 01991000
@EF00031 DS    0H                                                  0686 01992000
@ER00031 LM    @14,@12,@SA00031                                    0686 01993000
         BR    @14                                                 0686 01994000
*/********************************************************************/ 01995000
*/*                                                          @G51DGJJ*/ 01996000
*/* THIS PROC FETCHES THE NEXT 3 LOG DATA BYTES FOR FORMAT G.        */ 01997000
*/* IT COMPRESSES THIS DATA TO 2 BYTES                       @G51DGJJ*/ 01998000
*/* BY DROPPING THE 2 RIGHT-MOST BITS FROM THE 1ST 2         @G51DGJJ*/ 01999000
*/* BYTES AND THE 4 RIGHT-MOST BITS FROM THE 3RD BYTE.       @G51DGJJ*/ 02000000
*/*                                                          @G51DGJJ*/ 02001000
*FLOGG:     PROC;                                          /*@G51DGJJ*/ 02002000
FLOGG    STM   @14,@12,@SA00032                                    0687 02003000
* RESPECIFY (R8,R9) RESTRICTED;                            /*@G51DGJJ*/ 02004000
*  IF PREVD <= '23F'X THEN                                         0689 02005000
         L     @06,PREVD                                           0689 02006000
         CH    @06,@CH01324                                        0689 02007000
         BH    @RF00689                                            0689 02008000
*     CALL FLOGM;                                          /*@G51DGJJ*/ 02009000
         BAL   @14,FLOGM                                           0690 02010000
*  ELSE                                                            0691 02011000
*    DO;                     /* MICRO-FICHE LOG DATA         @G51DGJJ*/ 02012000
         B     @RC00689                                            0691 02013000
@RF00689 DS    0H                                                  0692 02014000
*      CALL FLOGM;           /* FETCH NEXT 2 BYYTES          @G51DGJJ*/ 02015000
         BAL   @14,FLOGM                                           0692 02016000
*      CURRD = CURRD + 1;                                  /*@G51DGJJ*/ 02017000
         LA    @06,1                                               0693 02018000
         AL    @06,CURRD                                           0693 02019000
         ST    @06,CURRD                                           0693 02020000
*      LOG3 = LOG;           /* FETCH 3RD BYTE               @G51DGJJ*/ 02021000
         AL    @06,LOGPTR                                          0694 02022000
         MVC   LOG3(1),LOG(@06)                                    0694 02023000
*      R8 = LOG1;                                          /*@G51DGJJ*/ 02024000
         SLR   R8,R8                                               0695 02025000
         IC    R8,LOG1                                             0695 02026000
*      SRL(R8,2);                                          /*@G51DGJJ*/ 02027000
         SRL   R8,2                                                0696 02028000
*      R9 = LOG2;                                          /*@G51DGJJ*/ 02029000
         SLR   R9,R9                                               0697 02030000
         IC    R9,LOG2                                             0697 02031000
*      SLL(R9,24);                                         /*@G51DGJJ*/ 02032000
         SLL   R9,24                                               0698 02033000
*      SLDL(R8,6);                                         /*@G51DGJJ*/ 02034000
         SLDL  R8,6                                                0699 02035000
*      R9 = LOG3;                                          /*@G51DGJJ*/ 02036000
         SLR   R9,R9                                               0700 02037000
         IC    R9,LOG3                                             0700 02038000
*      SLL(R9,24);                                         /*@G51DGJJ*/ 02039000
         SLL   R9,24                                               0701 02040000
*      SRDL(R8,28);                                        /*@G51DGJJ*/ 02041000
         SRDL  R8,28                                               0702 02042000
*      LOGDATA = R9;                                       /*@G51DGJJ*/ 02043000
         ST    R9,@TF00001                                         0703 02044000
         MVC   LOGDATA(2),@TF00001+2                               0703 02045000
*    END;                                                  /*@G51DGJJ*/ 02046000
* RESPECIFY (R8,R9) UNRESTRICTED;                          /*@G51DGJJ*/ 02047000
*END;                                                      /*@G51DGJJ*/ 02048000
@EL00032 DS    0H                                                  0706 02049000
@EF00032 DS    0H                                                  0706 02050000
@ER00032 LM    @14,@12,@SA00032                                    0706 02051000
         BR    @14                                                 0706 02052000
*/********************************************************************/ 02053000
*/*                                                          @G51DGJJ*/ 02054000
*/* THIS PROC PROCESSES THE 'DISPLAY HEX - PARITY|NOT'       @G51DGJJ*/ 02055000
*/* COMMAND.                                                 @G51DGJJ*/ 02056000
*/*                                                          @G51DGJJ*/ 02057000
*DISPLAYH: PROC;                                           /*@G51DGJJ*/ 02058000
DISPLAYH STM   @14,@12,@SA00033                                    0707 02059000
*  PARITY = OFF;                                           /*@G51DGJJ*/ 02060000
         NI    PARITY,B'11110111'                                  0708 02061000
*  IF (PRINTB2 & '80'X) ^= ZERO THEN                               0709 02062000
         L     @06,LINEPTR                                         0709 02063000
         LA    @04,128                                             0709 02064000
         MVC   @ZT00003+3(1),PRINTB2(@06)                          0709 02065000
         N     @04,@ZT00003                                        0709 02066000
         LTR   @04,@04                                             0709 02067000
         BZ    @RF00709                                            0709 02068000
*    DO;                                                   /*@G51DGJJ*/ 02069000
*      PARITY = ON;               /* DISPLAY HEX - PARITY    @G51DGJJ*/ 02070000
         OI    PARITY,B'00001000'                                  0711 02071000
*      SAVEL = PRINTBUF & '20'X;  /* SAVE 'L' BIT            @G51DGJJ*/ 02072000
         MVC   SAVEL(1),PRINTBUF(@06)                              0712 02073000
         NI    SAVEL,X'20'                                         0712 02074000
*    END;                                                  /*@G51DGJJ*/ 02075000
*  PREVD = PRINTB2 & '3F'X; /* OFFSET TO STARTING BYTE       @G51DGJJ*/ 02076000
@RF00709 L     @06,LINEPTR                                         0714 02077000
         LA    @04,63                                              0714 02078000
         MVC   @ZT00003+3(1),PRINTB2(@06)                          0714 02079000
         N     @04,@ZT00003                                        0714 02080000
         ST    @04,PREVD                                           0714 02081000
*  SLL(PREVD,5);            /* OF LOG DATA - DDDDDD          @G51DGJJ*/ 02082000
         SLL   @04,5                                               0715 02083000
         ST    @04,PREVD                                           0715 02084000
*  PREVD = PREVD | PRINTB3 & '1F'X;   /*   - DDDDDDDDDDD     @G51DGJJ*/ 02085000
         SLR   @04,@04                                             0716 02086000
         IC    @04,PRINTB3(,@06)                                   0716 02087000
         LA    @03,31                                              0716 02088000
         NR    @03,@04                                             0716 02089000
         O     @03,PREVD                                           0716 02090000
         ST    @03,PREVD                                           0716 02091000
*  PREVZ = PRINTB3;         /* OFFSET TO STARTING BIT        @G51DGJJ*/ 02092000
         ST    @04,PREVZ                                           0717 02093000
*  SRL(PREVZ,5);            /* WITHIN BYTE - ZZZ             @G51DGJJ*/ 02094000
         SRL   @04,5                                               0718 02095000
         ST    @04,PREVZ                                           0718 02096000
*  PREVB = 0;                                              /*@G51DGJJ*/ 02097000
         SLR   @04,@04                                             0719 02098000
         ST    @04,PREVB                                           0719 02099000
*  CURRC = PRINTBUF & '18'X;                               /*@G51DGJJ*/ 02100000
         LA    @03,24                                              0720 02101000
         MVC   @ZT00003+3(1),PRINTBUF(@06)                         0720 02102000
         N     @03,@ZT00003                                        0720 02103000
         ST    @03,CURRC                                           0720 02104000
*  SRL(CURRC,3);            /* CC                            @G51DGJJ*/ 02105000
         SRL   @03,3                                               0721 02106000
         ST    @03,CURRC                                           0721 02107000
*  IF CURRC = ZERO THEN                                            0722 02108000
         C     @04,CURRC                                           0722 02109000
         BNE   @RF00722                                            0722 02110000
*    CURRC= FOUR;                                          /*@G51DGJJ*/ 02111000
         MVC   CURRC(4),@CF00063                                   0723 02112000
*  CURRM = PRINTBUF & '07'X; /* MMM                          @G51DGJJ*/ 02113000
@RF00722 L     @06,LINEPTR                                         0724 02114000
         LA    @04,7                                               0724 02115000
         MVC   @ZT00003+3(1),PRINTBUF(@06)                         0724 02116000
         N     @04,@ZT00003                                        0724 02117000
         ST    @04,CURRM                                           0724 02118000
*  CURRB = CURRC + CURRM;    /* BIT STRING LENGTH = CC+MMM   @G51DGJJ*/ 02119000
         AL    @04,CURRC                                           0725 02120000
         ST    @04,CURRB                                           0725 02121000
*  PRNTB123 = BLANK3;        /* REPLACE COMM. WITH 3 BLANKS  @G51DGJJ*/ 02122000
         MVC   PRNTB123(3,@06),BLANK3                              0726 02123000
*  LINEPTR = LINEPTR + 3;    /* BUMP PRINT BUFFER POINTER,   @G51DGJJ*/ 02124000
         LA    @04,3                                               0727 02125000
         ALR   @06,@04                                             0727 02126000
         ST    @06,LINEPTR                                         0727 02127000
*  CHARCNT = CHARCNT + 3;    /* SCAN CODE COUNTER            @G51DGJJ*/ 02128000
         AL    @04,CHARCNT                                         0728 02129000
         ST    @04,CHARCNT                                         0728 02130000
*  CALL HEXLOG;              /* GET LOG DATA, FORMAT IT      @G51DGJJ*/ 02131000
         BAL   @14,HEXLOG                                          0729 02132000
*  SW1 = ON;                                               /*@G51DGJJ*/ 02133000
         OI    SW1,B'00010000'                                     0730 02134000
*  DO WHILE (SW1 = ON);                                    /*@G51DGJJ*/ 02135000
         B     @DE00731                                            0731 02136000
@DL00731 DS    0H                                                  0732 02137000
*    IF CHARCNT => 80 THEN                                         0732 02138000
         L     @06,CHARCNT                                         0732 02139000
         CH    @06,@CH00550                                        0732 02140000
         BL    @RF00732                                            0732 02141000
*      SW1 = OFF;                                          /*@G51DGJJ*/ 02142000
         NI    SW1,B'11101111'                                     0733 02143000
*    ELSE                                                          0734 02144000
*      DO;                   /* EXAMINE NEXT SCAN CODE       @G51DGJJ*/ 02145000
         B     @RC00732                                            0734 02146000
@RF00732 DS    0H                                                  0735 02147000
*        IF (PRINTBUF & 'C0'X) = '80'X THEN                        0735 02148000
         L     @06,LINEPTR                                         0735 02149000
         MVC   @TS00001(1),PRINTBUF(@06)                           0735 02150000
         NI    @TS00001,X'C0'                                      0735 02151000
         CLI   @TS00001,X'80'                                      0735 02152000
         BNE   @RF00735                                            0735 02153000
*          CALL NEXTHEX;     /* 'DISPLAY NEXT' COMMAND       @G51DGJJ*/ 02154000
         BAL   @14,NEXTHEX                                         0736 02155000
*        ELSE                                                      0737 02156000
*          IF PRINTBUF => '00'X &                                  0737 02157000
*             PRINTBUF <= '3F'X THEN                               0737 02158000
         B     @RC00735                                            0737 02159000
@RF00735 L     @06,LINEPTR                                         0737 02160000
         CLI   PRINTBUF(@06),X'00'                                 0737 02161000
         BL    @RF00737                                            0737 02162000
         CLI   PRINTBUF(@06),X'3F'                                 0737 02163000
         BH    @RF00737                                            0737 02164000
*             CALL TEXT;     /* TEXT - TOO MANY PLACE-HOLDERS?       */ 02165000
         BAL   @14,TEXT                                            0738 02166000
*          ELSE              /* NOT 'DISPLAY NEXT' --        @G51DGJJ*/ 02167000
*            SW1 = OFF;      /* LET 'CODETYPE' PROCEDURE     @G51DGJJ*/ 02168000
         B     @RC00737                                            0739 02169000
@RF00737 NI    SW1,B'11101111'                                     0739 02170000
*      END;                  /* PROCESS IT                   @G51DGJJ*/ 02171000
@RC00737 DS    0H                                                  0740 02172000
@RC00735 DS    0H                                                  0741 02173000
*  END;                                                    /*@G51DGJJ*/ 02174000
@RC00732 DS    0H                                                  0741 02175000
@DE00731 TM    SW1,B'00010000'                                     0741 02176000
         BO    @DL00731                                            0741 02177000
*END;                                                      /*@G51DGJJ*/ 02178000
@EL00033 DS    0H                                                  0742 02179000
@EF00033 DS    0H                                                  0742 02180000
@ER00033 LM    @14,@12,@SA00033                                    0742 02181000
         BR    @14                                                 0742 02182000
*/********************************************************************/ 02183000
*/*                                                          @G51DGJJ*/ 02184000
*/* THIS PROC FETCHES THE LOG DATA. PARITY IS CHECKED-       @G51DGJJ*/ 02185000
*/* (IF INDICATED)-USING THE PARITY BIT FROM THE DATA        @G51DGJJ*/ 02186000
*/* (L=0) OR FROM THE PARITY BIT AREA (L=1). 'FORMATHX'      @G51DGJJ*/ 02187000
*/* IS THEN INVOKED WHICH FORMATS THE DATA FOR PRINT.        @G51DGJJ*/ 02188000
*/* THE PROC IS CALLED BY BOTH 'DISPLAYH'(DISPLAY HEX)       @G51DGJJ*/ 02189000
*/* AND 'NEXTHEX'(DISPLAY NEXT HEX). TWO OR THREE LOG        @G51DGJJ*/ 02190000
*/* DATA BYTES ARE FETCHED BY THE SAME "FLOG" ROUTINES       @G51DGJJ*/ 02191000
*/* DESCRIBED IN THE PROC 'BINLOG'.                          @G51DGJJ*/ 02192000
*/*                                                          @G51DGJJ*/ 02193000
*HEXLOG:    PROC;                                          /*@G51DGJJ*/ 02194000
HEXLOG   STM   @14,@12,@SA00034                                    0743 02195000
*  IF SVLOGT1 = 'E8'X |                                            0744 02196000
*     SVLOGT1 = 'EC'X THEN                                         0744 02197000
         CLI   SVLOGT1,X'E8'                                       0744 02198000
         BE    @RT00744                                            0744 02199000
         CLI   SVLOGT1,X'EC'                                       0744 02200000
         BNE   @RF00744                                            0744 02201000
@RT00744 DS    0H                                                  0745 02202000
*     CALL FLOGM;            /* CCH OR 3033 MCH - FETCH DATA @G51DGJJ*/ 02203000
         BAL   @14,FLOGM                                           0745 02204000
*  ELSE                                                            0746 02205000
*    IF SVLOGT1 = 'ED'X THEN                                       0746 02206000
         B     @RC00744                                            0746 02207000
@RF00744 CLI   SVLOGT1,X'ED'                                       0746 02208000
         BNE   @RF00746                                            0746 02209000
*      CALL FLOGG;           /* FETCH FORMAT G DATA          @G51DGJJ*/ 02210000
         BAL   @14,FLOGG                                           0747 02211000
*    ELSE                                                          0748 02212000
*      CALL FLOGY;           /* FETCH FORMAT Y DATA          @G51DGJJ*/ 02213000
         B     @RC00746                                            0748 02214000
@RF00746 BAL   @14,FLOGY                                           0748 02215000
*  IF PARITY = ON THEN                                             0749 02216000
@RC00746 DS    0H                                                  0749 02217000
@RC00744 TM    PARITY,B'00001000'                                  0749 02218000
         BNO   @RF00749                                            0749 02219000
*   DO;                                                    /*@G51DGJJ*/ 02220000
*    IF SAVEL = ZERO THEN                                          0751 02221000
         CLI   SAVEL,0                                             0751 02222000
         BNE   @RF00751                                            0751 02223000
*     DO;                    /* PARITY WITH DATA - GET IT    @G51DGJJ*/ 02224000
*      IF CURRZ = ZERO THEN                                        0753 02225000
         L     @06,CURRZ                                           0753 02226000
         LTR   @06,@06                                             0753 02227000
         BNZ   @RF00753                                            0753 02228000
*       DO;                  /* PARITY BIT IN PREV. BYTE     @G51DGJJ*/ 02229000
*        CURRD = CURRD - 2;                                /*@G51DGJJ*/ 02230000
         LA    @06,2                                               0755 02231000
         L     @04,CURRD                                           0755 02232000
         SLR   @04,@06                                             0755 02233000
         ST    @04,CURRD                                           0755 02234000
*        WK = LOG;           /* GET BYTE - BIT RIGHT JUST.   @G51DGJJ*/ 02235000
         L     @03,LOGPTR                                          0756 02236000
         ALR   @03,@04                                             0756 02237000
         MVC   WK(1),LOG(@03)                                      0756 02238000
*        CURRD = CURRD + 2;                                /*@G51DGJJ*/ 02239000
         ALR   @04,@06                                             0757 02240000
         ST    @04,CURRD                                           0757 02241000
*       END;                                               /*@G51DGJJ*/ 02242000
*      ELSE                                                        0759 02243000
*       DO;                  /* PARITY BIT IN SAME BYTE      @G51DGJJ*/ 02244000
         B     @RC00753                                            0759 02245000
@RF00753 DS    0H                                                  0760 02246000
*        WK = LOG1;                                        /*@G51DGJJ*/ 02247000
         MVC   WK(1),LOG1                                          0760 02248000
*        X = EIGHT - CURRZ;                                /*@G51DGJJ*/ 02249000
         LA    @06,8                                               0761 02250000
         SL    @06,CURRZ                                           0761 02251000
         ST    @06,X                                               0761 02252000
*        SRL(WK,X);          /* RIGHT JUSTIFY PARITY BIT     @G51DGJJ*/ 02253000
         SLR   @04,@04                                             0762 02254000
         IC    @04,WK                                              0762 02255000
         SRL   @04,0(@06)                                          0762 02256000
         STC   @04,WK                                              0762 02257000
*       END;                                               /*@G51DGJJ*/ 02258000
*       PARBIT = WK & '01'X; /* EXTRACT, SAVE PARITY BIT     @G51DGJJ*/ 02259000
@RC00753 LA    @06,1                                               0764 02260000
         MVC   @ZT00003+3(1),WK                                    0764 02261000
         N     @06,@ZT00003                                        0764 02262000
         ST    @06,PARBIT                                          0764 02263000
*     END;                                                 /*@G51DGJJ*/ 02264000
*    ELSE                                                          0766 02265000
*     DO;                                                  /*@G51DGJJ*/ 02266000
         B     @RC00751                                            0766 02267000
@RF00751 DS    0H                                                  0767 02268000
*      CURDL = CURRD - 1;                                  /*@G51DGJJ*/ 02269000
         L     @06,CURRD                                           0767 02270000
         BCTR  @06,0                                               0767 02271000
         ST    @06,CURDL                                           0767 02272000
*      CALL FETCHPAR;        /* PARITY NOT WITH DATA - FETCH @G51DGJJ*/ 02273000
         BAL   @14,FETCHPAR                                        0768 02274000
*     END;                                                 /*@G51DGJJ*/ 02275000
*    CALL CKPARITY;          /* CHECK PARITY                 @G51DGJJ*/ 02276000
@RC00751 BAL   @14,CKPARITY                                        0770 02277000
*   END;                                                   /*@G51DGJJ*/ 02278000
*    CALL FORMATHX;          /* FORMAT HEX DATA FOR PRINT    @G51DGJJ*/ 02279000
@RF00749 BAL   @14,FORMATHX                                        0772 02280000
*END;                                                      /*@G51DGJJ*/ 02281000
@EL00034 DS    0H                                                  0773 02282000
@EF00034 DS    0H                                                  0773 02283000
@ER00034 LM    @14,@12,@SA00034                                    0773 02284000
         BR    @14                                                 0773 02285000
*/********************************************************************/ 02286000
*/*                                                          @G51DGJJ*/ 02287000
*/* THIS PROC FETCHES THE PARITY BIT FROM THE                @G51DGJJ*/ 02288000
*/* PARITY BIT AREA OF THE LOGOUT.                           @G51DGJJ*/ 02289000
*/*                                                          @G51DGJJ*/ 02290000
*FETCHPAR:  PROC;                                          /*@G51DGJJ*/ 02291000
FETCHPAR STM   @14,@12,12(@13)                                     0774 02292000
*  PBYTEPTR = CURDL & '0007'X;    /* EXTRACT P-BIT OFFSET    @G51DGJJ*/ 02293000
         L     @06,CURDL                                           0775 02294000
         LA    @04,7                                               0775 02295000
         NR    @04,@06                                             0775 02296000
         STH   @04,PBYTEPTR                                        0775 02297000
*  PBITPTR = PBYTEPTR;            /* SAVE (DDD)              @G51DGJJ*/ 02298000
         STH   @04,PBITPTR                                         0776 02299000
*  PBYTEPTR = CURDL;              /* OFFSET - LOG DATA BYTE  @G51DGJJ*/ 02300000
         STH   @06,PBYTEPTR                                        0777 02301000
*  SRL(PBYTEPTR,3);               /* OFFSET TO P-BIT BYTE +  @G51DGJJ*/ 02302000
         SRL   @06,3                                               0778 02303000
         STH   @06,PBYTEPTR                                        0778 02304000
*                                 /* OFFSET TO P-BIT AREA    @G51DGJJ*/ 02305000
*  PBYTEPTR = PBYTEPTR + (SVLOGT23 & '3FFF'X);             /*@G51DGJJ*/ 02306000
         LH    @06,@CH01342                                        0779 02307000
         MVC   @ZT00002+2(2),SVLOGT23                              0779 02308000
         N     @06,@ZT00002                                        0779 02309000
         AH    @06,PBYTEPTR                                        0779 02310000
         STH   @06,PBYTEPTR                                        0779 02311000
*  WK = PARBYTE;                  /* FETCH PARITY BYTE       @G51DGJJ*/ 02312000
         AL    @06,LOGPTR                                          0780 02313000
         MVC   WK(1),PARBYTE(@06)                                  0780 02314000
*  X = 7 - PBITPTR;               /* COMPUTE SHIFT VALUE     @G51DGJJ*/ 02315000
         LCR   @04,@04                                             0781 02316000
         AH    @04,@CH00082                                        0781 02317000
         ST    @04,X                                               0781 02318000
*  SRL(WK,X);                     /* RIGHT JUSTIFY P-BIT     @G51DGJJ*/ 02319000
         SLR   @06,@06                                             0782 02320000
         IC    @06,WK                                              0782 02321000
         SRL   @06,0(@04)                                          0782 02322000
         STC   @06,WK                                              0782 02323000
*  PARBIT = WK & '01'X;           /* EXTRACT, SAVE IT        @G51DGJJ*/ 02324000
         LA    @06,1                                               0783 02325000
         MVC   @ZT00003+3(1),WK                                    0783 02326000
         N     @06,@ZT00003                                        0783 02327000
         ST    @06,PARBIT                                          0783 02328000
*END;                                                      /*@G51DGJJ*/ 02329000
@EL00035 DS    0H                                                  0784 02330000
@EF00035 DS    0H                                                  0784 02331000
@ER00035 LM    @14,@12,12(@13)                                     0784 02332000
         BR    @14                                                 0784 02333000
*/********************************************************************/ 02334000
*/*                                                          @G51DGJJ*/ 02335000
*/* THIS PROC PERFORMS A PARITY CHECK ON LOG DATA            @G51DGJJ*/ 02336000
*/*                                                          @G51DGJJ*/ 02337000
*CKPARITY:  PROC;                                          /*@G51DGJJ*/ 02338000
CKPARITY STM   @14,@12,12(@13)                                     0785 02339000
* RESPECIFY (R8,R9) RESTRICTED;                            /*@G51DGJJ*/ 02340000
*  R8 = ZERO;                                              /*@G51DGJJ*/ 02341000
         SLR   R8,R8                                               0787 02342000
*  R9 = LOGDATA;             /* LOAD LOG DATA                @G51DGJJ*/ 02343000
         MVC   @ZT00002+2(2),LOGDATA                               0788 02344000
         L     R9,@ZT00002                                         0788 02345000
*  X = 16 + CURRZ;           /* COMPUTE SHIFT VALUE          @G51DGJJ*/ 02346000
         LA    @06,16                                              0789 02347000
         AL    @06,CURRZ                                           0789 02348000
         ST    @06,X                                               0789 02349000
*  SLL(R9,X);                /* LEFT JUSTIFY LOG DATA        @G51DGJJ*/ 02350000
         SLL   R9,0(@06)                                           0790 02351000
*  P = PARBIT;                                             /*@G51DGJJ*/ 02352000
         MVC   P(4),PARBIT                                         0791 02353000
*  DO X = 1 TO CURRB;                                      /*@G51DGJJ*/ 02354000
         LA    @06,1                                               0792 02355000
         B     @DE00792                                            0792 02356000
@DL00792 DS    0H                                                  0793 02357000
*    SLDL(R8,1);             /*'EXCLUSIVE OR' PARITY BIT,    @G51DGJJ*/ 02358000
         SLDL  R8,1                                                0793 02359000
*    R8 = R8 && P;           /* DATA BITS. RESULT = 1 IF     @G51DGJJ*/ 02360000
         X     R8,P                                                0794 02361000
*    P = R8;                 /* ODD PARITY (OK)              @G51DGJJ*/ 02362000
         ST    R8,P                                                0795 02363000
*    R8 = ZERO;                                            /*@G51DGJJ*/ 02364000
         SLR   R8,R8                                               0796 02365000
*  END;                                                    /*@G51DGJJ*/ 02366000
         AH    @06,@CH00054                                        0797 02367000
@DE00792 ST    @06,X                                               0797 02368000
         C     @06,CURRB                                           0797 02369000
         BNH   @DL00792                                            0797 02370000
*  IF P = ZERO THEN                                                0798 02371000
         L     @06,P                                               0798 02372000
         LTR   @06,@06                                             0798 02373000
         BNZ   @RF00798                                            0798 02374000
*    DO;                     /* EVEN PARITY - ERROR          @G51DGJJ*/ 02375000
*      LINEPTR = LINEPTR - 1;                              /*@G51DGJJ*/ 02376000
         L     @06,LINEPTR                                         0800 02377000
         BCTR  @06,0                                               0800 02378000
         ST    @06,LINEPTR                                         0800 02379000
*      PRINTBUF = '1C'X;     /* INSERT '*' IN BUFFER         @G51DGJJ*/ 02380000
         MVI   PRINTBUF(@06),X'1C'                                 0801 02381000
*      LINEPTR = LINEPTR + 1;                              /*@G51DGJJ*/ 02382000
         AH    @06,@CH00054                                        0802 02383000
         ST    @06,LINEPTR                                         0802 02384000
*    END;                                                  /*@G51DGJJ*/ 02385000
* RESPECIFY (R8,R9) UNRESTRICTED;                          /*@G51DGJJ*/ 02386000
*END;                                                      /*@G51DGJJ*/ 02387000
@EL00036 DS    0H                                                  0805 02388000
@EF00036 DS    0H                                                  0805 02389000
@ER00036 LM    @14,@12,12(@13)                                     0805 02390000
         BR    @14                                                 0805 02391000
*/********************************************************************/ 02392000
*/*                                                          @G51DGJJ*/ 02393000
*/* THIS PROC CONVERTS HEX LOG DATA TO SCAN CODE             @G51DGJJ*/ 02394000
*/* AND FORMATS IT INTO THE PRINT BUFFER(PRTBUFF),           @G51DGJJ*/ 02395000
*/* REPLACING THE LOG DATA PLACE-HOLDERS.                    @G51DGJJ*/ 02396000
*/*                                                          @G51DGJJ*/ 02397000
*FORMATHX:  PROC;                                          /*@G51DGJJ*/ 02398000
FORMATHX STM   @14,@12,12(@13)                                     0806 02399000
* RESPECIFY (R8,R9) RESTRICTED;                            /*@G51DGJJ*/ 02400000
*  R9 = LOGDATA;                                           /*@G51DGJJ*/ 02401000
         MVC   @ZT00002+2(2),LOGDATA                               0808 02402000
         L     R9,@ZT00002                                         0808 02403000
*  X = 16 + CURRZ;           /* COMPUTE SHIFT VALUE          @G51DGJJ*/ 02404000
         LA    @06,16                                              0809 02405000
         AL    @06,CURRZ                                           0809 02406000
         ST    @06,X                                               0809 02407000
*  SLL(R9,X);                /* LEFT JUSTIFY LOG DATA        @G51DGJJ*/ 02408000
         SLL   R9,0(@06)                                           0810 02409000
*  R8 = ZERO;                                              /*@G51DGJJ*/ 02410000
         SLR   R8,R8                                               0811 02411000
*  SLDL(R8,CURRC);           /* 1ST HEX CHARACTER            @G51DGJJ*/ 02412000
         L     @06,CURRC                                           0812 02413000
         SLDL  R8,0(@06)                                           0812 02414000
*  SCNCODE = R8;                                           /*@G51DGJJ*/ 02415000
         STC   R8,SCNCODE                                          0813 02416000
*  TR(SCNCODE,TRSCANCD);     /* TRANSLATE TO SCAN CODE       @G51DGJJ*/ 02417000
         TR    SCNCODE(1),TRSCANCD                                 0814 02418000
*  PRINTBUF = SCNCODE;       /* PLACE CODE IN PRINT BUFFER   @G51DGJJ*/ 02419000
         L     @06,LINEPTR                                         0815 02420000
         MVC   PRINTBUF(1,@06),SCNCODE                             0815 02421000
*  LINEPTR = LINEPTR + 1;    /* BUMP PRINT BUFFER POINTER,   @G51DGJJ*/ 02422000
         LA    @04,1                                               0816 02423000
         ALR   @06,@04                                             0816 02424000
         ST    @06,LINEPTR                                         0816 02425000
*  CHARCNT = CHARCNT + 1;    /* SCAN CODE COUNTER            @G51DGJJ*/ 02426000
         L     @03,CHARCNT                                         0817 02427000
         ALR   @03,@04                                             0817 02428000
         ST    @03,CHARCNT                                         0817 02429000
*  IF CURRM ^= ZERO THEN                                           0818 02430000
         L     @15,CURRM                                           0818 02431000
         LTR   @15,@15                                             0818 02432000
         BZ    @RF00818                                            0818 02433000
*    DO;                                                   /*@G51DGJJ*/ 02434000
*      R8 = ZERO;                                          /*@G51DGJJ*/ 02435000
         SLR   R8,R8                                               0820 02436000
*      SLDL(R8,CURRM);       /* 2ND HEX CHARACTER            @G51DGJJ*/ 02437000
         SLDL  R8,0(@15)                                           0821 02438000
*      SCNCODE = R8;                                       /*@G51DGJJ*/ 02439000
         STC   R8,SCNCODE                                          0822 02440000
*      TR(SCNCODE,TRSCANCD); /* TRANSLATE TO SCAN CODE       @G51DGJJ*/ 02441000
         TR    SCNCODE(1),TRSCANCD                                 0823 02442000
*      PRINTBUF = SCNCODE;   /* PLACE CODE IN PRINT BUFFER   @G51DGJJ*/ 02443000
         MVC   PRINTBUF(1,@06),SCNCODE                             0824 02444000
*      LINEPTR = LINEPTR + 1;/* BUMP PRINT BUFFER POINTER,   @G51DGJJ*/ 02445000
         ALR   @06,@04                                             0825 02446000
         ST    @06,LINEPTR                                         0825 02447000
*      CHARCNT = CHARCNT + 1;/* SCAN CODE COUNTER            @G51DGJJ*/ 02448000
         ALR   @03,@04                                             0826 02449000
         ST    @03,CHARCNT                                         0826 02450000
*    END;                                                  /*@G51DGJJ*/ 02451000
* RESPECIFY (R8,R9) UNRESTRICTED;                          /*@G51DGJJ*/ 02452000
*END;                                                      /*@G51DGJJ*/ 02453000
@EL00037 DS    0H                                                  0829 02454000
@EF00037 DS    0H                                                  0829 02455000
@ER00037 LM    @14,@12,12(@13)                                     0829 02456000
         BR    @14                                                 0829 02457000
*/********************************************************************/ 02458000
*/*                                                          @G51DGJJ*/ 02459000
*/* THIS PROC PROCESSES THE 'DISPLAY NEXT CHARACTER HEX'     @G51DGJJ*/ 02460000
*/* COMMAND.                                                 @G51DGJJ*/ 02461000
*/*                                                          @G51DGJJ*/ 02462000
*NEXTHEX:   PROC;                                          /*@G51DGJJ*/ 02463000
NEXTHEX  STM   @14,@12,@SA00038                                    0830 02464000
*  CURRC = PRINTBUF & '18'X;                               /*@G51DGJJ*/ 02465000
         LA    @06,24                                              0831 02466000
         L     @04,LINEPTR                                         0831 02467000
         MVC   @ZT00003+3(1),PRINTBUF(@04)                         0831 02468000
         N     @06,@ZT00003                                        0831 02469000
         ST    @06,CURRC                                           0831 02470000
*  SRL(CURRC,3);             /* CC                           @G51DGJJ*/ 02471000
         SRL   @06,3                                               0832 02472000
         ST    @06,CURRC                                           0832 02473000
*  IF CURRC = ZERO THEN                                            0833 02474000
         L     @06,CURRC                                           0833 02475000
         LTR   @06,@06                                             0833 02476000
         BNZ   @RF00833                                            0833 02477000
*  CURRC = FOUR;                                           /*@G51DGJJ*/ 02478000
         MVC   CURRC(4),@CF00063                                   0834 02479000
*  CURRM = PRINTBUF & '07'X; /* MMM                          @G51DGJJ*/ 02480000
@RF00833 L     @06,LINEPTR                                         0835 02481000
         LA    @04,7                                               0835 02482000
         MVC   @ZT00003+3(1),PRINTBUF(@06)                         0835 02483000
         N     @04,@ZT00003                                        0835 02484000
         ST    @04,CURRM                                           0835 02485000
*  CURRB = CURRC + CURRM;    /* BIT STRING LENGTH = CC+MMM   @G51DGJJ*/ 02486000
         AL    @04,CURRC                                           0836 02487000
         ST    @04,CURRB                                           0836 02488000
*  SAVEL = PRINTBUF & '20'X; /* SAVE 'L' BIT                 @G51DGJJ*/ 02489000
         MVC   SAVEL(1),PRINTBUF(@06)                              0837 02490000
         NI    SAVEL,X'20'                                         0837 02491000
*  PRINTBUF = BLANK;                                       /*@G51DGJJ*/ 02492000
         MVI   PRINTBUF(@06),C' '                                  0838 02493000
*  LINEPTR = LINEPTR + 1;    /* BUMP PRINT BUFFER POINTER,   @G51DGJJ*/ 02494000
         LA    @04,1                                               0839 02495000
         ALR   @06,@04                                             0839 02496000
         ST    @06,LINEPTR                                         0839 02497000
*  CHARCNT = CHARCNT + 1;    /* SCAN CODE COUNTER            @G51DGJJ*/ 02498000
         AL    @04,CHARCNT                                         0840 02499000
         ST    @04,CHARCNT                                         0840 02500000
*  CALL HEXLOG;              /* GET LOG DATA, FORMAT IT      @G51DGJJ*/ 02501000
         BAL   @14,HEXLOG                                          0841 02502000
*END;                                                      /*@G51DGJJ*/ 02503000
@EL00038 DS    0H                                                  0842 02504000
@EF00038 DS    0H                                                  0842 02505000
@ER00038 LM    @14,@12,@SA00038                                    0842 02506000
         BR    @14                                                 0842 02507000
*/********************************************************************/ 02508000
*/*                                                          @G51DGJJ*/ 02509000
*/* THIS PROC FORMATS MESSAGES(AS REQUIRED) ON THE SAME      @G51DGJJ*/ 02510000
*/* PRINT LINE AS THE EDITED DATA TO PRINTABLE(EBCDIC)       @G51DGJJ*/ 02511000
*/* AND PRINTS THE LINE ON EREPPT.                           @G51DGJJ*/ 02512000
*/*                                                          @G51DGJJ*/ 02513000
*TRNSLATE:  PROC;                                          /*@G51DGJJ*/ 02514000
TRNSLATE STM   @14,@12,@SA00039                                    0843 02515000
*  IF SCANERR = ON THEN                                            0844 02516000
         TM    SCANERR,B'01000000'                                 0844 02517000
         BNO   @RF00844                                            0844 02518000
*    CALL SCANCODE;              /* FORMAT ERROR MESSAGE     @G51DGJJ*/ 02519000
         BAL   @14,SCANCODE                                        0845 02520000
*  IF LINECTR = 1 THEN                                             0846 02521000
@RF00844 CLC   LINECTR(4),@CF00054                                 0846 02522000
         BNE   @RF00846                                            0846 02523000
*    CALL FRSTLINE;              /* FORMAT FRAME ID HEADER MSG.      */ 02524000
         BAL   @14,FRSTLINE                                        0847 02525000
*  IF LINECTR = 24 THEN                                            0848 02526000
@RF00846 CLC   LINECTR(4),@CF00227                                 0848 02527000
         BNE   @RF00848                                            0848 02528000
*    CALL LASTLINE;              /* FORMAT LINE 24 ID MESSAGE        */ 02529000
         BAL   @14,LASTLINE                                        0849 02530000
*  TR(PRTBUFF,TRTABLE);          /* TRANSLATE TO PRINTABLE   @G51DGJJ*/ 02531000
@RF00848 TR    PRTBUFF(80),TRTABLE                                 0850 02532000
*  PRNTBUFF = PRTBUFF;                                     /*@G51DGJJ*/ 02533000
         MVC   PRNTBUFF(80),PRTBUFF                                0851 02534000
*  CALL PRINT1;                  /* PRINT LINE               @G51DGJJ*/ 02535000
         BAL   @14,PRINT1                                          0852 02536000
*END;                                                      /*@G51DGJJ*/ 02537000
@EL00039 DS    0H                                                  0853 02538000
@EF00039 DS    0H                                                  0853 02539000
@ER00039 LM    @14,@12,@SA00039                                    0853 02540000
         BR    @14                                                 0853 02541000
*/********************************************************************/ 02542000
*/*                                                          @G51DGJJ*/ 02543000
*/* THIS PROC FORMATS A 'SCAN CODE ERROR' MESSAGE FOR        @G51DGJJ*/ 02544000
*/* EREPPT.                                                  @G51DGJJ*/ 02545000
*/*                                                          @G51DGJJ*/ 02546000
*SCANCODE:     PROC;                                       /*@G51DGJJ*/ 02547000
SCANCODE STM   @14,@12,@SA00040                                    0854 02548000
*  CALL IFCMSG(77,ADDR(MESSAGE)); /* GET ERROR MESSAGE       @G51DGJJ*/ 02549000
         LA    @06,MESSAGE                                         0855 02550000
         ST    @06,@AFTEMPS+20                                     0855 02551000
         L     @15,ADIFCMSG(,R2)                                   0855 02552000
         LA    @01,@AL00855                                        0855 02553000
         BALR  @14,@15                                             0855 02554000
*END;                                                      /*@G51DGJJ*/ 02555000
@EL00040 DS    0H                                                  0856 02556000
@EF00040 DS    0H                                                  0856 02557000
@ER00040 LM    @14,@12,@SA00040                                    0856 02558000
         BR    @14                                                 0856 02559000
*/********************************************************************/ 02560000
*/*                                                          @G51DGJJ*/ 02561000
*/* THIS PROC FORMATS A FRAME IDENTIFICATION MESSAGE ON      @G51DGJJ*/ 02562000
*/* THE FIRST LINE OF EACH FRAME TO PRINT BESIDE LINE 1.     @G51DGJJ*/ 02563000
*/*                                                          @G51DGJJ*/ 02564000
*FRSTLINE:  PROC;                                          /*@G51DGJJ*/ 02565000
FRSTLINE STM   @14,@12,@SA00041                                    0857 02566000
*  K = MCFCNT;               /* FRAME SEQUENCE NO.           @G51DGJJ*/ 02567000
         SLR   @06,@06                                             0858 02568000
         IC    @06,MCFCNT(,R5)                                     0858 02569000
         ST    @06,K                                               0858 02570000
*  CALL CONVBIN(K,BINOUT);                                 /*@G51DGJJ*/ 02571000
         LA    @01,@AL00859                                        0859 02572000
         BAL   @14,CONVBIN                                         0859 02573000
*  FRMNO = BINOUT(4:5);                                    /*@G51DGJJ*/ 02574000
         MVC   FRMNO(2),BINOUT+3                                   0860 02575000
*  IF MCFKEY1 = MCF THEN                                           0861 02576000
         CLI   MCFKEY1(R5),X'A0'                                   0861 02577000
         BNE   @RF00861                                            0861 02578000
*    MCFCCFFR = MCFL;                                      /*@G51DGJJ*/ 02579000
         MVC   MCFCCFFR(2),MCFL                                    0862 02580000
*  ELSE                                                            0863 02581000
*    MCFCCFFR = CCFL;                                      /*@G51DGJJ*/ 02582000
         B     @RC00861                                            0863 02583000
@RF00861 MVC   MCFCCFFR(2),CCFL                                    0863 02584000
*  PARM3 = TWO;                                            /*@G51DGJJ*/ 02585000
@RC00861 MVC   PARM3(4),@CF00073                                   0864 02586000
*  CALL CONVERT(MCFMOD,MODFR,PARM3);                       /*@G51DGJJ*/ 02587000
         MVC   @AL00001+4(8),@AL00865                              0865 02588000
         LA    @06,MCFMOD(,R5)                                     0865 02589000
         ST    @06,@AL00001                                        0865 02590000
         LA    @01,@AL00001                                        0865 02591000
         BAL   @14,CONVERT                                         0865 02592000
*   PARM3 = THREE;                                         /*@G51DGJJ*/ 02593000
         MVC   PARM3(4),@CF00075                                   0866 02594000
*  CALL CONVERT(MCFSER,SERFR,PARM3);                       /*@G51DGJJ*/ 02595000
         MVC   @AL00001+4(8),@AL00867                              0867 02596000
         LA    @06,MCFSER(,R5)                                     0867 02597000
         ST    @06,@AL00001                                        0867 02598000
         LA    @01,@AL00001                                        0867 02599000
         BAL   @14,CONVERT                                         0867 02600000
*  MESSAGE = FRMIDENT;                                     /*@G51DGJJ*/ 02601000
         MVI   MESSAGE+31,C' '                                     0868 02602000
         MVC   MESSAGE+32(26),MESSAGE+31                           0868 02603000
         MVC   MESSAGE(31),FRMIDENT                                0868 02604000
*END;                                                      /*@G51DGJJ*/ 02605000
@EL00041 DS    0H                                                  0869 02606000
@EF00041 DS    0H                                                  0869 02607000
@ER00041 LM    @14,@12,@SA00041                                    0869 02608000
         BR    @14                                                 0869 02609000
*/********************************************************************/ 02610000
*/*                                                          @G51DGJJ*/ 02611000
*/* THIS PROC FORMATS THE INFORMATION IN LINE 24             @G51DGJJ*/ 02612000
*/* OF EACH FRAME INTO A SEPARATE MESSAGE TO PRINT           @G51DGJJ*/ 02613000
*/* BESIDE LINE 24.                                          @G51DGJJ*/ 02614000
*/*                                                          @G51DGJJ*/ 02615000
*LASTLINE:  PROC;                                          /*@G51DGJJ*/ 02616000
LASTLINE STM   @14,@12,@SA00042                                    0870 02617000
*  LINEPTR = LINEPTR + 1;                                  /*@G51DGJJ*/ 02618000
         LA    @06,1                                               0871 02619000
         L     @04,LINEPTR                                         0871 02620000
         ALR   @04,@06                                             0871 02621000
         ST    @04,LINEPTR                                         0871 02622000
*  PARM3 = ONE;                                            /*@G51DGJJ*/ 02623000
         ST    @06,PARM3                                           0872 02624000
*  CALL CONVERT(PRINTBUF,GROUPL24,PARM3);                  /*@G51DGJJ*/ 02625000
         MVC   @AL00001+4(8),@AL00873                              0873 02626000
         ST    @04,@AL00001                                        0873 02627000
         LA    @01,@AL00001                                        0873 02628000
         BAL   @14,CONVERT                                         0873 02629000
*  CALL CONVERT(PRINTB2,IDL24,PARM3);                      /*@G51DGJJ*/ 02630000
         MVC   @AL00001+4(8),@AL00874                              0874 02631000
         L     @06,LINEPTR                                         0874 02632000
         LA    @06,PRINTB2(,@06)                                   0874 02633000
         ST    @06,@AL00001                                        0874 02634000
         LA    @01,@AL00001                                        0874 02635000
         BAL   @14,CONVERT                                         0874 02636000
*  CALL CONVERT(PRINTB3,ECLEVL24,PARM3);                   /*@G51DGJJ*/ 02637000
         MVC   @AL00001+4(8),@AL00875                              0875 02638000
         L     @06,LINEPTR                                         0875 02639000
         LA    @06,PRINTB3(,@06)                                   0875 02640000
         ST    @06,@AL00001                                        0875 02641000
         LA    @01,@AL00001                                        0875 02642000
         BAL   @14,CONVERT                                         0875 02643000
*  MESSAGE = LINE24;                                       /*@G51DGJJ*/ 02644000
         MVI   MESSAGE+30,C' '                                     0876 02645000
         MVC   MESSAGE+31(27),MESSAGE+30                           0876 02646000
         MVC   MESSAGE(30),LINE24                                  0876 02647000
*  PRNTB123 = BLANK3;                                      /*@G51DGJJ*/ 02648000
         L     @06,LINEPTR                                         0877 02649000
         MVC   PRNTB123(3,@06),BLANK3                              0877 02650000
*END;                                                      /*@G51DGJJ*/ 02651000
@EL00042 DS    0H                                                  0878 02652000
@EF00042 DS    0H                                                  0878 02653000
@ER00042 LM    @14,@12,@SA00042                                    0878 02654000
         BR    @14                                                 0878 02655000
*/********************************************************************/ 02656000
*/*                                                          @G51DGJJ*/ 02657000
*/* THESE PROC'S HANDLE THE SPECIAL CASE SCAN CODES.         @G51DGJJ*/ 02658000
*/* REFERENCE APPENDIX 'A' - SCAN BUFFER CODES - FOR         @G51DGJJ*/ 02659000
*/* DESCRIPTIONS.                                            @G51DGJJ*/ 02660000
*/********************************************************************/ 02661000
*/*                                                          @G51DGJJ*/ 02662000
*/* THIS PROC HANDLES SPECIAL CASE 1-0.                      @G51DGJJ*/ 02663000
*/* IT DISPLAYS 16 BITS OF BINARY DATA AS 4 CONTIGUOUS       @G51DGJJ*/ 02664000
*/* HEX CHARACTERS.                                          @G51DGJJ*/ 02665000
*/*                                                          @G51DGJJ*/ 02666000
*SPCASE10:  PROC;                                          /*@G51DGJJ*/ 02667000
SPCASE10 STM   @14,@12,@SA00043                                    0879 02668000
*  PARITY = OFF;                                           /*@G51DGJJ*/ 02669000
         NI    PARITY,B'11110111'                                  0880 02670000
*  IF (PRINTB2 & '80'X) ^= ZERO THEN                               0881 02671000
         LA    @06,128                                             0881 02672000
         L     @04,LINEPTR                                         0881 02673000
         MVC   @ZT00003+3(1),PRINTB2(@04)                          0881 02674000
         N     @06,@ZT00003                                        0881 02675000
         LTR   @06,@06                                             0881 02676000
         BZ    @RF00881                                            0881 02677000
*    PARITY = ON;                 /* CHECK PARITY            @G51DGJJ*/ 02678000
         OI    PARITY,B'00001000'                                  0882 02679000
*  CALL LGOFFSET;                 /* ASSEMBLE LOG OFFSET     @G51DGJJ*/ 02680000
@RF00881 BAL   @14,LGOFFSET                                        0883 02681000
*  LOG1 = LOG;               /* FETCH 1ST LOG DATA BYTE      @G51DGJJ*/ 02682000
         L     @06,LOGPTR                                          0884 02683000
         L     @04,CURRD                                           0884 02684000
         LR    @03,@06                                             0884 02685000
         ALR   @03,@04                                             0884 02686000
         MVC   LOG1(1),LOG(@03)                                    0884 02687000
*  CURRD = CURRD + 1;                                      /*@G51DGJJ*/ 02688000
         AL    @04,@CF00054                                        0885 02689000
         ST    @04,CURRD                                           0885 02690000
*  LOG2 = LOG;               /* FETCH 2ND LOG DATA BYTE      @G51DGJJ*/ 02691000
         ALR   @06,@04                                             0886 02692000
         MVC   LOG2(1),LOG(@06)                                    0886 02693000
*  IF PARITY = ON THEN                                             0887 02694000
         TM    PARITY,B'00001000'                                  0887 02695000
         BNO   @RF00887                                            0887 02696000
*    DO;                                                   /*@G51DGJJ*/ 02697000
*      CURDL = CURRD - 1;                                  /*@G51DGJJ*/ 02698000
         BCTR  @04,0                                               0889 02699000
         ST    @04,CURDL                                           0889 02700000
*      CALL FETCHPAR;        /* PARITY NOT WITH DATA - FETCH @G51DGJJ*/ 02701000
         BAL   @14,FETCHPAR                                        0890 02702000
*      CURRZ = 3;            /* OFFSET TO STARTING BIT       @G51DGJJ*/ 02703000
         MVC   CURRZ(4),@CF00075                                   0891 02704000
*      CURRB = 12;           /* LENGTH OF BIT STRING         @G51DGJJ*/ 02705000
         MVC   CURRB(4),@CF00035                                   0892 02706000
*      CALL CKPARITY;        /* CHECK PARITY                 @G51DGJJ*/ 02707000
         BAL   @14,CKPARITY                                        0893 02708000
*    END;                                                  /*@G51DGJJ*/ 02709000
*    CALL FORMAT10;          /* FORMAT 4 HEX CHAR'S - 'NNNN' @G51DGJJ*/ 02710000
@RF00887 BAL   @14,FORMAT10                                        0895 02711000
*END;                                                      /*@G51DGJJ*/ 02712000
@EL00043 DS    0H                                                  0896 02713000
@EF00043 DS    0H                                                  0896 02714000
@ER00043 LM    @14,@12,@SA00043                                    0896 02715000
         BR    @14                                                 0896 02716000
*/********************************************************************/ 02717000
*/*                                                          @G51DGJJ*/ 02718000
*/* THIS PROC FORMATS HEX DATA FOR SPECIAL CASE 1-0.         @G51DGJJ*/ 02719000
*/* IT CONVERTS HEX LOG DATA TO SCAN CODE AND FORMATS IT     @G51DGJJ*/ 02720000
*/* INTO THE PRINT BUFFER(PRTBUFF), REPLACING THE            @G51DGJJ*/ 02721000
*/* LOG DATA PLACE-HOLDERS.                                  @G51DGJJ*/ 02722000
*/*                                                          @G51DGJJ*/ 02723000
*FORMAT10:  PROC;                                          /*@G51DGJJ*/ 02724000
FORMAT10 STM   @14,@12,12(@13)                                     0897 02725000
* RESPECIFY (R8,R9) RESTRICTED;                            /*@G51DGJJ*/ 02726000
*  R9 = LOGDATA;                                           /*@G51DGJJ*/ 02727000
         MVC   @ZT00002+2(2),LOGDATA                               0899 02728000
         L     R9,@ZT00002                                         0899 02729000
*  R9 = R9 & '1FFF'X;        /* SET 1ST 3 BITS = 0           @G51DGJJ*/ 02730000
         N     R9,@CF01378                                         0900 02731000
*  SLL(R9,16);               /* LEFT JUSTIFY LOG DATA        @G51DGJJ*/ 02732000
         SLL   R9,16                                               0901 02733000
*  DO J = 1 TO 4;            /* LOOP THRU 4 HEX CHARACTERS   @G51DGJJ*/ 02734000
         LA    @06,1                                               0902 02735000
         ST    @06,J                                               0902 02736000
@DL00902 DS    0H                                                  0903 02737000
*    R8 = ZERO;                                            /*@G51DGJJ*/ 02738000
         SLR   R8,R8                                               0903 02739000
*    SLDL(R8,FOUR);          /* ISOLATE CHARACTER            @G51DGJJ*/ 02740000
         SLDL  R8,4                                                0904 02741000
*    SCNCODE = R8;                                         /*@G51DGJJ*/ 02742000
         STC   R8,SCNCODE                                          0905 02743000
*    TR(SCNCODE,TRSCANCD);   /* TRANSLATE TO SCAN CODE       @G51DGJJ*/ 02744000
         TR    SCNCODE(1),TRSCANCD                                 0906 02745000
*    PRINTBUF = SCNCODE;     /* PLACE CODE IN PRINT BUFFER   @G51DGJJ*/ 02746000
         L     @04,LINEPTR                                         0907 02747000
         MVC   PRINTBUF(1,@04),SCNCODE                             0907 02748000
*    LINEPTR = LINEPTR + 1;  /* BUMP PRINT BUFFER POINTER,   @G51DGJJ*/ 02749000
         LA    @03,1                                               0908 02750000
         ALR   @04,@03                                             0908 02751000
         ST    @04,LINEPTR                                         0908 02752000
*    CHARCNT = CHARCNT + 1;  /* SCAN CODE COUNTER            @G51DGJJ*/ 02753000
         AL    @03,CHARCNT                                         0909 02754000
         ST    @03,CHARCNT                                         0909 02755000
*  END;                                                    /*@G51DGJJ*/ 02756000
         AL    @06,@CF00054                                        0910 02757000
         ST    @06,J                                               0910 02758000
         CH    @06,@CH00063                                        0910 02759000
         BNH   @DL00902                                            0910 02760000
* RESPECIFY (R8,R9) UNRESTRICTED;                          /*@G51DGJJ*/ 02761000
*END;                                                      /*@G51DGJJ*/ 02762000
@EL00044 DS    0H                                                  0912 02763000
@EF00044 DS    0H                                                  0912 02764000
@ER00044 LM    @14,@12,12(@13)                                     0912 02765000
         BR    @14                                                 0912 02766000
*/********************************************************************/ 02767000
*/*                                                          @G51DGJJ*/ 02768000
*/* THIS PROC HANDLES SPECIAL CASE 1-1.                      @G51DGJJ*/ 02769000
*/* IT DISPLAYS SELECTED BITS FROM 6 CONTIGUOUS BYTES        @G51DGJJ*/ 02770000
*/* OF BINARY DATA AS 8 HEX CHARACTERS IN THE FOLLOWING      @G51DGJJ*/ 02771000
*/* FORMAT-  NN NN NN NN                                     @G51DGJJ*/ 02772000
*/*                                                          @G51DGJJ*/ 02773000
*SPCASE11:  PROC;                                          /*@G51DGJJ*/ 02774000
SPCASE11 STM   @14,@12,@SA00045                                    0913 02775000
*  CALL LGOFFSET;            /* ASSEMBLE LOG OFFSET          @G51DGJJ*/ 02776000
         BAL   @14,LGOFFSET                                        0914 02777000
*  CURRZ = ZERO;             /* OFFSET TO STARTING BIT       @G51DGJJ*/ 02778000
         SLR   @06,@06                                             0915 02779000
         ST    @06,CURRZ                                           0915 02780000
*  CURRB = EIGHT;            /* LENGTH OF BIT STRING         @G51DGJJ*/ 02781000
         MVC   CURRB(4),@CF00065                                   0916 02782000
*  DO J = 1 TO 2;                                          /*@G51DGJJ*/ 02783000
         LA    @06,1                                               0917 02784000
         ST    @06,J                                               0917 02785000
@DL00917 DS    0H                                                  0918 02786000
*    M = 2;                  /* OFFSET INCREMENT             @G51DGJJ*/ 02787000
         MVC   M(4),@CF00073                                       0918 02788000
*    NUMBER = 5;             /* SHIFT CONTROL                @G51DGJJ*/ 02789000
         MVC   NUMBER(4),@CF00078                                  0919 02790000
*    DO K = 1 TO 2;                                        /*@G51DGJJ*/ 02791000
         LA    @06,1                                               0920 02792000
         ST    @06,K                                               0920 02793000
@DL00920 DS    0H                                                  0921 02794000
*      LOG1 = LOG & 'FC'X;   /* FETCH 1ST LOG DATA BYTE      @G51DGJJ*/ 02795000
         L     @06,LOGPTR                                          0921 02796000
         L     @04,CURRD                                           0921 02797000
         LR    @03,@06                                             0921 02798000
         ALR   @03,@04                                             0921 02799000
         MVC   LOG1(1),LOG(@03)                                    0921 02800000
         NI    LOG1,X'FC'                                          0921 02801000
*      CURRD = CURRD + M;                                  /*@G51DGJJ*/ 02802000
         AL    @04,M                                               0922 02803000
         ST    @04,CURRD                                           0922 02804000
*      LOG2 = LOG;           /* FETCH 2ND LOG DATA BYTE      @G51DGJJ*/ 02805000
         ALR   @06,@04                                             0923 02806000
         MVC   LOG2(1),LOG(@06)                                    0923 02807000
*      WK = LOG2;                                          /*@G51DGJJ*/ 02808000
         MVC   WK(1),LOG2                                          0924 02809000
*      SRL(WK,NUMBER);                                     /*@G51DGJJ*/ 02810000
         SLR   @06,@06                                             0925 02811000
         IC    @06,WK                                              0925 02812000
         L     @04,NUMBER                                          0925 02813000
         SRL   @06,0(@04)                                          0925 02814000
         STC   @06,WK                                              0925 02815000
*      PARBIT = WK & '01'X;  /* SAVE PARITY BIT              @G51DGJJ*/ 02816000
         SLR   @06,@06                                             0926 02817000
         IC    @06,WK                                              0926 02818000
         LA    @04,1                                               0926 02819000
         NR    @04,@06                                             0926 02820000
         ST    @04,PARBIT                                          0926 02821000
*      SRL(WK,1);                                          /*@G51DGJJ*/ 02822000
         SRL   @06,1                                               0927 02823000
         STC   @06,WK                                              0927 02824000
*      WK = WK & '03'X;                                    /*@G51DGJJ*/ 02825000
         NI    WK,X'03'                                            0928 02826000
*      LOG1 = LOG1 | WK;                                   /*@G51DGJJ*/ 02827000
         OC    LOG1(1),WK                                          0929 02828000
*      CALL CKPARITY;        /* CHECK PARITY                 @G51DGJJ*/ 02829000
         BAL   @14,CKPARITY                                        0930 02830000
*      CALL FORMAT11;        /* FORMAT 2 HEX CHAR'S - 'NN '  @G51DGJJ*/ 02831000
         BAL   @14,FORMAT11                                        0931 02832000
*      CURRD = CURRD - 1;    /* ADJUST OFFSET                @G51DGJJ*/ 02833000
         L     @06,CURRD                                           0932 02834000
         BCTR  @06,0                                               0932 02835000
         ST    @06,CURRD                                           0932 02836000
*      M = 1;                /* ADJUST OFFSET INCREMENT      @G51DGJJ*/ 02837000
         MVC   M(4),@CF00054                                       0933 02838000
*      NUMBER = 0;           /* ADJUST SHIFT CONTROL         @G51DGJJ*/ 02839000
         SLR   @06,@06                                             0934 02840000
         ST    @06,NUMBER                                          0934 02841000
*    END;                                                  /*@G51DGJJ*/ 02842000
         LA    @06,1                                               0935 02843000
         AL    @06,K                                               0935 02844000
         ST    @06,K                                               0935 02845000
         CH    @06,@CH00073                                        0935 02846000
         BNH   @DL00920                                            0935 02847000
*    CURRD = CURRD + 2;      /* ADJUST OFFSET                @G51DGJJ*/ 02848000
         LA    @06,2                                               0936 02849000
         AL    @06,CURRD                                           0936 02850000
         ST    @06,CURRD                                           0936 02851000
*  END;                                                    /*@G51DGJJ*/ 02852000
         LA    @06,1                                               0937 02853000
         AL    @06,J                                               0937 02854000
         ST    @06,J                                               0937 02855000
         CH    @06,@CH00073                                        0937 02856000
         BNH   @DL00917                                            0937 02857000
*  LINEPTR = LINEPTR - 1;    /* ADJUST PRINT BUFFER POINTER  @G51DGJJ*/ 02858000
         L     @06,LINEPTR                                         0938 02859000
         BCTR  @06,0                                               0938 02860000
         ST    @06,LINEPTR                                         0938 02861000
*  CHARCNT = CHARCNT - 1;    /* AND SCAN CODE COUNTER        @G51DGJJ*/ 02862000
         L     @06,CHARCNT                                         0939 02863000
         BCTR  @06,0                                               0939 02864000
         ST    @06,CHARCNT                                         0939 02865000
*END;                                                      /*@G51DGJJ*/ 02866000
@EL00045 DS    0H                                                  0940 02867000
@EF00045 DS    0H                                                  0940 02868000
@ER00045 LM    @14,@12,@SA00045                                    0940 02869000
         BR    @14                                                 0940 02870000
*/********************************************************************/ 02871000
*/*                                                          @G51DGJJ*/ 02872000
*/* THIS PROC FORMATS HEX DATA FOR SPECIAL CASE 1-1.         @G51DGJJ*/ 02873000
*/* IT CONVERTS HEX LOG DATA TO SCAN CODE AND FORMATS IT     @G51DGJJ*/ 02874000
*/* INTO THE PRINT BUFFER(PRTBUFF), REPLACING THE            @G51DGJJ*/ 02875000
*/* LOG DATA PLACE-HOLDERS.                                  @G51DGJJ*/ 02876000
*/*                                                          @G51DGJJ*/ 02877000
*FORMAT11:  PROC;                                          /*@G51DGJJ*/ 02878000
FORMAT11 STM   @14,@12,12(@13)                                     0941 02879000
* RESPECIFY (R8,R9) RESTRICTED;                            /*@G51DGJJ*/ 02880000
*  R9 = LOGDATA;                                           /*@G51DGJJ*/ 02881000
         MVC   @ZT00002+2(2),LOGDATA                               0943 02882000
         L     R9,@ZT00002                                         0943 02883000
*  SLL(R9,16);               /* LEFT JUSTIFY LOG DATA        @G51DGJJ*/ 02884000
         SLL   R9,16                                               0944 02885000
*  DO P = 1 TO 2;            /* LOOP THRU 2 HEX CHARACTERS   @G51DGJJ*/ 02886000
         LA    @06,1                                               0945 02887000
         ST    @06,P                                               0945 02888000
@DL00945 DS    0H                                                  0946 02889000
*    R8 = ZERO;                                            /*@G51DGJJ*/ 02890000
         SLR   R8,R8                                               0946 02891000
*    SLDL(R8,FOUR);          /* ISOLATE CHARACTER            @G51DGJJ*/ 02892000
         SLDL  R8,4                                                0947 02893000
*    SCNCODE = R8;                                         /*@G51DGJJ*/ 02894000
         STC   R8,SCNCODE                                          0948 02895000
*    TR(SCNCODE,TRSCANCD);   /* TRANSLATE TO SCAN CODE       @G51DGJJ*/ 02896000
         TR    SCNCODE(1),TRSCANCD                                 0949 02897000
*    PRINTBUF = SCNCODE;     /* PLACE CODE IN PRINT BUFFER   @G51DGJJ*/ 02898000
         L     @04,LINEPTR                                         0950 02899000
         MVC   PRINTBUF(1,@04),SCNCODE                             0950 02900000
*    LINEPTR = LINEPTR + 1;  /* BUMP PRINT BUFFER POINTER,   @G51DGJJ*/ 02901000
         LA    @03,1                                               0951 02902000
         ALR   @04,@03                                             0951 02903000
         ST    @04,LINEPTR                                         0951 02904000
*    CHARCNT = CHARCNT + 1;  /* SCAN CODE COUNTER            @G51DGJJ*/ 02905000
         AL    @03,CHARCNT                                         0952 02906000
         ST    @03,CHARCNT                                         0952 02907000
*  END;                                                    /*@G51DGJJ*/ 02908000
         AL    @06,@CF00054                                        0953 02909000
         ST    @06,P                                               0953 02910000
         CH    @06,@CH00073                                        0953 02911000
         BNH   @DL00945                                            0953 02912000
*  LINEPTR = LINEPTR + 1;    /* LEAVE 1 SPACE                @G51DGJJ*/ 02913000
         LA    @06,1                                               0954 02914000
         L     @04,LINEPTR                                         0954 02915000
         ALR   @04,@06                                             0954 02916000
         ST    @04,LINEPTR                                         0954 02917000
*  CHARCNT = CHARCNT + 1;                                  /*@G51DGJJ*/ 02918000
         AL    @06,CHARCNT                                         0955 02919000
         ST    @06,CHARCNT                                         0955 02920000
* RESPECIFY (R8,R9) UNRESTRICTED;                          /*@G51DGJJ*/ 02921000
*END;                                                      /*@G51DGJJ*/ 02922000
@EL00046 DS    0H                                                  0957 02923000
@EF00046 DS    0H                                                  0957 02924000
@ER00046 LM    @14,@12,12(@13)                                     0957 02925000
         BR    @14                                                 0957 02926000
*/********************************************************************/ 02927000
*/*                                                          @G51DGJJ*/ 02928000
*/* THIS PROC HANDLES SPECIAL CASE 1-2.                      @G51DGJJ*/ 02929000
*/* IT DISPLAYS THE LOGICAL CHANNEL NO. AS A HEX CHARACTER.  @G51DGJJ*/ 02930000
*/*                                                          @G51DGJJ*/ 02931000
*SPCASE12:   PROC;                                         /*@G51DGJJ*/ 02932000
SPCASE12 STM   @14,@12,@SA00047                                    0958 02933000
*  WK = PRINTB3 & '07'X;      /* SAVE PHYSICAL CHANNEL NO.   @G51DGJJ*/ 02934000
         L     @06,LINEPTR                                         0959 02935000
         MVC   WK(1),PRINTB3(@06)                                  0959 02936000
         NI    WK,X'07'                                            0959 02937000
*  IF WK > '05'X THEN                                              0960 02938000
         CLI   WK,X'05'                                            0960 02939000
         BNH   @RF00960                                            0960 02940000
*    CALL UNDEFINE;           /* INVALID PCN                 @G51DGJJ*/ 02941000
         BAL   @14,UNDEFINE                                        0961 02942000
*  ELSE                                                            0962 02943000
*    DO;                                                   /*@G51DGJJ*/ 02944000
         B     @RC00960                                            0962 02945000
@RF00960 DS    0H                                                  0963 02946000
*      SW1 = OFF;                                          /*@G51DGJJ*/ 02947000
         NI    SW1,B'11101111'                                     0963 02948000
*      CURRD = '00000110'X;                                /*@G51DGJJ*/ 02949000
         LA    @06,272                                             0964 02950000
         ST    @06,CURRD                                           0964 02951000
*      LOG1 = LOG;            /* FETCH LOG DATA              @G51DGJJ*/ 02952000
         AL    @06,LOGPTR                                          0965 02953000
         MVC   LOG1(1),LOG(@06)                                    0965 02954000
*      IF (LOG1 & '03'X) = ZERO THEN                               0966 02955000
         LA    @06,3                                               0966 02956000
         MVC   @ZT00003+3(1),LOG1                                  0966 02957000
         N     @06,@ZT00003                                        0966 02958000
         LTR   @06,@06                                             0966 02959000
         BNZ   @RF00966                                            0966 02960000
*        SCNCODE = '2F'X;    /* INVALID DIRECTOR IN LOG - PRINT '?'  */ 02961000
         MVI   SCNCODE,X'2F'                                       0967 02962000
*      ELSE                                                        0968 02963000
*        DO;                                               /*@G51DGJJ*/ 02964000
         B     @RC00966                                            0968 02965000
@RF00966 DS    0H                                                  0969 02966000
*          IF (LOG1 & '03'X) = '01'X THEN                          0969 02967000
         MVC   @TS00001(1),LOG1                                    0969 02968000
         NI    @TS00001,X'03'                                      0969 02969000
         CLI   @TS00001,X'01'                                      0969 02970000
         BNE   @RF00969                                            0969 02971000
*            DO;                       /* DIRECTOR 1         @G51DGJJ*/ 02972000
*              SCNCODE = WK;           /* LCN = PCN          @G51DGJJ*/ 02973000
         MVC   SCNCODE(1),WK                                       0971 02974000
*              SW1 = ON;                                   /*@G51DGJJ*/ 02975000
         OI    SW1,B'00010000'                                     0972 02976000
*            END;                                          /*@G51DGJJ*/ 02977000
*          ELSE                                                    0974 02978000
*            DO;                                           /*@G51DGJJ*/ 02979000
         B     @RC00969                                            0974 02980000
@RF00969 DS    0H                                                  0975 02981000
*              IF (LOG1 & '03'X) = '02'X THEN                      0975 02982000
         MVC   @TS00001(1),LOG1                                    0975 02983000
         NI    @TS00001,X'03'                                      0975 02984000
         CLI   @TS00001,X'02'                                      0975 02985000
         BNE   @RF00975                                            0975 02986000
*                DO;                   /* DIRECTOR 2         @G51DGJJ*/ 02987000
*                  SCNCODE = WK + 6;   /* LCN = PCN + 6      @G51DGJJ*/ 02988000
         IC    @06,WK                                              0977 02989000
         LA    @06,6(,@06)                                         0977 02990000
         STC   @06,SCNCODE                                         0977 02991000
*                  SW1 = ON;                               /*@G51DGJJ*/ 02992000
         OI    SW1,B'00010000'                                     0978 02993000
*                END;                                      /*@G51DGJJ*/ 02994000
*              ELSE                                                0980 02995000
*                DO;                   /* DIRECTOR 3         @G51DGJJ*/ 02996000
         B     @RC00975                                            0980 02997000
@RF00975 DS    0H                                                  0981 02998000
*                  CURRD = '88'X;                          /*@G51DGJJ*/ 02999000
         LA    @06,136                                             0981 03000000
         ST    @06,CURRD                                           0981 03001000
*                  LOG1 = LOG;         /* FETCH LOG DATA     @G51DGJJ*/ 03002000
         AL    @06,LOGPTR                                          0982 03003000
         MVC   LOG1(1),LOG(@06)                                    0982 03004000
*                  K = WK + 1;                             /*@G51DGJJ*/ 03005000
         LA    @06,1                                               0983 03006000
         MVC   @ZT00003+3(1),WK                                    0983 03007000
         AL    @06,@ZT00003                                        0983 03008000
         ST    @06,K                                               0983 03009000
*                  IF (LOG1 & '40'X) = ZERO THEN                   0984 03010000
         LA    @04,64                                              0984 03011000
         MVC   @ZT00003+3(1),LOG1                                  0984 03012000
         N     @04,@ZT00003                                        0984 03013000
         LTR   @04,@04                                             0984 03014000
         BNZ   @RF00984                                            0984 03015000
*                    SCNCODE = LCN0(K);     /* LCN FOR BIT 1=0       */ 03016000
         LA    @04,LCN0-1(@06)                                     0985 03017000
         MVC   SCNCODE(1),0(@04)                                   0985 03018000
*                  ELSE                                            0986 03019000
*                    SCNCODE = LCN1(K);     /* LCN FOR BIT 1=1       */ 03020000
         B     @RC00984                                            0986 03021000
@RF00984 L     @06,K                                               0986 03022000
         LA    @04,LCN1-1(@06)                                     0986 03023000
         MVC   SCNCODE(1),0(@04)                                   0986 03024000
*                END;                                      /*@G51DGJJ*/ 03025000
@RC00984 DS    0H                                                  0988 03026000
*            END;                                          /*@G51DGJJ*/ 03027000
@RC00975 DS    0H                                                  0989 03028000
*        END;                                              /*@G51DGJJ*/ 03029000
@RC00969 DS    0H                                                  0990 03030000
*        PRNTB123 = BLANK3;                                /*@G51DGJJ*/ 03031000
@RC00966 L     @06,LINEPTR                                         0990 03032000
         MVC   PRNTB123(3,@06),BLANK3                              0990 03033000
*        LINEPTR = LINEPTR + 3;                            /*@G51DGJJ*/ 03034000
         LA    @04,3                                               0991 03035000
         ALR   @06,@04                                             0991 03036000
         ST    @06,LINEPTR                                         0991 03037000
*        CHARCNT = CHARCNT + 3;                            /*@G51DGJJ*/ 03038000
         AL    @04,CHARCNT                                         0992 03039000
         ST    @04,CHARCNT                                         0992 03040000
*        IF SW1 = ON THEN                                          0993 03041000
         TM    SW1,B'00010000'                                     0993 03042000
         BNO   @RF00993                                            0993 03043000
*          TR(SCNCODE,TRSCANCD);  /* LCN = SCAN CODE         @G51DGJJ*/ 03044000
         TR    SCNCODE(1),TRSCANCD                                 0994 03045000
*        PRINTBUF = SCNCODE;                               /*@G51DGJJ*/ 03046000
@RF00993 L     @06,LINEPTR                                         0995 03047000
         MVC   PRINTBUF(1,@06),SCNCODE                             0995 03048000
*        LINEPTR = LINEPTR + 1;                            /*@G51DGJJ*/ 03049000
         LA    @04,1                                               0996 03050000
         ALR   @06,@04                                             0996 03051000
         ST    @06,LINEPTR                                         0996 03052000
*        CHARCNT = CHARCNT + 1;                            /*@G51DGJJ*/ 03053000
         AL    @04,CHARCNT                                         0997 03054000
         ST    @04,CHARCNT                                         0997 03055000
*    END;                                                  /*@G51DGJJ*/ 03056000
*END;                                                      /*@G51DGJJ*/ 03057000
@EL00047 DS    0H                                                  0999 03058000
@EF00047 DS    0H                                                  0999 03059000
@ER00047 LM    @14,@12,@SA00047                                    0999 03060000
         BR    @14                                                 0999 03061000
*/********************************************************************/ 03062000
*/*                                                          @G51DGJJ*/ 03063000
*/* THIS PROC HANDLES SPECIAL CASE 1-3.                      @G51DGJJ*/ 03064000
*/* IT DISPLAYS THE PARITY BIT AS A BINARY CHARACTER.        @G51DGJJ*/ 03065000
*/*                                                          @G51DGJJ*/ 03066000
*SPCASE13:  PROC;                                          /*@G51DGJJ*/ 03067000
SPCASE13 STM   @14,@12,@SA00048                                    1000 03068000
*  CALL LGOFFSET;            /* ASSEMBLE LOG OFFSET, ETC.    @G51DGJJ*/ 03069000
         BAL   @14,LGOFFSET                                        1001 03070000
*  CURDL = CURRD;                                          /*@G51DGJJ*/ 03071000
         MVC   CURDL(4),CURRD                                      1002 03072000
*  CALL FETCHPAR;            /* FETCH PARITY BIT             @G51DGJJ*/ 03073000
         BAL   @14,FETCHPAR                                        1003 03074000
*  SCNCODE = PARBIT;                                       /*@G51DGJJ*/ 03075000
         MVC   SCNCODE(1),PARBIT+3                                 1004 03076000
*  TR(SCNCODE,TRSCANCD);     /* TRANSLATE TO SCAN CODE       @G51DGJJ*/ 03077000
         TR    SCNCODE(1),TRSCANCD                                 1005 03078000
*  PRINTBUF = SCNCODE;                                     /*@G51DGJJ*/ 03079000
         L     @06,LINEPTR                                         1006 03080000
         MVC   PRINTBUF(1,@06),SCNCODE                             1006 03081000
*  LINEPTR = LINEPTR + 1;    /* BUMP PRINT BUFFER POINTER,   @G51DGJJ*/ 03082000
         LA    @04,1                                               1007 03083000
         ALR   @06,@04                                             1007 03084000
         ST    @06,LINEPTR                                         1007 03085000
*  CHARCNT = CHARCNT + 1;    /* SCAN CODE COUNTER            @G51DGJJ*/ 03086000
         AL    @04,CHARCNT                                         1008 03087000
         ST    @04,CHARCNT                                         1008 03088000
*END;                                                      /*@G51DGJJ*/ 03089000
@EL00048 DS    0H                                                  1009 03090000
@EF00048 DS    0H                                                  1009 03091000
@ER00048 LM    @14,@12,@SA00048                                    1009 03092000
         BR    @14                                                 1009 03093000
*/********************************************************************/ 03094000
*/*                                                          @G51DGJJ*/ 03095000
*/* THIS PROC HANDLES SPECIAL CASE 1-4.                      @G51DGJJ*/ 03096000
*/* IT DISPLAYS 4 HEX CHARACTERS AND 3 BINARY CHARACTERS     @G51DGJJ*/ 03097000
*/* FROM THE LOG DATA, AND THE PARITY BIT.                   @G51DGJJ*/ 03098000
*SPCASE14:  PROC;                                          /*@G51DGJJ*/ 03099000
SPCASE14 STM   @14,@12,@SA00049                                    1010 03100000
*  PARITY = OFF;                                           /*@G51DGJJ*/ 03101000
         NI    PARITY,B'11110111'                                  1011 03102000
*  IF (PRINTB2 & '80'X) ^= ZERO THEN                               1012 03103000
         LA    @06,128                                             1012 03104000
         L     @04,LINEPTR                                         1012 03105000
         MVC   @ZT00003+3(1),PRINTB2(@04)                          1012 03106000
         N     @06,@ZT00003                                        1012 03107000
         LTR   @06,@06                                             1012 03108000
         BZ    @RF01012                                            1012 03109000
*    PARITY = ON;            /* CHECK PARITY                 @G51DGJJ*/ 03110000
         OI    PARITY,B'00001000'                                  1013 03111000
*  CALL LGOFFSET;            /* ASSEMBLE LOG OFFSET, ETC.    @G51DGJJ*/ 03112000
@RF01012 BAL   @14,LGOFFSET                                        1014 03113000
*  LOG1 = LOG;               /* FETCH 1ST LOG DATA BYTE      @G51DGJJ*/ 03114000
         L     @06,LOGPTR                                          1015 03115000
         L     @04,CURRD                                           1015 03116000
         LR    @03,@06                                             1015 03117000
         ALR   @03,@04                                             1015 03118000
         MVC   LOG1(1),LOG(@03)                                    1015 03119000
*  CURRD = CURRD + 1;                                      /*@G51DGJJ*/ 03120000
         AL    @04,@CF00054                                        1016 03121000
         ST    @04,CURRD                                           1016 03122000
*  LOG2 = LOG;               /* FETCH 2ND LOG DATA BYTE      @G51DGJJ*/ 03123000
         ALR   @06,@04                                             1017 03124000
         MVC   LOG2(1),LOG(@06)                                    1017 03125000
*  IF PARITY = ON THEN                                             1018 03126000
         TM    PARITY,B'00001000'                                  1018 03127000
         BNO   @RF01018                                            1018 03128000
*    DO;                                                   /*@G51DGJJ*/ 03129000
*      CURDL = CURRD - 1;                                  /*@G51DGJJ*/ 03130000
         BCTR  @04,0                                               1020 03131000
         ST    @04,CURDL                                           1020 03132000
*      CALL FETCHPAR;       /* PARITY NOT WITH DATA - FETCH  @G51DGJJ*/ 03133000
         BAL   @14,FETCHPAR                                        1021 03134000
*      CURRZ = 3;           /* OFFSET TO STARTING BIT        @G51DGJJ*/ 03135000
         MVC   CURRZ(4),@CF00075                                   1022 03136000
*      CURRB = 12;          /* LENGTH OF BIT STRING          @G51DGJJ*/ 03137000
         MVC   CURRB(4),@CF00035                                   1023 03138000
*      CALL CKPARITY;       /* CHECK PARITY                  @G51DGJJ*/ 03139000
         BAL   @14,CKPARITY                                        1024 03140000
*    END;                                                  /*@G51DGJJ*/ 03141000
*  CALL FORMAT10;            /* FORMAT 4 HEX CHAR'S - 'HHHH' @G51DGJJ*/ 03142000
@RF01018 BAL   @14,FORMAT10                                        1026 03143000
*  CALL FORMAT14;            /* FORMAT 4 BIN CHAR'S - 'RBIP' @G51DGJJ*/ 03144000
         BAL   @14,FORMAT14                                        1027 03145000
*END;                                                      /*@G51DGJJ*/ 03146000
@EL00049 DS    0H                                                  1028 03147000
@EF00049 DS    0H                                                  1028 03148000
@ER00049 LM    @14,@12,@SA00049                                    1028 03149000
         BR    @14                                                 1028 03150000
*/********************************************************************/ 03151000
*/*                                                          @G51DGJJ*/ 03152000
*/* THIS PROC FORMATS HEX AND BINARY DATA FOR SPECIAL        @G51DGJJ*/ 03153000
*/* CASE 1-4.                                                @G51DGJJ*/ 03154000
*/* IT CONVERTS HEX LOG DATA TO SCAN CODE AND FORMATS IT     @G51DGJJ*/ 03155000
*/* INTO THE PRINT BUFFER(PRTBUFF), REPLACING THE            @G51DGJJ*/ 03156000
*/* LOG DATA PLACE-HOLDERS.                                  @G51DGJJ*/ 03157000
*/*                                                          @G51DGJJ*/ 03158000
*FORMAT14:  PROC;                                          /*@G51DGJJ*/ 03159000
FORMAT14 STM   @14,@12,@SA00050                                    1029 03160000
* RESPECIFY (R8,R9) RESTRICTED;                            /*@G51DGJJ*/ 03161000
*  LINEPTR = LINEPTR + 3;    /* LEAVE 3 SPACES IN PRINT      @G51DGJJ*/ 03162000
         LA    @06,3                                               1031 03163000
         L     @04,LINEPTR                                         1031 03164000
         ALR   @04,@06                                             1031 03165000
         ST    @04,LINEPTR                                         1031 03166000
*  CHARCNT = CHARCNT + 3;    /* BUFFER                       @G51DGJJ*/ 03167000
         AL    @06,CHARCNT                                         1032 03168000
         ST    @06,CHARCNT                                         1032 03169000
*  R8 = ZERO;                                              /*@G51DGJJ*/ 03170000
         SLR   R8,R8                                               1033 03171000
*  R9 = LOGDATA;                                           /*@G51DGJJ*/ 03172000
         MVC   @ZT00002+2(2),LOGDATA                               1034 03173000
         L     R9,@ZT00002                                         1034 03174000
*  SLDL (R8,17);                                           /*@G51DGJJ*/ 03175000
         SLDL  R8,17                                               1035 03176000
*  WK = R8;                  /* SAVE 'I' BIT                 @G51DGJJ*/ 03177000
         STC   R8,WK                                               1036 03178000
*  DO J = 1 TO 2;                                          /*@G51DGJJ*/ 03179000
         LA    @06,1                                               1037 03180000
         ST    @06,J                                               1037 03181000
@DL01037 DS    0H                                                  1038 03182000
*    R8 = ZERO;                                            /*@G51DGJJ*/ 03183000
         SLR   R8,R8                                               1038 03184000
*    SLDL(R8,1);             /* ISOLATE BITS - R, THEN B     @G51DGJJ*/ 03185000
         SLDL  R8,1                                                1039 03186000
*    SCNCODE = R8;                                         /*@G51DGJJ*/ 03187000
         STC   R8,SCNCODE                                          1040 03188000
*    TR(SCNCODE,TRSCANCD);   /* TRANSLATE TO SCAN CODE       @G51DGJJ*/ 03189000
         TR    SCNCODE(1),TRSCANCD                                 1041 03190000
*    PRINTBUF = SCNCODE;     /* PLACE CODE IN PRINT BUFFER   @G51DGJJ*/ 03191000
         L     @04,LINEPTR                                         1042 03192000
         MVC   PRINTBUF(1,@04),SCNCODE                             1042 03193000
*    LINEPTR = LINEPTR + 1;  /* BUMP PRINT BUFFER POINTER,   @G51DGJJ*/ 03194000
         LA    @03,1                                               1043 03195000
         ALR   @04,@03                                             1043 03196000
         ST    @04,LINEPTR                                         1043 03197000
*    CHARCNT = CHARCNT + 1;  /* SCAN CODE COUNTER            @G51DGJJ*/ 03198000
         AL    @03,CHARCNT                                         1044 03199000
         ST    @03,CHARCNT                                         1044 03200000
*  END;                                                    /*@G51DGJJ*/ 03201000
         AL    @06,@CF00054                                        1045 03202000
         ST    @06,J                                               1045 03203000
         CH    @06,@CH00073                                        1045 03204000
         BNH   @DL01037                                            1045 03205000
*  LINEPTR = LINEPTR + 3;    /* LEAVE 3 SPACES IN PRINT      @G51DGJJ*/ 03206000
         LA    @06,3                                               1046 03207000
         L     @04,LINEPTR                                         1046 03208000
         ALR   @04,@06                                             1046 03209000
         ST    @04,LINEPTR                                         1046 03210000
*  CHARCNT = CHARCNT + 3;    /* BUFFER                       @G51DGJJ*/ 03211000
         AL    @06,CHARCNT                                         1047 03212000
         ST    @06,CHARCNT                                         1047 03213000
*  SCNCODE = WK;             /* 'I' BIT                      @G51DGJJ*/ 03214000
         MVC   SCNCODE(1),WK                                       1048 03215000
*  TR(SCNCODE,TRSCANCD);     /* TRANSLATE TO SCAN CODE       @G51DGJJ*/ 03216000
         TR    SCNCODE(1),TRSCANCD                                 1049 03217000
*  PRINTBUF = SCNCODE;                                     /*@G51DGJJ*/ 03218000
         MVC   PRINTBUF(1,@04),SCNCODE                             1050 03219000
*  LINEPTR = LINEPTR + 1;                                  /*@G51DGJJ*/ 03220000
         LA    @03,1                                               1051 03221000
         ALR   @04,@03                                             1051 03222000
         ST    @04,LINEPTR                                         1051 03223000
*  CHARCNT = CHARCNT + 1;                                  /*@G51DGJJ*/ 03224000
         ALR   @06,@03                                             1052 03225000
         ST    @06,CHARCNT                                         1052 03226000
*      CURDL = CURRD;                                      /*@G51DGJJ*/ 03227000
         MVC   CURDL(4),CURRD                                      1053 03228000
*      CALL FETCHPAR;                                      /*@G51DGJJ*/ 03229000
         BAL   @14,FETCHPAR                                        1054 03230000
*      SCNCODE = PARBIT;     /* PARITY BIT                   @G51DGJJ*/ 03231000
         MVC   SCNCODE(1),PARBIT+3                                 1055 03232000
*      TR(SCNCODE,TRSCANCD); /* TRANSLATE TO SCAN CODE       @G51DGJJ*/ 03233000
         TR    SCNCODE(1),TRSCANCD                                 1056 03234000
*      PRINTBUF = SCNCODE;                                 /*@G51DGJJ*/ 03235000
         L     @06,LINEPTR                                         1057 03236000
         MVC   PRINTBUF(1,@06),SCNCODE                             1057 03237000
*      LINEPTR = LINEPTR + 1;                              /*@G51DGJJ*/ 03238000
         LA    @04,1                                               1058 03239000
         ALR   @06,@04                                             1058 03240000
         ST    @06,LINEPTR                                         1058 03241000
*      CHARCNT = CHARCNT + 1;                              /*@G51DGJJ*/ 03242000
         AL    @04,CHARCNT                                         1059 03243000
         ST    @04,CHARCNT                                         1059 03244000
*  RESPECIFY (R8,R9) UNRESTRICTED;                         /*@G51DGJJ*/ 03245000
*END;                                                      /*@G51DGJJ*/ 03246000
@EL00050 DS    0H                                                  1061 03247000
@EF00050 DS    0H                                                  1061 03248000
@ER00050 LM    @14,@12,@SA00050                                    1061 03249000
         BR    @14                                                 1061 03250000
*/********************************************************************/ 03251000
*/*                                                          @G51DGJJ*/ 03252000
*/* THIS PROC HANDLES SPECIAL CASE 2-0.                      @G51DGJJ*/ 03253000
*/* IT DISPLAYS SELECTED BYTES FROM A STRING OF 24 BYTES     @G51DGJJ*/ 03254000
*/* TO FORM A PARITY-CHECKED 8 BYTE CHARACTER REGISTER.      @G51DGJJ*/ 03255000
*/*                                                          @G51DGJJ*/ 03256000
*SPCASE20:  PROC;                                          /*@G51DGJJ*/ 03257000
SPCASE20 STM   @14,@12,@SA00051                                    1062 03258000
*  CALL LGOFFSET;            /* ASSEMBLE LOG OFFSET, ETC.    @G51DGJJ*/ 03259000
         BAL   @14,LGOFFSET                                        1063 03260000
*  SW1 = ON;                                               /*@G51DGJJ*/ 03261000
         OI    SW1,B'00010000'                                     1064 03262000
*  NUMBER = ZERO;                                          /*@G51DGJJ*/ 03263000
         SLR   @06,@06                                             1065 03264000
         ST    @06,NUMBER                                          1065 03265000
*  DO J = 1 TO 3;                                          /*@G51DGJJ*/ 03266000
         LA    @06,1                                               1066 03267000
         ST    @06,J                                               1066 03268000
@DL01066 DS    0H                                                  1067 03269000
*    DO K = 1 TO 3 WHILE (SW1 = ON);                       /*@G51DGJJ*/ 03270000
         LA    @06,1                                               1067 03271000
         ST    @06,K                                               1067 03272000
@DL01067 TM    SW1,B'00010000'                                     1067 03273000
         BNO   @DC01067                                            1067 03274000
*      LOG1 = LOG;           /* GET 1 BYTE OF LOG DATA       @G51DGJJ*/ 03275000
         L     @06,CURRD                                           1068 03276000
         L     @04,LOGPTR                                          1068 03277000
         ALR   @04,@06                                             1068 03278000
         MVC   LOG1(1),LOG(@04)                                    1068 03279000
*      CURDL = CURRD;                                      /*@G51DGJJ*/ 03280000
         ST    @06,CURDL                                           1069 03281000
*      CALL FETCHPAR;        /* FETCH PARITY BIT             @G51DGJJ*/ 03282000
         BAL   @14,FETCHPAR                                        1070 03283000
*      CURRZ = ZERO;         /* OFFSET TO STARTING BIT       @G51DGJJ*/ 03284000
         SLR   @06,@06                                             1071 03285000
         ST    @06,CURRZ                                           1071 03286000
*      CURRB = EIGHT;        /* LENGTH OF BIT STRING         @G51DGJJ*/ 03287000
         MVC   CURRB(4),@CF00065                                   1072 03288000
*      CALL CKPARITY;        /* CHECK PARITY                 @G51DGJJ*/ 03289000
         BAL   @14,CKPARITY                                        1073 03290000
*      CALL FORMAT11;        /* FORMAT HEX DATA              @G51DGJJ*/ 03291000
         BAL   @14,FORMAT11                                        1074 03292000
*      NUMBER = NUMBER + 1;                                /*@G51DGJJ*/ 03293000
         LA    @06,1                                               1075 03294000
         AL    @06,NUMBER                                          1075 03295000
         ST    @06,NUMBER                                          1075 03296000
*      IF NUMBER = EIGHT THEN                                      1076 03297000
         CH    @06,@CH00065                                        1076 03298000
         BNE   @RF01076                                            1076 03299000
*        SW1 = OFF;                                        /*@G51DGJJ*/ 03300000
         NI    SW1,B'11101111'                                     1077 03301000
*      CURRD = CURRD + 1;                                  /*@G51DGJJ*/ 03302000
@RF01076 LA    @06,1                                               1078 03303000
         AL    @06,CURRD                                           1078 03304000
         ST    @06,CURRD                                           1078 03305000
*    END;                                                  /*@G51DGJJ*/ 03306000
         LA    @06,1                                               1079 03307000
         AL    @06,K                                               1079 03308000
         ST    @06,K                                               1079 03309000
         CH    @06,@CH00075                                        1079 03310000
         BNH   @DL01067                                            1079 03311000
@DC01067 DS    0H                                                  1080 03312000
*    CURRD = CURRD + 5;                                    /*@G51DGJJ*/ 03313000
         LA    @06,5                                               1080 03314000
         AL    @06,CURRD                                           1080 03315000
         ST    @06,CURRD                                           1080 03316000
*  END;                                                    /*@G51DGJJ*/ 03317000
         LA    @06,1                                               1081 03318000
         AL    @06,J                                               1081 03319000
         ST    @06,J                                               1081 03320000
         CH    @06,@CH00075                                        1081 03321000
         BNH   @DL01066                                            1081 03322000
*  LINEPTR = LINEPTR - 1;    /* ADJUST PRINT BUFFER POINTER  @G51DGJJ*/ 03323000
         L     @06,LINEPTR                                         1082 03324000
         BCTR  @06,0                                               1082 03325000
         ST    @06,LINEPTR                                         1082 03326000
*  CHARCNT = CHARCNT - 1;    /* AND SCAN CODE COUNTER        @G51DGJJ*/ 03327000
         L     @06,CHARCNT                                         1083 03328000
         BCTR  @06,0                                               1083 03329000
         ST    @06,CHARCNT                                         1083 03330000
*END;                                                      /*@G51DGJJ*/ 03331000
@EL00051 DS    0H                                                  1084 03332000
@EF00051 DS    0H                                                  1084 03333000
@ER00051 LM    @14,@12,@SA00051                                    1084 03334000
         BR    @14                                                 1084 03335000
*/********************************************************************/ 03336000
*/*                                                          @G51DGJJ*/ 03337000
*/* THIS PROC HANDLES SPECIAL CASE 3-0.                      @G51DGJJ*/ 03338000
*/* IT DISPLAYS A VARIABLE STRING OF BYTES AS HEX CHAR.'S    @G51DGJJ*/ 03339000
*/* IN THE FOLLOWING FORMAT-  NN NN ... NN                   @G51DGJJ*/ 03340000
*/*                                                          @G51DGJJ*/ 03341000
*SPCASE30:  PROC;                                          /*@G51DGJJ*/ 03342000
SPCASE30 STM   @14,@12,@SA00052                                    1085 03343000
*  PARITY = OFF;                                           /*@G51DGJJ*/ 03344000
         NI    PARITY,B'11110111'                                  1086 03345000
*  IF (PRINTB2 & '80'X) ^= ZERO THEN                               1087 03346000
         LA    @06,128                                             1087 03347000
         L     @04,LINEPTR                                         1087 03348000
         MVC   @ZT00003+3(1),PRINTB2(@04)                          1087 03349000
         N     @06,@ZT00003                                        1087 03350000
         LTR   @06,@06                                             1087 03351000
         BZ    @RF01087                                            1087 03352000
*    PARITY = ON;            /* CHECK PARITY                 @G51DGJJ*/ 03353000
         OI    PARITY,B'00001000'                                  1088 03354000
*  L = PRINTBUF & '07'X;     /* EXTRACT BBB - NO. OF BYTES   @G51DGJJ*/ 03355000
@RF01087 LA    @06,7                                               1089 03356000
         L     @04,LINEPTR                                         1089 03357000
         MVC   @ZT00003+3(1),PRINTBUF(@04)                         1089 03358000
         N     @06,@ZT00003                                        1089 03359000
         ST    @06,L                                               1089 03360000
*  IF L = ZERO THEN          /* IN DATA STRING               @G51DGJJ*/ 03361000
         LTR   @06,@06                                             1090 03362000
         BNZ   @RF01090                                            1090 03363000
*    L = EIGHT;                                            /*@G51DGJJ*/ 03364000
         MVC   L(4),@CF00065                                       1091 03365000
*  CURRZ = PRINTB3;          /* EXTRACT ZZZ - OFFSET TO 1ST  @G51DGJJ*/ 03366000
@RF01090 L     @06,LINEPTR                                         1092 03367000
         SLR   @04,@04                                             1092 03368000
         IC    @04,PRINTB3(,@06)                                   1092 03369000
         ST    @04,CURRZ                                           1092 03370000
*  SRL(CURRZ,5);             /* BIT IN STRING                @G51DGJJ*/ 03371000
         SRL   @04,5                                               1093 03372000
         ST    @04,CURRZ                                           1093 03373000
*  CURRB = EIGHT - CURRZ;    /* NO. OF BITS IN 1ST BYTE      @G51DGJJ*/ 03374000
         LA    @06,8                                               1094 03375000
         SL    @06,CURRZ                                           1094 03376000
         ST    @06,CURRB                                           1094 03377000
*  CALL LGOFFSET;            /* ASSEMBLE LOG OFFSET, ETC.    @G51DGJJ*/ 03378000
         BAL   @14,LGOFFSET                                        1095 03379000
*  DO J = 1 TO L;            /* LOOP THRU 'BBB' BYTES        @G51DGJJ*/ 03380000
         LA    @06,1                                               1096 03381000
         B     @DE01096                                            1096 03382000
@DL01096 DS    0H                                                  1097 03383000
*    LOG1 = LOG;             /* FETCH 1 BYTE OF LOG DATA     @G51DGJJ*/ 03384000
         L     @06,CURRD                                           1097 03385000
         L     @04,LOGPTR                                          1097 03386000
         ALR   @04,@06                                             1097 03387000
         MVC   LOG1(1),LOG(@04)                                    1097 03388000
*    SLL(LOG1,CURRZ);        /* SET 'ZZZ' BITS = 0 IN        @G51DGJJ*/ 03389000
         SLR   @04,@04                                             1098 03390000
         IC    @04,LOG1                                            1098 03391000
         L     @03,CURRZ                                           1098 03392000
         SLL   @04,0(@03)                                          1098 03393000
         STC   @04,LOG1                                            1098 03394000
*    SRL(LOG1,CURRZ);        /* FIRST BYTE ONLY              @G51DGJJ*/ 03395000
         SLR   @04,@04                                             1099 03396000
         IC    @04,LOG1                                            1099 03397000
         SRL   @04,0(@03)                                          1099 03398000
         STC   @04,LOG1                                            1099 03399000
*    IF PARITY = ON THEN                                           1100 03400000
         TM    PARITY,B'00001000'                                  1100 03401000
         BNO   @RF01100                                            1100 03402000
*      DO;                                                 /*@G51DGJJ*/ 03403000
*        CURDL = CURRD;                                    /*@G51DGJJ*/ 03404000
         ST    @06,CURDL                                           1102 03405000
*        CALL FETCHPAR;      /* FETCH PARITY BIT             @G51DGJJ*/ 03406000
         BAL   @14,FETCHPAR                                        1103 03407000
*        CALL CKPARITY;      /* CHECK PARITY                 @G51DGJJ*/ 03408000
         BAL   @14,CKPARITY                                        1104 03409000
*      END;                                                /*@G51DGJJ*/ 03410000
*      CALL FORMAT11;        /* FORMAT 2 HEX CHAR.'S         @G51DGJJ*/ 03411000
@RF01100 BAL   @14,FORMAT11                                        1106 03412000
*      CURRD = CURRD + 1;                                  /*@G51DGJJ*/ 03413000
         LA    @06,1                                               1107 03414000
         AL    @06,CURRD                                           1107 03415000
         ST    @06,CURRD                                           1107 03416000
*      CURRZ = ZERO;         /* RE-INITIALIZE - FOR NEXT CALLS       */ 03417000
         SLR   @06,@06                                             1108 03418000
         ST    @06,CURRZ                                           1108 03419000
*      CURRB = EIGHT;        /* TO 'CKPARITY', 'FORMAT11'    @G51DGJJ*/ 03420000
         MVC   CURRB(4),@CF00065                                   1109 03421000
*  END;                                                    /*@G51DGJJ*/ 03422000
         LA    @06,1                                               1110 03423000
         AL    @06,J                                               1110 03424000
@DE01096 ST    @06,J                                               1110 03425000
         C     @06,L                                               1110 03426000
         BNH   @DL01096                                            1110 03427000
*  LINEPTR = LINEPTR - 1;    /* ADJUST PRINT BUFFER POINTER  @G51DGJJ*/ 03428000
         L     @06,LINEPTR                                         1111 03429000
         BCTR  @06,0                                               1111 03430000
         ST    @06,LINEPTR                                         1111 03431000
*  CHARCNT = CHARCNT - 1;    /* AND SCAN CODE COUNTER        @G51DGJJ*/ 03432000
         L     @06,CHARCNT                                         1112 03433000
         BCTR  @06,0                                               1112 03434000
         ST    @06,CHARCNT                                         1112 03435000
*END;                                                      /*@G51DGJJ*/ 03436000
@EL00052 DS    0H                                                  1113 03437000
@EF00052 DS    0H                                                  1113 03438000
@ER00052 LM    @14,@12,@SA00052                                    1113 03439000
         BR    @14                                                 1113 03440000
*/********************************************************************/ 03441000
*/*                                                          @G51DGJJ*/ 03442000
*/* THIS PROC ASSEMBLES THE OFFSET TO THE STARTING           @G51DGJJ*/ 03443000
*/* BYTE OF LOG DATA, REPLACES THE SCAN COMMAND WITH         @G51DGJJ*/ 03444000
*/* 3 BLANK CHARACTERS, AND ADJUSTS THE PRINT BUFFER         @G51DGJJ*/ 03445000
*/* POINTER AND SCAN CODE COUNTER.                           @G51DGJJ*/ 03446000
*/*                                                          @G51DGJJ*/ 03447000
*LGOFFSET:  PROC;                                          /*@G51DGJJ*/ 03448000
LGOFFSET STM   @14,@12,12(@13)                                     1114 03449000
*  CURRD = PRINTB2 & '3F'X;  /* OFFSET TO STARTING BYTE      @G51DGJJ*/ 03450000
         L     @06,LINEPTR                                         1115 03451000
         LA    @04,63                                              1115 03452000
         MVC   @ZT00003+3(1),PRINTB2(@06)                          1115 03453000
         N     @04,@ZT00003                                        1115 03454000
         ST    @04,CURRD                                           1115 03455000
*  SLL(CURRD,5);             /* OF LOG DATA -- DDDDDD        @G51DGJJ*/ 03456000
         SLL   @04,5                                               1116 03457000
         ST    @04,CURRD                                           1116 03458000
*  CURRD = CURRD | PRINTB3 & '1F'X;    /*   -- DDDDDDDDDDD   @G51DGJJ*/ 03459000
         LA    @04,31                                              1117 03460000
         MVC   @ZT00003+3(1),PRINTB3(@06)                          1117 03461000
         N     @04,@ZT00003                                        1117 03462000
         O     @04,CURRD                                           1117 03463000
         ST    @04,CURRD                                           1117 03464000
*  PRNTB123 = BLANK3;        /* SET COMMAND TO BLANKS        @G51DGJJ*/ 03465000
         MVC   PRNTB123(3,@06),BLANK3                              1118 03466000
*  LINEPTR = LINEPTR + 3;    /* BUMP PRINT BUFFER POINTER,   @G51DGJJ*/ 03467000
         LA    @04,3                                               1119 03468000
         ALR   @06,@04                                             1119 03469000
         ST    @06,LINEPTR                                         1119 03470000
*  CHARCNT = CHARCNT + 3;    /* SCAN CODE COUNTER            @G51DGJJ*/ 03471000
         AL    @04,CHARCNT                                         1120 03472000
         ST    @04,CHARCNT                                         1120 03473000
*END;                                                      /*@G51DGJJ*/ 03474000
@EL00053 DS    0H                                                  1121 03475000
@EF00053 DS    0H                                                  1121 03476000
@ER00053 LM    @14,@12,12(@13)                                     1121 03477000
         BR    @14                                                 1121 03478000
*/*                                                          @G51DGJJ*/ 03479000
*/*   END OF 'INTRPRET'                                      @G51DGJJ*/ 03480000
*/*                                                          @G51DGJJ*/ 03481000
*/********************************************************************/ 03482000
*END  /* CLOSING END TO IFCFRAME                             @G51DGJJ*/ 03483000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 03484000
*/*%INCLUDE SYSLIB  (COMTABLE)                                        * 03485000
*;                                                                 1122 03486000
@DATA    DS    0H                                                       03487000
@CH00082 DC    H'7'                                                     03488000
@CH01216 DC    H'13'                                                    03489000
@CH01142 DC    H'27'                                                    03490000
@CH01342 DC    XL2'3FFF'                                                03491000
@CH01324 DC    XL2'23F'                                                 03492000
         DS    0F                                                       03493000
@AL00209 DC    A(@CF01153)             LIST WITH   2 ARGUMENT(S)        03494000
         DC    A(@AFTEMPS)                                              03495000
@AL00214 EQU   *                       LIST WITH   2 ARGUMENT(S)        03496000
@AL00440 DC    A(MOD79)                LIST WITH   2 ARGUMENT(S)        03497000
         DC    A(PARM3)                                                 03498000
@AL00216 EQU   *                       LIST WITH   2 ARGUMENT(S)        03499000
@AL00442 DC    A(SER79)                LIST WITH   2 ARGUMENT(S)        03500000
         DC    A(PARM3)                                                 03501000
@AL00274 DC    A(@CF01171)             LIST WITH   2 ARGUMENT(S)        03502000
         DC    A(@AFTEMPS+4)                                            03503000
@AL00279 EQU   *                       LIST WITH   2 ARGUMENT(S)        03504000
@AL00300 DC    A(MOD20)                LIST WITH   2 ARGUMENT(S)        03505000
         DC    A(PARM3)                                                 03506000
@AL00281 EQU   *                       LIST WITH   2 ARGUMENT(S)        03507000
@AL00302 DC    A(SER20)                LIST WITH   2 ARGUMENT(S)        03508000
         DC    A(PARM3)                                                 03509000
@AL00283 EQU   *                       LIST WITH   2 ARGUMENT(S)        03510000
@AL00304 DC    A(PSN)                  LIST WITH   2 ARGUMENT(S)        03511000
         DC    A(BINOUT)                                                03512000
@AL00295 DC    A(@CF01171)             LIST WITH   2 ARGUMENT(S)        03513000
         DC    A(@AFTEMPS+8)                                            03514000
@AL00368 EQU   *                       LIST WITH   2 ARGUMENT(S)        03515000
@AL00374 DC    A(PRNTAREA)             LIST WITH   2 ARGUMENT(S)        03516000
         DC    A(NUMBER)                                                03517000
@AL00385 EQU   *                       LIST WITH   2 ARGUMENT(S)        03518000
@AL00422 DC    A(CNVRTBUF)             LIST WITH   2 ARGUMENT(S)        03519000
         DC    A(NUMBER)                                                03520000
@AL00418 DC    A(HEXA)                 LIST WITH   3 ARGUMENT(S)        03521000
@AL00323 EQU   *                       LIST WITH   1 ARGUMENT(S)        03522000
@AL00327 DC    A(@CF00073+2)           LIST WITH   1 ARGUMENT(S)        03523000
         DC    A(NUMBER)                                                03524000
@AL00435 DC    A(@CF01153)             LIST WITH   2 ARGUMENT(S)        03525000
         DC    A(@AFTEMPS+12)                                           03526000
@AL00469 DC    A(@CF00550)             LIST WITH   2 ARGUMENT(S)        03527000
         DC    A(@AFTEMPS+16)                                           03528000
@AL00474 DC    A(MOD80)                LIST WITH   2 ARGUMENT(S)        03529000
         DC    A(PARM3)                                                 03530000
@AL00476 DC    A(SER80)                LIST WITH   2 ARGUMENT(S)        03531000
         DC    A(PARM3)                                                 03532000
@AL00478 EQU   *                       LIST WITH   2 ARGUMENT(S)        03533000
@AL00859 DC    A(K)                    LIST WITH   2 ARGUMENT(S)        03534000
         DC    A(BINOUT)                                                03535000
@AL00855 DC    A(@CF01363)             LIST WITH   2 ARGUMENT(S)        03536000
         DC    A(@AFTEMPS+20)                                           03537000
@AL00865 DC    A(MODFR)                LIST WITH   2 ARGUMENT(S)        03538000
         DC    A(PARM3)                                                 03539000
@AL00867 DC    A(SERFR)                LIST WITH   2 ARGUMENT(S)        03540000
         DC    A(PARM3)                                                 03541000
@AL00873 DC    A(GROUPL24)             LIST WITH   2 ARGUMENT(S)        03542000
         DC    A(PARM3)                                                 03543000
@AL00874 DC    A(IDL24)                LIST WITH   2 ARGUMENT(S)        03544000
         DC    A(PARM3)                                                 03545000
@AL00875 DC    A(ECLEVL24)             LIST WITH   2 ARGUMENT(S)        03546000
         DC    A(PARM3)                                                 03547000
         DS    0F                                                       03548000
@SA00001 DS    18F                                                      03549000
@SA00008 DS    15F                                                      03550000
@SA00002 DS    15F                                                      03551000
@SA00013 DS    15F                                                      03552000
@SA00003 DS    15F                                                      03553000
@SA00012 DS    15F                                                      03554000
@PC00011 DS    3F                                                       03555000
@SA00015 DS    15F                                                      03556000
@SA00016 DS    15F                                                      03557000
@SA00005 DS    15F                                                      03558000
@SA00004 DS    15F                                                      03559000
@SA00006 DS    15F                                                      03560000
@SA00007 DS    15F                                                      03561000
@SA00017 DS    15F                                                      03562000
@PC00010 DS    2F                                                       03563000
@SA00009 DS    15F                                                      03564000
@SA00014 DS    15F                                                      03565000
@SA00018 DS    15F                                                      03566000
@SA00019 DS    15F                                                      03567000
@SA00039 DS    15F                                                      03568000
@SA00020 DS    15F                                                      03569000
@SA00024 DS    15F                                                      03570000
@SA00033 DS    15F                                                      03571000
@SA00043 DS    15F                                                      03572000
@SA00045 DS    15F                                                      03573000
@SA00047 DS    15F                                                      03574000
@SA00048 DS    15F                                                      03575000
@SA00049 DS    15F                                                      03576000
@SA00051 DS    15F                                                      03577000
@SA00052 DS    15F                                                      03578000
@SA00025 DS    15F                                                      03579000
@SA00028 DS    15F                                                      03580000
@SA00032 DS    15F                                                      03581000
@SA00031 DS    15F                                                      03582000
@SA00034 DS    15F                                                      03583000
@SA00038 DS    15F                                                      03584000
@SA00040 DS    15F                                                      03585000
@SA00041 DS    15F                                                      03586000
@SA00042 DS    15F                                                      03587000
@SA00050 DS    15F                                                      03588000
@AL00001 DS    3A                                                       03589000
@TF00001 DS    F                                                        03590000
@AFTEMPS DS    6F                                                       03591000
@ZTEMPS  DS    0F                                                       03592000
@ZT00001 DC    F'0'                                                     03593000
@ZT00002 DC    F'0'                                                     03594000
@ZT00003 DC    F'0'                                                     03595000
@ZTEMPND EQU   *                                                        03596000
@ZLEN    EQU   @ZTEMPND-@ZTEMPS                                         03597000
         DS    0F                                                       03598000
@CF00054 DC    F'1'                                                     03599000
@CH00054 EQU   @CF00054+2                                               03600000
@CF00073 DC    F'2'                                                     03601000
@CH00073 EQU   @CF00073+2                                               03602000
@CF00075 DC    F'3'                                                     03603000
@CH00075 EQU   @CF00075+2                                               03604000
@CF00063 DC    F'4'                                                     03605000
@CH00063 EQU   @CF00063+2                                               03606000
@CF00078 DC    F'5'                                                     03607000
@CF00065 DC    F'8'                                                     03608000
@CH00065 EQU   @CF00065+2                                               03609000
@CF00035 DC    F'12'                                                    03610000
@CH00035 EQU   @CF00035+2                                               03611000
@CF01171 DC    F'20'                                                    03612000
@CF00227 DC    F'24'                                                    03613000
@CH00227 EQU   @CF00227+2                                               03614000
@CF01363 DC    F'77'                                                    03615000
@CF01153 DC    F'79'                                                    03616000
@CF00550 DC    F'80'                                                    03617000
@CH00550 EQU   @CF00550+2                                               03618000
@CF01378 DC    XL4'1FFF'                                                03619000
@CF01319 DC    XL4'400'                                                 03620000
@CV01143 DC    V(IFCFRAMM)                                              03621000
@CV01144 DC    V(IFCFRAMC)                                              03622000
         DS    0D                                                       03623000
GROUP    DC    A(0)                                                     03624000
LINEPTR  DC    A(0)                                                     03625000
SAVELOGT DS    FL4                                                      03626000
         ORG   SAVELOGT                                                 03627000
@NM00116 DS    BL1                                                      03628000
SVLOGT1  DS    BL1                                                      03629000
SVLOGT23 DS    BL2                                                      03630000
         ORG   SVLOGT23                                                 03631000
SVLOGTF  DS    BL1                                                      03632000
SVLOGTK  EQU   SVLOGT23+0                                               03633000
@NM00117 EQU   SVLOGT23+0                                               03634000
         ORG   SAVELOGT+4                                               03635000
PREVSEQN DC    F'0'                                                     03636000
PARM3    DC    F'0'                                                     03637000
K        DC    F'0'                                                     03638000
J        DC    F'0'                                                     03639000
Q        DC    F'0'                                                     03640000
R        DC    F'0'                                                     03641000
PSN      DC    F'0'                                                     03642000
LINECT1  DC    F'0'                                                     03643000
MYLINECT DC    F'0'                                                     03644000
LNESPACE DC    F'1'                                                     03645000
FRMREG   DC    F'0'                                                     03646000
NUMBER   DC    F'0'                                                     03647000
LGREG    DC    F'0'                                                     03648000
L        DC    F'0'                                                     03649000
M        DC    F'0'                                                     03650000
RCL      DC    F'0'                                                     03651000
FRMPOINT DC    A(0)                                                     03652000
CHARCNT  DC    F'0'                                                     03653000
LINECTR  DC    F'0'                                                     03654000
LOGPTR   DC    A(0)                                                     03655000
CURRD    DC    F'0'                                                     03656000
PREVZ    DC    F'0'                                                     03657000
PREVB    DC    F'0'                                                     03658000
PREVD    DC    F'0'                                                     03659000
CURRB    DC    F'0'                                                     03660000
CURRZ    DC    F'0'                                                     03661000
CURDL    DC    F'0'                                                     03662000
CURRG    DC    F'0'                                                     03663000
CURRC    DC    F'0'                                                     03664000
CURRM    DC    F'0'                                                     03665000
PARBIT   DC    F'0'                                                     03666000
P        DC    F'0'                                                     03667000
X        DC    F'0'                                                     03668000
RETCODE  DC    H'0'                                                     03669000
LINEADDR DC    H'0'                                                     03670000
PBYTEPTR DC    H'0'                                                     03671000
PBITPTR  DC    H'0'                                                     03672000
@TS00001 DS    CL1                                                      03673000
@CB01313 DC    X'1C1C1C'                                                03674000
PRINTLNE DS    CL134                                                    03675000
         ORG   PRINTLNE                                                 03676000
DDTYPE   DC    CL1'0'                                                   03677000
SPACING  DC    X'89'                                                    03678000
PRTLINE1 DC    CL132' '                                                 03679000
         ORG   PRTLINE1                                                 03680000
MESSAGE  DS    CL58                                                     03681000
         ORG   PRINTLNE+134                                             03682000
PRINTLNT DS    CL134                                                    03683000
         ORG   PRINTLNT                                                 03684000
DDTYPET  DC    CL1'1'                                                   03685000
SPACINGT DC    X'09'                                                    03686000
PRTLINET DC    CL132' '                                                 03687000
         ORG   PRTLINET                                                 03688000
MESSAGET DS    CL58                                                     03689000
         ORG   PRINTLNT+134                                             03690000
SERMSG   DS    CL50                                                     03691000
         ORG   SERMSG                                                   03692000
@NM00093 DC    CL24'FRAME, ERROR RECORD CPU '                           03693000
@NM00094 DC    CL26'SERIAL NOS. DISAGREE.     '                         03694000
         ORG   SERMSG+50                                                03695000
SWITCHS  DC    X'A0'                                                    03696000
         ORG   SWITCHS                                                  03697000
DB4      DS    BL1                                                      03698000
HXDMPLOG EQU   SWITCHS+0                                                03699000
FIRSTFRM EQU   SWITCHS+0                                                03700000
LASTFRM  EQU   SWITCHS+0                                                03701000
SERSW    EQU   SWITCHS+0                                                03702000
HXDMPFRM EQU   SWITCHS+0                                                03703000
         ORG   SWITCHS+1                                                03704000
LABELS   DS    CL12                                                     03705000
         ORG   LABELS                                                   03706000
MCHL     DC    CL3'MCH'                                                 03707000
CCHL     DC    CL3'CCH'                                                 03708000
MCFL     DC    CL3'MCF'                                                 03709000
CCFL     DC    CL3'CCF'                                                 03710000
         ORG   LABELS+12                                                03711000
MCHSMO   DS    CL5                                                      03712000
         ORG   MCHSMO                                                   03713000
MCHS     DS    CL3                                                      03714000
MCHMO    DS    CL2                                                      03715000
         ORG   MCHSMO+5                                                 03716000
LOGDATA  DS    BL2                                                      03717000
         ORG   LOGDATA                                                  03718000
LOG1     DS    BL1                                                      03719000
LOG2     DS    BL1                                                      03720000
         ORG   LOGDATA+2                                                03721000
SWCHS    DC    X'00'                                                    03722000
         ORG   SWCHS                                                    03723000
ENDSCN   DS    BL1                                                      03724000
SCANERR  EQU   SWCHS+0                                                  03725000
ENDLINE  EQU   SWCHS+0                                                  03726000
SW1      EQU   SWCHS+0                                                  03727000
PARITY   EQU   SWCHS+0                                                  03728000
PARERR   EQU   SWCHS+0                                                  03729000
SW       EQU   SWCHS+0                                                  03730000
         ORG   SWCHS+1                                                  03731000
TRTABLE  DS    CL256                                                    03732000
         ORG   TRTABLE                                                  03733000
@NM00103 DC    CL8' ABCDEFG'                                            03734000
@NM00104 DC    CL2'HI'                                                  03735000
@NM00105 DC    X'4A'                                                    03736000
@NM00106 DC    CL5'.<(+|'                                               03737000
@NM00107 DC    CL8'&&JKLMNOP'                                           03738000
@NM00108 DC    CL8'QR!$*);^'                                            03739000
@NM00109 DC    CL8'-/STUVWX'                                            03740000
@NM00110 DC    CL2'YZ'                                                  03741000
@NM00111 DC    X'6A'                                                    03742000
@NM00112 DC    CL5',%_>?'                                               03743000
@NM00113 DC    CL8'01234567'                                            03744000
@NM00114 DC    CL8'89:#@''="'                                           03745000
@NM00115 DC    CL192' '                                                 03746000
         ORG   TRTABLE+256                                              03747000
WORKL    DS    BL2                                                      03748000
         ORG   WORKL                                                    03749000
WK       DS    BL1                                                      03750000
@NM00118 DS    BL1                                                      03751000
         ORG   WORKL+2                                                  03752000
TRSCANCD DS    CL256                                                    03753000
         ORG   TRSCANCD                                                 03754000
@NM00119 DC    X'30'                                                    03755000
@NM00120 DC    X'31'                                                    03756000
@NM00121 DC    X'32'                                                    03757000
@NM00122 DC    X'33'                                                    03758000
@NM00123 DC    X'34'                                                    03759000
@NM00124 DC    X'35'                                                    03760000
@NM00125 DC    X'36'                                                    03761000
@NM00126 DC    X'37'                                                    03762000
@NM00127 DC    X'38'                                                    03763000
@NM00128 DC    X'39'                                                    03764000
@NM00129 DC    X'01'                                                    03765000
@NM00130 DC    X'02'                                                    03766000
@NM00131 DC    X'03'                                                    03767000
@NM00132 DC    X'04'                                                    03768000
@NM00133 DC    X'05'                                                    03769000
@NM00134 DC    X'06'                                                    03770000
@NM00135 DC    CL240' '                                                 03771000
         ORG   TRSCANCD+256                                             03772000
FRMIDENT DC    CL31' '                                                  03773000
         ORG   FRMIDENT                                                 03774000
@NM00138 DC    CL6'FRAME '                                              03775000
FRMNO    DS    CL2                                                      03776000
@NM00139 DS    CL1                                                      03777000
MCFCCFFR DS    CL2                                                      03778000
@NM00140 DC    CL5' MOD '                                               03779000
MODFR    DS    CL4                                                      03780000
@NM00141 DC    CL5' SER '                                               03781000
SERFR    DS    CL6                                                      03782000
         ORG   FRMIDENT+31                                              03783000
LINE24   DC    CL30' '                                                  03784000
         ORG   LINE24                                                   03785000
@NM00142 DC    CL6'GROUP '                                              03786000
GROUPL24 DS    CL2                                                      03787000
@NM00143 DC    CL6'   ID '                                              03788000
IDL24    DS    CL2                                                      03789000
@NM00144 DC    CL12'   EC LEVEL '                                       03790000
ECLEVL24 DS    CL2                                                      03791000
         ORG   LINE24+30                                                03792000
BINOUT   DC    CL5' '                                                   03793000
FRMHD    DC    CL18'HEX DUMP OF FRAME '                                 03794000
LOGHD1   DC    CL18'HEX DUMP OF RECORD'                                 03795000
LOGHD2   DC    CL10'HEADER    '                                         03796000
CNVRTBUF DC    CL64' '                                                  03797000
BLANKS   DC    CL64' '                                                  03798000
PRTBUFF  DC    CL80' '                                                  03799000
BLANK3   DC    CL3' '                                                   03800000
SCNCODE  DC    AL1(0)                                                   03801000
SAVEL    DC    AL1(0)                                                   03802000
LOG3     DC    AL1(0)                                                   03803000
         DS    CL1                                                      03804000
DBLWORD  DS    CL8                                                      03805000
WORK     DS    CL8                                                      03806000
SWITCH   DC    X'00'                                                    03807000
         ORG   SWITCH                                                   03808000
SWITCH1  DS    BL1                                                      03809000
         ORG   SWITCH+1                                                 03810000
CHARS    DC    CL16'0123456789ABCDEF'                                   03811000
SUPERZAP DC    3CL10'SUPERZAP'                                          03812000
         DS    CL1                                                      03813000
SKPCODE  DC    H'1'                                                     03814000
         DC    H'2'                                                     03815000
         DC    H'4'                                                     03816000
         DC    H'8'                                                     03817000
         DC    H'16'                                                    03818000
         DC    H'32'                                                    03819000
         DC    H'64'                                                    03820000
LCN0     DC    X'27'                                                    03821000
         DC    X'03'                                                    03822000
         DC    X'04'                                                    03823000
         DC    X'05'                                                    03824000
         DC    X'06'                                                    03825000
         DC    X'27'                                                    03826000
LCN1     DC    X'03'                                                    03827000
         DC    X'04'                                                    03828000
         DC    X'05'                                                    03829000
         DC    X'06'                                                    03830000
         DC    X'27'                                                    03831000
         DC    X'27'                                                    03832000
IFCFRAME CSECT                                                          03833000
        DC    S(SUPERZAP)                                               03834000
IFCFRAME CSECT                                                          03835000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       03836000
@01      EQU   01                                                       03837000
@02      EQU   02                                                       03838000
@03      EQU   03                                                       03839000
@04      EQU   04                                                       03840000
@05      EQU   05                                                       03841000
@06      EQU   06                                                       03842000
@07      EQU   07                                                       03843000
@08      EQU   08                                                       03844000
@09      EQU   09                                                       03845000
@10      EQU   10                                                       03846000
@11      EQU   11                                                       03847000
@12      EQU   12                                                       03848000
@13      EQU   13                                                       03849000
@14      EQU   14                                                       03850000
@15      EQU   15                                                       03851000
LC       EQU   @03                                                      03852000
JC       EQU   @04                                                      03853000
R2       EQU   @02                                                      03854000
R5       EQU   @05                                                      03855000
R7       EQU   @07                                                      03856000
R8       EQU   @08                                                      03857000
R9       EQU   @09                                                      03858000
R10      EQU   @10                                                      03859000
R15      EQU   @15                                                      03860000
R0       EQU   @00                                                      03861000
R1       EQU   @01                                                      03862000
R11      EQU   @11                                                      03863000
R12      EQU   @12                                                      03864000
R13      EQU   @13                                                      03865000
R14      EQU   @14                                                      03866000
R3       EQU   @03                                                      03867000
R4       EQU   @04                                                      03868000
R6       EQU   @06                                                      03869000
IOHND    EQU   0                                                        03870000
IFCMSG   EQU   0                                                        03871000
PARM     EQU   0                                                        03872000
RECTYPE  EQU   PARM                                                     03873000
SWITCHES EQU   PARM+2                                                   03874000
DEBUG    EQU   PARM+4                                                   03875000
DEBUG4   EQU   DEBUG                                                    03876000
DEBUGA   EQU   PARM+8                                                   03877000
DEBUG44  EQU   DEBUGA+1                                                 03878000
DEBUG45  EQU   DEBUGA+1                                                 03879000
MISC     EQU   PARM+12                                                  03880000
PRINTES  EQU   MISC                                                     03881000
OPENCLSE EQU   PARM+13                                                  03882000
OPENIO   EQU   OPENCLSE                                                 03883000
CLOSEIO  EQU   OPENCLSE+2                                               03884000
DATENOW  EQU   PARM+17                                                  03885000
STDT     EQU   PARM+23                                                  03886000
STDATE   EQU   STDT                                                     03887000
PSTD     EQU   STDATE+1                                                 03888000
ENDDT    EQU   PARM+31                                                  03889000
ENDDATE  EQU   ENDDT                                                    03890000
PEND     EQU   ENDDATE+1                                                03891000
STTIME1  EQU   PARM+39                                                  03892000
ENDTIME1 EQU   PARM+43                                                  03893000
STTIME2  EQU   PARM+47                                                  03894000
ENDTIME2 EQU   PARM+51                                                  03895000
STRTDATE EQU   PARM+55                                                  03896000
@NM00007 EQU   PARM+75                                                  03897000
ERRID    EQU   PARM+92                                                  03898000
IDTIMEA  EQU   ERRID+6                                                  03899000
IDTIME   EQU   IDTIMEA                                                  03900000
CCHHRLNG EQU   PARM+112                                                 03901000
RECLNGTH EQU   CCHHRLNG+6                                               03902000
LINECT   EQU   PARM+120                                                 03903000
ADIOHND  EQU   PARM+124                                                 03904000
ADIFCMSG EQU   PARM+128                                                 03905000
ADEDITB  EQU   PARM+132                                                 03906000
EVPTR    EQU   PARM+136                                                 03907000
SORTADR  EQU   PARM+140                                                 03908000
PRINTADR EQU   PARM+148                                                 03909000
CUAPTR   EQU   PARM+152                                                 03910000
DEVPTR   EQU   PARM+156                                                 03911000
MODPTR   EQU   PARM+160                                                 03912000
SERPTR   EQU   PARM+164                                                 03913000
VOLPTR   EQU   PARM+168                                                 03914000
CPUPTR   EQU   PARM+172                                                 03915000
CPCUAPTR EQU   PARM+176                                                 03916000
LIBADPTR EQU   PARM+180                                                 03917000
SYMCDPTR EQU   PARM+184                                                 03918000
SYSUMPTR EQU   PARM+188                                                 03919000
TRENPTR  EQU   PARM+192                                                 03920000
SHAREPTR EQU   PARM+196                                                 03921000
RECLNGT1 EQU   PARM+204                                                 03922000
MERDCPTR EQU   PARM+208                                                 03923000
DUMPTABL EQU   PARM+228                                                 03924000
DUMPINFO EQU   DUMPTABL+4                                               03925000
TRENDONE EQU   0                                                        03926000
TREGEN   EQU   TRENDONE+8                                               03927000
TRECCH0  EQU   TREGEN+8                                                 03928000
TREND2   EQU   0                                                        03929000
TRENDKEY EQU   TREND2                                                   03930000
TRENDRT  EQU   TRENDKEY+1                                               03931000
TRENCPUS EQU   TRENDKEY+3                                               03932000
TRENDITM EQU   TRENDKEY+4                                               03933000
EVTABLE  EQU   0                                                        03934000
EVSTOP   EQU   EVTABLE                                                  03935000
EVKEY    EQU   EVTABLE+6                                                03936000
SORTABLE EQU   0                                                        03937000
SORTKEY  EQU   SORTABLE                                                 03938000
SORTCCHR EQU   SORTABLE+5                                               03939000
SYSUMONE EQU   0                                                        03940000
SYSUM2   EQU   0                                                        03941000
SYSUMKEY EQU   SYSUM2                                                   03942000
SYSRT    EQU   SYSUMKEY+1                                               03943000
SYSCPUS  EQU   SYSUMKEY+3                                               03944000
SYSITEM  EQU   SYSUMKEY+4                                               03945000
SHARE    EQU   0                                                        03946000
SHAREIO  EQU   SHARE+2                                                  03947000
SHRCUCPU EQU   SHAREIO                                                  03948000
SHARECUA EQU   SHRCUCPU                                                 03949000
EDITLOAD EQU   0                                                        03950000
EDITABLE EQU   EDITLOAD+4                                               03951000
CUA      EQU   0                                                        03952000
CUAVAL   EQU   CUA+2                                                    03953000
DEVICE   EQU   0                                                        03954000
MODELS   EQU   0                                                        03955000
DEVSERAL EQU   0                                                        03956000
VOLUME   EQU   0                                                        03957000
CPUS     EQU   0                                                        03958000
CPUCUAS  EQU   0                                                        03959000
CPUCUAV  EQU   CPUCUAS+2                                                03960000
LIBADR   EQU   0                                                        03961000
SYMCODE  EQU   0                                                        03962000
SYMVAL   EQU   SYMCODE+2                                                03963000
MERIDIAN EQU   0                                                        03964000
LRTREC   EQU   0                                                        03965000
LRTKEY   EQU   LRTREC                                                   03966000
LRTKEY1  EQU   LRTKEY                                                   03967000
LRTSMS   EQU   LRTREC+2                                                 03968000
LRTERRID EQU   LRTREC+3                                                 03969000
@NM00016 EQU   LRTREC+4                                                 03970000
LRTDT    EQU   LRTREC+8                                                 03971000
LRTDATE  EQU   LRTDT                                                    03972000
LRTYRDAY EQU   LRTDATE+1                                                03973000
LRTTIME  EQU   LRTDT+4                                                  03974000
LRTCPU   EQU   LRTREC+16                                                03975000
LRTCPMOD EQU   LRTCPU+1                                                 03976000
LRTCPUS  EQU   LRTCPMOD                                                 03977000
LRTMODEL EQU   LRTCPMOD+3                                               03978000
MCHREC   EQU   0                                                        03979000
MCHHEAD  EQU   MCHREC                                                   03980000
MCHKEY   EQU   MCHHEAD                                                  03981000
MCHSMS   EQU   MCHHEAD+2                                                03982000
MCHCPUID EQU   MCHHEAD+16                                               03983000
MCHSER   EQU   MCHCPUID+1                                               03984000
MCHMOD   EQU   MCHCPUID+4                                               03985000
MCHCEL   EQU   MCHCPUID+6                                               03986000
CCHREC   EQU   0                                                        03987000
CCHHEAD  EQU   CCHREC                                                   03988000
CCHKEY   EQU   CCHHEAD                                                  03989000
CCHSMS   EQU   CCHHEAD+2                                                03990000
CCHCPUID EQU   CCHHEAD+16                                               03991000
CCHCODE  EQU   CCHREC+68                                                03992000
CCHCODE2 EQU   CCHCODE+2                                                03993000
OBRREC   EQU   0                                                        03994000
OBRHEAD  EQU   OBRREC                                                   03995000
OBRKEY   EQU   OBRHEAD                                                  03996000
OBRSMS   EQU   OBRHEAD+2                                                03997000
MISCSW   EQU   OBRSMS                                                   03998000
OBRSUBTP EQU   OBRSMS+1                                                 03999000
OBRCPUID EQU   OBRHEAD+16                                               04000000
OBRJOBID EQU   OBRREC+24                                                04001000
OBRFCCW  EQU   OBRREC+32                                                04002000
OBRSRDS  EQU   OBRFCCW                                                  04003000
OBRCSW   EQU   OBRREC+40                                                04004000
OBRCODE  EQU   OBRREC+52                                                04005000
OBRDEV   EQU   OBRCODE+2                                                04006000
OBRSEEK  EQU   OBRREC+70                                                04007000
OBRTERMN EQU   OBRSEEK+2                                                04008000
SFTREC   EQU   0                                                        04009000
SFTHEAD  EQU   SFTREC                                                   04010000
SFTKEY   EQU   SFTHEAD                                                  04011000
SFTCPUID EQU   SFTHEAD+16                                               04012000
SFTSDWA  EQU   SFTREC+32                                                04013000
SFTAEC1  EQU   SFTSDWA+96                                               04014000
SFTFLGS  EQU   SFTSDWA+232                                              04015000
SFTRECP  EQU   SFTSDWA+292                                              04016000
IPLREC   EQU   0                                                        04017000
IPLHEAD  EQU   IPLREC                                                   04018000
IPLKEY   EQU   IPLHEAD                                                  04019000
IPLCPUID EQU   IPLHEAD+16                                               04020000
IPLSTIME EQU   IPLREC+52                                                04021000
DDRREC   EQU   0                                                        04022000
DDRHEAD  EQU   DDRREC                                                   04023000
DDRKEY   EQU   DDRHEAD                                                  04024000
DDRSMS   EQU   DDRHEAD+2                                                04025000
DDRCPUID EQU   DDRHEAD+16                                               04026000
@NM00051 EQU   DDRREC+24                                                04027000
DDRFDEV  EQU   DDRREC+48                                                04028000
DDRCODE2 EQU   DDRFDEV+2                                                04029000
DDRTODEV EQU   DDRREC+56                                                04030000
MIHREC   EQU   0                                                        04031000
MIHHEAD  EQU   MIHREC                                                   04032000
MIHKEY   EQU   MIHHEAD                                                  04033000
MIHCPUID EQU   MIHHEAD+16                                               04034000
@NM00057 EQU   MIHREC+24                                                04035000
MIHDEV   EQU   MIHREC+44                                                04036000
MIHCODE2 EQU   MIHDEV+2                                                 04037000
EODREC   EQU   0                                                        04038000
EODHEAD  EQU   EODREC                                                   04039000
EODKEY   EQU   EODHEAD                                                  04040000
EODCPUID EQU   EODHEAD+16                                               04041000
TPRREC   EQU   0                                                        04042000
TPRHEAD  EQU   TPRREC                                                   04043000
TPRKEY   EQU   TPRHEAD                                                  04044000
TPRBUFC  EQU   TPRHEAD+5                                                04045000
TPRCPUID EQU   TPRHEAD+16                                               04046000
@NM00065 EQU   TPRREC+26                                                04047000
MCFREC   EQU   0                                                        04048000
MCFHEAD  EQU   MCFREC                                                   04049000
MCFKEY   EQU   MCFHEAD                                                  04050000
MCFKEY1  EQU   MCFKEY                                                   04051000
MCFSMS   EQU   MCFHEAD+2                                                04052000
MCFLST   EQU   MCFSMS                                                   04053000
MCFCNT   EQU   MCFHEAD+6                                                04054000
@NM00073 EQU   MCFHEAD+16                                               04055000
MCFSMO   EQU   MCFHEAD+17                                               04056000
MCFSER   EQU   MCFSMO                                                   04057000
MCFMOD   EQU   MCFSMO+3                                                 04058000
CCFREC   EQU   0                                                        04059000
CCFHEAD  EQU   CCFREC                                                   04060000
CCFKEY   EQU   CCFHEAD                                                  04061000
CCFSMS   EQU   CCFHEAD+2                                                04062000
@NM00081 EQU   CCFHEAD+16                                               04063000
CCFSMO   EQU   CCFHEAD+17                                               04064000
PRTGROUP EQU   0                                                        04065000
PTGROUP  EQU   PRTGROUP                                                 04066000
PRTDMPAD EQU   0                                                        04067000
PTADDR   EQU   PRTDMPAD                                                 04068000
PRNTB123 EQU   0                                                        04069000
PRINTB12 EQU   PRNTB123                                                 04070000
PRINTBUF EQU   PRINTB12                                                 04071000
PRINTB23 EQU   PRINTB12+1                                               04072000
PRINTB2  EQU   PRINTB23                                                 04073000
PRINTB3  EQU   PRINTB23+1                                               04074000
FRMRECD  EQU   0                                                        04075000
LOGRECD  EQU   0                                                        04076000
FRAMECHR EQU   0                                                        04077000
FRMCHARS EQU   0                                                        04078000
LOG      EQU   0                                                        04079000
PARBYTE  EQU   0                                                        04080000
BINWORD  EQU   0                                                        04081000
DECADDR  EQU   0                                                        04082000
NEXTBYTE EQU   0                                                        04083000
ADDNUM   EQU   0                                                        04084000
LENNUM   EQU   0                                                        04085000
PRTLINE2 EQU   PRTLINE1                                                 04086000
PRNTBUFF EQU   PRTLINE2+50                                              04087000
ERR79    EQU   MESSAGE                                                  04088000
MCHCCH79 EQU   ERR79+25                                                 04089000
MOD79    EQU   ERR79+33                                                 04090000
SER79    EQU   ERR79+42                                                 04091000
ERR20    EQU   MESSAGE                                                  04092000
MCFCCF20 EQU   ERR20+8                                                  04093000
FRAME20  EQU   ERR20+18                                                 04094000
MOD20    EQU   ERR20+34                                                 04095000
SER20    EQU   ERR20+43                                                 04096000
PRTDMPHD EQU   PRTLINE1                                                 04097000
DUMPMSG  EQU   PRTDMPHD+3                                               04098000
PRNTAREA EQU   PRTLINE1                                                 04099000
ERR80    EQU   MESSAGE                                                  04100000
MCFCCF80 EQU   ERR80+17                                                 04101000
FRAME80  EQU   ERR80+27                                                 04102000
MOD80    EQU   ERR80+34                                                 04103000
SER80    EQU   ERR80+43                                                 04104000
ERR77    EQU   MESSAGE                                                  04105000
HEXA     EQU   LINEADDR                                                 04106000
WORKOVER EQU   WORK                                                     04107000
TRECCH   EQU   TRECCH0                                                  04108000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    04109000
@NM00137 EQU   ERR77+8                                                  04110000
@NM00136 EQU   ERR77                                                    04111000
@NM00102 EQU   ERR80+38                                                 04112000
@NM00101 EQU   ERR80+29                                                 04113000
@NM00100 EQU   ERR80+20                                                 04114000
@NM00099 EQU   ERR80+8                                                  04115000
@NM00098 EQU   ERR80                                                    04116000
@NM00095 EQU   PRTDMPHD                                                 04117000
@NM00092 EQU   ERR20+38                                                 04118000
@NM00091 EQU   ERR20+20                                                 04119000
@NM00090 EQU   ERR20+11                                                 04120000
@NM00089 EQU   ERR20                                                    04121000
@NM00088 EQU   ERR79+37                                                 04122000
@NM00087 EQU   ERR79+28                                                 04123000
@NM00086 EQU   ERR79+8                                                  04124000
@NM00085 EQU   ERR79                                                    04125000
@NM00084 EQU   PRTLINE2                                                 04126000
@NM00097 EQU   PRTDMPAD+4                                               04127000
@NM00096 EQU   PRTGROUP+8                                               04128000
CCFFRAME EQU   CCFREC+24                                                04129000
@NM00083 EQU   CCFHEAD+22                                               04130000
CCFMOD   EQU   CCFSMO+3                                                 04131000
CCFSER   EQU   CCFSMO                                                   04132000
CCFVER   EQU   @NM00081                                                 04133000
@NM00082 EQU   @NM00081                                                 04134000
CCFTIMD  EQU   CCFHEAD+12                                               04135000
CCFDAT   EQU   CCFHEAD+8                                                04136000
@NM00080 EQU   CCFHEAD+7                                                04137000
CCFCNT   EQU   CCFHEAD+6                                                04138000
@NM00079 EQU   CCFHEAD+4                                                04139000
@NM00078 EQU   CCFSMS+1                                                 04140000
CCFCPU   EQU   CCFSMS+1                                                 04141000
CCFMP    EQU   CCFSMS+1                                                 04142000
@NM00077 EQU   CCFSMS                                                   04143000
CCFTIM   EQU   CCFSMS                                                   04144000
@NM00076 EQU   CCFSMS                                                   04145000
CCFTRU   EQU   CCFSMS                                                   04146000
CCFTOD   EQU   CCFSMS                                                   04147000
CCFLST   EQU   CCFSMS                                                   04148000
CCFKEY2  EQU   CCFKEY+1                                                 04149000
CCFKEY1  EQU   CCFKEY                                                   04150000
MCFFRAME EQU   MCFREC+24                                                04151000
@NM00075 EQU   MCFHEAD+22                                               04152000
MCFVER   EQU   @NM00073                                                 04153000
@NM00074 EQU   @NM00073                                                 04154000
MCFTIMD  EQU   MCFHEAD+12                                               04155000
MCFDAT   EQU   MCFHEAD+8                                                04156000
@NM00072 EQU   MCFHEAD+7                                                04157000
@NM00071 EQU   MCFHEAD+4                                                04158000
@NM00070 EQU   MCFSMS+1                                                 04159000
MCFCPU   EQU   MCFSMS+1                                                 04160000
MCFMP    EQU   MCFSMS+1                                                 04161000
@NM00069 EQU   MCFSMS                                                   04162000
MCFTIM   EQU   MCFSMS                                                   04163000
@NM00068 EQU   MCFSMS                                                   04164000
MCFTRU   EQU   MCFSMS                                                   04165000
MCFTOD   EQU   MCFSMS                                                   04166000
MCFKEY2  EQU   MCFKEY+1                                                 04167000
DVBSDRE  EQU   TPRREC+56                                                04168000
@NM00067 EQU   TPRREC+39                                                04169000
TPRMODE  EQU   TPRREC+38                                                04170000
TPRLINAD EQU   TPRREC+36                                                04171000
@NM00066 EQU   TPRREC+34                                                04172000
TPRVOL   EQU   @NM00065                                                 04173000
TPRCUA   EQU   TPRREC+24                                                04174000
TPRCEL   EQU   TPRCPUID+6                                               04175000
TPRMODEL EQU   TPRCPUID+4                                               04176000
TPRSER   EQU   TPRCPUID+1                                               04177000
@NM00064 EQU   TPRCPUID                                                 04178000
TPRTIME  EQU   TPRHEAD+12                                               04179000
TPRDATE  EQU   TPRHEAD+8                                                04180000
@NM00063 EQU   TPRHEAD+6                                                04181000
TPRLENGT EQU   TPRBUFC                                                  04182000
@NM00062 EQU   TPRBUFC                                                  04183000
TPRDEV   EQU   TPRHEAD+4                                                04184000
TPRSMS   EQU   TPRHEAD+2                                                04185000
TPRKEY2  EQU   TPRKEY+1                                                 04186000
TPRKEY1  EQU   TPRKEY                                                   04187000
EODCEL   EQU   EODCPUID+6                                               04188000
EODMODEL EQU   EODCPUID+4                                               04189000
EODSER   EQU   EODCPUID+1                                               04190000
@NM00061 EQU   EODCPUID                                                 04191000
EODTIME  EQU   EODHEAD+12                                               04192000
EODDATE  EQU   EODHEAD+8                                                04193000
@NM00060 EQU   EODHEAD+5                                                04194000
EODDEV   EQU   EODHEAD+4                                                04195000
EODSMS   EQU   EODHEAD+2                                                04196000
EODKEY2  EQU   EODKEY+1                                                 04197000
EODKEY1  EQU   EODKEY                                                   04198000
MIHTYPE  EQU   MIHCODE2+1                                               04199000
MIHCLASS EQU   MIHCODE2                                                 04200000
@NM00059 EQU   MIHDEV                                                   04201000
MIHVOL   EQU   MIHREC+38                                                04202000
MIHCUA   EQU   MIHREC+35                                                04203000
@NM00058 EQU   @NM00057+8                                               04204000
MIHJOBID EQU   @NM00057                                                 04205000
MIHCEL   EQU   MIHCPUID+6                                               04206000
MIHMOD   EQU   MIHCPUID+4                                               04207000
MIHSER   EQU   MIHCPUID+1                                               04208000
@NM00056 EQU   MIHCPUID                                                 04209000
MIHTIME  EQU   MIHHEAD+12                                               04210000
MIHDATE  EQU   MIHHEAD+8                                                04211000
@NM00055 EQU   MIHHEAD+6                                                04212000
@NM00054 EQU   MIHHEAD+5                                                04213000
MIHDEBIT EQU   MIHHEAD+5                                                04214000
MIHCEBIT EQU   MIHHEAD+5                                                04215000
@NM00053 EQU   MIHHEAD+4                                                04216000
MIHSMS   EQU   MIHHEAD+2                                                04217000
MIHKEY2  EQU   MIHKEY+1                                                 04218000
MIHKEY1  EQU   MIHKEY                                                   04219000
DDRDEV2  EQU   DDRTODEV+2                                               04220000
DDRDEV1  EQU   DDRTODEV                                                 04221000
DDRTOCUA EQU   DDRREC+53                                                04222000
@NM00052 EQU   DDRREC+52                                                04223000
DDRTYPE  EQU   DDRCODE2+1                                               04224000
DDRCLASS EQU   DDRCODE2                                                 04225000
DDRCODE1 EQU   DDRFDEV                                                  04226000
DDRFCUA  EQU   DDRREC+45                                                04227000
DDRPHD   EQU   @NM00051+20                                              04228000
DDRVOL2  EQU   @NM00051+14                                              04229000
DDRVOL1  EQU   @NM00051+8                                               04230000
DDRJOBID EQU   @NM00051                                                 04231000
DDRCEL   EQU   DDRCPUID+6                                               04232000
DDRMOD   EQU   DDRCPUID+4                                               04233000
DDRSER   EQU   DDRCPUID+1                                               04234000
@NM00050 EQU   DDRCPUID                                                 04235000
DDRTIME  EQU   DDRHEAD+12                                               04236000
DDRDATE  EQU   DDRHEAD+8                                                04237000
@NM00049 EQU   DDRHEAD+4                                                04238000
DDRDEPSW EQU   DDRSMS+1                                                 04239000
@NM00048 EQU   DDRSMS                                                   04240000
DDRKEY2  EQU   DDRKEY+1                                                 04241000
DDRKEY1  EQU   DDRKEY                                                   04242000
IPLSHSEC EQU   IPLSTIME+3                                               04243000
IPLSSEC  EQU   IPLSTIME+2                                               04244000
IPLSMIN  EQU   IPLSTIME+1                                               04245000
IPLSHOUR EQU   IPLSTIME                                                 04246000
IPLSDATE EQU   IPLREC+48                                                04247000
IPLTEMP  EQU   IPLREC+46                                                04248000
IPLHIGH  EQU   IPLREC+42                                                04249000
IPLCHAN  EQU   IPLREC+32                                                04250000
@NM00047 EQU   IPLREC+30                                                04251000
IPLREAS  EQU   IPLREC+28                                                04252000
@NM00046 EQU   IPLREC+25                                                04253000
IPLSYSID EQU   IPLREC+24                                                04254000
IPLCEL   EQU   IPLCPUID+6                                               04255000
IPLMOD   EQU   IPLCPUID+4                                               04256000
IPLSER   EQU   IPLCPUID+1                                               04257000
@NM00045 EQU   IPLCPUID                                                 04258000
IPLTIME  EQU   IPLHEAD+12                                               04259000
IPLDATE  EQU   IPLHEAD+8                                                04260000
@NM00044 EQU   IPLHEAD+4                                                04261000
IPLSMS   EQU   IPLHEAD+2                                                04262000
IPLKEY2  EQU   IPLKEY+1                                                 04263000
IPLKEY1  EQU   IPLKEY                                                   04264000
SFTXDATA EQU   SFTREC+434                                               04265000
SFTLVARA EQU   SFTREC+432                                               04266000
SFTREXN  EQU   SFTRECP+16                                               04267000
SFTCSECT EQU   SFTRECP+8                                                04268000
SFTMODN  EQU   SFTRECP                                                  04269000
@NM00043 EQU   SFTSDWA+238                                              04270000
SFTLCPUA EQU   SFTSDWA+236                                              04271000
SFTERRD  EQU   SFTFLGS+3                                                04272000
SFTERRC  EQU   SFTFLGS+2                                                04273000
SFTERRB  EQU   SFTFLGS+1                                                04274000
SFTERRA  EQU   SFTFLGS                                                  04275000
@NM00042 EQU   SFTSDWA+136                                              04276000
SFTAAEC1 EQU   SFTSDWA+120                                              04277000
@NM00041 EQU   SFTSDWA+112                                              04278000
SFTPROGC EQU   SFTAEC1+8                                                04279000
@NM00040 EQU   SFTAEC1                                                  04280000
@NM00039 EQU   SFTSDWA+88                                               04281000
SFTGRSV  EQU   SFTSDWA+24                                               04282000
SFTABNDC EQU   SFTSDWA                                                  04283000
SFTJOBID EQU   SFTREC+24                                                04284000
SFTCEL   EQU   SFTCPUID+6                                               04285000
SFTMOD   EQU   SFTCPUID+4                                               04286000
SFTSER   EQU   SFTCPUID+1                                               04287000
@NM00038 EQU   SFTCPUID                                                 04288000
SFTTIME  EQU   SFTHEAD+12                                               04289000
SFTDATE  EQU   SFTHEAD+8                                                04290000
@NM00037 EQU   SFTHEAD+4                                                04291000
SFTSMS   EQU   SFTHEAD+2                                                04292000
SFTKEY2  EQU   SFTKEY+1                                                 04293000
SFTKEY1  EQU   SFTKEY                                                   04294000
OBR34CT2 EQU   OBRTERMN+5                                               04295000
OBR34CT1 EQU   OBRTERMN+4                                               04296000
@NM00036 EQU   OBRTERMN                                                 04297000
@NM00035 EQU   OBRSEEK+1                                                04298000
OBRTCAM  EQU   OBRSEEK                                                  04299000
OBRVOL   EQU   OBRREC+64                                                04300000
OBRSBCNT EQU   OBRREC+62                                                04301000
OBRRETRY EQU   OBRREC+60                                                04302000
OBRPCUA  EQU   OBRREC+57                                                04303000
OBRLSDRC EQU   OBRREC+56                                                04304000
OBRTYPE  EQU   OBRDEV+1                                                 04305000
OBRCLASS EQU   OBRDEV                                                   04306000
OBRCODE1 EQU   OBRCODE                                                  04307000
OBRSECUA EQU   OBRREC+49                                                04308000
OBRDEVDC EQU   OBRREC+48                                                04309000
OBRSTAT  EQU   OBRCSW+4                                                 04310000
@NM00034 EQU   OBRCSW                                                   04311000
OBRSDRS2 EQU   OBRSRDS                                                  04312000
OBRSDRS1 EQU   OBRSRDS                                                  04313000
OBRSCUA  EQU   OBRJOBID+5                                               04314000
OBRSSDRC EQU   OBRJOBID+4                                               04315000
OBRSDEV2 EQU   OBRJOBID+2                                               04316000
OBRSDEV1 EQU   OBRJOBID                                                 04317000
OBRCEL   EQU   OBRCPUID+6                                               04318000
OBRMOD   EQU   OBRCPUID+4                                               04319000
OBRSER   EQU   OBRCPUID+1                                               04320000
@NM00033 EQU   OBRCPUID                                                 04321000
OBRTIME  EQU   OBRHEAD+12                                               04322000
OBRDATE  EQU   OBRHEAD+8                                                04323000
@NM00032 EQU   OBRHEAD+4                                                04324000
@NM00031 EQU   OBRSUBTP                                                 04325000
DISMOUNT EQU   OBRSUBTP                                                 04326000
@NM00030 EQU   OBRSUBTP                                                 04327000
SHORTSW  EQU   OBRSUBTP                                                 04328000
OBRTEMP  EQU   OBRSUBTP                                                 04329000
SDRCOUNT EQU   OBRSUBTP                                                 04330000
@NM00029 EQU   MISCSW                                                   04331000
TRUNC    EQU   MISCSW                                                   04332000
@NM00028 EQU   MISCSW                                                   04333000
OBRKEY2  EQU   OBRKEY+1                                                 04334000
OBRKEY1  EQU   OBRKEY                                                   04335000
CCHLOG   EQU   CCHREC+80                                                04336000
CCHMP    EQU   CCHREC+76                                                04337000
CCHCUA   EQU   CCHREC+74                                                04338000
@NM00027 EQU   CCHREC+73                                                04339000
CCHID    EQU   CCHREC+72                                                04340000
CCHTYPE  EQU   CCHCODE2+1                                               04341000
CCHCLASS EQU   CCHCODE2                                                 04342000
CCHCODE1 EQU   CCHCODE                                                  04343000
CCHECSW  EQU   CCHREC+64                                                04344000
CCHCSW   EQU   CCHREC+56                                                04345000
CCHFCCW  EQU   CCHREC+48                                                04346000
CCHATIO  EQU   CCHREC+32                                                04347000
CCHJOBID EQU   CCHREC+24                                                04348000
CCHCEL   EQU   CCHCPUID+6                                               04349000
CCHMOD   EQU   CCHCPUID+4                                               04350000
CCHSER   EQU   CCHCPUID+1                                               04351000
@NM00026 EQU   CCHCPUID                                                 04352000
CCHTIME  EQU   CCHHEAD+12                                               04353000
CCHDATE  EQU   CCHHEAD+8                                                04354000
@NM00025 EQU   CCHHEAD+4                                                04355000
CCHRINC  EQU   CCHSMS+1                                                 04356000
@NM00024 EQU   CCHSMS                                                   04357000
CCHRCRH  EQU   CCHSMS                                                   04358000
@NM00023 EQU   CCHSMS                                                   04359000
CCHKEY2  EQU   CCHKEY+1                                                 04360000
CCHKEY1  EQU   CCHKEY                                                   04361000
MCHLOG   EQU   MCHREC+48                                                04362000
MCHOPSW  EQU   MCHREC+40                                                04363000
MCHJOBID EQU   MCHREC+32                                                04364000
MCHPGMID EQU   MCHREC+24                                                04365000
@NM00022 EQU   MCHCPUID                                                 04366000
MCHTIME  EQU   MCHHEAD+12                                               04367000
MCHDATE  EQU   MCHHEAD+8                                                04368000
@NM00021 EQU   MCHHEAD+4                                                04369000
MCHSYSTR EQU   MCHSMS+1                                                 04370000
@NM00020 EQU   MCHSMS                                                   04371000
MCHKEY2  EQU   MCHKEY+1                                                 04372000
MCHKEY1  EQU   MCHKEY                                                   04373000
LRTMCEL  EQU   LRTCPU+6                                                 04374000
@NM00019 EQU   LRTCPU                                                   04375000
LRTHSECS EQU   LRTTIME+3                                                04376000
LRTSEC   EQU   LRTTIME+2                                                04377000
LRTMIN   EQU   LRTTIME+1                                                04378000
LRTHOUR  EQU   LRTTIME                                                  04379000
LRTDAY   EQU   LRTYRDAY+1                                               04380000
LRTYEAR  EQU   LRTYRDAY                                                 04381000
LRTDATE0 EQU   LRTDATE                                                  04382000
@NM00018 EQU   @NM00016+3                                               04383000
LRTCNT   EQU   @NM00016+2                                               04384000
@NM00017 EQU   @NM00016                                                 04385000
LRTDSMNT EQU   LRTERRID                                                 04386000
@NM00015 EQU   LRTERRID                                                 04387000
LRTSHRT  EQU   LRTERRID                                                 04388000
@NM00014 EQU   LRTERRID                                                 04389000
@NM00013 EQU   LRTSMS                                                   04390000
LRTIMCNV EQU   LRTSMS                                                   04391000
@NM00012 EQU   LRTSMS                                                   04392000
LRTRUNC  EQU   LRTSMS                                                   04393000
LRNS     EQU   LRTSMS                                                   04394000
LRTNLAST EQU   LRTSMS                                                   04395000
LRTKEY2  EQU   LRTKEY+1                                                 04396000
MODEL    EQU   MERIDIAN+2                                               04397000
MRDNUMBR EQU   MERIDIAN                                                 04398000
SYMVAL2  EQU   SYMVAL+2                                                 04399000
SYMVAL1  EQU   SYMVAL                                                   04400000
SYMCDNUM EQU   SYMCODE                                                  04401000
LIBVAL   EQU   LIBADR+2                                                 04402000
LIBADNUM EQU   LIBADR                                                   04403000
CPUCUX3  EQU   CPUCUAV+5                                                04404000
CPUCUX2  EQU   CPUCUAV+3                                                04405000
CPUCUX1  EQU   CPUCUAV                                                  04406000
CPCUANUM EQU   CPUCUAS                                                  04407000
CPUVAL   EQU   CPUS+2                                                   04408000
CPUNUM   EQU   CPUS                                                     04409000
VOLVAL   EQU   VOLUME+2                                                 04410000
VOLNUM   EQU   VOLUME                                                   04411000
SERVAL   EQU   DEVSERAL+2                                               04412000
SERNUM   EQU   DEVSERAL                                                 04413000
MODVAL   EQU   MODELS+2                                                 04414000
MODNUM   EQU   MODELS                                                   04415000
MDRVAL   EQU   DEVICE+204                                               04416000
MDRNUM   EQU   DEVICE+202                                               04417000
DEVVAL   EQU   DEVICE+2                                                 04418000
DEVNUM   EQU   DEVICE                                                   04419000
CUA2     EQU   CUAVAL+2                                                 04420000
CUA1     EQU   CUAVAL                                                   04421000
CUANUM   EQU   CUA                                                      04422000
LOADPTR  EQU   EDITABLE+8                                               04423000
LOADNAME EQU   EDITABLE                                                 04424000
EDITNUM  EQU   EDITLOAD                                                 04425000
SHARLET  EQU   SHAREIO+10                                               04426000
SHARSERB EQU   SHAREIO+7                                                04427000
SHARECUB EQU   SHAREIO+5                                                04428000
SHARSERA EQU   SHRCUCPU+2                                               04429000
SHAREDX  EQU   SHARECUA                                                 04430000
SHARENUM EQU   SHARE                                                    04431000
SYSTEMP  EQU   SYSUM2+9                                                 04432000
SYSPERM  EQU   SYSUM2+7                                                 04433000
SYSDEV   EQU   SYSUM2+5                                                 04434000
SYSOLDA  EQU   SYSITEM                                                  04435000
SYS3705  EQU   SYSITEM                                                  04436000
SYSOLD   EQU   SYSCPUS                                                  04437000
SYSCPU   EQU   SYSCPUS                                                  04438000
SYSCUA   EQU   SYSRT                                                    04439000
SYSGROUP EQU   SYSUMKEY                                                 04440000
SYSUMEOD EQU   SYSUMONE+96                                              04441000
SYSUMPER EQU   SYSUMONE+92                                              04442000
SYSUMPEA EQU   SYSUMONE+88                                              04443000
SYSUMPEI EQU   SYSUMONE+84                                              04444000
SYSUMCH  EQU   SYSUMONE+20                                              04445000
SYSUMMCN EQU   SYSUMONE+16                                              04446000
SYSUMMCR EQU   SYSUMONE+12                                              04447000
SYSUMNXT EQU   SYSUMONE+8                                               04448000
SYSUMIPL EQU   SYSUMONE+4                                               04449000
SYSUMNUM EQU   SYSUMONE                                                 04450000
SORTCORE EQU   SORTCCHR                                                 04451000
SORTTIME EQU   SORTKEY+1                                                04452000
SORTYEAR EQU   SORTKEY                                                  04453000
EVLETTER EQU   EVKEY+5                                                  04454000
EVSERIAL EQU   EVKEY+2                                                  04455000
EVMODEL  EQU   EVKEY                                                    04456000
EVNUM    EQU   EVTABLE+4                                                04457000
EVDAY    EQU   EVSTOP+1                                                 04458000
EVYEAR   EQU   EVSTOP                                                   04459000
TRETMP   EQU   TREND2+10                                                04460000
TREPRM   EQU   TREND2+8                                                 04461000
TRENDDEV EQU   TREND2+6                                                 04462000
TRENDDAT EQU   TRENDKEY+5                                               04463000
TRENDOD  EQU   TRENDITM                                                 04464000
TREND037 EQU   TRENDITM                                                 04465000
TRENDOLD EQU   TRENCPUS                                                 04466000
TRENDCPU EQU   TRENCPUS                                                 04467000
@NM00011 EQU   TRENDRT+1                                                04468000
TRENDCUA EQU   TRENDRT                                                  04469000
TRENDGRP EQU   TRENDKEY                                                 04470000
TREPRE   EQU   TREGEN+72                                                04471000
TRECCHF  EQU   TREGEN+68                                                04472000
TRECCHE  EQU   TREGEN+64                                                04473000
TRECCHD  EQU   TREGEN+60                                                04474000
TRECCHC  EQU   TREGEN+56                                                04475000
TRECCHB  EQU   TREGEN+52                                                04476000
TRECCHA  EQU   TREGEN+48                                                04477000
TRECCH9  EQU   TREGEN+44                                                04478000
TRECCH8  EQU   TREGEN+40                                                04479000
TRECCH7  EQU   TREGEN+36                                                04480000
TRECCH6  EQU   TREGEN+32                                                04481000
TRECCH5  EQU   TREGEN+28                                                04482000
TRECCH4  EQU   TREGEN+24                                                04483000
TRECCH3  EQU   TREGEN+20                                                04484000
TRECCH2  EQU   TREGEN+16                                                04485000
TRECCH1  EQU   TREGEN+12                                                04486000
TREMCH   EQU   TREGEN+4                                                 04487000
TREIPL   EQU   TREGEN                                                   04488000
TRENUM   EQU   TRENDONE+4                                               04489000
TRENEXT  EQU   TRENDONE                                                 04490000
DUMPSIZE EQU   DUMPINFO+4                                               04491000
DUMPADR  EQU   DUMPINFO                                                 04492000
DUMPNUM  EQU   DUMPTABL                                                 04493000
@NM00010 EQU   PARM+212                                                 04494000
FRAMEPTR EQU   PARM+200                                                 04495000
ADCPUT   EQU   PARM+144                                                 04496000
@NM00009 EQU   CCHHRLNG+5                                               04497000
RECCCHHR EQU   CCHHRLNG                                                 04498000
USERPGM  EQU   PARM+102                                                 04499000
IDTSEC   EQU   IDTIME+3                                                 04500000
IDSEC    EQU   IDTIME+2                                                 04501000
IDMIN    EQU   IDTIME+1                                                 04502000
IDHOUR   EQU   IDTIME                                                   04503000
IDASID   EQU   ERRID+4                                                  04504000
IDCPU    EQU   ERRID+3                                                  04505000
@NM00008 EQU   ERRID+2                                                  04506000
IDVALUE  EQU   ERRID                                                    04507000
NUMDAYS  EQU   PARM+88                                                  04508000
SORTNUM  EQU   PARM+84                                                  04509000
TABSIZE  EQU   PARM+80                                                  04510000
SYSRETRN EQU   @NM00007                                                 04511000
@NM00006 EQU   PARM+72                                                  04512000
WRTHRSH  EQU   PARM+69                                                  04513000
RDTHRSH  EQU   PARM+66                                                  04514000
TERM     EQU   PARM+58                                                  04515000
EVSDAY   EQU   STRTDATE+1                                               04516000
EVSYEAR  EQU   STRTDATE                                                 04517000
PENSEC2  EQU   ENDTIME2+2                                               04518000
PENMIN2  EQU   ENDTIME2+1                                               04519000
PENHOUR2 EQU   ENDTIME2                                                 04520000
PSTSEC2  EQU   STTIME2+2                                                04521000
PSTMIN2  EQU   STTIME2+1                                                04522000
PSTHOUR2 EQU   STTIME2                                                  04523000
PENSEC1  EQU   ENDTIME1+2                                               04524000
PENMIN1  EQU   ENDTIME1+1                                               04525000
PENHOUR1 EQU   ENDTIME1                                                 04526000
PSTSEC1  EQU   STTIME1+2                                                04527000
PSTMIN1  EQU   STTIME1+1                                                04528000
PSTHOUR1 EQU   STTIME1                                                  04529000
@NM00005 EQU   ENDDT+4                                                  04530000
PENDY    EQU   PEND+1                                                   04531000
PENYR    EQU   PEND                                                     04532000
@NM00004 EQU   ENDDATE                                                  04533000
@NM00003 EQU   STDT+4                                                   04534000
PSTDY    EQU   PSTD+1                                                   04535000
PSTYR    EQU   PSTD                                                     04536000
@NM00002 EQU   STDATE                                                   04537000
YEARNOW  EQU   DATENOW+4                                                04538000
@NM00001 EQU   DATENOW+3                                                04539000
DAYNOW   EQU   DATENOW                                                  04540000
CSNAP    EQU   CLOSEIO                                                  04541000
CDRCTWRK EQU   CLOSEIO                                                  04542000
CSYSIN   EQU   CLOSEIO                                                  04543000
CACCDEV  EQU   CLOSEIO                                                  04544000
CACCIN   EQU   CLOSEIO                                                  04545000
CSERLOG  EQU   CLOSEIO                                                  04546000
CEREPPT  EQU   CLOSEIO                                                  04547000
CTOURIST EQU   CLOSEIO                                                  04548000
OSNAP    EQU   OPENIO                                                   04549000
ODRCTWRK EQU   OPENIO                                                   04550000
OSYSIN   EQU   OPENIO                                                   04551000
OACCDEV  EQU   OPENIO                                                   04552000
OACCIN   EQU   OPENIO                                                   04553000
OSERLOG  EQU   OPENIO                                                   04554000
OEREPPT  EQU   OPENIO                                                   04555000
OTOURIST EQU   OPENIO                                                   04556000
PASSFLAG EQU   MISC                                                     04557000
PLOGREC  EQU   MISC                                                     04558000
ERRORID  EQU   MISC                                                     04559000
PSUM     EQU   PRINTES                                                  04560000
PEDIT    EQU   PRINTES                                                  04561000
PHIST    EQU   MISC                                                     04562000
PACC     EQU   MISC                                                     04563000
PZERO    EQU   MISC                                                     04564000
DEBUG63  EQU   DEBUGA+3                                                 04565000
DEBUG62  EQU   DEBUGA+3                                                 04566000
DEBUG61  EQU   DEBUGA+3                                                 04567000
DEBUG60  EQU   DEBUGA+3                                                 04568000
DEBUG59  EQU   DEBUGA+3                                                 04569000
DEBUG58  EQU   DEBUGA+3                                                 04570000
DEBUG57  EQU   DEBUGA+3                                                 04571000
DEBUG56  EQU   DEBUGA+3                                                 04572000
DEBUG55  EQU   DEBUGA+2                                                 04573000
DEBUG54  EQU   DEBUGA+2                                                 04574000
DEBUG53  EQU   DEBUGA+2                                                 04575000
DEBUG52  EQU   DEBUGA+2                                                 04576000
DEBUG51  EQU   DEBUGA+2                                                 04577000
DEBUG50  EQU   DEBUGA+2                                                 04578000
DEBUG49  EQU   DEBUGA+2                                                 04579000
DEBUG48  EQU   DEBUGA+2                                                 04580000
DEBUG47  EQU   DEBUGA+1                                                 04581000
DEBUG46  EQU   DEBUGA+1                                                 04582000
DEBUG43  EQU   DEBUGA+1                                                 04583000
DEBUG42  EQU   DEBUGA+1                                                 04584000
DEBUG41  EQU   DEBUGA+1                                                 04585000
DEBUG40  EQU   DEBUGA+1                                                 04586000
DEBUG39  EQU   DEBUGA                                                   04587000
DEBUG38  EQU   DEBUGA                                                   04588000
DEBUG37  EQU   DEBUGA                                                   04589000
DEBUG36  EQU   DEBUGA                                                   04590000
DEBUG35  EQU   DEBUGA                                                   04591000
DEBUG34  EQU   DEBUGA                                                   04592000
DEBUG33  EQU   DEBUGA                                                   04593000
DEBUG32  EQU   DEBUGA                                                   04594000
DEBUG31  EQU   DEBUG+3                                                  04595000
DEBUG30  EQU   DEBUG+3                                                  04596000
DEBUG29  EQU   DEBUG+3                                                  04597000
DEBUG28  EQU   DEBUG+3                                                  04598000
DEBUG27  EQU   DEBUG+3                                                  04599000
DEBUG26  EQU   DEBUG+3                                                  04600000
DEBUG25  EQU   DEBUG+3                                                  04601000
DEBUG24  EQU   DEBUG+3                                                  04602000
DEBUG23  EQU   DEBUG+2                                                  04603000
DEBUG22  EQU   DEBUG+2                                                  04604000
DEBUG21  EQU   DEBUG+2                                                  04605000
DEBUG20  EQU   DEBUG+2                                                  04606000
DEBUG19  EQU   DEBUG+2                                                  04607000
DEBUG18  EQU   DEBUG+2                                                  04608000
DEBUG17  EQU   DEBUG+2                                                  04609000
DEBUG16  EQU   DEBUG+2                                                  04610000
DEBUG15  EQU   DEBUG+1                                                  04611000
DEBUG14  EQU   DEBUG+1                                                  04612000
DEBUG13  EQU   DEBUG+1                                                  04613000
DEBUG12  EQU   DEBUG+1                                                  04614000
DEBUG11  EQU   DEBUG+1                                                  04615000
DEBUG10  EQU   DEBUG+1                                                  04616000
DEBUG9   EQU   DEBUG+1                                                  04617000
DEBUG8   EQU   DEBUG+1                                                  04618000
DEBUG7   EQU   DEBUG                                                    04619000
DEBUG6   EQU   DEBUG                                                    04620000
DEBUG5   EQU   DEBUG                                                    04621000
DEBUG3   EQU   DEBUG                                                    04622000
DEBUG2   EQU   DEBUG                                                    04623000
DEBUG1   EQU   DEBUG                                                    04624000
DEBUG0   EQU   DEBUG                                                    04625000
SORTBRK  EQU   SWITCHES+1                                               04626000
COREFAIL EQU   SWITCHES+1                                               04627000
ANALYSIS EQU   SWITCHES+1                                               04628000
SHIFT3RD EQU   SWITCHES+1                                               04629000
DEVEXCL  EQU   SWITCHES+1                                               04630000
ZEROALL  EQU   SWITCHES+1                                               04631000
NOTALL   EQU   SWITCHES+1                                               04632000
NOSDR    EQU   SWITCHES                                                 04633000
TIMESEQ  EQU   SWITCHES                                                 04634000
SYSUM    EQU   SWITCHES                                                 04635000
PARMTHR  EQU   SWITCHES                                                 04636000
TREND    EQU   SWITCHES                                                 04637000
SHORTOBR EQU   SWITCHES                                                 04638000
PARMMES  EQU   SWITCHES                                                 04639000
RDESUM   EQU   SWITCHES                                                 04640000
PCCHFRAM EQU   RECTYPE+1                                                04641000
PMCHFRAM EQU   RECTYPE+1                                                04642000
PTTYP    EQU   RECTYPE+1                                                04643000
PEOD     EQU   RECTYPE                                                  04644000
PMIH     EQU   RECTYPE                                                  04645000
PDDR     EQU   RECTYPE                                                  04646000
PIPL     EQU   RECTYPE                                                  04647000
PSOFT    EQU   RECTYPE                                                  04648000
POBR     EQU   RECTYPE                                                  04649000
PCHAN    EQU   RECTYPE                                                  04650000
PMCH     EQU   RECTYPE                                                  04651000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      04652000
@RF00263 EQU   @EL00004                                                 04653000
@RF00313 EQU   @EL00007                                                 04654000
@RF00410 EQU   @EL00013                                                 04655000
@RC00454 EQU   @EL00017                                                 04656000
@RC00523 EQU   @EL00020                                                 04657000
@RC00521 EQU   @EL00020                                                 04658000
@RC00519 EQU   @EL00020                                                 04659000
@RC00517 EQU   @EL00020                                                 04660000
@RC00515 EQU   @EL00020                                                 04661000
@RC00513 EQU   @EL00020                                                 04662000
@RC00511 EQU   @EL00020                                                 04663000
@RC00509 EQU   @EL00020                                                 04664000
@RC00507 EQU   @EL00020                                                 04665000
@RC00505 EQU   @EL00020                                                 04666000
@RC00503 EQU   @EL00020                                                 04667000
@RC00501 EQU   @EL00020                                                 04668000
@RC00499 EQU   @EL00020                                                 04669000
@RC00532 EQU   @EL00021                                                 04670000
@RC00543 EQU   @EL00022                                                 04671000
@RC00643 EQU   @EL00031                                                 04672000
@RC00648 EQU   @EL00031                                                 04673000
@RC00646 EQU   @EL00031                                                 04674000
@RC00662 EQU   @EL00031                                                 04675000
@RC00689 EQU   @EL00032                                                 04676000
@RF00798 EQU   @EL00036                                                 04677000
@RF00818 EQU   @EL00037                                                 04678000
@RC00960 EQU   @EL00047                                                 04679000
@RC00534 EQU   @RC00532                                                 04680000
@ENDDATA EQU   *                                                        04681000
         END   IFCFRAME,(C'PLS2040',0701,78139)                         04682000
