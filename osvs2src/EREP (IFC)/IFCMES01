         TITLE 'IFCMES01 - CONTROL FOR MEDIA ERROR STATISTICS PROCESSIN*00001000
               G'                                                       00002000
IFCMES01 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IFCMES01  79.011'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  ST    @14,12(,@13)                                        0001 00010000
         STM   @00,@12,20(@13)                                     0001 00011000
         BALR  @12,0                                               0001 00012000
@PSTART  LA    @11,4095(,@12)                                      0001 00013000
         USING @PSTART,@12                                         0001 00014000
         USING @PSTART+4095,@11                                    0001 00015000
         ST    @13,@SA00001+4                                      0001 00016000
         LA    @14,@SA00001                                        0001 00017000
         ST    @14,8(,@13)                                         0001 00018000
         LR    @13,@14                                             0001 00019000
         B     @PB00002                                            0074 00020000
SORT     STM   @14,@12,@SA00002                                    0074 00021000
*SRTCONT =((RECCOUNT-1)* 11) + CURRPTR;                    /*@Z427VLS*/ 00022000
         L     @10,RECCOUNT                                        0077 00023000
         BCTR  @10,0                                               0077 00024000
         MH    @10,@CH00034                                        0077 00025000
         ALR   @10,CURRPTR                                         0077 00026000
         ST    @10,SRTCONT                                         0077 00027000
*/* THIS SORT IS DONE IN BAL IN ORDER TO GET MIN PROCESSING TIME    */  00028000
*/* SOME 35 INSTRUCTIONS WERE CUT FROM THE BEST THAT PLS WOULD DO   */  00029000
*/* THIS CUT THE RUN TIME DOWN BY APP. 50 PERCENT            @Z427VLS*/ 00030000
*         GENERATE REFS(CONTRTAB);                         /*@ZA35015*/ 00031000
          LA     R15,11              LOAD THE INCREMENT VALUE           00032000
          LR     R7,CURRPTR          LOAD THE START OF THE TABLE        00033000
          L      R4,SRTCONT          LOAD THE MAX LIMIT                 00034000
          SR     R4,R15              POINT TO LAST ENTRY                00035000
          LR     R1,R7               SET UP THE STOP LIMIT ON BACK UP   00036000
          B      DOIT                GO AROUND THIS CODE FIRST TIME     00037000
LOOPBCK1  ALR    R7,R15              MOVE THE POINTER TO NEXT ENTRY     00038000
          CR     R7,R4               ARE WE POINTING TO LAST ENTRY      00039000
          BNL    DONE                FINISHED WITH THE SORT SO EXIT     00040000
DOIT      CLC    CONTRTAB(11,R7),CONTRTAB+11(R7)                        00041000
         BNH   LOOPBCK1            DONT NEED TO SORT ITEM               00042000
          XC     CONTRTAB(11,R7),CONTRTAB+11(R7)                        00043000
          XC     CONTRTAB+11(11,R7),CONTRTAB(R7)                        00044000
          XC     CONTRTAB(11,R7),CONTRTAB+11(R7)                        00045000
          LR     R6,R7               SET NEW POINTER(BACKWARD)          00046000
LOOPBCK2  SR     R6,R15              POINT TO LAST ENTRY                00047000
          CR     R6,R1               DONT BACK OUT OF THE TABLE         00048000
          BL     LOOPBCK1            START WITH NEXT ENTRY              00049000
          CLC    CONTRTAB(11,R6),CONTRTAB+11(R6)                        00050000
          BNH    LOOPBCK1            NO FUTHER SHUFFEL THIS SAMPLE      00051000
          XC     CONTRTAB+11(11,R6),CONTRTAB(R6)                        00052000
          XC     CONTRTAB(11,R6),CONTRTAB+11(R6)                        00053000
          XC     CONTRTAB+11(11,R6),CONTRTAB(R6)                        00054000
          B      LOOPBCK2            DOES IT NEED TO BE MOVED AGAIN     00055000
DONE      EQU    *                                                      00056000
*      RESPECIFY (R6) UNRESTRICTED;                        /*@Z427VLS*/ 00057000
*END;                                                      /*@Z427VLS*/ 00058000
@EL00002 DS    0H                                                  0080 00059000
@EF00002 DS    0H                                                  0080 00060000
@ER00002 LM    @14,@12,@SA00002                                    0080 00061000
         BR    @14                                                 0080 00062000
*/*                                                          @Z427VLS*/ 00063000
*/* OUTPUT ALL OF THE SUMMARY COUNTERS THAT HAVE BEEN BUILT UP TO THIS* 00064000
*/* POINT.  CNTAREA CONTAINS THE ADDRESS OF THE FIRST COUNTER AREA.   * 00065000
*/*                                                          @Z427VLS*/ 00066000
*OUTSUM: PROC;                                             /*@Z427VLS*/ 00067000
OUTSUM   STM   @14,@12,@SA00003                                    0081 00068000
*        CURRCNTS = CNTAREA;              /* GET ADDRESS OF FIRST AREA* 00069000
         L     @10,CNTAREA                                         0082 00070000
         ST    @10,CURRCNTS                                        0082 00071000
*        DO WHILE (CURRCNTS ^= ZERO);                      /*@Z427VLS*/ 00072000
         B     @DE00083                                            0083 00073000
@DL00083 DS    0H                                                  0084 00074000
*          RESPECIFY (R7,R9) RESTRICTED;                   /*@Z427VLS*/ 00075000
*          R9 = SUMEDIT;                  /* SUMMARY OUTPUT EDITS     * 00076000
         L     @10,SUMTAB                                          0085 00077000
         L     R9,SUMEDIT(,@10)                                    0085 00078000
*          R7 = CURRCNTS;                 /* ADDRESS OF COUNTERS      * 00079000
         L     R7,CURRCNTS                                         0086 00080000
*          CALL IFCEEDIT;                 /* GO TO EDIT TABLE         * 00081000
         L     @15,@CV00543                                        0087 00082000
         BALR  @14,@15                                             0087 00083000
*          R9 = 22 + (2 * CNTSIZE);       /* SIZE OF COUNTER AREA     * 00084000
         L     @10,SUMTAB                                          0088 00085000
         LH    R9,CNTSIZE(,@10)                                    0088 00086000
         ALR   R9,R9                                               0088 00087000
         AL    R9,@CF00614                                         0088 00088000
*          CURRCNTS = NEXTTAB;            /* ADDRESS OF NEXT AREA.    * 00089000
         L     @10,CURRCNTS                                        0089 00090000
         L     @10,NEXTTAB(,@10)                                   0089 00091000
         ST    @10,CURRCNTS                                        0089 00092000
*          GEN(FREEMAIN R,LV=(R9),A=(R7));                 /*@Z427VLS*/ 00093000
         FREEMAIN R,LV=(R9),A=(R7)                                      00094000
*          RESPECIFY (R7,R9) UNRESTRICTED;                 /*@Z427VLS*/ 00095000
*        END;                                              /*@Z427VLS*/ 00096000
@DE00083 SLR   @10,@10                                             0092 00097000
         C     @10,CURRCNTS                                        0092 00098000
         BNE   @DL00083                                            0092 00099000
*        CNTAREA = ZERO;                  /* INITIALIZE FIRST AREA ADD* 00100000
         ST    @10,CNTAREA                                         0093 00101000
*        LASTDATE = LASTDATE && LASTDATE;  /* CLEAR LAST DATE         * 00102000
         XC    LASTDATE(4),LASTDATE                                0094 00103000
*END;                                                      /*@Z427VLS*/ 00104000
@EL00003 DS    0H                                                  0095 00105000
@EF00003 DS    0H                                                  0095 00106000
@ER00003 LM    @14,@12,@SA00003                                    0095 00107000
         BR    @14                                                 0095 00108000
*/*                                                          @Z427VLS*/ 00109000
*/* THE NEXT CODE WILL INITIALIZE THE REGISTERS FOR EXITING TO        * 00110000
*/* AN EDIT MODULE.  THE EXPECTED PARAMETERS TO IFCEEDIT ARE:         * 00111000
*/*      REG2 - POINTING TO THE RECORD TO BE EDITTED.        @Z427VLS*/ 00112000
*/*      REG9 - POINTING TO THE BASE OF THE EDIT TABLE.      @Z427VLS*/ 00113000
*/*      REG15 - POINTING TO THE BASE OF IFCEEDIT.           @Z427VLS*/ 00114000
*/*                                                          @Z427VLS*/ 00115000
*OUTEDIT: PROC (RECFLAG);                                  /*@Z427VLS*/ 00116000
OUTEDIT  STM   @14,@12,@SA00004                                    0096 00117000
         MVC   @PC00004(4),0(@01)                                  0096 00118000
*      DCL RECFLAG CHAR(1);                                /*@Z427VLS*/ 00119000
*      DCL 1 THRSHRC CHAR(8) BASED(R7),/* DUMMY AREA FOR ADDRESSING   * 00120000
*           2 *       CHAR(4),                                     0098 00121000
*           2 THRSHFLG CHAR(1);        /* RECORD FLAG FOR THRSH PROC  * 00122000
*      RESPECIFY (R9) RESTRICTED;                          /*@Z427VLS*/ 00123000
*      R9 = EDITTAB;                   /* GET BASE OF EDIT TABLE      * 00124000
         L     R9,EDITTAB                                          0100 00125000
*      IF PARMTHR = ON THEN                                        0101 00126000
         TM    PARMTHR(R2),B'00001000'                             0101 00127000
         BNO   @RF00101                                            0101 00128000
*        DO;                                               /*@Z427VLS*/ 00129000
*          ERTHRE = RDTHRSH;           /* READ THRESHOLD     @Z427VLS*/ 00130000
         MVC   ERTHRE(3,R9),RDTHRSH(R2)                            0103 00131000
*          EWTHRE = WRTHRSH;           /* WRITE THRESHOLD    @Z427VLS*/ 00132000
         MVC   EWTHRE(3,R9),WRTHRSH(R2)                            0104 00133000
*        END;                                              /*@Z427VLS*/ 00134000
*      THRSHFLG = RECFLAG;             /* FLAG FOR THRESHOLD PROCESS  * 00135000
@RF00101 L     @10,@PC00004                                        0106 00136000
         MVC   THRSHFLG(1,R7),RECFLAG(@10)                         0106 00137000
*      CALL IFCEEDIT;                  /* GO TO IFCEEDIT     @Z427VLS*/ 00138000
         L     @15,@CV00543                                        0107 00139000
         BALR  @14,@15                                             0107 00140000
*      THRSHFLG = HEXZERO;             /* RESTORE PLACE IN RECORD     * 00141000
         MVI   THRSHFLG(R7),X'00'                                  0108 00142000
*      RETURN;                                             /*@Z427VLS*/ 00143000
@EL00004 DS    0H                                                  0109 00144000
@EF00004 DS    0H                                                  0109 00145000
@ER00004 LM    @14,@12,@SA00004                                    0109 00146000
         BR    @14                                                 0109 00147000
*      RESPECIFY (R9) UNRESTRICTED;                        /*@Z427VLS*/ 00148000
*END;                                                      /*@Z427VLS*/ 00149000
*/*                                                          @Z427VLS*/ 00150000
*/* IN EVERY SUMMARY TABLE AT OFFSET 12 THERE IS A HALFWORK WITH THE  * 00151000
*/* NUMBER OF TWO BYTE COUNTERS NEEDED FOR THIS SERVICE.  AT THE      * 00152000
*/* BEGINNING OF EVERY COUNT AREA THERE ARE 22 BYTES OF CONTROL       * 00153000
*/* INFORMATION ADDED TO THE COUNT AREA.  THIS CODE ISSUES A GETMAIN  * 00154000
*/* FOR THIS AREA AND SETS IT TO ZERO.                       @Z427VLS*/ 00155000
*/*                                                          @Z427VLS*/ 00156000
*GETSPACE: PROC;                                           /*@Z427VLS*/ 00157000
GETSPACE STM   @14,@12,@SA00005                                    0112 00158000
*          RESPECIFY (R0,R1,R7) RESTRICTED;                /*@Z427VLS*/ 00159000
*          R0 = 22 + (CNTSIZE * 2);       /* DETERMINE SIZE OF AREA   * 00160000
         L     @10,SUMTAB                                          0114 00161000
         LH    R0,CNTSIZE(,@10)                                    0114 00162000
         ALR   R0,R0                                               0114 00163000
         AL    R0,@CF00614                                         0114 00164000
*          GEN(GETMAIN R,LV=(0));                          /*@Z427VLS*/ 00165000
         GETMAIN R,LV=(0)                                               00166000
*          IF CNTAREA = ZERO THEN                                  0116 00167000
         L     @10,CNTAREA                                         0116 00168000
         LTR   @10,@10                                             0116 00169000
         BNZ   @RF00116                                            0116 00170000
*            CNTAREA = R1;                /* 1ST COUNTER AREA         * 00171000
         ST    R1,CNTAREA                                          0117 00172000
*          ELSE                                                    0118 00173000
*            DO CURRCNTS = CNTAREA;                        /*@Z427VLS*/ 00174000
         B     @RC00116                                            0118 00175000
@RF00116 L     @10,CNTAREA                                         0118 00176000
         ST    @10,CURRCNTS                                        0118 00177000
*              DO WHILE (CURRCNTS -> NEXTTAB ^= ZERO); /* FIND END    * 00178000
         B     @DE00119                                            0119 00179000
@DL00119 DS    0H                                                  0120 00180000
*                CURRCNTS = NEXTTAB;                       /*@Z427VLS*/ 00181000
         L     @10,CURRCNTS                                        0120 00182000
         L     @10,NEXTTAB(,@10)                                   0120 00183000
         ST    @10,CURRCNTS                                        0120 00184000
*              END;                                        /*@Z427VLS*/ 00185000
@DE00119 L     @10,CURRCNTS                                        0121 00186000
         L     @06,NEXTTAB(,@10)                                   0121 00187000
         LTR   @06,@06                                             0121 00188000
         BNZ   @DL00119                                            0121 00189000
*              NEXTTAB = R1;              /* ADD TO END OF CHAIN      * 00190000
         ST    R1,NEXTTAB(,@10)                                    0122 00191000
*            END;                                          /*@Z427VLS*/ 00192000
*          CURRCNTS = R1;                 /* SET POINTER TO AREA      * 00193000
@RC00116 ST    R1,CURRCNTS                                         0124 00194000
*          RESPECIFY (R0,R1) UNRESTRICTED;                 /*@Z427VLS*/ 00195000
*          DO R7 = CNTSIZE TO 1 BY -1;    /* CLEAR SUM AREA  @Z427VLS*/ 00196000
         L     @10,SUMTAB                                          0126 00197000
         LH    R7,CNTSIZE(,@10)                                    0126 00198000
         B     @DE00126                                            0126 00199000
@DL00126 DS    0H                                                  0127 00200000
*            COUNTERS(R7) = ZERO;                          /*@Z427VLS*/ 00201000
         LR    @10,R7                                              0127 00202000
         ALR   @10,@10                                             0127 00203000
         SLR   @06,@06                                             0127 00204000
         L     @05,CURRCNTS                                        0127 00205000
         STH   @06,COUNTERS-2(@10,@05)                             0127 00206000
*          END;                                            /*@Z427VLS*/ 00207000
         BCTR  R7,0                                                0128 00208000
@DE00126 LTR   R7,R7                                               0128 00209000
         BP    @DL00126                                            0128 00210000
*          /*                                                @Z427VLS*/ 00211000
*          /* THIS CODE INITIALIZED THE HEADER AREA OF THE SUM AREA.  * 00212000
*          /* IT MARKS THIS AS THE LAST SUM AREA AND PUTS IN OTHER    * 00213000
*          /* IDENTIFYING INFORMATION.                       @Z427VLS*/ 00214000
*          /*                                                @Z427VLS*/ 00215000
*          NEXTTAB = ZERO;             /* INITIALIZE HEADER OF AREA   * 00216000
         L     @10,CURRCNTS                                        0129 00217000
         SLR   @06,@06                                             0129 00218000
         ST    @06,NEXTTAB(,@10)                                   0129 00219000
*          SUMIDENT = CUACPU;          /* CPU/CUA OR VOLID   @Z427VLS*/ 00220000
         MVC   SUMIDENT(8,@10),CUACPU                              0130 00221000
*          MODNAME = STABNAME;         /* MODULE NAME TO EDIT AREA    * 00222000
         MVC   MODNAME(8,@10),STABNAME                             0131 00223000
*          CURRDEV = SAVEDEV;          /* DEVICE CODE        @Z427VLS*/ 00224000
         MVC   CURRDEV(2,@10),SAVEDEV                              0132 00225000
*          RETURN;                                         /*@Z427VLS*/ 00226000
@EL00005 DS    0H                                                  0133 00227000
@EF00005 DS    0H                                                  0133 00228000
@ER00005 LM    @14,@12,@SA00005                                    0133 00229000
         BR    @14                                                 0133 00230000
*          RESPECIFY (R7) UNRESTRICTED;                    /*@Z427VLS*/ 00231000
*END;                                                      /*@Z427VLS*/ 00232000
*/*                                                          @Z427VLS*/ 00233000
*/* THE NEXT CODE SUMMARIZES THE INDIVIDUAL RECORDS INTO THE COUNTER  * 00234000
*/* AREA.  A'FF'X ENTRY SIGNIFIES THE END OF THE TABLE AND WHEN IT IS * 00235000
*/* FOUND A BRANCH IS TAKEN TO CHECK WHAT PASS WE ARE IN.    @Z427VLS*/ 00236000
*/*                                                          @Z427VLS*/ 00237000
*SUMIT: PROC;                                              /*@Z427VLS*/ 00238000
SUMIT    STM   @14,@12,@SA00006                                    0136 00239000
*       RESPECIFY (R3,R9) RESTRICTED;                      /*@Z427VLS*/ 00240000
*       /*                                                   @Z427VLS*/ 00241000
*       /* SUMSPEC1 IS LOADED WITH THE ADDRESS OF THE ENTRY FOR THE   * 00242000
*       /* SPECIAL ROUTINE WITHIN THE SUMMARY MODULE.  SPECIAL WILL   * 00243000
*       /* CAUSE THE NECESSARY LINKAGE TO BE GENERATED BY THE COMPILER* 00244000
*       /*                                                   @Z427VLS*/ 00245000
*       DCL SUMSPEC1 PTR(31);                              /*@Z427VLS*/ 00246000
*       DCL SPECIAL ENTRY BASED(SUMSPEC1);                 /*@Z427VLS*/ 00247000
*       NEXTENT = SUMPTR;              /* GET POINTER TO SUM ENTRIES  * 00248000
         L     @10,SUMTAB                                          0140 00249000
         L     @08,SUMPTR(,@10)                                    0140 00250000
         ST    @08,NEXTENT(,@10)                                   0140 00251000
*       R9 = SUMTAB;                  /* ADDRESS OF SUMMARY TABLE     * 00252000
         LR    R9,@10                                              0141 00253000
*       DO UNTIL (SUMFLAG = FOXFOX);                       /*@Z427VLS*/ 00254000
@DL00142 DS    0H                                                  0143 00255000
*         /*                                                 @Z427VLS*/ 00256000
*         /* GET THE ADDRESS OF THE COUNTER TO BE UPDATED.   @Z427VLS*/ 00257000
*         /*                                                 @Z427VLS*/ 00258000
*         R3 = CURRCNTS + 22 + (2 * CNTOFSET);             /*@Z427VLS*/ 00259000
         LA    R3,22                                               0143 00260000
         AL    R3,CURRCNTS                                         0143 00261000
         L     @10,SUMTAB                                          0143 00262000
         L     @10,NEXTENT(,@10)                                   0143 00263000
         LH    @08,CNTOFSET(,@10)                                  0143 00264000
         ALR   @08,@08                                             0143 00265000
         ALR   R3,@08                                              0143 00266000
*         /*                                                 @Z427VLS*/ 00267000
*         /* A '00'X ENTRY MEANS THAT A GIVEN BIT IN THE RECORD MUST  * 00268000
*         /* BE TESTED AND THE COUNTER UPDATED IF THE BIT IS ON.  AN  * 00269000
*         /* '80'X ENTRY MEANS THAT CONTROL IS TO BE GIVEN TO SPECIAL * 00270000
*         /* ROUTINE WITH REG3 POINTING TO THE COUNTER TO BE UPDATED*/  00271000
*         /* AND REG9 HAVING THE BASE OF THE SUM TABLE.      @Z427VLS*/ 00272000
*         /*                                                 @Z427VLS*/ 00273000
*         IF SUMFLAG = HEXZERO THEN    /* IS THIS A NORMAL SUMMARY    * 00274000
         CLI   SUMFLAG(@10),X'00'                                  0144 00275000
         BNE   @RF00144                                            0144 00276000
*           DO;                                            /*@Z427VLS*/ 00277000
*             IF (SUMMARY & SUMMASK) = SUMMASK THEN                0146 00278000
         LR    @08,BUFFPTR                                         0146 00279000
         AH    @08,OFFSET(,@10)                                    0146 00280000
         MVC   @TS00001(1),SUMMARY(@08)                            0146 00281000
         NC    @TS00001(1),SUMMASK(@10)                            0146 00282000
         CLC   @TS00001(1),SUMMASK(@10)                            0146 00283000
         BNE   @RF00146                                            0146 00284000
*                COUNTER = COUNTER + 1;  /* IF ON-INCREMENT CTR       * 00285000
         LA    @10,1                                               0147 00286000
         AH    @10,COUNTER(,R3)                                    0147 00287000
         STH   @10,COUNTER(,R3)                                    0147 00288000
*           END;                                           /*@Z427VLS*/ 00289000
*         ELSE                                                     0149 00290000
*           DO;                                            /*@Z427VLS*/ 00291000
         B     @RC00144                                            0149 00292000
@RF00144 DS    0H                                                  0150 00293000
*             R2 = BUFFPTR;            /* GET POINTER TO RECORD       * 00294000
         LR    R2,BUFFPTR                                          0150 00295000
*             SUMSPEC1 = SUMSPEC + SUMTAB;                 /*@Z427VLS*/ 00296000
         L     @10,SUMTAB                                          0151 00297000
         L     @08,NEXTENT(,@10)                                   0151 00298000
         AH    @10,SUMSPEC(,@08)                                   0151 00299000
         ST    @10,SUMSPEC1                                        0151 00300000
*             CALL SPECIAL;            /* GO TO ROUTINE IN SUM TABLE  * 00301000
         LR    @15,@10                                             0152 00302000
         BALR  @14,@15                                             0152 00303000
*           END;                                           /*@Z427VLS*/ 00304000
*         NEXTENT = NEXTENT + 6;       /* UPDATE SUMMARY ENTRY        * 00305000
@RC00144 L     @10,SUMTAB                                          0154 00306000
         LA    @08,6                                               0154 00307000
         AL    @08,NEXTENT(,@10)                                   0154 00308000
         ST    @08,NEXTENT(,@10)                                   0154 00309000
*       END;                                               /*@Z427VLS*/ 00310000
@DE00142 L     @10,SUMTAB                                          0155 00311000
         L     @10,NEXTENT(,@10)                                   0155 00312000
         CLI   SUMFLAG(@10),X'FF'                                  0155 00313000
         BNE   @DL00142                                            0155 00314000
*       LASTDATE = DATE;               /* SAVE THE DATE OF THIS RECORD* 00315000
         MVC   LASTDATE(4),DATE(BUFFPTR)                           0156 00316000
*       LASTCUA = SAVECUA;             /* SAVE THE CUA OF THIS RECORD * 00317000
         MVC   LASTCUA(3),SAVECUA                                  0157 00318000
*       LASTCPU = SAVECPU;             /* SAVE THE CPU OF THIS RECORD * 00319000
         MVC   LASTCPU(5),SAVECPU                                  0158 00320000
*       RETURN;                                            /*@Z427VLS*/ 00321000
@EL00006 DS    0H                                                  0159 00322000
@EF00006 DS    0H                                                  0159 00323000
@ER00006 LM    @14,@12,@SA00006                                    0159 00324000
         BR    @14                                                 0159 00325000
*       RESPECIFY (R3,R9) UNRESTRICTED;                    /*@Z427VLS*/ 00326000
*END;                                                      /*@Z427VLS*/ 00327000
*/*                                                          @Z427VLS*/ 00328000
*/* LOOK UP THE CUA IN THE SHARE TABLE FOR THE CONVERTED SHARE VALUE. * 00329000
*/* IF IT IS FOUND, RETURN THE CONVERTED VALUE IN NEW CUA. IF NOT,    * 00330000
*/* RETURN THE ORIGINAL VALUE IN NEWCUA.                     @Z427VLS*/ 00331000
*/*                                                          @Z427VLS*/ 00332000
*CUASHARE: PROC;                                           /*@Z427VLS*/ 00333000
CUASHARE STM   @14,@12,12(@13)                                     0162 00334000
*    VALIDSHR = OFF;                          /* TURN OFF FOR SEARCH  * 00335000
         NI    VALIDSHR,B'11101111'                                0163 00336000
*    SHR74CUA = OCUA2;                        /* CUA FOR COMPARISON   * 00337000
         MVC   SHR74CUA(2),OCUA2(BUFFPTR)                          0164 00338000
*    SHR74CPU = CPUIDENT;                     /* CPU FOR COMPARISON   * 00339000
         MVC   SHR74CPU(3),CPUIDENT(BUFFPTR)                       0165 00340000
*    DO I = 1 TO SHARENUM BY 1 WHILE(VALIDSHR = OFF);      /*@Z427VLS*/ 00341000
         LA    @10,1                                               0166 00342000
         STH   @10,I                                               0166 00343000
         B     @DE00166                                            0166 00344000
@DL00166 TM    VALIDSHR,B'00010000'                                0166 00345000
         BNZ   @DC00166                                            0166 00346000
*       IF SHAREFLG(I)=LETTERS & SHR74CPU=SHARSERA(I) &            0167 00347000
*         SHR74CUA>=SHRCUAAL(I) & SHR74CUA<=SHRCUAAH(I) THEN       0167 00348000
         SLA   @10,4                                               0167 00349000
         L     @06,SHAREPTR(,R2)                                   0167 00350000
         ST    @10,@TF00001                                        0167 00351000
         ALR   @10,@06                                             0167 00352000
         AL    @10,@CF00653                                        0167 00353000
         CLC   SHAREFLG-2(1,@10),LETTERS                           0167 00354000
         BNE   @RF00167                                            0167 00355000
         LR    @10,@06                                             0167 00356000
         AL    @10,@TF00001                                        0167 00357000
         AL    @10,@CF00654                                        0167 00358000
         CLC   SHR74CPU(3),SHARSERA-10(@10)                        0167 00359000
         BNE   @RF00167                                            0167 00360000
         LR    @10,@06                                             0167 00361000
         AL    @10,@TF00001                                        0167 00362000
         AL    @10,@CF00655                                        0167 00363000
         CLC   SHR74CUA(2),SHRCUAAL-13(@10)                        0167 00364000
         BL    @RF00167                                            0167 00365000
         LR    @10,@06                                             0167 00366000
         AL    @10,@TF00001                                        0167 00367000
         BCTR  @10,0                                               0167 00368000
         CLC   SHR74CUA(2),SHRCUAAH-15(@10)                        0167 00369000
         BH    @RF00167                                            0167 00370000
*          DO;                                /* CUA ONLY.   @Z427VLS*/ 00371000
*            RECCUA=SHRCUABL(I) + SHR74CUA- SHRCUAAL(I);   /*@D3506GB*/ 00372000
         LR    @10,@06                                             0169 00373000
         AL    @10,@TF00001                                        0169 00374000
         AL    @10,@CF00656                                        0169 00375000
         SLR   @05,@05                                             0169 00376000
         ICM   @05,3,SHRCUABL-6(@10)                               0169 00377000
         SLR   @10,@10                                             0169 00378000
         ICM   @10,3,SHR74CUA                                      0169 00379000
         ALR   @05,@10                                             0169 00380000
         LR    @10,@06                                             0169 00381000
         AL    @10,@TF00001                                        0169 00382000
         AL    @10,@CF00655                                        0169 00383000
         SLR   @03,@03                                             0169 00384000
         ICM   @03,3,SHRCUAAL-13(@10)                              0169 00385000
         SLR   @05,@03                                             0169 00386000
         STCM  @05,3,RECCUA                                        0169 00387000
*            RECCPU = SHARSERB(I);                         /*@0001VLS*/ 00388000
         AL    @06,@TF00001                                        0170 00389000
         AL    @06,@CF00657                                        0170 00390000
         MVC   RECCPU(3),SHARSERB-3(@06)                           0170 00391000
*            VALIDSHR = ON;                                /*@Z427VLS*/ 00392000
         OI    VALIDSHR,B'00010000'                                0171 00393000
*          END;                                            /*@Z427VLS*/ 00394000
*    END;                                                  /*@Z427VLS*/ 00395000
@RF00167 LA    @10,1                                               0173 00396000
         AH    @10,I                                               0173 00397000
         STH   @10,I                                               0173 00398000
@DE00166 L     @06,SHAREPTR(,R2)                                   0173 00399000
         CH    @10,SHARENUM(,@06)                                  0173 00400000
         BNH   @DL00166                                            0173 00401000
@DC00166 DS    0H                                                  0174 00402000
*    RETURN;                                               /*@Z427VLS*/ 00403000
@EL00007 DS    0H                                                  0174 00404000
@EF00007 DS    0H                                                  0174 00405000
@ER00007 LM    @14,@12,12(@13)                                     0174 00406000
         BR    @14                                                 0174 00407000
* END;                                                     /*@Z427VLS*/ 00408000
@PB00007 DS    0H                                                  0176 00409000
*/*                                                          @Z427VLS*/ 00410000
*/* INITIALLY THE ADDRESS OF THE PARAMETER LIST IS SAVED.  NEXT AN    * 00411000
*/* AREA OF CORE IS GOTTEN FOR THE CONTROL TABLE.            @Z427VLS*/ 00412000
*/*                                                          @Z427VLS*/ 00413000
*        SAVEPARM = R2;                /* SAVE ADDR TO PARM TABLE     * 00414000
         ST    R2,SAVEPARM                                         0176 00415000
*        IF DEBUG4 = ON THEN                                       0177 00416000
         TM    DEBUG4(R2),B'00001000'                              0177 00417000
         BNO   @RF00177                                            0177 00418000
*          DO;                                             /*@Z427VLS*/ 00419000
*            R15 = R12 - 27;                               /*@Z427VLS*/ 00420000
         LR    R15,R12                                             0179 00421000
         SL    R15,@CF00639                                        0179 00422000
*            GEN(MVC  MSGADDR(16),0(R15));                 /*@Z427VLS*/ 00423000
         MVC  MSGADDR(16),0(R15)                                        00424000
*            PRINTADR = ADDR(MESSAGE);                     /*@Z427VLS*/ 00425000
         LA    @10,MESSAGE                                         0181 00426000
         ST    @10,PRINTADR(,R2)                                   0181 00427000
*            CURRPTR = ADDR(IFCEEDIT);                     /*@Z427VLS*/ 00428000
         L     CURRPTR,@CV00543                                    0182 00429000
*            GEN(MVC MSGADDR+20(16),5(CURRPTR));           /*@Z427VLS*/ 00430000
         MVC MSGADDR+20(16),5(CURRPTR)                                  00431000
*            PRINTADR = ADDR(MESSAGE);                     /*@Z427VLS*/ 00432000
         LA    @10,MESSAGE                                         0184 00433000
         ST    @10,PRINTADR(,R2)                                   0184 00434000
*            CALL IOHND(RITEPRTR);                         /*@Z427VLS*/ 00435000
         L     @15,ADIOHND(,R2)                                    0185 00436000
         LA    @01,@AL00185                                        0185 00437000
         BALR  @14,@15                                             0185 00438000
*          END;                                            /*@Z427VLS*/ 00439000
*        RESPECIFY (R0,R1) RESTRICTED;                     /*@Z427VLS*/ 00440000
@RF00177 DS    0H                                                  0188 00441000
*        R0 = TABSIZE;                                     /*@Z427VLS*/ 00442000
         L     R0,TABSIZE(,R2)                                     0188 00443000
*  GEN(GETMAIN EC,LV=(0),A=TABPTR);                        /*@0001VLS*/ 00444000
         GETMAIN EC,LV=(0),A=TABPTR                                     00445000
*    IF R15 = ZERO THEN                                            0190 00446000
         LTR   R15,R15                                             0190 00447000
         BNZ   @RF00190                                            0190 00448000
*    DO;                                                   /*@GZZDGVS*/ 00449000
*        RESPECIFY (R0,R1) UNRESTRICTED;                   /*@Z427VLS*/ 00450000
*        CURRPTR = TABPTR + TABSIZE - 2;                   /*@Z427VLS*/ 00451000
         L     CURRPTR,TABPTR                                      0193 00452000
         AL    CURRPTR,TABSIZE(,R2)                                0193 00453000
         BCTR  CURRPTR,0                                           0193 00454000
         BCTR  CURRPTR,0                                           0193 00455000
*        EOTABLE = EOT;                /* PUT IN END OF TABLE INDICAT * 00456000
         MVC   EOTABLE(2,CURRPTR),@CB00260                         0194 00457000
*        CURRPTR = CURRPTR - 11;                           /*@Z427VLS*/ 00458000
         SL    CURRPTR,@CF00034                                    0195 00459000
*        RESPECIFY (R15) RESTRICTED;                       /*@Z427VLS*/ 00460000
*        CALL IOHND(READSEQ);          /* GET AN INPUT RECORD         * 00461000
         L     @15,ADIOHND(,R2)                                    0197 00462000
         LA    @01,@AL00197                                        0197 00463000
         BALR  @14,@15                                             0197 00464000
*        RETCODE = R15;                                    /*@Z427VLS*/ 00465000
         ST    R15,RETCODE                                         0198 00466000
*        RESPECIFY (R15) UNRESTRICTED;                     /*@Z427VLS*/ 00467000
*        DO WHILE (CURRPTR >= TABPTR & RETCODE = ZERO);    /*@Z427VLS*/ 00468000
         B     @DE00200                                            0200 00469000
@DL00200 DS    0H                                                  0201 00470000
*          /*                                                @Z427VLS*/ 00471000
*          /* THIS NEXT CODE WILL GET THE DEVICE TYPE AND CUA FROM THE* 00472000
*          /* PROPER OFFSET IN THE RECORD.  WITH A LONG OBR RECORD,   * 00473000
*          /* THE INFORMATION WILL BE RETRIEVED FROM THE NORMAL       * 00474000
*          /* OFFSETS.                                       @Z427VLS*/ 00475000
*          /*                                                @Z427VLS*/ 00476000
*          IF (RECTYP & FOXZERO) = OBRREC &                        0201 00477000
*              SHORT = OFF & DEV2 = SAVEDEV &                      0201 00478000
*              DATE >= STDATE & DATE <= ENDDATE &                  0201 00479000
*              ((SHIFT3RD = OFF & TIME >= STTIME1 & TIME <= ENDTIME1) | 00480000
*               (SHIFT3RD = ON &                                   0201 00481000
*                ((TIME >= STTIME1 & DATE ^= ENDDATE) |            0201 00482000
*                 (TIME <= ENDTIME2 & DATE ^= STDATE)))) THEN      0201 00483000
         MVC   @TS00001(1),RECTYP(BUFFPTR)                         0201 00484000
         NI    @TS00001,X'F0'                                      0201 00485000
         CLI   @TS00001,X'30'                                      0201 00486000
         BNE   @RF00201                                            0201 00487000
         TM    SHORT(BUFFPTR),B'00100000'                          0201 00488000
         BNZ   @RF00201                                            0201 00489000
         CLC   DEV2(2,BUFFPTR),SAVEDEV                             0201 00490000
         BNE   @RF00201                                            0201 00491000
         CLC   DATE(4,BUFFPTR),STDATE(R2)                          0201 00492000
         BL    @RF00201                                            0201 00493000
         CLC   DATE(4,BUFFPTR),ENDDATE(R2)                         0201 00494000
         BH    @RF00201                                            0201 00495000
         TM    SHIFT3RD(R2),B'00010000'                            0201 00496000
         BNZ   @GL00009                                            0201 00497000
         CLC   TIME(4,BUFFPTR),STTIME1(R2)                         0201 00498000
         BL    @GL00009                                            0201 00499000
         CLC   TIME(4,BUFFPTR),ENDTIME1(R2)                        0201 00500000
         BNH   @RT00201                                            0201 00501000
@GL00009 TM    SHIFT3RD(R2),B'00010000'                            0201 00502000
         BNO   @RF00201                                            0201 00503000
         CLC   TIME(4,BUFFPTR),STTIME1(R2)                         0201 00504000
         BL    @GL00013                                            0201 00505000
         CLC   DATE(4,BUFFPTR),ENDDATE(R2)                         0201 00506000
         BNE   @RT00201                                            0201 00507000
@GL00013 CLC   TIME(4,BUFFPTR),ENDTIME2(R2)                        0201 00508000
         BH    @RF00201                                            0201 00509000
         CLC   DATE(4,BUFFPTR),STDATE(R2)                          0201 00510000
         BE    @RF00201                                            0201 00511000
@RT00201 DS    0H                                                  0202 00512000
*            DO;                                           /*@Z427VLS*/ 00513000
*              /*                                            @Z427VLS*/ 00514000
*              /* THIS NEXT SECTION OF CODE COMPARES THE OBR JUST READ* 00515000
*              /* IN WITH THE PARAMETERS SPECIFIED ON THE EXEC CARD   * 00516000
*              /* AND PUT IN A LIST BY PARAMETER PROCESSOR.  @Z427VLS*/ 00517000
*              /* IF NO CUA WAS SPECIFIED, THE POINTER TO THE CUA     * 00518000
*              /* TABLE WILL BE ZERO.  IF IT IS NOT, THEN A MAXIMUM   * 00519000
*              /* OF SIXTEEN INDIVIDUAL OR RANGE CUAS MUST BE COMPARED* 00520000
*              /* TO THE CUA IN THE RECORD.                  @Z427VLS*/ 00521000
*              /*                                            @Z427VLS*/ 00522000
*              VALIDCUA = OFF;                             /*@Z427VLS*/ 00523000
*              VALIDCPU = OFF;                             /*@Z427VLS*/ 00524000
*              VALIDSER = OFF;                             /*@Z427VLS*/ 00525000
*              VALIDVOL = OFF;                             /*@Z427VLS*/ 00526000
         NI    VALIDCUA,B'10010011'                                0206 00527000
*              IF CUAPTR ^= ZERO THEN        /* ARE ALL CUA'S WANTED  * 00528000
         L     @10,CUAPTR(,R2)                                     0207 00529000
         LTR   @10,@10                                             0207 00530000
         BZ    @RF00207                                            0207 00531000
*                DO I = 1 TO CUANUM BY 1 WHILE (VALIDCUA = OFF);   0208 00532000
         LA    @10,1                                               0208 00533000
         STH   @10,I                                               0208 00534000
         B     @DE00208                                            0208 00535000
@DL00208 TM    VALIDCUA,B'00001000'                                0208 00536000
         BNZ   @DC00208                                            0208 00537000
*                  IF OCUA2 >= CUA1(I) &     /* DOES THE CUA LIE IN   * 00538000
*                     OCUA2 <= CUA2(I) THEN  /* RANGE SPECIFIED       * 00539000
         SLA   @10,2                                               0209 00540000
         L     @06,CUAPTR(,R2)                                     0209 00541000
         ST    @10,@TF00001                                        0209 00542000
         ALR   @10,@06                                             0209 00543000
         BCTR  @10,0                                               0209 00544000
         BCTR  @10,0                                               0209 00545000
         CLC   OCUA2(2,BUFFPTR),CUA1-2(@10)                        0209 00546000
         BL    @RF00209                                            0209 00547000
         AL    @06,@TF00001                                        0209 00548000
         CLC   OCUA2(2,BUFFPTR),CUA2-4(@06)                        0209 00549000
         BH    @RF00209                                            0209 00550000
*                       VALIDCUA = ON;       /* ACCEPT RECORD         * 00551000
         OI    VALIDCUA,B'00001000'                                0210 00552000
*                END;                                      /*@Z427VLS*/ 00553000
@RF00209 LA    @10,1                                               0211 00554000
         AH    @10,I                                               0211 00555000
         STH   @10,I                                               0211 00556000
@DE00208 L     @06,CUAPTR(,R2)                                     0211 00557000
         CH    @10,CUANUM(,@06)                                    0211 00558000
         BNH   @DL00208                                            0211 00559000
@DC00208 DS    0H                                                  0212 00560000
*              ELSE                                                0212 00561000
*                VALIDCUA = ON;              /* ACCEPT RECORD         * 00562000
         B     @RC00207                                            0212 00563000
@RF00207 OI    VALIDCUA,B'00001000'                                0212 00564000
*              /*                                            @Z427VLS*/ 00565000
*              /* A CHECK IS MADE TO SEE IF A LIST OF VOLID'S WAS     * 00566000
*              /* PASSED IN THE PARAMETER LIST.  IF IT WAS, THE VOLID * 00567000
*              /* IN THE RECORD IS COMPARED TO THE VOLIDS IN THE LIST * 00568000
*              /* TO SEE IF THE RECORD SHOULD BE INCLUDED IN THE      * 00569000
*              /* REPORTS.                                   @Z427VLS*/ 00570000
*              /*                                            @Z427VLS*/ 00571000
*              IF VOLPTR ^= ZERO THEN        /* WAS A VOLID SPECIFIED * 00572000
@RC00207 L     @10,VOLPTR(,R2)                                     0213 00573000
         LTR   @10,@10                                             0213 00574000
         BZ    @RF00213                                            0213 00575000
*                DO I = 1 TO VOLNUM BY 1 WHILE(VALIDVOL = OFF);    0214 00576000
         LA    @10,1                                               0214 00577000
         STH   @10,I                                               0214 00578000
         B     @DE00214                                            0214 00579000
@DL00214 TM    VALIDVOL,B'00000100'                                0214 00580000
         BNZ   @DC00214                                            0214 00581000
*                  IF VOLVAL(I) = VOLID THEN /* VOLUME IN LIST        * 00582000
         MH    @10,@CH00079                                        0215 00583000
         L     @06,VOLPTR(,R2)                                     0215 00584000
         ALR   @06,@10                                             0215 00585000
         AL    @06,@CF00660                                        0215 00586000
         CLC   VOLVAL-2(6,@06),VOLID(BUFFPTR)                      0215 00587000
         BNE   @RF00215                                            0215 00588000
*                    VALIDVOL = ON;          /* ACCEPT RECORD         * 00589000
         OI    VALIDVOL,B'00000100'                                0216 00590000
*                END;                                      /*@Z427VLS*/ 00591000
@RF00215 LA    @10,1                                               0217 00592000
         AH    @10,I                                               0217 00593000
         STH   @10,I                                               0217 00594000
@DE00214 L     @06,VOLPTR(,R2)                                     0217 00595000
         CH    @10,VOLNUM(,@06)                                    0217 00596000
         BNH   @DL00214                                            0217 00597000
@DC00214 DS    0H                                                  0218 00598000
*              ELSE                                                0218 00599000
*                VALIDVOL = ON;              /* ACCEPT RECORD         * 00600000
         B     @RC00213                                            0218 00601000
@RF00213 OI    VALIDVOL,B'00000100'                                0218 00602000
*              /*                                            @Z427VLS*/ 00603000
*              /* A CHECK IS MADE AGAINST ANY CPU WERE SPECIFIED      * 00604000
*              /*                                            @Z427VLS*/ 00605000
*              IF CPUPTR ^= ZERO THEN                              0219 00606000
@RC00213 L     @10,CPUPTR(,R2)                                     0219 00607000
         LTR   @10,@10                                             0219 00608000
         BZ    @RF00219                                            0219 00609000
*                DO I = 1 TO CPUNUM BY 1 WHILE(VALIDCPU = OFF);    0220 00610000
         LA    @10,1                                               0220 00611000
         STH   @10,I                                               0220 00612000
         B     @DE00220                                            0220 00613000
@DL00220 TM    VALIDCPU,B'00100000'                                0220 00614000
         BNZ   @DC00220                                            0220 00615000
*                  IF CPUIDENT = CPUVAL(I) THEN                    0221 00616000
         MH    @10,@CH00077                                        0221 00617000
         L     @06,CPUPTR(,R2)                                     0221 00618000
         ALR   @06,@10                                             0221 00619000
         AL    @06,@CF00655                                        0221 00620000
         CLC   CPUIDENT(5,BUFFPTR),CPUVAL-2(@06)                   0221 00621000
         BNE   @RF00221                                            0221 00622000
*                    VALIDCPU = ON;                        /*@Z427VLS*/ 00623000
         OI    VALIDCPU,B'00100000'                                0222 00624000
*                END;                                      /*@Z427VLS*/ 00625000
@RF00221 LA    @10,1                                               0223 00626000
         AH    @10,I                                               0223 00627000
         STH   @10,I                                               0223 00628000
@DE00220 L     @06,CPUPTR(,R2)                                     0223 00629000
         CH    @10,CPUNUM(,@06)                                    0223 00630000
         BNH   @DL00220                                            0223 00631000
@DC00220 DS    0H                                                  0224 00632000
*              ELSE                                                0224 00633000
*                VALIDCPU = ON;                            /*@Z427VLS*/ 00634000
         B     @RC00219                                            0224 00635000
@RF00219 OI    VALIDCPU,B'00100000'                                0224 00636000
*              /*                                            @Z427VLS*/ 00637000
*              /* A CHECK IS MADE AGAINST ANY DEVSER THAT WERE SPECIFD* 00638000
*              /*                                            @Z427VLS*/ 00639000
*              IF SERPTR ^= ZERO THEN                              0225 00640000
@RC00219 L     @10,SERPTR(,R2)                                     0225 00641000
         LTR   @10,@10                                             0225 00642000
         BZ    @RF00225                                            0225 00643000
*                DO I = 1 TO SERNUM BY 1 WHILE(VALIDSER = OFF);    0226 00644000
         LA    @10,1                                               0226 00645000
         STH   @10,I                                               0226 00646000
         B     @DE00226                                            0226 00647000
@DL00226 TM    VALIDSER,B'01000000'                                0226 00648000
         BNZ   @DC00226                                            0226 00649000
*                  IF OSER74XX = SERVAL(I) THEN                    0227 00650000
         ALR   @10,@10                                             0227 00651000
         L     @06,SERPTR(,R2)                                     0227 00652000
         ALR   @06,@10                                             0227 00653000
         CLC   OSER74XX(2,BUFFPTR),SERVAL-2(@06)                   0227 00654000
         BNE   @RF00227                                            0227 00655000
*                    VALIDSER = ON;                        /*@Z427VLS*/ 00656000
         OI    VALIDSER,B'01000000'                                0228 00657000
*                END;                                      /*@Z427VLS*/ 00658000
@RF00227 LA    @10,1                                               0229 00659000
         AH    @10,I                                               0229 00660000
         STH   @10,I                                               0229 00661000
@DE00226 L     @06,SERPTR(,R2)                                     0229 00662000
         CH    @10,SERNUM(,@06)                                    0229 00663000
         BNH   @DL00226                                            0229 00664000
@DC00226 DS    0H                                                  0230 00665000
*              ELSE                                                0230 00666000
*                VALIDSER = ON;                            /*@Z427VLS*/ 00667000
         B     @RC00225                                            0230 00668000
@RF00225 OI    VALIDSER,B'01000000'                                0230 00669000
*              /*                                            @Z427VLS*/ 00670000
*              IF VALIDCUA = ON & VALIDVOL = ON & VALIDCPU = ON &  0231 00671000
*                 VALIDSER = ON THEN                               0231 00672000
@RC00225 TM    VALIDCUA,B'01101100'                                0231 00673000
         BNO   @RF00231                                            0231 00674000
*                DO RECCOUNT = RECCOUNT + 1; /* INCREMENT RECORD COUNT* 00675000
         LA    @10,1                                               0232 00676000
         AL    @10,RECCOUNT                                        0232 00677000
         ST    @10,RECCOUNT                                        0232 00678000
*                  IF PHIST = ON THEN                              0233 00679000
         TM    PHIST(R2),B'00100000'                               0233 00680000
         BNO   @RF00233                                            0233 00681000
*                   DO;                                    /*@0001VLS*/ 00682000
*                    RESPECIFY (R15) RESTRICTED;           /*@0001VLS*/ 00683000
*                    CALL IOHND(RITESCRT);                 /*@Z427VLS*/ 00684000
         L     @15,ADIOHND(,R2)                                    0236 00685000
         LA    @01,@AL00236                                        0236 00686000
         BALR  @14,@15                                             0236 00687000
*                    RETCODE = R15;                        /*@0001VLS*/ 00688000
         ST    R15,RETCODE                                         0237 00689000
*                    RESPECIFY (R15) UNRESTRICTED;         /*@0001VLS*/ 00690000
*                   END;                                   /*@0001VLS*/ 00691000
*                 IF RETCODE = ZERO THEN                           0240 00692000
@RF00233 SLR   @10,@10                                             0240 00693000
         C     @10,RETCODE                                         0240 00694000
         BNE   @RF00240                                            0240 00695000
*                  DO;                                     /*@0001VLS*/ 00696000
*                  /*                                        @Z427VLS*/ 00697000
*                  /* CHECK FOR SHARED I/O AND CHANGE CUA IF REQUIRED * 00698000
*                  /*                                        @Z427VLS*/ 00699000
*                  CONTRTAB = CONTRTAB && CONTRTAB;        /*@0001VLS*/ 00700000
         XC    CONTRTAB(11,CURRPTR),CONTRTAB(CURRPTR)              0242 00701000
*                  RECCUA = OCUA2;                         /*@0001VLS*/ 00702000
         MVC   RECCUA(2),OCUA2(BUFFPTR)                            0243 00703000
*                  RECCPU = CPUSER;                        /*@0001VLS*/ 00704000
         MVC   RECCPU(3),CPUSER(BUFFPTR)                           0244 00705000
*                  IF SHAREPTR ^= ZERO THEN                        0245 00706000
         C     @10,SHAREPTR(,R2)                                   0245 00707000
         BE    @RF00245                                            0245 00708000
*                    CALL CUASHARE;                        /*@Z427VLS*/ 00709000
         BAL   @14,CUASHARE                                        0246 00710000
*                  CONTRCUA(2:3) = RECCUA;   /* GET CUA      @0001VLS*/ 00711000
@RF00245 MVC   CONTRCUA+1(2,CURRPTR),RECCUA                        0247 00712000
*                  /*                                        @Z427VLS*/ 00713000
*                  /* IF THRESHOLD, SORT BY CH AND CU ONLY.  @Z427VLS*/ 00714000
*                  /*                                        @Z427VLS*/ 00715000
*                  IF PARMTHR = ON THEN                            0248 00716000
         TM    PARMTHR(R2),B'00001000'                             0248 00717000
         BNO   @RF00248                                            0248 00718000
*                    CONTRCUA(3) = CONTRCUA(3) & FOXZERO;  /*@Z427VLS*/ 00719000
         NI    CONTRCUA+2(CURRPTR),X'F0'                           0249 00720000
*                  CPU = RECCPU;      /* PUT CPU SERIAL NUMBER IN    */ 00721000
@RF00248 MVC   CPU(3,CURRPTR),RECCPU                               0250 00722000
*                  TABCCHHR = RECCCHHR;       /* PUT CCHHR IN TABLE   * 00723000
         MVC   TABCCHHR(5,CURRPTR),RECCCHHR(R2)                    0251 00724000
*                  CURRPTR = CURRPTR - 11;   /* DECREMENT TO NEXT ENTR* 00725000
         SL    CURRPTR,@CF00034                                    0252 00726000
*                  END;                                    /*@0001VLS*/ 00727000
*                END;                                      /*@Z427VLS*/ 00728000
@RF00240 DS    0H                                                  0255 00729000
*            END;                                          /*@Z427VLS*/ 00730000
@RF00231 DS    0H                                                  0256 00731000
*            RESPECIFY (R15) RESTRICTED;                   /*@Z427VLS*/ 00732000
@RF00201 DS    0H                                                  0257 00733000
*           IF RETCODE = ZERO THEN                                 0257 00734000
         L     @14,RETCODE                                         0257 00735000
         LTR   @14,@14                                             0257 00736000
         BNZ   @RF00257                                            0257 00737000
*             DO;                                          /*@0001VLS*/ 00738000
*               CALL IOHND (READSEQ);         /* GET ANOTHER RECORD  */ 00739000
         L     @15,ADIOHND(,R2)                                    0259 00740000
         LA    @01,@AL00259                                        0259 00741000
         BALR  @14,@15                                             0259 00742000
*               RETCODE = R15;                             /*@0001VLS*/ 00743000
         ST    R15,RETCODE                                         0260 00744000
*             END;                                         /*@0001VLS*/ 00745000
*            RESPECIFY (R15) UNRESTRICTED;                 /*@Z427VLS*/ 00746000
@RF00257 DS    0H                                                  0263 00747000
*        END;                                              /*@Z427VLS*/ 00748000
@DE00200 C     CURRPTR,TABPTR                                      0263 00749000
         BL    @DC00200                                            0263 00750000
         L     @10,RETCODE                                         0263 00751000
         LTR   @10,@10                                             0263 00752000
         BZ    @DL00200                                            0263 00753000
@DC00200 DS    0H                                                  0264 00754000
*        /*                                                  @Z427VLS*/ 00755000
*        /* AT END OF FILE THE PART OF THE CONTROL TABLE THAT HAS NOT * 00756000
*        /* BEEN USED IS FREED AND THEN WE GO TO SORT THE CONTROL     * 00757000
*        /* TABLE AND PREPARE TO PROCESS THE RECORDS.        @Z427VLS*/ 00758000
*        /*                                                  @Z427VLS*/ 00759000
*        IF CURRPTR < TABPTR THEN         /* NOT ENOUGH TABLE SPACE   * 00760000
         C     CURRPTR,TABPTR                                      0264 00761000
         BNL   @RF00264                                            0264 00762000
*          DO;                                             /*@Z427VLS*/ 00763000
*            CALL IFCMSG(53,ADDR(MSGADDR));                /*@Z427VLS*/ 00764000
         LA    @10,MSGADDR                                         0266 00765000
         ST    @10,@AFTEMPS                                        0266 00766000
         L     @15,ADIFCMSG(,R2)                                   0266 00767000
         LA    @01,@AL00266                                        0266 00768000
         BALR  @14,@15                                             0266 00769000
*            PRINTADR = ADDR(MESSAGE);    /* INSUFF SPACE MESSAGE     * 00770000
         LA    @10,MESSAGE                                         0267 00771000
         ST    @10,PRINTADR(,R2)                                   0267 00772000
*            CALL IOHND(RITEPRTR);        /* OUTPUT MESSAGE  @Z427VLS*/ 00773000
         L     @15,ADIOHND(,R2)                                    0268 00774000
         LA    @01,@AL00268                                        0268 00775000
         BALR  @14,@15                                             0268 00776000
*          END;                                            /*@Z427VLS*/ 00777000
*        CURRPTR = CURRPTR + 11;          /* PUT WITHIN BOUNDS        * 00778000
@RF00264 AL    CURRPTR,@CF00034                                    0270 00779000
*        CALL IFCMSG(54,ADDR(MSGADDR));                    /*@Z427VLS*/ 00780000
         LA    @10,MSGADDR                                         0271 00781000
         ST    @10,@AFTEMPS                                        0271 00782000
         L     @15,ADIFCMSG(,R2)                                   0271 00783000
         LA    @01,@AL00271                                        0271 00784000
         BALR  @14,@15                                             0271 00785000
*        CVD (RECCOUNT,LASTDATE);         /* CONVVERT TO DECIMAL      * 00786000
         L     @10,RECCOUNT                                        0272 00787000
         CVD   @10,@TS00001                                        0272 00788000
         MVC   LASTDATE(4),@TS00001+4                              0272 00789000
*        UNPK (NUMRECP,LASTDATE);         /* PRINTABLE CHARACTERS     * 00790000
         UNPK  NUMRECP(7),LASTDATE(4)                              0273 00791000
*        NUMRECP(7) = NUMRECP(7) | FOXZERO;                /*@Z427VLS*/ 00792000
         OI    NUMRECP+6,X'F0'                                     0274 00793000
*        I = 1;                                            /*@Z427VLS*/ 00794000
         MVC   I(2),@CH00053                                       0275 00795000
*        DO UNTIL (I > 6 | NUMRECP(I) ^= FOXZERO);         /*@Z427VLS*/ 00796000
@DL00276 DS    0H                                                  0277 00797000
*          NUMRECP(I) = BLANK;            /* SET LEADING ZERO TO BLANK* 00798000
         LH    @10,I                                               0277 00799000
         LA    @06,NUMRECP-1(@10)                                  0277 00800000
         MVI   0(@06),C' '                                         0277 00801000
*          I = I + 1;                                      /*@Z427VLS*/ 00802000
         LA    @10,1(,@10)                                         0278 00803000
         STH   @10,I                                               0278 00804000
*        END;                                              /*@Z427VLS*/ 00805000
@DE00276 LH    @10,I                                               0279 00806000
         C     @10,@CF00079                                        0279 00807000
         BH    @DC00276                                            0279 00808000
         LA    @06,NUMRECP-1(@10)                                  0279 00809000
         CLI   0(@06),X'F0'                                        0279 00810000
         BE    @DL00276                                            0279 00811000
@DC00276 DS    0H                                                  0280 00812000
*        PRINTADR = ADDR(MESSAGE);                         /*@Z427VLS*/ 00813000
         LA    @10,MESSAGE                                         0280 00814000
         ST    @10,PRINTADR(,R2)                                   0280 00815000
*        CALL IOHND(RITEPRTR);            /* OUTPUT MESSAGE  @Z427VLS*/ 00816000
         L     @15,ADIOHND(,R2)                                    0281 00817000
         LA    @01,@AL00281                                        0281 00818000
         BALR  @14,@15                                             0281 00819000
*        FREESIZE = (CURRPTR - TABPTR);   /* UNUSED SPACE    @Z427VLS*/ 00820000
         L     @10,TABPTR                                          0282 00821000
         LR    @06,CURRPTR                                         0282 00822000
         SLR   @06,@10                                             0282 00823000
         ST    @06,FREESIZE                                        0282 00824000
*        IF FREESIZE > EIGHT THEN         /* OUTPUT MESSAGE  @Z427VLS*/ 00825000
         C     @06,@CF00064                                        0283 00826000
         BNH   @RF00283                                            0283 00827000
*          DO;                                             /*@Z427VLS*/ 00828000
*            FREESIZE = FREESIZE & 'FFFFF8'X;  /* DOUBLE WORD AMOUNT  * 00829000
         N     @06,@CF00644                                        0285 00830000
         ST    @06,FREESIZE                                        0285 00831000
*            RESPECIFY (R0,R1) RESTRICTED;                 /*@Z427VLS*/ 00832000
*            R0 = FREESIZE;                                /*@Z427VLS*/ 00833000
         LR    R0,@06                                              0287 00834000
*            R1 = TABPTR;                                  /*@Z427VLS*/ 00835000
         LR    R1,@10                                              0288 00836000
*            GEN(FREEMAIN R,LV=(R0),A=(R1));               /*@Z427VLS*/ 00837000
         FREEMAIN R,LV=(R0),A=(R1)                                      00838000
*            RESPECIFY (R0,R1) UNRESTRICTED;               /*@Z427VLS*/ 00839000
*          END;                                            /*@Z427VLS*/ 00840000
*        TABPTR = CURRPTR;                /* SAVE ADDRESS OF NEW TABLE* 00841000
@RF00283 ST    CURRPTR,TABPTR                                      0292 00842000
*        SORTNUM = RECCOUNT;              /* STORE NUMBER OF RECORDS  * 00843000
         L     @10,RECCOUNT                                        0293 00844000
         ST    @10,SORTNUM(,R2)                                    0293 00845000
*        SORTADR = TABPTR;                /* LOCATION OF SORT TABLE   * 00846000
         L     @10,TABPTR                                          0294 00847000
         ST    @10,SORTADR(,R2)                                    0294 00848000
*        IF PHIST = ON THEN                                        0295 00849000
         TM    PHIST(R2),B'00100000'                               0295 00850000
         BNO   @RF00295                                            0295 00851000
*          DO;                                             /*@Z427VLS*/ 00852000
*            /*                                              @Z427VLS*/ 00853000
*            /* INPUT DATA SETS MUST BE CLOSED IF HISTORY IS INPUT    * 00854000
*            /*                                              @Z427VLS*/ 00855000
*            CLOSEIO = CLOSEIO && CLOSEIO;                 /*@Z427VLS*/ 00856000
         XC    CLOSEIO(2,R2),CLOSEIO(R2)                           0297 00857000
*            IF PLOGREC = ON THEN                                  0298 00858000
         TM    PLOGREC(R2),B'00000010'                             0298 00859000
         BNO   @RF00298                                            0298 00860000
*              CSERLOG = ON;                               /*@Z427VLS*/ 00861000
         OI    CSERLOG(R2),B'00100000'                             0299 00862000
*            CDRCTWRK = ON;                                /*@Z427VLS*/ 00863000
@RF00298 OI    CDRCTWRK(R2),B'00000010'                            0300 00864000
*            CALL IOHND (IOCLOSE);                         /*@Z427VLS*/ 00865000
         L     @15,ADIOHND(,R2)                                    0301 00866000
         LA    @01,@AL00301                                        0301 00867000
         BALR  @14,@15                                             0301 00868000
*          END;                                            /*@Z427VLS*/ 00869000
*        /*                                                  @Z427VLS*/ 00870000
*        /* WHEN END OF FILE HAS BEEN REACHED OR THE CONTROL @Z427VLS*/ 00871000
*        /* TABLE IS FULL THE ENTRIES ARE SORTED FOR PROCESSING.      * 00872000
*        /* THE COUNT OF RECORDS AND THE ADDRESS OF THE FIRST ENTRY IS* 00873000
*        /* SAVED FOR THE SECOND PASS.                       @Z427VLS*/ 00874000
*        /*                                                  @Z427VLS*/ 00875000
*          DO;                                             /*@Z427VLS*/ 00876000
@RF00295 DS    0H                                                  0304 00877000
*            IF RECCOUNT > ONE THEN     /* INSURE > ONE REC  @ZA26586*/ 00878000
         L     @10,RECCOUNT                                        0304 00879000
         C     @10,@CF00053                                        0304 00880000
         BNH   @RF00304                                            0304 00881000
*              DO;                                         /*@ZA26586*/ 00882000
*                CALL SORT;                                /*@ZA26586*/ 00883000
         BAL   @14,SORT                                            0306 00884000
*              END;                                        /*@ZA26586*/ 00885000
*            IF DEBUG11 = ON THEN      /* ABEND REQUESTED?   @Z427VLS*/ 00886000
@RF00304 TM    DEBUG11(R2),B'00010000'                             0308 00887000
         BNO   @RF00308                                            0308 00888000
*              GEN (ABEND 520,DUMP);                       /*@Z427VLS*/ 00889000
         ABEND 520,DUMP                                                 00890000
*            /*                                              @Z427VLS*/ 00891000
*            /* START PROCESSING THE ENTRIES IN THE CONTROL TABLE. AT * 00892000
*            /* THE END OF THE TABLE, PROCESS THE SUMMARY CTRS WHICH  * 00893000
*            /* HAVE BEEN BUILT DURING RECORD PROCESSING. LOAD        * 00894000
*            /* IFCECUA0/1 AND IFCSCUA0/1 FOR PROCESSING. IF THE      * 00895000
*            /* IFCE/SCUA1 ROUTINES ARE LOADED THRESHOLD HAS BEEN     * 00896000
*            /* SPECIFIED.                                   @Z427VLS*/ 00897000
*            /*                                              @Z427VLS*/ 00898000
*            IF PARMTHR = ON THEN                                  0310 00899000
@RF00308 TM    PARMTHR(R2),B'00001000'                             0310 00900000
         BNO   @RF00310                                            0310 00901000
*              TABNBR = CHARONE;         /* THRESHOLD PROCESSING      * 00902000
         MVI   TABNBR,C'1'                                         0311 00903000
*            STABNBR = TABNBR;           /* ESTABLISH SUM TBL NUMBER  * 00904000
@RF00310 MVC   STABNBR(1),TABNBR                                   0312 00905000
*            GENERATE REFS(ETABNAME,EDITTAB,STABNAME,SUMTAB);      0313 00906000
         LOADEREP EPLOC=ETABNAME   LOAD EDIT TABLE                      00907000
               ST   R0,EDITTAB                  SAVE ADDRESS            00908000
         LOADEREP EPLOC=STABNAME   LOAD SUMMARY TABLE                   00909000
               ST   R0,SUMTAB                   SAVE ADDRESS            00910000
*            DO CURRPTR = CURRPTR BY 11 WHILE (EOTABLE ^= EOT);    0314 00911000
         B     @DE00314                                            0314 00912000
@DL00314 DS    0H                                                  0315 00913000
*              RECCCHHR = TABCCHHR;                        /*@Z427VLS*/ 00914000
         MVC   RECCCHHR(5,R2),TABCCHHR(CURRPTR)                    0315 00915000
*              RESPECIFY (R15) RESTRICTED;                 /*@Z427VLS*/ 00916000
*              CALL IOHND(READIRCT);     /* GET A RECORD BY CCHHR     * 00917000
         L     @15,ADIOHND(,R2)                                    0317 00918000
         LA    @01,@AL00317                                        0317 00919000
         BALR  @14,@15                                             0317 00920000
*              RETCODE = R15;                              /*@Z427VLS*/ 00921000
         ST    R15,RETCODE                                         0318 00922000
*              RESPECIFY (R15) UNRESTRICTED;               /*@Z427VLS*/ 00923000
*              IF RETCODE = ZERO THEN                              0320 00924000
         L     @10,RETCODE                                         0320 00925000
         SLR   @06,@06                                             0320 00926000
         CR    @10,@06                                             0320 00927000
         BNE   @RF00320                                            0320 00928000
*                DO;                                       /*@Z427VLS*/ 00929000
*                  /*                                        @Z427VLS*/ 00930000
*                  /* BUILD A TABLE WITH THE CUA, DEVICE CODE, AND CPU* 00931000
*                  /* SERIAL NUMBER, TO CONTROL PROCESSING THE RECORD.* 00932000
*                  /*                                        @Z427VLS*/ 00933000
*                  CUACPU = CUACPU && CUACPU;       /* CLEAR SAVE AREA* 00934000
         XC    CUACPU(8),CUACPU                                    0322 00935000
*                  SAVECUA(2:3) = CONTRCUA(2:3);     /* SAVE CUA     */ 00936000
         MVC   SAVECUA+1(2),CONTRCUA+1(CURRPTR)                    0323 00937000
*                  SAVECPU(1:3) = CPU;               /* SAVE CPU     */ 00938000
         MVC   SAVECPU(3),CPU(CURRPTR)                             0324 00939000
*                  /*                                        @Z427VLS*/ 00940000
*                  /* DETERMINE IF THE CUA SUMMARY COUNTERS MUST BE   * 00941000
*                  /* PRINTED.  THEY ARE PRINTED AFTER THE RECORDS FOR* 00942000
*                  /* EACH CUA.  EACH DATE COVERED HAS A SEPARATE CTR * 00943000
*                  /*                                        @Z427VLS*/ 00944000
*                  IF PARMTHR = ON & CNTAREA ^= ZERO &             0325 00945000
*                    (LASTCUA ^= SAVECUA |                         0325 00946000
*                    LASTCPU(1:3) ^= SAVECPU(1:3)) THEN            0325 00947000
         TM    PARMTHR(R2),B'00001000'                             0325 00948000
         BNO   @RF00325                                            0325 00949000
         C     @06,CNTAREA                                         0325 00950000
         BE    @RF00325                                            0325 00951000
         CLC   LASTCUA(3),SAVECUA                                  0325 00952000
         BNE   @RT00325                                            0325 00953000
         CLC   LASTCPU(3),SAVECPU                                  0325 00954000
         BE    @RF00325                                            0325 00955000
@RT00325 DS    0H                                                  0326 00956000
*                    /* DIFFERENT CUAS OR CPUS.              @Z427VLS*/ 00957000
*                    DO;                                   /*@Z427VLS*/ 00958000
*                      CALL OUTEDIT (FOXEASY);             /*@Z427VLS*/ 00959000
         LA    @01,@AL00327                                        0327 00960000
         BAL   @14,OUTEDIT                                         0327 00961000
*                      CALL OUTSUM;               /* OUTPUT SUM CTRS  * 00962000
         BAL   @14,OUTSUM                                          0328 00963000
*                      GENERATE REFS(ETABNAME,STABNAME,EDITTAB,SUMTAB); 00964000
                         DELETE EPLOC=ETABNAME  DELETE EDIT TABLE       00965000
                         DELETE EPLOC=STABNAME  DELETE SUM  TABLE       00966000
         LOADEREP EPLOC=ETABNAME   LOAD EDIT TABLE                      00967000
                         ST     R0,EDITTAB                              00968000
         LOADEREP EPLOC=STABNAME   LOAD SUMMARY TABLE                   00969000
                         ST     R0,SUMTAB                               00970000
*                    END;                                  /*@Z427VLS*/ 00971000
*                  /*                                        @Z427VLS*/ 00972000
*                  /* IS A DETAIL PRINT OF EVERY RECORD WANTED. FORCE * 00973000
*                  /* DETAIL PRINT IF THRESHOLD SPECIFIED    @Z427VLS*/ 00974000
*                  /*                                        @Z427VLS*/ 00975000
*                     RECCUA = OCUA2;                      /*@0001VLS*/ 00976000
@RF00325 MVC   RECCUA(2),OCUA2(BUFFPTR)                            0331 00977000
*                     IF SHAREPTR ^= ZERO THEN                     0332 00978000
         L     @10,SHAREPTR(,R2)                                   0332 00979000
         LTR   @10,@10                                             0332 00980000
         BZ    @RF00332                                            0332 00981000
*                       CALL CUASHARE;                     /*@0001VLS*/ 00982000
         BAL   @14,CUASHARE                                        0333 00983000
*                     SHRCUA = RECCUA;                     /*@0001VLS*/ 00984000
@RF00332 MVC   SHRCUA(2,BUFFPTR),RECCUA                            0334 00985000
*                  IF PEDIT = ON THEN                              0335 00986000
         TM    PEDIT(R2),B'00010000'                               0335 00987000
         BNO   @RF00335                                            0335 00988000
*                    CALL OUTEDIT (HEXZERO);               /*@Z427VLS*/ 00989000
         LA    @01,@AL00336                                        0336 00990000
         BAL   @14,OUTEDIT                                         0336 00991000
*                  /*                                        @Z427VLS*/ 00992000
*                  /* THIS SECTION CONTROLS THE SUMMING OF RECORDS.   * 00993000
*                  /* THE COUNTERS ARE PROPERLY UPDATED.  IF THRESHOLD* 00994000
*                  /* IS SPECIFIED, A SUMMARY BY CUA IS FORCED.       * 00995000
*                  /*                                        @Z427VLS*/ 00996000
*                  IF PSUM = ON THEN                               0337 00997000
@RF00335 TM    PSUM(R2),B'00001000'                                0337 00998000
         BNO   @RF00337                                            0337 00999000
*                    DO;                                   /*@Z427VLS*/ 01000000
*                      /*                                    @Z427VLS*/ 01001000
*                      /* CHECK IF THIS RECORD DATE IS DIFFERENT THAN * 01002000
*                      /* THE PREVIOUS ONE. IF IT IS, CHAIN ANOTHER   * 01003000
*                      /* SUM AREA TO THE CURRENT AREA.  IF THE DATES * 01004000
*                      /* ARE THE SAME, THE RECORD IS SUMMED INTO THE * 01005000
*                      /* CURRENT AREA.  DO NOT BREAK FOR CUA         * 01006000
*                      /* THRESHOLD SUMMARY.                 @Z427VLS*/ 01007000
*                      /*                                    @Z427VLS*/ 01008000
*                      IF (LASTDATE^=DATE & PARMTHR = OFF) |       0339 01009000
*                    LASTCPU(1:3) ^= SAVECPU(1:3) |                0339 01010000
*                    LASTCUA ^= SAVECUA THEN                       0339 01011000
         CLC   LASTDATE(4),DATE(BUFFPTR)                           0339 01012000
         BE    @GL00023                                            0339 01013000
         TM    PARMTHR(R2),B'00001000'                             0339 01014000
         BZ    @RT00339                                            0339 01015000
@GL00023 CLC   LASTCPU(3),SAVECPU                                  0339 01016000
         BNE   @RT00339                                            0339 01017000
         CLC   LASTCUA(3),SAVECUA                                  0339 01018000
         BE    @RF00339                                            0339 01019000
@RT00339 DS    0H                                                  0340 01020000
*                        CALL GETSPACE;                    /*@Z427VLS*/ 01021000
         BAL   @14,GETSPACE                                        0340 01022000
*                     OCUA2 = RECCUA;                      /*@0001VLS*/ 01023000
@RF00339 MVC   OCUA2(2,BUFFPTR),RECCUA                             0341 01024000
*                      CALL SUMIT;                         /*@Z427VLS*/ 01025000
         BAL   @14,SUMIT                                           0342 01026000
*                    END;                                  /*@Z427VLS*/ 01027000
*                  /*                                        @Z427VLS*/ 01028000
*                  /* PLACE THE VOLID IN THE RECORD CONTROL TABLE FOR * 01029000
*                  /* NEXT SORT OF THE TABLE AND PROCESSING BY VOLID. * 01030000
*                  /*                                        @Z427VLS*/ 01031000
*                  CONTRVOL = VOLID;                       /*@Z427VLS*/ 01032000
@RF00337 MVC   CONTRVOL(6,CURRPTR),VOLID(BUFFPTR)                  0344 01033000
*                END;                                      /*@Z427VLS*/ 01034000
*              ELSE                                                0346 01035000
*                CONTRVOL = CONTRVOL && CONTRVOL;          /*@Z427VLS*/ 01036000
         B     @RC00320                                            0346 01037000
@RF00320 XC    CONTRVOL(6,CURRPTR),CONTRVOL(CURRPTR)               0346 01038000
*            END;                                          /*@Z427VLS*/ 01039000
@RC00320 AL    CURRPTR,@CF00034                                    0347 01040000
@DE00314 CLC   EOTABLE(2,CURRPTR),@CB00260                         0347 01041000
         BNE   @DL00314                                            0347 01042000
*            IF PARMTHR = ON THEN         /* OUTPUT TRESH STATS AT END* 01043000
         TM    PARMTHR(R2),B'00001000'                             0348 01044000
         BNO   @RF00348                                            0348 01045000
*              CALL OUTEDIT (FOXFOX);                      /*@Z427VLS*/ 01046000
         LA    @01,@AL00349                                        0349 01047000
         BAL   @14,OUTEDIT                                         0349 01048000
*            /*                                              @Z427VLS*/ 01049000
*            /* WAS A SUMMARY REQUESTED. FORCE SUMMARY EDIT PRINTING  * 01050000
*            /* IF THRESHOLD IS SPECIFIED.                   @Z427VLS*/ 01051000
*            /*                                              @Z427VLS*/ 01052000
*            IF CNTAREA ^= ZERO THEN                               0350 01053000
@RF00348 L     @10,CNTAREA                                         0350 01054000
         LTR   @10,@10                                             0350 01055000
         BZ    @RF00350                                            0350 01056000
*              CALL OUTSUM;                 /* OUTPUT THE SUMMARY CTRS* 01057000
         BAL   @14,OUTSUM                                          0351 01058000
*            /*                                              @Z427VLS*/ 01059000
*            /* SORT THE RECORDS BY VOLID AND PROCESS ALL THE MES     * 01060000
*            /* RECORDS BY VOLID.                            @Z427VLS*/ 01061000
*            /*                                              @Z427VLS*/ 01062000
*            GENERATE REFS(ETABNAME,STABNAME);             /*@Z427VLS*/ 01063000
@RF00350 DS    0H                                                  0352 01064000
               DELETE EPLOC=ETABNAME DELETE EDIT TABLE                  01065000
               DELETE EPLOC=STABNAME DELETE SUMMARY TABLE               01066000
*            CURRPTR = TABPTR;         /* GET ADDRESS FIRST TABLE ENT * 01067000
         L     CURRPTR,TABPTR                                      0353 01068000
*            REPTYPE = VOLREP;         /* MOVE 'VOL' TO EDIT AND      * 01069000
         MVC   REPTYPE(4),VOLREP                                   0354 01070000
*            SREPTYPE = VOLREP;        /* SUMMARY TABLE NAMES         * 01071000
         MVC   SREPTYPE(4),VOLREP                                  0355 01072000
*            SORTFLG = ON;             /* RESET SORT FLAG    @Z427VLS*/ 01073000
         OI    SORTFLG,B'10000000'                                 0356 01074000
*            IF RECCOUNT > ONE THEN     /* INSURE > ONE REC  @ZA26586*/ 01075000
         L     @10,RECCOUNT                                        0357 01076000
         C     @10,@CF00053                                        0357 01077000
         BNH   @RF00357                                            0357 01078000
*              DO;                                         /*@ZA26586*/ 01079000
*                CALL SORT;                                /*@ZA26586*/ 01080000
         BAL   @14,SORT                                            0359 01081000
*              END;                                        /*@ZA26586*/ 01082000
*            GENERATE REFS(ETABNAME,EDITTAB,STABNAME,SUMTAB);      0361 01083000
@RF00357 DS    0H                                                  0361 01084000
         LOADEREP EPLOC=ETABNAME   LOAD EDIT TABLE                      01085000
               ST   R0,EDITTAB       SAVE THE ENTRY POINT               01086000
         LOADEREP EPLOC=STABNAME   LOAD SUMMARY TABLE                   01087000
               ST   R0,SUMTAB        SAVE THE ENTRY POINT               01088000
*            IF PARMTHR = ON THEN     /* FORCE NO VOL SUM IF THRESHOLD* 01089000
         TM    PARMTHR(R2),B'00001000'                             0362 01090000
         BNO   @RF00362                                            0362 01091000
*              PSUM = OFF;                                 /*@Z427VLS*/ 01092000
         NI    PSUM(R2),B'11110111'                                0363 01093000
*            CUACPU = CUACPU && CUACPU;                    /*@Z427VLS*/ 01094000
@RF00362 XC    CUACPU(8),CUACPU                                    0364 01095000
*            /*                                              @Z427VLS*/ 01096000
*            /* PROCESS THE ENTRIES IN THE CONTROL TABLE.  AT THE END,* 01097000
*            /* PROCESS THE SUMMARY COUNTERS THAT HAVE BEEN BUILD.    * 01098000
*            /*                                              @Z427VLS*/ 01099000
*            DO CURRPTR = CURRPTR BY 11 WHILE (EOTABLE ^= EOT);    0365 01100000
         B     @DE00365                                            0365 01101000
@DL00365 DS    0H                                                  0366 01102000
*              RECCCHHR = TABCCHHR;                        /*@Z427VLS*/ 01103000
         MVC   RECCCHHR(5,R2),TABCCHHR(CURRPTR)                    0366 01104000
*              RESPECIFY (R15) RESTRICTED;                 /*@Z427VLS*/ 01105000
*              CALL IOHND(READIRCT);                       /*@Z427VLS*/ 01106000
         L     @15,ADIOHND(,R2)                                    0368 01107000
         LA    @01,@AL00368                                        0368 01108000
         BALR  @14,@15                                             0368 01109000
*              RETCODE = R15;                              /*@Z427VLS*/ 01110000
         ST    R15,RETCODE                                         0369 01111000
*              RESPECIFY (R15) UNRESTRICTED;               /*@Z427VLS*/ 01112000
*              IF RETCODE = ZERO THEN                              0371 01113000
         L     @10,RETCODE                                         0371 01114000
         LTR   @10,@10                                             0371 01115000
         BNZ   @RF00371                                            0371 01116000
*                DO;                                       /*@Z427VLS*/ 01117000
*                  /*                                        @Z427VLS*/ 01118000
*                  /* BUILD A TABLE WITH THE DEVICE CODE AND VOLID.   * 01119000
*                  /* THE TABLE IS USED FOR PROCESSING THE RECORD.    * 01120000
*                  /*                                        @Z427VLS*/ 01121000
*                  IF PARMTHR = OFF THEN                           0373 01122000
         TM    PARMTHR(R2),B'00001000'                             0373 01123000
         BNZ   @RF00373                                            0373 01124000
*                    CUACPU = VOLID;                       /*@Z427VLS*/ 01125000
         MVI   CUACPU+6,C' '                                       0374 01126000
         MVI   CUACPU+7,C' '                                       0374 01127000
         MVC   CUACPU(6),VOLID(BUFFPTR)                            0374 01128000
*                  /*                                        @Z427VLS*/ 01129000
*                  /* IS A DETAIL PRINT OF EVERY RECORD WANTED.       * 01130000
*                  /*                                        @Z427VLS*/ 01131000
*                  IF PEDIT = ON THEN                              0375 01132000
@RF00373 TM    PEDIT(R2),B'00010000'                               0375 01133000
         BNO   @RF00375                                            0375 01134000
*                    CALL OUTEDIT (HEXZERO);               /*@Z427VLS*/ 01135000
         LA    @01,@AL00376                                        0376 01136000
         BAL   @14,OUTEDIT                                         0376 01137000
*                  /*                                        @Z427VLS*/ 01138000
*                  /* CHECK FOR SUMMARY REQUEST. ASSURE THAT SUMMARY  * 01139000
*                  /* COUNTERS ARE UPDATED PROPERLY.         @Z427VLS*/ 01140000
*                  /*                                        @Z427VLS*/ 01141000
*                  IF PSUM = ON THEN                               0377 01142000
@RF00375 TM    PSUM(R2),B'00001000'                                0377 01143000
         BNO   @RF00377                                            0377 01144000
*                    DO;                                   /*@Z427VLS*/ 01145000
*                      /*                                    @Z427VLS*/ 01146000
*                      /* DETERMINE IF RECORD BEING PROCESSED SHOULD  * 01147000
*                      /* BE SUMMED WITH THE CURRENT COUNTERS OR IF A * 01148000
*                      /* NEW AREA IS NEEDED.                @Z427VLS*/ 01149000
*                      /*                                    @Z427VLS*/ 01150000
*                      IF SUMIDENT ^= CUACPU THEN                  0379 01151000
         L     @10,CURRCNTS                                        0379 01152000
         CLC   SUMIDENT(8,@10),CUACPU                              0379 01153000
         BE    @RF00379                                            0379 01154000
*                        CALL GETSPACE;                    /*@Z427VLS*/ 01155000
         BAL   @14,GETSPACE                                        0380 01156000
*                      CALL SUMIT;                         /*@Z427VLS*/ 01157000
@RF00379 BAL   @14,SUMIT                                           0381 01158000
*                    END;                                  /*@Z427VLS*/ 01159000
*                END;                                      /*@Z427VLS*/ 01160000
@RF00377 DS    0H                                                  0384 01161000
*            END;                                          /*@Z427VLS*/ 01162000
@RF00371 AL    CURRPTR,@CF00034                                    0384 01163000
@DE00365 CLC   EOTABLE(2,CURRPTR),@CB00260                         0384 01164000
         BNE   @DL00365                                            0384 01165000
*            IF PARMTHR = ON THEN       /* OUTPUT THRESH STATS AT END * 01166000
         TM    PARMTHR(R2),B'00001000'                             0385 01167000
         BNO   @RF00385                                            0385 01168000
*              CALL OUTEDIT (FOXFOX);                      /*@Z427VLS*/ 01169000
         LA    @01,@AL00386                                        0386 01170000
         BAL   @14,OUTEDIT                                         0386 01171000
*            IF CNTAREA ^= ZERO THEN    /* OUTPUT MES VOLUME SUMMARY  * 01172000
@RF00385 L     @10,CNTAREA                                         0387 01173000
         LTR   @10,@10                                             0387 01174000
         BZ    @RF00387                                            0387 01175000
*              CALL OUTSUM;                                /*@Z427VLS*/ 01176000
         BAL   @14,OUTSUM                                          0388 01177000
*          END;                                            /*@Z427VLS*/ 01178000
@RF00387 DS    0H                                                  0390 01179000
*    END;                /* END FOR GETMAIN FAILURE        @0001VLS   * 01180000
*     ELSE                                                         0391 01181000
*      DO;                                                 /*@GZZDGVS*/ 01182000
         B     @RC00190                                            0391 01183000
@RF00190 DS    0H                                                  0392 01184000
*       CALL IFCMSG(55,ADDR(MSGADDR));  /* MESSAGE FOR GETMAIN FAIL  */ 01185000
         LA    @10,MSGADDR                                         0392 01186000
         ST    @10,@AFTEMPS                                        0392 01187000
         L     @15,ADIFCMSG(,R2)                                   0392 01188000
         LA    @01,@AL00392                                        0392 01189000
         BALR  @14,@15                                             0392 01190000
*       PRINTADR = ADDR(MSGADDR);                          /*@0001VLS*/ 01191000
         LA    @10,MSGADDR                                         0393 01192000
         ST    @10,PRINTADR(,R2)                                   0393 01193000
*       CALL IOHND(RITEPRTR);                              /*@0001VLS*/ 01194000
         L     @15,ADIOHND(,R2)                                    0394 01195000
         LA    @01,@AL00394                                        0394 01196000
         BALR  @14,@15                                             0394 01197000
*      END;                                                /*@GZZDGVS*/ 01198000
*        IF DEBUG12 = ON THEN           /* ABEND REQUESTED?  @Z427VLS*/ 01199000
@RC00190 TM    DEBUG12(R2),B'00001000'                             0396 01200000
         BNO   @RF00396                                            0396 01201000
*          GEN(ABEND 540,DUMP);                            /*@Z427VLS*/ 01202000
         ABEND 540,DUMP                                                 01203000
*        RETURN;                                           /*@Z427VLS*/ 01204000
@EL00001 L     @13,4(,@13)                                         0398 01205000
@EF00001 DS    0H                                                  0398 01206000
@ER00001 L     @14,12(,@13)                                        0398 01207000
         LM    @00,@12,20(@13)                                     0398 01208000
         BR    @14                                                 0398 01209000
* END                                                      /*@Z427VLS*/ 01210000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 01211000
*/*%INCLUDE SYSLIB  (COMTABLE)                                        * 01212000
*;                                                                 0399 01213000
         B     @EL00001                                            0399 01214000
@DATA    DS    0H                                                       01215000
@CH00072 DC    H'2'                                                     01216000
@CH00074 DC    H'3'                                                     01217000
@CH00077 DC    H'5'                                                     01218000
@CH00081 DC    H'7'                                                     01219000
         DS    0F                                                       01220000
@AL00185 EQU   *                       LIST WITH   1 ARGUMENT(S)        01221000
@AL00268 EQU   *                       LIST WITH   1 ARGUMENT(S)        01222000
@AL00281 EQU   *                       LIST WITH   1 ARGUMENT(S)        01223000
@AL00394 DC    A(@CH00072)             LIST WITH   1 ARGUMENT(S)        01224000
@AL00197 EQU   *                       LIST WITH   1 ARGUMENT(S)        01225000
@AL00259 DC    A(@CH00074)             LIST WITH   1 ARGUMENT(S)        01226000
@AL00236 DC    A(@CH00077)             LIST WITH   1 ARGUMENT(S)        01227000
@AL00266 DC    A(@CF00581)             LIST WITH   2 ARGUMENT(S)        01228000
         DC    A(@AFTEMPS)                                              01229000
@AL00271 DC    A(@CF00641)             LIST WITH   2 ARGUMENT(S)        01230000
         DC    A(@AFTEMPS)                                              01231000
@AL00301 DC    A(@CH00081)             LIST WITH   1 ARGUMENT(S)        01232000
@AL00317 EQU   *                       LIST WITH   1 ARGUMENT(S)        01233000
@AL00368 DC    A(@CF00079+2)           LIST WITH   1 ARGUMENT(S)        01234000
@AL00327 DC    A(@CB00466)             LIST WITH   1 ARGUMENT(S)        01235000
@AL00336 EQU   *                       LIST WITH   1 ARGUMENT(S)        01236000
@AL00376 DC    A(@CB00224)             LIST WITH   1 ARGUMENT(S)        01237000
@AL00349 EQU   *                       LIST WITH   1 ARGUMENT(S)        01238000
@AL00386 DC    A(@CB00279)             LIST WITH   1 ARGUMENT(S)        01239000
@AL00392 DC    A(@CF00645)             LIST WITH   2 ARGUMENT(S)        01240000
         DC    A(@AFTEMPS)                                              01241000
         DS    0F                                                       01242000
@SA00001 DS    18F                                                      01243000
@SA00002 DS    15F                                                      01244000
@SA00003 DS    15F                                                      01245000
@SA00005 DS    15F                                                      01246000
@SA00006 DS    15F                                                      01247000
@SA00004 DS    0F                                                       01248000
@PC00004 EQU   @SA00004+60                                              01249000
         DS    16F                                                      01250000
@TF00001 DS    F                                                        01251000
@AFTEMPS DS    1F                                                       01252000
         DS    0F                                                       01253000
@CF00053 DC    F'1'                                                     01254000
@CH00053 EQU   @CF00053+2                                               01255000
@CF00079 DC    F'6'                                                     01256000
@CH00079 EQU   @CF00079+2                                               01257000
@CF00064 DC    F'8'                                                     01258000
@CF00034 DC    F'11'                                                    01259000
@CH00034 EQU   @CF00034+2                                               01260000
@CF00614 DC    F'22'                                                    01261000
@CF00639 DC    F'27'                                                    01262000
@CF00581 DC    F'53'                                                    01263000
@CF00641 DC    F'54'                                                    01264000
@CF00645 DC    F'55'                                                    01265000
@CF00653 DC    F'-14'                                                   01266000
@CF00657 DC    F'-13'                                                   01267000
@CF00656 DC    F'-10'                                                   01268000
@CF00654 DC    F'-6'                                                    01269000
@CF00660 DC    F'-4'                                                    01270000
@CF00655 DC    F'-3'                                                    01271000
@CF00644 DC    XL4'FFFFF8'                                              01272000
@CV00543 DC    V(IFCEEDIT)                                              01273000
         DS    0D                                                       01274000
EDITTAB  DS    F                                                        01275000
SAVEPARM DS    F                                                        01276000
CNTAREA  DC    A(0)                                                     01277000
CURRCNTS DS    A                                                        01278000
SUMTAB   DS    A                                                        01279000
TABPTR   DS    A                                                        01280000
RECCOUNT DC    F'0'                                                     01281000
RETCODE  DS    F                                                        01282000
FREESIZE DC    F'8192'                                                  01283000
SRTCONT  DC    F'0'                                                     01284000
SUMSPEC1 DS    A                                                        01285000
I        DS    H                                                        01286000
         DS    0D                                                       01287000
@TS00001 DS    CL8                                                      01288000
@CB00260 DC    X'FFFF'                                                  01289000
@CB00224 DC    X'00'                                                    01290000
@CB00279 EQU   @CB00260                                                 01291000
@CB00466 DC    X'FE'                                                    01292000
SUMCNTRL DS    CL10                                                     01293000
         ORG   SUMCNTRL                                                 01294000
CUACPU   DS    CL8                                                      01295000
         ORG   CUACPU                                                   01296000
SAVECUA  DS    CL3                                                      01297000
SAVECPU  DS    CL5                                                      01298000
         ORG   SUMCNTRL+8                                               01299000
SAVEDEV  DC    X'8003'                                                  01300000
         ORG   SUMCNTRL+10                                              01301000
RECCPU   DC    CL3' '                                                   01302000
RECCUA   DC    CL2' '                                                   01303000
ETABNAME DS    CL8                                                      01304000
         ORG   ETABNAME                                                 01305000
@NM00013 DC    CL4'IFCE'                                                01306000
REPTYPE  DC    CL4'CUA0'                                                01307000
         ORG   ETABNAME+8                                               01308000
STABNAME DS    CL8                                                      01309000
         ORG   STABNAME                                                 01310000
@NM00014 DC    CL4'IFCS'                                                01311000
SREPTYPE DC    CL4'CUA0'                                                01312000
         ORG   STABNAME+8                                               01313000
LASTDATE DS    CL4                                                      01314000
LASTCUA  DS    CL3                                                      01315000
LASTCPU  DS    CL5                                                      01316000
SWITCH   DC    X'80'                                                    01317000
         ORG   SWITCH                                                   01318000
SORTFLG  DS    BL1                                                      01319000
VALIDSER EQU   SWITCH+0                                                 01320000
VALIDCPU EQU   SWITCH+0                                                 01321000
VALIDSHR EQU   SWITCH+0                                                 01322000
VALIDCUA EQU   SWITCH+0                                                 01323000
VALIDVOL EQU   SWITCH+0                                                 01324000
         ORG   SWITCH+1                                                 01325000
VOLREP   DC    CL4'VOL0'                                                01326000
MESSAGE  DS    CL134                                                    01327000
         ORG   MESSAGE                                                  01328000
@NM00027 DC    CL1'1'                                                   01329000
@NM00028 DC    CL1' '                                                   01330000
MSGADDR  DC    CL132' '                                                 01331000
         ORG   MSGADDR                                                  01332000
@NM00029 DS    CL8                                                      01333000
NUMRECP  DS    CL7                                                      01334000
         ORG   MESSAGE+134                                              01335000
@NM00030 DS    CL5                                                      01336000
         ORG   @NM00030                                                 01337000
SHR74XXX DS    CL5                                                      01338000
         ORG   SHR74XXX                                                 01339000
SHR74CUA DS    BL2                                                      01340000
SHR74CPU DS    CL3                                                      01341000
         ORG   @NM00030+5                                               01342000
LETTERS  DC    CL1'S'                                                   01343000
SUPERZAP DC    3CL10'SUPERZAP'                                          01344000
PATCH    DC    20H'0'                                                   01345000
IFCMES01 CSECT                                                          01346000
         DC    S(SUPERZAP)                                              01347000
IFCMES01 CSECT                                                          01348000
         DC    S(PATCH)                                                 01349000
IFCMES01 CSECT                                                          01350000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01351000
@01      EQU   01                                                       01352000
@02      EQU   02                                                       01353000
@03      EQU   03                                                       01354000
@04      EQU   04                                                       01355000
@05      EQU   05                                                       01356000
@06      EQU   06                                                       01357000
@07      EQU   07                                                       01358000
@08      EQU   08                                                       01359000
@09      EQU   09                                                       01360000
@10      EQU   10                                                       01361000
@11      EQU   11                                                       01362000
@12      EQU   12                                                       01363000
@13      EQU   13                                                       01364000
@14      EQU   14                                                       01365000
@15      EQU   15                                                       01366000
R0       EQU   @00                                                      01367000
R1       EQU   @01                                                      01368000
R2       EQU   @02                                                      01369000
R3       EQU   @03                                                      01370000
R4       EQU   @04                                                      01371000
R6       EQU   @06                                                      01372000
R7       EQU   @07                                                      01373000
R9       EQU   @09                                                      01374000
R12      EQU   @12                                                      01375000
R15      EQU   @15                                                      01376000
CURRPTR  EQU   @05                                                      01377000
BUFFPTR  EQU   @07                                                      01378000
R10      EQU   @10                                                      01379000
R11      EQU   @11                                                      01380000
R13      EQU   @13                                                      01381000
R14      EQU   @14                                                      01382000
R5       EQU   @05                                                      01383000
R8       EQU   @08                                                      01384000
IOHND    EQU   0                                                        01385000
IFCMSG   EQU   0                                                        01386000
PARM     EQU   0                                                        01387000
RECTYPE  EQU   PARM                                                     01388000
SWITCHES EQU   PARM+2                                                   01389000
PARMTHR  EQU   SWITCHES                                                 01390000
SHIFT3RD EQU   SWITCHES+1                                               01391000
DEBUG    EQU   PARM+4                                                   01392000
DEBUG4   EQU   DEBUG                                                    01393000
DEBUG11  EQU   DEBUG+1                                                  01394000
DEBUG12  EQU   DEBUG+1                                                  01395000
DEBUGA   EQU   PARM+8                                                   01396000
MISC     EQU   PARM+12                                                  01397000
PHIST    EQU   MISC                                                     01398000
PRINTES  EQU   MISC                                                     01399000
PEDIT    EQU   PRINTES                                                  01400000
PSUM     EQU   PRINTES                                                  01401000
PLOGREC  EQU   MISC                                                     01402000
OPENCLSE EQU   PARM+13                                                  01403000
OPENIO   EQU   OPENCLSE                                                 01404000
CLOSEIO  EQU   OPENCLSE+2                                               01405000
CSERLOG  EQU   CLOSEIO                                                  01406000
CDRCTWRK EQU   CLOSEIO                                                  01407000
DATENOW  EQU   PARM+17                                                  01408000
STDT     EQU   PARM+23                                                  01409000
STDATE   EQU   STDT                                                     01410000
PSTD     EQU   STDATE+1                                                 01411000
ENDDT    EQU   PARM+31                                                  01412000
ENDDATE  EQU   ENDDT                                                    01413000
PEND     EQU   ENDDATE+1                                                01414000
STTIME1  EQU   PARM+39                                                  01415000
ENDTIME1 EQU   PARM+43                                                  01416000
STTIME2  EQU   PARM+47                                                  01417000
ENDTIME2 EQU   PARM+51                                                  01418000
STRTDATE EQU   PARM+55                                                  01419000
RDTHRSH  EQU   PARM+66                                                  01420000
WRTHRSH  EQU   PARM+69                                                  01421000
@NM00006 EQU   PARM+72                                                  01422000
@NM00007 EQU   PARM+75                                                  01423000
TABSIZE  EQU   PARM+80                                                  01424000
SORTNUM  EQU   PARM+84                                                  01425000
ERRID    EQU   PARM+92                                                  01426000
IDTIMEA  EQU   ERRID+6                                                  01427000
IDTIME   EQU   IDTIMEA                                                  01428000
CCHHRLNG EQU   PARM+112                                                 01429000
RECCCHHR EQU   CCHHRLNG                                                 01430000
ADIOHND  EQU   PARM+124                                                 01431000
ADIFCMSG EQU   PARM+128                                                 01432000
ADEDITB  EQU   PARM+132                                                 01433000
EVPTR    EQU   PARM+136                                                 01434000
SORTADR  EQU   PARM+140                                                 01435000
PRINTADR EQU   PARM+148                                                 01436000
CUAPTR   EQU   PARM+152                                                 01437000
DEVPTR   EQU   PARM+156                                                 01438000
MODPTR   EQU   PARM+160                                                 01439000
SERPTR   EQU   PARM+164                                                 01440000
VOLPTR   EQU   PARM+168                                                 01441000
CPUPTR   EQU   PARM+172                                                 01442000
CPCUAPTR EQU   PARM+176                                                 01443000
LIBADPTR EQU   PARM+180                                                 01444000
SYMCDPTR EQU   PARM+184                                                 01445000
SYSUMPTR EQU   PARM+188                                                 01446000
TRENPTR  EQU   PARM+192                                                 01447000
SHAREPTR EQU   PARM+196                                                 01448000
MERDCPTR EQU   PARM+208                                                 01449000
DUMPTABL EQU   PARM+228                                                 01450000
DUMPINFO EQU   DUMPTABL+4                                               01451000
TRENDONE EQU   0                                                        01452000
TREGEN   EQU   TRENDONE+8                                               01453000
TRECCH0  EQU   TREGEN+8                                                 01454000
TREND2   EQU   0                                                        01455000
TRENDKEY EQU   TREND2                                                   01456000
TRENDRT  EQU   TRENDKEY+1                                               01457000
TRENCPUS EQU   TRENDKEY+3                                               01458000
TRENDITM EQU   TRENDKEY+4                                               01459000
EVTABLE  EQU   0                                                        01460000
EVSTOP   EQU   EVTABLE                                                  01461000
EVKEY    EQU   EVTABLE+6                                                01462000
SORTABLE EQU   0                                                        01463000
SORTKEY  EQU   SORTABLE                                                 01464000
SORTCCHR EQU   SORTABLE+5                                               01465000
SYSUMONE EQU   0                                                        01466000
SYSUM2   EQU   0                                                        01467000
SYSUMKEY EQU   SYSUM2                                                   01468000
SYSRT    EQU   SYSUMKEY+1                                               01469000
SYSCPUS  EQU   SYSUMKEY+3                                               01470000
SYSITEM  EQU   SYSUMKEY+4                                               01471000
SHARE    EQU   0                                                        01472000
SHARENUM EQU   SHARE                                                    01473000
SHAREIO  EQU   SHARE+2                                                  01474000
SHAREFLG EQU   SHAREIO                                                  01475000
SHRBASE  EQU   SHAREIO+1                                                01476000
SHARSERB EQU   SHRBASE                                                  01477000
SHRCUABL EQU   SHRBASE+3                                                01478000
SHRCUCPU EQU   SHAREIO+8                                                01479000
SHARSERA EQU   SHRCUCPU                                                 01480000
SHRCUAAL EQU   SHRCUCPU+3                                               01481000
SHRCUAAH EQU   SHRCUCPU+5                                               01482000
EDITLOAD EQU   0                                                        01483000
EDITABLE EQU   EDITLOAD+4                                               01484000
CUA      EQU   0                                                        01485000
CUANUM   EQU   CUA                                                      01486000
CUAVAL   EQU   CUA+2                                                    01487000
CUA1     EQU   CUAVAL                                                   01488000
CUA2     EQU   CUAVAL+2                                                 01489000
DEVICE   EQU   0                                                        01490000
MODELS   EQU   0                                                        01491000
DEVSERAL EQU   0                                                        01492000
SERNUM   EQU   DEVSERAL                                                 01493000
SERVAL   EQU   DEVSERAL+2                                               01494000
VOLUME   EQU   0                                                        01495000
VOLNUM   EQU   VOLUME                                                   01496000
VOLVAL   EQU   VOLUME+2                                                 01497000
CPUS     EQU   0                                                        01498000
CPUNUM   EQU   CPUS                                                     01499000
CPUVAL   EQU   CPUS+2                                                   01500000
CPUCUAS  EQU   0                                                        01501000
CPUCUAV  EQU   CPUCUAS+2                                                01502000
LIBADR   EQU   0                                                        01503000
SYMCODE  EQU   0                                                        01504000
SYMVAL   EQU   SYMCODE+2                                                01505000
MERIDIAN EQU   0                                                        01506000
COUNTER  EQU   0                                                        01507000
EDITCUA1 EQU   0                                                        01508000
ERTHRE   EQU   EDITCUA1+20                                              01509000
EWTHRE   EQU   EDITCUA1+23                                              01510000
SUMTABLE EQU   0                                                        01511000
SUMPTR   EQU   SUMTABLE                                                 01512000
SUMEDIT  EQU   SUMTABLE+4                                               01513000
NEXTENT  EQU   SUMTABLE+8                                               01514000
CNTSIZE  EQU   SUMTABLE+12                                              01515000
SUMHEAD  EQU   0                                                        01516000
NEXTTAB  EQU   SUMHEAD                                                  01517000
SUMIDENT EQU   SUMHEAD+4                                                01518000
MODNAME  EQU   SUMHEAD+12                                               01519000
CURRDEV  EQU   SUMHEAD+20                                               01520000
COUNTERS EQU   SUMHEAD+22                                               01521000
SUMENTRY EQU   0                                                        01522000
SUMFLAG  EQU   SUMENTRY                                                 01523000
SUMMASK  EQU   SUMENTRY+1                                               01524000
OFFSET   EQU   SUMENTRY+2                                               01525000
SUMSPEC  EQU   OFFSET                                                   01526000
CNTOFSET EQU   SUMENTRY+4                                               01527000
BUFFER   EQU   0                                                        01528000
RECTYP   EQU   BUFFER                                                   01529000
SWITCHE  EQU   BUFFER+2                                                 01530000
SW2      EQU   SWITCHE+1                                                01531000
SHORT    EQU   SW2                                                      01532000
SHRCUA   EQU   BUFFER+5                                                 01533000
DATE     EQU   BUFFER+8                                                 01534000
TIME     EQU   BUFFER+12                                                01535000
CPUIDENT EQU   BUFFER+17                                                01536000
CPUSER   EQU   CPUIDENT                                                 01537000
ODEVICE  EQU   BUFFER+52                                                01538000
DEV2     EQU   ODEVICE+2                                                01539000
OCUA     EQU   BUFFER+57                                                01540000
OCUA2    EQU   OCUA+1                                                   01541000
VOLID    EQU   BUFFER+64                                                01542000
OSER74XX EQU   BUFFER+123                                               01543000
CONTRTAB EQU   0                                                        01544000
CONTRVOL EQU   CONTRTAB                                                 01545000
CONTRCUA EQU   CONTRVOL                                                 01546000
EOTABLE  EQU   CONTRCUA                                                 01547000
CPU      EQU   CONTRVOL+3                                               01548000
TABCCHHR EQU   CONTRTAB+6                                               01549000
SUMMARY  EQU   0                                                        01550000
THRSHRC  EQU   0                                                        01551000
THRSHFLG EQU   THRSHRC+4                                                01552000
SPECIAL  EQU   0                                                        01553000
RECFLAG  EQU   0                                                        01554000
TABNBR   EQU   REPTYPE+3                                                01555000
STABNBR  EQU   SREPTYPE+3                                               01556000
TRECCH   EQU   TRECCH0                                                  01557000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01558000
@NM00031 EQU   THRSHRC                                                  01559000
@NM00026 EQU   BUFFER+70                                                01560000
@NM00025 EQU   BUFFER+60                                                01561000
@NM00024 EQU   OCUA                                                     01562000
@NM00023 EQU   BUFFER+56                                                01563000
@NM00022 EQU   ODEVICE                                                  01564000
@NM00021 EQU   BUFFER+22                                                01565000
CPUMOD   EQU   CPUIDENT+3                                               01566000
@NM00020 EQU   BUFFER+16                                                01567000
@NM00019 EQU   BUFFER+7                                                 01568000
@NM00018 EQU   BUFFER+4                                                 01569000
@NM00017 EQU   SW2                                                      01570000
@NM00016 EQU   SWITCHE                                                  01571000
@NM00015 EQU   BUFFER+1                                                 01572000
@NM00012 EQU   EDITCUA1                                                 01573000
MODEL    EQU   MERIDIAN+2                                               01574000
MRDNUMBR EQU   MERIDIAN                                                 01575000
SYMVAL2  EQU   SYMVAL+2                                                 01576000
SYMVAL1  EQU   SYMVAL                                                   01577000
SYMCDNUM EQU   SYMCODE                                                  01578000
LIBVAL   EQU   LIBADR+2                                                 01579000
LIBADNUM EQU   LIBADR                                                   01580000
CPUCUX3  EQU   CPUCUAV+5                                                01581000
CPUCUX2  EQU   CPUCUAV+3                                                01582000
CPUCUX1  EQU   CPUCUAV                                                  01583000
CPCUANUM EQU   CPUCUAS                                                  01584000
MODVAL   EQU   MODELS+2                                                 01585000
MODNUM   EQU   MODELS                                                   01586000
MDRVAL   EQU   DEVICE+204                                               01587000
MDRNUM   EQU   DEVICE+202                                               01588000
DEVVAL   EQU   DEVICE+2                                                 01589000
DEVNUM   EQU   DEVICE                                                   01590000
LOADPTR  EQU   EDITABLE+8                                               01591000
LOADNAME EQU   EDITABLE                                                 01592000
EDITNUM  EQU   EDITLOAD                                                 01593000
SHARLET  EQU   SHAREIO+15                                               01594000
SHRCUABH EQU   SHRBASE+5                                                01595000
SYSTEMP  EQU   SYSUM2+10                                                01596000
SYSPERM  EQU   SYSUM2+8                                                 01597000
SYSRANGE EQU   SYSUM2+7                                                 01598000
SYSDEV   EQU   SYSUM2+5                                                 01599000
SYSOLDA  EQU   SYSITEM                                                  01600000
SYS3705  EQU   SYSITEM                                                  01601000
SYSOLD   EQU   SYSCPUS                                                  01602000
SYSCPU   EQU   SYSCPUS                                                  01603000
SYSTROLL EQU   SYSRT+1                                                  01604000
SYSSPAN  EQU   SYSRT+1                                                  01605000
SYSCUA   EQU   SYSRT                                                    01606000
SYSGROUP EQU   SYSUMKEY                                                 01607000
SYSUMEOD EQU   SYSUMONE+96                                              01608000
SYSUMPER EQU   SYSUMONE+92                                              01609000
SYSUMPEA EQU   SYSUMONE+88                                              01610000
SYSUMPEI EQU   SYSUMONE+84                                              01611000
SYSUMCH  EQU   SYSUMONE+20                                              01612000
SYSUMMCN EQU   SYSUMONE+16                                              01613000
SYSUMMCR EQU   SYSUMONE+12                                              01614000
SYSUMNXT EQU   SYSUMONE+8                                               01615000
SYSUMIPL EQU   SYSUMONE+4                                               01616000
SYSUMNUM EQU   SYSUMONE                                                 01617000
SORTCORE EQU   SORTCCHR                                                 01618000
SORTTIME EQU   SORTKEY+1                                                01619000
SORTYEAR EQU   SORTKEY                                                  01620000
EVLETTER EQU   EVKEY+5                                                  01621000
EVSERIAL EQU   EVKEY+2                                                  01622000
EVMODEL  EQU   EVKEY                                                    01623000
EVNUM    EQU   EVTABLE+4                                                01624000
EVDAY    EQU   EVSTOP+1                                                 01625000
EVYEAR   EQU   EVSTOP                                                   01626000
TRETMP   EQU   TREND2+10                                                01627000
TREPRM   EQU   TREND2+8                                                 01628000
TRENDDEV EQU   TREND2+6                                                 01629000
TRENDDAT EQU   TRENDKEY+5                                               01630000
TRENDOD  EQU   TRENDITM                                                 01631000
TREND037 EQU   TRENDITM                                                 01632000
TRENDOLD EQU   TRENCPUS                                                 01633000
TRENDCPU EQU   TRENCPUS                                                 01634000
@NM00011 EQU   TRENDRT+1                                                01635000
TRENDCUA EQU   TRENDRT                                                  01636000
TRENDGRP EQU   TRENDKEY                                                 01637000
TREPRE   EQU   TREGEN+72                                                01638000
TRECCHF  EQU   TREGEN+68                                                01639000
TRECCHE  EQU   TREGEN+64                                                01640000
TRECCHD  EQU   TREGEN+60                                                01641000
TRECCHC  EQU   TREGEN+56                                                01642000
TRECCHB  EQU   TREGEN+52                                                01643000
TRECCHA  EQU   TREGEN+48                                                01644000
TRECCH9  EQU   TREGEN+44                                                01645000
TRECCH8  EQU   TREGEN+40                                                01646000
TRECCH7  EQU   TREGEN+36                                                01647000
TRECCH6  EQU   TREGEN+32                                                01648000
TRECCH5  EQU   TREGEN+28                                                01649000
TRECCH4  EQU   TREGEN+24                                                01650000
TRECCH3  EQU   TREGEN+20                                                01651000
TRECCH2  EQU   TREGEN+16                                                01652000
TRECCH1  EQU   TREGEN+12                                                01653000
TREMCH   EQU   TREGEN+4                                                 01654000
TREIPL   EQU   TREGEN                                                   01655000
TRENUM   EQU   TRENDONE+4                                               01656000
TRENEXT  EQU   TRENDONE                                                 01657000
DUMPSIZE EQU   DUMPINFO+4                                               01658000
DUMPADR  EQU   DUMPINFO                                                 01659000
DUMPNUM  EQU   DUMPTABL                                                 01660000
@NM00010 EQU   PARM+212                                                 01661000
RECLNGT1 EQU   PARM+204                                                 01662000
FRAMEPTR EQU   PARM+200                                                 01663000
ADCPUT   EQU   PARM+144                                                 01664000
LINECT   EQU   PARM+120                                                 01665000
RECLNGTH EQU   CCHHRLNG+6                                               01666000
@NM00009 EQU   CCHHRLNG+5                                               01667000
USERPGM  EQU   PARM+102                                                 01668000
IDTSEC   EQU   IDTIME+3                                                 01669000
IDSEC    EQU   IDTIME+2                                                 01670000
IDMIN    EQU   IDTIME+1                                                 01671000
IDHOUR   EQU   IDTIME                                                   01672000
IDASID   EQU   ERRID+4                                                  01673000
IDCPU    EQU   ERRID+3                                                  01674000
@NM00008 EQU   ERRID+2                                                  01675000
IDVALUE  EQU   ERRID                                                    01676000
NUMDAYS  EQU   PARM+88                                                  01677000
SYSRETRN EQU   @NM00007                                                 01678000
NUMIN222 EQU   @NM00006                                                 01679000
TERM     EQU   PARM+58                                                  01680000
EVSDAY   EQU   STRTDATE+1                                               01681000
EVSYEAR  EQU   STRTDATE                                                 01682000
PENSEC2  EQU   ENDTIME2+2                                               01683000
PENMIN2  EQU   ENDTIME2+1                                               01684000
PENHOUR2 EQU   ENDTIME2                                                 01685000
PSTSEC2  EQU   STTIME2+2                                                01686000
PSTMIN2  EQU   STTIME2+1                                                01687000
PSTHOUR2 EQU   STTIME2                                                  01688000
PENSEC1  EQU   ENDTIME1+2                                               01689000
PENMIN1  EQU   ENDTIME1+1                                               01690000
PENHOUR1 EQU   ENDTIME1                                                 01691000
PSTSEC1  EQU   STTIME1+2                                                01692000
PSTMIN1  EQU   STTIME1+1                                                01693000
PSTHOUR1 EQU   STTIME1                                                  01694000
@NM00005 EQU   ENDDT+4                                                  01695000
PENDY    EQU   PEND+1                                                   01696000
PENYR    EQU   PEND                                                     01697000
@NM00004 EQU   ENDDATE                                                  01698000
@NM00003 EQU   STDT+4                                                   01699000
PSTDY    EQU   PSTD+1                                                   01700000
PSTYR    EQU   PSTD                                                     01701000
@NM00002 EQU   STDATE                                                   01702000
YEARNOW  EQU   DATENOW+4                                                01703000
@NM00001 EQU   DATENOW+3                                                01704000
DAYNOW   EQU   DATENOW                                                  01705000
CSNAP    EQU   CLOSEIO                                                  01706000
CSYSIN   EQU   CLOSEIO                                                  01707000
CACCDEV  EQU   CLOSEIO                                                  01708000
CACCIN   EQU   CLOSEIO                                                  01709000
CEREPPT  EQU   CLOSEIO                                                  01710000
CTOURIST EQU   CLOSEIO                                                  01711000
OSNAP    EQU   OPENIO                                                   01712000
ODRCTWRK EQU   OPENIO                                                   01713000
OSYSIN   EQU   OPENIO                                                   01714000
OACCDEV  EQU   OPENIO                                                   01715000
OACCIN   EQU   OPENIO                                                   01716000
OSERLOG  EQU   OPENIO                                                   01717000
OEREPPT  EQU   OPENIO                                                   01718000
OTOURIST EQU   OPENIO                                                   01719000
PASSFLAG EQU   MISC                                                     01720000
ERRORID  EQU   MISC                                                     01721000
PACC     EQU   MISC                                                     01722000
PZERO    EQU   MISC                                                     01723000
DEBUG63  EQU   DEBUGA+3                                                 01724000
DEBUG62  EQU   DEBUGA+3                                                 01725000
DEBUG61  EQU   DEBUGA+3                                                 01726000
DEBUG60  EQU   DEBUGA+3                                                 01727000
DEBUG59  EQU   DEBUGA+3                                                 01728000
DEBUG58  EQU   DEBUGA+3                                                 01729000
DEBUG57  EQU   DEBUGA+3                                                 01730000
DEBUG56  EQU   DEBUGA+3                                                 01731000
DEBUG55  EQU   DEBUGA+2                                                 01732000
DEBUG54  EQU   DEBUGA+2                                                 01733000
DEBUG53  EQU   DEBUGA+2                                                 01734000
DEBUG52  EQU   DEBUGA+2                                                 01735000
DEBUG51  EQU   DEBUGA+2                                                 01736000
DEBUG50  EQU   DEBUGA+2                                                 01737000
DEBUG49  EQU   DEBUGA+2                                                 01738000
DEBUG48  EQU   DEBUGA+2                                                 01739000
DEBUG47  EQU   DEBUGA+1                                                 01740000
DEBUG46  EQU   DEBUGA+1                                                 01741000
DEBUG45  EQU   DEBUGA+1                                                 01742000
DEBUG44  EQU   DEBUGA+1                                                 01743000
DEBUG43  EQU   DEBUGA+1                                                 01744000
DEBUG42  EQU   DEBUGA+1                                                 01745000
DEBUG41  EQU   DEBUGA+1                                                 01746000
DEBUG40  EQU   DEBUGA+1                                                 01747000
DEBUG39  EQU   DEBUGA                                                   01748000
DEBUG38  EQU   DEBUGA                                                   01749000
DEBUG37  EQU   DEBUGA                                                   01750000
DEBUG36  EQU   DEBUGA                                                   01751000
DEBUG35  EQU   DEBUGA                                                   01752000
DEBUG34  EQU   DEBUGA                                                   01753000
DEBUG33  EQU   DEBUGA                                                   01754000
DEBUG32  EQU   DEBUGA                                                   01755000
DEBUG31  EQU   DEBUG+3                                                  01756000
DEBUG30  EQU   DEBUG+3                                                  01757000
DEBUG29  EQU   DEBUG+3                                                  01758000
DEBUG28  EQU   DEBUG+3                                                  01759000
DEBUG27  EQU   DEBUG+3                                                  01760000
DEBUG26  EQU   DEBUG+3                                                  01761000
DEBUG25  EQU   DEBUG+3                                                  01762000
DEBUG24  EQU   DEBUG+3                                                  01763000
DEBUG23  EQU   DEBUG+2                                                  01764000
DEBUG22  EQU   DEBUG+2                                                  01765000
DEBUG21  EQU   DEBUG+2                                                  01766000
DEBUG20  EQU   DEBUG+2                                                  01767000
DEBUG19  EQU   DEBUG+2                                                  01768000
DEBUG18  EQU   DEBUG+2                                                  01769000
DEBUG17  EQU   DEBUG+2                                                  01770000
DEBUG16  EQU   DEBUG+2                                                  01771000
DEBUG15  EQU   DEBUG+1                                                  01772000
DEBUG14  EQU   DEBUG+1                                                  01773000
DEBUG13  EQU   DEBUG+1                                                  01774000
DEBUG10  EQU   DEBUG+1                                                  01775000
DEBUG9   EQU   DEBUG+1                                                  01776000
DEBUG8   EQU   DEBUG+1                                                  01777000
DEBUG7   EQU   DEBUG                                                    01778000
DEBUG6   EQU   DEBUG                                                    01779000
DEBUG5   EQU   DEBUG                                                    01780000
DEBUG3   EQU   DEBUG                                                    01781000
DEBUG2   EQU   DEBUG                                                    01782000
DEBUG1   EQU   DEBUG                                                    01783000
DEBUG0   EQU   DEBUG                                                    01784000
SORTBRK  EQU   SWITCHES+1                                               01785000
COREFAIL EQU   SWITCHES+1                                               01786000
ANALYSIS EQU   SWITCHES+1                                               01787000
DEVEXCL  EQU   SWITCHES+1                                               01788000
ZEROALL  EQU   SWITCHES+1                                               01789000
NOTALL   EQU   SWITCHES+1                                               01790000
NOSDR    EQU   SWITCHES                                                 01791000
TIMESEQ  EQU   SWITCHES                                                 01792000
SYSUM    EQU   SWITCHES                                                 01793000
TREND    EQU   SWITCHES                                                 01794000
SHORTOBR EQU   SWITCHES                                                 01795000
PARMMES  EQU   SWITCHES                                                 01796000
RDESUM   EQU   SWITCHES                                                 01797000
PCCHFRAM EQU   RECTYPE+1                                                01798000
PMCHFRAM EQU   RECTYPE+1                                                01799000
PTTYP    EQU   RECTYPE+1                                                01800000
PEOD     EQU   RECTYPE                                                  01801000
PMIH     EQU   RECTYPE                                                  01802000
PDDR     EQU   RECTYPE                                                  01803000
PIPL     EQU   RECTYPE                                                  01804000
PSOFT    EQU   RECTYPE                                                  01805000
POBR     EQU   RECTYPE                                                  01806000
PCHAN    EQU   RECTYPE                                                  01807000
PMCH     EQU   RECTYPE                                                  01808000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01809000
@RF00146 EQU   @RC00144                                                 01810000
@PB00006 EQU   @PB00007                                                 01811000
@RF00396 EQU   @EL00001                                                 01812000
@PB00005 EQU   @PB00006                                                 01813000
@PB00004 EQU   @PB00005                                                 01814000
@PB00003 EQU   @PB00004                                                 01815000
@PB00002 EQU   @PB00003                                                 01816000
@ENDDATA EQU   *                                                        01817000
         END   IFCMES01                                                 01818000
