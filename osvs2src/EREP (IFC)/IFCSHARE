         TITLE 'IFCSHARE-SHARE/CONTROLLER CARD MODULE'                  00001000
IFCSHARE CSECT ,                                                   0001 00002000
@MAINENT DS    0H                                                  0001 00003000
         USING *,@15                                               0001 00004000
         B     @PROLOG                                             0001 00005000
         DC    AL1(16)                                             0001 00006000
         DC    C'IFCSHARE  79.011'                                 0001 00007000
         DROP  @15                                                      00008000
@PROLOG  ST    @14,12(,@13)                                        0001 00009000
         STM   @00,@04,20(@13)                                     0001 00010000
         STM   @06,@12,44(@13)                                     0001 00011000
         BALR  @12,0                                               0001 00012000
@PSTART  LA    @11,4095(,@12)                                      0001 00013000
         USING @PSTART,@12                                         0001 00014000
         USING @PSTART+4095,@11                                    0001 00015000
         ST    @13,@SA00001+4                                      0001 00016000
         LA    @14,@SA00001                                        0001 00017000
         ST    @14,8(,@13)                                         0001 00018000
         LR    @13,@14                                             0001 00019000
         MVC   @PC00001(4),0(@01)                                  0001 00020000
*                                                                  0107 00021000
*/********************************************************************/ 00022000
*/*                                                                  */ 00023000
*/*  THIS IS THE TOP UNIT OF IFCSHARE. THIS UNIT WILL READ THE       */ 00024000
*/*  INPUT CARD AND DETERMINE WHAT TYPE OF PROCESSING IS NEEDED FOR  */ 00025000
*/*  EACH CARD. WHEN ALL CARDS ARE PROCESSED THIS UNIT WILL CALL     */ 00026000
*/*  SHARLTR TO ASSIGN LETTERS TO ALL ENTRIES IN THE TABLE BUILT.    */ 00027000
*/*  NEXT THIS UNIT WILL CALL DEBUG TO PRINT OUT THE DEBUG PRINT.    */ 00028000
*/*                                                                  */ 00029000
*/********************************************************************/ 00030000
*                                                                  0107 00031000
*   LENGPARM=(TABSIZE-LENGTH(SHARENUM))/ENTRYLEN;/* MAX # OF ENTRIES */ 00032000
         L     @00,TABSIZE(,R2)                                    0107 00033000
         BCTR  @00,0                                               0107 00034000
         BCTR  @00,0                                               0107 00035000
         SRDA  @00,32                                              0107 00036000
         D     @00,@CF00089                                        0107 00037000
         ST    @01,LENGPARM                                        0107 00038000
*   RESPECIFY                                                      0108 00039000
*    (R7) RESTRICTED;                                              0108 00040000
*   CALL IOHND(READCARD);           /* READ A CARD. PRT IN R7        */ 00041000
         L     @15,ADIOHND(,R2)                                    0109 00042000
         LA    @01,@AL00109                                        0109 00043000
         BALR  @14,@15                                             0109 00044000
*   RESPECIFY                                                      0110 00045000
*    (R15) RESTRICTED;                                             0110 00046000
*   INDEX2=ZERO;                    /* NUMBER OF ENTRIES IN TABLE    */ 00047000
         SLR   @14,@14                                             0111 00048000
         ST    @14,INDEX2                                          0111 00049000
*   IF R15=ZERO THEN                /* NOT END OF FILE               */ 00050000
         CR    R15,@14                                             0112 00051000
         BNE   @RF00112                                            0112 00052000
*     DO UNTIL(R15^=ZERO);                                         0113 00053000
@DL00113 DS    0H                                                  0114 00054000
*       PARMFLD(1:80)=CARD(1:80);   /* MOVE CARD READ                */ 00055000
         MVC   PARMFLD(80),CARD(R7)                                0114 00056000
*       PARMFLD(81)=BLANK;          /* START TO BLANK LINE           */ 00057000
         MVI   PARMFLD+80,C' '                                     0115 00058000
*       RESPECIFY                                                  0116 00059000
*        (R7,                                                      0116 00060000
*         R15) UNRESTRICTED;                                       0116 00061000
*       PARMFLD(82:100)=PARMFLD(81:99);/* CLEAR REMAINDER OF AREA    */ 00062000
         MVC   @TS00001(19),PARMFLD+80                             0117 00063000
         MVC   PARMFLD+81(19),@TS00001                             0117 00064000
*       PARMPRT(1:ENDCARD)=PARMFLD(1:ENDCARD);/* PRINT THE CARD READ */ 00065000
         MVC   PARMPRT(72),PARMFLD                                 0118 00066000
*       PRINTADR=ADDR(PARMPT);                                     0119 00067000
         LA    @10,PARMPT                                          0119 00068000
         ST    @10,PRINTADR(,R2)                                   0119 00069000
*       CALL IOHND(RITEPRTR);                                      0120 00070000
         L     @15,ADIOHND(,R2)                                    0120 00071000
         LA    @01,@AL00120                                        0120 00072000
         BALR  @14,@15                                             0120 00073000
*       IF PARMFLD(1)^=STAR THEN    /* TEST FOR COMMENT CARD         */ 00074000
         CLI   PARMFLD,C'*'                                        0121 00075000
         BE    @RF00121                                            0121 00076000
*         DO;                       /* FIND FIRST NON-BLANK          */ 00077000
*           DO INDEX1=1 TO ENDCARD BY 1 WHILE(PARMFLD(INDEX1)=BLANK);   00078000
         LA    INDEX1,1                                            0123 00079000
@DL00123 LA    @10,PARMFLD-1(INDEX1)                               0123 00080000
         CLI   0(@10),C' '                                         0123 00081000
         BNE   @DC00123                                            0123 00082000
*           END;                                                   0124 00083000
         AH    INDEX1,@CH00053                                     0124 00084000
         CH    INDEX1,@CH00596                                     0124 00085000
         BNH   @DL00123                                            0124 00086000
@DC00123 DS    0H                                                  0125 00087000
*           IF INDEX1<ENDCARD THEN  /* IS CARD BLANK                 */ 00088000
         CH    INDEX1,@CH00596                                     0125 00089000
         BNL   @RF00125                                            0125 00090000
*             IF PARMFLD(INDEX1:INDEX1+LENGTH(CONTRWD)-1)=CONTRWD THEN  00091000
         LA    @10,PARMFLD-1(INDEX1)                               0126 00092000
         CLC   0(10,@10),CONTRWD                                   0126 00093000
         BNE   @RF00126                                            0126 00094000
*               CALL CONTROL;       /* PROCESS CONTROLLER CARD       */ 00095000
         BAL   @14,CONTROL                                         0127 00096000
*             ELSE                                                 0128 00097000
*               IF PARMFLD(INDEX1:INDEX1+LENGTH(SHAREW)-1)=SHAREW THEN  00098000
         B     @RC00126                                            0128 00099000
@RF00126 LA    @10,PARMFLD-1(INDEX1)                               0128 00100000
         CLC   0(5,@10),SHAREW                                     0128 00101000
         BNE   @RF00128                                            0128 00102000
*                 CALL SHARECRD;    /* PROCESS SHARE CARD            */ 00103000
         BAL   @14,SHARECRD                                        0129 00104000
*               ELSE                                               0130 00105000
*                 CALL OUTMSG(SYNTAX);/* ++++++UNKNOWN TYPE+++++++++ */ 00106000
         B     @RC00128                                            0130 00107000
@RF00128 LA    @01,@AL00130                                        0130 00108000
         BAL   @14,OUTMSG                                          0130 00109000
*           ELSE                                                   0131 00110000
*             ;                     /* BLANK CARD                    */ 00111000
@RF00125 DS    0H                                                  0132 00112000
*         END;                                                     0132 00113000
*       ELSE                                                       0133 00114000
*         ;                         /* COMMENT CARD IGNORE           */ 00115000
@RF00121 DS    0H                                                  0134 00116000
*       RESPECIFY                                                  0134 00117000
*        (R7) RESTRICTED;                                          0134 00118000
@RC00121 DS    0H                                                  0135 00119000
*       CALL IOHND(READCARD);       /* READ NEXT CARD                */ 00120000
         L     @15,ADIOHND(,R2)                                    0135 00121000
         LA    @01,@AL00135                                        0135 00122000
         BALR  @14,@15                                             0135 00123000
*       RESPECIFY                                                  0136 00124000
*        (R15) RESTRICTED;                                         0136 00125000
*     END;                                                         0137 00126000
@DE00113 LTR   R15,R15                                             0137 00127000
         BZ    @DL00113                                            0137 00128000
*   ELSE                                                           0138 00129000
*     ;                             /* NO INPUT CARDS READ           */ 00130000
@RF00112 DS    0H                                                  0139 00131000
*   IF TABFULL=ON THEN              /* SEE IF TABLE IS FULL          */ 00132000
         TM    TABFULL,B'01000000'                                 0139 00133000
         BNO   @RF00139                                            0139 00134000
*     CALL MSGTABFL;                /* PRINT TABLE FULL MESSAGE      */ 00135000
         BAL   @14,MSGTABFL                                        0140 00136000
*   ELSE                                                           0141 00137000
*     ;                             /* TABLE NOT FULL                */ 00138000
@RF00139 DS    0H                                                  0142 00139000
*   CALL SHARLTR;                   /* ASSIGN LETTERS TO EACH CPU    */ 00140000
         BAL   @14,SHARLTR                                         0142 00141000
*   IF DEBUG3=ON&INDEX2^=ZERO THEN  /* IS DEBUG OUTPUT WANTED        */ 00142000
         TM    DEBUG3(R2),B'00010000'                              0143 00143000
         BNO   @RF00143                                            0143 00144000
         L     @14,INDEX2                                          0143 00145000
         LTR   @14,@14                                             0143 00146000
         BZ    @RF00143                                            0143 00147000
*     DO;                                                          0144 00148000
*       SHARENUM=INDEX2;            /* STORE NUMBER OF ENTRIES       */ 00149000
         L     @10,SHAREPTR(,R2)                                   0145 00150000
         STH   @14,SHARENUM(,@10)                                  0145 00151000
*       CALL DEBUGOUT;              /* PRINT SHARE/CONTROLLER TABLE  */ 00152000
         BAL   @14,DEBUGOUT                                        0146 00153000
*     END;                                                         0147 00154000
*   ELSE                                                           0148 00155000
*     ;                             /* NO DEBUG OUTPUT REQUESTED     */ 00156000
@RF00143 DS    0H                                                  0149 00157000
*   IF INDEX2=ZERO|RETCODE^=ZERO THEN/* NO ENTRIES OR ERROR          */ 00158000
         SLR   @14,@14                                             0149 00159000
         C     @14,INDEX2                                          0149 00160000
         BE    @RT00149                                            0149 00161000
         L     @10,@PC00001                                        0149 00162000
         C     @14,RETCODE(,@10)                                   0149 00163000
         BE    @RF00149                                            0149 00164000
@RT00149 DS    0H                                                  0150 00165000
*     DO;                           /* FREE ENTIRE TABLE             */ 00166000
*       RESPECIFY                                                  0151 00167000
*        (R7,                                                      0151 00168000
*         R15) UNRESTRICTED;                                       0151 00169000
*       RESPECIFY                                                  0152 00170000
*        (R1,                                                      0152 00171000
*         R0) RESTRICTED;                                          0152 00172000
*       R1=SHAREPTR;                /* ADDRESS OF AREA TO FREE       */ 00173000
         L     R1,SHAREPTR(,R2)                                    0153 00174000
*       R0=TABSIZE;                 /* RELEASE ENTIRE SPACE          */ 00175000
         L     R0,TABSIZE(,R2)                                     0154 00176000
*       GEN(FREEMAIN R,LV=(R0),A=(R1));                            0155 00177000
         FREEMAIN R,LV=(R0),A=(R1)                                      00178000
*       SHAREPTR=ZERO;              /* SHARE TABLE IS RELEASED       */ 00179000
         SLR   @10,@10                                             0156 00180000
         ST    @10,SHAREPTR(,R2)                                   0156 00181000
*     END;                                                         0157 00182000
*   ELSE                                                           0158 00183000
*     DO;                                                          0158 00184000
         B     @RC00149                                            0158 00185000
@RF00149 DS    0H                                                  0159 00186000
*       SHARENUM=INDEX2;            /* PUT # OF ENTRIES IN TABLE     */ 00187000
         L     @10,INDEX2                                          0159 00188000
         L     @04,SHAREPTR(,R2)                                   0159 00189000
         STH   @10,SHARENUM(,@04)                                  0159 00190000
*       INDEX2=INDEX2+ONE;          /* EXTRA ENTRY IN TABLE          */ 00191000
         AL    @10,@CF00053                                        0160 00192000
         ST    @10,INDEX2                                          0160 00193000
*       SHAREIO(INDEX2)=SHAREIO(INDEX2)&&SHAREIO(INDEX2);          0161 00194000
         SLA   @10,4                                               0161 00195000
         ST    @10,@TF00001                                        0161 00196000
         ALR   @10,@04                                             0161 00197000
         AL    @10,@CF00727                                        0161 00198000
         XC    SHAREIO-2(16,@10),SHAREIO-2(@10)                    0161 00199000
*       INDEX2=INDEX2*ENTRYLEN+LENGTH(SHARENUM);/* TABLE SIZE        */ 00200000
         LA    @10,2                                               0162 00201000
         AL    @10,@TF00001                                        0162 00202000
         ST    @10,INDEX2                                          0162 00203000
*       R0=(TABSIZE-INDEX2)&'FFFFFF80'X;/* AMOUNT (DOUBLE WORD)      */ 00204000
         L     @03,TABSIZE(,R2)                                    0163 00205000
         LCR   @10,@10                                             0163 00206000
         ALR   @10,@03                                             0163 00207000
         N     @10,@CF00638                                        0163 00208000
         LR    R0,@10                                              0163 00209000
*       R1=SHAREPTR+TABSIZE-R0;     /* PLACE TO FREE FROM            */ 00210000
         ALR   @04,@03                                             0164 00211000
         SLR   @04,R0                                              0164 00212000
         LR    R1,@04                                              0164 00213000
*       GEN(FREEMAIN R,LV=(R0),A=(R1));/* FREE SHARE TABLE           */ 00214000
         FREEMAIN R,LV=(R0),A=(R1)                                      00215000
*       RESPECIFY                                                  0166 00216000
*        (R0,                                                      0166 00217000
*         R1) UNRESTRICTED;                                        0166 00218000
*     END;                                                         0167 00219000
*   RESPECIFY                                                      0168 00220000
*    (R15) RESTRICTED;                                             0168 00221000
@RC00149 DS    0H                                                  0169 00222000
*   R15=RETCODE;                    /* SET RETURN CODE               */ 00223000
         L     @10,@PC00001                                        0169 00224000
         L     R15,RETCODE(,@10)                                   0169 00225000
*   RESPECIFY                                                      0170 00226000
*    (R15) UNRESTRICTED;                                           0170 00227000
*                                                                  0171 00228000
*/********************************************************************/ 00229000
*/*                                                                  */ 00230000
*/*  THIS PROC WILL CONTROL THE PROCESSING OF CONTROLLER CARDS. IT   */ 00231000
*/*  CALLS SHARECPU TO VALIDATE ALL CPU/CUA PAIRS ON THE CARD.       */ 00232000
*/*  THIS MODULE BUILDS A CONTROLLER ENTRY IN THE SHARE/CONTROLLER   */ 00233000
*/*  TABLE FOR ALL VALID ENTRIES FOUND. IT RETURNS CONTROL TO        */ 00234000
*/*  PROC IFCSHARE.                                                  */ 00235000
*/*                                                                  */ 00236000
*/********************************************************************/ 00237000
*                                                                  0171 00238000
*CONTROL:                                                          0171 00239000
*   PROC OPTIONS(DONTSAVE(R5,R15));                                0171 00240000
@EL00001 L     @13,4(,@13)                                         0171 00241000
@EF00001 DS    0H                                                  0171 00242000
@ER00001 L     @14,12(,@13)                                        0171 00243000
         LM    @00,@04,20(@13)                                     0171 00244000
         LM    @06,@12,44(@13)                                     0171 00245000
         BR    @14                                                 0171 00246000
CONTROL  ST    @14,@SA00002                                        0171 00247000
         STM   @00,@04,@SA00002+4                                  0171 00248000
         STM   @06,@12,@SA00002+24                                 0171 00249000
*   INDEX1=INDEX1+LENGTH(CONTRWD);  /* POINT TO '='                  */ 00250000
         AH    INDEX1,@CH00277                                     0172 00251000
*   IF PARMFLD(INDEX1)^=EQUAL THEN                                 0173 00252000
         LA    @10,PARMFLD-1(INDEX1)                               0173 00253000
         CLI   0(@10),C'='                                         0173 00254000
         BE    @RF00173                                            0173 00255000
*     CALL OUTMSG(SYNTAX);          /* NO VALID INPUT FOUND          */ 00256000
         LA    @01,@AL00174                                        0174 00257000
         BAL   @14,OUTMSG                                          0174 00258000
*   ELSE                                                           0175 00259000
*     IF PARMFLD(INDEX1+1)^=LPAREN THEN                            0175 00260000
         B     @RC00173                                            0175 00261000
@RF00173 LA    @10,PARMFLD(INDEX1)                                 0175 00262000
         CLI   0(@10),C'('                                         0175 00263000
         BE    @RF00175                                            0175 00264000
*       DO;                                                        0176 00265000
*         INDEX1=INDEX1+ONE;        /* POINT TO '('                  */ 00266000
         AL    INDEX1,@CF00053                                     0177 00267000
*         CALL OUTMSG(SYNTAX);      /* OPENING '(' MISSING           */ 00268000
         LA    @01,@AL00178                                        0178 00269000
         BAL   @14,OUTMSG                                          0178 00270000
*       END;                                                       0179 00271000
*     ELSE                                                         0180 00272000
*       DO;                                                        0180 00273000
         B     @RC00175                                            0180 00274000
@RF00175 DS    0H                                                  0181 00275000
*         INDEX1=INDEX1+ONE;        /* POINT TO '('                  */ 00276000
         AL    INDEX1,@CF00053                                     0181 00277000
*         DO UNTIL(INDEX1>=ENDCARD|PARMFLD(INDEX1)^=COMMA);/* PROCESS   00278000
*                                      OTHERS                        */ 00279000
@DL00182 DS    0H                                                  0183 00280000
*           INDEX1=INDEX1+ONE;      /* POINT TO CPU #                */ 00281000
         AL    INDEX1,@CF00053                                     0183 00282000
*           CALL SHARECPU;          /* VALIDATE CPU/CUA              */ 00283000
         BAL   @14,SHARECPU                                        0184 00284000
*           RESPECIFY                                              0185 00285000
*            (R15) RESTRICTED;                                     0185 00286000
*           IF R15=ZERO THEN        /* VALID CPU/CUA                 */ 00287000
         LTR   R15,R15                                             0186 00288000
         BNZ   @RF00186                                            0186 00289000
*             IF INDEX2<LENGPARM THEN/* ROOM IN TABLE                */ 00290000
         L     @14,INDEX2                                          0187 00291000
         C     @14,LENGPARM                                        0187 00292000
         BNL   @RF00187                                            0187 00293000
*               DO;                 /* ADD AN ENTRY                  */ 00294000
*                 RESPECIFY                                        0189 00295000
*                  (R15) UNRESTRICTED;                             0189 00296000
*                 INDEX2=INDEX2+ONE;/* NUMBER OF ENTRIES             */ 00297000
         AL    @14,@CF00053                                        0190 00298000
         ST    @14,INDEX2                                          0190 00299000
*                 SHAREFLG(INDEX2)=CHARC;/* CONTROLLER CARD FLAG     */ 00300000
         SLA   @14,4                                               0191 00301000
         L     @10,SHAREPTR(,R2)                                   0191 00302000
         ST    @14,@TF00001                                        0191 00303000
         ALR   @14,@10                                             0191 00304000
         AL    @14,@CF00727                                        0191 00305000
         MVI   SHAREFLG-2(@14),C'C'                                0191 00306000
*                 SHRBASE(INDEX2)=KEYWORD(1:7);/* BASE CPU/CUA IN  0192 00307000
*                                      TABLE                         */ 00308000
         LR    @04,@10                                             0192 00309000
         AL    @04,@TF00001                                        0192 00310000
         AL    @04,@CF00728                                        0192 00311000
         MVC   SHRBASE-3(7,@04),KEYWORD                            0192 00312000
*                 SHRCUCPU(INDEX2)=KEYWORD(1:7);/* ALT CPU/CUA IN  0193 00313000
*                                      TABLE                         */ 00314000
         LR    @04,@10                                             0193 00315000
         AL    @04,@TF00001                                        0193 00316000
         AL    @04,@CF00729                                        0193 00317000
         MVC   SHRCUCPU-10(7,@04),KEYWORD                          0193 00318000
*                 SHARLET(INDEX2)=STAR;/* INDICATE BASE ENTRY        */ 00319000
         AL    @10,@TF00001                                        0194 00320000
         MVI   SHARLET-16(@10),C'*'                                0194 00321000
*               END;                                               0195 00322000
*             ELSE                                                 0196 00323000
*               TABFULL=ON;         /* TABLE FULL ERROR              */ 00324000
         B     @RC00187                                            0196 00325000
@RF00187 OI    TABFULL,B'01000000'                                 0196 00326000
*           ELSE                                                   0197 00327000
*             ;                     /* RETURN CODE =12 FROM SHARECPU */ 00328000
@RF00186 DS    0H                                                  0198 00329000
*         END;                                                     0198 00330000
@RC00186 DS    0H                                                  0198 00331000
@DE00182 CH    INDEX1,@CH00596                                     0198 00332000
         BNL   @DC00182                                            0198 00333000
         LA    @10,PARMFLD-1(INDEX1)                               0198 00334000
         CLI   0(@10),C','                                         0198 00335000
         BE    @DL00182                                            0198 00336000
@DC00182 DS    0H                                                  0199 00337000
*         IF(PARMFLD(INDEX1)^=RPAREN&PARMFLD(INDEX1)^=BLANK) THEN  0199 00338000
         LA    @10,PARMFLD-1(INDEX1)                               0199 00339000
         CLI   0(@10),C')'                                         0199 00340000
         BE    @RF00199                                            0199 00341000
         LA    @10,PARMFLD-1(INDEX1)                               0199 00342000
         CLI   0(@10),C' '                                         0199 00343000
         BE    @RF00199                                            0199 00344000
*           CALL OUTMSG(SYNTAX);    /* CLOSING ')' MISSING           */ 00345000
         LA    @01,@AL00200                                        0200 00346000
         BAL   @14,OUTMSG                                          0200 00347000
*         ELSE                                                     0201 00348000
*           ;                       /* CLOSING ')' FOUND             */ 00349000
@RF00199 DS    0H                                                  0202 00350000
*       END;                                                       0202 00351000
*   END CONTROL;                                                   0203 00352000
@EL00002 DS    0H                                                  0203 00353000
@EF00002 DS    0H                                                  0203 00354000
@ER00002 L     @14,@SA00002                                        0203 00355000
         LM    @00,@04,@SA00002+4                                  0203 00356000
         LM    @06,@12,@SA00002+24                                 0203 00357000
         BR    @14                                                 0203 00358000
*                                                                  0204 00359000
*/********************************************************************/ 00360000
*/*                                                                  */ 00361000
*/*  THIS PROC WILL CONTROL THE PROCESSING OF SHARE CARDS. IT        */ 00362000
*/*  CALLS SHARECPU TO VALIDATE ALL CPU/CUA PAIRS AND BUILDS NEW     */ 00363000
*/*  SHARE ENTRIES IN THE TABLE.                                     */ 00364000
*/*                                                                  */ 00365000
*/********************************************************************/ 00366000
*                                                                  0204 00367000
*SHARECRD:                                                         0204 00368000
*   PROC OPTIONS(DONTSAVE(R5,R15));                                0204 00369000
SHARECRD ST    @14,@SA00003                                        0204 00370000
         STM   @00,@04,@SA00003+4                                  0204 00371000
         STM   @06,@12,@SA00003+24                                 0204 00372000
*   INDEX1=INDEX1+LENGTH(SHAREW);   /* POINT PASS WORD 'SHARE'       */ 00373000
         AH    INDEX1,@CH00079                                     0205 00374000
*   IF PARMFLD(INDEX1)^=EQUAL THEN  /* LOOK FOR '='                  */ 00375000
         LA    @10,PARMFLD-1(INDEX1)                               0206 00376000
         CLI   0(@10),C'='                                         0206 00377000
         BE    @RF00206                                            0206 00378000
*     CALL OUTMSG(SYNTAX);          /* CARD NOT PROCESSED,= MISSING  */ 00379000
         LA    @01,@AL00207                                        0207 00380000
         BAL   @14,OUTMSG                                          0207 00381000
*   ELSE                                                           0208 00382000
*     IF PARMFLD(INDEX1+1)^=LPAREN THEN/* LOOK FOR '('               */ 00383000
         B     @RC00206                                            0208 00384000
@RF00206 LA    @10,PARMFLD(INDEX1)                                 0208 00385000
         CLI   0(@10),C'('                                         0208 00386000
         BE    @RF00208                                            0208 00387000
*       DO INDEX1=INDEX1+ONE;       /* POINT TO MISSING '('          */ 00388000
         LA    @10,1                                               0209 00389000
         ALR   @10,INDEX1                                          0209 00390000
         LR    INDEX1,@10                                          0209 00391000
*         CALL OUTMSG(SYNTAX);      /* WRITE ERROR MESSAGE           */ 00392000
         LA    @01,@AL00210                                        0210 00393000
         BAL   @14,OUTMSG                                          0210 00394000
*       END;                                                       0211 00395000
*     ELSE                                                         0212 00396000
*       DO;                         /* SYTAX CORRECT =( FOUND        */ 00397000
         B     @RC00208                                            0212 00398000
@RF00208 DS    0H                                                  0213 00399000
*         INDEX1=INDEX1+TWO;        /* POINT PASS '=('               */ 00400000
         AH    INDEX1,@CH00074                                     0213 00401000
*         CALL SHARECPU;            /* VALIDATE BASE CPU/CUA         */ 00402000
         BAL   @14,SHARECPU                                        0214 00403000
*         RESPECIFY                                                0215 00404000
*          (R15) RESTRICTED;                                       0215 00405000
*         IF R15=ZERO THEN          /* TEST RETURN CODE              */ 00406000
         LTR   R15,R15                                             0216 00407000
         BNZ   @RF00216                                            0216 00408000
*           DO;                     /* PROCEED WITH RC=0             */ 00409000
*             RESPECIFY                                            0218 00410000
*              (R15) UNRESTRICTED;                                 0218 00411000
*             BASENTRY=KEYWORD(1:7);/* SAVE BASE CPU/CUA             */ 00412000
         MVC   BASENTRY(7),KEYWORD                                 0219 00413000
*             CALL BASEALT;         /* IS BASE CPU/CUA ALSO AN ALT   */ 00414000
         BAL   @14,BASEALT                                         0220 00415000
*             SWITCH=OFF;           /* DO LOOP CONTROL               */ 00416000
         NI    SWITCH,B'11011111'                                  0221 00417000
*             IF INDEX2^=ZERO THEN  /* TEST FOR EMPTY TABLE          */ 00418000
         L     @10,INDEX2                                          0222 00419000
         LTR   @10,@10                                             0222 00420000
         BZ    @RF00222                                            0222 00421000
*               DO I=1 TO INDEX2 BY 1 WHILE(SWITCH=OFF);/* TEST      */ 00422000
         LA    @10,1                                               0223 00423000
         ST    @10,I                                               0223 00424000
         B     @DE00223                                            0223 00425000
@DL00223 TM    SWITCH,B'00100000'                                  0223 00426000
         BNZ   @DC00223                                            0223 00427000
*                 IF SHAREFLG(I)=CHARS THEN/* FOR DUPLICATE ENTRY    */ 00428000
         SLA   @10,4                                               0224 00429000
         L     @04,SHAREPTR(,R2)                                   0224 00430000
         ST    @10,@TF00001                                        0224 00431000
         ALR   @10,@04                                             0224 00432000
         AL    @10,@CF00727                                        0224 00433000
         CLI   SHAREFLG-2(@10),C'S'                                0224 00434000
         BNE   @RF00224                                            0224 00435000
*                   IF SHRBASE(I)=KEYWORD(1:7) THEN/* ENTRY IDENTICAL*/ 00436000
         AL    @04,@TF00001                                        0225 00437000
         AL    @04,@CF00728                                        0225 00438000
         CLC   SHRBASE-3(7,@04),KEYWORD                            0225 00439000
         BNE   @RF00225                                            0225 00440000
*                     SWITCH=ON;    /* GET OUT OF LOOP               */ 00441000
         OI    SWITCH,B'00100000'                                  0226 00442000
*                   ELSE                                           0227 00443000
*                     ;             /* ENTRY DOES NOT MATCH          */ 00444000
@RF00225 DS    0H                                                  0228 00445000
*                 ELSE                                             0228 00446000
*                   ;               /* ENTRY IS NOT SHARE ENTRY      */ 00447000
@RF00224 DS    0H                                                  0229 00448000
*               END;                                               0229 00449000
         LA    @10,1                                               0229 00450000
         AL    @10,I                                               0229 00451000
         ST    @10,I                                               0229 00452000
@DE00223 C     @10,INDEX2                                          0229 00453000
         BNH   @DL00223                                            0229 00454000
@DC00223 DS    0H                                                  0230 00455000
*             ELSE                                                 0230 00456000
*               ;                   /* TABLE IS EMPTY                */ 00457000
@RF00222 DS    0H                                                  0231 00458000
*             IF SWITCH=OFF THEN    /* TEST FOR ENTRY NOT FOUND      */ 00459000
         TM    SWITCH,B'00100000'                                  0231 00460000
         BNZ   @RF00231                                            0231 00461000
*               DO;                 /* BUILD A NEW ENTRY             */ 00462000
*                 IF INDEX2>=LENGPARM THEN/* TEST FOR FULL TABLE     */ 00463000
         L     @10,INDEX2                                          0233 00464000
         C     @10,LENGPARM                                        0233 00465000
         BL    @RF00233                                            0233 00466000
*                   TABFULL=ON;     /* INDICATE FULL TABLE           */ 00467000
         OI    TABFULL,B'01000000'                                 0234 00468000
*                 ELSE                                             0235 00469000
*                   DO;             /* BUILD NEW TABLE ENTRY FOR BASE*/ 00470000
         B     @RC00233                                            0235 00471000
@RF00233 DS    0H                                                  0236 00472000
*                     INDEX2=INDEX2+ONE;/* NUMBER OF ENTRIES         */ 00473000
         LA    @10,1                                               0236 00474000
         AL    @10,INDEX2                                          0236 00475000
         ST    @10,INDEX2                                          0236 00476000
*                     SHAREFLG(INDEX2)=CHARS;/* SET SHARE FLAG       */ 00477000
         SLA   @10,4                                               0237 00478000
         L     @04,SHAREPTR(,R2)                                   0237 00479000
         ST    @10,@TF00001                                        0237 00480000
         ALR   @10,@04                                             0237 00481000
         AL    @10,@CF00727                                        0237 00482000
         MVI   SHAREFLG-2(@10),C'S'                                0237 00483000
*                     SHRBASE(INDEX2)=KEYWORD(1:7);/* BASE CPU/CUA   */ 00484000
         LR    @10,@04                                             0238 00485000
         AL    @10,@TF00001                                        0238 00486000
         AL    @10,@CF00728                                        0238 00487000
         MVC   SHRBASE-3(7,@10),KEYWORD                            0238 00488000
*                     SHRCUCPU(INDEX2)=KEYWORD(1:7);/* ALT CPU/CUA   */ 00489000
         LR    @10,@04                                             0239 00490000
         AL    @10,@TF00001                                        0239 00491000
         AL    @10,@CF00729                                        0239 00492000
         MVC   SHRCUCPU-10(7,@10),KEYWORD                          0239 00493000
*                     SHARLET(INDEX2)=STAR;/* INDICATE BASE ENTRY    */ 00494000
         AL    @04,@TF00001                                        0240 00495000
         MVI   SHARLET-16(@04),C'*'                                0240 00496000
*                   END;                                           0241 00497000
*               END;                                               0242 00498000
*             ELSE                                                 0243 00499000
*               ;                   /* DON'T BUILD DUPLICATE ENTRY   */ 00500000
@RF00231 DS    0H                                                  0244 00501000
*             IF INDEX1<ENDCARD&PARMFLD(INDEX1)=COMMA THEN/* ALT CPU */ 00502000
@RC00231 CH    INDEX1,@CH00596                                     0244 00503000
         BNL   @RF00244                                            0244 00504000
         LA    @10,PARMFLD-1(INDEX1)                               0244 00505000
         CLI   0(@10),C','                                         0244 00506000
         BNE   @RF00244                                            0244 00507000
*               DO UNTIL(PARMFLD(INDEX1)^=COMMA|INDEX1>=ENDCARD);  0245 00508000
@DL00245 DS    0H                                                  0246 00509000
*                 INDEX1=INDEX1+ONE;/* POINT TO CPU NUMBER           */ 00510000
         AL    INDEX1,@CF00053                                     0246 00511000
*                 CALL SHARECPU;    /* VALIDATE ALT CPU/CUA          */ 00512000
         BAL   @14,SHARECPU                                        0247 00513000
*                 RESPECIFY                                        0248 00514000
*                  (R15) RESTRICTED;                               0248 00515000
*                 IF R15=ZERO THEN  /* GOOD CPU/CUA                  */ 00516000
         LTR   R15,R15                                             0249 00517000
         BNZ   @RF00249                                            0249 00518000
*                   DO;                                            0250 00519000
*                     RESPECIFY                                    0251 00520000
*                      (R15) UNRESTRICTED;                         0251 00521000
*                     CALL ALTRANGE;/* VALIDATE THE ALT CUAS         */ 00522000
         BAL   @14,ALTRANGE                                        0252 00523000
*                     RESPECIFY                                    0253 00524000
*                      (R15) RESTRICTED;                           0253 00525000
*                     IF R15=ZERO THEN/* GOOD CUA RANGE              */ 00526000
         LTR   R15,R15                                             0254 00527000
         BNZ   @RF00254                                            0254 00528000
*                       IF INDEX2>=LENGPARM THEN/* IS TABLE FULL     */ 00529000
         L     @14,INDEX2                                          0255 00530000
         C     @14,LENGPARM                                        0255 00531000
         BL    @RF00255                                            0255 00532000
*                         TABFULL=ON;/* INDICATE TABLE IS FULL       */ 00533000
         OI    TABFULL,B'01000000'                                 0256 00534000
*                       ELSE                                       0257 00535000
*                         DO;       /* BUILD ALT CPU/CUA ENTRY       */ 00536000
         B     @RC00255                                            0257 00537000
@RF00255 DS    0H                                                  0258 00538000
*                           RESPECIFY                              0258 00539000
*                            (R15) UNRESTRICTED;                   0258 00540000
*                           INDEX2=INDEX2+ONE;/* NUMBER OF ENTRIES   */ 00541000
         LA    @10,1                                               0259 00542000
         AL    @10,INDEX2                                          0259 00543000
         ST    @10,INDEX2                                          0259 00544000
*                           SHAREFLG(INDEX2)=CHARS;/* SHARE INDICATOR*/ 00545000
         SLA   @10,4                                               0260 00546000
         L     @04,SHAREPTR(,R2)                                   0260 00547000
         ST    @10,@TF00001                                        0260 00548000
         ALR   @10,@04                                             0260 00549000
         AL    @10,@CF00727                                        0260 00550000
         MVI   SHAREFLG-2(@10),C'S'                                0260 00551000
*                           SHRCUCPU(INDEX2)=KEYWORD(1:7);/* ALT   0261 00552000
*                                      CPU/CUA                       */ 00553000
         LR    @10,@04                                             0261 00554000
         AL    @10,@TF00001                                        0261 00555000
         AL    @10,@CF00729                                        0261 00556000
         MVC   SHRCUCPU-10(7,@10),KEYWORD                          0261 00557000
*                           SHRBASE(INDEX2)=BASENTRY;/* BASE CPU/CUA */ 00558000
         LR    @10,@04                                             0262 00559000
         AL    @10,@TF00001                                        0262 00560000
         AL    @10,@CF00728                                        0262 00561000
         MVC   SHRBASE-3(7,@10),BASENTRY                           0262 00562000
*                           SHARLET(INDEX2)=BLANK;/* NON-BASE ENTRY  */ 00563000
         AL    @04,@TF00001                                        0263 00564000
         MVI   SHARLET-16(@04),C' '                                0263 00565000
*                         END;                                     0264 00566000
*                     ELSE                                         0265 00567000
*                       ;           /* CUA RANGE OF ALT IS BAD       */ 00568000
@RF00254 DS    0H                                                  0266 00569000
*                   END;                                           0266 00570000
*                 ELSE                                             0267 00571000
*                   ;               /* ERROR FROM SHARECPU           */ 00572000
@RF00249 DS    0H                                                  0268 00573000
*               END;                                               0268 00574000
@RC00249 DS    0H                                                  0268 00575000
@DE00245 LA    @10,PARMFLD-1(INDEX1)                               0268 00576000
         CLI   0(@10),C','                                         0268 00577000
         BNE   @DC00245                                            0268 00578000
         CH    INDEX1,@CH00596                                     0268 00579000
         BL    @DL00245                                            0268 00580000
@DC00245 DS    0H                                                  0269 00581000
*             ELSE                                                 0269 00582000
*               CALL OUTMSG(SYNTAX);/* ALT CPU/CUA MISSING           */ 00583000
         B     @RC00244                                            0269 00584000
@RF00244 LA    @01,@AL00269                                        0269 00585000
         BAL   @14,OUTMSG                                          0269 00586000
*             IF PARMFLD(INDEX1)^=RPAREN&PARMFLD(INDEX1)^=BLANK THEN    00587000
@RC00244 LA    @10,PARMFLD-1(INDEX1)                               0270 00588000
         CLI   0(@10),C')'                                         0270 00589000
         BE    @RF00270                                            0270 00590000
         LA    @10,PARMFLD-1(INDEX1)                               0270 00591000
         CLI   0(@10),C' '                                         0270 00592000
         BE    @RF00270                                            0270 00593000
*               CALL OUTMSG(SYNTAX);/* CLOSING ')' MISSING           */ 00594000
         LA    @01,@AL00271                                        0271 00595000
         BAL   @14,OUTMSG                                          0271 00596000
*             ELSE                                                 0272 00597000
*               ;                   /* CLOSING ')' FOUND             */ 00598000
@RF00270 DS    0H                                                  0273 00599000
*           END;                                                   0273 00600000
*         ELSE                                                     0274 00601000
*           ;                       /* BAD RETURN FROM SHARECPU      */ 00602000
@RF00216 DS    0H                                                  0275 00603000
*       END;                                                       0275 00604000
*   END SHARECRD;                                                  0276 00605000
@EL00003 DS    0H                                                  0276 00606000
@EF00003 DS    0H                                                  0276 00607000
@ER00003 L     @14,@SA00003                                        0276 00608000
         LM    @00,@04,@SA00003+4                                  0276 00609000
         LM    @06,@12,@SA00003+24                                 0276 00610000
         BR    @14                                                 0276 00611000
*                                                                  0277 00612000
*/********************************************************************/ 00613000
*/*                                                                  */ 00614000
*/*  THIS PROC IS CALLED BY CONTROL AND SHARECRD TO START THE        */ 00615000
*/*  PROCESSING ON A CPU/CUA PAIR. THIS PROC SETS THE RETURN CODE    */ 00616000
*/*  SAVE AREAS TO ZERO. IT THEN CALLS VALIDNUM TO VALIDATE THE CPU. */ 00617000
*/*  NEXT SHARECPU CALLS EITHER VALIDCUX OR CHECKCUA TO VALIDATE THE */ 00618000
*/*  CUA INPUT. NEXT CUADIGIT AND SHRSEARH ARE CALLED TO DO FUTHER   */ 00619000
*/*  CHECKING ON THE CUAS INPUT. REG 15 PASSES BACK A RETURN CODE.   */ 00620000
*/*                                                                  */ 00621000
*/********************************************************************/ 00622000
*                                                                  0277 00623000
*SHARECPU:                                                         0277 00624000
*   PROC OPTIONS(DONTSAVE(R5,R15));                                0277 00625000
SHARECPU ST    @14,@SA00004                                        0277 00626000
         STM   @00,@04,@SA00004+4                                  0277 00627000
         STM   @06,@12,@SA00004+24                                 0277 00628000
*   CPURC=ZERO;                     /* INIT RETURN CODE SAVE AREAS   */ 00629000
         SLR   @10,@10                                             0278 00630000
         ST    @10,CPURC                                           0278 00631000
*   CUARC1=ZERO;                                                   0279 00632000
         ST    @10,CUARC1                                          0279 00633000
*   CUARC2=ZERO;                                                   0280 00634000
         ST    @10,CUARC2                                          0280 00635000
*   RANGERC1=ZERO;                                                 0281 00636000
         ST    @10,RANGERC1                                        0281 00637000
*   RANGERC2=ZERO;                                                 0282 00638000
         ST    @10,RANGERC2                                        0282 00639000
*   CALL VALIDNUM(6);               /* VALIDATE CPU NUMBER           */ 00640000
         LA    @01,@AL00283                                        0283 00641000
         BAL   @14,VALIDNUM                                        0283 00642000
*   RESPECIFY                                                      0284 00643000
*    (R15) RESTRICTED;                                             0284 00644000
*   CPURC=R15;                      /* SAVE RETURN CODE FROM VALIDNUM*/ 00645000
         ST    R15,CPURC                                           0285 00646000
*   RESPECIFY                                                      0286 00647000
*    (R15) UNRESTRICTED;                                           0286 00648000
*   CALL HEXPACK(6);                /* PACK CPU DERIAL NUMBER        */ 00649000
         LA    @01,@AL00287                                        0287 00650000
         BAL   @14,HEXPACK                                         0287 00651000
*   KEYWORD(1:3)=HOLDAREA(1:3);     /* SAVE CONVERTED CPU NUMBER     */ 00652000
         MVC   KEYWORD(3),HOLDAREA                                 0288 00653000
*   IF PARMFLD(INDEX1)^=PERIOD THEN /* PERIOD EXPECTED               */ 00654000
         LA    @10,PARMFLD-1(INDEX1)                               0289 00655000
         CLI   0(@10),C'.'                                         0289 00656000
         BE    @RF00289                                            0289 00657000
*     DO;                                                          0290 00658000
*       CALL OUTMSG(SYNTAX);                                       0291 00659000
         LA    @01,@AL00291                                        0291 00660000
         BAL   @14,OUTMSG                                          0291 00661000
*       CALL FINDDELM;              /* FIND NEXT ',' OR ')'          */ 00662000
         BAL   @14,FINDDELM                                        0292 00663000
*       RESPECIFY                                                  0293 00664000
*        (R15) RESTRICTED;                                         0293 00665000
*       R15=TWELVE;                 /* SET RETURN CODE               */ 00666000
         LA    R15,12                                              0294 00667000
*       RESPECIFY                                                  0295 00668000
*        (R15) UNRESTRICTED;                                       0295 00669000
*     END;                                                         0296 00670000
*   ELSE                                                           0297 00671000
*     DO;                                                          0297 00672000
         B     @RC00289                                            0297 00673000
@RF00289 DS    0H                                                  0298 00674000
*       INDEX1=INDEX1+ONE;          /* POINT TO LOW CUA              */ 00675000
         AL    INDEX1,@CF00053                                     0298 00676000
*       IF PARMFLD(INDEX1+TWO)=CHARX THEN/* TEST FOR CUX             */ 00677000
         LA    @10,PARMFLD+1(INDEX1)                               0299 00678000
         CLI   0(@10),C'X'                                         0299 00679000
         BNE   @RF00299                                            0299 00680000
*         CALL VALIDCUX;            /* VALIDATE CUX                  */ 00681000
         BAL   @14,VALIDCUX                                        0300 00682000
*       ELSE                                                       0301 00683000
*         CALL CHECKCUA;            /* VALIDATE CUA NON CUX          */ 00684000
         B     @RC00299                                            0301 00685000
@RF00299 BAL   @14,CHECKCUA                                        0301 00686000
*       IF CPURC=ZERO&CUARC1=ZERO&CUARC2=ZERO THEN/* TEST FOR GOOD 0302 00687000
*                                      CUA                           */ 00688000
@RC00299 SLR   @10,@10                                             0302 00689000
         C     @10,CPURC                                           0302 00690000
         BNE   @RF00302                                            0302 00691000
         C     @10,CUARC1                                          0302 00692000
         BNE   @RF00302                                            0302 00693000
         C     @10,CUARC2                                          0302 00694000
         BNE   @RF00302                                            0302 00695000
*         DO;                                                      0303 00696000
*           CALL CUADIGIT;          /* VALIDATE RANGE OF CUAS        */ 00697000
         BAL   @14,CUADIGIT                                        0304 00698000
*           RESPECIFY                                              0305 00699000
*            (R15) RESTRICTED;                                     0305 00700000
*           RANGERC1=R15;           /* SAVE RETURN CODE              */ 00701000
         ST    R15,RANGERC1                                        0306 00702000
*           RESPECIFY                                              0307 00703000
*            (R15) UNRESTRICTED;                                   0307 00704000
*           IF INDEX2^=ZERO&RANGERC1=ZERO THEN/* TEST FOR NON EMPTY     00705000
*                                      TABLE                         */ 00706000
         SLR   @10,@10                                             0308 00707000
         C     @10,INDEX2                                          0308 00708000
         BE    @RF00308                                            0308 00709000
         L     @04,RANGERC1                                        0308 00710000
         CR    @04,@10                                             0308 00711000
         BNE   @RF00308                                            0308 00712000
*             DO;                                                  0309 00713000
*               CALL SHRSEARH;      /* CHECK CUA RANGE AGAIN         */ 00714000
         BAL   @14,SHRSEARH                                        0310 00715000
*               RESPECIFY                                          0311 00716000
*                (R15) RESTRICTED;                                 0311 00717000
*               RANGERC2=R15;       /* SAVE RETURN CODE              */ 00718000
         ST    R15,RANGERC2                                        0312 00719000
*             END;                                                 0313 00720000
*           ELSE                                                   0314 00721000
*             ;                     /* TABLE WAS EMPTY OR CUA BAD    */ 00722000
@RF00308 DS    0H                                                  0315 00723000
*           IF RANGERC1=ZERO&RANGERC2=ZERO THEN                    0315 00724000
         SLR   @14,@14                                             0315 00725000
         C     @14,RANGERC1                                        0315 00726000
         BNE   @RF00315                                            0315 00727000
         C     @14,RANGERC2                                        0315 00728000
         BNE   @RF00315                                            0315 00729000
*             R15=ZERO;             /* SET RETURN CODE OF 0          */ 00730000
         SLR   R15,R15                                             0316 00731000
*           ELSE                    /* CUA RANGE DID NOT VALIDATE    */ 00732000
*             R15=TWELVE;           /* SET RETURN CODE OF 12         */ 00733000
         B     @RC00315                                            0317 00734000
@RF00315 LA    R15,12                                              0317 00735000
*         END;                                                     0318 00736000
*       ELSE                        /* CPU/CUA DID NOT VALIDATE      */ 00737000
*         R15=TWELVE;               /* SET RETURN CODE OF 12         */ 00738000
         B     @RC00302                                            0319 00739000
@RF00302 LA    R15,12                                              0319 00740000
*     END;                                                         0320 00741000
*   END SHARECPU;                                                  0321 00742000
@EL00004 DS    0H                                                  0321 00743000
@EF00004 DS    0H                                                  0321 00744000
@ER00004 L     @14,@SA00004                                        0321 00745000
         LM    @00,@04,@SA00004+4                                  0321 00746000
         LM    @06,@12,@SA00004+24                                 0321 00747000
         BR    @14                                                 0321 00748000
*   RESPECIFY                                                      0322 00749000
*    (R15) UNRESTRICTED;                                           0322 00750000
*                                                                  0323 00751000
*/********************************************************************/ 00752000
*/*                                                                  */ 00753000
*/*  THIS PROC WILL VALIDATE A CUX FIELD ON A SHARE OR CONTROLLER    */ 00754000
*/*  CARD. IT IS CALLED BY SHARECPU AND SETS A RETURN CODE IN CUARC1 */ 00755000
*/*                                                                  */ 00756000
*/********************************************************************/ 00757000
*                                                                  0323 00758000
*VALIDCUX:                                                         0323 00759000
*   PROC OPTIONS(DONTSAVE(R5,R15));                                0323 00760000
VALIDCUX ST    @14,@SA00005                                        0323 00761000
         STM   @00,@04,@SA00005+4                                  0323 00762000
         STM   @06,@12,@SA00005+24                                 0323 00763000
*   CALL VALIDCUA(2);               /* VALIDATE 2 DIGIT CUX          */ 00764000
         LA    @01,@AL00324                                        0324 00765000
         BAL   @14,VALIDCUA                                        0324 00766000
*   RESPECIFY                                                      0325 00767000
*    (R15) RESTRICTED;                                             0325 00768000
*   CUARC1=R15;                     /* SAVE RETURN CODE              */ 00769000
         ST    R15,CUARC1                                          0326 00770000
*   RESPECIFY                                                      0327 00771000
*    (R15) UNRESTRICTED;                                           0327 00772000
*   PARMFLD(INDEX1+TWO)=PARMFLD(INDEX1+TWO)&HEXZERO;/* 0 LAST 8 BITS */ 00773000
         LA    @10,PARMFLD+1(INDEX1)                               0328 00774000
         NI    0(@10),X'00'                                        0328 00775000
*   CUAHOLD(1:3)=PARMFLD(INDEX1:INDEX1+2);/* SAVE LOW CUA BEFORE PACK*/ 00776000
         LA    @10,PARMFLD-1(INDEX1)                               0329 00777000
         MVC   CUAHOLD(3),0(@10)                                   0329 00778000
*   CUAHOLD2(1:3)=CUAHOLD(1:3)|H00000F;/* SAVE HIGH CUA BEFORE PACK  */ 00779000
         MVC   CUAHOLD2(3),CUAHOLD                                 0330 00780000
         OC    CUAHOLD2(3),@CB00229                                0330 00781000
*   INDEX1=INDEX1-ONE;              /* POINT TO '.'                  */ 00782000
         BCTR  INDEX1,0                                            0331 00783000
*   PARMFLD(INDEX1)='0';            /* PAD CUA TO 2 BYTES FOR HEXPACK*/ 00784000
         LA    @10,PARMFLD-1(INDEX1)                               0332 00785000
         MVI   0(@10),C'0'                                         0332 00786000
*   CALL HEXPACK(4);                /* PACK 2 BYTE LOW CUA           */ 00787000
         LA    @01,@AL00333                                        0333 00788000
         BAL   @14,HEXPACK                                         0333 00789000
*   KEYWORD(4:5)=HOLDAREA(1:2);     /* SAVE LOW PACKED CUA           */ 00790000
         MVC   KEYWORD+3(2),HOLDAREA                               0334 00791000
*   HOLDAREA(1:2)=HOLDAREA(1:2)|HEX000F;/* SAVE HIGH PACKED CUA      */ 00792000
         OC    HOLDAREA(2),@CB00618                                0335 00793000
*   KEYWORD(6:7)=HOLDAREA(1:2);     /* MOVE HIGH CUA NEAR LOW        */ 00794000
         MVC   KEYWORD+5(2),HOLDAREA                               0336 00795000
*   CUAPLACE=INDEX1;                /* SAVE POSITION OF CUA          */ 00796000
         ST    INDEX1,CUAPLACE                                     0337 00797000
*   IF PARMFLD(INDEX1)^=COMMA&PARMFLD(INDEX1)^=RPAREN THEN         0338 00798000
         LA    @10,PARMFLD-1(INDEX1)                               0338 00799000
         CLI   0(@10),C','                                         0338 00800000
         BE    @RF00338                                            0338 00801000
         LA    @10,PARMFLD-1(INDEX1)                               0338 00802000
         CLI   0(@10),C')'                                         0338 00803000
         BE    @RF00338                                            0338 00804000
*     DO;                                                          0339 00805000
*       CALL OUTMSG(SYNTAX);        /* NO DELIMITER FOUND            */ 00806000
         LA    @01,@AL00340                                        0340 00807000
         BAL   @14,OUTMSG                                          0340 00808000
*       CALL FINDDELM;              /* FIND NEXT ',' | ')' | ' '     */ 00809000
         BAL   @14,FINDDELM                                        0341 00810000
*     END;                                                         0342 00811000
*   ELSE                                                           0343 00812000
*     ;                             /* SYNTAX OKAY                   */ 00813000
@RF00338 DS    0H                                                  0344 00814000
*   END VALIDCUX;                                                  0344 00815000
@EL00005 DS    0H                                                  0344 00816000
@EF00005 DS    0H                                                  0344 00817000
@ER00005 L     @14,@SA00005                                        0344 00818000
         LM    @00,@04,@SA00005+4                                  0344 00819000
         LM    @06,@12,@SA00005+24                                 0344 00820000
         BR    @14                                                 0344 00821000
*                                                                  0345 00822000
*/********************************************************************/ 00823000
*/*                                                                  */ 00824000
*/*  THIS PROC WILL VALIDATE A CUA FIELD ON A SHARE OR CONTROLLER    */ 00825000
*/*  CARD. IT IS CALLED BY SHARECPU AND SETS RETURN CODES IN CUARC1  */ 00826000
*/*  AND CUARC1.                                                     */ 00827000
*/*                                                                  */ 00828000
*/********************************************************************/ 00829000
*                                                                  0345 00830000
*CHECKCUA:                                                         0345 00831000
*   PROC OPTIONS(DONTSAVE(R5,R15));                                0345 00832000
CHECKCUA ST    @14,@SA00006                                        0345 00833000
         STM   @00,@04,@SA00006+4                                  0345 00834000
         STM   @06,@12,@SA00006+24                                 0345 00835000
*   CALL VALIDCUA(3);               /* VALIDATE CUA                  */ 00836000
         LA    @01,@AL00346                                        0346 00837000
         BAL   @14,VALIDCUA                                        0346 00838000
*   RESPECIFY                                                      0347 00839000
*    (R15) RESTRICTED;                                             0347 00840000
*   CUARC1=R15;                     /* SAVE RETURN CODE              */ 00841000
         ST    R15,CUARC1                                          0348 00842000
*   RESPECIFY                                                      0349 00843000
*    (R15) UNRESTRICTED;                                           0349 00844000
*   CUAHOLD(1:3)=PARMFLD(INDEX1:INDEX1+2);/* SAVE LOW UNPACKED CUA   */ 00845000
         LA    @10,PARMFLD-1(INDEX1)                               0350 00846000
         MVC   CUAHOLD(3),0(@10)                                   0350 00847000
*   CUAHOLD2(1:3)=CUAHOLD(1:3);     /* SAVE HIGH UNPACKED CUA        */ 00848000
         MVC   CUAHOLD2(3),CUAHOLD                                 0351 00849000
*   INDEX1=INDEX1-ONE;              /* POINT TO '.' TO PAD CUA       */ 00850000
         BCTR  INDEX1,0                                            0352 00851000
*   PARMFLD(INDEX1)='0';            /* PAD DIGIT OF CUA IS 0         */ 00852000
         LA    @10,PARMFLD-1(INDEX1)                               0353 00853000
         MVI   0(@10),C'0'                                         0353 00854000
*   CALL HEXPACK(4);                /* PACK 2 BYTE LOW CUA           */ 00855000
         LA    @01,@AL00354                                        0354 00856000
         BAL   @14,HEXPACK                                         0354 00857000
*   KEYWORD(4:5)=HOLDAREA(1:2);     /* SAVE LOW CUA                  */ 00858000
         MVC   KEYWORD+3(2),HOLDAREA                               0355 00859000
*   IF PARMFLD(INDEX1)=DASH THEN    /* SEE IF RANGE SPECIFIED        */ 00860000
         LA    @10,PARMFLD-1(INDEX1)                               0356 00861000
         CLI   0(@10),C'-'                                         0356 00862000
         BNE   @RF00356                                            0356 00863000
*     DO;                                                          0357 00864000
*       INDEX1=INDEX1+ONE;          /* POINT TO HIGH CUA             */ 00865000
         AL    INDEX1,@CF00053                                     0358 00866000
*       CALL VALIDCUA(3);           /* VALIDATE HIGH CUA             */ 00867000
         LA    @01,@AL00359                                        0359 00868000
         BAL   @14,VALIDCUA                                        0359 00869000
*       RESPECIFY                                                  0360 00870000
*        (R15) RESTRICTED;                                         0360 00871000
*       CUARC2=R15;                 /* SAVE RETURN CODE              */ 00872000
         ST    R15,CUARC2                                          0361 00873000
*       RESPECIFY                                                  0362 00874000
*        (R15) UNRESTRICTED;                                       0362 00875000
*       CUAHOLD2(1:3)=PARMFLD(INDEX1:INDEX1+2);/* SAVE HIGH CUA      */ 00876000
         LA    @10,PARMFLD-1(INDEX1)                               0363 00877000
         MVC   CUAHOLD2(3),0(@10)                                  0363 00878000
*       INDEX1=INDEX1-ONE;          /* PAD HIGH CUA TO 4 BYTES       */ 00879000
         BCTR  INDEX1,0                                            0364 00880000
*       PARMFLD(INDEX1)='0';        /* SET PAD BYTE TO 0             */ 00881000
         LA    @10,PARMFLD-1(INDEX1)                               0365 00882000
         MVI   0(@10),C'0'                                         0365 00883000
*       CALL HEXPACK(4);            /* CONVERT HIGH CUA TO HEX       */ 00884000
         LA    @01,@AL00366                                        0366 00885000
         BAL   @14,HEXPACK                                         0366 00886000
*     END;                                                         0367 00887000
*   ELSE                                                           0368 00888000
*     ;                             /* RANGE OF CUAS NOT SPECIFIED   */ 00889000
@RF00356 DS    0H                                                  0369 00890000
*   KEYWORD(6:7)=HOLDAREA(1:2);     /* MOVE HIGH CUA NEAR LOW        */ 00891000
         MVC   KEYWORD+5(2),HOLDAREA                               0369 00892000
*   CUAPLACE=INDEX1;                /* SAVE POSITION OF CUA          */ 00893000
         ST    INDEX1,CUAPLACE                                     0370 00894000
*   IF PARMFLD(INDEX1)^=COMMA&PARMFLD(INDEX1)^=RPAREN THEN         0371 00895000
         LA    @10,PARMFLD-1(INDEX1)                               0371 00896000
         CLI   0(@10),C','                                         0371 00897000
         BE    @RF00371                                            0371 00898000
         LA    @10,PARMFLD-1(INDEX1)                               0371 00899000
         CLI   0(@10),C')'                                         0371 00900000
         BE    @RF00371                                            0371 00901000
*     DO;                                                          0372 00902000
*       CALL OUTMSG(SYNTAX);        /* NO DELIMITER FOUND            */ 00903000
         LA    @01,@AL00373                                        0373 00904000
         BAL   @14,OUTMSG                                          0373 00905000
*       CALL FINDDELM;              /* FIND NEXT DELIMITER           */ 00906000
         BAL   @14,FINDDELM                                        0374 00907000
*     END;                                                         0375 00908000
*   ELSE                                                           0376 00909000
*     ;                             /* GOOD DELIMITER FOUND          */ 00910000
@RF00371 DS    0H                                                  0377 00911000
*   END CHECKCUA;                                                  0377 00912000
@EL00006 DS    0H                                                  0377 00913000
@EF00006 DS    0H                                                  0377 00914000
@ER00006 L     @14,@SA00006                                        0377 00915000
         LM    @00,@04,@SA00006+4                                  0377 00916000
         LM    @06,@12,@SA00006+24                                 0377 00917000
         BR    @14                                                 0377 00918000
*                                                                  0378 00919000
*/********************************************************************/ 00920000
*/*                                                                  */ 00921000
*/*  THIS PROC PERFORMS A CHECK ON THE BASE CPU/CUA SPECIFIED ON A   */ 00922000
*/*  SHARE CARD. IT CHECKS TO SEE THAT THE BASE CPU/CUA DOES NOT     */ 00923000
*/*  APPEAR AS AN ALTERNATE ON ANOTHER SHARE CARD.                   */ 00924000
*/*                                                                  */ 00925000
*/********************************************************************/ 00926000
*                                                                  0378 00927000
*BASEALT:                                                          0378 00928000
*   PROC OPTIONS(DONTSAVE(R5,R15));                                0378 00929000
BASEALT  ST    @14,@SA00007                                        0378 00930000
         STM   @00,@04,@SA00007+4                                  0378 00931000
         STM   @06,@12,@SA00007+24                                 0378 00932000
*   IF INDEX2^=ZERO THEN            /* TEST FOR EMPTY TABLE          */ 00933000
         L     @10,INDEX2                                          0379 00934000
         LTR   @10,@10                                             0379 00935000
         BZ    @RF00379                                            0379 00936000
*     DO;                           /* SEARCH SHARE/CONTROLLER TABLE */ 00937000
*       SWITCH=OFF;                                                0381 00938000
         NI    SWITCH,B'11011111'                                  0381 00939000
*       DO I=1 TO INDEX2 BY 1 WHILE(SWITCH=OFF);                   0382 00940000
         LA    @10,1                                               0382 00941000
         ST    @10,I                                               0382 00942000
         B     @DE00382                                            0382 00943000
@DL00382 TM    SWITCH,B'00100000'                                  0382 00944000
         BNZ   @DC00382                                            0382 00945000
*         IF SHAREFLG(I)=CHARS THEN                                0383 00946000
         SLA   @10,4                                               0383 00947000
         L     @04,SHAREPTR(,R2)                                   0383 00948000
         ST    @10,@TF00001                                        0383 00949000
         ALR   @10,@04                                             0383 00950000
         AL    @10,@CF00727                                        0383 00951000
         CLI   SHAREFLG-2(@10),C'S'                                0383 00952000
         BNE   @RF00383                                            0383 00953000
*           IF KEYWORD(1:7)=SHRCUCPU(I)&KEYWORD(1:7)^=SHRBASE(I) THEN   00954000
         LR    @10,@04                                             0384 00955000
         AL    @10,@TF00001                                        0384 00956000
         AL    @10,@CF00729                                        0384 00957000
         CLC   KEYWORD(7),SHRCUCPU-10(@10)                         0384 00958000
         BNE   @RF00384                                            0384 00959000
         AL    @04,@TF00001                                        0384 00960000
         AL    @04,@CF00728                                        0384 00961000
         CLC   KEYWORD(7),SHRBASE-3(@04)                           0384 00962000
         BE    @RF00384                                            0384 00963000
*             DO;                   /* SHARE BASE APPEARS AS ALT     */ 00964000
*               PLACE=INDEX1-CUAPLACE+THREE;/* POINT TO CUA NUMBER   */ 00965000
         LR    @10,INDEX1                                          0386 00966000
         SL    @10,CUAPLACE                                        0386 00967000
         AL    @10,@CF00076                                        0386 00968000
         ST    @10,PLACE                                           0386 00969000
*               CALL OUTMSG(RANGETAX);/* PRINT INVALID RANGE MESS    */ 00970000
         LA    @01,@AL00387                                        0387 00971000
         BAL   @14,OUTMSG                                          0387 00972000
*               SWITCH=ON;          /* GET OUT OF LOOP               */ 00973000
         OI    SWITCH,B'00100000'                                  0388 00974000
*             END;                                                 0389 00975000
*           ELSE                                                   0390 00976000
*             ;                     /* BASE DOES NOT MATCH           */ 00977000
@RF00384 DS    0H                                                  0391 00978000
*         ELSE                                                     0391 00979000
*           ;                       /* ENTRY IS NOT SHARE            */ 00980000
@RF00383 DS    0H                                                  0392 00981000
*       END;                                                       0392 00982000
         LA    @10,1                                               0392 00983000
         AL    @10,I                                               0392 00984000
         ST    @10,I                                               0392 00985000
@DE00382 C     @10,INDEX2                                          0392 00986000
         BNH   @DL00382                                            0392 00987000
@DC00382 DS    0H                                                  0393 00988000
*     END;                                                         0393 00989000
*   ELSE                                                           0394 00990000
*     ;                             /* EMPTY TABLE                   */ 00991000
@RF00379 DS    0H                                                  0395 00992000
*   END BASEALT;                                                   0395 00993000
@EL00007 DS    0H                                                  0395 00994000
@EF00007 DS    0H                                                  0395 00995000
@ER00007 L     @14,@SA00007                                        0395 00996000
         LM    @00,@04,@SA00007+4                                  0395 00997000
         LM    @06,@12,@SA00007+24                                 0395 00998000
         BR    @14                                                 0395 00999000
*                                                                  0396 01000000
*/********************************************************************/ 01001000
*/*                                                                  */ 01002000
*/*  THIS PROC PERFORMS CHECKS ON THE CUA RANGE SPECIFIED ON A       */ 01003000
*/*  SHARE OR CONTROLLER CARD. IT WILL SEE IF THE HIGH CUA IS        */ 01004000
*/*  AT LEAST AS LARGE AS THE LOW CUA. IT WILL ALSO TEST TO SEE IF   */ 01005000
*/*  THE RANGE SPECIFIED IS GREATER THAN 32. WHEN THE RANGE IS SPEC -*/ 01006000
*/*  IFIED IF THE MIDDLE DIGIT OF THE LOW CUA IS ODD THAN THE MIDDLE */ 01007000
*/*  DIGIT OF THE HIGH CUA MUST BE THE SAME ODD DIGIT. IF THE MIDDLE */ 01008000
*/*  DIGIT OFF THE LOW CUA IS EVEN THEN THE MIDDLE DIGIT OF THE HIGH */ 01009000
*/*  CUA MUST EITHER BE THE SAME EVEN DIGIT OR THE NEXT HIGHER ODD   */ 01010000
*/*  DIGIT.                                                          */ 01011000
*/*                                                                  */ 01012000
*/********************************************************************/ 01013000
*                                                                  0396 01014000
*CUADIGIT:                                                         0396 01015000
*   PROC OPTIONS(DONTSAVE(R5,R15));                                0396 01016000
CUADIGIT ST    @14,@SA00008                                        0396 01017000
         STM   @00,@04,@SA00008+4                                  0396 01018000
         STM   @06,@12,@SA00008+24                                 0396 01019000
*   ALTRNG=HOLDAREA(1:2)-KEYWORD(4:5);/* COMPUTE CUA RANGE           */ 01020000
         MVC   @ZT00002+2(2),HOLDAREA                              0397 01021000
         L     @10,@ZT00002                                        0397 01022000
         MVC   @ZT00002+2(2),KEYWORD+3                             0397 01023000
         SL    @10,@ZT00002                                        0397 01024000
         ST    @10,@TF00001                                        0397 01025000
         MVC   ALTRNG(2),@TF00001+2                                0397 01026000
*   IF ALTRNG<HEXZEROS|ALTRNG>THIRTYON THEN/* HIGH>LOW AND RANGE<33  */ 01027000
         CLC   ALTRNG(2),@CB00209                                  0398 01028000
         BL    @RT00398                                            0398 01029000
         CLC   ALTRNG(2),@CB00620                                  0398 01030000
         BNH   @RF00398                                            0398 01031000
@RT00398 DS    0H                                                  0399 01032000
*     DO;                                                          0399 01033000
*       PLACE=INDEX1-CUAPLACE+THREE;/* POSITION OF '*' IN MESSAGE    */ 01034000
         LR    @10,INDEX1                                          0400 01035000
         SL    @10,CUAPLACE                                        0400 01036000
         AL    @10,@CF00076                                        0400 01037000
         ST    @10,PLACE                                           0400 01038000
*       CALL OUTMSG(RANGESYN);      /* INVALID RANGE MESSAGE         */ 01039000
         LA    @01,@AL00401                                        0401 01040000
         BAL   @14,OUTMSG                                          0401 01041000
*       RESPECIFY                                                  0402 01042000
*        (R15) RESTRICTED;                                         0402 01043000
*       R15=TWELVE;                 /* PUT RETURN CODE IN REG 15     */ 01044000
         LA    R15,12                                              0403 01045000
*     END;                                                         0404 01046000
*   ELSE                                                           0405 01047000
*     IF CUAHOLD(2)=CUAHOLD2(2) THEN/* TEST 2ND DIGITS OF CUA        */ 01048000
         B     @RC00398                                            0405 01049000
@RF00398 CLC   CUAHOLD+1(1),CUAHOLD2+1                             0405 01050000
         BNE   @RF00405                                            0405 01051000
*       R15=ZERO;                   /* DIGITS ARE EQUAL SO RANGE   0406 01052000
*                                      PASSES                        */ 01053000
         SLR   R15,R15                                             0406 01054000
*     ELSE                                                         0407 01055000
*       IF KEYBIT12=ON THEN         /* TEST IF ODD 2ND DIGIT         */ 01056000
         B     @RC00405                                            0407 01057000
@RF00405 TM    KEYBIT12,B'00010000'                                0407 01058000
         BNO   @RF00407                                            0407 01059000
*         DO;                       /* DIGIT IS ODD BUT UNEQUAL      */ 01060000
*           RESPECIFY                                              0409 01061000
*            (R15) UNRESTRICTED;                                   0409 01062000
*           PLACE=INDEX1-CUAPLACE+THREE;/* POSITION OF SYNTAX ERROR  */ 01063000
         LR    @10,INDEX1                                          0410 01064000
         SL    @10,CUAPLACE                                        0410 01065000
         AL    @10,@CF00076                                        0410 01066000
         ST    @10,PLACE                                           0410 01067000
*           CALL OUTMSG(RANGESYN);  /* INVALID RANGE MESSAGE         */ 01068000
         LA    @01,@AL00411                                        0411 01069000
         BAL   @14,OUTMSG                                          0411 01070000
*           RESPECIFY                                              0412 01071000
*            (R15) RESTRICTED;                                     0412 01072000
*           R15=TWELVE;             /* PUT RETURN CODE IN REG 15     */ 01073000
         LA    R15,12                                              0413 01074000
*           RESPECIFY                                              0414 01075000
*            (R15) UNRESTRICTED;                                   0414 01076000
*         END;                                                     0415 01077000
*       ELSE                                                       0416 01078000
*         DO;                       /* 2ND DIGIT OF CUA IS EVEN      */ 01079000
         B     @RC00407                                            0416 01080000
@RF00407 DS    0H                                                  0417 01081000
*           CUADIG=CUAHOLD2(2)-CUAHOLD(2);/* DIFFERENCE IN MIDDLE  0417 01082000
*                                      DIGITS                        */ 01083000
         SLR   @10,@10                                             0417 01084000
         IC    @10,CUAHOLD2+1                                      0417 01085000
         MVC   @ZT00003+3(1),CUAHOLD+1                             0417 01086000
         SL    @10,@ZT00003                                        0417 01087000
         STC   @10,CUADIG                                          0417 01088000
*           IF CUADIG^=ONE THEN     /* DIFFERENCE IS GREATER THAN 1  */ 01089000
         CLI   CUADIG,1                                            0418 01090000
         BE    @RF00418                                            0418 01091000
*             DO;                                                  0419 01092000
*               PLACE=INDEX1-CUAPLACE+THREE;/* POSITION OF SYNTAX  0420 01093000
*                                      ERROR                         */ 01094000
         LR    @10,INDEX1                                          0420 01095000
         SL    @10,CUAPLACE                                        0420 01096000
         AL    @10,@CF00076                                        0420 01097000
         ST    @10,PLACE                                           0420 01098000
*               CALL OUTMSG(RANGESYN);/* INVALID RANGE MESSAGE       */ 01099000
         LA    @01,@AL00421                                        0421 01100000
         BAL   @14,OUTMSG                                          0421 01101000
*               RESPECIFY                                          0422 01102000
*                (R15) RESTRICTED;                                 0422 01103000
*               R15=TWELVE;         /* SET RETURN CODE IN REG 15     */ 01104000
         LA    R15,12                                              0423 01105000
*             END;                                                 0424 01106000
*           ELSE                                                   0425 01107000
*             R15=ZERO;             /* SET RETURN CODE IN REG 15     */ 01108000
         B     @RC00418                                            0425 01109000
@RF00418 SLR   R15,R15                                             0425 01110000
*         END;                                                     0426 01111000
*   RESPECIFY                                                      0427 01112000
*    (R15) UNRESTRICTED;                                           0427 01113000
*   END CUADIGIT;                                                  0428 01114000
@EL00008 DS    0H                                                  0428 01115000
@EF00008 DS    0H                                                  0428 01116000
@ER00008 L     @14,@SA00008                                        0428 01117000
         LM    @00,@04,@SA00008+4                                  0428 01118000
         LM    @06,@12,@SA00008+24                                 0428 01119000
         BR    @14                                                 0428 01120000
*                                                                  0429 01121000
*/********************************************************************/ 01122000
*/*                                                                  */ 01123000
*/*  THIS PROC WILL TEST TO SEE IF THE RANGE OF THE CUAS CURRENTLY   */ 01124000
*/*  BEING PROCESSED OVERLAPS WITH AN ENTRY IN THE SHARE/CONTROLLER  */ 01125000
*/*  TABLE. IF THE CUAS APPEAR ANYWHERE ELSE IN THE TABLE THE LOW AND*/ 01126000
*/*  HIGH CUAS MUST BE THE SAME.                                     */ 01127000
*/*                                                                  */ 01128000
*/********************************************************************/ 01129000
*                                                                  0429 01130000
*SHRSEARH:                                                         0429 01131000
*   PROC OPTIONS(DONTSAVE(R5,R15));                                0429 01132000
SHRSEARH ST    @14,@SA00009                                        0429 01133000
         STM   @00,@04,@SA00009+4                                  0429 01134000
         STM   @06,@12,@SA00009+24                                 0429 01135000
*   SWITCH=OFF;                                                    0430 01136000
         NI    SWITCH,B'11011111'                                  0430 01137000
*   DO I=1 TO INDEX2 BY 1 WHILE(SWITCH=OFF);                       0431 01138000
*                                                                  0431 01139000
         LA    @10,1                                               0431 01140000
         ST    @10,I                                               0431 01141000
         B     @DE00431                                            0431 01142000
@DL00431 TM    SWITCH,B'00100000'                                  0431 01143000
         BNZ   @DC00431                                            0431 01144000
*     /***************************************************************/ 01145000
*     /*                                                             */ 01146000
*     /* TEST BASE CPU/CUA ENTRY                                     */ 01147000
*     /*                                                             */ 01148000
*     /***************************************************************/ 01149000
*                                                                  0432 01150000
*     IF KEYWORD(1:3)=SHARSERB(I) THEN/* TEST FOR LIKE SERIAL WITH 0432 01151000
*                                      BASE                          */ 01152000
         SLA   @10,4                                               0432 01153000
         L     @04,SHAREPTR(,R2)                                   0432 01154000
         ST    @10,@TF00001                                        0432 01155000
         ALR   @10,@04                                             0432 01156000
         AL    @10,@CF00728                                        0432 01157000
         CLC   KEYWORD(3),SHARSERB-3(@10)                          0432 01158000
         BNE   @RF00432                                            0432 01159000
*       IF(KEYWORD(4:5)>=SHRCUABL(I)&KEYWORD(4:5)<=SHRCUABH(I))|(  0433 01160000
*           HOLDAREA(1:2)>=SHRCUABL(I)&HOLDAREA(1:2)<=SHRCUABH(I))|(    01161000
*           SHRCUABL(I)>=KEYWORD(4:5)&SHRCUABL(I)<=HOLDAREA(1:2))|(     01162000
*           SHRCUABH(I)>=KEYWORD(4:5)&SHRCUABH(I)<=HOLDAREA(1:2)) THEN  01163000
         LR    @10,@04                                             0433 01164000
         AL    @10,@TF00001                                        0433 01165000
         AL    @10,@CF00733                                        0433 01166000
         CLC   KEYWORD+3(2),SHRCUABL-6(@10)                        0433 01167000
         BL    @GL00018                                            0433 01168000
         AL    @04,@TF00001                                        0433 01169000
         AL    @04,@CF00734                                        0433 01170000
         CLC   KEYWORD+3(2),SHRCUABH-8(@04)                        0433 01171000
         BNH   @RT00433                                            0433 01172000
@GL00018 L     @10,I                                               0433 01173000
         SLA   @10,4                                               0433 01174000
         L     @04,SHAREPTR(,R2)                                   0433 01175000
         ST    @10,@TF00001                                        0433 01176000
         ALR   @10,@04                                             0433 01177000
         AL    @10,@CF00733                                        0433 01178000
         CLC   HOLDAREA(2),SHRCUABL-6(@10)                         0433 01179000
         BL    @GL00017                                            0433 01180000
         AL    @04,@TF00001                                        0433 01181000
         AL    @04,@CF00734                                        0433 01182000
         CLC   HOLDAREA(2),SHRCUABH-8(@04)                         0433 01183000
         BNH   @RT00433                                            0433 01184000
@GL00017 L     @10,I                                               0433 01185000
         SLA   @10,4                                               0433 01186000
         L     @04,SHAREPTR(,R2)                                   0433 01187000
         ST    @10,@TF00001                                        0433 01188000
         ALR   @10,@04                                             0433 01189000
         AL    @10,@CF00733                                        0433 01190000
         CLC   SHRCUABL-6(2,@10),KEYWORD+3                         0433 01191000
         BL    @GL00016                                            0433 01192000
         AL    @04,@TF00001                                        0433 01193000
         AL    @04,@CF00733                                        0433 01194000
         CLC   SHRCUABL-6(2,@04),HOLDAREA                          0433 01195000
         BNH   @RT00433                                            0433 01196000
@GL00016 L     @10,I                                               0433 01197000
         SLA   @10,4                                               0433 01198000
         L     @04,SHAREPTR(,R2)                                   0433 01199000
         ST    @10,@TF00001                                        0433 01200000
         ALR   @10,@04                                             0433 01201000
         AL    @10,@CF00734                                        0433 01202000
         CLC   SHRCUABH-8(2,@10),KEYWORD+3                         0433 01203000
         BL    @RF00433                                            0433 01204000
         AL    @04,@TF00001                                        0433 01205000
         AL    @04,@CF00734                                        0433 01206000
         CLC   SHRCUABH-8(2,@04),HOLDAREA                          0433 01207000
         BH    @RF00433                                            0433 01208000
@RT00433 DS    0H                                                  0434 01209000
*         IF KEYWORD(1:7)^=SHRBASE(I) THEN/* OVERLAPPING NON EQUAL 0434 01210000
*                                      RANGE                         */ 01211000
         L     @10,I                                               0434 01212000
         SLA   @10,4                                               0434 01213000
         L     @04,SHAREPTR(,R2)                                   0434 01214000
         ALR   @04,@10                                             0434 01215000
         AL    @04,@CF00728                                        0434 01216000
         CLC   KEYWORD(7),SHRBASE-3(@04)                           0434 01217000
         BE    @RF00434                                            0434 01218000
*           DO;                                                    0435 01219000
*             PLACE=INDEX1-CUAPLACE+THREE;/* '*' POSITION IN MESSAGE */ 01220000
         LR    @10,INDEX1                                          0436 01221000
         SL    @10,CUAPLACE                                        0436 01222000
         AL    @10,@CF00076                                        0436 01223000
         ST    @10,PLACE                                           0436 01224000
*             CALL OUTMSG(RANGETAX);/* INVALID RANGE MESSAGE         */ 01225000
         LA    @01,@AL00437                                        0437 01226000
         BAL   @14,OUTMSG                                          0437 01227000
*             SWITCH=ON;            /* GET OUT OF LOOP               */ 01228000
         OI    SWITCH,B'00100000'                                  0438 01229000
*           END;                                                   0439 01230000
*         ELSE                                                     0440 01231000
*           ;                       /* RANGE OKAY                    */ 01232000
@RF00434 DS    0H                                                  0441 01233000
*       ELSE                                                       0441 01234000
*         ;                         /* RANGE OKAY                    */ 01235000
@RF00433 DS    0H                                                  0442 01236000
*     ELSE                                                         0442 01237000
*       ;                           /* CPU NUMBERS DIFFERENT         */ 01238000
*                                                                  0442 01239000
@RF00432 DS    0H                                                  0443 01240000
*     /***************************************************************/ 01241000
*     /*                                                             */ 01242000
*     /* TEST ALT CPU/CUA IF NO ERROR FOUND                          */ 01243000
*     /*                                                             */ 01244000
*     /***************************************************************/ 01245000
*                                                                  0443 01246000
*     IF SHAREFLG(I)=CHARS&SWITCH=OFF&KEYWORD(1:3)=SHARSERA(I) THEN     01247000
         L     @10,I                                               0443 01248000
         SLA   @10,4                                               0443 01249000
         L     @04,SHAREPTR(,R2)                                   0443 01250000
         ST    @10,@TF00001                                        0443 01251000
         ALR   @10,@04                                             0443 01252000
         AL    @10,@CF00727                                        0443 01253000
         CLI   SHAREFLG-2(@10),C'S'                                0443 01254000
         BNE   @RF00443                                            0443 01255000
         TM    SWITCH,B'00100000'                                  0443 01256000
         BNZ   @RF00443                                            0443 01257000
         LR    @10,@04                                             0443 01258000
         AL    @10,@TF00001                                        0443 01259000
         AL    @10,@CF00729                                        0443 01260000
         CLC   KEYWORD(3),SHARSERA-10(@10)                         0443 01261000
         BNE   @RF00443                                            0443 01262000
*       IF(KEYWORD(4:5)>=SHRCUAAL(I)&KEYWORD(4:5)<=SHRCUAAH(I))|(  0444 01263000
*           HOLDAREA(1:2)>=SHRCUAAL(I)&HOLDAREA(1:2)<=SHRCUAAH(I))|(    01264000
*           SHRCUAAL(I)>=KEYWORD(4:5)&SHRCUAAL(I)<=HOLDAREA(1:2))|(     01265000
*           SHRCUAAH(I)>=KEYWORD(4:5)&SHRCUAAH(I)<=HOLDAREA(1:2)) THEN  01266000
         LR    @10,@04                                             0444 01267000
         AL    @10,@TF00001                                        0444 01268000
         AL    @10,@CF00735                                        0444 01269000
         CLC   KEYWORD+3(2),SHRCUAAL-13(@10)                       0444 01270000
         BL    @GL00027                                            0444 01271000
         AL    @04,@TF00001                                        0444 01272000
         BCTR  @04,0                                               0444 01273000
         CLC   KEYWORD+3(2),SHRCUAAH-15(@04)                       0444 01274000
         BNH   @RT00444                                            0444 01275000
@GL00027 L     @10,I                                               0444 01276000
         SLA   @10,4                                               0444 01277000
         L     @04,SHAREPTR(,R2)                                   0444 01278000
         ST    @10,@TF00001                                        0444 01279000
         ALR   @10,@04                                             0444 01280000
         AL    @10,@CF00735                                        0444 01281000
         CLC   HOLDAREA(2),SHRCUAAL-13(@10)                        0444 01282000
         BL    @GL00026                                            0444 01283000
         AL    @04,@TF00001                                        0444 01284000
         BCTR  @04,0                                               0444 01285000
         CLC   HOLDAREA(2),SHRCUAAH-15(@04)                        0444 01286000
         BNH   @RT00444                                            0444 01287000
@GL00026 L     @10,I                                               0444 01288000
         SLA   @10,4                                               0444 01289000
         L     @04,SHAREPTR(,R2)                                   0444 01290000
         ST    @10,@TF00001                                        0444 01291000
         ALR   @10,@04                                             0444 01292000
         AL    @10,@CF00735                                        0444 01293000
         CLC   SHRCUAAL-13(2,@10),KEYWORD+3                        0444 01294000
         BL    @GL00025                                            0444 01295000
         AL    @04,@TF00001                                        0444 01296000
         AL    @04,@CF00735                                        0444 01297000
         CLC   SHRCUAAL-13(2,@04),HOLDAREA                         0444 01298000
         BNH   @RT00444                                            0444 01299000
@GL00025 L     @10,I                                               0444 01300000
         SLA   @10,4                                               0444 01301000
         L     @04,SHAREPTR(,R2)                                   0444 01302000
         ST    @10,@TF00001                                        0444 01303000
         ALR   @10,@04                                             0444 01304000
         BCTR  @10,0                                               0444 01305000
         CLC   SHRCUAAH-15(2,@10),KEYWORD+3                        0444 01306000
         BL    @RF00444                                            0444 01307000
         AL    @04,@TF00001                                        0444 01308000
         BCTR  @04,0                                               0444 01309000
         CLC   SHRCUAAH-15(2,@04),HOLDAREA                         0444 01310000
         BH    @RF00444                                            0444 01311000
@RT00444 DS    0H                                                  0445 01312000
*         IF KEYWORD(1:7)^=SHRCUCPU(I) THEN                        0445 01313000
         L     @10,I                                               0445 01314000
         SLA   @10,4                                               0445 01315000
         L     @04,SHAREPTR(,R2)                                   0445 01316000
         ALR   @04,@10                                             0445 01317000
         AL    @04,@CF00729                                        0445 01318000
         CLC   KEYWORD(7),SHRCUCPU-10(@04)                         0445 01319000
         BE    @RF00445                                            0445 01320000
*           DO;                                                    0446 01321000
*             PLACE=INDEX1-CUAPLACE+THREE;/* POSITION OF SYNTAX ERROR*/ 01322000
         LR    @10,INDEX1                                          0447 01323000
         SL    @10,CUAPLACE                                        0447 01324000
         AL    @10,@CF00076                                        0447 01325000
         ST    @10,PLACE                                           0447 01326000
*             CALL OUTMSG(RANGETAX);/* INVALID RANGE MESSAGE         */ 01327000
         LA    @01,@AL00448                                        0448 01328000
         BAL   @14,OUTMSG                                          0448 01329000
*             SWITCH=ON;            /* GET OUT OF LOOP               */ 01330000
         OI    SWITCH,B'00100000'                                  0449 01331000
*             RETCODE=TWELVE;       /* SET RETURN CODE               */ 01332000
         L     @10,@PC00001                                        0450 01333000
         MVC   RETCODE(4,@10),@CF00066                             0450 01334000
*           END;                                                   0451 01335000
*         ELSE                                                     0452 01336000
*           ;                       /* RANGE OKAY                    */ 01337000
@RF00445 DS    0H                                                  0453 01338000
*       ELSE                                                       0453 01339000
*         ;                         /* RANGE OKAY                    */ 01340000
@RF00444 DS    0H                                                  0454 01341000
*     ELSE                                                         0454 01342000
*       ;                           /* CPU # DIFFERENT               */ 01343000
@RF00443 DS    0H                                                  0455 01344000
*     RESPECIFY                                                    0455 01345000
*      (R15) RESTRICTED;                                           0455 01346000
*     IF SWITCH=ON THEN             /* TEST FOR INVALID RANGE        */ 01347000
         TM    SWITCH,B'00100000'                                  0456 01348000
         BNO   @RF00456                                            0456 01349000
*       R15=TWELVE;                 /* SET RETURN CODE               */ 01350000
         LA    R15,12                                              0457 01351000
*     ELSE                                                         0458 01352000
*       R15=ZERO;                   /* SET GOOD RETURN CODE          */ 01353000
         B     @RC00456                                            0458 01354000
@RF00456 SLR   R15,R15                                             0458 01355000
*     RESPECIFY                                                    0459 01356000
*      (R15) UNRESTRICTED;                                         0459 01357000
@RC00456 DS    0H                                                  0460 01358000
*   END;                                                           0460 01359000
         LA    @10,1                                               0460 01360000
         AL    @10,I                                               0460 01361000
         ST    @10,I                                               0460 01362000
@DE00431 C     @10,INDEX2                                          0460 01363000
         BNH   @DL00431                                            0460 01364000
@DC00431 DS    0H                                                  0461 01365000
*   END SHRSEARH;                                                  0461 01366000
@EL00009 DS    0H                                                  0461 01367000
@EF00009 DS    0H                                                  0461 01368000
@ER00009 L     @14,@SA00009                                        0461 01369000
         LM    @00,@04,@SA00009+4                                  0461 01370000
         LM    @06,@12,@SA00009+24                                 0461 01371000
         BR    @14                                                 0461 01372000
*                                                                  0462 01373000
*/********************************************************************/ 01374000
*/*                                                                  */ 01375000
*/*  THIS PROC WILL MAKE RANGE CHECKS ON THE ALTERNATE CUAS INPUT    */ 01376000
*/*  ON A SHARE CARD ONLY. THE RANGE OF THE ALTERNATE CUAS MUST BE   */ 01377000
*/*  EQUAL TO THE RANGE OF THE BASE CUAS. THE ALTERNATE CPU/CUA      */ 01378000
*/*  MUST NOT APPEAR AS THE BASE ENTRY OF ANOTHER SHARE CARD OR AS   */ 01379000
*/*  THE ALTERNATE OF MORE THAN ONE CPU/CUA.                         */ 01380000
*/*                                                                  */ 01381000
*/********************************************************************/ 01382000
*                                                                  0462 01383000
*ALTRANGE:                                                         0462 01384000
*   PROC OPTIONS(DONTSAVE(R5,R15));                                0462 01385000
ALTRANGE ST    @14,@SA00010                                        0462 01386000
         STM   @00,@04,@SA00010+4                                  0462 01387000
         STM   @06,@12,@SA00010+24                                 0462 01388000
*   BASERNG=BASEHCUA-BASELCUA;      /* RANGE OF BASE CUAS            */ 01389000
         MVC   @ZT00002+2(2),BASEHCUA                              0463 01390000
         L     @10,@ZT00002                                        0463 01391000
         MVC   @ZT00002+2(2),BASELCUA                              0463 01392000
         SL    @10,@ZT00002                                        0463 01393000
         ST    @10,@TF00001                                        0463 01394000
         MVC   BASERNG(2),@TF00001+2                               0463 01395000
*   ALTRNG=KEYWORD(6:7)-KEYWORD(4:5);/* RANGE OF ALT CUAS            */ 01396000
         MVC   @ZT00002+2(2),KEYWORD+5                             0464 01397000
         L     @10,@ZT00002                                        0464 01398000
         MVC   @ZT00002+2(2),KEYWORD+3                             0464 01399000
         SL    @10,@ZT00002                                        0464 01400000
         ST    @10,@TF00001                                        0464 01401000
         MVC   ALTRNG(2),@TF00001+2                                0464 01402000
*   IF ALTRNG^=BASERNG THEN         /* SEE IF RANGES ARE EQUAL       */ 01403000
         CLC   ALTRNG(2),BASERNG                                   0465 01404000
         BE    @RF00465                                            0465 01405000
*     DO;                                                          0466 01406000
*       PLACE=INDEX1-CUAPLACE+THREE;/* POSITION OF SYNTAX ERROR      */ 01407000
         LR    @10,INDEX1                                          0467 01408000
         SL    @10,CUAPLACE                                        0467 01409000
         AL    @10,@CF00076                                        0467 01410000
         ST    @10,PLACE                                           0467 01411000
*       CALL OUTMSG(RANGESYN);      /* INVALID RANGE MESSAGE         */ 01412000
         LA    @01,@AL00468                                        0468 01413000
         BAL   @14,OUTMSG                                          0468 01414000
*       RESPECIFY                                                  0469 01415000
*        (R15) RESTRICTED;                                         0469 01416000
*       R15=TWELVE;                 /* PUT RETURN CODE IN R15        */ 01417000
         LA    R15,12                                              0470 01418000
*       RESPECIFY                                                  0471 01419000
*        (R15) UNRESTRICTED;                                       0471 01420000
*     END;                                                         0472 01421000
*   ELSE                            /* TEST FOR ALT AS BASE          */ 01422000
*     DO;                                                          0473 01423000
         B     @RC00465                                            0473 01424000
@RF00465 DS    0H                                                  0474 01425000
*       RESPECIFY                                                  0474 01426000
*        (R15) RESTRICTED;                                         0474 01427000
*       SWITCH=OFF;                 /* SEE IF ALT CPU/CUA IS A BASE  */ 01428000
         NI    SWITCH,B'11011111'                                  0475 01429000
*       DO I=1 TO INDEX2 BY 1 WHILE(SWITCH=OFF);                   0476 01430000
         LA    @14,1                                               0476 01431000
         ST    @14,I                                               0476 01432000
         B     @DE00476                                            0476 01433000
@DL00476 TM    SWITCH,B'00100000'                                  0476 01434000
         BNZ   @DC00476                                            0476 01435000
*         IF SHAREFLG(I)=CHARS&(SHRBASE(I)=KEYWORD(1:7)|(KEYWORD(1:7)=  01436000
*             SHRCUCPU(I)&BASENTRY^=SHRBASE(I))) THEN              0477 01437000
         SLA   @14,4                                               0477 01438000
         L     @10,SHAREPTR(,R2)                                   0477 01439000
         ST    @14,@TF00001                                        0477 01440000
         ALR   @14,@10                                             0477 01441000
         AL    @14,@CF00727                                        0477 01442000
         CLI   SHAREFLG-2(@14),C'S'                                0477 01443000
         BNE   @RF00477                                            0477 01444000
         LR    @14,@10                                             0477 01445000
         AL    @14,@TF00001                                        0477 01446000
         AL    @14,@CF00728                                        0477 01447000
         CLC   SHRBASE-3(7,@14),KEYWORD                            0477 01448000
         BE    @RT00477                                            0477 01449000
         LR    @14,@10                                             0477 01450000
         AL    @14,@TF00001                                        0477 01451000
         AL    @14,@CF00729                                        0477 01452000
         CLC   KEYWORD(7),SHRCUCPU-10(@14)                         0477 01453000
         BNE   @RF00477                                            0477 01454000
         AL    @10,@TF00001                                        0477 01455000
         AL    @10,@CF00728                                        0477 01456000
         CLC   BASENTRY(7),SHRBASE-3(@10)                          0477 01457000
         BE    @RF00477                                            0477 01458000
@RT00477 DS    0H                                                  0478 01459000
*           DO;                     /* ERROR FOUND                   */ 01460000
*             SWITCH=ON;            /* GET OUT OF LOOP               */ 01461000
         OI    SWITCH,B'00100000'                                  0479 01462000
*             PLACE=INDEX1-CUAPLACE+THREE;/* POSITION OF SYNTAX ERROR*/ 01463000
         LR    @14,INDEX1                                          0480 01464000
         SL    @14,CUAPLACE                                        0480 01465000
         AL    @14,@CF00076                                        0480 01466000
         ST    @14,PLACE                                           0480 01467000
*             CALL OUTMSG(RANGETAX);/* INVALID RANGE MESSAGE         */ 01468000
         LA    @01,@AL00481                                        0481 01469000
         BAL   @14,OUTMSG                                          0481 01470000
*             R15=TWELVE;           /* SET RETURN CODE               */ 01471000
         LA    R15,12                                              0482 01472000
*           END;                                                   0483 01473000
*         ELSE                                                     0484 01474000
*           R15=ZERO;               /* SET RETURN CODE               */ 01475000
         B     @RC00477                                            0484 01476000
@RF00477 SLR   R15,R15                                             0484 01477000
*       END;                                                       0485 01478000
@RC00477 LA    @14,1                                               0485 01479000
         AL    @14,I                                               0485 01480000
         ST    @14,I                                               0485 01481000
@DE00476 C     @14,INDEX2                                          0485 01482000
         BNH   @DL00476                                            0485 01483000
@DC00476 DS    0H                                                  0486 01484000
*       RESPECIFY                                                  0486 01485000
*        (R15) UNRESTRICTED;                                       0486 01486000
*     END;                                                         0487 01487000
*   END ALTRANGE;                                                  0488 01488000
@EL00010 DS    0H                                                  0488 01489000
@EF00010 DS    0H                                                  0488 01490000
@ER00010 L     @14,@SA00010                                        0488 01491000
         LM    @00,@04,@SA00010+4                                  0488 01492000
         LM    @06,@12,@SA00010+24                                 0488 01493000
         BR    @14                                                 0488 01494000
*                                                                  0489 01495000
*/********************************************************************/ 01496000
*/*                                                                  */ 01497000
*/*  THIS PROC WILL SEARCH THE INPUT CARD PARMFLD FOR ONE OF THREE   */ 01498000
*/*  DELIMITERS. THE ACCEPTED DELIMITERS ARE ',' OR ')' OR ' '. IT   */ 01499000
*/*  WILL START THE SEARCH AT INDEX1 AND CONTINUE UNTIL THE END OF   */ 01500000
*/*  INPUT (ENDCARD). IT WILL SET INDEX1 TO THE LAST PLACE SCANED.   */ 01501000
*/*                                                                  */ 01502000
*/********************************************************************/ 01503000
*                                                                  0489 01504000
*FINDDELM:                                                         0489 01505000
*   PROC OPTIONS(DONTSAVE(R5,R15));                                0489 01506000
FINDDELM ST    @14,12(,@13)                                        0489 01507000
         STM   @00,@04,20(@13)                                     0489 01508000
         STM   @06,@12,44(@13)                                     0489 01509000
*   DO I=INDEX1 TO ENDCARD BY 1 WHILE(PARMFLD(I)^=COMMA&PARMFLD(I)^=    01510000
*         RPAREN&PARMFLD(I)^=BLANK);                               0490 01511000
         LR    @10,INDEX1                                          0490 01512000
         ST    @10,I                                               0490 01513000
         B     @DE00490                                            0490 01514000
@DL00490 LA    @04,PARMFLD-1(@10)                                  0490 01515000
         CLI   0(@04),C','                                         0490 01516000
         BE    @DC00490                                            0490 01517000
         LA    @04,PARMFLD-1(@10)                                  0490 01518000
         CLI   0(@04),C')'                                         0490 01519000
         BE    @DC00490                                            0490 01520000
         LA    @04,PARMFLD-1(@10)                                  0490 01521000
         CLI   0(@04),C' '                                         0490 01522000
         BE    @DC00490                                            0490 01523000
*   END;                                                           0491 01524000
         AL    @10,@CF00053                                        0491 01525000
         ST    @10,I                                               0491 01526000
@DE00490 CH    @10,@CH00596                                        0491 01527000
         BNH   @DL00490                                            0491 01528000
@DC00490 DS    0H                                                  0492 01529000
*   INDEX1=I;                       /* SET POINTER TO NEXT CPU/CUA   */ 01530000
         L     INDEX1,I                                            0492 01531000
*   END FINDDELM;                                                  0493 01532000
@EL00011 DS    0H                                                  0493 01533000
@EF00011 DS    0H                                                  0493 01534000
@ER00011 L     @14,12(,@13)                                        0493 01535000
         LM    @00,@04,20(@13)                                     0493 01536000
         LM    @06,@12,44(@13)                                     0493 01537000
         BR    @14                                                 0493 01538000
*                                                                  0494 01539000
*/********************************************************************/ 01540000
*/*                                                                  */ 01541000
*/*  OUTPUT AN ERROR MESSAGE.  THE FLAG BEING PASSED AS A PARAMETER  */ 01542000
*/*  INDICATES THE TYPE OF ERROR.  IF THE INPUT PARAMETER STRING HAS */ 01543000
*/*  NOT BEEN OUTPUT, A HEADING IS WRITTEN OUT AND THE PARAMETER     */ 01544000
*/*  STRING IS WRITTEN OUT.  THEN THE ERROR MESSAGE IS WRITTEN OUT   */ 01545000
*/*  WITH AN ASTERISK IN THE PLACE WHERE THE SCAN ROUTINE IS LOCATED.*/ 01546000
*/*  THIS SHOULD INDICATE THE LOCATION OF THE ERROR.                 */ 01547000
*/********************************************************************/ 01548000
*                                                                  0494 01549000
*OUTMSG:                                                           0494 01550000
*   PROC(ERROR) OPTIONS(DONTSAVE(R5,R15));                         0494 01551000
OUTMSG   ST    @14,@SA00012                                        0494 01552000
         STM   @00,@04,@SA00012+4                                  0494 01553000
         STM   @06,@12,@SA00012+24                                 0494 01554000
         MVC   @PC00012(4),0(@01)                                  0494 01555000
*   DCL                                                            0495 01556000
*     ERROR FIXED(31);                                             0495 01557000
*   IF INDEX1<=80 THEN                                             0496 01558000
         CH    INDEX1,@CH00540                                     0496 01559000
         BH    @RF00496                                            0496 01560000
*     DO INDEX1=INDEX1-PLACE;                                      0497 01561000
         LR    @10,INDEX1                                          0497 01562000
         SL    @10,PLACE                                           0497 01563000
         LR    INDEX1,@10                                          0497 01564000
*       IF ERROR=RANGETAX THEN                                     0498 01565000
         L     @10,@PC00012                                        0498 01566000
         CLC   ERROR(4,@10),@CF00074                               0498 01567000
         BNE   @RF00498                                            0498 01568000
*         CALL IFCMSG(91,ADDR(MSGNO));/* RANGE OVERLAPS INVALIDLY    */ 01569000
         LA    @10,MSGNO                                           0499 01570000
         ST    @10,@AFTEMPS                                        0499 01571000
         L     @15,ADIFCMSG(,R2)                                   0499 01572000
         LA    @01,@AL00499                                        0499 01573000
         BALR  @14,@15                                             0499 01574000
*       ELSE                                                       0500 01575000
*         IF ERROR=RANGESYN THEN                                   0500 01576000
         B     @RC00498                                            0500 01577000
@RF00498 L     @10,@PC00012                                        0500 01578000
         CLC   ERROR(4,@10),@CF00076                               0500 01579000
         BNE   @RF00500                                            0500 01580000
*           CALL IFCMSG(90,ADDR(MSGNO));/* RANGE HAS SYNTAX ERROR    */ 01581000
         LA    @10,MSGNO                                           0501 01582000
         ST    @10,@AFTEMPS                                        0501 01583000
         L     @15,ADIFCMSG(,R2)                                   0501 01584000
         LA    @01,@AL00501                                        0501 01585000
         BALR  @14,@15                                             0501 01586000
*         ELSE                                                     0502 01587000
*           CALL IFCMSG(65,ADDR(MSGNO));/* SYNTAX ERROR              */ 01588000
         B     @RC00500                                            0502 01589000
@RF00500 LA    @10,MSGNO                                           0502 01590000
         ST    @10,@AFTEMPS                                        0502 01591000
         L     @15,ADIFCMSG(,R2)                                   0502 01592000
         LA    @01,@AL00502                                        0502 01593000
         BALR  @14,@15                                             0502 01594000
*       PARMPRT(INDEX1)=STAR;       /* INSERT ASTERISK               */ 01595000
@RC00500 DS    0H                                                  0503 01596000
@RC00498 LA    @10,PARMPRT-1(INDEX1)                               0503 01597000
         MVI   0(@10),C'*'                                         0503 01598000
*       PRINTADR=ADDR(PARMPT);      /* ADDR OF OUPUT BUFFER          */ 01599000
         LA    @10,PARMPT                                          0504 01600000
         ST    @10,PRINTADR(,R2)                                   0504 01601000
*       CALL IOHND(RITEPRTR);       /* WRITE ERROR MESSAGE           */ 01602000
         L     @15,ADIOHND(,R2)                                    0505 01603000
         LA    @01,@AL00505                                        0505 01604000
         BALR  @14,@15                                             0505 01605000
*       INDEX1=INDEX1+PLACE;                                       0506 01606000
         AL    INDEX1,PLACE                                        0506 01607000
*     END;                                                         0507 01608000
*   PLACE=ZERO;                                                    0508 01609000
@RF00496 SLR   @10,@10                                             0508 01610000
         ST    @10,PLACE                                           0508 01611000
*   RETCODE=TWELVE;                 /* SET RETURN CODE               */ 01612000
         L     @10,@PC00001                                        0509 01613000
         MVC   RETCODE(4,@10),@CF00066                             0509 01614000
*   END;                                                           0510 01615000
@EL00012 DS    0H                                                  0510 01616000
@EF00012 DS    0H                                                  0510 01617000
@ER00012 L     @14,@SA00012                                        0510 01618000
         LM    @00,@04,@SA00012+4                                  0510 01619000
         LM    @06,@12,@SA00012+24                                 0510 01620000
         BR    @14                                                 0510 01621000
*                                                                  0511 01622000
*/********************************************************************/ 01623000
*/*                                                                  */ 01624000
*/*  THIS PROC WILL PRINT THE ERROR MESSAGE THAT THE SHARE/CONTROLLER*/ 01625000
*/*  TABLE IS FULL.                                                  */ 01626000
*/*                                                                  */ 01627000
*/********************************************************************/ 01628000
*                                                                  0511 01629000
*MSGTABFL:                                                         0511 01630000
*   PROC OPTIONS(DONTSAVE(R5,R15));                                0511 01631000
MSGTABFL ST    @14,@SA00013                                        0511 01632000
         STM   @00,@04,@SA00013+4                                  0511 01633000
         STM   @06,@12,@SA00013+24                                 0511 01634000
*   CALL IFCMSG(89,ADDR(MSGNO));    /* GET MESSAGE TEXT              */ 01635000
         LA    @10,MSGNO                                           0512 01636000
         ST    @10,@AFTEMPS+4                                      0512 01637000
         L     @15,ADIFCMSG(,R2)                                   0512 01638000
         LA    @01,@AL00512                                        0512 01639000
         BALR  @14,@15                                             0512 01640000
*   PRINTADR=ADDR(PARMPT);                                         0513 01641000
         LA    @10,PARMPT                                          0513 01642000
         ST    @10,PRINTADR(,R2)                                   0513 01643000
*   CALL IOHND(RITEPRTR);           /* WRITE ERROR MESSAGE           */ 01644000
         L     @15,ADIOHND(,R2)                                    0514 01645000
         LA    @01,@AL00514                                        0514 01646000
         BALR  @14,@15                                             0514 01647000
*   RETCODE=TWELVE;                 /* SET RETURN CODE               */ 01648000
         L     @10,@PC00001                                        0515 01649000
         MVC   RETCODE(4,@10),@CF00066                             0515 01650000
*   END MSGTABFL;                                                  0516 01651000
@EL00013 DS    0H                                                  0516 01652000
@EF00013 DS    0H                                                  0516 01653000
@ER00013 L     @14,@SA00013                                        0516 01654000
         LM    @00,@04,@SA00013+4                                  0516 01655000
         LM    @06,@12,@SA00013+24                                 0516 01656000
         BR    @14                                                 0516 01657000
*                                                                  0517 01658000
*/********************************************************************/ 01659000
*/*                                                                  */ 01660000
*/*  CONVERT THE HEXADECIMAL VALUES IN THE BYTES STRAIGHT TO         */ 01661000
*/*  CHARACTER REPRESENTATION.                                       */ 01662000
*/********************************************************************/ 01663000
*                                                                  0517 01664000
*UNPACK:                                                           0517 01665000
*   PROC(OPLEN) OPTIONS(DONTSAVE(R5,R15));                         0517 01666000
UNPACK   ST    @14,@SA00014                                        0517 01667000
         STM   @00,@04,@SA00014+4                                  0517 01668000
         STM   @06,@12,@SA00014+24                                 0517 01669000
         MVC   @PC00014(4),0(@01)                                  0517 01670000
*   DCL                                                            0518 01671000
*     OPLEN FIXED(31);              /* NUMBER OF CHAR TO CONVERT     */ 01672000
*   DO J=1 TO OPLEN BY 1;                                          0519 01673000
         LA    @10,1                                               0519 01674000
         ST    @10,J                                               0519 01675000
         B     @DE00519                                            0519 01676000
@DL00519 DS    0H                                                  0520 01677000
*     HOLDAREA=HOLDAREA&&HOLDAREA;  /* CHEAR HOLD AREA               */ 01678000
         XC    HOLDAREA(5),HOLDAREA                                0520 01679000
*     HOLDAREA(2)=PARMFLD(J);       /* CHARACTERS ARE IN PARMFLD     */ 01680000
         LA    @04,PARMFLD-1(@10)                                  0521 01681000
         MVC   HOLDAREA+1(1),0(@04)                                0521 01682000
*     SLL(HOLDAREA(1:2),FOUR);      /* SHIFT FIRST TO FIRST BYTE     */ 01683000
         MVC   @ZT00002+2(2),HOLDAREA                              0522 01684000
         L     @04,@ZT00002                                        0522 01685000
         SLL   @04,4                                               0522 01686000
         STH   @04,@TF00001                                        0522 01687000
         MVC   HOLDAREA(2),@TF00001                                0522 01688000
*     SRL(HOLDAREA(2:2),FOUR);      /* SECOND TO SECOND BYTE         */ 01689000
         SLR   @04,@04                                             0523 01690000
         IC    @04,HOLDAREA+1                                      0523 01691000
         SRL   @04,4                                               0523 01692000
         STC   @04,HOLDAREA+1                                      0523 01693000
*     INDEX3=HOLDAREA(1)+1;         /* GET VALUE AS INDEX            */ 01694000
         LA    @04,1                                               0524 01695000
         SLR   @03,@03                                             0524 01696000
         IC    @03,HOLDAREA                                        0524 01697000
         ALR   @03,@04                                             0524 01698000
         ST    @03,INDEX3                                          0524 01699000
*     PARMPT(2*J+1)=NUMTAB(INDEX3); /* STORE CHARACTER               */ 01700000
         LR    @15,@10                                             0525 01701000
         ALR   @15,@15                                             0525 01702000
         LA    @14,PARMPT(@15)                                     0525 01703000
         LA    @01,NUMTAB-1(@03)                                   0525 01704000
         MVC   0(1,@14),0(@01)                                     0525 01705000
*     INDEX3=HOLDAREA(2)+1;         /* GET VALUE AS INDEX            */ 01706000
         MVC   @ZT00003+3(1),HOLDAREA+1                            0526 01707000
         AL    @04,@ZT00003                                        0526 01708000
         ST    @04,INDEX3                                          0526 01709000
*     PARMPT(2*J+2)=NUMTAB(INDEX3); /* STORE CHARACTER               */ 01710000
         LA    @03,PARMPT+1(@15)                                   0527 01711000
         LA    @01,NUMTAB-1(@04)                                   0527 01712000
         MVC   0(1,@03),0(@01)                                     0527 01713000
*   END;                                                           0528 01714000
         AL    @10,@CF00053                                        0528 01715000
         ST    @10,J                                               0528 01716000
@DE00519 L     @04,@PC00014                                        0528 01717000
         C     @10,OPLEN(,@04)                                     0528 01718000
         BNH   @DL00519                                            0528 01719000
*   PRINTADR=ADDR(PARMPT);                                         0529 01720000
         LA    @10,PARMPT                                          0529 01721000
         ST    @10,PRINTADR(,R2)                                   0529 01722000
*   CALL IOHND(RITEPRTR);                                          0530 01723000
         L     @15,ADIOHND(,R2)                                    0530 01724000
         LA    @01,@AL00530                                        0530 01725000
         BALR  @14,@15                                             0530 01726000
*   END;                                                           0531 01727000
@EL00014 DS    0H                                                  0531 01728000
@EF00014 DS    0H                                                  0531 01729000
@ER00014 L     @14,@SA00014                                        0531 01730000
         LM    @00,@04,@SA00014+4                                  0531 01731000
         LM    @06,@12,@SA00014+24                                 0531 01732000
         BR    @14                                                 0531 01733000
*                                                                  0532 01734000
*/********************************************************************/ 01735000
*/*                                                                  */ 01736000
*/*  VALID THE FIELD STARTING AT PARMFLD(INDEX1) FOR A LENGTH AS     */ 01737000
*/*  GIVEN AS THE INPUT PARAMETER.  IF A CHARACTER IS NOT FOUND TO   */ 01738000
*/*  BE A VALID NUMERIC, THE FIELD IS INDICATED AS HAVING A SYNTAX   */ 01739000
*/*  ERROR.  THE CONTENTS OF THE ORIGINAL FIELD ARE CHANGED TO THE   */ 01740000
*/*  HEXADECIMAL EQUIVALENT FOR THE CHARACTER.  THOSE VALUES CAN THEN*/ 01741000
*/*  BE EASILY CONVERTED FOR THE NECESSARY FIELD.                    */ 01742000
*/*                                                                  */ 01743000
*/********************************************************************/ 01744000
*                                                                  0532 01745000
*VALIDNUM:                                                         0532 01746000
*   PROC(LENGTHV) OPTIONS(DONTSAVE(R5,R15));                       0532 01747000
VALIDNUM ST    @14,@SA00015                                        0532 01748000
         STM   @00,@04,@SA00015+4                                  0532 01749000
         STM   @06,@12,@SA00015+24                                 0532 01750000
         MVC   @PC00015(4),0(@01)                                  0532 01751000
*   DCL                                                            0533 01752000
*     LENGTHV FIXED(31);            /* LENGTH OF THE INPUT FLD       */ 01753000
*   SWITCH=OFF;                     /* INDICATOR OF INVALID DIGIT    */ 01754000
         NI    SWITCH,B'11011111'                                  0534 01755000
*   I=INDEX1+LENGTHV-1;             /* LAST CHARACTER POSITION       */ 01756000
         L     @10,@PC00015                                        0535 01757000
         LR    @04,INDEX1                                          0535 01758000
         AL    @04,LENGTHV(,@10)                                   0535 01759000
         BCTR  @04,0                                               0535 01760000
         ST    @04,I                                               0535 01761000
*   DO INDEX3=INDEX1 TO I BY 1;                                    0536 01762000
         LR    @10,INDEX1                                          0536 01763000
         ST    @10,INDEX3                                          0536 01764000
         B     @DE00536                                            0536 01765000
@DL00536 DS    0H                                                  0537 01766000
*     VALID=OFF;                                                   0537 01767000
*                                                                  0537 01768000
         NI    VALID,B'01111111'                                   0537 01769000
*     /***************************************************************/ 01770000
*     /*                                                             */ 01771000
*     /* CHECK TO SEE IF THE FIELD IS A VALID DECIMAL NUMBER. IF YES,*/ 01772000
*     /* TERMINATE THE SEARCH AND REPLACE THE CHARACTER WITH         */ 01773000
*     /* HEXADECIMAL EQUIVALENT. IF NO, PRINT AN ERROR MESSAGE FOR   */ 01774000
*     /* THIS OPERAND.                                               */ 01775000
*     /*                                                             */ 01776000
*     /***************************************************************/ 01777000
*                                                                  0538 01778000
*     DO J=10 TO 1 BY-1 WHILE(VALID=OFF);                          0538 01779000
         LA    @10,10                                              0538 01780000
         ST    @10,J                                               0538 01781000
@DL00538 TM    VALID,B'10000000'                                   0538 01782000
         BNZ   @DC00538                                            0538 01783000
*       IF PARMFLD(INDEX3)=NUMTAB(J) THEN                          0539 01784000
         L     @04,INDEX3                                          0539 01785000
         LA    @03,PARMFLD-1(@04)                                  0539 01786000
         LA    @01,NUMTAB-1(@10)                                   0539 01787000
         CLC   0(1,@03),0(@01)                                     0539 01788000
         BNE   @RF00539                                            0539 01789000
*         DO;                                                      0540 01790000
*           VALID=ON;               /* VALID CHAR IS FOUND           */ 01791000
         OI    VALID,B'10000000'                                   0541 01792000
*           PARMFLD(INDEX3)=HEXTAB(J);/* CONVERT TO HEX DIGIT        */ 01793000
         LA    @03,PARMFLD-1(@04)                                  0542 01794000
         LA    @04,HEXTAB-1(@10)                                   0542 01795000
         MVC   0(1,@03),0(@04)                                     0542 01796000
*         END;                                                     0543 01797000
*     END;                                                         0544 01798000
@RF00539 SLR   @10,@10                                             0544 01799000
         BCTR  @10,0                                               0544 01800000
         AL    @10,J                                               0544 01801000
         ST    @10,J                                               0544 01802000
         LTR   @10,@10                                             0544 01803000
         BP    @DL00538                                            0544 01804000
@DC00538 DS    0H                                                  0545 01805000
*     IF VALID=OFF THEN                                            0545 01806000
         TM    VALID,B'10000000'                                   0545 01807000
         BNZ   @RF00545                                            0545 01808000
*       DO PLACE=INDEX1-INDEX3;     /* LOCATION OF INVALID DIGIT     */ 01809000
         LR    @10,INDEX1                                          0546 01810000
         SL    @10,INDEX3                                          0546 01811000
         ST    @10,PLACE                                           0546 01812000
*         CALL OUTMSG(SYNTAX);      /* WRITE ERROR MESSAGE           */ 01813000
         LA    @01,@AL00547                                        0547 01814000
         BAL   @14,OUTMSG                                          0547 01815000
*         SWITCH=ON;                /* AT LEAST ONE INVALID CHAR   0548 01816000
*                                      FOUND                         */ 01817000
         OI    SWITCH,B'00100000'                                  0548 01818000
*       END;                                                       0549 01819000
*   END;                                                           0550 01820000
@RF00545 LA    @10,1                                               0550 01821000
         AL    @10,INDEX3                                          0550 01822000
         ST    @10,INDEX3                                          0550 01823000
@DE00536 C     @10,I                                               0550 01824000
         BNH   @DL00536                                            0550 01825000
*   RESPECIFY                                                      0551 01826000
*    (R15) RESTRICTED;                                             0551 01827000
*   IF SWITCH=ON THEN               /* AT LEAST ONE INVALID CHAR     */ 01828000
         TM    SWITCH,B'00100000'                                  0552 01829000
         BNO   @RF00552                                            0552 01830000
*     R15=TWELVE;                   /* SET RETURN CODE               */ 01831000
         LA    R15,12                                              0553 01832000
*   ELSE                                                           0554 01833000
*     R15=ZERO;                     /* NO ERRORS FOUND               */ 01834000
         B     @RC00552                                            0554 01835000
@RF00552 SLR   R15,R15                                             0554 01836000
*   RESPECIFY                                                      0555 01837000
*    (R15) UNRESTRICTED;                                           0555 01838000
*   END;                                                           0556 01839000
@EL00015 DS    0H                                                  0556 01840000
@EF00015 DS    0H                                                  0556 01841000
@ER00015 L     @14,@SA00015                                        0556 01842000
         LM    @00,@04,@SA00015+4                                  0556 01843000
         LM    @06,@12,@SA00015+24                                 0556 01844000
         BR    @14                                                 0556 01845000
*                                                                  0557 01846000
*/********************************************************************/ 01847000
*/*                                                                  */ 01848000
*/*  VALID THE FIELD STARTING AT PARMFLD(INDEX1) FOR A LENGTH AS     */ 01849000
*/*  GIVEN AS THE INPUT PARAMETER.  IF A CHARACTER IS NOT FOUND TO   */ 01850000
*/*  BE A VALID NUMERIC, THE FIELD IS INDICATED AS HAVING A SYNTAX   */ 01851000
*/*  ERROR.  THE CONTENTS OF THE ORIGINAL FIELD ARE CHANGED TO THE   */ 01852000
*/*  HEXADECIMAL EQUIVALENT FOR THE CHARACTER.  THOSE VALUES CAN THEN*/ 01853000
*/*  BE EASILY CONVERTED FOR THE NECESSARY FIELD.                    */ 01854000
*/*                                                                  */ 01855000
*/********************************************************************/ 01856000
*                                                                  0557 01857000
*VALIDCUA:                                                         0557 01858000
*   PROC(LENGTHC) OPTIONS(DONTSAVE(R5,R15));                       0557 01859000
VALIDCUA ST    @14,@SA00016                                        0557 01860000
         STM   @00,@04,@SA00016+4                                  0557 01861000
         STM   @06,@12,@SA00016+24                                 0557 01862000
         MVC   @PC00016(4),0(@01)                                  0557 01863000
*   DCL                                                            0558 01864000
*     LENGTHC FIXED(31);            /* LENGTH OF THE INPUT FLD       */ 01865000
*   SWITCH=OFF;                     /* INDICATOR OF INVALID CHAR     */ 01866000
         NI    SWITCH,B'11011111'                                  0559 01867000
*   I=INDEX1+LENGTHC-1;             /* LAST CHARACTER POSITION       */ 01868000
         L     @10,@PC00016                                        0560 01869000
         LR    @04,INDEX1                                          0560 01870000
         AL    @04,LENGTHC(,@10)                                   0560 01871000
         BCTR  @04,0                                               0560 01872000
         ST    @04,I                                               0560 01873000
*   DO INDEX3=INDEX1 TO I BY 1;                                    0561 01874000
         LR    @10,INDEX1                                          0561 01875000
         ST    @10,INDEX3                                          0561 01876000
         B     @DE00561                                            0561 01877000
@DL00561 DS    0H                                                  0562 01878000
*     VALID=OFF;                                                   0562 01879000
*                                                                  0562 01880000
         NI    VALID,B'01111111'                                   0562 01881000
*     /***************************************************************/ 01882000
*     /*                                                             */ 01883000
*     /* CHECK TO SEE IF THE FIELD IS A VALID DECIMAL NUMBER. IF YES,*/ 01884000
*     /* TERMINATE THE SEARCH AND REPLACE THE CHARACTER WITH         */ 01885000
*     /* HEXADECIMAL EQUIVALENT. IF NO, PRINT AN ERROR MESSAGE FOR   */ 01886000
*     /* THIS OPERAND.                                               */ 01887000
*     /*                                                             */ 01888000
*     /***************************************************************/ 01889000
*                                                                  0563 01890000
*     DO J=16 TO 1 BY-1 WHILE(VALID=OFF);                          0563 01891000
         LA    @10,16                                              0563 01892000
         ST    @10,J                                               0563 01893000
@DL00563 TM    VALID,B'10000000'                                   0563 01894000
         BNZ   @DC00563                                            0563 01895000
*       IF PARMFLD(INDEX3)=NUMTAB(J) THEN                          0564 01896000
         L     @04,INDEX3                                          0564 01897000
         LA    @03,PARMFLD-1(@04)                                  0564 01898000
         LA    @01,NUMTAB-1(@10)                                   0564 01899000
         CLC   0(1,@03),0(@01)                                     0564 01900000
         BNE   @RF00564                                            0564 01901000
*         DO;                                                      0565 01902000
*           VALID=ON;               /* VALID CHAR FOUND              */ 01903000
         OI    VALID,B'10000000'                                   0566 01904000
*           PARMFLD(INDEX3)=HEXTAB(J);/* CONVERT TO HEX DIGIT        */ 01905000
         LA    @03,PARMFLD-1(@04)                                  0567 01906000
         LA    @04,HEXTAB-1(@10)                                   0567 01907000
         MVC   0(1,@03),0(@04)                                     0567 01908000
*         END;                                                     0568 01909000
*     END;                                                         0569 01910000
@RF00564 SLR   @10,@10                                             0569 01911000
         BCTR  @10,0                                               0569 01912000
         AL    @10,J                                               0569 01913000
         ST    @10,J                                               0569 01914000
         LTR   @10,@10                                             0569 01915000
         BP    @DL00563                                            0569 01916000
@DC00563 DS    0H                                                  0570 01917000
*     IF VALID=OFF THEN                                            0570 01918000
         TM    VALID,B'10000000'                                   0570 01919000
         BNZ   @RF00570                                            0570 01920000
*       DO PLACE=INDEX1-INDEX3;     /* POSITION OF INVALID DIGIT     */ 01921000
         LR    @10,INDEX1                                          0571 01922000
         SL    @10,INDEX3                                          0571 01923000
         ST    @10,PLACE                                           0571 01924000
*         CALL OUTMSG(SYNTAX);      /* WRITE ERROR MESSAGE           */ 01925000
         LA    @01,@AL00572                                        0572 01926000
         BAL   @14,OUTMSG                                          0572 01927000
*         SWITCH=ON;                /* INVALID DIGIT FOUND           */ 01928000
         OI    SWITCH,B'00100000'                                  0573 01929000
*       END;                                                       0574 01930000
*   END;                                                           0575 01931000
@RF00570 LA    @10,1                                               0575 01932000
         AL    @10,INDEX3                                          0575 01933000
         ST    @10,INDEX3                                          0575 01934000
@DE00561 C     @10,I                                               0575 01935000
         BNH   @DL00561                                            0575 01936000
*   RESPECIFY                                                      0576 01937000
*    (R15) RESTRICTED;                                             0576 01938000
*   IF SWITCH=ON THEN               /* AT LEAST ONE INVALID CHAR     */ 01939000
         TM    SWITCH,B'00100000'                                  0577 01940000
         BNO   @RF00577                                            0577 01941000
*     R15=TWELVE;                   /* SET RETURN CODE               */ 01942000
         LA    R15,12                                              0578 01943000
*   ELSE                                                           0579 01944000
*     R15=ZERO;                     /* GOOD DIGITS                   */ 01945000
         B     @RC00577                                            0579 01946000
@RF00577 SLR   R15,R15                                             0579 01947000
*   RESPECIFY                                                      0580 01948000
*    (R15) UNRESTRICTED;                                           0580 01949000
*   END;                                                           0581 01950000
@EL00016 DS    0H                                                  0581 01951000
@EF00016 DS    0H                                                  0581 01952000
@ER00016 L     @14,@SA00016                                        0581 01953000
         LM    @00,@04,@SA00016+4                                  0581 01954000
         LM    @06,@12,@SA00016+24                                 0581 01955000
         BR    @14                                                 0581 01956000
*                                                                  0582 01957000
*/********************************************************************/ 01958000
*/*                                                                  */ 01959000
*/*  PACK A FIELD OF A GIVEN LENGTH INTO THE VARIABLE HOLD.  THE     */ 01960000
*/*  INPUT IS ASSUMED TO BE HEX CHARACTERS, WITH A LEADING ZERO FOR  */ 01961000
*/*  EACH TWO DIGITS.                                                */ 01962000
*/********************************************************************/ 01963000
*                                                                  0582 01964000
*HEXPACK:                                                          0582 01965000
*   PROC(HEXLEN) OPTIONS(DONTSAVE(R5,R15));                        0582 01966000
HEXPACK  ST    @14,12(,@13)                                        0582 01967000
         STM   @00,@04,20(@13)                                     0582 01968000
         STM   @06,@12,44(@13)                                     0582 01969000
         MVC   @PC00017(4),0(@01)                                  0582 01970000
*   DCL                                                            0583 01971000
*     HEXLEN FIXED(31);                                            0583 01972000
*   INDEX3=HEXLEN/2;                /* NO. BYTES OF OUTPUT           */ 01973000
         L     @10,@PC00017                                        0584 01974000
         L     @00,HEXLEN(,@10)                                    0584 01975000
         SRDA  @00,32                                              0584 01976000
         D     @00,@CF00074                                        0584 01977000
         ST    @01,INDEX3                                          0584 01978000
*   DO I=1 TO INDEX3 BY 1;                                         0585 01979000
*                                                                  0585 01980000
         LA    @10,1                                               0585 01981000
         ST    @10,I                                               0585 01982000
         B     @DE00585                                            0585 01983000
@DL00585 DS    0H                                                  0586 01984000
*     /***************************************************************/ 01985000
*     /*                                                             */ 01986000
*     /* THE DATA IN PARMFLD IS ACCESSED TWO CHARACTERS AT A TIME.   */ 01987000
*     /* THE FIRST CHARACTER IS SHIFTED LEFT FOUR BITS AND THEN ORED */ 01988000
*     /* WITH THE SECOND CHARACTER. THE SECOND CHARACTER IS ASSUMED  */ 01989000
*     /* TO HAVE THE FIRST FOUR BITS AS ZEROES.                      */ 01990000
*     /*                                                             */ 01991000
*     /***************************************************************/ 01992000
*                                                                  0586 01993000
*     HOLD(I)=PARMFLD(INDEX1);                                     0586 01994000
         LA    @04,HOLD-1(@10)                                     0586 01995000
         LA    @03,PARMFLD-1(INDEX1)                               0586 01996000
         MVC   0(1,@04),0(@03)                                     0586 01997000
*     SLL(HOLD(I),FOUR);                                           0587 01998000
         SLR   @04,@04                                             0587 01999000
         IC    @04,HOLD-1(@10)                                     0587 02000000
         SLL   @04,4                                               0587 02001000
         STC   @04,HOLD-1(@10)                                     0587 02002000
*     HOLD(I)=HOLD(I)|PARMFLD(INDEX1+1);                           0588 02003000
         LA    @04,HOLD-1(@10)                                     0588 02004000
         LA    @03,PARMFLD(INDEX1)                                 0588 02005000
         OC    0(1,@04),0(@03)                                     0588 02006000
*     INDEX1=INDEX1+2;              /* POINT PASS INPUT FIELD        */ 02007000
         AL    INDEX1,@CF00074                                     0589 02008000
*   END;                                                           0590 02009000
         AL    @10,@CF00053                                        0590 02010000
         ST    @10,I                                               0590 02011000
@DE00585 C     @10,INDEX3                                          0590 02012000
         BNH   @DL00585                                            0590 02013000
*   END;                                                           0591 02014000
@EL00017 DS    0H                                                  0591 02015000
@EF00017 DS    0H                                                  0591 02016000
@ER00017 L     @14,12(,@13)                                        0591 02017000
         LM    @00,@04,20(@13)                                     0591 02018000
         LM    @06,@12,44(@13)                                     0591 02019000
         BR    @14                                                 0591 02020000
*                                                                  0592 02021000
*/********************************************************************/ 02022000
*/*                                                                  */ 02023000
*/*  THIS PROC WILL SEARCH THE SHARE/CONTROLLER TABLE TO ASSIGN      */ 02024000
*/*  A LETTER TO EACH DISTINCT CPU IN THE TABLE. BASE ENTRIES ARE    */ 02025000
*/*  ASSIGNED LETTERS FIRST AND THEN NON-BASE ENTRIES.               */ 02026000
*/*                                                                  */ 02027000
*/********************************************************************/ 02028000
*                                                                  0592 02029000
*SHARLTR:                                                          0592 02030000
*   PROC OPTIONS(DONTSAVE(R5,R15));                                0592 02031000
SHARLTR  ST    @14,@SA00018                                        0592 02032000
         STM   @00,@04,@SA00018+4                                  0592 02033000
         STM   @06,@12,@SA00018+24                                 0592 02034000
*   I=ZERO;                                                        0593 02035000
         SLR   @10,@10                                             0593 02036000
         ST    @10,I                                               0593 02037000
*   DO J=1 TO INDEX2 BY 1 WHILE(I<=MAXCPUS);/* LETTERS FOR BASE      */ 02038000
         LA    @10,1                                               0594 02039000
         ST    @10,J                                               0594 02040000
         B     @DE00594                                            0594 02041000
@DL00594 L     @04,I                                               0594 02042000
         CH    @04,@CH00089                                        0594 02043000
         BH    @DC00594                                            0594 02044000
*     IF SHARLET(J)=STAR THEN       /* DO BASE ONLY                  */ 02045000
         SLA   @10,4                                               0595 02046000
         L     @03,SHAREPTR(,R2)                                   0595 02047000
         ALR   @03,@10                                             0595 02048000
         CLI   SHARLET-16(@03),C'*'                                0595 02049000
         BNE   @RF00595                                            0595 02050000
*       DO I=I+1;                                                  0596 02051000
         AL    @04,@CF00053                                        0596 02052000
         ST    @04,I                                               0596 02053000
*         SHARLET(J)=LETTAB(I);     /* ASSIGN LETTER                 */ 02054000
         L     @10,J                                               0597 02055000
         SLA   @10,4                                               0597 02056000
         L     @03,SHAREPTR(,R2)                                   0597 02057000
         ALR   @03,@10                                             0597 02058000
         LA    @10,LETTAB-1(@04)                                   0597 02059000
         MVC   SHARLET-16(1,@03),0(@10)                            0597 02060000
*         DO INDEX1=1 TO INDEX2 BY 1;                              0598 02061000
*                                                                  0598 02062000
         LA    INDEX1,1                                            0598 02063000
         B     @DE00598                                            0598 02064000
@DL00598 DS    0H                                                  0599 02065000
*           /*********************************************************/ 02066000
*           /*                                                       */ 02067000
*           /* CHECK IF BASE CPU SPECIFIED ELSEWHERE                 */ 02068000
*           /*                                                       */ 02069000
*           /*********************************************************/ 02070000
*                                                                  0599 02071000
*           IF SHARSERA(J)=SHARSERA(INDEX1) THEN                   0599 02072000
         L     @10,J                                               0599 02073000
         SLA   @10,4                                               0599 02074000
         L     @04,SHAREPTR(,R2)                                   0599 02075000
         LR    @03,INDEX1                                          0599 02076000
         SLA   @03,4                                               0599 02077000
         ALR   @10,@04                                             0599 02078000
         AL    @10,@CF00729                                        0599 02079000
         ST    @03,@TF00001                                        0599 02080000
         ALR   @03,@04                                             0599 02081000
         AL    @03,@CF00729                                        0599 02082000
         CLC   SHARSERA-10(3,@10),SHARSERA-10(@03)                 0599 02083000
         BNE   @RF00599                                            0599 02084000
*             SHARLET(INDEX1)=LETTAB(I);                           0600 02085000
         AL    @04,@TF00001                                        0600 02086000
         L     @10,I                                               0600 02087000
         LA    @03,LETTAB-1(@10)                                   0600 02088000
         MVC   SHARLET-16(1,@04),0(@03)                            0600 02089000
*         END;                                                     0601 02090000
@RF00599 AL    INDEX1,@CF00053                                     0601 02091000
@DE00598 C     INDEX1,INDEX2                                       0601 02092000
         BNH   @DL00598                                            0601 02093000
*       END;                                                       0602 02094000
*   END;                                                           0603 02095000
@RF00595 LA    @10,1                                               0603 02096000
         AL    @10,J                                               0603 02097000
         ST    @10,J                                               0603 02098000
@DE00594 C     @10,INDEX2                                          0603 02099000
         BNH   @DL00594                                            0603 02100000
@DC00594 DS    0H                                                  0604 02101000
*   DO J=1 TO INDEX2 BY 1 WHILE(I<=MAXCPUS);/* LETTERS FOR ALT       */ 02102000
         LA    @10,1                                               0604 02103000
         ST    @10,J                                               0604 02104000
         B     @DE00604                                            0604 02105000
@DL00604 L     @04,I                                               0604 02106000
         CH    @04,@CH00089                                        0604 02107000
         BH    @DC00604                                            0604 02108000
*     IF SHARLET(J)=BLANK THEN      /* DO UNASSIGNED                 */ 02109000
         SLA   @10,4                                               0605 02110000
         L     @03,SHAREPTR(,R2)                                   0605 02111000
         ALR   @03,@10                                             0605 02112000
         CLI   SHARLET-16(@03),C' '                                0605 02113000
         BNE   @RF00605                                            0605 02114000
*       DO I=I+1;                                                  0606 02115000
         AL    @04,@CF00053                                        0606 02116000
         ST    @04,I                                               0606 02117000
*         SHARLET(J)=LETTAB(I);     /* NEXT LETTER                   */ 02118000
         L     @10,J                                               0607 02119000
         SLA   @10,4                                               0607 02120000
         L     @03,SHAREPTR(,R2)                                   0607 02121000
         ALR   @03,@10                                             0607 02122000
         LA    @10,LETTAB-1(@04)                                   0607 02123000
         MVC   SHARLET-16(1,@03),0(@10)                            0607 02124000
*         DO INDEX1=1 TO INDEX2 BY 1;                              0608 02125000
*                                                                  0608 02126000
         LA    INDEX1,1                                            0608 02127000
         B     @DE00608                                            0608 02128000
@DL00608 DS    0H                                                  0609 02129000
*           /*********************************************************/ 02130000
*           /*                                                       */ 02131000
*           /* CHECK IF ALT CPU SPECIFIED ELSEWHERE                  */ 02132000
*           /*                                                       */ 02133000
*           /*********************************************************/ 02134000
*                                                                  0609 02135000
*           IF SHARSERA(J)=SHARSERA(INDEX1) THEN                   0609 02136000
         L     @10,J                                               0609 02137000
         SLA   @10,4                                               0609 02138000
         L     @04,SHAREPTR(,R2)                                   0609 02139000
         LR    @03,INDEX1                                          0609 02140000
         SLA   @03,4                                               0609 02141000
         ALR   @10,@04                                             0609 02142000
         AL    @10,@CF00729                                        0609 02143000
         ST    @03,@TF00001                                        0609 02144000
         ALR   @03,@04                                             0609 02145000
         AL    @03,@CF00729                                        0609 02146000
         CLC   SHARSERA-10(3,@10),SHARSERA-10(@03)                 0609 02147000
         BNE   @RF00609                                            0609 02148000
*             SHARLET(INDEX1)=LETTAB(I);                           0610 02149000
         AL    @04,@TF00001                                        0610 02150000
         L     @10,I                                               0610 02151000
         LA    @03,LETTAB-1(@10)                                   0610 02152000
         MVC   SHARLET-16(1,@04),0(@03)                            0610 02153000
*         END;                                                     0611 02154000
@RF00609 AL    INDEX1,@CF00053                                     0611 02155000
@DE00608 C     INDEX1,INDEX2                                       0611 02156000
         BNH   @DL00608                                            0611 02157000
*       END;                                                       0612 02158000
*   END;                                                           0613 02159000
@RF00605 LA    @10,1                                               0613 02160000
         AL    @10,J                                               0613 02161000
         ST    @10,J                                               0613 02162000
@DE00604 C     @10,INDEX2                                          0613 02163000
         BNH   @DL00604                                            0613 02164000
@DC00604 DS    0H                                                  0614 02165000
*   IF I>MAXCPUS THEN               /* MORE THAN 16 CPUS             */ 02166000
         L     @10,I                                               0614 02167000
         CH    @10,@CH00089                                        0614 02168000
         BNH   @RF00614                                            0614 02169000
*     DO;                                                          0615 02170000
*       CALL IFCMSG(68,ADDR(MSGNO));/* MESSAGE TEXT                  */ 02171000
         LA    @10,MSGNO                                           0616 02172000
         ST    @10,@AFTEMPS+8                                      0616 02173000
         L     @15,ADIFCMSG(,R2)                                   0616 02174000
         LA    @01,@AL00616                                        0616 02175000
         BALR  @14,@15                                             0616 02176000
*       PRINTADR=ADDR(PARMPT);                                     0617 02177000
         LA    @10,PARMPT                                          0617 02178000
         ST    @10,PRINTADR(,R2)                                   0617 02179000
*       CALL IOHND(RITEPRTR);       /* WRITE ERROR MESSAGE           */ 02180000
         L     @15,ADIOHND(,R2)                                    0618 02181000
         LA    @01,@AL00618                                        0618 02182000
         BALR  @14,@15                                             0618 02183000
*       RETCODE=TWELVE;             /* SET RETURN CODE               */ 02184000
         L     @10,@PC00001                                        0619 02185000
         MVC   RETCODE(4,@10),@CF00066                             0619 02186000
*       ZEROALL=OFF;                /* DON'T 0 ALL RECORDS           */ 02187000
         NI    ZEROALL(R2),B'10111111'                             0620 02188000
*     END;                                                         0621 02189000
*   ELSE                                                           0622 02190000
*     ;                             /* LESS THAN 16 CPUS             */ 02191000
@RF00614 DS    0H                                                  0623 02192000
*   END SHARLTR;                                                   0623 02193000
@EL00018 DS    0H                                                  0623 02194000
@EF00018 DS    0H                                                  0623 02195000
@ER00018 L     @14,@SA00018                                        0623 02196000
         LM    @00,@04,@SA00018+4                                  0623 02197000
         LM    @06,@12,@SA00018+24                                 0623 02198000
         BR    @14                                                 0623 02199000
*                                                                  0624 02200000
*/********************************************************************/ 02201000
*/*                                                                  */ 02202000
*/*  THIS PROC WILL PRINT OUT THE SHARE/CONTROLLER TABLE IF DEBUG3   */ 02203000
*/*  IS ON.                                                          */ 02204000
*/*                                                                  */ 02205000
*/********************************************************************/ 02206000
*                                                                  0624 02207000
*DEBUGOUT:                                                         0624 02208000
*   PROC OPTIONS(DONTSAVE(R5,R15));                                0624 02209000
DEBUGOUT ST    @14,@SA00019                                        0624 02210000
         STM   @00,@04,@SA00019+4                                  0624 02211000
         STM   @06,@12,@SA00019+24                                 0624 02212000
*   IF SHAREPTR^=ZERO THEN          /* SHARE TABLE EMPTY             */ 02213000
         L     @10,SHAREPTR(,R2)                                   0625 02214000
         LTR   @10,@10                                             0625 02215000
         BZ    @RF00625                                            0625 02216000
*     DO;                                                          0626 02217000
*       MSGNO(1:LENGTH(SHARETAB))=SHARETAB;/* MOVE HEADER            */ 02218000
         MVC   MSGNO(33),SHARETAB                                  0627 02219000
*       PRINTADR=ADDR(PARMPT);                                     0628 02220000
         LA    @10,PARMPT                                          0628 02221000
         ST    @10,PRINTADR(,R2)                                   0628 02222000
*       CALL IOHND(RITEPRTR);       /* WRITE HEADER                  */ 02223000
         L     @15,ADIOHND(,R2)                                    0629 02224000
         LA    @01,@AL00629                                        0629 02225000
         BALR  @14,@15                                             0629 02226000
*       INDEX1=INDEX2*ENTRYLEN+LENGTH(SHARENUM);/* MAX BYTES         */ 02227000
         L     INDEX1,INDEX2                                       0630 02228000
         SLA   INDEX1,4                                            0630 02229000
         AL    INDEX1,@CF00074                                     0630 02230000
*       DO I=66 TO INDEX1 BY 66;                                   0631 02231000
         LA    @10,66                                              0631 02232000
         ST    @10,I                                               0631 02233000
         B     @DE00631                                            0631 02234000
@DL00631 DS    0H                                                  0632 02235000
*         PARMFLD(1:66)=SHARE(I-65:I);/* GET NEXT 66 HEX DIGITS      */ 02236000
         L     @04,SHAREPTR(,R2)                                   0632 02237000
         ALR   @04,@10                                             0632 02238000
         AL    @04,@CF00739                                        0632 02239000
         MVC   PARMFLD(66),SHARE(@04)                              0632 02240000
*         CALL UNPACK(66);          /* CONVERT TO CHAR               */ 02241000
         LA    @01,@AL00633                                        0633 02242000
         BAL   @14,UNPACK                                          0633 02243000
*       END;                                                       0634 02244000
         LA    @10,66                                              0634 02245000
         AL    @10,I                                               0634 02246000
         ST    @10,I                                               0634 02247000
@DE00631 CR    @10,INDEX1                                          0634 02248000
         BNH   @DL00631                                            0634 02249000
*       I=66-I+INDEX1;              /* GET INCOMPLETE LAST LINE      */ 02250000
         LA    @10,66                                              0635 02251000
         SL    @10,I                                               0635 02252000
         ALR   @10,INDEX1                                          0635 02253000
         ST    @10,I                                               0635 02254000
*       IF I>ZERO THEN                                             0636 02255000
         LTR   @10,@10                                             0636 02256000
         BNP   @RF00636                                            0636 02257000
*         DO;                                                      0637 02258000
*           PARMFLD(1:I)=SHARE(INDEX1-I+1:INDEX1);                 0638 02259000
         LR    @04,@10                                             0638 02260000
         BCTR  @04,0                                               0638 02261000
         LCR   @10,@10                                             0638 02262000
         ALR   @10,INDEX1                                          0638 02263000
         L     @03,SHAREPTR(,R2)                                   0638 02264000
         ALR   @03,@10                                             0638 02265000
         EX    @04,@SM00740                                        0638 02266000
*           CALL UNPACK(I);         /* CONVERT TO CHAR               */ 02267000
         LA    @01,@AL00639                                        0639 02268000
         BAL   @14,UNPACK                                          0639 02269000
*         END;                                                     0640 02270000
*     END;                                                         0641 02271000
*   END DEBUGOUT;                                                  0642 02272000
@EL00019 DS    0H                                                  0642 02273000
@EF00019 DS    0H                                                  0642 02274000
@ER00019 L     @14,@SA00019                                        0642 02275000
         LM    @00,@04,@SA00019+4                                  0642 02276000
         LM    @06,@12,@SA00019+24                                 0642 02277000
         BR    @14                                                 0642 02278000
*   END IFCSHARE                                                   0643 02279000
*                                                                  0643 02280000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 02281000
*/*%INCLUDE SYSLIB  (COMTABLE)                                       */ 02282000
*                                                                  0643 02283000
*       ;                                                          0643 02284000
@DATA    DS    0H                                                       02285000
@CH00079 DC    H'5'                                                     02286000
@CH00086 DC    H'9'                                                     02287000
@CH00277 DC    H'10'                                                    02288000
@CH00596 DC    H'72'                                                    02289000
@CH00540 DC    H'80'                                                    02290000
@SM00740 MVC   PARMFLD(0),SHARE(@03)                                    02291000
         DS    0F                                                       02292000
@AL00109 EQU   *                       LIST WITH   1 ARGUMENT(S)        02293000
@AL00135 DC    A(@CH00086)             LIST WITH   1 ARGUMENT(S)        02294000
@AL00120 EQU   *                       LIST WITH   1 ARGUMENT(S)        02295000
@AL00505 EQU   *                       LIST WITH   1 ARGUMENT(S)        02296000
@AL00514 EQU   *                       LIST WITH   1 ARGUMENT(S)        02297000
@AL00530 EQU   *                       LIST WITH   1 ARGUMENT(S)        02298000
@AL00618 EQU   *                       LIST WITH   1 ARGUMENT(S)        02299000
@AL00629 DC    A(@CF00074+2)           LIST WITH   1 ARGUMENT(S)        02300000
@AL00130 EQU   *                       LIST WITH   1 ARGUMENT(S)        02301000
@AL00174 EQU   *                       LIST WITH   1 ARGUMENT(S)        02302000
@AL00178 EQU   *                       LIST WITH   1 ARGUMENT(S)        02303000
@AL00200 EQU   *                       LIST WITH   1 ARGUMENT(S)        02304000
@AL00207 EQU   *                       LIST WITH   1 ARGUMENT(S)        02305000
@AL00210 EQU   *                       LIST WITH   1 ARGUMENT(S)        02306000
@AL00269 EQU   *                       LIST WITH   1 ARGUMENT(S)        02307000
@AL00271 EQU   *                       LIST WITH   1 ARGUMENT(S)        02308000
@AL00291 EQU   *                       LIST WITH   1 ARGUMENT(S)        02309000
@AL00340 EQU   *                       LIST WITH   1 ARGUMENT(S)        02310000
@AL00373 EQU   *                       LIST WITH   1 ARGUMENT(S)        02311000
@AL00547 EQU   *                       LIST WITH   1 ARGUMENT(S)        02312000
@AL00572 DC    A(@CF00053)             LIST WITH   1 ARGUMENT(S)        02313000
@AL00283 EQU   *                       LIST WITH   1 ARGUMENT(S)        02314000
@AL00287 DC    A(@CF00081)             LIST WITH   1 ARGUMENT(S)        02315000
@AL00324 EQU   *                       LIST WITH   1 ARGUMENT(S)        02316000
@AL00387 EQU   *                       LIST WITH   1 ARGUMENT(S)        02317000
@AL00437 EQU   *                       LIST WITH   1 ARGUMENT(S)        02318000
@AL00448 EQU   *                       LIST WITH   1 ARGUMENT(S)        02319000
@AL00481 DC    A(@CF00074)             LIST WITH   1 ARGUMENT(S)        02320000
@AL00333 EQU   *                       LIST WITH   1 ARGUMENT(S)        02321000
@AL00354 EQU   *                       LIST WITH   1 ARGUMENT(S)        02322000
@AL00366 DC    A(@CF00062)             LIST WITH   1 ARGUMENT(S)        02323000
@AL00346 EQU   *                       LIST WITH   1 ARGUMENT(S)        02324000
@AL00359 EQU   *                       LIST WITH   1 ARGUMENT(S)        02325000
@AL00401 EQU   *                       LIST WITH   1 ARGUMENT(S)        02326000
@AL00411 EQU   *                       LIST WITH   1 ARGUMENT(S)        02327000
@AL00421 EQU   *                       LIST WITH   1 ARGUMENT(S)        02328000
@AL00468 DC    A(@CF00076)             LIST WITH   1 ARGUMENT(S)        02329000
@AL00499 DC    A(@CF00685)             LIST WITH   2 ARGUMENT(S)        02330000
         DC    A(@AFTEMPS)                                              02331000
@AL00501 DC    A(@CF00686)             LIST WITH   2 ARGUMENT(S)        02332000
         DC    A(@AFTEMPS)                                              02333000
@AL00502 DC    A(@CF00687)             LIST WITH   2 ARGUMENT(S)        02334000
         DC    A(@AFTEMPS)                                              02335000
@AL00512 DC    A(@CF00691)             LIST WITH   2 ARGUMENT(S)        02336000
         DC    A(@AFTEMPS+4)                                            02337000
@AL00616 DC    A(@CF00719)             LIST WITH   2 ARGUMENT(S)        02338000
         DC    A(@AFTEMPS+8)                                            02339000
@AL00633 DC    A(@CF00723)             LIST WITH   1 ARGUMENT(S)        02340000
@AL00639 DC    A(I)                    LIST WITH   1 ARGUMENT(S)        02341000
         DS    0F                                                       02342000
@SA00001 DS    18F                                                      02343000
@PC00001 DS    1F                                                       02344000
@SA00002 DS    13F                                                      02345000
@SA00003 DS    13F                                                      02346000
@SA00012 DS    13F                                                      02347000
@PC00012 DS    1F                                                       02348000
@SA00013 DS    13F                                                      02349000
@SA00018 DS    13F                                                      02350000
@SA00019 DS    13F                                                      02351000
@SA00004 DS    13F                                                      02352000
@SA00007 DS    13F                                                      02353000
@SA00010 DS    13F                                                      02354000
@SA00015 DS    13F                                                      02355000
@PC00015 DS    1F                                                       02356000
@PC00017 DS    1F                                                       02357000
@SA00005 DS    13F                                                      02358000
@SA00006 DS    13F                                                      02359000
@SA00008 DS    13F                                                      02360000
@SA00009 DS    13F                                                      02361000
@SA00016 DS    13F                                                      02362000
@PC00016 DS    1F                                                       02363000
@SA00014 DS    13F                                                      02364000
@PC00014 DS    1F                                                       02365000
@TF00001 DS    F                                                        02366000
@AFTEMPS DS    3F                                                       02367000
@ZTEMPS  DS    0F                                                       02368000
@ZT00002 DC    F'0'                                                     02369000
@ZT00003 DC    F'0'                                                     02370000
@ZTEMPND EQU   *                                                        02371000
@ZLEN    EQU   @ZTEMPND-@ZTEMPS                                         02372000
         DS    0F                                                       02373000
@CF00053 DC    F'1'                                                     02374000
@CH00053 EQU   @CF00053+2                                               02375000
@CF00074 DC    F'2'                                                     02376000
@CH00074 EQU   @CF00074+2                                               02377000
@CF00076 DC    F'3'                                                     02378000
@CF00062 DC    F'4'                                                     02379000
@CF00081 DC    F'6'                                                     02380000
@CF00066 DC    F'12'                                                    02381000
@CF00089 DC    F'16'                                                    02382000
@CH00089 EQU   @CF00089+2                                               02383000
@CF00687 DC    F'65'                                                    02384000
@CF00723 DC    F'66'                                                    02385000
@CF00719 DC    F'68'                                                    02386000
@CF00691 DC    F'89'                                                    02387000
@CF00686 DC    F'90'                                                    02388000
@CF00685 DC    F'91'                                                    02389000
@CF00739 DC    F'-66'                                                   02390000
@CF00727 DC    F'-14'                                                   02391000
@CF00728 DC    F'-13'                                                   02392000
@CF00733 DC    F'-10'                                                   02393000
@CF00734 DC    F'-8'                                                    02394000
@CF00729 DC    F'-6'                                                    02395000
@CF00735 DC    F'-3'                                                    02396000
@CF00638 DC    XL4'FFFFFF80'                                            02397000
         DS    0D                                                       02398000
LENGPARM DC    F'0'                                                     02399000
I        DS    F                                                        02400000
INDEX3   DS    F                                                        02401000
J        DS    F                                                        02402000
PLACE    DC    F'0'                                                     02403000
CUAPLACE DC    F'0'                                                     02404000
INDEX2   DS    F                                                        02405000
CPURC    DC    F'0'                                                     02406000
CUARC1   DC    F'0'                                                     02407000
CUARC2   DC    F'0'                                                     02408000
RANGERC1 DC    F'0'                                                     02409000
RANGERC2 DC    F'0'                                                     02410000
@TS00001 DS    CL19                                                     02411000
@CB00229 DC    X'00000F'                                                02412000
@CB00209 EQU   @CB00229                                                 02413000
@CB00618 DC    X'000F'                                                  02414000
@CB00620 DC    X'001F'                                                  02415000
PARMPT   DS    CL134                                                    02416000
         ORG   PARMPT                                                   02417000
@NM00012 DC    CL2'11'                                                  02418000
MSGNO    DC    CL32' '                                                  02419000
PARMPRT  DC    CL100' '                                                 02420000
         ORG   PARMPT+134                                               02421000
SHARETAB DC    CL33'DEBUG3 - SHARE/CONTROLLER ENTRIES'                  02422000
PARMFLD  DC    CL256' '                                                 02423000
HOLDAREA DS    CL5                                                      02424000
         DS    CL2                                                      02425000
KEYWORD  DS    CL10                                                     02426000
SWES     DC    X'00'                                                    02427000
         ORG   SWES                                                     02428000
VALID    DS    BL1                                                      02429000
TABFULL  EQU   SWES+0                                                   02430000
SWITCH   EQU   SWES+0                                                   02431000
@NM00014 EQU   SWES+0                                                   02432000
NOCOMMA  EQU   SWES+0                                                   02433000
@NM00015 EQU   SWES+0                                                   02434000
@NM00016 EQU   SWES+0                                                   02435000
@NM00017 EQU   SWES+0                                                   02436000
         ORG   SWES+1                                                   02437000
CUAHOLD  DS    CL3                                                      02438000
CUAHOLD2 DS    CL3                                                      02439000
CONTRWD  DC    CL10'CONTROLLER'                                         02440000
SHAREW   DC    CL5'SHARE'                                               02441000
BASENTRY DS    CL7                                                      02442000
         ORG   BASENTRY                                                 02443000
BASECPU  DS    CL3                                                      02444000
BASELCUA DS    BL2                                                      02445000
BASEHCUA DS    BL2                                                      02446000
         ORG   BASENTRY+7                                               02447000
BASERNG  DS    BL2                                                      02448000
ALTRNG   DS    BL2                                                      02449000
CUADIG   DS    BL1                                                      02450000
SUPERZAP DC    3CL10'SUPERZAP'                                          02451000
NUMTAB   DC    CL1'0'                                                   02452000
         DC    CL1'1'                                                   02453000
         DC    CL1'2'                                                   02454000
         DC    CL1'3'                                                   02455000
         DC    CL1'4'                                                   02456000
         DC    CL1'5'                                                   02457000
         DC    CL1'6'                                                   02458000
         DC    CL1'7'                                                   02459000
         DC    CL1'8'                                                   02460000
         DC    CL1'9'                                                   02461000
         DC    CL1'A'                                                   02462000
         DC    CL1'B'                                                   02463000
         DC    CL1'C'                                                   02464000
         DC    CL1'D'                                                   02465000
         DC    CL1'E'                                                   02466000
         DC    CL1'F'                                                   02467000
         DC    CL1'X'                                                   02468000
HEXTAB   DC    X'00'                                                    02469000
         DC    X'01'                                                    02470000
         DC    X'02'                                                    02471000
         DC    X'03'                                                    02472000
         DC    X'04'                                                    02473000
         DC    X'05'                                                    02474000
         DC    X'06'                                                    02475000
         DC    X'07'                                                    02476000
         DC    X'08'                                                    02477000
         DC    X'09'                                                    02478000
         DC    X'0A'                                                    02479000
         DC    X'0B'                                                    02480000
         DC    X'0C'                                                    02481000
         DC    X'0D'                                                    02482000
         DC    X'0E'                                                    02483000
         DC    X'0F'                                                    02484000
         DC    X'00'                                                    02485000
LETTAB   DC    CL1'A'                                                   02486000
         DC    CL1'B'                                                   02487000
         DC    CL1'C'                                                   02488000
         DC    CL1'D'                                                   02489000
         DC    CL1'E'                                                   02490000
         DC    CL1'F'                                                   02491000
         DC    CL1'G'                                                   02492000
         DC    CL1'H'                                                   02493000
         DC    CL1'I'                                                   02494000
         DC    CL1'J'                                                   02495000
         DC    CL1'K'                                                   02496000
         DC    CL1'L'                                                   02497000
         DC    CL1'M'                                                   02498000
         DC    CL1'N'                                                   02499000
         DC    CL1'O'                                                   02500000
         DC    CL1'P'                                                   02501000
         DC    CL1'*'                                                   02502000
IFCSHARE CSECT                                                          02503000
*                                                         /*@G51DGVS*/  02504000
        DC    S(SUPERZAP)                                               02505000
IFCSHARE CSECT                                                          02506000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02507000
@01      EQU   01                                                       02508000
@02      EQU   02                                                       02509000
@03      EQU   03                                                       02510000
@04      EQU   04                                                       02511000
@05      EQU   05                                                       02512000
@06      EQU   06                                                       02513000
@07      EQU   07                                                       02514000
@08      EQU   08                                                       02515000
@09      EQU   09                                                       02516000
@10      EQU   10                                                       02517000
@11      EQU   11                                                       02518000
@12      EQU   12                                                       02519000
@13      EQU   13                                                       02520000
@14      EQU   14                                                       02521000
@15      EQU   15                                                       02522000
R5       EQU   @05                                                      02523000
R15      EQU   @15                                                      02524000
R12      EQU   @12                                                      02525000
R11      EQU   @11                                                      02526000
R2       EQU   @02                                                      02527000
INDEX1   EQU   @05                                                      02528000
R0       EQU   @00                                                      02529000
R1       EQU   @01                                                      02530000
R7       EQU   @07                                                      02531000
R10      EQU   @10                                                      02532000
R13      EQU   @13                                                      02533000
R14      EQU   @14                                                      02534000
R3       EQU   @03                                                      02535000
R4       EQU   @04                                                      02536000
R6       EQU   @06                                                      02537000
R8       EQU   @08                                                      02538000
R9       EQU   @09                                                      02539000
IOHND    EQU   0                                                        02540000
IFCMSG   EQU   0                                                        02541000
PARM     EQU   0                                                        02542000
RECTYPE  EQU   PARM                                                     02543000
SWITCHES EQU   PARM+2                                                   02544000
ZEROALL  EQU   SWITCHES+1                                               02545000
DEBUG    EQU   PARM+4                                                   02546000
DEBUG3   EQU   DEBUG                                                    02547000
DEBUGA   EQU   PARM+8                                                   02548000
MISC     EQU   PARM+12                                                  02549000
PRINTES  EQU   MISC                                                     02550000
OPENCLSE EQU   PARM+13                                                  02551000
OPENIO   EQU   OPENCLSE                                                 02552000
CLOSEIO  EQU   OPENCLSE+2                                               02553000
DATENOW  EQU   PARM+17                                                  02554000
STDT     EQU   PARM+23                                                  02555000
STDATE   EQU   STDT                                                     02556000
PSTD     EQU   STDATE+1                                                 02557000
ENDDT    EQU   PARM+31                                                  02558000
ENDDATE  EQU   ENDDT                                                    02559000
PEND     EQU   ENDDATE+1                                                02560000
STTIME1  EQU   PARM+39                                                  02561000
ENDTIME1 EQU   PARM+43                                                  02562000
STTIME2  EQU   PARM+47                                                  02563000
ENDTIME2 EQU   PARM+51                                                  02564000
STRTDATE EQU   PARM+55                                                  02565000
@NM00006 EQU   PARM+72                                                  02566000
@NM00007 EQU   PARM+75                                                  02567000
TABSIZE  EQU   PARM+80                                                  02568000
ERRID    EQU   PARM+92                                                  02569000
IDTIMEA  EQU   ERRID+6                                                  02570000
IDTIME   EQU   IDTIMEA                                                  02571000
CCHHRLNG EQU   PARM+112                                                 02572000
ADIOHND  EQU   PARM+124                                                 02573000
ADIFCMSG EQU   PARM+128                                                 02574000
ADEDITB  EQU   PARM+132                                                 02575000
EVPTR    EQU   PARM+136                                                 02576000
SORTADR  EQU   PARM+140                                                 02577000
PRINTADR EQU   PARM+148                                                 02578000
CUAPTR   EQU   PARM+152                                                 02579000
DEVPTR   EQU   PARM+156                                                 02580000
MODPTR   EQU   PARM+160                                                 02581000
SERPTR   EQU   PARM+164                                                 02582000
VOLPTR   EQU   PARM+168                                                 02583000
CPUPTR   EQU   PARM+172                                                 02584000
CPCUAPTR EQU   PARM+176                                                 02585000
LIBADPTR EQU   PARM+180                                                 02586000
SYMCDPTR EQU   PARM+184                                                 02587000
SYSUMPTR EQU   PARM+188                                                 02588000
TRENPTR  EQU   PARM+192                                                 02589000
SHAREPTR EQU   PARM+196                                                 02590000
MERDCPTR EQU   PARM+208                                                 02591000
DUMPTABL EQU   PARM+228                                                 02592000
DUMPINFO EQU   DUMPTABL+4                                               02593000
TRENDONE EQU   0                                                        02594000
TREGEN   EQU   TRENDONE+8                                               02595000
TRECCH0  EQU   TREGEN+8                                                 02596000
TREND2   EQU   0                                                        02597000
TRENDKEY EQU   TREND2                                                   02598000
TRENDRT  EQU   TRENDKEY+1                                               02599000
TRENCPUS EQU   TRENDKEY+3                                               02600000
TRENDITM EQU   TRENDKEY+4                                               02601000
EVTABLE  EQU   0                                                        02602000
EVSTOP   EQU   EVTABLE                                                  02603000
EVKEY    EQU   EVTABLE+6                                                02604000
SORTABLE EQU   0                                                        02605000
SORTKEY  EQU   SORTABLE                                                 02606000
SORTCCHR EQU   SORTABLE+5                                               02607000
SYSUMONE EQU   0                                                        02608000
SYSUM2   EQU   0                                                        02609000
SYSUMKEY EQU   SYSUM2                                                   02610000
SYSRT    EQU   SYSUMKEY+1                                               02611000
SYSCPUS  EQU   SYSUMKEY+3                                               02612000
SYSITEM  EQU   SYSUMKEY+4                                               02613000
SHARE    EQU   0                                                        02614000
SHARENUM EQU   SHARE                                                    02615000
SHAREIO  EQU   SHARE+2                                                  02616000
SHAREFLG EQU   SHAREIO                                                  02617000
SHRBASE  EQU   SHAREIO+1                                                02618000
SHARSERB EQU   SHRBASE                                                  02619000
SHRCUABL EQU   SHRBASE+3                                                02620000
SHRCUABH EQU   SHRBASE+5                                                02621000
SHRCUCPU EQU   SHAREIO+8                                                02622000
SHARSERA EQU   SHRCUCPU                                                 02623000
SHRCUAAL EQU   SHRCUCPU+3                                               02624000
SHRCUAAH EQU   SHRCUCPU+5                                               02625000
SHARLET  EQU   SHAREIO+15                                               02626000
EDITLOAD EQU   0                                                        02627000
EDITABLE EQU   EDITLOAD+4                                               02628000
CUA      EQU   0                                                        02629000
CUAVAL   EQU   CUA+2                                                    02630000
DEVICE   EQU   0                                                        02631000
MODELS   EQU   0                                                        02632000
DEVSERAL EQU   0                                                        02633000
VOLUME   EQU   0                                                        02634000
CPUS     EQU   0                                                        02635000
CPUCUAS  EQU   0                                                        02636000
CPUCUAV  EQU   CPUCUAS+2                                                02637000
LIBADR   EQU   0                                                        02638000
SYMCODE  EQU   0                                                        02639000
SYMVAL   EQU   SYMCODE+2                                                02640000
MERIDIAN EQU   0                                                        02641000
CARD     EQU   0                                                        02642000
RETCODE  EQU   0                                                        02643000
ERROR    EQU   0                                                        02644000
OPLEN    EQU   0                                                        02645000
LENGTHV  EQU   0                                                        02646000
LENGTHC  EQU   0                                                        02647000
HEXLEN   EQU   0                                                        02648000
HOLD     EQU   HOLDAREA                                                 02649000
KEYBITS  EQU   KEYWORD                                                  02650000
SECDIG   EQU   KEYBITS+3                                                02651000
KEYBIT12 EQU   SECDIG+1                                                 02652000
TRECCH   EQU   TRECCH0                                                  02653000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02654000
KEYBIT16 EQU   SECDIG+1                                                 02655000
KEYBIT15 EQU   SECDIG+1                                                 02656000
KEYBIT14 EQU   SECDIG+1                                                 02657000
KEYBIT13 EQU   SECDIG+1                                                 02658000
KEYBIT11 EQU   SECDIG+1                                                 02659000
KEYBIT10 EQU   SECDIG+1                                                 02660000
KEYBIT9  EQU   SECDIG+1                                                 02661000
KEYBIT8  EQU   SECDIG                                                   02662000
KEYBIT7  EQU   SECDIG                                                   02663000
KEYBIT6  EQU   SECDIG                                                   02664000
KEYBIT5  EQU   SECDIG                                                   02665000
KEYBIT4  EQU   SECDIG                                                   02666000
KEYBIT3  EQU   SECDIG                                                   02667000
KEYBIT2  EQU   SECDIG                                                   02668000
KEYBIT1  EQU   SECDIG                                                   02669000
@NM00013 EQU   KEYBITS                                                  02670000
MODEL    EQU   MERIDIAN+2                                               02671000
MRDNUMBR EQU   MERIDIAN                                                 02672000
SYMVAL2  EQU   SYMVAL+2                                                 02673000
SYMVAL1  EQU   SYMVAL                                                   02674000
SYMCDNUM EQU   SYMCODE                                                  02675000
LIBVAL   EQU   LIBADR+2                                                 02676000
LIBADNUM EQU   LIBADR                                                   02677000
CPUCUX3  EQU   CPUCUAV+5                                                02678000
CPUCUX2  EQU   CPUCUAV+3                                                02679000
CPUCUX1  EQU   CPUCUAV                                                  02680000
CPCUANUM EQU   CPUCUAS                                                  02681000
CPUVAL   EQU   CPUS+2                                                   02682000
CPUNUM   EQU   CPUS                                                     02683000
VOLVAL   EQU   VOLUME+2                                                 02684000
VOLNUM   EQU   VOLUME                                                   02685000
SERVAL   EQU   DEVSERAL+2                                               02686000
SERNUM   EQU   DEVSERAL                                                 02687000
MODVAL   EQU   MODELS+2                                                 02688000
MODNUM   EQU   MODELS                                                   02689000
MDRVAL   EQU   DEVICE+204                                               02690000
MDRNUM   EQU   DEVICE+202                                               02691000
DEVVAL   EQU   DEVICE+2                                                 02692000
DEVNUM   EQU   DEVICE                                                   02693000
CUA2     EQU   CUAVAL+2                                                 02694000
CUA1     EQU   CUAVAL                                                   02695000
CUANUM   EQU   CUA                                                      02696000
LOADPTR  EQU   EDITABLE+8                                               02697000
LOADNAME EQU   EDITABLE                                                 02698000
EDITNUM  EQU   EDITLOAD                                                 02699000
SYSTEMP  EQU   SYSUM2+10                                                02700000
SYSPERM  EQU   SYSUM2+8                                                 02701000
SYSRANGE EQU   SYSUM2+7                                                 02702000
SYSDEV   EQU   SYSUM2+5                                                 02703000
SYSOLDA  EQU   SYSITEM                                                  02704000
SYS3705  EQU   SYSITEM                                                  02705000
SYSOLD   EQU   SYSCPUS                                                  02706000
SYSCPU   EQU   SYSCPUS                                                  02707000
SYSTROLL EQU   SYSRT+1                                                  02708000
SYSSPAN  EQU   SYSRT+1                                                  02709000
SYSCUA   EQU   SYSRT                                                    02710000
SYSGROUP EQU   SYSUMKEY                                                 02711000
SYSUMEOD EQU   SYSUMONE+96                                              02712000
SYSUMPER EQU   SYSUMONE+92                                              02713000
SYSUMPEA EQU   SYSUMONE+88                                              02714000
SYSUMPEI EQU   SYSUMONE+84                                              02715000
SYSUMCH  EQU   SYSUMONE+20                                              02716000
SYSUMMCN EQU   SYSUMONE+16                                              02717000
SYSUMMCR EQU   SYSUMONE+12                                              02718000
SYSUMNXT EQU   SYSUMONE+8                                               02719000
SYSUMIPL EQU   SYSUMONE+4                                               02720000
SYSUMNUM EQU   SYSUMONE                                                 02721000
SORTCORE EQU   SORTCCHR                                                 02722000
SORTTIME EQU   SORTKEY+1                                                02723000
SORTYEAR EQU   SORTKEY                                                  02724000
EVLETTER EQU   EVKEY+5                                                  02725000
EVSERIAL EQU   EVKEY+2                                                  02726000
EVMODEL  EQU   EVKEY                                                    02727000
EVNUM    EQU   EVTABLE+4                                                02728000
EVDAY    EQU   EVSTOP+1                                                 02729000
EVYEAR   EQU   EVSTOP                                                   02730000
TRETMP   EQU   TREND2+10                                                02731000
TREPRM   EQU   TREND2+8                                                 02732000
TRENDDEV EQU   TREND2+6                                                 02733000
TRENDDAT EQU   TRENDKEY+5                                               02734000
TRENDOD  EQU   TRENDITM                                                 02735000
TREND037 EQU   TRENDITM                                                 02736000
TRENDOLD EQU   TRENCPUS                                                 02737000
TRENDCPU EQU   TRENCPUS                                                 02738000
@NM00011 EQU   TRENDRT+1                                                02739000
TRENDCUA EQU   TRENDRT                                                  02740000
TRENDGRP EQU   TRENDKEY                                                 02741000
TREPRE   EQU   TREGEN+72                                                02742000
TRECCHF  EQU   TREGEN+68                                                02743000
TRECCHE  EQU   TREGEN+64                                                02744000
TRECCHD  EQU   TREGEN+60                                                02745000
TRECCHC  EQU   TREGEN+56                                                02746000
TRECCHB  EQU   TREGEN+52                                                02747000
TRECCHA  EQU   TREGEN+48                                                02748000
TRECCH9  EQU   TREGEN+44                                                02749000
TRECCH8  EQU   TREGEN+40                                                02750000
TRECCH7  EQU   TREGEN+36                                                02751000
TRECCH6  EQU   TREGEN+32                                                02752000
TRECCH5  EQU   TREGEN+28                                                02753000
TRECCH4  EQU   TREGEN+24                                                02754000
TRECCH3  EQU   TREGEN+20                                                02755000
TRECCH2  EQU   TREGEN+16                                                02756000
TRECCH1  EQU   TREGEN+12                                                02757000
TREMCH   EQU   TREGEN+4                                                 02758000
TREIPL   EQU   TREGEN                                                   02759000
TRENUM   EQU   TRENDONE+4                                               02760000
TRENEXT  EQU   TRENDONE                                                 02761000
DUMPSIZE EQU   DUMPINFO+4                                               02762000
DUMPADR  EQU   DUMPINFO                                                 02763000
DUMPNUM  EQU   DUMPTABL                                                 02764000
@NM00010 EQU   PARM+212                                                 02765000
RECLNGT1 EQU   PARM+204                                                 02766000
FRAMEPTR EQU   PARM+200                                                 02767000
ADCPUT   EQU   PARM+144                                                 02768000
LINECT   EQU   PARM+120                                                 02769000
RECLNGTH EQU   CCHHRLNG+6                                               02770000
@NM00009 EQU   CCHHRLNG+5                                               02771000
RECCCHHR EQU   CCHHRLNG                                                 02772000
USERPGM  EQU   PARM+102                                                 02773000
IDTSEC   EQU   IDTIME+3                                                 02774000
IDSEC    EQU   IDTIME+2                                                 02775000
IDMIN    EQU   IDTIME+1                                                 02776000
IDHOUR   EQU   IDTIME                                                   02777000
IDASID   EQU   ERRID+4                                                  02778000
IDCPU    EQU   ERRID+3                                                  02779000
@NM00008 EQU   ERRID+2                                                  02780000
IDVALUE  EQU   ERRID                                                    02781000
NUMDAYS  EQU   PARM+88                                                  02782000
SORTNUM  EQU   PARM+84                                                  02783000
SYSRETRN EQU   @NM00007                                                 02784000
NUMIN222 EQU   @NM00006                                                 02785000
WRTHRSH  EQU   PARM+69                                                  02786000
RDTHRSH  EQU   PARM+66                                                  02787000
TERM     EQU   PARM+58                                                  02788000
EVSDAY   EQU   STRTDATE+1                                               02789000
EVSYEAR  EQU   STRTDATE                                                 02790000
PENSEC2  EQU   ENDTIME2+2                                               02791000
PENMIN2  EQU   ENDTIME2+1                                               02792000
PENHOUR2 EQU   ENDTIME2                                                 02793000
PSTSEC2  EQU   STTIME2+2                                                02794000
PSTMIN2  EQU   STTIME2+1                                                02795000
PSTHOUR2 EQU   STTIME2                                                  02796000
PENSEC1  EQU   ENDTIME1+2                                               02797000
PENMIN1  EQU   ENDTIME1+1                                               02798000
PENHOUR1 EQU   ENDTIME1                                                 02799000
PSTSEC1  EQU   STTIME1+2                                                02800000
PSTMIN1  EQU   STTIME1+1                                                02801000
PSTHOUR1 EQU   STTIME1                                                  02802000
@NM00005 EQU   ENDDT+4                                                  02803000
PENDY    EQU   PEND+1                                                   02804000
PENYR    EQU   PEND                                                     02805000
@NM00004 EQU   ENDDATE                                                  02806000
@NM00003 EQU   STDT+4                                                   02807000
PSTDY    EQU   PSTD+1                                                   02808000
PSTYR    EQU   PSTD                                                     02809000
@NM00002 EQU   STDATE                                                   02810000
YEARNOW  EQU   DATENOW+4                                                02811000
@NM00001 EQU   DATENOW+3                                                02812000
DAYNOW   EQU   DATENOW                                                  02813000
CSNAP    EQU   CLOSEIO                                                  02814000
CDRCTWRK EQU   CLOSEIO                                                  02815000
CSYSIN   EQU   CLOSEIO                                                  02816000
CACCDEV  EQU   CLOSEIO                                                  02817000
CACCIN   EQU   CLOSEIO                                                  02818000
CSERLOG  EQU   CLOSEIO                                                  02819000
CEREPPT  EQU   CLOSEIO                                                  02820000
CTOURIST EQU   CLOSEIO                                                  02821000
OSNAP    EQU   OPENIO                                                   02822000
ODRCTWRK EQU   OPENIO                                                   02823000
OSYSIN   EQU   OPENIO                                                   02824000
OACCDEV  EQU   OPENIO                                                   02825000
OACCIN   EQU   OPENIO                                                   02826000
OSERLOG  EQU   OPENIO                                                   02827000
OEREPPT  EQU   OPENIO                                                   02828000
OTOURIST EQU   OPENIO                                                   02829000
PASSFLAG EQU   MISC                                                     02830000
PLOGREC  EQU   MISC                                                     02831000
ERRORID  EQU   MISC                                                     02832000
PSUM     EQU   PRINTES                                                  02833000
PEDIT    EQU   PRINTES                                                  02834000
PHIST    EQU   MISC                                                     02835000
PACC     EQU   MISC                                                     02836000
PZERO    EQU   MISC                                                     02837000
DEBUG63  EQU   DEBUGA+3                                                 02838000
DEBUG62  EQU   DEBUGA+3                                                 02839000
DEBUG61  EQU   DEBUGA+3                                                 02840000
DEBUG60  EQU   DEBUGA+3                                                 02841000
DEBUG59  EQU   DEBUGA+3                                                 02842000
DEBUG58  EQU   DEBUGA+3                                                 02843000
DEBUG57  EQU   DEBUGA+3                                                 02844000
DEBUG56  EQU   DEBUGA+3                                                 02845000
DEBUG55  EQU   DEBUGA+2                                                 02846000
DEBUG54  EQU   DEBUGA+2                                                 02847000
DEBUG53  EQU   DEBUGA+2                                                 02848000
DEBUG52  EQU   DEBUGA+2                                                 02849000
DEBUG51  EQU   DEBUGA+2                                                 02850000
DEBUG50  EQU   DEBUGA+2                                                 02851000
DEBUG49  EQU   DEBUGA+2                                                 02852000
DEBUG48  EQU   DEBUGA+2                                                 02853000
DEBUG47  EQU   DEBUGA+1                                                 02854000
DEBUG46  EQU   DEBUGA+1                                                 02855000
DEBUG45  EQU   DEBUGA+1                                                 02856000
DEBUG44  EQU   DEBUGA+1                                                 02857000
DEBUG43  EQU   DEBUGA+1                                                 02858000
DEBUG42  EQU   DEBUGA+1                                                 02859000
DEBUG41  EQU   DEBUGA+1                                                 02860000
DEBUG40  EQU   DEBUGA+1                                                 02861000
DEBUG39  EQU   DEBUGA                                                   02862000
DEBUG38  EQU   DEBUGA                                                   02863000
DEBUG37  EQU   DEBUGA                                                   02864000
DEBUG36  EQU   DEBUGA                                                   02865000
DEBUG35  EQU   DEBUGA                                                   02866000
DEBUG34  EQU   DEBUGA                                                   02867000
DEBUG33  EQU   DEBUGA                                                   02868000
DEBUG32  EQU   DEBUGA                                                   02869000
DEBUG31  EQU   DEBUG+3                                                  02870000
DEBUG30  EQU   DEBUG+3                                                  02871000
DEBUG29  EQU   DEBUG+3                                                  02872000
DEBUG28  EQU   DEBUG+3                                                  02873000
DEBUG27  EQU   DEBUG+3                                                  02874000
DEBUG26  EQU   DEBUG+3                                                  02875000
DEBUG25  EQU   DEBUG+3                                                  02876000
DEBUG24  EQU   DEBUG+3                                                  02877000
DEBUG23  EQU   DEBUG+2                                                  02878000
DEBUG22  EQU   DEBUG+2                                                  02879000
DEBUG21  EQU   DEBUG+2                                                  02880000
DEBUG20  EQU   DEBUG+2                                                  02881000
DEBUG19  EQU   DEBUG+2                                                  02882000
DEBUG18  EQU   DEBUG+2                                                  02883000
DEBUG17  EQU   DEBUG+2                                                  02884000
DEBUG16  EQU   DEBUG+2                                                  02885000
DEBUG15  EQU   DEBUG+1                                                  02886000
DEBUG14  EQU   DEBUG+1                                                  02887000
DEBUG13  EQU   DEBUG+1                                                  02888000
DEBUG12  EQU   DEBUG+1                                                  02889000
DEBUG11  EQU   DEBUG+1                                                  02890000
DEBUG10  EQU   DEBUG+1                                                  02891000
DEBUG9   EQU   DEBUG+1                                                  02892000
DEBUG8   EQU   DEBUG+1                                                  02893000
DEBUG7   EQU   DEBUG                                                    02894000
DEBUG6   EQU   DEBUG                                                    02895000
DEBUG5   EQU   DEBUG                                                    02896000
DEBUG4   EQU   DEBUG                                                    02897000
DEBUG2   EQU   DEBUG                                                    02898000
DEBUG1   EQU   DEBUG                                                    02899000
DEBUG0   EQU   DEBUG                                                    02900000
SORTBRK  EQU   SWITCHES+1                                               02901000
COREFAIL EQU   SWITCHES+1                                               02902000
ANALYSIS EQU   SWITCHES+1                                               02903000
SHIFT3RD EQU   SWITCHES+1                                               02904000
DEVEXCL  EQU   SWITCHES+1                                               02905000
NOTALL   EQU   SWITCHES+1                                               02906000
NOSDR    EQU   SWITCHES                                                 02907000
TIMESEQ  EQU   SWITCHES                                                 02908000
SYSUM    EQU   SWITCHES                                                 02909000
PARMTHR  EQU   SWITCHES                                                 02910000
TREND    EQU   SWITCHES                                                 02911000
SHORTOBR EQU   SWITCHES                                                 02912000
PARMMES  EQU   SWITCHES                                                 02913000
RDESUM   EQU   SWITCHES                                                 02914000
PCCHFRAM EQU   RECTYPE+1                                                02915000
PMCHFRAM EQU   RECTYPE+1                                                02916000
PTTYP    EQU   RECTYPE+1                                                02917000
PEOD     EQU   RECTYPE                                                  02918000
PMIH     EQU   RECTYPE                                                  02919000
PDDR     EQU   RECTYPE                                                  02920000
PIPL     EQU   RECTYPE                                                  02921000
PSOFT    EQU   RECTYPE                                                  02922000
POBR     EQU   RECTYPE                                                  02923000
PCHAN    EQU   RECTYPE                                                  02924000
PMCH     EQU   RECTYPE                                                  02925000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02926000
@RC00125 EQU   @RC00121                                                 02927000
@RC00187 EQU   @RC00186                                                 02928000
@RC00175 EQU   @EL00002                                                 02929000
@RC00173 EQU   @EL00002                                                 02930000
@RC00233 EQU   @RC00231                                                 02931000
@RC00254 EQU   @RC00249                                                 02932000
@RC00208 EQU   @EL00003                                                 02933000
@RC00206 EQU   @EL00003                                                 02934000
@RC00289 EQU   @EL00004                                                 02935000
@RC00302 EQU   @EL00004                                                 02936000
@RC00407 EQU   @EL00008                                                 02937000
@RC00405 EQU   @EL00008                                                 02938000
@RC00398 EQU   @EL00008                                                 02939000
@RC00418 EQU   @EL00008                                                 02940000
@RC00465 EQU   @EL00010                                                 02941000
@RC00552 EQU   @EL00015                                                 02942000
@RC00577 EQU   @EL00016                                                 02943000
@RF00625 EQU   @EL00019                                                 02944000
@RF00636 EQU   @EL00019                                                 02945000
@PB00019 EQU   @EL00001                                                 02946000
@RC00128 EQU   @RC00125                                                 02947000
@RC00126 EQU   @RC00125                                                 02948000
@RC00255 EQU   @RC00254                                                 02949000
@RC00315 EQU   @RC00302                                                 02950000
@PB00018 EQU   @PB00019                                                 02951000
@PB00017 EQU   @PB00018                                                 02952000
@PB00016 EQU   @PB00017                                                 02953000
@PB00015 EQU   @PB00016                                                 02954000
@PB00014 EQU   @PB00015                                                 02955000
@PB00013 EQU   @PB00014                                                 02956000
@PB00012 EQU   @PB00013                                                 02957000
@PB00011 EQU   @PB00012                                                 02958000
@PB00010 EQU   @PB00011                                                 02959000
@PB00009 EQU   @PB00010                                                 02960000
@PB00008 EQU   @PB00009                                                 02961000
@PB00007 EQU   @PB00008                                                 02962000
@PB00006 EQU   @PB00007                                                 02963000
@PB00005 EQU   @PB00006                                                 02964000
@PB00004 EQU   @PB00005                                                 02965000
@PB00003 EQU   @PB00004                                                 02966000
@PB00002 EQU   @PB00003                                                 02967000
@ENDDATA EQU   *                                                        02968000
         END   IFCSHARE,(C'PLS0302',0702,79011)                         02969000
