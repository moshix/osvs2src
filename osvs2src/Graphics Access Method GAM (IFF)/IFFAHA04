         TITLE 'DATA GEN ROUTINE-IFFAHA04'                              00100000
*                                                                       00200000
*        THE DATA GENERATOR IS ENTERED FROM PLINE/PPNT,STPOS/MVPOS,     00300000
*        PSGMT,AND PLSTR. ITS FUNCTION IS TO GENERATE VECTORS AND       00400000
*        POINTS, BLANKED AND UNBLANKED,KEYED AND NOT KEYED,ABSOLUTE,    00500000
*        INCREMENTAL, OR OPTIMIZED. IT WILL PROVIDE THE INCLUDE/        00600000
*        OMIT STRUCTURE FOR BOTH SINGLE AND MULTIPLE ELEMENTS AND       00700000
*        WILL GENERATE THE REPOSITIONING VECTOR WHEN NECESSARY.         00800000
*                                                                       00900000
*                       DATA GENERATOR WILL BE ENTERED WITH             01000000
*                       THE ADDRESS OF THE FOLLOWING AREA IN            01100000
*                       REGISTER 1                                      01200000
*                                                                       01300000
*                       +0  KEY START                                   01400000
*                       +4  FLAGS                                       01500000
*                       +8  CORVAL                                      01600000
*                       +12 ADDR IN USER PROG TO PLACE KEY IN           01700000
*                       +16 GDSCB ADDR                                  01800000
*                       +20 RETURN CODE ARRAY ADDR                      01900000
*                       +24 POSITIONING VECT X ABS                      02000000
*                       +28 POSITIONING VECT Y ABS                      02100000
*                       +32 POSIT VECT X INCR                           02200000
*                       +36 POSIT VECT Y INCR                           02300000
*                       +40 X ABS                                       02400000
*                       +44 Y ABS                                       02500000
*                       +48 X INCR                                      02600000
*                       +52 Y INCR                                      02700000
*                       +56 TOTAL X INCR                                02800000
*                       +60 TOTAL Y INCR                                02900000
*                       +64 ENTRY NUMBER (NOT USED BY THIS RTN)         03000000
*                                                                       03100000
*                                                                       03200000
*                                                                       03300000
*        EXTERNAL REFERENCES:                                           03400000
*                                                                       03500000
*        IFFAHA05-DATA STORE                                            03600000
*                                                                       03700000
*        EXTERNAL MACROS:                                               03800000
*                                                                       03900000
*        NONE                                                           04000000
*                                                                       04100000
         EJECT                                                          04200000
*        ON ENTRY THE REGISTERS ARE SAVED, THE SAVE AREAS ARE           04300000
*        CHAINED, SWITCHES ARE INITIALIZED, DSECTS ARE INITIALIZED,     04400000
*        AND THE ADDRESS OF DATA STORE IS OBTAINED FROM THE STATUS      04500000
*        TABLE AND SAVED.                                               04600000
*                                                                       04700000
IFFAHA04 CSECT                                                          04800000
*A122000-122600,A204050-204800,D243100-245000,D263100-264966,    YM1963 04900000
*A325040-325800,C454000,D455500,A477200-477600,D496500-496600,   YM1963 05000000
*A509300-509600                                                  YM1963 05100000
*A319300-319600,A324500,C325040-325080,D325440-325640,       LD YA00805 05200000
*A325440-325540,C325680,D325760,D465600,C477200,             LD YA00805 05300000
*D477600                                                                05400000
*C323000,C324500-325200,D325240-325400,A325300-325340,       LD YA01038 05500000
*A477900                                                     LD YA01038 05600000
*A325640-325668                                              JM YA02056 05700000
*C116000,A115540-115980,A117500,A120500,A477920-477980      L5 @ZA04162 05800000
*C325664,325800                                             L5 @ZA04160 05900000
*A166000-166800,A167500                                     D11 ZA04870 06000000
*A586200-586400,A743000                                     D11 ZA10055 06100000
*A400000-405400,C415000,609500                              D11 ZA14052 06200000
*A405600-406000                                             D11 ZA16577 06250000
*D609500,C612000-613000,D614000-615000                      D11 ZA17700 06270000
*                                                                       06300000
         SAVE  (14,12)                                                  06400000
         BALR  BASE,0                                                   06500000
         USING *,BASE              ADDRESSABILITY                       06600000
         LR    WORK,PARM                                                06700000
         USING WORKAREA,WORK       SET UP WORK DSECT                    06800000
         L     GDSREG,WRKGDS                                            06900000
         USING GDSCB,GDSREG        SET UP GDSCB DSECT                   07000000
         ST    SAVE,WRKSAVE+4      CHAIN SAVE AREAS                     07100000
         LA    REGA,WRKSAVE                                             07200000
         ST    REGA,EIGHT(SAVE)                                         07300000
         LR    SAVE,REGA                                                07400000
         L     REGFIFTN,WRKRTN     LOCATE THE ADDRESS                   07500000
         L     REGFIFTN,STAT(REGFIFTN)  OF DATA STORE FROM              07600000
         L     REGFIFTN,DSTOR(REGFIFTN) THE STATUS TABLE AND            07700000
         ST    REGFIFTN,WRKDSTOR   PLACE IN THE WORK AREA               07800000
         LA    REGD,0              COUNT                                07900000
         LA    REGC,WRKOUTPT+4     ADDR OF ORDERS                       08000000
         XC    WRKOUTPT(4),WRKOUTPT    ZERO FIRST WORD                  08100000
         MVI   WRKSW,FIRST         SET FIRST IN SW                      08200000
         MVI   WRKSW+1,X'00'       SET NO POSIT VECT SW                 08300000
         EJECT                                                          08400000
*                                                                       08500000
*        A CHECK IS MADE TO SEE IF ENTRY IS MADE MERELY TO COMPLETE     08600000
*        A MULTIPLE KEY WHICH REQUIRES THE GENERATION OF A REPOSI-      08700000
*        TIONING VECTOR. IF SO A BRANCH IS MADE TO THAT PART OF THE     08800000
*        PROGRAM.                                                       08900000
*                                                                       09000000
         TM    WRKBITS+2,REPONLY   CALLED FOR ONLY REPOS VECT           09100000
         BO    DAT01870            YES                                  09200000
*                                                                       09300000
*        WHEN THIS ROUTINE IS ENTERED THERE MAY BE ONE OR TWO           09400000
*        VECTORS OR POINTS TO BE GENERATED. NOTE: OFTEN I WILL          09500000
*        REFER TO BOTH VECTORS AND POINTS AS JUST VECTORS.              09600000
*        IF SCISSORING HAS OCCURED AND AS A RESULT A BLANKED            09700000
*        POSITIONING VECTOR IS NEEDED IN ADDITION TO THE VECTOR         09800000
*        REQUESTED THIS WILL EXPLAIN THE SECOND VECTOR. IF A            09900000
*        POSITIONING VECTOR IS REQUIRED IT IS MOVED INTO THE            10000000
*        WORK FIELD. IF NONE IS REQUIRED, THE FIRST SWITCH IS           10100000
*        TURNED OFF AND THE REQUESTED VECTOR IS MOVED INTO THE          10200000
*        WORK FIELD.                                                    10300000
*                                                                       10400000
         CLC   WRKDATA1(SIXTN),ZERO IS THERE A POS VECT                 10500000
         BE    DAT00400            NO                                   10600000
         MVC   WRKTXABS(SIXTN),WRKDATA1 MOVE POS VECT INTO WORK AREA    10700000
*                                                                       10800000
*        A CHECK IS MADE TO SEE IF THIS IS THE FIRST PASS, IN           10900000
*        OTHER WORDS, DOES AN INCLUDE OMIT STRUCTURE NEED TO            11000000
*        BE BUILT FIRST?                                                11100000
*                                                                       11200000
DAT00050 TM    WRKBITS+2,FRSTPASS  IS THIS THE FIRST PASS               11300000
         BNE   DAT00150            NO                                   11400000
*                                  IF NOT FIRST PASS, MODE IS ALREADY   11500000
*                                  SET OR OPTIMIZED SO DOESN'T MATTER   11600000
*                                  IF KEYED OR NOT                      11700000
DAT00100 TM    WRKBITS+2,KEYED+CORVLD KEYED OR CORRELATED FIRST PASS    11800000
         BNE   DAT03400            YES, GO TO SET UP INCLUDE/OMIT STR.  11900000
*                                                                       12000000
*        THIS POINT IS WHERE THE DATA GENERATOR IS REENTERED            12100000
*        FROM SEVERAL PLACES. IF IT IS NOT A FIRST PASS THE             12200000
*        CODING FALLS THROUGH TO THIS POINT. IF THE SECOND              12300000
*        VECTOR IS TO BE GENERATED WHEN TWO ARE REQUIRED THIS           12400000
*        POINT IS BRANCHED TO. IF GENERATION OF THE FIRST               12500000
*        VECTOR IS TO BE DONE AFTER AN INCLUDE OMIT STRUCTURE           12600000
*        HAS BEEN BUILT, THIS POINT IS BRANCHED TO. AND LAST,           12700000
*        FOR THE REPOSITIONING VECTOR AT THE END OF THE ELEMENT         12800000
*        THIS POINT IS BRANCHED TO. AT THIS POINT THE PATHS             12900000
*        WILL SPLIT DEPENDING ON WHETHER ABSOLUTE, INCREMENTAL,         13000000
*        OR OPTIMIZED OUTPUT IS DESIRED. OPTIMIZED OUTPUT IS            13100000
*        MERELY THE PATH THAT DETERMINES WHETHER THE VECTOR             13200000
*        WOULD BEST BE PUT OUT AS INCREMENTAL OR ABSOLUTE.              13300000
*                                                                       13400000
DAT00150 TM    WRKBITS,ABS         ABSOLUTE                             13500000
         BZ    DAT01100            YES                                  13600000
         TM    WRKBITS,INCR        INCREMENTAL                          13700000
         BM    DAT01900            YES                                  13800000
         EJECT                                                          13900000
*                                                                       14000000
*        WHEN OPTIMIZED OUTPUT IS DESIRED, THE LENGTH OF THE INCRE-     14100000
*        MENTAL VECTOR IS COMPUTED. THE TESTING PATHS WILL SPLIT        14200000
*        DEPENDING ON WHETHER POINT(S) OR VECTOR(S) ARE DESIRED.        14300000
*                                                                       14400000
*        DETERMINATION OF INCREMENTAL OR ABSOLUTE GENERATION            14500000
*        IS AS FOLLOWS:                                                 14600000
*                                                                       14700000
*  A.    IF THE MODE SET IS CURRENTLY INCREMENTAL:                      14800000
*        THREE OR LESS INCREMENTAL VECTORS WILL BE GENERATED            14900000
*        INCREMENTAL. IF MORE THAN THREE INCREMENTAL VECTORS            15000000
*        IS DESIRED THEY ARE GENERATED ABSOLUTE.                        15100000
*  B.    IF THE MODE IS CURRENTLY ABSOLUTE:                             15200000
*        IF ONE INCREMENTAL VECTOR IS DESIRED IT IS GENERATED           15300000
*        INCREMENTAL. OTHERWISE THE VECTOR IS GENERATED                 15400000
*        ABSOLUTE.                                                      15500000
*  C.    IF NEITHER MODE IS SET:                                        15600000
*        THREE OR LESS INCREMENTAL VECTORS WILL BE GENERATED            15700000
*        INCREMENTAL. IF MORE THAN THREE ARE DESIRED THEY ARE           15800000
*        GENERATED ABSOLUTE.                                            15900000
*                                                                       16000000
*        OPTIMIZED OUTPUT                                               16100000
DAT00200 L     REGA,WRKTXINC       LOAD INCR                            16200000
         L     REGB,WRKTYINC       LOAD INCR                            16300000
         LPR   REGA,REGA           COMPUTE +                            16400000
         LPR   REGB,REGB           COMPUTE +                            16500000
         SRA   REGA,2              DIV BY 4 TO 1024 BASE                16600000
         SRA   REGB,2              DIV BY 4 TO 1024 BASE                16700000
         SRA   REGA,6              DIV BY 64 TO COMPUTE NO OF INCR VECT 16800000
         SRA   REGB,6              REQD                                 16900000
         CR    REGB,REGA           FIND LARGEST IF ANY                  17000000
         BL    DAT00500                                                 17100000
DAT00300 LA    REGB,ONE(REGB)      ADD ONE FOR ONE SHIFTED OFF EVEN IF  17200000
*                                  EVEN MULT OF 64, LARGEST + VECT IS   17300000
*                                  63                                   17400000
         TM    WRKBITS,VECT        VECTOR                               17500000
         BZ    DAT00800            YES                                  17600000
         TM    GDSGRMOD,PI         POINT,INCR=CURR MODE?                17700000
         BO    DAT00600            YES                                  17800000
         TM    GDSGRMOD,PA         POINT, ABS                           17900000
         BO    DAT00700            YES                                  18000000
         C     REGB,THREE          THREE OR LESS INCR                   18100000
         BH    DAT01250            GENERATE ABS & SET MODE-PT           18200000
         B     DAT02000            GENERATE INCR & SET MODE PT          18300000
         EJECT                                                          18400000
DAT00400 MVI   WRKSW,OFF           TURN OFF FIRST SWITCH                18500000
         MVC   WRKTXABS(SIXTN),WRKXABS MOVE IN SECOND VECTOR            18600000
         B     DAT00050                                                 18700000
DAT00500 LR    REGB,REGA           PLACE LARGEST IN REGB                18800000
         B     DAT00300                                                 18900000
DAT00600 C     REGB,THREE          3 INCR RQD                           19000000
         BH    DAT01250            MORE- GENERATE AN ABS PNT & SET MODE 19100000
         B     DAT02100            NO, GO GENERATE REQD INCR PNT        19200000
DAT00700 C     REGB,ONEFLD         1 INCR RQD                           19300000
         BE    DAT02000            YES GEN INCR PNT  & SET MODE         19400000
         B     DAT01300            NO GENERATE ABS PNT                  19500000
DAT00800 TM    GDSGRMOD,VI         VECTOR INCR= CURRENT MODE            19600000
         BO    DAT00900            YES                                  19700000
         TM    GDSGRMOD,VA         VECT ABS?                            19800000
         BO    DAT01000            YES                                  19900000
         C     REGB,THREE          3 OR LESS INCR                       20000000
         BH    DAT01700            GENER ABS & SET MODE-VECT            20100000
         B     DAT03100            GENER INCR & SET MODE-VECT           20200000
DAT00900 C     REGB,THREE          3 INCR RQD                           20300000
         BH    DAT01700            MORE-GEN AN ABS VECT & SET MODE      20400000
         B     DAT02100            NO, GEN REQD INCR VECT               20500000
DAT01000 C     REGB,ONEFLD         1 INCR RQD                           20600000
         BE    DAT03100            YES, GEN INCR VECT & SET MODE        20700000
         B     DAT01300            NO, GENERATE ABS VECT                20800000
         EJECT                                                          20900000
*                                                                       21000000
*        WHEN ABSOLUTE OUTPUT IS TO BE GENERATED: A TEST IS             21100000
*        MADE TO SEE IF VECTORS OR POINTS ARE DESIRED, THEN IT          21200000
*        IS DETERMINED IF THE MODE IS ALREADY SET TO VECTOR             21300000
*        ABSOLUTE OR POINT ABSOLUTE, RESPECTIVELY. IF NOT,              21400000
*        THE SET MODE ORDER IS PLACED IN THE WORK AREA FOR              21500000
*        THE DATA STORE ROUTINE AND THE LENGTH OF THE ELEMENT           21600000
*        THUS FAR IS SET TO TWO. THE POINT AND VECTOR                   21700000
*        PATH THEN COME TOGETHER AGAIN BECAUSE THE ACTUAL               21800000
*        COORDINATES APPEAR THE SAME REGARDLESS OF POINT OR             21900000
*        VECTOR.                                                        22000000
* ABSOLUTE OUTPUT                                                       22100000
* DAT01100  EQU  DAT01200                                               22200000
DAT01200 TM    WRKBITS,VECT        VECTOR                               22300000
         BZ    DAT01700            YES                                  22400000
DAT01250 EQU   *                                            L5 @ZA04162 22500000
         L     REGA,GDSGTMCB       GET ADDR GTMCB           L5 @ZA04162 22600000
         TM    GTMUPDT(REGA),PPNTUPDT  POINT UPDATE?        L5 @ZA04162 22700000
         BNO   DAT01251            BRANCH IF NO             L5 @ZA04162 22800000
         L     REGA,WRKKEY         ADDRESS OF KEY           L5 @ZA04162 22900000
         TM    KEYWD2(REGA),STMODE  1'ST ORDER SET MODE?    L5 @ZA04162 23000000
         BO    DAT01252            IF YES,WE WILL ADD       L5 @ZA04162 23100000
*                                  ELSE IT MAY NOT FIT      L5 @ZA04162 23200000
DAT01251 EQU   *                                            L5 @ZA04162 23300000
         TM    GDSGRMOD,PA         MODE ALREADY SET                     23400000
         BO    DAT01300            YES                                  23500000
DAT01252 EQU   *                                            L5 @ZA04162 23600000
         MVC   0(2,REGC),GEPMORD   MOVE IN SET MODE                     23700000
         LA    REGD,2(REGD)        ADD TO COUNT                         23800000
         LA    REGC,2(REGC)        POSIT OUTPUT AREA                    23900000
DAT01253 EQU   *                                            L5 @ZA04162 24000000
         MVI   GDSGRMOD,PA         SET CURRENT MODE=PT   ABS            24100000
*                                                                       24200000
*        THE X AND Y VALUES ARE PLACED IN THE AREA FOR DATA             24300000
*        STORE . IF THIS IS THE FIRST VECTOR OF TWO THE BEAM            24400000
*        BIT IS TURNED ON TO INDICATE BLANKED. IF THIS IS               24500000
*        THE REPOSITIONING VECTOR IT IS ALSO BLANKED. FINALLY,          24600000
*        IF THE BEAM IS TO BE BLANKED AS IN A REQUEST FROM              24700000
*        STPOS THE BEAM IS SET TO BE BLANKED                            24800000
DAT01300 MVC   GDSXCOR(8),ZERO          ZERO X AND Y CORR FACTOR YM1963 24900000
*                                       THE MODE FOR THIS GDS    YM1963 25000000
*                                       IS NOW ABSOLUTE          YM1963 25100000
         MVC   0(2,REGC),WRKTXABS+2     XABS IN OUT AREA         YM1963 25200000
         MVC   2(2,REGC),WRKTYABS+2 YABS                                25300000
         CLI   WRKSW,FIRST         FIRST                                25400000
         BE    DAT01350            NO                                   25500000
         CLI   WRKSW+1,REPOS       IS THIS THE REPOSITIONING VECT       25600000
         BE    DAT01350            YES BLANK IT                         25700000
         TM    WRKBITS+2,BEAMON    BEAM ON                              25800000
         BO    DAT01400            YES                                  25900000
DAT01350 OI    0(REGC),BEAMABS     TURN BEAM OFF                        26000000
DAT01400 LA    REGD,4(REGD)        ADD LENGTH OF VECTOR                 26100000
         LA    REGC,4(REGC)        POSITION OUTPUT AREA                 26200000
DAT01500 CLI   WRKSW,FIRST         BOTH DONE                            26300000
         BE    DAT01850                                                 26400000
         EJECT                                                          26500000
*                                                                       26600000
*        AT THIS POINT IF THE SECOND OR ONLY VECTOR HAS BEEN            26700000
*        GENERATED, THE TOTAL X AND Y INCREMENT FIELDS ARE              26800000
*        INCREASED BY THE INCREMENTS OF THIS CALL TO THE                26900000
*        GENERATOR. THESE FIELDS ARE USED BY THE DATA GENERATOR         27000000
*        TO GENERATE THE INCREMENTAL REPOSITIONING VECTOR IF            27100000
*        DESIRED. IF THIS IS NOT A SINGLE ENTRY, THE DATA               27200000
*        STORE ROUTINE IS CALLED TO PLACE THE DATA IN THE               27300000
*        GDOA AND OVERFLOW IF NECESSARY.                                27400000
*                                                                       27500000
         L     REGA,WRKTOTX                                             27600000
         A     REGA,WRKDATA3       COMPUTE TOTAL X INCR                 27700000
         A     REGA,WRKXINCR       THUS FAR                             27800000
         ST    REGA,WRKTOTX                                             27900000
         L     REGA,WRKTOTY                                             28000000
         A     REGA,WRKDATA4       COMPUTE TOTAL Y INCR                 28100000
         A     REGA,WRKYINCR       THUS FAR                             28200000
         ST    REGA,WRKTOTY                                             28300000
         ST    REGD,WRKOUTPT       LENGTH OF DATA GENERATED             28400000
         TM    WRKBITS,MULT        MULTIPLE ENTRY                       28500000
         BZ    DAT01800            NO GO SEE IF KEY NEEDS FIXING        28600000
DAT01550 MVC   WRKGDS1(EIGHT),WRKGDS                                    28700000
         LA    PARM,WRKGDS1                                             28800000
*//      CALL  DATA STORE                                               28900000
*//                                                                     29000000
         L     REGFIFTN,WRKDSTOR   ADDR OF DATA STORE                   29100000
         BALR  RETURN,REGFIFTN                                          29200000
         LTR   REGFIFTN,REGFIFTN   SUCCESS                              29300000
         BNE   ERR1                ALAS  NO                             29400000
         TM    WRKBITS+2,FRSTPASS  TEST FOR A LAST PASS                 29500000
         BO    DAT01870                                                 29600000
         TM    WRKBITS,MULT        IS THIS A SINGLE ENTRY               29700000
         BO    DAT01600            NO, EXIT                             29800000
*        THE LOGICAL ADDRESS IN THE KEY MUST BE SET PROPERLY ON A SINGL 29900000
*        ENTRY.   THIS IS WHAT IS DONE HERE                             30000000
         L     REGA,GDSAOACB       ADDR OF OACB                         30100000
         L     REGA,LOGCUR(REGA)   OBTAIN THE CURRENT LOGICAL ADDR      30200000
         SR    REGA,REGD           BACK IT UP THE LENGTH OF THE GENERAT 30300000
         STH   REGA,WRKADDR+2      STORE IT IN THE KEY                  30400000
*                                                                       30500000
*        IF THIS IS NOT A LAST PASS AND IF THIS IS NOT A                30600000
*        SINGLE ENTRY THE ROUTINE WILL EXIT BACK TO THE CALLING         30700000
*        PROGRAM                                                        30800000
*                                                                       30900000
DAT01600 L     SAVE,4(SAVE)                                             31000000
         RETURN (14,12),T,RC=0     GOOD RETURN                          31100000
DAT01700 EQU   *                                            D11 ZA04870 31200000
         L     REGA,GDSGTMCB       ADDR OF GTMCB            D11 ZA04870 31300000
         TM    GTMUPDT(REGA),PPNTUPDT LINE UPDATE?          D11 ZA04870 31400000
         BNO   DAT01701            BRANCH IF NOT            D11 ZA04870 31500000
         L     REGA,WRKKEY         POINT TO KEY             D11 ZA04870 31600000
         TM    KEYWD2(REGA),STMODE 1ST ORDER SETMODE?       D11 ZA04870 31700000
         BO    DAT01702            YES,ADD TO UPDATE        D11 ZA04870 31800000
DAT01701 EQU   *                                            D11 ZA04870 31900000
         TM    GDSGRMOD,VA         ALREADY SET              D11 ZA04870 32000000
         BO    DAT01300            YES                                  32100000
DAT01702 EQU   *                                            D11 ZA04870 32200000
         MVC   0(2,REGC),GEVMORD   MOVE IN SET MODE                     32300000
         LA    REGD,2(REGD)        ADD TO COUNT                         32400000
         MVI   GDSGRMOD,VA         SET CURRENT MODE=VT ABS              32500000
         LA    REGC,2(REGC)        POSIT OUTPUT AREA                    32600000
         B     DAT01300                                                 32700000
DAT01800 TM    WRKBITS+2,KEYED+CORVLD KEYED OR CORRELATED               32800000
         BNE   DAT04050            YES,FINISH KEY                       32900000
         B     DAT01550            CALL DATA GEN AND EXIT               33000000
*                                                                       33100000
*        IF THIS IS THE FIRST OF TWO VECTORS IT IS STORED BY DATA       33200000
*        STORE AND THE NEXT VECTOR IS MOVED INTO THE WORK AREA.         33300000
*        THEN CONTROL IS RETURNED TO THE START TO GENERATE THIS         33400000
*        VECTOR.                                                        33500000
*                                                                       33600000
DAT01850 ST    REGD,WRKOUTPT        LENGTH IN OUTPUT AREA               33700000
         MVC   WRKGDS1(EIGHT),WRKGDS MOVE IN GDS ADDR                   33800000
         LA    PARM,WRKGDS1        LOAD ADDR OF LIST                    33900000
*//     CALL DATA STORE                                                 34000000
         L     REGFIFTN,WRKDSTOR   ADDR OF DATA STORE                   34100000
         BALR  RETURN,REGFIFTN                                          34200000
         LTR   REGFIFTN,REGFIFTN   SUCCESSFUL                           34300000
         BNE   ERR1                NP                                   34400000
         LA    REGD,0                                                   34500000
         LA    REGC,WRKOUTPT+4     RESET OUTPUT TO ZERO DATA            34600000
         MVI   WRKSW,OFF           TURN OFF FIRST SW                    34700000
         MVC   WRKTXABS(SIXTN),WRKXABS MOVE IN SECOND VECTOR            34800000
         B     DAT00150                                                 34900000
DAT01870 TM    WRKBITS+2,KEYED+CORVLD KEYED OR CORRELATED               35000000
         BNE   DAT04050                 YES                             35100000
         B     DAT01600                 NO EXIT                         35200000
         EJECT                                                          35300000
*                                                                       35400000
*        WHEN INCREMENTAL OUTPUT IS DESIRED, THE NUMBER OF INCRE-       35500000
*        MENTAL VECTORS IS COMPUTED. THE VECTORS WILL BE GENERATED      35600000
*        AS NEARLY AT EQUAL LENGTH AS POSSIBLE. ANY REMAINDER           35700000
*        WHEN THE LENGTH IS DIVIDED BY THE NUMBER OF VECTORS IS         35800000
*        ADDED AT THE RATE OF ONE RASTER UNIT A VECTOR UNTIL IT         35900000
*        HAS BEEN USED UP. FIRST A CHECK IS MADE TO SEE IF THE          36000000
*        MODE IS ALREADY SET AND IF NOT A SET MODE ORDER IS PLACED      36100000
*        IN THE INPUT AREA TO THE DATA STORE ROUTINE.                   36200000
* INCREMENTAL OUTPUT                                                    36300000
* DAT01900 EQU DAT01950                                                 36400000
DAT01950 TM    WRKBITS,VECT        VECTOR                               36500000
         BZ    DAT03100                                                 36600000
DAT02000 TM    GDSGRMOD,PI         MODE ALREADY SET                     36700000
         BO    DAT02100                                                 36800000
         MVC   0(2,REGC),GEPI2ORD  MOVE IN ORDER                        36900000
         LA    REGD,2(REGD)        ADD TO CT                            37000000
         LA    REGC,2(REGC)        REPOS OUTPUT AREA                    37100000
         MVI   GDSGRMOD,PI         SET MODE POINT INCREMENTAL           37200000
DAT02100 L     REGA,WRKTXINC                                            37300000
         L     REGF,WRKTYINC                                            37400000
         A     REGA,GDSXCOR             ADD X CORR FACTOR OR 0   YM1963 37500000
         A     REGF,GDSYCOR             ADD Y CORR FACTOR OR 0   YM1963 37600000
         LR    REGB,REGA                SAVE X VALUE             YM1963 37700000
         LR    REGG,REGF                SAVE Y VALUE             YM1963 37800000
         SRA   REGA,2                   DIVIDE X BY 4            YM1963 37900000
         SRA   REGF,2                   DIVIDE Y BY 4            YM1963 38000000
         SLA   REGA,2                   RESTORE X                YM1963 38100000
         SLA   REGF,2                   RESTORE Y                YM1963 38200000
* NOTE THAT THE ABOVE SHIFTS WILL MAKE A NEGATIVE NUMBER MORE    YM1963 38300000
* NEGATIVE AND A POSITIVE NUMBER LESS POSSITIVE                  YM1963 38400000
         SR    REGB,REGA                NEW X CORR IN REG B      YM1963 38500000
         SR    REGG,REGF                NEW Y CORR IN REG G      YM1963 38600000
         ST    REGB,GDSXCOR             STORE NEW X CORR         YM1963 38700000
         ST    REGG,GDSYCOR             STORE NEW Y CORR         YM1963 38800000
         AR    REGA,REGB                RESET X REGISTER         YM1963 38900000
         AR    REGF,REGG                RESET Y REGISTER         YM1963 39000000
         SRDA  REGA,TR4            DIVIDE BY 4, AND                     39100000
         SRDA  REGF,TR4            POSITION IN ODD REGISTER             39200000
         LPR   SAVE,REGB           POSITIVE X                           39300000
         LPR   RETURN,REGG         POSITIVE Y                           39400000
         CR    RETURN,SAVE                                              39500000
         BNL   DAT02200                                                 39600000
         LR    RETURN,SAVE         LARGEST IN RETURN                    39700000
DAT02200 SRDA  RETURN,32                                                39800000
         D     RETURN,SIX3         DIVIDE BY 63                         39900000
         LTR   RETURN,RETURN       ANY REMAINDER?           D11 ZA14052 40000000
         BZ    DAT02250            NO,NUMBER OF VECTS IS OK D11 ZA14052 40100000
         LA    RETURN,1            1 VECT FOR REMAINDER     D11 ZA14052 40200000
DAT02250 AR    RETURN,REGFIFTN     AND ADD COMPUTED NUMBER  D11 ZA14052 40300000
         LTR   RETURN,RETURN  TOT. NUMBER OF VECTORS EQ 0?  D11 ZA14052 40400000
         BNZ   DAT02270            NO,PROCEED W DIVIDE      D11 ZA14052 40500000
* IF THE NUMBER OF VECTORS WANTED COMPUTES TO ZERO, WE HAVE D11 ZA14052 40520000
* SATISFIED THE CALLER'S REQUEST BY NOT GENNING ANYTHING,   D11 ZA14052 40540000
* BUT WE SHOULD GEN 1 VECTOR WITH MOVEMENT=0 IN CASE IT IS  D11 ZA16577 40560000
* A REPOSITIONING VECTOR, THE LACK OF WHICH CAUSES PROBLEMS.D11 ZA16577 40580000
         LA    RETURN,1            MUST GEN AT LEAST ONE    D11 ZA16577 40600000
*        THE NUMBER OF VECTORS REQD IS NOW IN RETURN                    40900000
*        THE X INCR BASE 1024 IS IN REGB                                41000000
*        THE Y INCR BASE 1024 IS IN REGG                                41100000
*        THE VECTORS/POINTS GENERATED WILL BE OF EQUAL LENGTH           41200000
*        ERROR FACTORS OF ONE UNIT PER VECTOR WILL BE ADDED             41300000
*        UNTIL THE ENTIRE CORRECTION IS MADE                            41400000
DAT02270 DR    REGA,RETURN                                  D11 ZA14052 41500000
         DR    REGF,RETURN                                              41600000
*        THE VECTOR/POINT LENGTH FOR EACH IS IN REGB AND REGG RESPECT.  41700000
*        THE ERROR FACTOR IS IN REGA AND REGF RESPECTIVELY              41800000
*        THE LAST VECTOR WILL HAVE NO CORRECTION FACTOR ADDED           41900000
         EJECT                                                          42000000
         LTR   REGA,REGA           ANY X CORR FACT                      42100000
         BZ    DAT03200            NO                                   42200000
         LA    SAVE,ONE                                                 42300000
DAT02300 LTR   REGF,REGF           ANY Y CORR FACT                      42400000
         BZ    DAT03300            NO                                   42500000
         LA    REGFIFTN,ONE                                             42600000
DAT02400 LTR   REGA,REGA           X NEG                         A29395 42700000
         BNL   DAT02500            NO                                   42800000
         LNR   SAVE,SAVE           LOAD -1                              42900000
DAT02500 LTR   REGF,REGF           Y NEG                         A29395 43000000
         BNL   DAT02600                                                 43100000
         LNR   REGFIFTN,REGFIFTN   LOAD -1                              43200000
DAT02600 LPR   REGA,REGA           NO. OF CORR.                         43300000
         LPR   REGF,REGF           NO. OF CORR.                         43400000
*                                                                       43500000
*        WHEN GENERATING THE CORRECTION FACTOR IS ADDED TO THE          43600000
*        INCREMENTAL VECTOR.  THEY ARE SHIFTED LEFT ONE BIT BECAUSE     43700000
*        THE VECTOR APPEARS THIS WAY IN THE MACHINE. THE ONE BIT        43800000
*        IS TURNED ON IN THE X BECAUSE THE HARDWARE DOES NOT WANT       43900000
*        ITS INCREMENTAL VECTORS LOOKING LIKE SET MODE ORDERS.          44000000
*        THESE FIELDS ARE PLACED IN THE OUTPUT AREA. IF THIS IS         44100000
*        NOT A VECTOR THE BEAM IS SET TO BLANKED. IF VECTOR, IT         44200000
*        IS BLANKED IF IT IS A POSITIONING VECTOR, A REPOSITIONING      44300000
*        VECTOR, OR IF THE BEAM IS REQUESTED BLANKED.                   44400000
DAT02700 LR    REGZERO,REGB        INCR IN ANOTHER REG (X)              44500000
         LR    PARM,REGG           INCR IN ANOTHER REG (Y)              44600000
         AR    REGZERO,SAVE        ADD CORRECTION FACTOR OR ZERO        44700000
         AR    PARM,REGFIFTN       ADD ERROR FACTOR OR ZERO             44800000
         SLA   REGZERO,ONE              POSITIVE FOR INCR        YM1963 44900000
         SLA   PARM,ONE                 POSITIVE FOR INCR        YM1963 45000000
         A     REGZERO,ONEFLD      ONE BIT ALWAYS SET IN X              45100000
*                                  BEAM ON CURRENTLYY                   45200000
         STC   REGZERO,0(REGC)     PLACE IN OUTPUT                      45300000
         STC   PARM,1(REGC)        PLACE IN OUTPUT                      45400000
         TM    WRKBITS,VECT        VECTOR                               45500000
         BNE   DAT02750            NO                                   45600000
         TM    WRKSW,FIRST         IF FIRST ONE, BEAN OFF               45700000
         BO    DAT02750                                                 45800000
         CLI   WRKSW+1,REPOS       IS THIS THE REPOS VECT               45900000
         BE    DAT02750            YES, BLANK                           46000000
         TM    WRKBITS+2,BEAMON    TURN BEAM OFF IF NEEDED              46100000
         BO    DAT02800            NOT NEEDED                           46200000
DAT02750 OI    1(REGC),BEAMINCR    TURN BEAM OFF                        46300000
         EJECT                                                          46400000
*                                                                       46500000
*        HERE THE CORRECTION FACTOR REGISTERS ARE CHECKED TO SEE        46600000
*        IF MORE CORRECTION MUST TAKE PLACE. IF NOT THE REGISTERS       46700000
*        ARE SET TO ZERO.                                               46800000
DAT02800 LA    REGC,2(REGC)        POSITION OUTPUT AREA                 46900000
         LA    REGD,2(REGD)        ADD TO COUNT                         47000000
         BCT   REGA,DAT02900                                            47100000
         SR    SAVE,SAVE           X CORR ALL DONE                      47200000
DAT02900 BCT   REGF,DAT03000                                            47300000
         SR    REGFIFTN,REGFIFTN   Y CORR ALL DONE                      47400000
*                                                                       47500000
*        WHEN ALL INCREMENTAL VECTORS ARE GENERATED A CHECK IS MADE     47600000
*        TO SEE IF THE BEAM BIT NEEDS MODIFYING ON THE LAST ONE.        47700000
*        IF THIS IS THE POSITIONING VECTOR, THE REPOSITIONING VECTOR    47800000
*        OR THE REQUESTED BLANKED VECTOR THE BEAM REMAINS AS IS.        47900000
*        IF THIS IS POINT OR VECTOR OTHERWISE THE BEAM IS TURNED ON     48000000
*        BY TURNING OFF THE BLANK BIT. THEN THE DATA IS HANDLED         48100000
*        AS FOR ABSOLUTE BY  CALLING DATA STORE, ETC.                   48200000
DAT03000 BCT   RETURN,DAT02700     ALL DONE                             48300000
         LA    SAVE,WRKSAVE             RESET SAVE AREA REG      YM1963 48400000
         TM    WRKSW,FIRST         IF FIRST ONE, BEAM OFF               48500000
         BO    DAT01500                                                 48600000
         CLI   WRKSW+1,REPOS       REPOS VECT                           48700000
         BE    DAT01500       YES, BLANK                                48800000
         TM    WRKBITS+2,BEAMON    YES, DOES LAST POINT NEED BEAM       48900000
         BZ    DAT01500            NO, GO TO STORE OR DO OTHER ONE      49000000
         BCTR  REGC,0              POSIT BACK                           49100000
         NI    0(REGC),BEAMOFFI    TURN BEAM ON                         49200000
         LA    REGC,ONE(REGC)      REPOSITION                           49300000
         B     DAT01500            GO TO STORE OR DO TOHER ONE          49400000
DAT03100 TM    GDSGRMOD,VI         ALREADY SET                          49500000
         BO    DAT02100                                                 49600000
         MVC   0(2,REGC),GEVI2ORD  MOVE IN ORDER                        49700000
         LA    REGD,2(REGD)        ADD TO COUNT                         49800000
         LA    REGC,2(REGC)        POSITION IN OUTPUT AREA              49900000
         MVI   GDSGRMOD,VI         SET MODE VECTOR INCREMENTAL          50000000
         B     DAT02100                                                 50100000
DAT03200 SR    SAVE,SAVE           ZERO REG WITH CORR FACT              50200000
         B     DAT02300                                                 50300000
DAT03300 SR    REGFIFTN,REGFIFTN   ZERO REG WITH CORRECTION FACT        50400000
         B     DAT02400                                                 50500000
         EJECT                                                          50600000
*                                                                       50700000
*        IF THE INPUT DATA IS KEYED IT IS OF ONE OF TWO TYPES. IT       50800000
*        IS EITHER SINGLE OR MULTIPLE. IF IT IS MULTIPLE A GTRU         50900000
*        TO AN UNRESOLVED ADDRESS (OR A GNOP FOR INCLUDE) IS            51000000
*        GENERATED AND SENT OUT TO DATA STORE. A CORRECTION IS          51100000
*        MADE TO THE LOGICAL START ADDRESS IN THE KEY AND THEN          51200000
*        THE VECTORS ARE PROCESSED.                                     51300000
* KEYED INPUT FIRST ENTRY                                               51400000
DAT03400 TM    WRKBITS,MULT        MULTIPLE ENTRY                       51500000
         BZ    DAT03700            NO                                   51600000
DAT03450 TM    WRKBITS,INCLUDE     INCLUDE STATUS                       51700000
         BO    DAT03600            YES                                  51800000
         MVC   0(4,REGC),GTRUORD   MOVE IN GTRU                         51900000
DAT03500 MVI   WRKOUTPT,UNRES      MOVE IN UNRES ADDR SW                52000000
         NI    GDSGRMOD,X'00'      SET TO CONTROL MODE                  52100000
         LA    PARM,4              LENGTH                               52200000
         STH   PARM,WRKOUTPT+2                                          52300000
         MVC   WRKGDS1(EIGHT),WRKGDS                                    52400000
         LA    PARM,WRKGDS1                                             52500000
*//                                                                     52600000
*//      CALL  DATA STORE                                               52700000
         L     REGFIFTN,WRKDSTOR   ADDR OF DATA STORE                   52800000
         BALR  RETURN,REGFIFTN                                          52900000
         LTR   REGFIFTN,REGFIFTN   SUCCESSFUL                           53000000
         BNE   ERR1                NO                                   53100000
         L     REGA,GDSAOACB       ADDR OF THE OACB                     53200000
         L     REGA,LOGCUR(REGA)   LOGICAL ADDRESS OF CURRENT OLP       53300000
         S     REGA,FOUR           SUBTRACT FOUR FOR THE DATA WE        53400000
*        JUST PLACED OUT IN THE GDOA TO GET THE ACCURATE LOGICAL        53500000
*        ADDRESS FOR THE KEY                                            53600000
         STH   REGA,WRKADDR+2      STORE IT IT IN THE KEY               53700000
         B     DAT00150                                                 53800000
DAT03600 MVC   0(4,REGC),GNOPORD   MOVE IN GNOP                         53900000
         B     DAT03500                                                 54000000
         EJECT                                                          54100000
*                                                                       54200000
*        IF THIS IS A SINGLE ENTRY A CHECK IS MADE TO SEE IF INDEED     54300000
*        IT CAN BE GENERATED AS A SINGLE ENTRY. SINGLE ENTRIES          54400000
*        DO NOT HAVE INCLUDE/OMIT STRUCTURES. THEY MERELY HAVE          54500000
*        INFORMATION IN THE KEY WHICH ENABLES INCL OR OMIT TO           54600000
*        TURN THE BEAM BIT ON OR OFF.                                   54700000
*                                                                       54800000
*        IF THERE IS A POSITIONING VECTOR THIS CANNOT BECOME A          54900000
*        SINGLE ENTRY AND IT IS CHANGED TO A MULTIPLE ENTRY, LAST       55000000
*        PASS.  THEN THE BEGINNING OF THE MULTIPLE ENTRY IS GENER-      55100000
*        ATED BEFORE THE VECTORS ARE GENERATED.  IF NO REPOSITIONING    55200000
*        IS REQUIRED THIS MUST ALSO BE TREATED AS A MULTIPLE            55300000
*        AND THE ABOVE OCCURS.  IF IT IS ABSOLUTE A BRANCH IS MADE      55400000
*        TO THE ABSOLUTE GENERATION AREA.  OTHERWISE THE LENGTH OF      55500000
*        THE INCREMENTAL VECTOR IS COMPUTED.  IF IT IS TWO THE          55600000
*        INCREMENTAL PROCESSING AREA IS BRANCHED TO.  IF THE OUTPUT     55700000
*        IS OPTIMIZED, AN ABSOLUTE VECTOR IS GENERATED. OTHERWISE       55800000
*        THE INCREMENTAL VECTOR IS TREATED AS A MULTIPLE ENTRY.         55900000
*                                                                       56000000
DAT03700 CLC   WRKDATA1(SIXTN),ZERO POSITIONING VECTOR                  56100000
         BNE   DAT03900            YES, MUST BE KEYED                   56200000
         TM    WRKBITS+2,REPOSRQD  IS THIS A MOVE-SET POSIT ENTRY       56300000
         BO    DAT03900            YES, INCLUD/OMIT STR MUST BE BUILT   56400000
         TM    WRKBITS,ABS         OUTPUT INCR                          56500000
         BZ    DAT01200                                                 56600000
         L     REGA,WRKTXINC       XINCR                                56700000
         L     REGB,WRKTYINC       YINCR                                56800000
         A     REGA,GDSXCOR        ADD X COR OR 0            LD YA00805 56900000
         A     REGB,GDSYCOR        ADD Y COR OR 0            LD YA00805 57000000
         LPR   REGA,REGA           POSITIVE                             57100000
         LPR   REGB,REGB           POSITIVE                             57200000
         CR    REGA,REGB           WHICH LARGER                         57300000
         BNL   NEGX                BRANCH IF X LARGER        LD YA01038 57400000
         LR    REGA,REGB                                                57500000
NEGY     TM    WRKTYINC,NEGATIVE   IS Y INCR NEG???          LD YA01038 57600000
         BZ    RPOS                BRANCH IF NO              LD YA01038 57700000
         LA    REGB,VLEN2          LOAD CRITICAL VALUE       LD YA01038 57800000
         B     DAT03800            BRANCH,GET VECTOR LENGTH  LD YA01038 57900000
NEGX     TM    WRKTXINC,NEGATIVE   IS X INCR NEG???          LD YA01038 58000000
         BZ    RPOS                BRANCH IF NO              LD YA01038 58100000
         LA    REGB,VLEN2          LOAD CRITICAL VALUE       LD YA01038 58200000
         B     DAT03800            BRANCH,GET VECTOR LENGTH  LD YA01038 58300000
RPOS     LA    REGB,VLEN1          INCR IS POSITIVE??        LD YA01038 58400000
DAT03800 LA    REGA,ONE(REGA)      ADD ONE BECAUSE 63 IS...  LD YA01038 58500000
*                                  ...LARGEST INCREMENT      LD YA01038 58600000
         TM    WRKBITS,OPT         CALLER WANT OPTIMIZED?   D11 ZA10055 58630000
         BO    DAT03802            YES,BRANCH               D11 ZA10055 58660000
ERR      CR    REGA,REGB     NO,SEE IF VECTOR IS IN RANGE    LD YA00805 58700000
         BL    DAT03801            BRANCH IF NO              LD YA00805 58800000
         SRA   REGA,EIGHT       DIVIDE BY 256                JM YA02056 59100000
         LTR   REGA,REGA        MORE THAN ONE INCR NEEDED    JM YA02056 59200000
         BNE   DAT01950         BRANCH IF YES               L5 @ZA04160 59300000
         B     DAT03803    ONLY ONE INCR VECT IS REQUIRED    JM YA02056 59400000
DAT03801 EQU   *                                             LD YA00805 59500000
         LR    REGF,REGA           SAVE VECTOR LENGTH        LD YA00805 59800000
         SRDA  REGF,32             POSITION IN ODD REG       LD YA00805 59900000
         D     REGF,SIX3                DIVIDE BY 252            YM1963 60000000
         B     DAT01950            GO GEN INCREMENTAL VECTOR  L5ZA04160 60100000
DAT03802 EQU   *                   OPTIMIZED TEST           D11  YM1963 60200000
         SRA   REGA,EIGHT          DIVIDE BY 256                        60300000
         LTR   REGA,REGA           MOVE THAN ONE INCR REQD?             60400000
         BNZ   DAT04000            YES,GO SEE IF INCR                   60500000
DAT03803 EQU   *                   OPT CAN BE GENNED AS INCR     YM1963 60600000
         NI    WRKBITS,OPTOFF      TURN OFF OPT-MAKE INCR               60700000
         B     DAT01900            GO GEN INCR VECTOR                   60800000
DAT03900 OI    WRKBITS,MULT        SET MULT SW                          60900000
         OI    WRKBITS+2,FRSTPASS  TURN ON LAST PASS SW                 61000000
         B     DAT03450            SET UP KEY STRU.                     61100000
DAT04000 TM    WRKBITS,INCR        INCREMENTAL MODE?                    61120000
         BM    DAT04025             YES                                 61140000
         XI    WRKBITS,ABS                                              61160000
         B     DAT01200                                                 61180000
DAT04025 NI    WRKBITS,OPTOFF      MAKE THE KEY INCR TYPE   D11 ZA17700 61200000
         B     DAT03900            THEN GO MAKE IT A MULT   D11 ZA17700 61300000
         EJECT                                                          61600000
*                                                                       61700000
*        FOR A KEYED ELEMENT AFTER THE VECTOR OR VECTORS HAVE BEEN      61800000
*        GENERATED, IF THIS IS A SINGLE ENTRY OF IF THIS IS THE         61900000
*        LAST PASS OF A MULTIPLE ENTRY CERTAIN PROCESSING MUST          62000000
*        TAKE PLACE.  FOR THE SINGLE ENTRY, IF A SET MODE ORDER         62100000
*        IS  PRESENT A FLAG IS SET IN THE KEY. THE BYTE OF DATA         62200000
*        THAT CONTAINS THE BEAM BIT IS ALSO SET IN THE KEY.             62300000
*        IF IT IS IN OMIT STATUS THE BEAM IS BLANKED, OTHERWISE         62400000
*        IT IS UNBLANKED.  THEN THE ROUTINE EXITS.                      62500000
*        KEYED OUTPUT LAST IN OR SINGLE                                 62600000
DAT04050 TM    WRKBITS,MULT        MULTIPLE                             62700000
         BO    DAT04900            YES                                  62800000
         TM    WRKBITS,ABS         ABS                                  62900000
         BZ    DAT04400            YES                                  63000000
         C     REGD,FOUR           INCRE-SET MODE                       63100000
         BNE   DAT04100            NO                                   63200000
         OI    WRKBITS,FRSTORD     SET SW                               63300000
DAT04100 BCTR  REGC,0              BACK UP ONE TO BYTE WITH BEAM        63400000
         TM    WRKBITS,INCLUDE                                          63500000
         BZ    DAT04300                                                 63600000
         NI    0(REGC),BEAMOFFI    TURN BEAM ON                         63700000
DAT04200 MVC   WRKBITS+1(1),0(REGC) SAVE BYTE OF DATA                   63800000
         B     DAT01550                                                 63900000
DAT04300 OI    0(REGC),BEAMINCR    TURN BEAM OFF                        64000000
         B     DAT04200                                                 64100000
DAT04400 C     REGD,SIXFLD         FIRST ORDER=SET MODE                 64200000
         BNE   DAT04500            NO                                   64300000
         OI    WRKBITS,FRSTORD     SET SW                               64400000
DAT04500 S     REGC,FOUR           POSIT TO BEAM LOC                    64500000
         TM    WRKBITS,INCLUDE     INCLUDE                              64600000
         BZ    DAT04700            NO                                   64700000
         NI    0(REGC),BEAMOFFA    TURN BEAM ON                         64800000
DAT04600 MVC   WRKBITS+1(1),0(REGC) SAVE ONE BYTE OF DATA               64900000
         B     DAT01550                                                 65000000
DAT04700 OI    0(REGC),BEAMABS     TURN OFF BEAM                        65100000
         B     DAT04600                                                 65200000
         EJECT                                                          65300000
*                                                                       65400000
*        FOR A MULTIPLE ELEMENT A CHECK IS MADE TO SEE IF THE           65500000
*        GENERATOR HAD JUST FINISHED PROCESSING THE REPOSITIONING       65600000
*        VECTOR.  IF NOT A CHECK IS MADE TO SEE IF A REPOSITIONING      65700000
*        VECTOR IS REQUIRED. IF NOT, A CALL IS MADE TO DATA STORE       65800000
*        TO RESOLVE THE UNRESOLVED ADDRESS IN THE INCLUDE OMIT          65900000
*        STRUCTURE AND THE ROUTINE EXITS.  OTHERWISE A CALL IS          66000000
*        MADE TO DATA STORE TO RESOLVE THE UNRESOLVED ADDRESS           66100000
*        IN THE INCLUDE OMIT STRUCTURE AS WELL AS GENERATE A            66200000
*        TRANSFER AROUND THE REPOSITIONING VECTOR.  THEN THE            66300000
*        REPOSITIONING VECTOR IS PLACED IN THE WORK FIELD, THE          66400000
*        SWITCH IS SET AND A BRANCH IS MADE TO GENERATE THE             66500000
*        REPOSITIONING VECTOR.                                          66600000
*                                                                       66700000
DAT04900 CLI   WRKSW+1,X'00'       WAS GENERATOR CALLED FOR INCR POS VT 66800000
         BNE   DAT05000            YES                                  66900000
         TM    WRKBITS+2,REPOSRQD  REPOS REQD                           67000000
         BO    DAT05000            NO                                   67100000
         MVI   WRKSW,OFF           SET FOR ONLY ONE                     67200000
         MVC   WRKOUTPT+4(4),GTRUORD MOVE IN GTRU AROUND POSIT VECT     67300000
         MVC   WRKOUTPT(4),FOUR    ELNGTH                               67400000
         MVI   WRKOUTPT,RESOL+UNRES SET SW TO RESOLVE ONE ADDR AND ADD  67500000
*                                  AN UNRESOLVED TO HIS CHAIN           67600000
         LA    PARM,WRKGDS1                                             67700000
*//                                                                     67800000
*//      CALL DATA STORE                                                67900000
         L     REGFIFTN,WRKDSTOR   ADDR OF DATA STORE                   68000000
         BALR  RETURN,REGFIFTN                                          68100000
         MVI   GDSGRMOD,X'00'      TURN OFF MODE SETTINGS               68200000
         MVC   WRKTXABS(EIGHT),WRKXABS MOVE IN POS VECT ABS             68300000
         MVC   WRKTXINC(EIGHT),WRKTOTX MOVE IN POS VECT INCR            68400000
         SR    REGD,REGD           ZERO COUNT                           68500000
         LA    REGC,WRKOUTPT+4                                          68600000
         MVI   WRKSW+1,REPOS       SET SWITCH THIS IS REPOS VECT        68700000
         B     DAT00150            GENERATE POSIT VECT                  68800000
         EJECT                                                          68900000
*                                                                       69000000
*        IF THE REPOSITIONING VECTOR HAS ALREADY BEEN GENERATED         69100000
*        A CALL IS MADE TO THE DATA STORE ROUTINE TO RESOLVE            69200000
*        THE UNRESOLVED ADDRESS IN THE BRANCH AROUND THE                69300000
*        REPOSITIONING  VECTOR, THE CIRRENT MODE IS SET TO              69400000
*        CONTROL AND THE ROUTINE EXITS.                                 69500000
*                                                                       69600000
DAT05000 XC    WRKOUTPT(4),WRKOUTPT     ZERO                            69700000
         MVI   WRKOUTPT,RESOL           SET SW TO RESOLVE AN ADDR       69800000
         LA    PARM,WRKGDS1                                             69900000
*//                                                                     70000000
*//      CALL DATA STORE                                                70100000
         L     REGFIFTN,WRKDSTOR   ADDR OF DATA STORE                   70200000
         BALR  RETURN,REGFIFTN                                          70300000
         MVI   GDSGRMOD,X'00'      SET MODE TO CONTROL BECAUSE OF BRAN- 70400000
*        CH INTO THE NEXT ELEMENT                                       70500000
         B     DAT01600                                                 70600000
         EJECT                                                          70700000
ERR1     L     SAVE,4(SAVE)                                             70800000
         RETURN (14,12),T,RC=4     RETURN WITH ERROR CODE               70900000
         EJECT                                                          71000000
* GDSGRMOD SWITCHES                                                     71100000
VA       EQU   X'08'               VECTOR ABS                           71200000
VI       EQU   X'04'               VECTOR INCR                          71300000
PA       EQU   X'02'               POINT ABS                            71400000
PI       EQU   X'01'               POINT INCR                           71500000
         EJECT                                                          71600000
* ORDERS                                                                71700000
         GINIT                                                          71800000
GEVMORD  GEVM                                                           71900000
GEPMORD  GEPM                                                           72000000
GEVI2ORD GEVI2                                                          72100000
GEPI2ORD GEPI2                                                          72200000
GTRUORD  GTRU  0                                                        72300000
GNOPORD  GNOP4 0                                                        72400000
         EJECT                                                          72500000
BEAMOFFI EQU   X'FE'                                                    72600000
BEAMOFFA EQU   X'BF'                                                    72700000
BEAMABS  EQU   X'40'                                                    72800000
BEAMINCR EQU   X'01'                                                    72900000
*                                                                       73000000
FIRST    EQU   X'FF'                                                    73100000
OFF      EQU   X'00'                                                    73200000
RESOL    EQU   X'02'                                                    73300000
         EJECT                                                          73400000
* TO TEST FLAGS PASSED                                                  73500000
* FLAGS+0                                                               73600000
MULT     EQU   X'80'                                                    73700000
FRSTORD  EQU   X'40'                                                    73800000
VECT     EQU   X'38'                                                    73900000
INCLUDE  EQU   X'04'                                                    74000000
ABS      EQU   X'03'               TM WRKBITS,ABS--BZ       D11         74100000
INCR     EQU   X'03'               TM WRKBITS,INCR-BM       D11         74200000
OPT      EQU   X'03'               TM WRKBITS,OPT--BO       D11 OZ10055 74300000
OPTOFF   EQU   X'FD'  USED TO MAKE OPT (X'03') INTO INCR (X'01')        74400000
* FLAGS+1 ONE BYTE OF DATA                                              74500000
* FLAGS+2                                                               74600000
FRSTPASS EQU   X'C0'                                                    74700000
KEYED    EQU   X'20'                                                    74800000
CORVLD   EQU   X'10'                                                    74900000
BEAMON   EQU   X'08'                                                    75000000
REPOSRQD EQU   X'04'                                                    75100000
REPONLY  EQU   X'02'                                                    75200000
         EJECT                                                          75300000
* REGISTERS                                                             75400000
REGZERO  EQU   0                                                        75500000
PARM     EQU   1                                                        75600000
REGA     EQU   2                   EVEN ODD PAIR                        75700000
REGB     EQU   3                   EVEN ODD PAIR                        75800000
REGC     EQU   4                                                        75900000
WORK     EQU   5                                                        76000000
REGF     EQU   6                   EVEN ODD PAIR                        76100000
REGG     EQU   7                   EVEN ODD PAIR                        76200000
GDSREG   EQU   8                                                        76300000
BASE     EQU   9                                                        76400000
ERRCD    EQU   10                                                YM1963 76500000
REGD     EQU   11                                                       76600000
SAVE     EQU   13                                                       76700000
RETURN   EQU   14                                                       76800000
REGFIFTN EQU   15                                                       76900000
         EJECT                                                          77000000
* CONSTANTS AND EQUATES                                                 77100000
ZERO     DC    4F'0'                                                    77200000
ONEFLD   DC    F'1'                                                     77300000
THREE    DC    F'3'                                                     77400000
FOUR     DC    F'4'                                                     77500000
SIXFLD   DC    F'6'                                                     77600000
SIX3     DC    F'63'                                                    77700000
FLAGS    DC    X'10'                                         LD YA00805 77800000
UNRES    EQU   X'01'                                                    77900000
PATCH    DS    0F                  40 (DEC) BYTE PATCH AREA D11         78000000
         DC    40X'FF'             ALL THE LITTLE FOXES     D11         78100000
ONE      EQU   1                                                        78200000
SIX      EQU   6                                                        78300000
EIGHT    EQU   8                                                        78400000
SIXTN    EQU   16                                                       78500000
TR4      EQU   34                                                       78600000
LOGCUR   EQU   52                                                       78700000
REPOS    EQU   X'FF'                                                    78800000
DSTOR    EQU   852                                                      78900000
STAT     EQU   24                                                       79000000
DAT01100 EQU   DAT01200                                                 79100000
DAT01900 EQU   DAT01950                                                 79200000
VLEN1    EQU   253                 CRITICAL POSITION RANGE   LD YA00805 79300000
VLEN2    EQU   251                      CRITICAL NEGATIVE RANGE  YM1963 79400000
NEGATIVE EQU   X'80'               USED TO TEST NEG INCR.    LD YA01038 79500000
GTMUPDT  EQU   X'3C'               PPNT FLG IN GTMCB        L5 @ZA04162 79600000
PPNTUPDT EQU   X'80'               SET BY PPNT IF UPDATE    L5 @ZA04162 79700000
KEYWD2   EQU   4                   2'ND WORD OF KEY         L5 @ZA04162 79800000
STMODE   EQU   X'40'               I'ST ORDER IS SET MODE   L5 @ZA04162 79900000
         EJECT                                                          80000000
WORKAREA DSECT      MAP OF INPUT PARAMETER LIST             D11         80100000
WRKADDR  DS    F                                                        80200000
WRKBITS  DS    F                                                        80300000
WRKCORVL DS    F                                                        80400000
WRKKEY   DS    F                                                        80500000
WRKGDS   DS    F                                                        80600000
WRKRTN   DS    F                                                        80700000
WRKDATA1 DS    F                                                        80800000
WRKDATA2 DS    F                                                        80900000
WRKDATA3 DS    F                                                        81000000
WRKDATA4 DS    F                                                        81100000
WRKXABS  DS    F                                                        81200000
WRKYABS  DS    F                                                        81300000
WRKXINCR DS    F                                                        81400000
WRKYINCR DS    F                                                        81500000
WRKTOTX  DS    F                                                        81600000
WRKTOTY  DS    F                                                        81700000
WRKENTCT DS    F                                                        81800000
WRKTXABS DS    F                   INITIALIZED BY SCALE                 81900000
WRKTYABS DS    F                   INITIALIZED BY SCALE                 82000000
WRKTXINC DS    F                   INITIALIZED BY SCALE                 82100000
WRKTYINC DS    F                   INITIALIZED BY SCALE                 82200000
WRKXERR  DS    F                                                        82300000
WRKYERR  DS    F                                                        82400000
WRKSW    DS    F                                                        82500000
WRKDSTOR DS    F                                                        82600000
WRKSAVE  DS    18F                 DATAGEN SAVEAREA                     82700000
*                                                                       82800000
WRKGDS1  DS    F       GDS         DATASTORE PARAMETER LIST             82900000
WRKRTN1  DS    F       RETURNCODE ARRAY                                 83000000
WRKOUTPT DS    10F     DATA TO BE OUTPUT                                83100000
         COPY  GDSCB                                                    83200000
* FOLLOWING TWO (2) FIELDS LOGICALLY APPENDED TO GDSCB FOR  D11         83300000
* ADDRESSIBILITY PURPOSES.                                  D11         83400000
GDSXCOR  DS    F                        X CORR FACTOR FOR DGEN   YM1963 83500000
GDSYCOR  DS    F                        Y CORR FACTOR FOR DGEN   YM1963 83600000
         COPY  GTMCB                                                    83700000
         COPY  GSPCB                                                    83800000
         END                                                            83900000
