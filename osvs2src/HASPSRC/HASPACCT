ACCT     TITLE 'HASP SMF INTERFACE ROUTINE'                    @OZ18212 KJ002000
*********************************************************************** KJ004000
*                                                                     * KJ006000
* MODULE NAME = HASPACCT                                              * KJ008000
*                                                                     * KJ010000
* DESCRIPTIVE NAME = HASPACCT                                         * KJ012000
*                                                                     * KJ014000
* COPYRIGHT = NONE                                                    * KJ016100
*                                                                     * KJ018000
* STATUS = OS/VS2 MVS   --  SEE &VERSION (BELOW) FOR JES2 LEVEL       * KJ020000
*                                                                     * KJ022000
* FUNCTION = THE HASPACCT ROUTINE IS A SUBTASK OF JES2 WHICH WRITES   * KJ024000
*            SMF RECORDS, POINTED TO BY $SMFBUSY, USING SVC 83.       * KJ026000
*            IF THE HASP SMF BUFFER CONTAINS A JMR (JOB LOG, OR       * KJ028000
*            COMMON EXIT PARAMETER LIST), THEN THE ROUTINE BRANCHES   * KJ030000
*            TO THE IEFUJP CSECT, THEN WRITES THE TYPE 26 RECORD      * KJ032000
*            ONLY IF THE RETURN CODE SO INDICATES.  HASPACCT PUTS     * KJ034000
*            FREED HASP SMF BUFFERS ON THE $SMFFREE QUEUE AND         * KJ036000
*            CONTINUES PROCESSING BUFFERS UNITL THERE ARE NONE LEFT   * KJ038000
*            ON THE BUSY QUEUE, THEN IT WAITS TO BE POSTED BY JES2.   * KJ040000
*                                                                     * KJ042000
* NOTES = SEE BELOW                                                   * KJ044000
*                                                                     * KJ046000
*    DEPENDENCIES = SMFWTM MACRO TO WRITE SMF RECORDS TO MAN DATA SET * KJ048000
*                                                                     * KJ050000
*    RESTRICTIONS = NONE                                              * KJ052000
*                                                                     * KJ054000
*    REGISTER CONVENTIONS = R1   =         SMF BUFFER ADDRESSABILITY  * KJ056000
*                           R3   = WB    = JMR BUFFER ADDRESS         * KJ058000
*                           R6   = WE    = SMF BUFFER ADDRESS         * KJ060000
*                           R11  = BASE1 = HCT ADDRESSABILITY         * KJ062000
*                           R12  = BASE2 = HASPACCT BASE REGISTER     * KJ064000
*                           R13  = SAVE  = SAVE AREA                  * KJ066000
*                           R14  = LINK  = RETURN ADDRESS             * KJ068000
*                           R15  =         ENTRY POINT                * KJ070000
*                                                                     * KJ072000
*    PATCH LABEL = NONE                                               * KJ074000
*                                                                     * KJ076000
* MODULE TYPE = PROCEDURE ( CSECT TYPE )                              * KJ078000
*                                                                     * KJ080000
*    PROCESSOR = ASSEMBLER F                                          * KJ082000
*                                                                     * KJ084000
*    MODULE SIZE = SEE $DLENGTH MACRO EXPANSION(S) AT END OF ASSEMBLY * KJ086000
*                                                                     * KJ090000
*    ATTRIBUTES = READ ONLY, SERIALLY REUSABLE                        * KJ092000
*                                                                     * KJ094000
* ENTRY POINT = HASPACCT                                              * KJ096000
*                                                                     * KJ098000
*    PURPOSE = SEE FUNCTION                                           * KJ100000
*                                                                     * KJ102000
*    LINKAGE = R1  = ADDRESS HASP ECB (AT INITIAL ENTRY)              * KJ104000
*              R13 = CALLERS SAVE AREA                                * KJ106000
*              R14 = RETURN ADDRESS                                   * KJ108000
*              R15 = ENTRY POINT                                      * KJ110000
*                                                                     * KJ112000
* INPUT = AT INITIAL ENTRY, HASP ECB TO BE POSTED, SUBSEQUENTLY       * KJ114000
*         $SMFBUSY CELL IN HCT AS POINTER TO SMF RECORDS              * KJ116000
*                                                                     * KJ118000
* OUTPUT = SMFWTM TO WRITE HASP SMF RECORDS AND ADDING FREE SMF       * KJ120000
*          BUFFERS TO $SMFFREE CELL IN HCT.                           * KJ122000
*                                                                     * KJ124000
* EXIT-NORMAL = RETURN TO CALLER USING RETURN MACRO                   * KJ126000
*                                                                     * KJ128000
* EXIT-ERROR = NONE                                                   * KJ130000
*                                                                     * KJ132000
* EXTERNAL REFERENCES = SEE BELOW                                     * KJ134000
*                                                                     * KJ136000
*    ROUTINES = NONE                                                  * KJ138000
*                                                                     * KJ140000
*    DATA AREAS = SEE BELOW                                           * KJ142000
*                                                                     * KJ144000
*    CONTROL BLOCKS = SEE $HASPCB MACRO EXPANSION                     * KJ146000
*                                                                     * KJ148000
* TABLES = SEE BELOW                                                  * KJ150000
*                                                                     * KJ152000
* MACROS = POST, NULL, RETURN, WAIT, SMFWTM, $$POST, $DLENGTH         * KJ154000
*                                                                     * KJ156000
* CHANGE ACTIVITY                                                     * KJ158000
*                                                                     * KJ158100
*     RELEASE 4.0 = NONE                                              * KJ158300
*                                                                     * KJ158400
*     RELEASE 4.1 = NONE                                              * KJ158500
*                                                                     * KJ160000
*********************************************************************** KJ162000
         TITLE 'HASP CONTROL BLOCK GENERATION MACRO'                    KJ164000
*                                                                       KJ166000
*****    $HASPCB   *****           GENERATE HASP CONTROL BLOCKS         KJ168000
*                                                                       KJ170000
         SPACE 1                                                        KJ172000
         MACRO                                                          KJ174000
         $HASPCB &DOC=NO,&LIST=NO                                       KJ176000
         GBLC  &PRINT,&GEN,&DATA                                        KJ178000
         PUSH  PRINT                                                    KJ180000
         PRINT &PRINT                                                   KJ182000
         $SVT  DOC=&DOC            GENERATE HASP SSVT DSECT             KJ188000
         $HCT  DOC=&DOC            GENERATE HASP HCT DSECT              KJ190000
         $BUFFER DOC=&DOC          GENERATE HASP BUFFER DSECT           KJ192000
         $SMF  DOC=&DOC            GENERATE HASP SMF DSECT              KJ194000
         $JCT  DOC=&DOC            GENERATE HASP JCT DSECT              KJ196000
         SPACE 1                                                        KJ198000
         POP   PRINT                                                    KJ200000
         PRINT &GEN,&DATA          SET ASSEMBLY PRINT OPTIONS           KJ202000
         MEND                                                           KJ204000
         TITLE 'HASP ACCOUNTING ROUTINE'                                KJ210000
         SPACE 5                                                        KJ212000
HASPACCT START 0                   HASP ACCOUNTING ROUTINE              KJ214000
         SPACE 5                                                        KJ216000
         COPY  $HASPGEN            COPY HASPGEN PARAMETERS              KJ218000
         TITLE 'HASP ACCOUNTING ROUTINE'                                KJ222000
         SPACE 5                                                        KJ224000
HASPACCT $ENTRY CSECT=YES,BASE=R15 PROVIDE PROCESSOR ENTRY POINT        KJ226000
         DROP  R15                 KILL ENTRY ADDRESSABILITY            KJ228000
         SPACE 5                                                        KJ230000
*                                                                       KJ232000
*                             DOCUMENTATION OPTIONS FOR THIS ASSEMBLY   KJ234000
*                                                                       KJ236000
         SPACE 3                                                        KJ238000
        $SYSPARM (OFF,GEN,NODATA,NO,NO)                                 KJ240000
         SPACE 5                                                        KJ242000
*                                                                       KJ244000
*                             GENERATE HASP CONTROL BLOCKS              KJ246000
*                                                                       KJ248000
         SPACE 3                                                        KJ250000
        $HASPCB DOC=&DOC,LIST=&LIST  GENERATE HASP CONTROL BLOCKS       KJ252000
         TITLE 'HASP ACCOUNTING ROUTINE FOR SMF'                        KJ254000
ABEGIN   STM   R14,R12,12(R13)     SAVE REGISTERS                       KJ258000
         BALR  BASE2,0             ESTABLISH BASE                       KJ260000
         USING *,BASE2                                                  KJ262000
         LR    BASE1,R1            RELOAD HCT ADDRESS                R4 KJ263000
         USING SMFDSECT,R1         SMF BUFFER ADDRESSABILITY            KJ264000
         GETMAIN R,LV=20*4         GET SAVE AREA                     R4 KJ265000
         ST    R13,4(,R1)          STORE BACKWARD POINTER            R4 KJ266000
         LR    WC,R13                                                   KJ268000
         LR    R13,R1              ADDRESS MY SAVE AREA              R4 KJ270000
         USING ASVDSECT,R13        PROVIDE SAVE AREA ADDRESSABILITY  R4 KJ271000
         ST    R13,8(WC)           STORE FORWARD POINTER                KJ272000
         POST  $PSMFECB            POST HASP INITIALIZATION          R4 KJ276000
         B     AWAIT               WAIT FOR HASP POST FOR WORK          KJ278000
AENDQ    NULL  END OF $SMFBUSY QUEUE                                    KJ280000
         TM    $STATUS,$SYSEXIT    TEST FOR WITHDRAWAL OF HASP          KJ282000
         BZ    AWAIT               NO                                   KJ284000
         L     R13,ASAVAREA+4      RETURN AFTER $PHASP COMMAND          KJ286000
         RETURN (14,12),RC=0                                            KJ288000
AWAIT    LA    R1,$ACCTECB         WAIT TO BE POSTED FOR WORK BY HASP   KJ290000
         WAIT  ECB=(1)                                                  KJ292000
         XC    $ACCTECB,$ACCTECB   RESET POST ECB                       KJ294000
*    REMOVE A SMF BUFFER FROM $SMFBUSY                                  KJ296000
AFREESMF NULL                                                           KJ298000
* REMOVE SMF BUFFER FROM END OF $SMFBUSY CHAIN                          KJ300000
         SR    WB,WB               ZERO JMR BUF. ADDR REGISTER          KJ302000
ARECYCLE C     WB,$SMFBUSY         IS THE BUSY CHAIN EMPTY              KJ304000
         BZ    AENDQ               YES                                  KJ306000
         LA    R1,$SMFBUSY         ADDRESS OF BUFFERS QUEUED            KJ308000
ARETRY   LR    WA,R1               SAVE POINTER TO PREVIOUS BUFFER      KJ310000
         L     R1,SMFCHAIN         GET NEXT BUFFER ON CHAIN             KJ312000
         C     WB,SMFCHAIN         IS THIS THE END OF THE CHAIN         KJ314000
         BNE   ARETRY              NO                                   KJ316000
         CS    R1,WB,0(WA)         UPDATE CHAIN POINTER                 KJ318000
         BNE   ARECYCLE            IF CHAIN CHANGED, RETRY SEARCH       KJ320000
         LR    WE,R1               SAVE FOR AUNQSMF                     KJ322000
         CLI   SMFTYPE,SMFJMRTP    IS BUFFER JMR                        KJ324000
         BNE   AWRITSMF            NO                                   KJ326000
         MVI   SMFTYPE,SMFRECTP    REINITIALIZE SMFTYPE                 KJ328000
         LR    WB,R1               SAVE R1 ADDR FOR AUNQSMF             KJ330000
         L     WE,JMRCHAIN         SAVE PURGE RECORD PTR. FOR AUNQ      KJ332000
         LA    WD,SMFJMR           SET UP ADDR OF JMR                   KJ334000
         ST    WD,APRGPARM         PUT ADDR INTO PARMLIST FOR IEFUJP    KJ336000
         LA    R1,SMFRDW-SMFDSECT(WE)   BEGINNING OF PURGE RECORD       KJ338000
         ST    R1,APRGREC          PUT ADDR PURGE RECORD IN PARMLIST    KJ340000
         LA    R1,APRGPARM         PUT ADDR. OF PARM. LIST IN R1        KJ342000
         L     R15,$SSVT           ADDRESS OF SSVT                      KJ344000
         USING SSVT,R15            $SSVT ADDRESSABILITY                 KJ346000
         L     R15,$SVSMFJP        ADDRESS OF IEFUJP                    KJ348000
         DROP  R15                 DROP SSVT ADDRESSABILITY             KJ350000
         BALR  LINK,R15            CALL IEFUJP                          KJ352000
         C     R15,=F'4'           WRITE SMF RECORD                     KJ354000
         BE    AUNQSMF             NO                                   KJ356000
         LR    R1,WE               SET UP SMF RECORD ADDR. IN R1        KJ358000
AWRITSMF TM    SMF26FLG,SMFNO26    SHOULD RECORD BE WRITTEN             KJ360000
         BO    AUNQSMF             NO                                   KJ362000
         LA    R1,SMFRDW-SMFDSECT(R1)   DISP. OF RECORD IN SMF BUF      KJ364000
         SMFWTM (1)                WRITE SMF RECORD                     KJ366000
AUNQSMF  NULL                      RETURN BUFFERS TO $SMFFREE           KJ368000
         LR    R1,WE               GET SMF RECORD BUFFER ADDRESS        KJ370000
         NI    SMF26FLG,X'FE'      TURN OFF ANY NO WRITE INDICATOR      KJ372000
* PLACE SMF BUFFER(S) ON BEGINNING OF $SMFFREE CHAIN                    KJ374000
         L     WD,$SMFFREE         SAVE $SMFFREE FOR POST               KJ376000
AFREBUF  ST    WD,SMFCHAIN         RETURN SMF RECORD BUFFER TO          KJ378000
         CS    WD,R1,$SMFFREE         FREE CHAIN                        KJ380000
         BNE   AFREBUF             IF CHAIN CHANGED, RETRY STORE        KJ382000
         LTR   WB,WB               IS THERE A JMR BUFFER TO BE FREED    KJ384000
         BZ    APOST               NO                                   KJ386000
         LR    R1,WB                                                    KJ388000
         L     WA,$SMFFREE         RETURN JMR BUFFER TO FREE CHAIN      KJ390000
AFREJMR  ST    WA,SMFCHAIN         UPDATE POINTER                       KJ392000
         CS    WA,R1,$SMFFREE      UPDATE $SMFFREE                      KJ394000
         BNE   AFREJMR             IF CHAIN CHANGED, RETRY STORE        KJ396000
APOST    NULL                                                           KJ398000
         LTR   WD,WD               WAS $SMFFREE EMPTY$                  KJ400000
         BNZ   AFREESMF            GO CHECK FOR MORE WORK               KJ402000
        $$POST TYPE=SMF,R11=HCT    $$POST HASP FOR SMF                  KJ404000
         B     AFREESMF            GO CHECK FOR MORE WORK               KJ406000
         EJECT                                                       R4 KJ406500
ASVDSECT DSECT                     SAVE AREA DSECT                   R4 KJ407000
ASAVAREA DS    18F                 SAVE AREA                            KJ408000
*    THE FOLLOWING PARAMETER LIST IS POINTED TO IN R1 WHEN IEFUJP       KJ410000
*    IS CALLED- IT POINTS TO THE EXIT PARAMETER LIST(JMR)&PURGE RECORD  KJ412000
APRGPARM DS    F                   POINTER TO JMR DATA(JOB LOG)         KJ414000
APRGREC  DS    F                   POINTER TO RDW FOR PURGE REC.        KJ416000
HASPACCT CSECT                     END OF SAVE AREA DSECT            R4 KJ417000
         LTORG                                                          KJ418000
$DLENGTH $DLENGTH                  COMPUTE CONTROL SECTION LENGTH       KJ420000
APARNUM  DC    CL5'50548'          APAR NUMBER                          KJ440498
         END                                                            KJ440500
