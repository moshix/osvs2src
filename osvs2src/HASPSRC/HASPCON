CON      TITLE 'HASP CONSOLE SUPPORT - PROLOG'                 @OZ18212 L0002000
*********************************************************************** L0004000
*                                                                     * L0006000
* MODULE NAME = HASJES20 ( HASPCON CSECT )                            * L0008000
*                                                                     * L0010000
* DESCRIPTIVE NAME = HASPCON CSECT OF JES2 MAIN MODULE                * L0012000
*                                                                     * L0014000
* COPYRIGHT = NONE                                                    * L0016100
*                                                                     * L0018000
* STATUS = OS/VS2 MVS   --  SEE &VERSION (BELOW) FOR JES2 LEVEL       * L0020000
*                                                                     * L0022000
* FUNCTION = THE HASPCON CSECT PROVIDES $WTO, $GETCMB, $DOM,          * L0024000
*            AND $FRECMB SERVICES TO THE PROCESSORS OF THE MAIN       * L0026000
*            JES2 TASK DURING NORMAL JOB PROCESSING, SEE ENTRY        * L0028000
*            POINTS FOR DOCUMENTATION OF EACH SERVICE ROUTINE.        * L0030000
*                                                                     * L0032000
* NOTES = SEE BELOW                                                   * L0034000
*                                                                     * L0036000
*    DEPENDENCIES = IDENTIFY MACRO TO ALLOW ATTACHING A DAUGHTER      * L0038000
*                   TASK WITH ENTRY CONTAINED WITHIN THIS CSECT.      * L0040000
*                   SEE ASSEMBLY HASPINIT FOR ATTACH.                 * L0042000
*                                                                     * L0044000
*    RESTRICTIONS = NONE                                              * L0046000
*                                                                     * L0048000
*    REGISTER CONVENTIONS = SEE ENTRY POINT DOCUMENTATION             * L0050000
*                                                                     * L0052000
*    PATCH LABEL = NONE                                               * L0054000
*                                                                     * L0056000
* MODULE TYPE = PROCEDURE ( CSECT TYPE )                              * L0058000
*                                                                     * L0060000
*    PROCESSOR = ASSEMBLER F                                          * L0062000
*                                                                     * L0064000
*    MODULE SIZE = SEE $DLENGTH MACRO EXPANSION(S) AT END OF ASSEMBLY * L0066000
*                                                                     * L0068000
*    ATTRIBUTES = REENTRANT                                           * L0070000
*                                                                     * L0072000
* ENTRY POINT =    $WTOR    - ENTRY FROM $WTO MACRO TO QUEUE          * L0074000
*                             CONSOLE MESSAGE FOR DISPLAY             * L0076000
*                  HASPWQUE - ENTRY FOR SPECIAL PURPOSE QUEUING       * L0078000
*                             OF CMBS                                 * L0080000
*                  $WTOCR   - ENTRY FROM $WTO CMB=YES MARCO TO        * L0082000
*                             QUEUE CONSOLE MESSAGE FOR DISPLAY       * L0084000
*                  $GETCMBR - ENTRY FROM $GETCMB MACRO TO GET A       * L0086000
*                             CONSOLE MESSAGE BUFFER                  * L0088000
*                  $DOMR    - ENTRY FROM $DOM MACRO TO DELETE         * L0090000
*                             OPERATOR MESSAGE                        * L0092000
*                  $FRECMBR - ENTRY FROM $FRECMB MACRO TO FREE A      * L0094000
*                             CONSOLE MESSAGE BUFFER                  * L0096000
*                  $HASPWTO - ENTRY FROM ATTACH MACRO ISSUED BY       * L0098000
*                             HASPINIT TO PERFORM ALL SVC 34 AND      * L0100000
*                             35 REQUESTS FOR THE MAIN JES2 TASK      * L0102000
*                             DURING JOB PROCESSING                   * L0104000
*                                                                     * L0106000
*    PURPOSE = SEE FUNCTION                                           * L0108000
*                                                                     * L0110000
*    LINKAGE = SEE ENTRY POINT DOCUMENTATION                          * L0112000
*                                                                     * L0114000
* INPUT = SEE ENTRY POINT DOCUMENTATION                               * L0116000
*                                                                     * L0118000
* OUTPUT = SEE ENTRY POINT DOCUMENTATION                              * L0120000
*                                                                     * L0122000
* EXIT-NORMAL = SEE ENTRY POINT DOCUMENTATION                         * L0124000
*                                                                     * L0126000
* EXIT-ERROR = NONE                                                   * L0128000
*                                                                     * L0130000
* EXTERNAL REFERENCES = SEE BELOW                                     * L0132000
*                                                                     * L0134000
*    ROUTINES = $$POST ROUTINE IN HASPSSSM, SVC 3                     * L0136000
*                                                                     * L0138000
*    DATA AREAS = SEE $HASPCB MACRO EXPANSION                         * L0140000
*                                                                     * L0142000
*    CONTROL BLOCKS = SEE $HASPCB MACRO EXPANSION                     * L0144000
*                                                                     * L0146000
* TABLES = NONE                                                       * L0148000
*                                                                     * L0150000
* MACROS = SSVT, POST, WAIT, TIME, DOM                                * L0152000
*                                                                     * L0154000
* CHANGE ACTIVITY                                                     * L0154100
*                                                                     * L0154200
*     RELEASE 4.0 = OZ05766                                           * L0154400
*                                                                     * L0154500
*     RELEASE 4.1 = NONE                                              * L0154600
*                                                                     * L0158000
*********************************************************************** L0160000
         TITLE 'HASP CONTROL BLOCK GENERATION MACRO'                    L0162000
         SPACE 5                                                        L0164000
*                                                                       L0166000
*****    $HASPCB  *****      GENERATE HASP CONTROL BLOCKS               L0168000
*                                                                       L0170000
         SPACE 1                                                        L0172000
         MACRO                                                          L0174000
         $HASPCB &DOC=NO,&LIST=NO                                       L0176000
         GBLC  &PRINT,&GEN,&DATA                                        L0178000
         PUSH  PRINT                                                    L0180000
         PRINT &PRINT                                                   L0182000
         $SVT  DOC=&DOC            GENERATE HASP SSVT DSECT             L0184000
         $HCT  DOC=&DOC            GENERATE HASP HCT DSECT              L0186000
         $PCE  DOC=&DOC            GENERATE HASP PCE DSECT              L0188000
         $BUFFER DOC=&DOC          GENERATE HASP BUFFER DSECT           L0190000
         $CMB  DOC=&DOC            GENERATE HASP CMB DSECT              L0192000
         $JQE  DOC=&DOC            GENERATE HASP JQE DSECT          R41 L0193000
         $JCT  DOC=&DOC            GENERATE HASP JCT DSECT              L0194000
         $PIT  DOC=&DOC            GENERATE HASP PIT DSECT              L0196000
         $CSA  DOC=&DOC            GENERATE HASP CSA DSECT              L0198000
         SPACE 1                                                        L0200000
         POP   PRINT                                                    L0202000
         PRINT &GEN,&DATA          SET ASSEMBLY PRINT OPTIONS           L0204000
         MEND                                                           L0206000
         TITLE 'HASP CONSOLE ROUTINES'                                  L0208000
         SPACE 5                                                        L0210000
HASPCON  START 0                   HASP CONSOLE PROCESSOR               L0212000
         SPACE 5                                                        L0214000
         COPY  $HASPGEN            COPY HASPGEN PARAMETERS              L0216000
         TITLE 'HASP CONSOLE ROUTINES'                                  L0218000
         SPACE 5                                                        L0220000
HASPCON  $ENTRY CSECT=YES,BASE=BASE2  PROVIDE PROCESSOR ENTRY POINT     L0222000
         SPACE 5                                                        L0224000
*                                                                       L0226000
*                             EXTERNAL REFERENCES                       L0228000
*                                                                       L0230000
         SPACE 3                                                        L0232000
         ENTRY $DOMR               DELETE OPERATOR MESSAGE              L0234000
         ENTRY $FRECMBR            FREE CMB                             L0236000
         ENTRY $GETCMBR            GET CMB                              L0238000
         ENTRY $HASPWTO            HASP WTO SUBTASK                     L0240000
         ENTRY $WTOR               MESSAGE BUILD AND BUFFERING          L0242000
         ENTRY $WTOCR              ENTRY TO $WTO WITH CMB ROUTINE       L0244000
         ENTRY HASPWQUE            BUFFER QUEUING ROUTINE            R4 L0246000
         SPACE 5                                                        L0248000
         TITLE 'HASP CONTROL BLOCKS'                                    L0250000
         SPACE 5                                                        L0252000
*                                                                       L0254000
*                             DOCUMENTATION OPTIONS FOR THIS ASSEMBLY   L0256000
*                                                                       L0258000
         SPACE 3                                                        L0260000
        $SYSPARM (OFF,GEN,NODATA,NO,NO)                                 L0262000
         SPACE 5                                                        L0264000
*                                                                       L0266000
*                             GENERATE HASP CONTROL BLOCKS              L0268000
*                                                                       L0270000
         SPACE 3                                                        L0272000
        $HASPCB DOC=&DOC,LIST=&LIST  GENERATE HASP CONTROL BLOCKS       L0274000
         SPACE 2                                                        L0276000
         TITLE 'HASP CONSOLE BUFFERING ROUTINE'                         L0278000
*********************************************************************** L0280000
*                                                                     * L0282000
*        $WTO - WRITE TO OPERATOR ROUTINE                             * L0284000
*                                                                     * L0286000
* FUNCTIONS -                                                         * L0288000
*                                                                     * L0290000
*                                                                     * L0292000
*    (2) OBTAIN A CMB FROM THE $SVCMBFQ QUEUE. IF NO CMBS ARE         * L0294000
*        AVAILABLE WAIT THE PROCESSOR OR RETURN WITH ZERO CC AND      * L0296000
*        R15 ZERO. IF $DOMACT IS SPECIFIED REDUCE $SVCOMCT BY         * L0298000
*        ONE AND IF THE COUNT GOES BELOW WDOMMIN SIMULATE NO CMB      * L0300000
*        AVAILABLE. IF NO CMBS ARE AVAILABLE AND THE REQUEST IS       * L0302000
*        FOR A UCMID (RESTRICTED TO COMMAND PROCESSOR) THE            * L0304000
*        $WCOMRES QUEUE IS TESTED FOR THE PRESENCE OF A RESERVED      * L0306000
*        CMB AND USED IF PRESENT.                                     * L0308000
*                                                                     * L0310000
*    (3) INSERT TIME STAMP AND JOB NUMBER (IF REQUESTED).             * L0312000
*                                                                     * L0314000
*    (4) INSERT HASP MESSAGE ID.                                      * L0316000
*                                                                     * L0318000
*    (5) MOVE MESSAGE TEXT INTO CMB.                                  * L0320000
*                                                                     * L0322000
*    (6) QUEUE CMB TO REMOTE CONSOLE OR COMMUNICATIONS SUBTASK.       * L0324000
*                                                                     * L0326000
*    (7) PROVIDE CMB ADDRESS TO CALLER IF $DOMACT REQUESTED.          * L0328000
*                                                                     * L0330000
* INPUT REGISTERS -                                                   * L0332000
*                                                                     * L0334000
*        R0    = $WTO PARAMETERS AS FOLLOWS -                         * L0336000
*        R1    = ADDRESS OF TEXT INCLUDING TWO BYTE MESSAGE ID.       * L0338000
*        R10   = ADDRESS OF JCT BUFFER IF WFJOBN ON.                  * L0340000
*        R13   = ADDRESS OF PCE.                                      * L0342000
*        LINK  = RETURN - 4 BYTES.                                    * L0344000
*        R15   = ENTRY BASE.                                          * L0346000
*                                                                     * L0348000
* OUTPUT REGISTERS -                                                  * L0350000
*                                                                     * L0352000
*        R1    = ADDRESS OF $DOMACT CMB.                              * L0354000
*        R15   = 0 - NO CMB AVAILABLE (CONDITION CODE ZERO),          * L0356000
*                OTHERWISE MESSAGE WAS QUEUED OR SCREENED OUT.        * L0358000
*                                                                     * L0360000
*********************************************************************** L0362000
         EJECT                                                       R4 L0364000
*********************************************************************** L0366000
*                                                                     * L0368000
*        LOCAL DEFINITIONS                                            * L0370000
*                                                                     * L0372000
*********************************************************************** L0374000
WPLFLAG  EQU   CMBFLAG-CMBFLAG+CSAW FLAG                             R4 L0376000
WPLLEVEL EQU   CMBLEVEL-CMBFLAG+CSAW LIST LEVEL                      R4 L0378000
WPLTYPE  EQU   CMBTYPE-CMBFLAG+CSAW FORMAT TYPE                      R4 L0380000
WPLLENG  EQU   CMBML-CMBFLAG+CSAW  MESSAGE LENGTH                    R4 L0382000
WPLTO    EQU   CMBTO-CMBFLAG+CSAW  TO SYSTEM INFORMATION             R4 L0384000
WPLOUT   EQU   CMBOUT-CMBFLAG+CSAW OUTPUT INFORMATION                R4 L0386000
WPLRMT   EQU   CMBRMT-CMBFLAG+CSAW REMOTE NUMBER                     R4 L0388000
WPLDESC  EQU   CMBDESC-CMBFLAG+CSAW DESCRIPTOR CODES                 R4 L0390000
WPLUCMA  EQU   CMBUCMA-CMBFLAG+CSAW UCM AREA                         R4 L0392000
WPLROUT  EQU   CMBROUT-CMBFLAG+CSAW LOGICAL CONSOLE ROUTINGS         R4 L0394000
WPLLINET EQU   CMBLINET-CMBFLAG+CSAW LINE TYPE FIELD                 R4 L0396000
         SPACE 2                                                     R4 L0398000
WPLNLOG  EQU   CMBFLAGT+CMBFLAGC+CMBFLAGU+CMBFLAGW NOT LOGICAL CONSOLE  L0400000
WPLCONT  EQU   CMBFLAGJ+CMBFLAGD+CMBFLAGS SPECIAL $WTO CONTROLS      R4 L0402000
WPLNOLEN EQU   CMBFLAGR            MSG LEN IN R0 FOR STD-FORM MACRO  R4 L0404000
         EJECT                                                          L0406000
*********************************************************************** L0408000
*                                                                     * L0410000
*        BUFFER QUEUEING PREFIX                                       * L0412000
*                                                                     * L0414000
*********************************************************************** L0416000
         USING CSADSECT,R5                                           R4 L0418000
         USING SSVT,R8                                                  L0420000
WWFREE   BAL   LINK,WFREE          FREE CMB                             L0422000
         SPACE 1                                                     R4 L0424000
WRESHORT OI    $RESHORT,$CMBMSB    SET WAITING CMB SWITCH      @OZ39331 L0425900
WTESTW   TM    WPLFLAG,CMBFLAGD    DID CALLER WISH TO WAIT...        R4 L0426000
         BO    WSOUT               BR IF NO TO RETURN                R4 L0428000
         LM    R0,R14,WSAVREGS      ELSE RESTORE REGISTERS           R4 L0430000
        $WAIT  CMB                   AND WAIT FOR A CMB              R4 L0432000
         BALR  R15,0               INSURE BASE OK                       L0434000
         USING *,R15                                                    L0436000
*********************************************************************** L0438000
*              ENTRY POINT                                            * L0440000
*********************************************************************** L0442000
$WTOR    DS    0H                                                       L0444000
         STM   R0,R15,WSAVREGS     SAVE CALLERS REGS                    L0446000
         L     BASE2,WBASE2        PICK UP BASE                      R4 L0448000
         DROP  R15                                                      L0450000
         L     R8,$SSVT            POINT TO SSVT                        L0452000
         L     R5,$CSAREA          POINT TO WORK AREA                R4 L0454000
         BAL   LINK,WSCREEN        FILL OUT WORK AREA AND SCREEN ROUTES L0456000
         EJECT                                                          L0458000
*********************************************************************** L0460000
*              INITIALIZE BUFFER FOR PROCESSING                       * L0462000
*********************************************************************** L0464000
         USING CMBDSECT,R2                                              L0466000
         LR    R4,R1               POINT TO MESSAGE AREA             R4 L0468000
         SLR   R14,R14             ZERO REGISTER                        L0470000
         TM    WPLFLAG,CMBFLAGU    UCMID IN WPLOUT                   R4 L0472000
         BZ    WTMLACT             CHECK FOR MLWTO ACTIVE IF NOT        L0474000
         CLI   WPLUCMA,0           AREA SPECIFIED                    R4 L0476000
         BZ    WTMLACT             CHECK FOR QUEUE TO GET CMB        R4 L0478000
         C     R14,CSAMLPCE        IS THERE AN MLWTO OWNER           R4 L0480000
         BNZ   WTMOWND             SKIP SETTING CONTROL              R4 L0482000
         ST    SAVE,CSAMLPCE       CLAIM OWNERSHIP                   R4 L0484000
WTMOWND  C     SAVE,CSAMLPCE       IS THIS PCE THE OWNER             R4 L0486000
         BNE   WTESTW              TEST FOR WAIT IF NOT                 L0488000
WGETRES  ICM   R2,15,$WCOMRES      TEST FOR RESERVED EMPTY              L0490000
         BZ    WGETBUF             SKIP RESERVED IF EMPTY               L0492000
         L     R0,CMBCMB           PICK UP CHAIN FIELD               R4 L0494000
         CS    R2,R0,$WCOMRES      DECHAIN CMB                          L0496000
         BNZ   WGETRES             TRY AGAIN IF FAILURE                 L0498000
         B     WTESTA              TEST FOR MLWTO CLEARING              L0500000
WTMLACT  C     R14,CSAMLPCE        IS THERE AN MLWTO OWNER           R4 L0502000
         BZ    WGETRES             GET RESERVED BUFFER IF NOT        R4 L0504000
WGETBUF  LM    R2,R3,$SVCMBFQ      PICK UP FREE QUEUE                   L0506000
WGETBUFA LTR   R2,R2               CHECK PRESENT                        L0508000
         BZ    WRESHORT            TEST FOR WAIT IF NONE       @OZ39331 L0510000
         LR    R1,R3               COPY SECURITY COUNT                  L0512000
         L     R0,CMBCMB           POINT TO NEXT CMB                 R4 L0514000
         CDS   R2,R0,$SVCMBFQ      DECHAIN                              L0516000
         BNZ   WGETBUFA            TRY AGAIN IF FAILURE                 L0518000
WTESTA   TM    WPLFLAG,WPLNLOG     IS THIS NOT LOGICAL ROUTED OUTPUT R4 L0520000
         BNZ   WBLDCMB             BUILD THE CMB                     R4 L0522000
         TM    WPLLEVEL,$DOMACT    IS THIS IMMEDIATE ACTION          R4 L0524000
         BZ    WBLDCMB             IF NOT, BUILD CMB                    L0526000
         L     R15,$SVCOMCT        PICK UP COMMAND COUNT                L0528000
WWCTLOOP LR    R1,R15              COPY                                 L0530000
         BCTR  R1,0                REDUCE                               L0532000
         CH    R1,WDOMMIN          CHECK FOR BELOW MINIMUM              L0534000
         BL    WWFREE              IF LOW FREE UP CMB                   L0536000
         CS    R15,R1,$SVCOMCT     SET NEW VALUE                        L0538000
         BNE   WWCTLOOP            LOOP                                 L0540000
*              THIS LINE DELETED BY APAR NUMBER                @OZ39331 L0541610
         ST    R2,WSAVREGS+R1*4    SET CMB ADDRESS FOR USER DOM      R4 L0542000
         EJECT                                                       R4 L0544000
*********************************************************************** L0546000
*                                                                     * L0548000
*        FILL OUT CMB                                                 * L0550000
*                                                                     * L0552000
*        R2    = CMB ADDRESS                                          * L0554000
*        R4    = MESSAGE ADDRESS OR ZERO                              * L0556000
*        R10   = JCT/JQE ADDRESS IF JOB = YES SPECIFIED               * L0558000
*                                                                     * L0560000
*********************************************************************** L0562000
WBLDCMB  MVC   CMBFLAG(14),CSAW    MOVE HEADER                       R4 L0564000
         SLR   R3,R3               ZERO LENGTH                       R4 L0566000
         IC    R3,CMBML            PICK UP MESSAGE LENGTH            R4 L0568000
         BCT   R3,WBLDCMBA         ADJUST COUNTS IF NOT END LINE NULLR4 L0570000
         MVI   CMBLINET,WLTEND     FORCE MLWTO TO END                R4 L0572000
         STC   R3,CMBML            SET ZERO LENGTH                   R4 L0574000
         ST    R3,CSAMLPCE         FREE MLWTO                        R4 L0576000
         B     WIDR                QUEUE IT                          R4 L0578000
WBLDCMBA LA    R6,2                GET ADJUSTMENT                    R4 L0580000
         LA    R7,CMBMSG           ASSUME COMMAND                    R4 L0582000
         TM    CMBFLAG,CMBFLAGC    COMMAND                           R4 L0584000
         BO    WBLDCMBC            TEST FOR MOVE IF COMMAND          R4 L0586000
         MVC   CMBTIME-1(L'CMBTIME+L'CMBJOBID+3),WCMBBLDM MOVE MASK  R4 L0588000
         TM    CMBFLAG,CMBFLAGU    THIS UCM                          R4 L0590000
         BZ    WBLDCMBO            TEST OTHER SYSTEM                 R4 L0592000
         CLI   CMBUCMA,0           MLWTO                             R4 L0594000
         BE    WBLDCMBO            TEST OTHER SYSTEM                 R4 L0596000
         TM    CMBLINET,WLTCONT    CONTROL LINE                      R4 L0598000
         BZ    WBLDCMBD            HANDLE DATA LINE                  R4 L0600000
         TIME  DEC                 GET TIME                          R4 L0602000
         ST    R0,CMBCMB           SET INTO CHAIN FIELD              R4 L0604000
         ED    CMBTIME-1(L'CMBTIME+1),CMBCMB EDIT                    R4 L0606000
         MVC   CMBJOBN(9),CMBTIME  COPY TO FORCE DISPLAY AREA        R4 L0608000
         B     WBLDCMBT            MOVE TEXT                         R4 L0610000
WBLDCMBD MVC   CMBTIME,CMBJOBID    BLANK OUT TIME STAMP              R4 L0612000
         TM    CMBLINET,WLTEND     IS THIS AN END LINE               R4 L0614000
         BZ    WBLDCMBE            SKIP NEXT IF NOT                  R4 L0616000
         SLR   R14,R14             FREE                              R4 L0618000
         ST    R14,CSAMLPCE        MLWTO                             R4 L0620000
WBLDCMBE LA    R7,CMBMID           ASSUME START AT WTO ORIGIN        R4 L0622000
         TM    CMBFLAG,CMBFLAGJ    USER WANT JOB INFO INSERTED       R4 L0624000
         BZ    WBLDCMBC            MOVE MESSAGE                      R4 L0626000
         BAL   LINK,WBLDJBN        EXTRACT JOB ID, JOB NAME         R41 L0627000
         MVC   CMBMID(8),WBLDJBNO  SET JOB ID                       R41 L0628000
         MVI   CMBMID+8,C' '       SET BLANK                         R4 L0630000
         MVC   CMBMID+9(8),WBLDJNAM  SET JOB NAME                   R41 L0632000
         MVI   CMBMID+17,C' '      SET BLANK                         R4 L0634000
         LA    R7,CMBMID+18        POINT TO WHERE TEXT STARTS        R4 L0636000
         B     WBLDCMBC            MOVE MESSAGE                      R4 L0638000
WBLDCMBO TM    CMBFLAG,CMBFLAGW    REMOTE WORKSTATION...             R4 L0642000
         BZ    WBLDCMBJ            BR IF NO                          R4 L0644000
WBLDCMBN TIME  DEC                 GET TIME                          R4 L0658000
         ST    R0,CMBCMB           STORE                             R4 L0660000
         ED    CMBTIME-1(L'CMBTIME+1),CMBCMB EDIT                    R4 L0662000
WBLDCMBJ TM    CMBFLAG,CMBFLAGJ    USER WANT JOB INFO INSERTED       R4 L0664000
         BO    WBLDCMBI            INSERT JOB ID                     R4 L0666000
         LA    R7,CMBJOBN          POINT TO JOB NAME FIELD           R4 L0668000
         LTR   R4,R4               IS R4 POINTING TO USER MESSAGE    R4 L0670000
         BNZ   SKIP10              SKIP NSI                          R4 L0672000
         LR    R4,R7               USER HAD BETTER STARTED IN JOBN   R4 L0674000
SKIP10   TM    1(R4),X'0F'         USER PUT JOB INFO IN              R4 L0676000
         BO    WBLDCMBM            SET HASP ID IF NO                 R4 L0678000
         MVC   CMBJOBID,2(R4)      COPY JOB ID                       R4 L0680000
         LA    R6,L'CMBJOBID+3     ACCOUNT FOR HDR, JOB ID, BLANK    R4 L0682000
         B     WBLDCMBM            SET HASP ID                       R4 L0684000
WBLDCMBI BAL   LINK,WBLDJBN        EXTRACT JOB ID, JOB NAME         R41 L0685000
         MVC   CMBJOBID,WBLDJBNO   SET JOB ID                       R41 L0686000
         MVC   CMBJOBN,WBLDJNAM    SET JOB NAME                     R41 L0688000
         MVI   CMBJOBN+8,C' '      BLANK NEXT CHARACTER              R4 L0690000
WBLDCMBT LA    R7,CMBTEXT          SET REST OF MESSAGE ADDRESS       R4 L0692000
         LTR   R4,R4               MESSAGE ADDRESS ZERO...          R41 L0692500
         BNZ   WBLDCMBM            BR IF NO                         R41 L0693000
         LR    R4,R7                ELSE SET MESSAGE ADDRESS        R41 L0693500
WBLDCMBM MVC   CMBMID,=C'$HASP000 ' SET DUMMY ID                     R4 L0694000
         CLI   $SVHASP,255         IS JES2 BEING RESTARTED...        R4 L0696000
         BNE   SKIP20              BR IF NO                          R4 L0698000
         MVC   CMBMID(1),$CCOMCHR   ELSE SET MESSAGE ID CHARACTER    R4 L0700000
SKIP20   UNPK  CMBMID+L'CMBMID-4(3),0(2,R4) SET USERS NUMBER         R4 L0702000
         OI    CMBMID+L'CMBMID-2,C'0' FORCE PRINTABLE                R4 L0704000
WBLDCMBC LTR   R4,R4               USER MESSAGE BEEN LOCATED         R4 L0706000
         BNZ   SKIP30              SKIP NSI                          R4 L0708000
         LR    R4,R7               MAKE SAME AS SLOT TO PUT IT IN    R4 L0710000
SKIP30   ALR   R4,R6               UP PAST HDR (POSSIBLY JOB ID)     R4 L0712000
         SLR   R3,R6               REDUCE MACHINE COUNT              R4 L0714000
         BM    WBLDONEB            SET ONE BLANK IF NEGATIVE         R4 L0716000
         LA    R14,1(R7,R3)        POINT TO LAST CHARACTER + 1       R4 L0718000
         SR    R14,R2              GET TOTAL USEFUL CMB LENGTH       R4 L0720000
         S     R14,=A(CMBL)        MAKE SURE NOT TOO BIG             R4 L0722000
         BNP   SKIP40              SKIP TRUNCATION                   R4 L0724000
         SR    R3,R14              REDUCE BY OVERFLOW                R4 L0726000
SKIP40   EX    R3,WEXMVC           MOVE IN MESSAGE                   R4 L0728000
         LA    R14,0(R7,R3)        POINT TO LAST CHARACTER           R4 L0730000
SKIP60   TM    0(R14),X'BF'        ZERO OR BLANK                     R4 L0732000
         BNZ   SKIP50              NOT BLANK OR ZERO                 R4 L0734000
         BCT   R14,SKIP60          LOOP                              R4 L0736000
SKIP50   SLR   R14,R2              SET NEW USEFUL CMB LENGTH - 1     R4 L0738000
         S     R14,=A(CMBMSG-CMB-1) GET LENGTH OF MESSAGE PORTION    R4 L0740000
         BNP   SKIP70              SKIP NEXT IF NEGATIVE             R4 L0742000
         TM    CMBFLAG,CMBFLAGC    IS THIS A COMMAND                 R4 L0744000
         BO    WBLDSETL            SET LENGTH                        R4 L0746000
SKIP70   LA    R3,CMBMID+1-CMBMSG  GET MINIMUM LENGTH                R4 L0748000
         CR    R14,R3              TOO SMALL                         R4 L0750000
         BNL   WBLDSETL            SET LENGTH                        R4 L0752000
WBLDONEB LA    R14,CMBMID+1-CMBMSG SET MINIMUM LENGTH WTO            R4 L0754000
         MVI   CMBMID,C' '         FORCE BLANK                       R4 L0756000
WBLDSETL STC   R14,CMBML           SET LENGTH                        R4 L0758000
WIDR     NI    CMBFLAG,255-WPLCONT TURN OFF $WTO CONTROLS            R4 L0760000
         MVC   CMBFM,$SVTO         SET FROM ID                       R4 L0762000
         B     WWQUE               QUEUE BUFFER                      R4 L0764000
         SPACE 1                                                    R41 L0764100
WBLDJBN  LA    R0,0(,JCT)          PURIFY 'JCT' ADDRESS             R41 L0764200
         S     R0,$JOBQPTR         SUBTRACT JOB QUEUE ORIGIN        R41 L0764300
         BM    WBLDJCT             BR IF NOT JQE (MUST BE JCT)      R41 L0764400
         C     R0,$JOBQSIZ         TEST AGAIN                       R41 L0764500
         BH    WBLDJCT             BR IF NOT JQE (MUST BE JCT)      R41 L0764600
         LH    R0,QUEJOBNO(,JCT)            GET JES2 JOB NUMBER     R41 L0764700
         CVD   R0,WBLDBLWD                   AND CONSTRUCT          R41 L0764800
         NI    WBLDBLWD+5,X'0F'               JCT-FORM              R41 L0764900
         MVC   WBLDJBNO+2(6),=X'402020202021'  JES2                 R41 L0765000
         ED    WBLDJBNO+2(6),WBLDBLWD+5         JOB ID              R41 L0765100
         MVC   WBLDJNAM,QUEJNAME(JCT)  SET JOB NAME                 R41 L0765200
         MVC   WBLDJBNO(3),=C'JOB' ASSUME BATCH JOB                 R41 L0765300
         CH    R0,=H'10000'        TEST ASSUMPTION                  R41 L0765400
         BLR   LINK                RETURN IF VALID                  R41 L0765500
         MVC   WBLDJBNO(3),=C'STC' ASSUME STARTED TASK              R41 L0765600
         CH    R0,=H'20000'        TEST ASSUMPTION                  R41 L0765700
         BLR   LINK                RETURN IF VALID                  R41 L0765800
         MVC   WBLDJBNO(3),=C'TSU'  ELSE MUST BE LOGON              R41 L0765900
         BR    LINK                RETURN                           R41 L0766000
         SPACE 1                                                    R41 L0766100
WBLDJCT  MVC   WBLDJBNO,JCTJOBID   SET JOB ID                       R41 L0766200
         MVC   WBLDJNAM,JCTJNAME   SET JOB NAME                     R41 L0766300
         BR    LINK                RETURN                           R41 L0766400
         SPACE 1                                                    R41 L0766500
WBLDJBNO EQU   $POSTSAV,8          SAVE AREA FOR JOB ID             R41 L0766600
WBLDJNAM EQU   WBLDJBNO+8,8        SAVE AREA FOR JOB NAME           R41 L0766700
WBLDBLWD EQU   WBLDJNAM            DOUBLE WORD WORK AREA            R41 L0766800
         EJECT                                                       R4 L0766900
*********************************************************************** L0768000
*                                                                     * L0770000
*        HASPWQUE - QUEUE CMB FOR CONSOLE SERVICE PROCESSORS          * L0772000
*                                                                     * L0774000
*********************************************************************** L0776000
HASPWQUE DS    0H                                                    R4 L0778000
         USING *,R15                                                 R4 L0780000
         STM   R0,R15,WSAVREGS     SAVE REGISTERS                    R4 L0782000
         L     BASE2,WBASE2        PICK UP BASE                      R4 L0784000
         DROP  R15                                                   R4 L0786000
         EJECT                                                       R4 L0788000
*********************************************************************** L0790000
*                                                                     * L0792000
*        QUEUE CMB                                                    * L0794000
*                                                                     * L0796000
*********************************************************************** L0798000
WWQUE    TM    CMBFLAG,CMBFLAGW    THIS FOR A REMOTE WORKSTATION     R4 L0800000
         BZ    WWQUELOC            BR IF NO                          R4 L0804000
WWQUERMT L     R4,WQMASK           PICK UP MASK                      R4 L0816000
         LR    R0,R4               COPY                              R4 L0818000
         N     R0,CMBPRIO-(CMBPRIO-CMBFLAG) PURIFY PRIORITY          R4 L0820000
         LA    R1,$BUSYRQ-(CMBCMB-CMB) POINT TO CMB Q                R4 L0822000
WWQUERL  LR    R3,R1               PULL UP REAR                         L0824000
         L     R1,CMBCMB-CMB(,R1)  POINT TO NEXT                     R4 L0826000
         LTR   R1,R1               TEST FOR END                      R4 L0828000
         BZ    WWQNOW              QUEUE IT NOW                         L0830000
         LR    R14,R4              PURIFY THE                        R4 L0832000
         N     R14,CMBPRIO-CMB-(CMBPRIO-CMBFLAG)(,R1) PRIORITY       R4 L0834000
         CR    R0,R14              CHECK PRIORITY                       L0836000
         BNH   WWQUERL             LOOP                                 L0838000
WWQNOW   ST    R2,CMBCMB-CMB(,R3)  QUEUE TO CHAIN                    R4 L0840000
         ST    R1,CMBCMB           QUEUE END ON BEHIND               R4 L0842000
         OI    $MCONPCE,$MCONACT   SET NEW ACTIVITY                  R4 L0844000
         L     SAVE,$MCONPCE       ADDRESS OF REMOTE CONSOLE PCE     R4 L0846000
         $POST (SAVE),WORK         POST REMOTE CONSOLE PCE              L0848000
         B     WQUERET             EXIT                                 L0850000
WWQUELOC L     R0,$BUSYQUE         POINT TO BUSY QUEUE ELEMENT          L0852000
WWQUEIT  ST    R0,CMBCMB           SET FOR SUBTASK                   R4 L0854000
         CS    R0,R2,$BUSYQUE      TRY TO QUEUE IT                      L0856000
         BNE   WWQUEIT             LOOP                                 L0858000
         L     R2,=X'40000000'     PICK UP POST CODE                 R4 L0860000
         L     R0,$WTOECB          PICK UP THE ECB                   R4 L0862000
WTRQPL   LTR   R0,R0               TEST FOR WAITING                  R4 L0864000
         BM    WTRP                DO FULL POST IF WAITING           R4 L0866000
         CS    R0,R2,$WTOECB       TRY QUICK POST                    R4 L0868000
         BNZ   WTRQPL              TRY AGAIN IF NO GO                R4 L0870000
         B     WQUERET             RETURN                            R4 L0872000
WTRP     LA    R1,$WTOECB          POINT TO ECB                      R4 L0874000
         POST  (1)                 POST IT                              L0876000
WQUERET  DS    0H                                                       L0878000
         LM    R0,R15,WSAVREGS     RESTORE CALLERS REGISTERS            L0880000
         LTR   LINK,LINK           SET NON-ZERO CONDITION CODE       R4 L0882000
         BP    4(,LINK)            RETURN TO +4 IF STD-FORM MACRO    R4 L0884000
         BR    LINK                RETURN TO +0 IF EXECUTE-FORM      R4 L0886000
         EJECT                                                          L0888000
*********************************************************************** L0890000
*                                                                     * L0892000
*        $WTOC - WRITE TO OPERATOR WITH USER PROVIDED CMB             * L0894000
*                                                                     * L0896000
* FUNCTIONS -                                                         * L0898000
*                                                                     * L0900000
*                                                                     * L0902000
*    (2) INSERT TIME STAMP AND JOB NUMBER (IF REQUESTED).             * L0904000
*                                                                     * L0906000
*    (3) SET HASP MESSAGE ID.                                         * L0908000
*                                                                     * L0910000
*    (4) SHIFT MESSAGE LEFT TWO BYTES (IF ID SPECIFIED).              * L0912000
*                                                                     * L0914000
*    (5) QUEUE CMB TO REMOTE CONSOLE OR COMMUNICATIONS SUBTASK.       * L0916000
*                                                                     * L0918000
* NOTES -                                                             * L0920000
*                                                                     * L0922000
*        THIS ROUTINE IS THE ALTERNATE ENTRY TO $WTO ROUTINE AND      * L0924000
*        HAS THE SAME REQUIREMENTS EXCEPT AS FOLLOWS -                * L0926000
*                                                                     * L0928000
*        (A) R1 MUST POINT TO A CMB GOTTEN FROM THE CMB POOL.         * L0930000
*                                                                     * L0932000
*        (B) THE MESSAGE TEXT MUST BE LOCATED WITHIN THE CMB AT       * L0934000
*            APPROPRIATE LOCATION ( SEE R7 SETTING IN WBLDCMB RTN )   * L0936000
*                                                                     * L0938000
*********************************************************************** L0940000
$WTOCR   DS    0H                                                       L0942000
         USING *,R15                                                    L0944000
         STM   R0,R15,WSAVREGS     SAVE CALLERS REGISTERS               L0946000
         L     BASE2,WBASE2        PICK UP BASE                      R4 L0948000
         DROP  R15                                                      L0950000
         L     R8,$SSVT            POINT TO SSVT                        L0952000
         L     R5,$CSAREA          POINT TO WORK AREA                R4 L0954000
         BAL   LINK,WSCREEN        FILL OUT WORK AREA AND SCREEN ROUTES L0956000
         LR    R2,R1               POINT TO CMB                      R4 L0958000
         SLR   R4,R4               ZERO USER MESSAGE ADDRESS         R4 L0960000
         TM    WPLFLAG,CMBFLAGC    IS THIS A COMMAND                 R4 L0962000
         BO    WBLDCMB             ENTER NORMAL PROCESSING           R4 L0964000
         TM    WPLFLAG,CMBFLAGU    IS THIS A UCMID                   R4 L0966000
         BZ    WBLDCMB             ENTER NORMAL PROCESSING           R4 L0968000
         CLI   WPLUCMA,0           AREA SPECIFIED                    R4 L0970000
         BZ    WBLDCMB             ENTER NORMAL PROCESSING           R4 L0972000
         SLR   R14,R14             ZERO WORK                         R4 L0974000
         C     R14,CSAMLPCE        IS THERE AN MLWTO OWNER           R4 L0976000
         BNZ   WTOCRT              SKIP IF YES                       R4 L0978000
         ST    SAVE,CSAMLPCE       CLAIM OWNERSHIP                   R4 L0980000
WTOCRT   C     SAVE,CSAMLPCE       IS THIS PCE THE OWNER             R4 L0982000
         BE    WBLDCMB             ENTER NORMAL PROCESSING           R4 L0984000
         EJECT                                                       R4 L0986000
*********************************************************************** L0988000
*                                                                     * L0990000
*        NON-PROCESS EXIT - RETURN CONDITION TO USER                  * L0992000
*                                                                     * L0994000
*********************************************************************** L0996000
WSOUT    LM    R0,R14,WSAVREGS     RESTORE USER REGISTERS               L0998000
         SLR   R15,R15             SET NON-PROCESS RETURN CODE       R4 L1000000
         TM    WSAVREGS+LINK*4,X'80'  TEST FOR EXECUTE-FORM MACRO    R4 L1002000
         BZ    4(,LINK)            RETURN IF NO TO +4 WITH CC = 0    R4 L1004000
         SR    R15,R15              ELSE RESET CC TO 0               R4 L1006000
         BR    LINK                 AND RETURN TO +0                 R4 L1008000
         EJECT                                                          L1010000
*********************************************************************** L1012000
*                                                                     * L1014000
*        SUBROUTINE TO SCREEN OUT LOW LEVEL LOGICAL CONSOLE MSG.      * L1016000
*                                                                     * L1018000
* REGISTERS -                                                         * L1020000
*        R0    = PARAMETER LIST OR ADDRESS OF PARAMETER LIST          * L1022000
*                                                                     * L1024000
*        R2    = LOGICAL CONSOLE MASK                                 * L1026000
*        R3    = TEST REGISTER                                        * L1028000
*        R4    = CONSOLE CONVERSION TABLE POINTER                     * L1030000
*        R5    = REQUESTED LIST LEVEL                                 * L1032000
*        LINK  = RETURN                                               * L1034000
*                                                                     * L1036000
*********************************************************************** L1038000
WSCREEN  DS    0H                                                       L1040000
         ICM   R4,15,WSAVREGS+LINK*4  TEST FOR EXECUTE-FORM MACRO    R4 L1042000
         BM    WSCLTST             BR IF YES                         R4 L1044000
         MVC   CSAW(4),0(R4)        ELSE COPY SHORT-FORM PARAMETERS  R4 L1046000
         MVC   WPLRMT,2(4)         ASSUME RMT OR UCM IN PARM LIST    R4 L1048000
         TM    WPLFLAG,CMBFLAGW+CMBFLAGU RMT NO./UCMID IN R0   @OZ26405 L1050000
         BZ    SKIP80              BR IF NO                          R4 L1052000
         STCM  R0,2,WPLRMT          ELSE SET FROM R0                 R4 L1054000
SKIP80   TM    WPLFLAG,WPLNOLEN    TEST FOR LENGTH IN R0             R4 L1056000
         BZ    WSCTYPE             BR IF NO                          R4 L1058000
         STC   R0,WPLLENG           ELSE SET FROM R0                 R4 L1060000
         NI    WPLFLAG,255-WPLNOLEN  AND RESET NO-LENGTH FLAG        R4 L1062000
         B     WSCTYPE             THEN BR TO CONTINUE               R4 L1064000
         SPACE 1                                                     R4 L1066000
WSCLTST  TM    WSAVREGS+R0*4+0,CMBFLAGS  IS THIS SHORT-FORM REQUEST  R4 L1068000
         BZ    WSCX                MOVE EXTENDED FORM                R4 L1070000
         MVC   CSAW(4),WSAVREGS+R0*4 COPY SHORT FORM                 R4 L1072000
         MVC   WPLRMT,WSAVREGS+R0*4+2  ASSUME RMT OR UCM             R4 L1074000
WSCTYPE  MVI   WPLTYPE,0           INDICATE NO FORMAT                R4 L1076000
         MVC   WPLTO,$SYSID        SET OUR SYSTEM ID                 R4 L1078000
         XC    WPLOUT+1(7),WPLOUT+1  ZERO OUTPUT INFORMATION FIELD   R4 L1080000
         TM    WPLFLAG,WPLNLOG-CMBFLAGC TEST FOR NOT LOGICAL ROUTINGSR4 L1082000
         BNZR  LINK                RETURN IF COMPLETE                R4 L1084000
         LA    R4,WTORET           POINT TO ROUTING EQUIVALENCE TABLER4 L1086000
         SLR   R2,R2               ZERO WORK                         R4 L1088000
         IC    R2,WPLRMT           PICK UP ROUTINGS                  R4 L1090000
WSCL     SRDL  R2,1                SHIFT BIT INTO R3                 R4 L1092000
         LTR   R3,R3               DID WE GET A ONE BIT              R4 L1094000
         BNM   SKIP90              SKIP NSI IF NOT                   R4 L1096000
         OC    WPLROUT,0(R4)       TURN ON BITS                      R4 L1098000
SKIP90   LA    R4,L'WPLROUT(,R4)   POINT TO NEXT                     R4 L1100000
         LTR   R2,R2               FINISHED                          R4 L1102000
         BNZ   WSCL                LOOP                              R4 L1104000
         MVC   WPLDESC,WTODRSTN    SET STANDARD DESCRIPTOR CODES     R4 L1106000
         B     WSC                 SKIP MOVE                         R4 L1108000
WSCX     LR    R4,R0               POINT TO PARAMETERS               R4 L1110000
         MVC   CSAW(14),0(R4)      COPY PARAMETERS                   R4 L1112000
WSC      TM    WPLFLAG,WPLNLOG     TEST FOR NOT LOGICAL ROUTED OUTPUTR4 L1114000
         BNZR  LINK                RETURN                            R4 L1116000
         TM    WPLLEVEL,$DOMACT    IS ACTION REQUIRED                R4 L1118000
         BZ    WSCZERO             SKIP FORCE DESC                   R4 L1120000
         TM    WPLLEVEL,$ALWAYS    IF $DOMACT ALONE,                 JN L1122100
         BZ    WSCACT                FORCE OS 'ACTION' WTO           JN L1122200
         CLI   WPLLEVEL,$DOMACT+$ACTION IF $DOMACT+$NORMAL OR LESS,  JN L1122300
         BLR   LINK                  LEAVE AS OS 'INFO' WTO          JN L1122400
WSCACT   MVI   WPLDESC,WTODESCA    FORCE ACTION DESCRIPTOR           R4 L1122500
         BR    LINK                RETURN                            R4 L1124000
WSCZERO  SLR   R4,R4               ZERO LIST LEVEL POINTER           R4 L1126000
         IC    R4,WPLLEVEL         PICK UP LEVEL AND PRIORITY        R4 L1128000
         SRA   R4,4                GET RID OF PRIORITY               R4 L1130000
         ALR   R4,R4               ALIGN                             R4 L1132000
         LA    R4,CSALEVEL(R4)     POINT TO MASK                     R4 L1134000
         NC    WPLROUT,0(R4)       MASK OUT UNDESIRABLES             R4 L1136000
         BR    LINK                RETURN                            R4 L1138000
         EJECT                                                          L1140000
*********************************************************************** L1142000
*              MISCELLANEOUS ITEMS                                    * L1144000
*********************************************************************** L1146000
WEXMVC   MVC   0(*-*,R7),0(R4)     *** EXECUTE ONLY ***              R4 L1148000
WCMBBLDM DC    X'4021204B20204B2020',CL(L'CMBJOBID+2)' '             R4 L1150000
WQMASK   DC    0F'0',AL1(0,15,0,0) MASK FOR PRIORITY QUEUING OF CMBS R4 L1152000
         DROP  R2                                                       L1154000
         DROP  R5                                                    R4 L1156000
         DROP  R8                                                    R4 L1158000
 TITLE 'HASP CMB SERVICE - $GETCMB - GET CMB(S) ROUTINE'                L1160000
*********************************************************************** L1162000
*                                                                     * L1164000
*        $GETCMB - GET ONE OR MORE CONSOLE MESSAGE BUFFERS            * L1166000
*                                                                     * L1168000
* FUNCTIONS                                                           * L1170000
*                                                                     * L1172000
*    (1) CALCULATE NEW VALUE FOR $SVCOMCT AS PER R0.                  * L1174000
*                                                                     * L1176000
*    (2) TEST FOR NUMBER OF REQUESTED CMBS AVAILABLE. IF              * L1178000
*        AVAILABLE, REMOVE THE CMBS FROM THE $SVCMBFQ.                * L1180000
*        IF NOT AVAILABLE, ERROR EXIT.                                * L1182000
*                                                                     * L1184000
*    (3) EXITS SET R1 TO ADDRESS OF CMB OR ZERO.                      * L1186000
*                                                                     * L1188000
* INPUT REGISTERS                                                     * L1190000
*                                                                     * L1192000
*        R0    = +X REDUCE $SVCOMCT BY X, PREVENT GOING TO ZERO       * L1194000
*              = -X REDUCE $SVCOMCT BY X, PREVENT GOING LT 3          * L1196000
*              =  0 NO CHANGE IN $SVCOMCT                             * L1198000
*        R1    = Y NUMBER OF CMBS REQUESTED 1,2,3,...                 * L1200000
*        LINK  = RETURN ADDRESS                                       * L1202000
*        R15   = ENTRY BASE                                           * L1204000
*                                                                     * L1206000
* OUTPUT REGISTERS                                                    * L1208000
*                                                                     * L1210000
*        R1    = ADDRESS OF FIRST CMB OR ZERO. CHAIN FIELD            * L1212000
*                POINTS TO NEXT OR ZERO.                              * L1214000
*                                                                     * L1216000
*********************************************************************** L1218000
$GETCMBR DS    0H                                                       L1220000
         USING *,R15                                                    L1222000
         STM   R0,R15,WSAVREGS     SAVE CALLERS REGISTERS               L1224000
         L     BASE2,WBASE2        PICK UP BASE                      R4 L1226000
         DROP  R15                                                      L1228000
         L     R8,$SSVT            POINT TO SSVT                        L1230000
         USING SSVT,R8                                                  L1232000
         SR    R1,R1               ZERO FOR EXIT                        L1234000
         SR    R3,R3               SET COMPARE REGISTER                 L1236000
         L     R15,$SVCOMCT        PICK UP COUNT                        L1238000
         ICM   R0,15,WSAVREGS+R0*4 PICK UP R0                           L1240000
         BZ    WGNOCT              SKIP IF NO COUNTING                  L1242000
         BP    WGADJ               IF POSITIVE DO NORMAL SUB            L1244000
         LA    R3,$DOMMIN          SET LOW BOUND                        L1246000
         LPR   R0,R0               MAKE POSITIVE                        L1248000
WGADJ    LR    R2,R15              SET FOR CALCULATIONS                 L1250000
         SR    R2,R0               REDUCE COUNT                         L1252000
         CR    R2,R3               CHECK FOR TOO LOW                    L1254000
         BNH   WGERR               ERROR EXIT                           L1256000
         CS    R15,R2,$SVCOMCT     TRY TO STORE                         L1258000
         BNE   WGADJ               LOOP                                 L1260000
WGNOCT   L     R4,WSAVREGS+R1*4    PICK UP COUNT                        L1262000
WGNOCTA  LM    R2,R3,$SVCMBFQ      POINT TO FREE QUEUE                  L1264000
         USING CMBDSECT,R2                                              L1266000
WGNOCTL  LTR   R2,R2               ANY THERE                            L1268000
         BZ    WGERRR              EXIT IF NONE THERE                   L1270000
         L     R6,CMBCMB           PICK UP CHAIN                     R4 L1272000
         LR    R7,R3               COPY SECURITY COUNT                  L1274000
         CDS   R2,R6,$SVCMBFQ      TAKE CMB AWAY                        L1276000
         BNE   WGNOCTL             LOOP                                 L1278000
         ST    R1,CMBCMB           FREE TO TEMP                      R4 L1280000
         LR    R1,R2                CHAIN                               L1282000
         BCT   R4,WGNOCTA          LOOP                                 L1284000
WGERR    ST    R1,WSAVREGS+R1*4    SET ANSWER                           L1286000
         LM    R0,R15,WSAVREGS     SET USER REGISTERS                   L1288000
         LTR   R1,R1               SET CONDITION CODES                  L1290000
         BR    LINK                EXIT                                 L1292000
WGERRR   LR    R4,R1               SAVE FREE POINTERS WE HAVE           L1294000
         LTR   R6,R0               TEST FOR UP COUNT                    L1296000
         BZ    WGERRRA             SKIP IF NOT                          L1298000
         BAL   LINK,WCOUNT         UP COUNT                             L1300000
         BCT   R6,*-4              LOOP                                 L1302000
WGERRRA  LTR   R2,R4               TEST FOR ANY CMBS                    L1304000
         BZ    WGERRRB             IF NOT EXIT                          L1306000
         L     R4,CMBCMB           LOOK AT NEXT                      R4 L1308000
         BAL   LINK,WFREE          FREE                                 L1310000
         B     WGERRRA             LOOP                                 L1312000
WGERRRB  LR    R1,R2               COPY ANSWER                          L1314000
         OI    $RESHORT,$CMBMSB    SET WAITING CMB SWITCH      @OZ32879 L1315000
         B     WGERR               EXIT                                 L1316000
         DROP  R8                                                       L1318000
         DROP  R2                                                       L1320000
 TITLE 'HASP CMB SERVICE - $DOM - DELETE OPERATOR MESSAGE'              L1322000
*********************************************************************** L1324000
*                                                                     * L1326000
*        $DOM - DELETE OPERATOR MESSAGE FOR HASP PROCESSOR            * L1328000
*                                                                     * L1330000
* FUNCTIONS                                                           * L1332000
*                                                                     * L1334000
*    (1) INCREASE THE CMB COUNT ALLOWABLE FOR COMMANDS AND            * L1336000
*        SPECIAL PURPOSES SUCH AS $DOMACT MESSAGES.                   * L1338000
*                                                                     * L1340000
*    (2) TURN $DOMACT INDICATOR OFF REGARDLESS OF WHERE THE CMB       * L1342000
*        IS, IE QUEUED TO SUB-TASK, IN PROCESS OF OS WTO, OR ON       * L1344000
*        DOM QUEUE.                                                   * L1346000
*                                                                     * L1348000
*    (3) LOCATE THE CMB ON THE ACTION QUEUE $DOMQUE, IF LOCATED       * L1350000
*        REMOVE THE CMB, FREE IT, AND ISSUE OS DOM.                   * L1352000
*                                                                     * L1354000
*    (4) RETURN.                                                      * L1356000
*                                                                     * L1358000
* INPUT REGISTERS                                                     * L1360000
*                                                                     * L1362000
*        R1    = ADDRESS OF CMB TO DOM                                * L1364000
*        BASE1 = ADDRESS OF HCT                                       * L1366000
*        LINK  = RETURN ADDRESS                                       * L1368000
*        R15   = ENTRY BASE                                           * L1370000
*                                                                     * L1372000
*********************************************************************** L1374000
$DOMR    DS    0H                                                       L1376000
         USING *,R15                                                    L1378000
         STM   R0,R15,WSAVREGS     SAVE CALLERS REGISTERS               L1380000
         L     BASE2,WBASE2        PICK UP BASE                      R4 L1382000
         DROP  R15                                                      L1384000
         L     R8,$SSVT            POINT TO SSVT                        L1386000
         USING SSVT,R8                                                  L1388000
         BAL   LINK,WCOUNT         COUNT CMB                            L1390000
         L     R4,WSAVREGS+R1*4    PICK UP CMB ADDRESS                  L1392000
         USING CMBDSECT,R4                                              L1394000
         NI    CMBLEVEL,255-$DOMACT TURN OFF DOM ACTION              R4 L1396000
         MVC   CMBDESC,WTODRSTN    RESET TO STD DESC CODES     @OZ45869 L1397000
         $POST $HASPECF,CMB        POST CMB                             L1398000
         LA    R2,$DOMQUE-(CMBCMB-CMB) POINT TO CMB ZERO             R4 L1400000
WDOMLOOP LR    R15,R2              PULL UP REAR                         L1402000
         L     R2,CMBCMB-CMB(,R2)  POINT TO NEXT CMB                 R4 L1404000
         LTR   R2,R2               TEST FOR END                      R4 L1406000
         BZ    WDOMRETA            EXIT IF END                          L1408000
         CR    R2,R4               CMB MATCH                            L1410000
         BNE   WDOMLOOP            LOOP                                 L1412000
         MVC   CMBCMB-CMB(,R15),CMBCMB REMOVE CMB                    R4 L1414000
         ICM   R4,15,CMBDOMID      PICK UP DOM ID                    R4 L1416000
         BAL   LINK,WFREE          FREE CMB                             L1418000
         LR    R1,R4               GET DOM ID                           L1420000
         DOM   MSG=(1)             DELETE MESSAGE                       L1422000
WDOMRETA LM    R0,R15,WSAVREGS     RESTORE REGISTERS                    L1424000
         BR    LINK                EXIT                                 L1426000
         DROP  R8                                                       L1428000
         DROP  R4                                                       L1430000
 TITLE 'HASP CMB SERVICE - $FRECMB - FREE CMB ROUTINE'                  L1432000
*********************************************************************** L1434000
*                                                                     * L1436000
*        $FRECMB - FREE A CONSOLE MESSAGE BUFFER                      * L1438000
*                                                                     * L1440000
* FUNCTIONS                                                           * L1442000
*                                                                     * L1444000
*                                                                     * L1446000
*    (1) IF R1 BYTE 0 NOT 0, INCREASE THE CMB COUNT ALLOWABLE         * L1448000
*        FOR COMMANDS AND SPECIAL PURPOSES SUCH AS $DOMACT            * L1450000
*        MESSAGES.                                                    * L1452000
*                                                                     * L1454000
*    (2) FREE THE CMB INTO THE RESERVE CMB (IF RESERVE EMPTY)         * L1456000
*        OR THE FREE QUEUE.                                           * L1458000
*                                                                     * L1460000
*    (3) $POST CMB.                                                   * L1462000
*                                                                     * L1464000
* INPUT REGISTERS                                                     * L1466000
*                                                                     * L1468000
*        R1    = ADDRESS OF CMB (HIGH BYTE ZERO)                      * L1470000
*        BASE1 = ADDRESS OF HCT                                       * L1472000
*        LINK  = RETURN ADDRESS                                       * L1474000
*        R15   = ENTRY BASE                                           * L1476000
*                                                                     * L1478000
*********************************************************************** L1480000
$FRECMBR DS    0H                                                       L1482000
         USING *,R15                                                    L1484000
         STM   R0,R15,WSAVREGS     SAVE CALLERS REGISTERS               L1486000
         L     BASE2,WBASE2        PICK UP BASE                      R4 L1488000
         DROP  R15                                                      L1490000
         L     R8,$SSVT            POINT TO SSVT                        L1492000
         USING SSVT,R8                                                  L1494000
         CLI   WSAVREGS+R1*4,0     TEST FOR COUNT REQUIRED              L1496000
         BZ    WFR                 SKIP COUNTING                        L1498000
         BAL   LINK,WCOUNT         COUNT                                L1500000
WFR      L     R2,WSAVREGS+R1*4    POINT TO CMB TO FREE                 L1502000
         LA    R2,0(0,R2)          PURIFY ADDRESS                       L1504000
         BAL   LINK,WFREE          FREE THE CMB                         L1506000
         $POST $HASPECF,CMB        POST CMB                             L1508000
         LM    R0,R15,WSAVREGS     RESTORE CALLERS REGISTERS            L1510000
         BR    LINK                RETURN                               L1512000
*********************************************************************** L1514000
*                                                                     * L1516000
*        SUBROUTINE TO FREE CMB (ALSO USED BY COMM SUB-TASK)          * L1518000
*                                                                     * L1520000
*********************************************************************** L1522000
         USING CMBDSECT,R2                                              L1524000
WFREE    ICM   R0,15,$WCOMRES      MLWTO HAVE A CMB                  R4 L1526000
         BNZ   WFREER              TRY SVC 34 RESERVE IF YES         R4 L1528000
         ST    R0,CMBCMB           SET ZERO CHAIN                    R4 L1530000
         CS    R0,R2,$WCOMRES      GIVE MLWTO ONE                    R4 L1532000
         BNZ   WFREE               LOOP IF NO GO                     R4 L1534000
         BR    LINK                RETURN                            R4 L1536000
WFREER   ICM   R0,15,$SVCMBRQ      RESERVE QUEUE EMPTY               R4 L1538000
         BNZ   WFREEN              IF NOT, DO NORMAL FREE               L1540000
         ST    R0,CMBCMB           SET ZERO CHAIN                    R4 L1542000
         CS    R0,R2,$SVCMBRQ      STORE IN RESERVE QUEUE               L1544000
         BNZ   WFREE               IF NO STORE LOOP                     L1546000
         BR    LINK                RETURN                               L1548000
WFREEN   LM    R0,R1,$SVCMBFQ      PICK UP FREE QUEUE                   L1550000
WFREENL  LR    R3,R1               COPY SECURITY COUNT                  L1552000
         BCTR  R3,0                COUNT                                L1554000
         ST    R0,CMBCMB           SET OLD POINTER                   R4 L1556000
         CDS   R0,R2,$SVCMBFQ      QUEUE IT                             L1558000
         BNE   WFREENL             LOOP                                 L1560000
         BR    LINK                RETURN                               L1562000
         DROP  R2                                                       L1564000
*********************************************************************** L1566000
*                                                                     * L1568000
*        SUBROUTINE TO UP COMMAND COUNT                               * L1570000
*                                                                     * L1572000
*********************************************************************** L1574000
WCOUNT   L     R1,$SVCOMCT         PICK UP COUNT                        L1576000
WCOUNTA  LA    R0,1(0,R1)          UP COUNT                             L1578000
         CS    R1,R0,$SVCOMCT      TRY TO COUNT                         L1580000
         BNE   WCOUNTA             LOOP                                 L1582000
         BR    LINK                RETURN                               L1584000
         DROP  R8                                                       L1586000
 TITLE 'HASP CONSOLE PROCESSOR  --  COMMUNICATIONS TASK ROUTINE'        L1588000
         SPACE 5                                                        L1590000
*********************************************************************** L1592000
*                                                                     * L1594000
*        THIS CODE, WHILE A PART OF HASP, OPERATES UNDER THE          * L1596000
*        CONTROL OF THE HASP COMMUNICATIONS TASK TO DEQUEUE           * L1598000
*        OPERATOR MESSAGES GENERATED BY HASP AND PASS SUCH            * L1600000
*        MESSAGES, VIA 'WTO' TO OS FOR PROCESSING. THIS CODE          * L1602000
*        IS ACTIVATED BY A HASP 'POST', INDICATING ONE OR             * L1604000
*        MORE MESSAGES HAS BEEN QUEUED FOR PROCESSING.                * L1606000
*        THIS ROUTINE THEN --                                         * L1608000
*                                                                     * L1610000
*              1. DEQUEUES THE MESSAGE FROM THE HASP QUEUE.           * L1612000
*                                                                     * L1614000
*                                                                     * L1616000
*              3. FOR ACTION MESSAGES ISSUES AN OS 'WTO'              * L1618000
*                 QUEUES THE CMB TO $DOMQUEA FOR ASYNC PROCESSOR      * L1620000
*                 TO SERVICE.                                         * L1622000
*                                                                     * L1624000
*              4. FOR UCMID OF ZERO ISSUE SVC 34 REQUEST.             * L1626000
*                                                                     * L1628000
*              5. FOR NON-ACTION MESSAGES FREES THE CMB, POSTS        * L1630000
*                 HASP, AND ISSUES OS 'WTO'.                          * L1632000
*                                                                     * L1634000
*              6. CONTINUES THE ABOVE STEPS UNTIL THE HASP            * L1636000
*                 MESSAGE QUEUE IS EXHAUSTED.                         * L1638000
*                                                                     * L1640000
*              7. ENTERS AN OS 'WAIT' STATE TO AWAIT ANOTHER          * L1642000
*                 'POST' BY HASP.                                     * L1644000
*                                                                     * L1646000
*        NOTE THAT ONCE THIS PROCESSOR BEGINS A MLWTO FOR THE         * L1648000
*        COMMAND PROCESSOR, ALL OTHER WTO (NON UCMID) REQUESTS        * L1650000
*        ARE DELAYED UNTIL THE END LINE IS SENT.                      * L1652000
*                                                                     * L1654000
*********************************************************************** L1656000
         EJECT                                                          L1658000
$HASPWTO NULL  *                   INITIAL ENTRY POINT FROM ATTACH      L1660000
         BALR  BASE2,0             ESTABLISH                            L1662000
         USING *,BASE2              BASE                                L1664000
         LR    BASE1,R1            RELOAD HCT ADDRESS                R4 L1666000
         L     BASE2,WBASE2        LOAD NORMAL BASE                  R4 L1668000
         USING HASPCON,BASE2                                            L1670000
         POST  $WTOPECB            POST HASP INITIALIZATION          R4 L1672000
         L     R8,$SSVT            POINT TO SSVT                        L1674000
         L     R5,$CSAREA          POINT TO WORK AREA                   L1676000
         B     WTOWAIT             GO WAIT FOR HASP POST                L1678000
         USING SSVT,R8                                                  L1680000
         USING CSADSECT,R5                                              L1682000
WTOQMT   NULL  *                   MESSAGE QUEUE EMPTY                  L1684000
         TM    $STATUS,$SYSEXIT    TEST FOR WITHDRAWAL OF HASP          L1686000
         BZ    WTOWAIT             WAIT FOR MORE MESSAGES               L1688000
         SVC   3                   EXIT TO TERMINATE TASK               L1690000
WTOWAIT  WAIT  ECB=$WTOECB         WAIT FOR HASP POST                   L1692000
         MVI   $WTOECB,0           RESET ECB                            L1694000
*********************************************************************** L1696000
*                                                                     * L1698000
*        EXAMINE INPUT QUEUE $BUSYQUE AND REMOVE ALL CMBS             * L1700000
*                                                                     * L1702000
*********************************************************************** L1704000
WTODQ    NI    CSACONCT,255-1      TURN OFF NO WTO INDICATOR         R4 L1706000
         USING CMBDSECT,R1                                              L1708000
         L     R1,$BUSYQUE         POINT TO LAST QUEUED CMB             L1710000
         LTR   R1,R1               PRESENT                              L1712000
         BZ    WSBSYQ              IF NOT LOOK AT WORK QUEUE            L1714000
         SLR   R2,R2               PULL ALL CMBS                        L1716000
WSBQL    CS    R1,R2,$BUSYQUE       OFF THE QUEUE                       L1718000
         BNE   WSBQL               TRY AGAIN IF NOT OFF                 L1720000
*********************************************************************** L1722000
*                                                                     * L1724000
*        REVERSE CMB ORDER TO FIFO                                    * L1726000
*                                                                     * L1728000
*********************************************************************** L1730000
WSBQLL   L     R0,CMBCMB           POINT TO NEXT                     R4 L1732000
         ST    R2,CMBCMB           SWITCH THE                        R4 L1734000
         LR    R2,R1                ORDER                               L1736000
         LTR   R1,R0                OF CMBS                             L1738000
         BNZ   WSBQLL              CONTINUE                             L1740000
         EJECT                                                          L1742000
*********************************************************************** L1744000
*                                                                     * L1746000
*        PLACE CMBS ON WORK QUEUE AND REMOVE FIRST ELIGIBLE CMB       * L1748000
*                                                                     * L1750000
*********************************************************************** L1752000
WTQL     L     R4,WQMASK           PICK UP MASK                      R4 L1754000
         LR    R0,R4               PURIFY                            R4 L1756000
         N     R0,CMBPRIO-CMB-(CMBPRIO-CMBFLAG)(,R2) PRIORITY        R4 L1758000
         LA    R1,$CONWKQ-(CMBCMB-CMB) POINT TO WORK QUEUE           R4 L1760000
WTQLL    LR    R3,R1               PULL UP REAR                         L1762000
         L     R1,CMBCMB           POINT TO NEXT CMB                 R4 L1764000
         LTR   R1,R1               CHECK FOR END                        L1766000
         BZ    WTQNOW              QUEUE IT NOW IF END                  L1768000
         LR    R14,R4              PURIFY THE                        R4 L1770000
         N     R14,CMBPRIO-(CMBPRIO-CMBFLAG) PRIORITY                R4 L1772000
         CR    R0,R14              CHECK PRIORITY                       L1774000
         BNH   WTQLL               LOOP IF NOT HIGH                     L1776000
WTQNOW   L     R14,CMBCMB-CMB(,R2) NEXT CMB IN TEMPORARY Q           R4 L1778000
         ST    R1,CMBCMB-CMB(,R2)  PUT LOW PRIORITY BEHIND           R4 L1780000
         ST    R2,CMBCMB-CMB(,R3) PUT CURRENT IN QUEUE               R4 L1782000
         LTR   R2,R14              POINT TO FIRST CMB IN TEMP           L1784000
         BNZ   WTQL                LOOP IF NOT VOID                     L1786000
WSBSYQ   LA    R1,$CONWKQ-(CMBCMB-CMB) POINT TO CMB ZERO             R4 L1788000
WSBSYQL  LR    R2,R1               SAVE POINTER TO PREVIOUS             L1790000
         L     R1,CMBCMB           POINT TO NEXT                     R4 L1792000
         LTR   R1,R1               TEST FOR END                         L1794000
         BZ    WTOQMT              WAIT IF YES                          L1796000
         CLI   CSACONCT,0          IS MLWTO IN PROCESS                  L1798000
         BZ    WSBSYQE             DEQUEUE IF NOT                       L1800000
         TM    CMBFLAG,CMBFLAGU    DOES CMBOUT CONTAIN UCMID         R4 L1802000
         BZ    WSBSYQL             LOOP IF NOT                          L1804000
         TM    CMBFLAG,CMBFLAGC    THIS A COMMAND                    R4 L1806000
         BO    WSBSYQL             LOOP IF YES                       R4 L1808000
         CLI   CMBUCMA,0           IS AREA SPECIFIED                 R4 L1810000
         BZ    WSBSYQL             LOOP IF GENERAL                      L1812000
WSBSYQE  MVC   CMBCMB-CMB(,R2),CMBCMB REMOVE FROM QUEUE              R4 L1814000
         EJECT                                                          L1816000
*********************************************************************** L1818000
*                                                                     * L1820000
*        FILL OUT WTO LIST AND ISSUE WTO                              * L1822000
*                                                                     * L1824000
*********************************************************************** L1826000
         MVC   CSANFM,CMBFM        MOVE THE FROM INFORMATION         R4 L1828000
         MVC   CSADESC(CSALSIZ-2),WTODRSTN MOVE DEFAULTS TO TRAILLER    L1830000
         MVC   CSAMCS,WMCSSTAN     SET STANDARD MCS FLAGS               L1832000
         SLR   R2,R2               ZERO WORK                         R4 L1834000
         SLR   R6,R6               ZERO UCMID REGISTER               R4 L1836000
         LA    R0,128-1            SET MAXIMUM TEXT LENGTH - 1       R4 L1838000
         TM    CMBFLAG,WPLNLOG     IS THIS NOT LOGICAL ROUTE         R4 L1840000
         BZ    WTOLOG              HANDLE LOGICAL ROUTINGS           R4 L1842000
         TM    CMBFLAG,CMBFLAGC    DOES THIS CONTAIN A COMMAND       R4 L1844000
         BO    WS34                HANDLE SVC 34 PROCESSING          R4 L1846000
*        THE CMB CONTAINS A UCMID RESPONSE                           R4 L1856000
         IC    R6,CMBUCM           PICK UP THE UCMID                 R4 L1858000
         OI    CSAMCS,WOSUCMF      SET UCMID AND RESPONSE            R4 L1860000
         CLI   CMBUCMA,0           IS THIS MLWTO                     R4 L1862000
         BZ    WTOWTO              DO NORMAL WTO                     R4 L1864000
         MVI   CSAMCS+1,WMCSML     SET MLWTO MODE                    R4 L1866000
         MVI   CSADESC,WDOUTLN     SET NEW DESCRIPTOR CODES          R4 L1868000
         MVI   CSADESC+1,WDCONTID  FOR OUT OF LINE RESPONSES         R4 L1870000
         MVC   CSALINET,CMBLINET   MOVE LINE TYPE                    R4 L1872000
         MVC   CSALAREA,CMBUCMA    MOVE AREA                         R4 L1874000
         LA    R0,34-1             SET MAXIMUM CONTROL LENGTH - 1    R4 L1876000
         TM    CMBLINET,WLTCONT    IS THIS A CONTROL LINE            R4 L1878000
         BO    WTOWTO              DO NORMAL WTO                     R4 L1880000
         LA    R0,70-1             SET MAXIMUM SECONDARY LENGTH - 1  R4 L1882000
         ICM   R6,14,CSACONCT+1    PICK UP CONNECT ID                R4 L1884000
         TM    CMBLINET,WLTEND     IS THIS END                       R4 L1886000
         BZ    WTOWTO              DO NORMAL WTO IF NOT              R4 L1888000
         OI    CSACONCT,8          SET END LINE                      R4 L1890000
         B     WTOWTO              DO NORMAL WTO                     R4 L1892000
         EJECT                                                          L1952000
*********************************************************************** L1954000
*                                                                     * L1956000
*        ISSUE SVC 34 FOR COMMAND PROCESSOR                           * L1958000
*                                                                     * L1960000
*********************************************************************** L1962000
WS34     DS    0H                                                    R4 L1964000
         IC    R2,CMBML            PICK UP LENGTH                    R4 L1966000
         BCTR  R2,0                GET MACHINE COUNT                 R4 L1968000
         EX    R2,WS34MVC          MOVE ENTIRE TEXT                  R4 L1970000
         LA    R2,5(0,R2)          GET TOTAL LENGTH                  R4 L1972000
WS34C    XC    CSAMCS,CSAMCS       ZERO MCS FLAGS                    R4 L1974000
         STC   R2,CSAMSGL+1        SET LENGTH                        R4 L1976000
         SLR   R0,R0               INSURE UCMID XERO                 R4 L1978000
         LR    R4,R1               SAVE CMB ADDRESS                  R4 L1980000
         LA    R1,CSAWTOL          POINT TO WTOL FOR SVC 34          R4 L1982000
         OI    CSACONCT,1          SUPPRESS WTO                      R4 L1984000
         SVC   34                  ISSUE COMMAND REQUEST             R4 L1986000
         LR    R1,R4               RESTORE CMB ADDRESS               R4 L1988000
         TM    CMBFLAG,CMBFLAGU    UCM SPECIFIED                     R4 L1990000
         BZ    WNRMFRE             FREE CMB IF NO UCM                R4 L1992000
         CLI   CMBUCM,X'FF'        SPECIAL UCM                       R4 L1994000
         BNE   WNRMFRE             FREE THE CMB IF GOOD UCMID           L1996000
         L     R2,$PITABLE         POINT TO FIRST PIT                   L1998000
         USING PITDSECT,R2                                              L2000000
WPITL    TM    PITFLAGS,PITSIVER+PITSIERR ARE WE STARTING PIT           L2002000
         BM    WPITF               SIVER ON, SIERR OFF BR               L2004000
         L     R2,PITNEXT          POINT TO NEXT PIT                 R4 L2006000
         LTR   R2,R2               TEST FOR VALID PIT ADDRESS        R4 L2008000
         BNZ   WPITL               BR IF SO                          R4 L2010000
         B     WNRMFRE             SHOULD NEVER HAPPEN EXIT             L2012000
WPITF    LTR   R15,R15             DID SVC 34 SAY OK                    L2014000
         BZ    WPITOK              ALLOW USE OF PIT IF YES              L2016000
         L     R0,$SVPIDLE         PICK UP PIT IDLE COUNT               L2018000
WPITCSL  LTR   R14,R0              COPY AND TEST                        L2020000
         BZ    WPITOK              ACCEPT USER STARTED INIT             L2022000
         BCTR  R14,0               DECREMENT COUNT                      L2024000
         CS    R0,R14,$SVPIDLE     ALTER COUNT                          L2026000
         BNZ   WPITCSL             LOOP IF NOT ALTERED                  L2028000
         OI    PITFLAGS,PITSIERR   SET REJECTION FLAG                   L2030000
         B     WNRMFRE             FREE THE CMB                         L2032000
WPITOK   OI    PITFLAGS,PITSMVER   SHOW WAITING MEM. CREATE    @OZ35293 L2034000
         NI    PITFLAGS,255-PITSIVER START COMMAND VERIFIED    @OZ35293 L2034100
         TS    $SVJOB              FAKE $$POST OF HASPXEQ               L2036000
*                                  FREE CMB WILL COMPLETE $$POST        L2038000
         B     WNRMFRE             FREE CMB                             L2040000
WS34MVC  MVC   CSAMSG(*-*),CMBMSG  *** EXECUTE ONLY ***              R4 L2042000
         DROP  R2                                                       L2044000
         EJECT                                                          L2046000
WTOLOG   MVC   CSADESC(4),CMBDESC+CMBROUT-CMBROUT COPY CODES         R4 L2048000
         CLC   CSAROUTE,WTORET     TEST FOR LOG ONLY                    L2050000
         BNE   WTOWTO              SKIP NEXT INSTRUCTION                L2052000
         OI    CSAMCS,WTOHCPY      SET FOR HARD COPY ONLY               L2054000
WTOWTO   NULL  *                   SEND MESSAGE                         L2056000
         IC    R2,CMBML            PICK UP LENGTH                    R4 L2058000
         SH    R2,=Y(CMBMID-CMBMSG+1) SET MACHINE MOVE COUNT         R4 L2060000
         BP    WTOTRUNC            CHECK FOR TOO LONG                R4 L2062000
         MVI   4(R5),X'40'         PROVIDE NULL LINE           @OZ38175 L2062100
         SLR   R2,R2               FORCE ZERO                        R4 L2064000
         MVC   CSAPRE,WCMBBLDM+1   SET BLANK INTO PREFIX             R4 L2066000
         B     WTOMPRE             SKIP MOVE                   @OZ38175 L2068000
WTOTRUNC CR    R2,R0               TRUNCATE REQUIRED                 R4 L2070000
         BNH   *+6                 SKIP NSI IF NOT                      L2072000
         LR    R2,R0               TRUNCATE                             L2074000
         EX    R2,WTOMVC           MOVE TEXT TO WTO                     L2076000
         MVC   CSAPRE,CMBMSG       SET PREFIX INFORMATION            R4 L2078000
WTOMPRE  LA    R2,5(,R2)           LENGTH FOR WTO                    R4 L2080000
         STC   R2,CSAMSGL+1        SET COUNT IN WTO                     L2082000
         LA    R2,CSAWTOL(R2)      POINT TO MESSAGE END + 1          R4 L2084000
         MVC   0(CSALSIZ,R2),CSADESC MOVE TRAILLER FIELDS               L2086000
         TM    CMBLEVEL,$DOMACT    IS DOM ACTION REQUIRED            R4 L2088000
         BZ    WNDOM               IF NOT DO NORMAL PROCESSING          L2090000
         LR    R4,R1               SAVE CMB POINTER                     L2092000
         WTO   MF=(E,CSAWTOL)      SEND MESSAGE                         L2094000
         STCM  R1,15,CMBDOMID-CMB(R4) SAVE DOM ID                    R4 L2096000
         L     R1,$DOMQUEA         POINT TO OLD ACTION CMB              L2098000
WDQNXT   ST    R1,CMBCMB-CMB(,R4)  PUT OLD BEHIND                    R4 L2100000
         CS    R1,R4,$DOMQUEA      QUEUE TO HEAD OF QUEUE               L2102000
         BNE   WDQNXT              LOOP IF NOT QUEUED                   L2104000
         $$POST ELMT=$SVASYNC,R11=HCT POST ASYNC PCE                    L2106000
         B     WTODQ               LOOK FOR MORE WORK                   L2108000
WNDOM    DS    0H                                                       L2110000
WNRMFRE  LR    R2,R1               POINT TO CMB TO FREE              R4 L2112000
         BAL   LINK,WFREE          FREE CMB                          R4 L2114000
WPOSTH   $$POST TYPE=CMB,R11=HCT   POST FOR CMB                      R4 L2116000
         TM    CSACONCT,1          IS SUPPRESS WTO ON                R4 L2118000
         BO    WTODQ               LOOK FOR MORE WORK                R4 L2120000
         TM    CSACONCT,2          IS SKIP MLWTO ON                  R4 L2122000
         BO    WTOSKIP             SKIP THIS WTO                     R4 L2124000
         LR    R0,R6               COPY UCMID WITH CONNECT ID        R4 L2126000
         WTO   MF=(E,CSAWTOL)      SEND MESSAGE                      R4 L2128000
         TM    CSAMCS+1,WMCSML     IS THIS MLWTO                     R4 L2130000
         BZ    WTODQ               LOOK FOR MORE WORK                R4 L2132000
         TM    CSACONCT,8          DID WE SAY END                    R4 L2134000
         BO    WTORESET            RESET MLWTO IF YES                R4 L2136000
         ST    R1,CSACONCT         SET CONNECT                       R4 L2138000
         MVI   CSACONCT,4          SET MLWTO ON                      R4 L2140000
         LTR   R15,R15             DID OPERATOR DELETE               R4 L2142000
         BZ    WTODQ               LOOK FOR MORE WORK                R4 L2144000
         MVI   CSACONCT,2          SET SKIPPING MLWTO                R4 L2146000
         B     WTODQ               LOOK FOR MORE WORK                R4 L2148000
WTOSKIP  TM    CSACONCT,8          DID WE SAY END                    R4 L2150000
         BZ    WTODQ               LOOK FOR MORE WORK                R4 L2152000
WTORESET SLR   R1,R1               RESET                             R4 L2154000
         ST    R1,CSACONCT         FLAGS AND CONNECT IDS             R4 L2156000
         B     WTODQ               LOOK FOR MORE WORK                R4 L2158000
WTOMVC   MVC   CSAMSG(*-*),CMBMID  *** EXECUTE ONLY ***              R4 L2160000
         DROP  R8                                                       L2162000
         DROP  R5                                                    R4 L2164000
         EJECT                                                       R4 L2166000
*                                                                       L2168000
*              H A S P / O S  --  ROUTING EQUIVALENCE TABLE  --         L2170000
*                                                                       L2172000
*              THE TABLE BELOW REFLECTS THE OS/MCS CONSOLE ROUTING      L2174000
*              BITS WHICH WILL BE USED TO CORRESPOND WITH THE HASP      L2176000
*              LOGICAL CONSOLE ROUTING BITS AS INDICATED...             L2178000
WTORET   DS    0H                  TABLE START                          L2180000
         DC    X'0000'             HASP LOG = (FUNCTION DONE BY HRDCPY) L2182000
         DC    X'0040'             HASP ERROR = SYSTEM ERROR/MAINT.     L2184000
         DC    X'0200'             HASP UR = UNIT RECORD POOL           L2186000
         DC    X'0100'             HASP TP = TELEPROCESSING CONTROL     L2188000
         DC    X'3C00'             HASP TAPE = DA AND TAPE POOL         L2190000
*                                        AND = DA AND TAPE LIBRARY      L2192000
         DC    X'C000'             HASP MAIN = MASTER CONSOLE           L2194000
*                                        AND = MASTER INFORMATIONAL     L2196000
         DC    X'0008'             HASP SPARE1 = OS USER1               L2198000
         DC    X'0004'             HASP SPARE2 = OS USER2               L2200000
         SPACE 2                                                     R4 L2202000
WOSUCMF  EQU   B'01100000'         MCS UCMID AND RESPONSE               L2204000
WTOHCPY  EQU   B'00000010'         MCS FOR QUEUE TO HARD COPY ONLY      L2206000
WMCSML   EQU   B'01000000'         MCS+1 MLWTO FLAG                     L2208000
WMCSSTAN DC    B'1000000000000000' STANDARD MCSFLAGS                    L2210000
WTODRSTN DC    B'0001000000000000' STANDARD DESCRIPTOR CODES            L2212000
WTODESCA EQU   B'01000000'         ACTION DESCRIPTION CODE              L2214000
WDOUTLN  EQU   B'00000001'         DESCRIPTION FOR OUT OF LINE          L2216000
WDCONTID EQU   B'10000000'         DESCRIPTION + 1 CONTROL ID           L2218000
         DC    B'0000000000000000' STANDARD ROUTING CODES               L2220000
         DC    B'1000000000000000' LINE TYPE ( CONTROL LINE )           L2222000
WLTCONT  EQU   B'10000000'         CONTROL LINE                         L2224000
WLTTITL  EQU   B'01000000'         TITLE LINE                        R4 L2226000
WLTDATA  EQU   B'00100000'         DATA LINE                            L2228000
WLTEND   EQU   B'00010000'         END LINE                             L2230000
         SPACE 1                                                     R4 L2232000
WSAVREGS EQU   $CSAVREG            ADDRESS OF SAVE AREA                 L2234000
WBASE2   DC    A(HASPCON)          FOLLOWS WBASES                    R4 L2236000
$DOMMIN  EQU   2                   CMBS RESERVED FROM $DOMACT           L2238000
WDOMMIN  DC    Y($DOMMIN+1)        COUNT TO PREVENT CMB LOCKOUTS        L2240000
         SPACE 1                                                     R4 L2242000
         LTORG                                                          L2244000
         SPACE 1                                                     R4 L2246000
$DLENGTH $DLENGTH ,                                                     L2248000
APARNUM  DC    CL5'50548'          APAR NUMBER                          L2249998
         END                                                            L2250000
