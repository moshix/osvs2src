MISC     TITLE 'HASP MISCELLANEOUS PROCESSORS'                 @OZ18212 N0002000
*********************************************************************** N0004000
*                                                                     * N0006000
* MODULE NAME = HASPMISC                                              * N0008000
*                                                                     * N0010000
* DESCRIPTIVE NAME = HASPMISC                                         * N0012000
*                                                                     * N0014000
* COPYRIGHT = NONE                                                    * N0016100
*                                                                     * N0018000
* STATUS = OS/VS2 MVS   --  SEE &VERSION (BELOW) FOR JES2 LEVEL       * N0020000
*                                                                     * N0022000
* FUNCTION = THE HASP MISCELLANEOUS PROCESSORS CONSIST OF FOUR        * N0024000
*            SEPARATE ROUTINES - HASPVPRG, HASPCKPT, HASPGPRC         * N0026000
*            AND HASPWARM.                                            * N0028000
*                                                                     * N0030000
*            HASPVPRG PURGES JOBS FROM THE SYSTEM BY FREEING          * N0032000
*            OUTPUT TRACKS, PREPARING A TYPE 26 SMF RECORD, AND       * N0034000
*            BY NOTIFYING THE OPERATOR THAT THE JOB HAS BEEN PURGED.  * N0036000
*                                                                     * N0038000
*            HASPCKPT CHECKPOINTS JOB AND JOT QUEUE RECORDS,          * N0040000
*            POSTS PROCESSORS REQUESTING QUEUE ACCESS VIA THE         * N0042000
*            $QSUSE MACRO, RELEASES UNUSED TRACK GROUPS FROM THE      * N0044000
*            TRACK GROUP BLOCK, HEURISTICALLY ALLOCATES NEW TRACK     * N0046000
*            GROUPS FROM THE MASTER TRACK GROUP MAP TO THE TRACK      * N0048000
*            GROUP BLOCK, RECALCULATES ALLOCATED TRACK GROUPS, AND    * N0050000
*            POSTS PROCESSORS AND OTHER ADDRESS SPACES WHO MAY BE     * N0052000
*            WAITING FOR TRACK ALLOCATION.                            * N0054000
*            FOR SHARED QUEUE SYSTEMS, HASPCKPT ALSO RESERVES AND     * N0056000
*            READS THE SHARED JOB AND JOT QUEUE RECORDS, DETECTS      * N0058000
*            POTENTIAL LOCKOUT BY OTHER SYSTEMS, PERFORMS CROSS       * N0060000
*            SYSTEM POSTING FOR SHARED QUEUE ELEMENTS, RELEASES THE   * N0062000
*            CHECKPOINT DEVICE AFTER A MINIMUM HOLD INTERVAL,         * N0064000
*            PREVENTS REREAD OF THE SHARED QUEUES FOR A MINIMUM       * N0066000
*            DORMANT INTERVAL TO ALLOW OTHER SYSTEMS ACCESS,          * N0068000
*            AND FORCES REREAD OF THE SHARED QUEUES AFTER A           * N0070000
*            MAXIMUM DORMANT INTERVAL.                                * N0072000
*                                                                     * N0074000
*            HASPGPRC PRIORITY AGES JOBS AT A TIME INTERVAL           * N0076000
*            DETERMINED FROM THE HASPGEN PARAMETER &PRIRATE.          * N0078000
*                                                                     * N0080000
*            HASPWARM PERFORMS A SINGLE SYSTEM OR NODAL WARM START    * N0082000
*            FOLLOWING JES2 INITIALIZATION OR AS THE RESULT OF A      * N0084000
*            $ESYS COMMAND.                                           * N0086000
*                                                                     * N0088000
* NOTES = SEE BELOW                                                   * N0090000
*                                                                     * N0092000
*    DEPENDENCIES = NONE                                              * N0094000
*                                                                     * N0096000
*    RESTRICTIONS = NONE                                              * N0098000
*                                                                     * N0100000
*    REGISTER CONVENTIONS = SEE BELOW FOR INDIVIDUAL ROUTINES         * N0102000
*                                                                     * N0104000
*                           R11 = BASE1 = HCT ADDRESSABILITY          * N0106000
*                           R12 = BASE2 = ROUTINES BASE REGISTER      * N0108000
*                           R13 = SAVE  = PCE ADDRESSABILITY          * N0110000
*                                                                     * N0112000
*    PATCH LABEL = NONE                                               * N0114000
*                                                                     * N0116000
* MODULE TYPE = PROCEDURE ( CSECT TYPE )                              * N0118000
*                                                                     * N0120000
*    PROCESSOR = ASSEMBLER F                                          * N0122000
*                                                                     * N0124000
*    MODULE SIZE = SEE $DLENGTH MACRO EXPANSION(S) AT END OF ASSEMBLY * N0126000
*                                                                     * N0128000
*    ATTRIBUTES = READ ONLY, AFTER PROCESSOR INITIALIZATION, AND      * N0130000
*                 HASP REENTRANT                                      * N0132000
*                                                                     * N0134000
* ENTRY POINT 1 = HASPVPRG FOR THE PURGE PROCESSOR                    * N0136000
*             2 = HASPCKPT FOR THE CHECKPOINT PROCESSOR               * N0138000
*             6 = HASPGPRC FOR THE PRIORITY AGING PROCESSOR           * N0140000
*             7 = HASPWARM FOR THE JOB QUEUE WARM START PROCESSOR     * N0142000
*                                                                     * N0144000
*    PURPOSE = SEE FUNCTION                                           * N0146000
*                                                                     * N0148000
*    LINKAGE = R12 = BASE2 = ENTRY POINT AND BASE REGISTER            * N0150000
*              R13 = SAVE  = PCE SAVE AREA ADDRESSABILITY             * N0152000
*                                                                     * N0154000
* INPUT = HASPVPRG USES MACRO $QGET TO ACCESS JOB QUEUE ELEMENTS THAT * N0156000
*         ARE TO BE PURGED AND $EXCP TO ACCESS JCTS AND IOTS FOR      * N0158000
*         THE JQES.                                                   * N0160000
*                                                                     * N0162000
*        HASPCKPT ACCESSES THE JOB QUEUE BUFFER, THE JOB AND JOT      * N0164000
*        CHECKPOINT CONTROL TABLES, THE MASTER TRACK GROUP MAP,       * N0166000
*        THE TRACK GROUP BLOCK, THE TRACK EXTENT DATA TABLES,         * N0168000
*        THE CHECKPOINT DEVICE SRB-IOSB AND UCB, THE SHARED QUEUE     * N0170000
*        CONTROL ELEMENTS, AND FIELDS IN THE HCT AND SSVT.            * N0172000
*                                                                     * N0174000
*         HASPGPRC ACCESSES JOB QUEUE ENTRIES.                        * N0176000
*                                                                     * N0178000
*         HASPWARM ACCESSES THE REMOTE SIGN-ON TABLE, THE QSES,       * N0180000
*         THE JOT AND THE JOB QUEUE.                                  * N0182000
*                                                                     * N0184000
* OUTPUT = HASPVPRG PUTS A HASP SMF BUFFER, WITH A TYPE 26 RECORD     * N0186000
*         IN IT, ON THE BUSY QUEUE.                                   * N0188000
*                                                                     * N0190000
*        HASPCKPT WRITES CHECKPOINT RECORDS, CLEARS THE CHECKPOINT    * N0192000
*        CONTROL TABLES, UPDATES THE MASTER TRACK GROUP MAP AND       * N0194000
*        TRACK GROUP BLOCK, AND CHANGES CONTROL FIELDS IN THE         * N0196000
*        CHECKPOINT UCB, QSES, HCT, AND SSVT.                         * N0198000
*                                                                     * N0200000
*         HASPGPRC UPDATES JOB QUEUE ELEMENTS PRIORITY FIELDS         * N0202000
*                                                                     * N0204000
*         HASPWARM UPDATES THE RESOURCES ACCESSED AS INPUT.           * N0206000
*                                                                     * N0208000
* EXIT-NORMAL = HASPVPRG $WAITS FOR JOB                               * N0210000
*                                                                     * N0212000
*               HASPCKPT $WAITS FOR CKPW AND/OR WORK (TIMER)          * N0214000
*                                                                     * N0216000
*               HASPGPRC $WAITS FOR WORK                              * N0218000
*                                                                     * N0220000
*               HASPWARM $WAITS FOR WORK                              * N0222000
*                                                                     * N0224000
* EXIT-ERROR = HASPVPRG ISSUES $IOERROR AND $DISTERR MSGS IF EITHER   * N0226000
*              A JCT OR AN IOT IS INVALID                             * N0228000
*                                                                     * N0230000
*              HASPCKPT ISSUES $IOERROR AND EXITS WITH CATASTROPHIC   * N0232000
*              ERROR CODE K02 OR K04 IF UNRECOVERABLE I/O ERRORS      * N0234000
*              OCCUR DURING READ OR WRITE OF CHECKPOINT RECORDS.      * N0236000
*              INVALID ALTERATION OF SHARED QUEUES BY THIS OR         * N0238000
*              ANOTHER SYSTEM CAUSES EXIT WITH CODE K01 OR K03.       * N0240000
*              MESSAGES 260, 093, OR 355 ARE ISSUED WITH $WTO IF      * N0242000
*              POTENTIAL SHARED DASD LOCKOUT, SPOOL WARNING           * N0244000
*              PERCENTAGE, OR SPOOL FULL CONDITIONS ARE DETECTED.     * N0246000
*                                                                     * N0248000
*              HASPGPRC HAS NO ERROR EXIT                             * N0250000
*                                                                     * N0252000
*              HASPWARM HAS NO ERROR EXIT                             * N0254000
*                                                                     * N0256000
* EXTERNAL REFERENCES = SEE BELOW                                     * N0258000
*                                                                     * N0260000
*    ROUTINES = NONE                                                  * N0262000
*                                                                     * N0264000
*    DATA AREAS = SEE BELOW                                           * N0266000
*                                                                     * N0268000
*    CONTROL BLOCKS = SEE $HASPCB MACRO FOR CONTROL BLOCKS USED       * N0270000
*                                                                     * N0272000
* TABLES = SEE BELOW                                                  * N0274000
*                                                                     * N0276000
* MACROS = $ENTRY, $QGET, $ACTIVE, $WAIT, $GETBUF, $EXCP, $IOERROR    * N0278000
*          $DISTERR, $PURGE, $GETSMFB, $QUESMFB, $QREM, $WTO,         * N0280000
*          $FREEBUF, $DORMANT, $POST, $TTIMER, $STIMER, $DLENGTH      * N0282000
*          $BFRBLD, $PGRLSE, $GETLOK, $FRELOK, $ERROR, $MSG,          * N0284000
*          MODESET, STARTIO                                           * N0286000
*                                                                     * N0287000
* CHANGE ACTIVITY                                                     * N0287100
*                                                                     * N0287200
*     RELEASE 4.0 = OZ02439,OZ03301,OZ03308,OZ03316,OZ04304,OZ04316,  * N0287400
*                   OZ04971,OZ04992,OZ04996,OZ08144,OZ08232,OZ10287   * N0287500
*                                                                     * N0287600
*     RELEASE 4.1 = OZ09107,OZ11763,OZ11776,OZ12270,OZ12289,OZ14441,  * N0287700
*                   OZ14890,OZ15818                                   * N0287800
*                                                                     * N0294000
*********************************************************************** N0296000
         EJECT                                                          N0298000
         SPACE 1                                               @OZ27300 N0300000
*                                                                       N0302000
*****    $HASPCB   *****           GENERATE HASP CONTROL BLOCKS         N0304000
*                                                                       N0306000
         MACRO                                                          N0308000
         $HASPCB &DOC=NO,&LIST=NO                                       N0310000
         GBLC  &PRINT,&GEN,&DATA                                        N0312000
         PUSH  PRINT                                                    N0314000
         PRINT &PRINT                                                   N0316000
         $CVT  LIST=&LIST          GENERATE OS CVT DSECT                N0318000
         $SSCT LIST=&LIST          GENERATE OS SSCT DSECT               N0320000
         $SSOB (SO,JS),LIST=&LIST  GENERATE OS SSOB DSECT            R4 N0322000
         $SRB  LIST=&LIST          GENERATE OS SRB DSECT                N0324000
         $DCB  LIST=&LIST          GENERATE OS DCB DSECT             R4 N0326000
         $DEB  LIST=&LIST          GENERATE OS DEB DSECT             R4 N0328000
         $IOSB LIST=&LIST          GENERATE OS IOSB DSECT               N0330000
         $UCB  LIST=&LIST          GENERATE OS UCB DSECT                N0332000
         $DYN  LIST=&LIST          GENERATE OS DYN DSECT             R4 N0334000
         $BASEA LIST=&LIST         GENERATE OS BASEA DSECT              N0336000
         $IOCM LIST=&LIST          GENERATE OS IOCM DSECT               N0338000
         $TED  DOC=&DOC            GENERATE HASP TED DSECT              N0340000
         $TGB  DOC=&DOC            GENERATE HASP TGB DSECT              N0342000
         $TGM  DOC=&DOC            GENERATE HASP TGM DSECT              N0344000
         $TAB  DOC=&DOC            GENERATE HASP TAB DSECT           R4 N0346000
         $SVT  DOC=&DOC            GENERATE HASP SSVT DSECT             N0348000
         $SJB  DOC=&DOC            GENERATE HASP SJB DSECT              N0350000
         $HCT  DOC=&DOC            GENERATE HASP HCT DSECT              N0352000
         $PCE  DOC=&DOC            GENERATE HASP PCE DSECT              N0354000
         $LRC  DOC=&DOC            GENERATE HASP LRC DSECT          R41 N0355000
         $BUFFER DOC=&DOC          GENERATE HASP BUFFER DSECT           N0356000
         $CCW  DOC=&DOC            GENERATE HASP CCW DEFS      @OZ27300 N0357000
         $SMF  DOC=&DOC            GENERATE HASP SMF DSECT              N0358000
         $JQE  DOC=&DOC            GENERATE HASP JQE DSECT              N0360000
         $JOE  DOC=&DOC            GENERATE HASP JOE DSECT              N0362000
         $JOT  DOC=&DOC            GENERATE HASP JOT DSECT              N0364000
         $QSE  DOC=&DOC            GENERATE HASP QSE DSECT              N0366000
         $JQB  DOC=&DOC            GENERATE HASP JQB DSECT           R4 N0368000
         $JCT  DOC=&DOC            GENERATE HASP JCT DSECT              N0370000
         $PDDB DOC=&DOC            GENERATE PDDB DSECTSECT              N0372000
         $IOT  DOC=&DOC            GENERATE HASP IOT DSECT              N0374000
         $DCT  DOC=&DOC            GENERATE HASP DCT DSECT              N0376000
         $TQE  DOC=&DOC            GENERATE HASP TQE DSECT              N0378000
         $HQR  DOC=&DOC            GENERATE HASP HQR DSECT              N0380000
         $HQT  DOC=&DOC            GENERATE HASP HQT DSECT              N0382000
         $PSO  DOC=&DOC            GENERATE HASP PSO DSECT           R4 N0384000
         $SPL  DOC=&DOC            GENERATE HASP SPL DSECT           R4 N0386000
         $CKPWORK DOC=&DOC         GENERATE HASP CKPWORK DSECT      R41 N0387000
         $WARMWRK DOC=&DOC         GENERATE HASP WARMWRK DSECT       R4 N0388000
         SPACE 1                                                        N0390000
         POP   PRINT                                                    N0392000
         PRINT &GEN,&DATA          SET ASSEMBLY PRINT OPTIONS           N0394000
         MEND                                                           N0396000
         TITLE 'HASP MISCELLANEOUS PROCESSORS'                          N0398000
         SPACE 5                                                        N0400000
HASPMISC START 0                   HASP MISCELLANEOUS PROCESSORS        N0402000
         SPACE 5                                                        N0404000
*                                                                       N0406000
*                             EXTERNAL REFERENCES                       N0408000
*                                                                       N0410000
         SPACE 5                                                        N0412000
         COPY  $HASPGEN            COPY HASPGEN PARAMETERS              N0414000
         TITLE 'HASP CONTROL BLOCKS'                                    N0416000
         SPACE 5                                                        N0418000
HASPMISC $ENTRY BASE=,CSECT=YES    PROVIDE PROCESSOR IDENTIFICATION     N0420000
         SPACE 5                                                        N0422000
*                                                                       N0424000
*                             DOCUMENTATION OPTIONS FOR THIS ASSEMBLY   N0426000
*                                                                       N0428000
         SPACE 3                                                        N0430000
        $SYSPARM (OFF,GEN,NODATA,NO,NO)                                 N0432000
         SPACE 5                                                        N0434000
*                                                                       N0436000
*                             GENERATE HASP CONTROL BLOCKS              N0438000
*                                                                       N0440000
         SPACE 3                                                        N0442000
        $HASPCB DOC=&DOC,LIST=&LIST  GENERATE HASP CONTROL BLOCKS       N0444000
         TITLE 'HASP PURGE PROCESSOR'                                   N0446000
*********************************************************************** N0448000
*                                                                     * N0450000
* PROCESSOR NAME -- HASPVPRG                                          * N0452000
*                                                                     * N0454000
* DESCRIPTIVE NAME -- JES2 PURGE PROCESSOR                            * N0456000
*                                                                     * N0458000
* FUNCTION -- FREE ALL TRACKS ACQUIRED FOR A JOB, QUEUE FOR OUTPUT    * N0460000
*             AN SMF PURGE RECORD (TYPE 26) AND OPTIONALLY A JMR      * N0462000
*             BUFFER, AND NOTIFY THE OPERATOR THAT THE JOB IS PURGED. * N0464000
*                                                                     * N0466000
* NOTES -- 1) TO IMPROVE THE PERFORMANCE OF THIS PROCESSOR, PERMANENT * N0468000
*             STORAGE IS OBTAINED, VIA GETMAIN, TO SERVE AS BUFFER    * N0470000
*             STORAGE FOR A JCT AND AN IOT.  WHEN THE PROCESSOR HAS   * N0472000
*             NO MORE WORK TO DO, THE BUFFER STORAGE IS PAGE-RELEASED.* N0474000
*                                                                     * N0476000
* REGISTER CONVENTIONS -- R1  -- WORK REGISTER                        * N0478000
*                         WA  -- JQE ADDRESS                          * N0480000
*                         WB  -- DCT ADDRESS                          * N0482000
*                         WC  -- WORK REGISTER                        * N0484000
*                         WD  -- IOT ADDRESS                          * N0486000
*                         WE  -- LINK REGISTER                        * N0488000
*                         WF  -- WORK REGISTER                        * N0490000
*                         JCT -- JCT ADDRESS                          * N0492000
*                                                                     * N0494000
*********************************************************************** N0496000
         EJECT                                                          N0498000
*********************************************************************** N0500000
*                                                                     * N0502000
*        H A S P V P R G   I N I T I A L   E N T R Y   P O I N T      * N0504000
*                                                                     * N0506000
*********************************************************************** N0508000
         SPACE 2                                                        N0510000
         USING JQEDSECT,WA         PROVIDE JQE ADDRESSABILITY           N0512000
         USING IOTDSECT,WD         PROVIDE IOT ADDRESSABILITY           N0514000
         SPACE 2                                                        N0516000
HASPVPRG $ENTRY BASE=BASE2         PROVIDE PROCESSOR ENTRY POINT        N0518000
         SPACE 1                                                        N0520000
*********************************************************************** N0522000
*                                                                     * N0524000
*        C O M P U T E   S T O R A G E   R E Q U I R E M E N T        * N0526000
*                                                                     * N0528000
*********************************************************************** N0530000
         SPACE 1                                                        N0532000
         LH    R1,$BUFLENG         GET TOTAL SINGLE BUFFER SIZE      R4 N0534000
         LR    WA,R1               TENTATIVE ADDRESS OF NEXT BUFFER     N0536000
         LR    R0,WA               R0 = STARTING ADDR OF NEXT BUFFER    N0538000
         SRL   R0,12                DIVIDED BY 4K                       N0540000
         ALR   R1,WA               R1 = ADDRESS OF LAST BYTE            N0542000
         BCTR  R1,0                 OF NEXT BUFFER                      N0544000
         SRL   R1,12                 DIVIDED BY 4K                      N0546000
         CLR   R0,R1               DOES BUFFER CROSS 4K BOUNDARY...     N0548000
         BE    *+10                BR IF NO TO USE TENTATIVE BFR ADDR   N0550000
         SLL   R1,12                ELSE USE NEXT 4K BOUNDARY AS        N0552000
         LR    WA,R1                 STARTING ADDR OF NEXT BUFFER       N0554000
         LR    WD,WA               SAVE RELATIVE ADDR OF NEXT BFR       N0556000
         AH    WA,$BUFLENG         R0 = TOTAL BUFFER STORAGE         R4 N0558000
         LA    R0,4095(,WA)         REQUIREMENT ROUNDED                 N0560000
         SRL   R0,12                 UP TO NEXT                         N0562000
         SLL   R0,12                  4K BOUNDARY                       N0564000
         ST    R0,VSTORAGE         SAVE BUFFER STORAGE REQUIREMENT      N0566000
         EJECT                                                          N0568000
*********************************************************************** N0570000
*                                                                     * N0572000
*        O B T A I N   P E R M A M E N T   B U F F E R   S T O R A G E* N0574000
*                                                                     * N0576000
*********************************************************************** N0578000
         SPACE 1                                                        N0580000
         GETMAIN RC,LV=(0),BNDRY=PAGE  GET THE BUFFER STORAGE           N0582000
         LR    JCT,R1              SAVE JCT BUFFER ADDRESS              N0584000
         ALR   WD,R1               SAVE IOT BUFFER ADDRESS              N0586000
         ICM   JCT,8,=AL1(X'80')   SHOW BUFFER PAGE(S) RELEASED         N0588000
         LA    WB,PCEDADCT         GET DIRECT ACCESS DCT ADDRESS        N0590000
         MVI   PCEDEVTP,PCEDARD    SET READ REQUEST FOR $EXCP           N0592000
         LTR   R15,R15             TEST GETMAIN                         N0594000
         BZ    VGETJOB             BR IF SUCCESSFUL                     N0596000
V02     $ERROR                      ELSE CRUMP                          N0598000
         SPACE 1                                                        N0600000
VSTORAGE DC    A(*-*)              SIZE OF PERMANENT BUFFER STORAGE     N0602000
         EJECT                                                          N0604000
VNOJOB   LTR   JCT,JCT             HAS BUFFER STORAGE BEEN RELEASED...  N0606000
         BM    VJBWAIT             BR IF SO                             N0608000
         SPACE 1                                                        N0610000
*********************************************************************** N0612000
*                                                                     * N0614000
*        R E L E A S E   B U F F E R   P A G E ( S )                  * N0616000
*                                                                     * N0618000
*********************************************************************** N0620000
         SPACE 1                                                        N0622000
        $PGSRVC RLSE,(JCT),VSTORAGE    RELEASE JCT/IOT BUFFER PG(S)  R4 N0624000
         ICM   JCT,8,=AL1(X'80')   SHOW BUFFER PAGE(S) RELEASED         N0626000
         SPACE 1                                                        N0628000
*********************************************************************** N0630000
*                                                                     * N0632000
*        W A I T   F O R   A   J O B   T O   P U R G E                * N0634000
*                                                                     * N0636000
*********************************************************************** N0638000
         SPACE 1                                                        N0640000
VJBWAIT $WAIT  JOB,INHIBIT=NO      $WAIT FOR JOB TO BE QUEUED           N0642000
         SPACE 1                                                        N0644000
VGETJOB $QGET  $PURGE,VNOJOB       TRY TO GET A JOB                     N0646000
         LR    WA,R1               SAVE JQE ADDRESS                     N0648000
        $ACTIVE                    INDICATE PROCESSOR ACTIVE            N0650000
         LTR   JCT,JCT             HAS BUFFER STORAGE BEEN RELEASED...  N0652000
         BP    VGETJCT             BR IF NO                             N0654000
         LA    JCT,0(,JCT)          ELSE RESET PAGE-RELEASED FLAG       N0656000
        $BFRBLD (JCT)              BUILD IOB WITHIN JCT BUFFER          N0658000
        $BFRBLD (WD)               BUILD IOB WITHIN IOT BUFFER          N0660000
         EJECT                                                       R4 N0662000
*********************************************************************** N0664000
*                                                                     * N0666000
*        R E A D   I N   T H E   J C T                                * N0668000
*                                                                     * N0670000
*********************************************************************** N0672000
         SPACE 1                                                        N0674000
VGETJCT  ST    JCT,PCEBUFAD        SET BUFFER ADDRESS FOR $EXCP         N0676000
         MVC   PCESEEK,JQETRAK     SET TRACK ADDRESS FOR $EXCP          N0678000
        $EXCP  (WB)                READ THE JCT                         N0680000
         SPACE 1                                                     R4 N0682000
VWAIT1  $WAIT  IO                  WAIT FOR I/O TO COMPLETE             N0684000
         TM    BUFECBCC-BUFDSECT(JCT),X'7F'  TEST I/O STATUS            N0686000
         BZ    VWAIT1              BR IF I/O NOT COMPLETE               N0688000
         IC    WF,JQEFLAGS         SAVE JQE FLAG BYTE                   N0690000
         SPACE 1                                                        N0692000
*********************************************************************** N0694000
*                                                                     * N0696000
*        ISSUE 'JOB PURGED' MESSAGE -- REMOVE JOB FROM SYSTEM         * N0698000
*                                                                     * N0700000
*********************************************************************** N0702000
         SPACE 1                                                        N0704000
VREMJOB  LR    JCT,WA              RELOAD JQE ADDRESS               R41 N0705500
        $WTO   VPRGMSG,L'VPRGMSG,WAIT=YES,JOB=YES,                  R41CN0706000
               ROUTE=$LOG+$UR,CLASS=$TRIVIA,PRI=$ST                 R41 N0706500
         L     JCT,PCEBUFAD        RESTORE JCT ADDRESS              R41 N0707000
        $QREM  (WA)                REMOVE JOB FROM SYSTEM           R41 N0707500
        $WAIT  CKPT                WAIT FOR CHECKPOINT TO COMPLETE      N0708000
         TM    BUFECBCC-BUFDSECT(JCT),X'7F'  TEST JCT READ              N0710000
         BO    VNOERROR            BR IF JCT READ WITHOUT ERROR         N0712000
        $IOERROR (JCT)              ELSE ISSUE I/O ERROR MSG            N0714000
         SPACE 1                                                        N0716000
VERROR  $DISTERR                   INDICATE DISASTEROUS ERROR           N0718000
         B     VDONE               BR TO CONTINUE                   R41 N0720000
         EJECT                                                       R4 N0722000
*********************************************************************** N0724000
*                                                                     * N0726000
*        R E A D   I O T ( S )   A N D   P U R G E   T R A C K S      * N0728000
*                                                                     * N0730000
*********************************************************************** N0732000
         SPACE 1                                                        N0734000
         CNOP  0,8                                                      N0736000
VNOERROR L     R1,JCTJQE           VALIDATE                             N0738000
         AL    R1,$JOBQPTR          THE                                 N0740000
         CLR   R1,WA                 JCT                                N0742000
         BNE   VERROR              BR IF INVALID JCT                    N0744000
         ST    WD,PCEBUFAD         SET BUFFER ADDRESS FOR $EXCP         N0746000
         ICM   R1,15,JCTSPIOT      GET TRK ADDR OF 1ST SPIN IOT         N0748000
         BZ    *+16                BR IF NONE                           N0750000
         BAL   WE,VIOTPRG           ELSE READ IOT AND PURGE TRACKS      N0752000
         ICM   R1,15,IOTIOTTR      GET TRK ADDR OF NEXT SPIN IOT        N0754000
         BNZ   *-8                 BR IF VALID TRACK ADDRESS            N0756000
         ICM   R1,15,JCTIOT        GET TRK ADDR OF 1ST REGULAR IOT      N0758000
         BZ    VSMFPRG             BR IF NONE                           N0760000
         BAL   WE,VIOTPRG           ELSE READ IOT AND PURGE TRACKS      N0762000
         B     VSMFPRG             THEN BR TO WRITE SMF RECORDS         N0764000
         EJECT                                                          N0766000
*********************************************************************** N0768000
*                                                                     * N0770000
*        VIOTPRG -- ROUTINE TO READ IOT AND PURGE TRACKS              * N0772000
*                                                                     * N0774000
*********************************************************************** N0776000
         SPACE 1                                                        N0778000
         CNOP  0,8                                                      N0780000
VIOTPRG  ST    R1,PCESEEK          SET TRACK ADDRESS FOR $EXCP          N0782000
        $EXCP  (WB),WAIT=YES       READ THE IOT                      R4 N0784000
         BO    VNOIOTER            BR IF NO READ ERROR                  N0786000
         SPACE 1                                                        N0788000
VDSTER  $DISTERR                   INDICATE DISASTEROUS ERROR           N0790000
         B     VSMFPRG             THEN WRITE SMF PURGE RECORD          N0792000
         SPACE 1                                                        N0794000
         CNOP  0,8                                                      N0796000
VNOIOTER CLC   IOTJBKEY,JCTJBKEY   TEST FOR VALID IOT                   N0798000
         BNE   VDSTER              BR IF NO                             N0800000
         TM    IOTFLAG1,IOT1ALOC   TEST FOR ALLOCATION IOT              N0802000
         BZR   WE                  RETURN IF NO                         N0804000
        $PURGE IOTTGMAP             ELSE PURGE ALLOCATED TRACKS         N0806000
         BR    WE                  THEN RETURN                          N0808000
         EJECT                                                       R4 N0810000
         CNOP  0,8                                                      N0812000
VSMFPRG  CLI   $NUMSMFB,2          TEST SMF BUFFER COUNT             R4 N0814000
         BL    VDONE               BR IF SMF NOT SUPPORTED          R41 N0816000
         TM    JCTSMFLG,JCTNOUJP+JCTNOT26  PURGE EXIT OR 26...          N0818000
         BO    VDONE               BR IF NO                         R41 N0820000
         BZ    *+16                BR IF BOTH                           N0822000
         TM    JCTSMFLG,JCTNOUJP   PURGE EXIT...                        N0824000
         BZ    *+8                 BR IF SO                             N0826000
         NI    JCTINDC,255-JCTJMRUX  ELSE INDICATE NO EXIT           R4 N0828000
         SPACE 1                                                        N0830000
*********************************************************************** N0832000
*                                                                     * N0834000
*        GET SMF BUFFER(S) FOR PURGE RECORD(S)                        * N0836000
*                                                                     * N0838000
*********************************************************************** N0840000
         SPACE 1                                                     R4 N0842000
         USING SMFDSECT,R1                                              N0844000
         SPACE 1                                                        N0846000
        $GETSMFB WAIT=YES          OBTAIN JMR BUFFER ADDRESS            N0848000
         TM    JCTINDC,JCTJMRUX    SHOULD USER EXITS BE TAKEN           N0850000
         BZ    VCRE826             NO, DO NOT SAVE JMR                  N0852000
         MVC   SMFJMR(JCTJMRND-JCTJMR),JCTJMR  MOVE JMR TO SMF RCD   R4 N0854000
         MVI   SMFTYPE,SMFJMRTP    JMR BUFFER ID                        N0856000
         LR    WC,R1               SAVE BUFFER ADDR. FOR PURGE REC      N0858000
        $GETSMFB WAIT=YES          OBTAIN PURGE RECORD BFR ADDR         N0860000
         EJECT                                                       R4 N0862000
*********************************************************************** N0864000
*                                                                     * N0866000
*        FORMAT AND QUEUE SMF TYPE 26 (PURGE) RECORD                  * N0868000
*                                                                     * N0870000
*********************************************************************** N0872000
         SPACE 1                                                        N0874000
VCRE826  TM    JCTSMFLG,JCTNOT26   WRITE 26 RECORD...                   N0876000
         BZ    *+8                 BR IF SO                             N0878000
         OI    SMF26FLG,SMFNO26    NO                                   N0880000
         MVC   SMF26JBN(SMFSIZE1),JCTJMRJN   GATHER PURGE RECORD INTO   N0882000
         MVC   SMF26UIF,JCTUSEID         SMF BUFFER - HEADER            N0884000
         MVC   SMF26JBF(JCTJBOPT+L'JCTJBOPT-JCTJOBFL),JCTJOBFL          N0886000
         MVC   SMF26JNM(JCTPROCN+L'JCTPROCN-JCTJOBID-4),JCTJOBID+4  R41 N0888000
         MVC   SMF26JID,JCTJOBID   JOB ID                               N0890000
         MVC   SMF26RPT(SMFSIZE3),JCTRDROF        TIME/DATE OFF READER  N0892000
         MVC   SMF26CST(JCTODTOF+L'JCTODTOF-JCTCNVON),JCTCNVON       R4 N0894000
         MVC   SMF26ICD(JCTOTSID+L'JCTOTSID-JCTCARDS),JCTCARDS          N0900000
         STC   WF,PCER1            STORE JQE FLAG BYTE               R4 N0902000
         TM    PCER1,QUEOPCAN+QUEPURGE  DID OPERATOR ISSUE $C OR $P     N0904000
         BZ    *+8                 BR IF NO                             N0906000
         OI    SMF26INF,SMFOPCAN   INDICATE OPERATOR CANCELLED JOB      N0908000
         MVC   SMFRDW(2),=Y(SMF26END-SMFRDW)  SIZE OF PURGE RECORD   R4 N0910000
         MVI   SMF26LN1+1,SMF26PDD+L'SMF26PDD-SMF26LN1 DESC LENGTH  R41 N0912000
         MVI   SMF26LN2+1,SMF26OPD+L'SMF26OPD-SMF26LN2 EVENTS LGTH      N0914000
         MVI   SMF26LN3+1,SMF26END-SMF26LN3    ACTUALS LENGTH           N0918000
         MVI   SMFHDRTY,SMFPRGTP   IDENTIFY PURGE RECORD TYPE           N0926000
         MVI   SMF26SBS+1,SMFHSPID HASP SUBSYSTEM ID                    N0928000
         MVI   SMF26IND,X'E0'      SECTION EXISTENCE IDENTIFIER         N0930000
         TM    JCTINDC,JCTJMRUX    SHOULD USER EXITS BE TAKEN           N0942000
         BZ    *+10                BR IF NO TO NOT CHAIN BUFFERS        N0944000
         ST    R1,JMRCHAIN-SMFDSECT(WC) PUT PURGE BUF ADDR IN JMR BUF   N0946000
         LR    R1,WC               PUT JMR IN SMF BUFFER BUSY           N0948000
        $QUESMFB                   QUEUE BUFFER(S) FOR WRITING          N0950000
         SPACE 1                                                        N0952000
         DROP  R1                                                       N0954000
         SPACE 1                                                        N0956000
SMFSIZE1 EQU   L'SMF26JBN+L'SMF26RST+L'SMF26RSD                      R4 N0958000
SMFSIZE3 EQU   L'SMF26RPT+L'SMF26RPD                                 R4 N0966000
         EJECT                                                          N0968000
*********************************************************************** N0970000
*                                                                     * N0972000
*        PROCESSING COMPLETE FOR THIS JOB                             * N0974000
*                                                                     * N0976000
*********************************************************************** N0978000
         SPACE 1                                                        N0980000
VDONE   $DORMANT                   INDICATE PROCESSOR INACTIVE      R41 N0986000
         B     VGETJOB             BR TO GET NEXT JOB                   N0988000
         SPACE 1                                                        N0990000
         DROP  WA,WD               KILL JQE, IOT ADDRESSABILITY         N0992000
         SPACE 1                                                        N0994000
VPRGMSG $MSG   250,'IS PURGED'                                          N0996000
         LTORG                                                 @OZ20010 N0997000
         TITLE 'HASP CHECKPOINT PROCESSOR'                              N0998000
*********************************************************************** N1000000
*                                                                     * N1002000
*    HASP CHECKPOINT PROCESSOR (SEE PROLOG ABOVE FOR DESCRIPTION)     * N1004000
*                                                                     * N1006000
*********************************************************************** N1008000
         SPACE 1                                                        N1010000
HASPCKPT $ENTRY BASE=(BASE2,BASE3) ESTABLISH ENTRY POINT       @OZ27300 N1011000
         LA    BASE3,2048(,BASE2)  ESTABLISH                   @OZ27300 N1012000
         LA    BASE3,2048(,BASE3)   SECOND BASE REGISTER       @OZ27300 N1013000
         SPACE 2                                                        N1014000
*********************************************************************** N1016000
*                                                                     * N1018000
*    INITIALIZATION  -  EXECUTED ONLY ONCE                            * N1020000
*                                                                     * N1022000
*********************************************************************** N1024000
         SPACE 1                                                        N1026000
         ST    SAVE,CKPSTQE+IPOST  STORE PCE ADDRESS IN STQE        R41 N1028000
         LH    R1,$RETRYCT         INITIALIZE                  @OZ27300 N1029000
         LA    R1,1(,R1)            I/O ERROR                  @OZ27300 N1030000
         STH   R1,CKPRETRY           RETRY COUNT               @OZ27300 N1031000
         MVC   PCESEEK,$HASPDCB    SET DA DCT                  @OZ27300 N1032000
         MVI   PCEDEVTP,DCTINT      TO LOOK LIKE UNIT RECORD   @OZ27300 N1033000
         L     WE,$JQB             LOAD ADDRESS OF JOBQ BUFFER @OZ27300 N1034000
         USING JQBDSECT,WE         PROVIDE JQB ADDRESSABILITY  @OZ27300 N1035000
         ST    WE,PCEBUFAD         STORE IOB ADDR IN DA DCT    @OZ27300 N1036000
         SPACE 1                                               @OZ27300 N1037000
***************************************************************@OZ27300 N1038000
*                                                              @OZ27300 N1040000
*  ON ENTRY - JQB IS SETUP WITH PRIMARY-CHECKPOINT FORMAT CCWS @OZ27300 N1042000
*                   (JQBFLAG1 = JQB1FMT + JQB1PRIM)            @OZ27300 N1044000
*                                                              @OZ27300 N1046000
*           - $QSONDA=1  (QUEUES ARE NOT IN STORAGE)           @OZ27300 N1048000
*           - DASD RESERVE AND CHECKPOINT LOCK ARE HELD        @OZ27300 N1050000
*                                                              @OZ27300 N1052000
***************************************************************@OZ27300 N1054000
         SPACE 1                                               @OZ27300 N1056000
         BAL   R14,KFORMAT         RESET JQB FOR NON-FORMAT    @OZ27300 N1058000
         EJECT                                                 @OZ27300 N1060000
***************************************************************@OZ27300 N1062000
*                                                              @OZ27300 N1064000
*     IF DEBUG -- COPY Q-RCDS TO I/O AREA FOR LATER COMPARES   @OZ27300 N1066000
*                                                              @OZ27300 N1068000
***************************************************************@OZ27300 N1070000
         SPACE 1                                               @OZ27300 N1072000
KTDEBUG  NI    $STATUS,FF-$QSONDA  INDICATE QUEUES IN STORAGE  @OZ27300 N1074000
         TM    $RUNOPTS,$DEBUG     DEBUG MODE...               @OZ27300 N1076000
         BZ    KTMAS               BR IF NO                    @OZ27300 N1078000
         L     R0,$JOBQIO          ADDRESS AND LENGTH          @OZ27300 N1080000
         LH    R1,$JOBRECN          OF QUEUE RECORDS           @OZ27300 N1082000
         AH    R1,$JOTRECN           IN CHECKPOINT             @OZ27300 N1084000
         SLL   R1,12                  I/O AREA                 @OZ27300 N1086000
         L     R14,$JOBQPTR        ADDRESS AND LENGTH OF       @OZ27300 N1088000
         LR    R15,R1               ACTUAL QUEUE RECORD AREA   @OZ27300 N1090000
         MVCL  R0,R14              COPY Q'S TO I/O AREA        @OZ27300 N1092000
         SPACE 1                                               @OZ27300 N1094000
***************************************************************@OZ27300 N1096000
*                                                              @OZ27300 N1098000
*           BYPASS READING SHARED QUEUES FIRST TIME            @OZ27300 N1100000
*                                                              @OZ27300 N1102000
*          START $MINHOLD (MAS) OR $CKPTIME INTERVALS          @OZ27300 N1104000
*                                                              @OZ27300 N1106000
***************************************************************@OZ27300 N1108000
         SPACE 1                                               @OZ27300 N1110000
KTMAS    L     R1,$QSE1            GET ADDRESS OF 1ST QSE      @OZ27300 N1112000
         TM    QSEFLAGS-QSEDSECT(R1),QSELAST  TEST FOR 1 SYSTEM@OZ27300 N1114000
         BNZ   K1SYS               BR IF YES                   @OZ27300 N1116000
         OI    CKPFLAG1,CKP1MAS     ELSE REMEMBER MAS          @OZ27300 N1118000
         L     R0,$MINHOLD           AND BR TO START 1ST       @OZ27300 N1120000
         B     KINITIMR               MINHOLD INTERVAL         @OZ27300 N1122000
         SPACE 1                                               @OZ27300 N1124000
K1SYS    L     R0,$CKPTIME         LOAD PR/PU CKPT INTERVAL    @OZ27300 N1126000
         SPACE 1                                               @OZ27300 N1128000
KINITIMR BAL   WA,KSTIMER          START INTERVAL TIMER AND    @OZ27300 N1130000
         MVI   JQBECBCC,FF         INITIALIZE ECB FOR KWRITE   @OZ27300 N1131000
         MVC   CKPDPXCT,$DPXRATE   INITIALIZE DUPLEXING RATE   @OZ27300 N1132000
         B     KWCYCLE             BR TO ENTER WRITE CYCLE     @OZ27300 N1133000
         EJECT                                                 @OZ27300 N1134000
***************************************************************@OZ27300 N1134200
*                                                              @OZ27300 N1134400
*                JES2 CHECKPOINT DATA SET FORMAT               @OZ27300 N1134600
*                -------------------------------               @OZ27300 N1134800
*                                                              @OZ27300 N1135000
*                                                              @OZ27300 N1135200
* TRK 1    -------     =====  ------     -----//------         @OZ27300 N1135400
*         * CHECK *   *    LOCK     *   *   MASTER    *        @OZ27300 N1135600
*          -------     =====  ------     -----//------         @OZ27300 N1135800
*                       KEY    DATA                            @OZ27300 N1136000
*                                                              @OZ27300 N1136200
*                                                              @OZ27300 N1136400
* TRK 2    -----//-----     -----//-----     -----//-----      @OZ27300 N1136600
* THRU    *  Q-RECORD  *   *  Q-RECORD  *   *  Q-RECORD  * ... @OZ27300 N1136800
* TRK N    -----//-----     -----//-----     -----//-----      @OZ27300 N1137000
*                                                              @OZ27300 N1137200
*                                                              @OZ27300 N1137400
* T1-R1  CHECK RCD  . 8-BYTES (MUST MATCH $WCHECK IN MASTER)   @OZ27300 N1137600
* T1-R2  LOCK RCD   . 8-BYTE KEY  (VALUE=0 MEANS CKPT UNOWNED) @OZ27300 N1137800
*                     8-BYTE DATA (SAME VALUE AS KEY)          @OZ27300 N1138000
* T1-R3  MASTER RCD . $MASTERL-BYTES                           @OZ27300 N1138200
*                                                              @OZ27300 N1138400
* T2-RN THRU TN-RN  . 4K-BYTES  (JES2 QUEUE RECORDS)           @OZ27300 N1138600
*                                                              @OZ27300 N1138800
***************************************************************@OZ27300 N1139000
         SPACE 1                                               @OZ27300 N1139200
***************************************************************@OZ27300 N1140000
*                                                              @OZ27300 N1140500
*        BEGIN MULTI-ACCESS SPOOL CHECKPOINT CYCLE             @OZ27300 N1141000
*                                                              @OZ27300 N1142000
***************************************************************@OZ27300 N1144000
         SPACE 1                                               @OZ27300 N1146000
KREAD    TM    $RUNOPTS,$DEBUG     TEST DEBUG OPTION           @OZ27300 N1148000
         BZ    KGETLOCK            BR IF NOT SELECTED          @OZ27300 N1150000
         SPACE 2                                               @OZ27300 N1152000
***************************************************************@OZ27300 N1154000
*                                                              @OZ27300 N1154200
*        ENSURE NO CHANGES TO CHECKPOINT WHILE NOT OWNED       @OZ27300 N1154400
*                                                              @OZ27300 N1154600
***************************************************************@OZ27300 N1154800
         SPACE 1                                               @OZ27300 N1155000
         L     R14,$JOBQPTR        POINT TO JOB QUEUE          @OZ27300 N1155200
         LH    R15,$JOBRECN        GET NO. OF JOBQ RECORDS     @OZ27300 N1155400
         AH    R15,$JOTRECN          ADD NO. OF JOT RECORDS,   @OZ27300 N1155600
         SLL   R15,12                MULTIPLY BY PAGE SIZE     @OZ27300 N1155800
         L     R0,$JOBQIO          POINT TO IN-AREA JOBQ/JOT   @OZ27300 N1156000
         LR    R1,R15              DUPLICATE FIELD LENGTH      @OZ27300 N1156200
         CLCL  R14,R0              COMPARE JOBQ/JOT WITH COPY  @OZ27300 N1158000
         BE    KGETLOCK            BR IF EQUAL                 @OZ27300 N1160000
         SPACE 1                                               @OZ27300 N1162000
KRDK01   LR    R1,R0               PRESERVE R0 FOR DEBUGGING   @OZ27300 N1164000
         LA    WA,K01              POINT TO K01 ABEND          @OZ27300 N1166000
         B     KLOGOUT              AND BR TO LOGOUT           @OZ27300 N1168000
         EJECT                                                 @OZ27300 N1170000
***************************************************************@OZ27300 N1172000
*                                                              @OZ27300 N1174000
*   BUILD CHANNEL PROGRAM TO...                                @OZ27300 N1176000
*                                                              @OZ27300 N1178000
*   1) VERIFY THAT CHECKPOINT-LOCK IS ZERO (UNHELD). IF LOCK'S @OZ27300 N1180000
*      KEY-AREA IS NOT ZERO, READ IT IN (T1R1) AND GO TO 5.    @OZ27300 N1182000
*   2) READ MASTER RECORD (T1R3)                               @OZ27300 N1184000
*   3) READ CHECK RECORD  (T1R1)                               @OZ27300 N1186000
*   4) SET CHECKPOINT-LOCK KEY AND DATA AREAS (T1R2)           @OZ27300 N1188000
*   5) READ COUNT-AREA OF MASTER RECORD TO ENSURE COMPLETION   @OZ27300 N1190000
*                                                              @OZ27300 N1192000
***************************************************************@OZ27300 N1194000
         SPACE 1                                               @OZ27300 N1196000
         USING JQBCCWE,WD          PROVIDE CCWE ADDRESSABILITY @OZ27300 N1198000
         SPACE 1                                               @OZ27300 N1200000
KGETLOCK MVI   JQBKEY,0            SEARCH FOR ZERO KEY         @OZ27300 N1202000
         MVC   JQBLKEY(8),$BLANKS    IF ZERO KEY,              @OZ27300 N1202500
         MVC   JQBLDATA(8),$BLANKS    SET OUR                  @OZ27300 N1203000
         MVC   JQBLKEY(1),$SIDBUSY     SYSTEM ID               @OZ27300 N1204000
         MVC   JQBLKEY+1(L'$SID),$SID   INTO LOCK              @OZ27300 N1206000
         MVC   JQBLDATA(1),$SIDBUSY      RECORD KEY            @OZ27300 N1208000
         MVC   JQBLDATA+1(L'$SID),$SID    AND DATA FIELDS      @OZ27300 N1210000
         SPACE 1                                               @OZ27300 N1212000
KRDBGN   OI    JQBFLAG1,JQB1LOCK+JQB1READ+JQB1PRIM  GET-LOCK OP@OZ27300 N1214000
         MVC   CKPSTCK,$ZEROS      CLEAR TIMER FOR MSG CONTROL @OZ27300 N1216000
         MVI   CKPRLSID,0          CLEAR $ESYS,RESET=SID FIELD @OZ27300 N1218000
         SPACE 1                                               @OZ27300 N1220000
KRDCCWS  LA    WD,JQBLOCKV         START CHANNEL PROGRAM       @OZ27300 N1222000
         ST    WD,JQBSTART          WITH LOCK-VERIFY PACKET    @OZ27300 N1224000
         MVC   JQBSEEK+1(6),JQBCADDR   SET SEEK ADDRESS        @OZ27300 N1226000
         LA    R1,JQBMSTR+(JQBCSID-JQBCCWE)  CHAIN MASTER-     @OZ27300 N1228000
         ST    R1,JQBLTIC+4                   RECORD PACKET    @OZ27300 N1230000
         LRA   R1,0(,R1)                       AFTER THIS      @OZ27300 N1232000
         STCM  R1,7,JQBLTNXT+CCWADDR            PACKET         @OZ27300 N1234000
         SPACE 1                                               @OZ27300 N1236000
         BAL   WB,KFIXMSTR         SETUP MASTER RCD I/O AREA   @OZ27300 N1238000
         LA    WD,JQBMSTR          POINT TO MASTER CCW PACKET  @OZ27300 N1240000
         MVI   JQBCRW+CCWOP,READ+DATA  SET TO READ MASTER RCD  @OZ27300 N1242000
         SPACE 1                                               @OZ27300 N1244000
         LR    WB,WD               POINT WB TO MASTER PACKET   @OZ27300 N1246000
         LA    WD,JQBCHECK          AND WD TO CHECK-RCD PACKET @OZ27300 N1248000
         MVI   JQBCRW+CCWOP,READ+DATA  SET TO READ CHECK-RCD   @OZ27300 N1250000
         BAL   WA,KCCWADJ          CHAIN CHK-PACKET FROM MSTR  @OZ27300 N1252000
         SPACE 1                                               @OZ27300 N1254000
         LR    WB,WD               FINALLY, ADD THE PACKET     @OZ27300 N1256000
         LA    WD,JQBLOCK           TO SET OUR CKPT LOCK       @OZ27300 N1257000
         BAL   WA,KCCWADJ           (ENDS WITH TIC TO JQBVERP) @OZ27300 N1258000
         SPACE 1                                               @OZ27300 N1260000
         DROP  WD                  KILL CCWE ADDRESSABILITY    @OZ27300 N1262000
         EJECT                                                 @OZ27300 N1263000
                                   PRINT OFF - SECTION DELETED @OZ27300 N1264000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N1266000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N1268000
                                   PRINT ON -- SECTION DELETED @OZ27300 N1270000
         SPACE 1                                               @OZ20010 N1272000
*********************************************************************** N1274000
*                                                                     * N1276000
*    SET TO RESERVE CHECKPOINT DEVICE                                 * N1278000
*                                                                     * N1280000
*********************************************************************** N1282000
         SPACE 1                                                        N1284000
        $RESERVE                   REQUEST CHECKPOINT RESERVE  @OZ35278 N1285000
         BZ    KLOCKIO             BR IF RESERVE SATISFIED     @OZ35278 N1286000
         SPACE 1                                               @OZ35278 N1287000
KRSTIMER L     R0,$WARNTIM         SET TIMER TO DETECT POLY-JES@OZ35278 N1288000
         BAL   WA,KSTIMER           RESERVE OR READ LOCKOUT    @OZ35278 N1288200
         SPACE 1                                               @OZ35278 N1288400
KRSWAIT $WAIT  RSV,INHIBIT=NO      WAIT FOR RESERVE OR TIMER   @OZ35278 N1288600
         TM    $RSVECB,X'40'       RESERVE SATISFIED...        @OZ35278 N1288800
         BO    KGOTRSV             BE IF YES                   @OZ35278 N1289000
         TM    CKPSTQE+IPOST,X'80' HAS $WARNTIM EXPIRED...     @OZ35278 N1290000
         BZ    KRSWAIT             BR IF NO TO CONTINUE WAIT   @OZ35278 N1291000
         MVC   CKPMSG,KWARNM       WARN OPERATOR OF            @OZ35278 N1292000
       $$WTO   CKPMSG               'WAITING FOR CKPT ACCESS'  @OZ35278 N1293000
         B     KRSTIMER            BR TO RE-ACTIVATE TIMER     @OZ35278 N1294000
         SPACE 1                                               @OZ35278 N1295000
KGOTRSV  LH    WF,CKPRETRY         SET I/O ERROR RETRY COUNT   @OZ35278 N1296000
         MVC   CKPLIRCT,$LIRCT     SET LOST INTERRUPT RETRY CT @OZ35278 N1297000
         B     KRDMSTR1            BR TO READ MASTER RECORD    @OZ35278 N1298000
*                                  THIS CARD DELETED BY APAR   @OZ35278 N1299000
         EJECT                                                 @OZ20010 N1300000
***************************************************************@OZ27300 N1301000
*                                                              @OZ27300 N1302000
*   START I/O TO OBTAIN CKPT-LOCK AND READ MASTER/CHECK RCDS   @OZ27300 N1303000
*                                                              @OZ27300 N1304000
*    ISSUE WARNING IF &WARNTIM EXPIRES BEFORE I/O COMPLETES    @OZ27300 N1305000
*                                                              @OZ27300 N1306000
***************************************************************@OZ27300 N1307000
         SPACE 1                                               @OZ27300 N1308000
KLOCKIO  LH    WF,CKPRETRY         SET I/O ERROR RETRY COUNT   @OZ35278 N1309000
         SPACE 1                                               @OZ27300 N1310000
KRDMSTR  MVC   CKPLIRCT,$LIRCT     SET LOST INTERRUPT RETRY CT @OZ35278 N1311000
         SPACE 1                                               @OZ27300 N1312000
KRDMAGN  L     R0,$WARNTIM         START/RESTART TIMER TO      @OZ27300 N1313000
         BAL   WA,KSTIMER           DETECT READ LOCKOUTS       @OZ27300 N1314000
         SPACE 1                                               @OZ27300 N1315000
KRDMSTR1 MVC   JQBVERFY,KVERFY     INITIALIZE I/O VERIFICATION @OZ35278 N1316000
         MVI   JQBADKEY,FF          AND LOCK READ-IN AREAS     @OZ27300 N1317000
         MVC   JQBERRCT,CKPRETRY     AND APPENDAGE RETRY CTR   @OZ27300 N1318000
         LA    R1,PCEDADCT         START THE I/O               @OZ27300 N1319000
        $EXCP  (R1),TYPE=VR         OPERATION                  @OZ27300 N1320000
         SPACE 1                                               @OZ27300 N1321000
KRDWAIT $WAIT  IO,INHIBIT=NO       WAIT FOR I/O OR $WARNTIM    @OZ27300 N1322000
         CLI   JQBECBCC,0          I/O COMPLETE...             @OZ27300 N1323000
         BNE   KRDIOCC             BR IF YES                   @OZ27300 N1324000
         SPACE 1                                               @OZ27300 N1324500
         TM    CKPSTQE+IPOST,X'80' HAS $WARNTIM EXPIRED...     @OZ27300 N1325000
         BZ    KRDWAIT             BR IF NO                    @OZ27300 N1326000
         MVC   CKPMSG,KWARNM        ELSE ISSUE WARNING MSG --  @OZ27300 N1327000
       $$WTO   CKPMSG              'WAITING FOR CKPT ACCESS'   @OZ27300 N1328000
         L     R0,$WARNTIM         RESTART                     @OZ27300 N1329000
         BAL   WA,KSTIMER           WARNING TIMER              @OZ27300 N1330000
         B     KRDWAIT               AND GO WAIT AGAIN         @OZ27300 N1331000
         SPACE 1                                               @OZ27300 N1332000
KRDIOCC  BAL   WA,KTTIMER          STOP TIMER                  @OZ27300 N1333000
         CLI   JQBECBCC,X'7F'      I/O POSTED SUCCESSFUL...    @OZ27300 N1334000
         BE    KRDMOK              BR IF YES                   @OZ27300 N1335000
         SPACE 1                                               @OZ27300 N1335500
        $IOERROR (WE)              ISSUE I/O ERROR MESSAGE     @OZ27300 N1336000
         BCT   WF,KRDMSTR          RETRY THE I/O               @OZ27300 N1337000
         B     KREFRESH            BR IF ALL RETRIES FAILED    @OZ27300 N1338000
         EJECT                                                 @OZ27300 N1339000
***************************************************************@OZ27300 N1340000
*                                                              @OZ27300 N1341000
*   VERIFY THAT THIS MEMBER HAS OBTAINED THE CHECKPOINT LOCK   @OZ27300 N1342000
*                                                              @OZ27300 N1343000
***************************************************************@OZ27300 N1344000
         SPACE 1                                               @OZ27300 N1345000
KRDMOK   BAL   WB,KIOVERFY         INTERRUPTED I/O...          @OZ27300 N1346000
         B     KRDMAGN             RETRY IF YES          +0    @OZ27300 N1347000
         SPACE 1                                               @OZ27300 N1348000
         CLI   JQBADKEY,FF         DID WE GET LOCK...    +4    @OZ27300 N1349000
         BE    KGOTLOK             BR IF YES                   @OZ27300 N1350000
         SPACE 1                                               @OZ27300 N1351000
***************************************************************@OZ27300 N1352000
*                                                              @OZ27300 N1353000
*   CHECKPOINT LOCK ALREADY HELD.  TRY AGAIN TO OBTAIN LOCK    @OZ27300 N1354000
*   EVERY SECOND. ISSUE WAITING-FOR-LOCK MESSAGE EVERY 32.     @OZ27300 N1355000
*   CONTINUE UNTIL LOCK OBTAINED, OR UNTIL '$ESYS,RESET=SID'   @OZ27300 N1356000
*   IS ISSUED, WHICH CHANGES THE SEARCH-KEY ARGUMENT FROM      @OZ27300 N1356100
*   ZERO TO THE SYSTEM ID ENTERED.                             @OZ27300 N1356200
*                                                              @OZ27300 N1356300
*   IF SEARCH FAILED, AND LOCK WAS READ -- POSSIBLE VALUES...  @OZ27300 N1356400
*                                                              @OZ27300 N1356500
*   00       - LOCK NOT HELD (2 SYSTEMS TRIED TO RESET LOCK)   @OZ27300 N1356600
*   80       - LOCK HELD BY OTHER SYSTEM DURING INITIALIZATION @OZ27300 N1356700
* $SIDBUSY   - LOCK WAS ALREADY HELD BY THIS SYSTEM            @OZ27300 N1356800
* 01-$QSENO  - LOCK HELD BY OTHER SYSTEM                       @OZ27300 N1356900
*  OTHER     - ERROR. RESULTS IN A JES2 $ERROR CODE=K13        @OZ27300 N1357000
*                                                              @OZ27300 N1357100
***************************************************************@OZ27300 N1357200
         SPACE 1                                               @OZ27300 N1357300
        $RELEASE                   RELEASE CHECKPOINT RESERVE  @OZ35278 N1357400
         CLC   $SIDBUSY,JQBADKEY   WERE WE THE LOCK OWNER...   @OZ27300 N1357500
         BNE   KLOKMESG            BR IF NO                    @OZ27300 N1357600
         MVC   JQBKEY,$SIDBUSY      ELSE SETUP TO REGAIN LOCK  @OZ27300 N1357700
         B     KRDBGN                AND BR TO GO DO IT        @OZ27300 N1357800
         SPACE 1                                               @OZ27300 N1357900
KLOKMESG CLI   JQBADKEY,0          BR IF LOCK WAS UNHELD       @OZ27300 N1358000
         BE    KLOKOPER            (TWO $ESYS,RESET= CMDS)     @OZ27300 N1358100
         OI    JQBFLAG2,JQB2LOKO   SHOW QUEUES LOCKED OUT      @OZ27300 N1358120
         TM    $COMMPCE,X'40'      HASPCOMM WAITING ON US...   @OZ27300 N1358140
         BZ    KLOKTIME            BR IF NO                    @OZ27300 N1358160
         L     R1,$COMMPCE         GET CMD PROCESSOR PCE ADDR  @OZ27300 N1358180
        $POST  (R1),WORK           WAKE UP COMMAND PROCESSOR   @OZ27300 N1358200
         EJECT                                                 @OZ27300 N1358220
KLOKTIME STCK  $DOUBLE             GET TIME OF DAY             @OZ27300 N1358240
         L     R0,$DOUBLE          CONVERT TO                  @OZ27300 N1358300
         SRL   R0,5                 32-SECOND UNITS            @OZ27300 N1358400
         CL    R0,CKPSTCK          HAS 32 SECONDS PASSED...    @OZ27300 N1358500
         BNH   KWAIT1S             BR IF NO                    @OZ27300 N1358600
         ST    R0,CKPSTCK           ELSE SAVE NEW CLOCK VALUE  @OZ27300 N1358700
         SPACE 1                                               @OZ27300 N1358800
         MVC   CKPMSG,KLOKMSG      BASE MESSAGE TEXT           @OZ27300 N1358900
         CLI   JQBADKEY,X'80'      OTHER SYSTEM INITIALIZING...@OZ27300 N1359000
         BNE   KLOKQSES            BR IF NO TO SCAN QSE'S      @OZ27300 N1359100
         MVC   KLOKINIT+CKPMSG,=C'INITIALIZATION' SPECIAL TEXT @OZ27300 N1359200
         B     KLOKTEL             BR TO TELL OPERATOR         @OZ27300 N1359300
         SPACE 1                                               @OZ27300 N1359400
         USING QSEDSECT,R1         PROVIDE QSE ADDRESSABILITY  @OZ27300 N1359500
         SPACE 1                                               @OZ27300 N1359600
KLOKQSES L     R1,$QSE1            POINT TO QSE'S              @OZ27300 N1359700
         LH    WA,$QSENO           NUMBER OF SYSTEMS           @OZ27300 N1359800
         SPACE 1                                               @OZ27300 N1359900
KLOKMLUP CLC   QSESIBSY,JQBADKEY   IS THIS THE OWNING SYSTEM...@OZ27300 N1360000
         BE    KLOKMWTO            BR IF YES                   @OZ27300 N1360100
         LA    R1,QSELEN(,R1)       ELSE POINT TO              @OZ27300 N1360200
         BCT   WA,KLOKMLUP           NEXT QSE AND LOOP         @OZ27300 N1360300
         LA    WA,K13              POINT TO K13 ABEND          @OZ27300 N1360400
         B     KLOGOUT              AND BR TO LOGOUT           @OZ27300 N1360500
         SPACE 1                                               @OZ27300 N1360600
KLOKMWTO MVC   KLOKMSID+CKPMSG,QSESID  SET SYSTEM ID IN MSG    @OZ27300 N1360700
         SPACE 1                                               @OZ27300 N1360800
KLOKTEL $$WTO  CKPMSG              TELL OPERATOR               @OZ27300 N1360900
         SPACE 1                                               @OZ27300 N1361000
         DROP  R1                  KILL QSE ADDRESSABILITY     @OZ27300 N1361100
         SPACE 1                                               @OZ27300 N1361200
KWAIT1S $PGSRVC FREE,$MASTERI,$MASTERL,RELEASE=Y  MSTR IO AREA @OZ27300 N1361300
         LA    R0,1                WAIT                        @OZ27300 N1361400
         BAL   WA,KSTIMER           FOR                        @OZ27300 N1361500
        $WAIT  WORK                  1-SECOND                  @OZ27300 N1361600
         SPACE 1                                               @OZ27300 N1361700
KLOKOPER MVI   JQBKEY,0            RESET SEARCH-KEY TARGET     @OZ27300 N1361800
         CLI   CKPRLSID,0          $ESYS,RESET=SID...          @OZ27300 N1361900
         BE    KRDCCWS             BR IF NO TO RETRY LOCK      @OZ27300 N1362000
         MVC   JQBKEY,CKPRLSID      ELSE REPLACE SRCH-KEY      @OZ27300 N1362100
         B     KRDBGN                AND BR TO OVERRIDE LOCK   @OZ27300 N1362200
         EJECT                                                 @OZ27300 N1362300
***************************************************************@OZ27300 N1362400
*                                                              @OZ27300 N1362500
*    THIS MEMBER HAS EXCLUSIVE CONTROL OF THE PRIMARY CKPT DS  @OZ27300 N1362600
*                                                              @OZ27300 N1362700
*       ENSURE PREVIOUS WRITE OF PRIMARY WAS SUCCESSFUL        @OZ27300 N1362800
*                                                              @OZ27300 N1362900
***************************************************************@OZ27300 N1363000
         SPACE 1                                               @OZ27300 N1363100
KGOTLOK  NI    JQBFLAG1,FF-JQB1LOCK  SHOW LOCKING COMPLETE     @OZ27300 N1363200
         OI    JQBFLAG1,JQB1LOKD      AND WE HAVE IT           @OZ27300 N1363300
         NI    JQBFLAG2,FF-JQB2LOKO  RESET QUEUES LOCKOUT FLAG @OZ27300 N1363350
         SPACE 1                                               @OZ27300 N1363400
         L     R1,$MASTERI         POINT TO MASTER-RCD IO AREA @OZ27300 N1363500
         CLC   JQBCKVAL,$WCHECK-$SAVEBEG(R1)  CHECK CHECK-RCD  @OZ27300 N1363600
         BE    KREAD2              BR IF CHECK RECORD MATCHES  @OZ27300 N1363700
         SPACE 1                                               @OZ27300 N1363800
         MVC   CKPMSG,KPREVERR     'INVALID RECORD DETECTED'   @OZ27300 N1363900
       $$WTO   CKPMSG              TELL OPERATOR               @OZ27300 N1364000
         B     KREFRESH            BR TO DISASTER RECOVERY     @OZ27300 N1364100
         SPACE 2                                               @OZ27300 N1364200
***************************************************************@OZ27300 N1364300
*                                                              @OZ27300 N1364400
*        READ ALL CHANGED RECORDS INTO THE I/O AREA            @OZ27300 N1364500
*                                                              @OZ27300 N1364600
***************************************************************@OZ27300 N1364700
         SPACE 1                                               @OZ27300 N1364800
KREAD2   MVC   JQBSTART,$ZEROS     CLEAR IOBSTART FOR KBLDCCWS @OZ27300 N1364900
         BAL   R14,KBLDCCWS        BUILD CCWS TO RD CHG'D RCDS @OZ27300 N1365000
         CLC   JQBSTART,$ZEROS     ANY RECORDS TO READ...      @OZ27300 N1365100
         BE    KRTQSE              BR IF NO                    @OZ27300 N1365200
         LH    WF,CKPRETRY         SET I/O ERROR RETRY COUNTER @OZ27300 N1365300
         SPACE 1                                               @OZ27300 N1365400
KRDREST  MVC   CKPLIRCT,$LIRCT     SET LOST-INTERRUPT RETRY CTR@OZ27300 N1365500
         SPACE 1                                               @OZ27300 N1365600
KRDRAGN  MVC   JQBVERFY,KVERFY     INIT I/O VERFICATION AREA   @OZ27300 N1365700
         LA    R1,PCEDADCT           READ ALL CHANGED RECORDS  @OZ27300 N1365800
        $EXCP  (R1),TYPE=VR,WAIT=YES  INTO THE I/O AREA        @OZ27300 N1365900
         BO    KRDROK              BR IF I/O POSTED SUCCESSFUL @OZ27300 N1366000
         BCT   WF,KRDREST           ELSE RETRY THE I/O         @OZ27300 N1366100
         B     KREFRESH            BR IF ALL RETRIES FAILED    @OZ27300 N1366200
         SPACE 1                                               @OZ27300 N1366300
KRDROK   BAL   WB,KIOVERFY         INTERRUPTED I/O...          @OZ27300 N1366400
         B     KRDRAGN             RETRY IF YES       +0       @OZ27300 N1366500
         DS    0H                   ELSE CONTINUE     +4       @OZ27300 N1366600
         EJECT                                                 @OZ27300 N1366700
***************************************************************@OZ27300 N1366800
*                                                              @OZ27300 N1366900
*        CHECK INTEGRITY OF NEWLY READ CHECKPOINT              @OZ27300 N1367000
*                                                              @OZ27300 N1367100
***************************************************************@OZ27300 N1367200
         SPACE 1                                               @OZ27300 N1367300
         USING QSEDSECT,R1         PROVIDE QSE ADDRESSABILITY  @OZ27300 N1367400
         SPACE 1                                               @OZ27300 N1367500
KRTQSE   L     R1,$RQSE            POINT TO OUR QSE IN IO AREA @OZ27300 N1367600
         CLC   $SIDTIME,QSESITIM   HAS QSE BEEN CLOBBERED...   @OZ27300 N1367700
         BNE   KRK03               BR IF YES                   @OZ27300 N1367800
         L     R1,$ESYSQSE         IS A $ESYS                  @OZ27300 N1367900
         LTR   R1,R1                IN PROGRESS...             @OZ27300 N1368000
         BZ    KRDMOVE             BR IF NO                    @OZ27300 N1368100
         SL    R1,$AQSE            LOCATE WARM STARTING        @OZ27300 N1368120
         AL    R1,$RQSE             SYSTEM'S QSE IN IO AREA    @OZ27300 N1368140
         CLC   $SIDTIME,QSESITIM     AND CHECK $ESYS INTEGRITY @OZ27300 N1368200
         BE    KRDMOVE             BR IF OK                    @OZ27300 N1368300
         SPACE 1                                               @OZ27300 N1368400
KRK03    LA    WA,K03              POINT TO K03 ABEND          @OZ27300 N1368500
         B     KLOGOUT              AND BR TO LOGOUT           @OZ27300 N1368600
         SPACE 1                                               @OZ27300 N1368700
         DROP  R1                  KILL QSE ADDRESSABILITY     @OZ27300 N1368800
         EJECT                                                 @OZ27300 N1368900
***************************************************************@OZ27300 N1369000
*                                                              @OZ27300 N1369100
*                 BEGIN POST-READ PROCESSING                   @OZ27300 N1369200
*                 --------------------------                   @OZ27300 N1369300
*   CALL KAFTERIO TO MOVE ALL NEWLY READ JOBQ/JOT RECORDS TO   @OZ27300 N1369400
*    THE ACTUAL QUEUE AREA. IT ALSO PG-RLSE'S ALL I/O AREA     @OZ27300 N1369500
*     RECORDS UNLESS THEY ARE SCHEDULED FOR DUPLEX-WRITE       @OZ27300 N1369600
*                                                              @OZ27300 N1369700
*  MOVE MASTER RECORD FROM I/O AREA TO ACTUAL-AREA AND TO HCT  @OZ27300 N1369800
*                                                              @OZ27300 N1369900
***************************************************************@OZ27300 N1370000
         SPACE 1                                               @OZ27300 N1370100
KRDMOVE  CLC   JQBSTART,$ZEROS     WERE ANY RECORDS READ...    @OZ27300 N1370200
         BE    KRDMVHCT            BR IF NONE                  @OZ27300 N1370300
         BAL   R14,KAFTERIO        MOVE Q-RCDS TO ACTUAL AREA  @OZ27300 N1370400
         SPACE 1                                               @OZ27300 N1370500
KRDMVHCT NI    JQBFLAG1,FF-JQB1READ  SHOW READ COMPLETE        @OZ27300 N1370600
         L     R0,$MASTERI         GET ADDRESS AND LENGTH      @OZ27300 N1370700
         L     R1,$MASTERL          OF MASTER RECORD           @OZ27300 N1370800
         LA    R14,$SAVEBEG        GET ADDRESS AND LENGTH      @OZ27300 N1370900
         LA    R15,$SAVELEN         OF HCT CHECKPOINT AREA     @OZ27300 N1371000
         MVCL  R14,R0              MOVE CKPT'D HCT VARIABLES   @OZ27300 N1371100
         L     R14,$QSE1           START OF ACTUAL QSE AREA    @OZ27300 N1372000
         LR    R15,R1              REMAINING MOVE LENGTH       @OZ27300 N1374000
         MVCL  R14,R0              MOVE REST OF MASTER DATA    @OZ27300 N1376000
         SPACE 1                                               @OZ27300 N1378000
         TM    $STATUS,$DUPLEX     PAGE-RELEASE MASTER RECORD  @OZ27300 N1380000
         BO    KRDOK                I/O AREA UNLESS DUPLEX     @OZ27300 N1382000
        $PGSRVC FREE,$MASTERI,$MASTERL,RELEASE=Y   FOLLOWS     @OZ27300 N1384000
         SPACE 2                                               @OZ27300 N1386000
KRDOK    ICM   R1,15,$MCONPCE      POINT TO REMOTE CONSOLE PCE @OZ27300 N1388000
         BZ    KQSNONDA            BR IF NONE                  @OZ27300 N1390000
        $POST  (R1),WORK            ELSE WAKE IT UP            @OZ27300 N1392000
                                   PRINT OFF - SECTION DELETED @OZ27300 N1394000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N1396000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N1398000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N1400000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N1402000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N1404000
                                   PRINT ON -- SECTION DELETED @OZ27300 N1406000
         EJECT                                                       R4 N1538000
*********************************************************************** N1540000
*                                                                     * N1542000
*    SHOW SHARED QUEUES ARE AVAILABLE IN STORAGE FOR ACCESS    @OZ27300 N1544000
*                                                                     * N1546000
*********************************************************************** N1548000
         SPACE 1                                                        N1550000
KQSNONDA NI    $STATUS,FF-$QSONDA-$CKPTW  SHOW QUEUES READ     @OZ27300CN1552000
                                    AND ALLOW WRITE REQUESTS   @OZ27300 N1554000
         SPACE 1                                               @OZ27300 N1556000
        $POST  $HASPECF,CKPT       $POST $QSUSE $WAITERS       @OZ27300 N1558000
                                   PRINT OFF - SECTION DELETED @OZ27300 N1560000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N1560100
*                                  THIS CARD DELETED BY APAR   @OZ27300 N1560200
*                                  THIS CARD DELETED BY APAR   @OZ27300 N1560300
                                   PRINT ON -- SECTION DELETED @OZ27300 N1560400
         EJECT                                                          N1576000
*********************************************************************** N1578000
*                                                                     * N1580000
*    PROPAGATE JOB, JOT, AND SPECIFIC $POSTS FROM OTHER SYSTEMS       * N1582000
*                                                                     * N1584000
*********************************************************************** N1586000
         SPACE 1                                                        N1588000
         USING QSEDSECT,WC         PROVIDE QSE ADDRESSABILITY  @OZ27300 N1588500
         SPACE 1                                               @OZ27300 N1589000
KRCPNP   L     WC,$AQSE            POINT TO OUR QSE            @OZ27300 N1589500
         TM    QSEFLAGS,QSEPOST    TEST FOR X-SYSTEM $POSTS    @OZ27300 N1590000
         BZ    KRDEND              BRANCH IF NONE                       N1592000
         TM    QSEFLAGS,QSEPJOB    TEST FOR CROSS-SYSTEM $POST JOB      N1594000
         BZ    KRDPOCNV            BRANCH IF NOT                        N1596000
        $POST  $HASPECF,JOB        $POST JOB                            N1598000
         B     KRDPOJOT            SKIP SPECIFIC JOB POSTING            N1600000
         SPACE 1                                                    R41 N1601000
KRDPOCNV TM    QSEFLAGS,QSEPCNV    TEST FOR XSYS $POST CONVERTER        N1602000
         BZ    KRDPOXEQ            BRANCH IF NOT                        N1604000
         L     R1,$JCLPCE          GET ADDRESS OF CONVERTER PCE      R4 N1606000
        $POST  (R1),JOB             AND $POST FOR JOB                   N1608000
         SPACE 1                                                    R41 N1609000
KRDPOXEQ TM    QSEFLAGS,QSEPXEQ    TEST FOR XSYS $POST EXECUTION        N1610000
         BZ    KRDPOOUT            BRANCH IF NOT                        N1612000
         L     R1,$SSVT            POINT TO SSVT               @OZ20010 N1613000
         MVI   $SVJOB-SSVT(R1),X'80' $$POST XEQ PROCESSOR      @OZ20010 N1614000
         L     R1,$EXECPCE         GET ADDRESS OF EXECUTION PCE      R4 N1616000
        $POST  (R1),JOB             AND $POST FOR JOB                   N1618000
         SPACE 1                                                    R41 N1619000
KRDPOOUT TM    QSEFLAGS,QSEPOUT    TEST FOR XSYS $POST OUTPUT           N1620000
         BZ    KRDPOPRG            BRANCH IF NOT                        N1622000
         L     R1,$OUTPCE          GET ADDRESS OF OUTPUT PCE         R4 N1624000
        $POST  (R1),JOB             AND $POST FOR JOB                   N1626000
         EJECT                                                       R4 N1628000
KRDPOPRG TM    QSEFLAGS,QSEPPRG    TEST FOR XSYS $POST PURGE            N1630000
         BZ    KRDPOJOT            BRANCH IF NOT                        N1632000
         L     R1,$PRGPCE          GET ADDRESS OF PURGE PCE          R4 N1634000
        $POST  (R1),JOB             AND $POST FOR JOB                   N1636000
         SPACE 1                                                    R41 N1637000
KRDPOJOT TM    QSEFLAGS,QSEPJOT    TEST FOR CROSS-SYSTEM $POST JOT      N1638000
         BZ    KRDPOMLM            BRANCH IF NOT                        N1640000
        $POST  $HASPECF,JOT        $POST JOT                            N1642000
         CLI   $WTRWTCT,0          TEST FOR WAITING XWTRS               N1644000
         BE    KRDEND              BRANCH IF NOT                        N1646000
         L     R15,=V($#WTR)       GO POST                              N1648000
         BALR  R14,R15              WAITING XWTRS                       N1650000
         B     KRDEND              SKIP SPECIFIC JOT POSTING            N1652000
         SPACE 1                                                    R41 N1653000
KRDPOMLM TM    QSEFLAGS,QSEPMLM    TEST FOR XSYS $POST MHASPECF,JOT     N1654000
         BZ    KRDEND              BRANCH IF NOT                        N1656000
         NI    MHASPECF+$EWBJOT,255-$EWFJOT  TELL LINE MANAGER          N1658000
         DROP  WC                  DROP QSE ADDRESSABILITY     @OZ20010 N1659000
         EJECT                                                      R41 N1660000
*********************************************************************** N1662000
*                                                                     * N1664000
*        START THE MINIMUM HOLD INTERVAL (&MINHOLD)            @OZ27300 N1666000
*                                                                     * N1668000
*********************************************************************** N1670000
         SPACE 1                                                        N1672000
KRDEND   L     R0,$MINHOLD         GET MINIMUM HOLD INTERVAL   @OZ36307 N1674000
                                   PRINT OFF - SECTION DELETED @OZ36307 N1674200
*                                  THIS CARD DELETED BY APAR   @OZ36307 N1674400
*                                  THIS CARD DELETED BY APAR   @OZ36307 N1674600
*                                  THIS CARD DELETED BY APAR   @OZ36307 N1674800
*                                  THIS CARD DELETED BY APAR   @OZ36307 N1675000
*                                  THIS CARD DELETED BY APAR   @OZ36307 N1675200
*                                  THIS CARD DELETED BY APAR   @OZ36307 N1675400
                                   PRINT ON -- SECTION DELETED @OZ36307 N1675600
         BAL   WA,KSTIMER          SET MINIMUM HOLD INTERVAL   @OZ36307 N1676000
         SPACE 1                                               @OZ27300 N1676500
***************************************************************@OZ27300 N1677000
*                                                              @OZ27300 N1677500
*     IF DUPLEXING -- WRITE ANY RECORDS NOT ALREADY DUPLEXED   @OZ27300 N1678000
*                                                              @OZ27300 N1678500
***************************************************************@OZ27300 N1679000
         SPACE 1                                               @OZ27300 N1679500
         TM    $STATUS,$DUPLEX     DUPLEXING...                @OZ27300 N1680000
         BZ    KWCYCLE             BR IF NO                    @OZ27300 N1680500
         OI    JQBFLAG1,JQB1WRT     SHOW DUPLEX-               @OZ27300 N1681000
         NI    JQBFLAG1,FF-JQB1PRIM  WRITE OPERATION           @OZ27300 N1681500
         BAL   WB,KSETPAKS         SETUP FOR DUPLEX            @OZ27300 N1682000
         BAL   R14,KWRITE          WRITE THE DUPLEX            @OZ27300 N1682500
         MVC   CKPDPXCT,$DPXRATE   SET PRIMARY/DUPLEX RATIO    @OZ27300 N1683000
         NI    JQBFLAG1,FF-JQB1WRT  SHOW DUPLEX-WRT COMPLETE   @OZ27300 N1683500
         EJECT                                                 @OZ27300 N1684000
***************************************************************@OZ27300 N1684500
*                                                              @OZ27300 N1685000
*         *** CHECKPOINT WRITE CYCLE BEGINS HERE ***           @OZ27300 N1685500
*                                                              @OZ27300 N1686000
***************************************************************@OZ27300 N1686500
         SPACE 1                                               @OZ27300 N1687000
KWCYCLE  TM    $STATUS,$CKPTW      CHECKPOINT WRITE REQUIRED...@OZ27300 N1687500
         BO    KW$POST             START WRITE CYCLE IF YES    @OZ27300 N1688000
         TM    CKPSTQE+IPOST,X'80'  ANY TIME LEFT...           @OZ27300 N1688500
         BO    KW$POST             BR IF NO TO ENTER CYCLE     @OZ27300 N1689000
         SPACE 1                                               @OZ27300 N1689500
         L     R1,$EWQTRAK+4            ENTER WRITE            @OZ27300 N1690000
         CL    R1,PCEPCEB-PCEDSECT(,R1)  CYCLE IF ANY          @OZ27300 N1690500
         BNE   KW$POST                    JES2 PROCESSORS      @OZ27300 N1691000
         L     R1,$SSVT                    OR ADDRESS SPACES   @OZ27300 N1691500
         TM    $SVTGECB-SSVT(R1),X'80'      ARE WAITING FOR    @OZ27300 N1692000
         BZ    KW$WAIT                       TRACK GROUPS      @OZ27300 N1692500
         SPACE 2                                               @OZ27300 N1693000
***************************************************************@OZ27300 N1693500
*                                                              @OZ27300 N1694000
*        $WAIT FOR CHECKPOINT REQUEST, ENSURING THAT ALL OTHER @OZ27300 N1694500
*        PROCESSORS ARE $WAITING WHEN CHECKPOINTING BEGINS     @OZ27300 N1695000
*                                                              @OZ27300 N1695500
***************************************************************@OZ27300 N1696000
         SPACE 1                                               @OZ27300 N1696500
KW$POST $POST  $HASPECF,CKPW       $POST US TO ENSURE RE-ENTRY @OZ27300 N1697000
         SPACE 1                                               @OZ27300 N1697500
KW$WAIT $WAIT  CKPW,INHIBIT=NO     $WAIT FOR WRT REQ OR TIMER  @OZ27300 N1698000
         SPACE 1                                               @OZ27300 N1698500
         LM    R0,R1,PCEPCEA       TEST CONTENTS OF            @OZ27300 N1699000
         CLR   R0,R1                DISPATCHER'S READY QUEUE   @OZ27300 N1699500
         BNE   KW$POST             BR IF OTHER PCES ARE READY  @OZ27300 N1700000
         EJECT                                                 @OZ27300 N1700500
***************************************************************@OZ27300 N1701000
*                                                              @OZ27300 N1701500
*        RE-QUEUE PCE'S CURRENTLY $WAITING FOR CHECKPOINT-     @OZ27300 N1702000
*        WRITE-COMPLETION ($CKPT) TO CHECKPOINT-POST QUEUE.    @OZ27300 N1702500
*                                                              @OZ27300 N1703000
*        ANY NEW $CKPT $WAIT'S DURING THIS WRITE OPERATION     @OZ27300 N1703500
*        WILL NOT BE $POSTED UNTIL THE SUBSEQUENT WRITE.       @OZ27300 N1704000
*                                                              @OZ27300 N1704500
***************************************************************@OZ27300 N1705000
         SPACE 1                                               @OZ27300 N1705500
         NI    $STATUS,FF-$CKPTW   RESET CKPT-WRT REQUEST FLAG @OZ27300 N1706000
         OI    $HASPECF+$EWBCKPT,$EWFCKPT  BACK OUT CKPT POST  @OZ27300 N1708000
         SPACE 1                                               @OZ27300 N1708100
         LM    WA,WB,$EWQCKPT      GET PCE'S $WAITING $CKPT    @OZ27300 N1708200
         CL    WB,PCEPCEB-PCEDSECT(,WB)  ANY WAITING...        @OZ27300 N1708300
         BE    KTESTRES            TEST FOR RESOURCE SHORT MSG @OZ32879 N1708400
         STM   WA,WB,$EWQCKPP                 ELSE MOVE        @OZ27300 N1708500
         LA    R1,$EWQCKPP-(PCEPCEA-PCEDSECT)  ENTIRE $CKPT    @OZ27300 N1708600
         ST    R1,PCEPCEB-PCEDSECT(,WA)         QUEUE TO       @OZ27300 N1710000
         ST    R1,PCEPCEA-PCEDSECT(,WB)          $CKPP QUEUE   @OZ27300 N1710500
         SPACE 1                                               @OZ27300 N1710600
         LA    R1,$EWQCKPT-(PCEPCEA-PCEDSECT)  RESET           @OZ27300 N1711000
         ST    R1,$EWQCKPT                      $CKPT          @OZ27300 N1711500
         ST    R1,$EWQCKPT+4                     QUEUE         @OZ27300 N1712000
KTESTRES STCK  $DOUBLE             STORE TIME OF DAY CLOCK     @OZ32879 N1712020
         L     R0,$DOUBLE          GET SECONDS PORTION         @OZ32879 N1712040
         SRL   R0,5                SHIFT 32 SECONDS            @OZ32879 N1712060
         CL    R0,CKPSHORT         MSG ISSUED LAST 32 SEC...   @OZ32879 N1712080
         BNH   KNOEND              BR IF RESENTLY ISSUED       @OZ32879 N1712100
         ICM   WA,12,$RESHORT      TEST LOW RESOURCE BITS      @OZ32879 N1712120
         BZ    KNOEND              BR IF NO, NO MSG            @OZ32879 N1712140
         LA    WB,KTABLBEG         LOAD ADDRESS OF MSG TABLE   @OZ32879 N1712160
         LA    WC,KTABLEND         LOAD ADDRESS END OF TABLE   @OZ32879 N1712180
KLOOP    LTR   WA,WA               TEST FOR HIGH ORDER BIT     @OZ32879 N1712200
         BM    KNOWTO              BR TO ISSUE MSG             @OZ32879 N1712220
KENDTEST LA    WB,4(WB)            BUMP THE TABLE ADDRESS      @OZ32879 N1712240
         CR    WB,WC               END OF TABLE...             @OZ32879 N1712260
         BE    KNOEXIT             BR TO EXIT IF YES           @OZ32879 N1712280
         SLL   WA,1                ELSE,SHIFT TO TEST NEXT BIT @OZ32879 N1712300
         B     KLOOP               BR TO TEST NEXT BIT         @OZ32879 N1712320
KTABLBEG DS    0F                  SHORT RESOURCE CODE TABLE   @OZ32879 N1712340
         DC    C'CMBS'             AWAITING CMBS               @OZ32879 N1712360
         DC    C'LBUF'             AWAITING LOCAL BUFFER       @OZ32879 N1712380
         DC    C'TPBF'             AWAINTING TP BUFFER         @OZ32879 N1712400
         DC    C'SMFB'             AWAITING SMFBUFFER          @OZ32879 N1712420
         DC    C'JQES'             AWAITING JQE                @OZ32879 N1712440
         DC    C'JOES'             AWAITING JOE                @OZ32879 N1712460
KTABLEND EQU   *                   END OF TABLE                @OZ32879 N1712480
KNOWTO   MVC   CKPMSG(KNORESLG),KNORESMG MOVE MSG TO WORK AREA @OZ32879 N1712500
         MVC   CKPMSG+KNOCODLG(4),0(WB) MOVE CODE TO WORK AREA @OZ32879 N1712520
       $$WTO   CKPMSG              ISSUE MSG TO OPERATOR       @OZ32879 N1712540
         B     KENDTEST            BR TO RE-TEST BITS          @OZ32879 N1712560
        $MID   050                                             @OZ32879 N1712580
KNORESMG WTO   '&MID.JES2 RESOURCE SHORTAGE.   CODE = ****  ', @OZ32879CN1712600
               MF=L                                            @OZ32879 N1712620
KNORESCD EQU   *-6,4               RESOURCE CODE               @OZ32879 N1712640
KNORESLG EQU   *-KNORESMG          LENGTH OF MSG               @OZ32879 N1712680
KNOCODLG EQU   KNORESLG-6          LOCATION OF CODE            @OZ32879 N1712700
KNOEXIT  STCK  $DOUBLE             STORE TIME OF DAY CLOCK     @OZ32879 N1712720
         L     R0,$DOUBLE          GET SECONDS PORTION         @OZ32879 N1712740
         SRL   R0,5                SHIFT 32 SECONDS            @OZ32879 N1712760
         ST    R0,CKPSHORT         SAVE MSG ISSUED TIME        @OZ32879 N1712780
         XC    $RESHORT,$RESHORT   RESET SHORT RESOURCE BITS   @OZ32879 N1712800
KNOEND   DS    0H                                              @OZ32879 N1712820
***************************************************************@OZ27300 N1713000
*                                                              @OZ27300 N1713500
*        PROPAGATE CROSS-SYSTEM $POSTS TO OTHER MEMBERS        @OZ27300 N1714000
*                                                              @OZ27300 N1714500
***************************************************************@OZ27300 N1715000
         SPACE 1                                               @OZ27300 N1715500
         USING QSEDSECT,R1         PROVIDE QSE ADDRESSABILITY  @OZ27300 N1716000
         SPACE 1                                               @OZ27300 N1716500
KXSYS    CLI   $AQSE,0             ANY CROSS-SYSTEM $POSTS...  @OZ27300 N1717000
         BE    KWXSYSCL            BR IF NO                    @OZ27300 N1717500
         L     R1,$QSE1             ELSE GET ADDR OF QSE'S     @OZ27300 N1718000
         LH    R0,$QSENO             AND NUMBER OF MEMBERS     @OZ27300 N1718500
         SPACE 1                                               @OZ27300 N1719000
         OC    QSEFLAGS,$AQSE      PROPAGATE CROSS-SYS         @OZ27300 N1719500
         LA    R1,QSELEN(,R1)       $POSTS TO ALL OTHER        @OZ27300 N1720000
         BCT   R0,*-10               MEMBERS AND THEN          @OZ27300 N1720500
         MVI   $AQSE,0                CLEAR XSYS BITS          @OZ27300 N1721000
         SPACE 1                                               @OZ27300 N1721500
KWXSYSCL L     R1,$AQSE            CLEAR CROSS-SYSTEM          @OZ27300 N1722000
         NI    QSEFLAGS,FF-QSEPOST  $POSTS IN OUR QSE          @OZ27300 N1722500
         EJECT                                                 @OZ27300 N1723000
***************************************************************@OZ27300 N1723500
*                                                              @OZ27300 N1724000
*     REPLENISH THE AVAILABLE TRACK GROUPS FOR THIS MEMBER     @OZ27300 N1724500
*                                                              @OZ27300 N1725000
***************************************************************@OZ27300 N1725500
         SPACE 1                                               @OZ27300 N1726000
         BAL   R14,KBLOB           REFILL THE TRACK GRP BLOCK  @OZ27300 N1726500
*                                   BUT DON'T WAKE UP ANY      @OZ27300 N1727000
*                                    WAITING ADDRESS SPACES    @OZ27300 N1727500
*                                     UNTIL WRITE SCHEDULED    @OZ27300 N1728000
         SPACE 1                                               @OZ27300 N1728500
***************************************************************@OZ27300 N1729000
*                                                              @OZ27300 N1729500
*        TIME-STAMP THIS CHECKPOINT WRITE CYCLE                @OZ27300 N1730000
*                                                              @OZ27300 N1730500
*  INCREMENT THE WRITE VERIFICATION CHECK RECORD (VALUE 1-128) @OZ27300 N1731000
*                                                              @OZ27300 N1731500
***************************************************************@OZ27300 N1732000
         SPACE 1                                               @OZ27300 N1732500
         L     R1,$AQSE            RE-LOAD OUR QSE ADDRESS     @OZ27300 N1733000
         STCK  $SIDTIME            STORE TOD INTO HCT          @OZ27300 N1733500
         MVC   QSESITIM,$SIDTIME    AND INTO OUR QSE           @OZ27300 N1734000
         L     R1,$ESYSQSE         IS A $ESYS                  @OZ27300 N1734500
         LTR   R1,R1                IN PROGRESS...             @OZ27300 N1735000
         BZ    *+10                BR IF NO                    @OZ27300 N1735500
         MVC   QSESITIM,$SIDTIME    ELSE SET TOD IN $ESYS QSE  @OZ27300 N1736000
         SPACE 1                                               @OZ27300 N1736500
         DROP  R1                  KILL QSE ADDRESSABILITY     @OZ27300 N1737000
         SPACE 2                                               @OZ27300 N1737500
         LA    R0,1                SET TO 1 IF OVERFLOW        @OZ27300 N1738000
         ICM   R1,1,$WCHECK        GET CURRENT WRITE CHECK VAL @OZ27300 N1738500
         BM    *+8                 BR IF OVERFLOW (GT 127)     @OZ27300 N1739000
         LA    R0,1(,R1)           INCREMENT                   @OZ27300 N1739500
         STC   R0,$WCHECK           WRITE CHECK                @OZ27300 N1740000
         STC   R0,JQBCKVAL           VALUE                     @OZ27300 N1740500
         SPACE 2                                               @OZ27300 N1741000
         L     R0,$MASTER          MOVE HCT                    @OZ27300 N1741500
         LA    R1,$SAVELEN          CHECKPOINT                 @OZ27300 N1742000
         LA    R14,$SAVEBEG          VARIABLES                 @OZ27300 N1742500
         LR    R15,R1                 FROM HCT TO              @OZ27300 N1743000
         MVCL  R0,R14                  MASTER RECORD           @OZ27300 N1743500
         EJECT                                                 @OZ27300 N1744000
***************************************************************@OZ27300 N1744500
*                                                              @OZ27300 N1745000
*    WRITE ALL CHANGED RECORDS TO THE PRIMARY CKPT DATA SET    @OZ27300 N1745500
*                                                              @OZ27300 N1746000
***************************************************************@OZ27300 N1746500
         SPACE 1                                               @OZ27300 N1747000
         OI    JQBFLAG1,JQB1PRIM+JQB1WRT SET FOR PRIMARY WRITE @OZ27300 N1747500
         SPACE 1                                               @OZ27300 N1748000
         BAL   WB,KSETPAKS         SETUP PACKETS FOR PRIMARY   @OZ27300 N1748500
         BAL   WB,KFIXMSTR         SETUP MASTER I/O AREA       @OZ27300 N1749000
         BAL   R14,KWRITE          START THE PRIMARY WRITE     @OZ27300 N1749500
         SPACE 1                                               @OZ27300 N1750000
***************************************************************@OZ27300 N1750500
*                                                              @OZ27300 N1751000
* PRIMARY WRITE SCHEDULED - NOTIFY WAITORS OF AVAILABLE TRACKS @OZ27300 N1751500
*                                                              @OZ27300 N1752000
***************************************************************@OZ27300 N1752500
         SPACE 1                                               @OZ27300 N1753000
         USING SSVT,WA             PROVIDE SSVT ADDRESSABILITY @OZ27300 N1753500
         SPACE 1                                               @OZ27300 N1754000
         L     WA,$SSVT            POINT TO SSVT               @OZ27300 N1754500
         TM    $BLBFLAG,KBLBFILL   TGB FILLED...               @OZ27300 N1755000
         BZ    KWTFINAL            BR IF NO                    @OZ27300 N1755500
        $POST  $HASPECF,TRAK        ELSE POST JES2 PROCESSORS  @OZ27300 N1756000
         L     R0,$SVTGECB         POINT TO SSSM'S ECB         @OZ27300 N1756500
         SPACE 1                                               @OZ27300 N1757000
KTRKTRY  LTR   R0,R0               ALREADY WAITING...          @OZ27300 N1757500
         BM    KTRKXMP             BR IF YES TO XMPOST         @OZ27300 N1758000
         L     R1,=A(X'7F000000')  GET POST CODE               @OZ27300 N1758500
         CS    R0,R1,$SVTGECB      TRY QUICK POST              @OZ27300 N1759000
         BE    KWTFINAL            BR IF SUCCESSFUL            @OZ27300 N1759500
         B     KTRKTRY              ELSE TRY AGAIN             @OZ27300 N1760000
         SPACE 1                                               @OZ27300 N1760500
KTRKXMP  TM    $SVTGECB,X'20'      XMPOST ALREADY SCHEDULED... @OZ27300 N1761000
         BO    KWTFINAL            BR IF YES                   @OZ27300 N1761500
         OI    $SVTGECB,X'20'       ELSE SHOW XMPOST SCHEDULED @OZ27300 N1762000
         LA    R1,$SVTGECB         PREPARE                     @OZ27300 N1762500
         ST    R1,CKPMSG            CROSS-MEMORY               @OZ27300 N1763000
         L     R1,$SVTGASC           POST                      @OZ27300 N1763500
         ST    R1,CKPMSG+4            ELEMENT                  @OZ27300 N1764000
         L     R1,CVTPTR               AND POST                @OZ27300 N1764500
         LA    R1,CVTBRET-CVT(,R1)      WAITING                @OZ27300 N1765000
         ST    R1,CKPMSG+8               ADDRESS               @OZ27300 N1765500
        $XMPOST CKPMSG                    SPACE(S)             @OZ27300 N1766000
         EJECT                                                 @OZ27300 N1766500
***************************************************************@OZ27300 N1767000
*                                                              @OZ27300 N1767500
*     IF THIS IS THE FINAL MAS WRITE (MINHOLD EXPIRED)...      @OZ27300 N1768000
*                                                              @OZ27300 N1768500
*      1) SHOW QUEUES ARE ON DASD TO PROHIBIT ANY MORE UPDATES @OZ27300 N1769000
*      2) DISABLE DUPLEXING AFTER FINAL PRIMARY WRITE          @OZ27300 N1769500
*                                                              @OZ27300 N1770000
***************************************************************@OZ27300 N1770500
         SPACE 1                                               @OZ27300 N1771000
KWTFINAL TM    CKPFLAG1,CKP1MAS    MULTI ACCESS SPOOL...       @OZ27300 N1771500
         BZ    KWRPWAIT            BR IF NO                    @OZ27300 N1772000
         TM    CKPSTQE+IPOST,X'80' HAS MINHOLD EXPIRED...      @OZ27300 N1772500
         BZ    KWRPWAIT            BR IF NO                    @OZ27300 N1773000
         TM    $SVSTUS,$SVSTIRV    NODAL WRMSTRT IN PROGRESS...@OZ27300 N1773500
         BO    KWRPWAIT            BR IF YES (EXTEND CYCLE)    @OZ27300 N1774000
         SPACE 1                                               @OZ27300 N1774100
         OI    $STATUS,$QSONDA      ELSE PROHIBIT Q-CHANGES    @OZ27300 N1774500
         MVC   CKPDPXCT,$ZEROS       AND DUPLEXING ON LAST WRT @OZ27300 N1775000
         SPACE 1                                               @OZ27300 N1775500
         OI    CKPFLAG1,CKP1FNLW   *** SHOW FINAL-WRITE ***    @OZ27300 N1776000
         SPACE 1                                               @OZ27300 N1776500
         DROP  WA                  KILL SSVT ADDRESSABILITY    @OZ27300 N1777000
         SPACE 1                                               @OZ27300 N1777500
***************************************************************@OZ27300 N1778000
*                                                              @OZ27300 N1778500
*       WAIT FOR PRIMARY CHECKPOINT WRITE TO COMPLETE          @OZ27300 N1779000
*                                                              @OZ27300 N1779500
*  THEN $POST CHECKPOINT COMPLETE BEFORE ANY DUPLEX OPERATION  @OZ27300 N1780000
*                                                              @OZ27300 N1780500
***************************************************************@OZ27300 N1781000
         SPACE 1                                               @OZ27300 N1781500
KWRPWAIT BAL   R14,KWRITE          WAIT FOR PRIMARY WRITE      @OZ27300 N1782000
         SPACE 1                                               @OZ27300 N1782500
        $POST  $HASPECF,CKPP       $POST PROCESSORS FOR        @OZ27300CN1783000
                                     CKPT WRITE COMPLETION     @OZ27300 N1783500
         SPACE 1                                               @OZ27300 N1784000
         L     R1,$MCONPCE         ALSO WAKE-UP                @OZ27300 N1784500
         LTR   R1,R1                REMOTE CONSOLE             @OZ27300 N1785000
         BZ    KCKPTIME              PROCESSOR                 @OZ27300 N1785500
        $POST  (R1),WORK              (IF ANY)                 @OZ27300 N1786000
         EJECT                                                 @OZ27300 N1786500
***************************************************************@OZ27300 N1787000
*                                                              @OZ27300 N1787500
*    RESET PRINT/PUNCH TIMER (&CKPTIME) FOR NON-MAS SYSTEM     @OZ27300 N1788000
*                                                              @OZ27300 N1788500
***************************************************************@OZ27300 N1789000
         SPACE 1                                               @OZ27300 N1789500
KCKPTIME TM    CKPFLAG1,CKP1MAS    MULTI-ACCESS SPOOL...       @OZ27300 N1790000
         BO    KDUPLEX             BR IF YES                   @OZ27300 N1790500
         BAL   WA,KTTIMER           ELSE RESTART               @OZ27300 N1791000
         L     R0,$CKPTIME           PRINT/PUNCH               @OZ27300 N1791500
         BAL   WA,KSTIMER             CHECKPOINT INTERVAL      @OZ27300 N1792000
         SPACE 1                                               @OZ27300 N1792500
***************************************************************@OZ27300 N1793000
*                                                              @OZ27300 N1793500
*      IF DUPLEXING -- WRITE ALL RECORDS NOT YET DUPLEXED      @OZ27300 N1794000
*                                                              @OZ27300 N1794500
*    IF SHUTDOWN IN PROGRESS -- ENSURE DUPLEX AT PRIMARY LEVEL @OZ27300 N1794600
*                                                              @OZ27300 N1794700
***************************************************************@OZ27300 N1795000
         SPACE 1                                               @OZ27300 N1795500
KDUPLEX  TM    $STATUS,$DUPLEX     DUPLEXING...                @OZ27300 N1796000
         BZ    KENDLOOP            BR IF NO                    @OZ27300 N1797000
         TM    $STATUS,$SYSEXIT    SHUTDOWN IN PROGRESS...     @OZ27300 N1797200
         BO    KWRDPLX             FORCE DUPLEX WRITE IF YES   @OZ27300 N1797400
         LH    R1,CKPDPXCT          ELSE DECR DUPLEX CTR AND   @OZ27300 N1798000
         BCT   R1,KAFTDPLX           BR IF NOT TIME TO DUPLEX  @OZ27300 N1798500
         SPACE 1                                               @OZ27300 N1799000
KWRDPLX  OI    JQBFLAG1,JQB1WRT     SHOW DUPLEX-               @OZ27300 N1799500
         NI    JQBFLAG1,FF-JQB1PRIM  WRITE OPERATION           @OZ27300 N1800000
         BAL   WB,KSETPAKS         SET JQB FOR DUPLEX WRITE    @OZ27300 N1800500
         BAL   R14,KWRITE          WRITE THE DUPLEX CHECKPOINT @OZ27300 N1801000
         LH    R1,$DPXRATE         GET PRIMARY/DUPLEX RATIO    @OZ27300 N1801500
         SPACE 1                                               @OZ27300 N1802000
KAFTDPLX STH   R1,CKPDPXCT         RESET DUPLEX COUNTER        @OZ27300 N1802500
         SPACE 1                                               @OZ27300 N1803000
***************************************************************@OZ27300 N1803500
*                                                              @OZ27300 N1804000
*   PRIMARY/DUPLEX WRITE(S) COMPLETE -- CONTINUE WRITE CYCLE   @OZ27300 N1804500
*                                                              @OZ27300 N1805000
***************************************************************@OZ27300 N1805500
         SPACE 1                                               @OZ27300 N1806000
KENDLOOP NI    JQBFLAG1,FF-JQB1WRT PRIM/DUPLEX WRITE(S) DONE   @OZ27300 N1806500
         TM    CKPFLAG1,CKP1MAS    MULTI ACCESS SPOOL...       @OZ27300 N1807000
         BO    KTFINAL             BR IF YES                   @OZ27300 N1807500
         TM    $STATUS,$SYSEXIT    SHUTDOWN IN PROGRESS...     @OZ27300 N1808000
         BZ    KWCYCLE             BR IF NO TO RE-CYCLE        @OZ27300 N1808500
         TM    $EXECPCE,X'80'      XEQ SHUTDOWN COMPLETE...    @OZ27300 N1809000
         BZ    KWCYCLE             BR IF NO TO RE-CYCLE        @OZ27300 N1809500
         OI    $STATUS,$QSONDA     SHOW QUEUES ON DASD         @OZ27300 N1810000
         B     KSHUTDWN            BR TO SHUTDOWN PROCESSING   @OZ27300 N1810500
         SPACE 1                                               @OZ27300 N1811000
KTFINAL  TM    CKPFLAG1,CKP1FNLW   WAS THIS THE FINAL WRITE... @OZ27300 N1811500
         BZ    KWCYCLE             LOOP IF NO                  @OZ27300 N1812000
         NI    CKPFLAG1,FF-CKP1FNLW  ELSE RESET FINAL-WRT BIT  @OZ27300 N1812500
         EJECT                                                 @OZ27300 N1813000
***************************************************************@OZ27300 N1813500
*                                                              @OZ27300 N1814000
*  MAS CKPT CYCLE COMPLETE -- RESET CKPT LOCK AND DASD RESERVE @OZ27300 N1814500
*                                                              @OZ27300 N1815000
***************************************************************@OZ27300 N1815500
         SPACE 1                                               @OZ27300 N1816000
         USING JQBCCWE,WD          PROVIDE CCWE ADDRESSABILITY @OZ27300 N1816500
         SPACE 1                                               @OZ27300 N1817000
KRSETLOK OI    JQBFLAG1,JQB1PRIM+JQB1WRT+JQB1LOCK  LOCK RESET  @OZ27300 N1817500
         BAL   WB,KSETPAKS         ENSURE JQB SET FOR PRIMARY  @OZ27300 N1817800
         LA    WD,JQBLOCK          START CCW CHAIN WITH        @OZ27300 N1818000
         ST    WD,JQBSTART          LOCK RESET PACKET          @OZ27300 N1818500
         MVC   JQBSEEK,$NUMDA              SET                 @OZ27300 N1819000
         MVC   JQBSEEK+1(6),JQBCADDR        IOBSEEK            @OZ27300 N1819500
         SPACE 1                                               @OZ27300 N1820000
         MVC   JQBLKEY,$ZEROS      RESET KEY AND DATA          @OZ27300 N1820500
         MVC   JQBLDATA,$ZEROS      FIELDS TO ZEROS            @OZ27300 N1821000
         SPACE 1                                               @OZ27300 N1821500
         MVC   JQBVERFY,KVERFY     INITIALIZE I/O VERIFY AREA  @OZ27300 N1822000
         MVC   JQBERRCT,CKPRETRY    AND APPENDAGE RETRY CTR    @OZ27300 N1822500
         LA    R1,PCEDADCT            START LOCK-RESET         @OZ27300 N1823000
        $EXCP  (R1),TYPE=VR,WAIT=YES   OPERATION               @OZ27300 N1823500
         BNO   KREFRESH            BR IF I/O ERROR             @OZ27300 N1824000
         SPACE 1                                               @OZ27300 N1824100
         CLC   JQBVERFY,KVERFY     INTERRUPTED I/O...          @OZ27300 N1824500
         BE    KREFRESH            BR IF YES                   @OZ27300 N1825000
         SPACE 1                                               @OZ27300 N1825500
KRLOKOK  NI    JQBFLAG1,FF-JQB1WRT-JQB1LOCK-JQB1LOKD  RESET    @OZ27300 N1826000
         SPACE 1                                               @OZ27300 N1826500
        $RELEASE                   RELEASE CHECKPOINT RESERVE  @OZ35278 N1827000
         SPACE 1                                               @OZ27300 N1827500
         DROP  WD                  KILL CCWE ADDRESSABILITY    @OZ27300 N1828000
         EJECT                                                 @OZ27300 N1828500
***************************************************************@OZ27300 N1829000
*                                                              @OZ27300 N1829500
*        IF $PJES2 -- SHUTDOWN THE CHECKPOINT PROCESSOR        @OZ27300 N1830000
*                                                              @OZ27300 N1830500
***************************************************************@OZ27300 N1831000
         SPACE 1                                               @OZ27300 N1831500
         TM    $STATUS,$SYSEXIT    SHUTDOWN IN PROGRESS...     @OZ27300 N1832000
         BZ    KDORMANT            BR IF NO                    @OZ27300 N1832500
         TM    $EXECPCE,X'80'      XEQ SHUTDOWN COMPLETE...    @OZ27300 N1833000
         BZ    KDORMANT            BR IF NO                    @OZ27300 N1833500
         SPACE 1                                               @OZ27300 N1834000
KSHUTDWN OI    $CKPTPCE,X'80'      SHOW CKPT SHUTDOWN COMPLETE @OZ27300 N1834500
         OI    $COMMPCE,X'80'      TELL HASPCOMM WE'RE DONE    @OZ27300 N1835000
         L     R1,$COMMPCE         GET HASPCOMM PCE ADDRESS    @OZ27300 N1835500
        $POST  (R1),WORK            AND WAKE IT UP             @OZ27300 N1836000
         SPACE 1                                               @OZ27300 N1836500
KWT4EVR $WAIT  WORK                ENTER WAIT STATE            @OZ27300 N1837000
         B     KWT4EVR             WAIT FOREVER                @OZ27300 N1837500
         EJECT                                                 @OZ27300 N1838000
***************************************************************@OZ27300 N1838500
*                                                              @OZ27300 N1839000
*    $WAIT FOR MINIMUM DORMANT INTERVAL (IF ANY)               @OZ27300 N1839500
*                                                              @OZ27300 N1840000
***************************************************************@OZ27300 N1840500
         SPACE 1                                               @OZ27300 N1841000
KDORMANT L     R0,$MINDORM         START TIMER FOR             @OZ27300 N1841500
         BAL   WA,KSTIMER           MINIMUM DORMANT INTERVAL   @OZ27300 N1842000
         TM    CKPSTQE+IPOST,X'80' IS TIMER GOING...           @OZ27300 N1842500
         BO    KQSUSE              BR IF NO                    @OZ27300 N1843000
        $WAIT  WORK                WAIT FOR MIN DORM INTERVAL  @OZ27300 N1843500
         SPACE 1                                               @OZ27300 N1844000
***************************************************************@OZ27300 N1844500
*                                                              @OZ27300 N1845000
*    WAIT FOR REMAINDER OF DORMANT INTERVAL (MAXDORM-MINDORM)  @OZ27300 N1845500
*                                                              @OZ27300 N1846000
* THIS PERIOD IS TERMINATED EARLY WHEN A QUEUE-REQUEST IS MADE @OZ27300 N1846500
*                                                              @OZ27300 N1847000
***************************************************************@OZ27300 N1847500
         SPACE 1                                               @OZ27300 N1848000
KQSUSE   L     R1,$EWQCKPT+4            BR IF ANY              @OZ27300 N1848500
         CL    R1,PCEPCEB-PCEDSECT(,R1)  PCES WAITING          @OZ27300 N1849000
         BNE   KREAD                      FOR $CKPT            @OZ27300 N1849500
         SPACE 1                                               @OZ27300 N1850000
         TM    MHASPECF+$EWBCKPT,$EWFCKPT   BR IF LINE-        @OZ27300 N1850500
         BO    KREAD                         MANAGER REQUEST   @OZ27300 N1851000
         SPACE 1                                               @OZ27300 N1851500
         L     R1,$EWQTRAK+4            BR IF                  @OZ27300 N1852000
         CL    R1,PCEPCEB-PCEDSECT(,R1)  JES2                  @OZ27300 N1852500
         BNE   KREAD                      PROCESSORS           @OZ27300 N1853000
         L     R1,$SSVT                    OR ADDRESS          @OZ27300 N1853500
         TM    $SVTGECB-SSVT(R1),X'80'      SPACES WAITING     @OZ27300 N1854000
         BO    KREAD                         FOR TRACKS        @OZ27300 N1854500
         SPACE 1                                               @OZ27300 N1855000
         TM    $MCONPCE,$MCONWAT   BR IF RMT CONSOLE PROCESSOR @OZ27300 N1855500
         BO    KREAD                IS WAITING FOR WORK        @OZ27300 N1856000
         SPACE 1                                               @OZ27300 N1856500
         L     R0,$MAXDORM         START TIMER                 @OZ27300 N1857000
         S     R0,$MINDORM          FOR REMAINING              @OZ27300 N1857500
         BNM   KREAD                DORMANT INTERVAL           @OZ27300 N1858000
         BAL   WA,KSTIMER            (MAXDORM-MINDORM)         @OZ27300 N1858500
        $WAIT  CKPW,INHIBIT=NO     WAIT FOR $QSUSE OR TIMER    @OZ27300 N1859000
         BAL   WA,KTTIMER          STOP TIMER                  @OZ27300 N1859500
         B     KREAD               RETURN TO READ CYCLE        @OZ27300 N1860000
         TITLE 'HASP CHECKPOINT PROCESSOR -- KREFRESH ROUTINE' @OZ27300 N1860500
***************************************************************@OZ27300 N1861000
*                                                              @OZ27300 N1861500
*    KREFRESH -- THIS ROUTINE IS ENTERED WHEN THE PRIMARY      @OZ27300 N1862000
*                CHECKPOINT DATA SET IS KNOWN TO BE BAD.       @OZ27300 N1862500
*                                                              @OZ27300 N1863000
*     THE CALLING ROUTINE HAS DETECTED ONE OF THE FOLLOWING... @OZ27300 N1863500
*                                                              @OZ27300 N1864000
*        1) I/O ERROR DURING CHANNEL PROGRAM TO OBTAIN THE     @OZ27300 N1864500
*             CHECKPOINT LOCK AND READ THE MASTER/CHECK RCDS   @OZ27300 N1865000
*                                                              @OZ27300 N1865500
*        2) I/O ERROR ATTEMPTING TO READ CHANGED RECORDS       @OZ27300 N1866000
*                                                              @OZ27300 N1866500
*        3) PREVIOUS MEMBER FAILED DURING WRITE OPERATION      @OZ27300 N1867000
*                                                              @OZ27300 N1867500
*        4) I/O ERROR ATTEMPTING TO RESET LOCK WHEN ALL DONE   @OZ27300 N1868000
*                                                              @OZ27300 N1868500
*   IF CHECKPOINT DUPLEXING IS ENABLED, THEN THIS MEMBER WILL  @OZ27300 N1869000
*   IMMEDIATELY STOP PROCESSING (ERRORS 1,2,3 ONLY). IT IS     @OZ27300 N1869500
*   ASSUMED THAT THE DUPLEX DATA SET IS GOOD AT THIS TIME, AND @OZ27300 N1870000
*   (IF THE ERROR WAS LOCAL) THIS MEMBER MIGHT DESTROY THE     @OZ27300 N1870500
*   PRIMARY DATA SET IF AN ATTEMPT IS MADE TO RE-WRITE IT.     @OZ27300 N1871000
*                                                              @OZ27300 N1871500
*   IF NOT DUPLEXING, AN EXTRA ATTEMPT IS MADE TO OBTAIN THE   @OZ27300 N1872000
*   CHECKPOINT LOCK STAND-ALONE (I.E., NO OTHER RECORDS IN     @OZ27300 N1872500
*   THE I/O OPERATION). IF SUCCESSFUL AT GETTING THE LOCK,     @OZ27300 N1873000
*   THEN AN ATTEMPT WILL BE MADE TO REFORMAT THE PRIMARY       @OZ27300 N1873500
*   CHECKPOINT DATA SET FROM THE ACTUAL MASTER AND QUEUE AREAS @OZ27300 N1874000
*   IN THIS MEMBER'S STORAGE.                                  @OZ27300 N1874500
*                                                              @OZ27300 N1875000
*   IN EITHER OF THE ABOVE CASES, THIS MEMBER STOPS PROCESSING @OZ27300 N1875500
*   WHILE HOLDING THE CHECKPOINT LOCK (IF OBTAINED). ALL OTHER @OZ27300 N1876000
*   MEMBERS MUST BE STOPPED AND A COMPLEX-WIDE WARM START      @OZ27300 N1876500
*   MUST BE PERFORMED BECAUSE THE PRIMARY CHECKPOINT DATA SET  @OZ27300 N1877000
*   IS NOW DOWNLEVEL.                                          @OZ27300 N1877500
*                                                              @OZ27300 N1878000
* NOTE - FOR ERROR 4, IF WE ARE SUCCESSFUL IN OBTAINING THE    @OZ27300 N1878500
*        CHECKPOINT LOCK, CONTROL PASSES BACK TO THE KRSETLOK  @OZ27300 N1879000
*        ROUTINE. IF THE LOCK OPERATION DOES NOT GET AN I/O    @OZ27300 N1879500
*        ERROR, BUT ANOTHER MEMBER OWNS IT, THIS MEMBER        @OZ27300 N1880000
*        ASSUMES THAT IT IS RESET.                             @OZ27300 N1880500
*                                                              @OZ27300 N1881000
***************************************************************@OZ27300 N1881500
         SPACE 1                                               @OZ27300 N1882000
         USING JQBCCWE,WD          PROVIDE CCWE ADDRESSABILITY @OZ27300 N1882500
         SPACE 1                                               @OZ27300 N1883000
KREFRESH CLC   $CHKPT,$CHKPT2      DUPLEX AVAILABLE...         @OZ27300 N1883500
         BE    KTRYLOCK            BR IF NO                    @OZ27300 N1884000
         LA    WA,K10               ELSE CRASH LEAVING A       @OZ27300 N1884500
         B     KLOGOUT               GOOD DUPLEX CHECKPOINT    @OZ27300 N1885000
         EJECT                                                 @OZ27300 N1885500
KTRYLOCK OI    JQBFLAG1,JQB1LOCK+JQB1READ  GET-LOCK OPERATION  @OZ27300 N1886000
         LA    WD,JQBLOCKV         START CCW CHAIN WITH        @OZ27300 N1886500
         ST    WD,JQBSTART          LOCK VERIFY PACKET         @OZ27300 N1887000
         MVC   JQBSEEK+1(6),JQBCADDR   SET IOBSEEK             @OZ27300 N1887500
         LA    R1,JQBLOCK+(JQBCSET-JQBCCWE)  NEXT PACKET       @OZ27300 N1888000
         ST    R1,JQBLTIC+4                   RESETS THE LOCK  @OZ27300 N1888500
         LRA   R1,0(,R1)                       IF JQBLOCKV     @OZ27300 N1889000
         STCM  R1,7,JQBLTNXT+CCWADDR            SUCCESSFUL     @OZ27300 N1889500
         SPACE 1                                               @OZ27300 N1890000
         DROP  WD                  KILL CCWE ADDRESSABILITY    @OZ27300 N1890500
         SPACE 1                                               @OZ27300 N1891000
         MVI   JQBKEY,0            SEARCH FOR ZERO KEY         @OZ27300 N1891500
         MVC   JQBLKEY(8),$BLANKS    IF ZERO KEY,              @OZ27300 N1892000
         MVC   JQBLDATA(8),$BLANKS    SET OUR                  @OZ27300 N1892500
         MVC   JQBLKEY(1),$SIDBUSY     SYSTEM ID               @OZ27300 N1893000
         MVC   JQBLKEY+1(L'$SID),$SID   INTO LOCK              @OZ27300 N1893500
         MVC   JQBLDATA(1),$SIDBUSY      RECORD KEY            @OZ27300 N1894000
         MVC   JQBLDATA+1(L'$SID),$SID    AND DATA FIELDS      @OZ27300 N1894500
         LH    WF,CKPRETRY         SET I/O ERROR RETRY CTR     @OZ27300 N1895000
         SPACE 1                                               @OZ27300 N1895500
KTRYAGN  MVC   JQBVERFY,KVERFY     INITIALIZE I/O VERIFICATION,@OZ27300 N1896000
         MVC   JQBERRCT,CKPRETRY    APPENDAGE RETRY COUNTER,   @OZ27300 N1896500
         MVI   JQBADKEY,FF           AND LOCK READ-IN AREAS    @OZ27300 N1897000
         LA    R1,PCEDADCT            OBTAIN CHECKPOINT LOCK   @OZ27300 N1897500
        $EXCP  (R1),TYPE=VR,WAIT=YES   (STAND ALONE)           @OZ27300 N1898000
         BO    KTRYCHEK            BR IF I/O POSTED SUCCESSFUL @OZ27300 N1898500
         BCT   WF,KTRYAGN           ELSE RETRY I/O             @OZ27300 N1899000
         SPACE 1                                               @OZ27300 N1899500
KTRYABND LA    WA,K11              ALL RETRIES FAILED --       @OZ27300 N1900000
         TM    JQBFLAG1,JQB1WRT+JQB1LOCK  K11 = CAN'T FORMAT   @OZ27300 N1900500
         BNO   KLOGOUT                           W/O LOCK      @OZ27300 N1901000
         LA    WA,K12                     K12 = CKPT GOOD, BUT @OZ27300 N1901500
         B     KLOGOUT                           LOCK DAMAGED  @OZ27300 N1902000
         SPACE 1                                               @OZ27300 N1902500
KTRYCHEK CLC   JQBVERFY,KVERFY     INTERRUPTED I/O...          @OZ27300 N1903000
         BE    KTRYABND            BR IF YES TO ABEND          @OZ27300 N1903500
         NI    JQBFLAG1,FF-JQB1READ  ELSE RESET READ BIT       @OZ27300 N1903800
         TM    JQBFLAG1,JQB1WRT+JQB1LOCK  CALLED BY KRSETLOK...@OZ27300 N1904000
         BNO   KTRYTKEY            BR IF NO                    @OZ27300 N1904500
         CLI   JQBADKEY,FF         HAVE WE OBTAINED LOCK...    @OZ27300 N1905000
         BE    KRSETLOK            BR TO RESET AGAIN IF YES    @OZ27300 N1905500
         B     KRLOKOK              ELSE ASSUME GOOD AND RESET @OZ27300 N1906000
         SPACE 1                                               @OZ27300 N1906500
KTRYTKEY NI    JQBFLAG1,FF-JQB1LOCK  LOCK OPERATION FINISHED   @OZ27300 N1907000
         CLI   JQBADKEY,FF         HAVE WE OBTAINED LOCK...    @OZ27300 N1907500
         BE    KTRYFMT             BR TO FORMAT IF YES         @OZ27300 N1908000
         CLC   JQBADKEY,$SIDBUSY    ELSE WAS LOCK-HOLDER US... @OZ27300 N1908500
         BNE   KTRYABND            BR TO ABEND IF NO           @OZ27300 N1909000
         SPACE 1                                               @OZ27300 N1910000
KTRYFMT  BAL   R14,KFORMAT         REFORMAT PRIMARY CHECKPOINT @OZ27300 N1911000
         LA    WA,K14              SHUTDOWN WITH GOOD (BUT     @OZ27300 N1911500
         B     KLOGOUT              DOWN-LEVEL) PRIMARY        @OZ27300 N1912000
         TITLE 'HASP CHECKPOINT PROCESSOR -- KLOGOUT ROUTINE'  @OZ27300 N1912500
***************************************************************@OZ27300 N1913000
*                                                              @OZ27300 N1913500
*    KLOGOUT -- LOG OUT CHECKPOINT DATA AND SHUTDOWN JES2      @OZ27300 N1914000
*                                                              @OZ27300 N1914500
*    ON ENTRY - WA = ADDRESS OF JES2 $ERROR MACRO EXPANSION    @OZ27300 N1915000
*                                                              @OZ27300 N1915500
***************************************************************@OZ27300 N1916000
         SPACE 1                                               @OZ27300 N1916500
KLOGOUT  STM   R14,R15,$DOUBLE     SAVE REGISTERS              @OZ42638 N1916980
         STM   R0,R1,$DWORK         FOR DE-BUGGING             @OZ42638 N1916990
         MVC   CKPMSG,KDUMPMSG     MOVE BASE MSG TEXT          @OZ42638 N1917000
         MVC   KDUMPCOD+CKPMSG,KERRCODE(WA)  AND INSERT CODE   @OZ27300 N1917500
       $$WTO   CKPMSG              TELL OPERATOR               @OZ27300 N1918000
         L     R1,$MASTER          DUMP THE ACTUAL             @OZ27300 N1918500
         ST    R1,CKPMSG            MASTER RECORD              @OZ27300 N1919000
         AL    R1,$MASTERL           FROM THIS                 @OZ27300 N1919500
         BCTR  R1,0                   MEMBER'S                 @OZ27300 N1920000
         ST    R1,CKPMSG+4             STORAGE                 @OZ27300 N1920500
         L     R1,$JOBQPTR         DUMP                        @OZ27300 N1921000
         ST    R1,CKPMSG+8          THE                        @OZ27300 N1921500
         LH    R0,$JOBRECN           ACTUAL                    @OZ27300 N1922000
         AH    R0,$JOTRECN            JOB                      @OZ27300 N1922500
         SLL   R0,12                   QUEUE                   @OZ27300 N1923000
         ALR   R1,R0                    AND                    @OZ27300 N1923500
         BCTR  R1,0                      JOT                   @OZ27300 N1924000
         ST    R1,CKPMSG+12               STORAGE              @OZ27300 N1924500
         OI    CKPMSG+12,X'80'     TERMINATE SDUMP LIST        @OZ27300 N1925000
         MVC   KDHSYSID,$SID         SET SYSTEM ID             @OZ27300 N1925500
         MVC   KDHCODE,KERRCODE(WA)   AND $ERROR CODE          @OZ27300 N1926000
         PUSH  PRINT               SUPPRESS SDUMP              @OZ27300 N1926500
         PRINT NOGEN                EXPANSION                  @OZ27300 N1927000
         SPACE 1                                               @OZ27300 N1927500
         SDUMP HDRAD=KDHEADER,LIST=CKPMSG  LOGOUT CHECKPOINT   @OZ27300 N1928000
         SPACE 1                                               @OZ27300 N1928500
         POP   PRINT               RESET PRINT OPTIONS         @OZ27300 N1929000
         LM    R14,R15,$DOUBLE     RESTORE REGISTERS           @OZ42638 N1929100
         LM    R0,R1,$DWORK         FOR DE-BUGGING             @OZ42638 N1929200
         BR    WA                  BR TO $ERROR                @OZ27300 N1929500
         SPACE 2                                               @OZ27300 N1930000
KXX     $ERROR                     DUMMY $ERROR MACRO EXPANSION@OZ27300 N1930500
KERRCODE EQU   *-4-KXX,4           ERROR CODE OFFSET           @OZ27300 N1931000
         SPACE 2                                               @OZ27300 N1931500
KDHEADER DC    AL1(KDHLEN)         LENGTH OF DUMP HEADER       @OZ27300 N1932000
         DC    C'DUMP OF JES2 CHECKPOINT DATA. '               @OZ27300 N1932500
         DC    C'SYSTEM=****. $ERROR CODE=****'                @OZ27300 N1933000
KDHSYSID EQU   *-22,4              SYSTEM ID  INSERT           @OZ27300 N1933500
KDHCODE  EQU   *-4,4               ERROR CODE INSERT           @OZ27300 N1934000
KDHLEN   EQU   *-KDHEADER-1        DUMP HEADER LENGTH          @OZ27300 N1934500
        TITLE 'HASP CHECKPOINT PROCESSOR -- KWRITE SUBROUTINE' @OZ27300 N1935000
***************************************************************@OZ27300 N1935500
*                                                              @OZ27300 N1936000
*    KWRITE -- SUBROUTINE TO WRITE ALL CHANGED RECORDS TO      @OZ27300 N1936500
*              THE PRIMARY OR DUPLEX CHECKPOINT DATA SET       @OZ27300 N1937000
*                                                              @OZ27300 N1937500
*     ON ENTRY  R14 = RETURN ADDRESS                           @OZ27300 N1938000
*                                                              @OZ27300 N1938500
*     ON EXIT   R0-WD,WF,R10,R15 = UNPREDICTABLE               @OZ27300 N1939000
*                                                              @OZ27300 N1939500
* NOTE- THIS SUBROUTINE HAS SPECIAL PROCESSING FOR WRITES TO   @OZ27300 N1940000
*       THE PRIMARY CHECKPOINT DATA SET. WHEN ENTERED THE      @OZ27300 N1940500
*       FIRST TIME FOR PRIMARY WRITES, IT INITIATES THE I/O    @OZ27300 N1941000
*       AND IMMEDIATELY RETURNS. WHEN RE-ENTERED DURING A      @OZ27300 N1941500
*       WRITE TO THE PRIMARY, IT WAITS FOR COMPLETION OF THE   @OZ27300 N1942000
*       I/O AND THEN PROCEEDS AS WITH WRITES TO THE DUPLEX     @OZ27300 N1942500
*       CKPT DATA SET. IF AN I/O ERROR OCCURS, THE KFORMAT     @OZ27300 N1943000
*       SUBROUTINE IS CALLED. IF CONTROL RETURNS (FORMAT OK),  @OZ27300 N1943500
*       THEN WE RETURN AS IF THE ORIGINAL WRITE SUCCEEDED.     @OZ27300 N1944000
*                                                              @OZ27300 N1944500
*     - FOR DUPLEX WRITES -- THE CONTROL BYTES IN THE ACTUAL   @OZ27300 N1945000
*       AREA WILL RETAIN THE DUPLEX BIT (X'80') UNTIL THE      @OZ27300 N1945500
*       DUPLEX WRITE IS SUCCESSFUL. KAFTERIO WILL RESET THESE  @OZ27300 N1946000
*       BITS IF THE RECORD HAS NOT BEEN FURTHER UPDATED. THE   @OZ27300 N1946500
*       NEXT PRIMARY WRITE WILL UPDATE THE BYTES ON DASD.      @OZ27300 N1947000
*                                                              @OZ27300 N1947500
*     - WHEN THE WRITE IS SUCCESSFULLY COMPLETED, IF THE       @OZ27300 N1948000
*       WRITE WAS TO THE DUPLEX, OR IF THE WRITE WAS TO THE    @OZ27300 N1948500
*       PRIMARY BUT A DUPLEX WRITE IS NOT TO BE SCHEDULED,     @OZ27300 N1949000
*       THE MASTER RECORD I/O AREA IS PAGE-RELEASED.           @OZ27300 N1949500
*                                                              @OZ27300 N1950000
***************************************************************@OZ27300 N1950500
         SPACE 1                                               @OZ27300 N1951000
KWRITE   ST    R14,CKPSAVE1        SAVE RETURN ADDRESS         @OZ27300 N1951500
         LH    WF,CKPRETRY         SET I/O ERROR RETRY COUNTER @OZ27300 N1952000
         CLI   JQBECBCC,0          I/O ALREADY STARTED...      @OZ27300 N1952500
         BE    KWRWAIT             BR IF YES (2ND ENTRY)       @OZ27300 N1953000
         SPACE 1                                               @OZ27300 N1953100
         LA    R1,JQBMSTR          START CHANNEL PROGRAM       @OZ27300 N1953500
         ST    R1,JQBSTART          WITH MASTER RECORD PACKET  @OZ27300 N1954000
         MVC   JQBSEEK+1(6),JQBCADDR-JQBCCWE(R1)  SET IOBSEEK  @OZ27300 N1954500
         MVI   JQBMSTR+(JQBCRW-JQBCCWE)+CCWOP,WRITE+DATA       @OZ27300 N1955000
         SPACE 1                                               @OZ27300 N1955100
         BAL   R14,KBLDCCWS        BUILD ENTIRE CCW CHAIN      @OZ27300 N1955500
         SPACE 1                                               @OZ27300 N1955600
         LH    WF,CKPRETRY         RELOAD I/O ERROR RETRY CTR  @OZ27300 N1955800
         TM    JQBFLAG1,JQB1PRIM   PRIMARY WRITE...            @OZ27300 N1956000
         BZ    KWR$EXCP            BR IF NO                    @OZ27300 N1956500
         L     R0,$MASTERI          ELSE COPY                  @OZ27300 N1957000
         L     R1,$MASTERL           THE MASTER                @OZ27300 N1957500
         L     R14,$MASTER            RECORD FROM              @OZ27300 N1958000
         LR    R15,R1                  THE ACTUAL AREA         @OZ27300 N1958500
         MVCL  R0,R14                   TO THE I/O AREA        @OZ27300 N1959000
         EJECT                                                 @OZ27300 N1959500
KWR$EXCP MVC   CKPLIRCT,$LIRCT     SET LOST-INTERRUPT RETRY CTR@OZ27300 N1960000
         MVC   JQBVERFY,KVERFY     INIT I/O VERIFICATION AREA  @OZ27300 N1960500
         LA    R1,PCEDADCT         START WRITE                 @OZ27300 N1961000
        $EXCP  (R1),TYPE=VR         OPERATION                  @OZ27300 N1961500
         TM    JQBFLAG1,JQB1PRIM   PRIMARY WRITE...            @OZ27300 N1962000
         BZ    KWRWAIT             BR IF NO                    @OZ27300 N1962500
         B     KWRETURN             ELSE RETURN (WILL RE-ENTER)@OZ27300 N1963000
         SPACE 1                                               @OZ27300 N1963500
KWRETRY1 MVC   CKPLIRCT,$LIRCT     SET I/O ERROR RETRY CTR AGN @OZ27300 N1964000
         SPACE 1                                               @OZ27300 N1964500
KWRETRY2 MVC   JQBVERFY,KVERFY     RE-INIT I/O VERIFY AREA     @OZ27300 N1965000
         LA    R1,PCEDADCT         RETRY THE WRITE             @OZ27300 N1965500
        $EXCP  (R1),TYPE=VR         OPERATION                  @OZ27300 N1966000
         SPACE 1                                               @OZ27300 N1966500
KWRWAIT $WAIT  IO                  WAIT FOR WRITE TO COMPLETE  @OZ27300 N1967000
         TM    JQBECBCC,X'7F'      TEST I/O STATUS             @OZ27300 N1967500
         BO    KWRCHEK             BR IF POSTED SUCCESSFUL     @OZ27300 N1968000
         BZ    KWRWAIT             BR IF NOT COMPLETE          @OZ27300 N1968500
         SPACE 1                                               @OZ27300 N1969000
        $IOERROR (WE)              ISSUE I/O ERROR MESSAGE     @OZ27300 N1969500
         BCT   WF,KWRETRY1         ATTEMPT RETRY               @OZ27300 N1970000
         SPACE 1                                               @OZ27300 N1970500
***************************************************************@OZ27300 N1971000
*                                                              @OZ27300 N1971500
*   I/O ERROR DURING WRITE -- PROHIBIT Q-UPDATES AND REFORMAT  @OZ27300 N1972000
*                                                              @OZ27300 N1972500
***************************************************************@OZ27300 N1973000
         SPACE 1                                               @OZ27300 N1973500
         OI    $STATUS,$QSONDA     *** PROHIBIT Q-UPDATES ***  @OZ27300 N1974000
         SPACE 1                                               @OZ27300 N1974500
         BAL   R14,KFORMAT         REFORMAT PRIMARY/DUPLEX     @OZ27300 N1975000
         TM    CKPFLAG1,CKP1FNLW   WAS THIS FINAL WRITE...     @OZ27300 N1975500
         BO    KWROK               BR IF YES (FORMAT OK)       @OZ27300 N1976000
         SPACE 1                                               @OZ27300 N1976500
         NI    $STATUS,FF-$QSONDA   ELSE RE-ALLOW Q-UPDATES    @OZ27300 N1977000
        $POST  $HASPECF,CKPT         AND POST ANY CKPT WAITORS @OZ27300 N1977500
         B     KWROK               BR TO RETURN (FORMAT OK)    @OZ27300 N1978000
         EJECT                                                 @OZ27300 N1978200
***************************************************************@OZ27300 N1978400
*                                                              @OZ27300 N1978600
* IF WRITE COMPLETED -- FREE I/O RECORDS UNLESS DUPLEX FOLLOWS @OZ27300 N1978800
*                                                              @OZ27300 N1979000
***************************************************************@OZ27300 N1979200
         SPACE 1                                               @OZ27300 N1979400
KWRCHEK  BAL   WB,KIOVERFY         INTERRUPTED I/O...          @OZ27300 N1979600
         B     KWRETRY2            RETRY IF YES          +0    @OZ27300 N1980000
         SPACE 1                                               @OZ27300 N1980500
KWROK    BAL   R14,KAFTERIO        UN-FIX I/O RECORDS    +4    @OZ27300 N1981000
         TM    $STATUS,$DUPLEX     DUPLEXING...                @OZ27300 N1981500
         BZ    KWRLSE              BR IF NO                    @OZ27300 N1982000
         TM    JQBFLAG1,JQB1PRIM   JUST WROTE PRIMARY...       @OZ27300 N1982500
         BZ    KWRLSE              BR IF NO                    @OZ27300 N1983000
         TM    $STATUS,$SYSEXIT    SHUTDOWN IN PROGRESS...     @OZ39685 N1983100
         BO    KWRETURN            YES..KEEP MASTER I/O AREA   @OZ39685 N1983200
         CLC   =Y(1),CKPDPXCT      FINAL PRIMARY..KEEP I/O     @OZ39685 N1983500
         BE    KWRETURN              FIXED IF DUPLEX FOLLOWS   @OZ27300 N1984000
         SPACE 1                                               @OZ27300 N1984500
KWRLSE  $PGSRVC FREE,$MASTERI,$MASTERL,RELEASE=Y RLSE MSTR I/O @OZ27300 N1985000
         SPACE 1                                               @OZ27300 N1985500
KWRETURN L     R14,CKPSAVE1        RESTORE RETURN ADDRESS      @OZ27300 N1986000
         BR    R14                  AND RETURN TO CALLER       @OZ27300 N1986500
      TITLE 'HASP CHECKPOINT PROCESSOR -- KBLDCCWS SUBROUTINE' @OZ27300 N1987000
***************************************************************@OZ27300 N1987500
*                                                              @OZ27300 N1988000
*    KBLDCCWS -- SUBROUTINE TO SETUP CHECKPOINT I/O AREA WITH  @OZ27300 N1988500
*                PAGES TO READ/WRITE AND TO BUILD THE CCW      @OZ27300 N1989000
*                CHAIN TO PERFORM THE OPERATION.               @OZ27300 N1989500
*                                                              @OZ27300 N1990000
*     ON ENTRY  R14 = RETURN ADDRESS.   JQBFLAG1 MUST BE SET.  @OZ27300 N1990500
*                                                              @OZ27300 N1991000
*     ON EXIT   R0-WD,WF,R10,R15 = UNPREDICTABLE.              @OZ27300 N1991500
*                                                              @OZ27300 N1992000
* NOTE-  RECORDS AFFECTED ARE DETERMINED BY...                 @OZ27300 N1992500
*                                                              @OZ27300 N1993000
*   PRIMARY READ  - OUR-BIT ($SIDAFF) IN I/O AREA CTL BYTES    @OZ27300 N1993500
*   PRIMARY WRITE - OUR-BIT ($SIDAFF) IN ACTUAL CTL BYTES      @OZ27300 N1994000
*   DUPLEX WRITE  - HI-BIT  (X'80')   IN I/O AREA CTL BYTES    @OZ27300 N1994500
*                                                              @OZ27300 N1995000
*         ** ABOVE BITS ARE RESET BEFORE RETURNING **          @OZ27300 N1995500
*                                                              @OZ27300 N1996000
* ALL CHAINS TERMINATE WITH I/O VERIFICATION PACKET (JQBVERP). @OZ27300 N1996500
*   IN ADDITION, THE CHECK-RECORD WRITE PACKET (JQBCHECK)      @OZ27300 N1997000
*      PRECEEDS JQBVERP FOR PRIMARY/DUPLEX WRITE CHAINS.       @OZ27300 N1997500
*                                                              @OZ27300 N1998000
***************************************************************@OZ27300 N1998500
         SPACE 1                                               @OZ27300 N1999000
         USING JQBCCWE,WD          PROVIDE CCWE ADDRESSABILITY @OZ27300 N1999500
         SPACE 1                                               @OZ27300 N2000000
KBLDCCWS ST    R14,CKPSAVE2        SAVE RETURN ADDRESS         @OZ27300 N2000500
         L     WC,$CTLBIO          USE THE I/O AREA CTL BYTES  @OZ27300 N2001000
         SLR   R0,R0               USE 'OUR' BIT FOR           @OZ27300 N2001500
         IC    R0,$SIDAFF           TESTING CTL BYTES          @OZ27300 N2002000
         TM    JQBFLAG1,JQB1READ   PRIMARY READ...             @OZ27300 N2002500
         BO    KBSET               BR IF YES                   @OZ27300 N2003000
         TM    JQBFLAG1,JQB1WRT+JQB1PRIM  PRIMARY WRITE...     @OZ27300 N2003500
         BNO   KBDPLX              BR IF NO                    @OZ27300 N2004000
         L     WC,$CTLB             ELSE USE ACTUAL CTL BYTES  @OZ27300 N2004500
         B     KBSET               BR TO CONTINUE              @OZ27300 N2005000
         SPACE 1                                               @OZ27300 N2005500
KBDPLX   LA    R0,X'80'            USE HI-BIT FOR DUPLEX TESTS @OZ27300 N2006000
         SPACE 1                                               @OZ27300 N2006500
KBSET    STC   R0,CKPBITON         SAVE TEST-VALUE             @OZ27300 N2007000
         LA    R1,FF               SAVE                        @OZ27300 N2007500
         SLR   R1,R0                COMPLIMENTED               @OZ27300 N2008000
         STC   R1,CKPBITOF           TEST-VALUE                @OZ27300 N2008500
         LA    WB,JQBMSTR          'PREVIOUS' = MASTER PACKET  @OZ27300 N2009000
         LA    WD,JQBCCWS          'CURRENT'  = 1ST Q-PACKET   @OZ27300 N2009500
         L     R1,$JOBQIO          POINT TO I/O AREA RECORDS   @OZ27300 N2010000
         LH    WF,$JOBRECN         NUMBER OF                   @OZ27300 N2010500
         AH    WF,$JOTRECN          Q-RECORDS                  @OZ27300 N2011000
         LA    R10,CKPFIXL         POINT TO FIX LIST           @OZ27300 N2011500
         SPACE 1                                               @OZ27300 N2012000
KBLOOP   IC    WA,CKPBITON         THIS RECORD AFFECTED...     @OZ27300 N2012500
         EX    WA,KBLDTM           -- TM 0(WC),CKPBITON...     @OZ27300 N2013000
         BO    KBFIXT              BR IF YES                   @OZ27300 N2013500
         EJECT                                                 @OZ27300 N2014000
***************************************************************@OZ27300 N2014500
*                                                              @OZ27300 N2015000
*  IF 'DEBUG', ENSURE UNFLAGGED PAGE IS UNCHANGED (WRITE ONLY) @OZ27300 N2015500
*                                                              @OZ27300 N2016000
***************************************************************@OZ27300 N2016500
         SPACE 1                                               @OZ27300 N2017000
         TM    $RUNOPTS,$DEBUG     DEBUG MODE...               @OZ27300 N2017500
         BZ    KBLDINCR            BR IF NO                    @OZ27300 N2018000
         TM    JQBFLAG1,JQB1WRT+JQB1PRIM  PRIMARY WRITE...     @OZ27300 N2018500
         BNO   KBLDINCR            BR IF NO                    @OZ27300 N2019000
         LR    WA,R1               SAVE RECORD ADDRESS         @OZ27300 N2019500
         LR    R0,R1               ADDR AND LENGTH OF SAVED    @OZ27300 N2020000
         L     R1,=F'4096'          RECORD IN I/O AREA         @OZ27300 N2020500
         LR    R14,R0              ADDR AND                    @OZ27300 N2021000
         LR    R15,R1               LENGTH OF                  @OZ27300 N2021500
         SL    R14,$JOBQIO           RECORD IN                 @OZ27300 N2022000
         AL    R14,$JOBQPTR           ACTUAL AREA              @OZ27300 N2022500
         CLCL  R0,R14              HAS RECORD BEEN CHANGED...  @OZ27300 N2023000
         LR    R1,WA               (RESTORE RECORD ADDRESS)    @OZ27300 N2023500
         BE    KBLDINCR            BR IF UNCHANGED             @OZ27300 N2024000
         SPACE 1                                               @OZ27300 N2024500
         LA    WA,K05              ABEND IF CHANGED RECORD     @OZ27300 N2025000
         B     KLOGOUT              NOT FLAGGED FOR CKPT       @OZ27300 N2025500
         SPACE 1                                               @OZ27300 N2026000
***************************************************************@OZ27300 N2026500
*                                                              @OZ27300 N2027000
*      IF RECORD IS NOT PAGE-FIXED, FIX ITS I/O AREA PAGE      @OZ27300 N2027500
*         AND (IF WRITE) COPY THE ACTUAL RECORD TO IT          @OZ27300 N2028000
*                                                              @OZ27300 N2028500
***************************************************************@OZ27300 N2029000
         SPACE 1                                               @OZ27300 N2029500
KBFIXT   CLI   0(R10),0            PAGE ALREADY FIXED...       @OZ27300 N2030000
         BNE   KBCHAIN             BR IF YES                   @OZ27300 N2030500
         MVI   0(R10),FF            ELSE SHOW PAGE NOW FIXED   @OZ27300 N2031000
         LA    R2,CKPECB                       PAGE-FIX RECORD @OZ27300 N2031500
        $PGSRVC FIX,(R1),=F'4096',(R2),RELEASE=Y  IN I/O AREA  @OZ27300 N2032000
         SPACE 1                                               @OZ27300 N2033000
         TM    JQBFLAG1,JQB1WRT    WRITE OPERATION...          @OZ27300 N2034000
         BZ    KBCHAIN             BR IF NO                    @OZ27300 N2035000
         LR    WA,R1               SAVE RECORD ADDRESS         @OZ27300 N2036000
         LR    R0,R1               ADDR AND LENGTH OF          @OZ27300 N2037000
         L     R1,=F'4096'          RECORD IN I/O AREA         @OZ27300 N2038000
         LR    R14,R0              ADDR AND                    @OZ27300 N2039000
         LR    R15,R1               LENGTH OF                  @OZ27300 N2040000
         SL    R14,$JOBQIO           RECORD IN                 @OZ27300 N2041000
         AL    R14,$JOBQPTR           ACTUAL AREA              @OZ27300 N2042000
         MVCL  R0,R14              MOVE RECORD TO I/O AREA     @OZ27300 N2043000
         LR    R1,WA               RESTORE RECORD ADDRESS      @OZ27300 N2044000
         EJECT                                                 @OZ27300 N2045000
***************************************************************@OZ27300 N2046000
*                                                              @OZ27300 N2047000
*        ADD NEW READ/WRITE CCW TO CHAIN                       @OZ27300 N2048000
*                                                              @OZ27300 N2049000
***************************************************************@OZ27300 N2050000
         SPACE 1                                               @OZ27300 N2051000
KBCHAIN  LRA   WA,0(,R1)           SET 'REAL' ADDRESS OF I/O   @OZ27300 N2052000
         ST    WA,JQBCRW            AREA PAGE INTO CCW         @OZ27300 N2053000
         MVI   JQBCRW+CCWOP,READ+DATA  SET FOR READ OPERATION  @OZ27300 N2054000
         TM    JQBFLAG1,JQB1WRT    IS THIS WRITE...            @OZ27300 N2055000
         BZ    *+8                 BR IF NO                    @OZ27300 N2056000
         MVI   JQBCRW+CCWOP,WRITE+DATA  ELSE RESET CCW OP-CODE @OZ27300 N2057000
         BAL   WA,KCCWADJ          CHAIN CURRENT TO PREVIOUS   @OZ27300 N2058000
         CLC   JQBSTART,$ZEROS     ANY PREVIOUS CCWS...        @OZ27300 N2059000
         BNE   KBNEWPRV            BR IF YES                   @OZ27300 N2060000
         ST    WD,JQBSTART          ELSE START THE CHAIN HERE  @OZ27300 N2061000
         MVC   JQBSEEK+1(6),JQBCADDR  AND SET IOBSEEK          @OZ27300 N2062000
         SPACE 1                                               @OZ27300 N2063000
KBNEWPRV LR    WB,WD               SET 'PREVIOUS' TO 'CURRENT' @OZ27300 N2064000
         NC    0(1,WC),CKPBITOF    RESET CONTROL-BYTE BIT      @OZ27300 N2065000
         SPACE 1                                               @OZ27300 N2066000
KBLDINCR AL    R1,=F'4096'         NEXT PAGE IN IO AREA        @OZ27300 N2067000
         LA    WC,1(,WC)           NEXT CONTROL BYTE           @OZ27300 N2068000
         LA    WD,JQBCNEXT         NEXT CCW PACKET  (CURRENT)  @OZ27300 N2069000
         LA    R10,1(,R10)         NEXT FIX-LIST BYTE          @OZ27300 N2070000
         BCT   WF,KBLOOP           LOOP FOR ALL RECORDS        @OZ27300 N2071000
         SPACE 1                                               @OZ27300 N2071500
         TM    JQBFLAG1,JQB1WRT    WRITE OPERATION...          @OZ27300 N2072000
         BZ    KBVERP              BR IF NO                    @OZ27300 N2072500
         LA    WD,JQBCHECK         POINT TO CHECK RCD PACKET   @OZ27300 N2073000
         MVI   JQBCRW+CCWOP,WRITE+DATA   SET FOR WRITE         @OZ27300 N2074000
         BAL   WA,KCCWADJ          CHAIN THIS TO PREV. PACKET  @OZ27300 N2074200
         LR    WB,WD               UPDATE 'PREVIOUS'           @OZ27300 N2074400
         SPACE 1                                               @OZ27300 N2074600
***************************************************************@OZ27300 N2074800
*                                                              @OZ27300 N2074810
*    ADD I/O VERIFICATION PACKET TO END OF CHANNEL PROGRAM     @OZ27300 N2074820
*                                                              @OZ27300 N2074830
***************************************************************@OZ27300 N2074840
         SPACE 1                                               @OZ27300 N2074850
         DROP  WD                  PROVIDE ADDRESSABILITY      @OZ27300 N2074860
         USING JQBCCWE,WB           ON LAST CCW PACKET         @OZ27300 N2074870
         SPACE 1                                               @OZ27300 N2074880
KBVERP   LA    R1,JQBVERP          TERMINATE CHAIN             @OZ27300 N2074890
         ST    R1,JQBCTIC+4         WITH A TIC TO THE          @OZ27300 N2074900
         LRA   R1,0(,R1)             I/O VERIFICATION          @OZ27300 N2074910
         STCM  R1,7,JQBCTNXT+CCWADDR  PACKET                   @OZ27300 N2074920
         L     R14,CKPSAVE2        RESTORE RETURN ADDRESS      @OZ27300 N2074930
         BR    R14                  AND RETURN TO CALLER       @OZ27300 N2074940
         SPACE 1                                               @OZ27300 N2074950
KBLDTM   TM    0(WC),*-*           **EXECUTE**  RCD AFFECTED...@OZ27300 N2074960
         SPACE 1                                               @OZ27300 N2074970
         DROP  WB                  KILL CCWE ADDRESSABILITY    @OZ27300 N2074980
      TITLE 'HASP CHECKPOINT PROCESSOR -- KAFTERIO SUBROUTINE' @OZ27300 N2074990
***************************************************************@OZ27300 N2075000
*                                                              @OZ27300 N2075010
*    KAFTERIO -- SUBROUTINE TO PAGE-RLSE (FREE IF DEBUG)       @OZ27300 N2075020
*                I/O AREA FIXED RECORDS AS SHOWN IN CKPFIXL.   @OZ27300 N2075030
*                ALSO MOVES RECORDS TO ACTUAL AREA AFTER READ. @OZ27300 N2075040
*                                                              @OZ27300 N2075050
*     ON ENTRY  R14 = RETURN ADDRESS                           @OZ27300 N2075060
*                                                              @OZ27300 N2075070
*     ON EXIT   R1-WD,WF,R10,R14,R15 = UNPREDICTABLE           @OZ27300 N2075080
*                                                              @OZ27300 N2075090
* NOTE- RCDS ARE NOT PAGE-FREE'D IF DUPLEX WRITE FOLLOWS IMMED @OZ27300 N2075100
*                                                              @OZ27300 N2075110
***************************************************************@OZ27300 N2075120
         SPACE 1                                               @OZ27300 N2075130
KAFTERIO ST    R14,CKPSAVE2        SAVE RETURN ADDRESS         @OZ27300 N2075140
         L     R10,$CTLBIO         POINT TO I/O AREA CTL BYTES @OZ27300 N2075150
         L     WA,$JOBQIO          POINT TO I/O Q-AREA         @OZ27300 N2075160
         L     WB,=F'4096'         GET LENGTH OF Q-RCD         @OZ27300 N2075170
         LA    WC,CKPFIXL          POINT TO FIX LIST           @OZ27300 N2075180
         L     WD,$JOBQPTR         POINT TO ACTUAL Q-AREA      @OZ27300 N2075190
         LH    WF,$JOBRECN         NUMBER OF                   @OZ27300 N2075200
         AH    WF,$JOTRECN          Q-RECORDS                  @OZ27300 N2075210
         TM    JQBFLAG1,JQB1PRIM+JQB1WRT  PRIMARY WRITE...     @OZ38575 N2075300
         BNO   KAFTLOOP                   BR IF NO             @OZ38575 N2075400
         TM    $STATUS,$DUPLEX     DUPLEXING...                @OZ38575 N2075500
         BZ    KAFTLOOP            BR IF NO                    @OZ38575 N2075600
         CLC   =Y(1),CKPDPXCT       ELSE IF TIME TO DUPLEX...  @OZ27300 N2075800
         BER   R14                   RETURN LEAVING RCDS FIXED @OZ27300 N2076000
         SPACE 1                                               @OZ27300 N2076200
KAFTLOOP CLI   0(WC),0             RECORD FIXED FOR I/O...     @OZ27300 N2076400
         BE    KAFTINCR            BR IF NO                    @OZ27300 N2076600
         TM    JQBFLAG1,JQB1READ   RECORD JUST READ...         @OZ27300 N2076800
         BZ    KAFTFREE            BR IF NO                    @OZ27300 N2077000
         SPACE 1                                               @OZ27300 N2077200
        $PGSRVC RLSE,(WD),(WB)     ENSURE RCD DOESN'T PAGE-IN  @OZ27300 N2077400
         SPACE 1                                               @OZ27300 N2077600
         LR    R0,WD               MOVE NEWLY READ             @OZ27300 N2077800
         LR    R1,WB                Q-RCD FROM THE             @OZ27300 N2078000
         LR    R14,WA                I/O AREA                  @OZ27300 N2078200
         LR    R15,WB                 TO THE                   @OZ27300 N2078400
         MVCL  R0,R14                  ACTUAL Q-AREA           @OZ27300 N2078600
         SPACE 1                                               @OZ27300 N2078800
         TM    $STATUS,$DUPLEX     DUPLEXING...                @OZ27300 N2079000
         BZ    KAFTFREE            BR IF NO                    @OZ27300 N2079200
         TM    0(R10),X'80'         ELSE LEAVE RECORD FIXED IF @OZ27300 N2079400
         BO    KAFTINCR              ALSO SCHEDULED FOR DUPLEX @OZ27300 N2079600
         EJECT                                                 @OZ27300 N2079800
KAFTFREE MVI   0(WC),0             SHOW PAGE NO LONGER FIXED   @OZ27300 N2080000
         TM    $RUNOPTS,$DEBUG     DEBUG MODE...               @OZ27300 N2080200
         BZ    KAFTRLS             BR IF NO                    @OZ27300 N2080400
        $PGSRVC FREE,(WA),(WB)      ELSE JUST FREE PAGE        @OZ27300 N2080600
         B     KAFTINCR              AND BR TO CONTINUE        @OZ27300 N2080800
         SPACE 1                                               @OZ27300 N2081300
KAFTRLS $PGSRVC FREE,(WA),(WB),RELEASE=Y  FREE+RLSE PAGE       @OZ27300 N2081800
         SPACE 1                                               @OZ27300 N2082000
KAFTINCR LA    WC,1(,WC)           NEXT FIX-LIST BYTE          @OZ27300 N2082500
         LA    R10,1(,R10)         NEXT I/O AREA CTL BYTE      @OZ27300 N2083000
         ALR   WA,WB               NEXT I/O AREA RECORD        @OZ27300 N2083500
         ALR   WD,WB               NEXT ACTUAL Q-RECORD        @OZ27300 N2084000
         BCT   WF,KAFTLOOP         LOOP FOR ALL RECORDS        @OZ27300 N2084500
         SPACE 1                                               @OZ27300 N2085000
***************************************************************@OZ27300 N2085500
*                                                              @OZ27300 N2086000
*    IF DUPLEX JUST WRITTEN -- RESET BITS IN ACTUAL CTL BYTES  @OZ27300 N2086500
*   SO THAT SUBSEQUENT PRIMARY WRITE WILL UPDATE BYTES ON DASD @OZ27300 N2087000
*                                                              @OZ27300 N2087500
***************************************************************@OZ27300 N2088000
         SPACE 1                                               @OZ27300 N2088500
         TM    JQBFLAG1,JQB1PRIM   JUST DUPLEXED...            @OZ27300 N2089000
         BO    KAFTEXIT            BR IF NO                    @OZ27300 N2089500
         L     WC,$CTLB            POINT TO ACTUAL CTL BYTES   @OZ27300 N2090000
         LH    WF,$JOBRECN         NUMBER OF                   @OZ27300 N2090500
         AH    WF,$JOTRECN          Q-RECORDS                  @OZ27300 N2091000
         IC    R10,$SIDAFF         THIS MEMBER'S ID            @OZ27300 N2091500
         SPACE 1                                               @OZ27300 N2092000
KAFTDLUP TM    0(WC),X'80'         CTL-BYTE HAVE DUPLEX BIT... @OZ27300 N2092500
         BZ    KAFTDINC            BR IF NO                    @OZ27300 N2093000
         EX    R10,KBLDTM          ANY NEW UPDATES TO RECORD...@OZ27300 N2093500
         BO    KAFTDINC            BR IF YES (LEAVE DPLX BIT)  @OZ27300 N2094000
         NI    0(WC),FF-X'80'       ELSE SHOW RECORD HAS BEEN  @OZ27300*N2094500
                                     SUCCESSFULLY DUPLEXED     @OZ27300 N2095000
KAFTDINC LA    WC,1(,WC)           NEXT CTL-BYTE               @OZ27300 N2095500
         BCT   WF,KAFTDLUP         CONTINUE LOOP               @OZ27300 N2096000
         SPACE 2                                               @OZ27300 N2096500
KAFTEXIT L     R14,CKPSAVE2        LOAD RETURN ADDRESS         @OZ27300 N2097000
         BR    R14                  AND RETURN TO CALLER       @OZ27300 N2097500
       TITLE 'HASP CHECKPOINT PROCESSOR -- KFORMAT SUBROUTINE' @OZ27300 N2098000
***************************************************************@OZ27300 N2098500
*                                                              @OZ27300 N2099000
*    KFORMAT -- SUBROUTINE TO RE-FORMAT THE PRIMARY/DUPLEX     @OZ27300 N2099500
*               CHECKPOINT DATA SET                            @OZ27300 N2100000
*                                                              @OZ27300 N2100500
*     ON ENTRY  R14 = RETURN ADDRESS                           @OZ27300 N2101000
*                                                              @OZ27300 N2101500
*     ON EXIT   R0-WD,WF,R10,R14,R15 = UNPREDICTABLE           @OZ27300 N2102000
*                                                              @OZ27300 N2102500
* NOTE - IT IS ASSUMED THAT ALL Q-UPDATES DURING THIS FORMAT   @OZ27300 N2103000
*        HAVE BEEN PREVENTED BY THE CALLER (I.E., $QSONDA=1)   @OZ27300 N2103500
*                                                              @OZ27300 N2104000
***************************************************************@OZ27300 N2104500
         SPACE 1                                               @OZ27300 N2105000
KFORMAT  ST    R14,CKPSAVE2        SAVE RETURN ADDRESS         @OZ27300 N2105500
         TM    JQBFLAG1,JQB1FMT    BR IF JQB ALREADY           @OZ27300 N2106000
         BO    KNONFMT              SET FOR FORMAT-WRITE       @OZ27300 N2106500
         IC    R10,$SIDAFF         OBTAIN OUR-SYSTEM           @OZ27300 N2107000
         LCR   R10,R10              BIT (COMPLEMENTED          @OZ27300 N2107500
         BCTR  R10,0                 FOR RESETTING IT)         @OZ27300 N2108000
         L     WC,$JOBQIO          POINT TO I/O AREA Q-RCDS    @OZ27300 N2108500
         LH    WD,$JOBRECN         GET NUMBER OF               @OZ27300 N2109000
         AH    WD,$JOTRECN          Q-RECORDS                  @OZ27300 N2109500
         LA    WF,1(,WD)           COUNT OF Q-RCDS PLUS MASTER @OZ27300 N2110000
         SLL   WD,12               LENGTH OF Q'S (NUM-RCDS*4K) @OZ27300 N2110500
         SPACE 1                                               @OZ27300 N2111000
***************************************************************@OZ27300 N2111500
*                                                              @OZ27300 N2112000
*        PAGE FIX AND MOVE ALL QUEUE RECORDS TO I/O AREA       @OZ27300 N2112500
*                                                              @OZ27300 N2113000
***************************************************************@OZ27300 N2113500
         SPACE 1                                               @OZ27300 N2114000
         LA    R2,CKPECB           PAGE-FIX ALL I/O            @OZ27300 N2114500
        $PGSRVC FIX,(WC),(WD),(R2)  AREA Q-RECORDS             @OZ27300 N2115000
         SPACE 1                                               @OZ27300 N2115500
         L     R14,$JOBQPTR        GET ADDRESS AND             @OZ27300 N2116000
         LR    R15,WD               LENGTH OF ACTUAL Q-AREA    @OZ27300 N2116500
         MVCL  WC,R14              MOVE ALL Q-RCDS TO I/O AREA @OZ27300 N2117000
         EJECT                                                 @OZ27300 N2117500
***************************************************************@OZ27300 N2118000
*                                                              @OZ27300 N2118500
*        ADJUST CCW PACKETS FOR FORMAT-WRITE OPERATION         @OZ27300 N2119000
*                                                              @OZ27300 N2119500
***************************************************************@OZ27300 N2120000
         SPACE 1                                               @OZ27300 N2120500
         USING JQBCCWE,WD          PROVIDE CCWE ADDRESSABILITY @OZ27300 N2121000
         SPACE 1                                               @OZ27300 N2121500
         OI    JQBFLAG1,JQB1FMT    SHOW JQB SET FOR FORMAT     @OZ27300 N2121600
         L     WA,$JOBQIO          POINT TO ACTUAL Q-RECORDS   @OZ27300 N2122000
         L     WC,$CTLB            POINT TO ACTUAL CTL BYTES   @OZ27300 N2122500
         LA    WD,JQBFMTW          FORMAT CHANNEL PROGRAM      @OZ27300 N2123000
         ST    WD,JQBSTART          STARTS WITH JQBFMTW        @OZ27300 N2123500
         MVC   JQBSEEK+1(6),JQBCADDR  SET INITIAL SEEK         @OZ27300 N2124000
         LA    WD,JQBMSTR          ADDRESS THE MSTR RCD PACKET @OZ27300 N2124500
         B     KFNEWPAK            BR INTO CCW BUILD LOOP      @OZ27300 N2125000
         SPACE 1                                               @OZ27300 N2125500
KFMTLOOP EX    R10,KFCTLNI         RESET OUR-BIT IN CTL BYTE   @OZ27300 N2126000
         LA    R1,JQBFMT           ASSUME WE CAN SKIP SEEK     @OZ27300 N2126500
         CLC   JQBCCHH,JQBCCHH-JQBCCWE(WB)  SAME TRACK...      @OZ27300 N2127000
         BE    *+8                 BR IF YES                   @OZ27300 N2127500
         LA    R1,JQBFSEEK          ELSE MUST CHAIN TO SEEK    @OZ27300 N2128000
         ST    R1,JQBFTIC+4-JQBCCWE(WB)      SET VIRT AND REAL @OZ27300 N2128500
         LRA   R1,0(,R1)                         ADDRS INTO    @OZ27300 N2129000
         STCM  R1,7,JQBFTNXT+CCWADDR-JQBCCWE(WB)  PREV PACKET  @OZ27300 N2129500
         LRA   R1,0(,WA)           SET REAL ADDRESS OF         @OZ27300 N2130000
         STCM  R1,7,JQBFRW+CCWADDR  Q-RECORD INTO PACKET       @OZ27300 N2130500
         AL    WA,=F'4096'         BUMP TO NEXT Q-RECORD       @OZ27300 N2131000
         LA    WC,1(,WC)           BUMP TO NEXT CONTROL BYTE   @OZ41071 N2131100
         SPACE 1                                               @OZ27300 N2131500
KFNEWPAK LRA   R1,JQBCCHH0             SEARCH-ID               @OZ27300 N2132000
         ST    R1,JQBFSID               EQUAL FOR              @OZ27300 N2132500
         MVI   JQBFSID+CCWOP,SRCH+ID+EQ  RECORD                @OZ27300 N2133000
         MVC   CCWLEN+JQBFSID,=Y(5)       ZERO                 @OZ27300 N2133500
         SPACE 1                                               @OZ27300 N2134000
         LRA   R1,JQBFSID          TIC                         @OZ27300 N2134500
         ST    R1,JQBFTIC           BACK TO                    @OZ27300 N2135000
         MVI   JQBFTIC+CCWOP,TIC     SEARCH                    @OZ27300 N2135500
         SPACE 1                                               @OZ27300 N2136000
         LRA   R1,JQBCOUNT           WRITE                     @OZ27300 N2136500
         ST    R1,JQBFMT              COUNT FIELD              @OZ27300 N2137000
         MVI   JQBFMT+CCWOP,WRITE+CKD  DATA-CHAINED            @OZ27300 N2137500
         MVI   JQBFMT+CCWFLAG,DC        TO DATA CCW            @OZ27300 N2138000
         MVC   CCWLEN+JQBFMT,=Y(8)       (FRW)                 @OZ27300 N2138500
         SPACE 1                                               @OZ27300 N2139000
         LR    WB,WD               SET 'PREVIOUS' TO 'CURRENT' @OZ27300 N2139500
*              THIS LINE DELETED BY APAR NUMBER                @OZ41071 N2140000
         LA    WD,JQBCNEXT         NEXT CCW PACKET  (CURRENT)  @OZ27300 N2140500
         BCT   WF,KFMTLOOP         LOOP FOR ALL PACKETS        @OZ27300 N2141000
         SPACE 1                                               @OZ27300 N2141500
         LA    WD,JQBCHECK         POINT TO CHECK-RCD PACKET   @OZ27300 N2142000
         MVI   JQBCRW+CCWOP,WRITE+DATA   TERMINATE CHAIN WITH  @OZ27300 N2142500
         ST    WD,JQBFTIC+4-JQBCCWE(,WB)  CHECK-RECORD WRITE   @OZ27300 N2143000
         LRA   R1,0(,WD)                   PACKET (WHICH TIC'S @OZ27300 N2143500
         STCM  R1,7,JQBFTNXT+CCWADDR-JQBCCWE(WB)  TO JQBVERP)  @OZ27300 N2144000
         EJECT                                                 @OZ27300 N2144500
         MVI   $WCHECK,129         SET SPECIAL FORMAT WRITE-   @OZ27300 N2145000
         MVI   JQBCKVAL,129         CHECK RECORD VALUE         @OZ27300 N2145500
         SPACE 1                                               @OZ27300 N2146000
         L     R0,$MASTER          MOVE HCT                    @OZ27300 N2146500
         LA    R1,$SAVELEN          CHECKPOINT                 @OZ27300 N2147000
         LA    R14,$SAVEBEG          VARIABLES                 @OZ27300 N2147500
         LR    R15,R1                 FROM HCT TO              @OZ27300 N2148000
         MVCL  R0,R14                  MASTER RECORD           @OZ27300 N2148500
         SPACE 1                                               @OZ27300 N2149000
         L     R0,$MASTERI         MOVE                        @OZ27300 N2149500
         L     R1,$MASTERL          MASTER                     @OZ27300 N2150000
         L     R14,$MASTER           RECORD                    @OZ27300 N2150500
         LR    R15,R1                 TO I/O                   @OZ27300 N2151000
         MVCL  R0,R14                  AREA                    @OZ27300 N2151500
         SPACE 1                                               @OZ27300 N2152000
***************************************************************@OZ27300 N2152500
*                                                              @OZ27300 N2153000
*        INFORM OPERATOR AND START THE FORMAT WRITE OPERATION  @OZ27300 N2153500
*                                                              @OZ27300 N2154000
***************************************************************@OZ27300 N2154500
         SPACE 1                                               @OZ27300 N2155000
         MVC   CKPMSG,KFMTMSG      MOVE BASE MSG TEXT          @OZ27300 N2155500
         TM    JQBFLAG1,JQB1PRIM           SET PRIMARY         @OZ27300 N2156000
         BO    *+10                         OR DUPLEX          @OZ27300 N2156500
         MVC   KFMTMPA+CKPMSG,=C'ALTERNATE'  KEYWORD           @OZ27300 N2157000
       $$WTO   CKPMSG              ISSUE MESSAGE               @OZ27300 N2157500
         SPACE 1                                               @OZ27300 N2158000
         MVC   JQBVERFY,KVERFY     INIT I/O VERIFICATION AREA  @OZ27300 N2158500
         MVC   CKPLIRCT,$ZEROS     NO I/O ERROR RETRIES        @OZ27300 N2159000
         LA    R1,PCEDADCT         START THE FORMAT-           @OZ27300 N2159500
        $EXCP  (R1),TYPE=VR,WAIT=YES  WRITE OPERATION          @OZ27300 N2160000
         BO    KFMTCHEK            BR IF POSTED SUCCESSFUL     @OZ27300 N2160500
         LA    WA,K15               ELSE                       @OZ27300 N2161000
         TM    JQBFLAG1,JQB1PRIM     BR TO         K15=PRIMARY @OZ27300 N2161500
         BO    KLOGOUT                LOGOUT       K16=DUPLEX  @OZ27300 N2162000
         LA    WA,K16                  AND ABEND               @OZ27300 N2162500
         B     KLOGOUT                  CKPT PROCESSOR         @OZ27300 N2163000
         SPACE 1                                               @OZ27300 N2163500
KFMTCHEK BAL   WB,KIOVERFY         ABEND IF INTERRUPTED I/O    @OZ27300 N2164000
         NOP   *+4                 NEVER RETURN TO +0,    +0   @OZ27300 N2164500
         DS    0H                   DUE TO CKPLIRCT=0     +4   @OZ27300 N2165000
         EJECT                                                 @OZ27300 N2165500
***************************************************************@OZ27300 N2166000
*                                                              @OZ27300 N2166500
*    PRIMARY/DUPLEX CKPT DATA SET SUCCESSFULLY RE-FORMATED     @OZ27300 N2167000
*                                                              @OZ27300 N2167500
***************************************************************@OZ27300 N2168000
         SPACE 1                                               @OZ27300 N2168500
         MVC   CKPMSG,KFMTOKM      'FORMAT SUCCESSFUL'         @OZ27300 N2169000
       $$WTO   CKPMSG              TELL OPERATOR               @OZ27300 N2169500
         SPACE 1                                               @OZ27300 N2170000
         LH    R0,$JOBRECN         LENGTH                      @OZ27300 N2170500
         AH    R0,$JOTRECN          OF ALL                     @OZ27300 N2171000
         SLL   R0,12                 Q-RECORDS                 @OZ27300 N2171500
         TM    $RUNOPTS,$DEBUG     DEBUG MODE...               @OZ27300 N2172000
         BZ    KFMTRLS             BR IF NO                    @OZ27300 N2172500
        $PGSRVC FREE,$JOBQIO,(R0)   ELSE JUST FREE I/O AREA    @OZ27300 N2173000
         B     KNONFMT               AND BR TO CONTINUE        @OZ27300 N2173500
         SPACE 1                                               @OZ27300 N2174000
KFMTRLS $PGSRVC FREE,$JOBQIO,(R0),RELEASE=Y   RELEASE I/O AREA @OZ27300 N2174500
         EJECT                                                 @OZ27300 N2175000
***************************************************************@OZ27300 N2175500
*                                                              @OZ27300 N2176000
*        RE-ADJUST CCW PACKETS FOR NON-FORMAT OPERATIONS       @OZ27300 N2176500
*                                                              @OZ27300 N2177000
***************************************************************@OZ27300 N2177500
         SPACE 1                                               @OZ27300 N2178000
KNONFMT  LA    WF,1                NUMBER        = MASTER      @OZ27300 N2178500
         AH    WF,$JOBRECN          OF           + JOBQ        @OZ27300 N2179000
         AH    WF,$JOTRECN           PACKETS     + JOT         @OZ27300 N2179500
         LA    WD,JQBMSTR          POINT TO MASTER/Q PACKETS   @OZ27300 N2180000
         SPACE 1                                               @OZ27300 N2180500
KNONFLUP LRA   R1,JQBCSEC1           INITIALIZE                @OZ27300 N2181000
         ST    R1,JQBCSET             SET-                     @OZ27300 N2181500
         MVI   JQBCSET+CCWOP,SETSECTR  SECTOR                  @OZ27300 N2182000
         CLI   JQBCSEC1,FF              CCW                    @OZ27300 N2182500
         BNE   *+8                       (OR SET               @OZ27300 N2183000
         MVI   JQBCSET+CCWOP,NOP          TO NOP IF            @OZ27300 N2183500
         MVI   JQBCSET+CCWLEN+1,1          SECTOR=FF)          @OZ27300 N2184000
         SPACE 1                                               @OZ27300 N2184200
         LRA   R1,JQBCCHHR             INITIALIZE              @OZ27300 N2184400
         ST    R1,JQBCSID               SEARCH-ID-EQUAL        @OZ27300 N2184600
         MVI   JQBCSID+CCWOP,SRCH+ID+EQ  CCW WITH              @OZ27300 N2184800
         MVI   JQBCSID+CCWFLAG,CC         ADDRESS OF           @OZ27300 N2185000
         MVC   CCWLEN+JQBCSID,=Y(5)        CCHHR               @OZ27300 N2185500
         SPACE 1                                               @OZ27300 N2186000
         LRA   R1,JQBCSID          INITIALIZE                  @OZ27300 N2186500
         ST    R1,JQBCTIC           CCW TO                     @OZ27300 N2187000
         MVI   JQBCTIC+CCWOP,TIC     TIC BACK                  @OZ27300 N2187500
         MVI   JQBCTIC+CCWFLAG,0      TO SEARCH                @OZ27300 N2188000
         SPACE 1                                               @OZ27300 N2188500
         LA    WD,JQBCNEXT         NEXT CCW PACKET             @OZ27300 N2189000
         BCT   WF,KNONFLUP         LOOP FOR ALL PACKETS        @OZ27300 N2189500
         SPACE 1                                               @OZ27300 N2190000
         NI    JQBFLAG1,FF-JQB1FMT  RESET FORMAT INDICATION    @OZ27300 N2190500
         L     R14,CKPSAVE2          AND RETURN                @OZ27300 N2191000
         BR    R14                    TO CALLER                @OZ27300 N2191500
         SPACE 1                                               @OZ27300 N2192000
         DROP  WD                  KILL CCWE ADDRESSABILITY    @OZ27300 N2192500
         SPACE 1                                               @OZ27300 N2193000
KFCTLNI  NI    0(WC),*-*           **EXECUTE**  RESET OUR-BIT  @OZ27300 N2193500
      TITLE 'HASP CHECKPOINT PROCESSOR -- KSETPAKS SUBROUTINE' @OZ27300 N2194000
***************************************************************@OZ27300 N2194500
*                                                              @OZ27300 N2195000
*    KSETPAKS -- SUBROUTINE TO SETUP THE CCW PACKETS FOR       @OZ27300 N2195500
*                EITHER THE PRIMARY OR DUPLEX DATA SET         @OZ27300 N2196000
*                                                              @OZ27300 N2196500
*     ON ENTRY   WB = RETURN ADDRESS                           @OZ27300 N2197000
*                                                              @OZ27300 N2197500
*     ON EXIT    R1,WA,WF = UNPREDICTABLE                      @OZ27300 N2198000
*                                                              @OZ27300 N2198500
***************************************************************@OZ27300 N2199000
         SPACE 1                                               @OZ27300 N2199500
         USING JQBCCWE,WA          PROVIDE CCWE ADDRESSABILITY @OZ27300 N2200000
         SPACE 1                                               @OZ27300 N2200500
KSETPAKS IC    R1,$NUMDA           ASSUME PRIMARY IOBSEEK 'M'  @OZ27300 N2201000
         TM    JQBFLAG1,JQB1PRIM   CALLED FOR PRIMARY SETUP... @OZ27300 N2201500
         BZ    KSWAPD              BR IF NO                    @OZ27300 N2202000
         CLC   $NUMDA,JQBSEEK      RETURN IF ALREADY           @OZ27300 N2202500
         BER   WB                   SET FOR PRIMARY            @OZ27300 N2203000
         B     KSWAPEM             GO SET FOR PRIMARY          @OZ27300 N2203500
         SPACE 1                                               @OZ27300 N2204000
KSWAPD   CLC   $NUMDA,JQBSEEK      RETURN IF ALREADY           @OZ27300 N2204500
         BNER  WB                   SET FOR DUPLEX             @OZ27300 N2205000
         LA    R1,1(,R1)           DUPLEX IOBSEEK 'M'          @OZ27300 N2205500
         SPACE 1                                               @OZ27300 N2206000
KSWAPEM  STC   R1,JQBSEEK          SET PRIMARY OR DUPLEX 'M'   @OZ27300 N2206500
         LA    WA,JQBSTD           POINT TO STD CCW PACKETS    @OZ27300 N2207000
         LA    WF,JQBSTDS          COMPUTE          = STDS     @OZ27300 N2207500
         AH    WF,$JOBRECN          NUMBER OF       + JOBQ     @OZ27300 N2208000
         AH    WF,$JOTRECN           PACKETS        + JOT      @OZ27300 N2208500
         SPACE 1                                               @OZ27300 N2209000
KSWAPLUP XC    JQBCCHHR,JQBCCHH2   SWAP                        @OZ27300 N2209500
         XC    JQBCCHH2,JQBCCHHR    JQBCCHHR AND               @OZ27300 N2210000
         XC    JQBCCHHR,JQBCCHH2     JQBCCHH2                  @OZ27300 N2210500
         MVC   JQBCCHH0(4),JQBCCHHR  THEN RESET JQBCCHH0       @OZ27300 N2211000
         SPACE 1                                               @OZ27300 N2211500
         LA    R1,JQBLOCKR         DON'T SWAP SECTOR           @OZ27300 N2212000
         CLR   WA,R1                NUMBERS UNTIL              @OZ27300 N2212500
         BL    KSWAPINC              JQBLOCKR PACKET           @OZ27300 N2213000
         SPACE 1                                               @OZ27300 N2213500
         XC    JQBCSEC1,JQBCSEC2   SWAP                        @OZ27300 N2214000
         XC    JQBCSEC2,JQBCSEC1    SECTOR                     @OZ27300 N2214500
         XC    JQBCSEC1,JQBCSEC2     NUMBERS                   @OZ27300 N2215000
         SPACE 1                                               @OZ27300 N2215500
         MVI   JQBCSET+CCWOP,SETSECTR  SET JQBCSET TO          @OZ27300 N2216000
         CLI   JQBCSEC1,FF              A SET-SECTOR           @OZ27300 N2216500
         BNE   *+8                       OR TO A NOP (IF       @OZ27300 N2217000
         MVI   JQBCSET+CCWOP,NOP          SECTOR NUMBER IS FF) @OZ27300 N2217500
         SPACE 1                                               @OZ27300 N2218000
KSWAPINC LA    WA,JQBCNEXT         POINT TO NEXT CCW PACKET    @OZ27300 N2218500
         BCT   WF,KSWAPLUP          AND LOOP FOR ALL           @OZ27300 N2219000
         BR    WB                  THEN RETURN TO CALLER       @OZ27300 N2219500
         SPACE 1                                               @OZ27300 N2220000
         DROP  WA                  KILL CCWE ADDRESSABILITY    @OZ27300 N2220500
       TITLE 'HASP CHECKPOINT PROCESSOR -- KCCWADJ SUBROUTINE' @OZ27300 N2221000
***************************************************************@OZ27300 N2221500
*                                                              @OZ27300 N2222000
*    KCCWADJ -- SUBROUTINE TO CHAIN NEW CCW PACKET             @OZ27300 N2222500
*                                                              @OZ27300 N2223000
*     ON ENTRY   WA = RETURN ADDRESS                           @OZ27300 N2223500
*                WB = ADDRESS OF PREVIOUS CCW PACKET           @OZ27300 N2224000
*                WD = ADDRESS OF CURRENT CCW PACKET            @OZ27300 N2224500
*                                                              @OZ27300 N2225000
*     ON EXIT    R0,R15 = UNPREDICTABLE                        @OZ27300 N2225500
*                                                              @OZ27300 N2226000
***************************************************************@OZ27300 N2226500
         SPACE 1                                               @OZ27300 N2227000
         USING JQBCCWE,WD          PROVIDE 'CURRENT' PACKET    @OZ27300CN2227500
                                    ADDRESSABILITY             @OZ27300 N2228000
         SPACE 1                                               @OZ27300 N2228500
KCCWADJ  LA    R15,JQBCSEEK        POINT TO NEW SEEK           @OZ27300 N2229000
         CLC   JQBCCHH,JQBCCHH-JQBCCWE(WB)  SAME TRACK...      @OZ27300 N2229500
         BNE   KCCW1               BR IF NO                    @OZ27300 N2230000
         LA    R15,JQBCSID         POINT TO NEW SEARCH-ID      @OZ27300 N2230500
         LA    R0,L'JQBCCWEL(,WB)  PACKET ADJACENT IN          @OZ27300 N2231000
         CLR   R0,WD                CCW CHAIN...               @OZ27300 N2231500
         BE    KCCW1               BRANCH IF YES               @OZ27300 N2232000
         CLI   JQBCSEC1,FF         SECTOR NO. EXIST (RPS)...   @OZ27300 N2232500
         BE    KCCW1               BR IF NO                    @OZ27300 N2233000
         LA    R15,JQBCSET          ELSE CHAIN TO SET-SECTOR   @OZ27300 N2233500
         SPACE 1                                               @OZ27300 N2234000
         DROP  WD                  SWITCH ADDRESSABILITY TO    @OZ27300 N2234500
         USING JQBCCWE,WB           'PREVIOUS' PACKET          @OZ27300 N2235000
         SPACE 1                                               @OZ27300 N2235500
KCCW1    LRA   R0,0(,R15)          SET REAL ADDRESS            @OZ27300 N2236000
         ST    R0,JQBCTNXT          IN PREVIOUS TIC            @OZ27300 N2236500
         MVI   JQBCTNXT+CCWOP,TIC  SET OP-CODE TO 'TIC'        @OZ27300 N2237000
         ST    R15,JQBCTIC+4       VIRTUAL ADDR FOR DEBUGGING  @OZ27300 N2237500
         BR    WA                  RETURN TO CALLER            @OZ27300 N2238000
         SPACE 1                                               @OZ27300 N2238500
         DROP  WB                  KILL CCWE ADDRESSABILITY    @OZ27300 N2239000
      TITLE 'HASP CHECKPOINT PROCESSOR -- KFIXMSTR SUBROUTINE' @OZ27300 N2239500
***************************************************************@OZ27300 N2240000
*                                                              @OZ27300 N2240500
*    KFIXMSTR -- SUBROUTINE TO PAGE-FIX THE MASTER RECORD IN   @OZ27300 N2241000
*                THE I/O AREA AND TO INITIALIZE ITS IDAW'S     @OZ27300 N2241500
*                                                              @OZ27300 N2242000
*     ON ENTRY   WB = RETURN ADDRESS                           @OZ27300 N2242500
*                                                              @OZ27300 N2243000
*     ON EXIT    R0-WA,R14,R15 = UNPREDICTABLE                 @OZ27300 N2243500
*                                                              @OZ27300 N2244000
***************************************************************@OZ27300 N2244500
         SPACE 1                                               @OZ27300 N2245000
KFIXMSTR L     R1,$MASTERI         POINT TO MASTER I/O AREA    @OZ27300 N2245500
         L     R0,$MASTERL         LENGTH OF MASTER RECORD     @OZ27300 N2246000
         LA    R2,CKPECB               PAGE-FIX MASTER RECORD  @OZ27300 N2246500
        $PGSRVC FIX,(R1),(R0),(R2),RELEASE=Y  IN I/O AREA      @OZ27300 N2247000
         LA    R15,JQBIDAWS        POINT TO IDAWS              @OZ27300 N2247500
         LA    WA,2048             EACH IDAW COVERS 2K BYTES   @OZ27300 N2248000
         SPACE 1                                               @OZ27300 N2248500
KFIXMLUP CLI   0(R1),*-*           WAIT FOR PAGE-FIX           @OZ27300 N2249000
         LRA   R14,0(,R1)          SET REAL ADDRESS            @OZ27300 N2249500
         ST    R14,0(,R15)          INTO IDAW                  @OZ27300 N2250000
         ALR   R1,WA               BUMP VIRTUAL ADDR BY 2K     @OZ27300 N2250500
         LA    R15,4(,R15)         POINT TO NEXT IDAW          @OZ27300 N2251000
         SR    R0,WA               LOOP UNTIL ALL MASTER       @OZ27300 N2251500
         BP    KFIXMLUP             RECORD IDAWS ARE BUILT     @OZ27300 N2252000
         BR    WB                  THEN RETURN TO CALLER       @OZ27300 N2252500
      TITLE 'HASP CHECKPOINT PROCESSOR -- KIOVERFY SUBROUTINE' @OZ27300 N2253000
***************************************************************@OZ27300 N2253500
*                                                              @OZ27300 N2254000
*    KIOVERFY -- SUBROUTINE TO VERIFY THAT THE CHANNEL PROGRAM @OZ27300 N2254500
*                COMPLETED  (I.E., THE COUNT FIELD WAS READ)   @OZ27300 N2255000
*                                                              @OZ27300 N2255500
*     ON ENTRY   WB = RETURN ADDRESS  (+0) RETRY NEEDED        @OZ27300 N2256000
*                                     (+4) I/O COMPLETE        @OZ27300 N2256500
*     ON EXIT    R0,R1,R14,R15 = UNPREDICTABLE                 @OZ27300 N2257000
*                                                              @OZ27300 N2257500
***************************************************************@OZ27300 N2258000
         SPACE 1                                               @OZ27300 N2258500
KIOVERFY CLC   JQBVERFY,KVERFY     I/O GO TO COMPLETION...     @OZ27300 N2259000
         BNE   4(,WB)              RETURN (+4) IF YES          @OZ27300 N2259500
         MVC   CKPMSG,KINTMSG      MOVE BASE MSG TEXT          @OZ27300 N2260000
         TM    JQBFLAG1,JQB1READ   READ OPERATION...           @OZ27300 N2260500
         BO    *+10                BR IF YES                   @OZ27300 N2261000
         MVC   KINTMRW+CKPMSG,=C'WRITE'  ELSE REPLACE I/O TYPE @OZ27300 N2261500
         TM    JQBFLAG1,JQB1PRIM   PRIMARY DATA SET...         @OZ27300 N2262000
         BO    *+10                BR IF YES.  ELSE REPLACE    @OZ27300 N2262100
         MVC   KINTMPA+CKPMSG,=C'ALTERNATE'     DATA SET TYPE  @OZ27300 N2262200
       $$WTO   CKPMSG              ISSUE WARNING MSG           @OZ27300 N2262700
         LH    R0,CKPLIRCT         HAVE ALL POSSIBLE           @OZ27300 N2263200
         LTR   R0,R0                RETRIES BEEN ATTEMPTED...  @OZ27300 N2263700
         BZ    KIOVFAIL            BR IF YES                   @OZ27300 N2264000
         BCTR  R0,0                 ELSE DECREMENT LOST        @OZ27300 N2264500
         STH   R0,CKPLIRCT           INTERRUPT RETRY COUNTER   @OZ27300 N2265000
         BR    WB                  BACK TO CALLER +0 FOR RETRY @OZ27300 N2265500
         SPACE 1                                               @OZ27300 N2266000
***************************************************************@OZ27300 N2266500
*                                                              @OZ27300 N2267000
*      MULTIPLE INTERRUPTIONS -- ABEND TO AVOID RETRY LOOPS    @OZ27300 N2267500
*                                                              @OZ27300 N2268000
***************************************************************@OZ27300 N2268500
         SPACE 1                                               @OZ27300 N2269000
KIOVFAIL LA    WA,K17              K17 =                       @OZ27300 N2269500
         TM    JQBFLAG1,JQB1READ         PRIMARY               @OZ27300 N2270000
         BO    KLOGOUT                    READ                 @OZ27300 N2270500
         LA    WA,K18              K18 =                       @OZ27300 N2271000
         TM    JQBFLAG1,JQB1PRIM         PRIMARY               @OZ27300 N2271500
         BO    KLOGOUT                    WRITE                @OZ27300 N2272000
         LA    WA,K19              K19 =                       @OZ27300 N2272500
         B     KLOGOUT                   DUPLEX WRITE          @OZ27300 N2273000
                                   PRINT OFF - SECTION DELETED @OZ35278 N2273500
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2274000
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2274500
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2275000
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2275500
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2276000
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2276500
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2277000
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2277500
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2278000
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2278500
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2279000
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2279500
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2280000
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2280500
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2281000
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2281200
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2281500
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2282000
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2282500
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2283000
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2283500
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2284000
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2284500
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2285000
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2285500
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2286000
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2286500
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2287000
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2287500
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2288000
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2288100
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2288200
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2288300
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2288400
*                                  THIS CARD DELETED BY APAR   @OZ35278 N2288500
                                   PRINT ON -- SECTION DELETED @OZ35278 N2288600
        TITLE 'HASP CHECKPOINT PROCESSOR -- TIMER SUBROUTINES' @OZ27300 N2288700
***************************************************************@OZ27300 N2288800
*                                                              @OZ27300 N2288900
*    KSTIMER,KTTIMER -- SUBROUTINES TO START/STOP TIMERS       @OZ27300 N2289000
*                                                              @OZ27300 N2289100
*     ON ENTRY  WA = RETURN ADDRESS                            @OZ27300 N2289200
*               R0 = TIME INTERVAL (KSTIMER ONLY)              @OZ27300 N2289300
*                    GT ZERO = TIME IN SECONDS                 @OZ27300 N2289400
*                    LT ZERO = -TIME IN SECONDS/100            @OZ27300 N2289500
*                                                              @OZ27300 N2289600
*     ON EXIT   R1,R14,R15 DESTROYED                           @OZ27300 N2289700
*                                                              @OZ27300 N2289800
***************************************************************@OZ27300 N2289900
         SPACE 1                                               @OZ27300 N2290000
KSTIMER  OI    CKPSTQE+IPOST,X'80' INDICATE TIMER EXPIRED      @OZ27300 N2290100
         LTR   R0,R0               TEST NEW INTERVAL TO BE SET @OZ27300 N2290200
         BZR   WA                  RETURN IF NONE              @OZ27300 N2290300
         ST    R0,CKPSTQE+ITIME    STORE NEW INTERVAL IN STQE  @OZ27300 N2290400
        $STIMER CKPSTQE            START TIMER                 @OZ27300 N2290500
         BR    WA                  RETURN TO CALLER            @OZ27300 N2290600
         SPACE 3                                               @OZ27300 N2290700
KTTIMER  TM    CKPSTQE+IPOST,X'80' HAS TIMER EXPIRED...        @OZ27300 N2290800
         BOR   WA                  RETURN IF YES               @OZ27300 N2290900
        $TTIMER CKPSTQE,CANCEL      ELSE STOP TIMER            @OZ27300 N2291000
         BR    WA                    AND THEN RETURN           @OZ27300 N2291100
   TITLE 'HASP CHECKPOINT PROCESSOR -- CONSTANTS AND MESSAGES' @OZ27300 N2291200
***************************************************************@OZ27300 N2291300
*                                                              @OZ27300 N2291400
*       CHECKPOINT PROCESSOR CONSTANTS AND MESSAGES            @OZ27300 N2291500
*                                                              @OZ27300 N2291600
***************************************************************@OZ27300 N2291700
         SPACE 2                                               @OZ27300 N2291800
KVERFY   DC    8X'FF'              I/O VERIFICATION VALUE      @OZ27300*N2291900
                                   (MOVED TO JQBVERFY BEFORE   @OZ27300*N2292000
                                     ALL I/O OPERATIONS)       @OZ27300 N2292100
         SPACE 1                                               @OZ27300 N2292200
         LTORG ,                   GENERATE LITERAL POOL       @OZ27300 N2292300
         EJECT                                                 @OZ27300 N2292400
        $MID   263                 ------ 263 -------          @OZ27300 N2292500
         SPACE 1                                               @OZ27300 N2292600
KWARNM   WTO   '&MID.WAITING FOR ACCESS TO JES2 CHECKPOINT DATA SET',  *N2292700
               MF=L                &WARNTIM MESSAGE            @OZ27300 N2292800
         SPACE 2                                               @OZ27300 N2292900
        $MID   264                 ------ 264 -------          @OZ27300 N2293000
         SPACE 1                                               @OZ27300 N2293100
KLOKMSG  WTO   '&MID.WAITING FOR RELEASE OF JES2 CKPT LOCK BY ****     *N2293200
                    ',MF=L                                     @OZ27300 N2293300
KLOKMSID EQU   *-14-KLOKMSG,4      INSERT FOR SYSTEM-ID        @OZ27300 N2293400
KLOKINIT EQU   KLOKMSID,14          OR 'INITIALIZATION'        @OZ27300 N2293500
         SPACE 1                                               @OZ27300 N2293600
*                                  THIS CARD DELETED BY APAR   @OZ27300 N2293700
         SPACE 2                                               @OZ27300 N2293800
        $MID   265                 ------ 265 -------          @OZ27300 N2293900
         SPACE 1                                               @OZ27300 N2294000
KPREVERR WTO   '&MID.DAMAGED JES2 CHECKPOINT RECORD DETECTED', @OZ27300*N2294100
               MF=L                                            @OZ27300 N2294200
         SPACE 2                                               @OZ27300 N2294300
        $MID   266                 ------ 266 -------          @OZ27300 N2294400
         SPACE 1                                               @OZ27300 N2294500
KFMTMSG  WTO  '&MID.PRIMARY   CHECKPOINT DATA SET IS BEING FORMATTED', *N2294600
               MF=L                                            @OZ27300 N2294700
KFMTMPA  EQU   *-48-KFMTMSG,9      DATA SET TYPE INSERT        @OZ27300 N2294800
         EJECT                                                 @OZ27300 N2294900
        $MID   267                 ------ 267 -------          @OZ27300 N2295000
         SPACE 1                                               @OZ27300 N2296000
KFMTOKM  WTO   '&MID.JES2 CHECKPOINT DATA SET SUCCESSFULLY FORMATTED', *N2297000
               MF=L                                            @OZ27300 N2298000
         SPACE 2                                               @OZ27300 N2299000
        $MID   268                 ------ 268 -------          @OZ27300 N2300000
         SPACE 1                                               @OZ27300 N2301000
KINTMSG  WTO  '&MID.INTERRUPTED READ  OF PRIMARY   JES2 CHECKPOINT DATA*N2302000
                SET',MF=L                                      @OZ27300 N2303000
KINTMRW  EQU   *-43-KINTMSG,5      'READ'/'WRITE' INSERT       @OZ27300 N2304000
KINTMPA  EQU   *-34-KINTMSG,9      DATA SET TYPE INSERT        @OZ27300 N2305000
         SPACE 2                                               @OZ27300 N2306000
        $MID   269                 ------ 269 -------          @OZ27300 N2307000
         SPACE 1                                               @OZ27300 N2308000
KDUMPMSG WTO   '&MID.JES2 CKPT ERROR (****) -- CKPT DUMP IN PROGRESS', *N2309000
               MF=L                                            @OZ27300 N2310000
KDUMPCOD EQU   *-30-KDUMPMSG,4     $ERROR CODE INSERT          @OZ27300 N2311000
         TITLE 'HASP CHECKPOINT PROCESSOR -- ABEND CODES'      @OZ27300 N2312000
K01     $ERROR ** UPDATE TO Q'S WHILE QSONDA. MISSING $QSUSE **@OZ27300 N2312500
         SPACE 2                                               @OZ27300 N2313000
K03     $ERROR ** $SIDTIME DID NOT MATCH QSESITIM AFTER READ **@OZ27300 N2313500
         SPACE 2                                               @OZ27300 N2314000
K05     $ERROR **  UPDATED RECORD WAS NOT FLAGGED FOR CKPT   **@OZ27300 N2314500
         SPACE 2                                               @OZ27300 N2315000
K10     $ERROR ** PRIMARY CHECKPOINT DAMAGED -- DUPLEX GOOD  **@OZ27300 N2315500
         SPACE 2                                               @OZ27300 N2316000
K11     $ERROR ** PRI BAD (NO DUPLEX). CAN'T GET LOCK TO FMT **@OZ27300 N2316500
         SPACE 2                                               @OZ27300 N2317000
K12     $ERROR **    PRIMARY GOOD BUT LOCK RECORD DAMAGED    **@OZ27300 N2317500
         SPACE 2                                               @OZ27300 N2318000
K13     $ERROR **   INVALID SYSTEM ID FOUND IN LOCK RECORD   **@OZ27300 N2318500
         SPACE 2                                               @OZ27300 N2319000
K14     $ERROR ** PRI CKPT REFORMATTED. DOWNLEVEL. NO DUPLEX **@OZ27300 N2319500
         EJECT                                                 @OZ27300 N2320000
K15     $ERROR **  I/O ERROR FORMATTING PRIMARY CHECKPOINT   **@OZ27300 N2321000
         SPACE 2                                               @OZ27300 N2322000
K16     $ERROR **  I/O ERROR FORMATTING DUPLEX CHECKPOINT    **@OZ27300 N2323000
         SPACE 2                                               @OZ27300 N2324000
K17     $ERROR **  INTERRUPTED READ OF PRIMARY CHECKPOINT    **@OZ27300 N2325000
         SPACE 2                                               @OZ27300 N2326000
K18     $ERROR **  INTERRUPTED WRITE OF PRIMARY CHECKPOINT   **@OZ27300 N2327000
         SPACE 2                                               @OZ27300 N2328000
K19     $ERROR **  INTERRUPTED WRITE OF DUPLEX CHECKPOINT    **@OZ27300 N2329000
         TITLE 'HASP TRACK GROUP BLOCK ALLOCATION'                      N2330000
*********************************************************************** N2332000
*                                                                     * N2334000
* KBLOB -- SUBROUTINE TO UNALLOCATE/ALLOCATE THE TRACK GROUP BLOCK    * N2336000
*                                                                     * N2338000
* PURPOSE - TO RETURN TRACK GROUPS TO THE MASTER TRACK GROUP MAP      * N2340000
*  ($TGMAP) FROM THE TRACK GROUP BLOCK AND THEN TO REALLOCATE THE     * N2342000
*  TRACK GROUP BLK FROM THE MASTER MAP USING AN EXTREME ALLOCATION    * N2344000
*  ALGORITHM. THE ALGORITHM ALLOCATES THE TRACK GROUP BLOCK BY        * N2346000
*  SELECTING BITS (TRACK GROUPS) FROM THE 'EXTREME' EXTENTS (RIMS)    * N2348000
*  OF DEVICES AS REPRESENTED BY TEDS (SEE TEDDSECT) AND $TGMAP.       * N2350000
*                                                                     * N2352000
* OPERATION -                                                         * N2354000
*                                                                     * N2356000
*  (1)  TRACK GROUP BLOCK ENTRIES ARE REMOVED USING CDS LOGIC TO      * N2358000
*       ELIMINATE POSSIBLE SIMULTANEOUS REFERENCE BY SSSM $STRAK      * N2360000
*       SUBROUTINE. THE ENTRIES REMOVED ARE TALLIED AND THE BIT@OZ27300 N2362000
*       DEFINED BY THE ENTRY IS RETURNED TO $TGMAP. &NUMTGBE   @OZ27300 N2364000
*       DETERMINES THE NO. OF TRACK GROUPS RETURNED IN THE TGB @OZ27300 N2366000
*       REALLOCATE FOR THIS ITERATION OF THE CHECKPOINT PROCESSOR.    * N2368000
*       IF NO TRACK GROUPS ARE RETURNED (ALL USED) THE NUMBER LAST    * N2370000
*       ALLOCATED IS INCREASED BY 1. IF TRACK GROUPS ARE RETURNED,    * N2372000
*       THE NUMBER LAST ALLOCATED IS DECREASED BY 1. THE LOWEST       * N2374000
*       EVER ALLOCATED IS 1 AND THE HIGHEST &NUMTGBE.                 * N2376000
*  (2)  THE NUMBER OF TRACK GROUPS ALLOCATED IS CALCULATED BY         * N2378000
*       'COUNTING' THE NUMBER OF BITS ON IN $TGMAP AND SUBTRACTING    * N2380000
*       THIS VALUE FROM THE TOTAL TRACK GROUPS AVAILABLE. IF THE      * N2382000
*       RESULT IS 0, THE 100% SPOOL UTILIZATION MESSAGE IS ISSUED.    * N2384000
*       IF THE NUMBER OF TRACK GROUPS AVAILABLE IS LESS THAN THE      * N2386000
*       NUMBER NEEDED TO FILL THE TRACK GROUP BLOCK, THE NUMBER       * N2388000
*       NEEDED IS SET TO THE NUMBER AVAILABLE.                        * N2390000
*  (3)  ALL VALID TED BLKS ARE INITIALIZED TO CAUSE THE SEARCH FOR    * N2392000
*       UNALLOCATED TRK GROUPS AT THE MODULE EXTENT START. THE TED    * N2394000
*       FIELD 'TNCH' IS USED FOR THIS PURPOSE. THE NEXT TED TO BE     * N2396000
*       USED FOR ALLOCATION IS SELECTED FROM THE $SVTNEXT FIELD IN    * N2398000
*       THE SVT. $SVTNEXT IS SET TO THE NEXT TED TO BE USED UPON      * N2400000
*       COMPLETION OF TRACK GROUP BLK ALLOCATION. MODULE SELECTION    * N2402000
*       IS 'ROUND-ROBIN'.                                             * N2404000
*  (4)  THE NUMBER OF TRACK GROUPS DETERMINED BY THE 'LAST USED'      * N2406000
*       PROCESS DESCRIBED ARE ALLOCATED USING EXTREME ALGORITHM.      * N2408000
*       THE EXTENT REPRESENTED BY A TED AND THE MASTER MAP IS         * N2410000
*       SEARCHED FOR AN AVAILABLE TRACK GRP STARTING AT HE 'TNCH'     * N2412000
*       DEFINED POSITION. 'TNCH' IS RESET FOR THE NEXT ITERATION      * N2414000
*       OF THE TRACK GROUP BLOCK ALLOCATION LOOP TO THE ADDRESS IN    * N2416000
*       THE EXTENT WHERE AN AVAILABLE TRACK GROUP WAS FOUND.          * N2418000
*  (5)  THE NUMBER OF TRACK GROUPS ALLOCATED IS ADJUSTED FOR THE      * N2420000
*       AMOUNT GIVEN TO THE TRACK GROUP BLK AND A CHECK IS MADE TO    * N2422000
*       DETERMINE IF THE TOLERANCE SPECIFIED BY &TGWARN HAS BEEN      * N2424000
*       EXCEEDED. IF SO, A PERCENT UTILIZATION MESSAGE IS ISSUED.     * N2426000
                                   PRINT OFF - SECTION DELETED @OZ27300 N2428000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N2430000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N2432000
                                   PRINT ON -- SECTION DELETED @OZ27300 N2434000
*                                                                     * N2436000
*********************************************************************** N2438000
         EJECT                                                          N2440000
*********************************************************************** N2442000
*                                                                     * N2444000
*              TGB ALLOCATION ENTRY POINT                             * N2446000
*                                                                     * N2448000
*********************************************************************** N2450000
         SPACE 1                                                        N2452000
KBLOB    LA    R0,*                REMEMBER THIS ADDRESS       @OZ27300 N2454000
         L     JCT,$SSVT           OBTAIN SSVT                 @OZ27300 N2455000
         USING SSVT,JCT              ADDRESSABILITY            @OZ20010 N2455500
         TM    $SVSTUS,$SVSTIRV    INIT RESV STILL IN EFFECT.. @OZ27300 N2456000
         BOR   R14                 RETURN TO CALLER IF IT IS            N2458000
         STM   R2,BASE2,PCEWA      ELSE, SAVE R2 - R12 IN PCE  @OZ27300 N2460000
         SPACE 1                                               @OZ27300 N2460200
         LR    BASE2,R0            PROVIDE NEW                 @OZ27300 N2460400
         USING KBLOB,BASE2          LOCAL ADDRESSABILITY       @OZ27300 N2460600
         SPACE 1                                               @OZ27300 N2460800
         LM    R5,R7,$SVTTGBA      R5=1ST, R6=SIZE, R7=LAST TGB         N2462000
         USING TGBDSECT,R5         TGB ADDRESSABILITY                   N2464000
         SLR   R2,R2               R2 = 0 (FOR CDS)                     N2466000
         SLR   R3,R3               R3 = 0 (FOR CDS)                     N2468000
         SLR   R8,R8               R8 = 0 (FOR ACCUMULATOR)             N2470000
         L     R9,$TGMAP           POINT TO MASTER TRACK GROUP MAP   R4 N2472000
         SPACE 1                                                        N2474000
*********************************************************************** N2476000
*                                                                     * N2478000
*              REMOVE UNUSED TG'S FROM TGB                            * N2480000
*                                                                     * N2482000
*********************************************************************** N2484000
         SPACE 1                                                        N2486000
KBLOBR   LM    R0,R1,TGBENTRY      FETCH TGB ENTRY                      N2488000
         LTR   R1,R1               TEST FOR UNALLOCATED TG              N2490000
         BZ    KBLOBA              BRANCH IF ALLOCATED                  N2492000
         CDS   R0,R2,TGBENTRY      TRY TO REMOVE ENTRY                  N2494000
         BNE   KBLOBA              BRANCH IF REMOVED BY SSSM            N2496000
         SPACE 1                                                        N2498000
         DROP  R5                  FORGET TGB                           N2500000
         SPACE 1                                                        N2502000
*********************************************************************** N2504000
*                                                                     * N2506000
*              COUNT & RETURN TG TO MASTER MAP                        * N2508000
*                                                                     * N2510000
*********************************************************************** N2512000
         SPACE 1                                                        N2514000
         LA    R8,1(,R8)           COUNT RETURNED TG'S                  N2516000
         LR    R1,R0               R1 = BYTE OFFSET & BIT MASK          N2518000
         SRL   R1,16               R1 = BYTE OFFSET                     N2520000
         IC    R4,0(R1,R9)         R4 = BYTE CONTAINING BIT          R4 N2522000
         XR    R4,R0               RETURN TG BIT TO BYTE                N2524000
         STC   R4,0(R1,R9)         RETURN BYTE TO MAP                R4 N2526000
         SPACE 1                                                    R41 N2527000
KBLOBA   BXLE  R5,R6,KBLOBR        TRY NEXT TGB ENTRY                   N2528000
         EJECT                                                          N2530000
*********************************************************************** N2532000
*                                                                     * N2534000
*              CALCULATE NUMBER OF TG'S FOR TGB                       * N2536000
*                                                                     * N2538000
*********************************************************************** N2540000
         SPACE 1                                                        N2542000
         SLR   R2,R2               R2 = NUMBER OF TG'S               R4 N2544000
         IC    R2,$NUMTGBE               PER TGB               @OZ17486 N2546000
*              THIS LINE DELETED BY APAR NUMBER                @OZ17486 N2548000
*              THIS LINE DELETED BY APAR NUMBER                @OZ17486 N2550000
*              THIS LINE DELETED BY APAR NUMBER                @OZ17486 N2552000
*              THIS LINE DELETED BY APAR NUMBER                @OZ17486 N2554000
*              THIS LINE DELETED BY APAR NUMBER                @OZ17486 N2556000
*              THIS LINE DELETED BY APAR NUMBER                @OZ17486 N2558000
*              THIS LINE DELETED BY APAR NUMBER                @OZ17486 N2560000
*              THIS LINE DELETED BY APAR NUMBER                @OZ17486 N2562000
*              THIS LINE DELETED BY APAR NUMBER                @OZ17486 N2564000
*              THIS LINE DELETED BY APAR NUMBER                @OZ17486 N2566000
         SPACE 1                                                     R4 N2568000
KBLOBS   STC   R2,$BLBTGBA         STORE NEW TGB COUNT               R4 N2570000
         SPACE 1                                                        N2572000
*********************************************************************** N2574000
*                                                                     * N2576000
*              COUNT THE NO. OF TG'S ALLOCATED IN ALL EXTENTS         * N2578000
*                                                                     * N2580000
*********************************************************************** N2582000
         SPACE 1                                                        N2584000
KBLOBM   L     R1,$SVTGTOT         R1 = TOTAL TG'S AVAILABLE            N2586000
         LA    R4,KBLOBT           R4 = LOOP START ADDRESS              N2588000
         L     R2,$CYLMAPL         R2 = NUMBER OF BYTES IN MAP       R4 N2590000
         L     R9,$TGMAP           R9 = ADDRESS OF                   R4 N2592000
         BCT   R9,KBLOBT                 MASTER TRACK GROUP - 1      R4 N2594000
         SPACE 1                                                     R4 N2596000
KBLOBT   IC    R3,0(R9,R2)         R3 = BYTE FROM MAP                R4 N2598000
         IC    R3,KNBITB(R3)       R3 = NUMBER OF BITS IN BYTE          N2600000
         SLR   R1,R3               R1 = NUMBER OF ALLOCATED TG'S        N2602000
         BCTR  R2,R4               PLOW THRU ENTIRE MAP                 N2604000
         SPACE 1                                                     R4 N2606000
         ST    R1,$SVTGALC         SAVE NUMBER OF ALLOCATED TG'S        N2608000
         L     R15,$AQSE           POINT TO OUR QSE                 R41 N2608500
         TM    QSESTAT-QSEDSECT(R15),QSEACTIV  TERMINATING...       R41 N2609000
         BZ    KBLBXIT             EXIT IF YES                      R41 N2609500
         EJECT                                                          N2610000
*********************************************************************** N2612000
*                                                                     * N2614000
*              IF NO TRK GROUPS, ISSUE SPOOL FULL MESSAGE             * N2616000
*                                                                     * N2618000
*********************************************************************** N2620000
         SPACE 1                                                        N2622000
         L     R0,$SVTGTOT         R0 = TOTAL AVAILABLE                 N2624000
         SR    R0,R1               R0 = CURRENT AVAILABLE               N2626000
         BNZ   KBLBOFFA            BRANCH IF NOT DEPLETED               N2628000
         STCK  PCER1               STORE TIME-OF-DAY CLOCK          R41 N2630000
         L     R0,PCER1            PICK UP 'SECONDS' PORTION        R41 N2630500
         SRL   R0,5                CONVERT TO 32-SECOND UNITS       R41 N2631000
         TM    $BLBFLAG,KBLBPERB   'SPOOL FULL' MSG ISSUED...  @OZ27300 N2632000
         BZ    KBLBFULL            IF NOT, ISSUE MSG IMMEDIATELY    R41 N2632500
         CL    R0,CKPBTIME         SEE IF ABOUT 30 SEC HAVE PASSED  R41 N2633000
         BNH   KBLBXIT             EXIT IF NOT                      R41 N2633500
         SPACE 1                                                    R41 N2634000
KBLBFULL ST    R0,CKPBTIME         UPDATE TIME STAMP FOR NEXT TIME  R41 N2634500
         OI    $BLBFLAG,KBLBPERB   SET 'SPOOL FULL' MSG ISSUED @OZ27300 N2635000
         LR    R9,R14              SAVE LINK REGISTER                   N2636000
         $WTO  KM355,L'KM355,                                          CN2638000
               JOB=NO,ROUTE=$LOG+$MAIN,                                CN2640000
               CLASS=$ALWAYS,PRI=$HI,                                  CN2642000
               WAIT=NO                                                  N2644000
         LR    R14,R9              RESTORE LINK REGISTER                N2646000
         B     KBLBXIT             RETURN TO CALLER                     N2648000
         SPACE 1                                                    R41 N2649000
KBLBOFFA NI    $BLBFLAG,FF-KBLBPERB RESET SPOOL FULL MSG FLAG  @OZ27300 N2650000
         SPACE 1                                                        N2652000
*********************************************************************** N2654000
*                                                                     * N2656000
*              BE SURE ENOUGH TG'S FOR TGB                            * N2658000
*                                                                     * N2660000
*********************************************************************** N2662000
         SPACE 1                                                        N2664000
         IC    R3,$BLBTGBA         R3 = TGB COUNT                    R4 N2666000
         CR    R0,R3               TEST FOR SUFFICIENT TG'S             N2668000
         BNL   KBLBOK              BRANCH IF ENOUGH                     N2670000
         STC   R0,$BLBTGBA          ELSE RESET TO AVAILABLE          R4 N2672000
         EJECT                                                          N2674000
*********************************************************************** N2676000
*                                                                     * N2678000
*              INIT TED'S TO BEGIN SEARCH FROM EXTENT START           * N2680000
*                                                                     * N2682000
*********************************************************************** N2684000
         SPACE 1                                                        N2686000
KBLBOK   L     R3,$SVTFRST         R3 = 1ST TED ADDRESS                 N2688000
         SPACE 1                                                    R41 N2689000
         USING TEDDSECT,R3         TED ADDRESSABILITY                   N2690000
         SPACE 1                                                    R41 N2691000
KBLBTED  L     R2,$TGMAP           R2 = MASTER MAP START             R4 N2692000
         AH    R2,TNMO             R2 = EXTENT START                    N2694000
         ST    R2,TNCH             SET SEARCH START TO 1ST BYTE         N2696000
         LA    R3,TEDSIZ(,R3)      R3 = ADDRESS OF NEXT TED             N2698000
         CL    R3,$SVTLAST         TEST FOR LAST TED PROCESSED          N2700000
         BH    KBLOBP              BRANCH IF ALL PROCESSED              N2702000
         L     R7,TNTC             TEST FOR NULL TED                    N2704000
         LTR   R7,R7                INDICATED BY TNTC = 0               N2706000
         BNZ   KBLBTED             BRANCH IF GOOD TED                   N2708000
         SPACE 1                                                        N2710000
         DROP  R3                  FORGET THE TED                       N2712000
         SPACE 1                                                        N2714000
*********************************************************************** N2716000
*                                                                     * N2718000
*              PREPARE TO ALLOCATE TGB                                * N2720000
*                                                                     * N2722000
*********************************************************************** N2724000
         SPACE 1                                                        N2726000
KBLOBP   SLR   R2,R2               R2 = NO. TG'S                     R4 N2728000
         IC    R2,$BLBTGBA               FOR TGB                     R4 N2730000
         L     R5,$SVTTGBA         R5 = TGB START                    R4 N2732000
         USING TGBDSECT,R5         TGB ADDRESSABILITY                   N2734000
         L     R3,$SVTNEXT         R3 = NEXT MODULE TED                 N2736000
         USING TEDDSECT,R3         TED ADDRESSABILITY                   N2738000
         LA    R6,1                R6 = 1 (FOR BXLE INCR)               N2740000
         CLM   R8,1,$NUMTGBE       WHERE ANY TG'S USED...      @OZ17486 N2740100
         BE    KBLOB1              BR IF NO                    @OZ17486 N2740200
         BAL   R15,KBLBNXT         GET NEXT TED                @OZ17486 N2740300
         ST    R3,$SVTNEXT         SAVE FOR NEXT ITERATION     @OZ17486 N2740400
         EJECT                                                          N2742000
*********************************************************************** N2744000
*                                                                     * N2746000
*              USE TED TO SETUP SEARCH FOR TG                         * N2748000
*                                                                     * N2750000
*********************************************************************** N2752000
         SPACE 1                                                        N2754000
KBLOB1   L     R7,$TGMAP           R7 = MASTER MAP START             R4 N2756000
         AH    R7,TNMO             R7 = 1ST BYTE THIS EXTENT            N2758000
         AH    R7,TNMB             R7 = LAST BYTE + 1                   N2760000
         BCTR  R7,0                R7 = LAST BYTE                       N2762000
         L     R8,TNCH             R8 = SEARCH START ADDRESS            N2764000
         SPACE 1                                                        N2766000
*********************************************************************** N2768000
*                                                                     * N2770000
*              ALLOCATE TG USING EXTREME ALGORITHM                    * N2772000
*                                                                     * N2774000
*********************************************************************** N2776000
         SPACE 1                                                        N2778000
KBLOB2   CLI   0(R8),0             TEST FOR AVAILABLE TRACK GROUP       N2780000
         BNE   KBLOB3              BRANCH IF SOMETHING AVAIL            N2782000
         BXLE  R8,R6,KBLOB2        SEARCH WHOLE MODULE                  N2784000
         BAL   R15,KBLBNXT         GET NEXT TED                         N2786000
         B     KBLOB1               AND TRY AGAIN                       N2788000
         SPACE 1                                                        N2790000
*********************************************************************** N2792000
*                                                                     * N2794000
*              SAVE NEW SEARCH START, BIT NO. & MASK                  * N2796000
*                                                                     * N2798000
*********************************************************************** N2800000
         SPACE 1                                                        N2802000
KBLOB3   ST    R8,TNCH             SAVE NEW SEARCH START ADDR           N2804000
         IC    R1,0(,R8)           R1 = ALLOCATION BYTE                 N2806000
         LA    R0,X'FF'            R0 = X'FF' (FOR MASK)                N2808000
         NR    R0,R1               CLEAR BYTES 0,1 & 2                  N2810000
         LA    R1,X'80'            ASSUME 1ST BIT IS 1                  N2812000
         SR    R7,R7               R7 = 0 (BIT NUMBER)                  N2814000
         SPACE 1                                                    R41 N2815000
KBLOB4   CR    R1,R0               LOOK FOR 1ST BIT THAT'S = 1          N2816000
         BNH   KBLOB5              BRANCH WHEN FOUND                    N2818000
         SRL   R1,1                TRY NEXT BIT                         N2820000
         ALR   R7,R6               DING THE BIT NUMBER                  N2822000
         B     KBLOB4               AND REPEAT LOOP                     N2824000
         EJECT                                                          N2826000
*********************************************************************** N2828000
*                                                                     * N2830000
*              SHOW MASTER MAP ALLOCATION & SET TGB ENTRY             * N2832000
*                                                                     * N2834000
*********************************************************************** N2836000
         SPACE 1                                                        N2838000
KBLOB5   IC    R0,0(,R8)           R0 = ALLOCATION BYTE                 N2840000
         XR    R0,R1               REMOVE TG BIT                        N2842000
         STC   R0,0(,R8)           SHOW TG ALLOCATION                   N2844000
         SL    R8,$TGMAP           R8 = OFFSET WITHIN TRK GROUP MAP  R4 N2846000
         STH   R8,TGBYTEN          STORE BYTE OFFSET IN TGB             N2848000
         SH    R8,TNMO             R8 = OFFSET FROM EXTENT              N2850000
         STC   R1,TGBBITM+1        STORE BIT MASK IN TGB                N2852000
         SLL   R8,3                RELATIVE BYTE NO. * 8                N2854000
         ALR   R7,R8                PLUS BIT NO. = TG NO.               N2856000
         MH    R7,TNTG             R7 = TT (TRACK NO.)                  N2858000
         SLL   R7,8                R7 = 0TT0                            N2860000
         O     R7,TNMD             R7 = MTT0                            N2862000
         IC    R7,=X'01'           R7 = MTTR                            N2864000
         ST    R7,TGBMTTR          STORE IN TGB                         N2866000
         SPACE 1                                                        N2868000
*********************************************************************** N2870000
*                                                                     * N2872000
*              GET NEXT TED & INCREMENT TG ALLOC COUNT                * N2874000
*                                                                     * N2876000
*********************************************************************** N2878000
         SPACE 1                                                        N2880000
         BAL   R15,KBLBNXT         GET NEXT TED                         N2882000
         L     R1,$SVTGALC         R1 = NUMBER OF TG'S ALLOC            N2884000
         ALR   R1,R6               DING BY 1                            N2886000
         ST    R1,$SVTGALC          FOR THIS ALLOCATION                 N2888000
         LA    R5,TGBSIZE(,R5)     R5 = NEXT TGB ENTRY                  N2890000
         BCT   R2,KBLOB1           ALLOCATE NEXT TGB ENTRY              N2892000
         OI    $BLBFLAG,KBLBFILL   SHOW TGB FILLED             @OZ27300 N2894000
         EJECT                                                          N2896000
*********************************************************************** N2898000
*                                                                     * N2900000
*              ISSUE WARNING MESSAGE IF % LIMIT REACHED               * N2902000
*                                                                     * N2904000
*********************************************************************** N2906000
         SPACE 1                                                        N2908000
         SLR   R0,R0               R0 = 0 (FOR DIVISION)                N2910000
         MH    R1,=H'100'          R1 = 100 * NO. ALLOCATED             N2912000
         D     R0,$SVTGTOT         R1 = % ALLOCATED                     N2914000
         CLM   R1,1,$TGWARN        IS IT WARNING TIME                R4 N2916000
         BL    KBLBOFFB            BRANCH IF NOT                        N2918000
         STCK  PCER1               STORE TOD CLOCK                  R41 N2920000
         L     R0,PCER1            PICK UP 'SECONDS' PORTION        R41 N2920800
         SRL   R0,5                CONVERT TO 32-SECOND UNITS       R41 N2921200
         CL    R0,CKPBTIME         SEE IF ABOUT 30 SEC HAVE PASSED  R41 N2922000
         BNH   KBLBXIT             SKIP MESSAGE IF NOT         @OZ27300 N2922800
         ST    R0,CKPBTIME         UPDATE TIME STAMP FOR NEXT TIME  R41 N2923200
         CLC   $SVTGALC,$SVTGTOT   IS THE % MEANINGFUL               R4 N2924000
         BH    KBLBOFFB            IF NOT (INIT NOT COMPLETE)        R4 N2926000
         LR    R9,R14              SAVE LINK REGISTER                   N2930000
         MVC   CKPMSG(L'KTWMM),KTWMM  MOVE MSG TO WORK AREA         R41 N2931000
         MVC   CKPMSG+2(4),KTWME   MOVE EDIT PATTERN TO MSG         R41 N2932000
         CVD   R1,CKPDBL           CONVERT PERCENT TO DECIMAL       R41 N2934000
         ED    CKPMSG+2(4),CKPDBL+6  EDIT PERCENT INTO MSG          R41 N2936000
        $WTO   CKPMSG,L'KTWMM,     ISSUE WARNING                    R41CN2938000
               ROUTE=$LOG+$MAIN,                                       CN2940000
               CLASS=$ALWAYS,PRI=$HI,                                  CN2942000
               JOB=NO,WAIT=NO                                       R41 N2944000
         LR    R14,R9              RESTORE LINK REG                     N2946000
         B     KBLBXIT             BYPASS RESET CODE           @OZ27300 N2948000
         SPACE 1                                                    R41 N2949000
KBLBOFFB SLR   R0,R0               SHOW WARNING MESSAGE             R41 N2950000
         ST    R0,CKPBTIME          NOT ISSUED YET                  R41 N2951000
                                   PRINT OFF - SECTION DELETED @OZ27300 N2952000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N2954000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N2956000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N2958000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N2960000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N2962000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N2964000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N2966000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N2968000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N2969000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N2970000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N2972000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N2974000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N2976000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N2978000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N2980000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N2982000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N2984000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N2986000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N2988000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N2990000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N2992000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N2994000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N2996000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N2998000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N3000000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N3002000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N3004000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N3006000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N3008000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N3010000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N3012000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N3014000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N3016000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N3018000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N3020000
                                   PRINT ON -- SECTION DELETED @OZ27300 N3022000
         EJECT                                                          N3024000
*********************************************************************** N3026000
*                                                                     * N3028000
*              RESTORE REGISTERS &RETURN                              * N3030000
*                                                                     * N3032000
*********************************************************************** N3034000
         SPACE 1                                                        N3036000
KBLBXIT  LM    R2,BASE2,PCEWA      RESTORE R2 - R12 FROM PCE   @OZ27300 N3038000
         BR    R14                 RETURN TO CALLER                     N3040000
         SPACE 1                                                        N3042000
*********************************************************************** N3044000
*                                                                     * N3046000
*              SUBROUTINE TO SET R3 = NEXT TED ADDRESS                * N3048000
*                                                                     * N3050000
*********************************************************************** N3052000
         SPACE 1                                                        N3054000
KBLBFRO  L     R3,$SVTFRST         POINT TO FIRST TED                   N3056000
         BR    R15                 RETURN TO CALLER                     N3058000
         SPACE 1                                                    R41 N3059000
KBLBNXT  LA    R3,TEDSIZ(,R3)      STEP TO NEXT TED                     N3060000
         CL    R3,$SVTLAST         TEST FOR STEPPING TOO FAR            N3062000
         BH    KBLBFRO             BRANCH IF TOO FAR                    N3064000
         OC    TNTC,TNTC           TEST FOR NULL TED                    N3066000
         BNZR  R15                 RETURN IF GOOD TED                   N3068000
         B     KBLBFRO             ELSE, GET FIRST ONE                  N3070000
         SPACE 1                                                        N3072000
         DROP  R3,R5,JCT,BASE2     DROP ADDRESSABILITY         @OZ27300 N3074000
         EJECT                                                 @OZ27300 N3076000
                                   PRINT OFF - SECTION DELETED @OZ27300 N3078000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N3080000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N3092000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N3092100
*                                  THIS CARD DELETED BY APAR   @OZ27300 N3092200
*                                  THIS CARD DELETED BY APAR   @OZ27300 N3092300
                                   PRINT ON -- SECTION DELETED @OZ27300 N3094000
KTWMM    $MSG  093,'NNNN% SPOOL UTILIZATION'                            N3096000
KTWME    DC    X'40202120'         EDIT PATTERN                      R4 N3100000
KM355M   $MSG  355,'SPOOL VOLUMES ARE FULL'                             N3104000
KM355    EQU   KM355M,*-KM355M                                          N3106000
KBLBFILL EQU   X'04'               TGB HAS BEEN FILLED         @OZ27300 N3110000
KBLBPERB EQU   X'02'               SPOOL FULL MESSAGE FLAG     @OZ27300 N3112000
KNBITB   DC    AL1(0,1,1,2,1,2,2,3,1,2,2,3,2,3,3,4)    A                N3114000
         DC    AL1(1,2,2,3,2,3,3,4,2,3,3,4,3,4,4,5)    BYTE             N3116000
         DC    AL1(1,2,2,3,2,3,3,4,2,3,3,4,3,4,4,5)    INDEX            N3118000
         DC    AL1(2,3,3,4,3,4,4,5,3,4,4,5,4,5,5,6)    INTO             N3120000
         DC    AL1(1,2,2,3,2,3,3,4,2,3,3,4,3,4,4,5)    THIS             N3122000
         DC    AL1(2,3,3,4,3,4,4,5,3,4,4,5,4,5,5,6)    TABLE            N3124000
         DC    AL1(2,3,3,4,3,4,4,5,3,4,4,5,4,5,5,6)    YIELDS           N3126000
         DC    AL1(3,4,4,5,4,5,5,6,4,5,5,6,5,6,6,7)    THE              N3128000
         DC    AL1(1,2,2,3,2,3,3,4,2,3,3,4,3,4,4,5)    NUMBER           N3130000
         DC    AL1(2,3,3,4,3,4,4,5,3,4,4,5,4,5,5,6)    OF               N3132000
         DC    AL1(2,3,3,4,3,4,4,5,3,4,4,5,4,5,5,6)    BITS             N3134000
         DC    AL1(3,4,4,5,4,5,5,6,4,5,5,6,5,6,6,7)    ON               N3136000
         DC    AL1(2,3,3,4,3,4,4,5,3,4,4,5,4,5,5,6)    IN               N3138000
         DC    AL1(3,4,4,5,4,5,5,6,4,5,5,6,5,6,6,7)    THE              N3140000
         DC    AL1(3,4,4,5,4,5,5,6,4,5,5,6,5,6,6,7)    BYTE             N3142000
         DC    AL1(4,5,5,6,5,6,6,7,5,6,6,7,6,7,7,8)    INDEX            N3144000
         EJECT                                                       R4 N3146000
         LTORG                                                          N3148000
         TITLE 'HASP PRIORITY AGING PROCESSOR'                          N3150000
HASPGPRC $ENTRY BASE=BASE2         HASP PRIORITY AGING PROCESSOR        N3152000
         ST    SAVE,GPRTQE+IPOST   SET PCE ADDRESS IN STQE              N3154000
         LH    R1,$PRIRATE         GET PRIORITY AGING RATE           R4 N3156000
         LR    R2,R1               SAVE IT                           R4 N3158000
         SRL   R1,1                COMPUTE                           R4 N3160000
         AL    R1,GPRINT            AND                              R4 N3162000
         SLR   R0,R0                 SAVE                            R4 N3164000
         DR    R0,R2                  AGING                          R4 N3166000
         LCR   R1,R1                   TIME                          R4 N3168000
         ST    R1,GPRINT                INTERVAL (COMPLEMENT)        R4 N3170000
         LR    R1,R2               COMPUTE                           R4 N3172000
         SRL   R1,1                 AND                              R4 N3174000
         AL    R1,GPRSEC             SAVE                            R4 N3176000
         SLR   R0,R0                  TIME                           R4 N3178000
         DR    R0,R2                   ADJUSTMENT                    R4 N3180000
         AL    R1,$SYNCTOL              IN                           R4 N3182000
         ST    R1,GPRSEC                 SECONDS                     R4 N3184000
         EJECT                                                       R4 N3186000
*********************************************************************** N3188000
*                                                                     * N3190000
*        SCAN JOB QUEUE FOR ACTIVE JOB                                * N3192000
*                                                                     * N3194000
*********************************************************************** N3196000
         SPACE 1                                                     R4 N3198000
GPRSTART LA    WB,$JQTYPES*2       PREPARE TO TEST FOR ACTIVE JOB Q     N3200000
         SPACE 1                                                        N3202000
         LH    R1,$JQHEADS-2(WB)   GET 1ST ACTIVE JQE OFFSET            N3204000
         LTR   R1,R1               TEST                                 N3206000
         BNZ   GPRTIME             BRANCH IF JOB QUEUE IS NOT EMPTY     N3208000
         BCTR  WB,0                IF ANOTHER JOB QUEUE,                N3210000
         BCT   WB,*-12              BR TO TEST IT                       N3212000
         SPACE 1                                                        N3214000
         $WAIT JOB                 EMPTY, WAIT FOR A JOB                N3216000
         B     GPRSTART            GO BACK AND TRY AGAIN                N3218000
         SPACE 1                                                        N3220000
GPRTIME  L     R1,GPRINT           SET                                  N3222000
         ST    R1,GPRTQE+ITIME      AGING TIME                       R4 N3224000
        $STIMER GPRTQE               INTERVAL                        R4 N3226000
         $WAIT WORK                WAIT FOR TIME INTERVAL TO EXPIRE     N3228000
         $QSUSE                    REQUEST ACCESS TO SHARED QUEUES      N3230000
         STCK  GPRCLOCK            STORE CURRENT CLOCK                  N3232000
         BC    3,GPRSCAN           BRANCH IF INVALID CLOCK              N3234000
         L     R1,GPRCLOCK         GET CURRENT TIME                     N3236000
         SL    R1,GPRSEC           COMPUTE APPROXIMATE PREVIOUS TIME    N3238000
         LH    R0,$QSENO           GET COUNT OF MEMBERS IN NODE      R4 N3240000
         L     R15,$QSE1           GET ADDRESS OF 1ST QSE            R4 N3242000
         SPACE 1                                                    R41 N3244000
         USING QSEDSECT,R15        ESTABLISH QSE ADDRESSABILITY         N3246000
         SPACE 1                                                        N3248000
GPRQSE   CLC   QSESID,$SID         COMPARE SID'S                        N3250000
         BE    GPRSCAN             BRANCH IF THIS CPU IS 1ST ACTIVE     N3252000
         CL    R1,QSESITIM         COMPARE TIMES                        N3254000
         BL    GPRTIME             BRANCH IF ANOTHER CPU IS ACTIVE      N3256000
         LA    R15,QSELEN(,R15)    GET ADDRESS OF NEXT QSE     @OZ27300 N3258000
         BCT   R0,GPRQSE           BR IF VALID QSE ADDRESS           R4 N3260000
         SPACE 1                                                     R4 N3262000
         DROP  R15                 DROP QSE ADDRESSABILITY              N3264000
         EJECT                                                      R41 N3266000
GPRSCAN  LA    WB,$JQTYPES*2       PREPARE TO SCAN ALL JOB QUEUES       N3268000
         SPACE 1                                                     R4 N3270000
         USING JQEDSECT,R1         JOB QUEUE ADDRESSABILITY             N3272000
         SPACE 1                                                        N3274000
GPRQUE1  LH    R1,$JQHEADS-2(WB)   PREPARE TO SCAN NEXT JOB QUEUE       N3276000
         LA    WC,$PRIHIGH         POINT TO HI/LO PRIO AGING VALUES R41 N3276100
         CL    WB,GPRHDCPY         TEST FOR $HARDCPY QUEUE,         R41 N3276200
         BNE   GPRLOOP1              SKIP IF NOT                    R41 N3276300
         LA    WC,GPRHCPRI         POINT TO $HARDCPY HI/LO VALUES   R41 N3276400
         SPACE 1                                                        N3278000
GPRLOOP1 N     R1,=X'0000FFFF'     CLEAR H.O. TWO BYTES AND TEST        N3280000
         BZ    GPREND1             BRANCH IF END-OF-CHAIN               N3282000
         SLL   R1,2                EXPAND TO FULL ADDRESS OFFSET        N3284000
         AL    R1,$JOBQPTR         ADD JOB QUEUE ADDRESS                N3286000
         CLC   JQEPRIO,0(WC)       COMPARE PRIO WITH UPPER LIMIT    R41 N3288000
         BL    GPRLOOP2            BRANCH IF LESS                       N3290000
         LH    R1,JQECHAIN         NO, GET OFFSET OF NEXT ELEMENT       N3292000
         B     GPRLOOP1            TEST NEXT ELEMENT                    N3294000
         SPACE 1                                                        N3296000
GPREND1  BCTR  WB,0                IF ANOTHER JOB QUEUE,                N3298000
         BCT   WB,GPRQUE1           BR TO SCAN IT                       N3300000
         B     GPRSTART              ELSE START OVER                    N3302000
         SPACE 1                                                        N3304000
GPRLOOP2 CLC   JQEPRIO,1(WC)       COMPARE PRIO WITH LOWER LIMIT    R41 N3306000
         BL    GPREND1             BR IF LESS -- DONE WITH QUEUE     R4 N3308000
         IC    WA,JQEPRIO          INCREMENT                            N3310000
         LA    WA,1(,WA)            JOB QUEUE                           N3312000
         STC   WA,JQEPRIO            PRIORITY                           N3314000
        $QCKPT (R1)                CHECKPOINT THE JQE                R4 N3316000
         LH    R1,JQECHAIN         GET OFFSET OF NEXT ELEMENT           N3318000
         N     R1,=X'0000FFFF'     CLEAR H.O. TWO BYTES AND TEST        N3320000
         BZ    GPREND1             BRANCH IF END-OF-CHAIN               N3322000
         SLL   R1,2                EXPAND TO FULL ADDRESS OFFSET        N3324000
         AL    R1,$JOBQPTR         ADD JOB QUEUE ADDRESS                N3326000
         B     GPRLOOP2            TEST NEXT ELEMENT                    N3328000
         SPACE 1                                                        N3330000
GPRCLOCK EQU   PCER1,8             STORAGE FOR CLOCK                 R4 N3332000
GPRINT   DC    A(540000)           TIME INTERVAL (UNADJUSTED)        R4 N3334000
GPRSEC   DC    A(5400)             TIME IN SECONDS (UNADJUSTED)      R4 N3336000
GPRTQE   EQU   PCEWORK             HASP TIMER QUEUE ELEMENT          R4 N3338000
GPRHDCPY DC    A(4)                OFFSET OF $HARDCPY QUEUE         R41 N3338100
GPRHCPRI DC    AL1(X'EF',X'10')    $PRIHIGH, $PRILOW FOR $HARDCPY   R41 N3338200
         SPACE 1                                                        N3340000
         LTORG                                                          N3342000
         TITLE 'HASP JOB QUEUE WARM START -- INITIAL ENTRY POINT'       N3344000
*********************************************************************** N3346000
*                                                                     * N3348000
* PROCESSOR NAME -- HASPWARM                                          * N3350000
*                                                                     * N3352000
* DESCRIPTIVE NAME -- JES2 JOB QUEUE WARM START PROCESSOR             * N3354000
*                                                                     * N3356000
* FUNCTION --  PROVIDE WARM START PROCESSING OF THE JES2 JOB QUEUE    * N3358000
*              AND JOB OUTPUT TABLE (JOT) FOR ONE OR MORE SYSTEMS     * N3360000
*              IN A JES2 NODE.                                        * N3362000
*                                                                     * N3364000
* NOTES -- 1)  WHILE THIS PROCESSOR IS ACTIVE, THE SYSTEM BEING       * N3366000
*              WARM STARTED IS LOCKED TO PREVENT OTHER SYSTEMS        * N3368000
*              FROM ATTEMPTING TO WARM START IT.                      * N3370000
*                                                                     * N3372000
*          2)  MASTER BIT MAP RECONSTRUCTION IS PERFORMED ONLY        * N3374000
*              WHEN A WARM START IS BEING PERFORMED ON BEHALF OF      * N3376000
*              ALL SYSTEMS IN THE NODE.                               * N3378000
*                                                                     * N3380000
* REGISTER CONVENTIONS -- R0  -- WORK REGISTER                        * N3382000
*                         R1  -- WORK REGISTER                        * N3384000
*                         WA  -- WORK/SJB ADDRESS                     * N3386000
*                         WB  -- HQT ADDRESS                          * N3388000
*                         WC  -- QSE ADDRESS                          * N3390000
*                         WD  -- JQE ADDRESS                          * N3392000
*                         WE  -- WORK/LINK REGISTER                   * N3394000
*                         WF  -- IOT ADDRESS                          * N3396000
*                         JCT -- JCT ADDRESS                          * N3398000
*                                                                     * N3400000
*********************************************************************** N3402000
         EJECT                                                          N3404000
*********************************************************************** N3406000
*                                                                     * N3408000
*        H A S P W A R M   I N I T I A L   E N T R Y   P O I N T      * N3410000
*                                                                     * N3412000
*********************************************************************** N3414000
         SPACE 2                                                        N3416000
NQHQT    EQU   WB                  HQT ADDRESS                          N3418000
NQSE     EQU   WC                  QSE ADDRESS                          N3420000
NQ       EQU   WD                  JQE ADDRESS                          N3422000
NQIOT    EQU   WF                  IOT ADDRESS                          N3424000
NQJCT    EQU   JCT                 JCT ADDRESS                          N3426000
         SPACE 1                                                        N3428000
         USING QSEDSECT,NQSE       PROVIDE QSE ADDRESSABILITY           N3430000
         USING IOTDSECT,NQIOT      PROVIDE IOT ADDRESSABILITY           N3432000
         USING JCTDSECT,NQJCT      PROVIDE JCT ADDRESSABILITY           N3434000
         USING JQEDSECT,WD         PROVIDE JQE ADDRESSABILITY           N3436000
         USING $SVDSECT,R15        PROVIDE SSVT ADDRESSABILITY       R4 N3438000
         SPACE 2                                                     R4 N3440000
HASPWARM $ENTRY BASE=(BASE2,BASE3) PROVIDE PROCESSOR ENTRY POINT     R4 N3442000
         SPACE 1                                                        N3444000
         LA    BASE3,2048(,BASE2)  SET SECOND                        R4 N3446000
         LA    BASE3,2048(,BASE3)   BASE REGISTER                    R4 N3448000
         L     R15,$SSVT           POINT TO SSVT                     R4 N3450000
         TM    $SVHASP,X'80'       TEST FOR JES2 RESTART             R4 N3452000
         BZ    SKIP20              BR IF NO                          R4 N3454000
         OI    NQSTAT,NQRESTRT      ELSE INDICATE RESTART            R4 N3456000
SKIP20   B     NQWARM              THEN BR TO SHOW PROCESSOR ACTIVE     N3458000
         SPACE 1                                                        N3460000
*********************************************************************** N3462000
*                                                                     * N3464000
*        $ W A I T   F O R   $ E S Y S   C O M M A N D                * N3466000
*                                                                     * N3468000
*********************************************************************** N3470000
         SPACE 1                                                        N3472000
NQ000   $WAIT  WORK                $WAIT FOR $ESYS COMMAND              N3474000
         SPACE 1                                                        N3476000
NQWARM  $ACTIVE                    INDICATE PROCESSOR ACTIVE            N3478000
         L     NQSE,$ESYSQSE       GET WARM STARTED SYSTEM QSE ADDR     N3480000
         LH    R1,$NUMRJE          GET NUMBER OF REMOTES             R4 N3482000
         LTR   R1,R1               TEST COUNT                        R4 N3484000
         BZ    NQCKCOLD            BR IF NONE                        R4 N3486000
     TITLE 'HASP JOB QUEUE WARM START -- REMOTE SIGN-ON TABLE RESET'    N3488000
*********************************************************************** N3490000
*                                                                     * N3492000
*        R E M O T E   S I G N - O N   T A B L E   R E S E T          * N3494000
*                                                                     * N3496000
*********************************************************************** N3498000
         SPACE 1                                                        N3500000
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    N3502000
         L     WA,$RMTSON          POINT TO REMOTE SIGN-ON TABLE     R4 N3504000
         LTR   NQSE,NQSE           IF SPECIFIC SYSTEM WARM START,       N3506000
         BNZ   NQRMT20              BR TO CLEAR THIS SYSTEM'S IDS       N3508000
         MH    R1,=H'3'            R1 = SIZE (IN BYTES)              R4 N3510000
         LA    R1,7(,R1)                 OF REMOTE                   R4 N3512000
         SRL   R1,3                       SIGN-ON TABLE              R4 N3514000
         SPACE 1                                                     R4 N3516000
SKIP30   MVI   0(WA),0             CLEAR                             R4 N3518000
         LA    WA,1(,WA)            ENTIRE                           R4 N3520000
         BCT   R1,SKIP30             SIGN-ON TABLE                   R4 N3522000
         SPACE 1                                                     R4 N3524000
        $POST  $HASPECF,CKPW       $POST THE CHECKPOINT WRITER          N3526000
         B     NQCKCOLD            THEN BR TO TEST FOR COLD START       N3528000
         SPACE 1                                                        N3530000
NQRMT20  SLR   R0,R0               GET SYSTEM ID                        N3532000
         IC    R0,QSESIBSY          FROM QSE                            N3534000
         SPACE 1                                                        N3536000
NQRMT40  LA    WB,8                NUMBER OF IDS PER 3-BYTE TBL SEG     N3538000
         ICM   R15,14,0(WA)        LOAD 3-BYTE SEGMENT FROM TABLE       N3540000
         SPACE 1                                                        N3542000
NQRMT60  SLR   R14,R14             IF REMOTE                            N3544000
         SLDL  R14,3                NOT SIGNED ON                       N3546000
         CLR   R0,R14                TO THIS SYSTEM,                    N3548000
         BNE   *+8                    BR TO TEST NEXT REMOTE            N3550000
         BAL   WE,NQRESET              ELSE RESET SYSTEM ID             N3552000
         BCT   R1,NQRMT80          BR IF ANOTHER REMOTE TO TEST         N3554000
         B     NQCKCOLD             ELSE BR TO TEST FOR COLD START      N3556000
         SPACE 1                                                        N3558000
NQRMT80  BCT   WB,NQRMT60          BR IF ANOTHER ID IN TABLE SEGMENT    N3560000
         LA    WA,3(,WA)            ELSE POINT TO NEXT TABLE SEGMENT    N3562000
         B     NQRMT40               AND BR TO SCAN IT                  N3564000
         EJECT                                                          N3566000
*********************************************************************** N3568000
*                                                                     * N3570000
*        R E S E T   S I G N - O N   T A B L E   S Y S T E M   I D    * N3572000
*                                                                     * N3574000
*********************************************************************** N3576000
         SPACE 1                                                        N3578000
NQRESET $POST  $HASPECF,CKPW       $POST THE CHECKPOINT WRITER          N3580000
         LR    R14,WB              A SEPARATE RTN EXISTS TO RESET       N3582000
         SLL   R14,2                EACH OF THE 8 GROUPS OF 3 BITS      N3584000
         B     *(R14)                IN THE CURRENT 3-BYTE TBL SEG      N3586000
         SPACE 1                                                        N3588000
         B     NQID8               BR TO RESET ID FOR 8TH REMOTE        N3590000
         B     NQID7               BR TO RESET ID FOR 7TH REMOTE        N3592000
         B     NQID6               BR TO RESET ID FOR 6TH REMOTE        N3594000
         B     NQID5               BR TO RESET ID FOR 5TH REMOTE        N3596000
         B     NQID4               BR TO RESET ID FOR 4TH REMOTE        N3598000
         B     NQID3               BR TO RESET ID FOR 3RD REMOTE        N3600000
         B     NQID2               BR TO RESET ID FOR 2ND REMOTE        N3602000
         SPACE 1                                                        N3604000
NQID1    NI    0(WA),X'1F'         RESET SYSTEM ID                      N3606000
         BR    WE                   AND RETURN                          N3608000
         SPACE 1                                                        N3610000
NQID2    NI    0(WA),X'E3'         RESET SYSTEM ID                      N3612000
         BR    WE                   AND RETURN                          N3614000
         SPACE 1                                                        N3616000
NQID3    NI    0(WA),X'FC'         RESET                                N3618000
         NI    1(WA),X'7F'          SYSTEM ID                           N3620000
         BR    WE                    AND RETURN                         N3622000
         SPACE 1                                                        N3624000
NQID4    NI    1(WA),X'8F'         RESET SYSTEM ID                      N3626000
         BR    WE                   AND RETURN                          N3628000
         SPACE 1                                                        N3630000
NQID5    NI    1(WA),X'F1'         RESET SYSTEM ID                      N3632000
         BR    WE                   AND RETURN                          N3634000
         SPACE 1                                                        N3636000
NQID6    NI    1(WA),X'FE'         RESET                                N3638000
         NI    2(WA),X'3F'          SYSTEM ID                           N3640000
         BR    WE                    AND RETURN                         N3642000
         SPACE 1                                                        N3644000
NQID7    NI    2(WA),X'C7'         RESET SYSTEM ID                      N3646000
         BR    WE                   AND RETURN                          N3648000
         SPACE 1                                                        N3650000
NQID8    NI    2(WA),X'F8'         RESET SYSTEM ID                      N3652000
         BR    WE                   AND RETURN                          N3654000
         SPACE 1                                                        N3656000
NQCKCOLD LTR   NQSE,NQSE           IF SPECIFIC SYSTEM WARM START,       N3658000
         BNZ   NQTQUICK            BR AROUND COLD START TEST   @OZ41702 N3660000
         TM    $OPTSTAT,$OPTCOLD+$OPTFMT  IF COLD START,             R4 N3662000
         BNZ   NQ700                BR AROUND WARM START             R4 N3664000
         B     NQSETST             ELSE DO NODAL WARM START    @OZ41702 N3664100
NQTQUICK TM    QSESTAT,QSEQUICK    BYPASS WARM START LOGIC IF  @OZ41702 N3664200
         BO    NQ700                SYS ALREADY WARM STARTED   @OZ41702 N3664300
    TITLE 'HASP JOB QUEUE WARM START -- OUTPUT PROCESSOR WARM START'    N3666000
*********************************************************************** N3668000
*                                                                     * N3670000
*        O U T P U T   P R O C E S S O R   W A R M   S T A R T        * N3672000
*                                                                     * N3674000
*********************************************************************** N3676000
         SPACE 1                                                        N3678000
NQSETST $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA R4 N3680000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N3682000
         LTR   WA,NQSE             IF SINGLE SYSTEM WARM START,         N3684000
         BNZ   NQSEONE              BR TO TEST SYSTEM STATUS            N3686000
         L     WA,$QSE1            POINT TO 1ST QSE                  R4 N3688000
         SPACE 1                                                        N3690000
NQSENXT1 ICM   WB,15,QSEOPJNO-QSEDSECT(WA)  IF OUTPUT PROCESSOR BSY,    N3692000
         BNZ   NQSEACTV                      BR TO XFER JOT INFO        N3694000
         SPACE 1                                                        N3696000
NQSENEXT TM    QSEFLAGS-QSEDSECT(WA),QSELAST  IF ANOTHER                N3698000
         LA    WA,QSELEN(,WA)                  QSE,            @OZ27300 N3700000
         BZ    NQSENXT1                         LOOP,                   N3702000
         B     NQ020                ELSE BR TO WARM START THE JOT       N3704000
         SPACE 1                                                        N3706000
NQSEONE  ICM   WB,15,QSEOPJNO      IF SYSTEM NOT IN OUTPUT PROC'G,      N3708000
         BZ    NQ020                BR TO WARM START THE JOT            N3710000
         SPACE 1                                                        N3712000
NQSEACTV L     WE,$QSE1            POINT TO 1ST QSE                  R4 N3714000
         STCK  NQDBL               GET CURRENT TIME OF DAY              N3716000
         L     R15,NQDBL            ADJUSTED BY                         N3718000
         SL    R15,$SYNCTOL          CLOCK TOLERANCE                 R4 N3720000
         EJECT                                                       R4 N3722000
         USING QSEDSECT,WE         ALTER QSE ADDRESSABILITY          R4 N3724000
         SPACE 1                                                     R4 N3726000
NQSENXT2 ICM   R0,3,QSEOPJNO       IF OUTPUT PROCESSOR BUSY,         R4 N3728000
         BNZ   SKIP40               BR TO TEST NEXT QSE              R4 N3730000
         CL    R15,QSESITIM        IF SYSTEM NOT DORMANT,            R4 N3732000
         BNH   NQSEXFER             BR TO TRANSFER JOT INFO          R4 N3734000
SKIP40   TM    QSEFLAGS,QSELAST    IF ANOTHER                        R4 N3736000
         LA    WE,QSELEN(,WE)       QSE,                       @OZ27300 N3738000
         BZ    NQSENXT2              LOOP                            R4 N3740000
         LR    WE,WA                ELSE POINT TO BUSY QSE              N3742000
         B     NQSEAFF               AND BR TO ASSIGN SYSTEM AFF        N3744000
         SPACE 1                                                        N3746000
NQSEXFER STCM  WB,15,QSEOPJNO               TRANSFER OUTPUT          R4 N3748000
         SLR   R0,R0                         PROCESSOR WARM             N3750000
         STCM  R0,15,QSEOPJNO-QSEDSECT(WA)    START INFORMATION         N3752000
         SPACE 1                                                        N3754000
NQSEAFF  SRL   WB,16               LOCATE JQE                           N3756000
        $QLOC  (WB),NQSENEXT        FOR JOB                             N3758000
         NI    QUEFLAG2(R1),255-QUESYSAF  ASSIGN SYSTEM                 N3760000
         OC    QUEFLAG2(,R1),QSESIAFF        AFFINITY                R4 N3762000
        $QCKPT (R1)                FORCE CHECKPOINT OF JQE              N3764000
         LTR   NQSE,NQSE           IF NODAL WARM START,              R4 N3766000
         BZ    NQSENEXT             BR TO CONTINUE QSE SCAN             N3768000
         SPACE 1                                                     R4 N3770000
         DROP  WE                  RESTORE NORMAL QSE ADDRESSABILITY R4 N3772000
         TITLE 'HASP JOB QUEUE WARM START -- JOT WARM START'         R4 N3774000
*********************************************************************** N3776000
*                                                                     * N3778000
*        J O T   W A R M   S T A R T                                  * N3780000
*                                                                     * N3782000
*********************************************************************** N3784000
         SPACE 1                                                        N3786000
         USING JOEDSECT,WA         PROVIDE JOE ADDRESSABILITY           N3788000
         USING JOTDSECT,WB         PROVIDE JOT ADDRESSABILITY           N3790000
         SPACE 1                                                        N3792000
NQ020    L     WB,$JOTABLE         GET ADDRESS OF JOT                   N3794000
         LA    WF,72               MAXIMUM INDEX TO CLASS QUEUE         N3796000
         SPACE 1                                                        N3798000
NQ040    LA    WA,JOTCLSQ-2-(JOENEXT-JOEDSECT)(WF)  NEXT CLASS QUEUE    N3800000
         SPACE 1                                                        N3802000
NQ060    LH    WA,JOENEXT          GET NEXT WORK JOE OFFSET             N3804000
         N     WA,=X'0000FFFF'     IF END OF CLASS QUEUE,               N3806000
         BZ    NQ160                BR TO TEST NEXT CLASS QUEUE         N3808000
         SLL   WA,2                EXPAND TO BYTE OFFSET       @OZ40028 N3810000
         LR    WD,WA               SAVE JOE OFFSET             @OZ40028 N3811000
         ALR   WA,WB               CONVERT OFFSET TO ADDRESS   @OZ40028 N3812000
         TM    JOEFLAG,$JOEBUSY    IF JOE NOT IN USE,                   N3814000
         BZ    NQ060                BR TO TEST NEXT JOE                 N3816000
         LTR   NQSE,NQSE           IF NODAL WARM START,              R4 N3818000
         BZ    NQ080                BR TO RESET JOES                    N3820000
         IC    R0,JOEFLAG          IF NOT                               N3822000
         N     R0,=A(QUEBUSY)       SYSTEM BEING                        N3824000
         CLM   R0,1,QSESIBSY         WARM STARTED,                      N3826000
         BNE   NQ060                  BR TO TEST NEXT JOE               N3828000
         CLI   JOEDEVID,X'0F'      IS XWTR USING THIS JOE      @OZ30706 N3830000
         BNE   NQ080               SKIP NEXT IF NOT                  R4 N3832000
         SPACE 1                                                     R4 N3834000
*********************************************************************** N3836000
*                                                                     * N3838000
*        CHECK IF THE XWTR USING THIS JOE IS STILL ACTIVE             * N3840000
*                                                                     * N3842000
*********************************************************************** N3844000
         SPACE 1                                                     R4 N3846000
         L     R15,$SSVT          GET SSVT ADDRESS                   R4 N3848000
         LA    WE,$SVJXNUM-(SJBXQCHN-SJBDSECT) SET TO SCAN SJB'S     R4 N3850000
         SPACE 1                                                     R4 N3852000
NQ070    L     WE,SJBXQCHN-SJBDSECT(,WE) GET NEXT SJB ADDRESS        R4 N3854000
         LTR   WE,WE               IS THERE A POSSIBLE XWTR ACTIVE   R4 N3856000
         BZ    NQ080               BR IF NONE                        R4 N3858000
         L     R1,SJBPSOP-SJBDSECT(,WE) IF ACTIVE TASK IS XWTR,      R4 N3860000
         LA    R1,0(,R1)            IT WILL HAVE A PSO ADDR.         R4 N3862000
         LTR   R1,R1               TEST FOR A PSO ADDR,              R4 N3864000
         BZ    NQ070                IF NONE, BR TO GET NEXT SJB.     R4 N3866000
         CLM   WD,7,PSOWKOFF+1-PSODSECT(R1) XWTR FOR THIS JOE..@OZ40028 N3868000
         BE    NQ060               IF YES BR TO SKIP RESET, OTHERWISER4 N3870000
         B     NQ070               LOOK FOR ANOTHER XWTR ACTIVE      R4 N3872000
         SPACE 1                                                     R4 N3874000
         SPACE 1                                                        N3876000
NQ080    LH    R1,JOECHAR                POINT TO                       N3878000
         N     R1,=X'0000FFFF'            CHARACTERISTICS               N3880000
         SLL   R1,2                        JOE                       R4 N3882000
         LA    WE,JOEACTPR-JOEDSECT(R1,WB)  ACTIVE PRINTER COUNT        N3884000
         TM    JOEFLAG,$JOEPRT     IF JOB PRINTING LOCALLY,             N3886000
         BO    NQ100                BR TO DECREMENT COUNT               N3888000
         TM    JOEFLAG,$JOEPUN     IF JOB NOT PUNCHING LOCALLY,         N3890000
         BZ    NQ110                BR TO RECOMPUTE PRIORITY        R41 N3892000
         LA    WE,1(,WE)             ELSE POINT TO ACTIVE PUNCH CT      N3894000
         SPACE 1                                                        N3896000
*********************************************************************** N3898000
*                                                                     * N3900000
*        U P D A T E   A C T I V E   D E V I C E   C O U N T          * N3902000
*                                                                     * N3904000
*********************************************************************** N3906000
         SPACE 1                                                        N3908000
NQ100    IC    R0,0(,WE)           DECREMENT                            N3910000
         BCTR  R0,0                 DEVICE                              N3912000
         STC   R0,0(,WE)             COUNT                              N3914000
        $#CKPT JOE=0(,R1)          CHECKPOINT THE CHAR-JOE           R4 N3916000
         SPACE 1                                                    R41 N3917000
*********************************************************************** N3917100
*                                                                     * N3917200
*        R E C O M P U T E   J O E   P R I O R I T Y                  * N3917300
*                                                                     * N3917400
*********************************************************************** N3917500
         SPACE 1                                                    R41 N3917600
NQ110    TM    JOEFLAG,$JOECKV     IF NO CKPT INFORMATION,          R41 N3917700
         BZ    NQ120                 LEAVE PRIORITY ALONE           R41 N3917800
         LH    R1,JOECKPT          PICK UP CKPT JOE PTR,            R41 N3917900
         N     R1,=X'0000FFFF'       DELETE SIGN BITS,              R41 N3918000
         BZ    NQ120                 EXIT IF NO POINTER             R41 N3918100
         ALR   R1,R1               DEVELOP                          R41 N3918200
         ALR   R1,R1                 BYTE OFFSET                    R41 N3918300
         L     R0,JOERECCT         COMPUTE NO OF RECORDS LEFT       R41 N3918400
         S     R0,JOECRECN-JOEDSECT(R1,WB) TO PRINT OR PUNCH        R41 N3918500
         BM    NQ120               FORGET IT IF NEGATIVE            R41 N3918600
         L     R1,$SSVT            POINT TO SSVT,                   R41 N3918700
         LA    R1,$SVXPRI-4-SSVT(,R1) THEN TO PRIORITY TABLE        R41 N3918800
         LA    R14,10              SET BCT LOOP COUNTER             R41 N3918900
         SPACE 1                                                    R41 N3919000
NQ115    LA    R1,4(,R1)           BUMP TABLE POINTER               R41 N3919100
         L     R15,0(,R1)          PICK UP TABLE ENTRY,             R41 N3919200
         LA    R15,0(,R15)           DELETE PRIORITY BYTE           R41 N3919300
         CLR   R15,R0              SEE IF THIS IS RIGHT SLOT,       R41 N3919400
         BNL   NQ117                 BRANCH IF SO                   R41 N3919500
         BCT   R14,NQ115           LOOP THRU TABLE                  R41 N3919600
         SPACE 1                                                    R41 N3919700
NQ117    MVC   JOEPRIO,0(R1)       MOVE PRIORITY TO JOE             R41 N3919800
         EJECT                                                          N3919900
*********************************************************************** N3920000
*                                                                     * N3922000
*        R E S E T   J O E   F L A G S                                * N3924000
*                                                                     * N3926000
*********************************************************************** N3928000
         SPACE 1                                                        N3930000
NQ120    NI    JOEFLAG,255-$JOEBUSY-$JOEPRT-$JOEPUN  RESET JOE FLAGS    N3932000
        $#CKPT JOE=0(,R2),TYPE=A   CHECKPOINT THE WORK JOE              N3934000
        $POST  $HASPECF,CKPW       $POST THE CHECKPOINT WRITER          N3936000
         LH    NQ,JOEJQE           GET JQE                              N3938000
         N     NQ,=X'0000FFFF'      ADDRESS                             N3940000
         SLL   NQ,2                  FROM                               N3942000
         AL    NQ,$JOBQPTR            JOE                               N3944000
         TM    JQEFLAGS,QUEPURGE   IF JOB NOT BEING CANCELLED,          N3946000
         BZ    NQ140                BR TO ISSUE MESSAGE                 N3948000
        $#REM  WORK=(WA)             ELSE REMOVE JOE FROM JOT        R4 N3950000
         SPACE 1                                                        N3952000
NQ140    LA    R1,NQPRPU           SET 'WAS PRINTING/PUNCHING' MSG   R4 N3954000
         BAL   WE,NQWTO             AND INFORM THE OPERATOR             N3956000
         B     NQ040               THEN BR TO RE-SCAN THE CLS QUEUE     N3958000
         SPACE 1                                                        N3960000
*********************************************************************** N3962000
*                                                                     * N3964000
*        G E T   N E X T   C L A S S   Q U E U E                      * N3966000
*                                                                     * N3968000
*********************************************************************** N3970000
         SPACE 1                                                        N3972000
NQ160    BCTR  WF,0                DECREMENT QUEUE INDEX BY 1           N3974000
         BCT   WF,NQ040            BR IF ANOTHER CLASS QUEUE            N3976000
         B     NQPURGE              ELSE BR TO PURGE REQUEST QUEUES     N3980000
         SPACE 1                                                        N3984000
         DROP  WA,WB               KILL JOE, JOT ADDRESSABILITY         N3986000
         TITLE 'HASP JOB QUEUE WARM START -- REQUEST QUEUE PURGE'       N4232000
*********************************************************************** N4234000
*                                                                     * N4236000
*        P O S T   C A N C E L / S T A T U S ,   P S O   W A I T S    * N4238000
*                                                                     * N4240000
*********************************************************************** N4242000
         SPACE 1                                                        N4244000
         USING SJBDSECT,WA         PROVIDE SJB ADDRESSABILITY           N4246000
         SPACE 1                                                        N4248000
NQPURGE  TM    NQSTAT,NQRESTRT     IF WARM STARTING JES2,            R4 N4250000
         BZ    NQINIT               BR TO WARM START JOB QUEUE       R4 N4252000
         L     R15,$SSVT           POINT TO SSVT                     R4 N4254000
         LA    WF,$SVTSCS          POINT TO CANCEL/STATUS QUEUE         N4256000
         BAL   WE,NQPOST            AND POST ANY WAITING REQUESTORS     N4258000
         L     R15,$SSVT           POINT TO SSVT                     R4 N4260000
         LA    WF,$SVPSOQ          POINT TO PSO QUEUE                   N4262000
         BAL   WE,NQPOST            AND POST ANY WAITING REQUESTORS     N4264000
         B     NQINIT              THEN BR TO WARM START JOB QUEUE   R4 N4266000
         SPACE 1                                                        N4268000
NQPOST  $GETLOK ,                  SERIALIZE WITH OTHER DEQUEUERS       N4270000
         LM    WA,WB,0(WF)         PICK UP QUEUE HEADER                 N4272000
         SPACE 1                                                        N4274000
NQTESTQ  LTR   WA,WA               TEST FOR EMPTY QUEUE                 N4276000
         BZ    NQUNLOK             BR IF SO                             N4278000
         L     R0,SJBTCHN           ELSE TRY                            N4280000
         LR    R1,WB                 TO DEQUEUE                         N4282000
         CDS   WA,R0,0(WF)            QUEUE ELEMENT                     N4284000
         BNE   NQTESTQ             BR IF UNSUCCESSFUL TO TRY AGAIN      N4286000
        $FRELOK ,                   ELSE RELEASE LOCK                   N4288000
         POST  ,1,MF=(E,SJBECBP)   POST ABNORMAL COMPLETION             N4290000
         B     NQPOST              THEN BR TO POST NEXT QUEUE ENTRY     N4292000
         SPACE 1                                                        N4294000
NQUNLOK $FRELOK ,                  RELEASE LOCK                         N4296000
         BR    WE                  THEN RETURN                          N4298000
         TITLE 'HASP JOB QUEUE WARM START -- MAIN PROCESSING'           N4300000
*********************************************************************** N4302000
*                                                                     * N4304000
*        P R E P A R E   T O   S C A N   J O B   Q U E U E            * N4306000
*                                                                     * N4308000
*********************************************************************** N4310000
         SPACE 1                                                        N4312000
         USING HQTDSECT,NQHQT      PROVIDE HQT ADDRESSABILITY           N4314000
         SPACE 1                                                        N4316000
NQ200    LH    NQ,$MAXJOBS         PREPARE                     @OZ36307 N4318000
         STH   NQ,NQJOBCT           TO SCAN                    @OZ36307 N4320000
         L     NQ,$JOBQPTR           ALL JOBS                  @OZ36307 N4322000
         LTR   NQSE,NQSE           TEST WARM START REQUIREMENT @OZ27300 N4322500
         BNZ   NQ210               BR IF SINGLE SYS WARM START @OZ27300 N4323000
         MVC   $UNSPUNQ,$ZEROS     ALLOW REBUILD OF UNSPUN QUE @OZ27300 N4323500
         SPACE 1                                                        N4324000
*********************************************************************** N4326000
*                                                                     * N4328000
*        P R O C E S S   N E X T   J O B   Q U E U E   E N T R Y      * N4330000
*                                                                     * N4332000
*********************************************************************** N4334000
         SPACE 1                                                        N4336000
NQ210    LA    NQ,JQELNGTH(,NQ)    POINT TO NEXT JQE           @OZ36307 N4338000
         CLI   JQETYPE,$FREE       JOB ON FREE QUEUE...        @OZ36307 N4340000
         BE    NQ650               BR IF YES TO TEST NEXT JQE  @OZ36307 N4342000
         TM    JQEHQLOK,QUEBUSY    IF HOLD QUEUE LOCK NOT HELD,@OZ36307 N4344000
         BZ    NQ650                BR TO TEST NEXT JQE        @OZ36307 N4346000
                                   PRINT OFF - SECTION DELETED @OZ36307 N4348000
*                                  THIS CARD DELETED BY APAR   @OZ36307 N4350000
                                   PRINT ON -- SECTION DELETED @OZ36307 N4352000
         LTR   NQSE,NQSE           IF NODAL WARM START,              R4 N4354000
         BZ    NQ220                BR TO TEST QUEUE TYPE               N4356000
         IC    R0,JQEHQLOK         IF NOT                               N4358000
         N     R0,=A(QUEBUSY)       SYSTEM BEING                        N4360000
         CLM   R0,1,QSESIBSY         WARM STARTED,                      N4362000
         BNE   NQ650                  BR TO TEST NEXT JQE      @OZ36307 N4364000
         SPACE 1                                                        N4366000
NQ220    CLI   JQETYPE,$INPUT      TEST FOR JOB ON READER               N4368000
         BNE   NQ230               BR IF NO                             N4378000
SKIP50   LTR   NQSE,NQSE           IF NODAL WARM START,              R4 N4380000
         BZ    *+20                 BR TO AVOID SYSTEM TEST             N4382000
         IC    R0,JQEFLAGS         IF NOT                               N4384000
         N     R0,=A(QUEBUSY)       SYSTEM BEING                        N4386000
         CLM   R0,1,QSESIBSY         WARM STARTED,                      N4388000
         BNE   NQ640                  BR TO TEST NEXT JQE               N4390000
         LA    R1,NQRDRM           SET 'WAS ON READER' MSG           R4 N4408000
         EJECT                                                      R41 N4409000
NQ225    BAL   WE,NQWTO            ISSUE MESSAGE TO OPERATOR        R41 N4410000
         B     NQ255               THEN BR TO QUEUE JOB FOR PURGE       N4412000
         SPACE 1                                                    R41 N4414000
*********************************************************************** N4416000
*                                                                     * N4418000
*        J O B   N O T   O N   R E A D E R                            * N4420000
*                                                                     * N4422000
*********************************************************************** N4424000
         SPACE 1                                                        N4426000
NQ230    LTR   NQSE,NQSE           IF NODAL WARM START,              R4 N4428000
         BZ    NQ245                BR TO TEST FOR XBM                  N4430000
         IC    R0,JQEFLAGS         ISOLATE SYSTEM ID                    N4432000
         N     R0,=A(QUEBUSY)       (IF ANY)                            N4434000
         CLI   JQETYPE,$PURGE      TEST FOR JOB IN/AWAITING PURGE       N4436000
         BNE   NQ235               BR IF NO                             N4438000
         CLM   R0,1,QSESIBSY       IF NOT PURGING ON THIS SYSTEM,       N4440000
         BNE   NQ640                BR TO TEST NEXT JQE                 N4442000
         LA    R0,$PURGE             ELSE RE-QUEUE JOB         @OZ27300 N4443000
         B     NQ620                  FOR PURGE                @OZ27300 N4444000
         SPACE 1                                                        N4446000
NQ235    TM    JQEFLAGS,QUEBUSY    IF JOB                               N4448000
         BZ    *+12                 ACTIVE ON                           N4450000
         CLM   R0,1,QSESIBSY         ANOTHER SYSTEM,                    N4452000
         BNE   NQ260                  BR TO READ THE JCT                N4454000
         TM    JQETYPE,$XEQ        WAS JOB CONVERTING/EXECUTING...      N4456000
         BZ    NQ260               BR IF BEYOND THAT TO READ THE JCT    N4458000
         TM    NQSTAT,NQRESTRT     TEST FOR JES2 RESTART             R4 N4460000
         BZ    NQ245               BR IF NO                             N4462000
         EJECT                                                       R4 N4464000
*********************************************************************** N4466000
*                                                                     * N4468000
*        R E - S T A R T I N G   - -   T E S T   F O R   S J B        * N4470000
*                                                                     * N4472000
*********************************************************************** N4474000
         SPACE 1                                                        N4476000
         BAL   WE,NQSJBLOC         TRY TO LOCATE SJB FOR JOB            N4478000
         LTR   WA,WA               TEST FOR SJB                         N4480000
         BZ    NQ243               BRANCH IF NOT FOUND         @OZ45033 N4482000
         LA    R0,$SVJPNUM         IF STARTING STC                      N4484000
         CL    R0,SJBQUEUE          OR TSU JOB,                         N4486000
         BE    NQ590                 BR TO REQUEUE JOB                  N4488000
         LA    R0,$SVJXNUM         IS SJB FOR AN                     R4 N4490000
         CL    R0,SJBQUEUE          EXECUTING STC JOB                R4 N4492000
         BNE   NQ237               BR IF NOT                         R4 N4494000
         TM    SJBPSOP,X'80'       IS SJB FOR XWTR WAITING ON JOT    R4 N4496000
         BZ    NQ237               NO, BRANCH                        R4 N4498000
         IC    R1,$WTRWTCT         YES, GET WTR WAIT COUNT           R4 N4500000
         LA    R1,1(,R1)            INCREMENT                        R4 N4502000
         STC   R1,$WTRWTCT          RESTORE COUNT                    R4 N4504000
         SPACE 1                                               @OZ40028 N4506000
NQ237    MVC   JQETRAK,SJBJCTRK    UPDATE THE JQE              @OZ56832 N4508000
*              THIS LINE DELETED BY APAR NUMBER                @OZ56832 N4510000
*              THIS LINE DELETED BY APAR NUMBER                @OZ56832 N4512000
*              THIS LINE DELETED BY APAR NUMBER                @OZ56832 N4514000
*              THIS LINE DELETED BY APAR NUMBER                @OZ56832 N4516000
         CLC   JQEJOBNO,=H'10000'  IF EXECUTING BY CLASS,               N4518000
         BL    *+12                 BR TO BUMP ACTIVE COUNT             N4520000
         TM    JQEFLAG2,QUEINIT    IF SYSTEM LOG OR INITIATOR,          N4522000
         BO    NQ240                DON'T BUMP ACTIVE COUNT             N4524000
        $ACTIVE                    INDICATE PROCESSOR ACTIVE            N4526000
         EJECT                                                          N4528000
NQ240    ST    NQJCT,PCEBUFAD      SET BUFFER ADDRESS FOR $EXCP      R4 N4530000
         L     R1,JQETRAK          GET JCT TRACK ADDRESS             R4 N4532000
         BAL   WE,NQREAD            AND READ IN THE JCT              R4 N4534000
         L     R15,$SSVT           POINT TO SSVT                     R4 N4536000
         TM    $SVSTUS,$SVSTXST    IF NOT MONITORING TIME EXCESSIONS    N4538000
         BZ    NQ270                BR TO TEST FOR SPIN IOTS            N4540000
         LA    R0,$SVJXCLS         IF JOB NOT                           N4542000
         CL    R0,SJBQUEUE          STILL EXECUTING,                    N4544000
         BNE   NQ270                 BR TO TEST FOR SPIN IOTS           N4546000
         L     R14,JCTETIME        IF TIME ESTIMATE                     N4548000
         C     R14,=A(24*60*60)     WAS 24 HOURS,                       N4550000
         BNL   NQ270                 BR TO TEST FOR SPIN IOTS           N4552000
         SPACE 1                                                        N4554000
*********************************************************************** N4556000
*                                                                     * N4558000
*        R E S U M E   T I M E   E X C E S S I O N   T E S T I N G    * N4560000
*                                                                     * N4562000
*********************************************************************** N4564000
         SPACE 1                                                        N4566000
         L     R0,$XTIMPCE         STORE PCE ADDRESS                 R4 N4568000
         ST    R0,SJBSTQE+IPOST     IN TQE                              N4570000
         OI    SJBSTQE+IPOST,X'80' PRE-POST TQE                         N4572000
         TIME  BIN                 GET CURRENT DATE AND TIME            N4574000
         CL    R1,JCTXDTON         ADJUST TIME-OF-DAY                   N4576000
         LR    R1,R0                FOR                                 N4578000
         BE    *+8                   NEW                                N4580000
         AL    R1,=A(100*60*60*24)    DAY                               N4582000
         SLR   R0,R0               CLEAR FOR DIVIDE                     N4584000
         SL    R1,JCTXEQON         COMPUTE TIME IN                      N4586000
         D     R0,=A(100)           EXECUTION IN SECONDS                N4588000
         SR    R1,R14              IF ORIGINAL TIME                     N4590000
         ST    R1,SJBXSTIM          INTERVAL NOT ELAPSED,               N4592000
         BNP   NQ270                 BR TO TEST FOR SPIN IOTS           N4594000
         SLR   R0,R0               COMPUTE EXCESSION TIME               N4596000
         D     R0,=A(60)            IN MINUTES                          N4598000
         ST    R1,SJBXSTIM         STORE IN CASE INTEGRAL MINUTES       N4600000
         LTR   R0,R0               IF INTEGRAL NUMBER OF MINUTES,       N4602000
         BZ    NQ270                BR TO TEST FOR SPIN IOTS            N4604000
         LA    R1,1(,R1)             ELSE UPDATE                        N4606000
         ST    R1,SJBXSTIM            EXCESSION TIME                    N4608000
         LA    R1,60               STORE TIME                           N4610000
         SLR   R1,R0                REMAINING                           N4612000
         ST    R1,SJBSTQE+ITIME      IN MINUTE                          N4614000
        $STIMER  SJBSTQE              AND ISSUE $STIMER                 N4616000
         B     NQ270               THEN BR TO TEST FOR SPIN IOTS        N4618000
         SPACE 1                                                     R4 N4620000
         DROP  WA                  KILL SJB ADDRESSABILITY              N4622000
         SPACE 1                                               @OZ45033 N4622100
NQ243    CLI   JQETYPE,$XEQ        IF JOB IN CONVERSION,       @OZ45033 N4622200
         BE    NQ245                BRANCH                     @OZ45033 N4622300
         TM    JQEFLAGS,QUEBUSY    IF JOB WAITING EXECUTION,   @OZ45033 N4622400
         BZ    NQ245                BRANCH                     @OZ45033 N4622500
         NI    JQEFLAG2,255-QUEINIT RESET INIT BIT             @OZ45033 N4622600
         TM    $STATUS,$INDMODE    IF NOT IN INDEPENDENT MODE  @OZ45033 N4622700
         BZ    *+8                  CONT. AND DO $QMOD, ELSE   @OZ45033 N4622800
         OI    JQEFLAG2,QUEINDAF     ALLOW IND MODE SELECTION  @OZ45033 N4622850
*        SJB NOT FOUND AND JOB IN EXECUTION MEANS JQE          @OZ45033 N4622900
*        SHOULD BE UPDATED FOR OUTPUT OR PURGE, DEPENDING...   @OZ45033 N4623000
        $QMOD  (NQ),$OUTPUT     ...ON RESULTS OF $QMOD.        @OZ45033 N4623100
         EJECT                                                          N4624000
NQ245    TM    JQETYPE,$XEQ        IF JOB BEYOND EXECUTION,             N4626000
         BZ    NQ260                BR TO READ THE JCT                  N4628000
         TM    JQEFLAGS,QUEBUSY    IF JOB                               N4630000
         BZ    *+12                 ACTIVE                              N4632000
         CLI   JQETYPE,$XEQ          IN EXECUTION,                      N4634000
         BNE   NQ260                  BR TO READ THE JCT                N4636000
         LTR   NQSE,NQSE           IF NODAL WARM START,              R4 N4638000
         BZ    *+16                 BR TO TEST FOR XBM                  N4640000
         IC    R1,QSESIAFF         IF JOB DOES NOT HAVE                 N4642000
         EX    R1,NQTSTAFF          AFFINITY TO THIS SYSTEM,            N4644000
         BZ    NQ260                 BR TO READ THE JCT                 N4646000
         CLC   JQEJOBNO,=H'10000'  IF STC OR TSU JOB,                   N4648000
         BH    NQ250                BR TO RE-QUEUE JOB FOR PURGE        N4650000
         CLI   JQETYPE,$XEQ        JOB ON CONVERTER QUEUE...   @OZ38520 N4651000
         BNE   NQ260               BR IF NO                    @OZ38520 N4651500
         ST    NQJCT,PCEBUFAD        ELSE                               N4652000
         L     R1,JQETRAK             READ                              N4654000
         BAL   WE,NQREAD               THE JCT                          N4656000
         TM    JCTJBOPT,JCTXBACH   IF NOT XBM JOB,                      N4658000
         BZ    NQ270                BR TO TEST FOR SPIN IOTS            N4660000
         IC    R0,JCTJCLAS           ELSE REQUEUE                       N4662000
         N     R0,=A(QUECLASS)        JOB FOR                           N4664000
        $QPUT  (NQ),(R0)               EXECUTION                        N4666000
         BAL   WE,NQRELSE          THEN RELEASE ANY DUPLICATE JOBS      N4668000
         B     NQ270                AND BR TO TEST FOR SPIN IOTS        N4670000
         SPACE 1                                                        N4672000
NQ250    NI    JQEFLAG2,255-QUEINIT  RESET INIT BIT                     N4674000
         SPACE 1                                                        N4676000
NQ255    NI    JQEHQLOK,FF-QUEBUSY REMOVE JOB HOLD QUEUE LOCK  @OZ27300 N4677000
         MVI   JQEPRIO,FF          SET EXPRESS PRIORITY        @OZ27300 N4678000
        $QMOD  (NQ),$HARDCPY       RE-QUEUE JOB FOR $HARDCPY   @OZ27300 N4679000
         LTR   NQSE,NQSE           TEST WARM START REQUIREMENT @OZ27300 N4680000
         BNZ   NQ650               BR IF SINGLE SYS WARM START @OZ27300 N4681000
         OC    JQEHQLOK,$SIDBUSY   RESTORE JOB HOLD QUEUE LOCK @OZ27300 N4682000
         EJECT                                                 @OZ27300 N4690000
*********************************************************************** N4694000
*                                                                     * N4696000
*        R E A D   I N   J C T   F O R   J O B                        * N4698000
*                                                                     * N4700000
*********************************************************************** N4702000
         SPACE 1                                                        N4704000
NQ260    ST    NQJCT,PCEBUFAD      SET BUFFER ADDRESS FOR $EXCP         N4706000
         L     R1,JQETRAK          GET JCT TRACK ADDRESS                N4708000
         BAL   WE,NQREAD            AND READ IN THE JCT                 N4710000
         SPACE 1                                                        N4764000
*********************************************************************** N4766000
*                                                                     * N4768000
*        T E S T   F O R   S P I N   I O T ( S )                      * N4770000
*                                                                     * N4772000
*********************************************************************** N4774000
         SPACE 1                                                        N4776000
NQ270    MVC   NQHLDCT,$ZEROS      CLEAR VALIDATION HOLD COUNT @OZ27300 N4778000
         ICM   R1,15,JCTSPIOT      IF NO SPIN IOTS,            @OZ27300 N4779000
         BZ    NQ530                BR TO CONCLUDE JOB PROCESSING       N4780000
         SPACE 1                                               @OZ27300 N4782000
*********************************************************************** N4784000
*                                                                     * N4786000
*        R E M O V E   H Q R   I N - U S E   L O C K S                * N4788000
*                                                                     * N4790000
*********************************************************************** N4792000
         SPACE 1                                                        N4794000
         SLR   NQIOT,NQIOT         INDICATE NO IOT BUFFER               N4796000
         ST    NQIOT,NQHOLDQ        AND NO HOLD DATA SET REQUESTS       N4798000
         L     R1,JCTHQT           POINT TO 1ST HQT FOR JOB             N4800000
         ST    R1,NQHQTRK          SAVE HQT TRACK ADDRESS               N4802000
         ST    NQHQT,PCEBUFAD      SET BUFFER ADDRESS FOR $EXCP         N4804000
         LTR   R1,R1               IF VALID HQT ADDRESS,                N4806000
         BNZ   NQ280                BR TO READ IT IN                    N4808000
         BAL   WE,NQHQTCK            ELSE CREATE DUMMY HQT              N4810000
         B     NQ300                  AND BR TO RESTORE IOT TRK ADDR    N4812000
         EJECT                                                 @OZ27300 N4814000
         USING HQRDSECT,WA         PROVIDE HQR ADDRESSABILITY           N4816000
         SPACE 1                                                        N4818000
NQ280    BAL   WE,NQREAD           READ IN THE HQT                      N4820000
         TM    NQSTAT,NQRESTRT     TEST FOR JES2 RESTART             R4 N4822000
         BO    NQ300               BR IF YES                         R4 N4824000
         LA    WA,HQTHQR           PREPARE TO SCAN HQT         @OZ19494 N4826000
         L     R1,HQTHQRP           FOR HQRS REPRESENTING               N4828000
         ALR   R1,NQHQT              IN-USE HELD               @OZ19494 N4830000
         B     NQ295                  DATA SETS                @OZ19494 N4830100
         SPACE 1                                                        N4832000
NQ290    LA    WA,HQRLENG(,WA)     POINT TO NEXT HQR                    N4834000
NQ295    CLR   WA,R1               IF NO MORE HQRS,            @OZ19494 N4836000
         BE    NQ300                BR TO TEST FOR ANOTHER HQT          N4838000
         TM    HQRSTAT,HQRUNHLD    TEST DATASET STATUS         @OZ27300 N4838200
         BO    NQ290               BR IF DATASET RELEASED      @OZ27300 N4838400
         LH    R0,NQHLDCT          INCREMENT                   @OZ27300 N4838600
         AL    R0,=A(X'10')         VALIDATION                 @OZ27300 N4838800
         STH   R0,NQHLDCT            HOLD COUNT                @OZ27300 N4839000
         TM    PDBFLAG1-PDBDSECT+HQRPDDB,PDB1DSID  TEST STATUS @OZ27300 N4839200
         BZ    *+8                 BR IF NOT HELD FOR 3540     @OZ27300 N4839400
         OI    NQHLDCT+1,JQEHLDDS   ELSE SET 3540 HOLD FLAG    @OZ27300 N4839600
         TM    HQRSTAT,HQRINUSE    IF DATA SET NOT IN USE,              N4840000
         BZ    NQ290                BR TO TEST NEXT HQR                 N4842000
         LTR   NQSE,NQSE           IF NODAL WARM START,              R4 N4844000
         BZ    *+20                 BR TO RESET IN-USE LOCK             N4846000
         IC    R0,HQRSTAT          IF NOT                               N4848000
         N     R0,=A(QUEBUSY)       SYSTEM BEING                        N4850000
         CLM   R0,1,QSESIBSY         WARM STARTED,                      N4852000
         BNE   NQ290                  BR TO TEST NEXT HQR               N4854000
         NI    HQRSTAT,255-HQRINUSE    ELSE RESET LOCK                  N4856000
         OI    HQTFLAG1,HQT1CKPT        AND REQUEST HQT CHECKPOINT      N4858000
         B     NQ290               THEN BR TO TEST NEXT HQR             N4860000
         SPACE 1                                                        N4862000
NQ300    L     R1,JCTSPIOT         RESTORE SPIN IOT TRACK ADDRESS       N4864000
         ICM   R0,15,HQTHQT        IF END OF HQT CHAIN,                 N4866000
         BZ    NQ310                BR TO READ 1ST SPIN IOT             N4868000
         TM    HQTFLAG1,HQT1CKPT   IF HQT NOT UPDATED,                  N4870000
         BZ    *+8                  BR TO AVOID CHECKPOINT              N4872000
         BAL   WE,NQHQTWR            ELSE RE-WRITE CURRENT HQT          N4874000
         L     R1,HQTHQT           THEN RE-LOAD ADDRESS OF NEXT HQT     N4876000
         ST    R1,NQHQTRK          SAVE NEW HQT TRACK ADDR     @OZ27300 N4877000
         B     NQ280                AND BR TO READ THE HQT              N4878000
         SPACE 1                                                        N4880000
         DROP  WA                  KILL HQR ADDRESSABILITY              N4882000
         EJECT                                                          N4884000
NQ310    LTR   NQSE,NQSE           IF NODAL WARM START,              R4 N4886000
         BZ    NQ320                BR TO READ 1ST SPIN IOT             N4888000
         TM    JQETYPE,$XEQ        IF JOB                               N4890000
         BZ    NQ500                NOT                                 N4892000
         CLI   JQETYPE,$XEQ          EXECUTING                          N4894000
         BE    NQ500                  ON                                N4896000
         IC    R0,JQEFLAGS             WARM                             N4898000
         N     R0,=A(QUEBUSY)           STARTING                        N4900000
         CLM   R0,1,QSESIBSY             SYSTEM,                        N4902000
         BNE   NQ500                      BR TO TEST FOR HOLD REQ'S     N4904000
         SPACE 1                                                        N4906000
NQ320    LTR   NQIOT,NQIOT         IF HAVE IOT BUFFER,                  N4908000
         BNZ   NQ340                BR TO READ THE SPIN IOT             N4910000
         ST    R1,NQIOTTR            ELSE SAVE SPIN IOT TRACK ADDR      N4912000
         LH    R0,$BUFLENG            AND GET CSA STORAGE            R4 N4914000
         GETMAIN RC,LV=(0),SP=231      FOR SPIN IOT BUFFER              N4916000
         LR    NQIOT,R1            RE-LOAD BUFFER ADDRESS               N4918000
         LTR   R15,R15             IF GETMAIN SUCCESSFUL,               N4920000
         BZ    NQ330                BR TO READ THE SPIN IOT             N4922000
         LA    R1,NQCORE             ELSE SET 'AWAITING STORAGE' MSG R4 N4924000
         BAL   WE,NQWTO               AND INFORM THE OPERATOR           N4926000
         LA    R0,30               THEN $WAIT                           N4928000
         BAL   WA,NQSTIMER          FOR 30 SECONDS,                     N4930000
         L     R1,NQIOTTR            RESTORE SPIN IOT TRACK ADDRESS,    N4932000
         SLR   NQIOT,NQIOT            SHOW NO IOT BUFFER,               N4934000
         B     NQ320                   AND BR TO TRY AGAIN              N4936000
         SPACE 1                                                     R4 N4938000
NQ330   $BFRBLD (R1)               CONSTRUCT IOB WITHIN IOT BUFFER      N4940000
         L     R1,NQIOTTR          RESTORE SPIN IOT TRACK ADDRESS       N4942000
         EJECT                                                       R4 N4944000
*********************************************************************** N4946000
*                                                                     * N4948000
*        R E A D   I N   S P I N   I O T                              * N4950000
*                                                                     * N4952000
*********************************************************************** N4954000
         SPACE 1                                                        N4956000
         USING PDBDSECT,WA         PROVIDE PDDB ADDRESSABILITY          N4958000
         SPACE 1                                                        N4960000
NQ340    ST    NQIOT,PCEBUFAD      SET BUFFER ADDRESS FOR $EXCP         N4962000
         BAL   WE,NQREAD            AND READ IN THE SPIN IOT            N4964000
         BZ    NQ342               BRANCH IF VALID IOT READ    @OZ43880 N4964200
         LTR   NQSE,NQSE           OTHERWISE, CANCEL JOB IF..  @OZ43880 N4964400
         BZ    NQIOTSCN             ..NODAL WARM START.        @OZ43880 N4964600
NQ342    LR    WA,NQIOT            POINT TO                    @OZ43880 N4966000
         AL    WA,$IOTPDDB          DATA SET PDDB                    R4 N4968000
         TM    PDBFLAG1,PDB1NULL+PDB1NSOT  IF DATASET NOT PRINTABLE,    N4970000
         BNZ   NQ480                        BR TO GET NEXT SPIN IOT     N4972000
         CLI   JQETYPE,$PURGE      IF JOB PURGING,                      N4974000
         BE    NQ480                BR TO GET NEXT SPIN IOT             N4976000
         LR    R0,NQ               GET OFFSET                        R4 N4978000
         SL    R0,$JOBQPTR          OF JQE                           R4 N4980000
         CL    R0,IOTJQOFF         IF DATA SET WAS UNALLOCATED,      R4 N4982000
         BE    NQ350                BR TO SEARCH FOR JOE/HQR   @OZ27300 N4984000
         TM    NQSTAT,NQRESTRT     IF JES2 RESTART,                  R4 N4986000
         BO    NQ490                BR TO GET NEXT IOT               R4 N4988000
         TM    JCTJOBFL,JCTNOJNL   IF JOB WAS JOURNALLED,            R4 N4990000
         BZ    NQ480                BR TO ALLOCATE DATA SET'S TRACKS R4 N4992000
         B     NQ470                 ELSE BR TO SPIN DATA SET        R4 N4994000
         EJECT                                                 @OZ27300 N4996000
*********************************************************************** N4998000
*                                                                     * N5000000
*        T R Y   T O   F I N D   J O E   F O R   D A T A   S E T      * N5002000
*                                                                     * N5004000
*********************************************************************** N5006000
         SPACE 1                                                        N5008000
         USING JOEDSECT,R1         PROVIDE JOE ADDRESSABILITY           N5010000
         SPACE 1                                               @OZ27300 N5012000
NQ350    L     R0,IOTTRACK         GET TRACK ADDRESS FOR SCAN  @OZ27300 N5014000
         MVI   NQJOE,0             INDICATE NO JOE FOR DATASET @OZ27300 N5016000
         LA    R1,JQEJOE              PREPARE TO SCAN          @OZ27300 N5018000
         SH    R1,=Y(JOEJOE-JOEDSECT)  WORK JOES FOR THIS JOB  @OZ27300 N5020000
         SPACE 1                                               @OZ27300 N5022000
NQ360    LH    R1,JOEJOE           GET OFFSET OF NEXT JOE      @OZ27300 N5024000
         N     R1,=X'0000FFFF'     MASK OFF HI-ORDER BYTES     @OZ27300 N5026000
         BZ    NQ400               BR IF END OF CHAIN          @OZ27300 N5028000
         SLL   R1,2                EXPAND TO BYTE OFFSET       @OZ27300 N5030000
         AL    R1,$JOTABLE         ADD JOT ORIGIN              @OZ27300 N5032000
         CL    R0,JOEIOTTR         REPRESENT THIS DATASET...   @OZ27300 N5034000
         BNE   NQ360               BR IF NO                    @OZ27300 N5036000
                                   PRINT OFF - SECTION DELETED @OZ27300 N5038000
*                                  THIS LINE DELETED BY APAR   @OZ27300 N5040000
*                                  THIS LINE DELETED BY APAR   @OZ27300 N5042000
*                                  THIS LINE DELETED BY APAR   @OZ27300 N5044000
*                                  THIS LINE DELETED BY APAR   @OZ27300 N5046000
*                                  THIS LINE DELETED BY APAR   @OZ27300 N5048000
*                                  THIS LINE DELETED BY APAR   @OZ27300 N5050000
                                   PRINT ON -- SECTION DELETED @OZ27300 N5052000
         SPACE 1                                               @OZ27300 N5054000
         MVI   NQJOE,255           INDICATE JOE EXISTS FOR DS  @OZ34024 N5055000
         TM    JOEFLAG,$JOEBUSY    IF DATA SET PRINTING/PUNCHING,       N5056000
         BNZ   NQ400               BR TO TEST HOLD REQ'T                N5058000
         SPACE 1                                                        N5060000
*********************************************************************** N5062000
*                                                                     * N5064000
*        F O U N D   S P I N   J O E   F O R   D A T A   S E T        * N5066000
*                                                                     * N5068000
*********************************************************************** N5070000
         SPACE 1                                                        N5072000
         TM    JQEFLAGS,QUEPURGE   IF JOB BEING KILLED,                 N5074000
         BO    *+12                 BR TO REMOVE THE JOE                N5076000
         TM    PDBFLAG1,PDB1PSO    IF JOT CURRENT,                      N5078000
         BO    NQ380                BR TO TEST IOT VALIDITY             N5080000
        $#REM  WORK=(R1)             ELSE REMOVE JOE FROM JOT        R4 N5082000
         B     NQ400               THEN BR TO TEST HOLD REQ'T           N5084000
         SPACE 1                                                        N5086000
NQ380    DS    0H                                              @OZ34024 N5088000
         TM    PDBFLAG1,PDB1HOLD   IF IOT VALID,                        N5090000
         BZ    NQ400                BR TO TEST HOLD REQ'T               N5092000
         NI    PDBFLAG1,255-PDB1HOLD  ELSE INDICATE                     N5094000
         OI    PDBFLAG1,PDB1PSO        DATA SET IN JOT                  N5096000
         L     R1,IOTTRACK         GET IOT TRACK ADDRESS                N5098000
         BAL   WE,NQWRITE           AND RE-WRITE THE IOT                N5100000
         SPACE 1                                                        N5102000
         DROP  R1                  KILL JOE ADDRESSABILITY     @OZ27300 N5104000
         EJECT                                                          N5106000
NQ400    TM    NQSTAT,NQRESTRT     IF WARM STARTING JES2,            R4 N5108000
         BZ    NQ410                BR TO QUEUE SPIN/HOLD REQUEST    R4 N5110000
         SPACE 1                                                        N5112000
*********************************************************************** N5114000
*                                                                     * N5116000
*        R E S T A R T   - -   T E S T   S P I N / H O L D   Q U E    * N5118000
*                                                                     * N5120000
*********************************************************************** N5122000
         SPACE 1                                                        N5124000
         L     R15,$SSVT           POINT TO SSVT                     R4 N5126000
         LR    R0,NQ                        PREPARE                     N5128000
         SL    R0,$JOBQPTR                   TO SCAN                    N5130000
         LA    R14,$SVSPIOT-(IOTIOT-IOTDSECT) SPIN/HOLD              R4 N5132000
         L     R15,IOTTRACK                    REQUEST QUEUE   @OZ27300 N5134000
*                                  THIS LINE DELETED BY APAR   @OZ27300 N5136000
*                                  THIS LINE DELETED BY APAR   @OZ27300 N5138000
         SPACE 1                                                        N5140000
         DROP  WA                  KILL PDDB ADDRESSABILITY          R4 N5142000
         USING IOTDSECT,R14        PROVIDE LOCAL IOT ADDRESSABILITY     N5144000
         SPACE 1                                                        N5146000
NQ405    ICM   R14,15,IOTIOT       IF END OF QUEUE,                     N5148000
         BZ    NQ410                BR TO QUEUE SPIN/HOLD REQUEST    R4 N5150000
         CL    R0,IOTJQOFF                  IF DATA SET                 N5152000
         BNE   NQ405                         NOT REPRESENTED            N5154000
         CL    R15,IOTTRACK                   ON REQUEST Q,    @OZ27300 N5156000
         BNE   NQ405                           LOOP                     N5158000
         B     NQ490                            ELSE GET NXT SPN IOT    N5160000
         SPACE 1                                                        N5162000
         DROP  R14                 KILL LOCAL IOT ADDRESSABILITY        N5164000
         EJECT                                                          N5166000
*********************************************************************** N5168000
*                                                                     * N5170000
*        T R Y   T O   F I N D   H Q R   F O R   D A T A   S E T      * N5172000
*                                                                     * N5174000
*********************************************************************** N5176000
         SPACE 1                                                        N5178000
NQ410    TM    HQTFLAG1,HQT1HQT1   IF 1ST HQT IN STORAGE,            R4 N5180000
         BO    NQ420                BR TO SCAN FOR HQR                  N5182000
         TM    HQTFLAG1,HQT1CKPT   IF HQT NOT UPDATED,                  N5184000
         BZ    SKIP80               BR TO AVOID CHECKPOINT           R4 N5186000
         BAL   WE,NQHQTWR            ELSE RE-WRITE CURRENT HQT          N5188000
SKIP80   L     R1,JCTHQT           POINT TO 1ST HQT FOR JOB             N5190000
         ST    R1,NQHQTRK          SAVE HQT TRACK ADDRESS               N5192000
         ST    NQHQT,PCEBUFAD      SET BUFFER ADDRESS FOR $EXCP         N5194000
         BAL   WE,NQREAD            AND READ IN THE HQT                 N5196000
         SPACE 1                                                        N5198000
NQ420    LA    WA,HQTHQR           PREPARE                     @OZ19494 N5200000
         L     R1,HQTHQRP           TO SCAN                             N5202000
         ALR   R1,NQHQT              HQRS                               N5204000
         LR    R15,NQIOT           POINT TO                          R4 N5206000
         AL    R15,$IOTPDDB         PDDB                             R4 N5208000
         L     R0,IOTTRACK         GET MTTR OF IOT             @OZ27300 N5210000
         B     NQ435               BRANCH FOR 1ST HQR          @OZ19494 N5210100
         SPACE 1                                                        N5212000
         USING HQRDSECT,WA         PROVIDE HQR ADDRESSABILITY           N5214000
         SPACE 1                                                        N5216000
NQ430    LA    WA,HQRLENG(,WA)     POINT TO NEXT HQR                    N5218000
NQ435    CLR   WA,R1               IF END OF HQRS,             @OZ19494 N5220000
         BE    NQ460                BR TO TEST FOR ANOTHER HQT          N5222000
         CL    R0,HQRIOT           TEST HQR FOR MATCH          @OZ27300 N5224000
         BNE   NQ430               BR IF NO                    @OZ27300 N5226000
         TM    HQRSTAT,HQRINUSE    IF DATA SET IN USE,                  N5228000
         BNZ   NQ490                BR TO GET NEXT SPIN IOT             N5230000
         TM    HQRSTAT,HQRUNHLD    IF DATA SET NO LONGER HELD,          N5232000
         BO    NQ450                BR TO TEST SPIN REQ'T               N5234000
         TM    PDBFLAG1-PDBDSECT(R15),PDB1HOLD+PDB1PSO  TEST PDDB    R4 N5236000
         BNO   NQ440               BR IF SHOULD UNHOLD HQR              N5238000
         TM    JQEFLAGS,QUEPURGE   IF JOB BEING KILLED,                 N5240000
         BO    *+12                 BR TO UNHOLD THE DATA SET           N5242000
         CLI   NQJOE,0             IF NO JOE FOR DATA SET,              N5244000
         BE    NQ480                BR TO ALLOCATE ITS TRACKS           N5246000
         NI    PDBFLAG1-PDBDSECT(R15),255-PDB1HOLD  ELSE UNHOLD      R4 N5248000
         EJECT                                                 @OZ27300 N5250000
NQ440    OI    HQRSTAT,HQRUNHLD    SHOW DATA SET UN-HELD                N5252000
         OI    HQTFLAG1,HQT1CKPT    AND FLAG HQT FOR CHECKPOINT         N5254000
         LH    R0,NQHLDCT          DECREMENT                   @OZ27300 N5254500
         SL    R0,=A(X'10')         VALIDATION                 @OZ27300 N5255000
         STH   R0,NQHLDCT            HOLD COUNT                @OZ27300 N5255500
         LH    R0,JQEHLDCT            DECREMENT                         N5256000
         N     R0,=A(X'FFFF'-QUEBUSY)  JOB                              N5258000
         BZ    NQ450                    HOLD                            N5260000
         LH    R0,JQEHLDCT               COUNT                          N5262000
         SL    R0,=A(X'10')               (IF                           N5264000
         STH   R0,JQEHLDCT                 NECESSARY)                   N5266000
        $QCKPT (NQ)                THEN FORCE CHECKPOINT OF JQE         N5268000
         BAL   WE,NQHQTWR           AND RE-WRITE UPDATED HQT   @OZ40278 N5268100
         SPACE 1                                               @OZ27300 N5270000
         USING PDBDSECT,WA         PROVIDE PDDB ADDRESSABILITY       R4 N5272000
         SPACE 1                                                     R4 N5274000
NQ450    CLI   NQJOE,0             IF JOE EXISTS FOR DATA SET,          N5276000
         BNE   NQ480                BR TO ALLOCATE ITS TRACKS           N5278000
         LR    WA,NQIOT            POINT TO                          R4 N5280000
         AL    WA,$IOTPDDB          DATA SET PDDB                    R4 N5282000
         TM    PDBFLAG1,PDB1PSO    TEST DATASET STATUS         @OZ27300 N5282500
         BO    NQ452               BR IF HELD OR SPUN          @OZ27300 N5283000
         TM    PDBFLAG1,PDB1HOLD   TEST DATASET STATUS         @OZ27300 N5283500
         BZ    NQ480               BR IF DATASET DELETED       @OZ27300 N5284000
         LTR   NQSE,NQSE           TEST WARM START REQUIREMENT @OZ27300 N5285000
         BNZ   NQ480               BR IF SINGLE SYS WARM START @OZ27300 N5286000
         MVC   IOTSPIOT,$UNSPUNQ   LIFO...QUEUE                @OZ40993 N5287000
         L     R1,IOTTRACK          IOT TO                     @OZ40993 N5287100
         ST    NQIOT,PCEBUFAD        $UNSPUNQ AND              @OZ40993 N5287200
         BAL   WE,NQWRITE             WRITE THE IOT            @OZ40993 N5287300
         BZ    NQ451               BR IF SUCCESSFUL            @OZ42974 N5287310
         LH    R1,JQEHLDCT         ELSE DECREMENT              @OZ42974 N5287320
         SL    R1,=A(X'10')         THE HOLD                   @OZ42974 N5287330
         STH   R1,JQEHLDCT           QUEUE COUNT               @OZ42974 N5287340
        $QCKPT (NQ)                FORCE CHECKPOINT OF JQE     @OZ42974 N5287350
         B     NQ472               CHECK IF ALLOCATION IOT     @OZ42974 N5287360
NQ451    DS    0H                                              @OZ42974 N5287370
         MVC   $UNSPUNQ,IOTTRACK   UPDATE QUEUE HEAD           @OZ40993 N5287400
         B     NQ480               BR TO ALLOCATE TRACKS       @OZ40993 N5287500
         SPACE 1                                               @OZ27300 N5288000
NQ452    TM    PDBFLAG1,PDB1HOLD   IF DATASET SHOULD BE SPUN,  @OZ27300 N5289000
         BZ    NQ470                BR TO SPIN IT                    R4 N5290000
         MVC   IOTIOT,NQHOLDQ       ELSE ADD HOLD REQUEST               N5292000
         ST    NQIOT,NQHOLDQ         TO TEMPORARY REQUEST QUEUE         N5294000
         TM    IOTFLAG1,IOT1ALOC   IF NOT ALLOCATION IOT,               N5296000
         BZ    *+8                  BR TO GET NEXT SPIN IOT             N5298000
         BAL   WE,NQALLOC            ELSE ALLOCATE DATA SET'S TRACKS    N5300000
         L     R1,IOTIOTTR         GET TRACK ADDR OF NEXT SPIN IOT      N5302000
         SLR   NQIOT,NQIOT         INDICATE NO IOT BUFFER               N5304000
         LTR   R1,R1               IF ANOTHER SPIN IOT,                 N5306000
         BNZ   NQ320                BR TO READ IT IN                    N5308000
         B     NQ500                 ELSE BR TO TEST FOR HOLD REQ'S     N5310000
         SPACE 1                                                        N5312000
NQ460    ICM   R1,15,HQTHQT        IF NO MORE HQTS,                     N5314000
         BZ    NQ450                BR TO TEST SPIN/HOLD REQ'TS         N5316000
         ST    R1,NQHQTRK            ELSE SAVE HQT TRACK ADDRESS        N5318000
         ST    NQHQT,PCEBUFAD      SET BUFFER ADDRESS FOR $EXCP     R41 N5319000
         BAL   WE,NQREAD           THEN READ IN THE HQT                 N5320000
         B     NQ420                AND BR TO RESUME HQR SCAN           N5322000
         EJECT                                                 @OZ27300 N5324000
NQ470    LR    R1,NQ               STORE                                N5326000
         SL    R1,$JOBQPTR          JQE OFFSET                          N5328000
         ST    R1,IOTJQOFF           IN SPIN IOT                        N5330000
         NI    PDBFLAG1,255-PDB1PSO  INDICATE DATA SET ON            R4 N5332000
         OI    PDBFLAG1,PDB1HOLD      SPIN QUEUE (NOT IN JOT)        R4 N5334000
         MVC   IOTSPIOT,$UNSPUNQ   LIFO QUEUE IOT                       N5336000
         L     R1,IOTTRACK          TO SPIN QUEUE                       N5338000
         ST    NQIOT,PCEBUFAD        USING                              N5340000
         BAL   WE,NQWRITE             'COMPARE AND SWAP'                N5342000
         BZ    NQ475               BR IF SUCCESSFUL            @OZ42974 N5343000
NQ472    TM    IOTFLAG1,IOT1ALOC   IF NOT ALLOCATION IOT       @OZ42974 N5343100
         BNO   NQ495                GET NEXT IOT               @OZ42974 N5343200
         BAL   WE,NQALLOC          ALLOCATE TRACKS IN BIT MAP  @OZ42974 N5343300
         B     NQ495               GET NEXT IOT                @OZ42974 N5343400
NQ475    DS    0H                                              @OZ42974 N5343500
         CLC   IOTSPIOT,$UNSPUNQ   IF QUEUE HEAD CHANGED,               N5344000
         BNE   NQ470                BR TO REQUEUE IOT                   N5346000
         MVC   $UNSPUNQ,IOTTRACK     ELSE UPDATE QUEUE HEAD             N5348000
         LH    R1,JQEHLDCT         INCREMENT                   @OZ27300 N5350000
         AL    R1,=A(X'10')         HOLD                       @OZ27300 N5352000
         STH   R1,JQEHLDCT           COUNT                     @OZ27300 N5354000
        $QCKPT (NQ)                THEN FORCE CHECKPOINT OF JQE         N5356000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N5358000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N5360000
         SPACE 1                                               @OZ27300 N5362000
NQ480    TM    IOTFLAG1,IOT1ALOC   IF NOT ALLOCATION IOT,               N5364000
         BZ    *+8                  BR TO GET NEXT SPIN IOT             N5366000
         BAL   WE,NQALLOC          ALLOCATE TRACKS IN IOT BIT MAP       N5368000
NQ490    LR    WA,NQIOT            POINT TO                    @OZ27300 N5369000
         AL    WA,$IOTPDDB          DATASET PDDB               @OZ27300 N5369500
         TM    PDBFLAG1,PDB1PSO+PDB1NULL+PDB1NSOT  TEST STATUS @OZ27300 N5370000
         BNZ   NQ495               BR IF HQR, JOE OR NON-PRINT @OZ27300 N5370500
         TM    PDBFLAG1,PDB1HOLD   TEST DATASET STATUS         @OZ27300 N5371000
         BZ    NQ495               BR IF DATASET DELETED       @OZ27300 N5371500
         LH    R0,NQHLDCT          INCREMENT                   @OZ27300 N5372000
         AL    R0,=A(X'10')         VALIDATION                 @OZ27300 N5372500
         STH   R0,NQHLDCT            HOLD COUNT                @OZ27300 N5373000
         SPACE 1                                               @OZ27300 N5373500
         DROP  WA                  KILL PDDB ADDRESSABILITY    @OZ27300 N5374000
         SPACE 1                                               @OZ27300 N5374500
NQ495    ICM   R1,15,IOTIOTTR      IF ANOTHER SPIN IOT,        @OZ27300 N5375000
         BNZ   NQ320                BR TO READ IT IN           @OZ27300 N5375500
         EJECT                                                 @OZ27300 N5376000
*********************************************************************** N5378000
*                                                                     * N5380000
*        N O   M O R E   S P I N   I O T S                            * N5382000
*                                                                     * N5384000
*********************************************************************** N5386000
         SPACE 1                                                        N5388000
         LH    R0,$BUFLENG         FREE                              R4 N5390000
         ICM   R0,8,=AL1(231)       CURRENT                             N5392000
         LR    R1,NQIOT              IOT                                N5394000
         FREEMAIN R,LV=(0),A=(1)      BUFFER                            N5396000
         SPACE 1                                                        N5398000
NQ500    L     R15,$SSVT           POINT TO SSVT                     R4 N5400000
         MVC   NQDBL(4),$SVHOLDQ   SAVE CURRENT HOLD QUEUE HEAD      R4 N5402000
         XC    $SVHOLDQ,$SVHOLDQ   ZERO CURRENT HOLD QUEUE HEAD         N5404000
         SPACE 1                                                        N5406000
NQ505    ICM   NQIOT,15,NQHOLDQ    IF NO HOLD REQUESTS,                 N5408000
         BZ    NQ510                BR TO TEST FOR HQT UPDATE           N5410000
         TM    IOTFLAG1,IOT1NTPR   WAS IOT PROCESSED...        @OZ35742 N5410100
         BZ    NQCNTOK             BR IF YES, DON'T COUNT TWICE@OZ35742 N5410150
         ST    NQIOT,PCEBUFAD      SET BUFFER ADDR. FOR $EXCP  @OZ35742 N5410200
        $BFRBLD (NQIOT)            BUILD IOB IN THE IOT        @OZ35742 N5410250
         NI    IOTFLAG1,255-IOT1NTPR  RESET NOT PROCESSED FLAG @OZ35742 N5410300
         L     R1,IOTTRACK         GET SEEK ADDRESS FOR $EXCP  @OZ35742 N5410350
         BAL   WE,NQWRITE          RE-WRITE IOT                @OZ35742 N5410400
         TM    BUFECBCC-BUFDSECT(NQIOT),X'7F'  GOOD WRITE...   @OZ35742 N5410450
         BM    NQ505               BR IF NO, BAD IOT           @OZ35742 N5410500
         LH    R1,JQEHLDCT           ELSE BUMP                          N5412000
         AL    R1,=A(X'10')           HOLD                              N5414000
         STH   R1,JQEHLDCT             COUNT                            N5416000
        $QCKPT (NQ)                     AND FORCE CHECKPOINT OF JQE     N5418000
         LH    R1,NQHLDCT          INCREMENT                   @OZ40993 N5418250
         AL    R1,=A(X'10')         VALIDATION                 @OZ40993 N5418500
         STH   R1,NQHLDCT            HOLD COUNT                @OZ40993 N5418750
NQCNTOK  DS    0H                                              @OZ35742 N5419000
         L     R15,$SSVT           POINT TO SSVT                     R4 N5420000
         MVC   NQHOLDQ,IOTIOT               THEN PREPARE TO             N5422000
         LH    R0,IOTHQRCT                   QUEUE REQUEST TO           N5424000
         LA    WA,$SVHOLDQ-(IOTIOT-IOTDSECT)  OFFICIAL HOLD RQST Q      N5426000
         SPACE 1                                                        N5428000
         LR    WE,WA                     LOCATE APPROPRIATE             N5430000
         ICM   WA,15,IOTIOT-IOTDSECT(WE)  QUEUE POSITION                N5432000
         BZ    *+12                        USING                        N5434000
         CH    R0,IOTHQRCT-IOTDSECT(,WA)    ORDER OF                    N5436000
         BH    *-14                          UNALLOCATION               N5438000
         SPACE 1                                                        N5440000
         ST    NQIOT,IOTIOT-IOTDSECT(,WE)  QUEUE NEW                    N5442000
         ST    WA,IOTIOT                    HOLD REQUEST AND LOOP       N5444000
         B     NQ505                         UNTIL ALL REQUESTS Q'D     N5446000
         SPACE 1                                                        N5448000
NQ510    LA    R1,$SVHOLDQ-(IOTIOT-IOTDSECT)  PREPARE TO SCAN QUEUE     N5450000
         SPACE 1                                                        N5452000
         LR    NQIOT,R1            CHAIN TO                             N5454000
         ICM   R1,7,IOTIOT+1        END OF                              N5456000
         BNZ   *-6                   HOLD QUEUE                         N5458000
         SPACE 1                                                        N5460000
         MVC   IOTIOT,NQDBL        ADD PRIOR ELEMENTS TO END OF Q       N5462000
         EJECT                                                          N5464000
*********************************************************************** N5466000
*                                                                     * N5468000
*        T E S T   L O C A L   H O L D   Q U E U E                    * N5470000
*                                                                     * N5472000
*********************************************************************** N5474000
         SPACE 1                                                        N5476000
NQ515    TM    HQTFLAG1,HQT1CKPT   IF HQT NOT UPDATED,                  N5478000
         BZ    *+8                  BR TO AVOID CHECKPOINT              N5480000
         BAL   WE,NQHQTWR            ELSE RE-WRITE CURRENT HQT          N5482000
         L     R15,$SSVT           POINT TO SSVT                     R4 N5484000
         ICM   NQIOT,15,$SVHOLDQ   IF NO                                N5486000
         BZ    NQ530                REMAINING                           N5488000
         LR    R1,NQ                 HOLD REQUESTS                      N5490000
         SL    R1,$JOBQPTR            FOR                               N5492000
         CL    R1,IOTJQOFF             CURRENT JOB,                     N5494000
         BNE   NQ530                    BR TO READ 1ST REGULAR IOT      N5496000
         MVC   NQDBL(1),JQEHQLOK     ELSE SAVE CURRENT                  N5498000
         NI    NQDBL,QUEBUSY          JOB HOLD QUEUE LOCK               N5500000
         NI    JQEHQLOK,255-QUEBUSY    AND REMOVE LOCK FROM JQE         N5502000
        $QCKPT (NQ)                FORCE CHECKPOINT OF JQE              N5504000
         L     R1,$HOLDPCE         GET HOLD QUEUE PROCESSOR PCE ADDR R4 N5506000
        $POST  (R1),WORK            AND WAKE HIM UP                     N5508000
         SPACE 1                                                        N5510000
NQ520   $WAIT  ABIT                $WAIT A LITTLE WHILE                 N5512000
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    N5514000
         TM    JQEHQLOK,QUEBUSY    IF LOCK STILL HELD,                  N5516000
         BNZ   NQ520                BR TO $WAIT SOME MORE               N5518000
         OC    JQEHQLOK,NQDBL        ELSE GRAB THE LOCK                 N5520000
        $QCKPT (NQ)                   AND FORCE CKPT OF JQE             N5522000
         B     NQ515               THEN BR TO RETEST FOR HOLD REQ'S     N5524000
         EJECT                                                 @OZ27300 N5524200
***************************************************************@OZ27300 N5524400
*                                                              @OZ27300 N5524600
*        VALIDATE JOB HOLD COUNT                               @OZ27300 N5524800
*                                                              @OZ27300 N5525000
***************************************************************@OZ27300 N5525200
         SPACE 1                                               @OZ27300 N5525400
NQ530    LTR   NQSE,NQSE           TEST WARM START CONDITION   @OZ27300 N5525600
         BNZ   NQ535               BR IF SINGLE SYS WARM START @OZ27300 N5525800
         LH    R0,JQEHLDCT         GET JOB                     @OZ27300 N5526000
         SRL   R0,4                 HOLD COUNT                 @OZ27300 N5526200
         LH    WE,NQHLDCT          GET VALIDATION              @OZ27300 N5526400
         SRL   WE,4                 HOLD COUNT                 @OZ27300 N5526600
         CLR   R0,WE               TEST JOB HOLD COUNT         @OZ27300 N5526800
         BE    NQ535               BR IF VALID                 @OZ27300 N5527000
         MVC   JQEHLDCT,NQHLDCT    UPDATE JOB HOLD COUNT       @OZ27300 N5527200
         OC    JQEHQLOK,$SIDBUSY   RESTORE HOLD QUEUE LOCK     @OZ27300 N5527400
        $QCKPT (NQ)                FORCE CHECKPOINT OF JQE     @OZ27300 N5527600
         LA    R1,NQHQRM           SET 'HOLD QUEUE ERROR' MSG  @OZ27300 N5527700
         BAL   WE,NQWTO             AND INFORM THE OPERATOR    @OZ27300 N5527800
         EJECT                                                 @OZ27300 N5527900
*********************************************************************** N5528000
*                                                                     * N5530000
*        P R O C E S S   1 S T   R E G U L A R   I O T                * N5532000
*                                                                     * N5534000
*********************************************************************** N5536000
         SPACE 1                                                     R4 N5538000
NQ535    LTR   NQSE,NQSE           IF NODAL WARM START,        @OZ27300 N5540000
         BZ    NQ540                BR TO READ 1ST REGULAR IOT          N5542000
         TM    JQEFLAGS,QUEBUSY    IF JOB                               N5544000
         BZ    NQ610                NOT                                 N5546000
         IC    R0,JQEFLAGS           ACTIVE ON                          N5548000
         N     R0,=A(QUEBUSY)         WARM STARTED                      N5550000
         CLM   R0,1,QSESIBSY           SYSTEM,                          N5552000
         BNE   NQ640                    BR TO TEST NEXT JQE             N5554000
         SPACE 1                                                     R4 N5556000
NQ540    L     NQIOT,NQIOTBF       GET BUFFER ADDRESS FOR IOT           N5558000
         ST    NQIOT,PCEBUFAD      SET BUFFER ADDRESS FOR $EXCP         N5560000
         L     R1,JCTIOT           GET TRK ADDR OF 1ST REGULAR IOT      N5562000
         BAL   WE,NQREAD            READ IT IN AND                      N5564000
         BZ    NQ542               BRANCH IF VALID IOT READ    @OZ43880 N5564200
         LTR   NQSE,NQSE           OTHERWISE, CANCEL JOB IF..  @OZ43880 N5564400
         BZ    NQIOTSCN             ..NODAL WARM START.        @OZ43880 N5564600
NQ542    BAL   WE,NQALLOC         ALL. ITS DATA SETS' TRACKS   @OZ43880 N5566000
         TM    JQETYPE,$XEQ        IF BEYOND EXECUTION,                 N5568000
         BZ    NQ590                BR TO REQUEUE THE JOB               N5570000
         CLI   JQETYPE,$XEQ        IF JOB IN OR AWAITING CONVERSION,    N5572000
         BE    NQ590                BR TO REQUEUE THE JOB               N5574000
         TM    NQSTAT,NQRESTRT     IF RESTARTING JES2,               R4 N5576000
         BO    NQ590                BR TO ISSUE 'WAS EXECUTING' MSG     N5578000
         L     WE,$IOTPDDB           POINT TO                        R4 N5580000
         LA    WE,IOTPDBOJ(WE,NQIOT)  JCL DATA SET PDDB              R4 N5582000
         TM    PDBFLAG1-PDBDSECT(WE),PDB1NULL  TEST JCL FILE         R4 N5584000
         BZ    NQ550               BR IF JCL STILL ALLOCATED            N5586000
         OC    PDBMTTR-PDBDSECT(,WE),PDBMTTR-PDBDSECT(WE)            R4 N5588000
         BZ    NQ550               BR IF NO JCL FILE (REQ JOB ID)       N5590000
         LA    R1,NQTERM           SET 'WAS TERMINATING' MSG         R4 N5592000
         BAL   WE,NQWTO             AND INFORM THE OPERATOR             N5594000
         B     NQ585               THEN BR TO RE-QUEUE JOB           R4 N5596000
         SPACE 1                                                        N5598000
NQ550    TM    JQEFLAGS,QUEBUSY    IF JOB AWAITING EXECUTION,           N5600000
         BZ    NQ640                BR TO TEST NEXT JQE                 N5602000
         LA    R1,NQEXEC           SET 'WAS EXECUTING' MSG           R4 N5604000
         BAL   WE,NQWTO             AND INFORM THE OPERATOR          R4 N5606000
         MVI   JCTJSFLG,SSJSWARM   SET WARM START BIT                R4 N5608000
         TM    JCTJOBFL,JCTNOJNL   IF JOB WAS JOURNALLED,            R4 N5610000
         BZ    NQ580                BR TO RE-WRITE THE JCT           R4 N5612000
         TM    JCTJOBFL,JCTRSTRT   IF JOB NOT RESTARTABLE,           R4 N5614000
         BZ    NQ585                BR TO RE-QUEUE FOR OUTPUT        R4 N5616000
         OI    JCTJBOPT,JCTRERUN   INDICATE RE-RUN REQUEST          R41 N5617000
         MVI   JCTJSFLG,0          RESET RESTART FLAGS               R4 N5618000
         XC    JCTJSSTP,JCTJSSTP    AND RESTART STEP IN JCT          R4 N5620000
         XC    JCTLINES,JCTLINES   RESET LINE COUNT            @OZ29915 N5620100
         XC    JCTPUNCH,JCTPUNCH   RESET PUNCH OUTPUT COUNT    @OZ29915 N5620200
         XC    JCTXOUT,JCTXOUT     RESET TOTAL OUTPUT COUNT    @OZ29915 N5620300
         EJECT                                                       R4 N5622000
*********************************************************************** N5624000
*                                                                     * N5626000
*        RE-QUEUE NON-JOURNALLED RESTARTABLE JOB FOR RE-EXECUTION     * N5628000
*                                                                     * N5630000
*********************************************************************** N5632000
         SPACE 1                                                     R4 N5634000
NQ555    LH    R0,JCTPDDBO         GET DD NUMBER OF 1ST OUTPUT PDDB  R4 N5636000
         L     R1,$IOTPDDB         GET OFFSET OF 1ST PDDB IN IOT     R4 N5638000
         SPACE 1                                                     R4 N5640000
NQ560    CL    R1,IOTPDDBP         IF NO MORE PDDBS IN THIS IOT,     R4 N5642000
         BNL   NQ570                BR TO TEST FOR ANOTHER IOT       R4 N5644000
         CH    R0,PDBDSKEY-PDBDSECT(R1,NQIOT)  1ST OUTPUT PDDB...    R4 N5646000
         BL    NQ565               BR IF YES (NO SYSIN DDS).   @OZ26726 N5647000
         LA    R1,PDBLENG(,R1)     POINT TO NEXT PDDB IN ANY CASE    R4 N5648000
         BH    NQ560               BR IF NOT LAST DD * / DATA  @OZ26726 N5650000
NQ565    DS    0H                                              @OZ26726 N5651000
         ST    R1,IOTPDDBP         RESET OFFSET IN IOT               R4 N5652000
         XC    IOTIOTTR,IOTIOTTR   TRUNCATE IOT CHAIN                R4 N5654000
         XC    IOTIOT,IOTIOT       TRUNCATE BUFFER CHAIN       @OZ43003 N5654100
         L     R1,IOTTRACK         GET TRACK ADDRESS OF IOT          R4 N5656000
         BAL   WE,NQWRITE           AND RE-WRITE IT                  R4 N5658000
         B     NQ580               THEN BR TO RE-WRITE THE JCT       R4 N5660000
         SPACE 1                                                     R4 N5662000
NQ570    ICM   R1,15,IOTIOTTR      GET TRACK ADDRESS OF NEXT IOT     R4 N5664000
         BZ    NQ580               BR IF END OF IOT CHAIN            R4 N5666000
         BAL   WE,NQREAD            ELSE READ IN THE IOT             R4 N5668000
         B     NQ555                 AND RESUME SEARCH               R4 N5670000
         SPACE 1                                                     R4 N5672000
NQ580    ST    NQJCT,PCEBUFAD      SET BUFFER ADDRESS FOR $EXCP      R4 N5674000
         L     R1,JQETRAK          GET TRACK ADDRESS OF JCT          R4 N5676000
         BAL   WE,NQWRITE           AND RE-WRITE THE JCT             R4 N5678000
         BNZ   NQ585               BR IF I/O ERROR             @OZ39489 N5679000
         LA    R1,NQREQU           POINT TO 'JOB REQUEUED' MSG       R4 N5680000
         BAL   WE,NQWTO             AND INFORM THE OPERATOR          R4 N5682000
         TM    JCTJOBFL,JCTNOJNL   IF JOB WAS JOURNALLED,            R4 N5684000
         BZ    NQ595                BR TO SET SYSTEM AFFINITY        R4 N5686000
         BAL   WE,NQRELSE          RELEASE ANY DUPLICATE JOBS        R4 N5688000
         B     NQ600               BR TO RE-QUEUE JOB FOR EXECUTION  R4 N5690000
         EJECT                                                       R4 N5692000
NQ585    BAL   WE,NQRELSE          RELEASE ANY DUPLICATE JOBS        R4 N5694000
         CLC   JQEJOBNO,=H'10000'  IF BATCH JOB,                        N5696000
         BL    *+8                  BR AROUND NEXT INSTRUCTION          N5698000
         NI    JQEFLAG2,255-QUEINIT  ELSE RESET INIT BIT                N5700000
         LA    R0,1*16             STARTING PRIORITY = 1       @OZ27492 N5700200
         TM    JCTJBOPT,JCTPRICD   /*PRIORITY, OR 'PRTY='...   @OZ27492 N5700400
         BNO   NQ588               BRANCH IF NOT, USE '1'      @OZ27492 N5700600
         CLI   JQEPRIO,13*16       CHECK FOR HIGH PRIORITY     @OZ27492 N5700800
         BL    NQ588               BRANCH IF NOT, USE '1'      @OZ27492 N5701000
         LA    R0,15*16            RESET PRIORITY TO MAX       @OZ27492 N5701200
NQ588    DS    0H                                              @OZ27492 N5701400
         STC   R0,JQEPRIO          SET NEW PRIORITY IN JQE     @OZ27492 N5701600
         LA    R0,$OUTPUT          THEN RE-QUEUE JOB           @OZ27300 N5702000
         B     NQ620                FOR OUTPUT                 @OZ27300 N5704000
         SPACE 1                                                     R4 N5706000
NQ590    TM    JQEFLAGS,QUEBUSY    IF JOB NOT ACTIVE,                   N5708000
         BZ    NQ610                BR TO TEST JOB FOR PURGE            N5710000
         TM    JQETYPE,$XEQ        IF JOB                               N5712000
         BZ    NQ600                NOT IN                              N5714000
         CLI   JQETYPE,$XEQ          EXECUTION,                         N5716000
         BE    NQ600                  BR TO REQUEUE JOB                 N5718000
         LA    R1,NQEXEC           SET 'WAS EXECUTING' MSG           R4 N5720000
         BAL   WE,NQWTO             AND INFORM THE OPERATOR             N5722000
         TM    NQSTAT,NQRESTRT     IF RESTARTING JES2,               R4 N5724000
         BO    NQ640                BR TO TEST NEXT JQE                 N5726000
         SPACE 1                                                     R4 N5728000
NQ595    NI    JQEFLAG2,255-QUESYSAF  ENSURE                         R4 N5730000
         IC    R1,JQEFLAGS             JOB                           R4 N5732000
         N     R1,=A(QUEBUSY)           RE-EXECUTED                     N5734000
         LA    R1,NQSYSAF(R1)            ON SAME                        N5736000
         OC    JQEFLAG2,0(R1)             SYSTEM                        N5738000
         BAL   WE,NQRELSE          THEN RELEASE ANY DUPLICATE JOBS      N5740000
         EJECT                                                       R4 N5742000
NQ600    IC    R0,JQETYPE          REQUEUE THE JOB                      N5744000
         B     NQ620                TO CURRENT QUEUE           @OZ27300 N5746000
         SPACE 1                                                        N5748000
NQ610    LH    R0,JQEHLDCT         GET CURRENT                          N5750000
         SRA   R0,4                 HOLD COUNT                 @OZ27300 N5752000
         BNZ   NQ640               BR IF NON-ZERO              @OZ27300 N5753000
         CLC   JQEJOE,$ZEROS       ANY NON-HELD OUTPUT...      @OZ27300 N5754000
         BNE   NQ640               BR IF NO                    @OZ27300 N5756000
         CLI   JQETYPE,$HARDCPY    TEST FOR HARDCPY PHASE               N5758000
         BNE   NQ640               BR IF NO TO TEST NEXT JQE            N5760000
         LA    R0,$PURGE           RE-QUEUE JOB FOR PURGE      @OZ27300 N5761000
         SPACE 1                                                        N5762000
NQ620    NI    JQEHQLOK,FF-QUEBUSY REMOVE JOB HOLD QUEUE LOCK  @OZ27300 N5764000
        $QPUT  (NQ),(R0)           RE-QUEUE THE JOB            @OZ27300 N5766000
         B     NQ650               BR TO GET NEXT JOB          @OZ27300 N5767000
         SPACE 1                                                        N5768000
*********************************************************************** N5770000
*                                                                     * N5772000
*        G E T   N E X T   J O B   Q U E U E   E N T R Y              * N5774000
*                                                                     * N5776000
*********************************************************************** N5778000
         SPACE 1                                                        N5780000
NQ640    NI    JQEHQLOK,255-QUEBUSY  REMOVE JOB HOLD QUEUE LOCK         N5782000
        $QCKPT (NQ)                   AND FORCE CHECKPOINT OF JQE       N5784000
         SPACE 1                                                    R41 N5785000
                                   PRINT OFF - SECTION DELETED @OZ36307 N5786000
*                                  THIS CARD DELETED BY APAR   @OZ36307 N5788000
*                                  THIS CARD DELETED BY APAR   @OZ36307 N5790000
*                                  THIS CARD DELETED BY APAR   @OZ36307 N5792000
*                                  THIS CARD DELETED BY APAR   @OZ36307 N5794000
                                   PRINT ON -- SECTION DELETED @OZ36307 N5796000
NQ650    LH    R1,NQJOBCT          DECREMENT AND               @OZ36307 N5798000
         BCTR  R1,0                 STORE COUNT OF             @OZ36307 N5800000
         STH   R1,NQJOBCT            REMAINING JQES            @OZ36307 N5802000
         LTR   R1,R1               ANY JQE REMAINING...        @OZ36307 N5804000
         BNZ   NQ210               BR IF YES TO PROCESS IT     @OZ36307 N5806000
         EJECT                                                      R41 N5807000
*********************************************************************** N5807100
*                                                                     * N5807200
*  IF NODAL WARM START -- REALLOCATE NEWS TRACKS, IF ANY       @OZ39639 N5807300
*                                                                     * N5807400
*********************************************************************** N5807500
         SPACE 1                                                    R41 N5807600
NQ670    LTR   NQSE,NQSE           SINGLE SYSTEM WARM START...      R41 N5807700
         BNZ   NQ700               EXIT IF YES                      R41 N5807800
         CLC   $NEWSIOT,$ZEROS     JESNEWS DATA SET EXIST...   @OZ39639 N5807900
         BE    NQ700               BR IF NO                    @OZ39639 N5808000
*                                  THIS LINE DELETED BY APAR   @OZ39639 N5808100
*                                  THIS LINE DELETED BY APAR   @OZ39639 N5808200
*                                  THIS LINE DELETED BY APAR   @OZ39639 N5808300
*                                  THIS LINE DELETED BY APAR   @OZ39639 N5808400
         SPACE 1                                                    R41 N5808500
         L     NQIOT,NQIOTBF       POINT TO BUFFER WITH IOT REG     R41 N5808600
         ST    NQIOT,PCEBUFAD      SET BUFFER ADDR FOR READ         R41 N5808700
         MVI   PCEDEVTP,PCEDARD    SET DA DCT TO 'READ'             R41 N5808800
         MVC   PCESEEK,$NEWSIOT    SET SEEK ADDRESS FOR READ        R41 N5808900
         LA    R1,PCEDADCT         POINT TO DA DCT                  R41 N5809000
        $EXCP  (R1),WAIT=YES       READ IN IOT, WAIT FOR COMPLETION R41 N5809100
         BNO   NQNEWSX1            BRANCH IF READ ERROR             R41 N5809200
         CLC   NQNIOTKY,IOTJBKEY   VALIDATE 'JOB' KEY               R41 N5809300
         BE    NQ680               BRANCH IF NEWS IOT               R41 N5809400
         SPACE 1                                                    R41 N5809500
NQNEWSX1 $DISTERR                  INDICATE CONTROL BLOCK ERROR     R41 N5809600
        $QSUSE                     OBTAIN CONTROL OF QUEUES         R41 N5809700
         XC    $NEWSIOT(8),$NEWSIOT CLEAR OUT HCT POINTERS IF ERROR R41 N5809800
        $POST  $HASPECF,CKPT       FORCE CHECKPOINT                 R41 N5809900
         B     NQ700               EXIT FROM NEWS PROCESSING        R41 N5810000
         SPACE 1                                                    R41 N5810100
NQ680    BAL   WE,NQALLOC          ALLOCATE OLD NEWS' TRACKS AGAIN  R41 N5810200
         B     NQ700               EXIT FROM NEWS PROCESSING        R41 N5810300
         SPACE 2                                               @OZ39639 N5810310
NQNEWSKY DC    CL6'$$NEWS'         SPECIAL JOB/DS KEY FOR NEWS @OZ39639 N5810320
NQNIOTKY EQU   NQNEWSKY,4          SPECIAL JOB    KEY FOR NEWS @OZ39639 N5810330
         TITLE 'HASP JOB QUEUE WARM START -- SUPPORT ROUTINES'          N5810400
*********************************************************************** N5810500
*                                                                     * N5812000
*        $ W A I T   P R O C E S S O R   F O R   N   S E C O N D S    * N5814000
*                                                                     * N5816000
*                                                                     * N5818000
*              TIME INTERVAL PROVIDED IN R0                           * N5820000
*              RETURN CODE N/A                                        * N5822000
*                                                                     * N5824000
*********************************************************************** N5826000
         SPACE 3                                                        N5828000
         CNOP  0,8                                                      N5830000
NQSTIMER LA    R1,NQTQE            POINT TO PROCESSOR TQE               N5832000
         ST    R0,ITIME(,R1)       STORE TIME INTERVAL                  N5834000
         ST    SAVE,IPOST(,R1)     SET POST ADDRESS IN TQE              N5836000
        $STIMER (R1)               ISSUE STIMER                         N5838000
        $WAIT  WORK                $WAIT FOR INTERVAL TO ELAPSE         N5840000
         BR    WA                  THEN RETURN                          N5842000
         EJECT                                                          N5844000
*********************************************************************** N5846000
*                                                                     * N5848000
*        R E A D / W R I T E   A   C T L   B L O C K                  * N5850000
*                                                              @OZ39489 N5851000
* INPUT  R0    - WORK                                          @OZ39489 N5852000
*        R1    - SEEK ADDRESS                                  @OZ39489 N5853000
*        WE    - RETURN ADDRESS                                @OZ39489 N5854000
*                                                              @OZ39489 N5855000
* OUTPUT CC     ZERO IF I/O     SUCCESSFUL                     @OZ39489 N5856000
*        CC NON-ZERO IF I/O NOT SUCCESSFUL                     @OZ39489 N5857000
*                                                                     * N5858000
*********************************************************************** N5860000
         SPACE 1                                                     R4 N5862000
NQREAD   MVI   PCEDEVTP,PCEDARD    INDICATE READ OPERATION              N5864000
         B     NQEXCP               AND GO DO IT                        N5866000
         SPACE 1                                                        N5868000
NQHQTWR  NI    HQTFLAG1,255-HQT1CKPT  RESET CHECKPOINT FLAG             N5870000
         ST    NQHQT,PCEBUFAD      SET BUFFER ADDRESS FOR $EXCP         N5872000
         L     R1,NQHQTRK          LOAD HQT TRACK ADDRESS               N5874000
         SPACE 1                                                        N5876000
NQWRITE  MVI   PCEDEVTP,PCEDAWR    INDICATE WRITE OPERATION             N5878000
         SPACE 1                                                        N5880000
NQEXCP   ST    R1,PCESEEK          SET SEEK ADDRESS FOR $EXCP           N5882000
         LA    R1,PCEDADCT         GET DIRECT ACCESS DCT ADDRESS        N5884000
        $EXCP  (R1),WAIT=YES        AND READ/WRITE CTL BLOCK         R4 N5886000
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    N5888000
         TM    BUFECBCC-BUFDSECT(R1),X'7F'  RE-TEST I/O COMPLETION      N5890000
         BM    NQDSTER             BR IF READ/WRITE ERROR            R4 N5892000
         CLR   R1,NQIOT            IF IOT READ WRITE,                   N5894000
         BE    NQCKIOT              BR TO TEST IOT VALIDITY             N5896000
         CLR   R1,NQHQT            IF HQT READ/WRITE,                   N5898000
         BE    NQCKHQT              BR TO TEST HQT VALIDITY             N5900000
         L     R0,JCTJQE             ELSE                               N5902000
         AL    R0,$JOBQPTR            VALIDATE                          N5904000
         CLR   R0,NQ                   JCT                              N5906000
         BER   WE                  RETURN IF NO ERROR                   N5908000
         B     NQDSTER              ELSE BR TO ISSUE ERROR MSG      R41 N5910000
         SPACE 1                                                        N5912000
NQCKHQT  CLC   HQTJBKEY,JCTJBKEY   IF NOT VALID HQT,                    N5914000
         BNE   NQDSTER              BR TO ISSUE ERROR MSG           R41 N5916000
         CLC   HQTID,=CL4'HQT'     IF NOT DUMMY HQT,                    N5918000
         BER   WE                   RETURN                              N5920000
         B     NQHQTCK               ELSE BR TO PREPARE EMPTY HQT       N5922000
         SPACE 1                                                        N5924000
NQCKIOT  CLC   IOTJBKEY,JCTJBKEY   IF VALID IOT,                        N5926000
         BER   WE                   RETURN                           R4 N5928000
         EJECT                                                          N5930000
*********************************************************************** N5932000
*                                                                     * N5934000
*        I/O ERROR READING/WRITING CONTROL BLOCK                      * N5936000
*                                                                     * N5938000
*********************************************************************** N5940000
         SPACE 1                                                     R4 N5942000
NQDSTER $DISTERR                   ISSUE DISASTEROUS ERROR MSG          N5948000
        $QSUSE                     REQUEST ACCESS TO CKPT DATA      R41 N5949000
         CLI   PCEDEVTP,PCEDARD    IF WRITE ERROR,             @OZ39489 N5950000
         BNER  WE                  RETURN WITH NON-ZERO CC     @OZ39489 N5952000
         CL    NQJCT,PCEBUFAD      IF NOT THE JCT,                      N5954000
         BNE   NQHQTCK              BR TO TEST FOR HQT                  N5956000
         XC    JQEHLDCT,JQEHLDCT   CLEAR HOLD COUNT                     N5958000
         OI    JQEFLAGS,QUEPURGE+QUEOPCAN  FLAG JOB FOR PURGE           N5960000
        $QCKPT (NQ)                         AND FORCE CKPT OF JQE       N5962000
        $#CAN  JQE=(NQ)            KILL ANY JOES NOT BUSY               N5964000
         LTR   NQSE,NQSE           IF NODAL WARM START,        @OZ43880 N5965300
         BZ    NQERREM              BR TO REMOVE JQE           @OZ43880 N5965600
         TM    JQEFLAGS,QUEBUSY    IF JOB NOT ACTIVE,                   N5966000
         BZ    NQ610                BR TO TEST NEXT JQE                 N5968000
*        THIS LINE DELETED BY APAR ===>                        @OZ43880 N5970000
*        THIS LINE DELETED BY APAR ===>                        @OZ43880 N5972000
         IC    R0,JQEFLAGS         IF JOB                               N5974000
         N     R0,=A(QUEBUSY)       ACTIVE ON                           N5976000
         CLM   R0,1,QSESIBSY         WARM STARTED SYSTEM,               N5978000
         BE    NQ590                  BR TO REQUEUE THE JOB             N5980000
         B     NQ640                   ELSE BR TO TEST NEXT JQE         N5982000
         EJECT                                                       R4 N5984000
NQHQTCK  CL    NQHQT,PCEBUFAD      IF NOT AN HQT,                       N5986000
         BNE   NQBADIOT             BR TO PROCESS IOT ERROR             N5988000
         MVI   HQTFLAG1,HQT1HQT1     ELSE                               N5990000
         LA    R0,HQTHQR-HQTDSECT     INITIALIZE                        N5992000
         ST    R0,HQTHQRP              TO LOOK LIKE                     N5994000
         XC    HQTHQT,HQTHQT            EMPTY HQT                       N5996000
         SLR   R0,R0               SET NON-ZERO CC             @OZ39489 N5997000
         BR    WE                  THEN RETURN                          N5998000
         SPACE 1                                                        N6000000
NQBADIOT CLC   NQIOTBF,PCEBUFAD    TEST FOR SPIN IOT                    N6002000
         BNE   NQSPIOT             BR IF SO                             N6004000
         LA    R0,IOTTGMAP+TGMAP-TGMDSECT  ELSE POINT TO IOT BIT MAP R4 N6006000
         L     R1,$CYLMAPL         CLEAR                             R4 N6008000
         SLR   R15,R15              IOT                              R4 N6010000
         MVCL  R0,R14                BIT MAP                         R4 N6012000
         L     R1,$IOTPDDB         POINT TO                          R4 N6014000
         ALR   R1,NQIOT             JCL DATA SET PDDB                R4 N6016000
         NI    PDBFLAG1-PDBDSECT+IOTPDBOJ(R1),255-PDB1NULL SHOW NULL R4 N6018000
         SLR   R0,R0               SET NON-ZERO CC             @OZ39489 N6019000
         BR    WE                  THEN RETURN                          N6020000
         SPACE 1                                                        N6022000
NQSPIOT  XC    IOTIOTTR,IOTIOTTR   SHOW END OF SPIN IOT CHAIN           N6024000
         MVI   IOTFLAG1,0          PREVENT TRACK ALLOCATION             N6026000
         L     R1,$IOTPDDB         POINT TO                          R4 N6028000
         ALR   R1,NQIOT             SPIN DATA SET PDDB               R4 N6030000
         OI    PDBFLAG1-PDBDSECT(R1),PDB1NSOT  PREVENT SPIN/HOLD     R4 N6032000
         SLR   R0,R0               SET NON-ZERO CC             @OZ39489 N6033000
         BR    WE                  THEN RETURN                          N6034000
         EJECT                                                 @OZ43880 N6034010
*************************************************************  @OZ43880 N6034020
*                                                           *  @OZ43880 N6034030
*        REMOVE IOT'S FOR THIS JOB FROM THE $UNSPUNQ        *  @OZ43880 N6034040
*        CANCEL AND REMOVE JQE'S FOR VARIOUS READ ERRORS.   *  @OZ43880 N6034050
*                                                           *  @OZ43880 N6034060
*        IOT READ ERROR ------------ BOTH $#CAN AND $QREM   *  @OZ43880 N6034070
*        JCT READ ERROR (PREVIOUSLY $#CAN'D) - JUST $QREM   *  @OZ43880 N6034080
*                                                           *  @OZ43880 N6034090
*************************************************************  @OZ43880 N6034100
         SPACE 1                                               @OZ43880 N6034110
NQIOTSCN DS    0H                                              @OZ43880 N6034120
         ICM   R0,15,JCTSPIOT      NO SPIN IOTS FOR THIS JOB   @OZ43880 N6034130
         BZ    NQCANJB              DISREGARD UNSPUN QUEUE     @OZ43880 N6034140
         ICM   R1,15,$UNSPUNQ      ELSE CHECK UNSPUN QUEUE     @OZ43880 N6034150
         BZ    NQCANJB              BRANCH IF NONE             @OZ43880 N6034160
         ICM   NQIOT,15,NQIOTBF    GET BUFFER ADDRESS AND      @OZ43880 N6034170
         ST    NQIOT,PCEBUFAD       STORE IN PCE FOR NQREAD    @OZ43880 N6034180
         SPACE 1                                               @OZ43880 N6034190
NQIOTRD  BAL   WE,NQREAD           READ THE IOT                @OZ43880 N6034200
         BNZ   NQCANJB              REMOVE JQE IF CAN'T READ   @OZ43880 N6034210
         L     R15,IOTJQOFF        GET JQE OFFSET              @OZ43880 N6034220
         AL    R15,$JOBQPTR        ADD TO START OF JOB QUEUE   @OZ43880 N6034230
         CLR   R15,NQ              IF NOT FOR THIS JOB         @OZ43880 N6034240
         BNE   NQIOTNXT             LOOK FOR NEXT IOT          @OZ43880 N6034250
         MVI   IOTFLAG1,0          PREVENT PURGING TRACKS      @OZ43880 N6034260
         L     R15,$IOTPDDB        PREVENT OUTPUT PROCESSOR    @OZ43880 N6034270
         ALR   R15,NQIOT                   FROM BUILDING       @OZ43880 N6034280
         OI    PDBFLAG1-PDBDSECT(R15),PDB1NSOT     A JOE       @OZ43880 N6034290
         L     R1,IOTTRACK         MTTR OF THIS IOT            @OZ43880 N6034295
         BAL   WE,NQWRITE          REWRITE THE IOT             @OZ43880 N6034300
         SPACE 1                                               @OZ43880 N6034310
NQIOTNXT ICM   R1,15,IOTIOTTR      GET MTTR OF NEXT IOT        @OZ43880 N6034320
         BZ    NQCANJB              BRANCH IF NONE             @OZ43880 N6034330
         B     NQIOTRD               ELSE READ IT IN           @OZ43880 N6034340
         SPACE 1                                               @OZ43880 N6034350
NQCANJB  XC    JQEHLDCT,JQEHLDCT   CLEAR HOLD COUNT            @OZ43880 N6034360
        $QCKPT (NQ)                FORCE CKPT OF JQE           @OZ43880 N6034370
        $#CAN  JQE=(NQ)            KILL JOES                   @OZ43880 N6034380
         SPACE 1                                               @OZ43880 N6034390
NQERREM  DS    0H                                              @OZ43880 N6034400
         BAL   WE,NQRELSE          RELEASE DUPLICATE JOBS      @OZ43880 N6034410
        $QREM  (NQ)                REMOVE THE JQE              @OZ43880 N6034420
         LA    R1,NQRPRG           POINT TO CTL BLK ERR MSG    @OZ43880 N6034430
         BAL   WE,NQWTO             AND INFORM THE OPERATOR.   @OZ43880 N6034440
         B     NQ640               BRANCH TO GET NEXT JQE      @OZ43880 N6034450
         EJECT                                                          N6036000
*********************************************************************** N6038000
*                                                                     * N6040000
*        I S S U E   $ W T O   M E S S A G E                          * N6042000
*                                                                     * N6044000
*********************************************************************** N6046000
         SPACE 1                                                        N6048000
NQWTO    MVC   NQMSG,0(R1)         MOVE MESSAGE TO WORK AREA         R4 N6050000
         LH    R0,JQEJOBNO         CONVERT HASP JOB NUMBER              N6052000
         CVD   R0,NQDBL             TO PACKED DECIMAL                   N6054000
         CH    R0,=H'10000'        IF BATCH JOB,                        N6056000
         BL    NQMVO                BR TO ISSUE MESSAGE                 N6058000
         MVC   NQMSGID,=C'STC'     ASSUME STARTED TASK               R4 N6060000
         CH    R0,=H'20000'        IF STARTED TASK,                     N6062000
         BL    NQMVO                BR TO ISSUE MESSAGE                 N6064000
         MVC   NQMSGID,=C'TSU'     MUST BE LOGON                     R4 N6066000
         SPACE 1                                                        N6068000
NQMVO    MVO   NQDBL(4),NQDBL+4(4)  OFFSET NUMBER BY 1                  N6070000
         MVC   NQJOBNR,NQEDMSK     EDIT HASP JOB NUMBER                 N6072000
         ED    NQJOBNR,NQDBL+1      INTO MESSAGE                        N6074000
         SLR   R0,R0               PICK UP                              N6076000
         IC    R0,NQMSGLN           MESSAGE LENGTH                      N6078000
        $WTO   NQMSGST,(R0),JOB=NO,ROUTE=$LOG+$MAIN,   ISSUE MESSAGE R4CN6080000
               PRI=$ST,CLASS=$ALWAYS,WAIT=YES           TO OPERATOR     N6082000
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    N6084000
         SPACE 1                                                        N6086000
         BR    WE                  THEN RETURN                          N6088000
         EJECT                                                          N6090000
*********************************************************************** N6092000
*                                                                     * N6094000
*        L O C A T E   S J B   F O R   E X E C U T I N G   J O B      * N6096000
*                                                                     * N6098000
*********************************************************************** N6100000
         SPACE 1                                                        N6102000
         USING SJBDSECT,WA         PROVIDE SJB ADDRESSABILITY           N6104000
         SPACE 1                                                        N6106000
                                   PRINT OFF - SECTION DELETED @OZ40028 N6108000
*                                  THIS LINE DELETED BY APAR   @OZ40028 N6110000
*                                  THIS LINE DELETED BY APAR   @OZ40028 N6112000
*                                  THIS LINE DELETED BY APAR   @OZ40028 N6114000
*                                  THIS LINE DELETED BY APAR   @OZ40028 N6116000
*                                  THIS LINE DELETED BY APAR   @OZ40028 N6118000
*                                  THIS LINE DELETED BY APAR   @OZ40028 N6120000
*                                  THIS LINE DELETED BY APAR   @OZ40028 N6122000
*                                  THIS LINE DELETED BY APAR   @OZ40028 N6124000
                                   PRINT ON -- SECTION DELETED @OZ40028 N6126000
NQSJBLOC L     R15,$SSVT           GET SSVT ADDRESS            @OZ40028 N6128000
         LA    R0,0(,NQ)           GET JQE OFFSET              @OZ40028 N6130000
         SL    R0,$JOBQPTR          IN REGISTER R0             @OZ40028 N6132000
         CLC   JQEJOBNO,=H'10000'  IF BATCH JOB,               @OZ40028 N6134000
         BL    NQJOB                BR TO SEARCH FOR SJB       @OZ40028 N6136000
         LA    WA,$SVJTERM-(SJBXQCHN-SJBDSECT)  TERMINATION QUEUE       N6138000
         BAL   R14,NQSJBLUP        TRY TO LOCATE SJB ON ABOVE QUEUE     N6140000
         LA    WA,$SVJXNUM-(SJBXQCHN-SJBDSECT)  IN XEQ-BY-NUM Q         N6142000
         BAL   R14,NQSJBLUP        TRY TO LOCATE SJB ON ABOVE QUEUE     N6144000
         LA    WA,$SVJPNUM-(SJBXQCHN-SJBDSECT)  PENDING XEQ-BY-NUM Q    N6146000
         BAL   R14,NQSJBLUP        TRY TO LOCATE SJB ON ABOVE QUEUE     N6148000
         LA    WA,$SVJRENQ-(SJBXQCHN-SJBDSECT)  PENDING RE-ENQUEUE Q    N6150000
         BAL   R14,NQSJBLUP        TRY TO LOCATE SJB ON ABOVE QUEUE     N6152000
         BR    WE                  RETURN HERE IF SJB NOT FOUND         N6154000
         SPACE 1                                                        N6156000
*                                  THIS LINE DELETED BY APAR   @OZ40028 N6158000
*                                  THIS LINE DELETED BY APAR   @OZ40028 N6160000
NQJOB    LA    WA,$SVJTERM-(SJBXQCHN-SJBDSECT)  TERMINATION Q  @OZ40028 N6162000
         BAL   R14,NQSJBLUP        TRY TO LOCATE SJB ON ABOVE QUEUE     N6164000
         LA    WA,$SVJXCLS-(SJBXQCHN-SJBDSECT)  IN XEQ-BY-CLS Q         N6166000
         BAL   R14,NQSJBLUP        TRY TO LOCATE SJB ON ABOVE QUEUE     N6168000
         LA    WA,$SVJRENQ-(SJBXQCHN-SJBDSECT)  PENDING RE-ENQUEUE Q    N6170000
         BAL   R14,NQSJBLUP        TRY TO LOCATE SJB ON ABOVE QUEUE     N6172000
         BR    WE                  RETURN HERE IF SJB NOT FOUND         N6174000
         SPACE 1                                                        N6176000
NQSJBLUP ICM   WA,15,SJBXQCHN      IF END OF SJB CHAIN,                 N6178000
         BZR   R14                  RETURN                              N6180000
*                                  THIS LINE DELETED BY APAR   @OZ40028 N6182000
*                                  THIS LINE DELETED BY APAR   @OZ40028 N6184000
         CL    R0,SJBJQOFF         TEST FOR CURRENT JOB        @OZ40028 N6186000
         BNE   NQSJBLUP            BR IF NO TO TEST NEXT SJB            N6188000
         BR    WE                   ELSE RETURN HERE WITH SJB           N6190000
         EJECT                                                          N6192000
*********************************************************************** N6194000
*                                                                     * N6196000
*        S U B R O U T I N E   T O   A L L O C A T E   T R A C K S    * N6198000
*                                                                     * N6200000
*********************************************************************** N6202000
         SPACE 1                                                        N6204000
NQALLOC  LTR   NQSE,NQSE           IF NOT NODAL WARM START,          R4 N6206000
         BNZR  WE                   IGNORE ALLOCATE REQUEST             N6208000
         ST    WE,NQTQE            SAVE RETURN ADDRESS               R4 N6210000
         LA    WE,IOTTGMAP+TGMAP-TGMDSECT  POINT TO IOT TRK GRP MAP  R4 N6212000
         LR    R0,WE               MOVE                              R4 N6214000
         L     R1,$CYLMAPL          IOT                              R4 N6216000
         L     R14,NQCYLMAP          TRACK GROUP MAP                 R4 N6218000
         LR    R15,R1                 TO                             R4 N6220000
         MVCL  R14,R0                  WORK AREA                     R4 N6222000
         L     R0,$CYLMAPL         RESET BITS                        R4 N6224000
         L     R15,$TGMAP           IN IOT                     @OZ35996 N6226000
        $VFL   NC,(WE),(R15),(R0)    TRACK GROUP MAP                 R4 N6228000
         L     R0,$CYLMAPL         REMOVE BITS                       R4 N6230000
         L     R1,$TGMAP            FROM MASTER                @OZ35996 N6232000
        $VFL   XC,(R1),(WE),(R0)     TRACK GROUP MAP                 R4 N6234000
         L     R14,NQCYLMAP        TEST                              R4 N6236000
         L     R15,$CYLMAPL         RESULTING                        R4 N6238000
         LR    R0,WE                 IOT                             R4 N6240000
         LR    R1,R15                 TRACK GROUP MAP                R4 N6242000
         CLCL  R14,R0                  VALIDITY                      R4 N6244000
         L     WE,NQTQE            RESTORE RETURN ADDRESS            R4 N6246000
         BER   WE                  RETURN IF ALLOCATION SUCCESSFUL   R4 N6248000
         LA    R1,NQIBAD             ELSE POINT TO 'BAD IOT' MSG     R4 N6250000
         BAL   WE,NQWTO               AND INFORM THE OPERATOR           N6252000
         L     R1,IOTTRACK         GET TRACK ADDRESS OF IOT             N6254000
         L     WE,NQTQE            RESTORE RETURN ADDRESS               N6256000
         ST    NQIOT,PCEBUFAD      SET BUFFER ADDRESS FOR $EXCP     R41 N6257000
         B     NQWRITE             THEN RE-WRITE IOT AND RETURN         N6258000
         EJECT                                                          N6260000
*********************************************************************** N6262000
*                                                                     * N6264000
*        R E L E A S E   A N Y   D U P L I C A T E   J O B S          * N6266000
*                                                                     * N6268000
*********************************************************************** N6270000
         SPACE 1                                                        N6272000
         CNOP  4,8                                                      N6274000
NQRELSE  LA    R15,72              PREPARE                              N6276000
         L     R1,=V($QINDEX)       TO SCAN                             N6278000
         LA    WA,C'A'-(255-QUECLASS)  EXECUTION                        N6280000
         IC    WA,0(R1,WA)              QUEUES                          N6282000
         SPACE 1                                                        N6284000
NQRNXTQ  ST    R15,NQDBL           SAVE CURRENT QUEUE OFFSET            N6286000
         LA    R1,0(R15,WA)        POINT TO START                       N6288000
         LA    R1,$JQHEADS-4-QUECHAIN(R1)  OF NEXT QUEUE                N6290000
         SPACE 1                                                        N6292000
NQNXTJQE LH    R1,QUECHAIN(,R1)    GET OFFSET                           N6294000
         N     R1,=X'0000FFFF'     OF NEXT JQE                          N6296000
         BZ    NQRENDQ             BR IF END OF CURRENT QUEUE           N6298000
         SLL   R1,2                 ELSE CONVERT OFFSET                 N6300000
         AL    R1,$JOBQPTR           TO ABSOLUTE ADDRESS                N6302000
         TM    QUEFLAGS(R1),QUEHOLD2  IF JOB NOT HELD,                  N6304000
         BZ    NQNXTJQE                BR TO TEST NEXT JQE              N6306000
         CLC   JQEJNAME,QUEJNAME(R1)  IF NOT SAME JOB NAME,             N6308000
         BNE   NQNXTJQE                BR TO TEST NEXT JQE              N6310000
         NI    QUEFLAGS(R1),255-QUEHOLD2  ELSE RESET HOLD BIT           N6312000
        $QCKPT (R1)                        AND FORCE CKPT OF JQE        N6314000
         B     NQNXTJQE            THEN BR TO TEST NEXT JQE             N6316000
         SPACE 1                                                        N6318000
NQRENDQ  L     R15,NQDBL           RESTORE CURRENT QUEUE OFFSET         N6320000
         BCTR  R15,0               IF ANOTHER JOB QUEUE,                N6322000
         BCT   R15,NQRNXTQ          BR TO SCAN IT                       N6324000
         BR    WE                    ELSE RETURN                        N6326000
         SPACE 1                                                        N6328000
         DROP  NQIOT,NQHQT         KILL IOT, HQT ADDRESSABILITY         N6330000
         DROP  R15                 KILL SSVT ADDRESSABILITY          R4 N6332000
         TITLE 'HASP JOB QUEUE WARM START'                           R4 N6334000
NQMAXQ   DC    A(L'JOTRDYWQ)       MAXIMUM JOE QUEUE OFFSET          R4 N6336000
         SPACE 1                                                        N6338000
NQTSTAFF TM    JQEFLAG2,0          *** EXECUTE ONLY ***                 N6340000
         SPACE 1                                                        N6342000
NQEDMSK  DC    X'4020202021'       HASP JOB NUMBER EDIT MASK            N6344000
NQSYSAF  DC    X'0001020408102040' SYSTEM AFFINITY TABLE                N6346000
         SPACE 1                                                        N6348000
NQCLSTBL DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'  JOT CLASSES     N6350000
         SPACE 1                                                        N6352000
         DROP  WD                  KILL JQE ADDRESSABILITY              N6354000
         TITLE 'HASP JOB QUEUE WARM START -- OPERATOR MESSAGES'         N6356000
*********************************************************************** N6358000
*                                                                     * N6360000
*        H A S P   W A R M   S T A R T   M E S S A G E S              * N6362000
*                                                                     * N6364000
*********************************************************************** N6366000
         SPACE 3                                                        N6368000
NQREQ   $MSG   400,'ENTER REQUESTS'                                     N6370000
         SPACE 2                                                        N6372000
        $MID   403                                                      N6374000
NQDOWN   WTOR  '&MID.IS SYSTEM XXXX DOWN -- REPLY Y/N',                CN6376000
               ,L'NQREPLY,ROUTCDE=(1,2),DESC=(2),MF=L                R4 N6378000
NQLOKID  EQU   *-26,4              SYSTEM ID FOR MESSAGE             R4 N6380000
NQMSGIDC EQU   *-45,1              MSG ID CHARACTER FOR MSG          R4 N6382000
         SPACE 2                                                        N6384000
NQIBAD   DC    AL1(NQIBADLN)       MESSAGE LENGTH                       N6386000
NQIBADST $MSG  404,'JOB NNNN - BAD IOT - ERRORS MAY OCCUR'              N6388000
NQIBADLN EQU   *-NQIBADST          LENGTH OF TEXT                       N6390000
         SPACE 2                                                        N6392000
NQCORE   DC    AL1(NQCORELN)       MESSAGE LENGTH                       N6394000
NQCOREST $MSG  405,'JOB NNNN AWAITING BUFFER STORAGE'                   N6396000
NQCORELN EQU   *-NQCOREST          LENGTH OF TEXT                       N6398000
         EJECT                                                          N6400000
NQEXEC   DC    AL1(NQEXECLN)       MESSAGE LENGTH                       N6402000
NQEXECST $MSG  406,'JOB NNNN WAS EXECUTING'                             N6404000
NQEXECLN EQU   *-NQEXECST          LENGTH OF TEXT                       N6406000
         SPACE 2                                                        N6408000
NQTERM   DC    AL1(NQTERMLN)       MESSAGE LENGTH                       N6410000
NQTERMST $MSG  407,'JOB NNNN WAS TERMINATING'                           N6412000
NQTERMLN EQU   *-NQTERMST          LENGTH OF TEXT                       N6414000
         SPACE 2                                                        N6416000
NQREQU   DC    AL1(NQREQULN)       MESSAGE LENGTH                    R4 N6418000
NQREQUST $MSG  408,'JOB NNNN QUEUED FOR RE-EXECUTION'                R4 N6420000
NQREQULN EQU   *-NQREQUST          LENGTH OF TEXT                    R4 N6422000
         SPACE 2                                                        N6424000
NQRDRM   DC    AL1(NQRDRMLN)       MESSAGE LENGTH                       N6426000
NQRDRMST $MSG  409,'JOB NNNN WAS ON READER'                             N6428000
NQRDRMLN EQU   *-NQRDRMST          LENGTH OF TEXT                       N6430000
         SPACE 2                                                        N6432000
NQPRPU   DC    AL1(NQPRPULN)       MESSAGE LENGTH                       N6434000
NQPRPUST $MSG  410,'JOB NNNN WAS PRINTING/PUNCHING'                     N6436000
NQPRPULN EQU   *-NQPRPUST          LENGTH OF TEXT                       N6438000
         SPACE 2                                               @OZ43880 N6438040
NQRPRG   DC    AL1(NQRPRGLN)       MESSAGE LENGTH              @OZ43880 N6438080
NQRPRGST $MSG  455,'JOB NNNN IS PURGED, CONTROL BLOCK READ ERROR'       N6438120
*              ABOVE LINE ADDED BY APAR NUMBER                 @OZ48744 N6438130
NQRPRGLN EQU   *-NQRPRGST          LENGTH OF TEXT              @OZ43880 N6438160
         SPACE 2                                               @OZ27300 N6438200
NQHQRM   DC    AL1(NQHQRMLN)       MESSAGE LENGTH              @OZ27300 N6438400
NQHQRMST $MSG  460,'JOB NNNN HOLD QUEUE ERROR -- OUTPUT MAY BE LOST'    N6438600
NQHQRMLN EQU   *-NQHQRMST          LENGTH OF TEXT              @OZ27300 N6438800
         TITLE 'HASP JOB QUEUE WARM START -- TERMINATION PROCESSING'    N6476000
*********************************************************************** N6478000
*                                                                     * N6480000
*        E N D   O F   J O B   Q U E U E   W A R M   S T A R T        * N6482000
*                                                                     * N6484000
*********************************************************************** N6486000
         SPACE 1                                                        N6488000
         USING $SVDSECT,WD         PROVIDE SSVT ADDRESSABILITY       R4 N6490000
         SPACE 1                                                        N6492000
NQ700    L     WD,$SSVT            POINT TO SSVT                     R4 N6494000
         LTR   NQSE,NQSE           IF SPECIFIC SYSTEM WARM START,       N6496000
         BNZ   NQBFREE              BR TO FREE BUFFERS               R4 N6498000
         TM    $OPTSTAT,$OPTCOLD+$OPTFMT  IF NODAL COLD START,       R4 N6500000
         BNZ   NQ720                       BR TO ANALYZE TRK GRP MAP    N6502000
        $QSUSE                     REQUEST ACCESS TO CKPT DATA @OZ27300 N6502200
         NI    $CKPTFLG,FF-$CKPNODL SHOW NODAL WARM START DONE @OZ35996 N6502400
*                                  THIS LINE DELETED BY APAR   @OZ35996 N6502600
*                                  THIS LINE DELETED BY APAR   @OZ35996 N6502800
*                                  THIS LINE DELETED BY APAR   @OZ35996 N6503000
*                                  THIS LINE DELETED BY APAR   @OZ35996 N6503200
         L     R1,NQCYLMAP         POINT TO ALLOCATE WORK AREA       R4 N6504000
         MVI   BUFTYPE-BUFDSECT(R1),BUFHASP  RESET BUFFER TYPE       R4 N6506000
        $FREEBUF (R1)              THEN FREE THE WORK BUFFER         R4 N6508000
         B     NQBUFRE             BR TO FREE OTHER BUFFERS    @OZ41702 N6508200
*                                  THIS LINE DELETED BY APAR   @OZ35996 N6508400
*                                  THIS LINE DELETED BY APAR   @OZ35996 N6508600
         EJECT                                                 @OZ27300 N6510000
NQBFREE  TM    QSESTAT,QSEQUICK    QUICK START...              @OZ41702 N6512000
         BO    NQTESYS             BR IF YES                   @OZ41702 N6512500
         SPACE 1                                               @OZ41702 N6513000
NQBUFRE $FREEBUF (NQJCT)           FREE THE JCT BUFFER         @OZ41702 N6513500
        $FREEBUF (NQHQT)           FREE THE HQT BUFFER                  N6514000
         L     R1,NQIOTBF          POINT TO THE IOT BUFFER              N6516000
        $FREEBUF (R1)               AND FREE IT                         N6518000
         MVC   $MINHOLD,NQMINHLD   RESTORE NORMAL HOLD INTERVAL@OZ36307 N6519000
NQTESYS  TM    NQSTAT,NQ$ESYS      IF WARM START FROM 'S JES2  @OZ41702 N6520000
         BZ    NQ720                BR TO FIRE UP REST OF JES2       R4 N6522000
        $QSUSE                     REQUEST ACCESS TO CKPT DATA @OZ35996 N6522100
         NI    QSESTAT,FF-QSEACTIV-QSERSTID  SHOW INACTIVE     @OZ35996 N6522200
         OI    QSESTAT,QSEQUICK               AND WARM STARTED @OZ41702 N6523200
         CLI   $NUMSMFB,2          TEST SMF BUFFER COUNT             R4 N6524000
         BL    NQ900               BR IF SMF NOT SUPPORTED           R4 N6526000
         SPACE 1                                                        N6528000
         USING SMFDSECT,R1         PROVIDE SMF RECORD ADDRESSABILITY    N6530000
         SPACE 1                                                        N6532000
        $GETSMFB WAIT=YES          CREATE TYPE 43 SMF RCRD FOR $ESYS    N6534000
         MVI   SMFRDW+1,SMF43END-SMFRDW  LENGTH OF START JES2 RECORD    N6536000
         MVI   SMFHDRTY,SMFSSSTP   START JES2 SMF RECORD TYPE           N6538000
         MVI   SMFSSID+1,SMFHSPID  JES2 SUBSYSTEM ID FOR RECORD 43      N6540000
         MVI   SMFSSLEN+1,SMF43END-SMF43RV1  LEN OF SUBSYSTEM PART      N6542000
         OI    SMF43RST,SMF$ESYS   SET $ESYS INDICATOR BYTE             N6544000
         MVC   SMF43EID,QSESID     SYSTEM ID FOR RESTARTED SYSTEM       N6546000
        $QUESMFB                   WRITE RECORD TYPE 43                 N6548000
         B     NQ900               THEN BR TO RESET QSE POINTER      R4 N6550000
         SPACE 1                                                        N6552000
         DROP  R1                  KILL SJB RECORD ADDRESSABILITY       N6554000
         EJECT                                                          N6556000
NQ720    LTR   NQSE,NQSE           IF WARM STARTING SINGLE SYSTEM,      N6558000
         BNZ   NQ750                BR TO AVOID TGM ANALYSYS        R41 N6560000
         SPACE 1                                                        N6562000
*********************************************************************** N6564000
*                                                                     * N6566000
*        C O M P U T E   A L L O C A T E D   T R A C K   G R O U P S  * N6568000
*                                                                     * N6570000
*********************************************************************** N6572000
         SPACE 1                                                        N6574000
         L     R0,$SVTGTOT                       PREPARE TO             N6576000
         SLR   WE,WE                              COMPUTE ALLOCATED     N6578000
         L     R1,$CYLMAPL                         TRACK             R4 N6580000
         L     R2,$TGMAP                            GROUPS           R4 N6582000
         BCTR  R2,0                                  WITHIN          R4 N6584000
         L     R3,=A(KNBITB)                          MAP            R4 N6586000
         SPACE 1                                                        N6588000
NQ740    IC    WE,0(R1,R2)         GET NEXT BYTE FROM $TGMAP            N6590000
         IC    WE,0(R3,WE)         WE = NUMBER OF BITS IN BYTE          N6592000
         SLR   R0,WE               R0 = NUMBER OF ALLOCATED TRK GRPS    N6594000
         BCT   R1,NQ740            PLOW THRU ENTIRE BIT MAP             N6596000
         SPACE 1                                                        N6598000
         ST    R0,$SVTGALC         SAVE NUMBER OF ALLOCATED TRK GRPS    N6600000
         SPACE 1                                                        N6602000
*********************************************************************** N6604000
*                                                                     * N6606000
*        S H O W   S Y S T E M   N O W   U P                          * N6608000
*                                                                     * N6610000
*********************************************************************** N6612000
         SPACE 1                                                        N6614000
         USING CVT,WA              PROVIDE CVT ADDRESSABILITY           N6616000
         SPACE 1                                                        N6618000
NQ750    L     WA,CVTPTR           POINT TO THE CVT                 R41 N6620000
        $GETLOK                    SERIALIZE WITH SSSM DECHAINING       N6622000
         SLR   R0,R0               SET NEW HASP CONDITION               N6624000
         ST    R0,$SVHASP           TO ZERO                             N6626000
        $FRELOK                    THEN RELEASE THE LOCK                N6628000
         OI    NQSTAT,NQ$ESYS      SET 1ST TIME ENTRY SWITCH         R4 N6630000
         EJECT                                                          N6632000
         TM    $SVSTUS,$SVSTUSP    IF NOT PRIMARY SUBSYSTEM,            N6634000
         BZ    NQ760                BR TO CONTINUE                  R41 N6636000
         TM    NQSTAT,NQRESTRT     IF RESTARTING JES2,               R4 N6638000
         BO    NQ760                BR TO CONTINUE                  R41 N6640000
         SPACE 1                                                        N6642000
*********************************************************************** N6644000
*                                                                     * N6646000
*        P O S T   M A S T E R   S C H E D U L E R                    * N6648000
*                                                                     * N6650000
*********************************************************************** N6652000
         SPACE 1                                                        N6654000
         L     R1,CVTMSER          POINT TO MASTER SCHEDULER WORK       N6656000
         LA    R0,BASUBECB-BASE(,R1)  PREPARE                           N6658000
         ST    R0,NQTQE                CROSS                            N6660000
         L     R0,BAASCB-BASE(,R1)      MEMORY                          N6662000
         ST    R0,NQTQE+4                POST                           N6664000
         LA    R0,CVTBRET                 QUEUE                         N6666000
         ST    R0,NQTQE+8                  ELEMENT                      N6668000
         LA    R1,NQTQE            THEN POST                            N6670000
         POST  MF=(E,(1))           THE MASTER SCHEDULER                N6672000
         SPACE 1                                                    R41 N6674000
         DROP  WA                  KILL CVT ADDRESSABILITY          R41 N6674100
         EJECT                                                      R41 N6674200
*********************************************************************** N6674300
*                                                                     * N6674400
*        RELEASE CHECKPOINT RESERVE FOR WARMSTART PROCESSOR    @OZ27300 N6674500
*                                                                     * N6674600
*********************************************************************** N6674700
         SPACE 1                                                    R41 N6674800
NQ760   $QSUSE                     REQUEST ACCESS TO CKPT DATA @OZ27300 N6674900
         NI    $SVSTUS,FF-$SVSTIRV RESET INIT RESERVE BIT      @OZ27300 N6675000
         SPACE 1                                               @OZ41702 N6675100
         LTR   NQSE,NQSE           NODAL WARM START...         @OZ41702 N6675200
         BNZ   NQSEQR              BR IF NO                    @OZ41702 N6675300
         L     NQSE,$QSE1           ELSE INDICATE              @OZ41702 N6675400
         LH    R0,$QSENO             THAT ALL                  @OZ41702 N6675450
         OI    QSESTAT,QSEQUICK       SYSTEMS ARE              @OZ41702 N6675500
         LA    NQSE,QSELEN(,NQSE)      ELIGIBLE FOR            @OZ41702 N6675600
         BCT   R0,*-8                   QUICK-START            @OZ41702 N6675700
         SPACE 1                                               @OZ41702 N6675800
NQSEQR   L     NQSE,$AQSE          NO LONGER ALLOW QUICK-      @OZ41702 N6675900
         NI    QSESTAT,FF-QSEQUICK  START FOR THIS SYSTEM      @OZ41702 N6676000
         SPACE 2                                               @OZ41702 N6676100
         DROP  WD,NQSE             DROP SSVT/QSE ADDRESSABILITY@OZ41702 N6676200
*                                  THIS LINE DELETED BY APAR   @OZ41702 N6676300
*                                  THIS CARD DELETED BY APAR   @OZ35278 N6676350
*                                  THIS LINE DELETED BY APAR   @OZ41702 N6676400
*                                  THIS LINE DELETED BY APAR   @OZ41702 N6676500
                                   PUSH PRINT - SECTION        @OZ39639 N6676600
                                   PRINT OFF  -  DELETED       @OZ39639 N6676700
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6676800
*                 P R O C E S S   'N E W S'   F O R                   * N6676900
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6677000
*           P R I N T E R   S E P A R A T O R   P A G E S             * N6677100
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6677200
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6677300
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6677400
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6677500
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6677600
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6677700
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6677800
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6677900
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6678000
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6678100
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6678200
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6678300
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6678400
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6678500
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6678600
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6678700
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6678800
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6678900
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6679000
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6679100
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6679200
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6679300
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6679400
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6679500
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6679600
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6679700
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6679800
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6679900
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6680000
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6680100
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6680200
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6680300
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6680400
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6680500
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6680600
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6680700
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6680800
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6680900
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6681000
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6681100
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6681200
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6681300
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6681400
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6681500
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6681600
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6681700
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6681800
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6681900
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6682000
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6682100
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6682200
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6682300
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6682400
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6682500
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6682600
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6682700
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6682800
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6682900
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6683000
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6683100
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6683200
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6683300
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6683400
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6683500
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6683600
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6683700
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6683800
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6683900
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6684000
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6684100
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6684200
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6684300
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6684400
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6684500
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6684600
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6684700
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6684800
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6684900
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6685000
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6685100
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6685200
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6685300
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6685400
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6685500
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6685600
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6685700
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6685800
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6685900
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6686000
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6686100
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6686200
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6686300
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6686400
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6686500
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6686600
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6686700
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6686800
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6686900
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6687000
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6687100
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6687200
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6687300
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6687400
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6687500
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6687600
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6687700
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6687800
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6687900
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6688000
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6688100
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6688200
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6688300
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6688400
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6688500
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6688600
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6688700
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6688800
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6688900
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6689000
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6689100
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6689200
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6689300
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6689400
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6689500
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6689600
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6689700
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6689800
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6689900
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6690000
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6690100
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6690200
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6690300
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6690400
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6690500
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6690600
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6690700
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6690800
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6690900
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6691000
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6691100
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6691200
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6691300
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6691400
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6691500
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6691600
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6691700
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6691800
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6691900
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6692000
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6692100
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6692200
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6692300
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6692400
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6692500
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6692600
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6692700
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6692800
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6692900
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6693000
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6693100
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6693200
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6693300
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6693400
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6693500
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6693600
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6693700
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6693800
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6693900
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6694000
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6694100
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6694200
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6694300
*                                  THIS LINE DELETED BY APAR   @OZ39639 N6694400
                                   POP PRINT - SECTION DELETED @OZ39639 N6694500
         TITLE 'HASP JOB QUEUE WARM START -- TERMINATION EXIT'      R41 N6694600
*********************************************************************** N6694700
*                                                                     * N6694800
*        $ P O S T   P R O C E S S O R S   F O R   H O L D            * N6694900
*                                                                     * N6695000
*********************************************************************** N6695100
         SPACE 1                                                        N6696000
         USING QSEDSECT,WC         PROVIDE QSE ADDRESSABILITY       R41 N6696100
         SPACE 1                                                    R41 N6696200
NQ800    TM    $OPTSTAT,$OPTREQ    IF OPERATOR REQUESTS SELECTED,   R41 N6696300
         BO    NQ840                BR TO BYPASS PCE POSTING        R41 N6696400
         LA    R1,$PCEORG-(PCENEXT-PCEDSECT)  PREPARE TO POST PCES      N6698000
         SPACE 1                                                        N6700000
NQ820    L     R1,PCENEXT-PCEDSECT(,R1)  POINT TO NEXT PCE              N6702000
         LTR   R1,R1               IF END OF PCE CHAIN,                 N6704000
         BZ    NQ900                BR TO CONTINUE                  R41 N6706000
        $POST  (R1),HOLD             ELSE $POST PROCESSOR               N6708000
         B     NQ820               THEN BR TO POST NEXT PCE             N6710000
         SPACE 1                                                        N6712000
*********************************************************************** N6714000
*                                                                     * N6716000
*        I S S U E   ' E N T E R   R E Q U E S T S '   M S G          * N6718000
*                                                                     * N6720000
*********************************************************************** N6722000
         SPACE 1                                                        N6724000
NQ840    LA    R1,NQREQ            POINT TO REQUEST MESSAGE          R4 N6726000
        $WTO   (R1),L'NQREQ,JOB=NO,ROUTE=$LOG+$MAIN,    ISSUE MSG    R4CN6728000
               PRI=$ST,CLASS=$ALWAYS,WAIT=YES            TO OPERATOR    N6730000
         L     R1,$COMMPCE         THEN $POST                        R4 N6732000
        $POST  (R1),HOLD            THE COMMAND PROCESSOR               N6734000
         SPACE 1                                                        N6782000
NQ900    SLR   NQSE,NQSE           CLEAR POINTER TO                     N6784000
         ST    NQSE,$ESYSQSE        WARM STARTED SYSTEM QSE             N6786000
        $DORMANT                   INDICATE PROCESSOR INACTIVE      R41 N6790000
         NI    NQSTAT,255-NQRESTRT RESET RESTART FLAG                R4 N6792000
         B     NQ000               THEN BR TO AWAIT $ESYS COMMAND       N6794000
 TITLE 'HASP JOB QUEUE WARM START -- JOB QUEUE SCAN INITIALIZATION'     N6800000
*********************************************************************** N6802000
*                                                                     * N6804000
*        P R E P A R E   T O   W A R M   S T A R T   J O B   Q        * N6806000
*                                                                     * N6808000
*********************************************************************** N6810000
         SPACE 1                                                        N6812000
         USING $SVDSECT,NQJCT      PROVIDE SSVT ADDRESSABILITY       R4 N6814000
         USING JQEDSECT,WD         PROVIDE JQE ADDRESSABILITY           N6816000
         SPACE 1                                                        N6818000
*********************************************************************** N6820000
*                                                                     * N6822000
*        OBTAIN JOB HOLD QUEUE LOCK ON ALL JOBS IN QUEUE       @OZ36307 N6824000
*                                                                     * N6826000
*********************************************************************** N6828000
         SPACE 1                                                     R4 N6830000
NQINIT  $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA R4 N6832000
         L     NQJCT,$SSVT         POINT TO SSVT                     R4 N6834000
         SPACE 1                                                     R4 N6836000
         LH    WB,$MAXJOBS         PREPARE TO SCAN ALL JOB Q'S @OZ36307 N6838000
         SPACE 1                                                        N6840000
         L     NQ,$JOBQPTR         POINT TO DUMMY JQE (JQE 0)  @OZ36307 N6842000
         SPACE 1                                                        N6844000
NQINXTJB LA    NQ,JQELNGTH(,NQ)    POINT TO NEXT JQE           @OZ36307 N6846000
         CLI   JQETYPE,$FREE       IS JQE ON FREE QUEUE...     @OZ36307 N6848000
         BE    NQILOOP             BR IF YES (IGNORE IT)       @OZ36307 N6850000
         TM    JQEHQLOK,QUEBUSY    TEST JOB HOLD QUEUE LOCK    @OZ36307 N6852000
         BZ    NQIRESET            BR IF NOT HELD TO CLAIM IT  @OZ36307 N6854000
         LTR   NQSE,NQSE           IF NODAL WARM START,        @OZ36307 N6856000
         BZ    NQIRESET             BR TO CLAIM THE LOCK       @OZ36307 N6858000
         IC    R0,JQEHQLOK         IF SYSTEM                   @OZ36307 N6860000
         N     R0,=A(QUEBUSY)       BEING                      @OZ36307 N6862000
         CLM   R0,1,QSESIBSY         WARM STARTED,             @OZ36307 N6864000
         BE    NQIRESET               BR TO CLAIM THE LOCK     @OZ36307 N6866000
         BAL   WE,NQLOKREM         CAREFULLY REMOVE THE LOCK   @OZ36307 N6868000
         SPACE 1                                               @OZ36307 N6870000
NQIRESET NI    JQEHQLOK,FF-QUEBUSY RESET JOB HOLD QUEUE LOCK   @OZ36307 N6872000
         LA    R1,$SIDBUSY         SET                         @OZ36307 N6874000
         LTR   NQSE,NQSE            JOB                        @OZ36307 N6876000
         BZ    *+8                   HOLD                      @OZ36307 N6878000
         LA    R1,QSESIBSY            QUEUE                    @OZ36307 N6880000
         OC    JQEHQLOK,0(R1)          LOCK                    @OZ36307 N6882000
        $QCKPT (NQ)                FORCE JQE CHECKPOINT        @OZ36307 N6884000
         SPACE 1                                               @OZ36307 N6886000
NQILOOP  BCT   WB,NQINXTJB         BR TO PROCESS NEXT JOB      @OZ36307 N6888000
         EJECT                                                 @OZ36307 N6890000
***************************************************************@OZ36307 N6892000
*                                                              @OZ36307 N6894000
*        SET TEMPORARY HIGH $MINHOLD VALUE FOR WARM START      @OZ36307 N6896000
*                                                              @OZ36307 N6898000
***************************************************************@OZ36307 N6900000
         SPACE 1                                               @OZ36307 N6902000
         L     R0,$MINHOLD         GET CURRENT $MINHOLD VALUE  @OZ36307 N6904000
         ST    R0,NQMINHLD          AND SAVE FOR LATER         @OZ36307 N6906000
         MVC   $MINHOLD,=F'-500'   SET TEMP VALUE TO 5 SECONDS @OZ36307 N6908000
         C     R0,$MINHOLD         WAS CURRENT VALUE GREATER...@OZ36307 N6910000
         BNL   NQIPOST             BR IF NO                    @OZ36307 N6912000
         ST    R0,$MINHOLD          ELSE USE GREATER VALUE     @OZ36307 N6914000
                                   PRINT OFF - SECTION DELETED @OZ36307 N6916000
*                                  THIS CARD DELETED BY APAR   @OZ36307 N6918000
*                                  THIS CARD DELETED BY APAR   @OZ36307 N6920000
*                                  THIS CARD DELETED BY APAR   @OZ36307 N6922000
*                                  THIS CARD DELETED BY APAR   @OZ36307 N6924000
*                                  THIS CARD DELETED BY APAR   @OZ36307 N6926000
*                                  THIS CARD DELETED BY APAR   @OZ36307 N6928000
*                                  THIS CARD DELETED BY APAR   @OZ36307 N6930000
*                                  THIS CARD DELETED BY APAR   @OZ36307 N6932000
*                                  THIS CARD DELETED BY APAR   @OZ36307 N6934000
*                                  THIS CARD DELETED BY APAR   @OZ36307 N6936000
*                                  THIS CARD DELETED BY APAR   @OZ36307 N6938000
                                   PRINT ON -- SECTION DELETED @OZ36307 N6940000
         SPACE 1                                               @OZ36307 N6942000
*********************************************************************** N6944000
*                                                                     * N6946000
*        R E L E A S E   H O L D   Q U E U E   P R O C E S S O R      * N6948000
*                                                                     * N6950000
*********************************************************************** N6952000
         SPACE 1                                                     R4 N6954000
NQIPOST  L     R1,$HOLDPCE         RELEASE                     @OZ36307 N6956000
        $POST  (R1),HOLD            HOLD QUEUE PROCESSOR                N6958000
         TM    NQSTAT,NQRESTRT     IF NOT RESTARTING JES2,     @OZ36307 N6960000
         BZ    NQBUFRS              BR TO GET BUFFERS                   N6962000
         SPACE 1                                                        N6964000
*********************************************************************** N6966000
*                                                                     * N6968000
*        F R E E   P E N D I N G   H O L D   R E Q U E S T S          * N6970000
*                                                                     * N6972000
*********************************************************************** N6974000
         SPACE 1                                                        N6976000
NQFRIOT  ICM   R1,15,$SVHOLDQ      IF END OF HOLD QUEUE,                N6978000
         BZ    NQBUFRS              BR TO GET BUFFERS                   N6980000
         MVC   $SVHOLDQ,IOTIOT-IOTDSECT(R1)  ELSE                       N6982000
         LH    R0,$BUFSIZE                    FREE                   R4 N6984000
         ICM   R0,8,=AL1(231)                  IOT                      N6986000
         FREEMAIN R,LV=(0),A=(1)                BUFFER                  N6988000
         B     NQFRIOT             THEN BR TO RE-TEST HOLD QUEUE        N6990000
         EJECT                                                       R4 N6992000
*********************************************************************** N6994000
*                                                                     * N6996000
*        G E T   J C T / I O T / H C T   B U F F E R S                * N6998000
*                                                                     * N7000000
*********************************************************************** N7002000
         SPACE 1                                                        N7004000
NQBUFRS $GETBUF WAIT=YES           GET BUFFER FOR JCT                R4 N7006000
         LR    NQJCT,R1            RELOAD BUFFER ADDRESS             R4 N7008000
        $GETBUF WAIT=YES           GET BUFFER FOR IOT                R4 N7010000
         ST    R1,NQIOTBF          SAVE BUFFER ADDRESS               R4 N7012000
        $GETBUF WAIT=YES           GET BUFFER FOR HQT                R4 N7014000
         LR    NQHQT,R1            RELOAD BUFFER ADDRESS             R4 N7016000
         LTR   NQSE,NQSE           IF NOT NODAL WARM START,          R4 N7018000
         BNZ   NQ200                BR TO BEGIN WARM START           R4 N7020000
        $GETBUF WAIT=YES           GET BUFFER FOR WORK AREA          R4 N7022000
         ST    R1,NQCYLMAP         SAVE WORK AREA ADDRESS            R4 N7024000
         B     NQ200               THEN BR TO BEGIN WARM START          N7026000
         EJECT                                                          N7028000
*********************************************************************** N7030000
*                                                                     * N7032000
*        R E M O V E   J O B   H O L D   Q U E U E   L O C K          * N7034000
*                                                                     * N7036000
*********************************************************************** N7038000
         SPACE 1                                                        N7040000
NQLOKREM IC    R0,JQEHQLOK         GET SYSTEM ID                        N7042000
         N     R0,=A(QUEBUSY)       FROM HOLD QUEUE LOCK                N7044000
         L     R1,$QSE1            PREPARE TO SCAN                   R4 N7046000
         SH    R1,=Y(QSELEN)        ACTIVE QSES                @OZ27300 N7048000
         SLR   WA,WA               CLEAR DOWN TBL ENTRY OFFSET @OZ36307 N7049000
         SPACE 1                                                        N7050000
NQINQSE  LA    WA,1(,WA)           BUMP DOWN TBL ENTRY OFFSET  @OZ36307 N7051000
         LA    R1,QSELEN(,R1)             IF NOT THE SYSTEM    @OZ27300 N7052000
         CLM   R0,1,QSESIBSY-QSEDSECT(R1)  HOLDING THE LOCK,            N7054000
         BNE   NQINQSE                      LOOP               @OZ36307 N7056000
         SPACE 1                                                        N7058000
         LA    WA,NQDWNTBL-1(WA)   PT TO SYSTEM DOWN TBL ENTRY @OZ36307 N7059000
         STCK  NQDBL                    IF SYSTEM                       N7060000
         L     R15,NQDBL                 HOLDING                        N7062000
         SL    R15,$SYNCTOL               THE LOCK                   R4 N7064000
         CL    R15,QSESITIM-QSEDSECT(,R1)  APPEARS UP,         @OZ36307 N7065000
         BNH   NQILOKWT                     BR TO WAIT A BIT   @OZ36307 N7066000
         CLI   0(WA),FF            HAS OP CONFIRMED IT DOWN... @OZ36307 N7067000
         BER   WE                  RETURN IF YES               @OZ36307 N7068000
         B     NQLOKMSG             ELSE BR TO QUERY OPERATOR  @OZ36307 N7069000
         SPACE 1                                                        N7070000
*********************************************************************** N7072000
*                                                                     * N7074000
*        L O C K   H E L D   B Y   A C T I V E   S Y S T E M          * N7076000
*                                                                     * N7078000
*********************************************************************** N7080000
         SPACE 1                                                        N7082000
NQILOKWT MVI   0(WA),0             INDICATE SYSTEM NOT DOWN    @OZ36307 N7083000
        $WAIT  ABIT                $WAIT A LITTLE WHILE                 N7084000
         SPACE 1                                                        N7086000
NQLOKTST $QSUSE                    REQUEST ACCESS TO CHECKPOINT DATA    N7088000
         TM    JQEHQLOK,QUEBUSY    IF LOCK NO LONGER HELD,              N7090000
         BZR   WE                   RETURN                              N7092000
         B     NQLOKREM              ELSE TRY AGAIN TO REMOVE IT        N7094000
         EJECT                                                          N7096000
*********************************************************************** N7098000
*                                                                     * N7100000
*        S U S P E C T   D O W N   S Y S T E M   - -   V E R I F Y    * N7102000
*                                                                     * N7104000
*********************************************************************** N7106000
         SPACE 1                                                        N7108000
NQLOKMSG MVC   NQMSG,NQDOWN        MOVE MSG TO WORK AREA             R4 N7110000
         MVC   NQMSGIDC-NQDOWN+NQMSG,$SVCOMCH           SET UP       R4 N7112000
         MVC   NQLOKID-NQDOWN+NQMSG,QSESID-QSEDSECT(R1)  MSG         R4 N7114000
         SPACE 1                                                     R4 N7116000
NQDNWTOR MVI   NQREPLY,0                  ISSUE                      R4 N7118000
         L     R0,$HASPECB                 QUERY               @OZ36307 N7120000
         WTOR  ,NQREPLY,,(R0),MF=(E,NQMSG)  TO OPERATOR        @OZ36307 N7122000
         SPACE 1                                                        N7124000
NQREPL  $WAIT  ABIT                $WAIT FOR OPERATOR RESPONSE          N7126000
         CLI   NQREPLY,0           IF NOT OPERATOR REPLY,               N7128000
         BE    NQREPL               BR TO $WAIT A LITTLE LONGER         N7130000
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    N7132000
         TM    JQEHQLOK,QUEBUSY    IF LOCK NO LONGER HELD,              N7134000
         BZR   WE                   RETURN                              N7136000
         OI    NQREPLY,X'40'       FORCE UPPER CASE REPLY            R4 N7138000
         CLI   NQREPLY,C'Y'        IF OPERATOR                          N7140000
         BE    NQREMLOK             HAS CONFIRMED                       N7142000
         CLI   NQREPLY,C'N'          THAT SYSTEM IS DOWN,            R4 N7144000
         BNE   NQDNWTOR               BR TO REMOVE THE LOCK          R4 N7146000
         LA    R0,60                   ELSE $WAIT                       N7148000
         BAL   WA,NQSTIMER              FOR 60 SECONDS                  N7150000
         B     NQLOKTST            THEN BR TO TEST LOCK AGAIN           N7152000
         SPACE 1                                                        N7154000
         SPACE 1                                               @OZ36307 N7156000
NQREMLOK MVI   0(WA),FF            INDICATE SYSTEM DOWN        @OZ36307 N7158000
         BR    WE                  THEN RETURN                          N7160000
         SPACE 1                                                     R4 N7162000
         DROP  NQJCT               KILL SSVT ADDRESSABILITY          R4 N7164000
         TITLE 'HASP JOB QUEUE WARM START -- LITERAL POOL'           R4 N7166000
         LTORG                                                          N7168000
         TITLE 'HASP DYNAMIC SPOOL ALLOCATION SUBTASK'               R4 N7170000
*********************************************************************** N7172000
*                                                                     * N7174000
* SUBTASK NAME -- HOSPOOL                                             * N7176000
*                                                                     * N7178000
* DESCRIPTIVE NAME -- JES2 DYNAMIC SPOOL ALLOCATION SUBTASK           * N7180000
*                                                                     * N7182000
* FUNCTION -- PROVIDE CAPABILITY TO DYNAMICALLY ALLOCATE A JES2       * N7184000
*             SPOOL VOLUME.                                           * N7186000
*                                                                     * N7188000
* NOTES -- THE ATTACHER OF THIS SUBTASK MUST REQUEST THE SYSTEM       * N7190000
*          TO PROVIDE A REGISTER SAVE AREA.  HE MUST ALSO PROVIDE,    * N7192000
*          IN REGISTER 1, THE ADDRESS OF A WORK AREA OBTAINED VIA     * N7194000
*          GETMAIN FROM SUBPOOL 229 AND DESCRIBED BY THE $SPL         * N7196000
*          MACRO.  THE FOLLOWING FIELDS IN THIS WORK AREA MUST BE     * N7198000
*          PROVIDED -- SPLFLG1, SPLTCBPT, SPLUNIT AND SPLVOLID.       * N7200000
*          IF SPLUCBPT IS SET, THEN SPLUNIT MUST CONTAIN THE          * N7202000
*          3-CHARACTER UCB NAME.  IF SPLUCBPT IS ZERO, THEN           * N7204000
*          SPLUNIT MUST CONTAIN THE 8-CHARACTER DEVICE TYPE.          * N7206000
*                                                                     * N7208000
* REGISTER CONVENTIONS -- R0  -- WORK REGISTER                        * N7210000
*                         R1  -- WORK REGISTER                        * N7212000
*                         R2  -- WORK REGISTER                        * N7214000
*                         R3  -- WORK REGISTER                        * N7216000
*                         R4  -- WORK REGISTER                        * N7218000
*                         R5  -- WORK REGISTER                        * N7220000
*                         WE  -- WORK/LINK REGISTER                   * N7222000
*                         WF  -- WORK REGISTER                        * N7224000
*                         WG  -- IOB ADDRESS                          * N7226000
*                         R9  -- UNUSED                               * N7228000
*                         R10 -- RB ADDRESS                           * N7230000
*                         R11 -- HCT ADDRESS (BASE1)                  * N7232000
*                         R12 -- BASE REGISTER (BASE2)                * N7234000
*                         R13 -- SPL ADDRESS                          * N7236000
*                                                                     * N7238000
*********************************************************************** N7240000
         EJECT                                                       R4 N7242000
*********************************************************************** N7244000
*                                                                     * N7246000
*        HOSPOOL INITIAL ENTRY POINT                                  * N7248000
*                                                                     * N7250000
*********************************************************************** N7252000
         SPACE 5                                                     R4 N7254000
         USING S99RB,R10           PROVIDE RB ADDRESSABILITY         R4 N7256000
         USING BUFDSECT,WG         PROVIDE IOB ADDRESSABILITY        R4 N7258000
         USING SPLDSECT,R13        PROVIDE SPL ADDRESSABILITY        R4 N7260000
         SPACE 1                                                     R4 N7262000
HOSPOOL $ENTRY BASE=R15            PROVIDE SUBTASK ENTRY             R4 N7264000
         STM   R14,R12,12(R13)     SAVE SYSTEM'S REGISTERS           R4 N7266000
         SPACE 1                                                     R4 N7268000
         DROP  R15                 PROVIDE                           R4 N7270000
         LR    BASE2,R15            SUBTASK                          R4 N7272000
         USING HOSPOOL,BASE2         ADDRESSABILITY                  R4 N7274000
         SPACE 1                                                     R4 N7276000
         ST    R1,8(,R13)          STORE FORWARD POINTER             R4 N7278000
         ST    R13,4(,R1)          STORE BACKWARD POINTER            R4 N7280000
         LR    R13,R1              SWITCH TO NEW SAVE AREA           R4 N7282000
         L     BASE1,=V(HASPNUC)   GET HCT ADDRESS                   R4 N7284000
         MVI   SPLFLG2,SPL2UNAL    SET ERROR FLAG BYTE               R4 N7286000
         EJECT                                                       R4 N7288000
*********************************************************************** N7290000
*                                                                     * N7292000
*        CONTRUCT DYNAMIC ALLOCATION PARAMETER LIST                   * N7294000
*                                                                     * N7296000
*********************************************************************** N7298000
         SPACE 1                                                     R4 N7300000
         LA    R10,SPLDYNRB        GET RB ADDRESS                    R4 N7302000
         ST    R10,SPLDYNAL        SET RB POINTER                    R4 N7304000
         MVI   SPLDYNAL,S99RBPND   SET LAST INDICATOR                R4 N7306000
         XC    S99RB(20),S99RB     CLEAR RB                          R4 N7308000
         MVI   S99RBLN,20          SET RB LENGTH                     R4 N7310000
         MVI   S99VERB,S99VRBAL    INDICATE ALLOCATION REQUEST       R4 N7312000
         LA    R0,SPLTEXT          SET POINTER TO LIST               R4 N7314000
         ST    R0,S99TXTPP          OF TEXT UNIT POINTERS            R4 N7316000
         MVI   S99FLG21,SPALFLGS   SET ALLOCATION FLAGS              R4 N7318000
         LA    R0,SPLDDTXT         SET POINTER TO                    R4 N7320000
         ST    R0,SPLDDTA           DDNAME TEXT UNIT                 R4 N7322000
         MVC   SPLDDTXT,SPDDTXT    SET DDNAME TEXT                   R4 N7324000
         MVC   SPLDDNAM,SPLVOLID   MOVE DDNAME TO TEXT UNIT          R4 N7326000
         LA    R0,SPLDSTXT         SET POINTER TO                    R4 N7328000
         ST    R0,SPLDSNTA          DSNAME TEXT UNIT                 R4 N7330000
         MVC   SPLDSTXT,SPDSNTXT   SET DSNAME TEXT                   R4 N7332000
         MVI   SPLDSNAM,C' '       BLANK OUT ENTIRE DSNAME           JN N7334200
         MVC   SPLDSNAM+1(L'SPLDSNAM-1),SPLDSNAM  (LIKEWISE)         JN N7334300
         MVC   SPLDSNAM(8),$DSNPRFX SET PREFIX (DEFAULT = 'SYS1')    JN N7334400
         LA    R1,SPLDSNAM         SCAN FOR                          JN N7334500
SKIP90   LA    R1,1(,R1)             FIRST BLANK                     JN N7334600
         CLI   0(R1),C' '            FOLLOWING                       JN N7334700
         BNE   SKIP90                PREFIX                          JN N7334800
         MVC   0(8,R1),=CL8'.HASPACE' SET DSNAME FOR HASPACE         JN N7334900
         TM    SPLFLG1,SPL1CKPT    TEST FOR SYS1.HASPCKPT            R4 N7336000
         BZ    SPVOLSER            BR IF NO                    @OZ27300 N7337000
         MVC   5(4,R1),=CL4'CKPT'   ELSE SET DSNAME AND DDNAME @OZ27300 N7338000
         MVC   SPLDDNAM,=C'$CKPT '   TO PRIMARY CHECKPOINT     @OZ27300 N7339000
         TM    SPLFLG1,SPL1CKP2    ALTERNATE CHECKPOINT...     @OZ27300 N7340000
*                                  THIS CARD DELETED BY APAR   @OZ27300 N7340200
         BZ    SPVOLSER            BR IF PRIMARY               @OZ27300 N7341000
         MVC   SPLDDNAM,=C'$CKPT2'  ELSE SET FOR ALTERNATE     @OZ27300 N7342000
         SPACE 1                                               @OZ27300 N7343000
SPVOLSER LA    R0,SPLVLTXT         SET POINTER TO              @OZ27300 N7344000
         ST    R0,SPLVOLTA          VOLUME SERIAL TEXT UNIT          R4 N7346000
         MVC   SPLVLTXT,SPVOLTXT   SET VOLUME SERIAL TEXT            R4 N7348000
         LA    R0,SPLDPTXT         SET POINTER TO                    R4 N7350000
         ST    R0,SPLDSPTA          DATA SET DISPOSITION TEXT UNIT   R4 N7352000
         MVI   SPLDSPTA,S99TUPLN   INDICATE LAST TEXT UNIT POINTER   R4 N7354000
         MVC   SPLDPTXT,SPDSPTXT   SET DISP=OLD TEXT                 R4 N7356000
         LA    R0,SPLUNTXT         SET POINTER TO                    R4 N7358000
         ST    R0,SPLUNITA          UNIT NAME TEXT UNIT              R4 N7360000
         MVC   SPLUNTXT,SPUNITXT   SET UNIT NAME TEXT                R4 N7362000
         TM    SPLFLG1,SPL1UNAL    TEST FOR UNALLOCATE REQUEST       R4 N7364000
         BO    SPUNALOC            BR IF YES                         R4 N7366000
         OC    SPLUCBPT,SPLUCBPT   TEST FOR UCB ADDRESS              R4 N7368000
         BNZ   SPDYNAL             BR IF YES - UNIT NAME PROVIDED    R4 N7370000
         OI    S99FLG21,S99WTUNT+S99OFFLN    ELSE ALLOW              R4 N7372000
         MVI   S99FLG22,S99UDEVT              WAIT ON                R4 N7374000
         MVI   S99TULNG+1-S99TUNIT+SPLUNTXT,8  OFFLINE UNIT          R4 N7376000
         EJECT                                                       R4 N7378000
*********************************************************************** N7380000
*                                                                     * N7382000
*        DYNAMIC ALLOCATE SPOOL/CHECKPOINT VOLUME                     * N7384000
*                                                                     * N7386000
*********************************************************************** N7388000
         SPACE 1                                                     R4 N7390000
SPDYNAL  LA    R1,SPLDYNAL         POINT TO PARAMETER LIST           R4 N7392000
         DYNALLOC                   AND ALLOCATE THE VOLUME          R4 N7394000
         LTR   R15,R15             TEST ALLOCATE                     R4 N7396000
         BNZ   SPEXIT              BR IF ALLOCATE ERROR              R4 N7398000
         NI    SPLFLG2,255-SPL2UNAL  RESET UNALLOCATE FLAG           R4 N7400000
         L     R3,CVTPTR           GET CVT ADDRESS                   R4 N7402000
         ICM   R4,15,SPLUCBPT      TEST FOR UCB ADDRESS              R4 N7404000
         BNZ   SPUCBOK             BR IF PROVIDED                    R4 N7406000
         SPACE 1                                                     R4 N7408000
*********************************************************************** N7410000
*                                                                     * N7412000
*        LOCATE SPOOL/CHECKPOINT VOLUME UCB                           * N7414000
*                                                                     * N7416000
*********************************************************************** N7418000
         SPACE 1                                                     R4 N7420000
         USING CVT,R3              PROVIDE CVT ADDRESSABILITY        R4 N7422000
         USING UCBDSECT,R4         PROVIDE UCB ADDRESSABILITY        R4 N7424000
         SPACE 1                                                     R4 N7426000
         L     R15,CVTILK2         GET ADDRESS OF UCB                R4 N7428000
         SH    R15,=H'2'            LOOK-UP TABLE (LESS 2)           R4 N7430000
         SPACE 1                                                     R4 N7432000
SPNXTUCB LA    R15,2(,R15)         GET NEXT LOOK-UP TABLE ENTRY      R4 N7434000
         ICM   R4,3,0(R15)         GET UCB ADDRESS                   R4 N7436000
         BZ    SPNXTUCB            IGNORE IF NULL ENTRY              R4 N7438000
         CLI   UCBTBYT3,UCB3DACC   TEST DEVICE TYPE                  R4 N7440000
         BNE   SPNXTUCB            IGNORE IF NOT DIRECT ACCESS       R4 N7442000
         CLC   SPLVOLID,SRTEVOLI   TEST VOLUME SERIAL                R4 N7444000
         BNE   SPNXTUCB            IGNORE IF NOT OUR VOLUME          R4 N7446000
         ST    R4,SPLUCBPT          ELSE STORE UCB ADDRESS           R4 N7448000
         SPACE 1                                                     R4 N7450000
         USING QSEDSECT,R1         PROVIDE QSE ADDRESSABILITY        R4 N7452000
         SPACE 1                                                     R4 N7454000
SPUCBOK  L     R1,$QSE1            POINT TO 1ST QSE                  R4 N7456000
         TM    QSEFLAGS,QSELAST    TEST FOR UNI-SYSTEM NODE          R4 N7458000
         BO    SPOBTAIN            BR IF YES                         R4 N7460000
         TM    UCBTBYT2,UCBRR      TEST FOR SHARED DASD              R4 N7462000
         BO    SPOBTAIN            BR IF YES                         R4 N7464000
         LA    R1,QSELEN(,R1)      POINT TO 2ND QSE            @OZ27300 N7464100
         TM    QSEFLAGS,QSELAST    MORE THAN 2 CPU'S DEFINED...     R41 N7464200
         BNO   SPUCBERR            BR IF YES, MUST BE SHARED        R41 N7464300
         L     R5,UCBEXTPT         GET UCB EXTENSION ADDRESS,       R41 N7464400
         USING UCBCMEXT,R5          AND SET ADDRESSABILTY           R41 N7464500
         TM    UCBFLP1,UCBSHRUP    IS SHARED-UP GENERATED...        R41 N7464600
         BO    SPOBTAIN            BR IF YES, TEST NEXT UCB         R41 N7464700
SPUCBERR MVC   SPLMSG,SPSHRMSG      ELSE                            R41 N7466000
         MVC   SPLSHRVL,SPLVOLID     INFORM                          R4 N7468000
         BAL   WE,SPWTO               OPERATOR                       R4 N7470000
         B     SPUNALOC                AND BR TO EXIT                R4 N7472000
         SPACE 1                                                     R4 N7474000
         DROP  R1                  KILL QSE ADDRESSABILITY           R4 N7476000
         DROP  R5                  KILL UCB EXT. ADDRESSABILITY     R41 N7476100
         SPACE 1                                                    R41 N7478000
SPOBTAIN DS    0H                                                    JN N7480200
         MVI   SPLCMLST,193            PREPARE                       R4 N7482000
         XC    SPLCMLST+1(3),SPLCMLST+1 CAMLST                       R4 N7484000
         LA    R0,SPLDSNAM               TO                          R4 N7486000
         ST    R0,SPLCMLST+4              OBTAIN                     R4 N7488000
         LA    R0,SPLVOLID                 SPOOL/CHECKPOINT          R4 N7490000
         ST    R0,SPLCMLST+8                VOLUME                   R4 N7492000
         LA    R0,SPLDSCB                    EXTENT                  R4 N7494000
         ST    R0,SPLCMLST+12                 DATA                   R4 N7496000
         OBTAIN SPLCMLST           GET SPOOL/CHECKPOINT DSCB         R4 N7498000
         LTR   R15,R15             TEST OBTAIN                       R4 N7500000
         BZ    SPOBTOK             BR IF OBTAIN SUCCESSFUL           R4 N7502000
         MVC   SPLMSG,SPOBTERM     MOVE MESSAGE TO WORK AREA         R4 N7504000
         MVC   SPLOBTVL,SPLVOLID   FILL IN                           R4 N7506000
         SRL   R15,1                PERTINENT                        R4 N7508000
         LA    R2,SPATAB-2(R15)      INFORMATION                     R4 N7510000
         MVC   SPLOBTCC,0(R2)         AND                            R4 N7512000
         MVC   SPLOBTDS,SPLDSNAM       INFORM                        R4 N7514000
         BAL   WE,SPWTO                 OPERATOR                     R4 N7516000
         OI    SPLFLG2,SPL2OBT     INDICATE OBTAIN ERROR             R4 N7518000
         B     SPUNALOC             AND BR TO EXIT                   R4 N7520000
         SPACE 1                                                     R4 N7522000
SPOBTOK  CLI   SPLDSCB+61,X'00'    HAS DATASET ANY EXTENT?     @OZ33861 N7524000
         BNE   SPOBTOK1            YES,BRANCH                  @OZ33861 N7524010
         MVC   SPLMSG,SPLZEXTM     MOVE IN MESSAGE             @OZ33861 N7524020
         MVC   SPLZDSNM,SPLDSNAM   MOVE IN DATASET NAME        @OZ33861 N7524030
         MVC   SPLZVOLS,SPLVOLID   MOVE IN VOLUME-SERIAL       @OZ33861 N7524040
         BAL   WE,SPWTO            INFORM OPERATOR             @OZ33861 N7524050
         OI    SPLFLG2,SPL2OBT     INDICATE OBTAIN ERROR       @OZ33861 N7524060
         B     SPUNALOC            BR TO EXIT                  @OZ33861 N7524070
SPOBTOK1 MVC   SPLSTRCC,SPLDSCB+63 EXTRACT EXTENT LIMITS       @OZ33861 N7524080
         TM    SPLFLG1,SPL1CKPT    TEST FOR SYS1.HASPCKPT            R4 N7526000
         BO    SPTEDVLS            BR IF YES                         R4 N7528000
         EJECT                                                      R41 N7530000
*********************************************************************** N7532000
*                                                                     * N7534000
*        CONSTRUCT DIRECT ACCESS DCB AND DEB                          * N7536000
*                                                                     * N7538000
*********************************************************************** N7540000
         SPACE 1                                                     R4 N7542000
         USING DCBDSECT,R1         PROVIDE DCB ADDRESSABILITY        R4 N7544000
         USING DEBDSECT,R2         PROVIDE DEB ADDRESSABILITY        R4 N7546000
         SPACE 1                                                     R4 N7548000
         LA    R1,SPLDCB           GET DCB ADDRESS                   R4 N7550000
         LA    R2,SPLDEB           GET DEB ADDRESS                   R4 N7552000
         MVC   DCBTIOT((3+8)*4),SPDCBDEB  MOVE IN SKELETON DCB/DEB   R4 N7554000
         ST    R2,DCBDEBAD         SET DEB ADDRESS IN DCB            R4 N7556000
         MVC   DEBTCBB,SPLTCBPT+1  SET TCB ADDRESS IN DEB            R4 N7558000
         STCM  R1,7,DEBDCBB        SET DCB ADDRESS IN DEB            R4 N7560000
         MVC   DEBAPPB,CVTXAPG+1   DON'T USE JES2 APPENDAGES         R4 N7562000
         LA    R2,DEBBASND         POINT TO 1ST DEB EXTENT           R4 N7564000
         SPACE 1                                                     R4 N7566000
         USING DEBDASD,R2          PROVIDE DEB EXTENT ADDRESSABILITY R4 N7568000
         SPACE 1                                                     R4 N7570000
         MVC   DEBSTRCC(8),SPLSTRCC  MOVE IN DEB EXTENT SKELETON     R4 N7572000
         STH   R4,DEBUCBAD+2       SET UCB ADDRESS IN DEB            R4 N7574000
         SPACE 1                                                     R4 N7576000
         DROP  R1,R2               KILL DCB, DEB ADDRESSABILITY      R4 N7578000
         EJECT                                                       R4 N7580000
*********************************************************************** N7582000
*                                                                     * N7584000
*        OBTAIN VALUES FOR TED CONSTRUCTION                           * N7586000
*                                                                     * N7588000
*********************************************************************** N7590000
         SPACE 1                                                     R4 N7592000
SPTEDVLS SLR   R14,R14             GET DEVICE TYPE                   R4 N7594000
         IC    R14,UCBTBYT4         FROM UCB                         R4 N7596000
         L     R3,CVTZDTAB         POINT TO DEVICE                   R4 N7598000
         IC    R14,0(R3,R14)        CHARACTERISTICS TABLE            R4 N7600000
         ALR   R14,R3                ENTRY FOR DEVICE                R4 N7602000
         SPACE 1                                                     R4 N7604000
         DROP  R3,R4               KILL CVT, UCB ADDRESSABILITY      R4 N7606000
         USING SPZ,R14             PROVIDE TBL ENTRY ADDRESSABILITY  R4 N7608000
         SPACE 1                                                     R4 N7610000
         LH    R6,$BUFSIZE         ASSUME SPOOL BUFFER SIZE    @OZ20010 N7610500
         TM    SPLFLG1,SPL1CKPT    TEST FOR CKPT DATA SET      @OZ20010 N7611000
         BNO   *+8                 BR IF NORMAL SPOOL ALLOC    @OZ20010 N7611500
         LH    R6,=H'4096'         ELSE, USE 4K AS RECORD SIZE @OZ20010 N7612000
         LR    R5,R6               SET NOT-LAST-RECORD LENGTH        R4 N7614000
         SLR   R7,R7               CLEAR R7, AND R10                 R4 N7616000
         LR    R10,R7               FOR INSERTS                      R4 N7618000
         IC    R7,SPZU             GET SUBTRAHEND FOR UNKEYED BLOCKS R4 N7620000
         IC    R10,SPZL            GET LAST-BLOCK OVERHEAD           R4 N7622000
         TM    SPZF,SPZF2305       TEST FOR 2305                     R4 N7624000
         BZ    SKIP110             BR IF NO                          R4 N7626000
         LH    R10,SPZO             ELSE GET HALFWORD OVERHEAD       R4 N7628000
SKIP110  ALR   R6,R10              ADD OVERHEAD, SUBTRAHEND UNKEYED  R4 N7630000
         SLR   R6,R7                FOR TRUE LAST-BLOCK LENGTH       R4 N7632000
         TM    SPZF,SPZFT          SHOULD WE APPLY TOLERANCE...      R4 N7634000
         BZ    SKIP120             BR IF NO                          R4 N7636000
         MH    R5,SPZT              ELSE MULTIPLY BY TOLERANCE       R4 N7638000
         SRL   R5,9                  AND DIVIDE BY 512               R4 N7640000
SKIP120  TM    SPZF,SPZF2305       TEST FOR 2305                     R4 N7642000
         BO    SKIP130             BR IF YES                         R4 N7644000
         IC    R10,SPZNL            ELSE GET NOT-LAST-BLOCK OVERHEAD R4 N7646000
SKIP130  ALR   R5,R10              ADD OVERHEAD, SUBTRAHEND UNKEYED  R4 N7648000
         SLR   R5,R7                FOR NOT-LAST-BLOCK LENGTH        R4 N7650000
         LH    R7,SPZR             GET TRACK LENGTH                  R4 N7652000
         SLR   R7,R6               TAKE AWAY LAST-BLOCK LENGTH       R4 N7654000
         SLR   R6,R6               GET COUNT OF                      R4 N7656000
         DR    R6,R5                NOT-LAST BLOCKS                  R4 N7658000
         LA    R6,1(,R7)           ADD 1 FOR RECORDS PER TRACK       R4 N7660000
         STH   R6,SPLTNRT          STORE RECORDS PER TRACK           R4 N7662000
         LH    R5,SPZH             GET NUMBER OF HEADS PER CYLINDER  R4 N7664000
         ST    R5,SPLTNTC          STORE NUMBER OF HDS PER CYLINDER  R4 N7666000
         TM    SPLFLG1,SPL1CKPT    TEST FOR SYS1.HASPCKPT      @OZ36695 N7666100
         BO    SPGRPS              BR IF YES                   @OZ36695 N7666200
         LH    R7,SPZA             GET NUMBER OF ALTERNATE TRACKS    R4 N7668000
         SLR   R6,R6               COMPUTE NUMBER                    R4 N7670000
         DR    R6,R5                OF ALTERNATE CYLINDERS           R4 N7672000
         LH    R6,SPZC             GET NUMBER OF CYLINDERS           R4 N7674000
         SLR   R6,R7                LESS ALTERNATES                  R4 N7676000
         MR    R4,R6               GET NUMBER OF TRACKS IN VOLUME    R4 N7678000
         LH    R7,$NUMTGV          GET NUMBER OF GROUPS PER VOLUME   R4 N7680000
         DR    R4,R7               STORE NUMBER OF                   R4 N7682000
         STH   R5,SPLTNTG           TRACKS PER GROUP                 R4 N7684000
         SPACE 1                                                     R4 N7686000
         DROP  R14                 KILL TABLE ENTRY ADDRESSABILITY   R4 N7688000
         EJECT                                                       R4 N7690000
*              THIS LINE DELETED BY APAR NUMBER                @OZ36695 N7692000
*              THIS LINE DELETED BY APAR NUMBER                @OZ36695 N7694000
         LTR   R5,R5               TEST TRACKS PER GROUP COUNT       R4 N7696000
         BNZ   SPBLDIOB            BR IF &NUMTGV VALID FOR VOLUME    R4 N7698000
         MVC   SPLMSG,SPTGVERM      ELSE ISSUE                       R4 N7700000
         MVC   SPLFMTV3,SPLVOLID     ERROR MESSAGE                   R4 N7702000
         BAL   WE,SPWTO               TO OPERATOR                    R4 N7704000
         B     SPUNALOC                AND BR TO EXIT                R4 N7706000
         SPACE 1                                                     R4 N7708000
*********************************************************************** N7710000
*                                                                     * N7712000
*        CONSTRUCT DIRECT ACCESS IOB                                  * N7714000
*                                                                     * N7716000
*********************************************************************** N7718000
         SPACE 1                                                     R4 N7720000
SPBLDIOB LA    WG,SPLIOB           POINT TO IOB                      R4 N7722000
         XC    IOBFLAG1(11*4),IOBFLAG1  CLEAR IOB                    R4 N7724000
         MVI   IOBFLAG1,X'C2'      SET UNRELATED, CMD+DATA CHAINING  R4 N7726000
         LA    R0,SPLDCB           SET POINTER TO                    R4 N7728000
         ST    R0,IOBDCBPT          DIRECT ACCESS DCB                R4 N7730000
         LA    R0,SPLECB           SET POINTER TO                    R4 N7732000
         ST    R0,IOBECBPT          EXCP IOB                         R4 N7734000
         MVC   IOBSEEK+8(2),$BUFSIZE  SET SPOOL BUFFER SIZE          R4 N7736000
         TM    SPLFLG1,SPL1FMT     TEST FORMATTING REQUIREMENT       R4 N7738000
         BO    SPFORMAT            BR IF SET                         R4 N7740000
         EJECT                                                       R4 N7742000
*********************************************************************** N7744000
*                                                                     * N7746000
*        READ COUNT PORTION OF 1ST RECORD ON LAST TRACK OF 1ST        * N7748000
*        EXTENT OF VOLUME TO DETERMINE WHETHER OR NOT VOLUME          * N7750000
*        IS CORRECTLY FORMATTED.                                      * N7752000
*                                                                     * N7754000
*********************************************************************** N7756000
         SPACE 1                                                     R4 N7758000
         LA    R0,SPLCCWS          SET POINTER TO                    R4 N7760000
         ST    R0,IOBSTART          CHANNEL PROGRAM                  R4 N7762000
         MVC   IOBSEEK+2(4),SPLUPLIM  SET CCHH FOR READ COUNT        R4 N7764000
         MVC   SPLCCWS(3*8),SPREADCT  MOVE IN SKELETON CHANNEL PGM   R4 N7766000
         LA    R0,IOBSEEK+2        SET POINTER                       R4 N7768000
         STCM  R0,7,SPLCCW1+1       TO CCHH                          R4 N7770000
         LA    R0,SPLCCW1          SET ADDRESS                       R4 N7772000
         STCM  R0,7,SPLCCW2+1       FOR TIC *-8                      R4 N7774000
         LA    R0,SPLRDCT          SET ADDRESS OF                    R4 N7776000
         STCM  R0,7,SPLCCW3+1       READ-IN AREA                     R4 N7778000
         BAL   WE,SPEXCP           GO TRY TO READ COUNT              R4 N7780000
         BO    SKIP140             BR IF READ OK                     R4 N7782000
         OI    SPLFLG2,SPL2RDER     ELSE INDICATE READ ERROR         R4 N7784000
SKIP140  MVI   SPLRDCT+4,0         SET READ-IN RECORD COUNT TO 0     R4 N7786000
         CLC   SPLRDCT,IOBSEEK+2   COMPARE COUNT WITH EXPECTED       R4 N7788000
         BE    SKIP150             BR IF EQUAL                       R4 N7790000
         OI    SPLFLG2,SPL2RDER     ELSE INDICATE READ ERROR         R4 N7792000
SKIP150  TM    SPLFLG1,SPL1NFMT    TEST FORMATTING REQUIREMENT       R4 N7794000
         BO    SPGRPS              BR IF FORMATTING NOT ALLOWED      R4 N7796000
         TM    SPLFLG2,SPL2RDER    TEST FOR READ ERROR               R4 N7798000
         BZ    SPGRPS              BR IF NO                          R4 N7800000
         NI    SPLFLG2,255-SPL2RDER  ELSE RESET READ ERROR FLAG      R4 N7802000
         EJECT                                                       R4 N7804000
*********************************************************************** N7806000
*                                                                     * N7808000
*        FORMAT SYS1.HASPACE ON SPOOL VOLUME                          * N7810000
*                                                                     * N7812000
*********************************************************************** N7814000
         SPACE 1                                                     R4 N7816000
SPFORMAT MVC   SPLMSG,SPFMTMSG     ISSUE                             R4 N7818000
         MVC   SPLFMTV1,SPLVOLID    FORMATTING MSG                   R4 N7820000
         BAL   WE,SPWTO              TO OPERATOR                     R4 N7822000
         LH    R2,SPLTNRT          GET NUMBER OF RECORDS PER TRACK   R4 N7824000
         LR    R3,R2               SAVE IN R3                        R4 N7826000
         SLL   R2,4                COMPUTE                           R4 N7828000
         LA    R0,16(,R2)           WORK AREA                        R4 N7830000
         ST    R0,SPLGMAIN           SIZE                            R4 N7832000
         GETMAIN R,LV=(0)          OBTAIN WORK AREA                  R4 N7834000
         ST    R1,IOBSTART         SET CHANNEL PROGRAM ADDRESS       R4 N7836000
         ST    R1,8(,R1)           SET UP                            R4 N7838000
         MVI   8(R1),8              TIC COMMAND                      R4 N7840000
         MVC   0(8,R1),SPREADCT    SET                               R4 N7842000
         LA    R0,IOBSEEK+2         SEARCH                           R4 N7844000
         STCM  R0,7,1(R1)            COMMAND                         R4 N7846000
         LA    R1,8(,R1)           POINT 8 BEFORE 1ST WRITE CCW      R4 N7848000
         LR    R2,R3               GET NUMBER OF RECORDS PER TRACK   R4 N7850000
         SLL   R2,3                POINT TO 8 BEFORE                 R4 N7852000
         ALR   R2,R1                1ST COUNT FIELD                  R4 N7854000
         ICM   R2,8,=X'1D'         SET WRITE COUNT-KEY-DATA          R4 N7856000
         LR    R0,R3               GET CCW COUNT                     R4 N7858000
         L     R3,SPFDATL          GET RIGHT HALF OF CCW             R4 N7860000
         SPACE 1                                                     R4 N7862000
SKIP160  AL    R2,=F'8'            CONSTRUCT                         R4 N7864000
         LA    R1,8(,R1)            FORMAT                           R4 N7866000
         STM   R2,R3,0(R1)           CHANNEL                         R4 N7868000
         BCT   R0,SKIP160             PROGRAM                        R4 N7870000
         SPACE 1                                                     R4 N7872000
         NI    4(R1),X'BF'         TURN OFF LAST CCW'S CC FLAG       R4 N7874000
         ST    R1,SPLCFLDS         SAVE PTR TO 8 BEFORE 1ST CT FIELD R4 N7876000
         MVC   IOBSEEK+2(4),SPLOWLIM  STARTING CCHHRKDD              R4 N7878000
         EJECT                                                       R4 N7880000
SPFMTRK  LH    R0,SPLTNRT          GET NUMBER OF COUNT FIELDS        R4 N7882000
         L     R1,SPLCFLDS         POINT TO 8 BEFORE THE FIRST       R4 N7884000
         ICM   R2,15,IOBSEEK+2     STARTING                          R4 N7886000
         ICM   R3,15,IOBSEEK+6      CCHHRKDD                         R4 N7888000
         SPACE 1                                                     R4 N7890000
SKIP170  AL    R3,=FS24'1'         ADD 1 TO RECORD NUMBER            R4 N7892000
         LA    R1,8(,R1)           POINT TO NEXT COUNT FIELD         R4 N7894000
         STM   R2,R3,0(R1)         SET COUNT FIELD                   R4 N7896000
         BCT   R0,SKIP170          LOOP TO SET THE REST              R4 N7898000
         SPACE 1                                                     R4 N7900000
         BAL   WE,SPEXCP           GO FORMAT THE TRACK               R4 N7902000
         BZ    SPFMTERR            BR IF I/O ERROR                   R4 N7904000
         SLR   R2,R2               GET CURRENT                       R4 N7906000
         ICM   R2,3,IOBSEEK+4       HEAD NUMBER                      R4 N7908000
         LA    R2,1(,R2)           ADD 1 TO IT                       R4 N7910000
         C     R2,SPLTNTC          TEST FOR MAX                      R4 N7912000
         BL    SKIP180             BR IF NO                          R4 N7914000
         SR    R2,R2                ELSE MAKE IT ZERO (AND SET CC)   R4 N7916000
SKIP180  STCM  R2,3,IOBSEEK+4      SET NEW HEAD NUMBER               R4 N7918000
         BNZ   SKIP190             BR IF SAME CYLINDER               R4 N7920000
         ICM   R2,3,IOBSEEK+2       ELSE                             R4 N7922000
         LA    R2,1(,R2)             ADD 1                           R4 N7924000
         STCM  R2,3,IOBSEEK+2         TO CYLINDER NUMBER             R4 N7926000
SKIP190  CLC   SPLUPLIM(4),IOBSEEK+2  IS FORMATTING COMPLETE...      R4 N7928000
         BNL   SPFMTRK             BR IF NO                          R4 N7930000
         SPACE 1                                                     R4 N7932000
         BAL   WE,SPFREEWK         FREE WORK STORAGE                 R4 N7934000
         B     SPGRPS              THEN BR TO GET TRK GROUP INFO     R4 N7936000
         SPACE 1                                                     R4 N7938000
SPFMTERR MVC   SPLMSG,SPFMTERM     ISSUE                             R4 N7940000
         MVC   SPLFMTV2,SPLVOLID    ERROR MSG                        R4 N7942000
         BAL   WE,SPWTO              TO OPERATOR                     R4 N7944000
         OI    SPLFLG2,SPL2FMT     INDICATE I/O ERROR                R4 N7946000
         BAL   WE,SPFREEWK         FREE WORK STORAGE                 R4 N7948000
         B     SPUNALOC             AND BR TO EXIT                   R4 N7950000
         SPACE 1                                                     R4 N7952000
SPFREEWK L     R0,SPLGMAIN         FREE                              R4 N7954000
         L     R1,IOBSTART          WORK                             R4 N7956000
         FREEMAIN R,LV=(0),A=(1)     STORAGE                         R4 N7958000
         BR    WE                  THEN RETURN                       R4 N7960000
         EJECT                                                       R4 N7962000
*********************************************************************** N7964000
*                                                                     * N7966000
*        OBTAIN SYS1.HASPCKPT/SYS1.HASPACE EXTENT INFORMATION         * N7968000
*                                                                     * N7970000
*        R1 LEFT WITH NUMBER OF 1ST USABLE TRACK GROUP                * N7972000
*        R2 LEFT WITH COUNT OF USABLE TRACK GROUPS                    * N7974000
*                                                                     * N7976000
*********************************************************************** N7978000
         SPACE 1                                                     R4 N7980000
SPGRPS   LA    R0,SPLTGM           SET                               R4 N7982000
         LH    R1,$NUMTGV           TRACK                            R4 N7984000
         LA    R1,7(,R1)             GROUP                           R4 N7986000
         SRL   R1,3                   MAP                            R4 N7988000
         SLR   R15,R15                 TO                            R4 N7990000
         MVCL  R0,R14                   ZERO                         R4 N7992000
         LH    R1,SPLOWLIM         R14 = TRACK                       R4 N7994000
         M     R0,SPLTNTC                 NUMBER                     R4 N7996000
         AH    R1,SPLOWLIM+2               OF 1ST                    R4 N7998000
         LR    R14,R1                       TRACK                    R4 N8000000
         STH   R14,SPLOWTRK        SET LOWER ABSOLUTE TRACK NUMBER   R4 N8002000
         TM    SPLFLG1,SPL1CKPT    TEST FOR SYS1.HASPCKPT      @OZ36695 N8002100
         BO    SKIP200             BR IF YES                   @OZ36695 N8002200
         LH    R2,SPLTNTG          R1 = TRACK                        R4 N8004000
         DR    R0,R2                     GROUP NUMBER                R4 N8006000
         LTR   R0,R0                      OF 1ST                     R4 N8008000
         BZ    SKIP200                     USABLE                    R4 N8010000
         LA    R1,1(,R1)                    TRACK GROUP              R4 N8012000
SKIP200  LH    R15,SPLUPLIM        R15 = TRACK NUMBER                R4 N8014000
         MH    R15,SPLTNTC+2              OF LAST                    R4 N8016000
         AH    R15,SPLUPLIM+2              TRACK                     R4 N8018000
         STH   R15,SPLUPTRK        SET UPPER ABSOLUTE TRACK NUMBER   R4 N8020000
         LA    R0,1(,R15)          SET NUMBER                        R4 N8022000
         SLR   R0,R14               OF TRACKS                        R4 N8024000
         STH   R0,SPLNMTRK           IN EXTENT                       R4 N8026000
         TM    SPLFLG1,SPL1CKPT    TEST FOR SYS1.HASPCKPT      @OZ36695 N8026100
         BO    SPERRTST            BR IF YES                   @OZ36695 N8026200
         LH    R3,$NUMTGV          R3 = UNUSABLE                     R4 N8028000
         MH    R3,SPLTNTG                TRACKS                      R4 N8030000
         BCTR  R3,0                       BEYOND                     R4 N8032000
         SR    R3,R15                      END                       R4 N8034000
         BNM   SKIP210                      OF EXTENT          @OZ46018 N8036000
         MVC   SPLMSG,SPTGERRM     IF DATA SET EXTENDS BEYOND  @OZ46018 N8037000
         MVC   SPLZDSNM,SPLDSNAM    USABLE TRACK GROUPS, SEND  @OZ46018 N8037100
         MVC   SPLZVOLS,SPLVOLID     MESSAGE THAT PART OF      @OZ46018 N8037200
         LR    R3,R1                  DATA SET IS UNUSABLE     @OZ46018 N8037300
         BAL   WE,SPWTO                BECAUSE OF ROUNDING     @OZ46018 N8037400
         LR    R1,R3                    FOR NO. OF TRKS PER    @OZ46018 N8037500
         SLR   R3,R3                     TRK GROUP             @OZ46018 N8038000
SKIP210  SLR   R2,R2               R3 = UNUSABLE                     R4 N8040000
         LH    R0,SPLTNTG                TRACK GROUPS                R4 N8042000
         DR    R2,R0                      CAUSED                     R4 N8044000
         LTR   R2,R2                       BY                        R4 N8046000
         BZ    SKIP220                      UPPER                    R4 N8048000
         LA    R3,1(,R3)                     EXTENT                  R4 N8050000
SKIP220  LH    R2,$NUMTGV          R2 = NUMBER OF                    R4 N8052000
         SLR   R2,R1                     USABLE TRACK                R4 N8054000
         SR    R2,R3                      GROUPS                     R4 N8056000
         ST    R2,SPLNUMTG         SET COUNT OF USABLE TRACK GROUPS  R4 N8058000
         BP    SPNTGOK             SOME ARE USABLE, CONTINUE   @OZ46018 N8060000
         MVC   SPLMSG,SPLNOTGM     IF NONE ARE USABLE,         @OZ46018 N8060100
         MVC   SPLTGVOL,SPLVOLID    ISSUE ERROR                @OZ46018 N8060200
         BAL   WE,SPWTO              MESSAGE AND               @OZ46018 N8060300
         B     SPUNALOC               GO UNALLOCATE VOLUME     @OZ46018 N8060400
*              THIS LINE DELETED BY APAR NUMBER                @OZ36695 N8062000
*              THIS LINE DELETED BY APAR NUMBER                @OZ36695 N8064000
         EJECT                                                       R4 N8066000
*********************************************************************** N8068000
*                                                                     * N8070000
*        PREPARE BIT MAP FOR SPOOL VOLUME                             * N8072000
*                                                                     * N8074000
*********************************************************************** N8076000
         SPACE 1                                                     R4 N8078000
SPNTGOK  LA    R14,SPLTGM          CLEAR                       @OZ46018 N8080000
         LH    R15,$NUMTGV          VOLUME                           R4 N8082000
         LA    R15,7(,R15)           TRACK                           R4 N8084000
         SRL   R15,3                  GROUP                          R4 N8086000
         SLR   R5,R5                   BIT                           R4 N8088000
         MVCL  R14,R4                   MAP                          R4 N8090000
         SLDL  R0,29               R15 = BYTE ADDRESS                R4 N8092000
         LA    R15,SPLTGM                 IN VOLUME BIT MAP          R4 N8094000
         ALR   R15,R0                      OF FIRST USABLE           R4 N8096000
         SRL   R1,29                        TRACK GROUP              R4 N8098000
         SPACE 1                                                     R4 N8100000
SPNXTGRP IC    R3,SPBITBLE(R1)     GET BIT INTO R3                   R4 N8102000
         EX    R3,SPBITSET         OR BIT INTO TRACK GROUP MAP       R4 N8104000
         LA    R1,1(,R1)           ADD 1 TO BIT NUMBER               R4 N8106000
         N     R1,=F'7'            ZERO ALL BUT LO-ORDER 3 BITS      R4 N8108000
         BNZ   SKIP230             BR IF BIT IN SAME BYTE            R4 N8110000
         LA    R15,1(,R15)          ELSE ADD 1 TO BYTE ADDRESS       R4 N8112000
SKIP230  BCT   R2,SPNXTGRP         LOOP THRU ALL TRACK GROUPS        R4 N8114000
         SPACE 1                                                     R4 N8116000
         B     SPERRTST            THEN EXIT                         R4 N8118000
         SPACE 1                                                     R4 N8120000
SPBITSET OI    0(R15),*-*          *** EXECUTE ONLY ***              R4 N8122000
         EJECT                                                       R4 N8124000
SPERRTST CLI   SPLFLG2,0           TEST FOR ANY ERRORS               R4 N8126000
         BE    SPEXIT              BR IF NO                          R4 N8128000
         SPACE 1                                                     R4 N8130000
*********************************************************************** N8132000
*                                                                     * N8134000
*        ERROR DETECTED -- UNALLOCATE VOLUME                          * N8136000
*                                                                     * N8138000
*********************************************************************** N8140000
         SPACE 1                                                     R4 N8142000
SPUNALOC OC    SPLUCBPT,SPLUCBPT   TEST FOR UCB ADDRESS              R4 N8144000
         BZ    SPEXIT              BR IF NO (VOLUME NEVER ALLOC'D)   R4 N8146000
         LA    R10,SPLDYNRB        GET RB ADDRESS                   R41 N8147000
         MVI   S99VERB,S99VRBUN    INDICATE UNALLOCATE REQUEST       R4 N8148000
         OI    SPLFLG2,SPL2UNAL    INDICATE VOLUME UNALLOCATED      R41 N8149000
         LA    R1,SPLDYNAL         POINT TO PARAMETER LIST           R4 N8150000
         DYNALLOC                   AND UNALLOCATE THE VOLUME        R4 N8152000
         SPACE 5                                                     R4 N8156000
*********************************************************************** N8158000
*                                                                     * N8160000
*        EXIT FROM SUBTASK                                            * N8162000
*                                                                     * N8164000
*********************************************************************** N8166000
         SPACE 1                                                     R4 N8168000
SPEXIT   L     R13,SPLSAVE+4       GET SYSTEM'S SAVE AREA ADDRESS    R4 N8172000
         LM    R14,R12,12(R13)     RESTORE SYSTEM'S REGISTERS        R4 N8192000
         BR    R14                  AND RETURN                       R4 N8194000
         EJECT                                                       R4 N8196000
*********************************************************************** N8198000
*                                                                     * N8200000
*        SPEXCP -- EXCP SUBROUTINE                                    * N8202000
*                                                                     * N8204000
*********************************************************************** N8206000
         SPACE 1                                                     R4 N8208000
SPEXCP   EXCP  SPLIOB              INITIATE I/O OPERATION            R4 N8210000
         WAIT  ECB=SPLECB          WAIT FOR I/O TO COMPLETE          R4 N8212000
         TM    SPLECB,X'20'        TEST FOR ERROR                    R4 N8214000
         BR    WE                  RETURN WITH CC SET                R4 N8216000
         SPACE 3                                                     R4 N8218000
*********************************************************************** N8220000
*                                                                     * N8222000
*        SPWTO -- SUBROUTINE TO ISSUE MESSAGE TO OPERATOR             * N8224000
*                                                                     * N8226000
*********************************************************************** N8228000
         SPACE 1                                                     R4 N8230000
SPWTO   $$WTO  SPLMSG              ISSUE MESSAGE TO OPERATOR         R4 N8232000
         BR    WE                  THEN RETURN                       R4 N8234000
         SPACE 1                                                     R4 N8236000
         DROP  ,                   KILL ALL ADDRESSABILITY           R4 N8238000
         SPACE 5                                                     R4 N8240000
         LTORG                                                       R4 N8242000
         EJECT                                                       R4 N8244000
SPALFLGS EQU   S99WTVOL+S99NORES+S99MOUNT  ALLOCATION FLAGS          R4 N8246000
         SPACE 1                                                     R4 N8248000
SPDCBDEB DS    0F                  DCB/DEB SKELETONS                 R4 N8250000
         DC    AL2(0),AL1(DCBMRECP+DCBMRAPG)     DCBTIOT, DCBMACRF   R4 N8252000
         DC    AL1(0),A(0),AL1(DCBOFOPN),AL3(0)  DCBOFLGS            R4 N8254000
         DC    A(0),AL1(4),AL3(0)                DEBTCBAD, DEBAMLNG  R4 N8256000
         DC    AL1(DEBDSMOD+DEBDCB),AL3(0)       DEBOFLGS            R4 N8258000
         DC    AL1(DEBINOUT),AL3(0)              DEBINOUT            R4 N8260000
         DC    AL1(1),AL3(0),A(0)                DEBNMEXT            R4 N8262000
         DC    AL1(1*16+15),AL3(0)               DEBPROTG/DEBDEBID   R4 N8264000
         DC    AL1(4),AL3(0)                     DEBEXSCL            R4 N8266000
         SPACE 1                                                     R4 N8268000
SPREADCT CCW   X'31',*-*,X'40',5   SEARCH ID EQUAL                   R4 N8270000
         CCW   8,*-8,0,1           TIC *-8                           R4 N8272000
         CCW   X'12',*-*,0,8       READ COUNT                        R4 N8274000
         SPACE 1                                                     R4 N8276000
SPDDTXT  DC    AL2(DALDDNAM,1,7)   MODEL DDNAME TEXT                 R4 N8278000
         DC    C'$'                1ST CHARACTER OF DDNAME           R4 N8280000
SPDSNTXT DC    AL2(DALDSNAM,1,13)  MODEL DSNAME TEXT                 R4 N8282000
SPVOLTXT DC    AL2(DALVLSER,1,6)   MODEL VOLUME SERIAL TEXT          R4 N8284000
SPUNITXT DC    AL2(DALUNIT,1,3)    MODEL UNIT NAME TEXT              R4 N8286000
SPDSPTXT DC    AL2(DALSTATS,1,1),AL1(1)  MODEL DISPOSITION TEXT      R4 N8288000
         SPACE 1                                                     R4 N8290000
SPFDATL  DC    0F'0',X'60',AL3(8)  RIGHT HALF OF CCW                 R4 N8292000
         SPACE 1                                                     R4 N8294000
SPATAB   DC    C'4 8 121620'       OBTAIN ERROR CC TABLE       @OZ18393 N8296000
SPBITBLE DC    X'8040201008040201' BITS-BY-BIT NUMBER TABLE          R4 N8298000
         SPACE 2                                                     R4 N8300000
*********************************************************************** N8302000
*                                                                     * N8304000
*        DEVICE CHARACTERISTICS TABLE ENTRY DSECT                     * N8306000
*                                                                     * N8308000
*********************************************************************** N8310000
         SPACE 1                                                     R4 N8312000
SPZ      DSECT                     IECZDTAB DUMMY SECTION            R4 N8314000
SPZC     DS    H                   NUMBER OF CYLINDERS PER VOLUME    R4 N8316000
SPZH     DS    H                   NUMBER OF TRACKS PER CYLINDER     R4 N8318000
SPZR     DS    H                   MAXIMUM TRACK LENGTH              R4 N8320000
SPZO     DS    0H                  BLOCK OVERHEAD -- 2305            R4 N8322000
SPZNL    DS    X                   BLOCK OVERHEAD -- KEYED           R4 N8324000
SPZL     DS    X                   BLOCK OVERHEAD -- KEYED LAST      R4 N8326000
SPZU     DS    X                   BLOCK OVERHEAD -- UNKEYED         R4 N8328000
SPZF     DS    X                   FLAGS --                          R4 N8330000
SPZFT    EQU   1                      APPLY TOLERANCE FACTOR         R4 N8332000
SPZF2305 EQU   8                      DEVICE IS 2305                 R4 N8334000
SPZT     DS    H                   TOLERANCE FACTOR IF SPZFT         R4 N8336000
SPZA     DS    H                   NUMBER OF ALTERNATE TRACKS        R4 N8338000
         SPACE 1                                                     R4 N8340000
HASPMISC CSECT                     END OF IECZDTAB DUMMY SECTION     R4 N8342000
         EJECT                                                       R4 N8344000
        $MID   414                 SET MESSAGE NUMBER                R4 N8346000
SPOBTERM WTO   '&MID.OBTAIN FAILED FOR ********.******** ON ****** WITHCN8348000
                CC **',MF=L                                         R41 N8350000
SPLOBTDS EQU   *-38-SPOBTERM+SPLMSG,17  DATA SET NAME               R41 N8352000
SPLOBTVL EQU   *-17-SPOBTERM+SPLMSG,6   VOLUME SERIAL                R4 N8354000
SPLOBTCC EQU    *-2-SPOBTERM+SPLMSG,2   COMPLETION CODE              R4 N8356000
         SPACE 2                                                     R4 N8358000
        $MID   418                 SET MESSAGE NUMBER                R4 N8360000
SPFMTERM WTO   '&MID.PERM I/O ERROR ON ****** WHILE FORMATTING',MF=L R4 N8362000
SPLFMTV2 EQU   *-23-SPFMTERM+SPLMSG,6   VOLUME SERIAL                R4 N8364000
         SPACE 2                                                     R4 N8366000
        $MID   423                 SET MESSAGE NUMBER                R4 N8368000
SPFMTMSG WTO   '&MID.****** IS BEING FORMATTED',MF=L                 R4 N8370000
SPLMSGID EQU   *-34-SPFMTMSG+SPLMSG,1   MESSAGE ID CHARACTER         R4 N8372000
SPLFMTV1 EQU   *-25-SPFMTMSG+SPLMSG,6   VOLUME SERIAL                R4 N8374000
         EJECT                                                       R4 N8376000
        $MID   438                 SET MESSAGE NUMBER                R4 N8378000
SPTGVERM WTO   '&MID.&&NUMTGV EXCEEDS TRACKS ON VVVVVV',MF=L         R4 N8380000
SPLFMTV3 EQU   *-6-SPTGVERM+SPLMSG,6  VOLUME SERIAL                  R4 N8382000
         SPACE 2                                                     R4 N8384000
        $MID   449                 SET MESSAGE NUMBER                R4 N8386000
SPSHRMSG WTO   '&MID.VVVVVV MUST BE MOUNTED ON SHAREABLE DEVICE',    R4CN8388000
               MF=L                                                  R4 N8390000
SPLSHRVL EQU   *-42-SPSHRMSG+SPLMSG,6  VOLUME SERIAL                 R4 N8392000
         $MID  453                                             @OZ33861 N8392020
SPLZEXTM WTO   '&MID.********.******** ON VOLUME ****** HAS ZERO EXTENT*N8392030
               S',MF=L                                         @OZ33861 N8392040
SPLZDSNM EQU   *-51-SPLZEXTM+SPLMSG,17                         @OZ33861 N8392050
SPLZVOLS EQU   *-23-SPLZEXTM+SPLMSG,6                          @OZ33861 N8392060
         SPACE 1                                               @OZ46018 N8392500
         $MID  457                                             @OZ48742 N8392600
SPTGERRM WTO   '&MID.********.******** ON VOLUME VVVVVV IS PARTIALLY UN*N8392700
               USABLE',MF=L                                    @OZ46018 N8392800
         SPACE 1                                               @OZ46018 N8393000
         $MID  456                                             @OZ46018 N8393100
SPLNOTGM WTO   '&MID.&&NUMTGV IS INVALID FOR VOLUME VVVVVV',   @OZ46018*N8393200
               MF=L                                            @OZ46018 N8393300
SPLTGVOL EQU   *-6-SPLNOTGM+SPLMSG,6   VOLUME SERIAL           @OZ46018 N8393400
         SPACE 2                                                     R4 N8394000
$MISCLEN $DLENGTH                  COMPUTE CONTROL SECTION LENGTH    R4 N8396000
         SPACE 5                                                     R4 N8398000
APARNUM  DC    CL5'56832'          APAR NUMBER                          N8399998
         END   ,                                                     R4 N8400000
