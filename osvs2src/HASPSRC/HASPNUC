NUC      TITLE 'HASP NUCLEUS PROLOG'                           @OZ18212 P0001000
*********************************************************************** P0002000
*                                                                     * P0003000
* MODULE NAME = HASJES20 ( HASPNUC CSECT )                            * P0004000
*                                                                     * P0005000
* DESCRIPTIVE NAME = HASPNUC CSECT OF JES2 MAIN MODULE                * P0006000
*                                                                     * P0007000
* COPYRIGHT = NONE                                                    * P0008100
*                                                                     * P0009000
* STATUS = OS/VS2 MVS   --  SEE &VERSION (BELOW) FOR JES2 LEVEL       * P0010000
*                                                                     * P0011000
* FUNCTION = THE HASPNUC CSECT PROVIDES THE BASIC PROCESSOR CONTROL   * P0012000
*            BLOCKS AND SERVICE ROUTINES FOR THE MAIN JES2 TASK.      * P0013000
*            IT ALSO CONTAINS BASIC COMMUNICATIONS WITH DAUGHTER      * P0014000
*            TASKS.                                                   * P0015000
*                                                                     * P0016000
* NOTES = SEE BELOW                                                   * P0017000
*                                                                     * P0018000
*    DEPENDENCIES = EXCP ACCESS METHOD, DYNAMIC ALLOCATION,           * P0019000
*                   DYNAMIC UNALLOCATION, TIMER INTERFACE, AND        * P0020000
*                   ABNORMAL END EXIT INTERFACE.                      * P0021000
*                                                                     * P0022000
*    RESTRICTIONS = NONE                                              * P0023000
*                                                                     * P0024000
*    REGISTER CONVENTIONS = SEE ENTRY POINT DOCUMENTATION             * P0025000
*                                                                     * P0026000
*    PATCH LABEL = $PATCHSP                                           * P0027000
*                                                                     * P0028000
* MODULE TYPE = PROCEDURE, TABLE ( CSECT TYPE )                       * P0029000
*                                                                     * P0030000
*    PROCESSOR = ASSEMBLER F                                          * P0031000
*                                                                     * P0032000
*    MODULE SIZE = SEE $DLENGTH MACRO EXPANSION(S) AT END OF ASSEMBLY * P0033000
*                                                                     * P0034000
*    ATTRIBUTES = 1ST 4K NOT REUSABLE, REMAINDER READ ONLY AND        * P0035000
*                 HASP REENTRANT                                      * P0036000
*                                                                     * P0037000
* ENTRY POINT =    HASP     - INITIAL ENTRY TO INITIALIZE THE JES2    * P0038000
*                             SYSTEM FOLLOWING BRANCH TO HASPINGO.    * P0039000
*                                                                     * P0040000
*                  $WAIT    - ENTRY TO PUT PCE IN $WAIT STATE         * P0041000
*                             AND DISPATCH ANOTHER JES2 PROCESSOR     * P0042000
*                             OR WAIT FOR AN OS POST.                 * P0043000
*                                                                     * P0044000
*                  $WAITR   - ENTRY TO PUT PCE IN $WAIT STATE ON      * P0045000
*                             A RESOURCE WAIT QUEUE AND DISPATCH      * P0046000
*                             ANOTHER JES2 PROCESSOR OR WAIT FOR      * P0047000
*                             AN OS POST.                             * P0048000
*                                                                     * P0049000
*                  $POST    - ENTRY TO PUT AN INDIVIDUAL JES2         * P0050000
*                             PROCESSOR ON THE READY QUEUE FOR        * P0051000
*                             DISPATCHING.                            * P0052000
*                                                                     * P0053000
*                  $EXCPR   - ENTRY TO EXCP ACCESS METHOD             * P0054000
*                             INTERFACE ROUTINE FOR SCHEDULLING       * P0055000
*                             I/O OPERATIONS.                         * P0056000
*                                                                     * P0057000
*                  $QADD    - ENTRY TO JES2 JOB QUEUE MANAGER QADD    * P0058000
*                             SERVICE ROUTINE TO ADD A NEW JOB TO     * P0059000
*                             THE SYSTEM.                             * P0060000
*                                                                     * P0061000
*                  $QGET    - ENTRY TO JES2 JOB QUEUE MANAGER QGET    * P0062000
*                             SERVICE ROUTINE TO GET A QUEUED JOB     * P0063000
*                             MAKING IT ACTIVE.                       * P0064000
*                                                                     * P0065000
*                  $QPUT    - ENTRY TO JES2 JOB QUEUE MANAGER QPUT    * P0066000
*                             SERVICE ROUTINE TO PUT A JOB ON A       * P0067000
*                             LOGICAL QUEUE.                          * P0068000
*                                                                     * P0069000
*                  $QREM    - ENTRY TO JES2 JOB QUEUE MANAGER QREM    * P0070000
*                             SERVICE ROUTINE TO REMOVE A JOB FROM    * P0071000
*                             THE SYSTEM.                             * P0072000
*                                                                     * P0073000
*                  $QLOC    - ENTRY TO JES2 JOB QUEUE MANAGER QLOC    * P0074000
*                             SERVICE ROUTINE TO LOCATE A JOB QUEUE   * P0075000
*                             ENTRY FOR A GIVEN JOB BY NUMBER.        * P0076000
*                                                                     * P0077000
*                  $QCKPT   - ENTRY TO JES2 JOB QUEUE MANAGER QCKPT   * P0078000
*                             SERVICE ROUTINE TO SCHEDULE A           * P0079000
*                             CHECKPOINT OF A JOB QUEUE ELEMENT.      * P0080000
*                                                                     * P0081000
*                  $QMOD    - ENTRY TO JES2 JOB QUEUE MANAGER QMOD    * P0082000
*                             SERVICE ROUTINE TO MODIFY CHAIN         * P0083000
*                             FIELDS OF JOB QUEUE ELEMENTS ON         * P0084000
*                             BEHALF OF A JOB.                        * P0085000
*                                                                     * P0086000
*                  $QSUSE   - ENTRY TO REQUEST ACCESS (FOR POTENTIAL  * P0087000
*                             CHANGE) TO ANY INFORMATION IN THE JOB   * P0088000
*                             AND JOT QUEUE CHECKPOINTED RECORDS.     * P0089000
*                                                                     * P0090000
*                  $GETUNIT - ENTRY TO JES2 UNIT SERVICES TO          * P0091000
*                             ALLOCATE A DEVICE CONTROL TABLE         * P0092000
*                             (DCT) FOR USE BY A PROCESSOR.           * P0093000
*                                                                     * P0094000
*                  $FREUNIT - ENTRY TO JES2 UNIT SERVICES TO          * P0095000
*                             FREE A DEVICE FOR USE BY ANOTHER        * P0096000
*                             PROCESSOR, PLACE THE DEVICE IN A        * P0097000
*                             HOLD STATUS, OR DRAIN THE DEVICE        * P0098000
*                             WITH POSSIBLE OS UNALLOCATION.          * P0099000
*                                                                     * P0100000
*                  $STIMER  - ENTRY TO JES2 INTERVAL TIMER MANAGER    * P0101000
*                             TO QUEUE A JES2 TIMER QUEUE ELEMENT.    * P0102000
*                                                                     * P0103000
*                  $TTIMER  - ENTRY TO JES2 INTERVAL TIMER MANAGER    * P0104000
*                             TO DETERMINE REMAINING TIME AND         * P0105000
*                             OPTIONALLY TERMINATE THE INTERVAL.      * P0106000
*                                                                     * P0107000
*                  $GETSMFB - ENTRY TO JES2 SMF MANAGEMENT TO GET     * P0108000
*                             A FREE SMF BUFFER.                      * P0109000
*                                                                     * P0110000
*                  $QUESMFB - ENTRY TO JES2 SMF MANAGEMENT TO QUEUE   * P0111000
*                             A SMF BUFFER FOR OUTPUT BY THE SMF      * P0112000
*                             INTERFACE DAUGHTER TASK.                * P0113000
*                                                                     * P0114000
*                  $PURGER  - ENTRY TO DIRECT ACCESS TRACK MANAGEMENT * P0115000
*                             TO PURGE TRACKS FREEING SPACE FOR       * P0116000
*                             USE BY OTHERS.                          * P0117000
*                                                                     * P0118000
*                  $BFRBLDR - ENTRY TO BUFFER PREFIX-BUILD ROUTINE    * P0119000
*                             TO CONSTRUCT AN IOB OR RPL AT THE       * P0120000
*                             BEGINNING OF A BUFFER.                  * P0121000
*                                                                     * P0122000
*                  $RESERVE - ENTRY TO ROUTINE TO RESERVE THE  @OZ35278 P0122100
*                             SHARED CHECKPOINT DATA SET.      @OZ35278 P0122200
*                                                              @OZ35278 P0122300
*                  $RELEASE - ENTRY TO ROUTINE TO RELEASE THE  @OZ35278 P0122400
*                             SHARED CHECKPOINT DATA SET.      @OZ35278 P0122500
*                                                              @OZ35278 P0122600
*                  $XMPOSTR - ENTRY TO ROUTINE TO PERFORM A BRANCH-   * P0123000
*                             ENTRY POST OF AN ECB.                   * P0124000
*                                                                     * P0125000
*                  $PGRLSER - ENTRY TO JES2 PAGE SERVICES TO DO A     * P0126000
*                             PAGE RELEASE VIA BRANCH ENTRY TO MVS    * P0127000
*                             PAGE SERVICES.                          * P0128000
*                                                                     * P0129000
*                  $PGFREER - ENTRY TO JES2 PAGE SERVICES TO DO A     * P0130000
*                             PAGE FREE VIA BRANCH ENTRY TO MVS       * P0131000
*                             PAGE SERVICES.                          * P0132000
*                                                                     * P0133000
*                  $PGFIXR  - ENTRY TO JES2 PAGE SERVICES TO DO A     * P0134000
*                             PAGE FIX VIA BRANCH ENTRY TO MVS        * P0135000
*                             PAGE SERVICES.                          * P0136000
*                                                                     * P0137000
*                  $TRACKR  - ENTRY TO DIRECT ACCESS MANAGEMENT       * P0138000
*                             TO ASSIGN THE NEXT RECORD ADDRESS TO    * P0139000
*                             WRITE SPOOL RECORDS.                    * P0140000
*                                                                     * P0141000
*                  $GETBUFR - ENTRY TO BUFFER POOL MANAGEMENT TO      * P0142000
*                             GET ONE OR MORE FREE BUFFERS.           * P0143000
*                                                                     * P0144000
*                  $FREEBFR - ENTRY TO BUFFER POOL MANAGEMENT TO      * P0145000
*                             FREE ONE OR MORE BUFFERS.               * P0146000
*                                                                     * P0147000
*                  $GETCELR - ENTRY TO CELL SERVICES                  * P0148000
*                             TO CLAIM A COMMON STORAGE AREA CELL.    * P0149000
*                                                                     * P0150000
*                  $FRECELR - ENTRY TO CELL SERVICES TO FREE A        * P0151000
*                             COMMON STORAGE AREA CELL.               * P0152000
*                                                                     * P0153000
*                  $GETLOKR - ENTRY TO LOCK SERVICES TO GET THE       * P0154000
*                             OS CMS LOCK.                            * P0155000
*                                                                     * P0156000
*                  $FRELOKR - ENTRY TO LOCK SERVICES TO FREE THE      * P0157000
*                             OS CMS LOCK.                            * P0158000
*                                                                     * P0159000
*                  HASPATTN - ENTRY TO UNSOLICITED DEVICE END         * P0160000
*                             ATTENTION ROUTINE.                      * P0161000
*                                                                     * P0162000
*                  $IOAPPEN - INPUT/OUTPUT APPENDAGE VECTOR TABLE     * P0163000
*                             FOR JES2 $EXCP SERVICES AND APPENDAGE   * P0164000
*                             ROUTINES.                               * P0165000
*                                                                     * P0166000
*                  $ASYNC   - ENTRY TO ASYNCHRONOUS INPUT/OUTPUT      * P0167000
*                             PROCESSOR.                              * P0168000
*                                                                     * P0169000
*                  $TIMER   - ENTRY TO JES2 TIMER PROCESSOR.          * P0170000
*                                                                     * P0171000
*                  $DYN     - ENTRY TO INTERFACE TO OS ALLOCATE       * P0172000
*                             AND UNALLOCATE UNIT RECORD DEVICES.     * P0173000
*                                                                     * P0174000
*                  $#BLD    - ENTRY TO JES2 JOT SERVICES TO BUILD     * P0175000
*                             A PAIR OF WORK AND CHARACTERISTICS      * P0176000
*                             JOES.                                   * P0177000
*                                                                     * P0178000
*                  $#ADD    - ENTRY TO JES2 JOT SERVICES TO COPY      * P0179000
*                             A PAIR OF WORK AND CHARACTERISTICS      * P0180000
*                             JOES INTO THE JOT.                      * P0181000
*                                                                     * P0182000
*                  $#GET    - ENTRY TO JES2 JOT SERVICES TO SELECT    * P0183000
*                             A WORK JOE FROM THE JOT BASED UPON      * P0184000
*                             DEVICE CHARACTERISTICS.                 * P0185000
*                                                                     * P0186000
*                  $#PUT    - ENTRY TO JES2 JOT SERVICES TO RETURN    * P0187000
*                             A WORK JOE TO THE JOT FOR LATER         * P0188000
*                             PROCESSING.                             * P0189000
*                                                                     * P0190000
*                  $#REM    - ENTRY TO JES2 JOT SERVICES TO REMOVE    * P0196000
*                             A WORK JOE FROM THE JOT FOR WHICH       * P0197000
*                             ALL OUTPUT HAS BEEN PROCESSED.          * P0198000
*                                                                     * P0199000
*                  $#CAN    - ENTRY TO JES2 JOT SERVICES TO REMOVE    * P0200000
*                             FROM THE JOT ALL NON-BUSY JOES FOR      * P0201000
*                             A SPECIFIED JOB.                        * P0202000
*                                                                     * P0203000
*                  $#JCTRDR - ENTRY TO JES2 JOT SERVICES TO OBTAIN    * P0204000
*                             THE BUFFER ADDRESS OF A RESIDENT JCT    * P0205000
*                             FOR A SPECIFIED JOB, OBTAINING THE JCT  * P0206000
*                             FROM SPOOL IF NECESSARY.                * P0207000
*                                                                     * P0208000
*                  $#JCTWTR - ENTRY TO JES2 JOT SERVICES TO WRITE     * P0209000
*                             TO SPOOL A RESIDENT JCT.                * P0210000
*                                                                     * P0211000
*                  $#JCTFRE - ENTRY TO JES2 JOT SERVICES TO RELEASE   * P0212000
*                             OWNERSHIP OF A RESIDENT JCT.            * P0213000
*                                                                     * P0214000
*                  $#WTR    - ENTRY TO JES2 SERVICE ROUTINE TO POST   * P0215000
*                             ANY EXTERNAL WRITERS WAITIJG ON JOT.    * P0216000
*                                                                     * P0217000
*                  $$WTO    - ENTRY TO JES2 ROUTINE TO ISSUE WTO      * P0218000
*                             AND WTOR MESSAGES DIRECTLY.             * P0219000
*                                                                     * P0220000
*                  $DISTERR - ENTRY TO DISASTEROUS ERROR ROUTINE      * P0221000
*                             TO ISSUE $WTO MESSAGE.                  * P0222000
*                                                                     * P0223000
*                  $ERROR   - ENTRY TO CATASTROPHIC ERROR ROUTINE     * P0224000
*                             TO ABNORMALLY TERMINATE PROCESSING.     * P0225000
*                                                                     * P0226000
*                  $HEXIT   - ENTRY TO CATASTROPHIC ERROR ROUTINE     * P0227000
*                             TO NORMALLY TERMINATE PROCESSING.       * P0228000
*                                                                     * P0229000
*                  $IOERROR - ENTRY TO I/O ERROR ROUTINE TO FORMAT    * P0230000
*                             AND DISPLAY MESSAGE.                    * P0231000
*                                                                     * P0232000
*                  $ABEND   - ENTRY TO ABNORMAL END EXIT ROUTINE.     * P0233000
*                                                                     * P0234000
*    PURPOSE = SEE FUNCTION                                           * P0235000
*                                                                     * P0236000
*    LINKAGE = SEE ENTRY POINT DOCUMENTATION                          * P0237000
*                                                                     * P0238000
* INPUT = SEE ENTRY POINT DOCUMENTATION                               * P0239000
*                                                                     * P0240000
* OUTPUT = SEE ENTRY POINT DOCUMENTATION                              * P0241000
*                                                                     * P0242000
* EXIT-NORMAL = SEE ENTRY POINT DOCUMENTATION                         * P0243000
*                                                                     * P0244000
* EXIT-ERROR = CATASTROPHIC ERROR ROUTINE ISSUES MESSAGE AND          * P0245000
*              RESPONDS TO OPERATORS REQUEST.                         * P0246000
*                                                                     * P0247000
* EXTERNAL REFERENCES = SEE BELOW                                     * P0248000
*                                                                     * P0249000
*    ROUTINES = SVC 1, SVC 2, SVC 0, SVC 46, SVC 47, SETLOCK,         * P0250000
*               SVC 35, SVC 3, SVC 62, $SVTRAK2, $SVGCMNS, $SVGCELL,  * P0251000
*               $SVFCELL, $WTOR, $FRECMBR, SVC 87                     * P0252000
*                                                                     * P0253000
*    DATA AREAS = SEE $HASPCB MACRO EXPANSION                         * P0254000
*                                                                     * P0255000
*    CONTROL BLOCKS = SEE $HASPCB MACRO EXPANSION                     * P0256000
*                                                                     * P0257000
* TABLES = SEE BELOW                                                  * P0258000
*                                                                     * P0259000
* MACROS = EXCP, WAIT, POST, WTO, WTOR, TTIMER, STIMER, SETLOCK,      * P0260000
*          MODESET, DETACH, DOM                                       * P0261000
* CHANGE ACTIVITY                                                     * P0262000
*                                                                     * P0262100
*     RELEASE 4.0 = OZ03342,OZ04345,OZ05783,OZ07436,OZ09024,OZ09095   * P0262300
*                                                                     * P0262400
*     RELEASE 4.1 = OZ09073,OZ11742,OZ11744,OZ11751,OZ11763,OZ12274,  * P0262500
*                   OZ12298,OZ14413                                   * P0262600
*                                                              @G38ESBB P0263000
*     EJE1103     = @G38ESBB 3800 PRINTER ENHANCEMENTS         @G38ESBB P0263500
*                                                                     * P0264000
*********************************************************************** P0265000
         TITLE 'HASP CONTROL BLOCK GENERATION MACRO'                    P0266000
*                                                                       P0267000
***** $HASPCB *****           GENERATE HASP CONTROL BLOCKS              P0268000
*                                                                       P0269000
*                                                                       P0270000
         MACRO                                                          P0271000
         $HASPCB &DOC=NO,&LIST=NO                                       P0272000
         GBLC  &PRINT,&GEN,&DATA                                        P0273000
         PUSH  PRINT                                                    P0274000
         PRINT &PRINT                                                   P0275000
         $ASCB LIST=&LIST          GENERATE OS ASCB DSECT      @OZ18608 P0275500
         $PSA  LIST=&LIST          GENERATE OS PSA DSECT                P0276000
         $CVT  LIST=&LIST          GENERATE OS CVT DSECT                P0277000
         $SSCT LIST=&LIST          GENERATE OS SSCT DSECT      @OZ35996 P0277500
         $SSOB (SO),LIST=&LIST     GENERATE OS SSOB DSECT            R4 P0278000
         $SRB  LIST=&LIST          GENERATE OS SRB DSECT                P0279000
         $DCB  LIST=&LIST          GENERATE OS DCB DSECT                P0280000
         $DEB  LIST=&LIST          GENERATE OS DEB DSECT                P0281000
         $IOSB LIST=&LIST          GENERATE OS IOSB DSECT               P0282000
         $RPL  LIST=&LIST          GENERATE OS RPL DSECT             R4 P0283000
         $UCB  LIST=&LIST          GENERATE OS UCB DSECT                P0284000
         $DYN  LIST=&LIST          GENERATE OS DYN DSECT                P0285000
         $UCM  LIST=&LIST          GENERATE OS UCM DSECT             R4 P0286000
         $IOCM LIST=&LIST          GENERATE OS IOCM DSECT               P0287000
         $TCB  LIST=&LIST          GENERATE OS TCB DSECT       @OZ32566 P0287400
         $TIOT LIST=&LIST          GENERATE OS TIOT DSECT      @OZ32566 P0287600
         $SDWA LIST=&LIST          GENERATE OS SDWA DSECT      @OZ32566 P0287800
         $RB   LIST=&LIST          GENERATE OS RB DSECT        @OZ44707 P0287900
         $EWA  LIST=&LIST          GENERATE OS EWA DSECT             R4 P0288000
         $TED  DOC=&DOC            GENERATE HASP TED DSECT              P0289000
         $TGB  DOC=&DOC            GENERATE HASP TGB DSECT              P0290000
         $TGM  DOC=&DOC            GENERATE HASP TGM DSECT              P0291000
         $TAB  DOC=&DOC            GENERATE HASP TAB DSECT           R4 P0292000
         $PCIE DOC=&DOC            GENERATE HASP PCIE DSECT          R4 P0293000
         $SVT  DOC=&DOC            GENERATE HASP SSVT DSECT             P0294000
         $SJB  DOC=&DOC            GENERATE HASP SJB DSECT              P0295000
         $PCE  DOC=&DOC            GENERATE HASP PCE DSECT              P0296000
         $BUFFER DOC=&DOC          GENERATE HASP BUFFER DSECT           P0297000
         $BPM  DOC=&DOC            GENERATE HASP BPM DSECT           R4 P0298000
         $CMB  DOC=&DOC            GENERATE HASP CMB DSECT              P0299000
         $CCW  DOC=&DOC            GENERATE HASP CCW DEFS      @OZ27300 P0299500
         $SMF  DOC=&DOC            GENERATE HASP SMF DSECT              P0300000
         $ICE  DOC=&DOC            GENERATE HASP ICE DSECT          R41 P0300500
         $FMH  DOC=&DOC            GENERATE HASP FMH DSECT          R41 P0300600
         $JQE  DOC=&DOC            GENERATE HASP JQE DSECT              P0301000
         $JOE  DOC=&DOC            GENERATE HASP JOE DSECT           R4 P0302000
         $JOT  DOC=&DOC            GENERATE HASP JOT DSECT           R4 P0303000
         $QSE  DOC=&DOC            GENERATE HASP QSE DSECT              P0304000
         $JQB  DOC=&DOC            GENERATE HASP JQB DSECT     @OZ27300 P0304500
         $JCT  DOC=&DOC            GENERATE HASP JCT DSECT              P0305000
         $PDDB DOC=&DOC            GENERATE HASP PDDB DSECT          R4 P0306000
         $IOT  DOC=&DOC            GENERATE HASP IOT DSECT           R4 P0307000
         $SCAT DOC=&DOC            GENERATE OS SCAT DSECT            R4 P0308000
         $DCT  DOC=&DOC            GENERATE HASP DCT DSECT              P0309000
         $TQE  DOC=&DOC            GENERATE HASP TQE DSECT              P0310000
         $CCA  DOC=&DOC            GENERATE HASP CCA DSECT           R4 P0311000
         $CCE  DOC=&DOC            GENERATE HASP CCE DSECT           R4 P0312000
         $PSO  DOC=&DOC            GENERATE HASP PSO DSECT           R4 P0313000
         $DTE  DOC=&DOC            GENERATE HASP DTE DSECT              P0314000
         $EEL  DOC=&DOC            GENERATE HASP EEL DSECT     @OZ32566 P0314500
         $PQH  DOC=&DOC            GENERATE HASP PQH DSECT     @G38ESBB P0314600
         $PQE  DOC=&DOC            GENERATE HASP PQE DSECT     @G38ESBB P0314700
         $PPPWORK DOC=&DOC         GENERATE HASP PPPWORK DSECT       R4 P0315000
         $COMWORK DOC=&DOC         GENERATE HASP COMWORK DSECT @OZ27300 P0315500
         POP   PRINT                                                    P0316000
         PRINT &GEN,&DATA          SET ASSEMBLY PRINT OPTIONS           P0317000
         $HCT  DOC=&DOC            GENERATE HASP HCT                    P0318000
         SPACE 1                                                        P0319000
         MEND                                                           P0320000
         TITLE 'HASP DAUGHTER TASK ELEMENT FORMAT GENERATION MACRO'     P0321000
         SPACE 5                                                        P0322000
*                                                                       P0323000
***** $DTE *****              DEFINE HASP DAUGHTER-TASK ELEMENT         P0324000
*                                                                       P0325000
*                                                                       P0326000
         MACRO                                                          P0327000
         $DTE  &DOC=NO                                                  P0328000
         TITLE 'HASP DAUGHTER TASK ELEMENT (DTE) DSECT'                 P0329000
         SPACE 5                                                        P0330000
DTEDSECT DSECT                                                          P0331000
DTETCB   DS    A                   SUB-TASK TCB ADDRESS                 P0332000
DTETECB  DS    F                   SUB-TASK TERMINATION ECB             P0333000
DTEWECB  DS    F                   SUB-TASK WORK ECB                    P0334000
&SYSECT  CSECT                     END OF DTE DSECT                     P0335000
         MEND                                                           P0336000
         TITLE 'HASP ESTAE ELEMENT (EEL) MACRO DEFINITION'     @OZ32566 P0336200
         SPACE 3                                               @OZ32566 P0336300
*                                                              @OZ32566 P0336400
***** $EEL *****                   DEFINE HASP ESTAE ELEMENT   @OZ32566 P0336500
*                                                              @OZ32566 P0336600
*                                                              @OZ32566 P0336700
         MACRO -- $EEL -- HASP ESTAE ELEMENT DSECT             @OZ32566 P0336800
        $EEL   &DOC=NO                                         @OZ32566 P0336900
         TITLE 'HASP ESTAE ELEMENT (EEL) DSECT'                @OZ32566 P0337000
         SPACE 2                                               @OZ32566 P0337100
EELDSECT DSECT                     HASP ESTAE ELEMENT DSECT    @OZ32566 P0337200
         SPACE 1                                               @OZ32566 P0337300
EELFLAGS DS    X                   FLAG BYTE                   @OZ32566 P0337400
EELILC   DS    X                   INSTR. LNGTH CODE (IN BYTES)@OZ32566 P0337500
         DS    H                   RESERVED FOR FUTURE USE     @OZ32566 P0337600
EELCODE  DS    CL4                 ABEND OR $ERROR CODE        @OZ32566 P0337700
EELFADDR DS    A                   ADDRESS OF FAILURE          @OZ32566 P0337800
EELPCE   DS    A                   ADDRESS OF FAILING PCE      @OZ32566 P0337900
EELPSW   DS    2A                  PSW AT TIME OF ABEND        @OZ32566 P0338000
EELREGS  DS    XL(16*4)            REGISTERS AT TIME OF ABEND  @OZ32566 P0338100
EELIC    DS    X                   INTERRUPT CODE              @OZ36762 P0338120
         DS    AL3                 RESERVED                    @OZ36762 P0338140
         DS    F                   RESERVED                    @OZ32566 P0338200
         SPACE 1                                               @OZ32566 P0338300
EELSIZE  EQU   *-EELDSECT          SIZE OF AN EEL              @OZ32566 P0338400
         SPACE 4                                               @OZ32566 P0338500
*        EELFLAGS                                              @OZ32566 P0338600
         SPACE 2                                               @OZ32566 P0338700
EELJESAB EQU   B'10000000'   80    JES2 $ERROR                 @OZ32566 P0338800
EELSYSAB EQU   B'01000000'   40    JES2 SYSTEM ABEND           @OZ32566 P0338900
EELREGSA EQU   B'00100000'   20    REGISTERS AVAILABLE IN EEL  @OZ32566 P0339000
EELOUTJ  EQU   B'00010000'   10    ADDR OUTSIDE JES            @OZ41061 P0339050
&SYSECT  CSECT                                                 @OZ32566 P0339100
.END     MEND                                                  @OZ32566 P0339200
         TITLE 'HASP NUCLEUS'                                  @OZ32566 P0339400
         SPACE 5                                               @OZ32566 P0339500
HASPNUC  START 0                   HASP NUCLEUS                @OZ32566 P0339600
         SPACE 5                                                        P0340000
*                                                                       P0341000
*                             EXTERNAL REFERENCES                       P0342000
*                                                                       P0343000
         SPACE 3                                                        P0344000
         ENTRY HASP                MAIN ENTRY                           P0345000
         ENTRY $QINDEX             ADDRESS OF JOB QUEUE INDEX TABLE     P0346000
         ENTRY $IOAPPEN            I/O APPENDAGE TABLE                  P0347000
         ENTRY $ABEND              HASP STAE EXIT ROUTINE               P0348000
         ENTRY $GETCELR            ADDRESS OF GET CELL ROUTINE          P0349000
         ENTRY $FRECELR            ADDRESS OF FREE CELL ROUTINE         P0350000
         ENTRY $GETLOKR            ADDRESS OF GET LOCK ROUTINE          P0351000
         ENTRY $FRELOKR            ADDRESS OF FREE LOCK ROUTINE         P0352000
         ENTRY $DYN                ADDRESS OF ALLOCATION ROUTINE        P0353000
         ENTRY $HEXIT              ADDRESS OF HASP EXIT ROUTINE         P0354000
         ENTRY HASPATTN            ADDRESS OF HASP ATTENTION APPENDAGE  P0355000
         ENTRY $ERRORSA            ADDRESS OF ERROR EXIT REGISTER SAVE  P0356000
         SPACE 5                                                        P0357000
         COPY  $HASPGEN            COPY HASPGEN PARAMETERS              P0358000
         SPACE 5                                                     R4 P0359000
         GBLB  &IECIHDR            IOSGEN DOCUMENTATION OPTION       R4 P0360000
         GBLB  &IECITP             IOSGEN DOCUMENTATION OPTION       R4 P0361000
         TITLE 'HASP CONTROL BLOCKS'                                    P0362000
*                                                                       P0363000
*                             DOCUMENTATION OPTIONS FOR THIS ASSEMBLY   P0364000
*                                                                       P0365000
         SPACE 3                                                        P0366000
        $SYSPARM (OFF,GEN,NODATA,NO,NO)                                 P0367000
         SPACE 5                                                        P0368000
*                                                                       P0369000
*                             GENERATE HASP CONTROL BLOCKS              P0370000
*                                                                       P0371000
         SPACE 3                                                        P0372000
        $HASPCB DOC=&DOC,LIST=&LIST  GENERATE HASP CONTROL BLOCKS       P0373000
         TITLE 'HASP DISPATCHER'                                        P0374000
*********************************************************************** P0375000
*                                                                     * P0376000
*        $WAIT - WAIT ON A SPECIFIC $POST                             * P0377000
*                                                                     * P0378000
*        R11   = HCT ADDRESS (BASE1)                                  * P0379000
*        R13   = PCE ADDRESS (SAVE)                                   * P0380000
*        R15   = NEW ENTRY ADDRESS                                    * P0381000
*                                                                     * P0382000
*********************************************************************** P0383000
         SPACE 1                                                     R4 P0384000
         CNOP  0,8                                                   R4 P0385000
$WAITS   NULL                      $WAIT SAVE=YES FOR AN EVENT       R4 P0386000
         ST    R14,PCELINK         SAVE PROCESSORS                   R4 P0387000
         STM   R0,R12,PCER0            REGISTERS                     R4 P0388000
         SPACE 1                                                     R4 P0389000
$WAIT    NULL                      $WAIT SAVE=NO FOR AN EVENT        R4 P0390000
         ST    R15,PCER15          SAVE RE-ENTRY ADDRESS             R4 P0391000
         LM    R2,R3,PCEPCEA       POINT TO NEXT AND PREVIOUS PCE       P0392000
         ST    R2,PCEPCEA-PCEDSECT(,R3) REMOVE PCE                      P0393000
         ST    R3,PCEPCEB-PCEDSECT(,R2) FROM QUEUE                      P0394000
         ST    SAVE,PCEPCEA        SET NEXT WAITING TO ITSELF           P0395000
         ST    SAVE,PCEPCEB        SET PREVIOUS WAITING TO ITSELF       P0396000
         B     HASPDISP            DISPATCH NEXT READY               R4 P0397000
         EJECT                                                       R4 P0398000
*********************************************************************** P0399000
*                                                                     * P0400000
*        $WAITR - WAIT ON A RESOURCE ( REGISTERS SAVED BY MACRO )     * P0401000
*                                                                     * P0402000
*        R1    = WAIT CHAIN ELEMENT ADDRESS MINUS (PCEPCEA-PCEDSECT)  * P0403000
*        R11   = HCT ADDRESS (BASE1)                                  * P0404000
*        R13   = PCE ADDRESS (SAVE)                                   * P0405000
*        R15   = NEW ENTRY ADDRESS                                    * P0406000
*                                                                     * P0407000
*********************************************************************** P0408000
         SPACE 1                                                     R4 P0409000
$WAITR   NULL                      $WAIT SAVE=NO FOR A RESOURCE      R4 P0410000
         ST    R15,PCER15          SAVE RE-ENTRY ADDRESS             R4 P0411000
         SPACE 1                                                     R4 P0412000
$WAITRQ  LM    R2,R3,PCEPCEA       POINT TO NEXT AND PREVIOUS PCES   R4 P0413000
         ST    R2,PCEPCEA-PCEDSECT(,R3) REMOVE PCE                      P0414000
         ST    R3,PCEPCEB-PCEDSECT(,R2) FROM QUEUE                      P0415000
         L     R2,PCEPCEB-PCEDSECT(,R1) POINT TO LAST OF NEXT QUEUE     P0416000
         ST    SAVE,PCEPCEA-PCEDSECT(,R2) PUT WAITER ON END             P0417000
         ST    SAVE,PCEPCEB-PCEDSECT(,R1) POINT QUEUE END TO CURRENT    P0418000
         ST    R2,PCEPCEB          POINT CURRENT PCE TO PREVIOUS        P0419000
         ST    R1,PCEPCEA          POINT TO CURRENT QUEUE HEADER        P0420000
         EJECT                                                          P0421000
*********************************************************************** P0422000
*                                                                     * P0423000
*        DISPATCH READY PCES                                          * P0424000
*                                                                     * P0425000
*********************************************************************** P0426000
         SPACE 1                                                     R4 P0427000
HASPDISP LA    R1,$READY-(PCEPCEA-PCEDSECT) POINT TO ACTIVE PCE ZERO R4 P0428000
         L     SAVE,PCEPCEA-PCEDSECT(,R1) POINT TO FIRST READY PCE      P0429000
         ST    SAVE,$CURPCE        SET CURRENT PCE POINTER              P0430000
         CR    SAVE,R1             IS IT PCE ZERO                       P0431000
         BE    HASPLOOK            LOOK FOR MORE WORK IF PCE ZERO       P0432000
         LM    R14,R12,PCELINK     PICK UP REGISTERS                    P0433000
         MVI   PCEEWF,$EWFPOST     SET NORMAL POST INHIBITOR            P0434000
         BR    R15                 ENTER PROCESSOR                      P0435000
         SPACE 2                                                     R4 P0436000
*********************************************************************** P0437000
*                                                                     * P0438000
*        LOOK FOR MORE WORK                                           * P0439000
*                                                                     * P0440000
*********************************************************************** P0441000
         SPACE 1                                                     R4 P0442000
         CNOP  2,8                                                   R4 P0443000
HASPLOOK CLC   =X'FFFFFFFF',$HASPECF  ANY RESOURCES $POSTED... @OZ27300 P0444000
         BE    HASPSPEC            TEST $$POST IF NOT                   P0445000
         SPACE 1                                                     R4 P0446000
HASPOST  LA    R7,$EWQ1-(PCEPCEA-PCEDSECT) POINT TO FIRST PCE ZERO      P0447000
         LA    R4,8                GET OFFSET                           P0448000
         LA    R5,$EWQL-(PCEPCEA-PCEDSECT) POINT TO LAST PCE ZERO       P0449000
         L     R6,$HASPECF         ALIGN RESOURCE $POST BITS   @OZ27300 P0450000
         SLL   R6,$EWFSPCT          AT BIT-0 FOR SHIFT         @OZ27300 P0451000
         SPACE 1                                                     R4 P0452000
HASPOSTL ALR   R6,R6               SHIFT ONE AND CHECK OVERFLOW         P0453000
         BC    2+1,HASPOSTC        DO NOT $POST IF CARRY                P0454000
         LR    R1,R7               POINT TO RESOURCE PCE ZERO           P0455000
         BAL   LINK,$POSTR         POST RESOURCE                        P0456000
         SPACE 1                                                     R4 P0457000
HASPOSTC BXLE  R7,R4,HASPOSTL      LOOP                                 P0458000
         XC    $HASPECF,MHASPECF   CHECK IF MLLM IS WAITING FOR      R4 P0459000
         NC    $HASPECF,MHASPECF    ANY OF NOW POSTED RESOURCES      R4 P0460000
         BZ    HASPOSTR            DON'T POST IF NONE AWAITING       R4 P0461000
         XC    MHASPECF,$HASPECF   RESET APPROPRIATE RESOURCE BITS   R4 P0462000
         TM    MHASPECF+$EWBPOST,$EWFPOST TEST IF POST REQUIRED      R4 P0463000
         BZ    HASPOSTR            BRANCH IF NO IMMEDIATE POST       R4 P0464000
         L     R1,$MLLMPCE         GET MLLM PCE ADDRESS              R4 P0465000
         BAL   LINK,HASPOSTW       POST THE LINE MANAGER             R4 P0466000
         SPACE 1                                                     R4 P0467000
HASPOSTR MVC   $HASPECF,=X'FFFFFFFF'  RESET ALL POST FLAGS     @OZ27300 P0468000
         B     HASPDISP            DISPATCH ANY PCES                    P0469000
         EJECT                                                          P0470000
*********************************************************************** P0471000
*                                                                     * P0472000
*        HANDLE ANY $$POSTS                                           * P0473000
*                                                                     * P0474000
*********************************************************************** P0475000
         SPACE 1                                                     R4 P0476000
         USING $SVDSECT,R10        PROVIDE SSVT ADDRESSABILITY       R4 P0477000
         SPACE 1                                                     R4 P0478000
         CNOP  2,8                                                   R4 P0479000
HASPSPEC L     R10,$SSVT           GET ADDRESS OF SSVT               R4 P0480000
         SPACE 1                                                     R4 P0481000
HASPDL   L     R1,$HASPECB         RESET HASP                        R4 P0482000
         MVI   0(R1),0              ECB                              R4 P0483000
         TM    $SVPOSTW(R1),X'80'  IS ANY WORK REQUIRED...           R4 P0484000
         BZ    HNOSPEC             BRANCH IF NOT.                       P0485000
         MVI   $SVPOSTW(R1),0      ELSE CLEAR INDICATOR              R4 P0486000
         L     R1,$SVECF           PICK UP ECF FIELD                    P0487000
         SLR   R0,R0               SET MASK FOR CS INSTRUCTION          P0488000
         CS    R1,R0,$SVECF        RESET POST FLAGS                     P0489000
         BNE   *-4                 LOOP UNTIL RESET                     P0490000
         LCR   R1,R1               GET TWOS COMPLIMENT                  P0491000
         BCTR  R1,0                BACK TO ONES COMPLIMENT              P0492000
         STH   R1,$HASPECF         SET MASTER EVENT CONTROL             P0493000
         LA    R0,$SVPCENO         SET NO OF PCES TO POST      @OZ19496 P0494000
         LA    R1,$SVCOMM          POINT TO FIRST ELEMENT      @OZ19496 P0495000
         CLI   $ASYNCP,255         ASYNC PROCESSOR POSTED...   @OZ19496 P0496000
         BNE   HPPCEL              BR IF NO                    @OZ19496 P0497000
         SPACE 1                                               @OZ19496 P0497100
HPPOST   L     R3,$SVASYNC         GET ASYNC POST ELEMENT      @OZ19496 P0498000
         LA    R2,255              GET MASK FOR $$POST         @OZ19496 P0499000
         SLL   R2,24               ALIGN MASK                  @OZ19496 P0499100
         OR    R2,R3               SET REGISTER FOR SWAP       @OZ19496 P0499200
         CS    R3,R2,$SVASYNC      CONVERT POST TO $$POST      @OZ19496 P0499300
         BNE   HPPOST              LOOP UNTILL POSTED          @OZ19496 P0499400
         MVI   $ASYNCP,0           RESET POST INDICATOR        @OZ19496 P0499500
         SPACE 1                                                     R4 P0500000
HPPCEL   CLI   0(R1),X'FF'         TEST FOR POST REQUIRED               P0501000
         BNE   HPNPCE              SKIP THIS PCE IF NOT REQUIRED        P0502000
         L     SAVE,0(0,R1)        PICK UP PCE ADDRESS                  P0503000
         MVI   0(R1),X'80'         SET TO NOT POST UNTIL REQUIRED       P0504000
         LA    SAVE,0(0,SAVE)      PURIFY ADDRESS                       P0505000
         $POST (SAVE),WORK         POST PCE                             P0506000
         SPACE 1                                                     R4 P0507000
HPNPCE   LA    R1,4(0,R1)          UP TO NEXT ELEMENT                   P0508000
         BCT   R0,HPPCEL           LOOP                                 P0509000
         EJECT                                                       R4 P0510000
HPIRDR   TM    $SVIRDR,X'80'       $SVIRDR --- IS ACTION REQD...        P0511000
         BZ    HPNEXT              BRANCH IF NO ACTION.                 P0512000
         MVI   $SVIRDR,0           CLEAR TS BYTE.                       P0513000
         L     R1,$SVIRDRS         POINT TO FIRST INTRDR DCT.           P0514000
         SPACE 1                                                     R4 P0515000
         USING DCTDSECT,R1         USE THE DCT DSECT.                   P0516000
         SPACE 1                                                     R4 P0517000
HPIRDR1  LTR   R1,R1               ARE WE OUT OF DCTS...                P0518000
         BZ    HPNEXT              BRANCH IF SO.                        P0519000
         CLI   DCTDEVTP,DCTINR     ARE WE STILL IN INTRDRS...           P0520000
         BNE   HPNEXT              BRANCH IF NOT.                       P0521000
         TM    RIDFLAGS,RIDPOST    DOES PCE REQUIRE IO POST...          P0522000
         BZ    HPIRDR2             BRANCH IF NOT.                       P0523000
         NI    RIDFLAGS,255-RIDPOST  RESET THE POST SWITCH.             P0524000
         L     SAVE,DCTPCE         YES.  POINT TO THE PCE.              P0525000
         LA    SAVE,0(0,SAVE)      PURIFY ADDRESS                       P0526000
         $POST (SAVE),IO           POST IT FOR I/O                      P0527000
         SPACE 1                                                     R4 P0528000
HPIRDR2  L     R1,DCTCHAIN         POINT TO THE NEXT DCT                P0529000
         B     HPIRDR1             AND LOOP.                            P0530000
         SPACE 1                                                     R4 P0531000
         DROP  R1                  KILL DCT ADDRESSABILITY              P0532000
         SPACE 1                                                     R4 P0533000
HPNEXT   LA    R1,$EWQABIT-(PCEPCEA-PCEDSECT)  POINT TO WAIT A BIT   R4 P0534000
         BAL   LINK,$POSTR         POST THE RESOURCE                    P0535000
         B     HASPDISP            DISPATCH WHAT WE HAVE                P0536000
         EJECT                                                       R4 P0537000
*********************************************************************** P0538000
*                                                                     * P0539000
*        LOOK FOR ALL AVAILABLE FUNCTIONS COMPLETE             @OZ35278 P0540000
*                                                                     * P0541000
*********************************************************************** P0542000
         SPACE 1                                                     R4 P0543000
HNOSPEC  CLI   $ACTIVE,0           TEST ACTIVE COUNT                 R4 P0544000
         BNE   HASPACT             BRANCH IF FUNCTIONS ARE ACTIVE       P0545000
         LH    R1,$EXCPCT          TEST OUTSTANDING I/O                 P0546000
         A     R1,$BUSYQUE         TEST                                 P0547000
         A     R1,$SVPIDLE         ADD $SVPIDLE COUNT                   P0548000
         BNZ   HASPWAIT            BRANCH IF SYSTEM IS ACTIVE           P0549000
         TM    $STATUS,$ALMSGSW    TEST SYSTEM STATUS                   P0550000
         BO    HASPWAIT            BRANCH IF MESSAGE HAS BEEN ISSUED    P0551000
        $WTO   HASPALL,L'HASPALL,JOB=NO,WAIT=NO,                     R4CP0552000
               ROUTE=$ALL,CLASS=$ALWAYS,PRI=$HI    FUNCTIONS COMPLETE   P0553000
         BZ    HASPWAIT            $WTO WAS UNSUCCESSFUL, WAIT          P0554000
         OI    $STATUS,$ALMSGSW    SET MESSAGE ISSUED SWITCH            P0555000
         B     HASPLOOK            LOOK FOR MORE WORK                   P0556000
         SPACE 1                                                     R4 P0557000
HASPALL  $MSG  099,'ALL AVAILABLE FUNCTIONS COMPLETE'                   P0558000
         SPACE 1                                                     R4 P0559000
HASPACT  NI    $STATUS,255-$ALMSGSW     RESET MESSAGE ISSUED SWITCH     P0560000
         EJECT                                                 @OZ35278 P0560100
***************************************************************@OZ35278 P0560200
*                                                              @OZ35278 P0560300
*        WAIT THE JES2 MAIN TASK FOR ONE OR MORE EVENTS        @OZ35278 P0560400
*                                                              @OZ35278 P0560500
***************************************************************@OZ35278 P0560600
         SPACE 1                                               @OZ35278 P0560700
HASPWAIT L     R1,$EWQRSV+4             ANYONE WAITING FOR     @OZ35278 P0560800
         CL    R1,PCEPCEB-PCEDSECT(,R1)  POST FROM RESERVE...  @OZ35278 P0560900
         BE    HWAIT1              BR IF NO                    @OZ35278 P0561000
         WAIT  1,ECBLIST=$HASPECB  WAIT FOR ANY POST           @OZ35278 P0561100
         TM    $RSVECB,X'40'       RESERVE SATISFIED...        @OZ35278 P0561200
         BZ    HPNEXT              BR IF NO                    @OZ35278 P0561300
         LA    R1,$EWQRSV-(PCEPCEA-PCEDSECT)  POST WAITORS     @OZ35278 P0561400
         BAL   LINK,$POSTR                     OF RESERVE      @OZ35278 P0561500
         B     HPNEXT              DISPATCH ELIGIBLE PROCESSORS@OZ35278 P0561600
         SPACE 1                                               @OZ35278 P0561700
HWAIT1   L     R1,$HASPECB         GET JES2 ECB ADDRESS        @OZ35278 P0562000
         WAIT  ECB=(1)             WAIT FOR SOMETHING TO DO          R4 P0563000
         B     HASPDL              DISPATCH ELIGIBLE PROCESSORS         P0564000
         SPACE 1                                                     R4 P0565000
         DROP  R10                 DROP SSVT ADDRESSABILITY.            P0566000
         EJECT                                                          P0567000
*********************************************************************** P0568000
*                                                                     * P0569000
*        $POST - PUT A SINGLE PCE ON READY QUEUE                      * P0570000
*                                                                     * P0571000
*        R1    = PCE ADDRESS                                          * P0572000
*        R2    = WORK                                                 * P0573000
*        R3    = WORK                                                 * P0574000
*        R11   = HCT ADDRESS (BASE1)                                  * P0575000
*        R14   = RETURN ADDRESS                                       * P0576000
*                                                                     * P0577000
*********************************************************************** P0578000
         SPACE 1                                                     R4 P0579000
HASPOSTW NI    PCEEWF-PCEDSECT(R1),255-$EWFWORK RESET WORK INHIBIT   R4 P0580000
         BNZR  LINK                SKIP QUEUEING IF STILL INHIBITED  R4 P0581000
         SPACE 1                                                     R4 P0582000
$POST    MVI   PCEEWF+$EWBPOST-PCEDSECT(R1),$EWFPOST  SET INHIBIT    R4 P0583000
         LM    R2,R3,PCEPCEA-PCEDSECT(R1) POINT TO NEXT AND PREVIOUS    P0584000
         ST    R2,PCEPCEA-PCEDSECT(,R3) PULL PCE OFF NEXT CHAIN         P0585000
         ST    R3,PCEPCEB-PCEDSECT(,R2) PULL PCE OFF PREVIOUS CHAIN     P0586000
         LR    R3,R1               MAKE FIRST AND                       P0587000
         LR    R2,R1               LAST POINT TO CURRENT                P0588000
         SPACE 1                                                     R4 P0589000
HASPREDY L     R1,$READY+(PCEPCEB-PCEPCEA) POINT TO LAST ACTIVE PCE     P0590000
         MVC   PCEPCEA-PCEDSECT(,R3),PCEPCEA-PCEDSECT(R1) FIX NEXT      P0591000
         ST    R3,$READY+(PCEPCEB-PCEPCEA) SET NEW LAST                 P0592000
         ST    R1,PCEPCEB-PCEDSECT(,R2) POINT PREVIOUS TO OLD LAST      P0593000
         ST    R2,PCEPCEA-PCEDSECT(,R1) SET NEXT IN OLD LAST            P0594000
         BR    LINK                RETURN                               P0595000
         SPACE 1                                                     R4 P0596000
*********************************************************************** P0597000
*                                                                     * P0598000
*        $POSTR - PUT A GROUP OF PCES ON READY QUEUE                  * P0599000
*                                                                     * P0600000
*        R1    = RESOURCE HEADER ADDRESS MINUS (PCEPCEA-PCEDSECT)     * P0601000
*        R2    = WORK                                                 * P0602000
*        R3    = WORK                                                 * P0603000
*        R11   = HCT ADDRESS (BASE1)                                  * P0604000
*        R14   = RETURN ADDRESS                                       * P0605000
*                                                                     * P0606000
*********************************************************************** P0607000
         SPACE 1                                                     R4 P0608000
         CNOP  0,8                                                   R4 P0609000
$POSTR   LM    R2,R3,PCEPCEA-PCEDSECT(R1)  POINT TO 1ST AND LAST PCE R4 P0610000
         CR    R2,R1               IS FIRST ALSO PCE ZERO               P0611000
         BER   LINK                NOTHING TO POST, EXIT                P0612000
         ST    R1,PCEPCEA-PCEDSECT(,R1) REMOVE PCES FROM QUEUE          P0613000
         ST    R1,PCEPCEB-PCEDSECT(,R1) REMOVE LAST ALSO                P0614000
         B     HASPREDY            PUT ON READY QUEUE                   P0615000
         SPACE 3                                                        P0616000
         TITLE 'HASP INPUT/OUTPUT SUPERVISOR'                           P0617000
*********************************************************************** P0618000
*                                                                     * P0619000
*        $EXCP - EXECUTE CHANNEL PROGRAM SUBROUTINE                   * P0620000
*                                                                     * P0621000
*        R0    = WORK, UNPREDICTABLE ON EXIT                          * P0622000
*        R1    = DCT ADDRESS, UNPREDICTABLE ON EXIT IF WAIT=NO        * P0623000
*                             BUFFER ADDR   ON EXIT IF WAIT=YES       * P0624000
*        R11   = HCT ADDRESS (BASE1)                                  * P0625000
*        R13   = PCE ADDRESS (SAVE)                                   * P0626000
*        R14   = RETURN ADDRESS (HIGH ORDER BIT ON IF EXCPVR)         * P0627000
*        R15   = ENTRY POINT ADDRESS, UNPREDICTABLE ON EXIT           * P0628000
*                                                                     * P0629000
*********************************************************************** P0630000
         SPACE 1                                                     R4 P0631000
         ENTRY $EXCPR              PROVIDE $EXCP ROUTINE ENTRY       R4 P0632000
         USING DCTDSECT,R1         PROVIDE DCT ADDRESSABILITY        R4 P0633000
         USING BUFDSECT,WA         PROVIDE BUFFER ADDRESSABILITY     R4 P0634000
         SPACE 1                                                     R4 P0635000
$EXCPR   STM   WA,WB,ESAVE         SAVE WORK REGISTERS               R4 P0636000
         L     WA,DCTBUFAD         FROM DCT POINT TO THE IOB/BUFFER.    P0637000
         $TRACE                    WITH R1 AND WA LOADED, TRACE.        P0638000
         MVI   IOBFLAG1,X'42'      SHOW CMD CHAINING, UNRELATED IN IOB. P0639000
         MVC   BUFEWF,DCTEWF       MOVE INFO FOR $ASYNC INTO THE IOB.   P0640000
         STCM  R1,7,BUFDCT+1       MAKE THE IOB POINT TO THE DCT.       P0641000
         IC    WB,DCTBUFCT         ADD 1 TO THE COUNT OF BUFFERS        P0642000
         LA    WB,1(,WB)           PENDING COMPLETION UNDER THIS DCT.   P0643000
         STC   WB,DCTBUFCT         (THE COUNT IS USED BY $ASYNC.)       P0644000
         MVC   IOBDCBPT+1(3),DCTDCB+1  SET DCB ADDRESS IN IOB.          P0645000
         CLI   DCTDEVTP,PCEDAWR    TEST FOR DIRECT ACCESS REQUEST       P0646000
         BH    ESENDIT             BR IF NO                             P0647000
         SPACE 1                                                     R4 P0648000
*********************************************************************** P0649000
*                                                                     * P0650000
*           EXTRA PROCESSING FOR ALL DIRECT-ACCESS REQUESTS           * P0651000
*                                                                     * P0652000
*********************************************************************** P0653000
         SPACE 1                                                     R4 P0654000
         MVI   IOBCCW4,5           SET CHANNEL COMMAND TO WRITE         P0655000
         BE    *+8                 BR IF WRITE REQUEST                  P0656000
         MVI   IOBCCW4,6           SET CHANNEL COMMAND TO READ          P0657000
         MVC   IOBDCBPT+1(3),$HASPDCB+1  POINT TO HASP DA DCB           P0658000
         CLC   PCESEEK(1),$NUMDA   TEST FOR VALID EXTENT             R4 P0659000
         BNL   EXCPERR             BR IF NO TO CAUSE X'42' POST      R4 P0660000
         L     WB,PCESEEK          PREPARE TO SET MBBCCHHR IN IOB       P0661000
         LA    R0,0(,WB)           GET MTTR AND ISOLATE TTR IN R0.      P0662000
         XR    WB,R0               THEN ISOLATE M IN WB.                P0663000
         ST    WB,IOBXTENT         SET 'M000' IN THE IOB.               P0664000
         STC   R0,IOBSEEK+6        MBB0000R                          R4 P0665000
         SRL   WB,24               SHIFT 'M' (EXTENT NR) FOR MULTIPLY.  P0666000
         MH    WB,=AL2(TEDSIZ)     COMPUTE ADDRESS OF EXTENT DATA       P0667000
         A     WB,$TEDADDR         APPLICABLE TO THE I/O REQUEST.       P0668000
         EJECT                                                       R4 P0669000
         DROP  R1                  KILL DCT ADDRESSABILITY              P0670000
         USING TEDDSECT,WB         PROVIDE TED ADDRESSABILITY        R4 P0671000
         SPACE 1                                                     R4 P0672000
         SRDL  R0,40               SHIFT 'TT' FOR DIVIDE.               P0673000
         L     R15,TNTC            IF INVALID                        R4 P0674000
         LTR   R15,R15              TED ENTRY,                       R4 P0675000
         BZ    EXCPERR               BR TO CAUSE X'42' POST          R4 P0676000
         DR    R0,R15              COMPUTE CYLINDER AND HEAD NUMBERS R4 P0677000
         STCM  R1,3,IOBSEEK+2      MBBCC00R                          R4 P0678000
         STCM  R0,3,IOBSEEK+4      MBBCCHHR                          R4 P0679000
         TM    $RUNOPTS,$RPS       TEST RPS OPTION                   R4 P0680000
         BZ    ESENDIT             BR IF NOT SELECTED                R4 P0681000
         SPACE 1                                                     R4 P0682000
*********************************************************************** P0683000
*                                                                     * P0684000
*           COMPUTE RPS SECTOR NUMBER IF APPLICABLE                   * P0685000
*                                                                     * P0686000
*********************************************************************** P0687000
         SPACE 1                                                     R4 P0688000
         L     WB,TRPS             GET ADDRESS OF RPS TABLE.            P0689000
         MVI   IOBCCW1,X'03'       SET FIRST CHANNEL COMMAND TO NOP.    P0690000
         LTR   WB,WB               DOES EXTENT SUPPORT RPS...           P0691000
         BZ    ESENDIT             IF NOT, SKIP RPS COMPUTATION.        P0692000
         MVI   IOBCCW1,X'23'       SET CHANNEL COMMAND TO SET SECTOR.   P0693000
         SR    R1,R1               ZERO R1 FOR INSERT-CHARACTER.        P0694000
         IC    R1,IOBSEEK+6        GET RECORD NUMBER FROM IOB.          P0695000
         IC    R1,0(R1,WB)         GET CORRESPONDING SECTOR NUMBER.     P0696000
         STC   R1,IOBCCW1+5        SET SECTOR NUMBER IN SET-SECTOR.     P0697000
         EJECT                                                       R4 P0698000
*********************************************************************** P0699000
*                                                                     * P0700000
*        ISSUE EXCP/EXCPVR FOR ALL REQUESTS HERE                      * P0701000
*                                                                     * P0702000
*********************************************************************** P0703000
         SPACE 1                                                     R4 P0704000
ESENDIT  MVI   BUFECBCC,0          SET COMPLETION CODE TO ZERO       R4 P0705000
         LA    R1,IOBFLAG1         SET IOB ADDRESS AS ARGUMENT TO EXCP. P0706000
         LH    WB,$EXCPCT          ADD ONE                              P0707000
         LA    WB,1(,WB)             TO THE                             P0708000
         STH   WB,$EXCPCT              $EXCP COUNTER.                   P0709000
         LM    WA,WB,ESAVE         RESTORE WORK REGISTERS            R4 P0710000
         LTR   LINK,LINK           TEST REQUEST TYPE                 R4 P0711000
         BM    ESENDVR             BR IF EXCPVR                      R4 P0712000
         EXCP  (1)                 CALL THE OS I/O SUPERVISOR.          P0713000
         B     EXCPXIT             THEN BR TO EXIT                   R4 P0714000
         SPACE 1                                                     R4 P0715000
ESENDVR  EXCPVR (1),SUBSYS         CALL THE OS I/O SUPERVISOR        R4 P0716000
         SPACE 1                                                     R4 P0717000
EXCPXIT  CLI   0(LINK),0           WAIT FOR I/O...                   R4 P0718000
         BNER  LINK                RETURN IF NO                      R4 P0719000
         L     R1,PCEBUFAD         GET BUFFER ADDRESS                R4 P0720000
         SPACE 1                                                     R4 P0721000
EXCPIO  $WAIT  IO                  WAIT FOR I/O TO COMPLETE          R4 P0722000
         TM    BUFECBCC-BUFDSECT(R1),X'7F'  TEST COMPLETION CODE     R4 P0723000
         BO    2(,LINK)            RETURN IF COMPLETE AND OK TO +2   R4 P0724000
         BZ    EXCPIO              LOOP IF NOT COMPLETE              R4 P0725000
         LA    LINK,2(,LINK)       ADVANCE RETURN ADDRESS            R4 P0726000
         L     R15,$IOERROR        GET I/O ERROR ROUTINE ADDRESS     R4 P0727000
         BR    R15                 BR TO ISSUE I/O ERROR MSG AND RETURN P0728000
         SPACE 1                                                     R4 P0729000
EXCPERR  MVI   IOBSEEK,X'FF'       SET INVALID BB IN IOB             R4 P0730000
         MVI   IOBXTENT,X'00'      INSURE EXTENT IS VALID      @OZ33184 P0730500
         B     ESENDIT             BR TO CAUSE X'42' I/O ERROR POST  R4 P0731000
         SPACE 1                                                     R4 P0732000
         DROP  WA,WB               KILL CTL BLOCK ADDRESSABILITY        P0733000
         SPACE 1                                                     R4 P0734000
ESAVE    EQU   $CSAVREG            SAVE AREA FOR REGS WA,WB          R4 P0735000
         TITLE 'HASP JOB QUEUE MANAGER'                                 P0736000
*********************************************************************** P0737000
*                                                                     * P0738000
*        $QADD - ADD A JOB TO THE ACTIVE JOB QUEUE                    * P0739000
*                                                                     * P0740000
*        R0    = QUEUE ID, UNPREDICTABLE ON EXIT                      * P0741000
*        R1    = JOB QUEUE ELEMENT IMAGE ADDRESS, JQE ADDRESS ON EXIT * P0742000
*        R11   = HCT ADDRESS (BASE1)                                  * P0743000
*        R13   = PCE ADDRESS (SAVE)                                   * P0744000
*        R14   = RETURN ADDRESS                                       * P0745000
*        R15   = WORK, UNPREDICTABLE ON EXIT                          * P0746000
*                                                                     * P0747000
*********************************************************************** P0748000
         SPACE 1                                                        P0749000
         USING JQEDSECT,R1         PROVIDE JQE ADDRESSABILITY           P0750000
         SPACE 1                                                        P0751000
$QADD   $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    P0752000
         STM   WA,WB,PCEWA         PRESERVE WORK REGISTERS              P0753000
         LH    WB,$JQFREE          GET OFFSET                           P0754000
         N     WB,=X'0000FFFF'      OF 1ST FREE JQE                     P0755000
         BZ    QBACK2A             BR IF NO FREE JQES          @OZ32879 P0756000
         SLL   WB,2                 ELSE CONVERT OFFSET                 P0757000
         AL    WB,$JOBQPTR           TO ABSOLUTE ADDRESS                P0758000
         MVC   $JQFREE,QUECHAIN(WB)  REMOVE JQE FROM FREE CHAIN         P0759000
         MVC   0(JQELNGTH,WB),JQE     AND INITIALIZE NEW QUEUE ENTRY    P0760000
         SPACE 1                                                        P0761000
QADD     LR    R1,WB               RELOAD JQE ADDRESS                   P0762000
         STC   R0,JQETYPE          SET NEW QUEUE TYPE                   P0763000
         CLI   JQETYPE,$HARDCPY    TEST NEW QUEUE TYPE         @OZ27300 P0763200
         BE    QTSTPRG             BR IF QUEUED FOR $HARDCPY   @OZ27300 P0763400
         TM    JQEFLAGS,QUEPURGE+QUEOPCAN  TEST FOR CANCEL              P0764000
         BZ    QADDIT              BR IF NO                             P0765000
         TM    JQEFLAGS,QUEPURGE   IF PURGE NOT REQUESTED,              P0766000
         BZ    QOPCAN               BR TO TEST CURRENT QUEUE            P0767000
         MVI   JQETYPE,$HARDCPY      ELSE QUEUE JOB FOR $HARDCPY        P0768000
         SPACE 1                                               @OZ27300 P0768500
QTSTPRG  CLC   JQEJOE,$ZEROS       DOES JOB HAVE JOT OUTPUT... @OZ27300 P0769000
         BNE   QADDIT              BR IF YES                   @OZ27300 P0770000
         CLC   JQEHLDCT,$ZEROS     DOES JOB HAVE HELD OUTPUT...@OZ27300 P0771000
         BNE   QADDIT              BR IF YES                   @OZ27300 P0771500
         MVI   JQETYPE,$PURGE       ELSE QUEUE JOB FOR $PURGE           P0772000
         B     QADDIT              THEN BR TO QUEUE THE JOB             P0773000
         EJECT                                                       R4 P0774000
         CNOP  0,8                                                      P0775000
QOPCAN   TM    JQETYPE,$XEQ        TEST FOR CNVT OR EXECUTE          R4 P0783000
         BZ    QADDIT              BR IF NO                          R4 P0784000
         MVI   JQETYPE,$OUTPUT      ELSE RE-QUEUE FOR $OUTPUT        R4 P0785000
         SPACE 1                                                     R4 P0787000
QADDIT   SLR   WA,WA               GET                                  P0788000
         IC    WA,JQETYPE           INDEX                               P0789000
         IC    WA,$QINDEX(WA)        TO NEW                             P0790000
         LTR   WA,WA                  QUEUE                             P0791000
         BZ    Q02                 BR IF NO SUCH QUEUE                  P0792000
         LA    WA,$JQHEADS-2-QUECHAIN(WA)  ELSE PREPARE TO SCAN Q       P0793000
         SPACE 1                                                        P0794000
QNEXT1   LR    R15,WA              RELOAD CHAIN ADDRESS                 P0795000
         LH    WA,QUECHAIN(,WA)    GET OFFSET                           P0796000
         N     WA,=X'0000FFFF'      OF NEXT JQE                         P0797000
         BZ    QINSERT             BR IF END OF QUEUE                   P0798000
         SLL   WA,2                 ELSE CONVERT OFFSET                 P0799000
         AL    WA,$JOBQPTR           TO ABSOLUTE ADDRESS                P0800000
         CLC   JQEPRIO,QUEPRIO(WA) TEST CURRENT PRIORITY                P0801000
         BNH   QNEXT1              BR IF NEW ELEMENT NOT HIGHER         P0802000
         SL    WA,$JOBQPTR          ELSE REDUCE ADDRESS TO              P0803000
         SRL   WA,2                  RELATIVE WORD OFFSET               P0804000
         SPACE 1                                                        P0805000
QINSERT  SL    R1,$JOBQPTR         REDUCE NEW ELEMENT ADDRESS TO        P0806000
         SRL   R1,2                 RELATIVE WORD OFFSET                P0807000
         STH   R1,QUECHAIN(,R15)   INSERT NEW QUEUE ELEMENT             P0808000
         STH   WA,QUECHAIN(,WB)     INTO CURRENT JOB QUEUE              P0809000
         LR    R1,R15              POINT TO MODIFIED JQE                P0810000
         BAL   R15,QCKPT            AND FORCE CHECKPOINT OF JQE         P0811000
         B     QPOST2              THEN BR TO $POST JOB                 P0812000
         SPACE 1                                               @OZ32879 P0812100
QBACK2A  OI    $RESHORT,$JOBMSB    SET WAITING JQE SWITCH      @OZ32879 P0812200
         B     QBACK2              EXIT                        @OZ32879 P0812300
         EJECT                                                          P0813000
*********************************************************************** P0814000
*                                                                     * P0815000
*        $QGET - OBTAIN CONTROL OF A JQE FROM LOGICAL QUEUE           * P0816000
*                                                                     * P0817000
*        R0    = WORK, UNPREDICTABLE ON EXIT                          * P0819000
*        R1    = QUEUE TYPE, JQE ADDRESS (0 IF NONE) ON EXIT          * P0823000
*        R11   = HCT ADDRESS (BASE1)                                  * P0824000
*        R13   = PCE ADDRESS (SAVE)                                   * P0825000
*        R14   = RETURN ADDRESS                                       * P0826000
*        R15   = WORK, UNPREDICTABLE ON EXIT                          * P0827000
*                                                                     * P0828000
*********************************************************************** P0829000
         SPACE 1                                                        P0830000
         CNOP  4,8                                                   R4 P0831000
$QGET   $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    P0832000
         N     R1,=A(255)          MASK OFF HI-ORDER BYTES              P0833000
         IC    R1,$QINDEX(R1)      GET JOB QUEUE HEADER OFFSET          P0834000
         TM    $STATUS,$DRAINED    IF SYSTEM NOT DRAINING,              P0835000
         BZ    *+6                  BR TO VALIDATE QUEUE TYPE           P0836000
         SLR   R1,R1                 ELSE ENSURE INVALID TYPE           P0837000
         LTR   R1,R1               IF INVALID QUEUE TYPE,               P0838000
         BZR   LINK                 RETURN WITH CC = 0                  P0839000
         LA    R1,$JQHEADS-2-QUECHAIN(R1)  SCAN REQUESTED JOB QUEUE     P0840000
         SPACE 1                                                        P0841000
QNEXT    LH    R1,JQECHAIN         GET OFFSET                           P0842000
         N     R1,=X'0000FFFF'      OF NEXT JQE                         P0843000
         BZR   LINK                RETURN IF END OF QUEUE WITH CC=0     P0844000
         SLL   R1,2                 ELSE CONVERT OFFSET                 P0845000
         AL    R1,$JOBQPTR           TO ABSOLUTE ADDRESS                P0846000
         TM    JQEFLAGS,QUEHOLDA+QUEHOLD1+QUEHOLD2+QUEBUSY              P0847000
         BNZ   QNEXT               BR IF JOB ACTIVE OR HELD             P0848000
*              NOTE -- MASK ON NEXT INSTR SET AT END OF INITIALIZATION  P0853000
$QGETAFF TM    JQEFLAG2,*-*        MAY JOB RUN ON THIS SYSTEM           P0854000
         BZ    QNEXT               BR IF NO TO TEST NEXT JQE            P0855000
         SPACE 1                                                     R4 P0856000
QIND     TM    $STATUS,$INDMODE    CPU IN INDEPENDENT MODE...       R41 P0857000
         BO    QCPUIND             BR IF YES                        R41 P0858000
         TM    JQEFLAG2,QUEINDAF   JOB IN INDEPENDENT MODE...       R41 P0859000
         BO    QNEXT               BR IF YES TO CHECK NEXT JQE      R41 P0859100
         SPACE 1                                                    R41 P0859200
QGETCONT DS    0H                                                   R41 P0859300
         SPACE 1                                                     R4 P0869000
QGOT     OC    JQEFLAGS,$SIDBUSY   MAKE JQE ACTIVE                   R4 P0870000
         ST    R1,PCEJQE           SET JQE ADDRESS IN PCE      @OZ32566 P0871000
         BAL   R15,QCKPT           FORCE CKPT OF JQE (SET CC)           P0872000
         L     R1,PCEJQE           RESTORE JQE ADDRESS         @OZ32566 P0873000
         BR    LINK                 AND RETURN                          P0874000
         SPACE 1                                                    R41 P0874100
QCPUIND  TM    JQEFLAG2,QUEINDAF   JOB IN INDEPENDENT MODE...       R41 P0874200
         BZ    QNEXT               BR IF NO TO CHECK NEXT JQE       R41 P0874300
         B     QGETCONT             ELSE CONTINUE QGET              R41 P0874400
         EJECT                                                          P0875000
*********************************************************************** P0876000
*                                                                     * P0877000
*        $QPUT - RELEASE CONTROL OF JQE TO LOGICAL QUEUE              * P0878000
*                                                                     * P0879000
*        R0    = QUEUE ID, UNPREDICTABLE ON EXIT                      * P0880000
*        R1    = JQE ADDRESS, UNPREDICTABLE ON EXIT                   * P0881000
*        R11   = HCT ADDRESS (BASE1)                                  * P0882000
*        R13   = PCE ADDRESS (SAVE)                                   * P0883000
*        R14   = RETURN ADDRESS                                       * P0884000
*        R15   = WORK, UNPREDICTABLE ON EXIT                          * P0885000
*                                                                     * P0886000
*********************************************************************** P0887000
         SPACE 1                                                        P0888000
         CNOP  0,8                                                      P0889000
$QPUT   $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    P0890000
         CLM   R0,1,JQETYPE        IF QUEUE TYPE HAS CHANGED,           P0891000
         BNE   QMOD                 BR TO RE-QUEUE THE JOB              P0892000
         TM    JQEFLAGS,QUEPURGE+QUEOPCAN  IF JOB BEING CANCELLED,      P0893000
         BNZ   QMOD                         BR TO RE-QUEUE IT           P0894000
SKIP20   STM   WA,WB,PCEWA         PRESERVE WORK REGISTERS              P0901000
         NI    JQEFLAGS,255-QUEBUSY  RESET BUSY BITS                    P0902000
         LR    WB,R1               RE-LOAD JQE ADDRESS                  P0903000
         EJECT                                                          P0904000
         USING JQEDSECT,WB         PROVIDE JQE ADDRESSABILITY           P0905000
         SPACE 1                                                        P0906000
QPOST2   TM    JQEFLAGS,QUEBUSY    IS JOB BEING PROCESSED               P0907000
         BNZ   QPOST3              BR IF SO                             P0908000
         CLI   JQETYPE,$XEQ        IS JOB QUEUED FOR CONVERSION...      P0909000
         BE    QPOSTCNV            BR IF SO                             P0910000
         TM    JQETYPE,$XEQ        IS JOB QUEUED FOR EXECUTION...       P0911000
         BO    QPOSTXEQ            BR IF SO                             P0912000
         CLI   JQETYPE,$OUTPUT     IS JOB QUEUED FOR OUTPUT...          P0913000
         BE    QPOSTOUT            BR IF SO                             P0914000
         CLI   JQETYPE,$PURGE      IS JOB QUEUED FOR PURGE...           P0915000
         BE    QPOSTPRG            BR IF SO                             P0916000
         SPACE 1                                                        P0917000
QPOST2A $POST  $HASPECF,JOB        $POST ALL FOR JOB                 R4 P0918000
         OI    $AQSE,QSEPJOB       INDICATE CROSS-SYSTEM $POST          P0919000
         B     QPOST3              THEN BR TO $POST CKPT                P0920000
         SPACE 1                                                        P0921000
QPOSTCNV L     R1,$JCLPCE          GET CONVERSION PROCESSOR PCE ADDR R4 P0922000
         OI    $AQSE,QSEPCNV       INDICATE CROSS-SYSTEM $POST          P0923000
         B     Q$POST               AND BR TO $POST UNIQUE PROCESSOR    P0924000
         SPACE 1                                                        P0925000
QPOSTXEQ L     R1,$SSVT                   $$POST EXECUTION              P0926000
         OI    $SVJOB-$SVDSECT(R1),X'80'   PROCESSOR                 R4 P0927000
         L     R1,$EXECPCE         GET EXECUTION PROCESSOR PCE ADDR  R4 P0928000
         OI    $AQSE,QSEPXEQ       INDICATE CROSS-SYSTEM $POST          P0929000
         B     Q$POST               AND BR TO $POST UNIQUE PROCESSOR    P0930000
         SPACE 1                                                        P0931000
QPOSTOUT L     R1,$OUTPCE          GET OUTPUT PROCESSOR PCE ADDR     R4 P0932000
         OI    $AQSE,QSEPOUT       INDICATE CROSS-SYSTEM $POST          P0933000
         B     Q$POST               AND BR TO $POST UNIQUE PROCESSOR    P0934000
         SPACE 1                                                        P0935000
QPOSTPRG NI    JQEFLAGS,255-QUEHOLDA-QUEHOLD1-QUEHOLD2  RELEASE JOB  R4 P0936000
         OI    JQEFLAG2,QUESYSAF   SET AFFINITY FOR ALL SYSTEMS     R41 P0936500
         L     R1,$PRGPCE          GET PURGE PROCESSOR PCE ADDR      R4 P0937000
         OI    $AQSE,QSEPPRG       INDICATE CROSS-SYSTEM $POST          P0938000
         SPACE 1                                                        P0939000
Q$POST  $POST  (R1),JOB            $POST UNIQUE PROCESSOR FOR JOB       P0940000
         SPACE 1                                                        P0941000
QPOST3  $POST  $HASPECF,CKPW       $POST CHECKPOINT WRITER           R4 P0942000
         LR    R1,WB               POINT TO MODIFIED ELEMENT            P0943000
         BAL   R15,QCKPT           CAUSE CHECKPOINT                     P0944000
         SPACE 1                                                        P0945000
QBACK2   LTR   R1,WB               R1 = QUEUE ENTRY (OR 0), SET CC      P0946000
         LM    WA,WB,PCEWA         RESTORE REGISTERS                    P0947000
         BR    LINK                RETURN                               P0948000
         SPACE 1                                                        P0949000
         DROP  WB                  KILL LOCAL JQE ADDRESSABILITY        P0950000
         EJECT                                                          P0951000
*********************************************************************** P0952000
*                                                                     * P0953000
*        $QREM - REMOVE A JOB FROM THE ACTIVE JOB QUEUE               * P0954000
*                                                                     * P0955000
*        R0    = UNPREDICTABLE ON EXIT                                * P0956000
*        R1    = JQE ADDRESS, UNPREDICTABLE ON EXIT                   * P0957000
*        R11   = HCT ADDRESS (BASE1)                                  * P0958000
*        R13   = PCE ADDRESS (SAVE)                                   * P0959000
*        R14   = RETURN ADDRESS                                       * P0960000
*        R15   = WORK, UNPREDICTABLE ON EXIT                          * P0961000
*                                                                     * P0962000
*********************************************************************** P0963000
         SPACE 1                                                        P0964000
         CNOP  2,8                                                   R4 P0965000
$QREM   $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    P0966000
         STM   WA,WB,PCEWA         PRESERVE WORK REGISTERS              P0967000
         BAL   R15,QREM            REMOVE JQE FROM CURRENT QUEUE        P0968000
         LA    WA,$JQFREE-QUECHAIN PREPARE TO SCAN FREE QUEUE           P0969000
         SPACE 1                                                        P0970000
QNEXT3   LR    R1,WA               RELOAD CHAIN ADDRESS                 P0971000
         LH    WA,JQECHAIN         GET OFFSET                           P0972000
         N     WA,=X'0000FFFF'      OF NEXT JQE                         P0973000
         BZ    QREMQIT             BR IF END OF QUEUE                   P0974000
         SLL   WA,2                 ELSE CONVERT OFFSET                 P0975000
         AL    WA,$JOBQPTR           TO ABSOLUTE ADDRESS                P0976000
         CLR   WB,WA               TEST CURRENT ADDRESS                 P0977000
         BH    QNEXT3              BR IF FREE ELEMENT STILL HIGHER      P0978000
         SPACE 1                                                        P0979000
QREMQIT  LH    R0,$JQFREE          SAVE OFFSET OF 1ST FREE JQE          P0980000
         LR    R15,WB              INSERT NEW                           P0981000
         SL    R15,$JOBQPTR         FREE ELEMENT                        P0982000
         SRL   R15,2                 INTO                               P0983000
         STH   R15,JQECHAIN           FREE CHAIN                        P0984000
         LTR   WA,WA               IF NEW ELEMENT AT END OF CHAIN,      P0985000
         BZ    *+12                 BR AROUND NEXT 2 INSTRUCTIONS       P0986000
         SL    WA,$JOBQPTR           ELSE RECONNECT                     P0987000
         SRL   WA,2                   REMAINING                         P0988000
         STH   WA,QUECHAIN(,WB)        FREE ELEMENTS                    P0989000
         MVI   QUETYPE(WB),$FREE   INDICATE JQE ON FREE QUEUE  @OZ27300 P0989500
         LTR   R0,R0               IF FREE QUEUE HAD BEEN EMPTY,        P0990000
         BZ    QPOST2A              BR TO $POST JOB                     P0991000
         BAL   R15,QCKPT             ELSE FORCE CKPT OF MODIFIED JQE    P0992000
         B     QPOST3                 AND BR TO $POST CKPT              P0993000
         EJECT                                                          P0994000
         CNOP  2,8                                                      P0995000
QREM     SLR   WA,WA               GET                                  P0996000
         IC    WA,JQETYPE           INDEX                               P0997000
         IC    WA,$QINDEX(WA)        TO CURRENT                         P0998000
         LTR   WA,WA                  JOB QUEUE                         P0999000
         BZ    Q02                 BR IF NO SUCH QUEUE                  P1000000
         LA    WA,$JQHEADS-2-QUECHAIN(WA)  ELSE PREPARE TO SCAN Q       P1001000
         LR    WB,R1               SAVE JQE ADDRESS                     P1002000
         SPACE 1                                                        P1003000
QNEXT3A  LR    R1,WA               RELOAD CHAIN ADDRESS                 P1004000
         LH    WA,JQECHAIN         GET OFFSET                           P1005000
         N     WA,=X'0000FFFF'      OF NEXT JQE                         P1006000
         BZ    Q01                 BR IF JOB NOT ON QUEUE               P1007000
         SLL   WA,2                 ELSE CONVERT OFFSET                 P1008000
         AL    WA,$JOBQPTR           TO ABSOLUTE ADDRESS                P1009000
         CLR   WA,WB               IF NOT THE CURRENT JQE,              P1010000
         BNE   QNEXT3A              BR TO TEST NEXT JQE                 P1011000
         SPACE 1                                                        P1012000
         MVC   JQECHAIN,QUECHAIN(WB)  DECHAIN CURRENT JQE               P1013000
         B     QCKPT                   AND BR TO CKPT MODIFIED JQE      P1014000
         SPACE 1                                                        P1015000
Q01     $ERROR                     JOB QUEUE ERROR                      P1016000
         SPACE 1                                                        P1017000
Q02     $ERROR                     ILLEGAL JOB QUEUE TYPE               P1018000
         EJECT                                                          P1019000
         SPACE 3                                                        P1020000
*********************************************************************** P1021000
*                                                                     * P1022000
*        $QLOC - LOCATE A JQE BY JOB NUMBER                           * P1023000
*                                                                     * P1024000
*        R0    = WORK, UNPREDICTABLE ON EXIT                          * P1025000
*        R1    = JOB NUMBER, JQE ADDRESS (0 IF NONE) ON EXIT          * P1026000
*        R11   = HCT ADDRESS (BASE1)                                  * P1027000
*        R14   = RETURN ADDRESS                                       * P1028000
*        R15   = UNPREDICTABLE ON EXIT                                * P1029000
*                                                                     * P1030000
*********************************************************************** P1031000
         SPACE 1                                                        P1032000
         CNOP  4,8                                                   R4 P1033000
$QLOC   $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    P1034000
         LR    R0,R1               SAVE JOB NUMBER                      P1035000
         LA    R15,$JQTYPES*2      INITIALIZE QUEUE HEADER OFFSET       P1036000
         SPACE 1                                                        P1037000
QLOC     LA    R1,$JQHEADS-2-QUECHAIN(R15)  PREPARE TO SCAN QUEUE       P1038000
         SPACE 1                                                        P1039000
QNEXT4   LH    R1,JQECHAIN         GET OFFSET                           P1040000
         N     R1,=X'0000FFFF'     OF NEXT JQE                          P1041000
         BZ    QLOOP               BR IF END OF QUEUE                   P1042000
         SLL   R1,2                 ELSE CONVERT OFFSET                 P1043000
         AL    R1,$JOBQPTR           TO ABSOLUTE ADDRESS                P1044000
         CH    R0,JQEJOBNO         IF NOT THE CURRENT JQE               P1045000
         BNE   QNEXT4               BR TO TEST NEXT JQE                 P1046000
         LTR   R1,R1                 ELSE SET CC                        P1047000
         BR    LINK                   AND RETURN                        P1048000
         SPACE 1                                                        P1049000
         CNOP  0,8                                                      P1050000
QLOOP    BCTR  R15,0               IF ANOTHER JOB QUEUE,                P1051000
         BCT   R15,QLOC             BR TO SCAN IT                       P1052000
         BR    LINK                  ELSE RETURN WITH CC = 0            P1053000
         SPACE 1                                                        P1054000
         EJECT                                                          P1055000
*********************************************************************** P1056000
*                                                                     * P1057000
*        $QCKPT - SCHEDULE CHECKPOINT FOR ALTERED JQE                 * P1058000
*                                                                     * P1059000
*        R0    = WORK, UNPREDICTABLE ON EXIT                          * P1060000
*        R1    = JQE ADDRESS                                          * P1061000
*        R11   = HCT ADDRESS (BASE1)                                  * P1062000
*        R13   = PCE ADDRESS (SAVE)                                   * P1063000
*        R15   = RETURN ADDRESS                                       * P1064000
*                                                                     * P1065000
*********************************************************************** P1066000
         SPACE 1                                                        P1067000
$QCKPT   STM   WA,WB,PCEWA         PRESERVE REGISTERS                   P1068000
         LR    WB,R1               POINT TO MODIFIED ELEMENT            P1069000
         B     QPOST3              CAUSE CHECKPOINT                     P1070000
         SPACE 1                                                        P1071000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1072000
QCKPT    S     R1,$JOBQPTR         MAKE POINTER RELATIVE       @OZ20010 P1073000
         BMR   R15                 RETURN IF BELOW JOB QUEUE            P1074000
         C     R1,$JOBQSIZ         CHECK FOR WITHIN JOB QUEUE        R4 P1075000
         BHR   R15                 RETURN IF ABOVE QUEUE                P1076000
         LR    R0,R1               REMEMBER JQE OFFSET         @OZ20010 P1076100
         SRL   R1,12               DIVIDE BY LENGTH OF A PAGE  @OZ20010 P1077000
         AL    R1,$CTLB            SET JQE'S                   @OZ27300 P1078000
         MVI   0(R1),FF             CHECKPOINT CONTROL BYTE    @OZ27300 P1079000
         LR    R1,R0               RELOAD JQE OFFSET           @OZ20010 P1079100
         LA    R1,JQELNGTH-1(,R1)  LOCATE END OF JQE           @OZ20010 P1079200
         SRL   R1,12               DIVIDE BY PAGE LENGTH       @OZ20010 P1079300
         AL    R1,$CTLB            SET JQE'S                   @OZ27300 P1079400
         MVI   0(R1),FF             CHECKPOINT CONTROL BYTE    @OZ27300 P1079500
         BR    R15                 RETURN                               P1080000
         EJECT                                                          P1081000
*********************************************************************** P1082000
*                                                                     * P1083000
*        $QMOD - MODIFY JOB QUEUE CHAIN FIELD FOR ALTERED JQE         * P1084000
*                                                                     * P1085000
* REGISTERS                                                           * P1086000
*                                                                     * P1087000
*        R0    = QUEUE TYPE, UNPREDICTABLE ON EXIT                    * P1088000
*        R1    = JQE ADDRESS                                          * P1089000
*        R11   = HCT ADDRESS (BASE1)                                  * P1090000
*        R13   = PCE ADDRESS (SAVE)                                   * P1091000
*        R14   = RETURN ADDRESS                                       * P1092000
*        R15   = WORK, UNPREDICTABLE ON EXIT                          * P1093000
*                                                                     * P1094000
* NOTES                                                               * P1095000
*                                                                     * P1096000
*        CHECKPOINT MUST NOT BE ACTIVE ON ENTRY                       * P1097000
*        THIS ROUTINE IS USED TO ALTER QUEUE TYPE AND PRIORITY        * P1098000
*        IF ONLY QUEUE TYPE IS TO BE ALTERED $QPUT SHOULD BE USED     * P1099000
*                                                                     * P1100000
*********************************************************************** P1101000
         SPACE 1                                                        P1102000
         CNOP  0,8                                                      P1103000
$QMOD    LA    R1,0(,R1)           CLEAR HI-ORDER BYTE                  P1104000
        $QSUSE TYPE=TEST           MAY QUEUES BE USED...             R4 P1105000
         BNZ   Q01                 BR IF NO (LOGIC ERROR)               P1106000
         SPACE 1                                                        P1107000
QMOD     ST    R0,PCER0            STORE QUEUE TYPE                  R4 P1108000
         SPACE 1                                                     R4 P1119000
QMODA    STM   WA,WB,PCEWA         PRESERVE WORK REGISTERS           R4 P1120000
         NI    JQEFLAGS,255-QUEBUSY  RESET BUSY BITS                    P1121000
         BAL   R15,QREM            REMOVE JQE FROM CURRENT QUEUE        P1122000
         L     R0,PCER0            RESTORE NEW QUEUE TYPE               P1123000
         B     QADD                 AND BR TO ADD JQE TO NEW QUEUE      P1124000
         SPACE 1                                                        P1125000
         DROP  R1                  KILL JQE ADDRESSABILITY              P1126000
         EJECT                                                          P1127000
*********************************************************************** P1128000
*                                                                     * P1129000
*        $QSUSE - REQUEST ACCESS TO SHARED QUEUES                     * P1130000
*                                                                     * P1131000
*        R15   = RETURN ADDRESS                                       * P1132000
*        ALL OTHER REGISTERS ARE PRESERVED                            * P1133000
*                                                                     * P1134000
*        EXITS BY BRANCHING INTO THE $WAIT ROUTINE                    * P1135000
*                                                                     * P1136000
*********************************************************************** P1137000
         SPACE 1                                                     R4 P1138000
         CNOP  0,8                                                      P1139000
$QSUSES  DS    0H                  $QSUSE SAVE=YES ENTRY             R4 P1140000
         CLM   SAVE,7,$COMMPCE+1   THIS THE CMD PROCESSOR...   @OZ27300 P1140200
         BE    QSUCOMSV            BR IF YES                   @OZ27300 P1140500
         STM   R14,R12,PCELINK     SAVE CALLER'S REGISTERS     @OZ27300 P1140700
         B     QSUPOST             BR TO CONTINUE              @OZ27300 P1141000
         SPACE 1                                               @OZ27300 P1141200
$QSUSE   DS    0H                  $QSUSE SAVE=NO ENTRY        @OZ27300 P1141500
         ST    R15,PCER15          SAVE RETURN ADDRESS         @OZ27300 P1141700
         CLM   SAVE,7,$COMMPCE+1   THIS THE CMD PROCESSOR...   @OZ27300 P1142000
         BE    QSUCOMLD            BR IF YES                   @OZ27300 P1142200
         SPACE 1                                               @OZ27300 P1142500
QSUPOST $POST  $HASPECF,CKPW       WAKE UP CKPT PROCESSOR      @OZ27300 P1142700
         MVI   PCEEWF,$EWFPOST     INHIBIT SPECIFIC $POSTS     @OZ27300 P1143000
         LA    R1,$EWQCKPT-(PCEPCEA-PCEDSECT)  POINT TO PCE 0  @OZ27300 P1143200
         B     $WAITR              $WAIT FOR CKPT RESOURCE     @OZ27300 P1143500
         EJECT                                                 @OZ27300 P1143700
QSUCOMLD LM    R14,R12,PCELINK     LOAD CALLER'S REGISTERS     @OZ27300 P1144000
         SPACE 1                                               @OZ27300 P1144200
QSUCOMSV STM   R14,R12,COMQSUSV    SAVE CALLER'S REGISTERS     @OZ27300 P1144500
         SPACE 1                                               @OZ27300 P1144700
QSUTLOKO L     R1,$JQB             GET JQB ADDRESS             @OZ27300 P1145000
         TM    JQBFLAG2-JQBDSECT(R1),JQB2LOKO Q'S LOCKED OUT...@OZ27300 P1145200
         BO    QSUABORT                       BR IF YES        @OZ27300 P1145500
         OI    $COMMPCE,X'40'      SHOW COMM WAITING FOR CKPT  @OZ27300 P1145700
        $POST  $HASPECF,CKPW       WAKE UP CKPT PROCESSOR      @OZ27300 P1146000
        $WAIT  CKPT,INHIBIT=NO     AWAIT CHECKPOINT COMPLETION @OZ27300 P1146200
         NI    $COMMPCE,FF-X'40'   RESET CKPT WAIT BIT         @OZ27300 P1146500
        $QSUSE TYPE=TEST           MAY QUEUES BE USED...       @OZ27300 P1146700
         BNZ   QSUTLOKO            BR IF NO TO TEST LOCKOUT    @OZ27300 P1147000
         LM    R14,R12,COMQSUSV    RESTORE CALLER'S REGISTERS  @OZ27300 P1147200
         STM   R14,R12,PCELINK     RESTORE PCE SAVE AREA       @OZ27300 P1147500
         BR    R15                  AND RETURN TO CALLER       @OZ27300 P1147700
         SPACE 1                                               @OZ27300 P1148000
QSUABORT L     R15,=A(MAPCOMMA)    GET COMMAND PROCESSOR       @OZ27300 P1148500
         L     R15,0(,R15)          INITIAL ENTRY ADDRESS      @OZ27300 P1149000
         LR    BASE2,R15           RELOAD AS BASE ADDRESS      @OZ27300 P1149200
         OI    $COMMPCE,X'20'      INDICATE COMMAND ABORT      @OZ27300 P1149500
         BR    R15                 RE-ENTER HASPCOMM INITIAL'N @OZ27300 P1150000
         TITLE 'HASP UNIT ALLOCATOR / DE-ALLOCATOR'                     P1151000
*********************************************************************** P1152000
*                                                                     * P1153000
*        $GETUNIT - OBTAIN CONTROL OF A HASP DEVICE                   * P1154000
*                                                                     * P1155000
*        R0    = RESERVED, UNPREDICTABLE ON EXIT                      * P1156000
*        R1    = DCT ADDRESS                                          * P1157000
*        R11   = HCT ADDRESS (BASE1)                                  * P1158000
*        R13   = PCE ADDRESS (SAVE)                                   * P1159000
*        R14   = RETURN ADDRESS                                       * P1160000
*        R15   = RESERVED, UNPREDICTABLE ON EXIT                      * P1161000
*                                                                     * P1162000
*********************************************************************** P1163000
         SPACE 1                                                     R4 P1164000
         USING DCTDSECT,R1         PROVIDE DCT ADDRESSABILITY        R4 P1165000
         SPACE 1                                                     R4 P1166000
         CNOP  0,8                                                      P1167000
$GETUNIT DS    0H                                                       P1168000
         TM    DCTSTAT,DCTINUSE+DCTDRAIN+DCTHOLD+DCTCIP+DCTPAUSE       *P1169000
                                   TEST DCT                    @OZ57366 P1169500
         BZ    UNIAVAIL            BRANCH IF AVAILABLE               R4 P1170000
         SR    R0,R0               SET UNSUCCESSFUL CONDITION CODE   R4 P1171000
         BR    LINK                 AND RETURN                       R4 P1172000
         SPACE 3                                                     R4 P1173000
UNIAVAIL OI    DCTSTAT,DCTINUSE    INDICATE DEVICE IS IN USE         R4 P1174000
         LA    R1,0(,R1)           PURIFY DCT ADDRESS                R4 P1175000
         BR    LINK                RETURN TO CALLER                  R4 P1176000
         EJECT                                                          P1177000
*********************************************************************** P1178000
*                                                                     * P1179000
*        $FREUNIT - RELEASE CONTROL OF A HASP DEVICE                  * P1180000
*                                                                     * P1181000
*        R0    = WORK, UNPREDICTABLE ON EXIT                          * P1182000
*        R1    = DCT ADDRESS                                          * P1183000
*        R11   = HCT ADDRESS (BASE1)                                  * P1184000
*        R13   = PCE ADDRESS (SAVE)                                   * P1185000
*        R14   = RETURN ADDRESS                                       * P1186000
*        R15   = WORK, UNPREDICTABLE ON EXIT                          * P1187000
*                                                                     * P1188000
*********************************************************************** P1189000
         SPACE 1                                                     R4 P1190000
         CNOP  0,8                                                      P1191000
UNIFREE  $WAIT BUF                 WAIT FOR BUFFERS TO BE RELEASED      P1192000
         SPACE 1                                                     R4 P1193000
$FREUNIT CLI   DCTBUFCT,0          CHECK BUFFERS ASSOCIATED WITH DCT R4 P1194000
         BNE   UNIFREE             BRANCH IF NOT ZERO                   P1195000
         NI    DCTSTAT,255-DCTINUSE TURN OFF USE BIT                    P1196000
         TM    DCTDEVTP,DCTRJE     TEST DEVICE TYPE                  R4 P1198000
         BZ    UNINORJE            BRANCH IF NOT RJE                R41 P1199000
         TM    MDCTTYPE,DCTPSNA    TEST DEVICE TYPE                 R41 P1203100
         BZ    UNINORDV            BR IF NOT SNA               @OZ20025 P1203200
         L     R15,MDCTICE         PICK UP POTENTIAL ICE ADDRESS    R41 P1203300
         LTR   R15,R15             TEST FOR ICE ADDRESS (PRE-ALLOC) R41 P1203400
         BZ    UNINOICP            BRANCH IF NO ICE PRESENT         R41 P1203500
         SLR   R0,R0               CLEAR REGISTER                   R41 P1203600
         CL    R1,ICERDCT-ICEDSECT(,R15) IS ICE PREALLOCATED        R41 P1203700
         BNE   UNINOICA            NO, BRANCH TO CLEAR DCT PTR      R41 P1203800
         ST    R0,ICERDCT-ICEDSECT(,R15) CLEAR ICE POINTER TO DCT   R41 P1203900
         SPACE 1                                                    R41 P1204000
UNINOICA ST    R0,MDCTICE          CLEAR DCT POINTER TO ICE         R41 P1204100
         SPACE 1                                                    R41 P1204200
UNINOICP TM    DCTDEVTP,DCTDEV     TEST FOR RMT DEVICE              R41 P1204300
         BZ    UNINORDV            NO, SKIP DEVICE RESETS           R41 P1204400
         NI    MDCTSTAT,255-DCTADS RESET DEVICE RELATED FLAGS       R41 P1204500
         SPACE 1                                                    R41 P1204600
UNINORDV NI    MDCTSTAT,255-DCTEOF-DCTPOST-DCTABORT-DCTETX RESET    R41 P1204700
         SPACE 1                                                    R41 P1204800
UNINORJE TM    DCTSTAT,DCTDRAIN    TEST FOR $P COMMAND              R41 P1205000
         BZR   LINK                RETURN IF UNIT NOT DRAINED           P1206000
         ST    LINK,PCESAVEA       SAVE LINK REGISTER                   P1207000
        $ALLOC (R1)                UNALLOCATE THE DEVICE             R4 P1208000
         ST    R1,PCER1            SAVE DCT ADDRESS                  R4 P1209000
         EJECT                                                      R41 P1210000
UNIWTO   MVC   UDRMSG(8),DCTDEVN   SET UP MESSAGE                    R4 P1211000
        $WTO   UDRMSN,L'UDRMSN,WAIT=NO,JOB=NO,  ISSUE DRAIN MSG      R4CP1212000
               ROUTE=$LOG+$UR+$TP,CLASS=$TRIVIA,PRI=$ST              R4 P1213000
         L     R1,PCER1            RESTORE DCT ADDRESS               R4 P1214000
         BNZ   UNIRETRN            RETURN IF $WTO SUCCESSFUL   @OZ32567 P1215000
         CLI   PCEID+1,PCEMLMID    CHECK FOR LINE MANAGER PCE  @OZ32567 P1215100
         BNE   UNIWAIT             BR IF NOT LINE MANAGER      @OZ32567 P1215200
         SPACE 1                                               @OZ32567 P1215300
UNIRETRN L     LINK,PCESAVEA       RESTORE RETURN ADDRESS      @OZ32567 P1216000
         BR    LINK                  AND RETURN                      R4 P1217000
         SPACE 1                                                     R4 P1218000
UNIWAIT $WAIT  CMB                 WAIT FOR MESSAGE BUFFER           R4 P1219000
         B     UNIWTO              TRY AGAIN TO ISSUE MESSAGE        R4 P1220000
         SPACE 1                                                     R4 P1221000
         DROP  R1                  KILL DCT ADDRESSABILITY              P1222000
         SPACE 1                                                        P1223000
UDRMSN   $MSG  097,'******** IS DRAINED',SYMB=UDRMSG                    P1224000
                                   PRINT OFF - SECTION DELETED @OZ20010 P1225000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1226000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1227000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1228000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1229000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1230000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1231000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1232000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1233000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1234000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1235000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1236000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1237000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1238000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1239000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1240000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1240100
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1240200
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1240300
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1240400
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1240500
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1240600
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1240700
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1240800
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1240900
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1241000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1241100
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1241200
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1242000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1243000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1244000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1245000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1246000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1247000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1248000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1249000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1250000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1251000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1252000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1253000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1254000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1255000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1256000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1257000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1258000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1259000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1260000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1261000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1262000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1263000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1264000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1265000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1266000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1267000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1268000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1269000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1270000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1271000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1272000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1273000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1274000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1275000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1276000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1277000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1278000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1279000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1280000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1281000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1282000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1283000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1284000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1285000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1286000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1287000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1288000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1289000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1290000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1291000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1292000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1293000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1294000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1295000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1296000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1297000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1298000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1299000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1300000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1301000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1302000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1303000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1304000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1305000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1306000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1307000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1308000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1309000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1310000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1311000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1312000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1313000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1314000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1315000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1316000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1317000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1318000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1319000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1320000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1321000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1322000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1323000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1324000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1325000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1326000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1327000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1328000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1329000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1330000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1331000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1332000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1333000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1334000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1335000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1336000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1337000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1338000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1339000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1340000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1341000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1342000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1343000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1344000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1345000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1346000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1347000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1348000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1349000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1350000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1351000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1352000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1353000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1354000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1355000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1356000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1357000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1358000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1359000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1360000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1361000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1362000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1363000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1364000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1365000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1366000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1367000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1368000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1369000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1370000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1371000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1372000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1373000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1374000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1375000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1376000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1377000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1378000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1379000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1380000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1381000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1382000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1383000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1384000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1385000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1386000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1387000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P1388000
                                   PRINT ON -- SECTION DELETED @OZ20010 P1389000
                                   PRINT ON -- SECTION DELETED @OZ20010 P1390000
         TITLE 'HASP REMOVE SMF BUFFER FROM QUEUE ROUTINE'              P1391000
*********************************************************************** P1392000
*                                                                     * P1393000
* FUNCTION/OPERATION-                                                 * P1394000
*                                                                     * P1395000
*      THE FOLLOWING SUBROUTINE TAKES A HASP SMF BUFFER FROM          * P1396000
*      $SMFFREE FREE BUFFER POOL AND RETURNS. IF THERE ARE            * P1397000
*      NO BUFFERS AVAILABLE THE PROCESSOR IS $WAITED FOR SMF,         * P1398000
*      WHICH IS EQUATED TO CMB, UNTIL A BUFFER IS AVAILABLE,          * P1399000
*      UNLESS THE CALLING ROUTINE REQUESTS IMMEDIATE RETURN.          * P1400000
*      GOTTEN BUFFER IS CLEARED TO ZERO PRIOR TO RETURN.              * P1401000
*                                                                     * P1402000
* INPUT -                                                             * P1403000
*                                                                     * P1404000
*      R14 - RETURN ADDRESS OF CALLING ROUTINE                        * P1405000
*      R1  - ZERO     = DO NOT WAIT IF NO BUFFERS AVAILABLE           * P1406000
*            NON-ZERO = $WAIT SMF IF NO BUFFERS AVAILABLE             * P1407000
*                                                                     * P1408000
* OUTPUT -                                                            * P1409000
*      R1  - ZERO = NO BUFFER AVAILABLE                               * P1410000
*            NON-ZERO = BUFFER ADDRESS                                * P1411000
*      CC  - SET BY LTR R1,R1 PRIOR TO RETURN                         * P1412000
*                                                                     * P1413000
*********************************************************************** P1414000
         SPACE 1                                                        P1415000
         CNOP  0,8                                                      P1416000
SWAITBF $WAIT  SMF                                                      P1417000
         SPACE 1                                                        P1418000
$GETSMFB OC    $SMFFREE,$SMFFREE   TEST FOR AVAILABLE BUFFER            P1419000
         BNZ   SGETBUF             CONTINUE IF YES                      P1420000
         OI    $RESHORT,$SMFMSB    SET WAITING SMF SWITCH      @OZ32879 P1420500
         LTR   R1,R1               TEST FOR WAIT FOR BUFFER             P1421000
         BNZ   SWAITBF             BR IF YES                            P1422000
         BR    LINK                 ELSE RETURN TO CALLER               P1423000
         SPACE 1                                                        P1424000
         CNOP  0,8                                                      P1425000
SGETBUF  L     R1,$SMFFREE         CHAIN STARTER                        P1426000
         STM   WA,WB,$POSTSAV      SAVE WORK REGISTERS               R4 P1427000
         SPACE 1                                                        P1428000
SRECYCLE L     R15,0(,R1)          NEXT CHAIN POINTER                   P1429000
         CS    R1,R15,$SMFFREE     UPDATE CHAIN                         P1430000
         BNE   SRECYCLE            TRY AGAIN IF NOT SUCCESSFUL          P1431000
         LA    WB,SMFLNG           CLEAR                             R4 P1432000
         LR    WA,R1                ENTIRE                           R4 P1433000
         SLR   R15,R15               SMF                             R4 P1434000
         MVCL  WA,R14                 BUFFER                         R4 P1435000
         LM    WA,WB,$POSTSAV      RESTORE WORK REGISTERS            R4 P1436000
         LTR   R1,R1               SET CONDITION CODE                   P1437000
         BR    LINK                RETURN                               P1438000
         TITLE 'HASP PUT SMF BUFFER ON BUSY QUEUE ROUTINE'              P1439000
*********************************************************************** P1440000
*                                                                     * P1441000
* FUNCTION/OPERATION -                                                * P1442000
*                                                                     * P1443000
*      THE FOLLOWING SUBROUTINE PLACES A SMF BUFFER AT BEGINNING      * P1444000
*      OF THE $SMFBUSY CHAIN AND ISSUES AN OS POST FOR HASPACCT       * P1445000
*      SUBTASK TO PROCESS SMF RECORD.                                 * P1446000
*                                                                     * P1447000
* INPUT  R1    = HASP SMF BUFFER ADDRESS                              * P1448000
*        R14   = RETURN ADDRESS                                       * P1449000
*                                                                     * P1450000
* OUTPUT       = NONE                                                 * P1451000
*                                                                     * P1452000
*********************************************************************** P1453000
         SPACE 1                                                        P1454000
         CNOP  0,8                                                      P1455000
$QUESMFB L     R15,$SMFBUSY        GRAB HEAD CHAIN POINTER              P1456000
         SPACE 1                                                        P1457000
SUPDTPTR ST    R15,0(,R1)          COMPLETE NEW CHAIN                   P1458000
         CS    R15,R1,$SMFBUSY     RESTORE HEAD CHAIN PTR. WITH         P1459000
         BNE   SUPDTPTR               NEW ADDRESS                       P1460000
         LA    R1,$ACCTECB         POST HASPACCT SUBTASK FOR WORK       P1461000
         POST  (1)                      FOR WORK                        P1462000
         BR    LINK                RETURN                               P1463000
         TITLE 'HASP DIRECT ACCESS PURGE ROUTINE'                       P1464000
*********************************************************************** P1465000
*                                                                     * P1466000
*        $PURGER - RELEASE SPOOL SPACE TO THE MASTER TRACK GROUP MAP  * P1467000
*                                                                     * P1468000
*        R0    = RESERVED, UNPREDICTABLE ON EXIT                      * P1469000
*        R1    = USER TRACK GROUP MAP TGMDSECT                        * P1470000
*        R11   = HCT ADDRESS (BASE1)                                  * P1471000
*        R13   = PCE ADDRESS (SAVE)                                   * P1472000
*        R14   = RETURN ADDRESS                                       * P1473000
*        R15   = RESERVED, UNPREDICTABLE ON EXIT                      * P1474000
*                                                                     * P1475000
*********************************************************************** P1476000
         SPACE 1                                                     R4 P1477000
         CNOP  0,8                                                   R4 P1478000
$PURGER $TRACE                     TRACE THIS ACTIVITY               R4 P1479000
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA R4 P1480000
         STM   LINK,R1,PCELINK     SAVE REGISTERS                    R4 P1481000
         LA    R15,TGMAP-TGMDSECT(,R1)  POINT TO USER MAP            R4 P1482000
         L     R0,$CYLMAPL         GET LENGTH OF TRACK GROUP MAP     R4 P1483000
         L     R1,$TGMAP           FREE USER'S TRACKS FROM           R4 P1484000
        $VFL   OC,(R1),(R15),(R0)   MASTER TRACK GROUP MAP           R4 P1485000
         L     R1,PCER1              RESTORE POINTER                 R4 P1486000
         LA    R0,TGMAP-TGMDSECT(,R1) TO USER MAP                    R4 P1487000
         L     R1,$CYLMAPL         CLEAR USER                        R4 P1488000
         SLR   R15,R15              TRACK GROUP MAP                  R4 P1489000
         MVCL  R0,R14                TO ZEROES                       R4 P1490000
        $POST  $HASPECF,CKPW       REQUEST CHECKPOINT                R4 P1491000
         LM    LINK,R1,PCELINK     RESTORE REGISTERS                 R4 P1492000
         BR    LINK                 AND RETURN                       R4 P1493000
         TITLE 'HASP CONTROL SERVICE PROGRAM LITERAL POOL'           R4 P1494000
         SPACE 5                                                     R4 P1495000
*********************************************************************** P1496000
*                                                                     * P1497000
*        HASP CONTROL SERVICE PROGRAM LITERAL POOL                    * P1498000
*                                                                     * P1499000
*********************************************************************** P1500000
         SPACE 5                                                     R4 P1501000
         LTORG                                                       R4 P1502000
         TITLE 'HASP BASE1-ADDRESSABLE PATCH SPACE'                  R4 P1503000
*********************************************************************** P1504000
*                                                                     * P1505000
*        HASP BASE1 (HCT) ADDRESSABLE PATCH SPACE                     * P1506000
*                                                                     * P1507000
*********************************************************************** P1508000
         SPACE 1                                                     R4 P1509000
         USING HASP+4096,R1        PROVIDE DUMMY ADDRESSABILITY      R4 P1510000
         SPACE 1                                                     R4 P1511000
$PATCHSP $PATCHSP 300              GENERATE PATCH SPACE              R4 P1512000
         SPACE 1                                                     R4 P1513000
         DROP  R1                  KILL DUMMY ADDRESSABILITY         R4 P1514000
         SPACE 1                                                     R4 P1515000
         ORG   HASP+4094           OVERLAY NON-ADDRESSABLE SPACE     R4 P1516000
         TITLE 'HASP JOB QUEUES INDEX TABLE'                         R4 P1517000
*********************************************************************** P1518000
*                                                                     * P1519000
*        THIS TABLE IS USED BY THE HASP JOB QUEUE MANAGEMENT          * P1520000
*        ROUTINES TO LOCATE THE OFFSET OF THE JOB QUEUE HEADER        * P1521000
*        (RELATIVE TO $JQHEADS-2) BASED UPON THE JQETYPE FIELD.       * P1522000
*        AN OFFSET OF ZERO IS INTERPRETED TO MEAN THAT NO SUCH        * P1523000
*        QUEUE HEADER EXISTS.                                         * P1524000
*                                                                     * P1525000
*********************************************************************** P1526000
         SPACE 5                                                     R4 P1527000
$QINDEX  DC    AL1(2)                                      $PURGE    R4 P1528000
         DC    AL1(4)                                      $HARDCPY  R4 P1529000
         DC    AL1(6,0)                                    $OUTPUT   R4 P1530000
         DC    AL1(8,0,0,0)                                $RECEIVE  R4 P1531000
         DC    AL1(10),7AL1(0)                             $SETUP    R4 P1532000
         DC    AL1(12),15AL1(0)                            $XMIT     R4 P1533000
         DC    AL1(14),31AL1(0)                            $INPUT    R4 P1534000
         DC    AL1(16)                                     $XEQ      R4 P1535000
         DC    AL1(24,26,28,30,32,34,36,38,40),6AL1(0)     CLASS A-I R4 P1536000
         DC    AL1(20)                                     STC CLASS R4 P1537000
         DC    AL1(42,44,46,48,50,52,54,56,58),6AL1(0)     CLASS J-R R4 P1538000
         DC    AL1(22,0)                                   TSU CLASS R4 P1539000
         DC    AL1(60,62,64,66,68,70,72,74),6AL1(0)        CLASS S-Z R4 P1540000
         DC    AL1(76,78,80,82,84,86,88,90,92,94),6AL1(0)  CLASS 0-9 R4 P1541000
         DC    AL1(18),127AL1(0)                           $DUMMY    R4 P1542000
         TITLE 'HASP ENQUEUE / DEQUEUE MANAGEMENT'             @OZ35278 P1542020
***************************************************************@OZ35278 P1542040
*                                                              @OZ35278 P1542060
*        $RESERVE - RESERVE SHARED CHECKPOINT VOLUME           @OZ35278 P1542080
*                                                              @OZ35278 P1542100
*        R11   - HCT ADDRESS (BASE1)                           @OZ35278 P1542120
*        R13   - PCE ADDRESS (SAVE)                            @OZ35278 P1542140
*        R14   - RETURN ADDRESS                                @OZ35278 P1542160
*        R15   - ENTRY ADDRESS                                 @OZ35278 P1542180
*                                                              @OZ35278 P1542200
* OUTPUT       - CC     ZERO IF RESERVE OBTAINED               @OZ35278 P1542220
*                CC NON-ZERO IF RESERVE NOT OBTAINED           @OZ35278 P1542240
*                                                              @OZ35278 P1542260
***************************************************************@OZ35278 P1542280
         SPACE 1                                               @OZ35278 P1542300
         ENTRY $RESERVE            PROVIDE $RESERVE ENTRY      @OZ35278 P1542320
         USING $RESERVE,BASE2      PROVIDE LOCAL ADDRESSABILITY@OZ35278 P1542340
         SPACE 1                                               @OZ35278 P1542360
$RESERVE STM   LINK,R12,PCELINK    SAVE CALLER'S REGISTERS     @OZ35278 P1542380
         LR    BASE2,R15           RELOAD BASE ADDRESS         @OZ35278 P1542400
         LR    WA,R14              SAVE WAIT INDICATOR         @OZ35278 P1542420
         MVI   $RSVECB,0           CLEAR WAIT ECB              @OZ35278 P1542440
         RESERVE ,MF=(E,RSVLIST)   REQUEST CHECKPOINT RESERVE  @OZ35278 P1542460
         LTR   R15,R15             TEST RETURN CODE            @OZ35278 P1542480
         BZ    RSVEXIT             BR IF OBTAINED RESERVE      @OZ35278 P1542500
         CLI   3(R15),8            RESERVED ALREADY... (SET CC)@OZ35278 P1542520
         SPACE 1                                               @OZ35278 P1542540
RSVEXIT  LM    LINK,R12,PCELINK    RESTORE CALLER'S REGISTERS  @OZ35278 P1542560
         BR    LINK                 AND RETURN                 @OZ35278 P1542580
         SPACE 1                                               @OZ35278 P1542600
RSVLIST  RESERVE ($CKPTVOL,$DSNPRFX,E,8,SYSTEMS),              @OZ35278XP1542620
               UCB=$CKPTUCB,ECB=$RSVECB,MF=L                   @OZ35278 P1542640
         SPACE 1                                               @OZ35278 P1542660
         DROP  BASE2               KILL LOCAL ADDRESSABILITY   @OZ35278 P1542680
         EJECT                                                 @OZ35278 P1542700
***************************************************************@OZ35278 P1542720
*                                                              @OZ35278 P1542740
*        $RELEASE - RELEASE SHARED CHECKPOINT VOLUME           @OZ35278 P1542760
*                                                              @OZ35278 P1542780
*        R11   - HCT ADDRESS (BASE1)                           @OZ35278 P1542800
*        R13   - PCE ADDRESS (SAVE)                            @OZ35278 P1542820
*        R14   - RETURN ADDRESS                                @OZ35278 P1542840
*        R15   - ENTRY ADDRESS                                 @OZ35278 P1542860
*                                                              @OZ35278 P1542880
***************************************************************@OZ35278 P1542900
         SPACE 1                                               @OZ35278 P1542920
         ENTRY $RELEASE            PROVIDE $RELEASE ENTRY      @OZ35278 P1542940
         USING $RELEASE,BASE2      PROVIDE LOCAL ADDRESSABILITY@OZ35278 P1542960
         SPACE 1                                               @OZ35278 P1542980
$RELEASE STM   LINK,R12,PCELINK    SAVE CALLER'S REGISTERS     @OZ35278 P1543000
         LR    BASE2,R15           RELOAD BASE ADDRESS         @OZ35278 P1543020
         DEQ   ,MF=(E,DEQLIST)     RELEASE CKPT RESERVE        @OZ35278 P1543040
         LM    LINK,R12,PCELINK    RESTORE CALLER'S REGISTERS  @OZ35278 P1543100
         BR    LINK                 AND RETURN                 @OZ35278 P1543120
         SPACE 1                                               @OZ35278 P1543140
DEQLIST  DEQ   ($CKPTVOL,$DSNPRFX,8,SYSTEMS),UCB=$CKPTUCB,MF=L @OZ35278 P1543160
         SPACE 1                                               @OZ35278 P1543180
         DROP  BASE2               KILL LOCAL ADDRESSABILITY   @OZ35278 P1543200
         TITLE 'HASP BRANCH-ENTRY XM POST ROUTINE'             @OZ35278 P1543220
*********************************************************************** P1544000
*                                                                     * P1545000
*        $XMPOST - PERFORM BRANCH-ENTRY XM POST                       * P1546000
*                                                                     * P1547000
* INPUT  R1    - ADDRESS OF 3-WORD POST ELEMENT                       * P1548000
*                                                                     * P1549000
*                   +0    ECB ADDRESS                                 * P1550000
*                   +4    ASCB ADDRESS                                * P1551000
*                   +8    ERROR ROUTINE ADDRESS                       * P1552000
*                                                                     * P1553000
*        R13   - PCE ADDRESS                                          * P1554000
*        R14   - RETURN ADDRESS                                       * P1555000
*        R15   - ENTRY ADDRESS                                        * P1556000
*                                                                     * P1557000
*********************************************************************** P1558000
         SPACE 1                                                     R4 P1559000
         ENTRY $XMPOSTR            PROVIDE ENTRY FOR $XMPOST ROUTINE R4 P1560000
         USING $XMPOSTR,R15        PROVIDE LOCAL ADDRESSABILITY      R4 P1561000
         SPACE 1                                                     R4 P1562000
         CNOP  0,8                                                   R4 P1563000
$XMPOSTR STM   LINK,R12,PCELINK    SAVE CALLER'S REGISTERS           R4 P1564000
         L     R11,0(,R1)          GET ADDRESS OF ECB TO BE POSTED   R4 P1565000
         L     R2,0(,R11)          THEN LOAD THE ECB                 R4 P1566000
         SPACE 1                                                     R4 P1567000
XMTEST   LTR   R2,R2               IF WAIT HAS BEEN ISSUED,          R4 P1568000
         BM    XMPOST               BR TO SLOW-POST THE ECB          R4 P1569000
         L     R3,=A(X'40000000')    ELSE GET POST CODE              R4 P1570000
         CS    R2,R3,0(R11)           AND FAST-POST THE ECB          R4 P1571000
         BNE   XMTEST              BR IF UNSUCCESSFUL TO TRY AGAIN   R4 P1572000
         LM    WA,R11,PCEWA         ELSE RESTORE CALLER'S REGISTERS  R4 P1573000
         BR    LINK                  AND RETURN                      R4 P1574000
         SPACE 1                                                     R4 P1575000
         CNOP  0,8                                                   R4 P1576000
XMPOST   LR    R9,SAVE             SAVE CALLER'S SAVE AREA ADDRESS   R4 P1577000
         ICM   R11,8,=AL1(X'80')   SET HI-ORDER BIT FOR XMPOST       R4 P1578000
         L     R12,8(,R1)          GET ADDRESS OF ERROR ROUTINE      R4 P1579000
         L     R13,4(,R1)          GET ADDRESS OF RELATED ASCB       R4 P1580000
         L     R10,=A(X'40000000') SET XMPOST CODE                   R4 P1581000
         L     R15,CVTPTR          GET CVT ADDRESS                   R4 P1582000
         L     R15,CVT0PT01-CVT(,R15) GET ADDR OF BR ENTRY TO XMPOST R4 P1583000
         MODESET EXTKEY=ZERO       SET PROTECT KEY FOR XMPOST        R4 P1584000
         BALR  LINK,R15            ENTER XMPOST ROUTINE              R4 P1585000
         MODESET EXTKEY=HASP       RESTORE HASP'S PROTECT KEY        R4 P1586000
         LR    SAVE,R9             RESTORE CALLER'S SAVE AREA ADDR   R4 P1587000
         LM    LINK,R12,PCELINK    RESTORE CALLER'S REGISTERS        R4 P1588000
         BR    LINK                 AND RETURN                       R4 P1589000
         SPACE 1                                                     R4 P1590000
         DROP  R15                 KILL LOCAL ADDRESSABILITY         R4 P1591000
         TITLE 'HASP VIRTUAL PAGE SERVICES ROUTINES'                 R4 P1592000
*********************************************************************** P1593000
*                                                                     * P1594000
*        PGRLSE (BRANCH ENTRY)     PAGE RELEASE ROUTINE               * P1595000
*        PGFREE (BRANCH ENTRY)     PAGE FREE ROUTINE                  * P1596000
*        PGFIX  (BRANCH ENTRY)     PAGE FIX ROUTINE                   * P1597000
*                                                                     * P1598000
* INPUT  R0    - PAGE AREA LENGTH                                     * P1599000
*        R1    - ADDRESS OF 1ST BYTE OF PAGE AREA                     * P1600000
*        R2    - ADDRESS OF WAIT ECB (PGFIX ONLY) - NOTE - CALLER     * P1601000
*                MUST DO OWN WAIT BASED ON RC RETURNED IN R15         * P1602000
*        R11   - HCT ADDRESS (BASE1)                                  * P1603000
*        R14   - RETURN ADDRESS                                       * P1604000
*        R15   - ENTRY ADDRESS                                        * P1605000
*                                                                     * P1606000
* OUTPUT       - RETURN CODE IN R15                                   * P1607000
*                                                                     * P1608000
* NOTE   -     ONLY 1ST 32 BYTES OF $CSAVREG MAY BE USED BY THIS RTN  * P1609000
*                                                                     * P1610000
*********************************************************************** P1611000
         SPACE 1                                                     R4 P1612000
         ENTRY $PGRLSER            SET UP ENTRY POINT                R4 P1613000
         USING $PGRLSER,R15        LOCAL ADDRESSABILITY              R4 P1614000
         SPACE 1                                                     R4 P1615000
         CNOP  0,8                                                   R4 P1616000
$PGRLSER $TRACE                                                      R4 P1617000
         STM   R14,R5,$CSAVREG     SAVE WORK REGISTERS               R4 P1618000
         SLR   R5,R5               SHOW NO ECB                       R4 P1619000
         LA    R1,0(,R1)           CLEAR PARAMETER VALUE       @OZ20010 P1620000
         LA    R15,$PGFIXR         RESET BASE ADDRESS AND BRANCH     R4 P1621000
         B     PGRTNRLS-$PGFIXR(,R15)  TO MVS PAGE SERVICES    @OZ20010 P1622000
         SPACE 1                                                     R4 P1623000
         ENTRY $PGFREER            SET UP ENTRY POINT                R4 P1624000
         USING $PGFREER,R15        LOCAL ADDRESSABILITY              R4 P1625000
         SPACE 1                                                     R4 P1626000
         CNOP  0,8                                                   R4 P1627000
$PGFREER $TRACE                                                      R4 P1628000
         STM   R14,R5,$CSAVREG     SAVE WORK REGISTERS               R4 P1629000
         SLR   R5,R5               SHOW NO ECB                       R4 P1630000
         ICM   R1,8,=AL1(X'20')    FLAG1 = PGFREE                    R4 P1631000
         LA    R15,$PGFIXR         RESET BASE ADDRESS AND BRANCH     R4 P1632000
         B     PGRTN-$PGFIXR(,R15)  TO MVS VIRTUAL PAGE SERVICES     R4 P1633000
         EJECT                                                 @OZ27300 P1634000
         ENTRY $PGFIXR             SET UP ENTRY POINT                R4 P1635000
         USING $PGFIXR,R15         LOCAL ADDRESSABILITY              R4 P1636000
         SPACE 1                                                     R4 P1637000
         CNOP  0,8                                                   R4 P1638000
$PGFIXR  $TRACE                                                      R4 P1639000
         STM   R14,R5,$CSAVREG     SAVE WORK REGISTERS               R4 P1640000
         LR    R5,R2               ADDR OF WAIT ECB                  R4 P1641000
         XC    0(4,R5),0(R5)       CLEAR ECB                         R4 P1642000
         ICM   R1,8,=AL1(X'42')    FLAG1 = LONG PGFIX          @OZ27300 P1642100
         LTR   LINK,LINK           RELEASE=Y...                @OZ27300 P1642200
         BM    PGRTNRLS            BR IF YES TO BYPASS PAGE-IN @OZ27300 P1643000
         CLI   0(R1),*-*           FETCH PAGE INTO STORAGE           R4 P1644000
         SPACE 1                                               @OZ27300 P1645000
PGRTN    LTR   LINK,LINK           RELEASE=Y...                @OZ20010 P1645100
         BNM   *+8                 BRANCH IF NOT               @OZ20010 P1645200
PGRTNRLS O     R1,=A(X'08000000')  SET RELEASE OPTION          @OZ20010 P1645300
         L     R4,$HASPTCB         R4= HASP'S TCB ADDRESS      @OZ20010 P1646000
         LR    R3,R1               R3 = A(1ST BYTE OF PAGE AREA)     R4 P1647000
         LR    R2,R0               R2 = ADDRESS OF END OF            R4 P1648000
         ALR   R2,R1                     PAGE AREA (+1)              R4 P1649000
         ICM   R2,8,=AL1(X'80')    FLAG2 = END OF SUB-AREA LIST      R4 P1650000
         MODESET EXTKEY=ZERO       SET PROTECT KEY FOR PG SERVICES   R4 P1651000
PGO      SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,   GET LOCAL LOCK     R4CP1652000
               REGS=USE,RELATED=($PGSRVC,HASPNUC(PGR))               R4 P1653000
         LR    R0,R5               ADDR OF ECB, OR ZERO              R4 P1654000
         LR    R1,R3               RE-LOAD R1 FOR PG SERVICES        R4 P1655000
         L     R15,CVTPTR          GET ADDRESS OF BRANCH ENTRY TO    R4 P1656000
         L     R15,CVTVPSIB-CVT(,R15)   MVS VIRTUAL PAGE SERVICES    R4 P1657000
         BALR  R14,R15             AND GO DO IT                      R4 P1658000
         ST    R15,$CSAVREG+4      PUT RC IN R15 IN SAVE AREA        R4 P1659000
         EJECT                                                 @OZ27300 P1660000
PGR      SETLOCK RELEASE,TYPE=LOCAL,    GIVE UP LOCAL LOCK           R4CP1664000
               REGS=USE,RELATED=($PGSRVC,HASPNUC(PGO))         @OZ20010 P1665000
         MODESET EXTKEY=HASP       GET BACK OUR PROTECT KEY          R4 P1666000
         L     R15,$PGFIX          RELOAD BASE REGISTER             R41 P1666100
         LR    R14,R3              IF PGFIX REQUEST,           @OZ27300 P1666200
         ALR   R14,R14              REFERENCE PAGE             @OZ27300 P1666300
         LTR   R14,R14               TO ENSURE                 @OZ27300 P1666400
         BNM   PGRET                  FIX HAS                  @OZ27300 P1666450
         CLI   0(R3),*-*               COMPLETED               @OZ27300 P1666500
         SPACE 1                                               @OZ27300 P1667000
PGRET    LM    R14,R5,$CSAVREG     RESTORE WORK REGISTERS      @OZ27300 P1667500
         BR    R14                  AND RETURN                       R4 P1668000
         SPACE 1                                                     R4 P1669000
         DROP  R15                 KILL LOCAL ADDRESSABILITY         R4 P1670000
         TITLE 'HASP DIRECT ACCESS SPACE ALLOCATION ROUTINE'         R4 P1671000
*********************************************************************** P1672000
*                                                                     * P1673000
* $TRACK - HASP VERSION OF SPOOL SPACE ALLOCATION                     * P1674000
*                                                                     * P1675000
*                                                                     * P1676000
* FUNCTION ---                                                        * P1677000
*                                                                     * P1678000
*                                                                     * P1679000
*  (1)  IF CALL IS FOR INITIAL ALLOCATION, A TRACK GROUP              * P1680000
*       IS OBTAINED FROM THE TRACK GROUP BLOCK (TGB) MAINTAINED       * P1681000
*       BY THE JES2 CHECKPOINT PROCESSOR.                             * P1682000
*                                                                     * P1683000
*  (2)  IF CALL IS NOT FOR INITIAL ALLOCATION, AN ATTEMPT             * P1684000
*       IS MADE TO SUPPLY AN MTTR BASED ON THE TRACK CELL (TAB)       * P1685000
*       REFERENCED BY R1.  IF SUCCESSFUL, THE MTTR IS RETURNED        * P1686000
*       IN R1.  IF NOT, WE TRY TO OBTAIN A NEW TRACK CELL FROM        * P1687000
*       THE CURRENT TRACK GROUP.  IF THIS IS SUCCESSFUL, AN           * P1688000
*       MTTR IS RETURNED IN R1.  IF NOT, A SEARCH FOR A NEW TG        * P1689000
*       IS PERFORMED USING THE TGB.                                   * P1690000
*                                                                     * P1691000
*  (3)  IF THE TGB IS EMPTY, THE CALLER IS $WAITED.  THE JES2         * P1692000
*       CHECKPOINT PROCESSOR IS $POSTED TO CAUSE A REFILLING          * P1693000
*       OF THE TGB.                                                   * P1694000
*                                                                     * P1695000
*                                                                     * P1696000
* INPUT ---                                                           * P1697000
*                                                                     * P1698000
*  (1)  R1 CONTAINS THE ADDRESS OF A MASTER TAB (SEE TABDSECT).       * P1699000
*                                                                     * P1700000
*  (2)  THE FIRST WORD OF THE MASTER TAB IS NOT USED.  SINCE          * P1701000
*       THE MASTER TAB IS IN THE IOT, WE CAN USE THE MASTER           * P1702000
*       TAB'S ADDRESS TO GET THE ADDRESS OF THE TGM.  THE             * P1703000
*       SECOND WORD CONTAINS AN MTTR OF THE LAST ALLOCATED            * P1704000
*       BUFFER FROM THE TRACK CELL ASSIGNED TO THE TAB.  THE          * P1705000
*       THIRD WORD CONTAINS A FLAG BYTE TO TELL WHAT KIND OF          * P1706000
*       TAB THIS IS,  THE SUB-PERMUTATION NUMBER ASSOCIATED WITH      * P1707000
*       THE CURRENT TRACK CELL (SEE $STRAK IN HASPSSSM FOR A          * P1708000
*       COMPLETE DISCUSSION), THE MAXIMUM NUMBER OF RECORDS THAT      * P1709000
*       WILL FIT ON A TRACK IN THE CURRENT TRACK CELL, AND THE        * P1710000
*       NBR OF BUFFERS LEFT IN THE TRACK CELL.  IF THE BUFFER         * P1711000
*       COUNT IS 0, AND THE LAST ALLOCATED BUFFER IS 0, THE CALL      * P1712000
*       IS FOR THE INITIAL ALLOCATION OF A BUFFER.                    * P1713000
*                                                                     * P1714000
*                                                                     * P1715000
* OUTPUT ---                                                          * P1716000
*                                                                     * P1717000
*  (1)  R1 CONTAINS AN UPDATED MTTR.  THIS IS THE SAME VALUE AS       * P1718000
*       IS SET IN THE 2ND WORD OF THE INPUT TAB.                      * P1719000
*                                                                     * P1720000
*  (2)  CC IS SET TO ZERO IF A NEW TG HAS BEEN ALLOCATED.             * P1721000
*       CC IS SET TO NON-ZERO IF AN OLD TG HAS BEEN ALLOCATED.        * P1722000
*                                                                     * P1723000
*********************************************************************** P1724000
         EJECT                                                       R4 P1725000
*                                                                    R4 P1726000
*********************************************************************** P1727000
*                                                                     * P1728000
*        $TRACK -- GET A NEW MTTR FOR CALLER                          * P1729000
*                                                                     * P1730000
*********************************************************************** P1731000
*                                                                     * P1732000
         SPACE 1                                                     R4 P1733000
         USING TABDSECT,R3         TAB ADDRESSABILITY                R4 P1734000
         USING TGMDSECT,R4         TGM ADDRESSABILITY                R4 P1735000
         USING $TRACKR,BASE2       PROVIDE LOCAL ADDRESSABILITY      R4 P1736000
         ENTRY $TRACKR             PROVIDE ENTRY FOR $TRACK ROUTINE  R4 P1737000
         SPACE 1                                                     R4 P1738000
         CNOP  0,8                                                   R4 P1739000
$TRACKR  STM   LINK,R12,PCELINK    SAVE CALLER'S REGISTERS           R4 P1740000
         LR    BASE2,R15           RELOAD BASE                       R4 P1741000
         LR    R3,R1               SETUP TAB DSECT                   R4 P1742000
         LA    R4,IOTTGMAP-IOTMSTAB(,R1)  OBTAIN ADDRESS OF TGM      R4 P1743000
         SPACE 1                                                     R4 P1744000
TRECORD  ICM   R6,1,TABUFCNT       NBR OF BUFFERS LEFT IN TRAKCELL   R4 P1745000
         BZ    TCELL               NONE LEFT - NEED A NEW TRAKCELL   R4 P1746000
         BCTR  R6,0                SUBTRACT 1                        R4 P1747000
         STC   R6,TABUFCNT         SAVE NEW BUFFER COUNT             R4 P1748000
         SLR   R1,R1               ZERO OUT WORK FIELD               R4 P1749000
         IC    R1,$RECINCR         PICK UP &RECINCR                  R4 P1750000
         AL    R1,TABMTTR          PT AT POTENTIAL NEW BUFFER        R4 P1751000
         ST    R1,TABMTTR           AND SAVE ITS MTTR                R4 P1752000
         CLC   TABMTTR+3(1),TABMAXR  HAVE WE GONE OFF THE TRACK...   R4 P1753000
         BNH   T1RETURN            NO - MTTR IS VALID - EXIT         R4 P1754000
         IC    R1,TABSPN           YES - GET CURRENT SUB-PERM NBR    R4 P1755000
         AL    R1,=F'1'            ADD 1 TO IT                       R4 P1756000
         STC   R1,TABSPN           SAVE NEW SUB-PERM NBR             R4 P1757000
         STC   R1,TABMTTR+3        PUT NEW VALUE OF R IN MTTR        R4 P1758000
         SPACE 1                                                     R4 P1759000
T1RETURN ST    R1,PCER1            PUT NEW MTTR IN SAVE AREA         R4 P1760000
         LM    LINK,R12,PCELINK    RESTORE CALLER'S REGISTERS        R4 P1761000
         LTR   R15,R15             SET CONDITION CODE                R4 P1762000
         BR    R14                 RETURN TO CALLER                  R4 P1763000
         SPACE 2                                                     R4 P1764000
TTRKF256 DC    F'256'              FULLWORD CONSTANT OF 256          R4 P1765000
         EJECT                                                       R4 P1766000
         CNOP  0,8                                                   R4 P1767000
TCELL    ICM   R1,15,TGMCELL       MTTR OF NEXT AVAILABLE TRAKCELL   R4 P1768000
         BZ    TBLOBA              NOTHING THERE - 1ST TIME THRU     R4 P1769000
         CLM   R1,1,TGMCYMXM+3     R OF TGMCELL GT MAX R OF TG...    R4 P1770000
         BH    TTRACK              YES - NO MORE TRAKCELLS ON THIS   R4CP1771000
                                   TRACK - NEED A NEW TRACK          R4 P1772000
         SPACE 1                                                     R4 P1773000
TCRETRY  ST    R1,TABMTTR          SAVE MTTR OF 1ST BFR IN NEW TKCEL R4 P1774000
         MVC   TABSPN,TGMCYMXM     GET SUB-PERM FOR NEW TRAKCELL     R4 P1775000
         MVC   TABMAXR,TGMCYMXM+3  GET MAX R OF TRACK GROUP          R4 P1776000
         SLR   R6,R6               ZERO OUT CTR FOR FINDING TABUFCNT R4 P1777000
         SLR   R0,R0               CLEAR WORK REG                    R4 P1778000
         IC    R0,$RECINCR         PICK UP &RECINCR                  R4 P1779000
         SPACE 1                                                     R4 P1780000
TCLOOP   ALR   R1,R0               POINT TO NEXT BUFFER IN TRAKCELL  R4 P1781000
         LA    R6,1(,R6)           ADD 1 TO BUFCNT                   R4 P1782000
         SPACE 1                                                     R4 P1783000
TCCHECK  CLM   R1,1,TGMCYMXM+3     R GONE PAST MAX R FOR THE TG...   R4 P1784000
         BNH   TCLOOPND            NO - HAVE WE REACHED $TCELSIZ     R4 P1785000
         CLC   TGMCYMXM(1),$RECINCR     IS SUB-PERM STILL VALID...   R4 P1786000
         BNL   TCEND               NO - FINISH UP.  NOTE THAT        R4CP1787000
                                   TGMCELL WILL NOW HAVE AN INVALID  R4CP1788000
                                   MTTR (I.E. - R IS TOO LARGE)      R4 P1789000
         IC    R1,TGMCYMXM         PICK UP TGMSPN                    R4 P1790000
         AL    R1,=F'1'            UP IT BY ONE                      R4 P1791000
         STC   R1,TGMCYMXM         SAVE NEW TGMSPN - WE'VE ALSO      R4CP1792000
                                   PUT NEW R IN MTTR OF TGMCELL      R4CP1793000
                                   BEING CALCULATED                  R4 P1794000
         B     TCCHECK             SEE IF R IS STILL VALID           R4 P1795000
         SPACE 1                                                     R4 P1796000
         CNOP  0,8                                                   R4 P1797000
TCLOOPND CLM   R6,1,$TCELSIZ       DO WE HAVE A FULL TRACK CELL...   R4 P1798000
         BL    TCLOOP              NO - COUNT ANOTHER BUFFER         R4 P1799000
         SPACE 1                                                     R4 P1800000
TCEND    ST    R1,TGMCELL          SAVE MTTR OF NEXT AVALIABLE TKCEL R4 P1801000
         BCTR  R6,0                SUBTRACT 1 SINCE 1ST BUFFER IN    R4CP1802000
                                   NEW TRAKCELL IS ALLOCATED         R4 P1803000
         STC   R6,TABUFCNT         SAVE NEW BUFFERS LEFT COUNT       R4 P1804000
         L     R1,TABMTTR          GET READY TO EXIT                 R4 P1805000
         B     T1RETURN             AND LEAVE                        R4 P1806000
         SPACE 1                                                     R4 P1807000
         CNOP  0,8                                                   R4 P1808000
TTRACK   AL    R1,TTRKF256         INCREASE TT IN TGMCELL BY 1       R4 P1809000
         CLM   R1,6,TGMCYMXM+1     OUT OF OUR TRACK GROUP...         R4 P1810000
         BH    TBLOBA              YES - GET A NEW TRACK GROUP       R4 P1811000
         IC    R1,TTRKF256+2       MAKE R IN TGMCELL A 1             R4 P1812000
         MVI   TGMCYMXM,1          SET TGMSPN BACK TO 1              R4 P1813000
         B     TCRETRY             INITIALIZE NEXT TRAKCELL          R4 P1814000
         TITLE 'HASP DA SPACE ALLOCATION (TG FROM TGB)'                 P1815000
*********************************************************************** P1816000
*                                                                     * P1817000
*              ALLOCATE MTTR FROM TGB                                 * P1818000
*                                                                     * P1819000
*********************************************************************** P1820000
         SPACE 1                                                        P1821000
         USING $SVDSECT,R10        PROVIDE SSVT ADDRESSABILITY       R4 P1822000
         SPACE 1                                                     R4 P1823000
         CNOP  4,8                                                   R4 P1824000
TBLOBA   L     R10,$SSVT           R10 = SSVT ADDRESS                R4 P1825000
         SLR   R2,R2               R2 = 0 (FOR CDS)                     P1826000
         SLR   R3,R3               R3 = 0 (FOR CDS)                     P1827000
         SPACE 1                                                     R4 P1828000
TBLOBB   LM    R5,R7,$SVTTGBA      R5=1ST, R6=SIZE, R7=LAST TGB         P1829000
         SPACE 1                                                     R4 P1830000
         USING TGBDSECT,R5         TGB ADDRESSABILITY                   P1831000
         SPACE 1                                                     R4 P1832000
TBLOBC   LM    R0,R1,TGBENTRY      FETCH TGB ENTRY                      P1833000
         LTR   R1,R1               TEST FOR AVAILABLE TG                P1834000
         BZ    TBLOBD              BRANCH IF NOT                        P1835000
         CDS   R0,R2,TGBENTRY      TRY TO ALLOCATE                      P1836000
         BE    TBLOBE              BRANCH IF SUCCESSFUL                 P1837000
         SPACE 1                                                     R4 P1838000
TBLOBD   BXLE  R5,R6,TBLOBC        TRY NEXT ENTRY                       P1839000
         SPACE 1                                                        P1840000
*********************************************************************** P1841000
*                                                                     * P1842000
*              TGB DEPLETED. FORCE RE-BLOB.                           * P1843000
*                                                                     * P1844000
*********************************************************************** P1845000
         SPACE 1                                                        P1846000
        $POST  $HASPECF,CKPW       TELL CHECKPOINT PROCESSOR         R4 P1847000
         TM    PCELINK,X'80'       DID USER WANT TO WAIT...          R4 P1848000
         BZ    TBWAIT              BR IF YES TO $WAIT                R4 P1849000
         LM    LINK,R12,PCELINK    RESTORE CALLER'S REGISTERS        R4 P1850000
         SR    R1,R1               SET MTTR TO ZERO                  R4 P1851000
         BR    LINK                RETURN WITH NO TRACKS             R4 P1852000
         SPACE 1                                                     R4 P1853000
         CNOP  0,8                                                   R4 P1854000
TBWAIT  $WAIT  TRAK,SAVE=NO        WAIT ON RESOURCE                  R4 P1855000
         L     BASE2,$TRACK        RESTORE BASE REGISTER             R4 P1856000
         LA    R4,IOTTGMAP-IOTMSTAB(,R1)     A(TGM) FOR TGMDSECT     R4 P1857000
         B     TBLOBA              TRY AGAIN                            P1858000
         EJECT                                                       R4 P1859000
*********************************************************************** P1860000
*                                                                     * P1861000
*              TGB ALLOCATED. ESTABLISH TED ADDRESSABILITY            * P1862000
*                                                                     * P1863000
*********************************************************************** P1864000
         SPACE 1                                                        P1865000
         CNOP  0,8                                                   R4 P1866000
TBLOBE   LR    R2,R1               R2 = MTTR                            P1867000
         SRL   R2,24               R2 = 000M                            P1868000
         MH    R2,=AL2(TEDSIZ)     R2 = M * TEDSIZE                     P1869000
         AL    R2,$TEDADDR         R2 = ADDRESS OF TED                  P1870000
         SPACE 1                                                     R4 P1871000
         USING TEDDSECT,R2         TED ADDRESSABILITY                   P1872000
         SPACE 1                                                     R4 P1873000
*********************************************************************** P1874000
*                                                                     * P1875000
*              SHOW TRACK GROUP ALLOCATION IN USERS MAP               * P1876000
*                                                                     * P1877000
*********************************************************************** P1878000
         SPACE 1                                                        P1879000
         LR    R3,R0               R3 = OFFSET & BIT MASK               P1880000
         SRL   R3,16               R3 = OFFSET TO ALLOCATION BYTE       P1881000
         IC    R8,TGMAP(R3)        T8 = MAP BYTE                        P1882000
         OR    R8,R0               SHOW ALLOCATION                      P1883000
         STC   R8,TGMAP(R3)         FOR THIS TG                         P1884000
         SPACE 1                                                        P1885000
*********************************************************************** P1886000
*                                                                     * P1887000
*              DEVELOP NEW PTTR FROM MTTR & TED                       * P1888000
*                                                                     * P1889000
*********************************************************************** P1890000
         SPACE 1                                                        P1891000
         LR    R0,R1               R0 = NEW MTTR                        P1892000
         SRL   R0,8                R0 = 0MTT                            P1893000
         AH    R0,TNTG             R0 = MAX TT + 1                      P1894000
         BCTR  R0,0                R0 = MAX TT                          P1895000
         SLL   R0,8                R0 = MAX TT0                         P1896000
         AH    R0,TNRT             R0 = MAX TTR                         P1897000
         ICM   R0,8,=X'01'         R0 = PTTR                            P1898000
         SPACE 1                                                     R4 P1899000
         DROP  R2                  FORGET TED                           P1900000
         SPACE 1                                                        P1901000
*********************************************************************** P1902000
*                                                                     * P1903000
*              STORE NEW PTTR (MAX) & MTTR IN TGM                     * P1904000
*                                                                     * P1905000
*********************************************************************** P1906000
         SPACE 1                                                        P1907000
         LM    R2,R3,TGMCYMXM      FETCH CURRENT VALUE                  P1908000
         CDS   R2,R0,TGMCYMXM      REPLACE WITH NEW                     P1909000
         L     R3,PCER1            A(MSTR TAB) FROM R1 IN SAVE AREA  R4 P1910000
         XC    PCER15,PCER15       SHOW A NEW TG WAS OBTAINED        R4 P1911000
         B     TCRETRY             INITIALIZE A NEW TRAKCELL         R4 P1912000
         SPACE 1                                                        P1913000
         DROP  R3,R4,R5,R10,BASE2  FORGET ALL                        R4 P1914000
         TITLE 'HASP BUFFER POOL MANAGEMENT'                         R4 P1915000
*********************************************************************** P1916000
*                                                                     * P1917000
*        $GETBUF - GET SOME KIND OF JES2 BUFFER                       * P1918000
*                                                                     * P1919000
*        R0    - NUMBER OF BUFFERS REQUESTED, IF GREATER THAN 1       * P1920000
*        R1    - TYPE OF BUFFER WANTED (INPUT), 1ST BUF ADDR (OUTPUT) * P1921000
*        R11   - HCT ADDRESS (BASE1)                                  * P1922000
*        R14   - RETURN ADDRESS                                       * P1923000
*        R15   - ENTRY POINT ADDRESS, UNPREDICTABLE ON EXIT           * P1924000
*                                                                     * P1925000
*********************************************************************** P1926000
         SPACE 1                                                     R4 P1927000
         USING BUFDSECT,R4         PROVIDE BUFFER ADDRESSABILITY     R4 P1928000
         USING BPMDSECT,WB         PROVIDE BPM ADDRESSABILITY        R4 P1929000
         USING $GETBUFR,R15        PROVIDE LOCAL ADDRESSABILITY      R4 P1930000
         ENTRY $GETBUFR            ENTRY TO GENERAL BUFFER GET RTN   R4 P1931000
         SPACE 1                                                     R4 P1932000
$BUFSAVE EQU   $CSAVREG+32         USE LAST 32 BYTES OF $CSAVREG FOR R4CP1933000
                                   STORING REGS BECAUSE OTHER        R4CP1934000
                                   SERVICE ROUTINES WILL BE CALLED   R4 P1935000
         SPACE 1                                                     R4 P1936000
         CNOP  0,8                                                   R4 P1937000
$GETBUFR $TRACE                                                      R4 P1938000
         STM   LINK,R5,$BUFSAVE    SAVE WORK REGS                    R4 P1939000
         XC    $BUFSAVE+12(4),$BUFSAVE+12  ZERO R1 IN SAVE AREA      R4 P1940000
         LA    R4,$BUFSAVE+12-(BUFCHAIN-BUFDSECT)  INITIAL CHAIN ADR R4 P1941000
         ST    R1,$BUFSAVE+4       SAVE BUFTYPE IN R15 IN SAVE AREA  R4 P1942000
         LA    R5,1                ASSUME REQUEST FOR SINGLE BUFFER  R4 P1943000
         TM    $BUFSAVE+7,BUFMULT  TEST ASSUMPTION                   R4 P1944000
         BZ    SKIP40              BR IF VALID                       R4 P1945000
         LR    R5,R0               SET UP LOOP CTR                   R4 P1946000
SKIP40   N     R1,=F'7'            EXTRACT $BPMTABL REL ENTRY NUMBER R4 P1947000
         SLL   R1,2                MULTIPLY BY 4                     R4 P1948000
         L     WB,$BPMTABL(R1)     GET PROPER BUFFER POOL            R4 P1949000
         L     WB,0(,WB)            MAP ADDRESS                      R4 P1950000
         LA    WB,0(,WB)           CLEAR HI-ORDER BYTE               R4 P1951000
         CH    R5,BPMBUFCT         ENOUGH BUFFERS AVAILABLE...       R4 P1952000
         BNH   BUFGET              BR IF YES TO ALLOCATE BUFFERS     R4 P1953000
         TM    $BUFSAVE+7,BUFTP    TEST FOR TP BUFFER                R4 P1954000
         BZ    SKIP55              BR IF NO                    @OZ32879 P1955000
         MVI   $TPBFMAP,0           ELSE INDICATE NO TP BUFFERS      R4 P1956000
         OI    $RESHORT,$TPBMSB    SET WAITING TP BUFFER       @OZ32879 P1956500
SKIP50   LM    R2,R5,$BUFSAVE+16   RESTORE WORK REGISTERS            R4 P1957000
         TM    $BUFSAVE,X'40'      DOES CALLER WISH TO WAIT...       R4 P1958000
         BZR   LINK                RETURN IF NO WITH CC = 0          R4 P1959000
         L     R1,$BUFSAVE+4       RESTORE R1                        R4 P1960000
        $WAIT  BUF                 WAIT FOR BUFFER(S)                R4 P1961000
         L     R15,$GETBUF         RESTORE ENTRY POINT ADDRESS       R4 P1962000
         B     $GETBUFR             AND BR TO RETRY REQUEST          R4 P1963000
         SPACE 1                                               @OZ32879 P1963200
SKIP55   OI    $RESHORT,$LOBMSB    SET WAITING LOCAL BUFFER    @OZ32879 P1963400
         B     SKIP50              BR TO CONTINUE              @OZ32879 P1963500
         EJECT                                                       R4 P1964000
*********************************************************************** P1965000
*                                                                     * P1966000
*        BUFFER AVAILABLE - COMPUTE ADDRESS AND RECONTRUCT IOB        * P1967000
*                                                                     * P1968000
*********************************************************************** P1969000
         SPACE 1                                                     R4 P1970000
         CNOP  0,8                                                   R4 P1971000
BUFGET   SLR   R1,R1               CLEAR WORK                        R4 P1972000
         SLR   WA,WA                REGISTERS                        R4 P1973000
         TRT   BPMMAP,BUFTRTBL     TEST FOR AVAILABLE BUFFER         R4 P1974000
         BNZ   BUFAVAIL            BR IF YES                         R4 P1975000
B02     $ERROR                     AVAILABLE BUFFER COUNT INVALID    R4 P1976000
         SPACE 1                                                     R4 P1977000
BUFAVAIL LH    WA,BUFTBL1-2(WA)    ALLOCATE                          R4 P1978000
         EX    WA,BUFALLOC          THE BUFFER                       R4 P1979000
         SRL   WA,8                RELATIVE BUFFER WITHIN MASK BYTE  R4 P1980000
         SL    R1,BPMAPADR         R1 = NUMBER OF                    R4 P1981000
         SLL   R1,3                      PAGES OF                    R4 P1982000
         ALR   R1,WA                      BUFFERS PRECEEDING         R4 P1983000
         SLR   R0,R0                       NEWLY ALLOCATED           R4 P1984000
         D     R0,BPMPGBFS                  BUFFER                   R4 P1985000
         SLL   R1,12               R1 = ADDRESS                      R4 P1986000
         MH    R0,BPMBFSIZ               OF NEWLY                    R4 P1987000
         ALR   R1,R0                      ALLOCATED                  R4 P1988000
         ALR   R1,WB                       BUFFER                    R4 P1989000
         ST    R1,BUFCHAIN         CHAIN BUFFER TO PREVIOUS BUFFER   R4 P1990000
         LR    R4,R1               PREV BUFFER PTR AND DSECT         R4 P1991000
         IC    R0,$BUFSAVE+7       GET BUFFER TYPE                   R4 P1992000
        $BFRBLD (R1),TYPE=(R0)     CONSTRUCT BUFFER                  R4 P1993000
         L     R15,$GETBUF         RESTORE BASE REGISTER             R4 P1994000
         TM    BUFTYPE,BUFFIX      PAGE-FIX THIS BUFFER...           R4 P1995000
         BZ    BUFGET1             NO                                R4 P1996000
         LH    R0,BPMBFSIZ         LENGTH OF A BUFFER                R4 P1997000
         LA    R2,BUFSTART         GET ADDRESS OF PSEUDO-ECB         R4 P1998000
         XC    0(4,R2),0(R2)        AND CLEAR FOR $PGFIX             R4 P1999000
        $PGSRVC FIX,(R1),(R0),(R2) PAGE-FIX THE BUFFER               R4 P2000000
         L     R15,$GETBUF         RESTORE BASE REGISTER             R4 P2001000
         CLI   BUFSTART,0          ENSURE BUFFER NOW IN MAIN STORAGE R4CP2002000
                                   (AND HENCE FIXED) -- NO NEED THEN R4CP2003000
                                   TO WAIT ON PSEUDO ECB.            R4 P2004000
         EJECT                                                       R4 P2005000
BUFGET1  LH    R1,BPMBUFCT         DECREMENT                         R4 P2006000
         BCTR  R1,0                 BUFFER                           R4 P2007000
         STH   R1,BPMBUFCT           COUNT                           R4 P2008000
         BCT   R5,BUFGET           IF WANTED, GET ANOTHER BUFFER     R4 P2009000
         SPACE 1                                                     R4 P2010000
         XC    BUFCHAIN,BUFCHAIN   SHOW END OF BUFFER CHAIN          R4 P2011000
         LM    LINK,R5,$BUFSAVE    RESTORE REGS                      R4 P2012000
         LTR   LINK,LINK           SET NON-ZERO CC                   R4 P2013000
         BR    LINK                RETURN                            R4 P2014000
         SPACE 1                                                     R4 P2015000
BUFALLOC NI    0(R1),*-*           *** EXECUTE ONLY ***              R4 P2016000
         SPACE 1                                                     R4 P2017000
BUFTBL1  DC    AL1(0,255-X'80',1,255-X'40',2,255-X'20',3,255-X'10')  R4 P2018000
         DC    AL1(4,255-X'08',5,255-X'04',6,255-X'02',7,255-X'01')  R4 P2019000
         SPACE 1                                                     R4 P2020000
BUFTRTBL DC    AL1(0,16,14,14),4AL1(12),8AL1(10)                     R4 P2021000
         DC    16AL1(8),32AL1(6),64AL1(4),128AL1(2)                  R4 P2022000
         SPACE 1                                                     R4 P2023000
         DROP  R4,WB,R15           KILL LOCAL ADDRESSABILITY         R4 P2024000
         EJECT                                                       R4 P2025000
*********************************************************************** P2026000
*                                                                     * P2027000
*        $FREEBUF - RELEASE BUFFER TO FREE POOL                       * P2028000
*                                                                     * P2029000
*        R0    - WORK, UNPREDICTABLE ON EXIT                          * P2030000
*        R1    - BUFFER ADDRESS, UNPREDICTABLE ON EXIT                * P2031000
*        R11   - HCT ADDRESS (BASE1)                                  * P2032000
*        R14   - RETURN ADDR (HI-ORDER BIT ON IF MULTIPLE BFR FREE)   * P2033000
*        R15   - ENTRY POINT ADDRESS, UNPREDICTABLE ON EXIT           * P2034000
*                                                                     * P2035000
*********************************************************************** P2036000
         SPACE 1                                                     R4 P2037000
         USING BUFDSECT,R1         PROVIDE BUFFER ADDRESSABILITY     R4 P2038000
         USING BPMDSECT,WB         PROVIDE BFR MAP ADDRESSABILITY    R4 P2039000
         USING $FREEBFR,R15        PROVIDE LOCAL ADDRESSABILITY      R4 P2040000
         ENTRY $FREEBFR            ENTRY TO BUFFER FREE ROUTINE      R4 P2041000
         SPACE 1                                                     R4 P2042000
         CNOP  0,8                                                   R4 P2043000
$FREEBFR $TRACE                                                      R4 P2044000
         STM   LINK,R5,$BUFSAVE    SAVE WORK REGS                    R4 P2045000
         LTR   LINK,LINK           FREE MULTIPLE BUFFERS...          R4 P2046000
         BM    SKIP60              BR IF YES                         R4 P2047000
         XC    BUFCHAIN,BUFCHAIN   NO - FORCE 1 BUFFER TO BE FREED   R4 P2048000
SKIP60   IC    R5,BUFTYPE          PICK UP BUFFER TYPE               R4 P2049000
         N     R5,=F'7'            EXTRACT $BPMTABL REL ENTRY NUMBER R4 P2050000
         SLL   R5,2                MULTIPLY BY 4                     R4 P2051000
         L     WA,$BPMTABL(R5)     GET PROPER BUFFER POOL            R4 P2052000
         L     WB,0(,WA)            MAP ADDRESS AND                  R4 P2053000
         LA    WB,0(,WB)             CLEAR HI-ORDER BYTE             R4 P2054000
         TM    BUFTYPE,BUFTP       IS THIS A TP BUFFER               R4 P2055000
         BZ    FREEBF1             BR IF NO                          R4 P2056000
         MVI   0(WA),X'80'         SHOW TP BUFFER PRESENT FOR RTAM   R4 P2057000
         SPACE 1                                                     R4 P2058000
FREEBF1  L     R5,BUFCHAIN         SAVE BUFCHAIN                     R4 P2059000
         LA    R5,0(,R5)           CLEAR HI-ORDER BYTE               R4 P2060000
         LA    R4,0(,R1)           RELOAD PURIFIED BUFFER ADDRESS    R4 P2061000
         CL    R4,BPMBFR1          IF BUFFER                         R4 P2062000
         BL    FREERROR             ADDRESS IN                       R4 P2063000
         CL    R4,BPMLAST            VALID RANGE,                    R4 P2064000
         BNH   BUFVALID               BR TO CONTINUE                 R4 P2065000
         SPACE 1                                                     R4 P2066000
FREERROR L     R14,$BUFSAVE        RESTORE FOR DEBUG PURPOSES        R4 P2067000
B01     $ERROR                     INVALID BUFFER ADDRESS            R4 P2068000
         SPACE 1                                                     R4 P2069000
         DROP  R1                  KILL BUFFER ADDRESSABILITY        R4 P2070000
         EJECT                                                       R4 P2071000
         USING BUFDSECT,R4         PROVIDE BUFFER ADDRESSABILITY     R4 P2072000
         SPACE 1                                                     R4 P2073000
         CNOP  0,8                                                   R4 P2074000
BUFVALID LR    WA,R4               WA = NUMBER OF BUFFERS            R4 P2075000
         SLR   WA,WB                     IN PAGES PRECEEDING         R4 P2076000
         SRL   WA,12                      PAGE CONTAINING            R4 P2077000
         MH    WA,BPMPGBFS+2               CURRENT BUFFER            R4 P2078000
         SLR   R0,R0               R1 = RELATIVE                     R4 P2079000
         N     R1,BUFMASK1               BUFFER                      R4 P2080000
         LH    R14,BPMBFSIZ               NUMBER                     R4 P2081000
         DR    R0,R14                      WITHIN                    R4 P2082000
         ALR   R1,WA                        BUFFER POOL              R4 P2083000
         LR    R14,R1              R14 = ADDR OF MAP BYTE            R4 P2084000
         SRL   R14,3                      REPRESENTING BUFFER        R4 P2085000
         AL    R14,BPMAPADR                BEING FREED               R4 P2086000
         N     R1,BUFMASK2         R1 = RELATIVE BIT WITHIN MAP BYTE R4 P2087000
         LA    R1,BUFTBL2(R1)      POINT TO ALLOCATION MASK BYTE     R4 P2088000
         OC    0(1,R14),0(R1)      MAKE BUFFER AVAILABLE             R4 P2089000
        $POST  $HASPECF,BUF        INDICATE BUFFER AVAILABLE         R4 P2090000
         TM    BUFTYPE,BUFFIX      WAS THE BUFFER FIXED...           R4 P2091000
         BZ    FREEBF2             BR IF NO                          R4 P2092000
         LH    R0,BPMBFSIZ         LENGTH OF A BUFFER                R4 P2093000
         LR    R1,R4               ADDR OF BUFFER TO BE FREED        R4 P2094000
        $PGSRVC FREE,(R1),(R0)     PAGE-FREE THE BUFFER              R4 P2095000
         LM    R14,R15,$BUFSAVE    RESTORE DESTROYED REGS            R4 P2096000
         SPACE 1                                                     R4 P2097000
FREEBF2  LR    R1,WA               R1 = ADDRESS OF MASK BYTE         R4 P2098000
         SRL   R1,3                      REPRESENTING 1ST BUFFER IN  R4 P2099000
         AL    R1,BPMAPADR                PAGE CONTAING FREED BUFFER R4 P2100000
         N     WA,BUFMASK2         R0 = BITS FROM BIT MAP,           R4 P2101000
         ICM   R0,12,0(R1)               LEFT JUSTIFIED,             R4 P2102000
         SLL   R0,0(WA)                   REPRESENTING BUFFERS       R4 P2103000
         ST    R0,$BUFSAVE+8               IN PAGE CONTAINING        R4 P2104000
         IC    R1,BPMMASK                   BUFFER JUST FREED        R4 P2105000
         EX    R1,BUFTEST          TEST OTHER BFRS IN PAGE (IF ANY)  R4 P2106000
         BO    BUFFREE             BR IF PAGE CAN BE RELEASED        R4 P2107000
         SPACE 1                                                     R4 P2108000
FREEBF3  LH    R1,BPMBUFCT         INCREMENT                         R4 P2109000
         LA    R1,1(,R1)            BUFFER                           R4 P2110000
         STH   R1,BPMBUFCT           COUNT                           R4 P2111000
         LTR   R1,R5               POINT TO NEXT BUFFER IN CHAIN     R4 P2112000
         BNZ   FREEBF1             FREE NEXT BUFFER                  R4 P2113000
         LM    LINK,R5,$BUFSAVE    RESTORE REGS                      R4 P2114000
         BR    LINK                 AND RETURN WITH CC = 0           R4 P2115000
         EJECT                                                       R4 P2116000
*********************************************************************** P2117000
*                                                                     * P2118000
*        PAGE-RELEASE PAGE CONTAINING FREED BUFFER                    * P2119000
*                                                                     * P2120000
*********************************************************************** P2121000
         SPACE 1                                                     R4 P2122000
         CNOP  0,8                                                   R4 P2123000
BUFFREE  LR    R1,R4               ADDR OF BUFFER IN PG TO BE FREED  R4 P2124000
         N     R1,BUFMASK3         DROP DOWN TO PAGE BNDRY           R4 P2125000
         L     R0,BUFPGSIZ         PAGE SIZE                         R4 P2126000
        $PGSRVC RLSE,(R1),(R0)     RELEASE THE PAGE                  R4 P2127000
         LM    R14,R15,$BUFSAVE    RESTORE DESTROYED REGS            R4 P2128000
         B     FREEBF3             CHECK FOR ANOTHER BUFFER          R4 P2129000
         SPACE 1                                                     R4 P2130000
BUFTEST  TM    $BUFSAVE+8,*-*      *** EXECUTE ONLY ***              R4 P2131000
         SPACE 1                                                     R4 P2132000
BUFPGSIZ DC    F'4096'             OS/VS2 PAGE SIZE                  R4 P2133000
BUFMASK1 DC    X'00000FFF'         ADDRESS MASK                      R4 P2134000
BUFMASK2 DC    X'00000007'         ADDRESS MASK                      R4 P2135000
BUFMASK3 DC    X'00FFF000'         ADDRESS MASK                      R4 P2136000
         SPACE 1                                                     R4 P2137000
$BPMTABL DS    0A                  TABLE OF BPMAP ADDRESSES          R4 P2138000
         DC    A($BFRMAP)          REGULAR JES2 BUFFERS              R4 P2139000
         DC    A($TPBFMAP)         TP BUFFERS                        R4 P2140000
         DC    A($PGBFMAP)         PAGE BUFFERS                      R4 P2141000
         DC    A($PPBFMAP)         PP BUFFERS                        R4 P2142000
         SPACE 1                                                     R4 P2143000
BUFTBL2  DC    X'8040201008040201' ALLOCATION MAP BYTE MASK          R4 P2144000
         SPACE 1                                                     R4 P2145000
         DROP  R4,WB,R15           KILL LOCAL ADDRESSABILITY         R4 P2146000
         TITLE 'HASP BUFFER BUILD ROUTINE'                           R4 P2147000
*********************************************************************** P2148000
*                                                                     * P2149000
*        $BFRBLD - BUILD A BUFFER (INITIALIZE PREFIX)                 * P2150000
*                                                                     * P2151000
*        R0    - BFR TYPE IF ENTERED VIA BAL, UNPREDICTABLE ON EXIT   * P2152000
*        R1    - ADDRESS OF THE BUFFER                                * P2153000
*        R11   - HCT ADDRESS (BASE1)                                  * P2154000
*        LINK  - RETURN ADDRESS, HI-ORDER BIT ON IF BFR TYPE IN R0    * P2155000
*        R15   - ENTRY POINT ADDRESS (USED AS LOCAL BASE)             * P2156000
*                                                                     * P2157000
*********************************************************************** P2158000
         SPACE 1                                                     R4 P2159000
         ENTRY $BFRBLDR            PROVIDE ENTRY FOR $BFRBLD ROUTINE R4 P2160000
         USING $BFRBLDR,R15        PROVIDE LOCAL ADDRESSABILITY      R4 P2161000
         USING BUFDSECT,R1         PROVIDE BUFFER ADDRESSABILITY     R4 P2162000
         SPACE 3                                                     R4 P2163000
         CNOP  0,8                                                   R4 P2164000
$BFRBLDR $TRACE                                                      R4 P2165000
         SPACE 1                                                     R4 P2166000
*********************************************************************** P2167000
*                                                                     * P2168000
*        DETERMINE TYPE OF BUFFER TO BUILD                            * P2169000
*                                                                     * P2170000
*********************************************************************** P2171000
         SPACE 1                                                     R4 P2172000
         LTR   LINK,LINK           WAS BUFFER TYPE PROVIDED...       R4 P2173000
         BM    SKIP70              BR IF YES                         R4 P2174000
         LA    R0,BUFHASP           ELSE SUPPLY DEFAULT              R4 P2175000
SKIP70   STC   R0,BUFTYPE          STORE BUFFER TYPE IN BUFFER       R4 P2176000
         TM    BUFTYPE,BUFRPL      TEST FOR RPL TYPE BUFFER          R4 P2178000
         BO    BFRBLRPL            BUILD AN RPL IF YES               R4 P2179000
         TM    BUFTYPE,BUFIOB      TEST FOR IOB TYPE BUFFER          R4 P2181000
         BNOR  LINK                RETURN TO CALLER IF NOT           R4 P2182000
         EJECT                                                       R4 P2183000
*********************************************************************** P2184000
*                                                                     * P2185000
*        CONSTRUCT AN IOB IN THE BUFFER                               * P2186000
*                                                                     * P2187000
*********************************************************************** P2188000
         SPACE 1                                                     R4 P2189000
BFRBLIOB DS    0H                  BUILD IOB IN FRONT OF BUFFER      R4 P2190000
         XC    BUFDSECT(BUFSTART-BUFDSECT),BUFDSECT  ZERO BUFDSECT   R4 P2191000
         STC   R0,BUFTYPE          RESTORE BUFTYPE                   R4 P2192000
         MVI   IOBFLAG1,X'42'      SET IOBFLAG1 (CMD CHAIN, UNREL)   R4 P2193000
         MVC   IOBECBPT,$HASPECB   SET HASP ECB POINTER              R4 P2194000
         MVI   IOBSEEK+6,1         RECORD 1 INDICATION               R4 P2195000
         LA    R0,IOBCCW1          SET ADDRESS OF START              R4 P2196000
         ST    R0,IOBSTART          OF CHANNEL PROGRAM               R4 P2197000
         LA    R0,IOBCCW1+5        FIRST CCW                         R4 P2198000
         ST    R0,IOBCCW1           SET TO                           R4 P2199000
         MVI   IOBCCW1,3             NOP                             R4 P2200000
         MVI   IOBCCW1+4,X'40'        WITH                           R4 P2201000
         MVI   IOBCCW1+7,1             COMMAND CHAINING              R4 P2202000
         LA    R0,IOBSEEK+2        SECOND CCW                        R4 P2203000
         ST    R0,IOBCCW2           SET TO                           R4 P2204000
         MVI   IOBCCW2,X'31'         SEARCH ID EQUAL                 R4 P2205000
         MVI   IOBCCW2+4,X'40'        WITH                           R4 P2206000
         MVI   IOBCCW2+7,5             COMMAND CHAINING              R4 P2207000
         LA    R0,IOBCCW2          THIRD CCW SET                     R4 P2208000
         ST    R0,IOBCCW3           TO TIC TO                        R4 P2209000
         MVI   IOBCCW3,8             SECOND CCW                      R4 P2210000
         LA    R0,BUFSTART         FOURTH CCW SET                    R4 P2211000
         ST    R0,IOBCCW4           TO READ/WRITE                    R4 P2212000
         MVC   IOBCCW4+6(2),$BUFSIZE INTO/FROM BUFSTART              R4 P2213000
         BR    LINK                RETURN TO CALLER                  R4 P2214000
         EJECT                                                       R4 P2216000
*********************************************************************** P2217000
*                                                                     * P2218000
*        CONSTRUCT AN RPL IN THE BUFFER                               * P2219000
*                                                                     * P2220000
*********************************************************************** P2221000
         SPACE 1                                                     R4 P2222000
BFRBLRPL DS    0H                  BUILD RPL IN FRONT OF BUFFER      R4 P2223000
         XC    BUFDSECT(RPLSIZE),BUFDSECT  CLEAR RPL BUFFER          R4 P2224000
         STC   R0,BUFTYPE          RESTORE BUFTYPE                   R4 P2225000
         SPACE 1                                                     R4 P2226000
         USING RPLDSECT,R1         PROVIDE RPL ADDRESSABILTIY        R4 P2227000
         SPACE 1                                                     R4 P2228000
         MVI   RPLSTYP,RPLSVTAM    SET SUBTYPE = VTAM                R4 P2229000
         LA    R0,RPLLNGTH         GET LENGTH OF VTAM RPL            R4 P2230000
         STC   R0,RPLLEN           STORE IN RPL LENGTH FIELD         R4 P2231000
         SPACE 1                                                     R4 P2232000
         LA    R0,RPLBUFST                 AREA = RPLBUFST           R4 P2233000
         ST    R0,RPLAREA                                            R4 P2234000
         LH    R0,$BFSZSNA              AREALEN = $BFSZSNA           R4 P2235000
         ST    R0,RPLBUFL                                            R4 P2236000
         MVI   RPLVTFL2,RPLSCHED+RPLEX     POST = SCHED              R4CP2237000
                                        RESPOND = (EX,NFME,NRRN)     R4 P2238000
         MVI   RPLCNTDF,RPLDATA         CONTROL = DATA               R4 P2239000
         MVI   RPLOBSQ,RPLOSET           OBSQAC = SET                R4 P2240000
         MVI   RPLIBSQ,RPLISET           IBSQAC = SET                R4 P2241000
         MVI   RPLOPT2,RPLKEY             OPTCD = CA                 R4 P2242000
         MVI   RPLOPT5,RPLNODE                  = RELEASE            R4 P2243000
         MVI   RPLOPT6,RPLCOND                  = COND               R4 P2244000
         MVI   RPLOPT7,RPLCNALL+RPLQOPT         = CONALL             R4CP2245000
                                                = Q                  R4 P2246000
         MVI   RPLOPT8,RPLODACP                 = ACCEPT             R4 P2247000
         MVI   RPLOPT11,RPLSTART                = START              R4 P2248000
         MVI   RPLOPT12,RPLNIBTK                = NIBTK              R4CP2249000
                                                = NFMHDR             R4 P2250000
         SPACE 1                                                     R4 P2251000
         BR    LINK                RETURN TO CALLER                  R4 P2252000
         SPACE 1                                                     R4 P2254000
         DROP  R1,R15              RELEASE ADDRESSABILITY            R4 P2255000
         SPACE 3                                                     R4 P2256000
         LTORG                                                       R4 P2257000
         TITLE 'HASP CELL CONTROL AND LOCK SERVICES'                    P2258000
*********************************************************************** P2259000
*                                                                     * P2260000
*        $GETCELL - SUBROUTINE TO GET A COMMON SERVICE AREA CELL      * P2261000
*                                                                     * P2262000
* REGISTERS -                                                         * P2263000
*                                                                     * P2264000
*        R0    = ADDRESS OF SJB                                       * P2265000
*        R1    = ADDRESS OF TCB OR ZERO (ADDRESS OF CELL)             * P2266000
*        R4    = LENGTH OF CELL                                       * P2267000
*        R11   = ADDRESS OF HCT (BASE1) - SSVT                        * P2268000
*        R14   = RETURN                                               * P2269000
*        R15   = ENTRY BASE                                           * P2270000
*                                                                     * P2271000
*********************************************************************** P2272000
         SPACE 1                                                     R4 P2273000
         USING CCEDSECT,R7                                              P2274000
         USING $GETCELR,BASE3      PROVIDE $GETCELR ADDRESSABILITY   R4 P2275000
         SPACE 1                                                     R4 P2276000
$GETCELR STM   R0,R15,$CSAVREG     SAVE CALLER'S REGISTERS           R4 P2277000
         LR    BASE3,R15           SET BASE                             P2278000
         LR    R10,BASE1           COPY BASE 1                          P2279000
         L     R11,$SSVT           POINT TO SSVT                        P2280000
         USING HASP,R10                                                 P2281000
         USING SSVT,R11                                                 P2282000
         L     R15,$SVGCELL        POINT TO GET CELL                    P2283000
         BALR  R14,R15             GET CELL                             P2284000
         B     GCGM                IF NO CELL GET MORE      +0          P2285000
GCEND    ST    R1,$CSAVREG+R1*4    SET ANSWER               +4          P2286000
         LM    R0,R15,$CSAVREG     RETURN REGISTERS                     P2287000
         LTR   R1,R1               SET CONDITION CODE                   P2288000
         BR    R14                 EXIT                                 P2289000
         SPACE 1                                                     R4 P2290000
GCGM     L     R15,$SVGCMNS        POINT TO GET MAIN                    P2291000
         LA    R0,1                SET CLAIM CODE -- R4 = (B-1)/256  R4 P2292000
         BALR  R14,R15             ENTER ROUTINE                        P2293000
         LTR   R1,R1               TEST FOR GOTTEN                      P2294000
         BZ    GCEND               EXIT SO CALLER CAN REACT             P2295000
         LM    R0,R1,$CSAVREG      PICK UP CALLER ID REGS               P2296000
         STM   R0,R1,CCESJB+CCETCB-CCETCB SET USERS ID INTO CCE         P2297000
         L     R1,CCECLOC-1        POINT TO CELL                        P2298000
         LA    R1,0(0,R1)          PURIFY                               P2299000
         B     GCEND               RETURN                               P2300000
         SPACE 1                                                     R4 P2301000
         USING HASP,BASE1                                               P2302000
         DROP  BASE3                                                    P2303000
         DROP  R10                                                      P2304000
         EJECT                                                          P2305000
*********************************************************************** P2306000
*                                                                     * P2307000
*        $FRECEL - SUBROUTINE TO FREE A CELL                          * P2308000
*                                                                     * P2309000
* REGISTERS -                                                         * P2310000
*                                                                     * P2311000
*        R0    = RESERVED                                             * P2312000
*        R1    = ADDRESS OF STORAGE CELL TO FREE. CELL POINTS TO CCE  * P2313000
*        R11   = ADDRESS OF HCT (BASE1) - SSVT                        * P2314000
*        R14   = RETURN                                               * P2315000
*        R15   = ENTRY BASE                                           * P2316000
*                                                                     * P2317000
*********************************************************************** P2318000
         SPACE 1                                                     R4 P2319000
         USING $FRECELR,R15        PROVIDE $FRECELR ADDRESSABILITY   R4 P2320000
         SPACE 1                                                     R4 P2321000
$FRECELR STM   R0,R15,$CSAVREG     SAVE CALLER'S REGISTERS           R4 P2322000
         LR    R10,BASE1                                                P2323000
         L     R11,$SSVT           POINT TO SSVT                        P2324000
         USING HASP,R10                                                 P2325000
         USING SSVT,R11                                                 P2326000
         L     R15,$SVFCELL        POINT TO FREE CELL ROUTINE           P2327000
         BALR  R14,R15             ENTER IT                             P2328000
         LM    R0,R15,$CSAVREG     RESTORE REGISTERS                    P2329000
         BR    R14                 RETURN                               P2330000
         SPACE 1                                                     R4 P2331000
         USING HASP,BASE1                                               P2332000
         DROP  R10                                                      P2333000
         DROP  R15                                                      P2334000
         EJECT                                                          P2335000
*********************************************************************** P2336000
*                                                                     * P2337000
*        $GETLOK - SUBROUTINE TO GET THE CMS LOCK                     * P2338000
*                                                                     * P2339000
*********************************************************************** P2340000
         SPACE 1                                                     R4 P2341000
         USING $GETLOKR,BASE3      PROVIDE $GETLOKR ADDRESSABILITY   R4 P2342000
         SPACE 1                                                     R4 P2343000
$GETLOKR STM   R0,R15,$CSAVREG     SAVE CALLER'S REGISTERS           R4 P2344000
         LR    BASE3,R15           COPY BASE                            P2345000
         LR    WA,BASE1            SAVE BASE1                           P2346000
*                                  THIS CARD DELETED BY APAR   @OZ35278 P2346500
         MODESET EXTKEY=ZERO       GET KEY 0                            P2347000
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,RELATED=($GETLOK,*-*,$FRCP2348000
               ELOKR)                                                   P2349000
*                                  THIS CARD DELETED BY APAR   @OZ35278 P2349100
*                                  THIS CARD DELETED BY APAR   @OZ35278 P2349200
         SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,RELATED=($GETLOK,*-*,$FRELCP2350000
               OKR)                                                     P2351000
*                                  THIS CARD DELETED BY APAR   @OZ35278 P2351100
*                                  THIS CARD DELETED BY APAR   @OZ35278 P2351102
*                                  THIS CARD DELETED BY APAR   @OZ35278 P2351104
*                                  THIS CARD DELETED BY APAR   @OZ35278 P2351106
*                                  THIS CARD DELETED BY APAR   @OZ35278 P2351108
*                                  THIS CARD DELETED BY APAR   @OZ35278 P2351110
*                                  THIS CARD DELETED BY APAR   @OZ35278 P2351112
*                                  THIS CARD DELETED BY APAR   @OZ35278 P2351114
*                                  THIS CARD DELETED BY APAR   @OZ35278 P2351200
*                                  THIS CARD DELETED BY APAR   @OZ35278 P2351300
*                                  THIS CARD DELETED BY APAR   @OZ35278 P2351400
         MODESET EXTKEY=HASP       GET KEY 1                            P2352000
         LM    R0,R15,$CSAVREG-HASP(WA) RESTORE REGISTERS               P2353000
         BR    R14                 RETURN                               P2354000
         SPACE 1                                                     R4 P2355000
         DROP  BASE3                                                    P2356000
         EJECT                                                       R4 P2357000
*********************************************************************** P2358000
*                                                                     * P2359000
*        $FRELOK - SUBROUTINE TO FREE THE LOCK                        * P2360000
*                                                                     * P2361000
*********************************************************************** P2362000
         SPACE 1                                                     R4 P2363000
         USING $FRELOKR,BASE3      PROVIDE $FRELOKR ADDRESSABILITY   R4 P2364000
         SPACE 1                                                     R4 P2365000
$FRELOKR STM   R0,R15,$CSAVREG     SAVE CALLER'S REGISTERS           R4 P2366000
         LR    BASE3,R15           COPY BASE                            P2367000
         LR    WA,BASE1            SAVE BASE1                           P2368000
         MODESET EXTKEY=ZERO       GET KEY 0                            P2369000
*                                  THIS CARD DELETED BY APAR   @OZ35278 P2369100
*                                  THIS CARD DELETED BY APAR   @OZ35278 P2369200
         SETLOCK RELEASE,TYPE=CMS,RELATED=($FRELOK,*-*,$GETLOKR)        P2370000
*                                  THIS CARD DELETED BY APAR   @OZ35278 P2370100
*                                  THIS CARD DELETED BY APAR   @OZ35278 P2370200
*                                  THIS CARD DELETED BY APAR   @OZ35278 P2370300
*                                  THIS CARD DELETED BY APAR   @OZ35278 P2370400
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=($FRELOK,*-*,$GETLOKR)      P2371000
         MODESET EXTKEY=HASP       GET KEY 1                            P2372000
         LM    R0,R15,$CSAVREG-HASP(WA) RESTORE REGISTERS               P2373000
         BR    R14                 RETURN                               P2374000
         SPACE 1                                                     R4 P2375000
         DROP  BASE3                                                    P2376000
         DROP  R7                                                       P2377000
         TITLE 'HASP INPUT/OUTPUT SUPERVISOR APPENDAGES'                P2378000
*********************************************************************** P2379000
*                                                                     * P2380000
*        HASPATTN - UNSOLICITED DEVICE END INTERRUPT HANDLER          * P2381000
*                                                                     * P2382000
*        THIS ROUTINE RUNS UNDER CONTROL OF AN SRB SCHEDULED          * P2383000
*        DUE TO UNSOLICITED DEVICE ENDS ON HASP UNIT RECORD DEVICES.  * P2384000
*        IT RESETS THE DCTHOLD AND DCTPAUSE BITS OF THE DCT           * P2385000
*        CORRESPONDING TO THE ATTENTION DEVICE AND SIMULATES A        * P2386000
*        $$POST FOR UNIT. THE ADDRESS OF THIS ROUTINE IS MADE KNOWN   * P2387000
*        TO THE SYSTEM BY ROUTINES IN HASPINIT.                       * P2388000
*                                                                     * P2389000
*********************************************************************** P2390000
         SPACE 1                                                     R4 P2391000
         USING UCBDSECT,R2         ESTABLISH UCB ADDRESSABILITY      R4 P2392000
         USING DCTDSECT,R3         ESTABLISH DCT ADDRESSABILITY         P2393000
         USING $SVDSECT,R4         ESTABLISH SSVT ADDRESSABILITY        P2394000
         USING HASPATTN,R15        ESTABLISH LOCAL ADDRESSABILITY       P2395000
         SPACE 1                                                     R4 P2396000
         CNOP  4,8                                                   R4 P2397000
HASPATTN STM   R0,R15,0(R13)       SAVE ALL REGISTERS                R4 P2398000
         L     BASE1,EASYBASE      SET UP STANDARD BASE1                P2399000
         L     R2,IOSUCB-IOSB(,R1) GET ADDRESS OF UCB FROM IOSB         P2400000
         ICM   R3,15,$DCTPOOL      POINT TO 1ST DCT                  R4 P2401000
         BZ    ARETURN             RETURN IF NONE                    R4 P2402000
         SPACE 1                                                        P2403000
ATESTDEV TM    DCTSTAT,DCTATTN     TEST DEVICE STATUS                   P2404000
         BZ    ANEXTDCT            BR IF NOT SET FOR ATTN PROCESSING    P2405000
         L     R4,DCTDCB           GET ADDRESS OF DCB                   P2406000
         L     R4,DCBDEBAD-DCBDSECT(,R4)  GET ADDRESS OF DEB            P2407000
         CLM   R2,3,DEBSUCBA+2-DEBDSECT(R4)  COMP UCB ADDRESSES         P2408000
         BNE   ANEXTDCT            BRANCH IF UCB ADDRESSES DO NOT MATCH P2409000
*              THIS LINE DELETED BY APAR NUMBER                @OZ52766 P2409100
*              THIS LINE DELETED BY APAR NUMBER                @OZ52766 P2409200
         NI    DCTSTAT,255-DCTPAUSE  RESET PAUSE FLAG                   P2410000
         CLI   DCTDEVTP,DCTRDR     TEST DEVICE TYPE                     P2411000
         BNE   *+8                 BRANCH IF NOT READER                 P2412000
         NI    DCTSTAT,255-DCTHOLD  RESET HOLD FLAG                     P2413000
         CLC   UCBTBYT3(2),ADT3800 TEST FOR D/T3800            @OZ52766 P2413100
         BE    ATST3800            BRANCH IF YES               @OZ52766 P2413200
         TM    DCTSTAT,DCTINUSE+DCTDRAIN+DCTHOLD  TEST                  P2414000
         BZ    APOSTDEV            BRANCH IF DEVICE IS AVAILABLE        P2415000
         B     ARETURN             DEVICE UNAVAILABLE, RETURN  @OZ53376 P2416000
ANEXTDCT ICM   R3,7,DCTCHAIN+1     GET ADDRESS OF NEXT DCT              P2417000
         BNZ   ATESTDEV            BRANCH IF NOT END OF DCT CHAIN       P2418000
         B     ARETURN             AVAILABLE DEVICE NOT FOUND, RETURN   P2419000
         SPACE 1                                               @OZ46355 P2419100
ATST3800 TM    DCTSTAT,DCTINUSE+DCTDRAIN TEST DEVICE STATUS    @OZ52766 P2419200
         BNZ   ARETURN             BRANCH IF DEVICE NOT AVAIL  @OZ53376 P2419250
         TM    DCTSTAT,DCTHOLD     TEST DEVICE STATUS          @OZ52766 P2419300
         BZ    APOSTDEV            BRANCH IF NOT INACTIVE      @OZ52766 P2419350
         LA    R0,$EWFJOT*((255-$EWBJOT)/255*255+1)  ELSE....  @OZ46355 P2419400
         B     APOSTJOT            SIMULATE A JOT POST         @OZ46355 P2419500
         EJECT                                                          P2420000
APOSTDEV LA    R0,$EWFUNIT*((255-$EWBUNIT)/255*255+1)  SET UNIT FLAGS   P2421000
APOSTJOT L     R4,$SSVT            GET ADDRESS OF SSVT         @OZ46355 P2422000
         L     R1,$SVECF           PICK UP OLD $$POST ECF VALUE         P2423000
         OR    R0,R1               COMBINE FLAGS                        P2424000
         CS    R1,R0,$SVECF        SET NEW FLAGS                        P2425000
         BNE   *-6                 TRY AGAIN IF NOT SET                 P2426000
         L     R10,EPOSTM          GET POST COMPLETION CODE             P2427000
         L     R12,$HASPECB        GET ADDRESS  OF HASP ECB          R4 P2428000
         MVI   $SVPOSTW(R12),X'FF' $$POST HASP DISPATCHER            R4 P2429000
         L     R1,0(,R12)          GET CONTENTS OF HASP ECB          R4 P2430000
         SPACE 1                                                     R4 P2431000
APOSTEST LTR   R1,R1               TEST ECB                             P2432000
         BM    APOSTECB            BRANCH IF HASP IS WAITING            P2433000
         CS    R1,R10,0(R12)       TRY FAST POST                     R4 P2434000
         BNE   APOSTEST            BRANCH IF FAST POST NOT SUCCESSFUL   P2435000
         B     ARETURN             FAST POST SUCCESSFUL, RETURN         P2436000
         SPACE 1                                                        P2437000
APOSTECB L     R12,$HASPTCB        GET ADDRESS OF HASP TCB              P2438000
         L     R11,$HASPECB        GET ADDRESS OF HASP ECB           R4 P2439000
         L     R15,CVTPTR          GET ADDRESS OF CVT                   P2440000
         L     R15,CVT0PT01-CVTDSECT(,R15)  GET ADDRESS OF POST         P2441000
         BALR  R14,R15             TAKE BRANCH ENTRY TO POST            P2442000
         SPACE 1                                                        P2443000
ARETURN  LM    R0,R15,0(R13)       RESTORE REGISTERS                    P2444000
         BR    R14                  AND RETURN                          P2445000
         SPACE 1                                               @OZ46355 P2445100
ADT3800  DC    AL1(UCB3UREC,UCB3800)  3800 PRINTER UCB TYPE    @OZ46355 P2445200
         SPACE 1                                                     R4 P2446000
         DROP  R2,R3,R4,R15        DROP ADDRESSABILITY                  P2447000
         EJECT                                                 @OZ27300 P2448000
***************************************************************@OZ27300 P2448200
*                                                              @OZ27300 P2448400
*        $IOAPPEN - INPUT/OUTPUT APPENDAGE VECTOR TABLE        @OZ27300 P2448600
*                                                              @OZ27300 P2448800
***************************************************************@OZ27300 P2449000
         SPACE 3                                               @OZ27300 P2449200
*        COMMON I/O APPENDAGE BASE AT $IOAPPEN                 @OZ27300 P2449400
         SPACE 1                                               @OZ27300 P2449600
$IOAPPEN DC    A(ERETURN)          END OF EXTENT               @OZ27300 P2449800
         DC    A(ERETURN)          SIO / PGFIX                 @OZ27300 P2450000
         DC    A(EPCI)             PCI                         @OZ27300 P2450200
         DC    A(ECHANEND)         CHANNEL END                 @OZ27300 P2450400
         DC    A(EABCHEND)         ABNORMAL CHANNEL END        @OZ27300 P2450600
         SPACE 3                                               @OZ27300 P2450800
ERETURN  BR    R14                 RETURN TO IOS               @OZ27300 P2451000
         SPACE 3                                               @OZ27300 P2451200
***************************************************************@OZ27300 P2451400
*                                                              @OZ27300 P2451600
*        HASP INPUT/OUTPUT SUPERVISOR APPENDAGES               @OZ27300 P2451800
*                                                              @OZ27300 P2452000
*     REGISTER       INPUT              OUTPUT                 @OZ27300 P2452200
*                                                              @OZ27300 P2452400
*        R1      ADDRESS OF RQE        UNCHANGED               @OZ27300 P2452600
*        R2      ADDRESS OF IOB        UNCHANGED               @OZ27300 P2452800
*        R3      ADDRESS OF DEB        UNCHANGED               @OZ27300 P2453000
*        R4      ADDRESS OF DCB        UNCHANGED               @OZ27300 P2453200
*        R7      ADDRESS OF UCB        UNCHANGED               @OZ27300 P2453400
*        R13     ADDRESS OF SAVE AREA  UNCHANGED               @OZ27300 P2453600
*        R14     RETURN ADDRESS        UNCHANGED               @OZ27300 P2453800
*        R15     ENTRY ADDRESS         UNCHANGED               @OZ27300 P2454000
*                                                              @OZ27300 P2454200
***************************************************************@OZ27300 P2454400
         SPACE 2                                               @OZ27300 P2454600
         USING BUFDSECT,R2         PROVIDE IOB/BUFFER,         @OZ27300 P2454800
         USING DCBDSECT,R4          DCB, AND                   @OZ27300 P2455000
         USING UCBDSECT,R7           UCB ADDRESSABLITY         @OZ27300 P2455200
         EJECT                                                 @OZ27300 P2455400
***************************************************************@OZ27300 P2455600
*                                                              @OZ27300 P2455800
*        ***  ABNORMAL CHANNEL END APPENDAGE  ***              @OZ27300 P2456000
*                                                              @OZ27300 P2456200
***************************************************************@OZ27300 P2456400
         SPACE 1                                               @OZ27300 P2456600
         USING EABCHEND,R15        TEMP. LOCAL ADDRESSABILITY  @OZ27300 P2456800
         SPACE 1                                               @OZ27300 P2457000
EABCHEND TM    IOBFLAG1,X'01'      TEST FOR APPENDAGE BYPASS   @OZ27300 P2457200
         BNZR  R14                 RETURN IF YES               @OZ27300 P2457400
         SPACE 1                                               @OZ27300 P2457600
         STM   R0,R15,0(R13)       SAVE EXCP REGISTERS AND     @OZ27300 P2457800
         LM    BASE1,BASE2,EASYBASE  GET BASIC ADDRESSABILITY  @OZ27300 P2458000
         DROP  R15                     DROP TEMPORARY BASE     @OZ27300 P2458200
         USING $IOAPPEN,BASE2           AND EST. COMMON BASE   @OZ27300 P2458400
         SPACE 1                                               @OZ27300 P2458600
         CLI   IOBECBCC,X'7F'      TEST COMPLETION CODE        @OZ27300 P2458800
         BNE   ETSTNODA            EXECUTE DIRECT ACCESS       @OZ27300XP2459000
                                    ROUTINE ONLY FOR 1ST ENTRY @OZ27300 P2459200
         SPACE 1                                               @OZ27300 P2459400
         TM    UCBTBYT3,UCB3DACC   TEST FOR DEVICE TYPE        @OZ27300 P2459600
         BNO   ETSTNODA            BR IF NOT DIRECT ACCESS     @OZ27300 P2459800
         SPACE 1                                               @OZ27300 P2460000
         CLC   $NUMDA,IOBSEEK-1    TEST DIRECT ACCESS EXTENT   @OZ27300 P2460200
         BH    ETSTNODA            BR IF NOT A CHKPT EXTENT    @OZ27300 P2460400
         EJECT                                                 @OZ27300 P2460600
***************************************************************@OZ27300 P2460800
*                                                              @OZ27300 P2461000
*    *** HANDLE CHECKPOINT DATA SET SPECIAL ERROR RECOVERY *** @OZ27300 P2461200
*      (PRIOR TO NORMAL ERROR RECOVERY PROCEDURES EXECUTION)   @OZ27300 P2461400
*                                                              @OZ27300 P2461600
*        LOCATE FAILING CCW PACKET AND CAUSE CHANNEL PROGRAM   @OZ27300 P2461800
*        TO TERMINATE AFTER ERROR RECOVERY HAS EXECUTED AND    @OZ27300 P2462000
*        BEEN RETRIED.                                         @OZ27300 P2462200
*                                                              @OZ27300 P2462400
*        THE NORMAL CHANNEL END APPENDAGE WILL DETERMINE THAT  @OZ27300 P2462600
*        THE CHANNEL PROGRAM IS INCOMPLETE AND RE-START THE    @OZ27300 P2462800
*        I/O WITH THE NEXT CCW PACKET.                         @OZ27300 P2463000
*                                                              @OZ27300 P2463200
***************************************************************@OZ27300 P2463400
         SPACE 1                                               @OZ27300 P2463600
         USING JQBDSECT,R2         PROVIDE JQB ADDRESSABILITY  @OZ27300 P2463800
         SPACE 1                                               @OZ27300 P2464000
EDARECOV L     R10,JQBCSW          LOCATE                      @OZ27300 P2464200
         LA    R10,0(,R10)          THE                        @OZ27300 P2464400
         SH    R10,EBACKUP8          FAILING CCW               @OZ27300 P2464600
         SPACE 1                                               @OZ27300 P2464800
         LA    R0,JQBTRK1          EXIT                        @OZ27300 P2465000
         CLR   R10,R0               IF                         @OZ27300 P2465200
         BL    EABEXIT               CCW                       @OZ27300 P2465400
         LR    R0,R2                  OUTSIDE                  @OZ27300 P2465600
         AH    R0,JQBSIZE              JQB STANDARD            @OZ27300 P2465800
         CLR   R10,R0                   CCW PACKET             @OZ27300 P2466000
         BNL   EABEXIT                   AREA                  @OZ27300 P2466200
         SPACE 1                                               @OZ27300 P2466400
         N     R10,EROUNDWN        LOCATE CCW PACKET AND       @OZ27300 P2466600
         USING JQBCCWE,R10          PROVIDE ADDRESSABILITY     @OZ27300 P2466800
         SPACE 1                                               @OZ27300 P2467000
         TM    JQBFLAG1,JQB1LOCK   TEST FOR LOCK OPERATION     @OZ27300 P2467200
         BO    EADALOCK            BRANCH IF YES               @OZ27300 P2467400
         SPACE 1                                               @OZ27300 P2467600
         TM    JQBFLAG1,JQB1FMT    TEST OPERATION TYPE         @OZ27300 P2467800
         BO    EADNRTRY            BRANCH IF FORMAT, NO RETRY  @OZ27300 P2468000
         SPACE 1                                               @OZ27300 P2468200
         MVC   JQBERRST,JQBSTART   SAVE ORIGINAL IOBSTART      @OZ27300 P2468400
         SPACE 1                                               @OZ27300 P2468600
         ST    R10,JQBERRPK        SAVE ADDR OF FAILING PACKET @OZ27300 P2468800
         LRA   R0,JQBVERP           TRUNCATE CHANNEL PROGRAM   @OZ27300 P2469000
         STCM  R0,7,JQBCTNXT+CCWADDR WITH VERIFICATION CCWS,   @OZ27300 P2469200
         MVC   JQBSEEK+1(6),JQBCADDR  ADJUST IOB SEEK AND      @OZ27300 P2469400
         ST    R10,JQBSTART            RESTART ADDRESS         @OZ27300 P2469600
         SPACE 1                                               @OZ27300 P2469800
         B     EABEXIT             ALLOW IOS ERP TO PROCESS    @OZ27300 P2470000
         EJECT                                                 @OZ27300 P2470200
***************************************************************@OZ27300 P2470400
*                                                              @OZ27300 P2470600
*        THE OPERATION OF OBTAINING THE CHECKPOINT LOCK        @OZ27300 P2470800
*        CANNOT BE RETRIED, EXCEPT FROM THE BEGINNING OF       @OZ27300 P2471000
*        THE CCW CHAIN.                                        @OZ27300 P2471200
*                                                              @OZ27300 P2471400
*        OPERATIONS WHICH RESET THE CHECKPOINT LOCK MAY        @OZ42642 P2471600
*        BE RETRIED AFTER SHUFFLING THE PACKET ORDER TO        @OZ42642 P2471675
*        SEARCH KEY, WRITE LOCK, READ MASTER, READ CHECK,      @OZ42642 P2471750
*        AND VERIFY COUNT.  AFTER THE RETRY HAS BEEN MADE      @OZ42642 P2471800
*        THE PACKETS WILL BE RESHUFFLED FOR THE RETURN TO      @OZ42642 P2471875
*        THE ORIGINAL ORDER OF SEARCH KEY, READ MASTER,        @OZ42642 P2471950
*        READ CHECK, WRITE LOCK, AND VERIFY COUNT.             @OZ42642 P2472000
*                                                              @OZ27300 P2472200
*        TRACK CONDITION CHECKS (ALTERNATE TRACK RETRY) WILL   @OZ27300 P2472400
*        BE CONSIDERED PERMANENT ERRORS DURING CHECKPOINT      @OZ27300 P2472600
*        LOCK OPERATIONS. THEREFORE AN ALTERNATE TRACK CANNOT  @OZ27300 P2472800
*        BE ASSIGNED FOR TRACK 1.                              @OZ27300 P2473000
*                                                              @OZ27300 P2473200
*        OTHERWISE THIS CODE WILL CAUSE A LIMITED NUMBER OF    @OZ27300 P2473400
*        RETRIES FOR I/O ERRORS ON THE 1ST CHECKPOINT TRACK    @OZ27300 P2473600
*        FROM THE BEGINNING OF THE CHANNEL PROGRAM.            @OZ27300 P2473800
*                                                              @OZ27300 P2474000
***************************************************************@OZ27300 P2474200
         SPACE 1                                               @OZ27300 P2474400
EADALOCK TM    JQBCSW+4,X'02'      TEST FOR UNIT CHECK         @OZ27300 P2474600
         BZ    EADANSNS            BRANCH IF NOT, CONTINUE     @OZ27300 P2474800
         CLI   JQBSENSE+0,X'02'    TEST FOR TRK CONDITION ERR  @OZ27300 P2475000
         BO    EADNRTRY            BRANCH IF YES, NO RETRY     @OZ27300 P2475200
         SPACE 1                                               @OZ42642 P2475210
         TM    JQBFLAG2,JQB2SHFL   HAVE PACKETS BEEN SHUFFLED  @OZ42642 P2475220
         BO    EABHSHFL              RETRY IF APPROPRIATE      @OZ42642 P2475230
         SPACE 1                                               @OZ42642 P2475240
         BAL   R15,EADSHFL         SHUFFLE PACKETS             @OZ42642 P2475250
         L     R10,JQBSTART        SHOW IOS WHERE TO START     @OZ42642 P2475260
         B     EREDRIVE              REDRIVE EXCP              @OZ42642 P2475270
         SPACE 1                                               @OZ42642 P2475280
EABHSHFL CLC   JQBERRCT,$ZEROS     TEST ERROR COUNT            @OZ42642 P2475290
         SPACE 1                                               @OZ42642 P2475300
         LH    R0,JQBERRCT         DECREMENT                   @OZ42642 P2475310
         BCTR  R0,0                  ERROR COUNT               @OZ42642 P2475320
         STH   R0,JQBERRCT             BY ONE                  @OZ42642 P2475330
         SPACE 1                                               @OZ42642 P2475340
         BH    EABEXIT             RETRY IF APPROPRIATE        @OZ42642 P2475350
         SPACE 1                                               @OZ42642 P2475360
         BAL   R15,EADNSHFL        ELSE UNSHUFFLE WITH         @OZ42642 P2475370
         B     EADNRTRY              PERMANENT ERROR           @OZ42642 P2475380
         SPACE 1                                               @OZ27300 P2475400
EADANSNS TM    JQBFLAG1,JQB1READ   TEST OPERATION TYPE         @OZ27300 P2475600
         BNO   EADNRTRY            BRANCH IF NOT LOCK GET      @OZ27300 P2475800
         SPACE 1                                               @OZ27300 P2476000
         LH    R0,JQBERRCT         GET ERROR COUNT             @OZ27300 P2476200
         BCT   R0,EADRSTRT          DECREMENT, RETRY IF NOT 0  @OZ27300 P2476400
         B     EADNRTRY              ELSE, PERMANENT ERROR     @OZ27300 P2476600
         SPACE 1                                               @OZ27300 P2476800
EADRSTRT STH   R0,JQBERRCT         REPLACE ERROR COUNT IN JQB  @OZ27300 P2477000
         SPACE 1                                               @OZ27300 P2477200
         L     R10,JQBSTART        TELL IOS TO RE-EXCP THE     @OZ27300 P2477400
         B     EREDRIVE             ENTIRE CCW CHAIN           @OZ27300 P2477600
         SPACE 1                                               @OZ27300 P2477800
EADNRTRY MVC   JQBERRCT,$ZEROS     RESET THE ERROR RETRY COUNT @OZ27300 P2478000
         SPACE 2                                               @OZ27300 P2478200
         USING BUFDSECT,R2         RESTORE BFR ADDRESSABILITY  @OZ27300 P2478400
         SPACE 1                                               @OZ27300 P2478600
         MVI   IOBECBCC,X'41'      SHOW PERMANENT ERROR        @OZ27300 P2478800
         B     EABEXIT              AND LET EXCP POST          @OZ27300 P2479000
         EJECT                                                 @OZ27300 P2479200
***************************************************************@OZ27300 P2479400
*                                                              @OZ27300 P2479600
*        HANDLE NON - DIRECT ACCESS AND NON - CHKPT DASD       @OZ27300 P2479800
*                                                              @OZ27300 P2480000
***************************************************************@OZ27300 P2480200
         SPACE 1                                               @OZ27300 P2480400
ETSTNODA TM    IOBSENS0,X'40'      INTERVENTION REQ...         @OZ27300 P2480600
         BNO   EABCHRET            BR IF NO                    @OZ27300 P2480800
         CLC   UCBTBYT3(2),EUCB1403  IS THIS A 1403...         @OZ27300 P2481000
         BE    EINTREQ               BR IF YES                 @OZ27300 P2481200
         CLC   UCBTBYT3(2),EUCB3211  IS THIS A 3211...         @OZ27300 P2481400
         BE    EINTREQ               BR IF YES                 @OZ27300 P2481600
         CLC   UCBTBYT3(2),EUCB3800  IS THIS A 3800...         @OZ27300 P2481800
         BNE   EABCHRET              BR IF NO                  @OZ27300 P2482000
         SPACE 1                                               @OZ27300 P2482200
EINTREQ  L     R15,28(,R1)               LOCATE IOSB FROM RQE  @OZ27300 P2482400
         L     R15,SRBPARM-SRBDSECT(,15)  TO TEST ERROR FLAG   @OZ27300 P2482600
         TM    IOSFLA-IOSB(R15),IOSERR   IS THIS 1ST ENTRY...  @OZ27300 P2482800
         BNZ   EABCHRET                  BR IF NO, CSW STORED  @OZ27300 P2483000
         SPACE 1                                               @OZ27300 P2483200
         L     R5,BUFDCT           GET DCT POINTER AND         @OZ27300 P2483400
         USING DCTDSECT,R5          ESTABLISH ADDRESSABILITY   @OZ27300 P2483600
         SPACE 1                                               @OZ27300 P2483800
         CLC   DCTCSW,$ZEROS       2ND INTERVENTION REQUIRED...@OZ27300 P2484000
         BNE   EABCHRET            BR IF YES                   @OZ27300 P2484200
         MVC   DCTCSW+1(3),IOBCSW  SAVE CSW IN DCT             @OZ27300 P2484400
         SPACE 1                                               @G38ESBB P2484410
***************************************************************@G38ESBB P2484420
*                                                              @G38ESBB P2484430
*        FOR 3800 INTERVENTION REQUIRED, SET ABORT BIT IN      @G38ESBB P2484440
*        PCISGNAL, TURN OFF COMMAND CHAINING AND RESTART AT    @G38ESBB P2484450
*        RPI TO ABORT CURRENT CHANNEL PROGRAM.                 @G38ESBB P2484460
*                                                              @G38ESBB P2484470
***************************************************************@G38ESBB P2484480
         SPACE 1                                               @G38ESBB P2484490
         CLC   UCBTBYT3(2),EUCB3800 IS DEVICE A 3800           @G38ESBB P2484500
         BNE   EABCHRET            BR IF NOT                   @G38ESBB P2484510
         L     R10,DCTPCE          ADDRESS 3800 PCE            @G38ESBB P2484520
         DROP  SAVE                DROP PCE ADDRESSABILITY     @G38ESBB P2484530
         USING PCEDSECT,R10        ESTABLISH PCE ADR           @G38ESBB P2484540
         SPACE 1                                               @G38ESBB P2484550
EGETCCWA L     R6,POUTCCWA         GET CCW AREA                @G38ESBB P2484560
         L     R0,POUTCCWN         GET CCW AREA                @G38ESBB P2484570
         CR    R0,R6               FIND AREA                   @G38ESBB P2484580
         BL    EFNDCCWA             WITH HIGHER ADDRESS        @G38ESBB P2484590
         XR    R0,R6               PLACE HIGHER ADDRESS        @G38ESBB P2484600
         XR    R6,R0                    IN REG 6 AND           @G38ESBB P2484610
         XR    R0,R6                    LOWER ADDR IN REG 0    @G38ESBB P2484620
         SPACE 1                                               @G38ESBB P2484630
EFNDCCWA CL    R6,DCTCSW           ASSUME INT. REQ. IN REG 6   @G38ESBB P2484640
         BNH   EDETRST             BR IF YES                   @G38ESBB P2484650
         SPACE 1                                               @G38ESBB P2484700
         DROP  R5                  RELEASE DCT ADDRESSABILTY   @OZ27300 P2484800
         SPACE 1                                               @OZ27300 P2485000
         LR    R6,R0               R6 IS ADR OF IR CCW AREA    @G38ESBB P2485010
         SPACE 1                                               @G38ESBB P2485020
EDETRST  AH    R6,PCCWLAST         POINT TO PCIE               @G38ESBB P2485030
         USING PCIDSECT,R6         PCIE ADDRESSABILITY         @G38ESBB P2485040
         OI    PCISGNAL,PCIABORT   TURN ON ABORT BIT           @G38ESBB P2485050
         L     R10,PQHADR          GET PQH ADDRESS             @G38ESBB P2485060
         MVC   PQHPCICH-PQHDSECT(,R10),PCI1FLGS SAVE CHAIN FLG @G38ESBB P2485070
         NI    PCI1FLGS,FF-X'40'   TURN OFF COMMAND CHAINING   @G38ESBB P2485080
         SPACE 1                                               @G38ESBB P2485090
         DROP  R6,R10              SUSPEND PCIE,PCE            @G38ESBB P2485100
         SPACE 1                                               @G38ESBB P2485110
*        ABORT CHANNEL PROGRAM BY MODIFYING IOBCSW TO RESTART  @G38ESBB P2485120
*        CHANNEL PROGRAM AT RPI/SIB CCW'S                      @G38ESBB P2485130
         SPACE 1                                               @G38ESBB P2485140
         SH    R6,=Y(2*8)          ADDRESS RPI CCW             @G38ESBB P2485150
         STCM  R6,7,IOBCSW         RESTART CH PGM AT RPI       @G38ESBB P2485160
         SPACE 1                                               @G38ESBB P2485170
         USING PCEDSECT,SAVE       RESTORE PCE ADR             @G38ESBB P2485180
         SPACE 1                                               @G38ESBB P2485190
EABCHRET TM    IOBECBCC,X'20'      TEST COMPLETION CODE        @OZ27300 P2485200
         BNZ   EABEXIT             BR IF NO ERROR INDICATED    @OZ27300 P2485400
         SPACE 1                                               @OZ27300 P2485600
         MVI   IOBFLAG2,0          RESET IOBFLAG2              @OZ27300 P2485800
         MVC   IOBERRCT,$ZEROS      IOBERRCT                   @OZ27300 P2486000
         NI    DCBIFLGS,X'3F'        AND DCBIFLGS              @OZ27300 P2486200
         SPACE 1                                               @OZ27300 P2486400
         TM    UCBTBYT3,UCB3DACC   TEST DEVICE TYPE            @OZ27300 P2486600
         BNO   EABNCKPT            BR IF NOT DASD              @OZ27300 P2486800
         CLC   $NUMDA,IOBSEEK-1    TEST DIRECT ACCESS EXTENT   @OZ27300 P2487000
         BH    EABNCKPT            BR IF NOT CHKPT DATA SET    @OZ27300 P2487200
         B     EDAREBLD            RESTORE CHKPT. CH. PROG.    @OZ42642 P2487210
         EJECT                                                 @OZ42642 P2487220
***************************************************************@OZ42642 P2487230
*                                                              @OZ42642 P2487240
*      SHUFFLE ADDRESSES IN CHANNEL PROGRAM TO...              @OZ42642 P2487250
*                                                              @OZ42642 P2487260
*   1) VERIFY THAT CHECKPOINT-LOCK IS ZERO (UNHELD). IF LOCK'S @OZ42642 P2487270
*      KEY-AREA IS NOT ZERO, READ IT IN (T1R1) AND GO TO 5.    @OZ42642 P2487280
*   2) SET CHECKPOINT-LOCK KEY AND DATA AREAS (T1R2)           @OZ42642 P2487290
*   3) READ MASTER RECORD (T1R3)                               @OZ42642 P2487300
*   4) READ CHECK RECORD  (T1R1)                               @OZ42642 P2487310
*   5) READ COUNT-AREA OF MASTER RECORD TO ENSURE COMPLETION   @OZ42642 P2487320
*                                                              @OZ42642 P2487330
*   ...SO THAT RETRIES CAN BE MADE FOR A                       @OZ42642 P2487340
*      RECOVERABLE READ ERROR.                                 @OZ42642 P2487350
*                                                              @OZ42642 P2487360
***************************************************************@OZ42642 P2487370
         SPACE 1                                               @OZ42642 P2487380
         USING JQBDSECT,R2         PROVIDE JQB AND CCW         @OZ42642 P2487390
         USING JQBCCWE,R10          PACKET ADDRESSABILITY      @OZ42642 P2487400
         SPACE 1                                               @OZ42642 P2487410
EADSHFL  LA    R10,JQBLOCKV        SAVE LOCKV POINTER          @OZ42642 P2487420
         L     R0,JQBCTNXT          TO MSTR                    @OZ42642 P2487430
         SPACE 1                                               @OZ42642 P2487440
         L     WD,JQBCHECK+(JQBCTNXT-JQBCCWE) POINT LOCKV PKT  @OZ42642 P2487450
         ST    WD,JQBCTNXT                  TO LOCK VIA CHECK  @OZ42642 P2487460
         SPACE 1                                               @OZ42642 P2487470
         LA    R10,JQBCHECK                   POINT CHECK      @OZ42642 P2487480
         L     WD,JQBLOCK+(JQBCTNXT-JQBCCWE)   TO VERP         @OZ42642 P2487490
         ST    WD,JQBCTNXT                      VIA LOCK       @OZ42642 P2487500
         SPACE 1                                               @OZ42642 P2487510
         LA    R10,JQBLOCK         POINT LOCK PACKET TO MSTR   @OZ42642 P2487520
         ST    R0,JQBCTNXT          VIA LOCKV                  @OZ42642 P2487530
         SPACE 1                                               @OZ42642 P2487540
         OI    JQBFLAG2,JQB2SHFL   INDICATE PACKETS SHUFFLED   @OZ42642 P2487550
         BR    R15                  AND RETURN TO CALLER       @OZ42642 P2487560
         EJECT                                                 @OZ42642 P2487570
***************************************************************@OZ42642 P2487580
*                                                              @OZ42642 P2487590
*      UNSHUFFLE ADDRESSES OF CHANNEL PROGRAM AS FOLLOWS       @OZ42642 P2487600
*      FOR RETURN TO CALLER...                                 @OZ42642 P2487610
*                                                              @OZ42642 P2487620
*   1) VERIFY THAT CHECKPOINT-LOCK IS ZERO (UNHELD). IF LOCK'S @OZ42642 P2487630
*      KEY-AREA IS NOT ZERO, READ IT IN (T1R1) AND GO TO 5.    @OZ42642 P2487640
*   2) READ MASTER RECORD (T1R3)                               @OZ42642 P2487650
*   3) READ CHECK RECORD  (T1R1)                               @OZ42642 P2487660
*   4) SET CHECKPOINT-LOCK KEY AND DATA AREAS (T1R2)           @OZ42642 P2487670
*   5) READ COUNT-AREA OF MASTER RECORD TO ENSURE COMPLETION   @OZ42642 P2487680
*                                                              @OZ42642 P2487690
***************************************************************@OZ42642 P2487700
         SPACE 1                                               @OZ42642 P2487710
EADNSHFL LA    R10,JQBLOCKV        SAVE LOCKV POINTER          @OZ42642 P2487720
         L     R0,JQBCTNXT          TO LOCK                    @OZ42642 P2487730
         SPACE 1                                               @OZ42642 P2487740
         L     WD,JQBLOCK+(JQBCTNXT-JQBCCWE)  POINT LOCKV PKT  @OZ42642 P2487750
         ST    WD,JQBCTNXT                   TO MSTR VIA LOCK  @OZ42642 P2487760
         SPACE 1                                               @OZ42642 P2487770
         LA    R10,JQBLOCK                    POINT LOCK       @OZ42642 P2487780
         L     WD,JQBCHECK+(JQBCTNXT-JQBCCWE)  TO VERP         @OZ42642 P2487790
         ST    WD,JQBCTNXT                      VIA CHECK      @OZ42642 P2487800
         SPACE 1                                               @OZ42642 P2487810
         LA    R10,JQBCHECK        POINT CHECK PACKET TO LOCK  @OZ42642 P2487820
         ST    R0,JQBCTNXT          VIA LOCKV                  @OZ42642 P2487830
         SPACE 1                                               @OZ42642 P2487840
         NI    JQBFLAG2,255-JQB2SHFL SHOW PACKETS UNSHUFFLED   @OZ42642 P2487850
         BR    R15                    AND RETURN TO CALLER     @OZ42642 P2487860
         EJECT                                                 @OZ42642 P2487870
***************************************************************@OZ42642 P2487880
*                                                              @OZ42642 P2487890
*        RESTORE CHKPT CHANNEL PROGRAM TO ORIGINAL STATE       @OZ27300 P2488000
*                                                              @OZ27300 P2488200
***************************************************************@OZ27300 P2488400
         SPACE 1                                               @OZ27300 P2488600
*        THIS LINE DELETED BY APAR ===>                        @OZ42642 P2488800
*        THIS LINE DELETED BY APAR ===>                        @OZ42642 P2489000
         SPACE 1                                               @OZ27300 P2489200
EDAREBLD ICM   R10,15,JQBERRPK     GET RESTART PACKET ADDRESS  @OZ27300 P2489400
         BZ    EABITEST            BR IF NONE                  @OZ27300 P2489600
         SPACE 1                                               @OZ27300 P2489800
         L     R8,JQBCTIC+4         RESTORE                    @OZ27300 P2490000
         LRA   R0,0(,R8)             RESTART                   @OZ27300 P2490200
         STCM  R0,7,JQBCTNXT+CCWADDR  CCW PACKET               @OZ27300 P2490400
         SPACE 1                                               @OZ27300 P2490600
         L     R10,JQBERRST         RESTORE                    @OZ27300 P2490800
         ST    R10,JQBSTART          IOBSTART                  @OZ27300 P2491000
         N     R10,EROUNDWN           AND                      @OZ27300 P2491100
         MVC   JQBSEEK+1(6),JQBCADDR   IOBSEEK                 @OZ27300 P2491110
         SPACE 1                                               @OZ27300 P2491120
         MVC   JQBERRPK,$ZEROS     RESET JQB                   @OZ27300 P2491130
         MVC   JQBERRST,$ZEROS      ERROR FIELDS               @OZ27300 P2491140
         SPACE 1                                               @OZ27300 P2491150
         B     EABITEST            BR TO CONTINUE              @OZ27300 P2491160
         SPACE 1                                               @OZ27300 P2491170
         DROP  R10                 KILL PACKET ADDRESSABILITY  @OZ27300 P2491180
         EJECT                                                 @OZ27300 P2491190
***************************************************************@OZ27300 P2491200
*                                                              @OZ27300 P2491210
*        HANDLE 3800 DATA-LOST CONDITION (PAPER JAM)           @OZ27300 P2491220
*                                                              @OZ27300 P2491230
***************************************************************@OZ27300 P2491240
         SPACE 1                                               @OZ27300 P2491250
         USING BUFDSECT,R2         PROVIDE IOB ADDRESSABILITY  @OZ27300 P2491260
         USING DCTDSECT,R5         PROVIDE DCT ADDRESSABILITY  @OZ27300 P2491270
         SPACE 1                                               @OZ27300 P2491280
EABNCKPT L     R5,BUFDCT           GET DCT ADDRESS             @OZ27300 P2491310
         SPACE 1                                               @OZ27300 P2491320
         CLC   UCBTBYT3(2),EUCB3800  TEST FOR 3800 PRINTER     @OZ27300 P2491520
         BNE   ETST3211            BR IF NOT                   @OZ27300 P2491720
         SPACE 1                                               @OZ27300 P2491920
         LA    R6,X'10'            3800 CANCEL KEY STATUS BIT  @OZ27300 P2492120
         SPACE 1                                               @OZ27300 P2492320
         L     R8,28(,R1)                LOCATE ERROR          @OZ27300 P2492520
         L     R8,SRBPARM-SRBDSECT(,R8)   RECOVERY WORK        @OZ27300 P2492720
         L     R8,IOSERP-IOSB(,R8)         AREA AND ESTABLISH  @OZ27300 P2492920
         USING EWADSECT,R8                  ADDRESSABILITY     @OZ27300 P2493120
                                   PRINT OFF - SECTION DELETED @OZ27300 P2494000
*                                  THIS CARD DELETED BY APAR   @OZ27300 P2495000
*                                  THIS CARD DELETED BY APAR   @OZ27300 P2496000
                                   PRINT ON -- SECTION DELETED @OZ27300 P2497000
         SPACE 1                                               @OZ27300 P2498000
         L     R10,UCBXTADR        ESTABLISH UCB EXTENSION     @G38ESBB P2498100
         USING UCB3800X,R10             ADDRESSABILITY         @G38ESBB P2498200
         TM    EWASNS+3,X'08'      TEST FOR SYS RESTART BIT    @OZ27300 P2498500
         BZ    ECANKEY             BR IF NOT                   @OZ27300 P2499000
         OI    DCTPPSW2,DCTCKJAM   SET DATA LOST INDICATOR     @G38ESBB P2499500
         MVC   DCTLDPID,UCBPGID    OBTAIN FUSER PAGE ID        @G38ESBB P2500000
         OI    EWAFLG3,EWAJAM      BYPASS INERVENTION REQ MSG  @OZ27300 P2500500
         LH    R0,EWASNS+20        LOAD PAGE BACKUP COUNT      @OZ49204 P2500510
         SPACE 1                                               @G38ESBB P2500600
         DROP  R8                  SUSPEND EWA                 @G38ESBB P2500700
         SPACE 1                                               @G38ESBB P2500800
         L     R8,DCTPCE           GET PCE ADDRESS             @G38ESBB P2500900
         MVC   PFSBSCT-PCEDSECT(,R8),$ZEROS IND ZERO BACKSPACE @G38ESBB P2501000
         CLC   UCBLDATA,$ZEROS     LOST PAGE COUNT VALID---    @G38ESBB P2501100
         BNE   ECANKEY             BRANCH IF YES               @G38ESBB P2501500
         EJECT                                                 @G38ESBB P2501510
         L     R8,PQHADR-PCEDSECT(,R8) LOAD ADR OF PQH         @G38ESBB P2501520
         SPACE 1                                               @G38ESBB P2501530
         USING PQHDSECT,R8         PQH ADDRESSABILITY          @G38ESBB P2501540
         USING PQEDSECT,R15        PQE ADDRESSABILITY          @G38ESBB P2501550
         SPACE 1                                               @G38ESBB P2501560
         L     R15,PQHPIDE         ADR OLDEST PQE PENDING ID   @G38ESBB P2501570
         LA    R14,PQHFIRST-(PQENEXT-PQEDSECT) ADR OLDEST PQE  @G38ESBB P2501580
         CLR   R15,R14             ANY NON-PENDING PQES....    @G38ESBB P2501590
         BNE   EPQPREV             BRANCH IF YES               @G38ESBB P2501600
         SPACE 1                                               @G38ESBB P2501610
         L     R15,PQHLAST         ADR NEWEST ACTIVE PQE       @G38ESBB P2501620
EPQLOOP  CLR   R15,R14             END OF PAGE QUEUE           @G38ESBB P2501630
         BE    ECANKEY             BRANCH IF YES               @G38ESBB P2501640
         SPACE 1                                               @G38ESBB P2501650
         CLI   PQETYPE,PQEC        CHECKPOINT PQE...           @G38ESBB P2501660
         BE    EPQPID              BRANCH IF YES               @G38ESBB P2501670
         SPACE 1                                               @G38ESBB P2501680
EPQPREV  L     R15,PQEPREV         GET ADR PREVIOUS PQE        @G38ESBB P2501690
         B     EPQLOOP             LOOP AGAIN                  @G38ESBB P2501700
         SPACE 1                                               @G38ESBB P2501710
EPQPID   LH    R15,PQECPGID        LOAD CHANNEL PAGE ID        @G38ESBB P2501720
         SLR   R15,R0              APPROX PAGE ID AT FUSER     @OZ49204 P2501730
         STH   R15,DCTLDPID        SET FUSER PAGE ID           @G38ESBB P2501740
         B     ECANKEY             BRANCH TO CONTINUE          @G38ESBB P2501750
         SPACE 1                                               @G38ESBB P2501760
         DROP  R8,R15              SUSPEND PQH PQE             @G38ESBB P2501770
         SPACE 1                                               @G38ESBB P2501780
ETST3211 B     EABCONT    *** NOP FOR 3211 CANCEL SUPPORT ***  @OZ27300 P2502000
         SPACE 1                                               @OZ27300 P2502500
         CLC   UCBTBYT3(2),EUCB3211  TEST FOR 3211 PRINTER     @OZ27300 P2503000
         BNE   EABCONT             BR IF NOT 3211 OR 3800      @OZ27300 P2503500
         SPACE 2                                               @OZ27300 P2504000
         LA    R6,X'02'            3211 CANCEL KEY STATUS BIT  @OZ27300 P2504500
         EJECT                                                 @OZ27300 P2505000
***************************************************************@OZ27300 P2505500
*                                                              @OZ27300 P2506000
*        3211/3800 CANCEL KEY -- SIMULATE FWD-SPACE DATA SET   @OZ27300 P2506500
*                                                              @OZ27300 P2507000
***************************************************************@OZ27300 P2507500
         SPACE 1                                               @OZ27300 P2508000
ECANKEY  TM    IOBSENS0,X'10'      UNIT EXCEPTION...           @OZ27300 P2508500
         BZ    EABCONT             BR IF NO                    @OZ27300 P2509000
         EX    R6,ECANTEST         CANCEL KEY SENSE BIT...     @OZ27300 P2509500
         BZ    EABCONT             BR IF NO                    @OZ27300 P2510000
         SPACE 1                                               @G38ESBB P2510200
         CLC   UCBTBYT3(2),EUCB3800 IS THIS A 3800             @G38ESBB P2510400
         SPACE 1                                               @OZ27300 P2510500
         BNE   ECAN3211            BR IF NO                    @G38ESBB P2510600
         MVC   DCTLDPID,UCBPGID    GET TRANSFER STATION PAGE   @G38ESBB P2510800
         OI    DCTPPSW2,DCTCKJAM   SET DATA LOST INDICATOR     @G38ESBB P2511000
         L     R8,DCTPCE           GET PCE ADDRESS             @G38ESBB P2511200
         MVC   PFSBSCT-PCEDSECT(,R8),EFDSET SET $F DATASET     @G38ESBB P2511300
*        THIS CARD DELETED BY                                  @G38ESBB P2511400
         CLC   UCBLDATA,$ZEROS     LOST PAGE COUNT VALID---    @G38ESBB P2511410
         BNE   EABCONT             BRANCH IF VALID             @G38ESBB P2511420
         L     R8,PQHADR-PCEDSECT(,R8) LOAD ADR OF PQH         @G38ESBB P2511430
         MVC   DCTLDPID,PQHOPG-PQHDSECT(R8) SET XFER PAGE ID   @G38ESBB P2511440
         B     EABCONT             BR TO CONTINUE              @G38ESBB P2511450
         SPACE 1                                               @OZ27300 P2511500
ECAN3211 OI    DCTFLAGS,DCTBKSP    SET DATA LOST INDICATOR     @G38ESBB P2512000
         L     R10,DCTPCE                 FORWARD              @OZ27300 P2512500
         L     R0,=X'3FFFFFFF'             SPACE               @OZ40731 P2513000
         ST    R0,PFSBSCT-PCEDSECT(,R10)    DATA SET           @OZ40731 P2513500
         B     EABCONT             CONTINUE                    @OZ27300 P2514000
         SPACE 2                                               @OZ27300 P2514500
         DROP  R5                  RELEASE DCT ADDRESSABILITY  @OZ27300 P2515000
         SPACE 2                                               @OZ27300 P2515500
ECANTEST TM    IOBSENS1,*-*        *** EXECUTE ONLY ***        @OZ27300 P2516000
         SPACE 1                                               @OZ27300 P2516500
EUCB3800 DC    AL1(UCB3UREC,UCB3800)  3800 PRINTER UCB TYPE    @OZ27300 P2517000
EUCB3211 DC    AL1(UCB3UREC,UCB3211)  3211 PRINTER UCB TYPE    @OZ27300 P2517500
EUCB1403 DC    AL1(UCB3UREC,UCB1403)  1403 PRINTER UCB TYPE    @OZ27300 P2518000
ERPISIB  DC    H'16'               RPI/SIB CCW SIZE            @G38ESBB P2518100
EFDSET   DC    X'3FFFFFFF'         $F DATASET PAGE COUNT       @G38ESBB P2518200
         EJECT                                                 @OZ27300 P2518500
***************************************************************@OZ27300 P2519000
*                                                              @OZ27300 P2519500
*        ***  PROGRAM CONTROLLED INTERRUPT APPENDAGE  ***      @OZ27300 P2520000
*                                                              @OZ27300 P2520500
***************************************************************@OZ27300 P2521000
         SPACE 1                                               @OZ27300 P2521500
         USING EPCI,R15             ESTABLISH TEMPORARY LOCAL  @OZ27300 P2522000
         USING PCIDSECT,R10          AND PCIE ADDRESSABILITY   @OZ27300 P2522500
         SPACE 1                                               @OZ27300 P2523000
EPCI     STM   R0,R15,0(R13)       SAVE REGISTERS AND          @OZ27300 P2523500
         LM    BASE1,BASE2,EASYBASE  GET BASIC ADDRESSABILITY  @OZ27300 P2524000
         DROP  R15                     RELEASE TEMPORARY BASE  @OZ27300 P2524500
         SPACE 1                                               @OZ27300 P2525000
         LR    R9,R13              REMEMBER WHERE THE REQS ARE @OZ27300 P2525500
         SPACE 1                                               @OZ27300 P2526000
         L     R10,PPBPCIE         LOCATE ACTIVE PCIE          @OZ27300 P2526500
         SPACE 1                                               @OZ27300 P2527000
         L     R5,IOBCSW-1         LOCATE                      @OZ27300 P2527500
         LA    R5,0(,R5)            PCI                        @OZ27300 P2528000
         SH    R5,EBACKUP8           CCW                       @OZ27300 P2528500
         SPACE 1                                               @OZ27300 P2529000
         SLR   R5,R2               COMPUTE OFFSET INTO IOB     @OZ27300 P2529500
         SRL   R5,3                DIVIDE BY 8                 @OZ27300 P2530000
         CH    R5,PPBDISPL         PCI OCCURRED IN HI HALF...  @OZ27300 P2530500
         BNL   EPCIHIGH            BR IF YES                   @OZ27300 P2531000
         CLI   PPBFLAG1,C'L'       PCI IN LOW HALF, LAST LOW...@OZ27300 P2531500
         MVI   PPBFLAG1,C'L'       SET LOW                     @OZ27300 P2532000
         BE    EPCIRET             LAST WAS LOW, RETURN        @OZ27300 P2532500
         B     EPCIDONE            CONTINUE                    @OZ27300 P2533000
         SPACE 1                                               @OZ27300 P2533500
EPCIHIGH CLI   PPBFLAG1,C'H'       PCI IN HI HALF, LAST HI...  @OZ27300 P2534000
         MVI   PPBFLAG1,C'H'       SET HIGH                    @OZ27300 P2534500
         BE    EPCIRET             LAST WAS HIGH, RETURN       @OZ27300 P2535000
         SPACE 1                                               @OZ27300 P2535500
EPCIDONE TM    PCISGNAL,PCIBUSY    TEST FOR PREVIOUS ENTRY     @OZ27300 P2536000
         BZ    EPCIRET             RETURN IF YES               @OZ27300 P2536500
         NI    PCISGNAL,FF-PCIBUSY  ELSE SHOW PCIE NOT BUSY    @OZ27300 P2537000
         STCM  R2,7,PCIBUFAD       SET IOB ADDR IN PCIE        @OZ27300 P2537500
         TM    PCI1FLGS,X'40'      TEST IF NXT CCW AREA IS RDY @OZ27300 P2538000
         BZ    EPCIASYN            BRANCH IF CMD-CHAIN NOT ON  @OZ27300 P2538500
         L     R6,PPBCCWNX         ELSE, UPDATE IOBSTART       @OZ27300 P2539000
         ST    R6,IOBSTART          TO NEW CCW AREA, AND RESET @OZ27300 P2539500
         NI    CCWFLAG(R6),FF-PCI    PCI BIT IN CASE OF RETRY  @OZ27300 P2540000
         EJECT                                                 @OZ27300 P2540500
***************************************************************@OZ27300 P2541000
*                                                              @OZ27300 P2541500
*              ALERT MISSING INTERRUPT HANDLER (MIH) OF        @OZ27300 P2542000
*                         CHANNEL PROGRESS                     @OZ27300 P2542500
*                                                              @OZ27300 P2543000
***************************************************************@OZ27300 P2543500
         SPACE 1                                               @OZ27300 P2544000
EPCIASYN NI    UCBFLC,FF-UCBTICBT SHOW CHANNEL PGM PROGRESS    @OZ27300 P2544500
         L     R0,$ASYPCIQ        PICK UP OLD PCIE QUEUE CHAIN @OZ27300 P2545000
         SPACE 1                                               @OZ27300 P2545500
EPCINOK  STCM  R0,7,PCICHAIN       PUT PREVIOUS ON BEHIND      @OZ27300 P2546000
         CS    R0,R10,$ASYPCIQ     QUEUE IT                    @OZ27300 P2546500
         BNE   EPCINOK             TRY AGAIN UNTIL QUEUED      @OZ27300 P2547000
         SPACE 1                                               @OZ27300 P2547500
         MVI   $ASYNCP,FF          SET ASYNC POST INDICATION   @OZ27300 P2548000
         L     R13,$HASCB          PICK UP HASP ASCB ADDRESS   @OZ27300 P2548500
         L     R11,$HASPECB         AND ECB ADDRESS            @OZ27300 P2549000
         ICM   R11,B'1000',EPCIX80   SET HI-BIT FOR XMPOST     @OZ27300 P2549500
         DROP  R10                    KILL BASE1               @OZ27300 P2550000
         DROP  BASE1                   AND PCIE ADDRESSABILITY @OZ27300 P2550500
         SPACE 1                                               @OZ27300 P2551000
         L     R10,EPOSTM          GET POST COMPLETION CODE    @OZ27300 P2551500
         L     R8,0(,R11)          GET CONTENTS OF HASP ECB    @OZ27300 P2552000
         MVI   $SVPOSTW(R11),FF    $$POST HASP DISPATCHER      @OZ27300 P2552500
         SPACE 1                                               @OZ27300 P2553000
EPOSTEST LTR   R8,R8               TEST HASP ECB               @OZ27300 P2553500
         BM    EPCIPOST            BR IF HASP WAITING          @OZ27300 P2554000
         CS    R8,R10,0(R11)       TRY QUICK POST              @OZ27300 P2554500
         BNE   EPOSTEST            BR IF POST NOT SUCCESSFUL   @OZ27300 P2555000
         B     EPCIRET             GO RETURN                   @OZ27300 P2555100
         SPACE 1                                               @OZ27300 P2555600
EPCIPOST L     R15,CVTPTR                POINT R12 TO          @OZ27300 P2556000
         LA    R15,CVTBRET-CVTDSECT(,R15) BR 14 IN THE CVT     @OZ27300 P2556500
         ICM   R15,B'1000',EPCIX80         AND SET HIGH-ORDER  @OZ27300 P2557000
         LR    R12,R15                      BIT FOR XMPOST     @OZ27300 P2557500
         SPACE 1                                               @OZ27300 P2558000
         DROP  BASE2               KILL CODE ADDRESSABILITY    @OZ27300 P2558500
         SPACE 1                                               @OZ27300 P2559000
         L     R15,CVTPTR             GET ADDRESS OF           @OZ27300 P2559500
         L     R15,CVT0PT01-CVT(,R15)  POST ROUTINE FROM CVT   @OZ27300 P2560000
         BALR  R14,R15                  AND CALL IT            @OZ27300 P2560500
         SPACE 1                                               @OZ27300 P2561000
EPCIRET  LM    R0,R15,0(R9)        RESTORE EXCP REGISTERS      @OZ27300 P2561500
         BR    R14                 RETURN TO EXCP AT +0        @OZ27300XP2562000
                                    TO POST CHANNEL PROGRAM    @OZ27300 P2562500
         SPACE 1                                               @OZ27300 P2563000
EPCIX80  DC    X'80'               MASK FOR HI-ORDER BYTE      @OZ27300 P2563500
         EJECT                                                 @OZ27300 P2564000
***************************************************************@OZ27300 P2564500
*                                                              @OZ27300 P2565000
*        ***  NORMAL CHANNEL END APPENDAGE  ***                @OZ27300 P2565500
*                                                              @OZ27300 P2566000
***************************************************************@OZ27300 P2566500
         SPACE 1                                               @OZ27300 P2567000
         USING ECHANEND,R15        TEMP. LOCAL ADDRESSABILITY  @OZ27300 P2567500
         SPACE 1                                               @OZ27300 P2568000
ECHANEND TM    IOBFLAG1,X'04'+X'01' IS ERROR RTN IN CONTROL OR @OZ27300CP2568500
                                     IS BYPASS APPENDAGE SW ON @OZ27300 P2569000
         BNZR  R14                 RETURN IF YES               @OZ27300 P2569500
         SPACE 1                                               @OZ27300 P2570000
         STM   R0,R15,0(R13)       SAVE EXCP REGISTERS         @OZ27300 P2570050
         LM    BASE1,BASE2,EASYBASE  GET BASIC ADDRESSABILITY  @OZ27300 P2570100
         DROP  R15                     DROP TEMPORARY BASE     @OZ27300 P2570150
         SPACE 1                                               @OZ27300 P2570200
         USING HASP,BASE1          RE-ESTABLISH HCT AND        @OZ27300 P2570250
         USING $IOAPPEN,BASE2       LOCAL ADDRESSABILTY        @OZ27300 P2570300
         SPACE 1                                               @OZ27300 P2570350
         TM    UCBTBYT3,UCB3DACC   TEST FOR DEVICE TYPE        @OZ27300 P2570400
         BNO   ECHENODA            BRANCH IF NOT DIRECT ACCESS @OZ27300 P2570450
         SPACE 1                                               @OZ27300 P2570500
         CLC   $NUMDA,IOBSEEK-1    TEST DIRECT ACCESS EXTENT   @OZ27300 P2570550
         BH    ECHENODA            BRANCH IF NOT A CKPT EXTENT @OZ27300 P2570600
         EJECT                                                 @OZ27300 P2570650
***************************************************************@OZ27300 P2570700
*                                                              @OZ27300 P2571000
*        HANDLE I/O COMPLETION FOR CHECKPOINT CHANNEL PGM      @OZ27300 P2571500
*                                                              @OZ27300 P2572000
***************************************************************@OZ27300 P2572500
         SPACE 1                                               @OZ27300 P2573000
         USING JQBDSECT,R2         PROVIDE JQB ADDRESSABLITY   @OZ27300 P2573500
         SPACE 1                                               @OZ27300 P2574000
         L     R10,JQBERRPK        PICK UP END OF ERROR CHAIN  @OZ27300 P2574500
         LTR   R10,R10             TEST FOR RESTART NEEDED     @OZ27300 P2575000
         BZ    EABITEST            BRANCH IF NOT, TO POST      @OZ27300 P2575500
         SPACE 1                                               @OZ27300 P2576000
         USING JQBCCWE,R10         PROVIDE CCW PACKET BASE     @OZ27300 P2576500
         SPACE 1                                               @OZ27300 P2577000
         L     R8,JQBCTIC+4          RESET NOW COMPLETE        @OZ27300 P2577500
         LRA   R0,0(,R8)              CCW PACKET               @OZ27300 P2578000
         MVC   JQBERRPK,$ZEROS     RESET ERROR PACKET FIELD.   @OZ46698 P2578100
         CLM   R0,7,JQBCTNXT+CCWADDR LAST PACKET...            @OZ46698 P2578200
         BE    EABITEST            BRANCH IF SO, TO POST.      @OZ46698 P2578300
         STCM  R0,7,JQBCTNXT+CCWADDR   CHAINING                @OZ27300 P2578500
         SPACE 1                                               @OZ27300 P2579000
         LR    R10,R8               LOCATE BEGINNING           @OZ27300 P2579500
         N     R10,EROUNDWN          OF RESTART PACKET AND     @OZ27300 P2580000
         MVC   JQBSEEK+1(6),JQBCADDR  SET RESTART SEEK ADDR    @OZ27300 P2580500
         SPACE 1                                               @OZ27300 P2581000
         L     R8,JQBERRST         GET ORIGINAL IOBSTART       @OZ27300 P2581500
*              THIS LINE DELETED BY APAR OZ46698               @OZ46698 P2582000
         MVC   JQBERRST,$ZEROS      PACKET FIELDS              @OZ27300 P2582500
         CLC   JQBVERFY,EALLFFS    TEST CHANNEL PROGRAM STATUS @OZ27300 P2583000
         MVC   JQBVERFY,EALLFFS    RESET VERIFY VALUE          @OZ27300 P2583500
         BNE   EREDRIVE            BR IF CH PGM COMPLETED      @OZ27300 P2584000
         SPACE 1                                               @OZ27300 P2584500
         LR    R10,R8              RESTORE                     @OZ27300 P2585000
         ST    R10,JQBSTART         IOBSTART                   @OZ27300 P2585500
         N     R10,EROUNDWN          AND                       @OZ27300 P2586000
         MVC   JQBSEEK+1(6),JQBCADDR  IOBSEEK                  @OZ27300 P2586500
         SPACE 1                                               @OZ27300 P2587000
EABITEST TM    JQBFLAG2,JQB2SHFL   UNSHUFFLE                   @OZ42642 P2587500
         BNO   *+8                   PACKETS                   @OZ42642 P2587600
         BAL   R15,EADNSHFL            IF SHUFFLED             @OZ42642 P2587700
         TM    JQBFLAG1,JQB1INIT   TEST FOR HASPINIT CHKPT I/O @OZ42642 P2587800
         BO    EABEXIT             BR IF YES, RETURN TO EXCP   @OZ27300 P2588000
         B     EABCONT              ELSE, POST JES2            @OZ27300 P2588500
         SPACE 1                                               @OZ27300 P2589000
         USING BUFDSECT,R2         RESTORE BFR ADDRESSABILITY  @OZ27300 P2589500
         EJECT                                                 @OZ27300 P2590000
***************************************************************@OZ27300 P2590500
*                                                              @OZ27300 P2591000
*        HANDLE NON - DIRECT ACCESS CHANNEL ENDS               @OZ27300 P2591500
*                                                              @OZ27300 P2592000
***************************************************************@OZ27300 P2592500
                                   PRINT OFF - SECTION DELETED @OZ27300 P2593000
*                                  THIS CARD DELETED BY APAR   @OZ27300 P2594000
*                                  THIS CARD DELETED BY APAR   @OZ27300 P2595000
*                                  THIS CARD DELETED BY APAR   @OZ27300 P2596000
*                                  THIS CARD DELETED BY APAR   @OZ27300 P2597000
*                                  THIS CARD DELETED BY APAR   @OZ27300 P2598000
*                                  THIS CARD DELETED BY APAR   @OZ27300 P2599000
*                                  THIS CARD DELETED BY APAR   @OZ27300 P2600000
*                                  THIS CARD DELETED BY APAR   @OZ27300 P2601000
                                   PRINT ON -- SECTION DELETED @OZ27300 P2602000
         SPACE 1                                               @OZ27300 P2603000
ECHENODA L     R5,BUFDCT           ADDR OF DCT                 @OZ27300 P2604000
         TM    DCTDEVTP-DCTDSECT(R5),DCTPRPU  TEST FOR PRT/PCH @OZ27300 P2605000
         BZ    EABCONT             BR IF NOT                   @OZ27300 P2606000
         L     R10,IOBCSW-1        ADDR OF ACTUAL PCIE NOP+8   @OZ27300 P2607000
         LA    R10,0(,R10)         CLEAR HI-ORDER BYTE         @OZ27300 P2608000
         SH    R10,EBACKUP8        ADDR OF ACTUAL PCIE         @OZ27300 P2609000
         L     R8,PPBPCIE          ADDR OF EXPECTED PCIE       @OZ27300 P2610000
         L     R0,PCI1FLGS-PCIDSECT(,R10)  GET CCW FLAGS ETC   @OZ27300 P2611000
         SPACE 1                                               @OZ27300 P2612000
ECCTSTLP L     R6,ECCBIT           ISOLATE COMMAND CHAIN       @OZ27300 P2613000
         NR    R6,R0                  FLAG IN R6               @OZ27300 P2614000
         BNZ   EREDRIVE                  AND REDRIVE IF SET    @OZ27300 P2615000
         LR    R15,R0              COPY REGISTER               @OZ27300 P2616000
         N     R15,ENOTBUSY        RESET BUSY FLAG             @OZ27300 P2617000
         CS    R0,R15,PCI1FLGS-PCIDSECT(R10)  REPLACE IN PCIE  @OZ27300 P2618000
         BNE   ECCTSTLP            BR IF CHANGED -- TRY AGAIN  @OZ27300 P2619000
         NI    PCISGNAL-PCIDSECT(R8),FF-PCIBUSY  SHOW NOT BUSY @OZ27300 P2620000
         EJECT                                                 @OZ27300 P2621000
***************************************************************@OZ27300 P2622000
*                                                              @OZ27300 P2623000
*         QUEUE COMPLETED IOBS TO $ASYNC AND POST JES2 TCB     @OZ27300 P2624000
*                                                              @OZ27300 P2625000
***************************************************************@OZ27300 P2626000
         SPACE 1                                               @OZ27300 P2627000
EABCONT  LA    R2,0(0,R2)          PURIFY BUFFER ADDRESS       @OZ27300 P2628000
         TM    BUFTYPE,BUFTP       CHECK BUFFER TYPE           @OZ27300 P2629000
         BO    ECHENDTP            BRANCH IF TP BUFFER         @OZ27300 P2630000
         L     R15,$ASYNCQ         PICK UP OLD CHAIN           @OZ27300 P2631000
         SPACE 1                                               @OZ27300 P2632000
ENOK     ST    R15,BUFCHAIN        PUT PREVIOUS BFRS ON LIFO   @OZ27300 P2633000
         CS    R15,R2,$ASYNCQ       AND QUEUE THEM             @OZ27300 P2634000
         BNE   ENOK                IF NOT QUEUED TRY AGAIN     @OZ27300 P2635000
         MVI   $ASYNCP,FF          SET ASYNC POST INDICATION   @OZ27300 P2636000
         B     EPOSTJES            BRANCH TO POST JES          @OZ27300 P2637000
         SPACE 1                                               @OZ27300 P2638000
ECHENDTP L     R15,$RJECHEQ        PICK UP OLD CHAIN           @OZ27300 P2639000
         ST    R15,BUFCHAIN        PUT PREVIOUS BFRS ON LIFO   @OZ27300 P2640000
         CS    R15,R2,$RJECHEQ      AND QUEUE THEM             @OZ27300 P2641000
         BNE   *-8                 RETRY IF UNSUCCESSFUL       @OZ27300 P2641200
         L     R10,$SSVT           POINT TO SSVT               @OZ27300 P2641400
         MVI   $SVMLLM-SSVT(R10),FF  LINE MGR POST REQUIRED    @OZ27300 P2641600
         SPACE 1                                               @OZ27300 P2641800
EPOSTJES L     R15,EPOSTM          PICK UP POST MASK           @OZ27300 P2642000
         L     R10,IOBECBPT        GET ADDRESS OF ECB TO POST  @OZ27300 P2642200
         LA    R10,0(,R10)          AND PURIFY IT              @OZ27300 P2642400
         L     R8,0(,R10)          GET CONTENTS OF HASP ECB    @OZ27300 P2642600
         MVI   $SVPOSTW(R10),FF    $$POST HASP DISPATCHER      @OZ27300 P2643000
         SPACE 1                                               @OZ27300 P2644000
EPNOK    LTR   R8,R8               TEST FOR WAITING            @OZ27300 P2645000
         BM    EABEXIT             LET EXCP POST IF WAITING    @OZ27300 P2646000
         CS    R8,R15,0(R10)       TRY QUICK POST              @OZ27300 P2647000
         BNE   EPNOK               IF NOT SAME TRY AGAIN       @OZ27300 P2648000
         B     ENOPOST             TELL EXCP TO SKIP POST      @OZ27300 P2649000
         EJECT                                                 @OZ27300 P2650000
***************************************************************@OZ27300 P2651000
*                                                              @OZ27300 P2652000
*        EXITS FROM I/O APPENDAGE ROUTINES                     @OZ27300 P2653000
*                                                              @OZ27300 P2654000
***************************************************************@OZ27300 P2655000
         SPACE 1                                               @OZ27300 P2656000
EABEXIT  LM    R0,R15,0(R13)       RESTORE EXCP REGISTERS      @OZ27300 P2657000
         BR    R14                 RETURN TO EXCP AT +0        @OZ27300CP2658000
                                    TO POST CALLER'S ECB       @OZ27300 P2659000
         SPACE 2                                               @OZ27300 P2660000
ENOPOST  LM    R0,R15,0(R13)       RESTORE EXCP REGISTERS      @OZ27300 P2661000
         B     4(,R14)             RETURN TO EXCP AT +4        @OZ27300CP2662000
                                    TO SKIP POST               @OZ27300 P2663000
         SPACE 2                                               @OZ27300 P2664000
EREDRIVE LA    R10,0(,R10)         ZERO BYTE THE FIRST         @OZ27300 P2665000
         ST    R10,IOBSTART        TELL IOS TO START HERE      @OZ27300 P2666000
         MVI   IOBFLAG1,X'42'      UNRELATED+CHAINING          @OZ27300 P2667000
         MVI   IOBFLAG2,0          CLEAR IOB FIELDS            @OZ27300 P2668000
         MVI   IOBSENS0,0             IN ORDER TO              @OZ27300 P2669000
         MVI   IOBSENS1,0                REDRIVE I/O           @OZ27300 P2670000
         MVC   IOBCSW-1(8),$ZEROS  RESET IOB CSW               @OZ27300 P2671000
         SPACE 1                                               @OZ27300 P2671075
         LM    R0,R15,0(R13)       RESTORE EXCP REGISTERS      @OZ27300 P2671150
         B     8(,R14)             RETURN TO EXCP AT +8        @OZ27300XP2671225
                                    TO REDRIVE EXCP            @OZ27300 P2671300
         SPACE 1                                               @OZ27300 P2671375
         DROP  R2,R4,R7,BASE2      KILL APPDG ADDRESSABILITY   @OZ27300 P2671450
         EJECT                                                 @OZ27300 P2671525
***************************************************************@OZ27300 P2671600
*                                                              @OZ27300 P2671675
*        I/O APPENDAGE ROUTINE CONSTANTS                       @OZ27300 P2671750
*                                                              @OZ27300 P2671825
***************************************************************@OZ27300 P2671900
         SPACE 1                                               @OZ27300 P2672000
EALLFFS  DC    2F'-1'              FWD-SPACE DSET CONSTANT     @OZ27300 P2673000
EPOSTM   DC    A(X'40000000')      POST MASK FOR QUICK POSTS   @OZ27300 P2673300
ECCBIT   DC    AL1(CC),AL3(0)      COMMAND CHAINING BIT        @OZ27300 P2673600
ENOTBUSY DC    A(-1-PCIBUSY)       BUSY FLAG OFF MASK          @OZ27300 P2674000
EASYBASE DC    A(HASP),A($IOAPPEN) STANDARD BASE1 AND BASE2    @OZ27300 P2675000
EROUNDWN DC    A(-64)              CONSTANT FOR 64 BNDRY ROUND @OZ27300 P2676000
EBACKUP8 DC    H'8'                USED IN CSW ADJUSTMENT      @OZ27300 P2677000
         SPACE 3                                               @OZ55804 P2677100
************************************************************** @OZ55804 P2677200
*                                                              @OZ55804 P2677300
* $FIXEND --- END OF HASPNUC FIXED STORAGE REQUIREMENT         @OZ55804 P2677400
*                                                              @OZ55804 P2677500
************************************************************** @OZ55804 P2677600
         SPACE 1                                               @OZ55804 P2677700
$FIXEND  EQU   *    **USED BY HASPINGO FOR NUC PAGE FIX ***    @OZ55804 P2677800
         TITLE 'HASP ASYNCHRONOUS INPUT/OUTPUT PROCESSOR'               P2678000
*********************************************************************** P2679000
*                                                                     * P2680000
*        $ASYNC - ASYNCHRONOUS INPUT/OUTPUT PROCESSOR                 * P2681000
*                                                                     * P2682000
* FUNCTION                                                            * P2683000
*                                                                     * P2684000
*    THE PRIMARY FUNCTION OF THIS PROCESSOR IS TO SYNCHRONIZE         * P2685000
*    EVENTS DUE TO CHANNEL ENDS FOR I/O REQUESTED BY PROCESSORS       * P2686000
*    WITHIN THE MAIN HASP TASK. SECONDARY FUNCTIONS INCLUDE           * P2687000
*    FREEING OF UNUSED COMMON STORAGE AREA CELLS IN A MANNER SO AS    * P2688000
*    TO GRADUALLY REDUCE THE UNUSED STORAGE COMMITMENT, GET NEW       * P2689000
*    STORAGE CELLS ON DEMAND, AND REQUEUE CMBS QUEUED TO THE          * P2690000
*    $DOMQUEA TO THE $DOMQUE FOR THE HASP COMMUNICATIONS DAUGHTER     * P2691000
*    TASK.                                                            * P2692000
*                                                                     * P2693000
* INPUT REGISTERS                                                     * P2694000
*                                                                     * P2695000
*        R11   = HCT ADDRESS (BASE1)                                  * P2696000
*        R12   = BASE ADDRESS (BASE2)                                 * P2697000
*        R13   = PCE ADDRESS (SAVE)                                   * P2698000
*                                                                     * P2699000
*********************************************************************** P2700000
         SPACE 3                                                     R4 P2701000
         USING PCEDSECT,SAVE       PROVIDE PCE ADDRESSABILITY        R4 P2702000
         USING SSVT,R10            PROVIDE SSVT ADDRESSABILITY       R4 P2703000
         USING CCEDSECT,R7         PROVIDE CCE ADDRESSABILITY        R4 P2704000
         USING CCADSECT,BASE3      PROVIDE CCA ADDRESSABILITY        R4 P2705000
         SPACE 3                                                     R4 P2706000
$ASYNC  $ENTRY BASE=BASE2          PROVIDE PROCESSOR ENTRY POINT     R4 P2707000
         SPACE 1                                                     R4 P2708000
         L     R10,$SSVT           POINT TO SSVT                     R4 P2709000
         L     BASE3,$CCAREA       POINT TO CCA                      R4 P2710000
         EJECT                                                          P2711000
*********************************************************************** P2712000
*                                                                     * P2713000
*        FREE UNUSED COMMON STORAGE AREA CELLS                        * P2714000
*                                                                     * P2715000
* REGISTERS                                                           * P2716000
*                                                                     * P2717000
*        R0    = WORK, PRIMARY CLAIM CODE                             * P2718000
*        R1    = WORK                                                 * P2719000
*        R2    = PRIMARY CLAIM CODE                                   * P2720000
*        R3    = SECONDARY CLAIM CODE, WORK                           * P2721000
*        R5    = LOCAL LINKAGE                                        * P2722000
*        R6    = WORK, CCE ADDRESS                                    * P2723000
*        R7    = CCE ADDRESS                                          * P2724000
*        R8    = CCA ADDRESS                                          * P2725000
*        R10   = SSVT ADDRESS                                         * P2726000
*                                                                     * P2727000
*********************************************************************** P2728000
         SPACE 1                                                     R4 P2729000
ALOOP    L     R0,$SVASYNC         GET ASYNC POST ELEMENT      @OZ19496 P2730000
         LR    R1,R0               SET REGISTER FOR SWAP       @OZ19496 P2730100
         LA    R1,0(,R1)           CLEAR HIGH ORDER BYTE       @OZ19496 P2730200
HFRESET  CS    R0,R1,$SVASYNC      RESET POST FLAG             @OZ19496 P2730300
         BNE   HFRESET             LOOP UNTILL RESET           @OZ19496 P2730400
         SPACE 1                                               @OZ19496 P2730500
         STCK  CCACURT             STORE CLOCK                          P2731000
         BZ    HFCCKT              CHECK TIME                           P2732000
         SPACE 1                                                     R4 P2733000
HFCVAR   CLI   $SVVARF,X'0'        ANY VARIABLE FREE                    P2734000
         BE    HFNCELL             EXIT IF NOT                          P2735000
         SPACE 1                                                     R4 P2736000
* VARIABLE FREE REQUIRED                                                P2737000
         SPACE 1                                                     R4 P2738000
         LA    R7,$SVCELLS-(CCECCE-CCEDSECT) POINT TO HEADER            P2739000
         SPACE 1                                                     R4 P2740000
HFCELL   L     R7,CCECCE           POINT TO NEXT                        P2741000
         LTR   R7,R7               CHECK FOR END                        P2742000
         BZ    HFNCELL             EXIT IF END                          P2743000
         CLI   CCECSIZ,(512-1)/256 CHECK FOR IN RANGE                   P2744000
         BNH   HFCELL              LOOP                                 P2745000
         SPACE 1                                                     R4 P2746000
* WITHIN RANGE                                                          P2747000
         SPACE 1                                                     R4 P2748000
HFCVARGO MVI   $SVVARF,X'0'        FORCE FLAG ZERO                      P2749000
         SPACE 1                                                     R4 P2750000
HFCELVN  LM    R2,R3,CCESJB+CCETCB-CCETCB PICK UP ALLOCATION CELLS      P2751000
         LTR   R2,R2               CLAIMED                              P2752000
         BZ    HFCELC              EXIT IF FREEABLE                     P2753000
         SPACE 1                                                     R4 P2754000
HFCELVC  L     R7,CCECCE           POINT TO NEXT                        P2755000
         LTR   R7,R7               CHECK FOR END                        P2756000
         BNZ   HFCELVN             LOOP                                 P2757000
         B     HFNCELL             EXIT ON END                          P2758000
         SPACE 1                                                     R4 P2759000
HFCELC   BAL   R5,HFCFREE          FREE CELL                            P2760000
         B     HFCELVC             CONTINUE                             P2761000
         SPACE 1                                                     R4 P2762000
HFCCE    SLR   R6,R6               SET NOT FOUND                        P2763000
         EJECT                                                       R4 P2764000
HFCCEL   L     R7,CCECCE           POINT TO NEXT CCE                    P2765000
         LTR   R7,R7               CHECK FOR END                        P2766000
         BZ    HFCCELH             EXIT IF END                          P2767000
         CLM   R0,1,CCECSIZ        CHECK CELL SIZE                      P2768000
         BH    HFCCEL              LOOP                                 P2769000
         BL    HFCCELH             EXIT IF CCE HIGH                     P2770000
         LM    R2,R3,CCESJB+CCETCB-CCETCB PICK UP ALLOCATION WORDS      P2771000
         LTR   R2,R2               TEST FOR FREE                        P2772000
         BNZ   HFCCEL              LOOP                                 P2773000
         LR    R6,R7               COPY LOCATION                        P2774000
         B     HFCCEL              LOOP                                 P2775000
         SPACE 1                                                     R4 P2776000
HFCCELH  LTR   R6,R6               DID WE GET ANY                       P2777000
         BZR   R5                  EXIT                                 P2778000
         LR    R7,R6               POINT TO ONE TO FREE                 P2779000
         SLR   R2,R2               ZERO SJB POINTER                     P2780000
         SPACE 1                                                        P2781000
* CLAIM AND FREE CELL SUBROUTINE                                        P2782000
         SPACE 1                                                        P2783000
HFCFREE  LA    R0,1                SET CLAIM CODE                       P2784000
         L     R3,CCETCB           PICK UP TCB FIELD                    P2785000
         CDS   R2,R0,CCESJB        CLAIM                                P2786000
         BNZR  R5                  RETURN IF NOT CLAIMED                P2787000
         SLR   R3,R3               ZERO WORK                            P2788000
         IC    R3,CCECSIZ          PICK UP SIZE INDICATOR               P2789000
         LA    R0,1(0,R3)          (B-1)/256+1=SIZE IN 256B BLOCKS      P2790000
         SLA   R0,8                SIZE OF BLOCK                        P2791000
         ICM   R0,8,=AL1(231)      SET SUBPOOL                          P2792000
         ICM   R1,7,CCECLOC        PICK UP LOCATION                     P2793000
         FREEMAIN R,LV=(0),A=(1)   FREE STORAGE                         P2794000
         L     R2,=X'FF000000'     GET FREE FLAG                        P2795000
         ST    R2,CCESJB           FREE IT FOR A GET MAIN TASK          P2796000
         BR    R5                  RETURN                               P2797000
         SPACE 1                                                     R4 P2798000
HFCCKT   CLC   CCAPROJT,CCACURT    CHECK HIGH PART EXPIRED              P2799000
         BH    HFCVAR              CHECK FOR VARIABLE FREE              P2800000
         L     R0,CCACURT          PICK UP HIGH PART                    P2801000
         AL    R0,CCADELT          SET NEXT FREE TIME                   P2802000
         ST    R0,CCAPROJT         INTO PROJECTED                       P2803000
         LA    R7,$SVCELLS-(CCECCE-CCEDSECT) POINT TO QUEUE HEAD        P2804000
         LA    R0,(256-1)/256      SET SIZE ID                          P2805000
         BAL   R5,HFCCE            CHECK CCES                           P2806000
         LTR   R7,R7               TEST FOR END                         P2807000
         BZ    HFNCELL             EXIT IF YES                          P2808000
         LA    R0,(512-1)/256      SET SIZE ID                          P2809000
         BAL   R5,HFCCE            CHECK CCES                           P2810000
         LTR   R7,R7               TEST FOR END                         P2811000
         BZ    HFNCELL             EXIT IF YES                          P2812000
         CLI   $SVVARF,X'0'        ARE THERE ANY VARIABLE TO FREE       P2813000
         BNE   HFCVARGO            DO THEM                              P2814000
         SPACE 1                                                     R4 P2815000
HFNCELL  DS    0H                                                       P2816000
         EJECT                                                          P2817000
*********************************************************************** P2818000
*                                                                     * P2819000
*        GET CELLS FOR WAITING USERS                                  * P2820000
*                                                                     * P2821000
* REGISTERS                                                           * P2822000
*                                                                     * P2823000
*        R0    = PRIMARY CLAIM CODE, WORK                             * P2824000
*        R1    = WORK                                                 * P2825000
*        R2    = PRIMARY CLAIM CODE, WORK                             * P2826000
*        R4    = CELL SIZE INDICATOR                                  * P2827000
*        R8    = CCA ADDRESS                                          * P2828000
*        R10   = SSVT ADDRESS                                         * P2829000
*        R11   = HCT/SSVT ADDRESS                                     * P2830000
*        R15   = WORK,ENTRY ADDRESS TO SUBROUTINES                    * P2831000
*        R14   = LINKAGE                                              * P2832000
*                                                                     * P2833000
*********************************************************************** P2834000
         SPACE 1                                                     R4 P2835000
         CLI   $SVCPOST,X'FF'      DOES SOME ONE WANT CELL              P2836000
         BE    HCNOCEL             EXIT IF NO CELLS DESIRED             P2837000
         $GETLOK ,                 LOCK                                 P2838000
         MVC   CCAPOST(CCACPL),$SVCPOST COPY REQUEST                    P2839000
         MVI   $SVCPOST,X'FF'      SET SWITCH FOR NEXT TIME             P2840000
         $FRELOK ,                 UNLOCK                               P2841000
         L     R4,CCACPREQ         GET SIZE INFORMATION                 P2842000
         LR    R11,R10             SET SSVT BASE                        P2843000
         L     R15,$SVGCMNS        POINT TO GET MAIN FOR CELLS          P2844000
         LA    R0,1                SET CLAIM CODE                       P2845000
         BALR  R14,R15             LINK TO GET MAIN                     P2846000
         L     BASE1,=A(HASP)      RESTORE BASE1                     R4 P2847000
         LTR   R1,R1               DID WE GET IT                        P2848000
         LA    R0,1                SET ABNORMAL POST CODE               P2849000
         BZ    HCPOST              IF NOT POST ABNORMAL                 P2850000
         SLR   R2,R2               FREE CELL INDICATOR                  P2851000
         ST    R2,CCESJB-CCEDSECT(,R7) FREE THE CELL                    P2852000
         SLR   R0,R0               ZERO POST CODE                       P2853000
         SPACE 1                                                     R4 P2854000
HCPOST   POST  ,(0),MF=(E,CCAPOST) POST USER                            P2855000
         DROP  R7                                                       P2856000
         DROP  R10                                                      P2857000
         SPACE 1                                                     R4 P2858000
HCNOCEL  DS    0H                                                       P2859000
         EJECT                                                          P2860000
*********************************************************************** P2861000
*                                                                     * P2862000
*        REQUEUE CMBS FROM $DOMQUEA TO $DOMQUE                        * P2863000
*                                                                     * P2864000
* REGISTERS                                                           * P2865000
*                                                                     * P2866000
*        R0    = WORK                                                 * P2867000
*        R1    = WORK, CMB ADDRESS                                    * P2868000
*        R2    = CMB ADDRESS                                          * P2869000
*        R4    = DOMID ( WHEN $DOM HAS ALREADY BEEN ISSUED )          * P2870000
*        R8    = CCA ADDRESS                                          * P2871000
*        R14   = LINKAGE                                              * P2872000
*        R15   = WORK, CMB ADDRESS                                    * P2873000
*                                                                     * P2874000
*********************************************************************** P2875000
         SPACE 1                                                     R4 P2876000
         USING CMBDSECT,R2                                              P2877000
         SPACE 1                                                     R4 P2878000
HWNXTCMB L     R2,$DOMQUEA         PICK UP DOM QUEUE (ACTIVE)           P2879000
         SPACE 1                                                     R4 P2880000
HWL      LTR   R2,R2               TEST FOR EMPTY                       P2881000
         BZ    HWNOCMB             EXIT IF EMPTY                        P2882000
         L     R1,CMBCMB           POINT TO NEXT                     R4 P2883000
         CS    R2,R1,$DOMQUEA      REMOVE FIRST IN CHAIN                P2884000
         BNZ   HWL                 LOOP IF NOT QUEUED                   P2885000
         TM    CMBLEVEL,$DOMACT    IS ACTION STILL ON                R4 P2886000
         BZ    HWFCMB              IF NOT DO FREE                       P2887000
         LA    R1,$DOMQUE-(CMBCMB-CMB) POINT TO QUEUE HEAD           R4 P2888000
         SPACE 1                                                     R4 P2889000
HWLCMB   LR    R15,R1              SAVE PREVIOUS                        P2890000
         ICM   R1,7,CMBCMB+1-CMB(R1)  POINT TO NEXT CMB              R4 P2891000
         BZ    HWQCMB              IF END QUEUE CMB                     P2892000
         CLC   CMBDOMID,CMBDOMID-CMB(R1) CHECK FOR ORDER             R4 P2893000
         BH    HWLCMB              LOOP                                 P2894000
         SPACE 1                                                     R4 P2895000
HWQCMB   ST    R1,CMBCMB           PUT HIGH ON END                   R4 P2896000
         ST    R2,CMBCMB-CMB(,R15) PUT CURRENT ON                    R4 P2897000
         B     HWNXTCMB            LOOP                                 P2898000
         SPACE 1                                                     R4 P2899000
HWFCMB   ICM   R4,15,CMBDOMID      PICK UP DOMID                     R4 P2900000
         $FRECMB CMB=(R2)          FREE CMB                             P2901000
         LR    R1,R4               SET DOM ID                           P2902000
         DOM   MSG=(1)             DELETE MESSAGE                       P2903000
         B     HWNXTCMB            LOOP                                 P2904000
         SPACE 1                                                     R4 P2905000
HWNOCMB  DS    0H                                                       P2906000
         SPACE 1                                                     R4 P2907000
         DROP  R2                                                       P2908000
         EJECT                                                       R4 P2909000
*********************************************************************** P2910000
*                                                                     * P2911000
*        HANDLE PROGRAM CONTROLLED INTERRUPTS                         * P2912000
*                                                                     * P2913000
* REGISTERS                                                           * P2914000
*                                                                     * P2915000
*        R0    = WORK                                                 * P2916000
*        R1    = PCIE ADDRESS                                         * P2917000
*              = BUFFER ADDRESS                                       * P2918000
*        R2    = WORK                                                 * P2919000
*        R3    = WORK                                                 * P2920000
*        R8    = CCA ADDRESS                                          * P2921000
*        R10   = SSVT ADDRESS                                         * P2922000
*        R11   = HCT ADDRESS                                          * P2923000
*        R12   = $ASYNC PROCESSOR BASE (BASE2)                        * P2924000
*        R15   = WORK                                                 * P2925000
*                                                                     * P2926000
*********************************************************************** P2927000
         SPACE 1                                                     R4 P2928000
         L     R1,$ASYPCIQ         GET PCIE QUEUE ENTRY              R4 P2929000
         LTR   R1,R1               TEST QUEUE HEAD                   R4 P2930000
         BZ    APCIEOQ             BR IF END OF QUEUE                R4 P2931000
         SPACE 1                                                     R4 P2932000
         USING PCIDSECT,R1         R1 = QUEUED PCIE                  R4 P2933000
         SPACE 1                                                     R4 P2934000
APCINOK  L     WA,PCICHAIN-1       POINT TO NEXT PCIE                R4 P2935000
         LA    WA,0(,WA)           CLEAR HI-ORDER BYTE               R4 P2936000
         CS    R1,WA,$ASYPCIQ      ATTEMPT TO DE-QUEUE THE PCIE      R4 P2937000
         BNZ   APCINOK             LOOP UNTIL SUCCESSFUL             R4 P2938000
         XC    PCICHAIN(3),PCICHAIN  CLEAR PCICHAIN FIELD      @OZ31088 P2938500
         L     R1,PCIBUFAD-1       PICK UP BUFFER ADDRESS FROM PCIE  R4 P2939000
         SPACE 1                                                     R4 P2940000
         USING BUFDSECT,R1         R1 = QUEUED BUFFER                R4 P2941000
         SPACE 1                                                     R4 P2942000
         L     WA,BUFEWF           GET USER EWF                      R4 P2943000
        $TRACE                                                       R4 P2944000
        $POST  (WA),IO             POST FOR I/O EVENT                R4 P2945000
         B     ALOOP               LOOP                              R4 P2946000
         SPACE 1                                                     R4 P2947000
         DROP  R1                  SUSPEND BUFFER ADDRESSABILITY     R4 P2948000
         SPACE 1                                                     R4 P2949000
APCIEOQ  DS    0H                                                    R4 P2950000
         EJECT                                                       R4 P2951000
*********************************************************************** P2952000
*                                                                     * P2953000
*        HANDLE CHANNEL END COMPLETIONS                               * P2954000
*                                                                     * P2955000
* REGISTERS                                                           * P2956000
*                                                                     * P2957000
*        R0    = WORK                                                 * P2958000
*        R1    = BUFFER ADDRESS                                       * P2959000
*        R2    = WORK                                                 * P2960000
*        R3    = WORK                                                 * P2961000
*        R8    = CCA ADDRESS                                          * P2962000
*        R10   = SSVT ADDRESS                                         * P2963000
*        R12   = PROCESSOR BASE (BASE2)                               * P2964000
*              = SYNCHRONIZED PROCESSOR APPENDAGE BASE (BASE2)        * P2965000
*        R15   = WORK                                                 * P2966000
*                                                                     * P2967000
*********************************************************************** P2968000
         SPACE 1                                                     R4 P2969000
         L     R1,$ASYNCQ          GET QUEUE ENTRY                      P2970000
         LTR   R1,R1               ANYTHING IN QUEUE                    P2971000
         BZ    AEOQ                BR IF NO                             P2972000
         SPACE 1                                                     R4 P2973000
         USING BUFDSECT,R1         PROVIDE BUFFER ADDRESSABILITY     R4 P2974000
         SPACE 1                                                     R4 P2975000
ANOK     L     WA,BUFCHAIN         POINT TO NEXT BUFFER                 P2976000
         CS    R1,WA,$ASYNCQ       PULL BUFFER OFF THE QUEUE            P2977000
         BNZ   ANOK                LOOP IF NOT OFF                      P2978000
         LH    WA,$EXCPCT          DECREMENT                            P2979000
         S     WA,AFONE             MASTER I/O COUNT                    P2980000
         BM    E01                 ERROR IF NEGATIVE                    P2981000
         STH   WA,$EXCPCT          UPDATE MASTER I/O COUNT              P2982000
         EJECT                                                       R4 P2983000
         MVC   BUFECBCC,IOBECBCC   SAVE CC FOR USER                  R4 P2984000
         L     WA,BUFDCT           WA = DCT ASSOCIATED WITH BUFFER      P2985000
         USING DCTDSECT,WA         ESTABLISH DCT ADDRESSABILITY         P2986000
         SR    WB,WB               ZERO WB                              P2987000
         IC    WB,DCTBUFCT         WB = DCT BUFFER COUNT                P2988000
         S     WB,AFONE            DECREMENT BY ONE                     P2989000
         BM    A01                 COUNT SHOULD NEVER GO MINUS          P2990000
         STC   WB,DCTBUFCT         SET NEW BUFFER COUNT                 P2991000
         L     WB,DCTPCE           USER PCE ADDRESS                     P2992000
         CLI   DCTDEVTP,PCEDAWR    TEST FOR DIRECT ACCESS DCT           P2993000
         BH    *+12                BR IF NO                             P2994000
         LA    WB,PCEDADCT-PCEDSECT  GET DCT OFFSET WITHIN PCE          P2995000
         SLR   WA,WB               GET PCE ADDRESS IN WA                P2996000
         LR    WB,WA               THEN TRANSFER TO WB                  P2997000
         DROP  WA                  KILL DCT ADDRESSABILITY              P2998000
         L     WA,BUFEWF           GET USER EWF                         P2999000
         LTR   WA,WA               *                                    P3000000
         BM    AENTER              MINUS = ASYNC. EXIT                  P3001000
         BZ    AFREE               ZERO  = NO ACTION                    P3002000
        $TRACE                                                          P3003000
         $POST (WA),IO             POST FOR I/O COMPLETION              P3004000
         B     ALOOP               LOOP                                 P3005000
         SPACE 1                                                     R4 P3006000
AENTER   NULL                      REQ. FOR ASYNC. ENTRY                P3007000
        $TRACE                                                          P3008000
         DROP  BASE2               TO PREVENT LATER ERRORS              P3009000
         L     BASE2,PCEBASE2-PCEDSECT(WB)   ESTABLISH USER ADDR        P3010000
         BALR  R15,WA              ENTER USER                           P3011000
         USING *,R15               ESTABLISH TEMPORARY ADDRESSABILITY   P3012000
         L     BASE2,AA$ASYNC      RESET BASE2 FOR $ASYNC               P3013000
         DROP  R15                 DROP TEMPORARY ADDRESSABILITY        P3014000
         USING $ASYNC,BASE2        RE-ESTABLISH $ASYNC ADDRESSABILITY   P3015000
         B     $ASYNC              AND GO AGAIN                         P3016000
         EJECT                                                       R4 P3017000
AFREE    NULL                                                           P3018000
        $TRACE                                                          P3019000
         CLI   BUFECBCC,X'7F'      TEST I/O COMPLETION CODE             P3020000
         BE    AFREE1              BRANCH IF NO ERROR                   P3021000
        $IOERROR (R1)              ERROR DETECTED                       P3022000
         SPACE 1                                                     R4 P3023000
AFREE1  $FREEBUF (R1)              FREE BUFFER                          P3024000
         B     ALOOP               LOOP                                 P3025000
         SPACE 1                                                     R4 P3026000
AEOQ     NULL                      END OF CHAIN REACHED                 P3027000
        $WAIT  WORK                WAIT                                 P3028000
         B     ALOOP               LOOP                                 P3029000
         SPACE 1                                                     R4 P3030000
A01     $ERROR                     NEGATIVE DCT BUFFER COUNT DISCOVERED P3031000
         SPACE 1                                                     R4 P3032000
E01     $ERROR                     NEGATIVE MASTER I/O COJNT            P3033000
         SPACE 1                                                     R4 P3034000
AFONE    DC    F'1'                CONSTANT                             P3035000
AA$ASYNC DC    A($ASYNC)           ADDRESSABILITY CONSTANT              P3036000
         SPACE 1                                                     R4 P3037000
         DROP  R1                  KILL BUFFER ADDRESSABILITY           P3038000
         DROP  BASE3               KILL CCA ADDRESSABILITY           R4 P3039000
         SPACE 1                                                     R4 P3040000
         LTORG                                                       R4 P3041000
         TITLE 'HASP $TIMER PROCESSOR'                                  P3042000
*********************************************************************** P3043000
*                                                                     * P3044000
* PROCESSOR NAME -- $TIMER                                            * P3045000
*                                                                     * P3046000
* DESCRIPTIVE NAME -- JES2 INTERVAL TIMER RESET PROCESSOR             * P3047000
*                                                                     * P3048000
* FUNCTION -- RESET THE INTERVAL TIMER AFTER A TIMER INTERRUPT        * P3049000
*                                                                     * P3050000
*********************************************************************** P3051000
         SPACE 5                                                        P3052000
$TIMER  $ENTRY BASE=BASE2          PROVIDE PROCESSOR ENTRY POINT     R4 P3053000
         SPACE 1                                                     R4 P3054000
         L     WC,$SSVT            POINT TO SSVT               @OZ20010 P3055000
         SPACE 1                                                     R4 P3056000
TIMERL   MVI   $SVTIMER-SSVT(WC),0 RESET POST FLAGS            @OZ20010 P3057000
         BAL   WA,IADJUST          POST COMPLETED STQE(S)               P3058000
         BAL   WA,ISETINT          SET NEXT INTERVAL                    P3059000
        $WAIT  WORK                WAIT FOR NEXT INTERVAL               P3060000
         B     TIMERL              LOOP                        @OZ20010 P3060100
         SPACE 2                                               @OZ20010 P3060200
         DROP  BASE2               DROP PROCESSOR BASE REG     @OZ20010 P3061000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P3062000
         TITLE 'HASP INTERVAL TIMER MANAGER'                   @OZ20010 P3062100
***************************************************************@OZ20010 P3062200
*                                                              @OZ20010 P3062300
*        $STIMER - SET INTERVAL TIMER                          @OZ20010 P3062400
*                                                              @OZ20010 P3062500
*        R0    = WORK, UNPREDICTABLE ON EXIT                   @OZ20010 P3062600
*        R1    = STQE ADDRESS, UNPREDICTABLE ON EXIT           @OZ20010 P3062700
*        R11   = HCT ADDRESS (BASE1)                           @OZ20010 P3062800
*        R14   = RETURN ADDRESS (LINK)                         @OZ20010 P3062900
*                                  THIS CARD DELETED BY APAR   @OZ20010 P3063000
*        R15   = WORK, UNPREDICTABLE ON EXIT                   @OZ20010 P3064000
*                                                              @OZ20010 P3064100
***************************************************************@OZ20010 P3064200
         SPACE 1                                               @OZ20010 P3064300
         USING $STIMER,WD          PROVIDE LOCAL ADDRESSABILITY@OZ20010 P3064400
         ENTRY $STIMER             ENTRY POINT FOR $STIMER     @OZ20010 P3064500
         CNOP  4,8                                             @OZ20010 P3064600
$STIMER $TRACE                                                 @OZ20010 P3064700
         ST    LINK,ITSAVE         SAVE                        @OZ20010 P3064800
         STM   WA,WD,ITSAVE1        REGISTERS                  @OZ20010 P3064900
         L     WD,$STIMERA         LOAD BASE ADDRESS           @OZ20010 P3065000
         LA    WC,0(,R1)           SAVE PURIFIED STQE ADDRESS  @OZ20010 P3065100
         LA    WB,ITCHAIN-ICHAIN   PREPARE TO SCAN STQE CHAIN  @OZ20010 P3065200
         SPACE 1                                               @OZ20010 P3065300
INXTTQE  LR    WA,WB               RELOAD STQE ADDRESS         @OZ20010 P3065400
         L     WB,ICHAIN(,WB)      GET NEXT STQE               @OZ20010 P3065500
         LTR   WB,WB               END OF STQE CHAIN...        @OZ20010 P3065600
         BZ    ISETTQE             BR IF YES                   @OZ20010 P3065700
         CR    WB,WC               IS THIS STQE OURS...        @OZ20010 P3065800
         BNE   INXTTQE             BR IF NO                    @OZ20010 P3065900
         MVC   ICHAIN(4,WA),ICHAIN(WB) DEQUEUE OUR STQE        @OZ20010 P3066000
         SPACE 1                                               @OZ20010 P3066100
ISETTQE  MVI   IPOST(R1),0         ZERO POST BIT               @OZ20010 P3066200
         L     WB,ITIME(,R1)       GET REQD TIME IN SECOND     @OZ20010 P3066300
         LCR   WB,WB               COMPLEMENT AND TEST         @OZ20010 P3066400
         BP    *+8                 NO CONVERSION IF ORIGINALLY @OZ20010 P3066500
         MH    WB,=H'-100'         CONVERT TO 100THS OF SECOND @OZ20010 P3066600
         ST    WB,ITIME(,R1)       AND OVER STORE              @OZ20010 P3066700
         LR    WC,R1               SAVE USERS TQE ADDRESS      @OZ20010 P3066800
         BAL   WA,IADJUST          POST ANY EXPIRED STQE'S     @OZ20010 P3066900
         L     R0,ITIME(,WC)       REQUESTED INTERVAL          @OZ20010 P3067000
         LA    WA,ITCHAIN-ICHAIN   FAKE 1ST CHAIN              @OZ20010 P3067100
         SPACE 1                                               @OZ20010 P3067200
INEXT    L     R1,ICHAIN(,WA)      GET NEXT STQE               @OZ20010 P3067300
         LTR   R1,R1               IS THIS END                 @OZ20010 P3067400
         BZ    INSERT              BRANCH IF YES TO INSERT     @OZ20010 P3067500
         CL    R0,ITIME(,R1)       IS REQUESTED INTERVAL LESS..@OZ20010 P3067600
         BL    INSERT              THAN THIS... BRANCH IF YES  @OZ20010 P3067700
         LR    WA,R1               NO... TO NEXT STQE          @OZ20010 P3067800
         B     INEXT               FOR CHECK                   @OZ20010 P3067900
         EJECT                                                 @OZ20010 P3068000
         CNOP  0,8                                             @OZ20010 P3068100
INSERT   ST    WC,ICHAIN(,WA)      INSERT INTO CHAIN           @OZ20010 P3068200
         ST    R1,ICHAIN(,WC)      CONTINUE CHAIN              @OZ20010 P3068300
         BAL   WA,ISETINT          GO START TIMER              @OZ20010 P3068400
         SPACE 1                                               @OZ20010 P3068500
IRETURN  L     LINK,ITSAVE         RESTORE                     @OZ20010 P3068600
         LM    WA,WD,ITSAVE1        REGISTERS                  @OZ20010 P3068700
         BR    LINK                  AND RETURN                @OZ20010 P3068800
         EJECT                                                 @OZ20010 P3068900
***************************************************************@OZ20010 P3069000
*                                                              @OZ20010 P3069100
*        $TTIMER - RETURN TIME REMAINING AND OPTIONALLY CANCEL @OZ20010 P3069200
*                                                              @OZ20010 P3069300
*        R0    = TIME REMAINING (IN SECONDS) ON EXIT           @OZ20010 P3069400
*        R1    = STQE ADDRESS (COMPLEMENTED IF CANCEL REQD)    @OZ20010 P3069500
*        R11   = HCT ADDRESS (BASE1)                           @OZ20010 P3069600
*        R14   = RETURN ADDRESS (LINK)                         @OZ20010 P3069700
*        R15   = WORK, UNPREDICTABLE ON EXIT                   @OZ20010 P3069800
*                                                              @OZ20010 P3069900
***************************************************************@OZ20010 P3070000
         SPACE 1                                               @OZ20010 P3070100
         ENTRY $TTIMER             ENTER POINT FOR $TTIMER     @OZ20010 P3070200
         CNOP  2,8                                             @OZ20010 P3070300
$TTIMER $TRACE                                                 @OZ20010 P3070400
         ST    LINK,ITSAVE         SAVE                        @OZ20010 P3070500
         STM   WA,WD,ITSAVE1        REGISTERS                  @OZ20010 P3070600
         L     WD,$STIMERA         LOAD COMMON TIMER BASE ADDR @OZ20010 P3070700
         LR    WC,R1               SAVE INPUT ADDRESS          @OZ20010 P3070800
         L     WA,ITCHAIN          START OF CHAIN              @OZ20010 P3070900
         LTR   R0,WA               IS IT ZERO                  @OZ20010 P3071000
         BZ    IRETURN             YES... RETURN WITH NO TIME  @OZ20010 P3071100
         BAL   WA,IADJUST          ADJUST INTERVALS            @OZ20010 P3071200
         LPR   R1,WC               GET ADDRESS OF STQE         @OZ20010 P3071300
         LA    WA,ITCHAIN-ICHAIN   FAKE STQE                   @OZ20010 P3071400
         SPACE 1                                               @OZ20010 P3071500
INEXT2   L     WB,ICHAIN(,WA)      GET NEXT                    @OZ20010 P3071600
         LTR   R0,WB               IS THIS END                 @OZ20010 P3071700
         BZ    IRET1               YES... RESTART AND RETURN   @OZ20010 P3071800
         CR    WB,R1               NO... IS THIS RQSTED STQE   @OZ20010 P3071900
         BE    IHERE               BRANCH IF YES               @OZ20010 P3072000
         LR    WA,WB               UPDATE CHAIN                @OZ20010 P3072100
         B     INEXT2              AND KEEP LOOKING            @OZ20010 P3072200
         SPACE 1                                               @OZ20010 P3072300
         CNOP  0,8                                             @OZ20010 P3072400
IHERE    L     R0,ITIME(,WB)       GET TIME REMAINING          @OZ20010 P3072500
         LTR   WC,WC               WAS CANCEL REQUESTED        @OZ20010 P3072600
         BP    IRET1               BRA IF NO                   @OZ20010 P3072700
         MVC   ICHAIN(4,WA),ICHAIN(WB)  YES... UNCHAIN         @OZ20010 P3072800
         SPACE 1                                               @OZ20010 P3072900
IRET1    LR    WC,R0               SAVE  R0                    @OZ20010 P3073000
         BAL   WA,ISETINT          GO RESET TIMER              @OZ20010 P3073100
         SR    WA,WA               CLEAR FOR DIVIDE            @OZ20010 P3073200
         LR    WB,WC               TIME IN TIMER UNITS         @OZ20010 P3073300
         LA    WC,100              CONVERSION FACTOR FOR SECS  @OZ20010 P3073400
         DR    WA,WC               CONVERT                     @OZ20010 P3073500
         SRL   WC,1                HALVE                       @OZ20010 P3073600
         CR    WA,WC               CHECK FOR REMAINDER         @OZ20010 P3073700
         LR    R0,WB               FOR USER                    @OZ20010 P3073800
         BL    *+8                 BR IF REMAINDER LT 1/2 SEC  @OZ20010 P3073900
         LA    R0,1(,WB)           OTHERWISE ROUND             @OZ20010 P3074000
         B     IRETURN             AND EXIT                    @OZ20010 P3074100
         SPACE 1                                               @OZ20010 P3074200
         TITLE 'HASP INTERVAL TIMER MANAGER -- SUBROUTINES'    @OZ20010 P3074300
*                                                              @OZ20010 P3074400
*        SUBROUTINE TO SET SYSTEM TIMER TO LOWEST INTERVAL     @OZ20010 P3074500
*                                                              @OZ20010 P3074600
         SPACE 1                                               @OZ20010 P3074700
         CNOP  0,8                                             @OZ20010 P3074800
ISETINT  L     WD,$STIMERA         LOAD COMMON BASE            @OZ20010 P3074900
         L     WB,ITCHAIN          GET FIRST STQE              @OZ20010 P3075000
         CL    WB,ISTQE            TEST                        @OZ20010 P3075100
         BER   WA                  RETURN IF ALREADY ACTIVE    @OZ20010 P3075200
         ST    WB,ISTQE            SAVE ADDRESS OF ACTIVE STQE @OZ20010 P3075300
         LTR   WB,WB               TEST AGAIN                  @OZ20010 P3075400
         BZR   WA                  RETURN IF NO STQE           @OZ20010 P3075500
         STIMER REAL,ITIMEUP,BINTVL=ITIME(,WB)  SET TIMER      @OZ20010 P3075600
         BR    WA                  AND RETURN                  @OZ20010 P3075700
         EJECT                                                 @OZ20010 P3075800
*                                                              @OZ20010 P3075900
*        SUBROUTINE TO POST PROCESSORS WHOSE TIME HAS EXPIRED  @OZ20010 P3076000
*                                                              @OZ20010 P3076100
         SPACE 1                                               @OZ20010 P3076200
         CNOP  4,8                                             @OZ20010 P3076300
IADJUST  L     WD,$STIMERA         RELOAD COMMON BASE          @OZ20010 P3076400
         LM    R0,R1,ICLOCK        GET PREVIOUS CLOCK VALUE    @OZ20010 P3076500
         STCK  ICLOCK              STORE CURRENT CLOCK         @OZ20010 P3076600
         BCR   7,WA                RETURN IF CLOCK INVALID     @OZ20010 P3076700
         LM    R14,R15,ICLOCK      GET CURRENT CLOCK           @OZ20010 P3076800
         SLR   R14,R0              SUBTRACT                    @OZ20010 P3076900
         SLR   R15,R1               PREVIOUS CLOCK             @OZ20010 P3077000
         BNM   *+6                   TO GET                    @OZ20010 P3077100
         BCTR  R14,0                  ELAPSED INTERVAL         @OZ20010 P3077200
         LA    R14,0(,R14)         PREVENT DIVIDE CHECK        @OZ20010 P3077300
         D     R14,=F'40960000'    CONVERT TO 100THS OF SECOND @OZ20010 P3077400
         LA    WB,ITCHAIN-ICHAIN   FAKE 1ST STQE               @OZ20010 P3077500
         SPACE 1                                               @OZ20010 P3077600
IPOSTIT  L     WB,ICHAIN(,WB)      GET FIRST STQE              @OZ20010 P3077700
         LTR   WB,WB               TEST                        @OZ20010 P3077800
         BZR   WA                  RETURN IF DONE              @OZ20010 P3077900
         L     R1,ITIME(,WB)       GET TIME                    @OZ20010 P3078000
         SR    R1,R15              COMPUTE TIME INTERVAL       @OZ20010 P3078100
         ST    R1,ITIME(,WB)       STORE TIME INTERVAL         @OZ20010 P3078200
         BP    IPOSTIT             LOOP IF TIME NOT EXPIRED    @OZ20010 P3078300
         SPACE 1                                               @OZ20010 P3078400
         L     R1,IPOST(,WB)       OTHERWISE GET ADDR OF PCE   @OZ20010 P3078500
         $POST (R1),WORK           AND POST IT                 @OZ20010 P3078600
         MVI   IPOST(WB),X'80'     SHOW TIMER POST             @OZ20010 P3078700
         MVC   ITCHAIN+1(3),ICHAIN+1(WB)     UPDATE STQE CHAIN @OZ20010 P3078800
         B     IPOSTIT             AND CHECK NEXT...           @OZ20010 P3078900
         SPACE 1                                               @OZ20010 P3079000
*                                                              @OZ20010 P3079100
*                        $STIMER STORAGE AND CONSTANTS         @OZ20010 P3079200
*                                                              @OZ20010 P3079300
         SPACE 1                                               @OZ20010 P3079400
ICLOCK   DC    D'0'                LAST CLOCK VALUE            @OZ20010 P3079500
ITSAVE   EQU   $CSAVREG,4          LINK REGISTER SAVE AREA     @OZ20010 P3079600
ITSAVE1  EQU   $CSAVREG+4,16       REGISTERS WA-WD             @OZ20010 P3079700
ITCHAIN  EQU   $TQEQUE                                         @OZ20010 P3079800
         SPACE 2                                               @OZ20010 P3079900
         DROP  WD                  DROP COMMON TIMER RTN BASE  @OZ20010 P3080000
         TITLE 'HASP ASYNCHRONOUS TIMER INTERRUPT EXIT'        @OZ20010 P3080100
*                                                              @OZ20010 P3080200
*                        ASYNCHRONOUS TIMER EXIT ROUTINE       @OZ20010 P3080300
*                                                              @OZ20010 P3080400
         SPACE 1                                               @OZ20010 P3080500
         CNOP  0,8                                             @OZ20010 P3080600
ITIMEUP  NULL                                                  @OZ20010 P3080700
         USING *,R15               SYSTEM PROVIDED BASE        @OZ20010 P3080800
         STM   BASE1,R2,ISAVE      SAVE REGISTERS              @OZ20010 P3080900
         L     BASE1,=A(HASP)      SWITCH                      @OZ20010 P3081000
         LR    BASE2,R15            TO                         @OZ20010 P3081100
         DROP  R15                   STANDARD                  @OZ20010 P3081200
         USING ITIMEUP,BASE2          ADDRESSABILITY           @OZ20010 P3081300
         XC    ISTQE,ISTQE         INDICATE NO ACTIVE TQE      @OZ20010 P3081400
       $$POST   ELMT=$SVTIMER,R11=HCT $$POST TIMER PCE         @OZ20010 P3081500
         LM    BASE1,R2,ISAVE      RESTORE REGISTERS           @OZ20010 P3081600
         BR    R14                  AND RETURN                 @OZ20010 P3081700
         SPACE 1                                               @OZ20010 P3081800
         DROP  BASE2               DROP ADDRESSABLITY                   P3081825
         SPACE 1                                                        P3081875
ISAVE    DS    8F                  REGISTERS BASE1-R2          @OZ20010 P3081900
ISTQE    DC    A(*-*)              ADDRESS OF ACTIVE STQE      @OZ20010 P3082000
         SPACE 1                                               @OZ20010 P3082100
         LTORG ,                   GENERATE LITERAL POOL       @OZ20010 P3082200
   TITLE 'HASP JOB OUTPUT TABLE SERVICES -- JOE BUILD ROUTINE' @OZ20010 P3082300
***************************************************************@OZ20010 P3082400
*                                                              @OZ20010 P3082500
*        $#BLD - CONSTRUCT JOB OUTPUT ELEMENT (JOE)            @OZ20010 P3082600
*                                                              @OZ20010 P3082700
* INPUT  R0    - ADDRESS OF PERIPHERAL DATA DEFINITION BLOCK   @OZ20010 P3082800
*        R1    - ADDRESS OF WORK AREA IN WHICH TO BUILD 2 JOES @OZ20010 P3082900
*        R11   - HCT ADDRESS (BASE1)                           @OZ20010 P3083000
*        R13   - PCE ADDRESS                                   @OZ20010 P3083100
*        R14   - RETURN ADDRESS                                @OZ20010 P3083200
*        R15   - JQE OFFSET IN BYTES                           @OZ20010 P3083300
*                                                              @OZ20010 P3083400
***************************************************************@OZ20010 P3083500
         SPACE 1                                               @OZ20010 P3083600
         ENTRY $#BLD               ENTRY FOR $#BLD ROUTINE     @OZ20010 P3083700
         USING PDBDSECT,WA         PDDB ADDRESSABILITY         @OZ20010 P3083800
         USING JOEDSECT,R1         JOE ADDRESSABILITY          @OZ20010 P3083900
         USING $#BLD,R15           $#BLD ADDRESSABILITY        @OZ20010 P3084000
         SPACE 1                                               @OZ20010 P3084100
         CNOP  0,8                                             @OZ20010 P3084200
$#BLD   $TRACE                                                 @OZ20010 P3084300
         STM   WA,WD,PCEWA         SAVE WORK REGISTERS         @OZ20010 P3084400
         LR    WA,R0               MAKE PDDB ADDRESSABLE       @OZ20010 P3084500
         LR    WB,R15              SAVE JQE OFFSET             @OZ20010 P3084600
         L     R15,$JOEBLD         LOAD $#BLD ADDRESSABILITY        R41 P3085000
         XC    0(2*JOESIZE,R1),0(R1)  CLEAR JOE WORK AREA            R4 P3089000
         SRL   WB,2                CONVERT JQE OFFSET TO WORD OFFSET R4 P3090000
         STH   WB,JOEJQE           STORE JQE WORD OFFSET             R4 P3091000
         TM    $PRTOPTS,$DMNDSET   IF DEMAND-SETUP                   R4 P3092000
         BZ    BLD10                OPTION CHOSEN,                  R41 P3093000
         OI    JOEFLAG2,$JOEDMND     THEN FLAG WORK-JOE              R4 P3094000
         SPACE 1                                                    R41 P3094500
BLD10    TM    PDBFLAG2,PDB2TCEL   SET TRACK-CELL'ED                R41 P3095000
         BZ    BLD20                STATUS IF PDDB WAS              R41 P3096000
         OI    JOEFLAG2,$JOETCEL     OF A TRACK-CELLED CLASS         R4 P3097000
         SPACE 1                                                    R41 P3097500
BLD20    MVC   JOESEC,PDBSEC       SET SECURITY ID                  R41 P3098000
         IC    R0,PDBCLASS         GET OUTPUT CLASS FROM PDDB        R4 P3099000
         STC   R0,JOEPDBCL         SET OUTPUT CLASS IN JOE 'CURRENT' R4 P3100000
         STC   R0,JOECURCL          AND 'ORIGINAL' OUTPUT CLASS      R4 P3101000
         LH    R0,PDBDEST          GET ROUTE CODE FROM PDDB          R4 P3102000
         STH   R0,JOEROUT          SET ROUTE CODE IN JOE 'CURRENT'   R4 P3103000
         STH   R0,JOEDEST           AND 'ORIGINAL' ROUTE FIELDS      R4 P3104000
         LTR   R0,R0               TEST FOR EXPLICIT ROUTING         R4 P3105000
         BNZ   BLDCPUID            BR IF YES                         R4 P3106000
         EJECT                                                       R4 P3107000
*********************************************************************** P3108000
*                                                                     * P3109000
*        ROUTING NOT SPECIFIED -- USE JOB ROUTING                     * P3110000
*                                                                     * P3111000
*********************************************************************** P3112000
         SPACE 1                                                     R4 P3113000
         N     WB,=A(X'FFFF')      DEVELOP                           R4 P3114000
         SLL   WB,2                 FULL JQE                         R4 P3115000
         AL    WB,$JOBQPTR           ADDRESS                         R4 P3116000
         L     R0,QUEPRTRT(,WB)    GET PRINT AND PUNCH ROUTE CODES   R4 P3117000
         SLR   WB,WB               DEVELOP ADDRESS                   R4 P3118000
         IC    WB,PDBCLASS          OF SCAT ENTRY                    R4 P3119000
         AL    WB,$SSVT              FOR OUTPUT CLASS                R4 P3120000
         TM    $SVSCAT-SSVT(WB),SCATPNCH  TEST FOR PUNCH CLASS       R4 P3121000
         BO    SKIP100             BR IF YES                         R4 P3122000
         SRL   R0,16                ELSE SHIFT OUT PUNCH ROUTE CODE  R4 P3123000
SKIP100  STH   R0,JOEROUT          RESET JOE 'CURRENT' ROUTE FIELD   R4 P3124000
         N     R0,=A(X'FFFF')      TEST 'CURRENT' ROUTE CODE         R4 P3125000
         BNZ   BLDCPUID            BR IF NON-ZERO                    R4 P3126000
         MVC   JOEROUT(1),$OWNSYS  SET 'CURRENT' ROUTE TO 'LOCAL'    R4 P3130000
         SPACE 1                                                     R4 P3132000
BLDCPUID MVC   JOECPU,PDBCPU       SET CPU ID                        R4 P3133000
         SLR   R0,R0               CLEAR WORK REGISTER              R41 P3133500
         SLR   WC,WC               CLEAR COPY-GROUPS SUM            R41 P3133600
         LA    WD,8                SET MAX COPY-GROUPS              R41 P3133700
         SPACE 1                                                    R41 P3133800
BLDLOOP  IC    R0,PDBCOPYG-1(WD)   COMPUTE TOTAL                    R41 P3133900
         ALR   WC,R0                COPY COUNT OF                   R41 P3134000
         BCT   WD,BLDLOOP            3800 COPY-GROUPS               R41 P3134100
         CLM   WC,1,PDBCOPYS       USE NORMAL                       R41 P3134200
         BNL   BLDRECCT             COPY COUNT                      R41 P3134300
         IC    WC,PDBCOPYS           IF LARGER                      R41 P3134400
         SPACE 1                                                    R41 P3134500
BLDRECCT L     WD,PDBRECCT         SET TOTAL                        R41 P3134600
         MR    WC,WC                LINES/CARDS                     R41 P3134700
         ST    WD,JOERECCT           IN WORK-JOE                    R41 P3134800
         SPACE 1                                                    R41 P3134900
         LA    R1,JOESIZE(,R1)     POINT TO CHARACTERISTICS JOE      R4 P3135000
         MVC   JOEFORM(20),PDBFORMS  SET FORMS, FCB, UCS AND WTR IDS R4 P3135100
         MVC   JOEFLASH,PDBFLASH   SET FLASH FRAME ID                R4 P3136000
         TM    PDBFLAG2,PDB2BRST   SET                               R4 P3137000
         BZ    BLDEXIT              BURST                           R41 P3138000
         OI    JOECFLAG,$JOEBRST     CHARACTERISTIC                  R4 P3139000
         SPACE 1                                                    R41 P3139500
BLDEXIT  LM    WA,WD,PCEWA         RESTORE WORK REGISTERS           R41 P3140000
         BR    LINK                 AND RETURN                       R4 P3141000
         SPACE 1                                                     R4 P3142000
         DROP  R1,WA,R15           KILL $#BLD ADDRESSABILITY         R4 P3143000
         TITLE 'HASP JOB OUTPUT TABLE SERVICES -- JOE ADD ROUTINE'   R4 P3144000
*********************************************************************** P3145000
*                                                                     * P3146000
*        $#ADD -- ADD JOE TO JOT                                      * P3147000
*                                                                     * P3148000
* INPUT  R0    - ADDRESS OF PROTOTYPE WORK JOE                        * P3149000
*        R1    - ADDRESS OF PROTOTYPE CHARACTERISTICS JOE             * P3150000
*        R11   - HCT ADDRESS (BASE1)                                  * P3151000
*        R13   - PCE ADDRESS                                          * P3152000
*        R14   - RETURN ADDRESS                                       * P3153000
*        R15   - ENTRY POINT ADDRESS, UNPREDICTABLE ON EXIT           * P3154000
*                                                                     * P3155000
* OUTPUT       - CC     ZERO -- $#ADD SUCCESSFUL                      * P3156000
*              - CC NON-ZERO -- $#ADD UNSUCCESSFUL                    * P3157000
*                                                                     * P3158000
*********************************************************************** P3159000
         SPACE 1                                                     R4 P3160000
JOE      EQU   WE                  JOE ADDRESS REGISTER              R4 P3161000
JOT      EQU   WG                  JOT ADDRESS REGISTER              R4 P3162000
         SPACE 1                                                     R4 P3163000
         ENTRY $#ADD               PROVIDE ENTRY FOR $#ADD ROUTINE   R4 P3164000
         USING JOEDSECT,JOE        PROVIDE JOE ADDRESSABILITY        R4 P3165000
         USING JOTDSECT,JOT        PROVIDE JOT ADDRESSABILITY        R4 P3166000
         USING $#ADD,BASE2         SET JOT SERVICES ADDRESSABILITY   R4 P3167000
         SPACE 1                                                     R4 P3168000
         CNOP  0,8                                                   R4 P3169000
$#ADD    STM   LINK,R12,PCELINK    SAVE CALLER'S REGISTERS           R4 P3170000
        $QSUSE SAVE=NO             REQUEST ACCESS TO CHECKPOINT DATA R4 P3171000
         L     JOT,$JOTABLE        LOAD JOB OUTPUT TABLE ADDRESS     R4 P3172000
         L     BASE2,$JOEADD       LOAD JOT SERVICES ADDRESSABILITY  R4 P3173000
         EJECT                                                       R4 P3174000
*********************************************************************** P3175000
*                                                                     * P3176000
*        ENSURE SUFFICIENT JOES TO PROCESS REQUEST                    * P3177000
*                                                                     * P3178000
*********************************************************************** P3179000
         SPACE 1                                                     R4 P3180000
         LH    R2,JOTFREC          NUMBER OF AVAILABLE JOE'S         R4 P3181000
         BCTR  R2,R0               JOE FOR A CHAR-JOE                R4 P3182000
         BCTR  R2,R0               JOE FOR A WORK-JOE                R4 P3183000
         CH    R2,$MINJOES         BELOW MINIMUM FREE LIMIT...       R4 P3184000
         BNL   ADDOK               BRANCH IF NO                      R4 P3186000
         LM    WA,R12,PCEWA        RELOAD CALLER'S REGISTERS         R4 P3190000
         OI    $RESHORT,$JOTMSB    SET WAITING JOE SWITCH      @OZ32879 P3190500
         BR    LINK                RETURN TO CALLER WITH NON-ZERO CC R4 P3191000
         SPACE 1                                                     R4 P3210000
*********************************************************************** P3211000
*                                                                     * P3212000
*        SCAN CHARACTERISTICS QUEUE FOR A MATCH WITH THIS REQUEST     * P3213000
*                                                                     * P3214000
*********************************************************************** P3215000
         SPACE 1                                                     R4 P3216000
         CNOP  4,8                                                   R4 P3217000
ADDOK    LH    JOE,JOTCHRQ         CHARACTERISTICS QUEUE 1ST DISPL   R4 P3218000
         SPACE 1                                                     R4 P3219000
ADCHQSCN N     JOE,=F'65535'       CLEAR LEFT HALFWORD               R4 P3220000
         BZ    ADBLDC              BRANCH IF END OF QUEUE            R4 P3221000
         SLL   JOE,2               EXPAND TO BYTE OFFSET             R4 P3222000
         ALR   JOE,JOT             ADDRESS CHAR-JOE                  R4 P3223000
         CLC   JOESETUP,JOESETUP-JOEDSECT(R1) TEST SETUP REQ'S @OZ27300 P3224000
         BNE   ADCHQNXT            BR IF CHAR-JOE'S NOT MATCHING     R4 P3225000
         TM    JOECFLAG-JOEDSECT(R1),$JOEBRST  VERIFY                R4 P3226000
         BO    ADCHQBRS                         STACKER              R4 P3227000
         TM    JOECFLAG,$JOEBRST                 SELECTION           R4 P3228000
         BO    ADCHQNXT                           MATCHING           R4 P3229000
         B     ADCHEHIT                            ON                R4 P3230000
ADCHQBRS TM    JOECFLAG,$JOEBRST                    BOTH             R4 P3231000
         BO    ADCHEHIT                              CHAR-JOE'S      R4 P3232000
         SPACE 1                                                     R4 P3233000
ADCHQNXT LH    JOE,JOENEXT         GET NEXT ELEMENT DISPL            R4 P3234000
         B     ADCHQSCN            LOOP THROUGH CHAR QUEUE           R4 P3235000
         EJECT                                                       R4 P3236000
*********************************************************************** P3237000
*                                                                     * P3238000
*        GET A JOE IN WHICH TO BUILD A NEW CHAR-JOE                   * P3239000
*                                                                     * P3240000
*********************************************************************** P3241000
         SPACE 1                                                     R4 P3242000
         CNOP  6,8                                                   R4 P3243000
ADBLDC   BAL   WF,GETJOE           GET AN AVAILABLE JOE              R4 P3244000
         LR    JOE,R3              RELOAD JOE ADDRESS                R4 P3245000
         SPACE 1                                                     R4 P3246000
*********************************************************************** P3247000
*                                                                     * P3248000
*        INITIALIZE NEW CHARACTERISTICS JOE WITH CALLER'S DATA        * P3249000
*                                                                     * P3250000
*********************************************************************** P3251000
         SPACE 1                                                     R4 P3252000
         SLR   R3,R3               CLEAR REGISTER                    R4 P3253000
         STH   R3,JOEUSE           CLEAR USE COUNT                   R4 P3254000
         MVC   JOESETUP,JOESETUP-JOEDSECT(R1) MOVE SETUP REQ'S @OZ27300 P3255000
         MVI   JOETYPE,$JOECHAR    INDICATE CHAR-JOE           @OZ27300 P3255500
         MVI   JOECFLAG,0          CLEAR CHARACTERISTICS FLAG        R4 P3256000
         TM    JOECFLAG-JOEDSECT(R1),$JOEBRST  SET FOR               R4 P3257000
         BZ    SKIP120                          CONT. FORMS OR       R4 P3258000
         OI    JOECFLAG,$JOEBRST                 BURSTED FORMS       R4 P3259000
SKIP120  STH   R3,JOEACTPR         CLEAR ACTIVE DEVICE COUNTERS      R4 P3260000
         LA    R2,JOTCHRQ-(JOENEXT-JOEDSECT)  PREPARE TO SCAN CHAR Q R4 P3261000
         SPACE 1                                                     R4 P3262000
ADCHSCN  LH    R3,JOENEXT-JOEDSECT(,R2)  DISPL OF NEXT CHAR-JOE      R4 P3263000
         N     R3,=F'65535'        CLEAR LEFT HALFWORD               R4 P3264000
         BZ    ADCHINS             BRANCH IF END OF QUEUE            R4 P3265000
         SLL   R3,2                EXPAND TO BYTE OFFSET             R4 P3266000
         ALR   R3,JOT              ADDRESS OF NEXT CHAR-JOE          R4 P3267000
         CLC   JOESETUP,JOESETUP-JOEDSECT(R3) TEST SETUP REQ'S @OZ27300 P3268000
         BL    ADCHINS             BRANCH IF SHOULD INSERT HERE      R4 P3269000
         LR    R2,R3               STEP TO NEXT CHAR-QUEUE ENTRY     R4 P3270000
         B     ADCHSCN             CONTINUE CHAR-QUEUE SCAN          R4 P3271000
         SPACE 1                                                     R4 P3272000
         CNOP  0,8                                                   R4 P3273000
ADCHINS  LH    R4,JOENEXT-JOEDSECT(,R2)  GET OLD NEXT ENTRY          R4 P3274000
         STH   R4,JOENEXT          STORE INTO NEW ELEMENT            R4 P3275000
         LR    R4,JOE              COPY NEW ELEMENT ADDR             R4 P3276000
         SLR   R4,JOT              OFFSET OF NEW ELEMENT             R4 P3277000
         SRL   R4,2                REDUCE TO FULLWORD OFFSET         R4 P3278000
         STH   R4,JOENEXT-JOEDSECT(,R2)  RECONNECT CHAR-JOE CHAIN    R4 P3279000
         BAL   WF,CKPTJOEA         CKPT PREVIOUS CHAR-JOE            R4 P3280000
         EJECT                                                       R4 P3281000
*********************************************************************** P3282000
*                                                                     * P3283000
*        HAVE A CHARACTERISTICS JOE -- CHECKPOINT IT                  * P3284000
*                                                                     * P3285000
*********************************************************************** P3286000
         SPACE 1                                                     R4 P3287000
ADCHEHIT LH    R2,JOEUSE           INCREMENT                         R4 P3288000
         LA    R2,1(,R2)            CHAR-JOE                         R4 P3289000
         STH   R2,JOEUSE             USE COUNT                       R4 P3290000
         LR    R2,JOE              COPY CHAR-JOE ADDRESS             R4 P3291000
         BAL   WF,CKPTJOEA         CKPT CHAR-JOE                     R4 P3292000
         SPACE 1                                                     R4 P3293000
*********************************************************************** P3294000
*                                                                     * P3295000
*        OBTAIN AND INITIALIZE NEW WORK-JOE                           * P3296000
*                                                                     * P3297000
*********************************************************************** P3298000
         SPACE 1                                                     R4 P3299000
         BAL   WF,GETJOE           GET NEXT FREE JOE                 R4 P3300000
         LR    JOE,R3              RELOAD JOE ADDRESS                R4 P3301000
         LR    R3,R0               COPY WORK-JOE DATA ADDRESS        R4 P3302000
         MVC   JOEDSECT(JOESIZE),0(R3)  USER SPECS TO WORK JOE       R4 P3303000
         MVI   JOETYPE,$JOEWORK    INDICATE WORK-JOE           @OZ27300 P3303050
         L     R14,$SSVT           POINT REG 14 TO PRIORITY         R41 P3303100
         LA    R14,$SVXPRI-4-SSVT(,R14) CONVERSION TABLE IN SSVT    R41 P3303200
         LA    R0,10               SET LOOP COUNTER (10 ENTRIES)    R41 P3303300
         SPACE 1                                                    R41 P3303400
ADPRILP  LA    R14,4(,R14)         BUMP TABLE POINTER               R41 P3303500
         L     R15,0(,R14)         PICK UP PRTY/LINECOUNT,          R41 P3303600
         LA    R15,0(,R15)           DELETE PRTY BYTE FOR COMP      R41 P3303700
         CL    R15,JOERECCT        SEE IF RIGHT PRTY SLOT,          R41 P3303800
         BNL   ADPRIGOT              EXIT LOOP IF SO                R41 P3303900
         BCT   R0,ADPRILP          LOOP BACK                        R41 P3304000
         SPACE 1                                                    R41 P3304100
ADPRIGOT MVC   JOEPRIO,0(R14)      MOVE PRIORITY TO JOE             R41 P3304200
         SRL   R2,2                REDUCE TO FULLWORD OFFSET         R4 P3304300
         STH   R2,JOECHAR          SAVE CHAR-JOE POINTER             R4 P3305000
         NI    JOEFLAG,$JOESPIN+$JOEHOLD  RESET ALL BUT SPIN, HOLD   R4 P3306000
         SLR   R3,R3               CLEAR R3                          R4 P3307000
         STH   R3,JOECKPT          CLEAR CHECKPOINT AREA POINTER     R4 P3308000
         SPACE 1                                                     R4 P3321000
ADCLS    IC    R3,JOECURCL         PICK UP CURRENT SYSOUT CLASS      R4 P3322000
         IC    R3,CNVCLS-C'A'(R3)  LOAD CLASS QUEUE OFFSET           R4 P3323000
         LA    R3,JOTCLSQ(R3)      POINT TO PROPER CLASS QUEUE       R4 P3324000
         EJECT                                                 @OZ27300 P3325000
*********************************************************************** P3326000
*                                                                     * P3327000
*        ADD WORK-JOE TO SELECTED QUEUE                               * P3328000
*                                                                     * P3329000
*********************************************************************** P3330000
         SPACE 1                                                     R4 P3331000
ADADD    LH    R2,0(,R3)           FIRST QUEUE ENTRY                 R4 P3332000
         STH   R2,JOENEXT          MAKE NEW JOE 1ST                  R4 P3333000
         LR    R2,JOE              RELOAD JOE ADDRESS          @OZ27300 P3333500
         SLR   R2,JOT              REDUCE JOE ADDRESS          @OZ27300 P3334000
         SRL   R2,2                 TO FULLWORD OFFSET         @OZ27300 P3335000
         STH   R2,0(,R3)           ADD WORK-JOE TO HEAD OF QUE @OZ27300 P3336000
         SPACE 1                                               @OZ27300 P3337000
*********************************************************************** P3338000
*                                                                     * P3339000
*        CHAIN WORK-JOE L-I-F-O TO JOB QUEUE ELEMENT           @OZ27300 P3340000
*                                                                     * P3341000
*********************************************************************** P3342000
         SPACE 1                                                     R4 P3343000
         USING JQEDSECT,R1         PROVIDE JQE ADDRESSABILITY        R4 P3344000
         SPACE 1                                                     R4 P3345000
*                                  THIS LINE DELETED BY APAR   @OZ27300 P3346000
         LH    R1,JOEJQE           GET JQE OFFSET              @OZ27300 P3347000
         N     R1,=F'65535'        CLEAR LEFT HALFWORD               R4 P3348000
         SLL   R1,2                EXPAND TO FULL ADDRESS OFFSET     R4 P3349000
         AL    R1,$JOBQPTR         ADD JOB QUEUE ORIGIN              R4 P3350000
         LH    R3,JQEJOE           L-I-F-O CHAIN               @OZ27300 P3351000
         STH   R2,JQEJOE            THIS WORK JOE              @OZ27300 P3352000
         STH   R3,JOEJOE             TO JQE                    @OZ27300 P3353000
         LM    WA,WB,PCEWA         RESTORE REGS USED BY $QCKPT       R4 P3354000
        $QCKPT (R1)                CKPT THE JOB QUEUE ELEMENT        R4 P3355000
         SPACE 1                                                     R4 P3356000
*********************************************************************** P3357000
*                                                                     * P3358000
*        POST PRINT/PUNCH ROUTINES WAITING FOR JOT SERVICE            * P3359000
*                                                                     * P3360000
*********************************************************************** P3361000
         SPACE 1                                                     R4 P3362000
$#EXIT  $POST  $HASPECF,JOT        POST JOT SERVICES AVAILABLE       R4 P3363000
         OI    $AQSE,QSEPJOT       INDICATE CROSS-SYSTEM $POST       R4 P3364000
         LM    LINK,R12,PCELINK    RELOAD CALLER'S REGISTERS         R4 P3365000
         CLI   $WTRWTCT,0          ANY EXTERNAL WRITERS WAITING...   R4 P3366000
         BER   LINK                RETURN IF NO WITH CC = 0          R4 P3367000
         BALR  R15,0                ELSE FIRST POST                  R4 P3368000
         B     $#WTR-*(,R15)         WAITING WRITERS                 R4 P3369000
         SPACE 1                                                     R4 P3370000
         DROP  R1,JOE              KILL JQE, JOE ADDRESSABILITY      R4 P3371000
         TITLE 'HASP JOB OUTPUT TABLE SERVICES -- JOE GET ROUTINE'   R4 P3372000
*********************************************************************** P3373000
*                                                                     * P3374000
*        $#GET -- GET JOE FROM JOT                                    * P3375000
*                                                                     * P3376000
* INPUT  R1    - DCT ADDRESS                                          * P3377000
*        R11   - HCT ADDRESS (BASE1)                                  * P3378000
*        R13   - PCE ADDRESS                                          * P3379000
*        R14   - RETURN ADDRESS                                       * P3380000
*        R15   - ENTRY POINT ADDRESS, UNPREDICTABLE ON EXIT           * P3381000
*                                                                     * P3382000
* OUTPUT R0    - CHARACTERISTICS JOE ADDRESS                          * P3383000
*        R1    - JOB QUEUE ELEMENT ADDRESS                            * P3384000
*        R15   - WORK JOE ADDRESS                                     * P3385000
*              - CC NON-ZERO -- $#GET SUCCESSFUL                      * P3386000
*              - CC     ZERO -- $#GET UNSUCCESSFUL                    * P3387000
*                                                                     * P3388000
* NOTES        - IF HIGH-ORDER BIT OF R1 ON AT ENTRY, ONLY CC VALID   * P3389000
*                ON EXIT (I.E. JOE NOT OBTAINED, IF PRESENT)          * P3390000
*                                                                     * P3391000
*********************************************************************** P3392000
         SPACE 1                                                     R4 P3393000
         ENTRY $#GET               PROVIDE ENTRY FOR $#GET ROUTINE   R4 P3394000
         USING JOEDSECT,JOE        PROVIDE JOE ADDRESSABILITY        R4 P3395000
         USING $#GET,R15           PROVIDE LOCAL ADDRESSABILITY      R4 P3396000
         SPACE 1                                                     R4 P3397000
         CNOP  0,8                                                   R4 P3398000
$#GET    STM   LINK,R12,PCELINK    SAVE CALLER'S REGISTERS           R4 P3399000
         LTR   R1,R1               GET IN HAVE = NO MODE...         R41 P3400000
         BM    GTCKPT              BRANCH IF YES               @OZ20010 P3401000
                                   PRINT OFF - SECTION DELETED @OZ20010 P3401100
*                                  THIS CARD DELETED BY APAR   @OZ20010 P3401200
*                                  THIS CARD DELETED BY APAR   @OZ20010 P3401300
*                                  THIS CARD DELETED BY APAR   @OZ20010 P3401400
*                                  THIS CARD DELETED BY APAR   @OZ20010 P3401500
                                   PRINT ON  - SECTION DELETED @OZ20010 P3401600
        $QSUSE SAVE=NO             REQUEST ACCESS TO CKPT DATA @OZ20010 P3402000
         SPACE 1                                                     R4 P3403000
GTCKPT   L     JOT,$JOTABLE        LOAD JOB OUTPUT TABLE ADDRESS     R4 P3404000
         SPACE 1                                                     R4 P3405000
         L     BASE2,$JOEADD       ESTABLISH ADDRESSABILITY TO       R4 P3406000
         DROP  R15                  ALL JOT MANAGEMENT ROUTINES      R4 P3407000
         EJECT                                                       R4 P3408000
*********************************************************************** P3409000
*                                                                     * P3410000
*        RETURN IF HASP SYSTEM IS DRAINING ($P OR $PHASP)             * P3411000
*                                                                     * P3412000
*********************************************************************** P3413000
         SPACE 1                                                     R4 P3414000
         TM    $STATUS,$DRAINED    IS HASP SYSTEM DRAINING...        R4 P3415000
         BO    GTNOT               BRANCH IF YES                     R4 P3416000
         SPACE 1                                                     R4 P3417000
*********************************************************************** P3418000
*                                                                     * P3419000
*        ARE THERE ENOUGH AVAILABLE JOES TO COMPLETE THIS REQUEST...  * P3420000
*                                                                     * P3421000
*********************************************************************** P3422000
         SPACE 1                                                     R4 P3423000
         LH    R2,JOTFREC          NUMBER OF AVAILABLE JOES          R4 P3424000
         BCTR  R2,R0               JOE FOR A CHECKPOINT ELEMENT      R4 P3425000
         LTR   R2,R2               IS FREE JOE QUEUE VOID...         R4 P3426000
         BP    GETOK               BRANCH IF NO                      R4 P3427000
         SPACE 1                                                     R4 P3428000
*********************************************************************** P3429000
*                                                                     * P3430000
*        REQUEST MUST BE RETRYED LATER                                * P3431000
*                                                                     * P3432000
*********************************************************************** P3433000
         SPACE 1                                                     R4 P3434000
GTNOT    LM    LINK,R12,PCELINK    RELOAD CALLER'S REGISTERS         R4 P3435000
         SR    R15,R15             SET NON-PROCESS INDICATION        R4 P3436000
         BR    LINK                RETURN TO CALLER                  R4 P3437000
         EJECT                                                       R4 P3438000
*********************************************************************** P3439000
*                                                                     * P3440000
*        SCAN WORK QUEUE(S) FOR PIECE OF WORK                         * P3441000
*                                                                     * P3442000
*********************************************************************** P3443000
         SPACE 1                                                     R4 P3444000
         USING DCTDSECT,R5         PROVIDE DCT ADDRESSABILITY        R4 P3445000
         SPACE 1                                                     R4 P3446000
         CNOP  0,8                                                   R4 P3447000
GETOK    LR    R5,R1               COPY DCT ADDRESS                  R4 P3448000
         LA    R1,DCTCLASS         CLASS MASK ADDRESS                R4 P3449000
         XC    PCER1,PCER1         CLEAR BEST CHOICE SLOT            R4 P3450000
         MVI   PCER0,36            SET CLASS ORDER PRIORITY TO 36    R4 P3451000
         SPACE 1                                                     R4 P3464000
GTCLASS  CLI   0(R1),C' '          END OF CLASS MASK...              R4 P3465000
         BE    GTCMEND             BRANCH IF YES                     R4 P3466000
         SPACE 1                                                     R4 P3467000
*********************************************************************** P3468000
*                                                                     * P3469000
*        CONVERT CLASS QUEUE ID TO CLASS QUEUE ADDRESS                * P3470000
*                                                                     * P3471000
*********************************************************************** P3472000
         SPACE 1                                                     R4 P3473000
         SLR   R3,R3               CLEAR REGISTER                    R4 P3474000
         IC    R3,0(,R1)           GET A CLASS ID FROM THE MASK      R4 P3475000
         IC    R3,CNVCLS-C'A'(R3)  GET CLASS QUEUE OFFSET            R4 P3476000
         LA    R3,JOTCLSQ-(JOENEXT-JOEDSECT)(R3)  CLASS QUEUE ADDR   R4 P3477000
         LR    JOE,R3              COPY QUEUE ADDRESS TO JOE         R4 P3478000
         SPACE 1                                                     R4 P3479000
*********************************************************************** P3480000
*                                                                     * P3481000
*        SELECT A WORK-JOE FROM THE QUEUE                             * P3482000
*                                                                     * P3483000
*********************************************************************** P3484000
         SPACE 1                                                     R4 P3485000
GTWKJOE  NI    PCER0,X'3F'         CLEAR PRIORITY BITS               R4 P3486000
         LH    JOE,JOENEXT         SELECT NEXT WORK-JOE              R4 P3487000
         N     JOE,=F'65535'       CLEAR LEFT HALFWORD               R4 P3488000
         BNZ   GTJOEA              BRANCH IF NOT END OF QUEUE        R4 P3489000
         LA    R1,1(,R1)           ADVANCE CLASS MASK POINTER        R4 P3494000
         IC    JOE,PCER0           DECREMENT                         R4 P3495000
         BCTR  JOE,0                CLASS ORDER                      R4 P3496000
         STC   JOE,PCER0             PRIORITY                        R4 P3497000
         B     GTCLASS             CONTINUE TO NEXT CLASS QUEUE      R4 P3498000
         EJECT                                                       R4 P3499000
*********************************************************************** P3500000
*                                                                     * P3501000
*        TRY TO DISQUALIFY THIS JOE FROM SELECTION                    * P3502000
*                                                                     * P3503000
*********************************************************************** P3504000
         SPACE 1                                                     R4 P3505000
         CNOP  0,8                                                   R4 P3506000
GTJOEA   STH   JOE,PCER0+2         SAVE WORK-JOE DISPL               R4 P3507000
         SLL   JOE,2               EXPAND TO BYTE OFFSET             R4 P3508000
         ALR   JOE,JOT             ADD JOB OUTPUT TABLE ORIGIN       R4 P3509000
         TM    JOEFLAG,$JOEBUSY    IS THIS WORK-JOE BUSY...          R4 P3510000
         BNZ   GTWKJOE             BRANCH IF YES - REJECT            R4 P3511000
         LH    R2,JOEJQE           JOB QUEUE ELEMENT OFFSET          R4 P3512000
         N     R2,=F'65535'        CLEAR LEFT HALFWORD               R4 P3513000
         SLL   R2,2                EXPAND TO BYTE OFFSET             R4 P3514000
         AL    R2,$JOBQPTR         ADD JOB QUEUE ORIGIN              R4 P3515000
         SPACE 1                                                     R4 P3516000
         USING JQEDSECT,R2         PROVIDE JQE ADDRESSABILITY        R4 P3517000
         SPACE 1                                                     R4 P3518000
         TM    JQEFLAGS,QUEHOLDA+QUEHOLD1  IS JOB HELD...            R4 P3519000
         BNZ   GTWKJOE             BRANCH IF YES - REJECT            R4 P3520000
         MVI   PCER0+1,X'FF'       PRESET MAX PRIORITY              R41 P3521000
*              THIS LINE DELETED BY APAR NUMBER                @OZ27490 P3521100
*              THIS LINE DELETED BY APAR NUMBER                @OZ27490 P3521200
         SLR   R14,R14             LOAD PRIORITY                    R41 P3521300
         IC    R14,JOEPRIO           FROM JOE                       R41 P3521400
         LA    R15,1*16            USE '1' FOR                      R41 P3521500
         CLI   JQETYPE,$HARDCPY      JQE PRIORITY                   R41 P3521600
         BNE   GTJOEP1             IF JOB STILL EXECUTING      @OZ25785 P3521700
         TM    JQEPRIO,X'F0'       TEST FOR JQE PRIORITY = 15, @OZ27490 P3521720
         BO    GTJOELIM              BRANCH AROUND IF YES      @OZ40627 P3521740
         IC    R15,JQEPRIO         LOAD PRIORITY FROM JQE           R41 P3521800
         SPACE 1                                                    R41 P3521900
GTJOEP1  ALR   R14,R15             ADD JQE AND JOE PRIORITIES,      R41 P3522000
         SRL   R14,1                 MAKE SURE SUM FITS IN 1 BYTE,  R41 P3522100
         STC   R14,PCER0+1           SAVE RESULT                    R41 P3522200
         SPACE 3                                               @OZ40627 P3522300
*********************************************************************** P3522350
*                                                                     * P3522400
*        CHECK THAT RECORD COUNT IS WITHIN DEVICE LIMITS              * P3522450
*                                                                     * P3522500
*********************************************************************** P3522550
         SPACE 1                                               @OZ40627 P3522600
GTJOELIM CLC   JOERECCT,DCTLIMLO   REJECT WORK JOE             @OZ40627 P3522650
         BL    GTWKJOE               IF RECORD COUNT           @OZ40627 P3522700
         CLC   JOERECCT,DCTLIMHI       IS NOT WITHIN           @OZ40627 P3522750
         BH    GTWKJOE                   DEVICE LIMITS         @OZ40627 P3522800
         EJECT                                                 @OZ40627 P3522850
*********************************************************************** P3523000
*                                                                     * P3524000
*        CHECK ROUTE, CPU ID, SECURITY                                * P3525000
*                                                                     * P3526000
*********************************************************************** P3527000
         SPACE 1                                                     R4 P3528000
         CLC   DCTNO,JOEROUT       DOES DS ROUTE MATCH DEVICE...     R4 P3548000
         BNE   GTWKJOE             BRANCH IF NO                      R4 P3550000
         LH    R15,JOECHAR         CHAR-JOE DISPL                    R4 P3551000
         N     R15,=F'65535'       CLEAR LEFT HALFWORD               R4 P3552000
         SLL   R15,2               EXPAND TO BYTE OFFSET             R4 P3553000
         ALR   R15,JOT             ADD JOB OUTPUT TABLE ORIGIN       R4 P3554000
         SPACE 1                                                     R4 P3555000
         DROP  R2                  KILL JQE ADDRESSABILITY           R4 P3556000
         EJECT                                                       R4 P3557000
*********************************************************************** P3558000
*                                                                     * P3559000
*        CHECK EXTERNAL WRITER NAME                                   * P3560000
*                                                                     * P3561000
*********************************************************************** P3562000
         SPACE 1                                                     R4 P3563000
         USING JOEDSECT,R15        PROVIDE TEMP JOE ADDRESSABILITY   R4 P3564000
         SPACE 1                                                     R4 P3565000
GTNEXT   CLI   JOEWTRID,X'40'      EXTERNAL WRITER NAME...           R4 P3566000
         BNE   GTWKJOE             BRANCH IF YES                     R4 P3567000
         SPACE 1                                                     R4 P3568000
*********************************************************************** P3569000
*                                                                     * P3570000
*        CHECK FORMS ID                                               * P3571000
*                                                                     * P3572000
*********************************************************************** P3573000
         SPACE 1                                                     R4 P3574000
         CLC   DCTFORMS,JOEFORM    FORMS MATCH...                    R4 P3575000
         BNE   GTNOMCH             BRANCH IF NO                      R4 P3576000
         SPACE 1                                                     R4 P3577000
         TM    DCTPPSW2,DCTNIPRT   CHECK FOR NON-IMPACT PRINTER      R4 P3578000
         BO    GTNIPRT             BRANCH IF YES                     R4 P3579000
         SPACE 1                                               @OZ25970 P3579200
         TM    DCTDEVTP,DCTPUN     IS DEVICE A PUNCH...        @OZ25970 P3579400
         BO    GTMATCH             BR. YES, NO UCS/FCB CHECK.  @OZ25970 P3579600
         SPACE 1                                                     R4 P3580000
*********************************************************************** P3581000
*                                                                     * P3582000
*        CHECK FCB ID, UCS ID -- FOR IMPACT PRINTERS                  * P3583000
*                                                                     * P3584000
*********************************************************************** P3585000
         SPACE 1                                                     R4 P3586000
         CLC   DCTFCB,JOEFCB       FCB MATCH...                      R4 P3587000
         BE    GTUCS               BRANCH IF YES                     R4 P3588000
         CLC   JOEFCB,=C'****'     STANDARD FCB...                   R4 P3589000
         BNE   GTNOMCH             BRANCH IF NO                      R4 P3590000
         TM    DCTPPSW,DCTPPSWB    IS DEVICE FCB STANDARD...         R4 P3591000
         BO    GTNOMCH             BRANCH IF NO                      R4 P3592000
         SPACE 1                                                     R4 P3593000
GTUCS    CLC   DCTUCS,JOEUCS       UCS MATCH...                      R4 P3594000
         BE    GTMATCH             BRANCH IF YES                     R4 P3595000
         CLC   JOEUCS,=C'****'     STANDARD UCS...                   R4 P3596000
         BNE   GTNOMCH             BRANCH IF NO                      R4 P3597000
         TM    DCTPPSW,DCTPPSWU    IS DEVICE UCS STANDARD...         R4 P3598000
         BO    GTNOMCH             BRANCH IF NO                      R4 P3599000
         SPACE 1                                                     R4 P3600000
GTMATCH  OI    PCER0,X'80'         SET MATCH PRIORITY BIT            R4 P3601000
         B     GTPRIO              GO COMPARE PRIORITIES             R4 P3602000
         EJECT                                                       R4 P3603000
*********************************************************************** P3604000
*                                                                     * P3605000
*        CHECK FLASH FRAME ID, BURSTING -- FOR NON-IMPACT PRINTERS    * P3606000
*                                                                     * P3607000
*********************************************************************** P3608000
         SPACE 1                                                     R4 P3609000
GTNIPRT  CLC   DCTFLASH,JOEFLASH   FLASH MATCH...                    R4 P3610000
         BNE   GTNOMCH             BR IF NO                          R4 P3611000
         TM    JOECFLAG,$JOEBRST   CHECK                             R4 P3612000
         BZ    SKIP130              BURST                            R4 P3613000
         TM    DCTPPSW2,DCTNIBRS     SPECIFICATION                   R4 P3614000
         BZ    GTNOMCH                AGAINST                        R4 P3615000
         B     GTNIPMCH                CURRENT                       R4 P3616000
SKIP130  TM    DCTPPSW2,DCTNIBRS        BURSTER                      R4 P3617000
         BO    GTNOMCH                   STATUS                      R4 P3618000
         SPACE 1                                                     R4 P3619000
GTNIPMCH OI    PCER0,X'80'         SET MATCH PRIORITY BIT            R4 P3620000
*              THIS LINE HAS BEEN DELETED BY APAR ===>         @OZ42291 P3621000
*              THIS LINE HAS BEEN DELETED BY APAR ===>         @OZ42291 P3622000
*              THIS LINE HAS BEEN DELETED BY APAR ===>         @OZ42291 P3623000
         B     GTPRIO              GO COMPARE PRIORITIES             R4 P3624000
         SPACE 1                                                     R4 P3625000
*********************************************************************** P3626000
*                                                                     * P3627000
*        NO MATCH FOUND -- CHECK FOR AUTOMATIC MODE                   * P3628000
*                                                                     * P3629000
*********************************************************************** P3630000
         SPACE 1                                                     R4 P3631000
         CNOP  0,8                                                   R4 P3632000
GTNOMCH  TM    DCTPPSW,DCTPPSWF    IS DEVICE IN AUTO MODE...         R4 P3633000
         BO    GTWKJOE             BRANCH IF NO - REJECT             R4 P3634000
         TM    DCTDEVTP,DCTLNE     IS REQUESTOR REMOTE...            R4 P3635000
         BO    GTPRIO              BRANCH IF YES                     R4 P3636000
         LA    R3,JOEACTPR         ASSUME PRINTER                    R4 P3637000
         TM    DCTDEVTP,DCTPUN     IS REQUEST FOR A PUNCH...         R4 P3638000
         BNO   SKIP140             BRANCH IF NO                      R4 P3639000
         LA    R3,JOEACTPU         SET PUNCH                         R4 P3640000
SKIP140  CLI   0(R3),X'00'         IS ANY DEVICE ACTIVE...           R4 P3641000
         BNE   SKIP150             BRANCH IF YES                     R4 P3642000
         OI    PCER0,X'40'         SET NOT IN USE PRIORITY BIT       R4 P3643000
SKIP150  CLC   $STDFORM,JOEFORM    IS THIS STANDARD                  R4 P3644000
         BE    GTPRIO              BRANCH IF YES                     R4 P3645000
         TM    PCER0,X'40'         NON-STD IN USE...                 R4 P3646000
         BZ    GTWKJOE             BRANCH IF YES - REJECT            R4 P3647000
         SPACE 1                                                     R4 P3648000
         DROP  R15                 KILL TEMP JOE ADDRESSABILITY      R4 P3649000
         EJECT                                                       R4 P3650000
*********************************************************************** P3651000
*                                                                     * P3652000
*        IS CURRENT PRIORITY GE PREVIOUS BEST CHOICE...               * P3653000
*                                                                     * P3654000
*********************************************************************** P3655000
         SPACE 1                                                     R4 P3656000
GTPRIO   LR    R3,R1               PUT CLASS POINTER IN R3           R4 P3657000
         SPACE 1                                                     R4 P3658000
GTNPRIO  CLC   PCER0(2),PCER1      IS CURRENT A BETTER CHOICE...     R4 P3659000
         BL    GTWKJOE             BRANCH IF NO - REJECT             R4 P3660000
         L     R3,PCER0            TAKE CURRENT WORK-JOE             R4 P3661000
         ST    R3,PCER1            AS NEW BEST CHOICE                R4 P3662000
         B     GTWKJOE             CONTINUE SCAN OF CLASS QUEUES     R4 P3663000
         SPACE 1                                                     R4 P3664000
*********************************************************************** P3665000
*                                                                     * P3666000
*        END OF QUEUE SCANNING - HAVE WE SELECTED NEW WORK...         * P3667000
*                                                                     * P3668000
*********************************************************************** P3669000
         SPACE 1                                                     R4 P3670000
         CNOP  0,8                                                   R4 P3671000
GTCMEND  OC    PCER1,PCER1         IS BEST CHOICE CELL ZERO...       R4 P3672000
         BZ    GTNOT               BRANCH IF YES - NO WORK           R4 P3673000
         LH    JOE,PCER1+2         GET BEST CHOICE JOE DISPL         R4 P3674000
         LR    R10,JOE             SAVE WORK-JOE OFFSET        @OZ27300 P3674500
         N     JOE,=F'65535'       CLEAR LEFT HALFWORD               R4 P3675000
         SLL   JOE,2               EXPAND TO BYTE OFFSET             R4 P3676000
         ALR   JOE,JOT             ADD JOB OUTPUT TABLE ORIGIN       R4 P3677000
         LH    R2,JOECHAR          CHAR-JOE DISPL                    R4 P3678000
         N     R2,=F'65535'        CLEAR LEFT HALFWORD               R4 P3679000
         SLL   R2,2                EXPAND TO BYTE OFFSET             R4 P3680000
         LA    R0,0(R2,JOT)        CHAR-JOE ADDR TO RETURN REG       R4 P3681000
         LH    R1,JOEJQE           RETURN                            R4 P3682000
         N     R1,=F'65535'         JQE                              R4 P3683000
         SLL   R1,2                  ADDRESS                         R4 P3684000
         AL    R1,$JOBQPTR            IN R1                          R4 P3685000
         LTR   R5,R5               TEST FOR HAVE = NO MODE           R4 P3686000
         BM    GTEST               BR IF YES TO JUST TEST FOR JOE    R4 P3687000
         ST    R1,PCEJQE            ELSE STORE JQE ADDR IN PCE @OZ32566 P3687100
         TM    DCTDEVTP,DCTLNE     IS REQUESTOR REMOTE...            R4 P3689000
         BNZ   GTRMT               BRANCH IF YES                     R4 P3694000
         NI    JOEFLAG,255-$JOEPRT-$JOEPUN  RESET TYPE FLAGS         R4 P3695000
         OI    JOEFLAG,$JOEPRT     SET PRINT TYPE                    R4 P3696000
         LA    R4,JOEACTPR-JOEDSECT(R2,JOT)  ASSUME PRINTER          R4 P3697000
         TM    DCTDEVTP,DCTPUN     IS REQUEST FOR A PUNCH...         R4 P3698000
         BNO   GTPRT               BRANCH IF NO                      R4 P3699000
         NI    JOEFLAG,255-$JOEPRT-$JOEPUN   RESET TYPE FLAGS        R4 P3700000
         OI    JOEFLAG,$JOEPUN     SET PUNCH TYPE                    R4 P3701000
         LA    R4,JOEACTPU-JOEDSECT(R2,JOT)  SET PUNCH               R4 P3702000
         SPACE 1                                                     R4 P3703000
GTPRT    SLR   R3,R3               CLEAR REGISTER                    R4 P3704000
         IC    R3,0(,R4)           INCREMENT                         R4 P3705000
         LA    R3,1(,R3)            ACTIVE DEVICE                    R4 P3706000
         STC   R3,0(,R4)             COUNT                           R4 P3707000
         BAL   WF,CKPTJOE          CKPT CHAR-JOE                     R4 P3708000
         EJECT                                                       R4 P3709000
GTRMT    MVC   JOEDEVID,DCTDEVID   MOVE DEVICE ID TO WORK-JOE        R4 P3710000
         OC    JOEFLAG,$SIDBUSY    SET WORK JOE BUSY/SYSTEM ID       R4 P3711000
         LR    R2,JOE              RELOAD WORK-JOE ADDRESS           R4 P3712000
         BAL   WF,CKPTJOEA         CKPT WORK-JOE                     R4 P3713000
         CLC   JOECKPT,=H'0'       IS CKPT-JOE PTR ZERO...           R4 P3714000
         BNZ   GTHOT               BRANCH IF NO                      R4 P3715000
         BAL   WF,GETJOE           GET A FREE JOE                    R4 P3716000
         MVI   JOETYPE-JOEDSECT(R3),$JOECKPT INDICATE CKPT-JOE @OZ27300 P3716100
         STH   R10,JOEWORK-JOEDSECT(,R3)  CHAIN TO WORK-JOE    @OZ27300 P3716200
         SLR   R3,JOT              REDUCE TO BYTE OFFSET             R4 P3717000
         SRL   R3,2                REDUCE TO FULLWORD OFFSET         R4 P3718000
         STH   R3,JOECKPT          ASSIGN CKPT-JOE                   R4 P3719000
         SPACE 1                                                     R4 P3720000
*********************************************************************** P3721000
*                                                                     * P3722000
*        INVOKE CHECKPOINT OF JOB OUTPUT TABLE                        * P3723000
*                                                                     * P3724000
*********************************************************************** P3725000
         SPACE 1                                                     R4 P3726000
GTHOT   $POST  $HASPECF,CKPW       $POST CHECKPOINT WRITER           R4 P3727000
         SPACE 1                                                     R4 P3728000
GTEST    LTR   R15,JOE             RELOAD WORK JOE ADDR, SET CC      R4 P3729000
         L     LINK,PCELINK        RESTORE RETURN REGISTER           R4 P3730000
         LM    WA,R12,PCEWA        RELOAD CALLER'S REGISTERS         R4 P3731000
         BR    LINK                RETURN TO CALLER                  R4 P3732000
         SPACE 1                                                     R4 P3733000
         DROP  R5,JOE              KILL DCT, JOE ADDRESSABILITY      R4 P3734000
         TITLE 'HASP JOB OUTPUT TABLE SERVICES -- JOE PUT ROUTINE'   R4 P3735000
*********************************************************************** P3736000
*                                                                     * P3737000
*        $#PUT -- RETURN JOE TO JOT                                   * P3738000
*                                                                     * P3739000
* INPUT  R0    - CHECKPOINT JOE ADDRESS OR ZERO                       * P3740000
*        R1    - WORK JOE ADDRESS                                     * P3741000
*        R11   - HCT ADDRESS (BASE1)                                  * P3742000
*        R13   - PCE ADDRESS                                          * P3743000
*        R14   - RETURN ADDRESS                                       * P3744000
*        R15   - ENTRY POINT ADDRESS, UNPREDICTABLE ON EXIT           * P3745000
*                                                                     * P3746000
*********************************************************************** P3747000
         SPACE 1                                                     R4 P3748000
         ENTRY $#PUT               PROVIDE ENTRY FOR $#PUT ROUTINE   R4 P3749000
         USING JOEDSECT,R1         PROVIDE JOE ADDRESSABILITY        R4 P3750000
         SPACE 1                                                     R4 P3751000
         CNOP  0,8                                                   R4 P3752000
$#PUT    STM   LINK,R12,PCELINK    SAVE CALLER'S REGISTERS           R4 P3753000
        $QSUSE SAVE=NO             REQUEST ACCESS TO CHECKPOINT DATA R4 P3754000
         L     JOT,$JOTABLE        LOAD JOB OUTPUT TABLE ADDRESS     R4 P3755000
         L     BASE2,$JOEADD       LOAD JOT SERVICES ADDRESSABILITY  R4 P3756000
         SPACE 1                                                     R4 P3757000
*********************************************************************** P3758000
*                                                                     * P3759000
*        DECREMENT ACTIVE DEVICE COUNTER FOR THIS CHAR-JOE            * P3760000
*                                                                     * P3761000
*********************************************************************** P3762000
         SPACE 1                                                     R4 P3763000
         LR    R2,R1               RELOAD WORK-JOE ADDRESS           R4 P3764000
         BAL   WF,CKPTJOEA         CKPT WORK-JOE                     R4 P3765000
        $POST  $HASPECF,CKPW       $POST CHECKPOINT WRITER           R4 P3766000
         TM    PCEID,PCELCLID      IS REQUEST FOR A REMOTE DEVICE... R4 P3767000
         BNO   PTRMT               BRANCH IF YES                     R4 P3768000
         LH    R2,JOECHAR          CHAR-JOE DISPL                    R4 P3769000
         N     R2,=F'65535'        CLEAR LEFT HALFWORD               R4 P3770000
         SLL   R2,2                EXPAND TO BYTE OFFSET             R4 P3771000
         LA    R4,JOEACTPR-JOEDSECT(R2,JOT)  ASSUME PRINTER          R4 P3772000
         TM    PCEID,PCEPRSID      IS REQUESTOR A PRINTER...         R4 P3773000
         BO    SKIP160             BRANCH IF YES                     R4 P3774000
         LA    R4,JOEACTPU-JOEDSECT(R2,JOT)  SET PUNCH               R4 P3775000
SKIP160  SLR   R3,R3               CLEAR REGISTER                    R4 P3776000
         IC    R3,0(,R4)           DECREMENT                         R4 P3777000
         BCTR  R3,R0                ACTIVE DEVICE                    R4 P3778000
         STC   R3,0(,R4)             COUNT                           R4 P3779000
         EJECT                                                       R4 P3780000
*********************************************************************** P3781000
*                                                                     * P3782000
*        CHECKPOINT THE CHARACTERISTICS JOE                           * P3783000
*                                                                     * P3784000
*********************************************************************** P3785000
         SPACE 1                                                     R4 P3786000
         BAL   WF,CKPTJOE          CKPT CHAR-JOE                     R4 P3787000
         SPACE 1                                                     R4 P3788000
*********************************************************************** P3789000
*                                                                     * P3790000
*        RESET CKPT-JOE VALID FLAG AND FREE CKPT-JOE IF PRC ABSENT    * P3791000
*                                                                     * P3792000
*********************************************************************** P3793000
         SPACE 1                                                     R4 P3794000
PTRMT    NI    JOEFLAG,255-$JOEBUSY  RESET WORK-JOE BUSY FLAG        R4 P3795000
         LTR   R2,R0               WAS CKPT-JOE SPECIFIED...         R4 P3796000
         BNZ   PTPRC               BRANCH IF YES                     R4 P3797000
         NI    JOEFLAG,255-$JOECKV RESET CKPT-JOE VALID FLAG         R4 P3798000
         LH    R2,JOECKPT          DISPL OF CKPT-JOE                 R4 P3799000
         N     R2,=F'65535'        CLEAR LEFT HALFWORD               R4 P3800000
         BZ    $#EXIT              EXIT IF NO CKPT-JOE               R4 P3801000
         SLL   R2,2                EXPAND TO BYTE OFFSET             R4 P3802000
         BAL   WF,FREEJOE          ADD JOE TO FREE QUEUE             R4 P3803000
         XC    JOECKPT,JOECKPT     CLEAR POINTER                     R4 P3804000
         B     $#EXIT              BR TO ALERT WAITING PROCESSORS    R4 P3805000
         SPACE 1                                                    R41 P3805100
         USING JOEDSECT,R2         ALTER JOE ADDRESSABILITY         R41 P3805200
         SPACE 1                                                     R4 P3806000
         CNOP  0,8                                                   R4 P3807000
PTPRC    SLR   WF,WF               CLEAR JOE                        R41 P3808000
         ST    WF,JOETLNC           LINE AND                        R41 P3808500
         ST    WF,JOETPCT            PAGE COUNTS                    R41 P3809000
         MVI   JOETNDS,0           CLEAR JOE DATA SET COUNT         R41 P3809500
         BAL   WF,CKPTJOEA         CKPT CKPT-JOE                     R4 P3810000
         ALR   R2,JOT              RESTORE CKPT JOE ADDRESS    @OZ27207 P3810050
         L     R4,JOECRECN         GET NO. RECORDS PROCESSED        R41 P3810100
         LR    R2,R1               ADDRESS WORK-JOE AGAIN           R41 P3810200
         L     R3,JOERECCT         COMPUTE NO. RECORDS STILL        R41 P3810300
         SR    R3,R4                TO BE PRINTED/PUNCHED           R41 P3810400
         BM    $#EXIT              IGNORE IF NEGATIVE               R41 P3810500
         L     R14,$SSVT           POINT TO OUTPUT                  R41 P3810600
         LA    R14,$SVXPRI-SSVT-4(,R14)  PRIORITY TABLE             R41 P3810700
         LA    R0,10               SET LOOP COUNTER                 R41 P3810800
         SPACE 1                                                    R41 P3810900
PTLOOP   LA    R14,4(,R14)         BUMP TABLE POINTER               R41 P3811000
         L     R15,0(,R14)         PICK UP TABLE ENTRY              R41 P3811100
         LA    R15,0(,R15)         DELETE PRIORITY BYTE             R41 P3811200
         CLR   R15,R3              CHECK FOR CORRECT SLOT           R41 P3811300
         BNL   PTPRIO              BR IF YES                        R41 P3811400
         BCT   R0,PTLOOP            ELSE LOOP                       R41 P3811500
         SPACE 1                                                    R41 P3811600
PTPRIO   MVC   JOEPRIO,0(R14)      MOVE PRIORITY TO JOE             R41 P3811700
         B     $#EXIT              BR TO ALERT WAITING PROCESSORS    R4 P3811800
         SPACE 1                                                     R4 P3812000
         DROP  R1,R2               KILL JOE ADDRESSABILITYT         R41 P3813000
        TITLE 'HASP JOB OUTPUT TABLE SERVICES -- JOE REMOVE ROUTINE' R4 P3897000
*********************************************************************** P3898000
*                                                                     * P3899000
*        $#REM -- REMOVE A JOE FROM THE JOT                           * P3900000
*                                                                     * P3901000
*        R0    - WORK, UNPREDICTABLE ON EXIT                          * P3902000
*        R1    - WORK JOE ADDRESS, UNPREDICTABLE ON EXIT              * P3903000
*        R11   - HCT ADDRESS (BASE1)                                  * P3904000
*        R13   - PCE ADDRESS                                          * P3905000
*        R14   - RETURN ADDRESS                                       * P3906000
*        R15   - ENTRY POINT ADDRESS, UNPREDICTABLE ON EXIT           * P3907000
*                                                                     * P3908000
*********************************************************************** P3909000
         SPACE 1                                                     R4 P3910000
         ENTRY $#REM               PROVIDE ENTRY FOR $#REM ROUTINE   R4 P3911000
         USING JOEDSECT,JOE        PROVIDE JOE ADDRESSABILITY        R4 P3912000
         SPACE 1                                                     R4 P3913000
         CNOP  0,8                                                   R4 P3914000
$#REM    STM   LINK,R12,PCELINK    SAVE CALLER'S REGISTERS           R4 P3915000
        $QSUSE SAVE=NO             REQUEST ACCESS TO CHECKPOINT DATA R4 P3916000
         L     JOT,$JOTABLE        LOAD JOB OUTPUT TABLE ADDRESS     R4 P3917000
         L     BASE2,$JOEADD       LOAD JOT SERVICES ADDRESSABILITY  R4 P3918000
         LR    JOE,R1              RELOAD WORK-JOE ADDRESS           R4 P3919000
         SPACE 1                                                     R4 P3920000
*********************************************************************** P3921000
*                                                                     * P3922000
*        LOCATE HEAD OF WORK QUEUE FOR WORK-JOE                       * P3923000
*                                                                     * P3924000
*********************************************************************** P3925000
         SPACE 1                                                     R4 P3926000
         SLR   R3,R3               CLEAR FOR INSERT                  R4 P3936000
         IC    R3,JOECURCL         GET CURRENT SYSOUT CLASS          R4 P3937000
         IC    R3,CNVCLS-C'A'(R3)  GET CLASS QUEUE OFFSET            R4 P3938000
         LA    R3,JOTCLSQ(R3)      ADD CLASS QUEUE ORIGIN            R4 P3939000
         EJECT                                                       R4 P3940000
*********************************************************************** P3941000
*                                                                     * P3942000
*        LOCATE ADDRESS OF PRECEEDING WORK-JOE                        * P3943000
*                                                                     * P3944000
*********************************************************************** P3945000
         SPACE 1                                                     R4 P3946000
RMWORKB  LA    R2,0(,JOE)          OFFSET OF                         R4 P3947000
         SLR   R2,JOT               WORK-JOE IN JOT                  R4 P3948000
         CL    R2,$JOTSIZE         JOE WITHIN BOUNDS OF JOT..  @OZ40486 P3948100
         BH    J03                 BR IF NO (LOGIC ERROR)      @OZ40486 P3948200
         SLR   R3,JOT              OFFSET OF QUEUE IN JOT            R4 P3949000
         LH    R4,0(R3,JOT)        DISPL OF 1ST JOE IN QUEUE         R4 P3950000
         SPACE 1                                                     R4 P3951000
         CNOP  0,8                                                   R4 P3952000
RMWQSCN  N     R4,=F'65535'        CLEAR LEFT HALFWORD               R4 P3953000
         BZ    J04                 BR IF JOE NOT ON QUEUE      @OZ40486 P3953100
         SLL   R4,2                EXPAND TO BYTE OFFSET             R4 P3954000
         CLR   R2,R4               IS NEXT JOE TO BE FREED...        R4 P3955000
         BE    RMWKEL              BRANCH IF YES                     R4 P3956000
         LR    R3,R4               MAKE NEXT PREVIOUS                R4 P3957000
         LH    R4,JOENEXT-JOEDSECT(R4,JOT)  GET NEXT JOE ON QUEUE    R4 P3958000
         B     RMWQSCN             CONTINUE SCAN OF QUEUE            R4 P3959000
J03      $ERROR                                                @OZ40486 P3959100
J04      $ERROR                                                @OZ40486 P3959500
         SPACE 1                                                     R4 P3960000
*********************************************************************** P3961000
*                                                                     * P3962000
*        REMOVE WORK-JOE FROM THE WORK QUEUE                          * P3963000
*                                                                     * P3964000
*********************************************************************** P3965000
         SPACE 1                                                     R4 P3966000
         CNOP  0,8                                                   R4 P3967000
RMWKEL   LA    R4,0(R3,JOT)        POINT TO PRECEEDING JOE           R4 P3968000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P3969000
         BAL   WD,REMWORK          REMOVE WORK-JOE FROM WORK QUEUE   R4 P3970000
         LTR   BASE2,BASE2         TEST JOT POST REQ'T FLAG    @OZ20010 P3971000
         BM    $#EXIT              BRANCH IF POST REQUIRED     @OZ20010 P3972000
         LM    LINK,R12,PCELINK    RESTORE CALLER'S REGISTERS        R4 P3973000
         BR    LINK                 AND RETURN                       R4 P3974000
         SPACE 1                                                     R4 P3975000
         DROP  JOE                 KILL JOE ADDRESSABILITY           R4 P3976000
        TITLE 'HASP JOB OUTPUT TABLE SERVICES -- JOE CANCEL ROUTINE' R4 P3977000
*********************************************************************** P3978000
*                                                                     * P3979000
*        $#CAN -- CANCEL ALL NON-BUSY JOES FOR JOB                    * P3980000
*                                                                     * P3981000
* INPUT  R0    - WORK, UNPREDICTABLE ON EXIT                          * P3982000
*        R1    - JOB QUEUE ELEMENT ADDRESS                            * P3983000
*        R11   - HCT ADDRESS (BASE1)                                  * P3984000
*        R13   - PCE ADDRESS                                          * P3985000
*        R14   - RETURN ADDRESS                                       * P3986000
*        R15   - ENTRY POINT ADDRESS, UNPREDICTABLE ON EXIT           * P3987000
*                                                                     * P3988000
*********************************************************************** P3989000
         SPACE 1                                                     R4 P3990000
         ENTRY $#CAN               PROVIDE ENTRY FOR $#CAN ROUTINE   R4 P3991000
         USING JOEDSECT,JOE        PROVIDE JOE ADDRESSABILITY        R4 P3992000
         SPACE 1                                                     R4 P3993000
         CNOP  0,8                                                   R4 P3994000
$#CAN    STM   LINK,R12,PCELINK    SAVE CALLER'S REGISTERS           R4 P3995000
        $QSUSE SAVE=NO             REQUEST ACCESS TO CHECKPOINT DATA R4 P3996000
         L     JOT,$JOTABLE        LOAD JOB OUTPUT TABLE ADDRESS     R4 P3997000
         L     BASE2,$JOEADD       LOAD JOT SERVICES ADDRESSABILITY  R4 P3998000
         EJECT                                                       R4 P3999000
         SL    R1,$JOBQPTR         REDUCE TO RELATIVE BYTE OFFSET    R4 P4000000
         SLL   R1,14               REDUCE TO RELATIVE WORD OFFSET    R4 P4001000
         SRA   R1,16                ALLOWING FOR HI-ORDER BIT        R4 P4002000
         LA    R10,L'JOTRDYWQ      INDEX TO WORK QUEUES              R4 P4003000
*                                  THIS CARD DELETED BY APAR   @OZ20010 P4004000
         SPACE 1                                                     R4 P4005000
*********************************************************************** P4006000
*                                                                     * P4007000
*        SCAN QUEUE FOR WORK-JOE BELONGING TO THIS JOB                * P4008000
*                                                                     * P4009000
*********************************************************************** P4010000
         SPACE 1                                                     R4 P4011000
         CNOP  4,8                                                   R4 P4012000
CNQUEUE  LA    JOE,JOTRDYWQ-2-(JOENEXT-JOEDSECT)(R10)  NEXT QUEUE    R4 P4013000
         SPACE 1                                                     R4 P4014000
CNJOES   LR    R4,JOE              SAVE PREVIOUS WORK-JOE ADDR       R4 P4015000
         LH    JOE,JOENEXT         PICK NEXT WORK-JOE DISPL          R4 P4016000
         N     JOE,=F'65535'       CLEAR LEFT HALFWORD               R4 P4017000
         BZ    CNCLSX              BRANCH IF END OF QUEUE            R4 P4018000
         SLL   JOE,2               EXPAND TO BYTE OFFSET             R4 P4019000
         ALR   JOE,JOT             ADDRESS OF NEXT WORK-JOE          R4 P4020000
         CH    R1,JOEJQE           IS WORK-JOE FOR CANCELED JOB...   R4 P4021000
         BNE   CNJOES              BRANCH IF NO                      R4 P4022000
         TM    JOEFLAG,$JOEBUSY    IS THIS WORK-JOE BUSY...          R4 P4023000
         BNZ   CNJOES              BRANCH IF YES                     R4 P4024000
         SPACE 1                                                     R4 P4025000
*********************************************************************** P4026000
*                                                                     * P4027000
*        REMOVE WORK-JOE FROM THE WORK QUEUE                          * P4028000
*                                                                     * P4029000
*********************************************************************** P4030000
         SPACE 1                                                     R4 P4031000
         BAL   WD,REMWORK          REMOVE WORK-JOE FROM WORK QUEUE   R4 P4032000
         LH    R1,JOEJQE           RELOAD JQE OFFSET                 R4 P4033000
         LR    JOE,R4              MAKE PREVIOUS WORK-JOE CURRENT    R4 P4034000
         B     CNJOES              CONTINUE CLASS QUEUE SCAN         R4 P4035000
         SPACE 1                                                     R4 P4036000
*********************************************************************** P4037000
*                                                                     * P4038000
*        STEP TO THE NEXT WORK QUEUE                                  * P4039000
*                                                                     * P4040000
*********************************************************************** P4041000
         SPACE 1                                                     R4 P4042000
         CNOP  0,8                                                   R4 P4043000
CNCLSX   BCTR  R10,0               DECREMENT QUEUE INDEX BY ONE      R4 P4044000
         BCT   R10,CNQUEUE         BRANCH IF NOT AT QUEUE END        R4 P4045000
         SPACE 1                                                     R4 P4046000
         LTR   BASE2,BASE2         TEST JOT POST REQ'T FLAG    @OZ20010 P4047000
         BM    $#EXIT              BRANCH IF POST REQUIRED     @OZ20010 P4048000
         LM    LINK,R12,PCELINK    RESTORE CALLER'S REGISTERS        R4 P4049000
         BR    LINK                 AND RETURN                       R4 P4050000
         SPACE 1                                                     R4 P4051000
         DROP  JOE                 KILL JOE ADDRESSABILITY           R4 P4052000
         TITLE 'HASP JOB OUTPUT TABLE SERVICES -- COMMON ROUTINES'   R4 P4053000
*********************************************************************** P4054000
*                                                                     * P4055000
*        REMWORK -- ROUTINE TO REMOVE WORK JOE FROM JOT               * P4056000
*                                                                     * P4057000
* INPUT  R0    - WORK                                                 * P4058000
*        R1    - WORK                                                 * P4059000
*        R2    - WORK                                                 * P4060000
*        R3    - WORK                                                 * P4061000
*        R4    - ADDRESS OF JOE PRECEEDING WORK JOE TO BE REMOVED     * P4062000
*        WD    - RETURN ADDRESS                                       * P4063000
*        WF    - WORK/LINK REGISTER                                   * P4064000
*        JOE   - ADDRESS OF JOE TO BE REMOVED                         * P4065000
*                                                                     * P4066000
*********************************************************************** P4067000
         SPACE 1                                                     R4 P4068000
         USING JOEDSECT,JOE        PROVIDE JOE ADDRESSABILITY        R4 P4069000
         SPACE 1                                                     R4 P4070000
*********************************************************************** P4071000
*                                                                     * P4072000
*        FREE CHECKPOINT JOE IF ONE WAS ALLOCATED                     * P4073000
*                                                                     * P4074000
*********************************************************************** P4075000
         SPACE 1                                                     R4 P4076000
         CNOP  0,8                                                   R4 P4077000
REMWORK  LH    R2,JOECKPT          DISPL OF CHECKPOINT ELEMENT       R4 P4078000
         N     R2,=F'65535'        CLEAR LEFT HALFWORD               R4 P4079000
         SLL   R2,2                EXPAND TO BYTE OFFSET             R4 P4080000
         BZ    SKIP170             BRANCH IF ELEMENT NOT ALLOCATED   R4 P4081000
         BAL   WF,FREEJOE          RETURN CKPT-JOE TO FREE QUEUE     R4 P4082000
SKIP170  LH    R2,JOECHAR          CHAR-JOE DISPLACEMENT             R4 P4083000
         N     R2,=F'65535'        CLEAR LEFT HALFWORD               R4 P4084000
         SLL   R2,2                EXPAND TO BYTE OFFSET             R4 P4085000
         TM    JOEFLAG,$JOEBUSY    WAS THIS JOE SELECTED...          R4 P4086000
         BZ    RMRMT               BRANCH IF NO                      R4 P4087000
         TM    PCEID,PCELCLID      IS REQUEST FOR A REMOTE DEVICE... R4 P4088000
         BNO   RMRMT               BRANCH IF YES                     R4 P4089000
         SPACE 1                                                     R4 P4090000
*********************************************************************** P4091000
*                                                                     * P4092000
*        DECREMENT ACTIVE DEVICE COUNTER FOR THIS CHAR-JOE            * P4093000
*                                                                     * P4094000
*********************************************************************** P4095000
         SPACE 1                                                     R4 P4096000
         LA    R3,JOEACTPR-JOEDSECT(R2,JOT)  ASSUME PRINTER          R4 P4097000
         TM    PCEID,PCEPRSID      IS REQUESTOR A PRINTER...         R4 P4098000
         BO    SKIP180             BRANCH IF YES                     R4 P4099000
         LA    R3,JOEACTPU-JOEDSECT(R2,JOT)  SET PUNCH               R4 P4100000
SKIP180  SLR   WF,WF               CLEAR REGISTER                    R4 P4101000
         IC    WF,0(,R3)           DECREMENT                         R4 P4102000
         BCTR  WF,R0                ACTIVE DEVICE                    R4 P4103000
         STC   WF,0(,R3)             COUNT                           R4 P4104000
         EJECT                                                       R4 P4105000
*********************************************************************** P4106000
*                                                                     * P4107000
*        DECREMENT CHARACTERISTICS JOE USE COUNT                      * P4108000
*                                                                     * P4109000
*********************************************************************** P4110000
         SPACE 1                                                     R4 P4111000
RMRMT    LH    R3,JOEUSE-JOEDSECT(R2,JOT)  DECREMENT                 R4 P4112000
         BCTR  R3,R0                        CHAR-JOE                 R4 P4113000
         STH   R3,JOEUSE-JOEDSECT(R2,JOT)    USE COUNT               R4 P4114000
         BAL   WF,CKPTJOE          CKPT CHAR-JOE                     R4 P4115000
         LTR   R3,R3               IS NUMBER OF USERS ZERO...        R4 P4116000
         BNZ   RMWORK              BRANCH IF NO                      R4 P4117000
         SPACE 1                                                     R4 P4118000
*********************************************************************** P4119000
*                                                                     * P4120000
*        REMOVE CHARACTERISTICS-JOE FROM THE CHAR-QUEUE               * P4121000
*                                                                     * P4122000
*********************************************************************** P4123000
         SPACE 1                                                     R4 P4124000
         LA    R3,JOTCHRQ          ADDRESS OF CHAR-QUEUE             R4 P4125000
         SLR   R3,JOT              OFFSET OF CHAR QUEUE IN JOT       R4 P4126000
         LH    WF,JOTCHRQ          DISPL OF 1ST JOE IN CHAR QUEUE    R4 P4127000
         SPACE 1                                                     R4 P4128000
         CNOP  0,8                                                   R4 P4129000
RMCQSCN  N     WF,=F'65535'        CLEAR LEFT HALFWORD               R4 P4130000
         SLL   WF,2                EXPAND TO BYTE OFFSET             R4 P4131000
         CLR   R2,WF               IS NEXT JOE TO BE FREED...        R4 P4132000
         BE    RMCHEL              BRANCH IF YES                     R4 P4133000
         LR    R3,WF               MAKE NEXT PREVIOUS                R4 P4134000
         LH    WF,JOENEXT-JOEDSECT(WF,JOT)  GET NEW NEXT JOE         R4 P4135000
         B     RMCQSCN             CONTINUE CHAR SCAN                R4 P4136000
         SPACE 1                                                     R4 P4137000
         CNOP  0,8                                                   R4 P4138000
RMCHEL   BAL   WF,REMJOE           DEQUEUE AND FREE CHAR-JOE         R4 P4139000
         SPACE 1                                                     R4 P4140000
*********************************************************************** P4141000
*                                                                     * P4142000
*        REMOVE WORK-JOE FROM THE WORK QUEUE                          * P4143000
*                                                                     * P4144000
*********************************************************************** P4145000
         SPACE 1                                                     R4 P4146000
RMWORK   LR    R2,JOE              COPY WORK-JOE ADDRESS             R4 P4147000
         SLR   R2,JOT              REDUCE TO BYTE OFFSET             R4 P4148000
         LR    R3,R4               COPY ADDRESS OF PREVIOUS WORK-JOE R4 P4149000
         SLR   R3,JOT              REDUCE TO BYTE OFFSET             R4 P4150000
         BAL   WF,REMJOE           DEQUEUE AND FREE WORK-JOE         R4 P4151000
         EJECT                                                       R4 P4152000
*********************************************************************** P4153000
*                                                                     * P4154000
*        DE-CHAIN JOE FROM JQE WORK-JOE CHAIN                  @OZ27300 P4155000
*                                                                     * P4156000
*********************************************************************** P4157000
         SPACE 1                                                     R4 P4158000
         LH    R1,JOEJQE           JOB QUEUE ELEMENT OFFSET          R4 P4159000
         N     R1,=F'65535'        CLEAR LEFT HALFWORD               R4 P4160000
         SLL   R1,2                EXPAND TO BYTE OFFSET             R4 P4161000
         AL    R1,$JOBQPTR         ADD JOB QUEUE ORIGIN              R4 P4162000
         SPACE 1                                                     R4 P4163000
         USING JQEDSECT,R1         PROVIDE JQE ADDRESSABILITY        R4 P4164000
         SPACE 1                                                     R4 P4165000
         LA    R3,0(,JOE)          RELOAD PURIFIED JOE ADDRESS @OZ27300 P4165200
         SLR   R3,JOT              REDUCE JOE ADDRESS          @OZ27300 P4165400
         SRL   R3,2                 TO FULLWORD OFFSET         @OZ27300 P4165600
         LH    WF,JQEJOE           GET OFFSET OF 1ST JOB JOE   @OZ27300 P4165800
         N     WF,=F'65535'        CLEAR HI-ORDER BYTES        @OZ27300 P4166000
         CLR   WF,R3               IS JOE 1ST ON THE CHAIN...  @OZ27300 P4166200
         BE    RMCKJOB             BR IF YES                   @OZ27300 P4166400
         SPACE 1                                               @OZ27300 P4166600
RMDQNXT  SLL   WF,2                EXPAND TO BYTE OFFSET       @OZ27300 P4166800
         LA    R1,0(WF,JOT)        SAVE JOE ADDRESS            @OZ27300 P4167000
         LH    WF,JOEJOE-JOEDSECT(,R1)  GET OFFSET OF NEXT JOE @OZ27300 P4167200
         N     WF,=F'65535'        CLEAR HI-ORDER BYTES        @OZ27300 P4167400
         BZR   WD                  RETURN IF END OF CHAIN      @OZ27300 P4167600
         CLR   WF,R3               IS THIS THE ONE...          @OZ27300 P4167800
         BNE   RMDQNXT             BR IF NO                    @OZ27300 P4168000
         MVC   JOEJOE-JOEDSECT(,R1),JOEJOE  DE-CHAIN JOE       @OZ27300 P4168200
        $#CKPT JOE=(R1),TYPE=A     CKPT PRECEEDING JOE         @OZ27300 P4168400
         BR    WD                  RETURN TO CALLER            @OZ27300 P4168600
         SPACE 1                                               @OZ27300 P4168800
RMCKJOB  MVC   JQEJOE,JOEJOE       DE-CHAIN JOE                @OZ27300 P4168900
         LM    WA,WB,PCEWA         RESTORE REGS USED BY $QCKPT       R4 P4169000
        $QCKPT (R1)                CKPT THE JOB QUEUE ELEMENT        R4 P4170000
         SPACE 1                                                     R4 P4171000
*********************************************************************** P4172000
*                                                                     * P4173000
*        MOVE JOB TO $PURGE IF NO MORE HELD OR NON-HELD OUTPUT @OZ27300 P4174000
*                                                                     * P4175000
*********************************************************************** P4176000
         SPACE 1                                                     R4 P4177000
         CLC   JQEJOE,$ZEROS       ANY MORE NON-HELD OUTPUT... @OZ27300 P4178000
         BNER  WD                  RETURN IF YES               @OZ27300 P4178500
         CLC   JQEHLDCT,$ZEROS     HAS JOB ANY HELD OUTPUT...  @OZ27300 P4179000
         BNER  WD                  RETURN IF YES               @OZ27300 P4179500
         CLI   JQETYPE,$HARDCPY    IS JOB IN $HARDCPY QUEUE...       R4 P4180000
         BNER  WD                  RETURN IF NO                      R4 P4181000
        $QPUT  (R1),$PURGE          ELSE RE-QUEUE JOB FOR PURGE      R4 P4182000
         BR    WD                  THEN RETURN                       R4 P4183000
         SPACE 1                                                     R4 P4184000
         DROP  R1,JOE              KILL JQE, JOE ADDRESSABILITY      R4 P4185000
         EJECT                                                       R4 P4186000
*********************************************************************** P4187000
*                                                                     * P4188000
*        GETJOE -- ROUTINE TO GET A JOE FROM THE FREE QUEUE           * P4189000
*                                                                     * P4190000
*                                                                     * P4191000
* INPUT  WF    - RETURN ADDRESS                                       * P4192000
*                                                                     * P4193000
* OUTPUT R3    - JOE ADDRESS                                          * P4194000
*                                                                     * P4195000
*********************************************************************** P4196000
         SPACE 1                                                     R4 P4197000
         CNOP  0,8                                                   R4 P4198000
GETJOE   LH    R3,JOTFREC          DECREMENT                         R4 P4199000
         BCTR  R3,R0                FREE JOE                         R4 P4200000
         STH   R3,JOTFREC            COUNT                           R4 P4201000
         LH    R3,JOTFREQ          DISPL OF 1ST FREE JOE             R4 P4202000
         N     R3,=F'65535'        CLEAR LEFT HALFWORD               R4 P4203000
         SLL   R3,2                EXPAND TO BYTE OFFSET             R4 P4204000
        $#CKPT JOE=0(,R3),HEAD=YES CKPT JOE BEING GOTTEN + HEADER    R4 P4205000
         ALR   R3,JOT              ADDRESS OF 1ST FREE JOE           R4 P4206000
         MVC   JOTFREQ,JOENEXT-JOEDSECT(R3) REATTACH REMAINING QUEUE R4 P4207000
         BR    WF                  RETURN TO CALLER                  R4 P4208000
         EJECT                                                       R4 P4209000
*********************************************************************** P4210000
*                                                                     * P4211000
*        REMJOE -- REMOVE JOE FROM CURRENT QUEUE                      * P4212000
*                                                                     * P4213000
* INPUT  R0    - WORK                                                 * P4214000
*        R2    - BYTE OFFSET OF JOE TO BE REMOVED                     * P4215000
*        R3    - BYTE OFFSET OF JOE PRECEEDING JOE TO BE REMOVED      * P4216000
*        WF    - RETURN ADDRESS                                       * P4217000
*                                                                     * P4218000
* NOTES        - THE BYTE AT $CSAVREG+8 IS SET TO NON-ZERO BY THIS    * P4219000
*                ROUTINE IF THE RESULTING FREE JOE COUNT INDICATES    * P4220000
*                THAT THERE MAY BE PROCESSORS WAITING FOR FREE JOES   * P4221000
*                                                                     * P4222000
*              - THIS ROUTINE EXITS TO THE FREEJOE ROUTINE TO         * P4223000
*                RETURN REMOVED JOE TO THE FREE QUEUE                 * P4224000
*                                                                     * P4225000
*********************************************************************** P4226000
         SPACE 1                                                     R4 P4227000
         CNOP  0,8                                                   R4 P4228000
REMJOE   LH    R0,JOENEXT-JOEDSECT(R2,JOT)  GET OFFSET OF NEXT JOE   R4 P4229000
         STH   R0,JOENEXT-JOEDSECT(R3,JOT)  REMOVE JOE FROM QUEUE    R4 P4230000
        $#CKPT JOE=0(,R3)          CHECKPOINT THE PREVIOUS JOE       R4 P4231000
         LH    R0,JOTFREC          GET FREE JOE COUNT                R4 P4232000
         SH    R0,$MINJOES         MINUS THE MINIMUM FREE LIMIT      R4 P4233000
         SH    R0,=H'4'            MINUS 4 FOR POSSIBLE WAITING      R4 P4234000
         BNM   FREEJOE             BR IF NOBODY WAITING              R4 P4235000
         ICM   BASE2,8,*           INDICATE JOT POST REQUIRED  @OZ20010 P4236000
         EJECT                                                       R4 P4237000
*********************************************************************** P4238000
*                                                                     * P4239000
*        FREEJOE -- ROUTINE TO RETURN A JOE TO THE FREE QUEUE         * P4240000
*                                                                     * P4241000
* INPUT  R0    - WORK                                                 * P4242000
*        R2    - BYTE OFFSET OF JOE TO BE RETURNED                    * P4243000
*        R3    - WORK REGISTER                                        * P4244000
*        WF    - RETURN ADDRESS                                       * P4245000
*                                                                     * P4246000
*        NOTE  - THIS ROUTINE EXITS TO THE CKPTJOEA ROUTINE TO        * P4247000
*                CHECKPOINT THE FREE JOE AFTER WHICH THE REMOVED      * P4248000
*                JOE IS INSERTED.                                     * P4249000
*                                                                     * P4250000
*********************************************************************** P4251000
         SPACE 1                                                     R4 P4252000
         USING JOEDSECT,R3         PROVIDE JOE ADDRESSABILITY        R4 P4253000
         SPACE 1                                                     R4 P4254000
FREEJOE  LH    R3,JOTFREC          INCREMENT                         R4 P4255000
         LA    R3,1(,R3)            FREE JOE                         R4 P4256000
         STH   R3,JOTFREC            COUNT                           R4 P4257000
         LA    R3,0(JOT,R2)        GET JOE ADDRESS             @OZ27300 P4257100
         MVI   JOETYPE,$JOEFREE    INDICATE JOE ON FREE QUEUE  @OZ27300 P4257200
        $#CKPT JOE=0(,R2),HEAD=YES CKPT JOE BEING FREED + HEADER     R4 P4258000
         SRL   R2,2                REDUCE TO FULLWORD OFFSET         R4 P4259000
         LA    R3,JOTFREQ-(JOENEXT-JOEDSECT)  PREPARE TO SCAN FREE Q R4 P4260000
         SPACE 1                                                     R4 P4261000
         CNOP  0,8                                                   R4 P4262000
FRESCN   CLM   R2,3,JOENEXT        IS JOE OFFSET LESS THAN NEXT...   R4 P4263000
         BL    FREHIT              BRANCH IF YES                     R4 P4264000
         LH    R0,JOENEXT          DISPL OF NEXT FREE JOE            R4 P4265000
         N     R0,=F'65535'        CLEAR HIGH HALF WORD              R4 P4266000
         BZ    FREHIT              BRANCH IF END OF FREE QUEUE       R4 P4267000
         LR    R3,R0               RELOAD FREE JOE DISPL             R4 P4268000
         SLL   R3,2                EXPAND TO BYTE OFFSET             R4 P4269000
         ALR   R3,JOT              ADDRESS OF NEXT FREE JOE          R4 P4270000
         B     FRESCN              CONTINUE SEARCH                   R4 P4271000
         SPACE 1                                                     R4 P4272000
         CNOP  0,8                                                   R4 P4273000
FREHIT   LH    R0,JOENEXT          GET OLD NEXT FREE JOE DISPL       R4 P4274000
         STH   R2,JOENEXT          STORE NEW DISPL AS NEXT FREE      R4 P4275000
         N     R2,=F'65535'        CLEAR HIGH HALF WORD              R4 P4276000
         SLL   R2,2                EXPAND TO BYTE OFFSET             R4 P4277000
         STH   R0,JOENEXT-JOEDSECT(R2,JOT)  RE-CONNECT CHAIN         R4 P4278000
         LR    R2,R3               RELOAD ADDR OF PREVIOUS FREE JOE  R4 P4279000
         SPACE 1                                                     R4 P4280000
         DROP  R3                  KILL JOE ADDRESSABILITY           R4 P4281000
         EJECT                                                       R4 P4282000
*********************************************************************** P4283000
*                                                                     * P4284000
*        CKPTJOEA/CKPTJOE -- ROUTINE TO CHECKPOINT A JOE              * P4285000
*                                                                     * P4286000
* INPUT  R2    - ADDRESS OF JOE (JOECKPTA)                            * P4287000
*              - BYTE OFFSET OF JOE (JOECKPT)                         * P4288000
*        WF    - RETURN ADDRESS                                       * P4289000
*                                                                     * P4290000
*********************************************************************** P4291000
         SPACE 1                                                     R4 P4292000
CKPTJOEA SLR   R2,JOT              REDUCE TO BYTE OFFSET             R4 P4293000
         SPACE 1                                                     R4 P4294000
CKPTJOE $#CKPT JOE=0(,R2)          CHECKPOINT THE JOE                R4 P4295000
         BR    WF                  RETURN TO CALLER                  R4 P4296000
         SPACE 1                                                     R4 P4297000
         DROP  JOT                 KILL JOT ADDRESSABILITY           R4 P4298000
         DROP  BASE2               KILL LOCAL ADDRESSABILITY         R4 P4299000
   TITLE 'HASP JOB OUTPUT TABLE SERVICES -- JOE CKPT ROUTINE'  @OZ20010 P4299100
***************************************************************@OZ20010 P4299200
*              $JOECKPT -- SCHEDULE CHECKPOINT FOR ALTERED JOE @OZ20010 P4299300
*                                                              @OZ20010 P4299400
*              REG    ENTRY VALUE               EXIT VALUE     @OZ20010 P4299500
*                                                              @OZ20010 P4299600
*              R0     N/A                       UNCHANGED      @OZ20010 P4299700
*              R1     JOE ADDR IF ENTERED AT                   @OZ20010 P4299800
*                     $JOECKPT. ELSE JOE OFFSET                @OZ20010 P4299900
*              R2-R10 N/A                       UNCHANGED      @OZ20010 P4300000
*              R11    HCT ADDRESS               UNCHANGED      @OZ20010 P4300100
*              R12    N/A                       UNCHANGED      @OZ20010 P4300200
*              R13    PCE ADDRESS               UNCHANGED      @OZ20010 P4300300
*              R14    RETURN ADDR (HI ORDER     UNCHANGED      @OZ20010 P4300400
*                     BIT ON IF HEAD=YES)                      @OZ20010 P4300500
*              R15    ENTRY ADDRESS             UNCHANGED      @OZ20010 P4300600
*                                                              @OZ20010 P4300700
* THIS ROUTINE INSURES A CHECKPOINT FOR AN ALTERED JOE EVEN    @OZ20010 P4300800
* IF IT CROSSES PAGE BOUNDRIES.                                @OZ20010 P4300900
*                                                              @OZ20010 P4301000
***************************************************************@OZ20010 P4301100
         SPACE 1                                               @OZ20010 P4301200
         ENTRY $JOECKPR            PROVIDE $JOECKPR ENTRY      @OZ27300 P4301300
         SPACE 1                                               @OZ20010 P4301500
$JOECKPR LA    R1,0(,R1)           PURIFY JOE ADDRESS          @OZ27300 P4301700
         SL    R1,$JOTABLE         GET THE OFFSET              @OZ20010 P4301800
         SPACE 1                                               @OZ20010 P4301900
         ENTRY $JOEOFF             PROVIDE $JOEOFF ENTRY       @OZ20010 P4302000
         SPACE 1                                               @OZ20010 P4302100
$JOEOFF  LR    R0,R1               SAVE JOE OFFSET             @OZ20010 P4302300
         SRL   R1,12               DIVIDE BY LENGTH OF PAGE    @OZ20010 P4302400
         AL    R1,$CTLB            SET JOE'S                   @OZ27300 P4302500
         AH    R1,$JOBRECN          CHECKPOINT                 @OZ27300 P4302550
         MVI   0(R1),FF              CONTROL BYTE              @OZ27300 P4302600
         LR    R1,R0               RELOAD JOE OFFSET           @OZ20010 P4302700
         LA    R1,JOESIZE-1(,R1)   LOCATE THE END OF THIS JOE  @OZ20010 P4302800
         SRL   R1,12               DIVIDE BY PAGE LENGTH       @OZ20010 P4302900
         AL    R1,$CTLB            SET JOE'S                   @OZ27300 P4303000
         AH    R1,$JOBRECN          CHECKPOINT                 @OZ27300 P4303050
         MVI   0(R1),FF              CONTROL BYTE              @OZ27300 P4303100
         LTR   R14,R14             TEST FOR HEAD=YES           @OZ20010 P4303200
         BPR   R14                 RETURN IF NO                @OZ20010 P4303300
         L     R1,$CTLB            SET JOT-HEADER'S            @OZ27300 P4303400
         AH    R1,$JOBRECN          CHECKPOINT                 @OZ27300 P4303450
         MVI   0(R1),FF              CONTROL BYTE              @OZ27300 P4303500
         BR    R14                 RETURN                      @OZ20010 P4303700
         TITLE 'HASP JOB OUTPUT TABLE SERVICES -- EXTERNAL WRITER POST CP4304000
               ROUTINE'                                        @OZ20010 P4304100
***************************************************************@OZ20010 P4304200
*                                                              @OZ20010 P4304300
*        $#WTR -- POST EXTERNAL WRITERS WAITING ON JOT         @OZ20010 P4304400
*                                                                     * P4305000
*        R11   - HCT ADDRESS (BASE1)                                  * P4306000
*        R14   - RETURN ADDRESS                                       * P4307000
*                                                                     * P4308000
*********************************************************************** P4309000
         SPACE 1                                                     R4 P4310000
         ENTRY $#WTR               PROVIDE ENTRY FOR $#WTR ROUTINE   R4 P4311000
         USING SJBDSECT,R1         PROVIDE SJB ADDRESSABILITY        R4 P4312000
         USING $SVDSECT,WB         PROVIDE SSVT ADDRESSABILITY       R4 P4313000
         SPACE 1                                                     R4 P4314000
         CNOP  2,8                                                   R4 P4315000
$#WTR    STM   LINK,WB,$CSAVREG    SAVE CALLER'S REGISTERS           R4 P4316000
         L     WB,$SSVT            GET SSVT ADDRESS                  R4 P4317000
         SPACE 1                                                     R4 P4318000
         BALR  WA,0                RE-ESTABLISH                      R4 P4319000
         USING *,WA                 LOCAL ADDRESSABILITY             R4 P4320000
         SPACE 1                                                     R4 P4321000
*********************************************************************** P4322000
*                                                                     * P4323000
*        SCAN EXECUTING STARTED TASKS FOR EXTERNAL WRITERS            * P4324000
*                                                                     * P4325000
*********************************************************************** P4326000
         SPACE 1                                                     R4 P4327000
WTRLOOP  LA    R1,$SVJXNUM-(SJBXQCHN-SJBDSECT)  PREPARE TO SCAN SJBS R4 P4328000
         SPACE 1                                                     R4 P4329000
WTRNEXT  L     R1,SJBXQCHN         GET ADDRESS OF NEXT SJB           R4 P4330000
         LTR   R1,R1               TEST FOR END OF CHAIN             R4 P4331000
         BZ    WTRDONE             BRANCH IF YES                     R4 P4332000
         TM    SJBPSOP,X'80'       TEST FOR EXTERNAL WRITER JOT WAIT R4 P4333000
         BZ    WTRNEXT             BRANCH IF NO                      R4 P4334000
         NI    SJBPSOP,255-X'80'   TURN OFF WAIT BIT                 R4 P4335000
         L     R1,SJBPSOP          ADDRESS PSO                       R4 P4336000
         SPACE 1                                                     R4 P4337000
         USING PSODSECT,R1         PROVIDE PSO ADDRESSABILITY        R4 P4338000
         SPACE 1                                                     R4 P4339000
        $XMPOST PSOECBP            POST A WAITING EXTERNAL WRITER    R4 P4340000
         IC    R0,$WTRWTCT         DECREMENT NUMBER                  R4 P4341000
         BCTR  R0,0                 OF EXTERNAL WRITERS              R4 P4342000
         STC   R0,$WTRWTCT         WAITING ON JOT POST               R4 P4343000
         B     WTRLOOP             CONTINUE                          R4 P4344000
         SPACE 1                                                     R4 P4345000
WTRDONE  LM    LINK,WB,$CSAVREG    RESTORE CALLER'S REGISTERS        R4 P4346000
         BR    LINK                RETURN TO CALLER                  R4 P4347000
         SPACE 1                                                     R4 P4348000
         DROP  R1,WA,WB            KILL ADDRESSABILITY               R4 P4349000
         TITLE 'HASP JOB OUTPUT TABLE SERVICES -- DATA AREAS'        R4 P4350000
*********************************************************************** P4351000
*                                                                     * P4352000
*        SYSOUT CLASS ID TO CLASS QUEUE ADDRESS CONVERSION            * P4353000
*                                                                     * P4354000
*********************************************************************** P4355000
         SPACE 1                                                     R4 P4356000
CNVCLS   DC    AL1(0,2,4,6,8,10,12,14,16),7AL1(0)      A-I           R4 P4357000
         DC    AL1(18,20,22,24,26,28,30,32,34),8AL1(0) J-R           R4 P4358000
         DC    AL1(36,38,40,42,44,46,48,50),6AL1(0)    S-Z           R4 P4359000
         DC    AL1(52,54,56,58,60,62,64,66,68,70)      0-9           R4 P4360000
         SPACE 5                                                     R4 P4361000
         LTORG                                                       R4 P4362000
         TITLE 'HASP JOB OUTPUT TABLE SERVICES -- JCT READ ROUTINE'  R4 P4363000
*********************************************************************** P4364000
*                                                                     * P4365000
*        PROVIDE JCT IN BUFFER FOR PRINT/PUNCH/EXTERNAL WRITER JOB    * P4366000
*                                                                     * P4367000
* INPUT  R0    - WORK, UNPREDICTABLE ON EXIT                          * P4368000
*        R1    - WORK, UNPREDICTABLE ON EXIT                          * P4369000
*        R10   - JQE ADDRESS                                          * P4370000
*        R14   - RETURN ADDRESS                                       * P4371000
*        R15   - ENTRY POINT ADDRESS                                  * P4372000
*                                                                     * P4373000
* OUTPUT R10   - JCT ADDRESS OR ZERO                                  * P4374000
*              - CC NON-ZERO -- JCT READ SUCCESSFUL                   * P4375000
*              - CC     ZERO -- JCT READ UNSUCCESSFUL                 * P4376000
*                                                                     * P4377000
* NOTE   -     BECAUSE OF $WAITS IN THIS ROUTINE, THE PCE AND FIXED   * P4378000
*              SAVE AREAS ARE INELLIGIBLE FOR USE.  THEREFORE, R15    * P4379000
*              MUST BE USED AS A BASE REGISTER, BEING RESTORED AFTER  * P4380000
*              EACH USE BY ANOTHER SERVICE ROUTINE.                   * P4381000
*                                                                     * P4382000
*********************************************************************** P4383000
         SPACE 1                                                     R4 P4384000
         ENTRY $#JCTRDR            PROVIDE ENTRY FOR $#JCTRDR RTN    R4 P4385000
         USING $#JCTRDR,R15        PROVIDE LOCAL ADDRESSABILITY      R4 P4386000
         EJECT                                                       R4 P4387000
*********************************************************************** P4388000
*                                                                     * P4389000
*        SEARCH RESIDENT JCT QUEUE FOR REQUESTED JCT                  * P4390000
*                                                                     * P4391000
*********************************************************************** P4392000
         SPACE 1                                                     R4 P4393000
         USING JQEDSECT,JCT        PROVIDE JQE ADDRESSABILITY        R4 P4394000
         SPACE 1                                                     R4 P4395000
         CNOP  4,8                                                   R4 P4396000
$#JCTRDR ST    LINK,PCESAVEA       SAVE RETURN ADDRESS               R4 P4397000
         MVC   PCESEEK,JQETRAK     JCT TRACK ADDRESS TO DA DCT       R4 P4398000
         SPACE 1                                                     R4 P4399000
         DROP  JCT                 KILL JQE ADDRESSABILITY           R4 P4400000
         SPACE 1                                                     R4 P4401000
         LH    R0,$#JCTQCT         ENTRIES IN RESIDENT JCT QUEUE     R4 P4402000
         L     R1,$#JCTQ           POINT TO 1ST QUEUE ENTRY          R4 P4403000
         SLR   R14,R14             CLEAR FIRST FREE POINTER          R4 P4404000
         SPACE 1                                                     R4 P4405000
RDFIND   CLM   JCT,7,5(R1)         DOES THIS JQE MATCH REQUEST...    R4 P4406000
         BE    RDHIT               BRANCH IF YES                     R4 P4407000
         CLI   0(R1),X'00'         IS THIS ENTRY FREE...             R4 P4408000
         BNE   RDNEXT              BRANCH IF NO                      R4 P4409000
         LTR   R14,R14             HAS FIRST FREE BEEN FOUND...      R4 P4410000
         BNZ   RDNEXT              BRANCH IF YES                     R4 P4411000
         LR    R14,R1              SAVE FIRST FREE ELEMENT ADDRESS   R4 P4412000
         SPACE 1                                                     R4 P4413000
*********************************************************************** P4414000
*                                                                     * P4415000
*        STEP TO NEXT JCT QUEUE ENTRY - CONTINUE SEARCH               * P4416000
*                                                                     * P4417000
*********************************************************************** P4418000
         SPACE 1                                                     R4 P4419000
RDNEXT   LA    R1,8(,R1)           ADDRESS NEXT JCT QUEUE ENTRY      R4 P4420000
         BCT   R0,RDFIND           BRANCH IF NOT AT END OF QUEUE     R4 P4421000
         SPACE 1                                                     R4 P4422000
*********************************************************************** P4423000
*                                                                     * P4424000
*        REQUESTED JCT NOT FOUND - SETUP NEW QUEUE ENTRY              * P4425000
*                                                                     * P4426000
*********************************************************************** P4427000
         SPACE 1                                                     R4 P4428000
         LR    R1,R14              USE FIRST FREE ELEMENT            R4 P4429000
         STCM  JCT,7,5(R1)         STORE JQE ADDRESS                 R4 P4430000
         EJECT                                                       R4 P4431000
*********************************************************************** P4432000
*                                                                     * P4433000
*        REQUESTED JCT FOUND - INCREMENT USE COUNT                    * P4434000
*                                                                     * P4435000
*********************************************************************** P4436000
         SPACE 1                                                     R4 P4437000
RDHIT    L     JCT,0(,R1)          AL1(USE COUNT),AL3(JCT BUFFER)    R4 P4438000
         AL    JCT,=X'01000000'    INCREMENT USE COUNTER             R4 P4439000
         ST    JCT,0(,R1)          REPLACE ENTRY IN JCT QUEUE        R4 P4440000
         LR    JCT,R1              HOLD JCT QUEUE ELEMENT ADDRESS    R4 P4441000
         SPACE 1                                                     R4 P4442000
*********************************************************************** P4443000
*                                                                     * P4444000
*        LOCK ELEMENT FOR JCT READ - OR WAIT FOR LOCK                 * P4445000
*                                                                     * P4446000
*********************************************************************** P4447000
         SPACE 1                                                     R4 P4448000
RDLOCK   TM    4(JCT),X'80'        IS ELEMENT LOCKED...              R4 P4449000
         BZ    RDJQE               BRANCH IF NO                      R4 P4450000
        $WAIT  ABIT                WAIT FOR LOCK TO FREE             R4 P4451000
         L     R15,$JCTRDR         RESTORE BASE                      R4 P4452000
         B     RDLOCK              TRY LOCK AGAIN                    R4 P4453000
         SPACE 1                                                     R4 P4454000
*********************************************************************** P4455000
*                                                                     * P4456000
*        SET JCT QUEUE ELEMENT LOCK, GET A BUFFER                     * P4457000
*                                                                     * P4458000
*********************************************************************** P4459000
         SPACE 1                                                     R4 P4460000
         CNOP  0,8                                                   R4 P4461000
RDJQE    OI    4(JCT),X'80'        SET JCT ELEMENT LOCK              R4 P4462000
         ICM   R1,7,1(JCT)         TEST BUFFER ADDRESS               R4 P4463000
         BZ    RDGETB              BR IF NOT IN POOL                R41 P4463200
         TM    PCESAVEA,X'80'      TEST FOR REFRESH=YES             R41 P4463300
         BZ    RDJCTOK             BR IF NOT                        R41 P4463400
         EJECT                                                      R41 P4463500
*********************************************************************** P4463600
*                                                                     * P4463700
*        REFRESH=YES -- RE-READ JCT INTO NEW BUFFER                   * P4463800
*                                                                     * P4463900
*********************************************************************** P4464000
         SPACE 1                                                    R41 P4464100
        $GETBUF WAIT=YES           GET NEW BUFFER                   R41 P4464200
         L     R15,$JCTRDR         RESTORE BASE                     R41 P4464300
         STCM  R1,7,PCEBUFAD+1     BUFFER ADDR TO DA DCT            R41 P4464400
         MVI   PCEDEVTP,PCEDARD    SETUP FOR DA READ                R41 P4464500
         LA    R1,PCEDADCT         ADDRESS DA DCT                   R41 P4464600
        $EXCP  (R1),WAIT=YES       RE-READ LATEST COPY OF JCT       R41 P4464700
         L     R15,$JCTRDR         RESTORE BASE                     R41 P4464800
         NI    4(JCT),X'7F'        RELEASE JCT ELEMENT LOCK         R41 P4464900
         MVC   0(8,R1),0(JCT)      COPY JCT Q ELEMENT               R41 P4465000
         MVI   0(R1),1             SHOW 1 USER                      R41 P4465100
         LR    JCT,R1              USE COPY OF Q ELEMENT            R41 P4465200
         TM    BUFECBCC-BUFDSECT(R1),X'7F'  TEST I/O COMPLETION     R41 P4465300
         BM    RDBADX              BR IF I/O ERROR                  R41 P4465400
         B     RDJCTOK             ELSE GO REFRESH JCT BUFFER       R41 P4465500
         SPACE 2                                                    R41 P4465600
RDGETB  $GETBUF WAIT=YES           GET BUFFER FOR JCT               R41 P4465700
         L     R15,$JCTRDR         RESTORE BASE                      R4 P4466000
         SPACE 1                                                    R41 P4467000
*********************************************************************** P4468000
*                                                                     * P4469000
*        JCT NOT IN POOL -- READ IT IN FROM SPOOL                     * P4470000
*                                                                     * P4471000
*********************************************************************** P4472000
         SPACE 1                                                     R4 P4473000
         STCM  R1,7,1(JCT)         BUFFER ADDRESS TO JCT ELEMENT     R4 P4474000
         STCM  R1,7,PCEBUFAD+1     BUFFER ADDRESS TO DA DCT          R4 P4475000
         MVI   PCEDEVTP,PCEDARD    SET DA DCT TO READ                R4 P4476000
         LA    R1,PCEDADCT         ADDRESS DA DCT                    R4 P4477000
        $EXCP  (R1),WAIT=YES       READ JCT INTO BUFFER              R4 P4478000
         L     R15,$JCTRDR         RESTORE BASE                      R4 P4479000
         BM    RDBADX              BR IF I/O ERROR                   R4 P4480000
         EJECT                                                      R41 P4481000
*********************************************************************** P4482000
*                                                                     * P4483000
*        VALIDITY CHECK - JCT MUST CONTAIN JQE OFFSET                 * P4484000
*                                                                     * P4485000
*********************************************************************** P4486000
         SPACE 1                                                     R4 P4487000
RDJCTOK  SLR   R0,R0               CLEAR REGISTER                    R4 P4488000
         ICM   R0,7,5(JCT)         ADDRESS JQE                       R4 P4489000
         SL    R0,$JOBQPTR         CONVERT TO JQE OFFSET             R4 P4490000
         SPACE 1                                                     R4 P4491000
         USING JCTDSECT,R1         PROVIDE JCT ADDRESSABILITY        R4 P4492000
         SPACE 1                                                     R4 P4493000
         CL    R0,JCTJQE           IS JCT VALID...                   R4 P4494000
         BNE   RDBADX              BRANCH IF NO                      R4 P4495000
         SPACE 1                                                    R41 P4495100
         CLR   R1,JCT              REFRESH=YES...                   R41 P4495200
         BNE   RDRESET             BR IF NOT                        R41 P4495300
         LA    R0,JCTSTART         ADDRESS NEW JCT COPY             R41 P4495400
         LH    R1,$BUFSIZE         LENGTH OF JCT                    R41 P4495500
         L     R14,0(JCT)          ADDRESS ORIGINAL                 R41 P4495600
         LA    R14,JCTSTART-JCTDSECT(,R14)  JCT BUFFER              R41 P4495700
         LR    R15,R1              LENGTH OF JCT                    R41 P4495800
         MVCL  R14,R0              REFRESH JCT BUFFER               R41 P4495900
         L     R15,$JCTRDR         RESTORE BASE                     R41 P4496000
         L     JCT,0(,JCT)         GET ADDRESS OF JCT BUFFER        R41 P4496100
         LA    JCT,0(,JCT)         PURIFY                           R41 P4496200
        $FREEBUF PCEBUFAD          FREE THE UNUSED JCT BUFFER       R41 P4496300
         L     R15,$JCTRDR         RESTORE BASE                     R41 P4496400
         B     RDEXIT               AND BR TO EXIT                  R41 P4496500
         SPACE 1                                                     R4 P4496600
         DROP  R1                  KILL JCT ADDRESSABILITY           R4 P4497000
         SPACE 1                                                     R4 P4498000
RDRESET  NI    4(JCT),X'7F'        RELEASE JCT ELEMENT LOCK         R41 P4499000
         LR    JCT,R1              SET JCT BUFFER ADDRESS            R4 P4500000
         SPACE 1                                                     R4 P4501000
RDEXIT   L     LINK,PCESAVEA       RESTORE RETURN ADDRESS            R4 P4502000
         LTR   JCT,JCT             SET CALLER RETURN CODE            R4 P4503000
         BR    LINK                RETURN TO CALLER                  R4 P4504000
         EJECT                                                       R4 P4505000
*********************************************************************** P4506000
*                                                                     * P4507000
*        READ ERROR INDICATED BY ECB COMPLETION CODE                  * P4508000
*                                                                     * P4509000
*********************************************************************** P4510000
         SPACE 1                                                     R4 P4511000
RDBADX   MVC   PCESEEK,PCESAVEA    SAVE RETURN ADDRESS               R4 P4512000
         SPACE 1                                                     R4 P4513000
$#JCTRER $DISTERR                  INDICATE CONTROL BLOCK ERROR      R4 P4514000
         MVC   PCESAVEA,PCESEEK    RESTORE RETURN ADDRESS            R4 P4515000
         L     R15,$JCTRDR         RESTORE BASE                      R4 P4516000
         SLR   R1,R1               CLEAR REGISTER                    R4 P4517000
         IC    R1,0(,JCT)          GET ELEMENT USE COUNT             R4 P4518000
         BCT   R1,RDNFREE          LOWER COUNT AND FREE IF ZERO      R4 P4519000
         XC    0(8,JCT),0(JCT)     CLEAR JCT QUEUE ELEMENT           R4 P4520000
        $FREEBUF PCEBUFAD          FREE HASP BUFFER                  R4 P4521000
         L     R15,$JCTRDR         RESTORE BASE                      R4 P4522000
         B     RDCLR               GO CLEAR JCT POINTER              R4 P4523000
         SPACE 1                                                     R4 P4524000
RDNFREE  STC   R1,0(,JCT)          SAVE RESIDUAL USE COUNT           R4 P4525000
         NI    4(JCT),X'7F'        RESET ELEMENT BUSY FLAG           R4 P4526000
         SPACE 1                                                     R4 P4527000
RDCLR    SLR   JCT,JCT             SET NO JCT INDICATION             R4 P4528000
         B     RDEXIT              TAKE EXIT TO CALLER               R4 P4529000
         SPACE 1                                                     R4 P4530000
         DROP  R15                 KILL LOCAL ADDRESSABILITY         R4 P4531000
         TITLE 'HASP JOB OUTPUT TABLE SERVICES -- JCT WRITE ROUTINE' R4 P4532000
*********************************************************************** P4533000
*                                                                     * P4534000
*        $#JCTWTR -- COPY RESIDENT JCT TO ITS PLACE ON SPOOL VOLUME   * P4535000
*                                                                     * P4536000
* INPUT  R0    - WORK, UNPREDICTABLE ON EXIT                          * P4537000
*        R1    - WORK, UNPREDICTABLE ON EXIT                          * P4538000
*        R10   - JCT ADDRESS                                          * P4539000
*        R14   - RETURN ADDRESS                                       * P4540000
*        R15   - ENTRY POINT ADDRESS                                  * P4541000
*                                                                     * P4542000
* NOTE   -     BECAUSE OF $WAITS IN THIS ROUTINE, THE PCE AND FIXED   * P4543000
*              SAVE AREAS ARE INELLIGIBLE FOR USE.  THEREFORE, R15    * P4544000
*              MUST BE USED AS A BASE REGISTER, BEING RESTORED AFTER  * P4545000
*              EACH USE BY ANOTHER SERVICE ROUTINE.                   * P4546000
*                                                                     * P4547000
*********************************************************************** P4548000
         SPACE 1                                                     R4 P4549000
         ENTRY $#JCTWTR            PROVIDE ENTRY FOR $#JCTWTR RTN    R4 P4550000
         USING JCTDSECT,JCT        PROVIDE JCT ADDRESSABILITY        R4 P4551000
         USING $#JCTWTR,R15        PROVIDE LOCAL ADDRESSABILITY      R4 P4552000
         SPACE 1                                                     R4 P4553000
         CNOP  0,8                                                   R4 P4554000
$#JCTWTR ST    LINK,PCESAVEA       SAVE RETURN ADDRESS               R4 P4555000
         ST    JCT,PCEBUFAD        JCT BUFFER ADDRESS TO DA DCT      R4 P4556000
         LH    R0,$#JCTQCT         ENTRIES IN RESIDENT JCT QUEUE     R4 P4557000
         L     R1,$#JCTQ           POINT TO 1ST QUEUE ENTRY          R4 P4558000
         EJECT                                                       R4 P4559000
*********************************************************************** P4560000
*                                                                     * P4561000
*        SEARCH RESIDENT JCT QUEUE FOR THE JCT BEING WRITTEN          * P4562000
*                                                                     * P4563000
*********************************************************************** P4564000
         SPACE 1                                                     R4 P4565000
WRSRCH   CLM   JCT,7,1(R1)         IS THIS ENTRY FOR THE JCT...      R4 P4566000
         BE    WRLOCK              BRANCH IF YES                     R4 P4567000
         LA    R1,8(,R1)           STEP TO NEXT ENTRY                R4 P4568000
         BCT   R0,WRSRCH           BRANCH IF NOT AT END OF QUEUE     R4 P4569000
         MVC   PCESEEK,PCESAVEA    SAVE RETURN ADDRESS               R4 P4570000
         B     $#JCTWER            JCT NOT FOUND - ERROR             R4 P4571000
         SPACE 1                                                     R4 P4572000
*********************************************************************** P4573000
*                                                                     * P4574000
*        QUEUE ENTRY FOR THIS JCT FOUND - WAIT IF LOCKED              * P4575000
*                                                                     * P4576000
*********************************************************************** P4577000
         SPACE 1                                                     R4 P4578000
         CNOP  0,8                                                   R4 P4579000
WRLOCK   TM    4(R1),X'80'         IS ELEMENT LOCKED...              R4 P4580000
         BZ    WRJQE               BRANCH IF NO                      R4 P4581000
        $WAIT  ABIT                WAIT FOR ELEMENT LOCK             R4 P4582000
         L     R15,$JCTWTR         RESTORE BASE                      R4 P4583000
         B     WRLOCK              TRY AGAIN                         R4 P4584000
         SPACE 1                                                     R4 P4585000
*********************************************************************** P4586000
*                                                                     * P4587000
*        SET ELEMENT LOCK AND WRITE JCT TO SPOOL                      * P4588000
*                                                                     * P4589000
*********************************************************************** P4590000
         SPACE 1                                                     R4 P4591000
         CNOP  0,8                                                   R4 P4592000
WRJQE    OI    4(R1),X'80'         SET ELEMENT LOCK                  R4 P4593000
         LR    JCT,R1              HOLD JCT QUEUE ELEMENT ADDRESS    R4 P4594000
         L     R1,4(,JCT)          ADDRESS JQE FOR THIS JCT          R4 P4595000
         SPACE 1                                                     R4 P4596000
         USING JQEDSECT,R1         PROVIDE JQE ADDRESSABILITY        R4 P4597000
         SPACE 1                                                     R4 P4598000
         MVC   PCESEEK,JQETRAK     JCT TRACK ADDRESS TO DA DCT       R4 P4599000
         SPACE 1                                                     R4 P4600000
         DROP  R1                  KILL JQE ADDRESSABILITY           R4 P4601000
         SPACE 1                                                     R4 P4602000
         MVI   PCEDEVTP,PCEDAWR    SET DA DCT TO WRITE               R4 P4603000
         LA    R1,PCEDADCT         ADDRESS DA DCT                    R4 P4604000
        $EXCP  (R1),WAIT=YES       WRITE JCT TO SPOOL                R4 P4605000
         L     R15,$JCTWTR         RESTORE BASE                      R4 P4606000
         EJECT                                                       R4 P4607000
*********************************************************************** P4608000
*                                                                     * P4609000
*        CHECK STATUS OF JCT WRITE                                    * P4610000
*                                                                     * P4611000
*********************************************************************** P4612000
         SPACE 1                                                     R4 P4613000
         BO    WRJCTOK             BRANCH IF COMPLETE AND GOOD       R4 P4614000
         SPACE 1                                                     R4 P4615000
*********************************************************************** P4616000
*                                                                     * P4617000
*        WRITE ERROR INDICATED BY ECB COMPLETION CODE                 * P4618000
*                                                                     * P4619000
*********************************************************************** P4620000
         SPACE 1                                                     R4 P4621000
         MVC   PCESEEK,PCESAVEA    SAVE RETURN ADDRESS               R4 P4622000
         SPACE 1                                                     R4 P4623000
$#JCTWER $DISTERR                  INDICATE CONTROL BLOCK ERROR      R4 P4624000
         MVC   PCESAVEA,PCESEEK    RESTORE RETURN ADDRESS            R4 P4625000
         L     R15,$JCTWTR         RESTORE BASE                      R4 P4626000
         SPACE 1                                                     R4 P4627000
WRJCTOK  NI    4(JCT),X'7F'        RESET ELEMENT LOCK FLAG           R4 P4628000
         L     JCT,PCEBUFAD        ADDRESS JCT BUFFER                R4 P4629000
         L     LINK,PCESAVEA       RESTORE RETURN ADDRESS            R4 P4630000
         BR    LINK                RETURN TO CALLER                  R4 P4631000
         SPACE 1                                                     R4 P4632000
         DROP  JCT,R15             KILL JCT, LOCAL ADDRESSABILITY    R4 P4633000
         TITLE 'HASP JOB OUTPUT TABLE SERVICES -- JCT FREE ROUTINE'  R4 P4634000
*********************************************************************** P4635000
*                                                                     * P4636000
*        $#JCTFRE -- RELEASE OWNERSHIP OF RESIDENT JCT                * P4637000
*                                                                     * P4638000
* INPUT  R0    - WORK, UNPREDICTABLE ON EXIT                          * P4639000
*        R1    - WORK, UNPREDICTABLE ON EXIT                          * P4640000
*        R10   - JCT ADDRESS                                          * P4641000
*        R14   - RETURN ADDRESS                                       * P4642000
*        R15   - ENTRY POINT ADDRESS                                  * P4643000
*                                                                     * P4644000
* NOTE   -     BECAUSE OF $WAITS IN THIS ROUTINE, THE PCE AND FIXED   * P4645000
*              SAVE AREAS ARE INELLIGIBLE FOR USE.  THEREFORE, R15    * P4646000
*              MUST BE USED AS A BASE REGISTER, BEING RESTORED AFTER  * P4647000
*              EACH USE BY ANOTHER SERVICE ROUTINE.                   * P4648000
*                                                                     * P4649000
*********************************************************************** P4650000
         SPACE 1                                                     R4 P4651000
         ENTRY $#JCTFRE            PROVIDE ENTRY FOR $#JCTFRE RTN    R4 P4652000
         USING JCTDSECT,JCT        PROVIDE JCT ADDRESSABILITY        R4 P4653000
         USING $#JCTFRE,R15        PROVIDE LOCAL ADDRESSABILITY      R4 P4654000
         SPACE 1                                                     R4 P4655000
         CNOP  0,8                                                   R4 P4656000
$#JCTFRE LTR   JCT,JCT             IS BUFFER BASE ZERO...            R4 P4657000
         BZR   LINK                RETURN TO CALLER IF YES           R4 P4658000
         ST    LINK,PCESAVEA       SAVE RETURN ADDRESS               R4 P4659000
         LH    R0,$#JCTQCT         ENTRIES IN RESIDENT JCT QUEUE     R4 P4660000
         L     R1,$#JCTQ           POINT TO 1ST QUEUE ENTRY          R4 P4661000
         SPACE 1                                                     R4 P4662000
*********************************************************************** P4663000
*                                                                     * P4664000
*        SEARCH RESIDENT JCT QUEUE FOR THE JCT BEING FREED            * P4665000
*                                                                     * P4666000
*********************************************************************** P4667000
         SPACE 1                                                     R4 P4668000
FRSRCH   CLM   JCT,7,1(R1)         IS THIS ENTRY FOR THE JCT...      R4 P4669000
         BE    FRFIND              BRANCH IF YES                     R4 P4670000
         LA    R1,8(,R1)           STEP TO NEXT ENTRY                R4 P4671000
         BCT   R0,FRSRCH           BRANCH IF NOT AT END OF QUEUE     R4 P4672000
         L     JCT,PCESAVEA        SAVE RETURN ADDRESS               R4 P4673000
         SPACE 1                                                     R4 P4674000
$#JCTFER $DISTERR                  INDICATE CONTROL BLOCK ERROR      R4 P4675000
         ST    JCT,PCESAVEA        RESTORE RETURN ADDRESS            R4 P4676000
         L     LINK,PCESAVEA       RESTORE RETURN ADDRESS            R4 P4677000
         BR    LINK                RETURN TO CALLER                  R4 P4678000
         EJECT                                                       R4 P4679000
*********************************************************************** P4680000
*                                                                     * P4681000
*        QUEUE ENTRY FOR THIS JCT FOUND - DECREMENT USE COUNT         * P4682000
*                                                                     * P4683000
*********************************************************************** P4684000
         SPACE 1                                                     R4 P4685000
         CNOP  0,8                                                   R4 P4686000
FRFIND   SLR   R0,R0               CLEAR REGISTER                    R4 P4687000
         IC    R0,0(,R1)           GET USE COUNT                     R4 P4688000
         BCT   R0,FRNZ             DECREMENT AND BRANCH IF NOT ZERO  R4 P4689000
         SPACE 1                                                     R4 P4690000
*********************************************************************** P4691000
*                                                                     * P4692000
*        RESULTANT USE COUNT IS ZERO - FREE BUFFER AND QUEUE ENTRY    * P4693000
*                                                                     * P4694000
*********************************************************************** P4695000
         SPACE 1                                                     R4 P4696000
         XC    0(8,R1),0(R1)       FREE QUEUE ENTRY                  R4 P4697000
        $FREEBUF (JCT)             FREE BUFFER CONTAINING JCT        R4 P4698000
         L     LINK,PCESAVEA       RESTORE RETURN ADDRESS            R4 P4699000
         BR    LINK                RETURN TO CALLER                  R4 P4700000
         SPACE 1                                                     R4 P4701000
*********************************************************************** P4702000
*                                                                     * P4703000
*        RESULTANT USE COUNT IS NOT ZERO - STORE NEW VALUE            * P4704000
*                                                                     * P4705000
*********************************************************************** P4706000
         SPACE 1                                                     R4 P4707000
         CNOP  0,8                                                   R4 P4708000
FRNZ     STC   R0,0(,R1)           STORE UPDATED USE COUNT           R4 P4709000
         L     LINK,PCESAVEA       RESTORE RETURN ADDRESS            R4 P4710000
         BR    LINK                RETURN TO CALLER                  R4 P4711000
         SPACE 1                                                     R4 P4712000
         DROP  JCT,R15             KILL JCT, LOCAL ADDRESSABILITY    R4 P4713000
         TITLE 'HASP $$WTO/$$WTOR PROCESSING ROUTINE'                R4 P4714000
*********************************************************************** P4715000
*                                                                     * P4716000
*        $$WTO - ISSUE DIRECT WTO/WTOR TO OPERATOR                    * P4717000
*                                                                     * P4718000
*        R1    - ADDRESS OF WTO/WTOR MESSAGE                          * P4719000
*        R13   - SAVE AREA ADDRESS                                    * P4720000
*        R14   - RETURN ADDRESS                                       * P4721000
*        R15   - ENTRY POINT ADDRESS                                  * P4722000
*                                                                     * P4723000
* NOTES                                                               * P4724000
*                                                                     * P4725000
*        THE MESSAGE TEXT MAY BE ALTERED BY THIS ROUTINE              * P4726000
*                                                                     * P4727000
*********************************************************************** P4728000
         SPACE 1                                                     R4 P4729000
         USING $$WTOR,R15          PROVIDE LOCAL ADDRESSABILITY      R4 P4730000
         ENTRY $$WTOR              ENTRY TO $$WTO/$$WTOR ROUTINE     R4 P4731000
         SPACE 1                                                     R4 P4732000
$$WTOR   STM   R14,R2,12(R13)      SAVE WORK REGISTERS               R4 P4733000
         SPACE 1                                                     R4 P4734000
         DROP  R15                 RE-ESTABLISH                      R4 P4735000
         BALR  R2,0                 LOCAL                            R4 P4736000
         USING *,R2                  ADDRESSABILITY                  R4 P4737000
         SPACE 1                                                     R4 P4738000
         LR    R14,R1              SAVE MESSAGE ADDRESS              R4 P4739000
         CLI   0(R1),0             TEST FOR WTO                      R4 P4740000
         BE    SKIP190             BR IF YES                         R4 P4741000
         LA    R1,8(,R1)            ELSE STEP OVER WTOR INFO         R4 P4742000
SKIP190  MVC   4(1,R1),$CCOMCHR    SET MESSAGE ID CHARACTER          R4 P4743000
         TM    $RUNOPTS,$MSGID     TEST MESSAGE ID OPTION            R4 P4744000
         BO    WTOWTO              BR IF CURRENTLY SELECTED          R4 P4745000
         LA    R0,13               ASSUME MLWTO OR NO FLAGS    @OZ30033 P4745200
         TM    3(R1),X'40'         TEST FOR MLWTO              @OZ30033 P4745400
         BO    *+16                BR IF YES                   @OZ30033 P4745600
         TM    2(R1),X'80'         TEST FOR ROUTCDE/DESC FLAGS @OZ30033 P4745800
         BZ    *+8                 BR IF NO                    @OZ30033 P4746000
         LA    R0,9                OVERLAY                     @OZ30033 P4746200
         LH    R15,0(,R1)            HASPNNN                         R4 P4747000
         SLR   R15,R0                 MESSAGE                        R4 P4748000
         EX    R15,WTOOLAY             ID                            R4 P4749000
         TM    3(R1),X'40'         TEST FOR MLWTO                    R4 P4750000
         BO    WTOMLWTO            BR IF YES                         R4 P4751000
         LH    R15,0(,R1)           ELSE                       @OZ30033 P4752000
         SH    R15,=H'7'             UPDATE                    @OZ30033 P4752500
         STH   R15,0(,R1)             MSG LENGTH               @OZ30033 P4753000
         B     WTOWTO              BR TO ISSUE MESSAGE               R4 P4754000
         SPACE 1                                                     R4 P4755000
WTOOLAY  MVC   5(*-*,R1),12(R1)    *** EXECUTE ONLY ***              R4 P4756000
         EJECT                                                       R4 P4757000
WTOMLWTO ALR   R15,R1              PAD END OF 1ST LINE OF MLWTO      R4 P4758000
         MVC   6(7,R15),=CL7' '     WITH BLANKS                      R4 P4759000
         SPACE 1                                                     R4 P4760000
WTOWTO   SLR   R0,R0               GET                               R4 P4761000
         L     R15,CVTPTR           UCM                              R4 P4762000
         L     R15,CVTCUCB-CVT(,R15) ID                              R4 P4763000
         SL    R15,=F'4'              OF                             R4 P4764000
         L     R15,0(,R15)             CURRENT                       R4 P4765000
         L     R15,0(,R15)              MASTER                       R4 P4766000
         IC    R0,UCMID-UCMLIST(,R15)    CONSOLE                     R4 P4767000
         LR    R1,R14              RELOAD MESSAGE ADDRESS            R4 P4768000
         WTO   MF=(E,(1))          ISSUE WTO/WTOR                    R4 P4769000
         LM    R14,R2,12(R13)      RESTORE WORK REGISTERS            R4 P4770000
         BR    R14                  AND RETURN                       R4 P4771000
         SPACE 1                                                     R4 P4772000
         DROP  R2                  KILL LOCAL ADDRESSABILITY         R4 P4773000
         SPACE 1                                                     R4 P4774000
         LTORG                                                       R4 P4775000
         TITLE 'HASP ALLOCATE/UNALLOCATE UNIT ROUTINE'               R4 P4776000
*********************************************************************** P4777000
*                                                                     * P4778000
*        $DYN  - DYNAMICALLY ALLOCATE OR UNALLOCATE DEVICES           * P4779000
*                                                                     * P4780000
*                                                                     * P4781000
* FUNCTION/OPERATION-                                                 * P4782000
*                                                                     * P4783000
*        $DYN DYNAMICALLY ALLOCATES OR UNALLOCATES A UCB TO HASP      * P4784000
*        BASED UPON THE SETTING OF THE DCTUNAL BIT OF DCTSTAT.        * P4785000
*        $DYN ALSO SETS OR RESETS THE ATTENTION INDEX IN THE UCB      * P4786000
*        IF THE DCTATTN BIT IS ON IN DCTSTAT. IF THE DEVICE IS        * P4787000
*        A 3211 PRINTER, $DYN GETS/FREES AN ERROR LOG AREA            * P4788000
*                                                                     * P4789000
* INPUT - ADDRESS OF DCT IN R1                                        * P4790000
*                                                                     * P4791000
* OUTPUT - CC=1 IF $DYN WAS SUCCESSFUL AND ALTERED DCTUNAL BIT IN     * P4792000
*               DCTSTAT                                               * P4793000
*          CC=0 IF AN ERROR WAS DETECTED IN DCT BIT SETTINGS          * P4794000
*               OR BY SVC 99                                          * P4795000
*                                                                     * P4796000
* REGISTERS -                                                         * P4797000
*                                                                     * P4798000
*        R1    = ADDRESS OF DCT                                       * P4799000
*        WA    = UCB ADDRESS                                          * P4800000
*        WB    = ALLOCATE PARAMETER ADDRESS                           * P4801000
*        WC    = BASE ADDRESS                                         * P4802000
*        WD    = DCT ADDRESS                                          * P4803000
*        R14   = RETURN                                               * P4804000
*                                                                     * P4805000
*********************************************************************** P4806000
         SPACE 1                                                     R4 P4807000
         USING DCTDSECT,WD         PROVIDE DCT ADDRESSABILITY        R4 P4808000
         USING $DYN,WC             PROVIDE $DYN ADDRESSABILITY       R4 P4809000
         SPACE 1                                                     R4 P4810000
         CNOP  0,8                                                   R4 P4811000
$DYN     STM   LINK,WE,$CSAVREG    SAVE WORK REGISTERS         @OZ20685 P4812000
         LR    WC,R15              $DYN BASE                         R4 P4813000
         LR    WD,R1               DCT ADDRESSABILITY                R4 P4814000
         TM    DCTSTAT,DCTUNAL+DCTDRAIN  TEST DCT STATUS             R4 P4815000
         BNM   DYNRTN              BR IF SHOULD TAKE NO ACTION       R4 P4816000
         CLI   DCTDEVTP,DCTLNE     IS DEVICE A LINE...               R4 P4817000
         BE    DYNGTUCB            BR IF YES                         R4 P4818000
         TM    DCTDEVTP,DCTRJE+DCTINT  TEST DEVICE TYPE              R4 P4820000
         BNZ   DYNRTN              BRANCH IF REMOTE OR INTERNAL      R4 P4824000
         SPACE 1                                                     R4 P4825000
DYNGTUCB L     WA,DCTDCB           GET DCB ADDRESS                   R4 P4826000
         L     WA,DCBDEBAD-DCBDSECT(,WA) GET DEB ADDRESS FROM DCB    R4 P4827000
         ICM   WA,7,DEBSUCBB-DEBDSECT(WA)  GET UCB ADDR FROM DEB     R4 P4828000
         BNZ   DYNGTWRK            BR IF VALID UCB ADDRESS     @OZ20685 P4829000
         SR    WE,WE               CLEAR REGISTER FOR RETURN   @OZ20685 P4829100
         TM    DCTSTAT,DCTUNAL     ALLOCATE OR UNALLOCATE...         R4 P4830000
         BO    DYNUNORM            ALLOCATE IS ABNORMAL RETURN       R4 P4831000
         B     DYNSTRTN            BR TO UNALLOCATE AND RETURN       R4 P4832000
         SPACE 2                                               @OZ20685 P4832100
*        GET A BUFFER FOR DYNAMIC ALLOCATION WORK AREA         @OZ20685 P4832200
         SPACE 1                                               @OZ20685 P4832300
DYNGTWRK DS    0H                                              @OZ20685 P4832400
         GETMAIN R,LV=DYNLEN       GET AN ALLOCATION WORK AREA @OZ20685 P4832500
         LR    WE,R1               SET REGISTER FOR WORK AREA  @OZ20685 P4832700
         SPACE 1                                               @OZ20685 P4832710
         USING DYNDSECT,WE         SET WORK AREA ADDRESSABILITY@OZ20685 P4832800
         MVC   DYNRSAV,$CSAVREG    SAVE REGS 14-6              @OZ20685 P4832850
         SPACE 1                                               @OZ20685 P4832900
*        INITIALIZE DYNAMIC ALLOCATION REQUEST BLOCK POINTER   @OZ20685 P4833000
         SPACE 1                                               @OZ20685 P4833100
         LA    R1,4(,WE)           POINT TO SVC99 REQUEST BLK  @OZ20685 P4833300
         ST    R1,DYN99PTR         SAVE REQUEST BLOCK ADDRESS  @OZ20685 P4833310
         OI    DYN99PTR,X'80'      SET HIGH ORDER BIT ON       @OZ20685 P4833400
         SPACE 2                                               @OZ20685 P4833410
*        INITIALIZE TEXT UNIT POINTERS                         @OZ20685 P4833420
         SPACE 1                                               @OZ20685 P4833430
         LA    R1,DYNUCBTX         GET UCB TEXT ADDRESS        @OZ20685 P4833500
         ST    R1,DYNUCBTP          AND SAVE IN TEXT POINTER   @OZ20685 P4833600
         LA    R1,DYNDDNTX         GET DDNAME TEXT ADDRESS     @OZ20685 P4833700
         ST    R1,DYNDDNTP          AND SAVE IN TEXT POINTER   @OZ20685 P4833800
         OI    DYNLASTP,X'80'      SET ON HIGH ORDER BIT IN    @OZ20685XP4833810
                                    LAST TEXT UNIT             @OZ20685 P4833820
         SPACE 2                                               @OZ20685 P4833830
&IECIHDR SETB  1                   TURN OFF IOSGEN DOC.        @OZ20685 P4833840
&IECITP  SETB  1                   TURN OFF IOSGEN DOC.        @OZ20685 P4833850
         USING UCBDSECT,WA         PICK UP UCB ADDRESSABILIY   @OZ20685 P4833860
         SPACE 1                                               @OZ20685 P4833870
*        INITIALIZE TEXT UNITS                                 @OZ20685 P4833880
         SPACE 1                                               @OZ20685 P4833890
         MVC   DYNTXT,DYNTEXT      MOVE IN TEXT UNIT TEMPLATE  @OZ20685 P4833900
         MVC   DYNDDNNM,DCTDEVN    STORE DDNAME IN TEXT UNIT   @OZ20685 P4833910
         TM    DCTSTAT,DCTUNAL     ALLOCATE OR UNALLOCATE...   @OZ20685 P4833920
         BNO   DYN99RB             BR IF UNALLOCATE            @OZ20685 P4834000
         MVC   DYNUCBNM,UCBNAME    SAVE UCB UNIT NAME          @OZ20685 P4834100
         SPACE 1                                               @OZ20685 P4834200
*        INITIALIZE SVC 99 REQUEST BLOCK                       @OZ20685 P4834300
         SPACE 1                                               @OZ20685 P4834400
         USING S99RB,WB            PICK UP SVC99 ADDRESSABILITY@OZ20685 P4834500
         SPACE 1                                               @OZ20685 P4834510
DYN99RB  LA    WB,DYNRB            GET REQUEST BLOCK ADRESS    @OZ20685 P4834600
         MVI   S99RB,20            SET SIZE OF REQUEST BLOCK   @OZ20685 P4834700
         XC    S99VERB(S99RBEND-S99VERB),S99VERB CLEAR AREA    @OZ20685 P4834800
         TM    DCTSTAT,DCTUNAL     ALLOCATE OR UNALLOCATE...   @OZ20685 P4834900
         BO    DYNAL               BR IF ALLOCATE              @OZ20685 P4835000
         LA    R1,DYNDDNTP         GET DDNAME TEXT POINTER     @OZ20685 P4835100
         ST    R1,S99TXTPP         STORE TEXT POINTER IN RB    @OZ20685 P4835200
         OI    S99VERB,S99VRBUN    SET UNALLOC VERB ON IN RB   @OZ20685 P4835300
         B     DYNSET              GO CHECK FOR INITIALIZATION @OZ20685 P4835400
DYNAL    TM    UCBSTAT,UCBALOC     DEVICE ALREADY ALLOCATED... @OZ20685 P4835500
         BO    DYNUNORM            BR TO ERROR RETURN IF YES   @OZ20685 P4835600
         TM    UCBSTAT,UCBONLI+UCBCHGS DEVICE ONLINE...        @OZ20685 P4835700
         BNM   DYNUNORM            BR TO ERROR RETURN IF YES   @OZ20685 P4835800
         LA    R1,DYNUCBTP         GET UCB TEXT POINTER        @OZ20685 P4835900
         ST    R1,S99TXTPP         STORE TEXT POINTER IN RB    @OZ20685 P4835910
         OI    S99VERB,S99VRBAL    SET ALLOCATE VERB IN RB     @OZ20685 P4836000
         SPACE 1                                               @OZ20685 P4837000
DYNSET   CLC   $DYNTCBA,=F'0'      IS THIS INITIALIZATION...   @OZ20685 P4838000
         BE    DYNDYN              BR IF YES, NO SUBTASK       @OZ20685 P4839000
         OI    S99FLAG1,S99NOMNT   DONT WAIT IF DEVICE OFFLINE @OZ50121 P4839100
         SPACE 1                                               @OZ20685 P4840000
DYNWAITA TM    $DYNECB,X'40'       IS ALLOC TASK BUSY...       @OZ20685 P4841000
         BNO   DYNDYNA             BR IF NO                    @OZ20685 P4842000
         $WAIT ALOC                WAIT FOR ALLOC TASK $$POST  @OZ20685 P4843000
         B     DYNWAITA            TRY AGAIN                   @OZ20685 P4844000
         SPACE 1                                               @OZ20685 P4845000
         SPACE 1                                               @OZ20685 P4846000
DYNDYNA  LR    R1,WE               GET RB ADDRESS              @OZ20685 P4847000
         POST  $DYNECB,(R1)        POST WITH DCT ADDRESS       @OZ20685 P4848000
DYNWAITB $WAIT ALOC                WAIT FOR ALLOC TASK $$POST  @OZ20685 P4849000
         MVC   $CSAVREG(L'DYNRSAV),DYNRSAV RESTORE REGS 14-6   @OZ20685 P4849500
         TM    DYN99PTR,X'7F'      CHECK FOR GOOD RETURN       @OZ20685 P4850000
         BZ    DYNWAITB            BR IF NOT COMPLETE          @OZ20685 P4850500
         BO    DYNCKATN            BR IF OK                    @OZ20685 P4851000
         B     DYNUNORM            RETURN IF NOT               @OZ20685 P4852000
*        THIS LINE DELETED BY APAR NUMBER                      @OZ20685 P4853000
*        THIS LINE DELETED BY APAR NUMBER                      @OZ20685 P4854000
*        THIS LINE DELETED BY APAR NUMBER                      @OZ20685 P4855000
*        THIS LINE DELETED BY APAR NUMBER                      @OZ20685 P4856000
         SPACE 1                                                     R4 P4857000
DYNDYN   DS    0H                                              @OZ20685 P4858000
         LA    R1,DYN99PTR         GET REQUEST BLOCK POINTER   @OZ20685 P4859000
         DYNALLOC                  CALL DYNAMIC ALLOCATE/UNALOCATE   R4 P4860000
         LTR   R15,R15             NORMAL RETURN...                  R4 P4861000
         BZ    DYNCKATN            BR IF YES                         R4 P4862000
         SPACE 1                                                     R4 P4863000
DYNUNORM LTR   WE,WE               DOES A WORK AREA EXIST...   @OZ20685 P4864000
         BZ    DYNUNRET            BR IF NO                    @OZ20685 P4864100
         FREEMAIN R,LV=DYNLEN,A=(WE) FREE WORK AREA            @OZ20685 P4864300
DYNUNRET LM    LINK,WE,$CSAVREG    RESTORE REGISTERS           @OZ20685 P4864400
         SR    R15,R15             CC=0 FOR ERROR RETURN             R4 P4865000
         BR    LINK                RETURN                            R4 P4866000
         SPACE 1                                                     R4 P4867000
DYNCKATN DS    0H                  GOOD ALLOCATION RESUMES     @OZ20685 P4868000
         FREEMAIN R,LV=DYNLEN,A=(WE) FREE WORK AREA            @OZ20685 P4868100
         TM    DCTSTAT,DCTATTN     SHOULD ATTN INDEX BE SET..  @OZ20685 P4868200
         BZ    DYNCKPRT            BR IF NO TO CONTINUE              R4 P4869000
         SLR   WB,WB               CLEAR WB                          R4 P4870000
         TM    DCTSTAT,DCTUNAL     WAS REQUEST ALLOCATE...           R4 P4871000
         BZ    DYNATTN             BR IF NO TO REMOVE ATT'N INDEX    R4 P4872000
         LA    WB,IECITMOD         SET ATTENTION INDEX TO HASP       R4 P4873000
         EJECT                                                       R4 P4874000
DYNATTN  LR    LINK,WA             UCB ADDRESS                       R4 P4875000
         MODESET EXTKEY=ZERO       SET ZERO PROTECT KEY              R4 P4876000
         IOSGEN TP,UCB=(LINK),VAR=ATNMOD,TABLE=(WB) SET ATTN INDEX   R4 P4877000
         MODESET EXTKEY=HASP       RESET HASP PROTECT KEY            R4 P4878000
         SPACE 1                                                     R4 P4879000
DYNCKPRT CLI   DCTDEVTP,DCTPRT     IS DEVICE A LOCAL PRINTER...      R4 P4880000
         BNE   DYNSTRTN            BR IF NO                          R4 P4881000
         TM    DCTSTAT,DCTUNAL     ALLOCATE OR UNALLOCATE...   @OZ37666 P4881050
         BO    *+8                 BR IF ALLOCATE              @OZ37666 P4881100
         OI    DCTPPSW2,DCTNINIT   SHOW NEED TO INITIALIZE     @OZ37666 P4881150
         CLI   UCBTBYT4,UCB3211    IS DEVICE A 3211...               R4 P4882000
         BE    DYNPRNTR            BR IF YES                         R4 P4883000
         CLI   UCBTBYT4,UCB3203    IS DEVICE A 3203            @OZ40627 P4883100
         BE    DYNPRNTR            BR IF IT IS A 3203          @OZ40627 P4883200
         CLI   UCBTBYT4,UCB3800    TEST FOR 3800 PRINTER             R4 P4884000
         BE    DYNNIPRT            BRANCH IF YES                     R4 P4885000
         SPACE 1                                                     R4 P4886000
DYNSTRTN XI    DCTSTAT,DCTUNAL     ALLOCATE OR UNALLOCATE DCT        R4 P4887000
         CLI   DCTDEVTP,DCTPRT     IS THIS A LOCAL PRINTER...  @OZ46924 P4887100
         BE    DYNEJECT            YES, O/K TO RESET           @OZ46924 P4887200
         B     DYNRTN              NO, BYPASS RESET            @OZ46924 P4887300
DYNEJECT NI    DCTPPFL,255-DCTEJECT  RESET EJECT               @OZ46924 P4887500
         SPACE 1                                                     R4 P4888000
DYNRTN   LM    LINK,WE,$CSAVREG    RESTORE REGISTERS           @OZ20685 P4889000
         OI    $CSAVREG,1          CC=1 FOR NORMAL RETURN            R4 P4890000
         BR    LINK                RETURN                            R4 P4891000
         SPACE 1                                                     R4 P4892000
DYNPRNTR MVC   PRTFLAG(1),UCBTBYT4 SET SWITCH FOR 3203/3211    @OZ40627 P4893000
         L     WA,UCBXTADR         ADDRESS UCB EXTENSION       @OZ40627 P4893100
         SPACE 1                                                     R4 P4894000
         USING UCBUCS,WA           UCB EXTENSION ADDRESSABILITY      R4 P4895000
         SPACE 1                                                     R4 P4896000
         MVC   $CSAVREG+36(4),UCBERADR  SAVE UCBERADR                R4 P4897000
         LA    WA,UCBERADR         SET ERR LOG ADDR (3211)           R4 P4898000
         B     DYNCOM              BRANCH TO COMMON                  R4 P4899000
         SPACE 1                                                     R4 P4900000
         USING UCBDSECT,WA         RESTORE UCB ADDRESSABILITY        R4 P4901000
         SPACE 1                                                     R4 P4902000
DYNNIPRT L     WA,UCBXTADR         GET UCB EXT ADDRESS               R4 P4903000
         SPACE 1                                                     R4 P4904000
         USING UCB3800X,WA         SET UCB EXT ADDRESSABILITY        R4 P4905000
         SPACE 1                                                     R4 P4906000
         MVC   $CSAVREG+36(4),UCBMDRBF  SAVE UCBMDRBF                R4 P4907000
         LA    WA,UCBMDRBF         SET ADDR FOR 3800 PROCESSING      R4 P4908000
         ICM   WA,8,=X'FF'         SET SWITCH FOR 3800               R4 P4909000
*              THIS LINE DELETED BY APAR NUMBER                @OZ37666 P4910000
         SPACE 1                                                     R4 P4911000
         DROP  WA                  KILL ADDRESSABILITY               R4 P4912000
         EJECT                                                       R4 P4913000
DYNCOM   TM    DCTSTAT,DCTUNAL     ALLOCATE OR UNALLOCATE...         R4 P4914000
         BO    DYNPRTAL            BR IF ALLOCATE                    R4 P4915000
*              THIS LINE DELETED BY APAR NUMBER                @OZ37666 P4915500
         CLI   $CSAVREG+36,X'00'   IS OPEN DCB COUNT ZERO...         R4 P4916000
         BZ    DYNSTRTN            BRANCH IF ZERO                    R4 P4917000
         MVI   $CSAVREG+36,0       CLEAR OPEN DCB COUNT              R4 P4918000
         ICM   LINK,15,$CSAVREG+36 GET LOG AREA ADDRESS              R4 P4919000
         BZ    DYNSTERA            BRANCH IF NO LOG AREA ADDR.       R4 P4920000
         LTR   WA,WA               FREEMAIN FOR 3800...              R4 P4921000
         BM    DYNF3800            BR IF YES                         R4 P4922000
         CLI   PRTFLAG,UCB3211     FREEMAIN FOR 3211           @OZ40627 P4922100
         BE    DYNF3211            BR IF 3211                  @OZ40627 P4922200
         SPACE 1                                               @OZ40627 P4922300
DYNF3203 FREEMAIN R,LV=DYNL3203,A=(LINK),SP=255 FREE LOG AREA  @OZ40627 P4922400
         B     DYNFCOM             BRANCH TO COMMON            @OZ40627 P4922500
         SPACE 1                                                     R4 P4923000
DYNF3211 FREEMAIN R,LV=DYNL3211,A=(LINK),SP=255 FREE LOG AREA       R41 P4924000
         B     DYNFCOM             BRANCH TO COMMON                  R4 P4925000
         SPACE 1                                                     R4 P4926000
DYNF3800 FREEMAIN R,LV=DYNL3800,A=(LINK),SP=245 FREE MDR AREA       R41 P4927000
         SPACE 1                                                     R4 P4928000
DYNFCOM  SLR   LINK,LINK           ZERO LINK                         R4 P4929000
         ST    LINK,$CSAVREG+36    CLEAR UCB LOG AREA ADDRESS        R4 P4930000
         B     DYNSTERA            GO UPDATE UCBERADR                R4 P4931000
         SPACE 1                                                     R4 P4932000
DYNPRTAL MVI   $CSAVREG+36,1       SET OPEN DCB COUNT                R4 P4933000
         LA    LINK,DYNGETMN       GETMAIN RETURN ADDRESS            R4 P4934000
         LTR   WA,WA               GETMAIN FOR 3800...               R4 P4935000
         BM    DYNG3800            BR IF YES                         R4 P4936000
         CLI   PRTFLAG,UCB3211     GETMAIN FOR 3211            @OZ40627 P4936100
         BE    DYNG3211            THEN GO DO IT               @OZ40627 P4936200
         EJECT                                                       R4 P4937000
DYNG3203 GETMAIN EC,LV=DYNL3203,A=(LINK),SP=255 GET LOG AREA   @OZ40627 P4937100
         B     DYNGCOM             BRANCH TO COMMON            @OZ40627 P4937200
         SPACE 1                                               @OZ40627 P4937300
DYNG3211 GETMAIN EC,LV=DYNL3211,A=(LINK),SP=255 GET LOG AREA        R41 P4938000
         B     DYNGCOM             BRANCH TO COMMON                  R4 P4939000
         SPACE 1                                                     R4 P4940000
DYNG3800 GETMAIN EC,LV=DYNL3800,A=(LINK),SP=245 GET MDR AREA        R41 P4941000
         SPACE 1                                                     R4 P4942000
DYNGCOM  MVC   $CSAVREG+37(3),DYNGETMN+1 SAVE GETMAIN AREA ADDR.     R4 P4943000
         LTR   R15,R15             TEST GETMAIN                      R4 P4944000
         BZ    DYNSTERA            BR IF NORMAL RETURN               R4 P4945000
        $$WTO  DYNGERR             ISSUE OPERATOR MESSAGE      @OZ38608 P4945500
         XC    $CSAVREG+36(4),$CSAVREG+36 PRETEND NO AREA GOTTEN     R4 P4946000
         B     DYNSTERA            BR TO CONTINUE              @OZ38608 P4946100
         SPACE 1                                               @OZ38608 P4946200
         $MID  181                 SET MESSAGE ID              @OZ38608 P4946300
DYNGERR  WTO   '&MID.WARNING - PRINTER LOG OR MDR AREA UNAVAILABLE',   CP4946400
               MF=L                                            @OZ38608 P4946500
         SPACE 1                                                     R4 P4947000
DYNSTERA MODESET EXTKEY=ZERO       SET ZERO PROTECT KEY              R4 P4948000
         MVC   0(4,WA),$CSAVREG+36 SET UCB ERR LOG ADDRESS           R4 P4949000
         MODESET EXTKEY=HASP       RESET HASP PROTECT KEY            R4 P4950000
         B     DYNSTRTN            RETURN                            R4 P4951000
         SPACE 1                                                     R4 P4952000
DYNGETMN EQU   $CSAVREG+60,4       GETMAIN ADDRESS AREA              R4 P4953000
DYNL3203 EQU   592                 SIZE OF 3203 LOG AREA       @OZ40627 P4953010
DYNL3211 EQU   570                 SIZE OF 3211 LOG AREA       @OZ20685 P4953100
DYNL3800 EQU   164                 SIZE OF 3800 MDR AREA       @OZ20685 P4953200
DYNRQST  DS    0F                  DYNAMIC ALLOCATION PARM LIST      R4 P4954000
DYNTEXT  DC    X'001500010003'     UNIT NAME TEXT LIST         @OZ20685 P4955000
         DS    CL3                 SPACE FOR UCB NAME          @OZ20685 P4956000
         DC    X'000100010008'     DDNAME TEXT LIST            @OZ20685 P4957000
PRTFLAG  DC    X'00'               1 BYTE FLAG TO ID PRT       @OZ40627 P4957050
         SPACE 2                                               @OZ20685 P4957100
DYNDSECT DSECT                     ALLOCATION REQUEST BLOCK    @OZ20685 P4957200
         SPACE 2                                               @OZ20685 P4957300
*        SVC 99 REQUEST BLOCK POINTER                          @OZ20685 P4957400
         SPACE 1                                               @OZ20685 P4957500
DYN99PTR DS    F                   ADDRESS OF SVC99 RQST BLOCK @OZ20685 P4957600
         SPACE 2                                               @OZ20685 P4957700
*        SVC 99 REQUEST BLOCK                                  @OZ20685 P4957800
         SPACE 1                                               @OZ20685 P4957900
DYNRB    DS    CL(S99RBEND-S99RB)  ALLOCATION REQUEST BLOCK    @OZ20685 P4958000
*              ALLOCATION TEXT UNIT POINTERS                   @OZ20685 P4958100
DYNTXTP  DS    0CL8                FIRST TEST UNIT POINTER     @OZ20685 P4959000
DYNUCBTP DS    F                   TEXT PTR FOR UCB            @OZ20685 P4959100
DYNDDNTP DS    F                   TEXT PTR FOR DDNAME         @OZ20685 P4959200
DYNLASTP EQU   *-4,4               LAST TEXT UNIT POINTER      @OZ20685 P4959300
*              ALLOCATION TEXT UNIT                            @OZ20685 P4959400
DYNTXT   DS    0CL23               DYNAMIC ALLOCATE TEXT UNITS @OZ20685 P4960000
DYNUCBTX DS    XL6                 UNIT NAME TEXT LIST         @OZ20685 P4961000
DYNUCBNM DS    XL3                 UCB NAME                    @OZ20685 P4962000
DYNDDNTX DS    XL6                 DDNAME TEXT LIST            @OZ20685 P4963000
DYNDDNNM DS    XL8                 DDNAME FROM DCT             @OZ20685 P4964000
         DS    0F                  ALIGN TO WORD BOUNDARY      @OZ20685 P4964025
DYNRSAV  DS    CL(4*9)             SAVE AREA FOR 9 REGISTERS   @OZ20685 P4964050
         SPACE 1                                               @OZ20685 P4964100
DYNLEN   EQU   *-DYNDSECT          LENGTH OF WORK AREA         @OZ20685 P4964200
         SPACE 1                                               @OZ20685 P4964300
HASPNUC  CSECT                                                 @OZ20685 P4965000
*              THIS LINE DELETED BY APAR NUMBER                @OZ20685 P4965500
*              THIS LINE DELETED BY APAR NUMBER                @OZ20685 P4965600
         SPACE 1                                                     R4 P4966000
         DROP  WB,WC,WD                                              R4 P4967000
         TITLE 'HASP DISASTROUS ERROR ROUTINE'                       R4 P4968000
*********************************************************************** P4969000
*                                                                     * P4970000
*        $DISTERR - DISPLAY THE HASP DISASTROUS ERROR MESSAGE         * P4971000
*                                                                     * P4972000
*        R0    - WORK, UNPREDICTABLE ON EXIT                          * P4973000
*        R1    - WORK, UNPREDICTABLE ON EXIT                          * P4974000
*        R11   - HCT ADDRESS (BASE1)                                  * P4975000
*        R13   - PCE ADDRESS                                          * P4976000
*        R14   - RETURN ADDRESS                                       * P4977000
*        R15   - ENTRY POINT ADDRESS, UNPREDICTABLE ON EXIT           * P4978000
*                                                                     * P4979000
* NOTES                                                               * P4980000
*                                                                     * P4981000
*        THIS ROUTINE IS USED TO INDICATE TO THE OPERATOR SERIOUS     * P4983000
*        UNRECOVERABLE ERRORS HAVE OCCURRED.                          * P4984000
*                                                                     * P4985000
*********************************************************************** P4986000
         SPACE 1                                                     R4 P4987000
         USING $DSTERR,R15         PROVIDE LOCAL ADDRESSABILITY      R4 P4988000
         ENTRY $DSTERR             ENTRY TO DISASTROUS ERROR RTN     R4 P4989000
         SPACE 1                                                     R4 P4990000
$DSTERR  STM   LINK,R1,PCELINK     SAVE WORK REGISTERS              R41 P4991000
        $GETCMB NUMCMB=1           GET A CMB                        R41 P4991200
         L     R15,$DISTERR        RESTORE BASE REGISTER            R41 P4991400
         BNZ   DSTCMB              BR IF GOT A CMB                  R41 P4991600
         LM    LINK,R1,PCELINK      ELSE RESTORE REGISTERS          R41 P4991800
        $WAIT  CMB                   AND WAIT FOR A CMB             R41 P4992000
         L     R15,$DISTERR        RESTORE ORIGINAL BASE            R41 P4992200
         BR    R15                  AND TRY AGAIN                   R41 P4992400
         SPACE 1                                                    R41 P4992600
DSTCMB   L     LINK,PCELINK        RESTORE LINK                     R41 P4992800
         LA    R1,CMBJOBN-CMB(,R1)  GET CMB MSG TEXT ADDRESS        R41 P4993000
         MVC   0(DISASTRL,R1),DISASTER  MOVE TEXT TO CMB            R41 P4993200
         MVC   DISASSYM-DISASTER(,R1),0(LINK)  SET SYMBOL NAME      R41 P4993400
         MVC   DISASMOD-DISASTER(,R1),8(LINK)  SET MODULE NAME      R41 P4993600
         SL    R1,=A(CMBJOBN-CMB)  RESTORE CMB ADDRESS              R41 P4994000
        $WTO   (R1),DISASTRL,JOB=NO,CMB=YES,  ISSUE ERROR MSG       R41CP4994200
               ROUTE=$ERR+$LOG,CLASS=$ALWAYS,PRI=$HI                 R4 P4995000
         LM    LINK,R1,PCELINK     RESTORE REGISTERS                R41 P4996000
         B     16(,LINK)            AND RETURN TO CALLER             R4 P5000000
         SPACE 1                                                     R4 P5002000
         DROP  R15                 KILL LOCAL ADDRESSABILITY         R4 P5003000
         SPACE 2                                                     R4 P5004000
DSTOFFST DC    A(CMBJOBN-CMB)      OFFSET OF MSG TEXT IN CMB        R41 P5004500
DISASTER $MSG  096,'DISASTROUS ERROR AT SYMBOL '                     R4 P5005000
DISASSYM DC    CL8'ERRORSYM',C' IN MODULE '                          R4 P5006000
DISASMOD DC    CL8'ERRORMOD'                                         R4 P5007000
DISASTRL EQU   *-DISASTER          LENGTH OF MESSAGE                 R4 P5008000
         TITLE 'HASP INPUT/OUTPUT ERROR ROUTINE'                     R4 P5009000
*********************************************************************** P5010000
*                                                                     * P5011000
*        $IOERROR - FORMAT AND DISPLAY HASP I/O ERROR MESSAGE         * P5012000
*                                                                     * P5013000
*        R0    - WORK, UNPREDICTABLE ON EXIT                          * P5014000
*        R1    - BUFFER ADDRESS (IOB FOR EXCP / RPL FOR VTAM)         * P5016000
*        R11   - HCT ADDRESS (BASE1)                                  * P5021000
*        R13   - PCE ADDRESS                                          * P5022000
*        R14   - RETURN ADDRESS                                       * P5023000
*        R15   - ENTRY POINT ADDRESS, UNPREDICTABLE ON EXIT           * P5024000
*                                                                     * P5025000
*********************************************************************** P5026000
         SPACE 1                                                     R4 P5027000
         USING BUFDSECT,R1         PROVIDE BUFFER ADDRESSABILITY     R4 P5028000
         USING $IOERRTN,WA         PROVIDE LOCAL ADDRESSABILITY      R4 P5029000
         ENTRY $IOERRTN            ENTRY TO I/O ERROR ROUTINE        R4 P5030000
         SPACE 1                                                     R4 P5031000
$IOERRTN STM   LINK,WA,PCELINK     SAVE WORK REGISTERS               R4 P5032000
         LR    WA,R15              RELOAD BASE                       R4 P5033000
        $GETCMB NUMCMB=1           GET A CMB                        R41 P5033100
         BNZ   ERRCMB              BR IF GOT A CMB                  R41 P5033200
         LM    LINK,R1,PCELINK     RESTORE REGISTERS                R41 P5033300
         CLI   PCEID+1,PCEASYID    TEST PROCESSOR TYPE              R41 P5033400
         BE    ERREXIT             EXIT IF $ASYNC PROCESSOR         R41 P5033500
         CLI   PCEID+1,PCEMLMID    TEST PROCESSOR TYPE              R41 P5033600
         BE    ERREXIT             EXIT IF LINE MANAGER             R41 P5033700
         CLI   PCEID+1,PCECONID    TEST PROCESSOR TYPE              R41 P5033800
         BE    ERREXIT             EXIT IF COMMAND PROCESSOR        R41 P5033900
         L     WA,PCEWA             ELSE RESTORE WA                 R41 P5034000
        $WAIT  CMB                   AND WAIT FOR A CMB             R41 P5034100
         L     R15,$IOERROR        RESTORE ORIGINAL BASE            R41 P5034200
         BR    R15                  AND TRY AGAIN                   R41 P5034300
         EJECT                                                      R41 P5034400
         USING ERRMSG,LINK         SET MSG TEXT ADDRESSABILITY      R41 P5034500
         SPACE 1                                                    R41 P5034600
ERRCMB   LA    LINK,CMBJOBN-CMB(,R1) POINT TO MESSAGE AREA          R41 P5034700
         MVI   ERRMSG,C' '                BLANK OUT                 R41 P5034800
         MVC   ERRMSG+1(ERRMSGL-1),ERRMSG  ENTIRE MESSAGE AREA      R41 P5034900
         MVC   ERRMSG(L'ERRMSGNO),ERRMSGNO  MOVE IN MSG TEXT        R41 P5035000
         L     R1,PCER1            RESTORE BUFFER ADDRESS           R41 P5035100
         TM    BUFTYPE,BUFRPL      CHECK BUFFER TYPE                 R4 P5035300
         BO    ERRRPLBF            BRANCH IF VTAM BUFFER            R41 P5036000
         LA    R0,ERRMUL           SET UNIT RECORD MESSAGE LENGTH    R4 P5038000
         L     R15,BUFDCT          R15 = DCT ADDRESS                 R4 P5039000
         USING DCTDSECT,R15        ESTABLISH DCT ADDRESSABILITY      R4 P5040000
         MVC   ERRDEVN,DCTDEVN     SET UP HASP DEVICE NAME           R4 P5041000
         L     R15,IOBDCBPT        R15 = DCB ADDRESS                 R4 P5042000
         USING DCBDSECT,R15        ESTABLISH DCB ADDRESSABILITY      R4 P5043000
         L     R15,DCBDEBAD        R15 = DEB ADDRESS                 R4 P5044000
         USING DEBDSECT,R15        ESTABLISH DEB ADDRESSABILITY      R4 P5045000
         XC    PCER1,PCER1         CLEAR WORK AREA                  R41 P5046000
         MVO   PCER1+2(2),IOBXTENT GET 16 * EXTENT NUMBER           R41 P5046500
         AL    R15,PCER1           ADJUST ADDRESS FOR EXTENT        R41 P5047000
         ST    R1,PCER1            RESTORE IOB ADDRESS IN PCER1     R41 P5047500
         L     R15,DEBSUCBA        R15 = UCB ADDRESS                 R4 P5048000
         USING UCBDSECT,R15        ESTABLISH UCB ADDRESSABILITY      R4 P5049000
         TM    UCBTBYT3,UCB3DACC   TEST DEVICE TYPE                  R4 P5050000
         BZ    ERRNOTDA            BRANCH IF NOT DIRECT ACCESS       R4 P5051000
         MVC   ERRVOLID,SRTEVOLI   SET UP VOLUME SERIAL              R4 P5052000
         MVC   ERRVOLID+6(2),=C'  '  BLANK OUT REST OF FIELD        R41 P5053000
         LA    R0,ERRML            SET LENGTH OF MESSAGE             R4 P5054000
         SPACE 1                                                     R4 P5055000
ERRNOTDA MVC   ERRNAME,UCBNAME     SET UP UNIT ADDRESS               R4 P5056000
         MVI   ERRNAME+L'ERRNAME,C',' INSERT COMMA                  R41 P5056500
         DROP  R15                 KILL UCB ADDRESSABILITY           R4 P5057000
         L     R15,IOBCSW-1        R15 = ADDRESS OF                  R4 P5058000
         LA    R15,0(,R15)          LAST                             R4 P5059000
         S     R15,=F'8'              COMMAND                       R41 P5060000
         BM    ERRNOIO             USE IOBSTART IF NEGATIVE          R4 P5061000
         TM    BUFTYPE,BUFTP       TEST BUFFER TYPE                  R4 P5062000
         BO    ERRRJE              BRANCH IF RJE ERROR               R4 P5063000
         TM    IOBECBCC,X'01'      TEST COMPLETION CODE              R4 P5064000
         BZ    ERRNOIO             BRANCH IF NO I/O HAS OCCURRED     R4 P5065000
         SPACE 1                                                     R4 P5066000
ERRRJE   DS    0H                                              @OZ46417 P5067000
         CLI   IOBECBCC,X'44'      WAS DEVICE INTERCEPTED      @OZ46417 P5068000
         BE    ERRNOIO             IF YES, USE IOBSTART        @OZ46417 P5068100
         TM    IOBSIOCC,X'10'      TEST SIO COMPLETION         @OZ46417 P5068200
         BZ    ERRSIOOK            BRANCH IF SUCCESSFUL        @OZ46417 P5068300
         SPACE 1                                                     R4 P5069000
ERRNOIO  L     R15,IOBSTART        GET FIRST COMMAND ADDRESS         R4 P5070000
         EJECT                                                       R4 P5071000
ERRSIOOK UNPK  ERRCOM,0(2,R15)     SET UP COMMAND CODE               R4 P5072000
         UNPK  ERRSTAT,IOBCSW+3(3) SET UP STATUS BYTES               R4 P5073000
         UNPK  ERRSENS,IOBSENS0(3) SET UP SENSE BYTES                R4 P5074000
         UNPK  ERRSEEK,IOBSEEK(8)  SET UP SEEK ADDRESS               R4 P5075000
         TM    BUFTYPE,BUFTP       TEST FOR TP ERROR                 R4 P5076000
         BNO   ERRNOTTP            BRANCH IF NOT TP ERROR            R4 P5077000
         UNPK  ERRTPCDE,5(2,R15)   SET UP TP COMMAND SEQUENCE TYPE   R4 P5078000
         UNPK  ERRTPCDE+2,LCBACK(2)     SET UP CURRENT BSC ACK       R4 P5079000
         LA    R0,ERRMBSCL         GET BSC TP ERROR MSG LENGTH       R4 P5080000
         B     ERRNOTTP            BRANCH FOR FURTHER MSG SETUP      R4 P5082000
         SPACE 1                                                     R4 P5083000
         USING RPLDSECT,R1         PROVIDE RPL ADDRESSABILITY        R4 P5084000
ERRRPLBF L     R15,RPLICE          GET ICE ADDRESS                  R41 P5084100
         LTR   R15,R15             TEST ICE ADDRESS                 R41 P5084200
         BZ    ERRRPL              IF NO ICE GO USE DEVICE DCT      R41 P5084300
         L     R15,ICERDCT-ICEDSECT(,R15) GET REMOTE DCT            R41 P5084400
         LTR   R15,R15             TEST REMOTE DCT                  R41 P5084500
         BNZ   ERRDNAME            IF THERE, USE REMOTE DCT         R41 P5084600
ERRRPL   L     R15,RPLDCT          GET ADDR OF LOGON/LINE DCT        R4 P5085000
         USING DCTDSECT,R15        TEMPORARY DCT ADDRESSABILITY      R4 P5086000
ERRDNAME MVC   ERRDEVN,DCTDEVN     MOVE DEVICE NAME TO MSG          R41 P5087000
         DROP  R15                 RELEASE TEMPORARY BASE REG        R4 P5088000
         MVC   ERRNAME(L'ERRNAME+1),=C'SNA,' USE 'SNA' AS ADDR      R41 P5089000
         UNPK  ERRCOM,RPLREQ(2)    SET UP RPL REQUEST CODE           R4 P5090000
         UNPK  ERRSTAT,RPLRLEN+2(3)    SET R.U. LENGTH               R4 P5091000
         UNPK  ERRSENSE,RPLFDBK2(5)  SET SYSTEM SENSE INFO     @OZ53710 P5092000
         UNPK  ERRTPCD1,RPLSEQTP(5)  COPY SEQTTYPE, & RTNCD/FDBK2   R41 P5093000
         TM    RPLOPT12,RPLFMHDR   TEST FOR FM HEADER PRESENT       R41 P5093100
         BZ    ERRRPL1             BR IF NO, SKIP FMH PROCESSING    R41 P5093200
         UNPK  ERRTPCD2,RPLBUFST+FMHBYTE1-FMHDSECT(2) COPY FMH TYPE R41 P5093300
ERRRPL1  UNPK  ERRTPCD3,RPLRH3(5)  COPY BRAKET, CHAIN & SRTYPE      R41 P5093400
         BZ    ERRRPL2             BRACNH IF NOT FM HEADER          R41 P5093500
         CLI   RPLBUFST+FMHBYTE1-FMHDSECT,FMHTYPE1  TEST FMH TYPE   R41 P5093600
         BNE   ERRRPL2             BRANCH IF NOT TYPE 1             R41 P5093700
         UNPK  ERRTPCD4,RPLBUFST+FMHPROPS-FMHDSECT(2) COPY TYPE1    R41CP5093800
                                                    ATTRIBUTES      R41 P5093900
ERRRPL2  UNPK  ERRTPCD5,RPLVTFL2(5)  COPY VTAM FLAGS & DFC BITS     R41 P5094000
         LA    R0,ERRMSNAL         GET SNA TP ERROR MSG LENGTH       R4 P5095000
         SPACE 1                                                     R4 P5097000
ERRNOTTP TR    ERRINFO,$HEXTRAN    TRANS INFORMATION TO EBCDIC @OZ32566 P5098000
         MVI   ERRCOM+2,C','       INSERT                            R4 P5099000
         MVI   ERRSTAT+4,C','       SEPARATION COMMAS          @OZ53710 P5100000
         SPACE 1                                               @OZ53710 P5101000
         USING BUFDSECT,R1         TEMP BUFFER ADDRESSABILITY  @OZ53710 P5101500
         SPACE 1                                               @OZ53710 P5102000
         TM    BUFTYPE,BUFRPL      CHECK BUFFER TYPE           @OZ53710 P5102200
         BNO   ERRNOTRP              AND CONTINUE IF NOT RPL   @OZ53710 P5102300
         MVI   ERRSENS+8,C','      ADD COMMA AFTER SENSE       @OZ53710 P5102400
         B     ERRWTO1             BRANCH TO WRITE MESSAGE     @OZ53710 P5102500
ERRNOTRP MVI   ERRSENS+4,C','      ADD COMMA TO OTHER MESSAGES @OZ53710 P5102600
ERRWTO1  SL    LINK,=A(CMBJOBN-CMB) RESTORE CMB ADDRESS        @OZ53710 P5102700
         SPACE 1                                               @OZ53710 P5102800
        $WTO   (LINK),(R0),JOB=NO,CMB=YES,  ISSUE ERROR MSG    @OZ53710CP5102900
               ROUTE=$LOG+$ERR+$TP,CLASS=$ALWAYS,PRI=$HI             R4 P5103000
         LM    LINK,R1,PCELINK     RESTORE REGISTERS                 R4 P5104000
         EJECT                                                      R41 P5115000
ERREXIT  L     WA,PCEWA            RESTORE WA                        R4 P5116000
         USING BUFDSECT,R1         ESTABLISH BUFFER ADDRESSABILITY   R4 P5118000
         TM    BUFECBCC,X'7F'      RESET I/O CONDITION CODE          R4 P5120000
         BR    LINK                 AND RETURN                       R4 P5121000
         SPACE 1                                                     R4 P5122000
         DROP  WA                  KILL LOCAL ADDRESSABILITY         R4 P5123000
         DROP  R1                  KILL BUFFER ADDRESSABILITY        R4 P5124000
         DROP  LINK                KILL MSG TEXT ADDRESSABILITY     R41 P5124500
         SPACE 2                                                    R41 P5125000
ERRMSGNO $MSG  094,'I/O ERROR ON ' ERROR MESSAGE                    R41 P5126000
         SPACE 2                                                    R41 P5127000
ERRMSG   DSECT                                                      R41 P5128000
ERRPRFIX DC    CL(L'ERRMSGNO)' '   ERROR MESSAGE HEADER             R41 P5128500
ERRVOLID DC    0CL6' '             VOLUME SERIAL (DA ONLY)           R4 P5129000
ERRDEVN  DC    CL8' ',C' '         HASP DEVICE NAME (NON-DA)         R4 P5130000
ERRNAME  DC    CL3' ',C','         UNIT ADDRESS                      R4 P5131000
ERRCOM   DC    CL3' '              COMMAND CODE                      R4 P5133000
ERRSTAT  DC    CL5' '              ERROR STATUS                      R4 P5134000
ERRSENSE DC    0CL9' '             SENSE INFORMATION FOR SNA   @OZ53710 P5134500
ERRSENS  DC    CL5' '              SENSE INFORMATION                 R4 P5135000
ERRMUL   EQU   *-ERRMSG-1                                            R4 P5136000
ERRMBSCL EQU   *-ERRMSG+4                                            R4 P5137000
ERRML    EQU   *-ERRMSG+14                                           R4 P5138000
ERRSEEK  DC    0CL15' '            SEEK ADDRESS (DA ONLY)            R4 P5139000
ERRTPCDE DC    0CL3' '             BSC                              R41 P5140000
         DC    CL4' '                                          @OZ53710 P5140050
ERRTPCD1 DC    0CL9' '              AND                             R41 P5140100
         DC    CL6' '                SNA                            R41 P5140200
ERRTPCD2 DC    0CL3' '                EXTENDED                      R41 P5140300
         DC    CL2' '                  REMOTE                       R41 P5140400
ERRTPCD3 DC    0CL9' '                  JOB                         R41 P5140500
         DC    CL6' '                    ENTRY                      R41 P5140600
ERRTPCD4 DC    0CL3' '                    TELEPROCESSING            R41 P5140700
         DC    CL2' '                      DIAGNOSTIC          @OZ44707 P5140800
ERRTPCD5 DC    CL9' '                        INFORMATION            R41 P5140900
         SPACE 2                                                    R41 P5141000
ERRINFO  EQU   ERRCOM,*-ERRCOM     BYTES REQUIRING HEX XLATE        R41 P5141100
ERRMSNAL EQU   *-ERRMSG-1                                            R4 P5144000
ERRMSGL  EQU   *-ERRMSG            MAXIMUM MESSAGE LENGTH           R41 P5144100
HASPNUC  CSECT                                                      R41 P5144200
         SPACE 2                                                    R41 P5144300
         LTORG                                                 @OZ32566 P5145000
         TITLE 'HASP CATASTROPHIC ERROR SERVICES'              @OZ32566 P5145100
****************************************************************OZ32566 P5145200
*                                                              *OZ32566 P5145300
*        $ERROR - JES2 CATASTROPHIC ERROR ROUTINE              *OZ32566 P5145400
*                                                              *OZ32566 P5145500
*        R0    - ADDRESS OF 4-BYTE ERROR CODE                  *OZ32566 P5145600
*                (POINTS TO 1ST BYTE FOLLOWING CALLING SEQ)    *OZ32566 P5145700
*        BASE1 - ENTRY POINT ADDRESS                           *OZ32566 P5145800
*                                                              *OZ32566 P5145900
* NOTE   - THIS ROUTINE IS ENTERED BY THE JES2 MAIN TASK VIA   *OZ32566 P5146000
*          THE $ERROR MACRO WHEN A CATASTROPHE IS DETECTED     *OZ32566 P5146100
*                                                              *OZ32566 P5146200
****************************************************************OZ32566 P5146300
         SPACE 1                                               @OZ32566 P5146400
         ENTRY $ERRORTN            PROVIDE $ERRORTN ENTRY      @OZ32566 P5146500
         USING $ABEND,BASE2,R10    PROVIDE EXIT ADDRESSABILITY @OZ36864 P5146600
         SPACE 1                                               @OZ32566 P5146700
$ERRORTN STM   R0,R15,ERRORSAV-*(BASE1)  SAVE REGISTERS        @OZ36864 P5146800
         LA    BASE2,$ABEND-$ERRORTN(,BASE1)  PROVIDE          @OZ36864 P5146900
         LA    R10,2048(,BASE2)                BASE            @OZ36864 P5147000
         LA    R10,2048(,R10)                   REGISTERS      @OZ36864 P5147100
         LR    WA,R0               SAVE ADDRESS OF ERROR CODE  @OZ36864 P5147200
         LA    WA,0(,WA)           PURIFY ERROR CODE ADDRESS   @OZ36864 P5147300
         MVI   HEXITFLG,HEXJES2    SHOW $ERROR                 @OZ36864 P5147400
         B     EROUTINE            BR TO CONTINUE              @OZ36864 P5147500
         SPACE 2                                               @OZ32566 P5147600
****************************************************************OZ32566 P5147700
*                                                              *OZ32566 P5147800
*        $ABEND - JES2 ABEND PROCESSING  (ESTAE EXIT)          *OZ32566 P5147900
*                                                              *OZ32566 P5148000
*        R1    - ADDRESS OF SDWA         IF R0 NOT = 12        *OZ32566 P5148100
*              - ABEND CODE (NO SDWA)    IF R0     = 12        *OZ32566 P5148200
*        R14   - RETURN ADDRESS (TO MVS)                       *OZ32566 P5148300
*        R15   - ENTRY POINT ADDRESS                           *OZ32566 P5148400
*                                                              *OZ32566 P5148500
* NOTE - THIS ROUTINE IS ENTERED BY THE OPERATING SYSTEM WHEN A*OZ32566 P5148600
*        JES2 ABEND OCCURS                                     *OZ32566 P5148700
*                                                              *OZ32566 P5148800
****************************************************************OZ32566 P5148900
         SPACE 1                                               @OZ32566 P5149000
$ABEND   STM   R0,R15,ERRORSAV-*(R15)  SAVE REGISTERS          @OZ36864 P5149200
         LR    BASE2,R15            PROVIDE                    @OZ36864 P5149300
         LA    R10,2048(,BASE2)      BASE                      @OZ36864 P5149400
         LA    R10,2048(,R10)         REGISTERS                @OZ36864 P5149500
         MVI   HEXITFLG,HEXSYS     SHOW SYSTEM ABEND           @OZ36864 P5149600
*                                  THIS LINE DELETED BY APAR   @OZ36864 P5149700
*                                  THIS LINE DELETED BY APAR   @OZ36864 P5149800
*                                  THIS LINE DELETED BY APAR   @OZ36864 P5149900
         EJECT                                                 @OZ32566 P5150000
         USING SDWA,WF             PROVIDE SDWA ADDRESSABILITY @OZ32566 P5150100
         USING EELDSECT,WG         PROVIDE EEL  ADDRESSABILITY @OZ32566 P5150200
         SPACE 1                                               @OZ32566 P5150300
****************************************************************OZ32566 P5150400
*                                                              *OZ32566 P5150500
*        OBTAIN AND INITIALIZE JES2 ESTAE ELEMENT (EEL)        *OZ32566 P5150600
*                                                              *OZ32566 P5150700
****************************************************************OZ32566 P5150800
         SPACE 1                                               @OZ32566 P5150900
*                                  THIS LINE DELETED BY APAR   @OZ36864 P5151000
*                                  THIS LINE DELETED BY APAR   @OZ36864 P5151100
*                                  THIS LINE DELETED BY APAR   @OZ36864 P5151200
EROUTINE L     BASE1,MAPNUCA       ENSURE HCT ADDRESSABILITY   @OZ36864 P5151300
         LA    R13,ERRXSAVE        PROVIDE EXTERNAL SAVE AREA  @OZ32566 P5151400
         SPACE 1                                               @OZ32566 P5151700
         SLR   WF,WF               CLEAR SDWA ADDRESS          @OZ32566 P5151800
         LA    WG,EEL              LOAD EEL ADDRESS            @OZ32566 P5152000
         SLR   R15,R15             CLEAR FOR MVCL              @OZ36762 P5152100
         LR    R0,WG               CLEAR                       @OZ32566 P5152200
         LA    R1,EELSIZE           ESTAE                      @OZ32566 P5152400
         MVCL  R0,R14                ELEMENT                   @OZ32566 P5152600
         TM    HEXITFLG,HEXJES2    JES2 ABEND ($ERROR)...      @OZ32566 P5152800
         BZ    ERRSYS              BR IF NO                    @OZ32566 P5152900
         OI    EELFLAGS,EELJESAB    ELSE SHOW VOLUNTARY CRUMP  @OZ32566 P5153000
         MVC   EELCODE+1(3),0(WA)  SET JES2 ERROR CODE         @OZ32566 P5153100
         MVI   EELCODE,C'$'        INSERT $ TO SHOW VOL CRUMP  @OZ32566 P5153150
         ST    BASE1,ERRORSAV+BASE1*4  ENSURE BASE1 IS HCT ADDR@OZ32566 P5153200
         MVC   EELREGS,ERRORSAV    SET REGISTERS AT $ERROR TIME@OZ32566 P5153300
         OI    EELFLAGS,EELREGSA   SHOW REGS AVAILABLE         @OZ32566 P5153400
         SH    WA,ERRMACL          SET FAILURE                 @OZ32566 P5153500
         ST    WA,EELFADDR          ADDRESS                    @OZ32566 P5153600
         B     ERRCHPCE              AND BR TO CONTINUE        @OZ32566 P5153700
         SPACE 1                                               @OZ32566 P5153800
ERR     $ERROR                     DUMMY $ERROR EXPANSION      @OZ32566 P5153900
ERRMACL  DC    AL2(*-ERR-4)        LENGTH OF $ERROR EXPANSION  @OZ32566 P5154000
         EJECT                                                 @OZ32566 P5154100
ERRSYS   OI    EELFLAGS,EELSYSAB   SHOW SYSTEM ABEND           @OZ32566 P5154200
         CLI   ERRORSAV+R0*4+3,12  IS SDWA AVAILABLE...        @OZ32566 P5154300
         BNE   ERRSYSDW            BR IF YES                   @OZ32566 P5154400
         UNPK  EELCODE+1(3),ERRORSAV+R1*4+1(2)  SET ABEND CODE @OZ32566 P5154500
         B     ERRSYSC              AND BR TO CONTINUE         @OZ32566 P5154600
         SPACE 1                                               @OZ32566 P5154700
ERRSYSDW L     WF,ERRORSAV+R1*4    ADDRESS OF SDWA             @OZ32566 P5154800
         UNPK  EELCODE+1(3),SDWACMPC(2)  SET ABEND CODE        @OZ32566 P5154900
         MVC   EELREGS,SDWASRSV    SET RB-LEVEL REGISTERS      @OZ36762 P5155000
         OI    EELFLAGS,EELREGSA   SHOW REGS AVAILABLE         @OZ32566 P5155100
         SLR   WB,WB               GET LENGTH OF FAILING       @OZ32566 P5155200
         IC    WB,SDWAILC2          INSTRUCTION (IN BYTES)     @OZ36762 P5155300
         STC   WB,EELILC           SET ILC                     @OZ32566 P5155400
         MVC   EELIC,SDWAICD2      SET INTERRUPT CODE          @OZ36762 P5155450
         MVC   EELPSW(8),SDWAEC2   SET RB-LEVEL PSW            @OZ36762 P5155500
         L     WA,EELPSW+4         DECREMENT                   @OZ36762 P5155550
         CLI   EELIC,X'10'          PSW                        @OZ36762 P5155600
         BE    ERRSETFA              BY ILC                    @OZ36762 P5155650
         CLI   EELIC,X'11'            UNLESS                   @OZ36762 P5155700
         BE    ERRSETFA                PAGE-                   @OZ36762 P5155750
         SLR   WA,WB                    FAULT                  @OZ36762 P5155800
         SPACE 1                                               @OZ36762 P5155810
ERRSETFA ST    WA,EELFADDR         SET FAILURE ADDRESS         @OZ36762 P5155850
         SPACE 1                                               @OZ32566 P5155900
ERRSYSC  LA    WA,EELCODE          EDIT                        @OZ32566 P5156000
         OI    3(WA),X'F0'          ABEND                      @OZ32566 P5156100
         TR    1(3,WA),$HEXTRAN      CODE                      @OZ32566 P5156200
         MVI   0(WA),C'S'          INSERT 'S' FOR SYSTEM ABEND @OZ32566 P5156300
         SPACE 1                                               @OZ32566 P5156400
         DROP  WF                  KILL SDWA ADDRESSABILITY    @OZ32566 P5156500
         SPACE 1                                               @OZ32566 P5156600
****************************************************************OZ32566 P5156700
*                                                              *OZ32566 P5156800
*        VERIFY THAT R13 WAS A PCE ADDRESS                     *OZ32566 P5156900
*                                                              *OZ32566 P5157000
****************************************************************OZ32566 P5157100
         SPACE 1                                               @OZ32566 P5157200
         DROP  R13                 PROVIDE LOCAL               @OZ32566 P5157300
         USING PCEDSECT,R1          PCE ADDRESSABILITY         @OZ32566 P5157400
         SPACE 1                                               @OZ32566 P5157500
ERRCHPCE L     R1,EELREGS+R13*4    GET R13 AT ABEND-TIME       @OZ32566 P5157600
         LTR   R1,R1               ZERO...                     @OZ32566 P5157700
         BZ    ERRSVT              BR IF YES                   @OZ32566 P5157800
         CL    R1,$PCEORG          BR IF R13                   @OZ36762 P5157850
         BL    ERRSVT               WAS NOT                    @OZ36762 P5157900
         CL    R1,$PCELAST           A VALID                   @OZ36762 P5157950
         BH    ERRSVT                 PCE ADDRESS              @OZ36762 P5158000
         ST    R1,EELPCE           SAVE VALID PCE ADDRESS      @OZ36762 P5158050
         SPACE 1                                               @OZ32566 P5158200
         DROP  R1                  RESTORE STANDARD            @OZ32566 P5158300
         USING PCEDSECT,R13         PCE ADDRESSABILITY         @OZ32566 P5158400
         EJECT                                                 @OZ32566 P5158500
****************************************************************OZ32566 P5158600
*                                                              *OZ32566 P5158700
*        SIGNAL ALL PROCESSORS THAT JES2 IS GOING DOWN         *OZ32566 P5158800
*                                                              *OZ32566 P5158900
****************************************************************OZ32566 P5159000
         SPACE 1                                               @OZ32566 P5159100
ERRSVT   L     R1,$SSVT            SET                         @OZ32566 P5159200
         SLR   R0,R0                COMPLETION                 @OZ32566 P5159300
         BCTR  R0,0                  CODE INTO                 @OZ32566 P5159400
         ST    R0,$SVHASP-SSVT(,R1)   SSVT                     @OZ32566 P5159500
         LA    WB,ERRIPLTB         PREPARE TO SCAN RE-IPL TBL  @OZ35996 P5159530
         LA    R0,ERRIPLNT         GET NUMBER OF TABLE ENTRIES @OZ35996 P5159540
         SPACE 1                                               @OZ35996 P5159550
ERRNXTCD CLC   EELCODE,0(WB)       ERROR CODE MATCH...         @OZ35996 P5159560
         BE    ERRREIPL            BR IF YES                   @OZ35996 P5159570
         LA    WB,4(,WB)           POINT TO NEXT $ERROR CODE   @OZ35996 P5159580
         BCT   R0,ERRNXTCD         LOOP THRU ALL TABLE ENTRIES @OZ35996 P5159590
         SPACE 1                                               @OZ35996 P5159600
         B     ERRMOVCD            NO HIT -- BR TO CONTINUE    @OZ35996 P5159610
         SPACE 1                                               @OZ35996 P5159620
ERRREIPL OI    $SVSTUS-SSVT(R1),$SVSTRPL  PREVENT HOTSTART     @OZ35996 P5159630
         B     ERRMOVCD            BR TO CONTINUE              @OZ35996 P5159640
         SPACE 1                                               @OZ35996 P5159650
ERRIPLTB DS    0H                  ERRORS REQUIRING RE-IPL     @OZ35996 P5159660
         SPACE 1                                               @OZ35996 P5159670
         DC    CL4'$K03'           K03 ABEND                   @OZ35996 P5159680
         DC    CL4'$K15'           K15 ABEND                   @OZ35996 P5159690
         DC    CL4'$K16'           K16 ABEND                   @OZ35996 P5159700
         SPACE 1                                               @OZ35996 P5159760
ERRIPLNT EQU   (*-ERRIPLTB)/4      NUMBER OF TABLE ENTRIES     @OZ35996 P5159770
         EJECT                                                 @OZ35996 P5159780
****************************************************************OZ35996 P5159790
*                                                              *OZ32566 P5159800
*        ISSUE 'JES2 CATASTROPHIC ERROR' MSG WITH ABEND/$ERROR *OZ32566 P5159900
*        CODE                                                  *OZ32566 P5159950
*                                                              *OZ32566 P5160000
****************************************************************OZ32566 P5160100
         SPACE 1                                               @OZ32566 P5160200
ERRMOVCD MVC   ERRORMCD,EELCODE    MOVE CODE TO MESSAGE        @OZ35996 P5160300
         MVC   ERMSGWRK(ERRORMSL),ERRORMSG MOVE MSG TO WORK    @OZ32566 P5160400
         BAL   WE,ERRWTO           TYPE CATASTROPHIC ERROR MSG @OZ32566 P5160500
         SPACE 3                                               @OZ32566 P5160600
****************************************************************OZ32566 P5160700
*                                                              *OZ32566 P5160800
*        PRODUCE JES2 ABEND ANALYSIS ON CONSOLE                *OZ32566 P5160900
*                                                              *OZ32566 P5161000
****************************************************************OZ32566 P5161100
         SPACE 1                                               @OZ32566 P5161200
         BAL   LINK,ERRATOP        PRODUCE JES2 ABEND ANALYSIS @OZ32566 P5161300
         EJECT                                                 @OZ32566 P5161400
****************************************************************OZ32566 P5161500
*                                                              *OZ32566 P5161600
*        ASK FOR JES2 TERMINATION OPTION                       *OZ32566 P5161700
*                                                              *OZ32566 P5161800
****************************************************************OZ32566 P5161900
         SPACE 1                                               @OZ32566 P5162000
ERRWTOR  MVI   ERRDWORK,0          INITIALIZE ECB              @OZ32566 P5162100
         MVC   EROPTION,$BLANKS     AND CLEAR                  @OZ32566 P5162200
         MVI   ERDUMPT,C' '                 REPLY              @OZ32566 P5162300
         MVC   ERDUMPT+1(L'ERDUMPT-1),ERDUMPT  AREA            @OZ32566 P5162400
         MVC   ERMSGWRK(ERTERMSL),ERTERMSG MOVE MSG TO WORK    @OZ32566 P5162500
       $$WTOR  ERMSGWRK            ASK OPERATOR FOR OPTIONS    @OZ32566 P5162550
         WAIT  ECB=ERRDWORK        WAIT FOR OPERATOR REPLY     @OZ32566 P5162600
         MVC   ERRDWORK(4),EROPTION  SAVE OPTION               @OZ32566 P5162700
         OC    ERRDWORK(4),$BLANKS    IN UPPER-CASE            @OZ32566 P5162800
         SPACE 1                                               @OZ32566 P5162900
****************************************************************OZ32566 P5163000
*                                                              *OZ32566 P5163100
*        SCAN OPTION TABLE AND GIVE CONTROL TO PROCESSING      *OZ32566 P5163200
*        ROUTINE                                               *OZ32566 P5163250
*                                                              *OZ32566 P5163300
****************************************************************OZ32566 P5163400
         SPACE 1                                               @OZ32566 P5163500
         LA    WA,8                GET OPTION TABLE ENTRY SIZE @OZ32566 P5163600
         LA    WB,EROPTABB         GET ADDR OF LAST  ENTRY     @OZ32566 P5163700
         LA    R1,EROPTAB          GET ADDR OF FIRST ENTRY     @OZ32566 P5163800
         SPACE 1                                               @OZ32566 P5163900
EROPTLUP L     LINK,4(,R1)         SAVE ADDR OF OPTION HANDLER @OZ32566 P5164000
         CLC   0(4,R1),ERRDWORK    IS THIS THE OPTION...       @OZ32566 P5164100
         BNE   EROPTBLX            BR IF NO                    @OZ32566 P5164200
         BALR  LINK,LINK            ELSE ENTER OPTION HANDLER  @OZ32566 P5164300
         B     ERRWTOR               AND THEN BR TO ASK AGAIN  @OZ32566 P5164400
         SPACE 1                                               @OZ32566 P5164500
EROPTBLX BXLE  R1,WA,EROPTLUP      INDEX TO NEXT TABLE ENTRY   @OZ32566 P5164600
         B     ERRWTOR             TRY AGAIN IF UNKNOWN OPTION @OZ32566 P5164700
         SPACE 3                                               @OZ32566 P5164800
EROPTAB  DS    0F                  TABLE OF ABEND OPTIONS      @OZ32566 P5164900
         SPACE 1                                               @OZ32566 P5165000
         DC    CL4'DUMP',A(ERRORDMW)  PRODUCE SYSTEM DUMP      @OZ32566 P5165100
         DC    CL4'EXIT',A(ERRWDRAW)  QUICK EXIT               @OZ35996 P5165200
         DC    CL4'PURG',A(HEXIT)     CLEAN UP AND EXIT        @OZ35996 P5165300
         DC    CL4'SNAP',A(ERRATOP)   PRODUCE ABEND ANALYSIS   @OZ32566 P5165400
         SPACE 1                                               @OZ32566 P5165500
EROPTABB EQU   *-8                 LAST TABLE ENTRY            @OZ32566 P5165600
         EJECT                                                 @OZ32566 P5165700
****************************************************************OZ32566 P5165800
*                                                              *OZ32566 P5165900
*        'DUMP' - PRODUCE SYSTEM DUMP WITH TITLE               *OZ32566 P5166000
*                                                              *OZ32566 P5166100
****************************************************************OZ32566 P5166200
         SPACE 1                                               @OZ32566 P5166300
ERRORDMW ST    LINK,ERRLINK        SAVE RETURN ADDRESS         @OZ32566 P5166400
         MVC   ERMSGWRK(ERDMPNGL),ERDMPING MOVE MSG TO WORK    @OZ32566 P5166500
         BAL   WE,ERRWTO           TELL OPER WE'RE TAKING DUMP @OZ32566 P5166600
         L     LINK,ERRLINK        RESTORE RETURN ADDRESS      @OZ32566 P5166700
         SPACE 1                                               @OZ32566 P5166800
         CLC   ERDUMPT(8),$BLANKS  WAS A TITLE PROVIDED...     @OZ32566 P5167000
         BNE   ERDSDUMP            BR IF YES                   @OZ32566 P5167100
         LTR   WG,WG               DOES ESTAE ELEMENT EXIST... @OZ32566 P5167200
         BNZ   ERDTITLE            BR IF YES                   @OZ32566 P5167300
         MVC   ERDUMPT(L'ERRORMS1),ERRORMS1  ELSE SET DEFAULT  @OZ32566 P5167400
         B     ERDSDUMP                       AND BR TO DUMP   @OZ32566 P5167500
         SPACE 1                                               @OZ32566 P5167600
ERDTITLE MVC   ERDUMPT1,ERANLAB0   SET ABEND CODE AND LOCATION @OZ32566 P5167700
         CLI   ERANLDS1,C' '       ERROR DESCRIPT AVAILABLE... @OZ32566 P5167800
         BE    *+10                BR IF NO                    @OZ32566 P5167900
         MVC   ERDUMPT2,ERANLDS1    ELSE SET DESCRIPTION       @OZ32566 P5168000
         MVC   ERDUMPT3,ERANLSY0   SET SUSBSYS IDENTIFICATION  @OZ32566 P5168100
         SPACE 1                                               @OZ32566 P5168200
ERDSDUMP MVI   ERDUMPT-1,L'ERDUMPT SET TITLE LENGTH            @OZ32566 P5168300
         SDUMP HDRAD=ERDUMPT-1,    TAKE A SYSTEM DUMP          @OZ32566CP5168400
               SDATA=(PSA,NUC,RGN,TRT,SQA,CSA,LPA,SWA)         @OZ32566 P5168500
         LTR   R15,R15             DUMP SUCCESSFUL...          @OZ32566 P5168600
         BZR   LINK                RETURN IF YES               @OZ32566 P5168700
         MVC   ERMSGWRK(ERDUMPNL),ERDUMPNG ELSE NOTIFY         @OZ32566 P5168800
         BAL   WE,ERRWTO                    OPERATOR           @OZ32566 P5168900
         L     LINK,ERRLINK                  AND               @OZ32566 P5169000
         BR    LINK                           RETURN           @OZ32566 P5169100
         EJECT                                                 @OZ32566 P5169200
****************************************************************OZ32566 P5169300
*                                                              *OZ32566 P5169400
*        'SNAP' - PROVIDE JES2 ABEND ANALYSIS                  *OZ32566 P5169500
*                                                              *OZ32566 P5169600
****************************************************************OZ32566 P5169700
         SPACE 1                                               @OZ32566 P5169800
         USING PSADSECT,R0         PROVIDE PSA ADDRESSABILITY  @OZ32566 P5169900
         SPACE 1                                               @OZ32566 P5170000
ERRATOP  ST    LINK,ERRLINK        SAVE RETURN ADDRESS         @OZ32566 P5170200
         MVC   ERMSGWRK(ERANTOPL),ERANLTOP TYPE HEADING LINE   @OZ32566 P5170400
         BAL   WE,ERRWTO                                       @OZ32566 P5170600
         SPACE 1                                               @OZ32566 P5171000
****************************************************************OZ32566 P5171100
*                                                              *OZ32566 P5171200
*        SUBSYSTEM ID, VERSION, MODULE NAME                    *OZ32566 P5171300
*                                                              *OZ32566 P5171400
****************************************************************OZ32566 P5171500
         SPACE 1                                               @OZ32566 P5171600
         L     R1,PSATOLD          GET TCB ADDRESS             @OZ32566 P5171700
         SPACE 1                                               @OZ32566 P5171800
         USING TCBDSECT,R1         PROVIDE TCB ADDRESSABILITY  @OZ32566 P5171900
*              THIS LINE DELETED BY APAR NUMBER              * @OZ44707 P5172000
         L     R1,TCBTIO           GET TIOT ADDRESS            @OZ32566 P5172100
         SPACE 1                                               @OZ32566 P5172200
         USING TIOT,R1             PROVIDE TIOT ADDRESSABILITY @OZ32566 P5172300
         MVC   ERANLSY1,TIOCNJOB   SET SUBSYSTEM ID            @OZ32566 P5172400
         DROP  R1                  KILL TIOT ADDRESSABILITY    @OZ32566 P5172500
         SPACE 1                                               @OZ44707 P5172510
         L     WA,PSATOLD          GET TCB ADDRESS             @OZ44707 P5172520
         L     WA,TCBRBP-TCBDSECT(,WA) GET ADDR OF RB          @OZ44707 P5172530
ERRTRB   TM    RBSTAB2-RBDSECT(WA),RBTCBNXT TOP OF RB QUEUE... @OZ44707 P5172540
         BO    ERRTTRB             YES, FOUND TOP RB           @OZ44707 P5172550
         L     WA,RBLINK-RBDSECT(,WA) ELSE GET NEXT RB         @OZ44707 P5172560
         B     ERRTRB              TRY AGAIN                   @OZ44707 P5172570
         SPACE 1                                               @OZ44707 P5172580
ERRTTRB  L     WA,RBCDE-RBDSECT(,WA) GET THE CDE               @OZ44707 P5172590
         SPACE 1                                               @OZ32566 P5172600
         MVC   ERANLSY3,8(WA)      SET MODULE NAME FROM CDE    @OZ32566 P5172700
         MVC   ERANLSY2,ERANLVER   SET JES2 VERS ID (&VERSION) @OZ32566 P5172800
         CLC   =C'JES',ERANLSY2    &VERSION DUPLICATE 'JES'... @OZ32566 P5172900
         BNE   ERRASIDL            BR IF NO                    @OZ32566 P5173000
         MVC   ERANLSY2(4),=C'REL '     ELSE BUILD             @OZ32566 P5173100
         MVC   ERANLSY2+4(3),ERANLVER+5  RELEASE               @OZ32566 P5173200
         MVI   ERANLSY2+7,C' '            IDENTIFICATION       @OZ32566 P5173300
         SPACE 1                                               @OZ32566 P5173400
ERRASIDL MVC   ERMSGWRK(ERANSYSL),ERANLSYS TYPE SYSTEM-ID      @OZ32566 P5173500
         BAL   WE,ERRWTO                    LINE               @OZ32566 P5173600
         EJECT                                                 @OZ32566 P5173700
****************************************************************OZ32566 P5173800
*                                                              *OZ32566 P5173900
*        CURRENT DATE, TIME                                    *OZ32566 P5174000
*                                                              *OZ32566 P5174100
****************************************************************OZ32566 P5174200
         SPACE 1                                               @OZ32566 P5174300
         TIME  DEC                 GET CURRENT TIME AND DATE   @OZ32566 P5174400
         STM   R0,R1,ERRDWORK      SAVE TIME AND DATE          @OZ32566 P5174500
         MVC   ERANLDT1-1(7),ERANLMD     EDIT                  @OZ32566 P5174600
         ED    ERANLDT1-1(7),ERRDWORK+5   DATE                 @OZ32566 P5174700
         MVC   ERANLDT2-1(9),ERANLMT       AND                 @OZ32566 P5174800
         ED    ERANLDT2-1(9),ERRDWORK       TIME               @OZ32566 P5174900
         SPACE 1                                               @OZ32566 P5175000
         MVC   ERMSGWRK(ERANLDTL),ERANLDT TYPE DATE AND        @OZ32566 P5175100
         BAL   WE,ERRWTO                   TIME LINE           @OZ32566 P5175200
         SPACE 1                                               @OZ32566 P5175300
****************************************************************OZ32566 P5175400
*                                                              *OZ32566 P5175500
*        ABEND DESCRIPTION                                     *OZ32566 P5175600
*                                                              *OZ32566 P5175700
****************************************************************OZ32566 P5175800
         SPACE 1                                               @OZ32566 P5175900
         MVI   ERANLDS1,C' '                  CLEAR DESCRIPTION@OZ32566 P5176000
         MVC   ERANLDS1+1(L'ERANLDS1-1),ERANLDS1  AREA         @OZ32566 P5176100
         LA    R1,$ERCODET         ADDRESS OF ERROR CODE TABLE @OZ32566 P5176200
         SLR   WA,WA               CLEAR TEXT LENGTH           @OZ32566 P5176300
         SLR   WD,WD               CLEAR INFO-EXIT ADDRESS     @OZ32566 P5176400
         SPACE 1                                               @OZ32566 P5176500
ERRADLUP IC    WA,8(,R1)           GET LENGTH OF TEXT          @OZ32566 P5176600
         CLC   EELCODE,0(R1)       DOES ERROR CODE MATCH...    @OZ32566 P5176700
         BE    ERRATDES            BR IF YES                   @OZ32566 P5176800
         LA    R1,4+4+1(WA,R1)      ELSE INCR TO NEXT ENTRY    @OZ32566 P5176900
         CLI   0(R1),FF            LAST ENTRY...               @OZ32566 P5177000
         BNE   ERRADLUP            LOOP IF NO                  @OZ32566 P5177100
         B     ERRABND              ELSE SKIP DESCRIPTION      @OZ32566 P5177200
         SPACE 1                                               @OZ32566 P5177300
ERRADMOV MVC   ERANLDS1(*-*),4+4+1(R1)  *** EXECUTE ONLY ***   @OZ32566 P5177400
         SPACE 1                                               @OZ32566 P5177500
ERRATDES BCTR  WA,0                GET MACHINE LENGTH OF TEXT  @OZ32566 P5177600
         EX    WA,ERRADMOV         MOVE ERROR TEXT TO MSG      @OZ32566 P5177700
         L     WD,4(,R1)           OBTAIN INFO-EXIT ADDRESS    @OZ32566 P5177800
         MVC   ERMSGWRK(ERANDESL),ERANLDES TYPE ABEND          @OZ32566 P5177900
         BAL   WE,ERRWTO                    DESCRIPTION LINE   @OZ32566 P5178000
         EJECT                                                 @OZ32566 P5178100
****************************************************************OZ32566 P5178200
*                                                              *OZ32566 P5178300
*        ABEND CODE, FAILING MODULE (BASE + OFFSET)            *OZ32566 P5178400
*                                                              *OZ32566 P5178500
****************************************************************OZ32566 P5178600
         SPACE 1                                               @OZ32566 P5178700
ERRABND  MVC   ERANLAB0(6),=C'ABEND '   SET 'ABEND' PREFIX     @OZ32566 P5178800
         TM    EELFLAGS,EELSYSAB        WAS IT SYSTEM ABEND... @OZ32566 P5178900
         BO    *+10                     BR IF YES              @OZ32566 P5179000
         MVC   ERANLAB0(5),=C'ERROR'    ELSE SET 'ERROR' PREFIX@OZ32566 P5179100
         MVC   ERANLAB1,EELCODE         SET ABEND OR $ERROR    @OZ32566 P5179200
         MVC   ERANLAB3,ERANLAB3-1 CLEAR LOCATION TEXT         @OZ32566 P5179300
         L     R1,EELFADDR         GET FAILING ADDRESS         @OZ32566 P5179400
         LTR   R1,R1               CAN WE DETERMINE...         @OZ32566 P5179500
         BNZ   ERRABMAP            BR IF YES                   @OZ32566 P5179600
         MVC   ERANLAB2(21),=C'AT (UNKNOWN LOCATION)' SET TEXT @OZ32566 P5179700
         B     ERRABT               AND BR TO TELL OPERATOR    @OZ32566 P5179800
ERRNFIST OI    EELFLAGS,EELOUTJ    SET OUTSIDE JES FLAG        @OZ41061 P5179820
         B     ERRABT              WRITE MESSAGE               @OZ41061 P5179840
         SPACE 1                                               @OZ32566 P5179900
ERRABMAP BAL   WE,ERMODMAP         FIND MODULE MAP ENTRY       @OZ32566 P5180000
         MVC   ERANLAB2(14),=C'IN LOW-STORAGE'   LOW-STORAGE...@OZ32566 P5180100
         BL    ERRNFIST            BRANCH IF YES               @OZ41061 P5180200
         MVC   ERANLAB2(15),=C'IN HIGH-STORAGE'  HIGH-STORAGE..@OZ32566 P5180300
         BH    ERRNFIST            BRANCH IF YES               @OZ41061 P5180400
         MVC   ERANLAB2,=C'AT'      ELSE FORMAT                @OZ32566 P5180500
         LA    WA,ERANLAB3           ASSEMBLY NAME,            @OZ32566 P5180600
         BAL   WE,ERBASOFF            BASE, AND OFFSET         @OZ32566 P5180700
         SPACE 1                                               @OZ32566 P5180800
ERRABT   MVC   ERMSGWRK(ERANLABL),ERANLAB TYPE ERROR CODE      @OZ32566 P5180900
         BAL   WE,ERRWTO                   AND LOCATION LINE   @OZ32566 P5181000
         EJECT                                                 @OZ32566 P5181100
****************************************************************OZ32566 P5181200
*                                                              *OZ32566 P5181300
*        CALLING SEQUENCE                                      *OZ32566 P5181400
*                                                              *OZ32566 P5181500
****************************************************************OZ32566 P5181600
         SPACE 1                                               @OZ32566 P5181700
         L     WB,EELPCE           GET ADDR OF FAILING PCE     @OZ32566 P5181800
         LTR   WB,WB               VALID PCE ADDRESS...        @OZ32566 P5181900
         BNZ   ERRAFIST            BR IF YES                   @OZ32566 P5182000
         MVC   ERMSGWRK(ERANR13L),ERANLR13 ELSE TELL OF        @OZ32566 P5182100
         BAL   WE,ERRWTO                    INVALID R13        @OZ32566 P5182200
         B     ERRAFIST                      BR TO CONTINUE    @OZ32566 P5182300
         SPACE 1                                               @OZ32566 P5182400
         DROP  R13                 PROVIDE LOCAL               @OZ32566 P5182900
         USING PCEDSECT,WB          PCE ADDRESSABILITY         @OZ32566 P5183000
         SPACE 1                                               @OZ32566 P5183100
*              THIS LINE DELETED BY APAR NUMBER                @OZ32566 P5184000
*              THIS LINE DELETED BY APAR NUMBER                @OZ32566 P5185000
****************************************************************OZ32566 P5186000
*                                                              *OZ32566 P5186400
*        FAILING INSTRUCTION                                   *OZ32566 P5186500
*                                                              *OZ32566 P5186600
****************************************************************OZ32566 P5186700
         SPACE 1                                               @OZ32566 P5186800
ERRAFIST TM    EELFLAGS,EELSYSAB   SYSTEM ABEND...             @OZ32566 P5186900
         BZ    ERRAPCE             BR IF NO ($ERROR)           @OZ32566 P5187000
         L     R1,EELFADDR         ADDRESS OF FAILURE          @OZ32566 P5187100
         LTR   R1,R1               VALID ADDRESS...            @OZ32566 P5187200
         BZ    ERRAPSW             BR IF NO                    @OZ32566 P5187300
         TM    EELFLAGS,EELOUTJ    IS ADDR OUTSIDE OF JES...   @OZ41061 P5187320
         BO    ERRAPSW             BRANCH IF YES               @OZ41061 P5187340
         UNPK  ERANLIN1(13),0(7,R1)  ELSE FORMAT               @OZ32566 P5187400
         TR    ERANLIN1,$HEXTRAN      FAILING                  @OZ32566 P5187500
         MVI   ERANLIN1+12,C' '        INSTRUCTION             @OZ32566 P5187600
         SLR   R1,R1               USE                         @OZ32566 P5187700
         IC    R1,EELILC            ILC FOR                    @OZ32566 P5187800
         ALR   R1,R1                 LENGTH OF                 @OZ32566 P5187900
         LA    R1,ERANLIN1(R1)        INSTRUCTION              @OZ32566 P5188000
         MVC   0(8,R1),$BLANKS         DISPLAY                 @OZ32566 P5188100
         MVC   ERMSGWRK(ERANINSL),ERANLINS TYPE FAILING        @OZ32566 P5188200
         BAL   WE,ERRWTO                    INSTRUCTION LINE   @OZ32566 P5188300
         EJECT                                                 @OZ36762 P5188400
****************************************************************OZ32566 P5188500
*                                                              *OZ32566 P5188600
*        PSW, ILC, IC                                          @OZ36762 P5188700
*                                                              *OZ32566 P5188800
****************************************************************OZ32566 P5188900
         SPACE 1                                               @OZ32566 P5189000
ERRAPSW  OC    EELPSW(8),EELPSW    PSW VALID...                @OZ32566 P5189100
         BZ    ERRAPCE             BR IF NO                    @OZ36762 P5189200
         UNPK  ERANLPS1(9),EELPSW(5)   FORMAT                  @OZ32566 P5189300
         UNPK  ERANLPS2(9),EELPSW+4(5)  LEFT AND               @OZ32566 P5189400
         TR    ERANLPS1,$HEXTRAN         RIGHT                 @OZ32566 P5189500
         TR    ERANLPS2,$HEXTRAN          HALVES OF            @OZ32566 P5189600
         MVI   ERANLPS1+L'ERANLPS1,C' '    PSW AT TIME         @OZ32566 P5189700
         MVI   ERANLPS2+L'ERANLPS2,C' '     OF ABEND           @OZ32566 P5189800
         MVC   ERANLPS3,EELILC     FORMAT                      @OZ32566 P5189900
         OI    ERANLPS3,X'F0'       ILC                        @OZ32566 P5190000
         UNPK  ERANLPS4(3),EELIC(2)  FORMAT                    @OZ36762 P5190020
         TR    ERANLPS4,$HEXTRAN      INTERRUPT                @OZ36762 P5190040
         MVI   ERANLPS4+2,C' '         CODE                    @OZ36762 P5190060
         MVC   ERMSGWRK(ERANPSWL),ERANLPSW TYPE PSW AND        @OZ32566 P5190100
         BAL   WE,ERRWTO                    ILC LINE           @OZ32566 P5190200
         EJECT                                                 @OZ32566 P5190300
****************************************************************OZ32566 P5190400
*                                                              *OZ32566 P5190500
*        PCE NAME, PCE ADDRESS, JOB NAME, JOB NUMBER           *OZ32566 P5190600
*                                                              *OZ32566 P5190700
****************************************************************OZ32566 P5190800
         SPACE 1                                               @OZ32566 P5190900
ERRAPCE  L     WD,EELPCE           FAILING PCE ADDRESS         @OZ32566 P5191000
         LTR   WD,WD               PCE ADDRESS VALID...        @OZ32566 P5191100
         BZ    ERRAREGS            BR IF NO                    @OZ32566 P5191200
         MVC   ERANLPC6,ERANLPC6-1 CLEAR JOB-PORTION OF MESSAGE@OZ32566 P5191300
         LA    WA,=CL8'INVALID'    POINT TO ERROR NAME         @OZ32566 P5191400
         SLR   R1,R1               GET UNIQUE                  @OZ32566 P5191500
         IC    R1,PCEID+1           PCE ID                     @OZ32566 P5191600
         SLL   R1,3                 ELSE GET PCE               @OZ32566 P5191900
         LA    R1,$PCENAMT(R1)       NAME TABLE ENTRY          @OZ32566 P5192000
         CLI   0(R1),C' '          VALID ENTRY...              @OZ32566 P5192100
         BE    ERRAPNAM            BR IF NO                    @OZ32566 P5192200
         LR    WA,R1               POINT TO PCE NAME ENTRY     @OZ32566 P5192300
         CLI   0(R1),C'*'          DEVICE PCE...               @OZ32566 P5192400
         BNE   ERRAPNAM            BR IF NO                    @OZ32566 P5192500
         USING DCTDSECT,R1         PROVIDE DCT ADDRESSABLITY   @OZ32566 P5192700
         SPACE 1                                               @OZ32566 P5192800
         L     R1,PCEDCT           ADDR OF PCE'S DCT           @OZ32566 P5192900
         LA    WA,DCTDEVN          POINTER TO DEVICE NAME      @OZ32566 P5193000
         SPACE 1                                               @OZ32566 P5193100
ERRAPNAM MVC   ERANLPC1,0(WA)      SET PCE NAME OR 'INVALID'   @OZ32566 P5193200
         UNPK  ERANLPC2(7),EELPCE+1(4)  FORMAT                 @OZ32566 P5193300
         TR    ERANLPC2,$HEXTRAN         PCE                   @OZ32566 P5193400
         MVI   ERANLPC2+6,C')'            ADDRESS              @OZ32566 P5193500
         SPACE 1                                               @OZ32566 P5193600
         USING JQEDSECT,R1         PROVIDE JQE ADDRESSABILITY  @OZ32566 P5193700
         SPACE 1                                               @OZ32566 P5193800
         L     R1,PCEJQE           GET CURRENT JQE ADDRESS     @OZ32566 P5193900
         LTR   R1,R1               ANY JQE AVAILABLE...        @OZ32566 P5194000
         BZ    ERRAPTYP            BR IF NO                    @OZ32566 P5194100
         MVC   ERANLPC5,JQEJNAME   SET JOB NAME                @OZ32566 P5194200
         LH    R1,JQEJOBNO         GET INTERNAL JOB NUMBER     @OZ32566 P5194300
         SPACE 1                                               @OZ32566 P5194400
         DROP  R1,WB               KILL JQE/PCE ADDRESSABILITY @OZ32566 P5194500
         EJECT                                                 @OZ32566 P5194600
         USING PCEDSECT,R13        RESTORE PCE ADDRESSABILITY  @OZ32566 P5194700
         SPACE 1                                               @OZ32566 P5194800
         MVC   ERANLPC3,=C'JOB'    ASSUME                      @OZ32566 P5194900
         CH    R1,=H'10000'         BATCH JOB                  @OZ32566 P5195000
         BL    ERRAPJNO            BR IF CORRECT               @OZ32566 P5195100
         MVC   ERANLPC3,=C'TSU'     ELSE ASSUME                @OZ32566 P5195200
         SH    R1,=H'20000'          TSU JOB                   @OZ32566 P5195300
         BNM   ERRAPJNO            BR IF CORRECT               @OZ32566 P5195400
         MVC   ERANLPC3,=C'STC'     ELSE IT'S AN               @OZ32566 P5195500
         AH    R1,=H'10000'          STC JOB                   @OZ32566 P5195600
         SPACE 1                                               @OZ32566 P5195700
ERRAPJNO CVD   R1,ERRDWORK            FORMAT                   @OZ32566 P5195800
         UNPK  ERANLPC4,ERRDWORK+5(3)  JOB                     @OZ32566 P5195900
         OI    ERANLPC4+3,X'F0'         NUMBER                 @OZ32566 P5196000
         SPACE 1                                               @OZ32566 P5196100
ERRAPTYP MVC   ERMSGWRK(ERANPCEL),ERANLPCE TYPE PCE AND        @OZ32566 P5196200
         BAL   WE,ERRWTO                    JOB LINE           @OZ32566 P5196300
         SPACE 1                                               @OZ32566 P5196400
****************************************************************OZ32566 P5196500
*                                                              *OZ32566 P5196600
*        REGISTERS AT TIME OF ABEND                            *OZ32566 P5196700
*                                                              *OZ32566 P5196800
****************************************************************OZ32566 P5196900
         SPACE 1                                               @OZ32566 P5197000
ERRAREGS TM    EELFLAGS,EELREGSA   REGISTERS AVAILABLE         @OZ32566 P5197100
         BZ    ERRABOT             BR IF NO                    @OZ32566 P5197200
         LA    WB,EELREGS          POINT TO REGISTERS          @OZ32566 P5197300
         LA    WC,4                TYPE 4 LINES                @OZ32566 P5197400
         SPACE 1                                               @OZ32566 P5197500
ERRARG1  LA    WD,ERANLRG2         POINT TO MESSAGE AREA       @OZ32566 P5197600
         LA    WE,4                TYPE 4 PER LINE             @OZ32566 P5197700
         LA    R1,0(WC,WC)         INSERT                      @OZ32566 P5197800
         LA    R1,ERANLRNO-2(R1)    REGISTER                   @OZ32566 P5197900
         MVC   ERANLRG1,0(R1)        NUMBER                    @OZ32566 P5198000
         SPACE 1                                               @OZ32566 P5198100
ERRARG2  UNPK  0(9,WD),0(5,WB)     EDIT                        @OZ32566 P5198200
         MVI   8(WD),C' '           NEXT                       @OZ32566 P5198300
         TR    0(8,WD),$HEXTRAN      REGISTER                  @OZ32566 P5198400
         LA    WB,4(,WB)           INCR SOURCE POINTER         @OZ32566 P5198500
         LA    WD,9(,WD)           INCR TARGET POINTER         @OZ32566 P5198600
         BCT   WE,ERRARG2          LOOP FOR THIS LINE          @OZ32566 P5198700
         SPACE 1                                               @OZ32566 P5198800
         MVC   ERMSGWRK(ERANREGL),ERANLREG TYPE REGISTER       @OZ32566 P5198900
         BAL   WE,ERRWTO                    LINE               @OZ32566 P5199000
         BCT   WC,ERRARG1          LOOP FOR ALL 4 LINES        @OZ32566 P5199100
         SPACE 2                                               @OZ32566 P5199200
ERRABOT  MVC   ERMSGWRK(ERANBOTL),ERANLBOT TYPE BOTTOM LINE    @OZ32566 P5199300
         BAL   WE,ERRWTO                    LINE               @OZ32566 P5199400
         SPACE 1                                               @OZ32566 P5199500
ERRARET  L     LINK,ERRLINK        RESTORE RETURN ADDRESS      @OZ32566 P5199600
         BR    LINK                 AND RETURN TO CALLER       @OZ32566 P5199700
         EJECT                                                 @OZ32566 P5199800
****************************************************************OZ32566 P5199900
*                                                              *OZ32566 P5200000
*        ERMODMAP - SUBROUTINE TO LOCATE JES2 MODULE MAP ENTRY *OZ32566 P5200100
*                                                              *OZ32566 P5200200
*        R1    - ADDRESS TO LOCATE                             *OZ32566 P5200300
*        WE    - RETURN ADDRESS                                *OZ32566 P5200400
*                                                              *OZ32566 P5200500
* EXIT   CC    - LOW  - ADDRESS IS BELOW JES2 TASK (LOW-STOR)  *OZ32566 P5200600
*              - HIGH - ADDRESS IS ABOVE JES2 TASK (HIGH-STOR) *OZ32566 P5200700
*              - ZERO - R1 = MODULE MAP ENTRY                  *OZ32566 P5200800
*                       R0 = DISPLACEMENT WITHIN ASSEMBLY      *OZ32566 P5200900
*        WA-WC,WF - UNPREDICTABLE                              *OZ32566 P5201000
*                                                              *OZ32566 P5201100
****************************************************************OZ32566 P5201200
         SPACE 1                                               @OZ32566 P5201300
         USING PSADSECT,R0         PROVIDE PSA ADDRESSABILITY  @OZ32566 P5201400
         USING TCBDSECT,WA         PROVIDE TCB ADDRESSABILITY  @OZ32566 P5201500
         SPACE 1                                               @OZ32566 P5201600
ERMODMAP L     WA,PSATOLD          ADDRESS OF TCB              @OZ32566 P5201700
*              THIS LINE DELETED BY APAR NUMBER              * @OZ44707 P5201800
         SPACE 1                                               @OZ32566 P5201900
         DROP  WA                  KILL TCB ADDRESSABILITY     @OZ32566 P5202000
         SPACE 1                                               @OZ44707 P5202020
         L     WA,TCBRBP-TCBDSECT(,WA) GET ADDR OF RB          @OZ44707 P5202040
ERMTRB   TM    RBSTAB2-RBDSECT(WA),RBTCBNXT TOP OF RB QUEUE... @OZ44707 P5202060
         BO    ERMTTRB             YES, FOUND TOP RB           @OZ44707 P5202080
         L     WA,RBLINK-RBDSECT(,WA) ELSE GET NEXT RB         @OZ44707 P5202100
         B     ERMTRB              TRY AGAIN                   @OZ44707 P5202120
ERMTTRB  L     WA,RBCDE-RBDSECT(,WA) GET THE CDE               @OZ44707 P5202140
         L     WA,20(,WA)          ADDR OF EXTENTS LIST (XTLST)@OZ32566 P5202200
         L     WC,12(,WA)          WC = START OF JES2 MODULE   @OZ32566 P5202300
         L     WF,8(,WA)           WF = END OF                 @OZ32566 P5202400
         LA    WF,0(WC,WF)               JES2 MODULE           @OZ32566 P5202500
         CLR   R1,WC               LOW STORAGE...              @OZ32566 P5202600
         BLR   WE                  RETURN IF YES               @OZ32566 P5202700
         CLR   R1,WF               HIGH STORAGE...             @OZ32566 P5202800
         BHR   WE                  RETURN IF YES               @OZ32566 P5202900
         LR    WA,R1               SAVE DESIRED ADDRESS        @OZ32566 P5203000
         L     R1,$HASPMAP         ADDRESS OF JES2 MODULE MAP  @OZ32566 P5203100
         LA    R1,MAPENTL(,R1)      AFTER HASPABS ENTRY        @OZ32566 P5203200
         LA    WB,MAPMODS-1        COUNT OF ENTRIES (- HASPABS)@OZ32566 P5203300
         MVI   ERRDWORK,FF         INITIALIZE OFFSET AND    +0 @OZ32566 P5203400
         MVC   ERRDWORK+4(4),$ZEROS  MODMAP-ADDRESS ENTRIES +4 @OZ32566 P5203500
         EJECT                                                 @OZ32566 P5203600
ERMODLUP CLI   MAPNAME+4(R1),C'S'  SKIP SUBSYSTEM-             @OZ32566 P5203700
         BE    ERMODINC             INTERFACE ENTRIES          @OZ32566 P5203800
         CLC   MAPDISPL(,R1),$ZEROS  SKIP SECONDARY            @OZ32566 P5203900
         BNE   ERMODINC               ENTRY POINTS             @OZ32566 P5204000
         LR    R0,WA               COMPUTE OFFSET              @OZ32566 P5204100
         S     R0,MAPADDR(,R1)      WITHIN THIS ASSEMBLY       @OZ32566 P5204200
         BM    ERMODINC            SKIP IF BEFORE THIS ASSEMBLY@OZ32566 P5204300
         CL    R0,ERRDWORK         LESS THAN PREVIOUS OFFSET...@OZ32566 P5204400
         BH    ERMODINC            SKIP IF NO                  @OZ32566 P5204500
         STM   R0,R1,ERRDWORK       ELSE SAVE NEW-BEST-CHOICE  @OZ32566 P5204600
         SPACE 1                                               @OZ32566 P5204700
ERMODINC LA    R1,MAPENTL(,R1)     INCR TO NEXT MODMAP ENTRY   @OZ32566 P5204800
         BCT   WB,ERMODLUP         LOOP THRU ALL ENTRIES       @OZ32566 P5204900
         SPACE 1                                               @OZ32566 P5205000
         LM    R0,R1,ERRDWORK      GET OFFSET AND MODMAP ENTRY @OZ32566 P5205100
         CLI   ERRDWORK,00         WAS ASSEMBLY FOUND...       @OZ32566 P5205200
         BER   WE                  RETURN IF YES (CC=ZERO)     @OZ32566 P5205300
         CLI   *,FF                 ELSE RETURN                @OZ32566 P5205400
         BR    WE                    WITH CC=LOW               @OZ32566 P5205500
         SPACE 1                                               @OZ32566 P5205600
         DROP  R0                  KILL PSA ADDRESSABILITY     @OZ32566 P5205700
         EJECT                                                 @OZ32566 P5205800
****************************************************************OZ32566 P5205900
*                                                              *OZ32566 P5206000
*        ERBASOFF - SUBROUTINE TO FORMAT ASSEMBLY BASE AND     *OZ32566 P5206100
*                   OFFSET                                     *OZ32566 P5206200
*        R0    - ASSEMBLY OFFSET                               *OZ32566 P5206300
*        R1    - ADDR OF JES2 MODULE MAP ENTRY                 *OZ32566 P5206400
*        WE    - RETURN ADDRESS                                *OZ32566 P5206500
*        WA    - ADDR OF AREA FOR FORMATTED OUTPUT AS FOLLOWS..*OZ32566 P5206600
*                                                              *OZ32566 P5206700
* EXAMPLE      - HASPRTAM (0974E0) + X'2E20'    (27 CHARS)     *OZ32566 P5206800
*                ---------------------------                   *OZ32566 P5206900
*                                                              *OZ32566 P5207000
****************************************************************OZ32566 P5207100
         SPACE 1                                               @OZ32566 P5207200
ERBASOFF ST    R0,ERRDWORK         STORE ASSEMBLY OFFSET       @OZ32566 P5207300
         MVC   00(8,WA),MAPNAME(R1)  SET ASSEMBLE NAME         @OZ32566 P5207400
         MVC   08(2,WA),=C' ('        SET                      @OZ32566 P5207500
         UNPK  10(7,WA),MAPADDR+1(,R1) ASSEMBLY                @OZ32566 P5207600
         TR    10(6,WA),$HEXTRAN        BASE                   @OZ32566 P5207700
         MVC   16(6,WA),=C') + X'''      ADDRESS               @OZ32566 P5207800
         UNPK  22(5,WA),ERRDWORK+2(3)     AND OFFSET           @OZ32566 P5207900
         TR    22(4,WA),$HEXTRAN           WITHIN              @OZ32566 P5208000
         MVI   26(WA),C''''                 ASSEMBLY           @OZ32566 P5208100
         BR    WE                  RETURN TO CALLER            @OZ32566 P5208200
         SPACE 2                                               @OZ32566 P5208300
****************************************************************OZ32566 P5208400
*                                                              *OZ32566 P5208500
*        ERRWTO - ISSUE MESSAGE TO OPERATOR VIA $$WTOR         *OZ32566 P5208600
*                                                              *OZ32566 P5208700
*        R1    - ADDRESS OF LIST-FORM WTO                      *OZ32566 P5208800
*        WE    - RETURN ADDRESS                                *OZ32566 P5208900
*                                                              *OZ32566 P5209000
****************************************************************OZ32566 P5209100
         SPACE 1                                               @OZ32566 P5209200
ERRWTO $$WTO   ERMSGWRK            ISSUE MESSAGE TO OPERATOR   @OZ32566 P5209300
         BR    WE                  RETURN TO CALLER            @OZ32566 P5209400
         EJECT                                                 @OZ32566 P5209500
         PUSH  PRINT               SAVE ASM PRINT STATUS       @OZ32566 P5209600
         SPACE 1                                               @OZ32566 P5209700
         AIF   ('&PRINT' NE 'OFF').ERPR                        @OZ32566 P5209800
         PRINT NOGEN               SUPPRESS MACRO EXPANSIONS   @OZ32566 P5209900
.ERPR    ANOP                                                  @OZ32566 P5210000
         SPACE 1                                               @OZ32566 P5210100
        $MID   088                 SET MESSAGE ID              @OZ32566 P5210200
ERANLTOP WTO   '&MID.---------  JES2 ABEND ANALYSIS  ----------',      CP5210300
               MF=L                                            @OZ32566 P5210400
ERANTOPL EQU   *-ERANLTOP          LENGTH OF MSG               @OZ32566 P5210450
         SPACE 1                                               @OZ32566 P5210500
ERANLSYS WTO   '&MID.SUBSYS = **** ********   MODULE = ********',      CP5210600
               MF=L                                            @OZ32566 P5210700
ERANLSY0 EQU   *-33,4+1+8          SUBSYSTEM ID + VERSION ID   @OZ32566 P5210800
ERANLSY1 EQU   *-33,4              SUBSYSTEM ID                @OZ32566 P5210900
ERANLSY2 EQU   *-28,8              VERSION ID                  @OZ32566 P5211000
ERANLSY3 EQU   *-8,8               MODULE NAME                 @OZ32566 P5211100
ERANSYSL EQU   *-ERANLSYS          LENGTH OF MSG               @OZ36762 P5211200
ERANLVER DC    CL8'&VERSION'       &VERSION ID                 @OZ36762 P5211250
         SPACE 1                                               @OZ32566 P5211300
ERANLDT  WTO   '&MID.DATE   = **.***          TIME   = **.**.**',      CP5211400
               MF=L                                            @OZ32566 P5211500
ERANLDT1 EQU   *-33,5              DATE OF ABEND               @OZ32566 P5211600
ERANLDT2 EQU   *-8,8               TIME OF ABEND               @OZ32566 P5211700
ERANLDTL EQU   *-ERANLDT           LENGTH OF MSG               @OZ36762 P5211800
ERANLMD  DC    X'4021204B202020'      MASK FOR DATE - YY.DDD   @OZ36762 P5211900
ERANLMT  DC    X'4021204B20204B2020'  MASK FOR TIME - HH.MM.SS @OZ36762 P5211950
         SPACE 1                                               @OZ32566 P5212000
ERANLDES WTO   '&MID.DESC = ***********************************',      CP5212100
               MF=L                                            @OZ32566 P5212200
ERANLDS1 EQU   *-35,35             ERROR DESCRIPTION           @OZ32566 P5212300
ERANDESL EQU   *-ERANLDES          LENGTH OF MSG               @OZ32566 P5212350
         SPACE 1                                               @OZ32566 P5212400
ERANLAB  WTO   '&MID.ABEND S*** AT ******** (******) + X/****/',       CP5212500
               MF=L                                            @OZ32566 P5212600
ERANLAB0 EQU   *-41,41             ENTIRE MSG TEXT             @OZ32566 P5212700
ERANLAB1 EQU   *-35,4              ABEND CODE                  @OZ32566 P5212800
ERANLAB2 EQU   *-30,2              'AT' OR 'IN'                @OZ32566 P5212900
ERANLAB3 EQU   *-27,27             JES2 ASSEMBLY ID            @OZ32566 P5213000
ERANLABL EQU   *-ERANLAB           LENGTH OF MSG               @OZ32566 P5213050
         EJECT                                                 @OZ36762 P5213100
ERANLCAL WTO   '&MID.--- CALLED BY ******** (******) + X/****/',       CP5213200
               MF=L                                            @OZ32566 P5213300
ERANLCL1 EQU   *-27,27             CALLING ASSEMBLY ID         @OZ32566 P5213400
         SPACE 1                                               @OZ32566 P5213500
ERANLINS WTO   '&MID.FAILING INSTR WAS ************        ',  @OZ32566CP5213600
               MF=L                                            @OZ32566 P5213650
ERANLIN1 EQU   *-20,12             FAILING INSTRUCTION         @OZ32566 P5213700
ERANINSL EQU   *-ERANLINS          LENGTH OF MSG               @OZ32566 P5213750
         SPACE 1                                               @OZ32566 P5213800
ERANLPSW WTO   '&MID.PSW  = ******** ******** ILC = *  IC = ** ',      CP5213900
               MF=L                                            @OZ32566 P5214000
ERANLPS1 EQU   *-35,8              ABEND PSW  (LEFT  HALF)     @OZ36762 P5214100
ERANLPS2 EQU   *-26,8              ABEND PSW  (RIGHT HALF)     @OZ36762 P5214200
ERANLPS3 EQU   *-11,1              ABEND INST LENGTH IN H-WORDS@OZ36762 P5214250
ERANLPS4 EQU   *-3,2               INTERRUPT CODE              @OZ36762 P5214300
ERANPSWL EQU   *-ERANLPSW          LENGTH OF MSG               @OZ32566 P5214350
         SPACE 1                                               @OZ36762 P5214400
ERANLPCE WTO   '&MID.PCE  = ******** (******) JOB **** ********',      CP5214500
               MF=L                                            @OZ32566 P5214600
ERANLPC1 EQU   *-35,8              PCE NAME                    @OZ32566 P5214700
ERANLPC2 EQU   *-25,6              PCE ADDRESS                 @OZ32566 P5214800
ERANLPC3 EQU   *-17,3              'JOB', 'STC', 'TSU'         @OZ32566 P5214900
ERANLPC4 EQU   *-13,4              JOB NUMBER                  @OZ32566 P5215000
ERANLPC5 EQU   *-8,8               JOB NAME                    @OZ32566 P5215100
ERANLPC6 EQU   ERANLPC3,*-ERANLPC3 ENTIRE JOB TEXT             @OZ32566 P5215200
ERANPCEL EQU   *-ERANLPCE          LENGTH OF MSG               @OZ32566 P5215250
         SPACE 1                                               @OZ32566 P5215300
ERANLREG WTO   '&MID.R**  = ******** ******** ******** ******** ',     CP5215400
               MF=L                                            @OZ32566 P5215500
ERANLRG1 EQU   *-(4*9)-6,2         STARTING REG NO. ON THIS LNE@OZ32566 P5215600
ERANLRG2 EQU   *-(4*9),4*9         REGISTER CONTENTS           @OZ32566 P5215700
ERANREGL EQU   *-ERANLREG          LENGTH OF MSG               @OZ36762 P5215800
ERANLRNO DC    C'128 4 0 '         REGISTER NUMBERS            @OZ36762 P5215850
         SPACE 1                                               @OZ32566 P5215900
ERANLBOT WTO   '&MID.------------------------------------------',      CP5216000
               MF=L                                            @OZ32566 P5216100
ERANBOTL EQU   *-ERANLBOT           LENGTH OF MSG              @OZ32566 P5216150
         EJECT                                                 @OZ36762 P5216160
        $MID   080                                             @OZ32566 P5216200
ERDMPING WTO   '&MID.JES2 SYSTEM DUMP IN PROGRESS',MF=L        @OZ32566 P5216300
ERDMPNGL EQU   *-ERDMPING           LENGTH OF MSG              @OZ32566 P5216350
         SPACE 1                                               @OZ32566 P5216400
        $MID   081                                             @OZ32566 P5216500
ERDUMPNG WTO   '&MID.JES2 SYSTEM DUMP UNSUCCESSFUL',MF=L       @OZ32566 P5216600
ERDUMPNL EQU   *-ERDUMPNG           LENGTH OF MSG              @OZ32566 P5216650
         SPACE 1                                               @OZ32566 P5217000
        $MID   083                                             @OZ36762 P5217100
ERANLR13 WTO   '&MID.R13 NOT A VALID PCE ADDRESS',MF=L         @OZ32566 P5217200
ERANR13L EQU   *-ERANLR13           LENGTH OF MSG              @OZ32566 P5217250
         SPACE 1                                               @OZ32566 P5217300
        $MID   084                                             @OZ32566 P5217400
ERANLSVE WTO   '&MID.INVALID SAVE AREA CHAIN',MF=L             @OZ32566 P5217500
         SPACE 1                                               @OZ32566 P5217600
        $MID   095                                             @OZ32566 P5217700
ERRORMSG WTO   '&MID.JES2 CATASTROPHIC ERROR.  CODE = ****  ', @OZ32566CP5217800
               MF=L                                            @OZ32566 P5217820
ERRORME  EQU   *                                               @OZ32566 P5217850
ERRORMS1 EQU   *-39,39             DEFAULT DUMP TITLE          @OZ32566 P5217900
ERRORMCD EQU   *-6,4               ABEND CODE                  @OZ32566 P5218000
ERRORMSL EQU   *-ERRORMSG          LENGTH OF MSG               @OZ32566 P5218100
         SPACE 1                                               @OZ32566 P5218200
        $MID   098                                             @OZ32566 P5218300
ERTERMSG WTOR  '&MID.ENTER TERMINATION OPTION',  ASK OPERATOR  @OZ32566CP5218400
               EROPTION,L'EROPTION+L'ERDUMPT,ERRDWORK,MF=L     @OZ32566 P5218500
ERTERMSL EQU   *-ERTERMSG          LENGTH OF MSG               @OZ32566 P5218550
EROPTION DS    CL4                 TERMINATION OPTION          @OZ32566 P5218600
ERDUMPT  DS    0CL100              DUMP TITLE (MAX 100 BYTES ) @OZ32566 P5218700
ERDUMPT1 DS    CL(L'ERANLAB0)           ABEND AND LOCATION     @OZ32566 P5219000
         DS    CL4                                             @OZ32566 P5220000
ERDUMPT2 DS    CL(L'ERANLDS1)           ABEND DESCRIPTION      @OZ32566 P5221000
         DS    CL2                                             @OZ32566 P5222000
ERDUMPT3 DS    CL(L'ERANLSY0)           SUBSYS IDENTIFICATION  @OZ32566 P5223000
         ORG   ERDUMPT+100              PAD OUT FOR 100 BYTES  @OZ32566 P5223100
ERMSGWRK DS    0F                  ALIGN MSG WORK AREA FULLWRD @OZ32566 P5223200
         DS    CL100               $$WTO MSG WORK AREA         @OZ32566 P5223300
EEL      DS    XL(EELSIZE)         ESTAE ELEMENT               @OZ32566 P5223400
         SPACE 1                                               @OZ32566 P5224000
         POP   PRINT               RESTORE ASM PRINT STATUS    @OZ32566 P5224100
         EJECT                                                 @OZ32566 P5224200
         SPACE 5                                               @OZ36762 P5224300
$ERRORSA DS    0D                                              @OZ32566 P5224400
         DC    CL8'ERRORSAV'       EYE-CATCHER FOR DUMP        @OZ32566 P5224500
ERRORSAV DC    16A(*-*)            REGISTERS AT ENTRY          @OZ32566 P5224600
ERRXSAVE DC    18A(*-*)            SAVE AREA FOR EXTERNAL RTNS @OZ27300 P5224700
ERRLINK  DC    01A(*-*)            LINKAGE REGISTER SAVE AREA  @OZ32566 P5225000
ERRDWORK DS    D                   DOUBLE WORD SAVE AREA       @OZ32566 P5226000
         EJECT                                                 @OZ32566 P5227000
*********************************************************************** P5228000
*                                                                     * P5229000
*        $HEXIT - ENTRY FROM COMMAND PROCESSOR TO WITHDRAW            * P5230000
*                                                                     * P5231000
*********************************************************************** P5232000
         SPACE 1                                                     R4 P5233000
$HEXIT   L     BASE2,HABENDA-*(,R15)  ESTABLISH COMMON         @OZ36762 P5234000
         LA    R10,2048(,BASE2)        EXIT ROUTINE            @OZ36762 P5235000
         LA    R10,2048(,R10)           BASE REGISTERS         @OZ36762 P5235200
         MVI   HEXITFLG,HEXPJES2   SHOW ENTERED VIA $PJES2     @OZ36762 P5235400
         LA    R13,ERRXSAVE        PROVIDE EXTERNAL SAVE AREA  @OZ36762 P5235600
         B     HEXIT               BR TO CONTINUE              @OZ36762 P5236000
         SPACE 1                                               @OZ36762 P5237000
HABENDA  DC    A($ABEND)           EXIT ROUTINE BASE ADDRESS   @OZ36762 P5238000
         SPACE 1                                               @OZ36762 P5239000
         USING DCTDSECT,WA                                     @OZ45485 P5240000
         USING IHADCB,WC                                       @OZ45485 P5241000
         USING DEBBASIC,WF                                     @OZ45485 P5241100
HEXIT    DS    0H                                              @OZ45485 P5241200
         XC    PPL(16),PPL         CLEAR PURGE PARM LIST.      @OZ45485 P5241300
         MVI   PPLOPT1,PPLDS+PPLPOST+PPLHIO  SET PURGE PARMS   @OZ45485 P5241400
         ICM   WA,7,$DCTPOOL+1     GET FIRST JES2DCT           @OZ45485 P5241500
HEXITA   DS    0H                                              @OZ45485 P5241600
         TM    MDCTTYPE,DCTPSNA    IS THIS A SNA DEVICE        @OZ45485 P5241700
         BO    HEXITB              IF YES, GET NEXT DCT        @OZ45485 P5241800
         ICM   WC,7,DCTDCB+1       GET DCB/ACB ADDRESS         @OZ45485 P5241900
         BZ    HEXITB              IF ZERO, GET NEXT DCT       @OZ45485 P5242000
         ICM   WF,7,DCBDEBA        GET DEB ADDRESS             @OZ45485 P5242100
         ICM   WE,7,DEBSUCBB       GET UCB ADDRESS             @OZ45485 P5242200
         BZ    HEXITB              IF ZERO, GET NEXT DCT       @OZ45485 P5242300
         STCM  WF,7,PPLDSIDA       SET DEB ADDRESS IN PPL      @OZ45485 P5242400
         LA    R1,PPL              SET PURGE PARM REG          @OZ45485 P5242500
         PURGE (R1)                HALT THIS DEVICE            @OZ45485 P5242600
HEXITB   DS    0H                                              @OZ45485 P5242700
         ICM   WA,7,DCTCHAIN+1     GET NEXT DCT                @OZ45485 P5242800
         BNZ   HEXITA              LOOP UNTIL END OF CHAIN     @OZ45485 P5242900
         DROP  WA,WC,WF                                        @OZ45485 P5243000
         USING SJBDSECT,WA                                     @OZ45485 P5243100
         USING $SVDSECT,WF                                     @OZ45485 P5243200
         L     WF,$SSVT            GET SSVT ADDRESS            @OZ45485 P5243300
         OI    $STATUS,$SYSEXIT    SHOW JES2 EXIT IN PROGRESS  @OZ36762 P5243500
         EJECT                                                 @OZ36762 P5244000
*********************************************************************** P5245000
*                                                                     * P5246000
*        REMOVE THE ATTENTION INDEXES FROM OUR UCBS.                  * P5247000
*        FOR 3211 OR 3800 PRINTERS, CLEAR THE ERROR LOG AREA POINTER  * P5248000
*        AND RESET THE OPEN DCB COUNT TO ZERO. NOTE THAT THE 3211     * P5249000
*        ERROR LOG AREAS WILL BE FREED AUTOMATICALLY BY THE SYSTEM    * P5250000
*        (SUBPOOL 255).                                               * P5251000
*                                                                     * P5252000
*********************************************************************** P5253000
         SPACE 1                                                     R4 P5254000
         SPACE 1                                                     R4 P5255000
IECITMOD EQU   X'18'               HASP ATTENTION INDEX              R4 P5256000
         SPACE 1                                                     R4 P5257000
*              THIS LINE DELETED BY APAR NUMBER                @OZ18608 P5258000
*              THIS LINE DELETED BY APAR NUMBER                @OZ18608 P5259000
         SLR   WC,WC               SET NEW INDEX                     R4 P5260000
         L     WE,PSAAOLD-PSA      ADDRESS OF OUR ASCB         @OZ18608 P5260100
         LH    WE,ASCBASID-ASCB(WE) OUR ASID                   @OZ18608 P5260200
         L     WA,CVTPTR           POINT TO CVT                      R4 P5261000
         L     WA,CVTILK2-CVT(,WA) POINT TO UCB LOOK-UP TABLE        R4 P5262000
         MODESET EXTKEY=ZERO       GET KEY ZERO                      R4 P5263000
         SPACE 1                                                     R4 P5264000
         USING UCBDSECT,R14        PROVIDE UCB ADDRESSABILITY  @OZ18608 P5265000
         SPACE 1                                                     R4 P5266000
HEXATTNL SR    R14,R14             CLEAR REG FOR UCB INSERT    @OZ18608 P5267000
         ICM   R14,3,0(WA)         INSERT UCB ADDRESS          @OZ18608 P5268000
         LA    WA,2(,WA)           UP TO NEXT ENTRY JUST IN CASE     R4 P5269000
*              THIS LINE DELETED BY APAR NUMBER                @OZ18608 P5270000
         BZ    HEXATTNL            LOOP IF DUMMY                     R4 P5271000
         CLM   R14,3,=H'-1'        TEST FOR LAST UCB           @OZ18608 P5272000
         BE    HEXATTNE            EXIT IF END                       R4 P5273000
         L     WB,UCBEXTPT         POINT TO UCB EXTENSION            R4 P5274000
         TM    $SVSTUS,$SVSTUSP    WE ARE THE PRIMARY SUBSYS   @OZ18608 P5274050
         BO    HEXPRIM             SKIP ALLOC TASK IF YES      @OZ18608 P5274100
         EJECT                                                 @OZ18608 P5274150
         CLI   UCBTBYT3,UCB3UREC   LOOP IF NOT                 @OZ18608 P5274200
         BNE   HEXATTNL             UNIT RECORD                @OZ18608 P5274250
         TM    UCBSTAT,UCBALOC     LOOP IF                     @OZ18608 P5274300
         BNO   HEXATTNL             DEVICE IS NOT ALLOCATED    @OZ18608 P5274350
         CH    WE,UCBASID-UCBCMEXT(WB) LOOP IF DEVICE IS       @OZ18608 P5274400
         BNE   HEXATTNL                 ALLOC TO SOMEONE ELSE  @OZ18608 P5274450
         B     HEXEREP             SKIP ATTENTION INDEX TEST   @OZ18608 P5274500
HEXPRIM  DS    0H                                              @OZ18608 P5274550
         CLI   UCBATI-UCBCMEXT(WB),IECITMOD IS THE ATTENTION OURS    R4 P5275000
         BNE   HEXATTNL            LOOP IF NOT                       R4 P5276000
         SPACE 1                                               @OZ18608 P5277000
HEXEREP  DS    0H                                              @OZ18608 P5277100
         L     WB,UCBXTADR              ASSUME                       R4 P5278000
         LA    WD,UCBERADR-UCBUCS(,WB)  3211 PRINTER UCB             R4 P5279000
         CLI   UCBTBYT4,UCB3211    TEST ASSUMPTION                   R4 P5280000
         BE    HEXRERAD            BR IF TRULY 3211                  R4 P5281000
         CLI   UCBTBYT4,UCB3203    TEST IF 3203                @OZ40627 P5281300
         BE    HEXRERAD            BR COMMON CODE FOR 3203/3211@OZ40627 P5281600
         LA    WD,UCBMDRBF-UCB3800X(,WB)  ELSE, ASSUME 3800          R4 P5282000
         CLI   UCBTBYT4,UCB3800    TEST ASSUMPTION                   R4 P5283000
         BNE   HEXREATI            BR IF NOT 3211 OR 3800            R4 P5284000
         ICM   WB,7,1(WD)          GET 3800 MDR AREA ADDRESS   @OZ38608 P5285000
         BZ    HEXRERAD            BR IF NOT AVAILABLE         @OZ38608 P5285200
         FREEMAIN R,LV=DYNL3800,A=(WB),SP=245 FREE 3800 MDR AREA    R41 P5286000
HEXRERAD XC    0(4,WD),0(WD)       RESET LOG AREA & OPEN DCB COUNT   R4 P5287000
         SPACE 1                                                     R4 P5288000
HEXREATI TM    $SVSTUS,$SVSTUSP    LOOP IF WE ARE NOT          @OZ18608 P5289000
         BNO   HEXATTNL             THE PRIMARY SUB SYS        @OZ18608 P5289100
         IOSGEN TP,UCB=(R14),VAR=ATNMOD,TABLE=(WC) RESET ATTN  @OZ18608 P5289200
         B     HEXATTNL            LOOP                              R4 P5290000
         SPACE 1                                                     R4 P5291000
         DROP R14                  SUSPEND UCB ADDRESSABILITY  @OZ18608 P5292000
         EJECT                                                       R4 P5293000
HEXATTNE MODESET EXTKEY=HASP       GET KEY 1                         R4 P5294000
         SPACE 1                                                     R4 P5295000
HEXCSML  $GETLOK ,                 SERIALIZE WITH DEQUEUERS          R4 P5296000
         LM    WA,WB,$SVTSCS       PICK UP CANCEL/STATUS QUEUE       R4 P5297000
         SPACE 1                                                     R4 P5298000
HEXSCL   LTR   WA,WA               TEST FOR EMPTY                    R4 P5299000
         BZ    HEXPSPD             STATUS CANCEL QUEUE EMPTY   @OZ54367 P5300000
         L     R0,SJBTCHN          PICK UP CHAIN                     R4 P5301000
         LR    R1,WB               COPY HASH                         R4 P5302000
         CDS   WA,R0,$SVTSCS       DEQUEUE ELEMENT                   R4 P5303000
         BNE   HEXSCL              LOOP                              R4 P5304000
         $FRELOK ,                 RELEASE LOCK                      R4 P5305000
         POST  ,1,MF=(E,SJBECBP)   POST ABNORMAL COMPLETION          R4 P5306000
         B     HEXCSML             LOOP                              R4 P5307000
         SPACE 1                                               @OZ54367 P5307100
HEXPSPD  ICM   WA,7,$PSOPEND+1     GET PENDING SJB ADDR        @OZ54367 P5307200
         BNZ   HEXPSOD             BR TO PROCESS IF NON-ZERO   @OZ54367 P5307300
         B     HEXSCQE             BR TO CHECK PSO QUEUE       @OZ54367 P5307400
         SPACE 1                                                     R4 P5308000
HEXPSML  $GETLOK ,                 SERIALIZE WITH DEQUEUERS          R4 P5309000
         SPACE 1                                                     R4 P5310000
HEXSCQE  LM    WA,WB,$SVPSOQ       PICK UP PROCESS SYSOUT            R4 P5311000
         EJECT                                                       R4 P5312000
HEXPSOL  LTR   WA,WA               TEST FOR EMPTY                    R4 P5313000
         BZ    HEXPSOE             PSO QUEUE EMPTY                   R4 P5314000
         L     R0,SJBTCHN          PICK UP CHAIN                     R4 P5315000
         LR    R1,WB               COPY HASP                         R4 P5316000
         CDS   WA,R0,$SVPSOQ       DEQUEUE ELEMENT                   R4 P5317000
         BNE   HEXPSOL             LOOP                              R4 P5318000
HEXPSOD $FRELOK ,                  RELEASE LOCK                @OZ54367 P5318050
         L     WC,SJBPSOP          GET PSO ADDRESS             @OZ40277 P5318100
         USING PSODSECT,WC         SET PSO ADDRESSABILITY      @OZ40277 P5318150
         OC    PSOIOTTR,PSOIOTTR   IF NO PRIOR ALLOCATIONS,    @OZ40277 P5318200
         BZ    HEXPSOP              THEN JUST POST             @OZ40277 P5318250
         GETMAIN RC,LV=PSOLNGTH,SP=241  GET A NEW PSO          @OZ40277 P5318300
         LTR   R15,R15             CHECK IF PSO GOTTEN         @OZ40277 P5318350
         BNZ   HEXPSOP             BRANCH IF NOT               @OZ40277 P5318400
         OI    PSOFLG2,PSOFDONE+PSOFPURG  INDICATE PSO PURGED  @OZ40277 P5318450
         LR    R14,WC              SET SOURCE ADDR             @OZ40277 P5318500
         LR    WC,R1               SAVE NEW PSO ADDRESS        @OZ40277 P5318550
         LR    R0,R1               POINT TO NEW PSO            @OZ40277 P5318600
         LA    R1,PSOLNGTH         SET MOVE LENGTH             @OZ40277 P5318650
         LR    R15,R1              MAKE LENGTHS EQUAL          @OZ40277 P5318700
         MVCL  R0,R14              COPY THE PSO                @OZ40277 P5318750
         L     R0,$SVPRGQ          QUEUE THE                   @OZ40277 P5318800
         ST    R0,PSONEXT           NEW PSO                    @OZ40277 P5318850
         CS    R0,WC,$SVPRGQ         TO THE                    @OZ40277 P5318900
         BNE   *-12                   PURGE QUEUE              @OZ40277 P5318950
         DROP  WC                  SUSPEND PSO ADDRESSABILITY  @OZ40277 P5319000
HEXPSOP  POST  ,1,MF=(E,SJBECBP)   POST ABNORMAL COMPLETION    @OZ40277 P5320000
         B     HEXPSML             LOOP                              R4 P5321000
         SPACE 1                                                     R4 P5322000
HEXPSOE  CLI   $SVCPOST,X'FF'      ANY TASK WANT A CELL              R4 P5323000
         BE    HEXNOCEL            BRANCH IF NOT                     R4 P5324000
         L     WA,$CCAREA          POINT TO CCA                      R4 P5325000
         USING CCADSECT,WA                                           R4 P5326000
         MVC   CCAPOST(CCACPL),$SVCPOST COPY REQUEST                 R4 P5327000
         MVI   $SVCPOST,X'FF'      SET SWITCH                        R4 P5328000
         $FRELOK ,                 RELEASE LOCK                      R4 P5329000
         LA    R0,1                SET ABNORMAL POST CODE            R4 P5330000
         POST  ,(0),MF=(E,CCAPOST) POST USER                         R4 P5331000
         B     HEXNCEL             SKIP NEXT                         R4 P5332000
         SPACE 1                                                     R4 P5333000
HEXNOCEL $FRELOK ,                 RELEASE LOCK                      R4 P5334000
         DROP  WA                                                    R4 P5335000
         EJECT                                                       R4 P5336000
HEXNCEL  CLI   $NUMSMFB,2          TEST SMF BUFFER COUNT             R4 P5337000
         BL    HEXDTACH            BR IF SMF NOT SUPPORTED           R4 P5338000
* WRITE STOP HASP SMF RECORD TYPE 45                                 R4 P5339000
         USING SMFDSECT,R1         ACCESS SMF BUFFER                 R4 P5340000
         LA    R1,HSMFBUF          POINT TO EXIT SMF 'BUFFER'        R4 P5341000
         MVI   SMFHDRTY,SMFPSSTP   STOP HASP RECORD TYPE             R4 P5342000
         MVI   SMFRDW+1,SMF45END-SMFRDW      SIZE OF SMF RECORD      R4 P5343000
         MVI   SMFSSID+1,SMFHSPID  HASP SUBSYSTEM ID                 R4 P5344000
         MVI   SMFSSLEN+1,SMF45END-SMF45IND  LENGTH OF SECTION       R4 P5345000
         TM    HEXITFLG,HEXSYS     IS THIS A NORMAL RETURN...  @OZ32566 P5346000
         BNO   HNORML              BR, YES THIS IS NORMAL RET  @OZ32566 P5347000
         OI    SMF45IND,SMF45ABN   NO                                R4 P5348000
         XR    LINK,LINK           CLEAR LINK                        R4 P5349000
         ICM   LINK,7,ERRORSAV+5   GET SDWA ADDR. OR ABEND CODE      R4 P5350000
         LA    WA,12               IS THERE A SDWA                   R4 P5351000
         C     WA,ERRORSAV         SDWA TEST                         R4 P5352000
         BNE   HSDWA               YES                               R4 P5353000
         SRL   LINK,12             SHIFT COMPLETION CODE             R4 P5354000
         STH   LINK,SMF45CC        PUT COMPLETION CODE INTO SMF      R4 P5355000
         B     HNORML              WRITE STOP HASP RECORD            R4 P5356000
         SPACE 1                                                     R4 P5357000
HSDWA    ICM   WA,7,5(LINK)        GET ABEND CODE FROM SDWA          R4 P5358000
         SRL   WA,12               SHIFT COMPLETION CODE             R4 P5359000
         STH   WA,SMF45CC          SAVE ABEND CODE FROM SDWA         R4 P5360000
         SPACE 1                                                     R4 P5361000
HNORML   NULL                      WRITE TYPE 45 RECORD              R4 P5362000
        $QUESMFB                   QUEUE TYPE 45 TO BE WRITTEN       R4 P5363000
         DROP  R1                                                    R4 P5364000
         SPACE 1                                                     R4 P5365000
* DETACH DAUGHTER TASKS                                              R4 P5366000
         SPACE 1                                                     R4 P5367000
HEXDTACH LA    WA,$DAWTER          POINT TO 1ST DAUGHTER ELEMENT     R4 P5368000
         USING DTEDSECT,WA         PROVIDE DTE ADDRESSABILITY        R4 P5369000
         LA    WB,$DAWTERS         SET NUMBER OF ELEMENTS            R4 P5370000
         EJECT                                                       R4 P5371000
HEXDETL  OC    DTETCB,DTETCB       IS TCB ACTIVE                     R4 P5372000
         BZ    HNOTSK              NO, SKIP DETACH                   R4 P5373000
         TM    DTETECB,X'40'       WAS TERMINATION ECB POSTED  @OZ40967 P5373100
         BO    HTCBDTCH            YES, DON'T POST WORK ECB    @OZ40967 P5373200
         LA    R1,DTEWECB          POINT TO WORK ECB                 R4 P5374000
         POST  (1)                 POST DAUGHTER                     R4 P5375000
         LA    R1,DTETECB          POINT TO TERMINATION ECB          R4 P5376000
         WAIT  ECB=(1)             WAIT                              R4 P5377000
HTCBDTCH LA    R1,DTETCB           POINT TO TCB ADDR POINTER   @OZ40967 P5378000
         DETACH (1)                REMOVE TCB                        R4 P5379000
         SPACE 1                                                     R4 P5380000
HNOTSK   LA    WA,$DAWTRLN(,WA)    POINT TO NEXT ELEMENT             R4 P5381000
         BCT   WB,HEXDETL          LOOP                              R4 P5382000
         EJECT                                                 @OZ26939 P5382100
*        DETACH 3800 IMAGE-LOADER DAUGHTER TASKS               @OZ26939 P5382150
         SPACE 1                                               @OZ26939 P5382200
         USING DCTDSECT,WB         PROVIDE DCT ADDRESSABILITY  @OZ26939 P5382250
         SPACE 1                                               @OZ26939 P5382300
         LA    WB,$PRTDCT-(DCTCHAIN-DCTDSECT) LOCAL PRINTERS   @OZ26939 P5382350
         SPACE 1                                               @OZ26939 P5382400
ERRNIDET ICM   WB,7,DCTCHAIN+1     ADDR OF NEXT DCT            @OZ26939 P5382450
         BZ    ERRWDRAW            BR IF NONE LEFT             @OZ35996 P5382500
         CLI   DCTDEVTP,DCTPRT     LOCAL PRINTER...            @OZ26939 P5382550
         BNE   ERRWDRAW            DONE IF NOT                 @OZ35996 P5382600
         TM    DCTPPSW2,DCTNIPRT   3800...                     @OZ26939 P5382650
         BZ    ERRNIDET            BR IF NOT                   @OZ26939 P5382700
         ICM   WA,B'0111',DCTPCE+1 GET ADDRESS OF PCE          @OZ53418 P5382750
         BZ    ERRNIDET            BR IF DCT NOT COMPLETE      @OZ53418 P5382775
         ICM   WA,7,PRIMGDTE-PCEDSECT+1(WA)  DTE EXIST...      @OZ26939 P5382800
         BZ    ERRNIDET            BR IF NO                    @OZ26939 P5382850
         OC    DTETCB,DTETCB       SUBTASK ACTIVE...           @OZ26939 P5382900
         BZ    ERRNIDET            BR IF NO                    @OZ26939 P5382950
         L     R14,DTEWECB         GET ECB FOR LATER TEST      @OZ38805 P5382975
         LA    R1,DTEWECB          ADDR OF WORK-ECB            @OZ26939 P5383000
         POST (1)                  POST HASPIMAG FOR SHUTDOWN  @OZ26939 P5383050
         LTR   R14,R14             WAS DAUGHTER WAITING        @OZ38805 P5383065
         BNM   HBSYDET             N,DETACH WITHOUT WAIT       @OZ38805 P5383080
         LA    R1,DTETECB          ADDR OF TERMINATION-ECB     @OZ26939 P5383100
         WAIT  ECB=(1)             WAIT FOR SHUTDOWN COMPLETE  @OZ26939 P5383150
         LA    R1,DTETCB           ADDR OF TCB POINTER         @OZ26939 P5383200
         DETACH (1)                REMOVE DAUGHTER TASK        @OZ26939 P5383250
         B     ERRNIDET            LOOP                        @OZ26939 P5383300
HBSYDET  LA    R1,DTETCB           GET TCB FOR DETACH          @OZ38805 P5383305
         DETACH (1),STAE=YES       DETACH DAUGHTER             @OZ38805 P5383310
         LA    R1,DTETECB          GET TERMINATION ECB         @OZ38805 P5383315
         WAIT  ECB=(1)             WAIT FOR TERMINATION        @OZ38805 P5383320
         B     ERRNIDET            CONTINUE WITH TERM          @OZ38805 P5383330
         EJECT                                                 @OZ26939 P5383350
***************************************************************@OZ35996 P5383510
*                                                              @OZ35996 P5383515
*        IF $PJES2 OR INIT ERROR, OR IF NODAL WARM START       @OZ35996 P5383520
*        HAS NOT YET COMPLETED, FREE CSA AND DE-CHAIN SSVT     @OZ35996 P5383525
*                                                              @OZ35996 P5383530
***************************************************************@OZ35996 P5383535
         SPACE 1                                               @OZ35996 P5383540
ERRWDRAW L     WF,$SSVT            GET SSVT ADDRESS            @OZ35996 P5383545
         TM    HEXITFLG,HEXPJES2+HEXINIT  BR IF $PJES2         @OZ35996 P5383550
         BNZ   ERRUNPLG                    OR INIT ERROR       @OZ35996 P5383555
         TM    $CKPTFLG,$CKPNODL   NODAL WARMSTART COMPLETE... @OZ35996 P5383560
         BZ    ERRORRET            BR IF YES                   @OZ35996 P5383565
         SPACE 1                                               @OZ35996 P5383570
ERRUNPLG L     R1,$SVSSCT          POINT TO OUR SSCT ENTRY     @OZ35996 P5383575
         MODESET EXTKEY=ZERO       ENTER KEY-ZERO              @OZ35996 P5383580
         MVC   SSCTSSVT-SSCT(,R1),$ZEROS      UN-PLUG SSVT     @OZ35996 P5383585
         NI    SSCTFLG1-SSCT(R1),FF-SSCTSFOR  RESET SSCT FLAGS @OZ35996 P5383590
         MODESET EXTKEY=HASP       RE-ENTER HASP KEY           @OZ35996 P5383595
         SPACE 1                                               @OZ35996 P5383600
***************************************************************@OZ35996 P5383605
*                                                              @OZ35996 P5383610
*        WAIT 5 SECONDS FOR SUB-SYSTEM INTERFACES TO DRAIN     @OZ35996 P5383615
*                                                              @OZ35996 P5383620
***************************************************************@OZ35996 P5383625
         SPACE 1                                               @OZ35996 P5383630
         STIMER WAIT,BINTVL=ERRWAIT,ERRET=WDRAWLUP             @OZ35996 P5383635
         EJECT                                                 @OZ35996 P5383640
***************************************************************@OZ35996 P5383645
*                                                              @OZ35996 P5383650
*        FREE ALL CSA AREAS POINTED TO BY THE SSVT             @OZ35996 P5383655
*                                                              @OZ35996 P5383660
***************************************************************@OZ35996 P5383665
         SPACE 1                                               @OZ35996 P5383670
         LA    R2,WDRAWCSA         POINT TO CSA STORAGE TABLE  @OZ35996 P5383675
         SPACE 1                                               @OZ35996 P5383680
WDRAWLUP LH    R3,0(,R2)           GET AREA POINTER OFFSET     @OZ35996 P5383685
         LA    R2,2(,R2)           POINT TO NEXT ENTRY         @OZ35996 P5383690
         L     R1,SSVT(R3)         GET CSA AREA POINTER        @OZ35996 P5383695
         LTR   R3,R3               FREEING SSVT...             @OZ35996 P5383700
         BNZ   *+8                 BR IF NO                    @OZ35996 P5383705
         L     R1,$SSVT             ELSE RELOAD SSVT ADDRESS   @OZ35996 P5383710
         LTR   R1,R1               CSA GETMAIN'D...            @OZ35996 P5383715
         BZ    WDRAWLUP            BR IF NOT GETMAIN'D         @OZ35996 P5383720
         SH    R1,=H'8'            POINT TO STORAGE PREFIX     @OZ35996 P5383725
         L     R0,4(,R1)           OBTAIN SP/LENGTH            @OZ35996 P5383730
         FREEMAIN R,LV=(0),A=(1)   FREE THE CSA STORAGE        @OZ35996 P5383735
         LTR   R3,R3               WAS THAT THE SSVT...        @OZ35996 P5383740
         BZ    HASPEXIT            BR IF YES                   @OZ35996 P5383745
         B     WDRAWLUP             ELSE LOOP                  @OZ35996 P5383750
         EJECT                                                 @OZ35996 P5383760
         SPACE 1                                               @OZ36864 P5384000
***************************************************************@OZ36864 P5384100
*                                                              @OZ36864 P5384101
*        FREE ANY SPIN/HOLD IOTS BELONGING TO CONVERTER        @OZ36864 P5384102
*                                                              @OZ36864 P5384103
***************************************************************@OZ36864 P5384104
         SPACE 1                                               @OZ36864 P5384105
         USING IOTDSECT,WC         PROVIDE IOT ADDRESSABILITY  @OZ36864 P5384106
         SPACE 1                                               @OZ36864 P5384107
ERRORRET L     WC,$SVXIOTQ         POINT TO FIRST SPIN IOT     @OZ36864 P5384108
         MVC   $SVXIOTQ,$ZEROS     CLEAR QUEUE HEAD            @OZ36864 P5384109
         SPACE 1                                               @OZ36864 P5384110
ERRNIOT  LTR   R1,WC               RELOAD IOT ADDRESS          @OZ36864 P5384111
         BZ    ERRORRTN            BR IF END OF CHAIN          @OZ36864 P5384112
         LH    R0,IOTLENG          GET BUFFER LENGTH           @OZ36864 P5384113
         ICM   R0,8,=AL1(231)      SET SUBPOOL NUMBER          @OZ36864 P5384114
         L     WC,IOTIOT           POINT TO NEXT IOT           @OZ36864 P5384115
         FREEMAIN R,LV=(0),A=(1)   FREE CURRENT IOT            @OZ36864 P5384116
         B     ERRNIOT             BR TO FREE NEXT IOT         @OZ36864 P5384117
         SPACE 1                                               @OZ36864 P5384118
         DROP  WC                  KILL IOT ADDRESSABILITY     @OZ36864 P5384119
         EJECT                                                 @OZ36864 P5384120
***************************************************************@OZ36864 P5384121
*                                                              @OZ36864 P5384122
*        RETURN TO SYSTEM                                      @OZ36864 P5384123
*                                                              @OZ36864 P5384124
***************************************************************@OZ36864 P5384125
         SPACE 1                                               @OZ36864 P5384126
ERRORRTN L     R1,$JQB             CHECKPOINT DATA SET LOCK    @OZ36864 P5384127
         TM    JQBFLAG1-JQBDSECT(R1),JQB1LOKD  STILL HELD...   @OZ27300 P5384200
         BZ    ERRORDUN            BR IF NO                    @OZ27300 P5384300
       $$WTO   TLOKM                ELSE WARN OPERATOR         @OZ27300 P5384400
         SPACE 1                                               @OZ27300 P5384500
ERRORDUN OI    $SVSTUS,$SVSTUST    SET TERMINATION COMPLETE    @OZ27300 P5385000
         L     R1,$SVHECBA         ADDR OF ECB AND $$POST WORK FLAG  R4 P5386000
         MVI   $SVPOSTW(R1),X'FF'  SET FLAGS FOR POSSIBLE RESTART    R4 P5387000
         SPACE 2                                               @OZ35996 P5387010
HASPEXIT LA    R15,16              ASSUME EXIT FROM INIT       @OZ35996 P5387020
         TM    HEXITFLG,HEXINIT    TEST ASSUMPTION             @OZ35996 P5387030
         BO    ERRORXIT            BR IF VALID                 @OZ35996 P5387040
         MVC   ERMSGWRK(HEXITMSL),HEXITMSG MOVE MSG TO WORK    @OZ32566 P5388000
       $$WTO   ERMSGWRK            SHOW TERMINATION COMPLETE   @OZ32566 P5388200
         SLR   R15,R15             SET ZERO RETURN CODE        @OZ32566 P5388400
         TM    HEXITFLG,HEXPJES2   $PJES2...                   @OZ32566 P5388600
         BO    ERRORXIT             EXIT IF YES                @OZ32566 P5388800
         LA    R15,24                ELSE SET RC               @OZ32566 P5389000
         SPACE 1                                               @OZ32566 P5389200
ERRORXIT SVC   3                   EXIT                        @OZ32566 P5389400
         EJECT                                                 @OZ35996 P5389600
WDRAWCSA DS    0H          SSVT OFFSETS OF GETMAIN'D CSA ADDRS @OZ35996 P5389610
         DC    Y($SVDEB-SSVT)      DASD DEB, TEDS, TGB         @OZ35996 P5389620
         DC    Y($SVRPS-SSVT)      DASD RPS SECTOR TABLES      @OZ35996 P5389630
         DC    Y($SVRDT-SSVT)      RMT DESTINATION TABLE       @OZ35996 P5389640
         DC    Y($SVIRDRS-SSVT)    INTERNAL READER DCTS        @OZ35996 P5389650
         DC    Y($SVCMBA-SSVT)     CONSOLE MSG BUFFERS         @OZ35996 P5389660
         DC    Y($SVPIT-SSVT)      PARTITION INFO TABLES       @OZ35996 P5389670
         DC    Y($SVHAVT-SSVT)     ADDR-SPACE VECTOR TABLE     @OZ35996 P5389680
         DC    Y($SVHECBA-SSVT)    MAIN ECB, FIXED-CSA WORK    @OZ35996 P5389690
         DC    Y(SSVT-SSVT)        SSVT  *** MUST BE LAST ***  @OZ35996 P5389700
         SPACE 2                                               @OZ35996 P5389710
ERRWAIT  DC    F'500'              FIVE SECOND STIMER INTERVAL @OZ35996 P5389720
         SPACE 2                                               @OZ35996 P5389730
HEXITFLG DC    X'00'               EXIT FLAGS                  @OZ32566 P5389800
         SPACE 1                                               @OZ36762 P5389900
HEXJES2  EQU   B'10000000'         JES2 ABEND ($ERROR)         @OZ32566 P5390000
HEXSYS   EQU   B'01000000'         SYSTEM ABEND                @OZ32566 P5390200
HEXPJES2 EQU   B'00100000'         $PJES2 ABEND                @OZ32566 P5390400
HEXINIT  EQU   B'00010000'         EXIT FROM INITIALIZATION    @OZ35996 P5390500
         SPACE 2                                               @OZ32566 P5390600
        $MID   085                                             @OZ32566 P5390800
HEXITMSG WTO   '&MID.JES2 TERMINATION COMPLETE',MF=L           @OZ32566 P5391000
HEXITMSL EQU   *-HEXITMSG          LENGTH OF MSG               @OZ32566 P5391100
         SPACE 1                                               @OZ32566 P5391200
         DROP  WA,WB,WF,BASE2,R10  KILL ADDRESSABILITY         @OZ36762 P5391400
         EJECT                                                 @OZ32566 P5391600
         LTORG                                                 @OZ32566 P5391800
         SPACE 1                                               @OZ32566 P5392000
HSMFBUF  DC    XL36'00'            EXIT SMF 'BUFFER'           @OZ32566 P5392200
         IECDPPL DSECT=NO                                      @OZ45485 P5392300
         TITLE 'HASP ABEND / $ERROR CODE TABLE'                @OZ32566 P5392400
****************************************************************OZ32566 P5392600
*                                                              *OZ32566 P5392800
*        $ERCODET - HASP ERROR CODE TABLE                      *OZ32566 P5393000
*                                                              *OZ32566 P5393200
* FORMAT - CL4'CODE'      - ABEND CODE (S***) OR               *OZ32566 P5393400
*                           $ERROR CODE ($***)                 *OZ32566 P5393500
*          AL4(ROUTINE)   - ADDRESS OF ROUTINE TO PROVIDE      *OZ32566 P5393600
*                           ADDITIONAL INFORMATION             *OZ32566 P5393700
*          AL1(LEN)       - LENGTH OF ERROR DESCRIPTION TEXT   *OZ32566 P5393800
*          C'TEXT'        - DESCRIPTION TEXT                   *OZ32566 P5394000
*                                                              *OZ32566 P5394200
* NOTE   - MAXIMUM LENGTH OF TEXT IS 35 BYTES                  *OZ32566 P5394400
*                                                              *OZ32566 P5394600
****************************************************************OZ32566 P5394800
         SPACE 1                                               @OZ32566 P5395000
         ENTRY $ERCODET            PROVIDE $ERCODET ENTRY      @OZ32566 P5395200
         SPACE 1                                               @OZ32566 P5395400
$ERCODET DS    0H                                              @OZ32566 P5395600
         SPACE 1                                               @OZ32566 P5395800
 DC C'S0C1',AL4(*-*),AL1(15),C'INVALID OP-CODE'                @OZ32566 P5396000
 DC C'S0C2',AL4(*-*),AL1(13),C'PRIVILEGED-OP'                  @OZ32566 P5396200
 DC C'S0C3',AL4(*-*),AL1(18),C'EXECUTE OF EXECUTE'             @OZ32566 P5396400
 DC C'S0C4',AL4(*-*),AL1(20),C'PROTECTION EXCEPTION'           @OZ32566 P5396600
 DC C'S0C5',AL4(*-*),AL1(20),C'ADDRESSING EXCEPTION'           @OZ32566 P5396800
 DC C'S0C6',AL4(*-*),AL1(23),C'SPECIFICATION EXCEPTION'        @OZ32566 P5397000
 DC C'S0C7',AL4(*-*),AL1(14),C'DATA EXCEPTION'                 @OZ32566 P5397200
 DC C'S0C9',AL4(*-*),AL1(16),C'DIVISION BY ZERO'               @OZ32566 P5397400
 DC C'$A01',AL4(*-*),AL1(32),C'TOO MANY CHANNEL-ENDS FOR DEVICE'        P5397600
 DC C'$B01',AL4(*-*),AL1(33),C'$FREEBUF - BUFFER ADDRESS INVALID'       P5397800
 DC C'$B02',AL4(*-*),AL1(26),C'$GETBUF - BPMMAP NOT VALID'     @OZ32566 P5398000
 DC C'$E01',AL4(*-*),AL1(34),C'$EXCP-COUNT LESS THAN CHANNEL-ENDS'      P5398200
 DC C'$H01',AL4(*-*),AL1(30),C'GETMAIN FOR BUFFER POOL FAILED' @OZ32566 P5398400
 DC C'$I01',AL4(*-*),AL1(34),C'INVALID PROCESSING RTN ADDR IN PTE'      P5398500
 DC C'$I02',AL4(*-*),AL1(27),C'INVALID FIELD LENGTH IN PTE'    @OZ36762 P5398600
 DC C'$I03',AL4(*-*),AL1(29),C'INVALID ENTRY IN $PTENT TABLE'  @OZ36762 P5398700
 DC C'$J03',AL4(*-*),AL1(20),C'$#REM-JOE NOT IN JOT'           @OZ40486 P5398800
 DC C'$J04',AL4(*-*),AL1(22),C'$#REM-INVALID JOE TYPE'         @OZ40486 P5398900
 DC C'$K01',AL4(*-*),AL1(33)                                   @OZ27300 P5399000
         DC    C'UPDATE TO CKPT RCD WITHOUT $QSUSE'            @OZ27300 P5399050
 DC C'$K03',AL4(*-*),AL1(35)                                   @OZ27300 P5399100
         DC    C'2 SYS WITH SAME ID OR COMPLEX-START'          @OZ27300 P5399150
 DC C'$K05',AL4(*-*),AL1(32)                                   @OZ27300 P5399200
         DC    C'CKPT RCD CHANGED BUT NOT FLAGGED'             @OZ27300 P5399250
 DC C'$K10',AL4(*-*),AL1(35)                                   @OZ27300 P5399300
         DC    C'PRIMARY CKPT DAMAGED -- DUPLEX GOOD'          @OZ27300 P5399350
 DC C'$K11',AL4(*-*),AL1(35)                                   @OZ27300 P5399400
         DC    C'PRIM CKPT ERR. NO DUPLEX. CAN''T FMT'         @OZ27300 P5399450
 DC C'$K12',AL4(*-*),AL1(35)                                   @OZ27300 P5399500
         DC    C'PRIMARY CKPT GOOD. LOCK RCD DAMAGED'          @OZ27300 P5399550
 DC C'$K13',AL4(*-*),AL1(33)                                   @OZ27300 P5399600
         DC    C'INVALID CHECKPOINT LOCK RCD VALUE'            @OZ27300 P5399625
 DC C'$K14',AL4(*-*),AL1(33)                                   @OZ27300 P5399650
         DC    C'PRIM CKPT FORMATTED BUT DOWNLEVEL'            @OZ27300 P5399675
 DC C'$K15',AL4(*-*),AL1(33)                                   @OZ27300 P5399700
         DC    C'I/O ERROR FORMATTING PRIMARY CKPT'            @OZ27300 P5399725
 DC C'$K16',AL4(*-*),AL1(32)                                   @OZ27300 P5399750
         DC    C'I/O ERROR FORMATTING DUPLEX CKPT'             @OZ27300 P5399775
 DC C'$K17',AL4(*-*),AL1(32)                                   @OZ27300 P5399800
         DC    C'INTERRUPTED READ OF PRIMARY CKPT'             @OZ27300 P5399825
 DC C'$K18',AL4(*-*),AL1(33)                                   @OZ27300 P5399850
         DC    C'INTERRUPTED WRITE OF PRIMARY CKPT'            @OZ27300 P5399875
 DC C'$K19',AL4(*-*),AL1(32)                                   @OZ27300 P5399900
         DC    C'INTERRUPTED WRITE OF DUPLEX CKPT'             @OZ27300 P5399925
 DC C'$M01',AL4(*-*),AL1(33),C'TOO MANY CHANNEL-ENDS ON RJE LINE'       P5400000
 DC C'$M02',AL4(*-*),AL1(31),C'ATTEMPT TO OVERLAP RJE LINE I/O'         P5400200
 DC C'$M03',AL4(*-*),AL1(28),C'SNA/RJE INTERNAL LOGIC ERROR'   @OZ32566 P5400400
         EJECT                                                 @OZ36762 P5400500
 DC C'$PJ2',AL4(*-*),AL1(28),C'OPERATOR ISSUED $PJES2,ABEND'   @OZ27300 P5400900
 DC C'$Q01',AL4(*-*),AL1(35),C'JQE SERVICES INVLD ARG OR NO $QSUSE'     P5401000
 DC C'$Q02',AL4(*-*),AL1(22),C'INVALID JOB QUEUE TYPE'         @OZ32566 P5401400
 DC C'$R01',AL4(*-*),AL1(22),C'SNA/RJE RPL PROCESSING'         @OZ32566 P5401600
 DC C'$T01',AL4(*-*),AL1(26),C'HASPPSO -- GETMAIN FAILURE'     @OZ36762 P5401620
 DC C'$T02',AL4(*-*),AL1(27),C'HASPLIST -- GETMAIN FAILURE'    @OZ36762 P5401630
 DC C'$V02',AL4(*-*),AL1(30),C'PURGE PROCESSOR GETMAIN FAILED'          P5402000
 DC C'$X03',AL4(*-*),AL1(27),C'HASPCNVT -- GETMAIN FAILURE'    @OZ36762 P5402060
 DC C'$X04',AL4(*-*),AL1(29),C'SJB NO LONGER QUEUED TO CHAIN'  @OZ36762 P5402080
         SPACE 1                                               @OZ32566 P5402400
 DC X'FF'                            ** END OF TABLE **        @OZ32566 P5402600
         TITLE 'HASP PCE NAME TABLE'                           @OZ32566 P5402800
****************************************************************OZ32566 P5403000
*                                                              *OZ32566 P5403200
*        $PCENAMT - HASP PCE NAME TABLE - BASED ON PCEID+1     *OZ32566 P5403400
*                                                              *OZ32566 P5403600
* NOTE - PCEMAXID IS THE MAXIMUM PCE ID                        *OZ32566 P5403800
*      - POINTED TO BY $PCENAMS IN HCT                         *OZ32566 P5404000
*      - 1ST BYTE OF NAME ENTRY = C' ' - INVALID ID (RESERVED) *OZ32566 P5404200
*                               = C'*' - DEVICE PROCESSOR      *OZ32566 P5404400
*                                      - NAME IN ASSOCIATED DCT*OZ32566 P5404600
*                                                              *OZ32566 P5404800
****************************************************************OZ32566 P5405000
         SPACE 1                                               @OZ32566 P5405200
         ENTRY $PCENAMT            PROVIDE $PCENAMT ENTRY      @OZ32566 P5405400
         SPACE 1                                               @OZ32566 P5405600
$PCENAMT DS    0C                PCEID  (SECOND BYTE)          @OZ32566 P5405800
         DC    CL8'$ASYNC  '       00 - ASYNCH I/O PROCESSOR   @OZ32566 P5406000
         DC    CL8'*READER '   *   01 - READER PROCESSORS      @OZ32566 P5406200
         DC    CL8'$SETUP  '       02 - SETUP PROCESSOR        @OZ32566 P5406400
         DC    CL8'HASPCNVT'       03 - JCL CONVERS PROCESSOR  @OZ32566 P5406600
         DC    CL8'HASPEXEC'       04 - EXECUTION PROCESSOR    @OZ32566 P5407000
         DC    CL8'HASPPSO '       05 - PROCESS SYSOUT PROCESS @OZ32566 P5407100
         DC    CL8'HASPHOPE'       06 - OUTPUT PROCESSOR       @OZ32566 P5407200
         DC    CL8'*PRINTER'   *   07 - PRINTER PROCESSORS     @OZ32566 P5407300
         DC    CL8'*PUNCH  '   *   08 - PUNCH PROCESSORS       @OZ32566 P5407400
         DC    CL8'HASPVPRG'       09 - PURGE PROCESSOR        @OZ32566 P5408000
         DC    CL8'HASPCOMM'       10 - COMMAND PROCESSOR      @OZ32566 P5409000
         DC    CL8'HASPMLLM'       11 - LINE MANAGER PROCESSOR @OZ32566 P5410000
         DC    CL8'$TIMER  '       12 - TIMER PROCESSOR        @OZ32566 P5411000
         DC    CL8'HASPCKPT'       13 - CHECKPOINT PROCESSOR   @OZ32566 P5412000
         DC    CL8'HASPGPRC'       14 - PRIORITY AGING PROCESS @OZ32566 P5413000
         DC    CL8'HASPWARM'       15 - WARM START PROCESSOR   @OZ32566 P5417000
         SPACE 2                                               @OZ27300 P5417100
        $MID   086                 SET MESSAGE ID              @OZ27300 P5417200
TLOKM WTO '&MID.WARNING - JES2 CHECKPOINT LOCK NOT RELEASED',  @OZ27300*P5417300
               MF=L                                            @OZ27300 P5417400
         TITLE 'HASP INITIAL ENTRY POINT PROCESSING ROUTINE'         R4 P5418000
*********************************************************************** P5419000
*                                                                     * P5420000
*        HASPINGO -- HASP INITIAL ENTRY POINT PROCESSING ROUTINE      * P5421000
*                                                                     * P5422000
*        THIS ROUTINE CALLS HASPINIT TO PERFORM HASP INITIALIZATION   * P5423000
*        PROCESSING.  ON RETURN FROM HASPINIT, IT CLEANS UP ANY       * P5424000
*        REMAINING INITIALIZATION PROCESSING AND EXITS TO THE ASYNCH  * P5425000
*        PROCESSOR.  CONTROL THEN, SHORTLY AFTER, PASSES TO THE HASP  * P5426000
*        WARM START PROCESSOR TO CONCLUDE HASP PREPARATORY PROCES-    * P5427000
*        SING.                                                        * P5428000
*                                                                     * P5429000
*********************************************************************** P5430000
         SPACE 1                                                     R4 P5431000
         ENTRY HASPINGO            PROVIDE ENTRY POINT               R4 P5432000
         USING HASPINGO,BASE2      PROVIDE LOCAL ADDRESSABILITY      R4 P5433000
         SPACE 1                                                     R4 P5434000
HASPINGO STM   R14,R12,12(R13)     SAVE SYSTEM'S REGISTERS           R4 P5435000
         LR    BASE2,R15           ESTABLISH BASE                    R4 P5436000
         L     R15,=A(ERRXSAVE)    POINT TO SAVE AREA          @OZ36762 P5437000
         ST    R15,8(,R13)         STORE FORWARD POINTER             R4 P5438000
         ST    R13,4(,R15)         STORE BACKWARD POINTER            R4 P5439000
         LR    R13,R15             SWITCH TO NEW SAVE AREA           R4 P5440000
         LR    WB,R1               SAVE ORIGINAL R1                  R4 P5441000
         SPACE 1                                                     R4 P5442000
         L     BASE1,MAPNUCA       ESTABLISH HCT BASE                R4 P5443000
         SPACE 1                                                     R4 P5444000
*********************************************************************** P5445000
*                                                                     * P5446000
*        OBTAIN SUPERVISOR STATE, SET HASP PROTECT KEY                * P5447000
*                                                                     * P5448000
*********************************************************************** P5449000
         SPACE 1                                                     R4 P5450000
         MODESET MODE=SUP          OBTAIN SUPERVISOR STATE           R4 P5451000
         MODESET EXTKEY=HASP       SET HASP PROTECT KEY              R4 P5452000
         EJECT                                                       R4 P5453000
************************************************************** @OZ55804 P5453100
*                                                            * @OZ55804 P5453200
* LONG TERM FIX HCT AND HASPNUC THRU LABEL $FIXEND           * @OZ55804 P5453300
*                                                            * @OZ55804 P5453400
************************************************************** @OZ55804 P5453500
         SPACE 1                                               @OZ55804 P5453600
         PGFIX R,A=(BASE1),EA=$FIXEND,ECB=$HASPECB             @OZ55804 P5453700
         WAIT  ECB=$HASPECB     WAIT FOR PAGE FIX TO COMPLETE  @OZ55804 P5453800
         MVC   $HASPTCB,PSATOLD-PSA SAVE JES2 TCB ADDR IN HCT  @OZ55804 P5453840
         EJECT                                                 @OZ55804 P5453900
         ICM   WC,15,MAPINITA      IS HASPINIT ALREADY LOADED...     R4 P5454000
         BNZ   CALLINIT            BR IF YES                         R4 P5455000
         SPACE 1                                                     R4 P5456000
*********************************************************************** P5457000
*                                                                     * P5458000
*        HASPINIT NOT LOADED -- LOAD IT NOW                           * P5459000
*                                                                     * P5460000
*********************************************************************** P5461000
         SPACE 1                                                     R4 P5462000
         LOAD  EPLOC=MAPINIT,ERRET=LOADERR  LOAD HASPINIT            R4 P5463000
         ST    R0,MAPINITA         SET POINTER TO HASPINIT           R4 P5464000
         SPACE 1                                                     R4 P5465000
*********************************************************************** P5466000
*                                                                     * P5467000
*        CALL HASPINIT TO CONTINUE INITIALIZATION PROCESSING          * P5468000
*                                                                     * P5469000
*********************************************************************** P5470000
         SPACE 1                                                     R4 P5471000
CALLINIT LR    R1,WB               RESTORE ORIGINAL R1               R4 P5472000
         L     R15,MAPINITA        POINT TO HASPINIT                 R4 P5473000
         CALL  (15)                CALL HASPINIT                     R4 P5474000
         LR    WD,R15              SAVE RETURN CODE            @OZ35996 P5474500
         LTR   WC,WC               WAS HASPINIT LOADED...            R4 P5475000
         BNZ   CLEANUP             BR IF PART OF LOAD MODULE         R4 P5476000
         DELETE EPLOC=MAPINIT       ELSE DELETE HASPINIT             R4 P5477000
         ST    WC,MAPINITA         DELETE HASPINIT REP TABLE ENTRY   R4 P5478000
         EJECT                                                       R4 P5479000
*********************************************************************** P5480000
*                                                                     * P5481000
*        CLEAN UP INITIALIZATION PROCESSING                           * P5482000
*                                                                     * P5483000
*********************************************************************** P5484000
         SPACE 1                                               @OZ35996 P5484100
CLEANUP  LTR   R15,WD              INIT COMPLETE WITHOUT ERR...@OZ35996 P5484200
         BZ    INITGOOD            BR IF YES                   @OZ35996 P5484300
         SPACE 1                                               @OZ35996 P5484400
***************************************************************@OZ35996 P5484500
*                                                              @OZ35996 P5484600
*        INITIALIZATION ERROR - CLEANUP AND EXIT TO SYSTEM     @OZ35996 P5484700
*                                                              @OZ35996 P5484800
***************************************************************@OZ35996 P5484900
         SPACE 1                                               @OZ35996 P5485000
         CL    R15,=F'16'          CLEANUP CSA...              @OZ35996 P5485100
         BE    CLEANCSA            BR IF YES                   @OZ35996 P5485200
         SVC   3                    ELSE EXIT TO SYSTEM        @OZ35996 P5485300
         SPACE 1                                               @OZ35996 P5485400
CLEANCSA L     BASE2,MAPABNDA      ESTABLISH COMMON            @OZ35996 P5485500
         LA    R10,2048(,BASE2)     EXIT ROUTINE               @OZ35996 P5485600
         LA    R10,2048(,R10)        BASE REGISTERS            @OZ35996 P5485700
         SPACE 1                                               @OZ35996 P5485800
         USING $ABEND,BASE2,R10    RESET ADDRESSABILITY        @OZ35996 P5485900
         SPACE 1                                               @OZ35996 P5486000
         MVI   HEXITFLG,HEXINIT    SHOW EXIT FROM INIT         @OZ35996 P5486100
         ICM   WA,7,$IMAGTCB+1     IS HASPIMAG ATTACHED...     @OZ41577 P5486150
         BZ    ERRWDRAW            BR TO FREE CSA AND EXIT     @OZ41577 P5486200
         LA    R15,$HEXIT          BR TO DETACH SUBTASKS       @OZ41577 P5486250
         BR    R15                  BEFORE EXIT TO SYSTEM      @OZ41577 P5486300
         EJECT                                                 @OZ35996 P5486400
         DROP  R10,BASE2           RE-ESTABLISH                @OZ35996 P5486500
         USING HASPINGO,BASE2       LOCAL ADDRESSABILITY       @OZ35996 P5486600
         SPACE 1                                               @OZ35996 P5486700
INITGOOD L     R1,=A($QGETAFF)     SET MASK FOR 'TM'           @OZ35996 P5486800
         MVC   1(1,R1),$SIDAFF      OPERATION IN $QGET ROUTINE       R4 P5487000
         SPACE 1                                                     R4 P5488000
*********************************************************************** P5489000
*                                                                     * P5490000
*        END OF BASIC INITIALIZATION -- ENTER ASYNCH PROCESSOR        * P5491000
*                                                                     * P5492000
*********************************************************************** P5493000
         SPACE 1                                                     R4 P5494000
         L     R14,4(,SAVE)        GET ADDRESS OF SYSTEM SAVE AREA   R4 P5495000
         L     SAVE,$ASYNCP        GET ASYNCH PROCESSOR PCE ADDRESS  R4 P5496000
         ST    R14,4(,SAVE)        SET BACKWARD CHAIN                R4 P5497000
         ST    SAVE,8(,R14)        SET FORWARD CHAIN                 R4 P5498000
         LM    LINK,R12,12(SAVE)   LOAD PCE REGISTERS                R4 P5499000
         BR    R15                  AND ENTER ASYNCH PROCESSOR       R4 P5500000
         SPACE 1                                                     R4 P5501000
*********************************************************************** P5502000
*                                                                     * P5503000
*        UNABLE TO LOAD HASPINIT -- INFORM OPERATOR AND QUIT          * P5504000
*                                                                     * P5505000
*********************************************************************** P5506000
         SPACE 1                                                     R4 P5507000
LOADERR $$WTO  LOADMSG             ISSUE ERROR MESSAGE TO OPERATOR   R4 P5508000
        $$WTO  QUITMSG             ISSUE QUIT MESSAGE TO OPERATOR    R4 P5509000
         L     R13,4(,R13)         POINT TO SYSTEM SAVE AREA         R4 P5510000
         LM    R14,R12,12(R13)     RESTORE SYSTEM REGISTERS          R4 P5511000
         LA    R15,20              SET RETURN CODE                   R4 P5512000
         BR    R14                  AND RETURN                       R4 P5513000
         EJECT                                                       R4 P5514000
        $MID   428                 SET MESSAGE ID                    R4 P5515000
QUITMSG  WTO   '&MID.CORRECT THE ABOVE PROBLEMS AND RESTART JES2',MF=L  P5516000
         SPACE 1                                                     R4 P5517000
        $MID   448                 SET MESSAGE ID                    R4 P5518000
LOADMSG  WTO   '&MID.UNABLE TO LOAD MODULE HASPINIT',MF=L            R4 P5519000
         SPACE 2                                                     R4 P5520000
         LTORG                                                       R4 P5521000
         SPACE 5                                                     R4 P5522000
         ORG   HASPNUC+(*-HASPNUC+31)/32*32  32-BYTE ALIGNMENT       R4 P5523000
         SPACE 2                                                     R4 P5524000
        $MODMAP DSECT=NO           GENERATE HASP MODULE MAP          R4 P5525000
         SPACE 1                                                     R4 P5526000
         DROP  ,                   SUSPEND ADDRESABILITY       @OZ20685 P5526010
         TITLE 'HASP ALLOC/UNALLOC SERVICE -- ALLOCATION TASK' @OZ20685 P5526110
         SPACE 1                                               @OZ20685 P5526120
*************************************************************  @OZ20685 P5526130
*                                                              @OZ20685 P5526140
*        HASP DYNAMIC ALLOCATION/UNALLOCATION SUBTASK          @OZ20685 P5526150
*                                                              @OZ20685 P5526160
*************************************************************  @OZ20685 P5526170
         SPACE 1                                               @OZ20685 P5526180
HOSALLOC $ENTRY BASE=R15           ALLOCATION MAIN ENTRY       @OZ20685 P5526190
         DROP  R15                 SUSPEND LOCAL ADDRESSABILITY@OZ20685 P5526200
         SAVE  (14,12)             SAVE CALLER'S REGISTERS     @OZ20685 P5526210
         LR    BASE2,R15           ESTABLISH BASE REGISTER     @OZ20685 P5526220
         USING HOSALLOC,BASE2      LOCAL ADDRESSABILITY        @OZ20685 P5526230
         LR    BASE1,R1            RELOAD HCT ADDRESS          @OZ20685 P5526240
         USING HASP,BASE1          HCT ADDRESSABILITY          @OZ20685 P5526250
         ST    R13,ALLOCSAV+4      STORE BACKWARD POINTER      @OZ20685 P5526260
         LR    R4,R13              HOLD CALLER'S SAVE ADDRESS  @OZ20685 P5526270
         LA    R13,ALLOCSAV        ADDRESS MY SAVE AREA        @OZ20685 P5526280
         ST    R13,8(,R4)          STORE FWD POINTER           @OZ20685 P5526290
         SPACE 1                                               @OZ52025 P5526292
*        ESTABLISH ESTAE ENVIRONMENT                           @OZ52025 P5526294
         SPACE 1                                               @OZ52025 P5526296
         ESTAE ALESTAE,RECORD=YES                              @OZ52025 P5526298
         SPACE 1                                               @OZ20685 P5526300
*        SIGNAL ATTACHOR THAT DYNAMIC ALLOCATE SUBTASK IS UP.  @OZ20685 P5526310
         SPACE 1                                               @OZ20685 P5526320
         POST  $PDYNECB            POST ATTACHOR               @OZ20685 P5526330
         SPACE 1                                               @OZ20685 P5526340
*        WAIT FOR WORK POST OR $PJES2 POST                     @OZ20685 P5526350
         SPACE 1                                               @OZ20685 P5526360
ALWAIT   DS    0H                                              @OZ20685 P5526370
         WAIT  ECB=$DYNECB         WAIT FOR WORK OR $PJES2 PST @OZ20685 P5526380
         SLR   R1,R1               CLEAR R1                    @OZ20685 P5526390
         ICM   R1,7,$DYNECB+1      IS WORK ECB POSTED          @OZ20685 P5526400
*                                  THIS LINE DELETED BY APAR   @OZ52025 P5526405
         BZ    ALTERM              BRANCH IF NO, SHUTDOWN      @OZ20685 P5526410
         SPACE 1                                               @OZ20685 P5526420
*        DYNAMIC ALLOCATION                                    @OZ20685 P5526430
         SPACE 1                                               @OZ20685 P5526440
         LR    WD,R1               GET WORK AREA ADDRESS       @OZ20685 P5526460
         DYNALLOC                  CALL DYN ALLOC/UNALLOC      @OZ20685 P5526500
*                                  THIS LINE DELETED BY APAR   @OZ55746 P5526560
         LR    R1,WD               GET WORK AREA ADDRES AGAIN  @OZ20685 P5526660
         LTR   R15,R15             NORMAL RETURN...            @OZ20685 P5526670
         BZ    ALLOK               BR IF YES                   @OZ20685 P5526680
         MVI   0(R1),X'41'         SET RETURN CODE             @OZ20685 P5526690
         B     AL$$POST            GO POST JES2                @OZ52025 P5526700
ALLOK    MVI   0(R1),X'7F'         SET RETURN CODE             @OZ20685 P5526710
AL$$POST DS    0H                                              @OZ52025 P5526715
         MVI   $DYNECB,0           RESET ECB FOR NEXT USER     @OZ55746 P5526717
       $$POST  TYPE=ALOC,R11=HCT   POST JES2                   @OZ20685 P5526720
         B     ALWAIT              WAIT FOR POST               @OZ20685 P5526730
         SPACE 1                                               @OZ20685 P5526740
*        SHUTDOWN ASSUMED -- $PJES2 POST                       @OZ20685 P5526750
         SPACE 1                                               @OZ20685 P5526760
ALTERM   DS    0H                                              @OZ20685 P5526770
         L     R13,ALLOCSAV+4      RESTORE CALLERS  R13        @OZ20685 P5526780
         RETURN (14,12),RC=0       RETURN WITH ZERO COMP CODE  @OZ20685 P5526790
         TITLE 'HOSALLOC -- ESTAE SUPPORT'                     @OZ52025 P5526800
         USING ALESTAE,R15         LOCAL ADDRESSABILITY        @OZ52025 P5526810
         SPACE 1                                               @OZ52025 P5526820
ALESTAE  CLM   R0,1,=AL1(12)       BR IF SDWA                  @OZ52025 P5526830
         BE    ALNSDWA              IS NOT AVAILABLE           @OZ52025 P5526840
         SETRP RC=4,RETADDR=ALRETRY,FRESDWA=YES                @OZ52025 P5526850
         SPACE 1                                               @OZ52025 P5526860
ALNSDWA  LA    R15,4               RETRY = YES                 @OZ52025 P5526870
         BALR  R0,R14              SET R0 = RETRY ADDR         @OZ52025 P5526880
         SPACE 5                                               @OZ52025 P5526890
         USING ALRETRY,R15         LOCAL ADDRESSABILITY        @OZ52025 P5526900
         SPACE 1                                               @OZ52025 P5526910
ALRETRY  LM    BASE1,SAVE,=A(HASP,HOSALLOC,ALLOCSAV) RESTORE   @OZ52025 P5526920
*                                             BASE/SAVE REGS   @OZ52025 P5526930
         DROP  R15                 KILL TEMP ADDRSSABILITY     @OZ52025 P5526940
         ICM   R1,7,$DYNECB+1      FETCH ADDR OF ECB           @OZ52025 P5526950
         MVI   0(R1),X'41'         SET RETURN CODE             @OZ52025 P5526960
         B     AL$$POST             TO BR TO RETURN LOGIC      @OZ52025 P5526970
         SPACE 1                                               @OZ52025 P5526980
ALLOCSAV DS    18F                 ALLOCATION SAVE AREA        @OZ52025 P5526990
         SPACE 1                                               @OZ52025 P5527000
         LTORG                                                 @OZ52025 P5527010
$NUCLEN  $DLENGTH                  COMPUTE CSECT LENGTH        @OZ52025 P5527020
         SPACE 5                                                     R4 P5528000
APARNUM  DC    CL5'57366'          APAR NUMBER                          P5528998
         END   HASP                ENTRY POINT FOR HASP SYSTEM       R4 P5529000
