XEQ      TITLE 'HASP EXECUTION SERVICES PROLOG'                @OZ18212 U0002000
*********************************************************************** U0004000
*                                                                     * U0006000
* MODULE NAME -- HASJES2 (HASPXEQ CSECT)                              * U0008000
*                                                                     * U0010000
* DESCRIPTIVE NAME -- HASPXEQ CSECT OF JES2 MAIN MODULE               * U0012000
*                                                                     * U0014000
* COPYRIGHT = NONE                                                    * U0016100
*                                                                     * U0018000
* STATUS = OS/VS2 MVS   --  SEE &VERSION (BELOW) FOR JES2 LEVEL       * U0020000
*                                                                     * U0022000
* FUNCTION -- PASS JOBS THROUGH JCL CONVERSION.  SELECT JOBS FOR EXE- * U0024000
*             CUTION.  PERFORM SERVICES FOR JOBS IN EXECUTION.  SUP-  * U0026000
*             PORT ACCESS TO HELD DATASETS BY CONVERSATIONAL SYSTEMS  * U0028000
*             AND BY EXTERNAL WRITERS.                                * U0030000
*                                                                     * U0032000
* NOTES -- 1)  THE FIVE PROCESSORS IN THIS MODULE ARE INDEPENDENTLY   * U0034000
*              DISPATCHED BY THE JES2 DISPATCHER.                     * U0036000
*          2)  THE INSTRUCTIONS, CONSTANTS AND LITERALS FOR EACH PRO- * U0038000
*              CESSOR ARE CODED CONTIGUOSLY.                          * U0040000
*          3)  SEE BELOW                                              * U0042000
*                                                                     * U0044000
* DEPENDENCIES -- NONE                                                * U0046000
*                                                                     * U0048000
* RESTRICTIONS -- NONE                                                * U0050000
*                                                                     * U0052000
* REGISTER CONVENTIONS -- R10 = JCT ADDRESS                           * U0054000
*                         R11 = HCT ADDRESS                           * U0056000
*                         R12 = PROCESSOR ADDRESSABILITY              * U0058000
*                         R13 = PCE ADDRESS                           * U0060000
*                       R0-R9 = SEE ENTRY POINT DOCUMENTATION         * U0062000
*                                                                     * U0064000
* PATCH LABEL -- NONE                                                 * U0066000
*                                                                     * U0068000
* MODULE TYPE -- PROCESSOR                                            * U0070000
*                                                                     * U0072000
*    PROCESSOR -- ASSEMBLER F                                         * U0074000
*                                                                     * U0076000
*    MODULE SIZE = SEE $DLENGTH MACRO EXPANSION(S) AT END OF ASSEMBLY * U0078000
*                                                                     * U0086000
*    ATTRIBUTES -- READ ONLY, AFTER PROCESSOR AND SUBTASK             * U0088000
*                  INITIALIZATION, AND HASP REENTRANT                 * U0089000
*                                                                     * U0090000
* PROCESSOR ENTRY POINTS -- HASPCNVT = INITIAL ENTRY TO JCL CONVER-   * U0092000
*                                      SION PROCESSOR.                * U0094000
*                           HASPXEQ  = INITIAL ENTRY TO EXECUTION     * U0096000
*                                      PROCESSOR.                     * U0098000
*                           HASPHOLD = INITIAL ENTRY TO HOLD QUEUE    * U0099000
*                                      PROCESSOR.                     * U0099500
*                           HASPTIME = INITIAL ENTRY TO TIME EXCES-   * U0100000
*                                      SION PROCESSOR.                * U0102000
*                           HASPPSO  = INITIAL ENTRY TO PROCESS SYS-  * U0104000
*                                      OUT PROCESSOR.                 * U0106000
*                                                                     * U0108000
*    PURPOSE -- SEE FUNCTION                                          * U0110000
*                                                                     * U0112000
*    LINKAGE -- SEE ENTRY POINT DOCUMENTATION                         * U0114000
*                                                                     * U0116000
*    INPUT -- SEE ENTRY POINT DOCUMENTATION                           * U0178000
*                                                                     * U0180000
*    OUTPUT -- SEE ENTRY POINT DOCUMENTATION                          * U0182000
*                                                                     * U0184000
*    EXIT - NORMAL -- SEE ENTRY POINT DOCUMENTATION                   * U0186000
*                                                                     * U0188000
*    EXIT - ERROR -- SEE ENTRY POINT DOCUMENTATION                    * U0190000
*                                                                     * U0192000
* EXTERNAL REFERENCES -- SEE BELOW                                    * U0194000
*                                                                     * U0196000
*   ROUTINES -- SVC 1, SVC 2, SVC 8, SVC 9, SVC 10, SVC 11, SVC 19,   * U0196100
*               SVC 20, SVC 35, SVC 41, SVC 42, SVC 62, SVC 120       * U0196200
*               $#ADD, $#BLD, $#CKPT, $#JCT, $#PUT, $#REM,            * U0196300
*               $$POST, $BFRBLD, $DISTERR, $ERROR, $EXCP,             * U0196400
*               $FREBUF, $FRELOK, $GETBUF, $GETLOK, $IOERROR,         * U0196500
*               $JCAN, $PGSRVC, $PURGE, $QCKPT, $QGET, $QLOC,         * U0196600
*               $QMOD, $QPUT, $QSUSE, $STIMER, $TIME, $TRACK,         * U0196700
*               $TTIMER, $WAIT, $WTO, $XMPOST                         * U0196800
*                                                                     * U0214000
*    DATA AREAS -- SEE $HASPCB MACRO EXPANSION                        * U0216000
*                                                                     * U0218000
* CONTROL BLOCKS -- SEE $HASPCB MACRO EXPANSION                       * U0220000
*                                                                     * U0222000
* TABLES -- SEE $HASPCB MACRO EXPANSION                               * U0224000
*                                                                     * U0226000
* MACROS -- ATTACH, CALL, CLOSE, DELETE, DETACH, ESTAE, FREEMAIN,     * U0228000
*           GETMAIN, IDENTIFY, LOAD, OPEN, POST, WAIT, WTO            * U0228100
*                                                                     * U0230000
* CHANGE ACTIVITY                                                     * U0230100
*                                                                     * U0230200
*     RELEASE 4.0 = OZ00790,OZ02446,OZ03286,OZ03308,OZ03309,OZ04332,  * U0230400
*                   OZ04345,OZ04958,OZ04993,OZ05762,OZ08188,OZ08229,  * U0230500
*                   OZ09043,OZ09094,OZ09108                           * U0230600
*                                                                     * U0230700
*     RELEASE 4.1 = OZ12300,OZ13228,OZ14441,OZ15815,OZ15841           * U0230800
*                                                                     * U0238000
*********************************************************************** U0240000
         TITLE 'HASP CONTROL BLOCK GENERATION MACRO'                    U0242000
         SPACE 5                                                        U0244000
*                                                                       U0246000
*****   $HASPCB   *****       GENERATE HASP CONTROL BLOCKS              U0248000
*                                                                       U0250000
         SPACE 1                                                        U0252000
         MACRO                                                          U0254000
         $HASPCB &DOC=NO,&LIST=NO                                       U0256000
         GBLC  &PRINT,&GEN,&DATA                                        U0258000
         PUSH  PRINT                                                    U0260000
         PRINT &PRINT                                                   U0262000
         $ASVT LIST=&LIST                                      @OZ56448 U0263000
         $PSA  LIST=&LIST          GENERATE OS PSA DSECT                U0264000
         $CVT  LIST=&LIST          GENERATE OS CVT DSECT                U0266000
         $SSOB (SO,CS,JS,RQ,RR),LIST=&LIST  OS SSOB DSECT            R4 U0266100
         $DCB  LIST=&LIST          GENERATE OS DCB DSECT                U0270000
         $ACB  LIST=&LIST          GENERATE OS ACB DSECT                U0272000
         $DEB  LIST=&LIST          GENERATE OS DEB DSECT                U0274000
         $NEL  LIST=&LIST          GENERATE OS NEL DSECT                U0276000
         $TEXT LIST=&LIST          GENERATE OS TEXT DSECT               U0278000
         $KEYS LIST=&LIST          GENERATE OS TEXT KEYS                U0280000
         $SDWA LIST=&LIST          GENERATE OS SDWA DSECT      @OZ29021 U0282000
         $TGM  DOC=&DOC            GENERATE HASP TGM DSECT              U0284000
         $TAB  DOC=&DOC            GENERATE HASP TAB DSECT           R4 U0284100
         $SVT  DOC=&DOC            GENERATE HASP SSVT DSECT             U0286000
         $SJB  DOC=&DOC            GENERATE HASP SJB DSECT              U0288000
         $HCT  DOC=&DOC            GENERATE HASP HCT DSECT              U0290000
         $PCE  DOC=&DOC            GENERATE HASP PCE DSECT              U0292000
         $BUFFER DOC=&DOC          GENERATE HASP BUFFER DSECT           U0294000
         $JQE  DOC=&DOC            GENERATE HASP JQE DSECT              U0296000
         $JOE  DOC=&DOC            GENERATE HASP JOE DSECT              U0298000
         $JOT  DOC=&DOC            GENERATE HASP JOT DSECT              U0300000
         $QSE  DOC=&DOC            GENERATE HASP QSE DSECT              U0301000
         $JCT  DOC=&DOC            GENERATE HASP JCT DSECT              U0306000
         $PDDB DOC=&DOC            GENERATE HASP PDDB DSECT             U0308000
         $IOT  DOC=&DOC            GENERATE HASP IOT DSECT              U0310000
         $CAT  DOC=&DOC            GENERATE HASP CAT DSECT              U0312000
         $SCAT DOC=&DOC            GENERATE HASP SCAT DSECT             U0314000
         $RAT  DOC=&DOC            GENERATE HASP RAT DSECT              U0316000
         $DCT  DOC=&DOC            GENERATE HASP DCT DSECT              U0318000
         $TQE  DOC=&DOC            GENERATE HASP TQE DSECT              U0320000
         $HQR  DOC=&DOC            GENERATE HASP HQR DSECT              U0321000
         $HQT  DOC=&DOC            GENERATE HASP HQT DSECT              U0322000
         $PIT  DOC=&DOC            GENERATE HASP PIT DSECT              U0324000
         $PSO  DOC=&DOC            GENERATE HASP PSO DSECT              U0326000
         $RDRWORK DOC=&DOC         GENERATE HASP RDRWORK DSECT          U0328000
         $CNVWORK DOC=&DOC         GENERATE HASP CNVWORK DSECT          U0332000
         SPACE 1                                                        U0334000
         POP   PRINT                                                    U0336000
         PRINT &GEN,&DATA          SET ASSEMBLY PRINT OPTIONS           U0338000
         MEND                                                           U0340000
         TITLE 'HASP SJB DE-QUEUE MACRO'                                U0342000
         SPACE 5                                                        U0344000
*                                                                       U0346000
*****    $DEQSJB   *****           DE-QUEUE AN SJB FROM A QUEUE         U0348000
*                                                                       U0350000
         SPACE 2                                                        U0352000
         MACRO                                                          U0354000
&NAME    $DEQSJB &Q,&NONE                                               U0356000
&NAME    BAL   LINK,XSJBLOCK       OBTAIN SJB QUEUES LOCK               U0358000
         AIF   ('&Q' NE '$SVJPCLS').A                                   U0360000
         L     WA,$SVJPCLS         GET FIRST SJB ON QUEUE               U0362000
         LTR   WA,WA               TEST FOR EMPTY QUEUE                 U0364000
         BZ    &NONE               BR IF NO SJBS QUEUED                 U0366000
         MVC   $SVJPCLS,SJBXQCHN    ELSE DE-QUEUE THE SJB               U0368000
         MEXIT                                                          U0370000
.A       LA    WD,&Q                AND DE-QUEUE THE SJB                U0372000
         BAL   LINK,XDEQSJB          FROM ITS QUEUE                     U0374000
         AIF   ('&NONE' EQ '').END                                      U0376000
         BNZ   &NONE               BR IF SJB WAS NO LONGER QUEUED       U0378000
.END     MEND                                                           U0380000
         TITLE 'HASP EXECUTION PROCESSORS'                              U0388000
         SPACE 5                                                        U0390000
HASPXEQ  START 0                   HASP EXECUTION PROCESSORS            U0392000
         SPACE 5                                                        U0394000
         COPY  $HASPGEN            COPY HASPGEN PARAMETERS              U0396000
         TITLE 'HASP CONTROL BLOCKS'                                    U0398000
         SPACE 5                                                        U0400000
HASPXEQ  $ENTRY BASE=,CSECT=YES    PROVIDE PROCESSOR IDENTIFICATION     U0402000
         SPACE 5                                                        U0404000
*                                                                       U0406000
*                             SYMBOLIC REGISTER DEFINITIONS             U0408000
*                                                                       U0410000
         SPACE 2                                                        U0412000
XL1      EQU   WE                  LINK REGISTER                        U0414000
XL2      EQU   WF                  LINK REGISTER                        U0416000
         EJECT                                                          U0428000
         SPACE 5                                                        U0430000
*                                                                       U0432000
*                             DOCUMENTATION OPTIONS FOR THIS ASSEMBLY   U0434000
*                                                                       U0436000
         SPACE 3                                                        U0438000
        $SYSPARM (OFF,GEN,NODATA,NO,NO)                                 U0440000
         SPACE 5                                                        U0442000
*                                                                       U0444000
*                             GENERATE HASP CONTROL BLOCKS              U0446000
*                                                                       U0448000
         SPACE 3                                                        U0450000
        $HASPCB DOC=&DOC,LIST=&LIST  GENERATE HASP CONTROL BLOCKS       U0452000
         TITLE 'HASP JCL CONVERSION PROCESSOR -- INITIAL ENTRY POINT'   U0454000
*********************************************************************** U0456000
*                                                                     * U0458000
* PROCESSOR NAME -- HASPCNVT                                          * U0460000
*                                                                     * U0462000
* DESCRIPTIVE NAME -- JES2 JCL CONVERSION PROCESSOR                   * U0464000
*                                                                     * U0466000
* FUNCTION -- INTERFACE WITH OS/VS2 JCL CONVERTER TO PROVIDE JCL      * U0468000
*             CONVERSION FOR JOBS PRIOR TO THEIR SELECTION FOR        * U0470000
*             EXECUTION.                                              * U0472000
*                                                                     * U0474000
* NOTES -- 1)  BECAUSE A JES2 PROCESSOR IS NOT ALLOWED TO DIRECTLY    * U0476000
*              ISSUE AN OS WAIT, HASPCNVT ATTACHES A SUB-TASK TO      * U0478000
*              PERFORM THOSE FUNCTIONS REQUIRING WAITS.  THE SUB-TASK,* U0480000
*              HOSCNVT, PERFORMS OS OPENS AND CLOSES OF PROCLIB AND   * U0482000
*              CALLS THE OS/VS2 JCL CONVERTER TO CONVERT A JOB'S JCL  * U0484000
*              INTO INTERNAL TEXT.                                    * U0486000
*                                                                     * U0488000
*          2)  AN EXIT ROUTINE, CODED AS PART OF THE SUB-TASK IS      * U0490000
*              PROVIDED TO THE OS/VS2 JCL CONVERTER.  THIS EXIT       * U0492000
*              ROUTINE, BEGINNING AT XTXTEXIT -                       * U0494000
*                                                                     * U0496000
*              A)  PROVIDES DSNAMES FOR SUB-SYSTEM DATA SETS          * U0498000
*              B)  SUPPORTS THE USE OF 'SYSOUT=*' OR 'SYSOUT=$'       * U0500000
*              C)  PROVIDES, IF NECESSARY, A DEFAULT PERFORMANCE      * U0502000
*                  GROUP                                              * U0504000
*                                                                     * U0506000
*          3)  TO IMPROVE THE PERFORMANCE OF THIS PROCESSOR -         * U0508000
*                                                                     * U0510000
*              A)  PERMANENT STORAGE IS OBTAINED, VIA GETMAIN, TO     * U0512000
*                  SERVE AS BUFFER STORAGE FOR THE JCT AND THE IOT    * U0514000
*                  OF JOBS BEING PROCESSED.  WHEN THE PROCESSOR IS    * U0516000
*                  FORCED TO $WAIT FOR ANOTHER JOB, A PAGE-RELEASE    * U0518000
*                  IS PERFORMED FOR THE BUFFERS.                      * U0520000
*              B)  IN THE SUB-TASK, HOSCNVT, AN ATTEMPT IS MADE TO    * U0522000
*                  KEEP PROCLIB OPENED BETWEEN JOBS.  ONLY WHEN A JOB * U0524000
*                  REQUIRES A PROCLIB OTHER THAN THE ONE CURRENTLY    * U0526000
*                  OPENED, OR WHEN THE PREVIOUS JOB ENCOUNTERED AN    * U0528000
*                  I/O ERROR DURING JCL CONVERSION, IS PROCLIB CLOSED.* U0530000
*                                                                     * U0532000
* REGISTER CONVENTIONS -- R0  -- WORK REGISTER                        * U0534000
*                         R1  -- WORK REGISTER                        * U0536000
*                         WA  -- IOT ADDRESS                          * U0538000
*                         WB  -- WORK REGISTER                        * U0540000
*                         WC  -- WORK REGISTER                        * U0542000
*                         WD  -- JQE ADDRESS                          * U0544000
*                         WE  -- WORK/LINK REGISTER                   * U0546000
*                         WF  -- WORK/LINK REGISTER                   * U0548000
*                         WG  -- SSVT ADDRESS                         * U0550000
*                         JCT -- JCT ADDRESS                          * U0552000
*                                                                     * U0554000
*********************************************************************** U0556000
         EJECT                                                          U0558000
*********************************************************************** U0558100
*                                                                     * U0560000
*        H A S P C N V T   I N I T I A L   E N T R Y   P O I N T      * U0562000
*                                                                     * U0564000
*********************************************************************** U0564100
         SPACE 2                                                        U0566000
         USING IOTDSECT,WA         PROVIDE IOT ADDRESSABILITY           U0568000
         USING JQEDSECT,WD         PROVIDE JQE ADDRESSABILITY           U0570000
         USING $SVDSECT,WG         PROVIDE SSVT ADDRESSABILITY          U0572000
         SPACE 2                                                        U0574000
HASPCNVT $ENTRY BASE=BASE2         PROVIDE PROCESSOR ENTRY POINT        U0576000
         SPACE 1                                                        U0578000
*********************************************************************** U0578100
*                                                                     * U0580000
*        C O M P U T E   S T O R A G E   R E Q U I R E M E N T        * U0582000
*                                                                     * U0584000
*********************************************************************** U0584100
         SPACE 1                                                        U0586000
         LH    R1,$BUFLENG         GET TOTAL SINGLE BUFFER SIZE      R4 U0588000
         LR    WA,R1               TENTATIVE ADDR OF NEXT BUFFER     R4 U0590000
         LR    R0,WA               R0 = STARTING ADDR OF NEXT BUFFER    U0592000
         SRL   R0,12                DIVIDED BY 4K                       U0594000
         ALR   R1,WA               R1 = ADDRESS OF LAST BYTE            U0596000
         BCTR  R1,0                 OF NEXT BUFFER                      U0598000
         SRL   R1,12                 DIVIDED BY 4K                      U0600000
         CLR   R0,R1               DOES BUFFER CROSS 4K BOUNDARY...     U0602000
         BE    *+10                BR IF NO TO USE TENTATIVE BFR ADDR   U0604000
         SLL   R1,12                ELSE USE NEXT 4K BOUNDARY AS        U0606000
         LR    WA,R1                 STARTING ADDR OF NEXT BUFFER       U0608000
         LR    WB,WA               SAVE RELATIVE ADDR OF NEXT BUFFER    U0610000
         AH    WA,$BUFLENG         R0 = TOTAL BUFFER STORAGE         R4 U0612000
         LA    R0,4095(,WA)         REQUIREMENT ROUNDED                 U0614000
         SRL   R0,12                 UP TO NEXT                         U0616000
         SLL   R0,12                  4K BOUNDARY                       U0618000
         ST    R0,XCBFRSIZ         SAVE BUFFER STORAGE REQUIREMENT      U0620000
         EJECT                                                          U0622000
*********************************************************************** U0622100
*                                                                     * U0624000
*        G E T   P E R M A N E N T   B U F F E R   S T O R A G E      * U0624100
*                                                                     * U0628000
*********************************************************************** U0628100
         SPACE 1                                                        U0630000
         GETMAIN RC,LV=(0),BNDRY=PAGE  THEN GET THE STORAGE             U0632000
         LTR   R15,R15             TEST FOR SUCCESSFUL GETMAIN          U0634000
         BZ    XCGOTKOR            BR IF SO                             U0636000
X03     $ERROR                      ELSE CRUMP                          U0638000
         SPACE 1                                                        U0640000
XCGOTKOR LR    JCT,R1              ASSIGN FIRST BUFFER TO JCT           U0642000
         ALR   WB,R1               ASSIGN SECOND BUFFER TO IOT          U0644000
         ST    WB,JPCEIOT          SAVE IOT BUFFER ADDRESS              U0646000
         OI    JPCESTAT,JPCERLSE   INDICATE PAGE(S) RELEASED            U0648000
         L     WG,$SSVT            THEN GET SSVT ADDRESS                U0650000
         B     XCJGET               AND BR TO PROCESS                   U0652000
         SPACE 1                                                        U0654000
XCBFRSIZ DC    A(*-*)              TOTAL PERMANENT BUFFER STORAGE       U0658000
         TITLE 'HASP JCL CONVERSION PROCESSOR -- MAIN JOB WAIT'         U0660000
         CNOP  0,8                                                      U0662000
XCPGRLSE TM    JPCESTAT,JPCERLSE   DID WE RELEASE JCT/IOT PG(S) YET...  U0664000
         BO    XCJWAIT             BR IF SO                             U0666000
         SPACE 1                                                        U0668000
*********************************************************************** U0668100
*                                                                     * U0670000
*        P A G E - R E L E A S E   P E R M A N E N T   S T O R A G E  * U0672000
*                                                                     * U0674000
*********************************************************************** U0674100
         SPACE 1                                                        U0676000
        $PGSRVC RLSE,(JCT),XCBFRSIZ RELEASE JCT/IOT BUFFER PAGE(S)   R4 U0676100
         OI    JPCESTAT,JPCERLSE   INDICATE PAGE(S) RELEASED            U0680000
         SPACE 1                                                        U0682000
*********************************************************************** U0682100
*                                                                     * U0684000
*        W A I T   F O R   A   J O B                                  * U0686000
*                                                                     * U0688000
*********************************************************************** U0688100
         SPACE 1                                                        U0690000
         CNOP  0,8                                                      U0692000
XCJWAIT $WAIT  JOB,INHIBIT=NO      $WAIT FOR JOB TO BE QUEUED           U0694000
         SPACE 1                                                        U0696000
XCJGET  $QGET  $XEQ,XCPGRLSE       GET A CONVERSION JOB (IF ANY)        U0698000
         LR    WD,R1               SAVE JQE ADDRESS                     U0700000
        $ACTIVE                    INDICATE PROCESSOR ACTIVE         R4 U0700100
         NI    JPCESTAT,255-JPCEINIT  RESET INITIATOR FLAG              U0727000
         TM    JPCESTAT,JPCERLSE   HAS BUFFER STORAGE BEEN RELEASED...  U0728000
         BZ    XCRDJCT             BR IF NO                             U0730000
         NI    JPCESTAT,255-JPCERLSE  RESET PAGE-RELEASED FLAG          U0732000
        $BFRBLD (JCT)              BUILD IOB WITHIN JCT BUFFER          U0734000
        $BFRBLD JPCEIOT            BUILD IOB WITHIN IOT BUFFER          U0736000
         TITLE 'HASP JCL CONVERSION PROCESSOR -- READ THE JCT'       R4 U0736100
*********************************************************************** U0736200
*                                                                     * U0736300
*        R E A D   I N   T H E   J C T                                * U0736400
*                                                                     * U0736500
*********************************************************************** U0736600
         SPACE 1                                                     R4 U0736700
XCRDJCT  NI    JPCESTAT,255-JPCEJCT  INDICATE NO JCT YET             R4 U0736800
         MVI   JCTJQE+3,1            INDICATE NO JQE YET             R4 U0736900
         MVI   PCEDEVTP,PCEDARD    INDICATE READ REQUEST TO $EXCP       U0754000
         LR    WA,JCT              RE-LOAD BUFFER ADDRESS FOR XCREAD    U0756000
         L     WB,JQETRAK          GET THE JCT TRACK ADDRESS            U0758000
         BAL   XL2,XCREAD           AND READ IN THE JCT                 U0760000
         L     R0,$JOBQPTR         GET ADDRESS OF HASP JOB QUEUE        U0762000
         AL    R0,JCTJQE           ADD JQE OFFSET FROM JCT              U0764000
         CLR   R0,WD               TEST JCT VALIDITY                    U0766000
         BNE   XCDISTR             BR IF INVALID TO ABORT JOB           U0768000
        $TIME                      GET CURRENT TIME                     U0770000
         OI    JPCESTAT,JPCEJCT    INDICATE VALID JCT                   U0772000
         STM   R0,R1,JCTCNVON      SET CONVERSION ENTRY TIME AND DATE   U0774000
*              THIS LINE DELETED BY APAR OZ58008               @OZ58008 U0776000
         L     R0,$SID             SET                                  U0776500
         ST    R0,JCTCPUID          CURRENT                             U0777000
         ST    R0,JCTCVSID           SYSTEM ID                          U0777500
         OC    JCTPDDBO,JCTPDDBO   IF 1ST TIME                          U0778000
         BNZ   XCTSTATT             THROUGH JCL CONVERSION,    @OZ36864 U0780000
         MVC   JCTPDDBO,JCTPDDBK     SET DD NUMBER OF 1ST OUTPUT PDDB   U0782000
*                                  THIS LINE DELETED BY APAR   @OZ36864 U0782100
*                                  THIS LINE DELETED BY APAR   @OZ36864 U0782200
*                                  THIS LINE DELETED BY APAR   @OZ36864 U0783000
         TITLE 'HASP JCL CONVERSION PROCESSOR -- SUB-TASK ATTACH'       U0784000
XCTSTATT TM    JPCESTAT,JPCESUBT   TEST FOR INTERFACE SUB-TASK      R41 U0794000
         BO    XCRDIOT             BR IF ALREADY ATTACHED               U0796000
         ICM   WA,15,$CNVTCBA      GET ADDRESS OF SUB-TASK'S TCB        U0798000
         BNZ   XCDETACH            BR IF SUB-TASK ABENDED               U0800000
      IDENTIFY EPLOC=XCCNVNAM,ENTRY=HOSCNVT  SUB-TASK ENTRY POINT       U0802000
         B     XCATTACH            BR TO ATTACH SUB-TASK                U0804000
         SPACE 1                                                        U0806000
*********************************************************************** U0806100
*                                                                     * U0808000
*        D E T A C H   H O S C N V T   ( A B E N D E D )              * U0808100
*                                                                     * U0812000
*********************************************************************** U0812100
         SPACE 1                                                        U0814000
XCDETACH WAIT  ECB=$PCNVECB        WAIT FOR SUB-TASK TO TERMINATE       U0816000
        DETACH $CNVTCBA            DETACH ABENDED SUB-TASK              U0818000
         SPACE 1                                                        U0820000
*********************************************************************** U0820100
*                                                                     * U0822000
*        ( R E ) - A T T A C H   H O S C N V T                        * U0822100
*                                                                     * U0826000
*********************************************************************** U0826100
         SPACE 1                                                        U0828000
XCATTACH MVI   $PCNVECB,0          CLEAR SUB-TASK RETURN CODE           U0830000
         MVC   JCTWORK(XCCNVNAM-XCATLST),XCATLST  MOVE ATTACH PARM LIST U0832000
         LR    R1,SAVE             PASS PCE ADDRESS IN PARAMETER REG    U0834000
        ATTACH ECB=$PCNVECB,MF=(E,(1)),SF=(E,JCTWORK)  ATTACH SUB-TASK  U0836000
         ST    R1,$CNVTCBA         SAVE THE SUB-TASK TCB ADDRESS        U0838000
        $WAIT  WORK                THEN $WAIT FOR SUB-TASK TO $$POST US U0840000
         MVI   $SVCNV,0            RESET $$POST ELEMENT                 U0842000
         OI    JPCESTAT,JPCESUBT   SHOW SUB-TASK IS ATTACHED            U0844000
         B     XCRDIOT              AND BR TO READ THE IOT(S)           U0846000
         EJECT                                                          U0848000
         SPACE 5                                                        U0850000
XCATLST ATTACH EPLOC=XCCNVNAM,SM=SUPV,SF=L                              U0852000
XCCNVNAM DC    CL8'HOSCNVT'        JCL CONVSERSION SUB-TASK ENTRY       U0854000
         TITLE 'HASP JCL CONVERSION PROCESSOR -- IOT READ/CREATE'       U0856000
*********************************************************************** U0856100
*                                                                     * U0858000
*        R E A D   I N   T H E   I O T ( S )                          * U0860000
*                                                                     * U0862000
*********************************************************************** U0862100
         SPACE 1                                                        U0864000
         CNOP  0,8                                                      U0866000
XCRDIOT  L     WA,JPCEIOT          GET BUFFER ADDRESS FOR 1ST IOT       U0868000
         SLR   R0,R0               SHOW NO ADDITIONAL                   U0870000
         ST    R0,IOTIOT            IOT(S)                              U0872000
         L     WB,JCTIOT           GET TRACK ADDRESS OF 1ST IOT         U0874000
         BAL   XL1,XCGETIOT         AND READ IN THE IOT                 U0876000
         SPACE 1                                                        U0878000
XCIOTNXT L     WB,IOTIOTTR         GET TRACK ADDR OF NEXT IOT           U0880000
         LTR   WB,WB               TEST FOR VALID CHAIN FIELD           U0882000
         BZ    XCIOTTRK            BR IF END OF IOT CHAIN               U0884000
         LR    WC,WA                ELSE SAVE ADDRESS OF THIS IOT       U0886000
        $GETBUF WAIT=YES           GET BUFFER FOR IOT                R4 U0896000
         LR    WA,R1               RE-LOAD BUFFER ADDRESS               U0898000
         ST    WA,IOTIOT-IOTDSECT(,WC)  CHAIN TO THIS IOT               U0900000
         BAL   XL1,XCGETIOT        THEN READ IN THE NEXT IOT            U0902000
         B     XCIOTNXT             AND GO CHECK FOR MORE               U0904000
         SPACE 1                                                        U0906000
*********************************************************************** U0906100
*                                                                     * U0908000
*        G E T   N E W   T R A C K   F O R   1 S T   I O T            * U0910000
*                                                                     * U0912000
*********************************************************************** U0912100
         SPACE 1                                                        U0914000
         CNOP  0,8                                                      U0916000
XCIOTTRK DS    0H                                              @OZ52430 U0918000
         ST    WB,IOTIOT           TERMINATE MEMORY CHAIN      @OZ52430 U0918010
         L     WA,JPCEIOT          GET NEW TRACK               @OZ52430 U0918020
        $TRACK IOTMSTAB             FOR 1ST IOT                      R4 U0918100
         ST    R1,IOTTRACK         STORE TRACK ADDRESS FOR THE IOT      U0922000
         ST    R1,JCTIOT           STORE ALSO IN THE JCT                U0924000
         L     R1,$IOTPDDB                   KILL                    R4 U0925000
         LA    R1,IOTPDBOJ(R1,WA)             INPUT JCL              R4 U0926000
         OI    PDBFLAG1-PDBDSECT(R1),PDB1NSOT  PRINT                 R4 U0927000
         EJECT                                                          U0928000
*********************************************************************** U0928100
*                                                                     * U0930000
*        I N I T I A L I Z E   N E L   ' R D R '   P A R M S          * U0932000
*                                                                     * U0934000
*********************************************************************** U0934100
         SPACE 1                                                        U0936000
         LA    R15,JPCENEL         GET ADDRESS OF NEL                   U0938000
         SPACE 1                                                        U0940000
         USING NELDSECT,R15        PROVIDE NEL ADDRESSABILITY           U0942000
         SPACE 1                                                        U0944000
         LA    R1,JCTJMR           GET POINTER TO JMR                   U0946000
         ST    R1,NELJMR            AND STORE IN NEL                    U0948000
         IC    R1,JCTJCLAS         GET JOB CLASS FROM JCT               U0950000
         N     R1,=A(X'3F')        ISOLATE RELATIVE CAT ENTRY NO.       U0952000
         SLL   R1,5                MULTIPLY BY CAT ENTRY LENGTH         U0954000
         AL    R1,$CATABLE         ADD ADDRESS OF FIRST CAT             U0956000
         SPACE 1                                                        U0958000
         USING CATDSECT,R1         PROVIDE CAT ADDRESSABILITY           U0960000
         SPACE 1                                                        U0962000
         MVC   NELOPSWT,CATOPSWT   MOVE SMF OPTION BYTE                 U0964000
         MVC   NELPARMO(L'CATCONVP),CATCONVP  MOVE 'RDR' DEFAULTS       U0966000
         MVC   NELMSGCL,JCTMCLAS   MOVE DEFAULT MESSAGE CLASS           U0968000
         SPACE 1                                                        U0970000
         DROP  R1,R15              KILL CAT, NEL ADDRESSABILITY         U0972000
         SPACE 1                                                        U0974000
*********************************************************************** U0974100
*                                                                     * U0976000
*        P O S T   H O S C N V T                                      * U0976100
*                                                                     * U0980000
*********************************************************************** U0980100
         SPACE 1                                                        U0982000
XCPOST   POST  $CNVECB             POST THE SUB-TASK                    U0984000
        $WAIT  WORK                THEN $WAIT FOR SUB-TASK TO $$POST US U0986000
         MVI   $SVCNV,0            RESET $$POST ELEMENT                 U0988000
         TITLE 'HASP JCL CONVERSION PROCESSOR -- SUB-TASK RETURN'       U0990000
*********************************************************************** U0990100
*                                                                     * U0992000
*        T E S T   H O S C N V T   C O M P L E T I O N   S T A T U S  * U0992100
*                                                                     * U0996000
*********************************************************************** U0996100
         SPACE 1                                                        U0998000
*              THIS LINE DELETED BY APAR OZ58008               @OZ58008 U0998100
         TM    JPCESTAT,JPCEAOPN   TEST FOR SUCCESSFUL 'FAKE-OPEN'      U1020000
         BO    XCCHKPT             BR IF SO                             U1022000
         SPACE 1                                                        U1026000
*********************************************************************** U1026100
*                                                                     * U1028000
*        A L E R T   O P E R A T O R   O F   W A I T                  * U1030000
*                                                                     * U1032000
*********************************************************************** U1032100
         SPACE 1                                                        U1034000
XCTWTO  $WTO   XCTIMMSG,L'XCTIMMSG,JOB=NO,WAIT=YES,ROUTE=$LOG+$MAIN,   CU1036000
               CLASS=$ALWAYS,PRI=$HI  WARN OPERATOR OF WAIT CONDITION   U1038000
         LA    R1,JPCETQE          GET ADDRESS OF PCE TQE               U1040000
         LA    R0,30               SET TIME INTERVAL                    U1042000
         ST    R0,ITIME(,R1)        IN TQE                              U1044000
         ST    SAVE,IPOST(,R1)     STORE PCE ADDRESS IN TQE             U1046000
        $STIMER (R1)               CHAIN THIS TQE                       U1048000
        $WAIT  WORK                 AND WAIT FOR INTERVAL TO ELAPSE     U1050000
         B     XCPOST               AND GO TO TRY CONVERSION AGAIN      U1052000
         SPACE 2                                                        U1054000
XCTIMMSG $MSG  305,'CONVERSION PROCESSOR AWAITING STORAGE'              U1056000
      TITLE 'HASP JCL CONVERSION PROCESSOR -- CHECKPOINT PROCESSING'    U1058000
         CNOP  0,8                                                      U1060000
XCCHKPT  MVI   PCEDEVTP,PCEDAWR    INDICATE WRITE REQUEST TO $EXCP      U1062000
         SPACE 1                                                        U1064000
*********************************************************************** U1064100
*                                                                     * U1066000
*        G E T   T R A C K   F O R   O U T P U T   J C T              * U1068000
*                                                                     * U1070000
*********************************************************************** U1070100
         SPACE 1                                                        U1072000
XCJCTTRK L     WA,JPCEIOT          GET ADDRESS OF 1ST IOT               U1074000
        $TRACK IOTMSTAB            GET TRACK FOR OUTPUT JCT          R4 U1074100
         LR    WC,R1               SAVE OUTPUT JCT TRACK ADDRESS        U1078000
         SPACE 1                                                        U1100000
*********************************************************************** U1100100
*                                                                     * U1102000
*        C H E C K P O I N T   1 S T   I O T                          * U1104000
*                                                                     * U1106000
*********************************************************************** U1106100
         SPACE 1                                                        U1108000
XCKPTIOT L     WB,IOTTRACK         GET TRACK ADDRESS OF IOT             U1110000
         NI    IOTFLAG1,255-IOT1CKPT  RESET CHECKPOINT FLAG             U1112000
         ST    WA,PCEBUFAD         SET BUFFER ADDRESS FOR $EXCP         U1114000
         ST    WB,PCESEEK          SET TRACK ADDRESS FOR $EXCP          U1116000
         LA    R1,PCEDADCT         GET DIRECT ACCESS DCT ADDRESS        U1118000
        $EXCP  (R1)                INITIATE CHECKPOINT OF IOT           U1120000
         EJECT                                                          U1122000
*********************************************************************** U1122100
*                                                                     * U1124000
*        C H E C K P O I N T   T H E   O U T P U T   J C T            * U1126000
*                                                                     * U1128000
*********************************************************************** U1128100
         SPACE 1                                                        U1130000
XCPUTJCT $TIME                     GET CURRENT TIME AND DATE            U1132000
         STM   R0,R1,JCTCNVOF       AND STORE IN JCT                    U1134000
         ST    JCT,PCEBUFAD        SET BUFFER ADDRESS FOR $EXCP         U1136000
         ST    WC,PCESEEK          SET TRACK ADDRESS FOR $EXCP          U1138000
         LA    R1,PCEDADCT         GET DIRECT ACCESS DCT ADDRESS        U1140000
        $EXCP  (R1)                INITIATE CHECKPOINT OF JCT           U1142000
         SPACE 1                                                        U1144000
*********************************************************************** U1144100
*                                                                     * U1146000
*        V A L I D A T E   I O T   A N D   J C T   W R I T E S        * U1148000
*                                                                     * U1150000
*********************************************************************** U1150100
         SPACE 1                                                        U1152000
         CNOP  0,8                                                      U1154000
XCIWAIT $WAIT  IO                  WAIT FOR I/O TO COMPLETE             U1156000
         CLI   PCEBUFCT,0          TEST FOR OUTSTANDING WRITES          U1158000
         BNE   XCIWAIT             BR IF SO                             U1160000
         SPACE 1                                                        U1162000
         TM    BUFECBCC-BUFDSECT(JCT),X'7F'  TEST JCT WRITE             U1164000
         BM    XCJCTTRK            BR IF ERROR WRITING THE JCT          U1166000
         TM    BUFECBCC-BUFDSECT(WA),X'7F'  TEST IOT WRITE              U1168000
         BO    XCTSUTST            BR IF WRITE SUCCESSFUL               U1170000
        $TRACK IOTMSTAB             ELSE GET NEW TRACK FOR IOT       R4 U1170100
         ST    R1,IOTTRACK         STORE TRACK ADDRESS FOR THE IOT      U1174000
         ST    R1,JCTIOT           STORE ALSO IN THE JCT                U1176000
         B     XCKPTIOT            THEN RE-CHECKPOINT JCT AND IOT       U1178000
         EJECT                                                          U1178100
         CNOP  0,8                                                      U1178200
XCTSUTST TM    JCTJOBFL,JCTTSUJB   IF NOT A LOGON,                      U1178300
         BZ    XCFREEBF             BR TO FREE EXTRA IOT BUFFERS        U1178400
         LA    R0,JCTCOK           IF JOB WILL                          U1178500
         CL    R0,JCTCNVRC          FLUSH ANYWAY,                       U1178600
         BNE   XCFREEBF              BR TO FREE EXTRA IOT BUFFERS       U1178700
         SPACE 1                                                        U1178800
*********************************************************************** U1178900
*                                                                     * U1179000
*        T E S T   F O R   D U P L I C A T E   L O G O N   J O B      * U1179100
*                                                                     * U1179200
*********************************************************************** U1179300
         SPACE 1                                                        U1179400
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    U1179500
         L     WE,=V($QINDEX)             PREPARE                       U1179600
         LA    R1,CATTSUCL-(255-QUECLASS)  TO SCAN                      U1179700
         IC    R1,0(R1,WE)                  LOGON                       U1179800
         LA    R1,$JQHEADS-2-QUECHAIN(R1)    QUEUE                      U1179900
         SPACE 1                                                        U1180000
XCTSUNXT LH    R1,QUECHAIN(,R1)    GET OFFSET                           U1180100
         N     R1,=X'0000FFFF'      OF NEXT JQE                         U1180200
         BZ    XCFREEBF            BR IF END OF LOGON QUEUE             U1180300
         SLL   R1,2                 ELSE CONVERT OFFSET                 U1180400
         AL    R1,$JOBQPTR           TO ABSOLUTE ADDRESS                U1180500
         CLC   JQEJNAME,QUEJNAME(R1)  IF NOT DUPLICATE,                 U1180600
         BNE   XCTSUNXT                BR TO TEST NEXT JQE              U1180700
         LA    R0,JCTCDUPL              ELSE INDICATE                   U1180800
         ST    R0,JCTCNVRC               DUPLICATE JOB NAME             U1180900
         B     XCPUTJCT                   AND BR TO RE-WRITE THE JCT    U1181000
         SPACE 1                                               @OZ36864 U1181100
*********************************************************************** U1181200
*                                                                     * U1182000
*        F R E E   D Y N A M I C   I O T   B U F F E R S              * U1184000
*                                                                     * U1186000
*********************************************************************** U1186100
         SPACE 1                                                        U1188000
         CNOP  0,8                                                      U1190000
XCFREEBF L     WA,IOTIOT           GET ADDRESS OF NEXT IOT              U1192000
XCFREEB1 LTR   R1,WA               TEST FOR VALID BUFFER ADDR  @OZ26708 U1194000
         BZ    XCREQJOB            BR IF NO TO RE-QUEUE THE JOB         U1196000
         L     WA,IOTIOT           GET NEXT BUFFER POINTER     @OZ26708 U1197000
        $FREEBUF (R1)               ELSE FREE INPUT IOT BUFFER          U1198000
         B     XCFREEB1            THEN LOOP                   @OZ26708 U1200000
        TITLE 'HASP JCL CONVERSION PROCESSOR -- TERMINATION PROCESSING' U1202000
*********************************************************************** U1202100
*                                                                     * U1204000
*        R E - Q U E U E   T H E   J O B                              * U1206000
*                                                                     * U1208000
*********************************************************************** U1208100
         SPACE 1                                                        U1210000
         CNOP  0,8                                                      U1212000
XCREQJOB $QSUSE                    REQUEST ACCESS TO CHECKPOINT DATA    U1214000
         IC    R0,JCTJCLAS         GET JOB CLASS FROM JCT               U1222200
         TM    JCTJOBFL,JCTTSUJB+JCTSTCJB  IF LOGON OR STARTED TASK,    U1222600
         BNZ   XCQPUT1                      ALWAYS QUEUE FOR XEQ        U1222800
         TM    JCTJOBFL,JCTTSCAN   TEST 'JCL SCAN' OPTION               U1224000
         BO    XCNOXEQ             BR IF JOB TO BYPASS EXECUTION        U1226000
         TM    JQEFLAGS,QUEPURGE   HAS JOB BEEN CANCELLED...            U1228000
         BO    XCNOXEQ             BR IF SO                             U1230000
         LM    R1,WA,JPCEXBNM      GET XBM NAME, IF ANY        @OZ33423 U1230020
         ALR   R1,WA               TEST FOR XBM NAME           @OZ33423 U1230040
         BNZ   XNOHOLD             XBM JOB, DON'T TEST HOLD    @OZ33423 U1230060
         TM    JCTJBOPT,JCTTHOLD+JCTSETUP JOB SPECIFIED        @OZ33423 U1230100
         BZ    XNOHOLD              'TYPRUN=HOLD',                   R4 U1230200
        $WTO   XHELDMSG,L'XHELDMSG,  ISSUE 'JOB HELD' $WTO           R4CU1230300
               JOB=YES,ROUTE=$LOG+$MAIN,                             R4CU1230400
               CLASS=$NORMAL,PRI=$ST                                 R4 U1230500
        $QSUSE                     RE-ESTABLISH QUEUE CONTROL        R4 U1230600
         OI    JQEFLAGS,QUEHOLD1   SET HOLD FLAG IN JQE              R4 U1230700
        $QCKPT (WD)                INSURE CKPT OF CHANGE       @OZ45766 U1230750
         IC    R0,JCTJCLAS         RELOAD JOB CLASS FROM JCT         R4 U1230800
         SPACE 1                                                     R4 U1230900
XNOHOLD  LA    WA,JCTCOK           GET 'GOOD' RETURN CODE TO WA      R4 U1236000
         C     WA,JCTCNVRC         TEST CONVERTER RETURN CODE           U1238000
         BE    XCQPUT2             BR IF CONVERSION A-OK                U1240000
         EJECT                                                 @OZ36864 U1240100
***************************************************************@OZ36864 U1240200
*                                                              @OZ36864 U1240300
*        Q U E U E   J O B   F O R   O U T P U T               @OZ36864 U1240400
*                                                              @OZ36864 U1240500
*        IF ANY DATA SETS ARE TO BE HELD OR SPUN, THE JOB      @OZ36864 U1240600
*        QUEUE AND JOT MUST BE UPDATED FOR ALL CHANGES WITHIN  @OZ36864 U1240700
*        THE SAME QUEUE CONTROL INTERVAL. THIS REQUIREMENT     @OZ36864 U1240800
*        EXISTS TO ENSURE THAT, IF THE SYSTEM SHOULD FAIL ANY  @OZ36864 U1240900
*        TIME DURING THE PROCESSING OF THE SPIN/HOLD REQUESTS, @OZ36864 U1241000
*        THE JOB CAN BE REQUEUED FOR CONVERSION PROCESSING BY  @OZ36864 U1241100
*        THE WARM START PROCESSOR WITHOUT REGARD FOR PARTIAL   @OZ36864 U1241200
*        CONVERSION PROCESSING OF THE JOB.                     @OZ36864 U1241300
*                                                              @OZ36864 U1241400
*        THE FOLLOWING ROUTINES ARE DEPENDENT ON THE FACT THAT @OZ36864 U1241500
*        ALL JES2 DASD-RESIDENT CONTROL BLOCKS CREATED OR      @OZ36864 U1241600
*        ALTERED BY THE CONVERSION PROCESSOR ARE ADDRESSABLE   @OZ36864 U1241700
*        ONLY VIA A NEW JCT, WHOSE ADDRESS IS NOT PLACED IN    @OZ36864 U1241800
*        THE JQE UNTIL ALL CONVERSION PROCESSING HAS BEEN      @OZ36864 U1241900
*        COMPLETED.                                            @OZ36864 U1242000
*                                                              @OZ36864 U1242100
***************************************************************@OZ36864 U1242200
         SPACE 1                                               @OZ36864 U1242300
         USING HQTDSECT,WE         PROVIDE HQT ADDRESSABILITY  @OZ36864 U1242400
         USING PDBDSECT,WF         PROVIDE PDDB ADDRESSABILITY @OZ36864 U1242500
         SPACE 1                                               @OZ36864 U1242600
XCNOXEQ  SLR   WE,WE               CLEAR HQT ADDRESS           @OZ36864 U1242700
         SLR   WB,WB               CLEAR HELD DATA SET COUNT   @OZ36864 U1242800
         LA    WA,$SVXIOTQ-(IOTIOT-IOTDSECT) PREPARE TO SCAN Q @OZ36864 U1243000
         SPACE 1                                               @OZ36864 U1243100
XCNNIOT1 ICM   WA,15,IOTIOT        POINT TO NEXT SPIN IOT      @OZ36864 U1243200
         BZ    XCNVTHQT            BR IF END OF CHAIN          @OZ36864 U1243300
         LR    WF,WA               RELOAD IOT ADDRESS          @OZ36864 U1243400
         AL    WF,$IOTPDDB         POINT TO SPIN/HOLD PDDB     @OZ36864 U1243500
         LTR   WE,WE               HAVE AN HQT YET...          @OZ36864 U1243800
         BNZ   XCNVHOLD            BR IF YES                   @OZ36864 U1243900
        $GETBUF WAIT=YES           GET BUFFER FOR HQT          @OZ36864 U1244000
         LR    WE,R1               RELOAD BUFFER ADDRESS       @OZ36864 U1244100
         MVC   HQTID,=CL4'HQT'     SET HQT ID                  @OZ36864 U1244200
         MVC   HQTLENG,$BUFLENG    SET BUFFER LENGTH           @OZ36864 U1244300
         MVI   HQTFLAG1,HQT1HQT1   INDICATE FIRST HQT          @OZ36864 U1244400
         MVI   HQTFLAG2,0          RESET ALL FLAGS             @OZ36864 U1244500
         MVC   HQTJBKEY,IOTJBKEY   SET SECURITY KEY            @OZ36864 U1244600
         MVC   HQTHQT,$ZEROS       INDICATE LAST HQT           @OZ36864 U1244700
         LA    R1,HQTHQR-HQTDSECT  GET OFFSET OF FIRST HQR     @OZ36864 U1244800
         ST    R1,HQTHQRP           AND SAVE IT                @OZ36864 U1244900
         MVC   PCESEEK,IOTHQT1     SET TRACK ADDRESS FOR $EXCP @OZ36864 U1245000
         EJECT                                                 @OZ36864 U1245100
***************************************************************@OZ36864 U1245200
*                                                              @OZ36864 U1245300
*        ADD HQR TO HQT FOR HELD DATA SET.  IF THE DATA SET IS @OZ36864 U1245400
*        PRINTABLE, INCREMENT A COUNT OF THE HELD DATA SETS.   @OZ36864 U1245500
*                                                              @OZ36864 U1245600
*        THIS ROUTINE ASSUMES THAT THE HELD DATA SET IOTS ARE  @OZ36864 U1245700
*        IN FIFO SEQUENCE AND THAT NO HELD DATA SETS HAVE BEEN @OZ36864 U1245800
*        CREATED FOR THIS JOB BY ANY PRIOR PROCESSING.         @OZ36864 U1245900
*                                                              @OZ36864 U1246000
***************************************************************@OZ36864 U1246100
         SPACE 1                                               @OZ36864 U1246200
         USING HQRDSECT,R1         PROVIDE HQR ADDRESSABILITY  @OZ36864 U1246300
         SPACE 1                                               @OZ36864 U1246400
XCNVHOLD L     R1,HQTHQRP          GET OFFSET OF NEXT HQR SLOT @OZ36864 U1246500
         ALR   R1,WE               CONVERT OFFSET TO ADDRESS   @OZ36864 U1246600
         MVC   HQRIOT,IOTTRACK     SET IOT TRACK ADDRESS       @OZ36864 U1246700
         MVC   HQRIOTTR,IOTIOTTR   SET NEXT IOT TRACK ADDRESS  @OZ36864 U1246800
         MVC   HQRPDDB,PDBDSECT    COPY PDDB                   @OZ36864 U1246900
         MVC   HQRCRDT,JCTCDTOF    SET CREATION DATE           @OZ36864 U1247000
         MVI   HQRSTAT,0           RESET FLAG BITS             @OZ36864 U1247100
         TM    PDBFLAG1,PDB1NULL+PDB1NSOT DATA SET PRINTABLE...@OZ36864 U1247200
         BZ    XCNVHADD            BR IF YES                   @OZ36864 U1247300
         OI    HQRSTAT,HQRUNHLD    TREAT DATA SET AS RELEASED  @OZ36864 U1247400
         B     XCNVHQRN            BR TO CONTINUE              @OZ36864 U1247500
         SPACE 1                                               @OZ36864 U1247600
XCNVHADD LA    WB,1(,WB)           INCREMENT HOLD COUNT        @OZ36864 U1247700
         SPACE 1                                               @OZ36864 U1247800
XCNVHQRN LA    R1,HQRLENG(,R1)     POINT TO NEXT HQR           @OZ36864 U1247900
         SLR   R1,WE               REDUCE ADDRESS TO OFFSET    @OZ36864 U1248000
         ST    R1,HQTHQRP           AND SAVE IN HQT            @OZ36864 U1248100
         B     XCNNIOT1            BR TO PROCESS NEXT IOT      @OZ36864 U1248200
         SPACE 1                                               @OZ36864 U1248300
XCNVTHQT LTR   WE,WE               HQT CREATED...              @OZ36864 U1248400
         BZ    XCNFRIOT            BR IF NO                    @OZ36864 U1248500
         ST    WE,PCEBUFAD         SET BUFFER ADDR FOR $EXCP   @OZ36864 U1248600
         LA    R1,PCEDADCT         GET DIRECT ACCESS DCT ADDR  @OZ36864 U1248700
        $EXCP  (R1),WAIT=YES       WRITE THE HQT               @OZ36864 U1248800
        $FREEBUF (WE)              FREE HQT BUFFER             @OZ36864 U1249000
         SPACE 1                                               @OZ36864 U1250000
         DROP  R1,WE               KILL HQR, HQT ADDRESSABILITY@OZ36864 U1251000
         EJECT                                                 @OZ36864 U1252000
***************************************************************@OZ36864 U1252100
*                                                              @OZ36864 U1253000
*        FREE ALL SPIN/HOLD DATA SET IOTS                      @OZ36864 U1254000
*                                                              @OZ36864 U1255000
***************************************************************@OZ36864 U1256000
         SPACE 1                                               @OZ36864 U1257000
XCNFRIOT L     WA,$SVXIOTQ         POINT TO FIRST SPIN IOT     @OZ36864 U1258000
         MVC   $SVXIOTQ,$ZEROS     CLEAR QUEUE HEAD            @OZ36864 U1258100
         SPACE 1                                               @OZ36864 U1258200
XCNNIOT5 LTR   R1,WA               RELOAD IOT ADDRESS          @OZ36864 U1258300
         BZ    XCNVOUT             BR IF END OF CHAIN          @OZ36864 U1258400
         LH    R0,IOTLENG          GET BUFFER LENGTH           @OZ36864 U1258500
         ICM   R0,8,=AL1(231)      SET SUBPOOL NUMBER          @OZ36864 U1258600
         L     WA,IOTIOT           POINT TO NEXT IOT           @OZ36864 U1258700
         FREEMAIN R,LV=(0),A=(1)   FREE CURRENT IOT            @OZ36864 U1258800
         B     XCNNIOT5            BR TO FREE NEXT IOT         @OZ36864 U1258900
         SPACE 1                                               @OZ36864 U1259000
         DROP  WF                  KILL PDDB ADDRESSABILITY    @OZ36864 U1259100
         SPACE 1                                               @OZ36864 U1259200
***************************************************************@OZ36864 U1259300
*                                                              @OZ36864 U1259400
*        QUEUE JOB FOR OUTPUT                                  @OZ36864 U1259500
*                                                              @OZ36864 U1259600
***************************************************************@OZ36864 U1259700
         SPACE 1                                               @OZ36864 U1259800
XCNVOUT $QSUSE                     OBTAIN ACCESS TO CKPT DATA  @OZ36864 U1259900
         SLL   WB,4                SHIFT HELD DATA SET COUNT   @OZ36864 U1260000
         STH   WB,JQEHLDCT          AND STORE IN JQE           @OZ36864 U1260100
         MVI   JQEPRIO,FF          SET EXPRESS PRIORITY        @OZ36864 U1260200
         NI    JQEFLAGS,FF-QUEPURGE-QUEHOLD1  RESET FLAGS      @OZ36864 U1260300
         ST    WC,JQETRAK          SET NEW JCT TRACK ADDRESS   @OZ36864 U1260400
        $QMOD  (WD),$OUTPUT        QUEUE THE JOB FOR OUTOUT    @OZ36864 U1260500
         B     XCRET               THEN TERMINATE PROCESSING   @OZ36864 U1262000
         EJECT                                                 @OZ36864 U1264000
*********************************************************************** U1264100
*                                                                     * U1266000
*        Q U E U E   J O B   F O R   E X E C U T I O N                * U1268000
*                                                                     * U1270000
*********************************************************************** U1270100
         SPACE 1                                                        U1272000
         CNOP  0,8                                                      U1274000
XCQPUT1  NI    JQEFLAG2,255-QUEINDAF  RESET IND MODE INDICATOR          U1274300
         TM    JPCESTAT,JPCEINIT   IF NOT A VS2 INITIATOR,              U1274500
         BZ    XCQPUT2              BR TO QUEUE JOB FOR EXECUTION       U1274800
         OI    JQEFLAG2,QUEINIT      OR FIRST INDICATE JOB IS INIT      U1275000
         SPACE 1                                                        U1275300
XCQPUT2  N     R0,=A(QUECLASS)     ENSURE VALID QUEUE TYPE              U1275500
         ST    WC,JQETRAK          SET NEW JCT TRACK ADDRESS         R4 U1275600
        $QPUT  (WD),(R0)           THEN QUEUE JOB FOR EXECUTION         U1276000
         SPACE 1                                                        U1278000
*********************************************************************** U1278100
*                                                                     * U1280000
*        J O B   R E - Q U E U E D   - -   T E R M I N A T E          * U1282000
*                                                                     * U1284000
*********************************************************************** U1284100
         SPACE 1                                                        U1286000
XCRET   $DORMANT                   SHOW PROCESSOR INACTIVE              U1288000
         MVC   PCEJQE,$ZEROS       CLEAR JQE ADDRESS           @OZ32566 U1289000
         B     XCJGET              THEN BR TO GET ANOTHER JOB           U1290000
         SPACE 2                                                     R4 U1291000
XHELDMSG $MSG  101,'HELD'          'JOB HELD' MESSAGE                R4 U1291100
 TITLE 'HASP JCL CONVERSION PROCESSOR -- CONTROL BLOCK I/O ROUTINES'    U1292000
*********************************************************************** U1292100
*                                                                     * U1294000
*        R E A D   T H E   I O T                                      * U1296000
*                                                                     * U1298000
*********************************************************************** U1298100
         SPACE 1                                                        U1300000
         CNOP  0,8                                                      U1302000
XCGETIOT BAL   XL2,XCREAD          READ THE IOT                         U1304000
         SPACE 1                                                        U1306000
*********************************************************************** U1306100
*                                                                     * U1308000
*        V A L I D A T E   T H E   I O T                              * U1310000
*                                                                     * U1312000
*********************************************************************** U1312100
         SPACE 1                                                        U1314000
         CLC   IOTJBKEY,JCTJBKEY   TEST IOT VALIDITY                    U1316000
         BER   XL1                 RETURN IF VALID                      U1318000
         B     XCDISTR              ELSE TAKE CORRECTIVE ACTION         U1320000
         SPACE 1                                                        U1322000
         SPACE 1                                                        U1324000
*********************************************************************** U1324100
*                                                                     * U1326000
*        C O N T R O L   B L O C K   R E A D   R O U T I N E          * U1328000
*                                                                     * U1330000
*********************************************************************** U1330100
         SPACE 1                                                        U1332000
         CNOP  0,8                                                      U1334000
XCREAD   ST    WA,PCEBUFAD         SET BUFFER ADDRESS FOR $EXCP         U1336000
         ST    WB,PCESEEK          SET TRACK ADDRESS FOR $EXCP          U1338000
         LA    R1,PCEDADCT         GET DIRECT ACCESS DCT ADDRESS        U1340000
        $EXCP  (R1),WAIT=YES       READ CONTROL BLOCK                R4 U1342000
         BOR   XL2                 RETURN IF SUCCESSFUL              R4 U1344000
         EJECT                                                       R4 U1346000
*********************************************************************** U1348000
*                                                                     * U1350000
*        E R R O R   R E A D I N G   A   C O N T R O L   B L O C K    * U1352000
*                                                                     * U1354000
*********************************************************************** U1356000
         SPACE 1                                                        U1376000
XCDISTR $DISTERR                   CAUSE DISAST. ERR MSG TO BE WRITTEN  U1378000
         TM    JPCESTAT,JPCEJCT    TEST FOR VALID JCT                   U1380000
         BZ    XCNOJCT             BR IF NO                             U1382000
         XC    IOTIOT,IOTIOT       CLEAR IOT CHAIN FIELD             R4 U1382100
         LA    R0,JCTCABND         GET ABEND RETURN CODE                U1384000
         ST    R0,JCTCNVRC          AND STORE IN JCT                    U1386000
         L     WC,JQETRAK          GET TRACK ADDRESS OF INPUT JCT       U1388000
         L     WA,JPCEIOT          GET ADDRESS OF 1ST IOT               U1390000
         B     XCFREEBF             AND BR TO RE-QUEUE THE JOB          U1392000
         SPACE 1                                                        U1394000
XCNOJCT  MVI   JCTJOBFL,0          SET FLAGS TO BYPASS EXECUTION        U1396000
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA R4 U1397000
         L     WC,JQETRAK          GET CURRENT JCT TRACK ADDRESS     R4 U1397100
         LA    R0,$PURGE           INDICATE PURGE QUEUE                 U1398000
         LH    WB,=H'10000'        IF USER                              U1400000
         CH    WB,JQEJOBNO          JOB,                                U1402000
         BH    XCQPUT2               PURGE IT                           U1404000
         LA    R0,CATSTCCL         IF                                   U1406000
         ALR   WB,WB                STARTED                             U1408000
         CH    WB,JQEJOBNO           TASK                               U1410000
         BH    XCQPUT1                OR                                U1412000
         LA    R0,CATTSUCL             LOGON,                           U1414000
         B     XCQPUT1                  QUEUE JOB FOR EXECUTION         U1416000
         SPACE 1                                                        U1418000
         DROP  WA,WD,WG,BASE2      KILL ADDRESSABILITY         @OZ36864 U1420000
         SPACE 2                                               @OZ36864 U1420100
         LTORG                                                 @OZ36864 U1420200
         TITLE 'HASP JCL CONVERSION PROCESSOR -- CONVERSION SUB-TASK INCU1422000
               ITIALIZATION'                                            U1424000
*********************************************************************** U1424100
*                                                                     * U1426000
*        H O S C N V T   I N I T I A L   E N T R Y   P O I N T        * U1428000
*                                                                     * U1430000
*********************************************************************** U1430100
         SPACE 1                                                        U1432000
HOSCNVT  $ENTRY BASE=R15           HASP JCL CONVERSION SUB-TASK         U1434000
         LR    BASE2,R15           RELOAD BASE ADDRESS         @OZ36864 U1435000
         SPACE 1                                                        U1436000
         DROP  SAVE,R15            KILL ADDRESSABILITY                  U1438000
         USING HOSCNVT,BASE2       SET SUBTASK ADDRESSABILITY  @OZ36864 U1439000
         USING PCEDSECT,BASE3      PROVIDE SUB-TASK PCE ADDRESSABILITY  U1440000
         SPACE 1                                                        U1442000
         LR    BASE3,R1            RELOAD ATTACHER'S PCE ADDRESS        U1444000
         STCM  SAVE,7,JPCESAVE+1   SAVE ADDRESS OF SYSTEM PROVIDED AREA U1446000
         L     BASE1,PCEBASE1      GET HCT ADDRESS             @OZ36864 U1448000
         LA    R2,4(,SAVE)         PROVIDE WORK AREA ADDRESS            U1449000
         MVC   0(XCNVSTLN,R2),XCNVABND  MOVE ESTAE PARAM LIST           U1450000
         ESTAE XCNVSTAE,PARAM=(BASE3),MF=(E,(R2))  PROVIDE RCVY@OZ29021 U1451000
         LA    R0,JPCEDDNM                    CLEAR BULK                U1452000
         LA    R1,JCLPCEWS-(JPCEDDNM-PCEWORK)  OF CONVERSION            U1454000
         SLR   R3,R3                            PROCESSOR               U1456000
         MVCL  R0,R2                             WORK AREA              U1458000
         EJECT                                                       R4 U1458100
*********************************************************************** U1458200
*                                                                     * U1462000
*        I N I T I A L I Z E   N E L   A D D R E S S E S              * U1464000
*                                                                     * U1466000
*********************************************************************** U1466100
         SPACE 1                                                        U1468000
         LA    R5,JPCENEL          GET ADDRESS OF NEL                   U1470000
         SPACE 1                                                        U1472000
         USING NELDSECT,R5         PROVIDE NEL ADDRESSABILITY           U1474000
         SPACE 1                                                        U1476000
         LA    R0,JPCEQMPA         GET ADDRESS OF QMPA                  U1478000
         ST    R0,NELQMPA           AND STORE IN NEL                    U1480000
         LA    R0,XCNVXLST         GET ADDRESS OF CONVERTER EXIT LIST   U1482000
         ST    R0,NELEXLST          AND STORE IN NEL                    U1484000
         LA    R0,JPCECOM          GET ADDRESS OF CONSOLE ID FIELD      U1486000
         ST    R0,NELCOMID          AND STORE IN NEL                    U1488000
         LA    R0,JPCETXT          GET ADDRESS OF INTERNAL TEXT ACB     U1490000
         ST    R0,NELTXTCB          AND STORE IN NEL                    U1492000
         LA    R0,JPCEMSG          GET ADDRESS OF JCL MESSAGES ACB      U1494000
         ST    R0,NELMSGCB          AND STORE IN NEL                    U1496000
         LA    R0,JPCEJCL          GET ADDRESS OF JCL ACB               U1498000
         ST    R0,NELJCLCB          AND STORE IN NEL                    U1500000
         LA    R0,JPCEJCLI         GET ADDRESS OF STATEMENT IMAGE ACB   U1502000
         ST    R0,NELSTMCB          AND STORE IN NEL                    U1504000
         MVC   JPCEPROC(XCNVDCBL),XCNVDCB  FILL IN PROCLIB DCB          U1508000
         OI    JPCEPROC+DCBOPTCD-DCBDSECT,DCBSRCHD  SET SEARCH DIRECT   U1510000
         LA    R0,JPCEPROC         STORE PROCLIB DCB ADDRESS            U1512000
         ST    R0,JPCEDCB           IN PROCLIB OPEN LIST                U1514000
         MVC   JPCEDCB(1),XCNVOPNL MOVE OPTION BYTE TO OPEN LIST        U1516000
         EJECT                                                       R4 U1516100
*********************************************************************** U1516200
*                                                                     * U1520000
*        C R E A T E   ' F A K E - O P E N E D '   A C B S            * U1522000
*                                                                     * U1524000
*********************************************************************** U1524100
         SPACE 1                                                        U1526000
         MVC   JPCEJCL(XCNVACBL),XCNVACB  FILL IN JCL ACB               U1528000
         MVC   JPCEJCLI(3*XCNVACBL),JPCEJCL  AND REST OF ACBS           U1530000
         LA    R5,JPCEJCL-XCNVACBL PREPARE TO CHAIN TOGETHER            U1532000
         LA    R0,JPCEDEBS          ACBS AND DEBS                       U1534000
         LA    R1,4                COUNT OF ACBS                        U1536000
         SPACE 1                                                        U1538000
         USING ACBDSECT,R5         PROVIDE ACB ADDRESSABILITY           U1540000
         USING DEBDSECT,R3         PROVIDE DEB ADDRESSABILITY           U1542000
         SPACE 1                                                        U1544000
XCNVACBS LA    R5,XCNVACBL(,R5)    GET ADDRESSES OF NEXT                U1546000
         LR    R3,R0                ACB AND CORRESPONDING DEB           U1548000
         ST    R3,ACBDEB-1         CHAIN DEB TO ACB                     U1550000
         ST    R5,DEBDCBAD          AND ACB TO DEB                      U1552000
         MVI   DEBDEBID,X'0F'      MOVE IN DEB IDENTIFIER BYTE          U1554000
         LA    R0,DEBBASND         CHAIN NEXT DEB                       U1556000
         ST    R0,DEBDEBAD          TO CURRENT DEB                      U1558000
         BCT   R1,XCNVACBS         LOOP THRU ALL ACBS                   U1560000
         SPACE 1                                                        U1562000
         ST    R1,DEBDEBAD         ZERO CHAIN FIELD IN LAST DEB         U1564000
         OI    ACBMACR1,ACBUBF+ACBIN  UPDATE MACRF FIELD                U1566000
         LA    R5,JPCEJCL                IN JCL ACB AND IN              U1568000
         MVI   ACBMACR1,ACBADR+ACBSEQ+ACBIN  INTERNAL TEXT ACB          U1570000
         LA    R5,JPCEMSG          INDICATE ASA CONTROL CHARACTER       U1572000
         MVI   ACBCCTYP,ACBCCASA    IN SYSTEM MESSAGES ACB              U1574000
         MVI   JPCEQMPA,237        SUB-POOL NO. FOR CONVERTER GETMAINS  U1576000
         SPACE 1                                                        U1578000
*********************************************************************** U1578100
*                                                                     * U1580000
*        L O A D   O S / V S 2   J C L   C O N V E R T E R            * U1582000
*                                                                     * U1584000
*********************************************************************** U1584100
         SPACE 1                                                        U1586000
XCNVLOAD LOAD  EPLOC=XCNVNAME      LOAD OS/VS2 JCL CONVERTER            U1588000
         ST    R0,XCNVRTER          AND SAVE ITS ADDRESS                U1590000
         L     R5,$SSVT            GET ADDRESS OF SSVT                  U1592000
         SPACE 1                                                        U1594000
         DROP  R3                  KILL DEB ADDRESSABILITY              U1596000
         USING $SVDSECT,R5         PROVIDE SSVT ADDRESSABILITY          U1598000
         SPACE 1                                                        U1600000
         MVC   XJSSNAME(4),$SVSSNM MOVE SUB-SYSTEM NAME TO DSNAME       U1602000
         CNOP  4,8                 ALIGN XCNVWAIT ON DOUBLE-WORD        U1604000
         BAL   XL1,XCNVPOST        GO WAKE UP HASP                      U1606000
         TM    $STATUS,$SYSEXIT    IS HASP BEING TERMINATED..  @OZ18424 U1607000
         BO    XCNVRET             BR IF YES                   @OZ18424 U1607100
         TITLE 'HASP JCL CONVERSION PROCESSOR -- CONVERSION SUB-TASK MACU1608000
               IN PROCESSING'                                           U1610000
*********************************************************************** U1610100
*                                                                     * U1612000
*        W A I T   F O R   A   J O B                                  * U1614000
*                                                                     * U1616000
*********************************************************************** U1616100
         SPACE 1                                                        U1618000
XCNVWAIT WAIT  ECB=$CNVECB         WAIT FOR HASP TO PASS US A JOB       U1620000
         TM    $STATUS,$SYSEXIT    IS HASP BEING TERMINATED...          U1622000
         BO    XCNVRET             BR IF YES                            U1624000
         L     JCT,PCEJCT          GET ADDRESS OF JCT                   U1626000
         L     WC,$IOTPDDB              PRESET OFFSET                R4 U1628000
         LA    WC,IOTPDBOD-PDBLENG(,WC)  OF 1ST PDDB                 R4 U1630000
         XC    JPCEXBNM,JPCEXBNM   SET FOR NORMAL JOB                   U1634000
         TM    JCTJBOPT,JCTXBACH   TEST FOR BATCHING JOB                U1636000
         BZ    XCNVFOPN            BR IF NO                             U1638000
         L     R1,$PITABLE         PREPARE TO SCAN PITS              R4 U1640000
         SPACE 1                                                        U1644000
         USING PITDSECT,R1         PROVIDE PIT ADDRESSABILITY           U1646000
         SPACE 1                                                        U1648000
         CNOP  0,8                                                      U1650000
XCNVPIT  TM    PITSTAT,PITBUSY     TEST FOR ACTIVE PIT               R4 U1654000
         BZ    XCNVPITN            BR IF NO                             U1656000
         L     WA,PITSJB            ELSE GET SJB ADDRESS FROM PIT       U1658000
         SPACE 1                                                        U1660000
         USING SJBDSECT,WA         PROVIDE SJB ADDRESSABILITY           U1662000
         SPACE 1                                                        U1664000
         CLC   JCTJOBID,SJBJOBID   TEST FOR JOB ID MATCH                U1666000
         BE    XCNVXBJB            BR IF SO                             U1668000
         SPACE 1                                                        U1670000
XCNVPITN L     R1,PITNEXT          POINT TO NEXT PIT                 R4 U1672000
         LTR   R1,R1               TEST PIT ADDRESS                  R4 U1673000
         BNZ   XCNVPIT             BR IF VALID                       R4 U1674000
         ST    R1,JCTCNVRC          ELSE INDICATE                    R4 U1674100
         OI    JPCESTAT,JPCEAOPN     NORMAL RETURN                   R4 U1674200
         B     XCNVPOST               AND BR TO BYPASS CONVERSION    R4 U1674300
         SPACE 1                                                        U1680000
         CNOP  2,8                                                   R4 U1681000
XCNVXBJB MVC   JPCEXBNM,SJBXBJNM   MOVE JOB/PROC NAME TO PCE            U1682000
         L     WC,$IOTPDDB         RESET OFFSET                      R4 U1683000
         SL    WC,=A(PDBLENG)       OF 1ST PDDB                      R4 U1684000
         SPACE 1                                                        U1686000
         DROP  R1,WA               KILL CTL BLOCK ADDRESSABILITY        U1688000
         EJECT                                                          U1690000
*********************************************************************** U1690100
*                                                                     * U1698000
*        ' F A K E   O P E N '   T H E   A C B ' S                    * U1700000
*                                                                     * U1702000
*********************************************************************** U1702100
         SPACE 1                                                        U1704000
XCNVFOPN L     R15,$SVCOPN         GET ADDRESS OF ACB OPEN ROUTINE   R4 U1706000
         NI    JPCESTAT,255-JPCEAOPN  RESET ACB OPEN FLAG               U1708000
         CALL  (15)                    AND 'FAKE OPEN' THE ACB'S        U1710000
         BNZ   XCNVPOST            BR IF OPEN NOT SUCCESSFUL            U1712000
         OI    JPCESTAT,JPCEAOPN    ELSE SHOW SUCCESSFUL OPEN           U1714000
         CLI   JCTPROCN,0          BR IF PROCLIB               @OZ38058 U1714100
         BNE   XCNVPROT             SPECIFIED ON /*JOBPARM     @OZ38058 U1714200
         IC    R1,JCTJCLAS         DETERMINE                   @OZ38058 U1714300
         N     R1,=A(X'3F')         ADDRESS                    @OZ38058 U1714400
         SLL   R1,5                  OF THE                    @OZ38058 U1714500
         AL    R1,$CATABLE            CAT                      @OZ38058 U1714600
         MVC   JCTPROCN,=CL8'PROC'                 BUILD       @OZ38058 U1714700
         MVC   JCTPROCN+4(2),CATPROCN-CATDSECT(R1)  DDNAME     @OZ38058 U1714800
XCNVPROT DS    0H                                              @OZ38058 U1714900
         CLC   JPCEDDNM,JCTPROCN   TEST NEW PROCLIB DDNAME              U1716000
         BE    XCNVCNV             BR IF SAME AS LAST JOB               U1718000
         CLOSE MF=(E,JPCEDCB)      CLOSE THE PROCLIB DATA SET           U1720000
         SPACE 1                                                        U1722000
*********************************************************************** U1722100
*                                                                     * U1724000
*        O P E N   P R O C L I B   D A T A   S E T                    * U1726000
*                                                                     * U1728000
*********************************************************************** U1728100
         SPACE 1                                                        U1730000
XCNVPROC MVC   DCBDDNAM-DCBDSECT+JPCEPROC,JCTPROCN  MOVE IN DDNAME      U1732000
         MVC   JPCEDDNM,JCTPROCN   SAVE NEW PROCLIB DDNAME              U1734000
         OPEN  MF=(E,JPCEDCB)      OPEN THE PROCLIB DATA SET            U1736000
         LA    R2,JPCEPROC         ASSUME SUCCESSFUL OPEN               U1738000
         ST    R2,NELPROCB-NELDSECT+JPCENEL  OF PROCLIB                 U1740000
         TM    DCBOFLGS-DCBDSECT+JPCEPROC,DCBOFOPN  TEST OPEN STATUS    U1742000
         BO    XCNVALID            BR IF SUCCESSFUL                     U1744000
         MVC   XCNVMSG(XOPNERRL),XOPNERR  MOVE ERROR MESSAGE            U1746000
         MVC   XCNVMSG+XOPNERRL-12(8),JCTPROCN  FILL IN DDNAME          U1748000
        $$WTO  XCNVMSG             ISSUE MESSAGE TO OPERATOR        R41 U1750000
         CLC   JCTPROCN,=CL8'PROC00'  WAS THIS THE PRIMARY PROCLIB...   U1752000
         MVC   JCTPROCN,=CL8'PROC00'  CHANGE NAME FOR OPEN IN CASE NO   U1754000
         BNE   XCNVPROC            BR IF A SECONDARY PROCLIB            U1756000
         MVI   JPCEDDNM,0          ENSURE NEXT JOB RE-OPENS PROCLIB     U1757000
         XC    NELPROCB-NELDSECT+JPCENEL,NELPROCB-NELDSECT+JPCENEL      U1758000
         B     XCNVCNV              AND GO TO CALL CONVERTER            U1760000
         EJECT                                                          U1762000
*********************************************************************** U1762100
*                                                                     * U1764000
*        V A L I D A T E   P R O C L I B   B L K S I Z E              * U1766000
*                                                                     * U1768000
*********************************************************************** U1768100
         SPACE 1                                                        U1770000
         CNOP  0,8                                                      U1772000
XCNVALID LH    R1,DCBBLKSI-DCBDSECT+JPCEPROC  GET PROCLIB BLKSIZE       U1774000
         LTR   R1,R1               TEST FOR ZERO BLKSIZE                U1776000
         BZ    XCNVBAD             BR IF SO                             U1778000
         LA    R3,80               LRECL REQUIRED BY CONVERTER          U1780000
         CH    R3,DCBLRECL-DCBDSECT+JPCEPROC  TEST PROCLIB LRECL        U1782000
         BNE   XCNVBAD             BR IF NOT VALID LRECL                U1784000
         SLR   R0,R0               ZERO R0 FOR DIVIDE                   U1786000
         DR    R0,R3               DIVIDE BLKSIZE BY LRECL              U1788000
         LTR   R0,R0               TEST FOR REMAINDER                   U1790000
         BZ    XCNVCNV             BR IF VALID LRECL AND BLKSIZE        U1792000
         SPACE 1                                                        U1794000
*********************************************************************** U1794100
*                                                                     * U1796000
*        P R O C L I B   L R E C L / B L K S I Z E   I N V A L I D    * U1798000
*                                                                     * U1800000
*********************************************************************** U1800100
         SPACE 1                                                        U1802000
XCNVBAD  MVC   XCNVMSG(XIOERRLN),XIOERROR  MOVE ERROR MESSAGE           U1804000
         MVC   XCNVMSG+XIOERRLN-12(8),JPCEDDNM  FILL IN DDNAME          U1806000
        $$WTO  XCNVMSG             ISSUE MESSAGE TO OPERATOR        R41 U1808000
         MVI   JPCEDDNM,0          ENSURE NEXT JOB RE-OPENS PROCLIB     U1809000
         XC    NELPROCB-NELDSECT+JPCENEL,NELPROCB-NELDSECT+JPCENEL      U1810000
         SPACE 1                                                     R4 U1810100
*********************************************************************** U1810200
*                                                                     * U1836000
*        L I N K   T O   J C L   C O N V E R T E R                    * U1838000
*                                                                     * U1840000
*********************************************************************** U1840100
         SPACE 1                                                        U1842000
XCNVCNV  L     WB,JPCEIOT          GET ADDRESS OF 1ST IOT               U1848000
         STM   WB,WC,XIOTADDR      SAVE FOR INTERNAL TEXT EXIT          U1850000
         L     R15,XCNVRTER        GET ADDRESS OF OS JCL CONVERTER      U1852000
         CALL  (15),MF=(E,JPCENEL)  AND LINK TO IT                      U1854000
         ST    R15,JCTCNVRC        SAVE CONVERTER RETURN CODE           U1856000
         LA    R0,JCTCIO           TEST FOR SUCCESSFUL                  U1858000
         CLR   R0,R15               JCL CONVERSION                      U1860000
         BH    XCNVWRAP            BR IF YES                         R4 U1860100
         MVI   JPCEDDNM,0           ELSE INSURE PROCLIB RE-OPENED       U1864000
         EJECT                                                       R4 U1864100
XCNVWRAP SLR   R0,R0               CLEAR REGISTER 0                     U1868000
         ICM   R0,8,JPCEQMPA       INSERT SWA-CREATE SUBPOOL NUMBER     U1870000
      FREEMAIN R,SP=(0)            FREE ANY AREAS OBTAINED BY CONVERTER U1872000
         SPACE 1                                                        U1874000
*********************************************************************** U1874100
*                                                                     * U1876000
*        ' F A K E   C L O S E '   T H E   A C B ' S                  * U1878000
*                                                                     * U1880000
*********************************************************************** U1880100
         SPACE 1                                                        U1882000
         SLR   R0,R0               ASSUME ZERO RETURN CODE              U1884000
         CL    R0,JCTCNVRC         TEST ASSUMPTION                      U1886000
         BE    XCNVFCLS            BR IF VALID                          U1888000
         TM    JCTJOBFL,JCTSTCJB+JCTTSUJB  TEST JOB TYPE                U1890000
         BNZ   XCNVFCLS            BR IF LOGON OR STARTED TASK          U1892000
         L     R0,JCTCNVRC          ELSE LOAD RETURN CODE               U1894000
         SPACE 1                                                        U1896000
         CNOP  0,8                                                      U1898000
XCNVFCLS L     R15,$SVCCLS         GET ADDRESS OF ACB CLOSE ROUTINE     U1900000
         CALL  (15)                 AND 'FAKE CLOSE' THE ACB'S          U1902000
         SPACE 1                                                        U1904000
*********************************************************************** U1904100
*                                                                     * U1906000
*        A L E R T   H A S P   T H A T   W E   A R E   R E A D Y      * U1908000
*                                                                     * U1910000
*********************************************************************** U1910100
         SPACE 1                                                        U1912000
XCNVPOST MVI   $CNVECB,0           CLEAR ECB                            U1914000
        $$POST ELMT=$SVCNV,R11=HCT  POST PROCESSOR AND WAKE UP HASP     U1916000
         BR    XL1                 RETURN TO CALLER                     U1918000
         TITLE 'HASP JCL CONVERSION PROCESSOR -- CONVERSION SUB-TASK TECU1920000
               RMINATION'                                               U1922000
*********************************************************************** U1922100
*                                                                     * U1924000
*        T E R M I N A T E   H O S C N V T                            * U1924100
*                                                                     * U1928000
*********************************************************************** U1928100
         SPACE 1                                                        U1930000
XCNVRET  CLOSE MF=(E,JPCEDCB)      CLOSE THE PROCLIB DATA SET           U1932000
        DELETE EPLOC=XCNVNAME      DELETE OS JCL CONVERTER              U1934000
         L     R15,$SVCCLS         GET ADDRESS OF ACB CLOSE ROUTINE     U1936000
         OI    JPCESJBP,X'80'      INDICATE 'PERMANENT' CLOSE OF ACB'S  U1938000
         SLR   R0,R0               DISALLOW HELD DATA SET SPINOFF       U1940000
         CALL  (15)                 AND 'FAKE CLOSE' THE ACB'S          U1942000
         SVC   3                   THEN RETURN TO SYSTEM                U1944000
         EJECT                                                       R4 U1944100
        $MID   306                 PROCLIB ERROR MESSAGE NUMBER      R4 U1944200
XIOERROR WTO   '&MID.INVALID LRECL OR BLKSIZE ON XXXXXXXX',          R4CU1944300
               ROUTCDE=(2),DESC=(4),MF=L                       @OZ30033 U1944400
XIOERRLN EQU   *-XIOERROR          LENGTH OF I/O ERROR MESSAGE       R4 U1944500
         SPACE 2                                                     R4 U1944600
        $MID   307                 OPEN ERROR MESSAGE NUMBER         R4 U1944700
XOPNERR  WTO   '&MID.UNABLE TO OPEN XXXXXXXX',                       R4CU1944800
               ROUTCDE=(2),DESC=(4),MF=L                       @OZ30033 U1944900
XOPNERRL EQU   *-XOPNERR           LENGTH OF OPEN ERROR MESSAGE      R4 U1945000
         SPACE 1                                                     R4 U1945100
         AIF   ('&PRINT' NE 'OFF').NOGEN1                           R41 U1946500
         PUSH  PRINT                                                R41 U1947000
         PRINT NOGEN                                                    U1948000
.NOGEN1  SPACE 1                                                    R41 U1950000
XCNVOPNL OPEN  XCNVDCB,MF=L        MODEL DCB OPEN LIST                  U1952000
         SPACE 1                                                        U1954000
XCNVDCB  DCB   DSORG=PO,MACRF=R,RECFM=FB     MODEL DCB                  U1956000
XCNVDCBL EQU   *-XCNVDCB           LENGTH OF MODEL DCB                  U1958000
         SPACE 1                                                        U1960000
XCNVACB  ACB   MACRF=(ADR,SEQ,OUT)           MODEL ACB                  U1962000
XCNVACBL EQU   *-XCNVACB           LENGTH OF MODEL ACB                  U1964000
         SPACE 1                                                        U1966000
XCNVABND ESTAE ,CT,PURGE=NONE,ASYNCH=YES,TERM=NO,MF=L          @OZ29021 U1966100
XCNVSTLN EQU   *-XCNVABND          LENGTH OF ESTAE PARAMETER LIST       U1969000
         SPACE 1                                                        U1970000
         AIF   ('&PRINT' NE 'OFF').NOGEN2                           R41 U1971000
         POP   PRINT                                                R41 U1972000
.NOGEN2  SPACE 1                                                    R41 U1974000
XCNVNAME DC    CL8'IEFVH1'         NAME OF OS JCL CONVERTER             U1976000
XCNVRTER DS    A                   ADDRESS OF JCL CONVERTER             U1978000
         SPACE 1                                                        U1980000
XCNVXLST DC    0D'0',H'16,0',F'0'  CONVERSION EXIT LIST HEADER RECORD   U1982000
         DC    AL1(NELEXADD,NELTXTEX,0,0),A(XTXTEXIT)  POST-SCAN EXIT   U1984000
         SPACE 1                                                        U1986000
         DROP  R5                  KILL SSVT ADDRESSABILITY             U1988000
         TITLE 'HASP JCL CONVERSION PROCESSOR -- CONVERSION SUB-TASK STCU1990000
               AE ROUTINE'                                              U1992000
*********************************************************************** U1992100
*                                                                     * U1994000
*        H O S C N V T   E S T A E   R O U T I N E                    * U1994100
*                                                                     * U1998000
*********************************************************************** U1998100
         SPACE 1                                                        U2000000
         USING XCNVSTAE,R15        PROVIDE LOCAL ADDRESSABILITY@OZ29021 U2002000
         SPACE 1                                               @OZ29021 U2004000
XCNVSTAE L     BASE2,=A(HOSCNVT)   GET NORMAL BASE             @OZ43309 U2006000
         SPACE 1                                               @OZ29021 U2008000
         DROP  R15                 KILL LOCAL ADDRESSABILITY   @OZ29021 U2010000
         SPACE 1                                               @OZ29021 U2012000
         BAL   XL1,XCNVSINT        SET UP ESTAE ENVIRONMENT    @OZ29021 U2014000
         LA    R2,4(,SAVE)         PROVIDE WORK AREA ADDRESS   @OZ29021 U2016000
         MVC   0(XCNVSTLN,R2),XCNVABND  MOVE ESTAE PARM LIST   @OZ29021 U2017000
         ESTAE XCNVSTAR,PARAM=(BASE3),MF=(E,(R2))  PROVIDE RCVY@OZ29021 U2018000
         NI    JPCESTAT,255-JPCESUBT  SUBTASK MUST BE REATTACHED     R4 U2020000
         OI    JPCESTAT,JPCEAOPN   FORCE PROCESSOR TO PROCEED        R4 U2022000
*                                  STATEMENT DELETED BY APAR   @OZ29021 U2028000
         MVC   XCNVMSG(XABNDMSL),XABNDMSG  MOVE MSG TO WORK    @OZ30033 U2029000
        $$WTO  XCNVMSG             ISSUE MESSAGE TO OPERATOR   @OZ30033 U2030000
         MVC   JCTCNVRC,=A(JCTCABND)  MOVE ABEND RETURN CODE TO JCT     U2032000
         L     WA,JPCEIOT          GET ADDRESS OF 1ST IOT               U2034000
         AL    WA,$IOTPDDB         POINT TO 1ST PDDB                 R4 U2035000
         NI    PDBFLAG1-PDBDSECT+IOTPDBOJ(WA),255-PDB1NSOT           R4 U2036000
         NI    PDBFLAG1-PDBDSECT+IOTPDBOL(WA),255-PDB1LOG            R4 U2038000
         OI    JPCESJBP,X'80'      INDICATE 'PERMAMENT' CLOSE OF ACB'S  U2040000
         L     R5,$SSVT            GET ADDR OF SUB-SYSTEM VECTOR TABLE  U2042000
         BAL   XL1,XCNVWRAP        GO TO WRAP UP SUB-TASK PROCESSING    U2044000
         SPACE 1                                               @OZ29021 U2045000
XCNVSRET CLOSE MF=(E,JPCEDCB)      CLOSE THE PROCLIB DATASET   @OZ29021 U2046000
        DELETE EPLOC=XCNVNAME      DELETE OS JCL CONVERTER              U2048000
         MODESET EXTKEY=ZERO       RESTORE KEY 0 FOR EXIT      @OZ29021 U2050000
         LR    LINK,R4             RESTORE RETURN ADDRESS               U2052000
         SLR   R15,R15             INDICATE NO RETRY ROUTINE            U2058000
         BR    LINK                 AND RETURN                          U2060000
        TITLE 'HASP JCL CONVERSION PROCESSOR -- ESTAE RECOVERY ROUTINE' U2061000
*************************************************************  @OZ29021 U2062000
*                                                              @OZ29021 U2063000
*        XCNVSTAR -- ROUTINE TO RECOVER FROM XCNVSTAE ABEND    @OZ29021 U2064000
*                                                              @OZ29021 U2065000
*************************************************************  @OZ29021 U2065200
         SPACE 1                                               @OZ29021 U2065400
         USING XCNVSTAR,R15        PROVIDE LOCAL ADDRESSABILITY@OZ29021 U2065600
         SPACE 1                                               @OZ29021 U2065800
XCNVSTAR L     BASE2,=A(HOSCNVT)   GET NORMAL BASE             @OZ43309 U2066000
         SPACE 1                                               @OZ29021 U2066200
         DROP  R15                 KILL LOCAL ADDRESSABILITY   @OZ29021 U2066400
         SPACE 1                                               @OZ29021 U2066600
         BAL   XL1,XCNVSINT        SET UP ESTAE ENVIRONMENT    @OZ29021 U2066800
         BAL   XL1,XCNVPOST        $$POST JES2 MAIN TASK       @OZ29021 U2067000
         B     XCNVSRET            AND BR TO EXIT FROM ESTAE   @OZ29021 U2067200
         SPACE 1                                               @OZ29021 U2067400
XCNVSINT LR    BASE3,R2            ASSUME PCE ADDRESS IN R2    @OZ29021 U2067600
         C     R0,=F'12'           IF NO SDWA,                 @OZ29021 U2067800
         BE    *+8                 BR AROUND NEXT INSTRUCTION  @OZ29021 U2068000
         L     BASE3,SDWAPARM-SDWA(,R1)  GET PCE ADDR FROM SDWA@OZ29021 U2068200
         LR    R4,LINK             SAVE ESTAE RETURN ADDRESS   @OZ29021 U2068400
         LM    JCT,BASE1,PCEJCT    LOAD JCT, HCT ADDRESSES     @OZ29021 U2068600
         L     SAVE,JPCESAVE       PROVIDE SAVE AREA FOR EXIT  @OZ29021 U2068800
         MODESET EXTKEY=HASP       SET JES2 PROTECT KEY        @OZ29021 U2069000
         BR    XL1                 RETURN TO CALLER            @OZ29021 U2069200
         SPACE 1                                               @OZ29021 U2069400
        $MID   302                 SUB-TASK ABEND MESSAGE NUMBER        U2070000
XABNDMSG WTO   '&MID.CONVERSION SUB-TASK ABENDED',                     CU2072000
               ROUTCDE=(2),DESC=(4),MF=L                       @OZ30033 U2074000
XABNDMSL EQU   *-XABNDMSG          LENGTH OF ABEND ERROR MSG   @OZ30033 U2075000
         TITLE 'HASP JCL CONVERSION PROCESSOR -- CONVERSION SUB-TASK INCU2076000
               TERNAL TEXT EXIT'                                        U2078000
*********************************************************************** U2078100
*                                                                     * U2080000
*        C O N V E R T E R   E X I T   R O U T I N E                  * U2080100
*                                                                     * U2084000
*********************************************************************** U2084100
         SPACE 1                                                        U2086000
         USING XTXTEXIT,R15        PROVIDE EXIT ADDRESSABILITY          U2088000
         SPACE 1                                                        U2090000
         CNOP  0,8                                                      U2092000
XTXTEXIT STM   R1,BASE1,24(R13)    SAVE CALLER'S REGISTERS           R4 U2093000
         L     BASE1,=V(HASP)      GET HCT ADDRESS                   R4 U2094000
         L     BASE3,$JCLPCE       GET PCE ADDRESS                   R4 U2095000
         L     JCT,PCEJCT          GET JCT ADDRESS                   R4 U2095500
         L     R1,0(,R1)           GET ADDRESS OF INTERNAL TEXT         U2096000
         SPACE 1                                                        U2098000
         USING TXTDSECT,R1         PROVIDE TEXT PREFIX ADDRESSABILITY   U2100000
         SPACE 1                                                        U2102000
         TM    STRINDCS,EXECSTR    TEST FOR 'EXEC' STATEMENT            U2104000
         BO    XEXEC               BR IF YES                         R4 U2106000
         TM    STRINDCS,JOBSTR     TEST FOR 'JOB' STATEMENT          R4 U2107000
         BO    XJCLJOB             BR IF YES                         R4 U2108000
         TM    STRINDCS,DDSTR      TEST FOR 'DD' STATEMENT           R4 U2109000
         BZ    XJCLEXIT            RETURN IF NO                      R4 U2110000
         TM    STRDINDC,DTXSYSIN   TEST FOR 'SYSIN'                  R4 U2111000
         BO    XJCLDATA            BR IF YES                         R4 U2112000
         TM    STRDINDC,DTXSYOUT   TEST FOR 'SYSOUT'                 R4 U2113000
         BO    XJCLOUT             BR IF YES                         R4 U2114000
         B     XJCLEXIT             ELSE RETURN                      R4 U2115000
         SPACE 1                                                     R4 U2116000
*********************************************************************** U2117000
*                                                                     * U2118000
*        P R O C E S S   J O B   S T A T E M E N T                    * U2119000
*                                                                     * U2120000
*********************************************************************** U2121000
         SPACE 1                                                     R4 U2122000
XJCLJOB  TM    JCTJOBFL,JCTBATCH   TEST FOR BATCH JOB                R4 U2123000
         BZ    XJCLEXIT            RETURN IF NO                      R4 U2124000
         MVI   XJOBRD,0            INDICATE NO 'RD=' KEYWORD         R4 U2125000
         ICM   R15,8,=AL1(RDJK)    GET 'RD=' KEY                     R4 U2126000
         LA    WE,STRJKEY          POINT TO 1ST KEYWORD SEQUENCE     R4 U2127000
         BAL   WD,XINTKEY          TRY TO LOCATE KEYWORD             R4 U2128000
         BZ    XJCLEXIT            RETURN IF UNSUCCESSFUL            R4 U2129000
         MVC   XJOBRD,3(WE)        SAVE 'RD=' KEYWORD                R4 U2130000
         CLI   3(WE),C'R'          TEST JOURNALLING REQUIREMENT      R4 U2131000
         BNE   XJCLEXIT            RETURN IF NONE                    R4 U2132000
         NI    JCTJOBFL,255-JCTNOJNL  ELSE FORCE JOURNALLING         R4 U2133000
         B     XJCLEXIT            THEN RETURN                       R4 U2134000
         EJECT                                                          U2160000
*********************************************************************** U2160100
*                                                                     * U2162000
*        P R O C E S S   ' S Y S I N '   D D   S T A T E M E N T      * U2164000
*                                                                     * U2166000
*********************************************************************** U2166100
         SPACE 1                                                        U2168000
XJCLDATA LH    WD,STRLTH           GET LENGTH OF TEXT STRING         R4 U2170000
         SLR   WA,WA               CLEAR WA FOR LENGTHS                 U2172000
         IC    WA,STRDKEY+1        DECREMENT COUNT                      U2174000
         BCTR  WA,0                 OF 'DD' KEY                         U2176000
         STC   WA,STRDKEY+1          POSITIONAL PARAMETERS              U2178000
         IC    WA,STRDKEY+2        GET LENGTH OF DDNAME PARM            U2180000
         LA    WB,STRDKEY+3(WA)    GET ADDRESS OF * / DATA PARM         U2182000
         LA    WE,0(WD,R1)         GET ADDRESS OF END                   U2184000
         BCTR  WE,0                 OF ORIGINAL TEXT                    U2186000
         IC    WA,0(,WB)           GET LENGTH OF * / DATA PARM          U2188000
         LA    WD,DDIENDKE-DDDSECT-1(,WD)  ADD LENGTH (-1) OF NEW TEXT  U2190000
         SLR   WD,WA               SUBTRACT LENGTH (-1) OF DELETED TEXT U2192000
         STH   WD,STRLTH           STORE LENGTH OF MODIFIED TEXT STRING U2194000
         LA    R1,1(WB,WA)         GET ADDRESS OF 1ST BYTE TO BE MOVED  U2196000
         SLR   WE,R1                AND LENGTH OF TEXT TO BE MOVED      U2198000
         EX    WE,XKEYOLAY         DELETE * / DATA PARM                 U2200000
         LA    R1,0(WB,WE)         GET ADDRESS OF END OF REMAINING TEXT U2202000
         SPACE 1                                                        U2204000
         USING DDDSECT,R1          PROVIDE DSN KEY SEQ ADDRESSABILITY   U2206000
         SPACE 1                                                        U2208000
         L     WD,XIOTADDR         GET ADDRESS OF INPUT IOT             U2210000
         L     WB,XPDBADDR         GET OFFSET TO LAST INPUT PDDB        U2212000
         LA    WB,PDBLENG(,WB)     POINT TO NEXT PDDB LOCATION          U2214000
         CL    WB,IOTPDDBP-IOTDSECT(,WD)  TEST FOR END OF BUFFER        U2216000
         BL    XSAVPDDB            BR IF NO                             U2218000
         L     WD,IOTIOT-IOTDSECT(,WD)  GET ADDRESS OF NEXT INPUT IOT   U2220000
         LTR   WD,WD               TEST FOR VALID IOT ADDRESS           U2222000
         BZ    XJCLEXIT            RETURN IF NO                      R4 U2224000
         ST    WD,XIOTADDR         SAVE NEW IOT ADDRESS                 U2226000
         L     WB,$IOTPDDB         GET OFFSET OF 1ST PDDB            R4 U2228000
         SPACE 1                                                        U2230000
XSAVPDDB ST    WB,XPDBADDR         SAVE NEW PDDB OFFSET                 U2232000
         MVI   DDTYPE,C'I'         INDICATE 'SYSIN' DATA SET            U2234000
         MVC   DDCTKEY(3),XJCTKEY  MOVE KEY SEQUENCE FOR 'SYSIN' COUNT  U2236000
         L     WA,PDBRECCT-PDBDSECT(WB,WD)  GET 'SYSIN' RECORD COUNT    U2238000
         ST    WA,DDINCT-DDDSECT(,R1)  STORE COUNT IN INTERNAL TEXT     U2240000
         MVI   DDIENDKE,ENDK       MOVE END-OF-TEXT BYTE                U2242000
         LH    WA,PDBDSKEY-PDBDSECT(WB,WD)  GET DD NUMBER FROM PDDB     U2244000
         B     XDSKEY                AND GO TO COMPLETE TEXT RECORD     U2246000
         EJECT                                                          U2248000
*********************************************************************** U2248100
*                                                                     * U2250000
*        P R O C E S S   ' S Y S O U T '   D D   S T A T E M E N T    * U2252000
*                                                                     * U2254000
*********************************************************************** U2254100
         SPACE 1                                                        U2256000
         USING TXTDSECT,R1         PROVIDE TEXT PREFIX ADDRESSABILITY   U2258000
         SPACE 1                                                        U2260000
         CNOP  0,8                                                      U2262000
XJCLOUT  SR    WF,WF               CLEAR WORK REG              @Y30O    U2262100
         ICM   R15,8,=AL1(DSIDK)   GET 'DSID=' KEY             @Y30O    U2262200
         LA    WE,STRDKEY          GET ADDRESS OF FIRST DD KEY @Y30O    U2262300
         BAL   WD,XINTKEY           AND TRY TO LOCATE DSID KEY @Y30O    U2262400
         BZ    XJCLOUT2            BRANCH IF 'DSID=' NOT FOUND @Y30O    U2262500
         IC    WF,2(,WE)           GET 1ST DSID OPERAND LENGTH       R4 U2262600
         N     WF,=AL4(X'7F')      CLEAR HI-ORDER BIT          @Y30O    U2262700
         BZ    XJCLOUT2            BRANCH IF NULL DSID                  U2262800
         LA    WF,1(,WF)           ADD 1 TO LENGTH FOR '.'           R4 U2262900
         LR    WG,WE               SAVE 'DSID=' KEY ENTRY ADDR @Y30O    U2263000
         SPACE 1                                                        U2263100
XJCLOUT2 ICM   R15,8,=AL1(SYSOUTK) GET 'SYSOUT=' KEY           @Y30O    U2264000
         LA    WE,STRDKEY           AND LOCATE THE                      U2266000
         BAL   WD,XINTKEY            KEYWORD SEQUENCE                   U2268000
         TM    STRDINDC,DTXDUMMY   WAS 'DUMMY' ALSO SPECIFIED...        U2270000
         BZ    XNODUMMY            BR IF NO                             U2272000
         LR    WC,WE                ELSE SAVE 'SYSOUT' KEYWORD ADDRESS  U2274000
         ICM   R15,8,=AL1(DUMMK)     AND LOCATE                         U2276000
         LA    WE,STRDKEY             THE 'DD DUMMY'                    U2278000
         BAL   WD,XINTKEY              KEYWORD SEQUENCE                 U2280000
         CLR   WE,WC               DID 'DUMMY' OVERRIDE 'SYSOUT'...     U2282000
         BL    XJCLEXIT            RETURN IF YES                     R4 U2284000
         LR    WE,WC                ELSE RESTORE 'SYSOUT' KEYWORD ADDR  U2286000
         SPACE 1                                                        U2288000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29148 U2292000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29148 U2294000
XNODUMMY CLI   3(WE),C'$'          TEST FOR 'SYSOUT=$'         @OZ29148 U2296000
         BNE   XOUTLEN             BR IF NO                             U2298000
         MVI   3(WE),C'*'          ALLOCATE WILL SET MCLASS.   @OZ29148 U2300000
         SPACE 1                                                        U2302000
XOUTLEN  LH    WD,STRLTH           GET LENGTH OF DD TEXT STRING         U2306000
         BCTR  WD,0                DECREMENT FOR END-OF-TEXT BYTE       U2308000
         LA    WA,DDOENDKE+1-DDDSECT LENGTH OF ADDED TEXT FOR 'SYSOUT=' U2310000
         ALR   WA,WD               SET NEW STRING LENGTH             R4 U2310100
         ALR   WA,WF               ACCOUNT FOR DSID, IF ANY          R4 U2310200
         STH   WA,STRLTH           STORE LENGTH OF MODIFIED TEXT STRING U2314000
         ALR   R1,WD               ADDRESS FOR ADDED TEXT            R4 U2314100
         SPACE 1                                                        U2318000
         USING DDDSECT,R1          PROVIDE DSN KEY SEQ ADDRESSABILITY   U2320000
         SPACE 1                                                        U2322000
         LA    WB,DDOENDKE         SET NORMAL END POSITION     @Y30O    U2322100
         LTR   WF,WF               IF NO DSID KEY,                   R4 U2322200
         BZ    XOUTLEN2             BR TO BYPASS DSID MOVE           R4 U2322300
         MVI   0(WB),C'.'          INDICATE NEW INDEX LEVEL    @Y30O    U2322400
         EX    WF,XDSIDADD         APPEND DSID TO DSNAME             R4 U2322500
         ALR   WB,WF               SET NEW END POSITION              R4 U2322600
         EJECT                                                          U2322700
XOUTLEN2 MVI   DDTYPE,C'O'         INDICATE 'SYSOUT' DATA SET  @Y30O    U2324000
         MVI   0(WB),ENDK          ADD END-TEXT KEY            @Y30O    U2326000
         IC    WA,XJDSKEY+2        GET NORMAL DSNAME LENGTH          R4 U2326100
         ALR   WA,WF               ACCOUNT FOR DSID, IF ANY          R4 U2326200
         STC   WA,DDDSKEY+2        STORE IN KEYWORD LENGTH FIELD     R4 U2326300
         LH    WA,JCTPDDBK         INCREMENT                            U2328000
         LA    WA,1(,WA)            OUTPUT                              U2330000
         STH   WA,JCTPDDBK           DD NUMBER                          U2332000
         B     XDSKEY1             THEN BR TO FINISH DSNAME TEXT     R4 U2332100
         SPACE 1                                                     R4 U2334000
*********************************************************************** U2334100
*                                                                     * U2336000
*        F I L L   I N   R E S T   O F   T E X T   R E C O R D        * U2338000
*                                                                     * U2340000
*********************************************************************** U2340100
         SPACE 1                                                        U2342000
         CNOP  0,8                                                   R4 U2342100
XDSKEY   MVC   DDDSKEY+2(1),XJDSKEY+2  SET NORMAL DSNAME LENGTH      R4 U2342200
         SPACE 1                                                     R4 U2344100
XDSKEY1  MVC   DDDSKEY(2),XJDSKEY  SET DSN KEYWORD, NO. OF OPERANDS  R4 U2344200
         MVC   DDDSKEY+3(5),XJSSNAME  SET SUBSYSTEM NAME IN DSN      R4 U2344300
         L     BASE3,$JCLPCE       RESTORE PCE ADDRESS               R4 U2344400
         MVC   DDJOBID,JCTJOBID    MOVE IN 'JOB', 'STC' OR 'TSU'        U2346000
         PACK  XDOUBLE(3),JCTJOBID+4(4)  MOVE EBCDIC JOB NUMBER         U2348000
         UNPK  DDJNUM,XDOUBLE(3)    INTO DSNAME                         U2350000
         MVC   DDQUAL,=C'.S'       MOVE START OF DD NUMBER QUALIFIER    U2352000
         CVD   WA,XDOUBLE          MOVE EBCDIC                          U2354000
         UNPK  DDDSNUM,XDOUBLE+5(3) DD NUMBER                           U2356000
         OI    DDDSNUM+3,X'F0'       TO DSNAME                          U2358000
         SPACE 1                                                        U2360000
XJCLEXIT LM    R1,BASE1,24(R13)    RESTORE CALLER'S REGISTERS        R4 U2362000
         SR    R15,R15             SET ZERO RETURN CODE                 U2364000
         BR    R14                  AND RETURN                          U2366000
         EJECT                                                          U2368000
*********************************************************************** U2368100
*                                                                     * U2370000
*        P R O C E S S   E X E C   S T A T E M E N T                  * U2372000
*                                                                     * U2374000
*********************************************************************** U2374100
         SPACE 1                                                        U2376000
         USING TXTDSECT,R1         PROVIDE TEXT PREFIX ADDRESSABILITY   U2378000
         SPACE 1                                                        U2380000
         CNOP  0,8                                                      U2382000
XEXEC    TM    JCTJOBFL,JCTBATCH   TEST FOR BATCH JOB                R4 U2386000
         BZ    XPGM                BR IF NO                          R4 U2386100
         CLI   XJOBRD,0            WAS RD SPECIFIED ON JOB CARD...   R4 U2386200
         BNE   XPERFM              BR IF YES                         R4 U2386300
         LA    WE,STREKEY          POINT TO 1ST KEYWORD SEQUENCE     R4 U2386400
         ICM   R15,8,=AL1(RDEEK)   GET 'RD=' KEY                     R4 U2386500
         BAL   WD,XINTKEY          TRY TO LOCATE KEYWORD             R4 U2386600
         BNZ   XTESTRD             BR IF SUCCESSFUL                  R4 U2386700
         LA    WE,STREKEY          POINT TO 1ST KEYWORD SEQUENCE     R4 U2386800
         ICM   R15,8,=AL1(RDPEK)   GET 'RD.' KEY                     R4 U2386900
         BAL   WD,XINTKEY          TRY TO LOCATE KEYWORD             R4 U2387000
         BZ    XPERFM              BR IF UNSUCCESSFUL                R4 U2387100
         SLR   WF,WF               CLEAR FOR INSERT                  R4 U2387200
         IC    WF,2(,WE)           GET LENGTH OF 1ST SUBFIELD        R4 U2387300
         LA    WE,1(WF,WE)          AND STEP OVER 1ST SUBFIELD       R4 U2387400
         SPACE 1                                                     R4 U2387500
XTESTRD  CLI   3(WE),C'R'          TEST JOURNALLING REQUIREMENT      R4 U2387600
         BNE   XPERFM              BR IF NONE                        R4 U2387700
         NI    JCTJOBFL,255-JCTNOJNL  ELSE FORCE JOURNALLING         R4 U2387800
         SPACE 1                                                     R4 U2387900
XPGM     TM    JCTJOBFL,JCTSTCJB   TEST FOR STARTED TASK             R4 U2388000
         BZ    XPERFM              BR IF NO                             U2388100
         TM    STREINDC,ETXPRCV    TEST FOR 'EXEC PROC='       @OZ18218 U2388200
         BO    XDPRTY              BR. IF YES                  @OZ18218 U2388300
         LA    WE,STREKEY          POINT TO FIRST KEYWORD SEQUENCE      U2390000
         ICM   R15,8,=AL1(PGMEK)   GET KEYWORD FOR 'PGM='               U2392000
         BAL   WD,XINTKEY          TRY TO LOCATE KEYWORD                U2394000
         BZ    XPERFM              BR IF UNSUCCESSFUL                   U2396000
         CLI   2(WE),6             TEST FOR CORRECT LENGTH              U2398000
         BNE   XPERFM              BR IF NO                             U2400000
         CLC   =C'IEFIIC',3(WE)    TEST FOR INITIATOR                   U2402000
         BNE   XPERFM              BR IF NO                             U2404000
         OI    JPCESTAT,JPCEINIT    ELSE INDICATE VS2 INITIATOR         U2406000
         EJECT                                                       R4 U2412000
XPERFM   TM    STREINDC,ETXPRCV    TEST FOR 'EXEC PROC='       @OZ18218 U2415000
         BO    XDPRTY              BR. IF YES                  @OZ18218 U2416000
         IC    WC,JCTJCLAS         GET JOB CLASS FROM JCT      @OZ18218 U2417000
         N     WC,=A(X'3F')        DERIVE RELATIVE CAT ENTRY            U2418000
         SLL   WC,5                MULTIPLY BY CAT ENTRY LENGTH         U2420000
         AL    WC,$CATABLE         GET CAT ENTRY ADDRESS                U2422000
         SPACE 1                                                        U2424000
         USING CATDSECT,WC         PROVIDE CAT ADDRESSABILITY           U2426000
         SPACE 1                                                        U2428000
         CLC   CATPERFM,=C'000'    MUST WE SCAN FOR 'PERFORM='...       U2430000
         BE    XDPRTY              BR IF NO                             U2432000
         ICM   R15,8,XPRFMKEY      GET 'PERFORM=' KEY                   U2434000
         LA    WE,STREKEY          GET ADDRESS OF FIRST EXEC KEY        U2436000
         BAL   WD,XINTKEY           AND TRY TO LOCATE DESIRED KEY       U2438000
         BNZ   XDPRTY              BR IF KEYWORD ALREADY SPECIFIED      U2440000
         MVC   0(L'XPRFMTXT,WE),XPRFMTXT  MOVE 'PERFORM=' TEXT TO       U2442000
         MVC   3(L'CATPERFM,WE),CATPERFM   END OF TEXT STRING           U2444000
         LH    WD,STRLTH           GET LENGTH OF EXEC TEXT STRING       U2446000
         LA    WD,L'XPRFMTXT-1(,WD) AND ADD LENGTH OF NEW TEXT          U2448000
         STH   WD,STRLTH           STORE UPDATED STRING LENGTH          U2450000
         B     XDPRTY              THEN PROVIDE DEFAULT PRIORITY        U2452000
         SPACE 1                                                        U2454000
XDPRTY   EQU   XJCLEXIT            DEFAULT PRIORITY NOT SUPPORTED    R4 U2456000
         SPACE 1                                                        U2458000
         DROP  R1,WC               KILL TEXT,CAT ADDRESSABILITY         U2460000
         EJECT                                                          U2462000
*********************************************************************** U2462100
*                                                                     * U2464000
*        L O C A T E   K E Y   W I T H I N   T E X T   S T R I N G    * U2466000
*                                                                     * U2468000
*                                                                     * U2468100
*              ON INPUT -- WE POINTS TO 1ST KEYWORD SEQUENCE IN TEXT  * U2468200
*              ON INPUT -- HI-ORDER BYTE OF R15 CONTAINS KEY          * U2474000
*                                                                     * U2476000
*              ADDRESS OF KEYWORD SEQUENCE (IF FOUND) RETURNED IN WE  * U2478000
*                                                                     * U2480000
*              NON-ZERO RETURN CODE -- WE POINTS TO KEYWORD SEQUENCE  * U2482000
*              ZERO     RETURN CODE -- WE POINTS TO END-OF-TEXT BYTE  * U2484000
*                                                                     * U2484100
*********************************************************************** U2484200
         SPACE 3                                                        U2486000
         CNOP  4,8                                                      U2488000
XINTKEY  SLR   WA,WA               CLEAR WA FOR WORK                    U2490000
         LR    WB,WA               CLEAR WB FOR WORK                    U2492000
         SPACE 1                                                        U2494000
XINTNEXT ICM   WA,1,1(WE)          SET WA TO NUMBER OF PARMS            U2496000
         LA    WE,2(,WE)           GET ADDRESS OF FIRST PARM (IF ANY)   U2498000
         BZ    XGOTKEY             BR IF NONE                           U2500000
         SPACE 1                                                        U2502000
XFINDBYT ICM   WB,1,0(WE)          SET WB TO PARM LENGTH                U2504000
         BM    XFINDSUB            BR IF SUBPARM COUNT                  U2506000
         LA    WE,0(WE,WB)          ELSE GET ADDRESS OF NEXT PARM       U2508000
         SPACE 1                                                        U2510000
XFINDLUP LA    WE,1(,WE)           SKIP OVER LENGTH BYTE                U2512000
         BCT   WA,XFINDBYT         BR IF MORE PARMS TO SKIP             U2514000
         SPACE 1                                                        U2516000
XGOTKEY  CLI   0(WE),ENDK          TEST KEY TYPE                        U2518000
         BER   WD                  RETURN IF END OF TEXT STRING         U2520000
         CLM   R15,8,0(WE)          ELSE TEST FOR DESIRED KEY           U2522000
         BNE   XINTNEXT            BR IF NO                             U2524000
         SLR   WA,WA                ELSE SET NON-ZERO RETURN CODE       U2526000
         BR    WD                    AND RETURN                         U2528000
         SPACE 1                                                        U2530000
         CNOP  0,8                                                      U2532000
XFINDSUB SL    WB,=A(X'80')        CLEAR HI-ORDER BIT OF SUBPARM COUNT  U2534000
         ALR   WA,WB               ADD SUBPARM COUNT TO PARM COUNT      U2536000
         B     XFINDLUP             AND RESUME PARM FIELD SCAN          U2538000
         SPACE 1                                                        U2540000
         DROP  R15                 KILL EXIT ADDRESSABILITY             U2542000
         DROP  BASE3               KILL SUB-TASK PCE ADDRESSABILITY     U2544000
         USING PCEDSECT,SAVE       RESTORE NORMAL PCE ADDRESSABILITY    U2546000
         EJECT                                                          U2548000
         CNOP  0,8                                                      U2550000
XKEYOLAY MVC   0(*-*,WB),0(R1)     *** EXECUTE ONLY ***                 U2552000
         SPACE 1                                                        U2554000
         CNOP  0,8                                             @Y30O    U2554100
XDSIDADD MVC   1(*-*,WB),3(WG)     *** EXECUTE ONLY ***        @Y30O    U2554200
         SPACE 1                                               @Y30O    U2554300
         CNOP  0,8                                                      U2556000
XJCTKEY  DC    AL1(SYSINCTK,1,L'DDINCT)  SYSIN COUNT KEY SEQUENCE       U2558000
         CNOP  0,8                                                      U2560000
XJDSKEY  DC    AL1(DSNAMEK,1,DDOENDKE-DDDSKEY-3)  DSNAME KEY SEQUENCE   U2562000
XJSSNAME DC    C'HASP.'            START OF DSNAME                      U2564000
         SPACE 1                                                        U2566000
         CNOP  0,8                                                      U2568000
XPRFMKEY DC    AL1(PRFMEEK,1,L'CATPERFM),(L'CATPERFM)X'00',AL1(ENDK)    U2570000
XPRFMTXT EQU   XPRFMKEY,*-XPRFMKEY LABEL AND LENGTH FOR ABOVE TEXT      U2572000
         SPACE 2                                                        U2574000
XJOBRD   EQU   PCER0,1             SAVE AREA FOR JOB CARD RD PARM    R4 U2575000
XDOUBLE  EQU   PCER1,8             DOUBLE-WORD WORK AREA                U2576000
XIOTADDR EQU   PCEWB               ADDRESS OF INPUT IOT                 U2578000
XPDBADDR EQU   PCEWC               OFFSET OF PDDB WITHIN IOT            U2580000
XCNVMSG  EQU   JCTWORK             WORK AREA FOR WTO MESSAGES           U2582000
         SPACE 2                                                        U2584000
DDDSECT  DSECT                     DD CARD INTERNAL TEXT DSECT          U2586000
DDDSKEY  DC    AL1(DSNAMEK,1,DDOENDKE-DDDSKEY-3),C'HASP.'               U2588000
DDDSKYLN EQU   *-DDDSKEY           LENGTH OF FIXED DSNAME KEY SEQUENCE  U2590000
DDJOBID  DC    C'JOB'              START OF HASP JOB ID                 U2592000
DDJNUM   DS    CL5                 HASP JOB NUMBER                      U2594000
DDQUAL   DC    C'.S'               START OF DD NUMBER QUALIFIER         U2596000
DDTYPE   DS    C                   SYSIN/SYSOUT TYPE ('I' OR 'O')       U2598000
DDDSNUM  DS    CL4                 PERIPHERAL DATA SET NUMBER           U2600000
DDOENDKE DS    C                   END-OF-TEXT BYTE FOR SYSOUT          U2602000
         ORG   DDOENDKE            REDEFINE FOR SYSIN                   U2604000
DDCTKEY  DC    AL1(SYSINCTK,1,L'DDINCT)  SYSIN COUNT KEY SEQUENCE       U2606000
DDINCT   DS    CL4                 SYSIN COUNT                          U2608000
DDIENDKE DS    C                   END-OF-TEXT FOR SYSIN                U2610000
         SPACE 1                                                        U2612000
HASPXEQ  CSECT                     END OF INTERNAL TEXT DSECTS          U2614000
         EJECT                                                       R4 U2616000
         LTORG                                                          U2618000
         TITLE 'HASP EXECUTION PROCESSOR -- INITIAL ENTRY POINT'        U2814000
*********************************************************************** U2816000
*                                                                     * U2818000
* PROCESSOR NAME -- HASPEXEC                                          * U2820000
*                                                                     * U2822000
* DESCRIPTIVE NAME -- JES2 EXECUTION PROCESSOR                        * U2824000
*                                                                     * U2826000
* FUNCTION -- SELECT JOBS FOR EXECUTION, PROVIDE SERVICES FOR JOBS IN * U2828000
*             EXECUTION, AND, FOLLOWING EXECUTION, RE-QUEUE JOBS FOR  * U2830000
*             OUTPUT OR RE-EXECUTION.                                 * U2832000
*                                                                     * U2834000
* NOTES --  1)  HASPEXEC IS 'DRIVEN' BY SJB AND IOT QUEUES WHOSE      * U2836000
*               HEADERS ARE LOCATED IN THE SSVT.  ONCE DISPATCHED,    * U2838000
*               HASPEXEC ATTEMPTS TO EMPTY ALL QUEUES.  ESSENTIALLY,  * U2840000
*               EACH ELEMENT ON EACH QUEUE REPRESENTS A REQUEST FOR   * U2842000
*               A SERVICE WHICH MUST BE PERFORMED.                    * U2844000
*                                                                     * U2846000
*           2)  FOR MOST EFFICIENT EXECUTION, HASPEXEC SHOULD SEARCH  * U2848000
*               ITS QUEUES IN THE FOLLOWING SEQUENCE -                * U2850000
*                                                                     * U2852000
*               A)  $SVSPIOT -- SPIN/HOLD REQUEST(S)                  * U2854000
*               B)  $SVTSCS  -- CANCEL/STATUS REQUEST(S)              * U2856000
*               C)  $SVJPNUM -- REQUEST(S) FOR JOB(S) PENDING         * U2858000
*                               SELECTION BY NUMBER                   * U2860000
*               D)  $SVJTERM -- REQUEST(S) FOR JOB(S) PENDING         * U2862000
*                               TERMINATION                           * U2864000
*               E)  $SVJRENQ -- REQUEST(S) FOR JOB(S) PENDING         * U2866000
*                               RE-ENQUEUE (RE-EXECUTION)             * U2868000
*               F)  $SVJPXBM -- REQUEST(S) FOR JOB(S) PENDING         * U2870000
*                               BATCH MONITOR EXECUTION               * U2872000
*               G)  $SVJPCLS -- REQUEST(S) FOR JOB(S) PENDING         * U2874000
*                               SELECTION BY CLASS                    * U2876000
*                                                                     * U2878000
*           3)  TO GUARANTEE THAT HASPEXEC DOES NOT LOSE A $POST,     * U2880000
*               OTHER JES2 PROCESSORS SHOULD 'OR' ON A BIT IN THE     * U2882000
*               HI-ORDER BYTE OF $SVJOB AFTER $POSTING THE EXECUTION  * U2884000
*               PROCESSOR.                                            * U2886000
*                                                                     * U2888000
*           4)  NO SVCS, DIRECT OR INDIRECT, SHOULD BE ISSUED WHILE   * U2890000
*               HOLDING THE SJB QUEUES LOCK.                          * U2892000
*                                                                     * U2894000
* REGISTER CONVENTIONS -- R0  -- WORK REGISTER                        * U2896000
*                         R1  -- JQE ADDRESS                          * U2898000
*                         WA  -- SJB ADDRESS                          * U2900000
*                         WB  -- WORK REGISTER                        * U2902000
*                         WC  -- WORK REGISTER                        * U2904000
*                         WD  -- WORK REGISTER                        * U2906000
*                         WE  -- WORK/LINK REGISTER                   * U2908000
*                         WF  -- WORK REGISTER                        * U2910000
*                         WG  -- BASE REGISTER (BASE3)                * U2912000
*                         JCT -- SSVT ADDRESS                         * U2914000
*                                                                     * U2918000
*********************************************************************** U2920000
         EJECT                                                          U2922000
PDDB     EQU   WC                  PDDB ADDRESS REGISTER                U2926000
IOT      EQU   WF                  IOT ADDRESS REGISTER                 U2928000
         SPACE 1                                                        U2929000
XEQWORK  EQU   PCEWORK,8           PROCESSOR WORK AREA              R41 U2929300
XQCATAD  EQU   PCEWORK+4,4         CAT ENTRY ADDRESS           @OZ29151 U2929350
XQOFFSET EQU   PCEWORK+8,4         SJB QUEUE TABLE OFFSET           R41 U2929400
XMESSAGE EQU   PCEWORK+12,RDRPCEWS-12  OPERATOR MESSAGE WORK AREA   R41 U2929500
         SPACE 2                                                        U2930000
*********************************************************************** U2930100
*                                                                     * U2932000
*        H A S P E X E C   I N I T I A L   E N T R Y   P O I N T      * U2934000
*                                                                     * U2936000
*********************************************************************** U2936100
         SPACE 1                                                        U2938000
         USING JQEDSECT,R1         PROVIDE JQE ADDRESSABILITY           U2940000
         USING $SVDSECT,JCT        PROVIDE SSVT ADDRESSABILITY      R41 U2942000
         USING SJBDSECT,WA         PROVIDE SJB ADDRESSABILITY           U2944000
         SPACE 2                                                        U2948000
HASPEXEC $ENTRY BASE=(BASE2,BASE3) PROVIDE PROCESSOR ENTRY POINT    R41 U2950000
         LA    BASE3,2048(,BASE2)  SET UP SECOND                    R41 U2951000
         LA    BASE3,2048(,BASE3)   BASE REGISTER                   R41 U2952000
         L     JCT,$SSVT           GET ADDRESS OF SSVT              R41 U2953000
         B     XQSEARCH             AND BR TO PROCESS                   U2954000
         SPACE 1                                                        U2956000
         CNOP  0,8                                                      U2958000
XNOWORK  CLI   $SVJOB,0            TEST 'NEST' INDICATOR                U2960000
         BNE   XQSEARCH            BR IF 'RECENTLY' $$POSTED            U2962000
         TM    $STATUS,$SYSEXIT    IS HASP BEING WITHDRAWN...           U2964000
         BO    X$PHASP             BR IF YES                        R41 U2966000
         SPACE 1                                                        U2968000
XJBWAIT $WAIT  JOB,INHIBIT=NO      $WAIT FOR SOMEONE TO $POST JOB       U2970000
         TITLE 'HASP EXECUTION PROCESSOR -- WORK QUEUES SEARCH'         U2972000
XQSEARCH MVI   $SVJOB,0            SET 'NEST' INDICATOR                 U2974000
         SPACE 1                                                        U2976000
*********************************************************************** U2976100
*                                                                     * U2978000
*        S E A R C H   T H E   S P I N / H O L D   Q U E U E          * U2980000
*                                                                     * U2982000
*********************************************************************** U2982100
         SPACE 1                                                        U2984000
         L     R1,$SVSPIOT         PICK UP SPIN/HOLD QUEUE HEADER       U2986000
         SPACE 1                                                        U2988000
XSPTEST  LTR   R1,R1               TEST FOR EMPTY QUEUE                 U2990000
         BZ    XSTQSRCH            BR IF SO                             U2992000
         SLR   IOT,IOT             TRY TO DE-QUEUE                      U2994000
         CS    R1,IOT,$SVSPIOT      THE ENTIRE SPIN/HOLD REQUEST Q      U2996000
         BNE   XSPTEST             BR IF UNSUCCESSFUL TO TRY AGAIN   R4 U2996100
         B     XSPNHLD              ELSE BR TO SPIN/HOLD SUPPORT    R41 U2996200
         SPACE 2                                                        U3002000
*********************************************************************** U3002100
*                                                                     * U3004000
*        S E A R C H  T H E  C A N C E L / S T A T U S  Q U E U E     * U3006000
*                                                                     * U3008000
*********************************************************************** U3008100
         SPACE 1                                                        U3010000
         CNOP  0,8                                                      U3012000
XSTQSRCH LM    WA,WB,$SVTSCS       PICK UP CANCEL/STATUS QUEUE HDR      U3014000
         SPACE 1                                                        U3016000
XSTQTEST LTR   WA,WA               TEST FOR EMPTY QUEUE                 U3018000
         BZ    XJQSRCH             BR IF SO                             U3020000
         MVI   SJBTFLOW,X'FF'      SET HASP REFERENCE FLAG              U3022000
*                                  HASP IS THE ONLY ONE TO DEQUEUE      U3024000
         L     R0,SJBTCHN          LOAD ADDRESS OF NEXT SJB             U3026000
         LR    R1,WB                AND HASH VALUE FROM HEADER          U3028000
         CDS   WA,R0,$SVTSCS         AND TRY TO DE-QUEUE THIS SJB       U3030000
         BNE   XSTQTEST            LOOP IF UNSUCCESSFUL                 U3032000
         CLI   $SVTSLOK,0          IS IT OK TO WORK WITH SJB            U3034000
         BE    XPTCS               BR IF YES                        R41 U3036000
        $GETLOK ,                  GET LOCK                             U3038000
         MVI   $SVTSLOK,0          FORCE SETTING TO ZERO                U3040000
        $FRELOK ,                  FREE LOCK                            U3042000
         B     XPTCS               BR TO CANCEL/STATUS SUPPORT      R41 U3044000
         EJECT                                                          U3046000
*********************************************************************** U3046100
*                                                                     * U3048000
*        S E A R C H   T H E   J O B - P E N D I N G   Q U E U E S    * U3050000
*                                                                     * U3052000
*********************************************************************** U3052100
         SPACE 1                                                        U3054000
         CNOP  0,8                                                   R4 U3054100
XJQSRCH  LA    R1,0                PREPARE TO SCAN SJB              R41 U3054200
         ST    R1,XQOFFSET          QUEUE OFFSET TABLE              R41 U3054300
         SPACE 1                                                        U3058000
XJQNEXT  L     R1,XQOFFSET         UPDATE                           R41 U3059000
         LA    R1,4(,R1)            SJB QUEUE                       R41 U3060000
         ST    R1,XQOFFSET           TABLE OFFSET                   R41 U3061000
         SPACE 1                                                        U3062000
XLOOKAGN MVC   PCEJQE,$ZEROS       CLEAR JQE ADDRESS           @OZ32566 U3064000
         L     R1,XQOFFSET         GET OFFSET TO               @OZ32566 U3064100
         L     WA,XQTABLE(R1)       NEXT SJB QUEUE                  R41 U3065000
         LTR   WA,WA               TEST FOR END OF QUEUES               U3066000
         BZ    XNOWORK             BR IF SO                             U3068000
         L     WA,$SVDSECT(WA)     GET ADDRESS OF NEXT QUEUE            U3070000
         LTR   WA,WA               TEST FOR EMPTY QUEUE                 U3072000
         BNZ   XBRTABLE(R1)        BR IF NO TO PROCESS              R41 U3074000
         B     XJQNEXT              ELSE TRY NEXT SJB QUEUE             U3076000
         SPACE 2                                                        U3078000
*********************************************************************** U3078100
*                                                                     * U3080000
*        J O B - P E N D I N G   O F F S E T   T A B L E              * U3082000
*                                                                     * U3084000
*********************************************************************** U3084100
         SPACE 1                                                        U3086000
XQTABLE  DC    A(*-*)              FIRST OFFSET NEVER USED              U3088000
         DC    A($SVJPNUM-$SVDSECT)                                     U3090000
         DC    A($SVJTERM-$SVDSECT)                                     U3092000
         DC    A($SVJRENQ-$SVDSECT)                                     U3094000
         DC    A($SVJPXBM-$SVDSECT)                                     U3100000
         DC    A($SVJPCLS-$SVDSECT)                                     U3106000
XQTBLEND DC    A(*-*)              END OF QUEUE OFFSET TABLE            U3108000
         SPACE 2                                                        U3110000
*********************************************************************** U3110100
*                                                                     * U3112000
*        J O B   Q U E U E   S E R V I C E S   B R A N C H   T A B L E* U3114000
*                                                                     * U3116000
*                                                                     * U3118000
*              BRANCH TABLE IS ORDER-DEPENDENT ON OFFSET TABLE ABOVE  * U3120000
*                                                                     * U3120100
*********************************************************************** U3120200
         SPACE 1                                                        U3122000
XBRTABLE NOP   *                   THIS NOP NEVER EXECUTED (HOPEFULLY)  U3124000
         B     XPBYNUM             BR TO PENDING-BY-NUMBER ROUTINE      U3126000
         B     XPTERM              BR TO PENDING-TERMINATION ROUTINE    U3128000
         B     XPRENQ              BR TO PENDING-REQUEUE ROUTINE        U3130000
XPXBMBR  B     XPXBM               BR TO PENDING-BATCHING ROUTINE       U3136000
         B     XPBYCLS             BR TO PENDING-BY-CLASS ROUTINE       U3142000
         TITLE 'HASP EXECUTION PROCESSOR -- MISCELLANEOUS ROUTINES'     U3144000
*********************************************************************** U3144100
*                                                                     * U3146000
*        R E Q U E S T   A C C E S S   T O   C H K P T   D A T A      * U3148000
*                                                                     * U3150000
*                                                                     * U3150100
*              REGISTER R15 DESTROYED                                 * U3154000
*              RETURN CODE N/A                                        * U3156000
*                                                                     * U3156100
*********************************************************************** U3156200
         SPACE 3                                                        U3158000
         CNOP  0,8                                                      U3160000
XQSUSE  $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    U3162000
         BR    LINK                THEN RETURN                          U3164000
         SPACE 5                                                        U3172000
*********************************************************************** U3172100
*                                                                     * U3174000
*        C T L   B L O C K   R E A D / W R I T E   R O U T I N E      * U3176000
*                                                                     * U3178000
*                                                                     * U3178100
*              SEEK ADDRESS PROVIDED IN REGISTER R0                   * U3182000
*                                                                     * U3184000
*              REGISTERS R14 AND R15 DESTROYED                        * U3186000
*              CONDITION CODE VALID ON RETURN                         * U3188000
*                                                                     * U3188100
*********************************************************************** U3188200
         SPACE 3                                                        U3190000
         CNOP  0,8                                                      U3192000
XIO      ST    R0,PCESEEK          SET TRACK ADDRESS FOR $EXCP          U3194000
         LA    R1,PCEDADCT         GET DIRECT ACCESS DCT ADDRESS        U3196000
        $EXCP  (R1),WAIT=YES       READ/WRITE CONTROL BLOCK          R4 U3198000
         BR    WE                  RETURN WITH VALID CC              R4 U3200000
         EJECT                                                          U3212000
*********************************************************************** U3212100
*                                                                     * U3214000
*        I S S U E   P I T   S T A T U S   M E S S A G E              * U3216000
*                                                                     * U3218000
*                                                                     * U3218100
*              ADDRESS OF MODEL MESSAGE PROVIDED IN R1                * U3222000
*              ADDRESS OF PIT PROVIDED IN WF                          * U3224000
*                                                                     * U3226000
*              RETURN CODE N/A                                        * U3228000
*                                                                     * U3228100
*********************************************************************** U3228200
         SPACE 3                                                        U3230000
         USING PITDSECT,WF         PROVIDE PIT ADDRESSABILITY           U3232000
         SPACE 1                                                        U3234000
         CNOP  0,8                                                      U3236000
XPITMSG  MVC   XMESSAGE(L'XIDLEMSG),0(R1)  PREPARE                   R4 U3238000
         MVC   XMESSAGE+10(2),PITPATID      HASP                     R4 U3240000
         SLR   R1,R1                         PIT                     R4 U3242000
         IC    R1,$MAXCLAS                    STATUS                 R4 U3244000
         EX    R1,XPITMVCL                     MESSAGE               R4 U3246000
         TM    PITFLAGS,PITXBM     TEST FOR BATCHING PIT                U3248000
         BZ    XPITWTO             BR IF NO TO ISSUE MESSAGE            U3250000
         MVC   XMESSAGE+L'XIDLEMSG-11(8),SJBXBJNM  MOVE IN MONITOR NAME U3252000
         MVC   XMESSAGE+2(2),=C'XB'  SET XBM IDENTIFIER                 U3254000
         SPACE 1                                                     R4 U3254100
XPITWTO  LA    R0,L'XIDLEMSG(R1)   GET MESSAGE LENGTH                R4 U3258000
        $WTO   XMESSAGE,(R0),ROUTE=$LOG+$MAIN,                       R4CU3260000
               WAIT=YES,JOB=NO,PRI=$ST,CLASS=$NORMAL                    U3262000
         BR    WE                  THEN RETURN                          U3264000
         SPACE 1                                                     R4 U3265000
XPITMVCL MVC   XMESSAGE+L'XIDLEMSG(*-*),PITCLASS  *** EXEC ONLY ***  R4 U3265500
         SPACE 1                                                        U3266000
         DROP  WF                  KILL PIT ADDRESSABILITY              U3268000
    TITLE 'HASP EXECUTION PROCESSOR -- SJB QUEUE MANAGEMENT ROUTINES'   U3270000
*********************************************************************** U3270100
*                                                                     * U3272000
*        R E Q U E S T   L O C K   O N   S J B   Q U E U E S          * U3274000
*                                                                     * U3276000
*                                                                     * U3276100
*              REGISTER R15 DESTROYED                                 * U3280000
*              RETURN CODE N/A                                        * U3282000
*                                                                     * U3282100
*********************************************************************** U3282200
         SPACE 3                                                        U3284000
         CNOP  0,8                                                      U3286000
XSJBLOCK STM   R0,R3,PCER0         SAVE WORK REGISTERS                  U3288000
         SPACE 1                                                        U3290000
XLOCKSJB SLR   R0,R0               INITIALIZE WORK REGISTERS            U3292000
         LR    R1,R0                TO 'UNLOCKED' STATE                 U3294000
         L     R2,PSAAOLD-PSA      GET ASCB ADDRESS                     U3296000
         LNR   R3,R2               MAKE R3 NEGATIVE                     U3298000
         CDS   R0,R2,$SVJLOCK      TRY TO OBTAIN SJB QUEUES LOCK        U3300000
         BNE   XLOCKED             BR IF UNSUCCESSFUL                   U3302000
         LM    R0,R3,PCER0          ELSE RESTORE WORK REGISTERS         U3304000
         BR    LINK                  AND RETURN                         U3306000
         SPACE 1                                                        U3308000
*********************************************************************** U3308100
*                                                                     * U3310000
*        Q U E U E S   L O C K E D   - -   Q U E U E   R E Q U E S T  * U3312000
*                                                                     * U3314000
*********************************************************************** U3314100
         SPACE 1                                                        U3316000
         CNOP  0,8                                                      U3318000
XLOCKED  STM   R1,R2,$SVQLOKE+4    INITIALIZE HASP LOCK ELEMENT         U3320000
         LR    R2,R0               THEN RE-LOAD ASCB ADDRESS            U3322000
         LA    R3,$SVQLOKE          AND POINT TO LOCK ELEMENT           U3324000
         CDS   R0,R2,$SVJLOCK      TRY TO ADD IT TO REQUEST QUEUE       U3326000
         BNE   XLOCKSJB            BR IF UNSUCCESSFUL                   U3328000
         LM    R0,R3,PCER0         RESTORE WORK REGISTERS               U3330000
         SPACE 1                                                        U3332000
*********************************************************************** U3332100
*                                                                     * U3334000
*        Q U E U E S   S T I L L   L O C K E D   - -   W A I T        * U3336000
*                                                                     * U3338000
*********************************************************************** U3338100
         SPACE 1                                                        U3340000
XLKWAIT $WAIT  WORK                WAIT FOR LOCK TO CHANGE HANDS        U3342000
         CLC   PSAAOLD-PSA,$SVJLOCK  DO WE HAVE THE LOCK...             U3344000
         BER   LINK                RETURN IF YES                        U3346000
         B     XLKWAIT              ELSE WAIT AGAIN                     U3348000
         EJECT                                                          U3350000
*********************************************************************** U3350100
*                                                                     * U3352000
*        R E M O V E   L O C K   O N   S J B   Q U E U E S            * U3354000
*                                                                     * U3356000
*                                                                     * U3356100
*              REGISTER R15 DESTROYED                                 * U3360000
*              RETURN CODE N/A                                        * U3362000
*                                                                     * U3362100
*********************************************************************** U3362200
         SPACE 3                                                        U3364000
         CNOP  0,8                                                      U3366000
XSJBUNLK STM   R0,R1,$DOUBLE       SAVE WORK                   @OZ45665 U3368000
         STM   WA,WB,PCEWA          REGISTERS                  @OZ45665 U3368100
         LM    R2,R3,$SVJLOCK      GET SJB QUEUES LOCK HEADER           U3370000
         SPACE 1                                                        U3372000
XTESTLOK LTR   R3,R3               TEST FOR PENDING LOCK REQUESTS       U3374000
         BM    XREMLOK             BR IF NONE                           U3376000
         SPACE 1                                                        U3378000
*********************************************************************** U3378100
*                                                                     * U3380000
*        R E Q U E S T ( S )   P E N D I N G   - -   G E T   N E X T  * U3382000
*                                                                     * U3384000
*********************************************************************** U3384100
         SPACE 1                                                        U3386000
         L     R0,8(,R3)           GET ASCB ADDRESS                     U3388000
         L     R1,4(,R3)           GET CHAIN WORD                       U3390000
         CDS   R2,R0,$SVJLOCK      TRY TO MOVE UP NEXT REQUEST          U3392000
         BNE   XTESTLOK            BR IF UNSUCCESSFUL                   U3394000
         EJECT                                                       R4 U3394100
*********************************************************************** U3394200
*                                                                     * U3398000
*        P O S T   N E W   L O C K   H O L D E R                      * U3400000
*                                                                     * U3402000
*********************************************************************** U3402100
         SPACE 1                                                        U3404000
         ST    R0,16(,R3)          STORE LATEST ASCB ADDRESS            U3406000
         LA    R1,$SVBR14          GET BR 14 ROUTINE ADDRESS            U3408000
         ST    R1,20(,R3)           AND USE AS ERROR ROUTINE ADDR       U3410000
         LA    R1,12(,R3)          GET ADDRESS OF XMPOST ELEMENT        U3412000
         ST    LINK,XEQWORK        SAVE RETURN ADDRESS              R41 U3414000
         LM    WA,WB,PCEWA         RESTORE WA AND WB                    U3416000
        $XMPOST (R1)               XM POST THE WAITING TASK             U3418000
         LM    R0,R1,$DOUBLE       RESTORE WORK REGISTERS      @OZ45665 U3420000
         L     LINK,XEQWORK        RESTORE RETURN ADDRESS           R41 U3422000
         BR    LINK                 AND RETURN                          U3424000
         SPACE 1                                                        U3426000
*********************************************************************** U3426100
*                                                                     * U3428000
*        N O   P E N D I N G   R E Q U E S T S   - -   U N L O C K    * U3430000
*                                                                     * U3432000
*********************************************************************** U3432100
         SPACE 1                                                        U3434000
         CNOP  0,8                                                      U3436000
XREMLOK  SLR   R0,R0               INITIALIZE WORK REGISTERS            U3438000
         LR    R1,R0                TO 'UNLOCKED' STATE                 U3440000
         CDS   R2,R0,$SVJLOCK      TRY TO UNLOCK THE SJB QUEUES         U3442000
         BNE   XTESTLOK            BR IF UNSUCCESSFUL                   U3444000
         LM    R0,R3,PCER0          ELSE RESTORE WORK REGISTERS         U3446000
         BR    LINK                  AND RETURN                         U3448000
         EJECT                                                          U3450000
*********************************************************************** U3450100
*                                                                     * U3452000
*        D E - Q U E U E   A N   S J B   F R O M   A   Q U E U E      * U3454000
*                                                                     * U3456000
*                                                                     * U3456100
*              ADDRESS OF QUEUE HEADER PROVIDED IN WD                 * U3460000
*              ADDRESS OF SJB PROVIDED IN WA                          * U3462000
*              WD DESTROYED BY ROUTINE, ALL OTHER REGISTERS SAVED     * U3464000
*                                                                     * U3466000
*                  ZERO CONDITION CODE - WA POINTS TO DE-QUEUED SJB   * U3466100
*              NON-ZERO CONDITION CODE - WA INVALID                   * U3466200
*                                                                     * U3466300
*********************************************************************** U3466400
         SPACE 3                                                        U3472000
         CNOP  0,8                                                      U3474000
XDEQSJB  LA    WA,0(,WA)           CLEAR HI-ORDER BYTE OF SJB ADDR      U3476000
         SL    WD,=A(SJBXQCHN-SJBDSECT)  PREPARE TO SCAN SJB QUEUE      U3478000
         SPACE 1                                                        U3480000
XSJBNEXT LR    R15,WD              SAVE LAST SJB ADDRESS                U3482000
         ICM   WD,7,SJBXQCHN+1-SJBDSECT(WD)  GET ADDR OF NEXT SJB       U3484000
         BZ    XNOSJB              BR IF END OF SJB CHAIN               U3486000
         CLR   WA,WD               TEST FOR MATCH ON SJB ADDRESSES      U3488000
         BNE   XSJBNEXT            BR IF NO                             U3490000
         SPACE 1                                                        U3492000
         MVC   SJBXQCHN-SJBDSECT(,R15),SJBXQCHN  DE-QUEUE THE SJB       U3494000
         BR    LINK                 AND RETURN WITH ZERO CC             U3496000
         SPACE 1                                                        U3498000
*********************************************************************** U3498100
*                                                                     * U3500000
*        L O S T   A N   S J B                                        * U3502000
*                                                                     * U3504000
*                                                                     * U3506000
*        NOTE -- FAILURE TO LOCATE AN SJB ON A SPECIFIED QUEUE AFTER  * U3508000
*                OBTAINING THE SJB QUEUES LOCK IS NOT NECESSARILY BAD.* U3510000
*                IT WAS PROBABLY REMOVED BY END-OF-MEMORY PROCESSING  * U3512000
*                IN HASPSSSM PRIOR TO OBTAINING THE LOCK.             * U3514000
*                                                                     * U3514100
*********************************************************************** U3514200
         SPACE 1                                                        U3516000
XNOSJB   LR    WD,LINK             SAVE RETURN ADDRESS                  U3518000
         BAL   LINK,XSJBUNLK       REMOVE THE SJB QUEUES LOCK           U3520000
         SLR   R15,R15             SET NON-ZERO CONDITION CODE       R4 U3520100
         BR    WD                   AND RETURN                          U3524000
         EJECT                                                          U3526000
         SPACE 5                                                        U3528000
*********************************************************************** U3528100
*                                                                     * U3530000
*        R E T U R N   A N   S J B   T O   A   Q U E U E              * U3532000
*                                                                     * U3534000
*                                                                     * U3534100
*              ADDRESS OF QUEUE HEADER PROVIDED IN WD                 * U3538000
*              ADDRESS OF SJB PROVIDED IN WA                          * U3540000
*                                                                     * U3540100
*********************************************************************** U3540200
         SPACE 3                                                        U3542000
         CNOP  0,8                                                      U3544000
XQUESJB  ST    WD,SJBQUEUE         SAVE QUEUE ADDRESS IN SJB            U3546000
         LA    WA,0(,WA)           CLEAR HI-ORDER BYTE OF SJB ADDR      U3548000
         L     R15,0(,WD)          ADD CURRENT SJB                      U3550000
         ST    WA,0(,WD)            TO HEAD OF SPECIFIED                U3552000
         ST    R15,SJBXQCHN          SJB QUEUE                          U3554000
         BR    LINK                THEN RETURN                          U3556000
         TITLE 'HASP EXECUTION PROCESSOR -- JOB QUEUE SERVICES'         U3558000
*********************************************************************** U3558100
*                                                                     * U3560000
*        P R O C E S S   P E N D I N G - B Y - C L A S S   Q U E U E  * U3562000
*                                                                     * U3564000
*********************************************************************** U3564100
         SPACE 1                                                        U3566000
         CNOP  4,8                                                      U3568000
XPBYCLS  L     WF,$PITABLE         GET ADDRESS OF FIRST PIT             U3570000
         SPACE 1                                                        U3572000
         USING PITDSECT,WF         PROVIDE PIT ADDRESSABILITY           U3574000
         TM    SJBFLG1,SJB1XBWT    TEST FOR XBM                @OZ49747 U3574100
         BZ    XPITFRST            NO, SCAN PITS               @OZ49747 U3574200
         TM    SJBFLG2,SJB2PNIT+SJB2EOM TEST FOR XBM FAILURE   @OZ49747 U3574300
         BZ    XPITFRST            NO, SCAN PITS               @OZ49747 U3574400
        $DEQSJB $SVJPCLS,XLOOKAGN  DEQUEUE THE FAILING SJB     @OZ49747 U3574500
         L     WF,SJBPIT           ACCESS ITS PIT              @OZ49747 U3574600
         NI    PITSTAT,255-PITBUSY-PITINIT MAKE PIT AVAILABLE  @OZ49747 U3574650
         NI    PITFLAGS,255-PITXBM SHOW NO XBM                 @OZ49747 U3574700
         OI    PITSTAT,PITHOLD1    AND SHOW DRAINED            @OZ49747 U3574750
        $WTO   XEOMSG1,L'XEOMSG1,WAIT=YES,ROUTE=$LOG+$MAIN,    @OZ49747*U3574800
               CLASS=$ALWAYS,PRI=$HI,JOB=NO  WRITE MSGHASP310  @OZ49747 U3574850
         B     XPOSTSJB            GO XMPOST THE WAITING TASK  @OZ49747 U3574900
         SPACE 1                                               @OZ49747 U3574950
XPITFRST TM    SJBLKFG,SJBFIRST    FIRST $SVJPCLS REQUEST...   @OZ39304 U3575100
         BZ    XPIT020             NO, SCAN ALL SJB'S          @OZ40975 U3575200
         SPACE 1                                               @OZ39304 U3575300
*  SEE IF ANY PIT IS WAITING FOR ADDRESS SPACE VERIFICATION    @OZ39304 U3575400
XPIT005  LTR   WF,WF               TEST FOR VALID PIT          @OZ39304 U3575500
         BZ    XPIT010             NO PITS, CHECK START CMD    @OZ39304 U3575600
         TM    PITFLAGS,PITSMVER   THIS PIT WAITING ...        @OZ39304 U3575700
         BO    XPIT030             YES, GO RESET ITS FLAGS     @OZ39304 U3575800
         L     WF,PITNEXT          NO, CHECK NEXT ONE          @OZ39304 U3575900
         B     XPIT005             LOOP                        @OZ39304 U3576000
         SPACE 1                                               @OZ39304 U3576100
*  NO PITS WAITING FOR ADDRESS SPACE CREATE, CHECK SVC34       @OZ39304 U3576200
XPIT010  L     WF,$PITABLE         RESET FOR SCAN              @OZ39304 U3576300
XPIT015  LTR   WF,WF               TEST FOR LAST PIT           @OZ39304 U3576400
         BZ    XPITEOM             NO PITS, GO KILL INIT       @OZ39304 U3576500
         TM    PITFLAGS,PITSIVER   IF PIT HUNG IN SVC34        @OZ39304 U3576600
         BO    XPIT020             LET THE SJB WAIT FOR IT     @OZ39304 U3576700
         L     WF,PITNEXT          ELSE ACCESS THE NEXT PIT    @OZ39304 U3576800
         B     XPIT015             ...GO LOOK AT IT            @OZ39304 U3576900
         SPACE 1                                               @OZ40975 U3576920
XPIT030  NI    SJBLKFG,255-SJBFIRST RESET FLAGS IN SJB...      @OZ40975 U3576940
         NI    PITFLAGS,255-PITSMVER ...AND PIT                @OZ40975 U3576960
         SPACE 1                                               @OZ40975 U3576980
XPIT020  ICM   WA,15,SJBXQCHN      ELSE LET SJB KEEP WAITING   @OZ39304 U3577000
         BNZ   XPITFRST            AND EXAMINE THE NEXT ONE    @OZ39304 U3577100
         L     WF,$PITABLE         RESET FOR NEXT PIT SCAN     @OZ40975 U3577200
         L     WA,$SVJPCLS         RESET SJB ADDRESS           @OZ40975 U3577300
         SPACE 1                                               @OZ40975 U3577400
*              THIS LINE DELETED BY APAR NUMBER                @OZ40975 U3577500
*              THIS LINE DELETED BY APAR NUMBER                @OZ40975 U3577600
*              THIS LINE DELETED BY APAR NUMBER                @OZ40975 U3577700
         SPACE 1                                               @OZ39304 U3577800
*  SCAN FOR AN AVAILABLE PIT                                   @OZ39304 U3577900
XPITNEXT TM    PITSTAT,PITBUSY     TEST FOR PIT IN USE                  U3578000
         BO    XPITCONT            BR IF YES                            U3580000
         TM    PITSTAT,PITINIT     DOES OS/VS2 INITIATOR EXIST...       U3582000
         BZ    XPITCONT            BR IF NO                             U3584000
         TM    PITFLAGS,PITXBM     TEST FOR BATCHING PIT                U3590000
         BO    XPITCONT            BR IF SO (PROCESSED BY XPXBM)        U3592000
         TM    PITFLAGS,PITSIVER   HAS START BEEN VERIFIED...           U3597000
         BO    XPITCONT            BR IF NO                             U3597500
         TM    SJBFLG2,SJB2PNIT    SHOULD WE KILL THIS INITIATOR...     U3598000
         BZ    *+8                 BR IF NO                             U3600000
         OI    PITSTAT,PITHOLD1     ELSE CAUSE PIT TO DRAIN             U3602000
         TM    PITSTAT,PITHOLD1+PITHOLDA+PITHALT1+PITHALTA  TEST STATUS U3604000
         BNZ   XPITHLD             BR IF PIT HELD              @OZ39304 U3604500
         TM    PITFLAGS,PITSMVER   HAS MEM CREATE BEEN DONE..  @OZ39304 U3605000
         BO    XPITCONT            BR IF NO                    @OZ39304 U3605500
         B     XGOTPIT             ELSE WE CAN USE THIS PIT    @OZ39304 U3606000
XPITHLD  DS    0H                                              @OZ39304 U3606500
         NI    PITSTAT,255-PITIDLE RESET PIT 'IDLE' MSG SWITCH          U3608000
         TM    PITSTAT,PITHOLD1+PITHOLDA  SHOULD INITIATOR EXIST...     U3610000
         BZ    XPITCONT            BR IF YES                            U3612000
*        IN DRAINING A PIT, DO NOT TERMINATE THE INITIATOR     @OZ39304 U3612100
*        IF THE PIT IS WAITING FOR ADDRESS SPACE VERIFICATION  @OZ39304 U3612120
         TM    PITFLAGS,PITSMVER   IF PIT NOT STARTING...      @OZ39304 U3612150
         BZ    XPITEND             ...GO TERMINATE THE INIT.   @OZ39304 U3612200
         NI    PITSTAT,255-PITINIT SHOW NO INIT FOR THIS PIT   @OZ39304 U3612800
         NI    PITFLAGS,255-PITSMVER NO POINT WAITING FOR ONE  @OZ39304 U3612850
         B     XPITCONT            GO LOOK AT NEXT PIT         @OZ39304 U3612900
XPITEND  DS    0H                                              @OZ39304 U3612950
        $DEQSJB $SVJPCLS,XLOOKAGN  DE-QUEUE THE SJB                     U3614000
         NI    PITSTAT,255-PITINIT SHOW INIT NO LONGER EXISTS           U3616000
         OI    SJBFLG2,SJB2PNIT    SET FLAG TO TERMINATE INIT           U3618000
         XC    SJBQUEUE,SJBQUEUE   SHOW SJB DE-QUEUED                   U3620000
         SPACE 1                                                        U3622000
XPOSTSJB $XMPOST SJBECBP           XM POST THE WAITING TASK             U3624000
         BAL   LINK,XSJBUNLK       THEN REMOVE THE SJB QUEUES LOCK      U3626000
         B     XLOOKAGN             AND LOOK FOR MORE WORK TO DO        U3628000
         SPACE 1                                               @OZ39304 U3629000
*  TERMINATE THE ADDRESS SPACE IF REQUEST BY AN ILLEGAL INIT   @OZ39304 U3629100
XPITEOM $DEQSJB $SVJPCLS,XLOOKAGN DEQUEUE THE INVALID SJB      @OZ39304 U3629200
         OI    SJBFLG2,SJB2PNIT    CAUSE INIT TO TERMINATE     @OZ39304 U3629300
         XC    SJBQUEUE,SJBQUEUE   SHOW NOT ON ANY QUEUE       @OZ39304 U3629400
         B     XPOSTSJB            XMPOST THE WAITING TASK     @OZ39304 U3629500
         SPACE 1                                                        U3630000
XSVJPCLS EQU   $SVJPCLS            ALTERNATE NAME FOR SJB QUEUE         U3632000
         EJECT                                                          U3634000
*********************************************************************** U3634100
*                                                                     * U3636000
*        N O   J O B   F O R   P I T                                  * U3638000
*                                                                     * U3640000
*********************************************************************** U3640100
         SPACE 1                                                        U3642000
         CNOP  0,8                                                      U3644000
XNOJOB   TM    PITSTAT,PITIDLE     HAS 'IDLE' MSG BEEN SENT...          U3646000
         BO    XMSGSENT            BR IF YES                        R41 U3648000
         LA    R1,XIDLEMSG          ELSE GET PIT 'IDLE' MSG ADDR    R41 U3650000
         BAL   WE,XPITMSG            AND ISSUE THE MESSAGE          R41 U3652000
         OI    PITSTAT,PITIDLE     SHOW 'IDLE' MSG SENT             R41 U3654000
         SPACE 1                                                    R41 U3656000
XMSGSENT TM    PITFLAGS,PITXBM     TEST FOR BATCHING PIT            R41 U3658000
         BNO   XPITCONT            BR IF NOT TO GET NEXT PIT   @OZ43716 U3664000
         SPACE 1                                               @OZ43716 U3664100
         BAL   LINK,XSJBLOCK       OBTAIN SJB QUEUES LOCK      @OZ43716 U3664200
         LA    WA,0(,WA)           CLEAR HI-ORDER BYTE AND     @OZ43716 U3664300
         LA    WD,$SVJPXBM            PREPARE TO               @OZ43716 U3664400
         SL    WD,=A(SJBXQCHN-SJBDSECT) SCAN SJB QUEUE         @OZ43716 U3664500
         SPACE 1                                               @OZ43716 U3664600
XSJBSCAN ICM   WD,7,SJBXQCHN+1-SJBDSECT(WD)  GET ADDR OF NEXT  @OZ43716 U3664700
         BZ    XSJBNONE                SJB AND BRANCH IF NONE  @OZ43716 U3664800
         CLR   WA,WD               IS CURRENT SJB ON QUEUE     @OZ43716 U3664900
         BNE   XSJBSCAN            BR IF NO                    @OZ43716 U3665000
         SPACE 1                                               @OZ43716 U3665100
         L     WA,SJBXQCHN         YES, PICK UP CHAIN POINTER  @OZ43716 U3665200
         B     XSJBCONT             AND CONTINUE               @OZ43716 U3665300
         SPACE 1                                               @OZ43716 U3665400
XSJBNONE L     WA,$SVJPXBM         ELSE START AT TOP OF QUEUE  @OZ43716 U3665500
XSJBCONT BAL   LINK,XSJBUNLK       REMOVE THE SJB QUEUES LOCK  @OZ43716 U3665600
         B     XNXTCONT             AND RETURN TO XPXBM RTN    @OZ43716 U3665700
         SPACE 1                                                        U3668000
*********************************************************************** U3668100
*                                                                     * U3670000
*        G E T   N E X T   P I T                                      * U3672000
*                                                                     * U3674000
*********************************************************************** U3674100
         SPACE 1                                                        U3676000
XPITCONT L     WF,PITNEXT          POINT TO NEXT PIT                 R4 U3678000
         LTR   WF,WF               TEST FOR VALID PIT ADDRESS        R4 U3680000
         BNZ   XPITNEXT            BR IF SO                          R4 U3682000
         B     XNOWORK              ELSE WAIT FOR MORE WORK             U3684000
         EJECT                                                          U3690000
*********************************************************************** U3690100
*                                                                     * U3692000
*       P R O C E S S   E X E C U T I O N   B A T C H I N G   Q U E U * U3694000
*                                                                     * U3696000
*********************************************************************** U3696100
         SPACE 1                                                        U3698000
         CNOP  0,8                                                      U3700000
XPXBM    L     WF,SJBPIT           GET PIT ADDRESS FROM SJB             U3706000
         TM    PITFLAGS,PITXBJCL   TEST FOR AWAITING JCL                U3708000
         BZ    XHAVEJCL            BR IF NO                             U3710000
         PACK  PCER1(8),SJBJOBID+3(5)  CNVT EBCDIC JOB NUMBER           U3712000
         CVB   R1,PCER1                 TO BINARY                       U3714000
        $QLOC  (R1),XNOJCL         LOCATE JOB 'CONTAINING' JCL          U3716000
         TM    JQETYPE,$XEQ        TEST QUEUE TYPE                      U3718000
         BZ    XNOJCL              BR IF QUEUE LOCATION INVALID         U3720000
         TM    JQETYPE,QUECLASS-$XEQ  ELSE RE-TEST QUEUE TYPE           U3722000
         BZ    XNEXTXBM            BR IF JCL NOT YET CONVERTED          U3724000
         TM    JQEFLAGS,QUEBUSY    IF JOB ALREADY SELECTED,             U3726000
         BNZ   XNOJCL               TREAT AS INVALID QUEUE LOCATION     U3728000
         OC    JQEFLAGS,$SIDBUSY     ELSE SHOW JOB BEING PROCESSED      U3730000
        $QCKPT (R1)                   AND FORCE CHECKPOINT OF JQE       U3731000
         NI    PITFLAGS,255-PITXBJCL  SHOW JCL PROCESSED                U3732000
         ST    R1,PCEJQE           STORE JQE ADDRESS           @OZ32566 U3733000
         B     XBMJOB              THEN BR TO PROCESS THE JOB           U3734000
         SPACE 1                                                        U3736000
*********************************************************************** U3736100
*                                                                     * U3738000
*        L O S T   T H E   M O N I T O R   J C L   J O B              * U3740000
*                                                                     * U3742000
*********************************************************************** U3742100
         SPACE 1                                                        U3744000
XNOJCL  $DEQSJB $SVJPXBM,XLOOKAGN  DE-QUEUE THE SJB                     U3746000
         NI    SJBFLG1,255-SJB1XBM RESET THE BATCHING FLAG              U3748000
         NI    PITFLAGS,255-PITXBM-PITXBJCL  CLEAR XBM FLAGS            U3752000
         NI    PITSTAT,255-PITBUSY            AND SHOW PIT AVAILABLE    U3754000
         LA    WD,$SVJPCLS         RE-QUEUE THE SJB                     U3756000
         BAL   LINK,XQUESJB         ON JOB-PENDING-XEQ-BY-CLS QUEUE     U3758000
         BAL   LINK,XSJBUNLK       THEN REMOVE THE SJB QUEUES LOCK      U3760000
         B     XLOOKAGN             AND LOOK FOR MORE WORK TO DO        U3762000
         EJECT                                                          U3764000
*********************************************************************** U3764100
*                                                                     * U3766000
*        H A V E   S J B   F O R   W A I T I N G   M O N I T O R      * U3768000
*                                                                     * U3770000
*********************************************************************** U3770100
         SPACE 1                                                        U3772000
         CNOP  0,8                                                      U3774000
XHAVEJCL TM    PITSTAT,PITHOLD1+PITHOLDA  TEST PIT STATUS               U3776000
         BNZ   XKILLXBM            BR IF PIT IS BEING DRAINED           U3778000
         LA    R15,PITCLASS-1      GET ADDRESS OF PIT                   U3780000
         SPACE 1                                                        U3782000
XNEXTCLS LA    R15,1(,R15)         POINT TO NEXT PIT CLASS              U3784000
         CLC   SJBJCLAS,0(R15)     TEST FOR BATCHING CLASS              U3786000
         BE    XBMCLAS             BR IF SO                             U3788000
         CLI   0(R15),C' '         TEST FOR END OF CLASS LIST           U3790000
         BNE   XNEXTCLS            BR IF NO                             U3792000
         SPACE 1                                                        U3794000
*********************************************************************** U3794100
*                                                                     * U3796000
*        T E R M I N A T E   T H E   B A T C H   M O N I T O R        * U3798000
*                                                                     * U3800000
*                                                                     * U3800100
*                             SJB1XBM   ON                            * U3804000
*                             SJB1XBMC  ON                            * U3806000
*                             SJB1XBWT  ON                            * U3808000
*                                                                     * U3808100
*********************************************************************** U3808200
         SPACE 1                                                        U3810000
XKILLXBM OI    PITSTAT,PITBUSY     SHOW PIT IN USE                      U3812000
        $DEQSJB $SVJPXBM,XLOOKAGN  DE-QUEUE THE SJB                     U3814000
         B     XBMKILL             THEN BR TO KILL THE MONITOR          U3816000
         SPACE 1                                                        U3818000
         CNOP  0,8                                                      U3820000
XBMCLAS  TM    PITSTAT,PITHALT1+PITHALTA  TEST PIT STATUS               U3822000
         BNZ   XNEXTXBM            BR IF PIT IS HALTED                  U3824000
         IC    R1,SJBJCLAS         GET JOB CLASS FROM SJB               U3826000
         N     R1,=A(QUECLASS)     CONVERT TO INTERNAL FORMAT           U3828000
         LA    R15,X'3F'           GET MASK FOR RELATIVE CAT ENTRY      U3830000
         NR    R15,R1              GET RELATIVE CAT ENTRY               U3832000
         SLL   R15,5               MULTIPLY BY CAT ENTRY LENGTH         U3834000
         AL    R15,$CATABLE        THEN POINT TO CAT ENTRY              U3836000
         TM    CATJBOPT-CATDSECT(R15),CATQHELD  TEST FOR HELD CLS       U3838000
         BO    XKILLXBM            BR IF SO                             U3840000
         EJECT                                                       R4 U3840100
*********************************************************************** U3840200
*                                                                     * U3844000
*        G E T   N E X T   B A T C H   M O N I T O R   J O B          * U3846000
*                                                                     * U3848000
*********************************************************************** U3848100
         SPACE 1                                                        U3850000
        $QGET  (R1),XNOXBMJB       GET JOB FOR BATCH MONITOR            U3854000
         BAL   R15,XBJCLJB         IF MONITOR JCL JOB,                  U3856000
         BNZ   XREQXBJB             BR TO REQUEUE IT                    U3858000
         BAL   LINK,XDUPTEST       TEST FOR DUPLICATE JOBNAME           U3860000
         BNZ   XHAVEJCL            BR IF SO TO TRY AGAIN                U3862000
         SPACE 1                                                     R4 U3862100
*********************************************************************** U3862200
*                                                                     * U3866000
*        H A V E   J O B   F O R   B A T C H   M O N I T O R          * U3868000
*                                                                     * U3870000
*                                                                     * U3870100
*                             SJB1XBM   ON                            * U3874000
*                             SJB1XBMC  OFF IF FIRST JOB              * U3876000
*                             SJB1XBMC  ON IF SUBSEQUENT JOB          * U3878000
*                             SJB1XBWT  OFF                           * U3880000
*                                                                     * U3880100
*********************************************************************** U3880200
         SPACE 1                                                        U3882000
XBMJOB  $DEQSJB $SVJPXBM,XSJBLOST  DE-QUEUE THE SJB                     U3886000
         NI    SJBFLG1,255-SJB1XBWT  INDICATE BATCH MONITOR JOB         U3888000
         B     XCLSJOB                AND BR TO POST WAITING TASK       U3890000
         SPACE 1                                                        U3892000
         CNOP  4,8                                                      U3894000
XLOSTSJB BAL   LINK,XSJBUNLK       REMOVE SJB QUEUES LOCK               U3896000
         SPACE 1                                                        U3898000
XSJBLOST BAL   LINK,XQSUSE         REQUEST ACCESS TO CHECKPOINT DATA    U3900000
         SPACE 1                                                        U3906000
XJOBREQ  LA    LINK,XPXBMBR-XBRTABLE  BACK UP TO                    R41 U3907000
         ST    LINK,XQOFFSET           SEARCH XBM QUEUE             R41 U3908000
         IC    R0,JQETYPE          RE-QUEUE JOB                         U3909000
        $QPUT  (R1),(R0)            FOR EXECUTION                       U3910000
         B     XLOOKAGN             AND LOOK FOR MORE WORK TO DO        U3912000
         EJECT                                                       R4 U3912100
*********************************************************************** U3912200
*                                                                     * U3916000
*        H A V E   X B M   J C L   J O B   F O R   L A T E R   S J B  * U3918000
*                                                                     * U3920000
*********************************************************************** U3920100
         SPACE 1                                                        U3922000
XREQXBJB IC    R0,JQETYPE          RE-QUEUE JOB                         U3923000
        $QPUT  (R1),(R0)            FOR EXECUTION                       U3924000
         SPACE 1                                                        U3926000
*********************************************************************** U3926100
*                                                                     * U3928000
*        G E T   N E X T   B A T C H   M O N I T O R   S J B          * U3930000
*                                                                     * U3932000
*********************************************************************** U3932100
         SPACE 1                                                        U3934000
XNEXTXBM L     WA,SJBXQCHN         GET ADDRESS OF NEXT SJB              U3936000
XNXTCONT LTR   WA,WA               TEST FOR END OF SJB CHAIN   @OZ43716 U3938000
         BNZ   XPXBM               BR IF NO                             U3940000
         B     XJQNEXT              ELSE TRY NEXT SJB QUEUE             U3942000
         SPACE 1                                                        U3944000
         CNOP  0,8                                                   R4 U3946000
XNOXBMJB CLI   PITCLASS+1,C' '     WAS BATCHING CLASS THE ONLY ONE...   U3948000
         BE    XNOJOB              BR IF SO                             U3950000
         LA    WE,1                ASSUME BATCHING CLASS WAS FIRST      U3952000
         CLC   SJBJCLAS,PITCLASS   TEST ASSUMPTION                      U3954000
         BE    XGETCLJB            BR IF VALID                          U3956000
         EJECT                                                          U3960000
*********************************************************************** U3960100
*                                                                     * U3962000
*        H A V E   A   P I T   -   T R Y   T O   G E T   A   J O B    * U3964000
*                                                                     * U3966000
*********************************************************************** U3966100
         SPACE 1                                                        U3968000
XGOTPIT  SLR   WE,WE               CLEAR PIT CLASS COUNT                U3972000
         SPACE 1                                                        U3976000
XGETCLJB IC    WD,PITCLASS(WE)     GET NEXT JOB CLASS FROM PIT          U3978000
         LA    WE,1(,WE)           BUMP PIT CLASS COUNT                 U3980000
         CLM   WD,1,=C' '          TEST FOR END OF CLASS LIST           U3982000
         BE    XNOJOB              BR IF SO                             U3984000
         N     WD,=A(QUECLASS)     ISOLATE JOB CLASS FOR $QGET          U3986000
         LA    WB,X'3F'            GET MASK FOR RELATIVE CAT ENTRY      U3988000
         NR    WB,WD               GET RELATIVE CAT ENTRY               U3990000
         SLL   WB,5                MULTIPLY BY CAT ENTRY LENGTH         U3992000
         AL    WB,$CATABLE         THEN POINT TO CAT ENTRY              U3994000
         SPACE 1                                                        U3996000
         USING CATDSECT,WB         PROVIDE CAT ADDRESSABILITY           U3998000
         SPACE 1                                                        U4000000
         TM    CATJOBFL,CATTSUJB+CATSTCJB  TEST FOR LOGON OR TASK       U4002000
         BNZ   XGETCLJB            BR IF SO                             U4004000
         TM    CATJBOPT,CATQHELD   TEST FOR HELD CLASS                  U4006000
         BO    XGETCLJB            BR IF SO                             U4008000
        $QGET  (WD),XGETCLJB        ELSE TRY TO GET A JOB               U4010000
         BAL   LINK,XDUPTEST       TEST FOR DUPLICATE JOB               U4012000
         BNZ   XGOTPIT             BR IF SO TO RE-SCAN PIT              U4014000
         ST    WB,XQCATAD          SAVE ADDRESS OF CAT         @OZ29151 U4016000
         IC    R0,JQETYPE          PICK UP JOB CLASS                    U4029000
         O     R0,=A(255-QUECLASS)  AND MAKE PRINTABLE                  U4029500
         TM    CATJBOPT,CATXBACH   TEST FOR BATCHING JOB                U4030000
         BO    XBMNCKPT            BR IF XBM BATCH JOB         @OZ40903 U4032000
         $POST $HASPECF,CKPW       FORCE A CHECKPOINT          @OZ40903 U4032500
         $WAIT CKPT,INHIBIT=NO     WAIT FOR CKPT TO COMPLETE   @OZ40903 U4033000
         B     XNOTXBJB            BRANCH TO NOT XBM JOB       @OZ40903 U4033500
XBMNCKPT BAL   R15,XBJCLJB         IF MONITOR JCL JOB,         @OZ40903 U4034000
         BNZ   XREQJCL             BR TO REQUEUE IT.           @OZ29151 U4036000
         TM    PITFLAGS,PITXBM     TEST FOR BATCHING PIT                U4038000
         BZ    XBMJOB1             BR IF NO                             U4040000
         L     WA,PITSJB            ELSE GET SJB ADDRESS FROM PIT       U4042000
         CLM   R0,1,SJBJCLAS       TEST FOR JOB CLASS OF MONITOR        U4044000
         BNE   XALTRNIT            BR IF NO                             U4046000
         B     XJOBREQ              ELSE RE-QUE JOB FOR XBM PROCESSING  U4048000
         SPACE 2                                               @OZ29151 U4048100
XREQJCL  CLC   XQOFFSET,=A(XPXBMBR-XBRTABLE) BR, NOT ALREADY   @OZ29151 U4048200
         BNE   XJOBREQ             PROCESSING $SVJPXBM QUEUE.  @OZ29151 U4048300
         IC    R0,JQETYPE          ELSE                        @OZ29151 U4048400
         $QPUT (R1),(R0)            REQUEUE JOB AND            @OZ29151 U4048500
         B     XNEXTXBM              GO FETCH NEXT SJB.        @OZ29151 U4048600
         SPACE 1                                                        U4050000
         DROP  WB                  KILL CAT ADDRESSABILITY              U4052000
         EJECT                                                          U4054000
*********************************************************************** U4054100
*                                                                     * U4056000
*        R E - Q U E U E   J O B   F O R   N E W   M O N I T O R      * U4058000
*                                                                     * U4060000
*********************************************************************** U4060100
         SPACE 1                                                        U4062000
         CNOP  0,8                                                      U4064000
XBMJOB1 $DEQSJB $SVJPCLS,XLOSTSJB  DE-QUEUE AN SJB                      U4066000
         STCM  WA,7,PITSJB+1       SAVE SJB ADDRESS IN PIT              U4068000
         LR    R0,R1               SAVE JQE                    @OZ40028 U4069000
         SL    R0,$JOBQPTR          OFFSET                     @OZ40028 U4070000
         ST    R0,SJBJQOFF           IN SJB                    @OZ40028 U4071000
         ST    WF,SJBPIT           SAVE PIT ADDRESS IN SJB              U4072000
         MVC   SJBPATID,PITPATID   SAVE PIT ID IN SJB                   U4074000
         OI    SJBFLG1,SJB1XBM     INDICATE BATCH MONITOR               U4076000
         NI    PITSTAT,255-PITIDLE RESET PIT 'IDLE' MESSAGE SWITCH      U4078000
         OI    PITSTAT,PITBUSY     SHOW PIT IN USE                      U4080000
         OI    PITFLAGS,PITXBM+PITXBJCL  SHOW XBM PIT AWAITING JCL      U4082000
         MVC   SJBXBJNM(5),$XBATCHN       CONSTRUCT MONITOR          R4 U4084000
         MVC   SJBXBJNM+5(1),JQETYPE       JOB /                        U4086000
         OI    SJBXBJNM+5,255-QUECLASS      PROCEDURE                   U4087000
         MVC   SJBXBJNM+6(2),PITPATID        NAME FIELD                 U4088000
         BAL   LINK,XID            PROVIDE HASP JOB ID IN SJB           U4090000
         CLI   SJBXBJNM+6,C' '     AND LEFT-JUSTIFY                     U4092000
         BNE   *+14                     INIT                            U4094000
         MVC   SJBXBJNM+6(1),SJBXBJNM+7  ID                             U4096000
         MVI   SJBXBJNM+7,C' '            (IF NECESSARY)                U4098000
         MVC   SJBJOBNM,JQEJNAME   SAVE JOB NAME IN CASE INIT CRASH     U4099000
         LA    WD,$SVJPXBM         RE-QUEUE THE SJB                     U4100000
         BAL   LINK,XQUESJB         ON PENDING-BATCHING QUEUE           U4102000
         BAL   LINK,XSJBUNLK       REMOVE SJB QUEUES LOCK               U4104000
         BAL   LINK,XQSUSE         REQUEST ACCESS TO CHECKPOINT DATA    U4106000
         NI    JQEFLAG2,255-QUESYSAF  FORCE AFFINITY                    U4107000
         OC    JQEFLAG2,$SIDAFF        TO CURRENT SYSTEM                U4108000
        $QPUT  (R1),$XEQ           QUEUE JOB FOR JCL CONVERSION         U4110000
         B     XLOOKAGN            THEN LOOK FOR MORE WORK TO DO        U4112000
         EJECT                                                          U4114000
*********************************************************************** U4114100
*                                                                     * U4116000
*        H A V E   N O N - B A T C H   M O N I T O R   J O B          * U4118000
*                                                                     * U4120000
*********************************************************************** U4120100
         SPACE 1                                                        U4122000
         CNOP  0,8                                                      U4124000
XNOTXBJB TM    PITFLAGS,PITXBM     TEST FOR BATCHING PIT                U4126000
         BZ    XGETSJB             BR IF NO                             U4128000
         SPACE 1                                                        U4138000
XALTRNIT LA    WB,0(,WF)           SAVE CURRENT PIT ADDRESS          R4 U4138100
         L     WF,$PITABLE         GET ADDRESS OF FIRST PIT             U4142000
         SPACE 1                                                        U4144000
XPITAGN  TM    PITSTAT,PITBUSY+PITHOLD1+PITHOLDA+PITHALT1+PITHALTA      U4146000
         BNZ   XPITTEST            BR IF PIT NOT READY TO USE           U4148000
         TM    PITFLAGS,PITSIVER+PITSMVER START NOT VERIFIED,  @OZ39304 U4149000
         BNZ   XPITTEST            ...BR TO TEST NEXT PIT      @OZ39304 U4149500
         TM    PITFLAGS,PITXBM     TEST FOR BATCHING PIT                U4150000
         BNO   XPITCHN             BR IF NOT SO.               @OZ29151 U4152000
         TM    PITFLAGS,PITXBJCL   DO NOT CONSIDER IF          @OZ29151 U4152100
         BO    XPITTEST             AWAITING JCL.              @OZ29151 U4152200
         L     WA,PITSJB           ADDR OF SJB THIS PIT.       @OZ29151 U4152600
         CLM   R0,1,SJBJCLAS       GO EXAMINE NEXT PIT IF      @OZ29151 U4152700
         BNE   XPITTEST            THIS IDLE XBM WRONG CLASS.  @OZ29151 U4152800
         IC    R0,JQETYPE          ELSE REQUEUE                @OZ29151 U4152900
         $QPUT (R1),(R0)            JOB AND                    @OZ29151 U4153000
         B     XPXBM                 GO FIRE UP XBM.           @OZ29151 U4153100
XPITCHN  LA    R15,PITCLASS-1   SET UP TO CHAIN PIT CLS LIST.  @OZ29151 U4154000
         SPACE 1                                                        U4156000
XPITCLAS LA    R15,1(,R15)         POINT TO NEXT PIT CLASS              U4158000
         CLM   R0,1,0(R15)         TEST FOR MATCH WITH JOB CLASS        U4160000
         BNE   XPITNULL            BR IF NOT SO.               @OZ29151 U4162000
         L     R15,XQCATAD         ADDR OF CAT ENTRY.          @OZ29151 U4162100
         TM    CATJBOPT-CATDSECT(R15),CATXBACH BR IF           @OZ29151 U4162200
         BNO   XGETSJB             NOT BATCHING JOB.           @OZ29151 U4162300
         L     WA,$SVJOB            ELSE SAVE 'NEST'INDICATOR  @OZ29151 U4162350
         IC    R0,JQETYPE           GET JOB CLASS OF NEW XBM   @OZ29151 U4162400
         $QPUT (R1),(R0)           REQUEUE JOB                 @OZ29151 U4162500
         LTR   WA,WA               TEST SAVED 'NEST' INDIC.    @OZ29151 U4162560
         BM    XJQNEXT             LOOK FOR MORE WORK IF SET.  @OZ29151 U4162600
         NI    $SVJOB,255-X'80'      ELSE RESET $POST BIT      @OZ29151 U4162700
         B     XJQNEXT               BEFORE TESTING NEXT Q.    @OZ29151 U4162800
XPITNULL CLI   0(R15),C' '        TEST FOR END OF CLASS LIST.  @OZ29151 U4164000
         BNE   XPITCLAS            BR IF NO                             U4166000
         SPACE 1                                                        U4168000
XPITTEST L     WF,PITNEXT          POINT TO NEXT PIT                 R4 U4170000
         LTR   WF,WF               TEST FOR VALID PIT ADDRESS        R4 U4172000
         BNZ   XPITAGN             BR IF SO                          R4 U4174000
         EJECT                                                       R4 U4174100
*********************************************************************** U4174200
*                                                                     * U4178000
*        K I L L   M O N I T O R   T O   R E - U S E   P I T          * U4180000
*                                                                     * U4182000
*********************************************************************** U4182100
         SPACE 1                                                        U4184000
         LR    WF,WB               RESTORE CURRENT PIT ADDRESS          U4186000
         OI    PITSTAT,PITBUSY     SHOW PIT IN USE                      U4188000
         L     WA,PITSJB           GET SJB ADDRESS FROM PIT             U4190000
        $DEQSJB $SVJPXBM,XREQJOB   DE-QUEUE THE SJB                     U4192000
         SL    R1,$JOBQPTR         SAVE JQE OFFSET             @OZ40028 U4193000
         ST    R1,SJBJQOFF          IN SJB                     @OZ40028 U4194000
         OI    SJBFLG1,SJB1XBMJ    SHOW NORMAL JOB CAUSED TERMINATION   U4196000
        $ACTIVE                    BUMP ACTIVE COUNT UNTIL KILLED       U4198000
         SPACE 1                                                        U4200000
XBMKILL  LA    WD,$SVJXCLS         RE-QUEUE THE SJB                     U4202000
         BAL   LINK,XQUESJB         ON EXECUTING-BY-CLASS QUEUE         U4204000
         B     XPOSTSJB              AND BR TO POST WAITING TASK        U4206000
         SPACE 1                                                     R4 U4206100
*********************************************************************** U4206200
*                                                                     * U4212000
*        G E T   S J B   F O R   N O N - X B M   J O B                * U4214000
*                                                                     * U4216000
*********************************************************************** U4216100
         SPACE 1                                                        U4218000
         CNOP  0,8                                                      U4220000
XGETSJB $DEQSJB $SVJPCLS,XUNLKSJB  DE-QUEUE AN SJB                      U4224000
         EJECT                                                       R4 U4224100
*********************************************************************** U4224200
*                                                                     * U4228000
*        H A V E   J O B   A N D   S J B                              * U4230000
*                                                                     * U4232000
*********************************************************************** U4232100
         SPACE 1                                                        U4234000
         STCM  WA,7,PITSJB+1       SAVE SJB ADDRESS IN PIT              U4236000
         ST    WF,SJBPIT           SAVE PIT ADDRESS IN SJB              U4238000
         MVC   SJBPATID,PITPATID   MOVE PIT ID TO SJB                   U4240000
         SPACE 1                                                        U4242000
XCLSJOB  LA    WD,$SVJXCLS         GET JOB-IN-XEQ-BY-CLS QUEUE HDR      U4244000
         NI    PITSTAT,255-PITIDLE RESET PIT 'IDLE' MSG SWITCH          U4246000
         OI    PITSTAT,PITBUSY     SHOW PIT IN USE                      U4248000
         SPACE 1                                                        U4250000
XACTIVE $ACTIVE R=WE               INDICATE PROCESSOR ACTIVE            U4252000
         SPACE 1                                                        U4254000
XIDJOB   MVC   SJBJCLAS,JQETYPE    MOVE JOB CLASS TO SJB                U4256000
         OI    SJBJCLAS,255-QUECLASS  MAKE JOB CLASS PRINTABLE          U4257000
         MVC   SJBPRIO,JQEPRIO     SET SELECTION PRIORITY               U4258000
         BAL   LINK,XID            PROVIDE HASP JOB ID IN SJB           U4260000
*                                  THIS LINE DELETED BY APAR   @OZ40028 U4262000
         L     R0,JQETRAK          GET TRACK ADDRESS OF JCT             U4264000
         ST    R0,SJBJCTRK          AND SAVE IN SJB                     U4266000
         SL    R1,$JOBQPTR         GET JQE OFFSET                       U4268000
         ST    R1,SJBJQOFF          AND SAVE IN SJB                     U4270000
         BAL   LINK,XQUESJB        THEN RE-QUEUE THE SJB                U4272000
         B     XPOSTSJB             AND BR TO POST WAITING TASK         U4274000
         SPACE 1                                                        U4276000
XUNLKSJB BAL   LINK,XSJBUNLK       REMOVE SJB QUEUES LOCK               U4278000
         SPACE 1                                                        U4280000
XREQJOB  BAL   LINK,XQSUSE         REQUEST ACCESS TO CHECKPOINT DATA R4 U4281000
         L     WA,$SVJOB           SAVE CURRENT 'NEST' INDICATOR     R4 U4282000
         IC    R0,JQETYPE          RE-QUEUE JOB                      R4 U4283000
        $QPUT  (R1),(R0)            FOR EXECUTION                       U4284000
         LTR   WA,WA               TEST SAVED 'NEST' INDICATOR       R4 U4285000
         BM    XJQNEXT             BR IF SET                         R4 U4286000
         NI    $SVJOB,255-X'80'     ELSE RESET $POST BIT             R4 U4287000
         B     XJQNEXT             THEN BR TO TEST NEXT QUEUE        R4 U4288000
         SPACE 1                                                        U4290000
         DROP  WF                  KILL PIT ADDRESSABILITY              U4292000
         EJECT                                                          U4294000
         SPACE 5                                                        U4296000
*********************************************************************** U4296100
*                                                                     * U4298000
*        C O N S T R U C T   H A S P   J O B   I D                    * U4300000
*                                                                     * U4302000
*********************************************************************** U4302100
         SPACE 1                                                        U4304000
         CNOP  0,8                                                      U4306000
XID      LH    R0,JQEJOBNO                  GET HASP JOB NUMBER         U4308000
         CVD   R0,SJBDBLWK                   AND CONSTRUCT              U4310000
         NI    SJBDBLWK+5,X'0F'               JCT-FORM                  U4312000
         MVC   SJBJOBID+2(6),=X'402020202021'  HASP                     U4314000
         ED    SJBJOBID+2(6),SJBDBLWK+5         JOB ID                  U4316000
         MVC   SJBJOBID(3),=C'JOB' ASSUME BATCH JOB                     U4318000
         CH    R0,=H'10000'        TEST ASSUMPTION                      U4320000
         BLR   LINK                RETURN IF VALID                      U4322000
         MVC   SJBJOBID(3),=C'STC' ASSUME STARTED TASK                  U4324000
         CH    R0,=H'20000'        TEST ASSUMPTION                      U4326000
         BLR   LINK                RETURN IF VALID                      U4328000
         MVC   SJBJOBID(3),=C'TSU'  ELSE MUST BE LOGON                  U4330000
         BR    LINK                RETURN                               U4332000
         EJECT                                                          U4334000
*********************************************************************** U4334100
*                                                                     * U4336000
*        T E S T   F O R   D U P L I C A T E   J O B N A M E          * U4338000
*                                                                     * U4340000
*********************************************************************** U4340100
         SPACE 1                                                        U4342000
         CNOP  0,8                                                      U4344000
XDUPTEST LA    R1,0(,R1)             PREPARE                            U4344500
         L     WD,=V($QINDEX)         TO                                U4345000
         LA    WE,C'A'-(255-QUECLASS)  SCAN                             U4345500
         IC    WE,0(WD,WE)              EXECUTION                       U4346000
         LA    R15,72                    BY CLASS                       U4346500
         L     R0,$JOBQPTR                QUEUES                        U4347000
         SPACE 1                                                        U4347500
*********************************************************************** U4347600
*                                                                     * U4348000
*        T E S T   F O R   E X E C U T I N G   D U P L I C A T E      * U4348500
*                                                                     * U4349000
*********************************************************************** U4349100
         SPACE 1                                                        U4349500
XQUENEXT LA    WD,0(WE,R15)               PREPARE TO SCAN               U4350000
         LA    WD,$JQHEADS-4-QUECHAIN(WD)  NEXT EXECUTION QUEUE         U4350500
         SPACE 1                                                        U4351000
         USING JQEDSECT,WD         PROVIDE JQE ADDRESSABILITY           U4351500
         SPACE 1                                                        U4352000
XJQENXT1 LH    WD,JQECHAIN         GET OFFSET                           U4352500
         N     WD,=X'0000FFFF'      OF NEXT JQE                         U4353000
         BZ    XQUEEND             BR IF END OF CURRENT QUEUE           U4353500
         SLL   WD,2                 ELSE CONVERT OFFSET                 U4354000
         ALR   WD,R0                 TO ABSOLUTE ADDRESS                U4354500
         CLC   JQEJNAME,QUEJNAME(R1)  IF JOB NAMES DON'T MATCH,         U4355000
         BNE   XJQENXT1                BR TO TEST NEXT JQE              U4355500
         CLR   WD,R1               IF CURRENT JOB,                      U4356000
         BE    XJQENXT1             BR TO TEST NEXT JQE                 U4356500
         TM    JQEFLAGS,QUEBUSY    IF JOB NOT ACTIVE,                   U4357000
         BZ    XJQENXT1             BR TO TEST NEXT JQE                 U4357500
         B     XDUPLJOB              ELSE BR TO REQUEUE CURRENT JOB     U4358000
         SPACE 1                                                        U4358500
         CNOP  0,8                                                      U4359000
XQUEEND  BCTR  R15,0               IF ANOTHER EXECUTION QUEUE,      R41 U4359100
         BCT   R15,XQUENEXT         BR TO SCAN IT                   R41 U4360000
         EJECT                                                          U4361500
*********************************************************************** U4361600
*                                                                     * U4362000
*        T E S T   F O R   C O N V E R T I N G   D U P L I C A T E    * U4362500
*                                                                     * U4363000
*********************************************************************** U4363100
         SPACE 1                                                        U4363500
         L     WD,=V($QINDEX)           PREPARE                         U4364000
         LA    WE,$XEQ                   TO SCAN                        U4364500
         IC    WE,0(WD,WE)                CONVERSION                    U4365000
         LA    WD,$JQHEADS-2-QUECHAIN(WE)  QUEUE                        U4365500
         SPACE 1                                                        U4366000
XJQENXT2 LH    WD,JQECHAIN         GET OFFSET                           U4366500
         N     WD,=X'0000FFFF'      OF NEXT JQE                         U4367000
         BZR   LINK                RETURN IF END OF QUEUE WITH CC=0     U4367500
         SLL   WD,2                 ELSE CONVERT OFFSET                 U4368000
         ALR   WD,R0                 TO ABSOLUTE ADDRESS                U4368500
         CLC   JQEJNAME,QUEJNAME(R1)  IF JOB NAMES DON'T MATCH,         U4369000
         BNE   XJQENXT2                BR TO TEST NEXT JQE              U4369500
         CLC   JQEJOBNO,=H'10000'  IF NOT BATCH JOB,                    U4370000
         BNL   XJQENXT2             BR TO TEST NEXT JQE                 U4370500
         ST    R1,PCER1            SAVE INPUT JQE ADDRESS               U4371000
         LR    R1,WD                AND RELOAD TEST JQE ADDRESS         U4371500
         BAL   R15,XBJCLJB         TEST FOR MONITOR JCL JOB             U4372000
         LR    WD,R1               RESTORE INPUT AND TEST               U4372500
         L     R1,PCER1             JQE ADDRESSES                       U4373000
         BNZ   XDUPLJOB            BR IF MONITOR JCL JOB                U4373500
         B     XJQENXT2             ELSE BR TO TEST NEXT JQE            U4374000
         EJECT                                                 @OZ40028 U4374100
*********************************************************************** U4374200
*                                                                     * U4375000
*        T E S T   F O R   M O N I T O R   J C L   J O B              * U4375500
*                                                                     * U4376000
*********************************************************************** U4376100
         SPACE 1                                                        U4376500
         CNOP  0,8                                             @OZ40028 U4377000
XBJCLJB  LA    WE,$SVJPXBM-(SJBXQCHN-SJBDSECT)  PREPARE TO SCAN SJBS    U4377500
         SL    R1,$JOBQPTR         REDUCE JQE ADDR TO OFFSET   @OZ40028 U4377600
         SPACE 1                                                        U4378000
         USING SJBDSECT,WE         PROVIDE LOCAL SJB ADDRESSABILITY     U4378500
         SPACE 1                                                        U4379000
XNEXTSJB ICM   WE,7,SJBXQCHN+1     IF NO MORE SJBS,                     U4379500
         BZ    XBJCLXIT             RETURN WITH CC=0           @OZ40028 U4380000
         TM    SJBFLG1,SJB1XBMC    IF NOT AWAITING 1ST XBM JOB,         U4380500
         BO    XNEXTSJB             BR TO TEST NEXT SJB                 U4381000
         CL    R1,SJBJQOFF         IF NOT AWAITING CURRENT JOB,@OZ40028 U4381500
         BNE   XNEXTSJB             BR TO TEST NEXT SJB                 U4382000
         SPACE 1                                               @OZ40028 U4382500
XBJCLXIT AL    R1,$JOBQPTR         RESTORE JQE ADDRESS         @OZ40028 U4383000
         LTR   WE,WE               SET CONDITION CODE          @OZ40028 U4383100
         BR    R15                  AND RETURN                 @OZ40028 U4383200
         SPACE 1                                                        U4383500
         DROP  WE                  KILL LOCAL SJB ADDRESSABILITY        U4384000
         SPACE 1                                                     R4 U4384100
         CNOP  0,8                                                      U4386500
XDUPLJOB LR    WE,LINK             SAVE RETURN ADDRESS                  U4387000
         ST    R1,XEQWORK           AND JQE ADDRESS                 R41 U4387500
         OI    QUEFLAGS(R1),QUEHOLD2  INDICATE JOB HELD                 U4388000
         IC    R0,QUETYPE(R1)          AND RE-QUEUE JOB                 U4388500
        $QPUT  (R1),(R0)                FOR EXECUTION                   U4389000
         EJECT                                                       R4 U4389100
*********************************************************************** U4389200
*                                                                     * U4390000
*        T E S T   T H I S   S Y S T E M   F O R   D U P L I C A T E  * U4390500
*                                                                     * U4391000
*********************************************************************** U4391100
         SPACE 1                                                        U4391500
         IC    R0,JQEFLAGS         IF JOB                               U4392000
         N     R0,=A(QUEBUSY)       NOT EXECUTING                       U4392500
         CLM   R0,1,$SIDBUSY         ON CURRENT SYSTEM,                 U4393000
         BNER  WE                     RETURN WITH NON-ZERO CC           U4393500
         L     WD,XEQWORK              ELSE PREPARE                 R41 U4394000
         L     R1,$PITABLE              TO SCAN PITS                    U4394500
         SPACE 1                                                        U4395000
         USING PITDSECT,R1         PROVIDE PIT ADDRESSABILITY           U4395500
         SPACE 1                                                        U4396000
XNEXTPIT CLR   R1,WF               IF CURRENT PIT,                      U4397000
         BE    XCONTPIT             BR TO TEST FOR ANOTHER PIT          U4397500
         TM    PITSTAT,PITBUSY     IF PIT NOT ACTIVE,                   U4398000
         BZ    XCONTPIT             BR TO TEST FOR ANOTHER PIT          U4398500
         L     R15,PITSJB                  IF DUPLICATE        @OZ40028 U4399000
         L     R15,SJBJQOFF-SJBDSECT(,R15)  JOB EXECUTING      @OZ40028 U4399500
         AL    R15,$JOBQPTR                  ON THIS           @OZ40028 U4400000
         CLC   JQEJNAME,QUEJNAME(R15)         SYSTEM,          @OZ40028 U4400500
         BE    XDUPTMSG                        BR TO ISSUE MSG @OZ40028 U4400600
         SPACE 1                                                        U4401000
XCONTPIT L     R1,PITNEXT          POINT TO NEXT PIT                 R4 U4401500
         LTR   R1,R1               TEST FOR VALID PIT ADDRESS        R4 U4402000
         BNZ   XNEXTPIT            BR IF SO                          R4 U4402500
         SLR   R1,R1                ELSE SET NON-ZERO CC             R4 U4403000
         BR    WE                    AND RETURN                      R4 U4403100
         SPACE 1                                                        U4403500
XDUPTMSG TM    PITSTAT,PITDUPL     IF MESSAGE ALREADY ISSUED,        R4 U4404000
         BOR   WE                   RETURN WITH NON-ZERO CC             U4404500
         OI    PITSTAT,PITDUPL       ELSE INDICATE DUPLICATE         R4 U4405000
         SPACE 1                                                        U4405500
XDUPLWTO MVC   XMESSAGE(L'XDUPMSG),XDUPMSG  CONSTRUCT MESSAGE       R41 U4406000
         MVC   XMESSAGE+2(8),JQEJNAME        IN WORK AREA               U4407000
        $WTO   XMESSAGE,L'XDUPMSG,WAIT=NO,ROUTE=$LOG+$MAIN,            CU4407500
               CLASS=$NORMAL,PRI=$ST,JOB=NO                             U4408000
         SLR   R15,R15             SET NON-ZERO CC                      U4408500
         BR    WE                   AND RETURN                          U4409000
         SPACE 1                                                        U4409500
         DROP  R1,WD               KILL PIT, JQE ADDRESSABILITY         U4410000
         EJECT                                                          U4424000
*********************************************************************** U4424100
*                                                                     * U4426000
*        P R O C E S S   P E N D I N G - B Y - N U M B E R   Q U E U E* U4428000
*                                                                     * U4430000
*********************************************************************** U4430100
         SPACE 1                                                        U4432000
         USING JQEDSECT,R1         PROVIDE JQE ADDRESSABILITY           U4433000
         SPACE 1                                                        U4433500
         CNOP  0,8                                                      U4434000
XPBYNUM  CLI   SJBXQFN1+1,SSOBRQST TEST FOR 'REQUEST JOB ID'            U4440000
         BE    XREQID              BR IF SO                             U4442000
         PACK  PCER1(8),SJBJOBID+3(5)  CONVERT JOB NUMBER               U4444000
         CVB   R1,PCER1                 TO BINARY                       U4446000
         AL    R1,=F'10000'        ASSUME STARTED TASK                  U4448000
         CLI   SJBJOBID,C'S'       TEST ASSUMPTION                      U4450000
         BE    *+8                 BR IF VALID                          U4452000
         AL    R1,=F'10000'         ELSE ADJUST FOR LOGON               U4454000
        $QLOC  (R1),XNJOBID        TRY TO LOCATE THE JOB                U4456000
         CLI   JQETYPE,$INPUT      TEST QUEUE TYPE                      U4458000
         BE    XIDNEXT             BR IF JOB STILL ON READER            U4460000
         TM    JQETYPE,$XEQ        RE-TEST QUEUE TYPE                   U4462000
         BZ    XNJOBID             BR IF JOB BYPASSED EXECUTION         U4464000
         TM    JQETYPE,QUECLASS-$XEQ  ELSE RE-TEST QUEUE TYPE           U4466000
         BNZ   XTESTJOB            BR IF NOT QUEUED FOR CONVERSION      U4468000
         SPACE 1                                                        U4470000
*********************************************************************** U4470100
*                                                                     * U4472000
*        J O B   N O T   R E A D Y   - -   G E T   N E X T   S J B    * U4474000
*                                                                     * U4476000
*********************************************************************** U4476100
         SPACE 1                                                        U4478000
XIDNEXT  L     WA,SJBXQCHN         GET ADDRESS OF NEXT SJB              U4480000
         LTR   WA,WA               TEST FOR END OF SJB CHAIN            U4482000
         BNZ   XPBYNUM             BR IF NO                             U4484000
         B     XJQNEXT              ELSE TRY NEXT SJB QUEUE             U4486000
         SPACE 1                                                        U4488000
         CNOP  0,8                                                      U4490000
XTESTJOB TM    JQEFLAGS,QUEBUSY    IF JOB ALREADY SELECTED,             U4492000
         BNZ   XNJOBID              TREAT AS INVALID QUEUE LOCATION     U4494000
         OC    JQEFLAGS,$SIDBUSY     ELSE SHOW JOB BEING PROCESSED      U4496000
        $QCKPT (R1)                   AND FORCE CHECKPOINT OF JQE       U4498000
         ST    R1,PCEJQE           STORE JQE ADDRESS           @OZ32566 U4499000
         EJECT                                                          U4500000
*********************************************************************** U4500100
*                                                                     * U4502000
*        H A V E   T S U   O R   S T C   J O B                        * U4504000
*                                                                     * U4506000
*********************************************************************** U4506100
         SPACE 1                                                        U4508000
XJOBID  $DEQSJB $SVJPNUM,X04       DE-QUEUE THE SJB                     U4514000
         TM    SJBFLG2,SJB2EOM     TEST FOR END-OF-MEMORY               U4516000
         BO    XIDJBEOM            BR IF SO                             U4518000
         LA    WD,$SVJXNUM         GET JOB-IN-XEQ-BY-NUM QUEUE HDR      U4520000
         TM    JQEFLAG2,QUEINIT    IF INITIATOR OR SYSTEM LOG,          U4522000
         BNO   XACTIVE             TREAT AS USER JOB                R41 U4524000
         CLI   SJBXQFN1+1,SSOBRQST  REQUEST-JOB-ID...               R41 U4525000
         BE    XIDJOB              BR IF YES (NOT AN INIT)          R41 U4526000
         OI    SJBFLG2,SJB2INIT     ELSE SET INITIATOR FLAG         R41 U4527000
         B     XIDJOB              BYPASS $ACTIVE                   R41 U4527500
         SPACE 1                                                        U4528000
XIDJBEOM SLR   WB,WB               SHOW SJB                             U4530000
         ST    WB,SJBQUEUE          OFF ALL QUEUES                      U4532000
         LR    WD,R1               SAVE JQE ADDRESS                     U4534000
        $XMPOST SJBECBP            XM POST THE WAITING TASK             U4536000
         BAL   LINK,XSJBUNLK       REMOVE THE SJB QUEUES LOCK           U4538000
         BAL   LINK,XQSUSE         REQUEST ACCESS TO CHECKPOINT DATA    U4540000
         LR    R1,WD               RESTORE JQE ADDRESS                  U4542000
         MVI   JQEPRIO,X'FF'       GIVE JOB EXPRESS PRIORITY            U4544000
        $QMOD  (R1),$OUTPUT         AND QUEUE THE JOB FOR OUTPUT        U4546000
         B     XLOOKAGN            THEN LOOK FOR MORE WORK TO DO        U4548000
         SPACE 1                                                        U4550000
*********************************************************************** U4550100
*                                                                     * U4552000
*        L O S T   A   T S U   O R   S T C   J O B                    * U4554000
*                                                                     * U4556000
*********************************************************************** U4556100
         SPACE 1                                                        U4558000
XNJOBID $DEQSJB $SVJPNUM,X04       DE-QUEUE THE SJB                     U4560000
         TM    SJBFLG2,SJB2EOM     TEST FOR END-OF-MEMORY               U4562000
         BO    XPOSTSJB            BR IF SO                             U4564000
         OI    SJBFLG2,SJB2JNFD     ELSE INDICATE JOB NOT FOUND         U4566000
         B     XPOSTSJB              AND BR TO POST WAITING TASK        U4568000
         EJECT                                                          U4570000
*********************************************************************** U4570100
*                                                                     * U4572000
*        R E Q U E S T   J O B   I D   S U P P O R T                  * U4574000
*                                                                     * U4576000
*********************************************************************** U4576100
         SPACE 1                                                        U4578000
         USING JCTDSECT,WB         PROVIDE JCT ADDRESSABILITY       R41 U4580000
         SPACE 1                                                        U4582000
XREQID   STM   WA,BASE3,RMESSAGE+4 SAVE OUR REGISTERS          @OZ20655 U4586000
         ST    BASE2,RMESSAGE+32   SAVE BASE REGISTER          @OZ20655 U4587000
         LA    R4,=CL10'//SYSLOG'  POINT TO FAKE JOB CARD            R4 U4588000
         MVC   PCEDCT,$XEQDCT      PROVIDE 'REQUEST ID' DCT    @OZ32566 U4588100
         MVI   RPRIORTY,X'FF'      SET MAX PRIORITY FOR OUTPUT          U4591000
         L     WB,=V(HASPRJCS)     LOAD BASE                        R41 U4592000
         L     BASE2,=V(HASPRDR)    ADDRESSES FOR                    R4 U4593000
         LA    WF,2048(,BASE2)       JOB CREATE                      R4 U4594000
         LA    WF,2048(,WF)           ROUTINE                        R4 U4595000
         LR    BASE3,WB            RELOAD HASPRJCS BASE             R41 U4595100
         SLR   JCT,JCT             INDICATE NO CURRENT JOB              U4596000
         BALR  LINK,BASE3          CREATE NEW 'STC' JOB                 U4598000
         ST    JCT,RMESSAGE+8      SAVE JCT ADDRESS                 R41 U4600000
         LM    WA,BASE3,RMESSAGE+4 RESTORE OUR REGISTERS       @OZ20655 U4602000
         L     BASE2,RMESSAGE+32   RESTORE BASE REGISTER       @OZ20655 U4602400
         L     JCT,$SSVT           RESTORE SSVT ADDRESS        @OZ20655 U4602600
         XC    XQOFFSET,XQOFFSET   RESET SJB QUEUE TABLE OFFSET     R41 U4603000
         MVC   PCEDCT,$ZEROS       CLEAR THE DCT               @OZ32566 U4603500
         XC    JCTCNVRC,JCTCNVRC   CLEAR CONVERTER RETURN CODE          U4604000
         XC    JCTRDRON(8),JCTRDRON  CLEAR 'RDR' TIME/DATE ON           U4606000
         OI    JCTJOBFL,JCTSTCJB+JCTNOJNL  INDICATE STC, NO JOURNAL     U4608000
         MVI   JCTSMFLG,JCTNOUJP+JCTNOT26+JCTNOTY6  SET NO SMF          U4610000
         L     IOT,RDRIOT          GET ADDRESS OF INPUT IOT             U4618000
         ST    IOT,PCEBUFAD        SET BUFFER ADDRESS FOR $EXCP         U4620000
         L     R1,$IOTPDDB                            SHOW JOB       R4 U4621000
         ALR   R1,IOT                                  HAS NO        R4 U4622000
         MVI   PDBFLAG1-PDBDSECT+IOTPDBOJ(R1),PDB1NULL  JCL          R4 U4623000
         MVI   PCEDEVTP,PCEDAWR    SHOW WRITE OPERATION        @OZ32329 U4623500
         L     R0,IOTTRACK-IOTDSECT(,IOT)  GET IOT TRACK ADDRESS    R41 U4624000
         BAL   WE,XIO               AND WRITE THE OUTPUT IOT            U4626000
        $FREEBUF (IOT)             FREE THE IOT BUFFER                  U4628000
         ST    WB,PCEBUFAD         SET BUFFER ADDRESS FOR $EXCP     R41 U4630000
         L     R1,PCEJQE           GET ADDRESS OF JQE          @OZ32566 U4632000
         L     R0,JQETRAK          GET JCT TRACK ADDRESS                U4636000
         BAL   WE,XIO              AND WRITE THE JCT                    U4638000
         L     R1,PCEJQE           GET ADDRESS OF JQE          @OZ32566 U4642000
        $QPUT  (R1),CATSTCCL-(255-QUECLASS)  RE-QUEUE FOR EXECUTION     U4644000
         MVC   JQEPRTRT(4),JCTPROUT  SET DEFAULT ROUTE CODES            U4645000
         OC    JQEFLAGS,$SIDBUSY   SHOW JOB BEING PROCESSED             U4646000
         OI    JQEFLAG2,QUEINIT     AND TREAT AS OS/VS2 INITIATOR       U4647000
        $FREEBUF (WB)              FREE THE JCT BUFFER              R41 U4648000
         L     R1,PCEJQE           GET ADDRESS OF JQE          @OZ32566 U4649000
         B     XJOBID              THEN BR TO POST WAITING TASK         U4650000
         SPACE 1                                                        U4652000
         DROP  WB                  KILL JCT ADDRESSABILITY          R41 U4654000
         EJECT                                                          U4656000
*********************************************************************** U4656100
*                                                                     * U4658000
*        P R O C E S S   P E N D I N G - T E R M I N A T E   Q U E    * U4658100
*                                                                     * U4662000
*********************************************************************** U4662100
         SPACE 1                                                        U4664000
         CNOP  0,8                                                      U4666000
XPTERM   ICM   R0,15,$SVSPIOT      IF 'RECENT' SPIN/HOLD REQUEST(S),    U4667000
         BNZ   XQSEARCH             GO PROCESS BEFORE TERMINATION       U4668000
         TM    SJBFLG2,SJB2EOM     TEST FOR END-OF-MEMORY               U4669000
         BZ    XTRMIN8             BR IF NO                             U4670000
         L     JCT,SJBJQOFF        GET JQE ADDRESS INTO        @OZ40028 U4672000
         AL    JCT,$JOBQPTR         JCT FOR $WTO               @OZ40028 U4673000
        $WTO   XEOMSG1,L'XEOMSG1,WAIT=YES,ROUTE=$LOG+$MAIN,         R41CU4674000
               CLASS=$ALWAYS,PRI=$HI,JOB=YES                        R41 U4676000
         L     JCT,$SSVT           RESTORE SSVT ADDRESS             R41 U4678000
         B     XTRMIN8             THEN BR TO COMPLETE JOB TERMINATION  U4682000
         SPACE 1                                                        U4684000
*********************************************************************** U4684100
*                                                                     * U4686000
*        L O S T   A N   S J B                                        * U4688000
*                                                                     * U4690000
*********************************************************************** U4690100
         SPACE 1                                                        U4692000
X04     $ERROR                     SHOULD NOT HAVE LOST THIS SJB        U4694000
         SPACE 1                                                        U4696000
         CNOP  0,8                                                      U4698000
XTRMIN8 $DEQSJB $SVJTERM,X04       DE-QUEUE THE SJB                     U4700000
         SLR   WF,WF               INDICATE NO PIT                      U4702000
         ST    WF,SJBQUEUE         INDICATE SJB DE-QUEUED               U4704000
         TM    SJBFLG1,SJB1SJID    TEST FOR LOGON OR STARTED TASK       U4706000
         BO    XQJOB               BR IF SO                             U4708000
         L     WF,SJBPIT           GET PIT ADDRESS FROM SJB             U4710000
         SPACE 1                                                        U4712000
         USING PITDSECT,WF         PROVIDE PIT ADDRESSABILITY           U4714000
         SPACE 1                                                        U4716000
         TM    SJBFLG2,SJB2PNIT    TEST FOR TERMINATING INITIATOR       U4718000
         BZ    XNPINIT             BR IF NO                             U4720000
         EJECT                                                          U4722000
*********************************************************************** U4722100
*                                                                     * U4724000
*        I N I T I A T O R   D R A I N I N G   - -   C L E A N   P I T* U4726000
*                                                                     * U4728000
*********************************************************************** U4728100
         SPACE 1                                                        U4730000
         OI    PITSTAT,PITHOLD1    INDICATE PIT IS                      U4732000
         NI    PITSTAT,255-PITBUSY-PITINIT-PITIDLE  DRAINED             U4734000
         NI    PITFLAGS,255-PITXBM-PITXBJCL  CLEAR XBM FLAGS            U4741000
         TM    PITFLAGS,PITXBJCL   WAS PIT AWAITING JCL...              U4742000
         BZ    XTESTXBM            BR IF NO TO TEST FOR IDLE MONITOR    U4743000
         MVC   XEQWORK,SJBJOBNM    SAVE JOB NAME                    R41 U4744000
        $XMPOST SJBECBP            XM POST THE WAITING TASK             U4746000
         BAL   LINK,XSJBUNLK       REMOVE THE SJB QUEUES LOCK           U4748000
         LA    WD,XEQWORK-QUEJNAME POINT TO PSEUDO JQE              R41 U4750000
        $ACTIVE                      AND BUMP THE ACTIVE COUNT          U4751000
         B     XJOBRLSE            THEN BR TO RELEASE ANY DUPLICATE JOB U4752000
         EJECT                                                          U4753000
*********************************************************************** U4753100
*                                                                     * U4756200
*        N O R M A L   J O B   T E R M I N A T I O N                  * U4756400
*                                                                     * U4756600
*********************************************************************** U4756700
         SPACE 1                                                        U4756800
         CNOP  0,8                                                      U4758000
XNPINIT  NI    PITSTAT,255-PITBUSY  SHOW PIT AVAILABLE                  U4760000
         TM    SJBFLG1,SJB1XBM     TEST FOR EXECUTION BATCH JOB         U4766000
         BO    XREQSJB             BR IF YES                            U4768000
         NI    PITFLAGS,255-PITXBM-PITXBJCL  CLEAR XBM FLAGS            U4770000
         SPACE 1                                                        U4772000
XTESTXBM TM    SJBFLG1,SJB1XBWT    TEST FOR IDLE BATCH MONITOR          U4776000
         BZ    XQJOB               BR IF NO                             U4778000
         NI    PITSTAT,255-PITIDLE  ELSE RESET PIT 'IDLE' MSG SWITCH    U4780000
         TM    SJBFLG1,SJB1XBMJ    DID NORMAL JOB CAUSE TERMINATION...  U4782000
         BZ    XPOSTSJB            BR IF NO TO XM POST THE WAITING TASK U4784000
         NI    SJBFLG1,255-SJB1XBMJ  ELSE RESET INDICATOR               U4786000
         L     WD,SJBJQOFF         GET JQE OFFSET              @OZ40028 U4788000
         AL    WD,$JOBQPTR         CONVERT OFFSET TO ADDRESS   @OZ40028 U4789000
         MVC   SJBJQOFF,$ZEROS     CLEAR JQE OFFSET IN SJB     @OZ40028 U4790000
        $XMPOST SJBECBP            XM POST THE WAITING TASK             U4792000
         BAL   LINK,XSJBUNLK       REMOVE SJB QUEUES LOCK               U4794000
         LR    R1,WD               RE-LOAD JQE ADDRESS                  U4798000
         IC    R0,JQETYPE          RE-QUEUE JOB                         U4800000
        $QPUT  (R1),(R0)            FOR EXECUTION                       U4802000
         B     XJOBRLSE            THEN BR TO RELEASE ANY DUPLICATE JOB U4804000
         SPACE 1                                                        U4806000
         CNOP  0,8                                                      U4808000
XREQSJB  LA    WD,$SVJPXBM         RE-QUEUE THE SJB                     U4810000
         BAL   LINK,XQUESJB         ON PENDING-BATCHING QUEUE           U4812000
         EJECT                                                          U4820000
         USING JQEDSECT,WD         PROVIDE JQE ADDRESSABILITY           U4826000
         SPACE 1                                                        U4828000
XQJOB    L     WD,SJBJQOFF         GET JQE OFFSET              @OZ40028 U4830000
         AL    WD,$JOBQPTR         CONVERT OFFSET TO ADDRESS   @OZ40028 U4832000
         LA    WB,$OUTPUT          ASSUME JOB IS NOT TO BE RE-RUN       U4838000
         TM    SJBFLG1,SJB1EJOB    TEST ASSUMPTION                      U4840000
         BZ    XCLRSJB             BR IF VALID                          U4842000
         SPACE 1                                                        U4844000
XREXEQ   IC    WB,JQETYPE          PICK UP LOGICAL HASP QUEUE           U4846000
         SPACE 1                                                        U4848000
XCLRSJB  MVC   SJBJQOFF,$ZEROS     CLEAR JQE OFFSET IN SJB     @OZ40028 U4850000
         TM    $RUNOPTS,$TIMEOPT   TEST TIME EXCESSION OPTION        R4 U4852000
         BZ    XJOBQ               BR IF NOT SET                     R4 U4854000
         TM    SJBFLG1,SJB1SJID    IF LOGON OR STARTED TASK,            U4856000
         BO    XJOBQ                BR TO AVOID STIMER CANCEL           U4858000
        $TTIMER SJBSTQE,CANCEL     CANCEL REAL-TIME CLOCK               U4860000
         MVI   SJBSTQE+IPOST,0     CLEAR TIMER POST BIT                 U4862000
         SPACE 1                                                        U4866000
XJOBQ    IC    WE,SJBPRIO          SAVE OUTPUT PRIORITY                 U4868000
         ICM   WE,2,SJBXQFN1+1     SAVE REQUEST TYPE                R41 U4870000
         TM    SJBFLG2,SJB2PNIT    TEST FOR TERMINATING INITIATOR       U4874000
         BO    *+12                BR IF SO                             U4876000
         TM    SJBFLG1,SJB1XBM     TEST FOR EXECUTION BATCH JOB         U4878000
         BO    XPOSTED             BR IF SO                             U4880000
        $XMPOST SJBECBP            XM POST THE WAITING TASK             U4886000
         SPACE 1                                                        U4888000
XPOSTED  BAL   LINK,XSJBUNLK       REMOVE THE SJB QUEUES LOCK           U4890000
         BAL   LINK,XQSUSE         REQUEST ACCESS TO CHECKPOINT DATA    U4892000
*              THIS LINE DELETED BY APAR NUMBER                @OZ26724 U4894000
         CL    WB,=A($OUTPUT)      IS JOB TO BE RE-RUN...               U4896000
         BE    XQMOD               BR IF NO                             U4897000
         CLM   WE,2,=AL1(SSOBRENQ) WAS THIS RE-ENQUEUE BY MVS...    R41 U4897100
         BNE   XSYSOK              BR IF NO (DON'T RESTRICT SYSTEM) R41 U4897200
         NI    JQEFLAG2,255-QUESYSAF ELSE ENSURE RE-EXECUTION           U4898000
         OC    JQEFLAG2,$SIDAFF       ON CURRENT SYSTEM              R4 U4899000
         SPACE 1                                                    R41 U4900000
XSYSOK   TM    JQEFLAGS,QUEPURGE   WAS JOB PURGE REQUESTED...       R41 U4901000
         BO    XQMOD               BR IF YES ($QMOD WILL KILL IT)   R41 U4902000
         NI    JQEFLAGS,255-QUEOPCAN  ELSE INSURE RE-EXECUTION          U4904000
         CLM   WE,1,JQEPRIO        SAME PRIORITY               @OZ26724 U4904100
         BE    XQPUT               GO DO $QPUT                 @OZ26724 U4904125
         B     XQMOD               DIFFERENT PRIORITY GO $QMOD @OZ26724 U4904175
         EJECT                                                          U4904300
*********************************************************************** U4904400
*                                                                     * U4904600
*        Q U E U E   J O B   F O R   N E X T   P H A S E              * U4904900
*                                                                     * U4905200
*********************************************************************** U4905300
         SPACE 1                                                        U4905500
XQPUT   $QPUT  (WD),(WB)           RE-QUEUE THE JOB            @OZ26724 U4905600
         B     XQMOD1              BYPASS $QMOD                @OZ26724 U4905700
XQMOD    STC   WE,JQEPRIO          PUT IN NEW PRIORITY         @OZ26724 U4906000
         $QMOD (WD),(WB)           REQUEUE THE JOB             @OZ26724 U4907000
XQMOD1   LTR   WF,WF               TEST FOR PIT                @OZ26724 U4908000
         BNZ   XTESTPIT            BR IF SO                             U4909000
         TM    JQEFLAG2,QUEINIT    IF NOT INITIATOR OR SYSTEM LOG,      U4910000
         BZ    XDONE                BR TO INDICATE JOB INACTIVE         U4911000
         NI    JQEFLAG2,255-QUEINIT  ELSE RESET INIT BIT                U4911500
         B     XTSTIND                AND BR TO TEST OPERATING MODE     U4912000
         SPACE 1                                                        U4912100
XDONE   $DORMANT                   INDICATE PROCESSOR INACTIVE          U4912200
         SPACE 1                                                        U4912300
XTSTIND  TM    $STATUS,$INDMODE    IF NOT IN INDEPENDENT MODE,          U4912400
         BZ    XLOOKAGN             BR TO LOOK FOR MORE WORK TO DO      U4912500
         OI    JQEFLAG2,QUEINDAF     ELSE ALLOW IND MODE SELECTION      U4912600
         B     XLOOKAGN            THEN LOOK FOR MORE WORK TO DO        U4912700
         EJECT                                                          U4912800
         CNOP  0,8                                                      U4913000
XTESTPIT TM    PITSTAT,PITHOLD1+PITHOLDA+PITHALT1+PITHALTA  TEST PIT    U4914000
         BZ    XJOBRLSE            BR IF NOT DRAINED OR HALTED          U4916000
         LA    R1,XDRNMSG                ISSUE                          U4920000
         TM    PITSTAT,PITHOLD1+PITHOLDA  APPROPRIATE                   U4922000
         BNZ   *+8                         MESSAGE                      U4924000
         LA    R1,XHALTMSG                  TO                          U4926000
         BAL   WE,XPITMSG                    OPERATOR                   U4928000
         BAL   LINK,XQSUSE         REQUEST ACCESS TO CHECKPOINT DATA    U4929000
         SPACE 1                                                        U4930000
*********************************************************************** U4930100
*                                                                     * U4932000
*        R E L E A S E   A N Y   D U P L I C A T E   J O B S          * U4934000
*                                                                     * U4936000
*********************************************************************** U4936100
         SPACE 1                                                        U4938000
XJOBRLSE NI    PITSTAT,255-PITDUPL RESET DUPLICATION INDICATOR       R4 U4940000
         LA    WB,72                 PREPARE                            U4942000
         L     R1,=V($QINDEX)         TO SCAN                           U4944000
         LA    WE,C'A'-(255-QUECLASS)  EXECUTION                        U4946000
         IC    WE,0(R1,WE)              QUEUES                          U4948000
         SPACE 1                                                        U4949000
         DROP  WD                  KILL CURRENT JQE ADDRESSABILITY      U4950000
         SPACE 1                                                        U4951000
         CNOP  0,8                                                      U4952000
XQNXT    LA    R1,0(WB,WE)                POINT TO START                U4953000
         LA    R1,$JQHEADS-4-QUECHAIN(R1)  OF NEXT QUEUE                U4954000
         SPACE 1                                                        U4955000
XNEXTJQE LH    R1,JQECHAIN         GET OFFSET                           U4956000
         N     R1,=X'0000FFFF'      OF NEXT JQE                         U4957000
         BZ    XNXTQ               BR IF END OF QUEUE                   U4958000
         SLL   R1,2                 ELSE CONVERT OFFSET                 U4959000
         AL    R1,$JOBQPTR           TO ABSOLUTE ADDRESS                U4960000
         TM    JQEFLAGS,QUEHOLD2   TEST FOR DUPLICATE NAME FLAG         U4962000
         BZ    XNEXTJQE            BR IF NO                             U4964000
         CLC   JQEJNAME,QUEJNAME(WD)  TEST FOR SAME AS CURRENT JOB      U4966000
         BNE   XNEXTJQE            BR IF NO                             U4968000
         NI    JQEFLAGS,255-QUEHOLD2  ELSE RESET HOLD BIT               U4970000
        $QCKPT (R1)                    AND FORCE CHECKPOINT OF JQE      U4971000
         B     XNEXTJQE            THEN BR TO TEST NEXT JQE             U4972000
         SPACE 1                                                        U4974000
         CNOP  0,8                                                   R4 U4975000
XNXTQ    BCTR  WB,0                IF ANOTHER EXECUTION QUEUE,          U4976000
         BCT   WB,XQNXT             BR TO SCAN IT                       U4978000
         SPACE 1                                                        U4986000
        $DORMANT                   INDICATE PROCESSOR INACTIVE          U4988000
         B     XLOOKAGN            THEN LOOK FOR MORE WORK TO DO        U4990000
         EJECT                                                          U4992000
*********************************************************************** U4992100
*                                                                     * U4994000
*        P R O C E S S   P E N D I N G - R E Q U E U E   Q U E U E    * U4996000
*                                                                     * U4998000
*********************************************************************** U4998100
         SPACE 1                                                        U4998500
         USING JQEDSECT,WD         RESTORE OLD JQE ADDRESSABILITY       U4999000
         SPACE 1                                                        U5000000
         CNOP  0,8                                                      U5002000
XPRENQ   TM    SJBFLG2,SJB2EOM     TEST FOR END-OF-MEMORY               U5004000
         BZ    XREENQ              BR IF NO                             U5006000
         L     JCT,SJBJQOFF        GET JQE ADDRESS INTO        @OZ40028 U5006100
         AL    JCT,$JOBQPTR         JCT FOR $WTO               @OZ40028 U5006150
        $WTO   XEOMSG2,L'XEOMSG2,WAIT=YES,ROUTE=$LOG+$MAIN,         R41CU5006200
               CLASS=$ALWAYS,PRI=$HI,JOB=YES                        R41 U5006300
         L     JCT,$SSVT           RESTORE SSVT ADDRESS             R41 U5006400
        $GETBUF WAIT=YES           GET BUFFER FOR JCT                R4 U5007000
         ST    R1,PCEBUFAD         SET BUFFER ADDRESS FOR $EXCP      R4 U5007200
         LR    WB,R1               RELOAD BUFFER ADDRESS            R41 U5007300
         MVI   PCEDEVTP,PCEDARD    INDICATE READ OPERATION           R4 U5007400
         L     R0,SJBJCTRK         GET JCT TRACK ADDRESS             R4 U5007500
         BAL   WE,XIO              READ IN THE JCT                   R4 U5007600
         MVI   PCEDEVTP,PCEDAWR    RESET FOR WRITE OPERATIONS        R4 U5007700
         BNO   XFREEBF             BR IF I/O ERROR                   R4 U5007800
         MVI   JCTJSFLG-JCTDSECT(WB),SSJSWARM  FORCE JOB WARM START R41 U5007900
         L     R0,SJBJCTRK         RELOAD JCT TRACK ADDRESS          R4 U5008000
         BAL   WE,XIO               AND WRITE THE JCT                R4 U5008100
         SPACE 1                                                     R4 U5008200
XFREEBF $FREEBUF (WB)              FREE THE JCT BUFFER              R41 U5008300
         EJECT                                                       R4 U5008400
XREENQ  $DEQSJB $SVJRENQ,X04       DE-QUEUE THE SJB                     U5022000
         SLR   R0,R0               SHOW SJB                             U5024000
         ST    R0,SJBQUEUE          DE-QUEUED                           U5026000
         L     WD,SJBJQOFF         GET JQE OFFSET              @OZ40028 U5028000
         AL    WD,$JOBQPTR         CONVERT OFFSET TO ADDRESS   @OZ40028 U5029000
         L     WF,SJBPIT           GET PIT ADDRESS FROM SJB             U5030000
         NI    PITSTAT,255-PITBUSY  AND SHOW PIT AVAILABLE              U5034000
         MVC   SJBPRIO,JQEPRIO     RESET SELECTION PRIORITY             U5036000
         TM    SJBFLG2,SJB2HOLD    TEST HOLD FLAG                    R4 U5036100
         BZ    XREXEQ              BR IF NOT SET                        U5044000
         BAL   LINK,XSJBUNLK        ELSE REMOVE SJB QUEUES LOCK         U5045000
         BAL   LINK,XQSUSE         REQUEST ACCESS TO CHECKPOINT DATA    U5045500
         OI    JQEFLAGS,QUEHOLD1   CAUSE JOB TO BE HELD                 U5046000
        $QCKPT (WD)                FORCE CHECKPOINT OF JQE              U5047000
         BAL   LINK,XSJBLOCK       THEN RESTORE SJB QUEUES LOCK         U5047500
         B     XREXEQ               AND BR TO RE-QUEUE THE JOB          U5048000
         SPACE 1                                                        U5050000
         DROP  R1,WD,WF            KILL JQE, PIT ADDRESSABILITY         U5052000
         TITLE 'HASP EXECUTION PROCESSOR -- SPIN/HOLD DATA SET SUPPORT' U5054000
*********************************************************************** U5054100
*                                                                     * U5056000
*        P R O C E S S   S P I N / H O L D   R E Q U E S T            * U5058000
*                                                                     * U5060000
*********************************************************************** U5060100
         SPACE 1                                                        U5062000
         USING JQEDSECT,R1         PROVIDE JQE ADDRESSABILITY           U5064000
         USING IOTDSECT,IOT        PROVIDE IOT ADDRESSABILITY           U5068000
         USING PDBDSECT,PDDB       PROVIDE PDDB ADDRESSABILITY          U5070000
         SPACE 1                                                        U5072000
*********************************************************************** U5072100
*                                                                     * U5074000
*        F I F O - O R D E R   S P I N / H O L D   R E Q U E S T S    * U5075000
*                                                                     * U5076000
*********************************************************************** U5076100
         SPACE 1                                                        U5077000
         CNOP  0,8                                                      U5078000
XSPNHLD  LR    R0,IOT              FIFO ORDER                           U5079000
         LR    IOT,R1               SPIN/HOLD                           U5080000
         ICM   R1,15,IOTIOT          IOTS                               U5081000
         ST    R0,IOTIOT              ON                                U5082000
         BNZ   XSPNHLD                 SSVT QUEUE                       U5083000
         SPACE 1                                                        U5084000
         ST    IOT,$SVFIFOQ        SAVE ADDRESS OF FIFO QUEUE           U5085000
         BAL   LINK,XQSUSE         REQUEST ACCESS TO CHECKPOINT DATA    U5086000
         SPACE 1                                                        U5087000
*********************************************************************** U5087100
*                                                                     * U5088000
*        P R O C E S S   N E X T   S P I N / H O L D   R E Q U E S T  * U5089000
*                                                                     * U5090000
*********************************************************************** U5090100
         SPACE 1                                                        U5091000
XSPRQST  L     R1,IOTJQOFF         GET JQE ADDRESS                      U5092000
         AL    R1,$JOBQPTR          FROM IOT                            U5093000
         TM    JQEFLAGS,QUEPURGE   IF JOB IS BEING CANCELLED,           U5094000
         BO    XSPURGE              IGNORE SPIN/HOLD REQUEST        R41 U5095000
         L     PDDB,$IOTPDDB       POINT TO                          R4 U5096000
         ALR   PDDB,IOT             SPIN/HOLD PDDB                   R4 U5096500
         TM    PDBFLAG1,PDB1HOLD   IF HOLD REQUEST,                     U5097000
         BO    XSPHOLD              BR TO HOLD SUPPORT                  U5098000
         TM    PDBFLAG1,PDB1NSOT   IF NOT PRINTABLE,           @OZ39639 U5099000
         BO    XSPURGE              IGNORE SPIN REQUEST        @OZ39639 U5100000
         EJECT                                                          U5101000
*********************************************************************** U5101100
*                                                                     * U5102000
*        P R O C E S S   J E S N E W S   D A T A   S E T       @OZ39639 U5103000
*                                                                     * U5104000
*********************************************************************** U5104100
         SPACE 1                                                        U5105000
         USING JOEDSECT,WD         PROVIDE JOE ADDRESSABILITY           U5106000
         SPACE 1                                               @OZ39639 U5107000
XSPIN    TM    IOTFLAG1,IOT1NEWS   JESNEWS IOT...              @OZ39639 U5107100
         BZ    XSPINJOE            BR IF NO                    @OZ39639 U5107200
         MVC   XMESSAGE(L'XNEWSMSG),XNEWSMSG ASSUME 'REPLACED' @OZ39639 U5107300
         TM    PDBFLAG1,PDB1NULL   EMPTY DATA SET...           @OZ39639 U5107400
         BZ    XSPINEWS            BR IF NO TO REPLACE JESNEWS @OZ39639 U5107500
         MVC   $NEWSIOT(L'$NEWSIOT+L'$NEWSTTR),$ZEROS  ELSE,   @OZ39639 U5107600
         MVC   XNEWSMRD+XMESSAGE,=CL8'DELETED'  DELETE JESNEWS @OZ39639 U5107700
         B     XSNEWSW             BR TO TELL OPERATOR         @OZ39639 U5107800
         SPACE 1                                               @OZ39639 U5107900
XSPINEWS NI    IOTFLAG1,FF-IOT1ALOC-IOT1NEWS  DISOWN NEWS      @OZ39639 U5108000
         OI    PDBFLAG1,PDB1NSOT   DELETE DATA SET FROM JOB    @OZ39639 U5108100
         ST    IOT,PCEBUFAD        SET BUFFER ADDR FOR $EXCP   @OZ39639 U5108200
        $BFRBLD (IOT)               AND BUILD AN IOB IN IT     @OZ39639 U5108300
         MVI   PCEDEVTP,PCEDAWR    RE-WRITE                    @OZ39639 U5108400
         L     R0,IOTTRACK          JOB'S IOT                  @OZ39639 U5108500
         BAL   WE,XIO                TO THE SPOOL              @OZ39639 U5108600
         SPACE 1                                               @OZ39639 U5108700
         OI    IOTFLAG1,IOT1ALOC+IOT1NEWS  SET NEWS INDICATION @OZ39639 U5108800
         NI    PDBFLAG1,FF-PDB1NSOT        SHOW PRINTABLE      @OZ39639 U5108900
         MVC   IOTJBKEY,=C'$$NE'   UPDATE IOT JOB KEY          @OZ39639 U5108950
        $TRACK IOTMSTAB            OBTAIN NEW IOT MTTR         @OZ39639 U5109000
         ST    R1,IOTTRACK         UPDATE IOT TRACK ADDRESS    @OZ39639 U5109100
         LR    R0,R1               WRITE NEW JESNEWS IOT       @OZ39639 U5109200
         BAL   WE,XIO               TO THE SPOOL               @OZ39639 U5109300
         BAL   LINK,XQSUSE         REGAIN ACCESS TO QUEUES     @OZ39639 U5109400
         MVC   $NEWSIOT,IOTTRACK   UPDATE JESNEWS IOT POINTER  @OZ39639 U5109500
         MVC   $NEWSTTR,PDBMTTR    UPDATE JESNEWS DS  POINTER  @OZ39639 U5109600
         SPACE 1                                               @OZ39639 U5109700
XSNEWSW  L     R10,IOTJQOFF        POINT TO JQE                @OZ39639 U5109800
         AL    R10,$JOBQPTR         FOR JOB=YES MESSAGE        @OZ39639 U5109900
        $WTO   XMESSAGE,L'XNEWSMSG,JOB=YES,WAIT=NO, TELL OPER  @OZ39639*U5110000
               ROUTE=$UR+$MAIN+$LOG,CLASS=$NORMAL,PRI=$ST      @OZ39639 U5110100
         L     R10,$SSVT           RESTORE SSVT BASE           @OZ39639 U5110200
         B     XSPFRIOT            BR TO BYPASS JOE CREATION   @OZ39639 U5110300
         EJECT                                                 @OZ39639 U5110400
***************************************************************@OZ39639 U5110500
*                                                              @OZ39639 U5110600
*        S P I N - O F F   A   D A T A   S E T                 @OZ39639 U5110700
*                                                              @OZ39639 U5110800
***************************************************************@OZ39639 U5110900
         SPACE 1                                               @OZ39639 U5111000
XSPINJOE TM    PDBFLAG1,PDB1NULL   IF DATA SET IS EMPTY,       @OZ39639 U5111100
         BNZ   XSPURGE              IGNORE SPIN REQUEST        @OZ39639 U5111200
         LA    WD,XMESSAGE         POINT TO WORK AREA FOR JOES @OZ39639 U5111300
        $#BLD  JOES=(WD),PDDB=(PDDB),JQE=IOTJQOFF CREATE WK/CH @OZ39639 U5111400
         MVI   JOEFLAG,$JOESPIN    SET WORK JOE TO 'SPIN' TYPE @OZ39639 U5111500
         MVC   JOEIOTTR,IOTTRACK   PUT SPIN IOT TTR IN WORK JOE@OZ39639 U5111600
         LA    R1,JOESIZE(,WD)     POINT TO CHARACTERISTICS JOE         U5115000
        $#ADD  CHAR=(R1),WORK=(WD) ADD JOE TO JOT                    R4 U5115100
         BZ    XSPFRIOT            BR IF $#ADD SUCCESSFUL               U5117000
         EJECT                                                       R4 U5117100
*********************************************************************** U5117200
*                                                                     * U5119000
*        N O   R O O M   I N   J O T                                  * U5120000
*                                                                     * U5121000
*********************************************************************** U5121100
         SPACE 1                                                        U5122000
         NI    PDBFLAG1,255-PDB1PSO  INDICATE DATA SET                  U5123000
         OI    PDBFLAG1,PDB1HOLD      ON SPIN QUEUE (NOT IN JOT)        U5124000
         ST    IOT,PCEBUFAD        SET BUFFER ADDRESS FOR $EXCP         U5125000
        $BFRBLD (IOT)              BUILD IOB IN IOT BUFFER              U5126000
         MVI   PCEDEVTP,PCEDAWR    SHOW WRITE OPERATION        @OZ32329 U5126500
         SPACE 1                                                        U5127000
XSPWRIOT MVC   IOTSPIOT,$UNSPUNQ   LIFO QUEUE                           U5128000
         L     R0,IOTTRACK          IOT TO                              U5129000
         BAL   WE,XIO                SPIN                               U5130000
         BAL   LINK,XQSUSE            QUEUE                             U5131000
         CLC   IOTSPIOT,$UNSPUNQ       USING                            U5132000
         BNE   XSPWRIOT                 'COMPARE AND SWAP'              U5133000
         SPACE 1                                                        U5134000
         MVC   $UNSPUNQ,IOTTRACK   UPDATE POINTER TO 1ST SPIN IOT       U5135000
         L     R1,IOTJQOFF         GET JQE ADDRESS                      U5136000
         AL    R1,$JOBQPTR          FROM IOT                            U5137000
         LH    R0,JQEHLDCT         INCREMENT                   @OZ27300 U5138000
         AL    R0,=A(X'10')         JOB HELD                   @OZ27300 U5139000
         STH   R0,JQEHLDCT           DATASET COUNT             @OZ27300 U5140000
        $QCKPT (R1)                FORCE CHECKPOINT OF JQE              U5141000
         B     XSPFRIOT            THEN BR TO FREE THE IOT              U5142000
         SPACE 1                                                        U5143000
         DROP  WD                  KILL JOE ADDRESSABILITY              U5144000
         EJECT                                                          U5145000
*********************************************************************** U5145100
*                                                                     * U5146000
*        H O L D   A   D A T A   S E T                                * U5147000
*                                                                     * U5148000
*********************************************************************** U5148100
         SPACE 1                                                        U5149000
*                                  THIS LINE DELETED BY APAR   @OZ36864 U5150000
*                                  THIS LINE DELETED BY APAR   @OZ36864 U5152000
*                                  THIS LINE DELETED BY APAR   @OZ36864 U5152200
XSPHOLD  ST    IOT,PCEBUFAD        SET BUFFER ADDR FOR $EXCP   @OZ36864 U5152250
        $BFRBLD (IOT)              BUILD IOB IN IOT BUFFER     @OZ35742 U5152300
         NI    IOTFLAG1,255-IOT1NTPR RESET NOT PROCESSED FLAG  @OZ35742 U5152350
         MVI   PCEDEVTP,PCEDAWR    INDICATE WRITE OPERATION    @OZ35742 U5152400
         L     R0,IOTTRACK         GET SEEK ADDRESS FOR $EXCP  @OZ35742 U5152450
         BAL   WE,XIO              REWRITE IOT                 @OZ35742 U5152500
         BAL   LINK,XQSUSE         REQUEST ACCESS TO CHKT DATA @OZ35742 U5152550
         TM    BUFECBCC-BUFDSECT(IOT),X'7F'  GOOD COMPLETION...@OZ35742 U5152600
         BM    XIOTBAD             BR IF I/O ERROR             @OZ35742 U5152650
         SPACE 1                                               @OZ36864 U5152660
XIOTOK   MVC   $SVFIFOQ,IOTIOT     DE-CHAIN IOT                @OZ36864 U5152670
         L     R1,IOTJQOFF         REFRESH JQE ADDRESS         @OZ36864 U5152700
         AL    R1,$JOBQPTR          FROM IOT                   @OZ35742 U5152750
         LA    WE,$SVHOLDQ-(IOTIOT-IOTDSECT)  PREPARE TO SCAN HOLD Q    U5153000
         SPACE 1                                                        U5154000
         LR    WD,WE               SAVE LAST IOT ADDRESS                U5155000
         ICM   WE,7,IOTIOT+1-IOTDSECT(WD)  POINT TO NEXT IOT            U5156000
         BNZ   *-6                 LOOP IF VALID CHAIN ADDRESS          U5157000
         SPACE 1                                                        U5158000
         ST    IOT,IOTIOT-IOTDSECT(,WD)  ADD IOT TO                     U5159000
         ST    WE,IOTIOT                  END OF HOLD REQUEST QUEUE     U5160000
         LH    R0,JQEHLDCT         BUMP                                 U5161000
         AL    R0,=A(X'10')         HOLD                             R4 U5161100
         STH   R0,JQEHLDCT           COUNT                           R4 U5161200
         TM    PDBFLAG1,PDB1DSID   IF HELD                           R4 U5161300
         BZ    *+8                  FOR 3540,                        R4 U5161400
         OI    JQEHLDCT+1,JQEHLDDS   SET 3540 FLAG IN JQE            R4 U5161500
        $QCKPT (R1)                FORCE CHECKPOINT OF JQE              U5164000
         L     R1,$HOLDPCE         GET HOLD QUEUE PROCESSOR PCE ADDR R4 U5165000
        $POST  (R1),WORK            AND WAKE HIM UP                     U5166000
         B     XSPNEXT             THEN BR TO GET NEXT IOT              U5167000
         EJECT                                                 @OZ35742 U5167050
*************************************************************  @OZ35742 U5167100
*        THIS CODE IS ENTERED IF AN ERROR OCCURS UPDATING THE  @OZ35742 U5167105
*        IOT TO INDICATE THAT IT HAS BEEN PASSED TO THE HOLD   @OZ35742 U5167110
*        PROCESSOR (FOR WARM START).  THE HOLD PROCESSOR WILL  @OZ35742 U5167120
*        STILL BUILD AN HQR FOR THIS DATASET, SO THAT THE HQT  @OZ35742 U5167130
*        WILL BE FORMATTED EVEN IF THE IOT FOR THE FIRST HELD  @OZ35742 U5167140
*        DATASET MAY BE UNREADABLE. IN THE EVENT OF A CRASH,   @OZ35742 U5167150
*        THE IOT WILL PROBABLY BE UNRECOVERABLE, AND SO WILL   @OZ35742 U5167160
*        NOT BE PROCESSED TWICE.                               @OZ35742 U5167170
*************************************************************  @OZ35742 U5167180
XIOTBAD  $DISTERR                  ISSUE DISASTROUS ERROR MSG  @OZ35742 U5167200
         BAL   LINK,XQSUSE         REQUEST ACCESS TO CKPT DATA @OZ35742 U5167300
         B     XIOTOK              BR TO FINISH PROCESSING     @OZ35742 U5167400
         EJECT                                                       R4 U5168000
*********************************************************************** U5168100
*                                                                     * U5168200
*        FREE TRACKS OF DELETED DATA SET (IF ANY)                     * U5168300
*                                                                     * U5168400
*********************************************************************** U5168500
         SPACE 1                                                    R41 U5168600
XSPURGE  TM    IOTFLAG1,IOT1ALOC   ALLOCATION IOT...                R41 U5168700
         BZ    XSPFRIOT            BR IF NO                         R41 U5168800
        $PURGE IOTTGMAP            FREE DATA SET'S TRACKS           R41 U5168900
         NI    IOTFLAG1,255-IOT1ALOC  CLEAR ALLOCATION FLAG         R41 U5169000
         ST    IOT,PCEBUFAD        SET BUFFER ADDRESS FOR $EXCP     R41 U5169100
        $BFRBLD (IOT)              BUILD IOB IN IOT BUFFER          R41 U5169200
         L     R0,IOTTRACK         GET IOT TRACK ADDRESS            R41 U5169300
         MVI   PCEDEVTP,PCEDAWR    SHOW WRITE OPERATION        @OZ31178 U5169350
         BAL   WE,XIO              RE-WRITE IOT                     R41 U5169400
         BAL   LINK,XQSUSE         REQUEST ACCESS TO CKPT DATA      R41 U5169500
         SPACE 1                                                    R41 U5169600
*********************************************************************** U5169700
*                                                                     * U5169800
*        F R E E   I O T   B U F F E R                                * U5170000
*                                                                     * U5171000
*********************************************************************** U5171100
         SPACE 1                                                        U5172000
XSPFRIOT L     R0,IOTIOT           DE-CHAIN IOT                         U5174000
         ST    R0,$SVFIFOQ          FROM FIFO QUEUE                     U5175000
         LH    R0,IOTLENG          GET LENGTH OF IOT                    U5176000
         ICM   R0,8,=AL1(231)      PROVIDE BUFFER SUBPOOL NUMBER        U5177000
         LR    R1,IOT              GET IOT ADDRESS                      U5178000
         FREEMAIN R,LV=(0),A=(1)   FREE THE IOT BUFFER               R4 U5179000
         SPACE 1                                                        U5180000
*********************************************************************** U5180100
*                                                                     * U5181000
*        G E T   N E X T   R E Q U E S T   ( I F   A N Y )            * U5182000
*                                                                     * U5183000
*********************************************************************** U5183100
         SPACE 1                                                        U5184000
XSPNEXT  ICM   IOT,15,$SVFIFOQ     GET ADDRESS OF NEXT SPIN/HOLD IOT    U5185000
         BZ    XQSEARCH            BR IF DONE TO FIND OTHER WORK        U5186000
         B     XSPRQST              ELSE BR TO PROCESS REQUEST          U5187000
         SPACE 1                                                        U5188000
         DROP  R1,PDDB,IOT         KILL CTL BLOCK ADDRESSABILITY        U5189000
         TITLE 'HASP EXECUTION PROCESSOR -- CANCEL/STATUS SUPPORT'      U5192000
*********************************************************************** U5192100
*                                                                     * U5274000
*        ENTRY POINT TO PERFORM CANCEL/STATUS FUNCTIONS FOR TSO USER  * U5276000
*                                                                     * U5278000
*********************************************************************** U5278100
         SPACE 1                                                        U5281000
         CNOP  0,8                                                      U5282000
XPTCS    BAL   LINK,XQSUSE         REQUEST ACCESS TO CHECKPOINT DATA    U5283000
         CLI   SJBTFUNC+1,SSOBCANC IS THIS CANCEL                       U5284000
         BE    XTCS                SKIP GET CELL IF CANCEL              U5286000
         LH    WC,SJBTDIMP         PICK UP SIZE                         U5288000
         LR    R0,R2               COPY SJB ADDRESS                     U5290000
         L     R1,SJBTCB           PICK UP TCB ADDRESS                  U5292000
        $GETCEL SJB=(R0),TCB=(R1),SIZE=(R4),NONE=XTPOST GET CELL        U5294000
         ST    R1,SJBTAREA         SET AREA ADDRESS                     U5296000
         MVC   SJBTCCE,0(R1)       COPY CCE POINTER                     U5298000
         SPACE 1                                                        U5300000
XTCS     DS    0H                                                       U5302000
         LA    WD,L'JQEJNAME-1     GET LENGTH FOR JOBNAME CLC           U5304000
         TM    SJBTFLGS,SSCSUSID   DOES USER WANT TO SEARCH ON USER ID  U5306000
         BZ    XTCSGO              IF NOT GO TO IT                      U5308000
         IC    WD,SJBTULEN         PICK UP USER ID LENGTH               U5310000
         BCTR  WD,0                REDUCE BY 1                          U5312000
         SPACE 1                                                        U5314000
XTCSGO   LA    R15,$JQTYPES*2             PREPARE                       U5315000
         ST    R15,XEQWORK                 TO SCAN                  R41 U5316000
         LA    R1,$JQHEADS-2-QUECHAIN(R15)  ACTIVE JOB QUEUES           U5317000
         SPACE 1                                                        U5318000
         USING JQEDSECT,R1         PROVIDE JQE ADDRESSABILITY           U5320000
         SPACE 1                                                        U5322000
         BAL   XL1,XTJSCN          SCAN FOR JOB                         U5324000
         B     XTJNFND             EXIT IF NOT FOUND        +0          U5326000
         L     WB,SJBTJOBI         PICK UP JOB NUMBER       +4          U5328000
         LTR   WB,WB               TEST FOR VALID POINTER               U5330000
         BNZ   XTCKJN              IF NOT ZERO LOCATE SINGLE JOB        U5332000
         CLI   SJBTFUNC+1,SSOBCANC IS THIS CANCEL                       U5334000
         BNE   XTMULTST            IF NOT, MUST BE MULTIPLE STATUS      U5336000
         EJECT                                                          U5338000
*********************************************************************** U5338100
*                                                                     * U5340000
*        SINGLE JOB CANCEL REQUEST WITHOUT JOB NUMBER                 * U5342000
*                                                                     * U5344000
*********************************************************************** U5344100
         SPACE 1                                                        U5346000
         LR    WB,R1               SAVE CURRENT JQE                     U5348000
         BAL   XL1,XTJSCN          CONTINUE SCAN                        U5350000
         B     XTCANA              IF NONE FOUND GO AHEAD   +0          U5352000
         LA    R0,SSCSNCAN         IF FOUND SET ERROR       +4          U5354000
         B     XTCSSRET            DUPLICATE JOBS WITH JOB NAME         U5356000
         SPACE 1                                                        U5358000
         CNOP  0,8                                                      U5360000
XTCANA   LR    R1,WB               RESTORE JQE POINTER                  U5362000
         B     XTCAN               TRY CANCEL                           U5364000
         SPACE 1                                                        U5366000
*********************************************************************** U5366100
*                                                                     * U5368000
*        SINGLE JOB CANCEL/STATUS REQUEST - FIND JQE BY JOB NAME      * U5370000
*                                                                     * U5372000
*********************************************************************** U5372100
         SPACE 1                                                        U5374000
         CNOP  0,8                                                      U5376000
XTCKJN   CH    WB,JQEJOBNO         IS THIS THE JOB                      U5378000
         BE    XTPCSFUN            PERFORM CANCEL/STATUS IF SO          U5380000
         BAL   XL1,XTJSCN          CONTINUE SCAN                        U5382000
         B     XTRCNVAL            EXIT WITH INVALID COMB   +0          U5384000
         B     XTCKJN              CHECK JOB NUMBER         +4          U5386000
         SPACE 1                                                        U5388000
*********************************************************************** U5388100
*                                                                     * U5390000
*        A JOB WAS FOUND FOR SINGLE REQUEST - DO CANCEL/STATUS        * U5392000
*                                                                     * U5394000
*********************************************************************** U5394100
         SPACE 1                                                        U5396000
         CNOP  0,8                                                      U5398000
XTPCSFUN CLI   SJBTFUNC+1,SSOBCANC IS THIS REQUEST FOR CANCEL           U5400000
         BNE   XTSINGST            MUST BE STATUS IF NOT                U5402000
         EJECT                                                          U5404000
*********************************************************************** U5404100
*                                                                     * U5406000
*        CANCEL REQUEST - TRY TO CANCEL JOB                           * U5408000
*                                                                     * U5410000
*********************************************************************** U5410100
         SPACE 1                                                        U5412000
XTCAN    $JCAN ENTER=NO,TYPE=CANXEQ SETUP FOR CANCEL EXECUTION          U5414000
         TM    SJBTFLGS,SSCSCOUT   CHECK FOR PURGE                      U5416000
         BZ    XTCANIT             CANCEL IF NOT                        U5418000
         $JCAN ENTER=NO,TYPE=CANALL SETUP FOR CANCEL ALL                U5420000
         SPACE 1                                                        U5422000
XTCANIT  $JCAN JQE=(R1),NOTJOB=XTCSNJOB,NOP=XTCSOUT                     U5424000
         SPACE 1                                                        U5426000
*********************************************************************** U5426100
*                                                                     * U5428000
*        RETURN WITH OK OR OTHER CODE                                 * U5430000
*                                                                     * U5432000
*********************************************************************** U5432100
         SPACE 1                                                        U5434000
XTCSROK  LA    R0,SSCSRTOK         SET                                  U5436000
         SPACE 1                                                        U5438000
XTCSSRET STH   R0,SJBTRETB         SSOBRETN CODE                        U5440000
         LA    R0,SSRTOK           SET                                  U5442000
         STH   R0,SJBTRETR         R15 RETURN                           U5444000
         SPACE 1                                                        U5446000
XTPOST  $XMPOST SJBECBP            XM POST THE WAITING TASK             U5448000
         B     XQSEARCH            THEN LOOK FOR MORE WORK TO DO        U5450000
         SPACE 1                                                        U5452000
         CNOP  0,8                                                      U5454000
XTJNFND  LA    R0,SSCSNOJB         SET                                  U5456000
         B     XTCSSRET            JOB NOT FOUND                        U5458000
         SPACE 1                                                        U5460000
XTRCNVAL LA    R0,SSCSBADI         SET                                  U5462000
         B     XTCSSRET            INVALID COMBINATION                  U5464000
         SPACE 1                                                        U5466000
XTCSOUT  LA    R0,SSCSOUTP         SET                                  U5468000
         B     XTCSSRET            JOB NOT CANCELLED - ON OUTPUT Q      U5470000
         SPACE 1                                                        U5472000
XTCSNJOB LA    R0,SSCSICAN         SET INVALID CANCEL REQUEST           U5474000
         B     XTCSSRET            EXIT                                 U5476000
         EJECT                                                          U5478000
*********************************************************************** U5478100
*                                                                     * U5480000
*        SINGLE STATUS REQUEST - PUT INTO PASS BACK AREA              * U5482000
*                                                                     * U5484000
*********************************************************************** U5484100
         SPACE 1                                                        U5486000
         CNOP  0,8                                                      U5488000
XTSINGST L     WC,SJBTAREA         POINT TO RESPONSE LOCATION           U5490000
         BAL   LINK,XTSTAFIL       FILL OUT STATUS                      U5492000
         SPACE 1                                                        U5494000
XTJSEND  L     WB,SJBTAREA         POINT TO AREA                        U5496000
         SLR   WC,WB               SET RESPONSE SIZE                    U5498000
         STH   WC,SJBTDIMR          IN RETURN AREA                      U5500000
         B     XTCSROK             EXIT WITH OK                         U5502000
         SPACE 1                                                        U5504000
*********************************************************************** U5504100
*                                                                     * U5506000
*        MULTIPLE STATUS REQUEST                                      * U5508000
*                                                                     * U5510000
*********************************************************************** U5510100
         SPACE 1                                                        U5512000
         CNOP  2,8                                                      U5514000
XTMULTST L     WC,SJBTAREA         SET SCANNER                          U5516000
         LH    WB,SJBTDIMP         GET SIZE                             U5518000
         ALR   WB,WC               POINT TO END + 1                     U5520000
         SH    WB,=Y(SSCSELSZ)     MAKE SURE NO OVERFLOW                U5522000
         SPACE 1                                                        U5524000
         USING SSCSARBG,WC         PROVIDE SSOB EXT'N ADDRESSABILITY    U5526000
         SPACE 1                                                        U5528000
XTLOOP   CR    WC,WB               TOO HIGH                             U5530000
         BH    XTCTOVER            COUNT OVERFLOW IF YES                U5532000
         BAL   LINK,XTSTAFIL       FILL OUT ELEMENT                     U5534000
         BAL   XL1,XTJSCN          SCAN FOR NEXT                        U5536000
         B     XTJSEND             IF NO JOB SET END        +0          U5538000
         B     XTLOOP              LOOP                     +4          U5540000
         SPACE 1                                                        U5542000
         CNOP  4,8                                                      U5544000
XTCTOVER LA    WB,SSCSELSZ         SET FOR FULL WORD IF REQUIRED        U5546000
         SPACE 1                                                        U5548000
XTCTOA   ALR   WC,WB               UP 1                                 U5550000
         BAL   XL1,XTJSCN          FIND MORE                            U5552000
         B     XTCTOE              END IT                   +0          U5554000
         B     XTCTOA              LOOP                     +4          U5556000
         SPACE 1                                                        U5558000
         CNOP  0,8                                                      U5560000
XTCTOE   L     WB,SJBTAREA         POINT TO AREA                        U5562000
         SLR   WC,WB               GET SIZE                             U5564000
         C     WC,=F'32767'        CHECK FOR MAX                        U5566000
         BH    XTPOST              RETURN LOGIC ERROR                   U5568000
         STH   WC,SJBTDIMR         SET REQUIRED                         U5570000
         LA    R0,SSCSMALL         SET TOO SMALL                        U5572000
         B     XTCSSRET            RETURN                               U5574000
         EJECT                                                          U5576000
*********************************************************************** U5576100
*                                                                     * U5578000
*        SUBROUTINE TO SCAN THE JOB QUEUE FOR JOB NAME MATCH          * U5580000
*                                                                     * U5582000
*********************************************************************** U5582100
         SPACE 1                                                        U5584000
         CNOP  0,8                                                      U5586000
XTJSCN0  ST    R15,XEQWORK         SAVE NEW QUEUE HEAD OFFSET       R41 U5586500
         LA    R1,$JQHEADS-2-QUECHAIN(R15)  PREPARE TO SCAN JOB Q       U5587000
         SPACE 1                                                        U5587500
XTJSCN   LH    R1,JQECHAIN         GET OFFSET                           U5588000
         N     R1,=X'0000FFFF'      OF NEXT JQE                         U5589000
         BZ    XTJSCNB             BR IF END OF QUEUE                   U5590000
         SLL   R1,2                 ELSE CONVERT OFFSET                 U5590500
         AL    R1,$JOBQPTR           TO ABSOLUTE ADDRESS                U5591000
         EX    WD,XTJCLC           LOOK FOR MATCH                       U5592000
         BNE   XTJSCN              LOOP IF NOT                          U5594000
         CLM   WD,3,=Y(L'JQEJNAME-2)  TEST FOR FULL NAME SCAN        R4 U5596000
         BH    4(,XL1)             EXIT IF YES                          U5598000
         LA    R15,JQEJNAME+1(WD)  POINT TO LAST CHARACTER + 1          U5600000
         BE    XTJSCNA             IF 7 CHARACTER USER ID SKIP          U5602000
         CLI   1(R15),C' '         INSURE JOBNAME ONLY 1 LONGER         U5604000
         BNE   XTJSCN              LOOP IF NOT                          U5606000
         SPACE 1                                                        U5608000
XTJSCNA  CLI   0(R15),C' '         INSURE LAST CHARACTER PRESENT        U5610000
         BE    XTJSCN              LOOP IF NOT                          U5612000
         ICM   WD,8,0(R15)         PICK UP CHARACTER                    U5614000
         B     4(,XL1)             EXIT WITH FOUND                      U5616000
         SPACE 1                                                        U5616500
         CNOP  0,8                                                      U5617000
XTJSCNB  L     R15,XEQWORK         IF ANOTHER                       R41 U5617500
         BCTR  R15,0                JOB QUEUE,                          U5618000
         BCT   R15,XTJSCN0           BR TO SCAN IT                      U5618500
         BR    XL1                    ELSE EXIT                         U5619000
         SPACE 1                                                        U5619500
XTJCLC   CLC   SJBTJOBN(*-*),JQEJNAME  *** EXECUTE ONLY ***             U5620000
         EJECT                                                          U5622000
*********************************************************************** U5622100
*                                                                     * U5624000
*        SUBROUTINE TO FILL OUT STATUS ELEMENT                        * U5626000
*                                                                     * U5628000
*********************************************************************** U5628100
         SPACE 1                                                        U5630000
         CNOP  0,8                                                      U5632000
XTSTAFIL LH    R0,JQEJOBNO         PICK UP JOB NUMBER                   U5634000
         MVC   SSCSARID(3),=C'JOB' ASSUME 'JOB'                         U5636000
         CH    R0,=H'10000'        IS IT IN 'JOB' RANGE                 U5638000
         BL    XTSTAFJ             IF SO FILL OUT NUMBER                U5640000
         MVC   SSCSARID(3),=C'TSU' ASSUME 'TSU'                         U5642000
         SH    R0,=H'20000'        REDUCE BY BASE                       U5644000
         BNM   XTSTAFJ             IF 'TSU' FILL OUT NUMBER             U5646000
         MVC   SSCSARID(3),=C'STC' SET 'STC'                            U5648000
         AH    R0,=H'10000'        SET BASE                             U5650000
         SPACE 1                                                        U5652000
XTSTAFJ  CVD   R0,SJBDBLWK         CONVERT                              U5654000
         UNPK  SSCSARID+3(5),SJBDBLWK+5(3) TO EBCDIC                    U5656000
         OI    SSCSARID+L'SSCSARID-1,C'0' MAKE PRINTABLE                U5658000
         XC    SSCSRSV2,SSCSRSV2   ZERO RESERVED                        U5660000
         TM    JQETYPE,$XEQ        IS IT XEQ                            U5662000
         BZ    XTSNXEQ             IF NOT, SKIP                         U5664000
         TM    JQEFLAGS,QUEBUSY    IS IT BUSY...                        U5666000
         BZ    XTSPXEQ             IF NOT, MUST BE PRE-XEQ              U5668000
         CLI   JQETYPE,$XEQ        IS IT CONVERTING...                  U5670000
         BE    XTSPXEQ             IF YES, IT IS PRE-XEQ                U5672000
         MVI   SSCSFLG1,SSCSJACT   SET XEQ                              U5674000
         SPACE 1                                                        U5676000
XTSCKH   TM    JQEFLAGS,QUEHOLDA+QUEHOLD1 NORMAL HOLD STATUS            U5678000
         BZ    *+8                 IF NOT, SKIP                         U5680000
         OI    SSCSFLG1,SSCSHOLD   SET HOLD                             U5682000
         STCM  WD,8,SSCSUJOB       SET LAST CHARACTER ID IF PRESENT     U5684000
         LA    WC,SSCSELSZ(,WC)    UP 1                                 U5686000
         BR    LINK                RETURN                               U5688000
         SPACE 1                                                        U5690000
         CNOP  0,8                                                      U5692000
XTSPXEQ  MVI   SSCSFLG1,SSCSEXCQ   SET PRE-XEQ                          U5694000
         B     XTSCKH              CHECK HOLD                           U5696000
         SPACE 1                                                        U5698000
XTSNXEQ  CLI   JQETYPE,$INPUT      IS IT STILL READING...               U5700000
         BE    XTSPXEQ             BR IF SO TO SET PRE-XEQ              U5702000
         MVI   SSCSFLG1,SSCSOUTQ   SET OUTPUT                           U5704000
         B     XTSCKH              CHECK HOLD                           U5706000
         SPACE 1                                                        U5708000
         DROP  R1,WC               KILL JQE, SSOB ADDRESSABILITY    R41 U5710000
         TITLE 'HASP EXECUTION PROCESSOR -- $PHASP SUPPORT'             U5716000
*                                                                    R4 U5716100
*********************************************************************** U5717000
*                                                                     * U5718000
*        WITHDRAW JES2 FROM SYSTEM                                    * U5720000
*                                                                     * U5722000
*********************************************************************** U5723000
*                                                                     * U5723100
         SPACE 1                                                        U5724000
         USING PITDSECT,WB         PROVIDE PIT ADDRESSABILITY        R4 U5728000
         SPACE 1                                                     R4 U5730000
*********************************************************************** U5732000
*                                                                     * U5734000
*        ENSURE ALL PITS ARE DRAINED AND INACTIVE                     * U5736000
*                                                                     * U5738000
*********************************************************************** U5739000
         SPACE 1                                                        U5740000
X$PHASP  L     WB,$PITABLE         POINT TO 1ST PIT                  R4 U5744000
         ICM   WA,15,$SVJPXBM      TEST FOR XBM REQUEST(S)           R4 U5746000
         BNZ   X$PITNXT            BR IF SO TO DRAIN PIT(S)          R4 U5748000
         ICM   WA,15,$SVJPCLS      TEST FOR JOB SELECT REQUEST(S)       U5752000
         BZ    X$NXTPIT            BR IF NONE                        R4 U5754000
         SPACE 1                                                        U5762000
X$PITNXT OI    PITSTAT,PITHOLDA    INDICATE PIT IS DRAINING             U5764000
         TM    PITFLAGS,PITXBM+PITXBJCL BR IF NON-XBM PIT...   @OZ32155 U5764100
         BNM   X$PITNXX            OR XBM PIT AWAITING JCL.    @OZ32155 U5764200
         ICM   WA,7,PITSJB+1       GET ADDR OF SJB.            @OZ32155 U5764300
         BZ    X$PITNXX            BR IF NO SJB.               @OZ32155 U5764400
         OI    SJBFLG2,SJB2PNIT    FORCE INIT TO TERMINATE.    @OZ32155 U5764500
X$PITNXX DS    0H                                              @OZ32155 U5764600
         ICM   WB,15,PITNEXT       POINT TO NEXT PIT                 R4 U5766000
         BNZ   X$PITNXT            BR IF VALID PIT ADDRESS           R4 U5768000
         B     XQSEARCH             ELSE BR TO FLUSH THE SJB(S)         U5772000
         SPACE 1                                                        U5774000
X$NXTPIT TM    PITSTAT,PITBUSY     TEST FOR ACTIVE PIT               R4 U5775100
         BO    XJBWAIT             BR IF YES TO AWAIT TERMINATION    R4 U5775200
         ICM   WB,15,PITNEXT       POINT TO NEXT PIT                 R4 U5775300
         BNZ   X$NXTPIT            BR IF VALID PIT ADDRESS           R4 U5775400
         EJECT                                                 @OZ56448 U5775410
***************************************************************@OZ56448 U5775420
*                                                              @OZ56448 U5775430
*        CLEAR SELECTED SSVT FUNCTION MATRIX BYTES             @OZ56448 U5775440
*        TO PREVENT NEW JOB SELECT REQUESTS                    @OZ56448 U5775450
*                                                              @OZ56448 U5775460
***************************************************************@OZ56448 U5775470
         SPACE 1                                               @OZ56448 U5775480
         LA    R1,SSOBJBSL         GET FUNCTION BYTE           @OZ56448 U5775490
         LA    R1,3(JCT,R1)           OFFSET IN SSVT           @OZ56448 U5775500
         MVI   0(R1),0             CLEAR JOB SELECT FUNCTION   @OZ56448 U5775510
         LA    R1,SSOBRQST         GET FUNCTION BYTE           @OZ56448 U5775520
         LA    R1,3(JCT,R1)           OFFSET IN SSVT           @OZ56448 U5775530
         MVI   0(R1),0             CLEAR REQUEST-JOBID FUNC.   @OZ56448 U5775540
         SPACE 1                                               @OZ56448 U5775550
*********************************************************************** U5775600
*                                                                     * U5776000
*        ENSURE OUR INITIATORS ARE STOPPED                            * U5778000
*                                                                     * U5780000
*********************************************************************** U5780500
         SPACE 1                                                        U5781000
X$PSCAN  BAL   LINK,XQSUSE         REQUEST ACCESS TO CHECKPOINT DATA    U5782000
         L     LINK,=V($QINDEX)           PREPARE                       U5783000
         LA    R1,CATSTCCL-(255-QUECLASS)  TO SCAN                      U5784000
         IC    R1,0(R1,LINK)                STC                         U5785000
         LA    R1,$JQHEADS-2-QUECHAIN(R1)    QUEUE                      U5786000
         LR    LINK,R1             SAVE QUEUE ADDRESS                   U5787000
         SPACE 1                                                        U5788000
         USING JQEDSECT,R1         PROVIDE JQE ADDRESSABILITY           U5789000
         SPACE 1                                                        U5790000
X$PJQE1  LH    R1,JQECHAIN         GET OFFSET                           U5791000
         N     R1,=X'0000FFFF'      OF NEXT JQE                         U5792000
         BZ    X$PTERM             BR IF END OF QUEUE                   U5793000
         SLL   R1,2                 ELSE CONVERT OFFSET                 U5794000
         AL    R1,$JOBQPTR           TO ABSOLUTE ADDRESS                U5795000
         IC    R0,JQEFLAGS         IF NOT                               U5796000
         N     R0,=A(QUEBUSY)       EXECUTING                           U5797000
         CLM   R0,1,$SIDBUSY         STARTED TASK,                      U5798000
         BNE   X$PJQE1                BR TO TEST NEXT JQE               U5799000
         CLC   JQEJNAME,=CL8'SYSLOG'  TEST FOR 'REQUEST JOB ID'         U5800000
         BE    X$PJQE1             YES, RESUME SCAN            @OZ55219 U5802000
         BAL   LINK,XSJBLOCK       GET SJB LOCK                @OZ55219 U5804000
         LA    R2,$SVJXNUM-(SJBXQCHN-SJBDSECT) PREPARE TO      @OZ55219 U5804100
         SL    R1,$JOBQPTR         GET JQE OFFSET              @OZ55219 U5804200
X$INTSJB ICM   R2,7,SJBXQCHN+1     GET ADDRESS OF NEXT SJB     @OZ55219 U5804300
         BZ    X$PUNLK             NO SJB                      @OZ55219 U5804400
         CL    R1,SJBJQOFF         IS SJB FOR THIS INIT...     @OZ55219 U5804500
         BNE   X$INTSJB            NO, GET NEXT ONE            @OZ55219 U5804600
         TM    SJBLKFG,SJBPRIM     IS IT PRIMARY INITIATOR..   @OZ56375 U5804700
         BO    X$PUNLK             YES, CONTINUE               @OZ55219 U5804800
         B     X$PSINIT            NO, INIT IS SECONDARY       @OZ55219 U5804900
         EJECT                                                          U5806000
*********************************************************************** U5807000
*                                                                     * U5808000
*        ENSURE REQUEST-JOB-ID TASKS ARE STOPPED                      * U5810000
*                                                                     * U5812000
*********************************************************************** U5813000
         SPACE 1                                                        U5814000
X$PTERM  LR    R1,LINK             PREPARE TO RE-SCAN STC QUEUE         U5816000
         BAL   LINK,XSJBLOCK       GET SJB QUEUES LOCK                  U5818000
         SPACE 1                                                        U5820000
X$PJQE2  LH    R1,JQECHAIN         GET OFFSET                           U5821000
         N     R1,=X'0000FFFF'      OF NEXT JQE                         U5822000
         BZ    X$PREADY            BR IF END OF QUEUE                   U5823000
         SLL   R1,2                 ELSE CONVERT OFFSET                 U5824000
         AL    R1,$JOBQPTR           TO ABSOLUTE ADDRESS                U5825000
         IC    R0,JQEFLAGS         IF NOT                               U5826000
         N     R0,=A(QUEBUSY)       EXECUTING                           U5827000
         CLM   R0,1,$SIDBUSY         STARTED TASK,                      U5828000
         BNE   X$PJQE2                BR TO TEST NEXT JQE               U5829000
         LA    WA,$SVJXNUM-(SJBXQCHN-SJBDSECT)  PREPARE TO SCAN SJBS    U5830000
         SL    R1,$JOBQPTR         REDUCE JQE ADDR TO OFFSET   @OZ40028 U5831000
         SPACE 1                                                        U5832000
X$PSJB   ICM   WA,7,SJBXQCHN+1     GET ADDRESS OF NEXT SJB              U5834000
         BZ    X$PUNLK             BR IF NONE (JOB MUST BE TERMINATING) U5836000
         CL    R1,SJBJQOFF         IS SJB FOR THIS JOB...      @OZ40028 U5838000
         BNE   X$PSJB              BR IF NO                             U5840000
         SPACE 1                                                        U5842000
*********************************************************************** U5843000
*                                                                     * U5844000
*        TERMINATE REQUEST-JOB-ID TASK                                * U5846000
*                                                                     * U5848000
*********************************************************************** U5849000
         SPACE 1                                                        U5850000
         MVI   SJBJQOFF,X'80'      PREVENT REDUNDANT XMPOST    @OZ40028 U5851000
         MVC   SJBECBP,SJBSECB     PREPARE XMPOST POST LIST             U5852000
         POST  MF=(E,SJBECBP)       AND POST THE TASK TO TERMINATE      U5854000
         LA    R1,SJBECB           THEN RESTORE                         U5856000
         ST    R1,SJBECBP           NORMAL POST LIST                    U5858000
         SPACE 1                                                        U5860000
X$PUNLK  BAL   LINK,XSJBUNLK       REMOVE THE SJB QUEUES LOCK           U5862000
         CLI   $SVJOB,0            IF NESTED $$POST OCCURRED,  @OZ52262 U5863000
         BNE   XQSEARCH             SEARCH QUEUES AGAIN.       @OZ52262 U5863500
         B     XJBWAIT             ELSE $WAIT FOR JOB TERM.    @OZ52262 U5864000
         EJECT                                                          U5866000
*********************************************************************** U5866100
*                                                                     * U5866200
*        THIS JES2 READY TO WITHDRAW                                  * U5866300
*                                                                     * U5866600
*********************************************************************** U5866700
         SPACE 1                                                        U5866800
X$PREADY ICM   WA,15,$SVJXNUM      TEST FOR ANY EXECUTING TASK          U5868000
         BZ    X$PDONE             BR IF NO (SUB-SYSTEM CAN TERMINATE)  U5870000
X$PSINIT DS    0H                                              @OZ55219 U5871000
         BAL   LINK,XSJBUNLK       REMOVE THE SJB QUEUES LOCK           U5872000
         CLC   X$PMSG+2(4),$SVSSNM HAS MESSAGE ALREADY BEEN ISSUED...   U5874000
         BE    XJBWAIT             BR IF SO                             U5876000
         MVC   X$PMSG+2(4),$SVSSNM  ELSE MOVE SUB-SYSTEM NAME TO MSG    U5878000
        $WTO   X$PMSG,L'X$PMSG,JOB=NO,  AND ISSUE MESSAGE              CU5880000
               ROUTE=$LOG+$MAIN,CLASS=$ACTION,PRI=$HI,WAIT=NO           U5882000
         B     XJBWAIT             THEN BR TO AWAIT JOB TERMINATION     U5884000
         SPACE 1                                               @OZ56448 U5884100
*********************************************************************** U5884200
*                                                                     * U5888000
*        GUARANTEE ALL SYSTEM ACTIVITY IS COMPLETE             @OZ56448 U5888100
*                                                                     * U5892000
*********************************************************************** U5892100
         SPACE 1                                               @OZ56448 U5893000
         USING JQEDSECT,WD         USE OLD JQE ADDRESSABILITY  @OZ56448 U5894000
         SPACE 1                                               @OZ56448 U5895000
X$PDONE  BAL   LINK,XSJBUNLK       REMOVE THE SJB QUEUES LOCK           U5896000
         BAL   LINK,XQSUSE         REQUEST ACCESS TO CHECKPOINT DATA    U5898000
         L     R1,$AQSE            POINT TO OUR SYSTEM'S QSE         R4 U5906000
*              THIS LINE DELETED BY APAR OZ56448               @OZ56448 U5908000
         IC    WB,QSESIAFF-QSEDSECT(,R1) GET OUR AFFINITY ID   @OZ56448 U5908005
         L     WD,$JOBQPTR         POINT TO START OF JOBQUEUE  @OZ56448 U5908010
         LH    R15,$MAXJOBS        GET TOTAL NUMBER OF JOBS    @OZ56448 U5908015
X$PJQLOP LA    WD,JQELNGTH(,WD)    POINT TO NEXT JQE           @OZ56448 U5908020
         IC    R0,JQEHQLOK         IF JOB LOCK HELD BY         @OZ56448 U5908025
         N     R0,=A(QUEBUSY)        SYSTEM BEING WITHDRAWN,   @OZ56448 U5908030
         CLM   R0,1,$SIDBUSY           THEN TAKE BRANCH TO     @OZ56448 U5908035
         BE    X$PDEQ                    FORBID QUICKSTART.    @OZ56448 U5908040
         LH    WC,JQEJOBNO         PICK UP JOBID AND TEST      @OZ56448 U5908045
         CH    WC,=H'10000'          FOR BATCH JOB.            @OZ56448 U5908050
         BL    X$PNOTB             BRANCH IF BATCH JOB         @OZ56448 U5908055
         EX    WB,X$TSIAFF         IF STC OR TSU HAS AFFINITY  @OZ56448 U5908060
         BZ    X$PNOTB               TO THIS SYSTEM AND NOT    @OZ56448 U5908065
         CLI   JQETYPE,$FREE           ON THE FREE QUEUE       @OZ56448 U5908070
         BE    X$PNOTB                   AND NOT PAST          @OZ56448 U5908075
         TM    JQETYPE,$XEQ                EXECUTION  --       @OZ56448 U5908080
         BO    X$PDEQ              --FORBID QUICKSTART.        @OZ56448 U5908085
X$PNOTB  BCT   R15,X$PJQLOP        ELSE EXAMINE NEXT JQE       @OZ56448 U5908090
         OI    QSESTAT-QSEDSECT(R1),QSEQUICK QUICKSTRT ALLOWED @OZ41702 U5908100
         EJECT                                                 @OZ56448 U5908120
X$PDEQ   L     WA,$SVJPNUM         GET 'STARTING' TASK SJB.    @OZ56448 U5908140
        $DEQSJB $SVJPNUM,X$PSJBS   BR IF NO 'STARTING' TASKS   @OZ56448 U5908150
         OI    SJBFLG2,SJB2JNFD    INDICATE 'JOB NOT FOUND'    @OZ56448 U5908160
        $XMPOST SJBECBP            XMPOST THE WAITING TASK     @OZ56448 U5908170
         BAL   LINK,XSJBUNLK       REMOVE THE SJB QUEUES LOCK  @OZ56448 U5908175
         B     X$PDEQ              LOOP TO FIND MORE SJBS      @OZ56448 U5908180
         SPACE 1                                               @OZ56448 U5908190
***************************************************************@OZ56448 U5908200
*                                                              @OZ56448 U5908210
*        $WAIT ABIT IF ANY SJB'S ON HAVT                       @OZ56448 U5908220
*                                                              @OZ56448 U5908230
***************************************************************@OZ56448 U5908240
         SPACE 1                                               @OZ56448 U5908250
X$PSJBS  L     R1,$SVHAVT          ACCESS HAVT                 @OZ56448 U5908260
         LA    R1,4(R1)            POINT TO ASID 1 ENTRY       @OZ56448 U5908270
         L     R2,CVTPTR           AND CVT POINTS TO SYSTEM    @OZ56448 U5908280
         L     R2,CVTASVT-CVT(,R2)   ASVT FOR MAXIMUM NUMBER   @OZ56448 U5908290
         L     R2,ASVTMAXU-ASVT(,R2)   OF ADDRESS SPACES       @OZ56448 U5908300
X$PSLP   CLC   0(4,R1),$ZEROS      IF NO ENTRY FOR THIS ASID,  @OZ56448 U5908310
         BE    X$PNEXT               BUMP TO THE NEXT SLOT     @OZ56448 U5908320
         L     R3,0(R1)            PICK UP ADDRESS OF SJB      @OZ56448 U5908330
         TM    SJBFLG2-SJBDSECT(R3),SJB2CONV CONVERTER SJB...  @OZ56448 U5908340
         BO    X$PNEXT             YES, DON'T WORRY ABOUT IT.  @OZ56448 U5908350
        $WAIT  ABIT                NO, LET USER ASID COMPLETE  @OZ56448 U5908360
         B     X$PDEQ              RESTART SEARCH              @OZ56448 U5908370
X$PNEXT  LA    R1,4(,R1)           BUMP TO NEXT ENTRY          @OZ56448 U5908380
         BCT   R2,X$PSLP           LOOP TO TEST NEXT ENTRY     @OZ56448 U5908390
         EJECT                                                 @OZ56448 U5908500
***************************************************************@OZ56448 U5908510
*                                                              @OZ56448 U5908520
*        $POST COMM PROCESSOR TO FINISH WITHDRAWAL             @OZ56448 U5908530
*                                                              @OZ56448 U5908540
***************************************************************@OZ56448 U5908550
         SPACE 1                                               @OZ56448 U5908560
         BAL   LINK,XQSUSE         REQUEST ACCESS TO CKPT      @OZ56448 U5908600
         L     R1,$AQSE            POINT TO OUR SYSTEM'S QSE   @OZ56448 U5908700
         NI    QSESTAT-QSEDSECT(R1),FF-QSEACTIV SHOW INACTIVE  @OZ56448 U5908800
         OI    $EXECPCE,X'80'      SHOW XEQ SHUTDOWN COMPLETE  @OZ35996 U5909000
        $POST  $HASPECF,CKPW       FORCE A CHECKPOINT                R4 U5910000
        $WAIT  CKPT                $WAIT FOR CHECKPOINT TO COMPLETE  R4 U5912000
         SPACE 1                                               @OZ35996 U5913000
         OI    $COMMPCE,X'80'      TELL HASPCOMM WE'RE DONE    @OZ27300 U5913500
         L     R1,$COMMPCE         $POST THE COMMAND PROCESSOR       R4 U5914000
        $POST  (R1),WORK            TO CONTINUE JES2 SHUTDOWN  @OZ27300 U5916000
         SPACE 1                                                        U5918000
X$PLOOP $WAIT  JOB                 THIS SHOULD $WAIT US PERMANENTLY     U5920000
         B     X$PLOOP             WE'RE DONE -- IGNORE $POST           U5922000
         SPACE 1                                                        U5924000
X$TSIAFF TM    JQEFLAG2,0              *** EXECUTE ONLY ***    @OZ56448 U5925000
         SPACE 1                                               @OZ56448 U5925500
         DROP  R1,WA,WB,JCT,BASE3  KILL PROCESSOR ADDRESSABILITY    R41 U5926000
         DROP  WD                  KILL JQE ADDRESSABILITY     @OZ56448 U5927000
         USING JCTDSECT,JCT        RESTORE JCT ADDRESSABILITY       R41 U5928000
         TITLE 'HASP EXECUTION PROCESSOR -- $WTO MESSAGES'              U5932000
*********************************************************************** U5932100
*                                                                     * U5934000
*        E X E C U T I O N   P R O C E S S O R   $ W T O   M S G S    * U5936000
*                                                                     * U5938000
*********************************************************************** U5938100
         SPACE 3                                                        U5940000
XDUPMSG  $MSG  301,'JJJJJJJJ - DUPLICATE JOB NAME - JOB DELAYED'        U5946000
         SPACE 2                                                        U5948000
XIDLEMSG $MSG  309,'   INIT XX INACTIVE ******** C='                    U5950000
         SPACE 2                                                        U5952000
XEOMSG1  $MSG  310,'TERMINATED AT END OF MEMORY'                    R41 U5952100
         SPACE 2                                                        U5956000
XEOMSG2  $MSG  311,'RE-QUEUED AT END OF MEMORY'                     R41 U5956100
         SPACE 2                                                        U5960000
X$PMSG   $MSG  312,'     AWAITING SECONDARY SUB-SYSTEM WITHDRAWAL'      U5962000
         SPACE 2                                                        U5970000
XDRNMSG  $MSG  314,'   INIT XX DRAINED  ******** C='                    U5972000
         SPACE 2                                                        U5974000
XHALTMSG $MSG  315,'   INIT XX HALTED   ******** C='                    U5976000
         SPACE 2                                               @OZ39639 U5976100
XNEWSMSG $MSG  316,'HAS REPLACED THE JESNEWS DATA SET'         @OZ39639 U5976200
XNEWSMRD EQU   *-29-XNEWSMSG,8     'REPLACED' OR 'DELETED '    @OZ39639 U5976300
         EJECT                                                      R41 U5978000
         LTORG                                                      R41 U5980000
         TITLE 'HASP HOLD QUEUE PROCESSOR'                              U6072000
*********************************************************************** U6073000
*                                                                     * U6074000
* PROCESSOR NAME -- HASPHOLD                                          * U6075000
*                                                                     * U6076000
* DESCRIPTIVE NAME -- JES2 HOLD QUEUE PROCESSOR                       * U6077000
*                                                                     * U6078000
* FUNCTION -- ADD A HOLD QUEUE RECORD (HQR) TO THE HOLD QUEUE TABLE   * U6079000
*             (HQT) REPRESENTING THE HELD DATA SETS FOR A JOB.        * U6080000
*                                                                     * U6081000
* NOTES -- 1)  THIS PROCESSOR DE-QUEUES SPIN IOTS REPRESENTING HELD   * U6082000
*              DATA SETS FROM A QUEUE OF IOTS WHICH IS BUILT BY THE   * U6083000
*              HASP EXECUTION PROCESSOR.  THIS QUEUE IS FIFO          * U6084000
*              ORDERED BY TIME OF UNALLOCATION.                       * U6085000
*                                                                     * U6086000
*          2)  BECAUSE THIS PROCESSOR MUST OBTAIN A CROSS-SYSTEM      * U6087000
*              JOB QUEUE ENTRY LOCK, IT WILL 'HANG' IF ANOTHER JES2   * U6088000
*              SYSTEM IN THE NETWORK CRUMPS WHILE HOLDING THE LOCK.   * U6089000
*                                                                     * U6090000
*          3)  TO IMPROVE THE PERFORMANCE OF THIS PROCESSOR,          * U6091000
*              PERMANENT STORAGE IS OBTAINED, VIA GETMAIN, TO SERVE   * U6092000
*              AS BUFFER STORAGE FOR AN HQT.  WHEN THE PROCESSOR IS   * U6093000
*              FORCED TO $WAIT FOR MORE WORK TO DO, A PAGE-RELEASE    * U6094000
*              IS PERFORMED FOR THE BUFFER.                           * U6095000
*                                                                     * U6096000
* REGISTER CONVENTIONS -- R0  -- WORK REGISTER                        * U6097000
*                         WA  -- HQR ADDRESS                          * U6098000
*                         WB  -- HQT ADDRESS                          * U6099000
*                         WC  -- PDDB ADDRESS                         * U6100000
*                         WD  -- JQE ADDRESS                          * U6101000
*                         WE  -- WORK/LINK REGISTER                   * U6102000
*                         WF  -- IOT ADDRESS                          * U6103000
*                         WG  -- SSVT ADDRESS                         * U6104000
*                         R10 -- ADDRESS OF 1ST HQT FOR JOB           * U6105000
*                                                                     * U6106000
*********************************************************************** U6107000
         EJECT                                                          U6108000
*********************************************************************** U6108100
*                                                                     * U6109000
*        H A S P H O L D   I N I T I A L   E N T R Y   P O I N T      * U6110000
*                                                                     * U6111000
*********************************************************************** U6111100
         SPACE 2                                                        U6112000
         USING HQRDSECT,WA         PROVIDE HQR ADDRESSABILITY           U6113000
         USING HQTDSECT,WB         PROVIDE HQT ADDRESSABILITY           U6114000
         USING JQEDSECT,WD         PROVIDE JQE ADDRESSABILITY           U6115000
         USING $SVDSECT,WG         PROVIDE SSVT ADDRESSABILITY          U6116000
         USING IOTDSECT,IOT        PROVIDE IOT ADDRESSABILITY           U6117000
         USING PDBDSECT,PDDB       PROVIDE PDDB ADDRESSABILITY          U6118000
         SPACE 1                                                        U6119000
PCEHQR   EQU   PCEWORK,HQRLENG     WORK SPACE FOR AN HQR                U6120000
         SPACE 2                                                        U6121000
HASPHOLD $ENTRY BASE=BASE2         PROVIDE PROCESSOR ENTRY              U6122000
         L     WG,$SSVT            GET SSVT ADDRESS FROM HCT            U6123000
         SPACE 1                                                        U6124000
*********************************************************************** U6124100
*                                                                     * U6125000
*        O B T A I N   P E R M A N E N T   B U F R   S T O R A G E    * U6126000
*                                                                     * U6127000
*********************************************************************** U6127100
         SPACE 1                                                        U6128000
         L     R0,HBUFSIZE         GET PAGE REQ'T FOR HQT BUFFER        U6129000
         GETMAIN RC,LV=(0),BNDRY=PAGE  THEN GET THE BUFFER STORAGE      U6130000
         LR    WB,R1               ASSUME GETMAIN SUCCESSFUL            U6131000
         ICM   WB,8,=AL1(X'80')    SHOW HQT PAGE-RELEASED               U6132000
         ST    WB,PCEBUFAD         SET BUFFER ADDRESS FOR $EXCP         U6133000
         LTR   R15,R15             TEST GETMAIN                         U6134000
         BZ    HQSRCH              BR IF SUCCESSFUL                     U6135000
H01     $ERROR                      ELSE CRUMP                          U6136000
         SPACE 1                                                        U6137000
HBUFSIZE DC    A(4096)             STORAGE SIZE FOR HQT BUFFER       R4 U6138000
         EJECT                                                          U6139000
*********************************************************************** U6139100
*                                                                     * U6140000
*        P A G E - R E L E A S E   H Q T   B U F F E R                * U6141000
*                                                                     * U6142000
*********************************************************************** U6142100
         SPACE 1                                                        U6143000
         CNOP  0,8                                                      U6144000
HRLSE    LTR   WB,WB               IF HQT PAGE-RELEASED,                U6145000
         BM    HWAIT                BR TO WAIT FOR WORK                 U6146000
        $PGSRVC RLSE,(WB),HBUFSIZE   ELSE RELEASE HQT BUFFER         R4 U6146100
         ICM   WB,8,=AL1(X'80')    SHOW HQT BUFFER PAGE-RELEASED        U6148000
         SPACE 1                                                        U6149000
HWAIT   $WAIT  WORK                WAIT FOR SOMETHING TO DO             U6150000
         SPACE 1                                                        U6151000
*********************************************************************** U6151100
*                                                                     * U6152000
*        S E A R C H   H O L D   R E Q U E S T   Q U E U E            * U6153000
*                                                                     * U6154000
*********************************************************************** U6154100
         SPACE 1                                                        U6155000
HQSRCH  $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    U6156000
         L     IOT,$SVHOLDQ        IF                                   U6157000
         LA    IOT,0(,IOT)          HOLD REQUEST QUEUE                  U6158000
         LTR   IOT,IOT               IS EMPTY,                          U6159000
         BZ    HRLSE                  BR TO RELEASE HQT BUFFER          U6160000
         L     WD,IOTJQOFF         GET JQE ADDRESS                      U6161000
         AL    WD,$JOBQPTR          FROM IOT                            U6162000
         TM    JQEHQLOK,QUEBUSY    IF JOB HOLD QUEUE LOCK NOT HELD,     U6163000
         BZ    HQLOCK               BR TO GRAB IT                       U6164000
        $WAIT  ABIT                  ELSE $WAIT A LITTLE WHILE          U6165000
         B     HQSRCH              THEN BR TO RETEST HOLD QUEUE         U6166000
         EJECT                                                       R4 U6166100
*********************************************************************** U6166200
*                                                                     * U6166300
*        O B T A I N   J O B   H O L D   Q U E U E   L O C K          * U6166400
*                                                                     * U6166500
*********************************************************************** U6166600
         SPACE 1                                                        U6167000
         CNOP  0,8                                                      U6168000
HQLOCK   OC    JQEHQLOK,$SIDBUSY   GRAB THE HOLD QUEUE LOCK             U6169000
        $QCKPT (WD)                 AND FORCE CHECKPOINT OF JQE         U6170000
         BAL   WE,HQRBLD           BUILD HQR IN PCEWORK             R41 U6171000
         LTR   WB,WB               IF HQT BUFFER NOT RELEASED,          U6172000
         BP    HQTOK                BR TO PROCESS FIRST REQUEST         U6173000
        $BFRBLD (WB)                 ELSE REBUILD THE BUFFER'S IOB      U6174000
         LA    WB,0(,WB)           SHOW HQT REBUILT                     U6175000
         SPACE 1                                                     R4 U6175100
*********************************************************************** U6175200
*                                                                     * U6177000
*        P R O C E S S   H O L D   R E Q U E S T                      * U6178000
*                                                                     * U6179000
*********************************************************************** U6179100
         SPACE 1                                                        U6180000
         CNOP  0,8                                                      U6181000
HQTOK    L     R10,IOTHQT1         IF NOT THE FIRST                     U6182000
         CL    R10,IOTHQT           HELD DATA SET FOR THIS JOB,         U6183000
         BNE   HQT1                  BR TO READ THE FIRST HQT           U6184000
         MVC   HQTID,=CL4'HQT'     CONSTRUCT                            U6185000
         LH    R0,$BUFLENG          HQT                              R4 U6186000
         STH   R0,HQTLENG            FROM                               U6187000
         MVI   HQTFLAG1,HQT1HQT1      CONTENTS                          U6188000
         MVI   HQTFLAG2,0              OF                               U6189000
         MVC   HQTJBKEY,IOTJBKEY        SPIN IOT                        U6190000
         B     HQR1                THEN BR TO ADD FIRST HQR             U6191000
         EJECT                                                       R4 U6191100
*********************************************************************** U6191200
*                                                                     * U6193000
*        R E A D   1 S T   H Q T   F O R   J O B                      * U6194000
*                                                                     * U6195000
*********************************************************************** U6195100
         SPACE 1                                                        U6196000
         CNOP  2,8                                                      U6197000
HQT1     LR    R0,R10              GET ADDRESS OF FIRST HQT             U6198000
         BAL   WE,HQTREAD           AND READ IT IN                      U6199000
         SPACE 1                                                        U6200000
*********************************************************************** U6200100
*                                                                     * U6201000
*        S E E   I F   H Q R   W I L L   I N S E R T                  * U6202000
*                                                                     * U6203000
*********************************************************************** U6203100
         SPACE 1                                                        U6204000
HQINSERT LH    R0,PDBDSKEY         PREPARE TO                           U6205000
         LA    WA,HQTHQR            INSERT HQR                 @OZ19494 U6206000
         L     R1,HQTHQRP            INTO                               U6207000
         LA    R14,0(WB,R1)           HQT                               U6208000
         B     HQRNXT1             BRANCH FOR 1ST HQR          @OZ19494 U6208100
         SPACE 1                                                        U6209000
HQRNEXT  LA    WA,HQRLENG(,WA)     POINT TO NEXT HQR IN HQT             U6210000
HQRNXT1  CLR   WA,R14              IF BEYOND LAST HQR,         @OZ19494 U6211000
         BE    HTESTEND             BR TO TEST FOR ROOM AT END          U6212000
         CH    R0,PDBDSKEY-PDBDSECT+HQRPDDB  IF DD NUMBER IS HIGH,      U6213000
         BH    HQRNEXT                        LOOP                      U6214000
         BL    HQRNEW              IF LOW, BR TO TRY TO INSERT       R4 U6215000
         CLC   HQRIOT,HQRIOT-HQRDSECT+PCEHQR  TEST IOT ADDR          R4 U6215100
         BNE   HQRNEXT             LOOP IF UNIQUE (MULTIPLE DEST'N)  R4 U6215200
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA R4 U6215300
         LH    R1,JQEHLDCT         DECREMENT                         R4 U6215400
         SL    R1,=A(X'10')         HOLD                             R4 U6215500
         STH   R1,JQEHLDCT           COUNT                           R4 U6215600
        $QCKPT (WD)                FORCE CHECKPOINT OF JQE           R4 U6215700
         B     HIOTFREE            BR TO FREE REDUNDANT IOT          R4 U6215800
         SPACE 1                                                     R4 U6215900
HQRNEW   TM    HQTFLAG1,HQT1HQT1   IF FIRST HQT FOR JOB,             R4 U6216000
         BO    HQRINSRT             BR TO INSERT HQR                    U6217000
         CH    R0,PDBDSKEY-PDBDSECT+HQRPDDB-HQRDSECT+HQTHQR             U6218000
         BNL   HQRINSRT            BR IF HQR TO BE INSERTED    @OZ25954 U6219000
         TM    HQTFLAG1,HQT1CKPT   IF HQT NOT UPDATED,                  U6220000
         BZ    HQT1                 BR TO READ FIRST HQT                U6221000
         BAL   WE,HQTWRITE           ELSE RE-WRITE CURRENT HQT          U6222000
         B     HQT1                THEN BR TO READ FIRST HQT            U6223000
         EJECT                                                          U6224000
*********************************************************************** U6224100
*                                                                     * U6225000
*        H Q R   W O N ' T   I N S E R T   - -   T R Y   T O   A D D  * U6226000
*                                                                     * U6227000
*********************************************************************** U6227100
         SPACE 1                                                        U6228000
         CNOP  0,8                                                      U6229000
HTESTEND LA    WE,HQRLENG(,R1)     IF ROOM AT END                    R4 U6230000
         CH    WE,HQTLENG           OF HQT,                          R4 U6230500
         BNH   HQRADD                BR TO ADD HQR THERE             R4 U6231000
         SPACE 1                                                        U6232000
HQTNEXT  ICM   R0,15,HQTHQT        IF END OF HQT CHAIN,                 U6233000
         BZ    HQTNEW               BR TO ADD NEW HQT TO CHAIN          U6234000
         TM    HQTFLAG1,HQT1CKPT   IF HQT NOT UPDATED,                  U6235000
         BZ    *+8                  BR TO AVOID CHECKPOINT              U6236000
         BAL   WE,HQTWRITE           ELSE RE-WRITE CURRENT HQT          U6237000
         L     R0,HQTHQT           GET TRACK ADDRESS OF NEXT HQT        U6238000
         BAL   WE,HQTREAD           AND READ IT IN                      U6239000
         LA    WA,HQTHQR           POINT TO 1ST HQR IN NEW HQT          U6240000
         CLC   PDBDSKEY,PDBDSKEY-PDBDSECT+HQRPDDB  SHOULD HQR BE 1ST    U6241000
         BNL   HQINSERT            BR IF NO                             U6242000
         L     R1,HQTHQRP           ELSE PREPARE TO INSERT HQR          U6243000
         SPACE 1                                                        U6244000
*********************************************************************** U6244100
*                                                                     * U6245000
*        H Q R   W I L L   I N S E R T   - -   D O   I T              * U6246000
*                                                                     * U6247000
*********************************************************************** U6247100
         SPACE 1                                                        U6248000
         CNOP  0,8                                                      U6249000
HQRINSRT LA    R0,HQRLENG          SAVE HQR LENGTH FOR LOOP             U6250000
         LA    WE,0(WB,R1)         POINT TO NEXT AVAILABLE HQR SLOT     U6251000
         LA    R14,HQRLENG(,R1)    IF NO ROOM                        R4 U6252000
         CH    R14,HQTLENG          IN THIS HQT,                     R4 U6252500
         BH    HQROFLOW              BR TO PUSH OUT LAST HQR         R4 U6253000
         SPACE 1                                                        U6254000
*********************************************************************** U6254100
*                                                                     * U6255000
*        P U S H   D O W N   R E M A I N I N G   H Q R S              * U6256000
*                                                                     * U6257000
*********************************************************************** U6257100
         SPACE 1                                                        U6258000
HQRMOVE  LR    R14,WE              SAVE ADDRESS OF HQR(N)               U6259000
         SLR   WE,R0               DECREMENT N                          U6260000
         MVC   0(HQRLENG,R14),0(WE)  MOVE HQR(N) TO HQR(N+1)            U6261000
         CLR   WE,WA               IF HQR(N) NOT OUR SLOT,              U6262000
         BNE   HQRMOVE              LOOP                                U6263000
         SPACE 1                                                        U6264000
HQRADD   MVC   HQR,PCEHQR          MOVE HQR TO HQT                      U6265000
         LA    R1,HQRLENG(,R1)     UPDATE OFFSET OF NEXT                U6266000
         ST    R1,HQTHQRP           AVAILABLE HQR SLOT                  U6267000
         B     HQTCKPT             THEN BR TO REQUEST HQT CHECKPOINT    U6268000
         EJECT                                                          U6269000
*********************************************************************** U6269100
*                                                                     * U6270000
*        P U S H   D O W N   H Q R S ,   S A V I N G   L A S T        * U6271000
*                                                                     * U6272000
*********************************************************************** U6272100
         SPACE 1                                                        U6273000
         CNOP  0,8                                                      U6274000
HQROFLOW SLR   WE,R0               MAKE HQR(N) LAST HQR IN HQT          U6275000
         CLR   WE,WA               IF HQR(N) IN OUR SLOT,               U6276000
         BE    HQRSAVE              BR TO EXCHANGE HQRS                 U6277000
         SPACE 1                                                        U6278000
HQRFLOP  LR    R14,WE              SAVE ADDRESS OF HQR(N)               U6279000
         SLR   WE,R0               DECREMENT N                          U6280000
         XC    0(HQRLENG,R14),0(WE)  EXCHANGE                           U6281000
         XC    0(HQRLENG,WE),0(R14)   HQR(N) WITH                       U6282000
         XC    0(HQRLENG,R14),0(WE)    HQR(N+1)                         U6283000
         CLR   WE,WA               IF HQR(N) NOT IN OUR SLOT,           U6284000
         BNE   HQRFLOP              LOOP                                U6285000
         SPACE 1                                                        U6286000
HQRSAVE  XC    HQR,PCEHQR          INSERT OUR HQR                       U6287000
         XC    PCEHQR,HQR           SAVING HQR WHICH HAD                U6288000
         XC    HQR,PCEHQR            BEEN LAST HQR IN HQT               U6289000
         OI    HQTFLAG1,HQT1CKPT   THEN REQUEST HQT CHECKPOINT          U6290000
         B     HQTNEXT              AND BR TO MOV OLD HQR TO NXT HQT    U6291000
         SPACE 1                                                        U6292000
*********************************************************************** U6292100
*                                                                     * U6293000
*        O V E R F L O W I N G   T O   N E W   H Q T                  * U6294000
*                                                                     * U6295000
*********************************************************************** U6295100
         SPACE 1                                                        U6296000
         CNOP  0,8                                                      U6297000
HQTNEW   MVC   HQTHQT,IOTHQT       STORE NEW HQT CHAIN ADDRESS          U6298000
         BAL   WE,HQTWRITE          AND WRITE CURRENT HQT               U6299000
         NI    HQTFLAG1,255-HQT1HQT1  RESET 1ST HQT INDICATOR       R41 U6299500
         SPACE 1                                                        U6300000
HQR1     MVC   PCESEEK,IOTHQT      SET SEEK ADDRESS FOR $EXCP           U6301000
         MVC   HQTHQR,PCEHQR       MOVE HQR TO NEW HQT                  U6302000
         LA    R1,HQTHQR+HQRLENG-HQTDSECT  RESET OFFSET OF NEXT         U6303000
         ST    R1,HQTHQRP                   AVAILABLE HQR SLOT          U6304000
         XC    HQTHQT,HQTHQT       SHOW HQT IS END OF CHAIN             U6305000
         EJECT                                                          U6306000
*********************************************************************** U6306100
*                                                                     * U6307000
*        H Q R   I N S E R T E D   - -   R E Q U E S T   C K P T      * U6308000
*                                                                     * U6309000
*********************************************************************** U6309100
         SPACE 1                                                        U6310000
         CNOP  0,8                                                      U6311000
HQTCKPT  OI    HQTFLAG1,HQT1CKPT   REQUEST HQT CHECKPOINT               U6312000
         SPACE 1                                                        U6313000
HIOTFREE LH    R0,IOTLENG          GET LENGTH OF IOT                    U6314000
         ICM   R0,8,=AL1(231)      PROVIDE BUFFER SUBPOOL NUMBER        U6315000
         MVC   $SVHOLDQ,IOTIOT     DE-QUEUE THE IOT                     U6316000
         LR    R1,IOT              RELOAD IOT ADDRESS                   U6317000
         FREEMAIN R,LV=(0),A=(1)   FREE THE IOT BUFFER                  U6318000
         LR    R1,WD               PREPARE TO                           U6319000
         SL    R1,$JOBQPTR          SCAN REMAINING                      U6320000
         LA    IOT,$SVHOLDQ-(IOTIOT-IOTDSECT)  HOLD REQUESTS            U6321000
         SPACE 1                                                        U6322000
HNEXTIOT LR    WE,IOT              IF NO MORE                           U6323000
         ICM   IOT,15,IOTIOT        HOLD REQUESTS,                      U6324000
         BZ    HENDJOB               BR TO END JOB PROCESSING           U6325000
         CL    R1,IOTJQOFF         IF REQUEST NOT FOR SAME JOB,         U6326000
         BNE   HNEXTIOT             LOOP                                U6327000
         SPACE 1                                                        U6328000
*********************************************************************** U6328100
*                                                                     * U6329000
*        S A M E   J O B   - -   M A K E   R E Q U E S T   N O .   1  * U6330000
*                                                                     * U6331000
*********************************************************************** U6331100
         SPACE 1                                                        U6332000
         MVC   IOTIOT-IOTDSECT(,WE),IOTIOT  DE-QUEUE REQUEST            U6333000
         MVC   IOTIOT,$SVHOLDQ     RE-QUEUE REQUEST                     U6334000
         ST    IOT,$SVHOLDQ         TO TOP OF QUEUE                     U6335000
         BAL   WE,HQRBLD           BUILD HQR IN PCEWORK             R41 U6336000
         B     HQINSERT            THEN BR TO INSERT NEW HQR            U6337000
         EJECT                                                       R4 U6337100
*********************************************************************** U6337200
*                                                                     * U6339000
*        E N D   O F   R E Q U E S T S   F O R   T H I S   J O B      * U6340000
*                                                                     * U6341000
*********************************************************************** U6341100
         SPACE 1                                                        U6342000
         CNOP  0,8                                                      U6343000
HENDJOB  TM    HQTFLAG1,HQT1CKPT   IF HQT NOT UPDATED,                  U6344000
         BZ    *+8                  BR TO AVOID CHECKPOINT              U6345000
         BAL   WE,HQTWRITE           ELSE RE-WRITE CURRENT HQT          U6346000
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    U6347000
         NI    JQEHQLOK,255-QUEBUSY  REMOVE JOB HOLD QUEUE LOCK         U6348000
         LA    WD,0(,WD)           PURIFY JQE ADDRESS          @OZ35901 U6348500
        $QCKPT (WD)                FORCE CHECKPOINT OF JQE              U6349000
         B     HQSRCH              THEN LOOK FOR MORE WORK TO DO        U6350000
         TITLE 'HASP HOLD QUEUE PROCESSOR -- SUPPORT ROUTINES'          U6351000
*********************************************************************** U6351100
*                                                                     * U6352000
*        H Q T   R E A D / W R I T E   R O U T I N E S                * U6353000
*                                                                     * U6354000
*                                                                     * U6354100
*              SEEK ADDRESS PROVIDED IN R0 (READ ONLY)                * U6356000
*                                                                     * U6357000
*              REGISTERS R14 AND R15 DESTROYED                        * U6358000
*              CONDITION CODE VALID ON RETURN                         * U6359000
*                                                                     * U6359100
*********************************************************************** U6359200
         SPACE 3                                                        U6360000
         CNOP  0,8                                                      U6361000
HQTWRITE MVI   PCEDEVTP,PCEDAWR    INDICATE WRITE                       U6362000
         NI    HQTFLAG1,255-HQT1CKPT  RESET CHECKPOINT FLAG (IF ANY)    U6363000
         B     HEXCP               THEN BR TO INITIATE I/O              U6364000
         SPACE 1                                                        U6365000
         CNOP  0,8                                                      U6366000
HQTREAD  ST    R0,PCESEEK          SET NEW TRACK ADDRESS FOR $EXCP      U6367000
         MVI   PCEDEVTP,PCEDARD     AND INDICATE READ                   U6368000
         SPACE 1                                                        U6369000
HEXCP    LA    R1,PCEDADCT         GET DIRECT ACCESS DCT ADDRESS        U6370000
        $EXCP  (R1),WAIT=YES       READ/WRITE HQT                    R4 U6371000
         BM    HQTBAD              BR IF I/O ERROR                   R4 U6372000
         CLI   PCEDEVTP,PCEDAWR    IF WRITE REQUEST,                    U6377000
         BER   WE                   RETURN                              U6378000
         CLC   HQTJBKEY,IOTJBKEY   VALIDITY CHECK HQT                   U6379000
         BNE   HQTBAD              JOBKEYS DON'T MATCH.        @OZ35742 U6379200
         CLC   HQTID,=CL4'HQT'     CHECK FOR VALID HQT         @OZ35742 U6379400
         BER   WE                  RETURN IF OK                         U6380000
         SPACE 1                                                     R4 U6381000
*********************************************************************** U6381200
*                                                                     * U6383000
*        E R R O R   R E A D I N G / W R I T I N G   H Q T            * U6384000
*                                                                     * U6385000
*********************************************************************** U6385100
         SPACE 1                                                        U6386000
HQTBAD  $DISTERR                   ISSUE DISASTEROUS ERROR MESSAGE      U6389000
         NI    HQTFLAG1,255-HQT1CKPT  PREVENT FURTHER I/O               U6390000
         LTR   IOT,IOT             IF IOT HAS BEEN FREED,               U6391000
         BZ    HENDJOB              BR TO END-OF-JOB PROCESSING         U6392000
         ICM   WD,8,=AL1(X'80')      ELSE FORCE END-OF-JOB PROCESS'G    U6393000
         B     HIOTFREE               AND BR TO FREE THE IOT            U6394000
         EJECT                                                          U6395000
*********************************************************************** U6395100
*                                                                     * U6396000
*        B U I L D   H Q R   I N   P C E H Q R                        * U6397000
*                                                                     * U6398000
*                                                                     * U6398100
*              ON ENTRY REGISTER WF POINTS TO SPIN IOT                * U6400000
*                                                                     * U6401000
*              HELD DATA SET PDDB ADDRESS RETURNED IN REGISTER WC     * U6402000
*              REGISTER R15 DESTROYED                                 * U6403000
*              RETURN CODE N/A                                        * U6404000
*                                                                     * U6404100
*********************************************************************** U6404200
         SPACE 3                                                        U6405000
         USING HQRDSECT,R15        PROVIDE HQR ADDRESSABILITY           U6406000
         SPACE 1                                                        U6407000
         CNOP  0,8                                                      U6408000
HQRBLD  $TIME                      GET DATE IN R1                   R41 U6409000
         LA    R15,PCEHQR          POINT TO WORK AREA FOR HQR       R41 U6409100
         MVC   HQRIOT,IOTTRACK     MOVE PERTINENT                       U6410000
         MVC   HQRIOTTR,IOTIOTTR    IOT FIELDS                          U6411000
         L     PDDB,$IOTPDDB         FROM IOT                        R4 U6412000
         ALR   PDDB,IOT               TO                             R4 U6412500
         MVC   HQRPDDB,PDBDSECT        HQR                           R4 U6413000
         ST    R1,HQRCRDT          STORE CREATION DATE              R41 U6413100
         MVI   HQRSTAT,0           ASSUME NON-ALLOCATION IOT            U6414000
         TM    PDBFLAG1,PDB1NULL+PDB1NSOT  IF DATA SET                  U6415000
         BZ    *+8                          NOT PRINTABLE,              U6416000
         OI    HQRSTAT,HQRUNHLD              INDICATE NOT HELD          U6417000
         TM    IOTFLAG1,IOT1ALOC   TEST FOR ALLOCATION IOT              U6418000
         BZR   WE                  RETURN IF NO                     R41 U6419000
         OI    HQRSTAT,HQRTGMAP     ELSE UPDATE HQR                     U6420000
         BR    WE                    AND RETURN                     R41 U6421000
         SPACE 1                                                        U6422000
         DROP  R15                 KILL HQR ADDRESSABILITY              U6423000
         SPACE 1                                                        U6424000
         DROP  WA,WB,WD,WG,IOT,PDDB  KILL CTL BLOCK ADDRESSABILITY      U6425000
         SPACE 5                                                        U6426000
         LTORG                                                          U6427000
         TITLE 'HASP TIME EXCESSION PROCESSOR'                          U6708000
*********************************************************************** U6710000
*                                                                     * U6712000
* PROCESSOR NAME -- HASPTIME                                          * U6714000
*                                                                     * U6716000
* DESCRIPTIVE NAME -- JES2 TIME EXCESSION PROCESSOR                   * U6718000
*                                                                     * U6720000
* FUNCTION -- MONITOR THE REAL TIME IN EXECUTION OF JOBS IN EXECUTION * U6722000
*             BY CLASS AND ISSUE APPROPRIATE MESSAGES TO SYSTEM       * U6724000
*             OPERATOR WHEN THOSE JOBS EXCEED THEIR ESTIMATED REAL    * U6726000
*             EXECUTION TIME.                                         * U6728000
*                                                                     * U6730000
* NOTES -- 1) ALL JOBS EXECUTING BY CLASS ARE MONITORED CONCURRENTLY. * U6732000
*                                                                     * U6734000
*          2) ONCE THE ORIGINAL TIME ESTIMATE FOR A JOB HAS BEEN      * U6736000
*             REACHED (AND THE FIRST 'TIME-EXCEEDED' MESSAGE HAS BEEN * U6738000
*             ISSUED), SUBSEQUENT MESSAGES WILL BE ISSUED AT AN       * U6740000
*             INTERVAL DEFINED BY THE &TIMEXS PARAMETER.              * U6740100
*                                                                     * U6744000
* REGISTER CONVENTIONS -- R0  -- WORK REGISTER                        * U6746000
*                         R1  -- WORK REGISTER                        * U6748000
*                         WA  -- SJB ADDRESS                          * U6750000
*                         WB  -- WORK REGISTER                        * U6752000
*                         WG  -- SSVT ADDRESS                         * U6754000
*                         JCT -- JCT ADDRESS                          * U6756000
*                                                                     * U6758000
*********************************************************************** U6760000
         EJECT                                                          U6762000
*********************************************************************** U6762100
*                                                                     * U6764000
*        H A S P T I M E   N O R M A L   R E G I S T E R   U S A G E  * U6766000
*                                                                     * U6768000
*                                                                     * U6768100
*        WA    ADDRESS OF SJB                                         * U6772000
*        WG    ADDRESS OF SSVT                                        * U6774000
*                                                                     * U6774100
*********************************************************************** U6774200
         SPACE 3                                                        U6778000
*********************************************************************** U6778100
*                                                                     * U6780000
*        H A S P T I M E   I N I T I A L   E N T R Y   P O I N T      * U6782000
*                                                                     * U6784000
*********************************************************************** U6784100
         SPACE 2                                                        U6786000
         USING SJBDSECT,WA         PROVIDE SJB ADDRESSABILITY           U6788000
         USING $SVDSECT,WG         PROVIDE SSVT ADDRESSABILITY          U6790000
         SPACE 2                                                        U6792000
HASPTIME $ENTRY BASE=BASE2         PROVIDE PROCESSOR ENTRY POINT        U6794000
         L     WG,$SSVT            GET ADDRESS OF SSVT                  U6796000
         B     TMSEARCH             AND BR TO LOOK FOR WORK             U6798000
         SPACE 1                                                        U6800000
         CNOP  0,8                                                      U6802000
TMWAIT   CLI   $SVXSTIM,0          TEST $$POST ELEMENT                  U6804000
         BNE   TMSEARCH            BR IF 'RECENTLY' $$POSTED            U6806000
        $WAIT  WORK                 ELSE $WAIT FOR SOMEONE TO $POST US  U6808000
         SPACE 1                                                        U6810000
TMSEARCH LA    WA,$SVJXCLS-(SJBXQCHN-SJBDSECT)  SET UP TO SCAN SJBS     U6812000
         MVI   $SVXSTIM,0          RESET $$POST ELEMENT                 U6814000
         SPACE 1                                                        U6816000
TMSJBNXT L     WA,SJBXQCHN         GET ADDRESS OF NEXT SJB              U6818000
         LTR   WA,WA               TEST FOR END OF SJB CHAIN            U6820000
         BZ    TMWAIT              BR IF SO                             U6822000
         L     WB,SJBXSTIM         GET TIME EXCESSION (IF ANY)          U6824000
         LTR   WB,WB                AND TEST                            U6826000
         BM    TMINIT              BR IF JOB BEGINNING EXECUTION        U6828000
         TM    SJBSTQE+IPOST,X'80' HAS TIME INTERVAL EXPIRED...         U6830000
         BZ    TMSJBNXT            BR IF NO                             U6832000
         MVC   PCEWORK(L'TIMEMSG1+L'TIMEMSG2),TIMEMSG1  MOVE MSG        U6842000
         L     JCT,SJBJQOFF        GET JQE ADDRESS INTO        @OZ40028 U6842100
         EJECT                                                       R4 U6842300
         AL    JCT,$JOBQPTR         JCT FOR $WTO               @OZ40028 U6843000
         LA    R0,L'TIMEMSG1       ASSUME 1ST 'EXCEEDED' MESSAGE        U6844000
         CL    WB,=F'1'            TEST ASSUMPTION                      U6846000
         BL    TIMEWTO             BR IF VALID                          U6848000
         LA    R0,L'TIMEMSG1+L'TIMEMSG2  ELSE CORRECT LENGTH            U6850000
         BH    *+6                 BR IF EXCEEDED BY MORE THAN 1 MINUTE U6852000
         BCTR  R0,0                 ELSE RE-CORRECT LENGTH              U6854000
         CVD   WB,PCER1                           EDIT EXCESSION        U6856000
         MVC   PCEWORK+L'TIMEMSG1+4(3),=X'202120'  AMOUNT               U6858000
         ED    PCEWORK+L'TIMEMSG1+3(4),PCER1+6      INTO MESSAGE        U6860000
         SPACE 1                                                        U6862000
TIMEWTO $WTO   PCEWORK,(R0),ROUTE=$LOG+$MAIN,JOB=YES, ISSUE MSG     R41CU6862100
               PRI=$ST,CLASS=$ACTION,WAIT=NO           TO OPERATOR   R4 U6862200
         SLR   R1,R1               UPDATE                            R4 U6867000
         IC    R1,$TIMEXS           EXCESSION                        R4 U6868000
         ALR   WB,R1                 AMOUNT                          R4 U6869000
         M     R0,=F'60'           RESET TIME                        R4 U6870000
         ST    R1,SJBSTQE+ITIME     INTERVAL                         R4 U6871000
         ST    WB,SJBXSTIM         STORE UPDATED TIME EXCESSION         U6872000
         SPACE 1                                                        U6874000
TIMESET $STIMER SJBSTQE            ISSUE STIMER FOR NEW INTERVAL        U6876000
         B     TMSJBNXT            THEN BR TO LOOK FOR MORE WORK        U6878000
         SPACE 1                                                        U6880000
         CNOP  0,8                                                      U6882000
TMINIT   LPR   R1,WB               MAKE INITIAL ESTIMATE POSITIVE       U6884000
         SLR   WB,WB               RESET FIRST TIME                     U6886000
         ST    WB,SJBXSTIM          ENTRY INDICATOR                     U6888000
         C     R1,=A(24*60*60)     TEST FOR 24 HOURS OR MORE            U6890000
         BNL   TMSJBNXT            IGNORE IF SO                         U6892000
         ST    R1,SJBSTQE+ITIME     ELSE SET ORIGINAL TIME ESTIMATE     U6894000
         ST    SAVE,SJBSTQE+IPOST  STORE PCE ADDRESS IN TQE             U6896000
         B     TIMESET             THEN BR TO ISSUE FIRST STIMER        U6898000
         SPACE 1                                                        U6900000
TIMEMSG1 $MSG  308,'ESTIMATED TIME EXCEEDED'                        R41 U6900100
TIMEMSG2 DC    C' BY XXX MINUTES'  REST OF MSG WHEN LONG FORM           U6904000
         SPACE 1                                                        U6906000
         DROP  WA,WG               KILL PROCESSOR ADDRESSABILITY        U6908000
         SPACE 1                                                        U6910000
         LTORG                                                          U6912000
         TITLE 'HASP PROCESS SYSOUT SUPPORT -- INITIAL ENTRY POINT'     U6916000
*********************************************************************** U6918000
*                                                                     * U6920000
* PROCESSOR NAME -- HASPPSO                                           * U6922000
*                                                                     * U6924000
* DESCRIPTIVE NAME -- JES2 PROCESS SYSOUT PROCESSOR                   * U6926000
*                                                                     * U6928000
* FUNCTION -- PROVIDE DATA SET NAMES AND CHARACTERISTICS OF SUB-SYSTEM* U6930000
*             DATA SETS TO CONVERSATIONAL TERMINAL SYSTEMS AND TO     * U6932000
*             EXTERNAL WRITERS.                                       * U6934000
*                                                                     * U6936000
* NOTES -- 1)  THE PRIMARY CONTROL BLOCK USED BY HASPPSO IS THE PSO.  * U6938000
*              THE PSO CONTAINS A COPY OF THE SSOB PROCESS SYSOUT     * U6940000
*              EXTENSION AND OTHER INFORMATION REQUIRED TO SELECT     * U6942000
*              DATA SETS IN SOME SORT OF SEQUENCE WITHIN A JOB.       * U6944000
*                                                                     * U6946000
*          2)  REQUESTS CAN BE MADE EITHER FOR HELD DATA SETS OR FOR  * U6948000
*              DATA SETS REPRESENTED IN THE JOT.  HOWEVER, REQUESTORS * U6950000
*              ACCESSING THE JOT DATA SETS ARE ONLY ALLOWED TO DELETE * U6952000
*              THEM WHEN THRU USING THEM.  HELD DATA SETS, ON THE     * U6954000
*              OTHER HAND, MAY BE LEFT ON THE HOLD QUEUE, DELETED,    * U6956000
*              RELEASED (TO THE JOT), RE-ROUTED, CHECKPOINTED, OR HAVE* U6958000
*              THEIR SYSOUT CLASS CHANGED.                            * U6960000
*                                                                     * U6962000
*          3)  REQUESTS FOR DATA SETS IN THE JOT COMPETE FOR JOES ON  * U6964000
*              AN EQUAL BASIS WITH THE JES2 PRINT/PUNCH PROCESSOR(S). * U6966000
*                                                                     * U6968000
*          4)  TO IMPROVE THE PERFORMANCE OF THIS PROCESSOR -         * U6970000
*                                                                     * U6972000
*              A)  IOTS FOR HELD DATA SETS, SINCE THEY CONTAIN ONLY A * U6974000
*                  SINGLE PDDB, ARE RE-CREATED FROM THE HQT, IF       * U6976000
*                  POSSIBLE (I.E. NON-ALLOCATION IOTS ONLY).          * U6978000
*              B)  PERMANENT STORAGE IS OBTAINED, VIA GETMAIN, TO     * U6980000
*                  SERVE AS BUFFER STORAGE FOR AN IOT AND AN HQT.     * U6982000
*                  WHEN THE PROCESSOR HAS NO MORE WORK TO DO, THE     * U6984000
*                  PAGE(S) CONTAINING THE BUFFERS IS RELEASED.        * U6986000
*                                                                     * U6988000
* REGISTER CONVENTIONS -- R0  -- WORK REGISTER                        * U6990000
*                         R1  -- JQE ADDRESS                          * U6992000
*                        *WA  -- HQR ADDRESS                          * U6994000
*                        *WB  -- HQT ADDRESS                          * U6998000
*                         WC  -- PDDB ADDRESS                         * U7000000
*                         WD  -- PSO ADDRESS                          * U7002000
*                         WE  -- WORK/LINK REGISTER                   * U7004000
*                         WF  -- IOT ADDRESS                          * U7006000
*                       **WG  -- JOE ADDRESS                          * U7007000
*                       **JCT -- JCT ADDRESS                          * U7008000
*                                                                     * U7009000
*                        *    -- (HELD DATA SET REQUESTS ONLY)        * U7010000
*                       **    -- (JOT REQUESTS ONLY)                  * U7011000
*                                                                     * U7012000
*********************************************************************** U7014000
         EJECT                                                          U7016000
*********************************************************************** U7016100
*                                                                     * U7018000
*        H A S P P S O   I N I T I A L   E N T R Y   P O I N T        * U7020000
*                                                                     * U7022000
*********************************************************************** U7022100
         SPACE 2                                                        U7024000
         USING JQEDSECT,R1         PROVIDE JQE ADDRESSABILITY           U7026000
         USING HQRDSECT,WA         PROVIDE HQR ADDRESSABILITY           U7028000
         USING HQTDSECT,WB         PROVIDE HQT ADDRESSABILITY           U7029000
         USING PSODSECT,WD         PROVIDE PSO ADDRESSABILITY           U7030000
         USING IOTDSECT,IOT        PROVIDE IOT ADDRESSABILITY           U7034000
         SPACE 2                                                        U7038000
HASPPSO  $ENTRY  BASE=BASE2        PROVIDE PROCESSOR ENTRY POINT        U7040000
         SPACE 1                                                        U7042000
*********************************************************************** U7042100
*                                                                     * U7042200
*        C O M P U T E   S T O R A G E   R E Q U I R E M E N T        * U7042300
*                                                                     * U7042400
*********************************************************************** U7042500
         SPACE 1                                                        U7042600
         LH    R1,$BUFLENG         GET TOTAL SINGLE BUFFER SIZE      R4 U7042700
         LR    WA,R1               TENTATIVE ADDR OF NEXT BUFFER     R4 U7042800
         LR    R0,WA               R0 = STARTING ADDR OF NEXT BUFFER    U7042900
         SRL   R0,12                DIVIDED BY 4K                       U7043000
         ALR   R1,WA               R1 = ADDRESS OF LAST BYTE            U7043100
         BCTR  R1,0                 OF NEXT BUFFER                      U7043200
         SRL   R1,12                 DIVIDED BY 4K                      U7043300
         CLR   R0,R1               IF BUFFER CROSSES 4K BOUNDARY,       U7043400
         BE    *+10                 BR TO USE TENTATIVE BUFFER ADDR     U7043500
         SLL   R1,12                 ELSE USE NEXT 4K BOUNDARY AS       U7043600
         LR    WA,R1                  STARTING ADDR OF NEXT BUFFER      U7043700
         LR    WB,WA               SAVE RELATIVE ADDR OF NEXT BUFFER    U7043800
         AH    WA,$BUFLENG         R0 = TOTAL BUFFER STORAGE         R4 U7043900
         LA    R0,4095(,WA)         REQUIREMENT ROUNDED                 U7044000
         SRL   R0,12                 UP TO NEXT                         U7044100
         SLL   R0,12                  4K BOUNDARY                       U7044200
         ST    R0,TBUFSIZE         SAVE BUFFER STORAGE REQUIREMENT      U7044300
         EJECT                                                          U7044400
*********************************************************************** U7044500
*                                                                     * U7044600
*        G E T   P E R M A N E N T   B U F F E R   S T O R A G E      * U7044700
*                                                                     * U7048000
*********************************************************************** U7048100
         SPACE 1                                                        U7050000
         GETMAIN RC,LV=(0),BNDRY=PAGE  THEN GET THE BUFFER STORAGE      U7054000
         LR    IOT,R1              ASSIGN 1ST BUFFER TO IOT             U7056000
         ALR   WB,R1               ASSIGN 2ND BUFFER TO HQT             U7057000
         ICM   IOT,8,=AL1(X'80')   SHOW BUFFERS PAGE-RELEASED           U7058000
         LTR   R15,R15             TEST GETMAIN                         U7061000
         BZ    TQSEARCH            BR IF VALID TO PROCESS               U7062000
T01     $ERROR                      ELSE CRUMP                          U7064000
         SPACE 1                                                        U7066000
TBUFSIZE DC    A(*-*)              TOTAL PERMANENT BUFFER STORAGE    R4 U7068000
         TITLE 'HASP PROCESS SYSOUT SUPPORT -- MAIN PROCESSOR $WAIT'    U7070000
         USING SJBDSECT,WC         PROVIDE SJB ADDRESSABILITY           U7078000
         USING $SVDSECT,WE         PROVIDE SVT ADDRESSABILITY           U7080000
         SPACE 1                                                        U7082000
         CNOP  0,8                                                      U7084000
TWAIT1   CLI   $SVPSO,0            TEST $$POST ELEMENT                  U7086000
         BNE   TQSEARCH            BR IF 'RECENTLY' $$POSTED            U7088000
         LTR   IOT,IOT             HAVE BFRS BEEN PAGE-RELEASED...      U7090000
         BM    TJBWAIT             BR IF SO                             U7092000
        $PGSRVC RLSE,(IOT),TBUFSIZE ELSE RELEASE THEM                R4 U7092100
         ICM   IOT,8,=AL1(X'80')   SHOW BUFFERS PAGE-RELEASED           U7096000
         SPACE 1                                                        U7098000
TJBWAIT $WAIT  WORK                $WAIT UNTIL $$POSTED                 U7100000
         SPACE 1                                                        U7102000
*********************************************************************** U7102100
*                                                                     * U7104000
*        S E A R C H   P R O C E S S   S Y S O U T   Q U E U E        * U7106000
*                                                                     * U7108000
*********************************************************************** U7108100
         SPACE 1                                                        U7110000
TQSEARCH L     WE,$SSVT            GET SSVT ADDRESS                     U7112000
         MVI   $SVPSO,0            RESET $$POST ELEMENT                 U7114000
         ICM   WD,15,$SVPRGQ       IF PSO PURGE Q IS EMPTY,    @OZ40277 U7114300
         BZ    TQOQUE               THEN GO CHECK $OQUEUE      @OZ40277 U7114600
         L     R1,PSONEXT          DEQUEUE THE PSO             @OZ40277 U7114900
         ST    R1,$SVPRGQ           FROM THE $SVPRGQ AND       @OZ40277 U7115200
         B     T2NDARY               BRANCH TO PROCESS IT      @OZ40277 U7115500
TQOQUE   L     WD,$OQUEUE          IF GROUP REQUEST RESULTING  @OZ40277 U7116000
         LTR   WD,WD                FROM $O COMMAND,                    U7117000
         BNZ   TJOBLOC               BR TO PROCESS IT                   U7118000
         LM    WC,WD,$SVPSOQ       LOAD PROCESS SYSOUT HEADER           U7120000
         SPACE 1                                                        U7122000
TQNEXT   LTR   WC,WC               TEST FOR EMPTY QUEUE                 U7124000
         BZ    TWAIT1              BR IF SO                             U7126000
         MVI   SJBTFLOW,255        SET HASP REFERENCE FLAG              U7128000
         L     R0,SJBTCHN          LOAD ADDRESS OF NEXT SJB             U7130000
         LR    R1,WD               COPY HASH VALUE                      U7132000
         CDS   WC,R0,$SVPSOQ       TRY TO DE-QUEUE THIS SJB             U7134000
         BNE   TQNEXT              IF UNSUCCESSFUL, TRY AGAIN           U7136000
         ST    WC,$PSOPEND         SAVE SJB ADDRESS            @OZ54367 U7137000
         CLI   $SVTSLOK,0          IS IT OK TO WORK WITH SJB...         U7138000
         BE    TGOTSJB             BR IF YES                            U7140000
        $GETLOK ,                   ELSE GET SJB LOCK                   U7142000
         MVI   $SVTSLOK,0          SHOW WE HAVE CONTROL                 U7144000
        $FRELOK ,                   AND FREE THE SJB LOCK               U7146000
         SPACE 1                                                        U7148000
TGOTSJB  L     WD,SJBPSOP          GET PSO ADDRESS FROM SJB             U7149000
         ST    WC,PSOSJB           SAVE SJB ADDRESS IN PSO              U7150000
         CLI   PSOWKOFF,0          ANY JOES ALLOCATED...       @OZ40028 U7152000
         BNE   HASPWTR             BR IF YES (IGNORE HOLD)          R41 U7154000
         SPACE 1                                                        U7158000
         DROP  WC,WE               KILL SJB, SSVT ADDRESSABILITY        U7160000
 TITLE 'HASP PROCESS SYSOUT SUPPORT -- CONVERSATIONAL REQUEST SUPPORT'  U7222000
         CLC   PSOIOTTR,$ZEROS     HELD DATA SET ALLOCATED...  @OZ31509 U7230000
         BNZ   T2NDARY             BR IF YES (ASSUME HOLD)          R41 U7232000
         TM    PSOFLG1,PSOFHLD     REQUEST FOR HELD DATA SET...@OZ19449 U7234000
         BZ    HASPWTR             BR IF NO TO XWTR SUPPORT         R41 U7236000
         MVI   PSORETN+3,PSOFEODS  SET GROUP RQST 'NO DATA SET' FLAG R4 U7237000
         TM    PSOFLG1,PSOFJOBI    TEST JOB ID REQUIREMENT              U7238000
         BZ    TSTNMREQ            BR IF NO                             U7240000
         SPACE 1                                                        U7242000
*********************************************************************** U7242100
*                                                                     * U7244000
*        L O C A T E   J O B   B Y   H A S P   J O B   I D            * U7246000
*                                                                     * U7248000
*********************************************************************** U7248100
         SPACE 1                                                        U7250000
TJOBLOC $QLOC  PSOJOBNO            TRY TO LOCATE JOB BY JOB NUMBER      U7252000
         BNZ   TNUMOK              BR IF JOB LOCATED                    U7252800
         TM    PSOFLG1,PSOFJOBN    IF JOB NAME NOT REQUIRED,            U7253600
         BZ    TRCNOJOB             BR TO INDICATE JOB NOT FOUND        U7254400
         BAL   LINK,TLOCBYNM       IF JOB NOT FOUND BY NAME,            U7255200
         BNZ   TRCNOJOB             BR TO INDICATE SO                   U7256000
         SPACE 1                                                        U7256800
TRCINVJ  LA    R0,PSOFINVJ         INDICATE INVALID JOB NAME/ID         U7257600
         B     TPOST                AND BR TO POST WAITING TASK         U7258400
         SPACE 1                                                        U7259200
TSTNMREQ $QSUSE                    REQUEST ACCESS TO CHECKPOINT DATA R4 U7260800
         TM    PSOFLG1,PSOFJOBN    IF JOB NAME REQUIRED,                U7261600
         BO    TFINDNM              BR TO LOCATE BY JOB NAME            U7262400
         SLR   R15,R15               ELSE PREPARE TO                    U7267200
         LA    R14,$JQTYPES*2         SCAN ACTIVE JOB QUEUES            U7268000
         SPACE 1                                                        U7268800
TNXTQUE1 LA    R15,2(,R15)         BUMP QUEUE OFFSET                    U7269600
         CLR   R15,R14             IF END OF ALL QUEUES,                U7270400
         BH    TRCEODS              BR TO SHOW NO HELD OUTPUT           U7271200
         LA    R1,$JQHEADS-2-QUECHAIN(R15)  PREPARE TO SCAN JOB Q       U7272000
         SPACE 1                                                        U7272800
TNXTJQE1 LH    R1,JQECHAIN         GET OFFSET                           U7273600
         N     R1,=X'0000FFFF'      OF NEXT JQE                         U7274400
         BZ    TNXTQUE1            BR IF END OF QUEUE                   U7275200
         SLL   R1,2                 ELSE CONVERT OFFSET                 U7276000
         AL    R1,$JOBQPTR           TO ABSOLUTE ADDRESS                U7276800
         LH    R0,JQEHLDCT         IF NO HELD                           U7277600
         LTR   R0,R0                DATA SET(S) IN JOB,                 U7278400
         BZ    TNXTJQE1              LOOP                               U7279200
         CLC   PSOPGMN,WTR3540     IF CALLER NOT 3540 EXT WTR  @Y30O    U7279300
         BNE   TGOTJOB              GET HOLD QUEUE LOCK        @Y30O    U7279400
         TM    JQEHLDCT+1,JQEHLDDS IF NO 3540 EXT WTR DATASETS @Y30O    U7279500
         BNO   TNXTJQE1             REJECT THIS, GET NEXT JQE  @Y30O    U7279600
         B     TGOTJOB                ELSE BR TO GET HOLD QUEUE LOCK    U7280000
         EJECT                                                          U7280800
*********************************************************************** U7280900
*                                                                     * U7281600
*        L O C A T E   J O B   B Y   N A M E   O N L Y                * U7282400
*                                                                     * U7283200
*********************************************************************** U7283300
         SPACE 1                                                        U7284000
         CNOP  0,8                                                      U7284800
TFINDNM  BAL   LINK,TLOCBYNM       IF JOB NOT FOUND BY NAME,            U7285600
         BNZ   TRCNOJOB             BR TO INDICATE SO                   U7286400
         ICM   WC,3,JQEHLDCT       IF JOB FOUND HAS HELD DATA SETS,     U7287200
         BNZ   TGOT1                BR TO TEST FOR DUPLICATE JOB        U7288000
         SPACE 1                                                        U7288800
         BAL   LINK,TNXTJQE2       IF NO OTHER JOB WITH SAME NAME,      U7289600
         BNZ   TRCEODS              BR TO SHOW NO HELD DATA SETS        U7290400
         ICM   WC,3,JQEHLDCT       IF JOB HAS NO HELD DATA SETS,        U7291200
         BZ    TNXTJQE2             RETURN TO JOB QUEUE SCAN            U7292000
         SPACE 1                                                        U7292800
TGOT1    LR    WE,R1               SAVE JQE ADDRESS                     U7293600
         BAL   LINK,TNXTJQE2       IF ANOTHER JOB WITH SAME NAME,       U7294400
         BZ    TWINS                BR TO TEST FOR HELD DATA SETS       U7295200
         LR    R1,WE                 ELSE RESTORE JQE ADDRESS           U7296000
         B     TGOTJOB                AND BR TO GET HOLD QUEUE LOCK     U7296800
         SPACE 1                                                        U7297600
TWINS    ICM   WC,3,JQEHLDCT       IF JOB HAS NO HELD DATA SETS,        U7298400
         BZ    TNXTJQE2             RETURN TO JOB QUEUE SCAN            U7299200
         SPACE 1                                                        U7300000
TRCDUPJ  LA    R0,PSOFDUPJ         INDICATE DUPLICATE JOB NAMES         U7300800
         B     TPOST                AND BR TO POST WAITING TASK         U7301600
         SPACE 1                                                        U7302400
TRCNOJOB LA    R0,PSOFNJOB         INDICATE JOB NOT FOUND               U7303200
         B     TPOST                AND BR TO POST WAITING TASK         U7304000
         EJECT                                                       R4 U7304100
*********************************************************************** U7304200
*                                                                     * U7305600
*        J O B - L O C A T E - B Y - N A M E   S U B R O U T I N E    * U7306400
*                                                                     * U7307200
*********************************************************************** U7307300
         SPACE 1                                                        U7308000
         CNOP  4,8                                                      U7308800
TLOCBYNM L     R0,$JOBQPTR         PREPARE TO SCAN                      U7309600
         SLR   R15,R15              ACTIVE JOB QUEUES                   U7310400
         SPACE 1                                                        U7311200
TNXTQUE2 LA    R15,2(,R15)         BUMP QUEUE COUNT                     U7312000
         CL    R15,=A($JQTYPES*2)  IF END OF ALL QUEUES,                U7312800
         BHR   LINK                 RETURN WITH NON-ZERO CC             U7313600
         LA    R1,$JQHEADS-2-QUECHAIN(R15)  PREPARE TO SCAN JOB Q       U7314400
         SPACE 1                                                        U7315200
TNXTJQE2 LH    R1,JQECHAIN         GET OFFSET                           U7316000
         N     R1,=X'0000FFFF'      OF NEXT JQE                         U7316800
         BZ    TNXTQUE2            BR IF END OF QUEUE                   U7317600
         SLL   R1,2                 ELSE CONVERT OFFSET                 U7318400
         ALR   R1,R0                 TO ABSOLUTE ADDRESS                U7319200
         CLI   JQETYPE,X'40'       IS JOB IN JCL CONV          @OZ24850 U7319230
         BE    TNXTJQE2            YES, CONTINUE SEARCH        @OZ24850 U7319250
*                                  THIS LINE DELETED BY APAR   @OZ36864 U7319300
*                                  THIS LINE DELETED BY APAR   @OZ36864 U7319400
         CLC   PSOJOBN,JQEJNAME    IF JOB NAME DOESN'T MATCH,           U7320000
         BNE   TNXTJQE2             LOOP                                U7320800
         BR    LINK                  ELSE RETURN WITH CC = 0            U7321600
         EJECT                                                          U7322400
*********************************************************************** U7322500
*                                                                     * U7323200
*        J O B   F O U N D   B Y   J O B   I D                        * U7324000
*                                                                     * U7324800
*********************************************************************** U7324900
         SPACE 1                                                        U7325600
         CNOP  0,8                                                      U7326400
TNUMOK   TM    PSOFLG1,PSOFJOBN    IF JOB NAME NOT REQUIRED,            U7327200
         BZ    *+14                 BR TO TEST FOR HELD DATA SETS       U7328000
         CLC   PSOJOBN,JQEJNAME    IF JOB NAME DOESN'T MATCH,           U7328800
         BNE   TRCINVJ              BR TO INDICATE SO                   U7329600
         LH    R0,JQEHLDCT         IF JOB HAS NO                     R4 U7329700
         SRA   R0,4                 HELD DATA SETS,                  R4 U7329800
         BZ    TRCEODS               BR TO INDICATE SO               R4 U7329900
         SPACE 1                                                        U7333600
*********************************************************************** U7333700
*                                                                     * U7334400
*        L O C A T E D   J O B   H A S   H E L D   D A T A   S E T    * U7335200
*                                                                     * U7336000
*********************************************************************** U7336100
         SPACE 1                                                        U7336800
TGOTJOB  LR    R0,R1               SAVE                                 U7337600
         SL    R0,$JOBQPTR          JQE                                 U7338400
         ST    R0,PSOJQEP            OFFSET                             U7339200
         MVC   PSOJOBNO,JQEJOBNO      AND HASP JOB NUMB&R               U7340000
         BAL   WE,TGETLOK          GET JOB HOLD QUEUE LOCK              U7340800
         CLC   PSOJOBNO,JQEJOBNO   IF JOB NUMBER CHANGED,               U7341600
         BNE   TLOSTJOB             JOB HAS BEEN PURGED                 U7342400
         LH    R0,JQEHLDCT         IF JOB NO LONGER                  R4 U7342500
         SRA   R0,4                 HAS HELD DATA SETS,              R4 U7342600
         BNP   TDUMPJOB              BR TO IGNORE JOB                R4 U7342700
         CLC   PSOPGMN,WTR3540     TEST FOR 3540 REQUEST             R4 U7342800
         BNE   TGOTLOK             BR IF NO                          R4 U7342900
         TM    JQEHLDCT+1,JQEHLDDS TEST FOR 3540 DATA SET(S)         R4 U7343000
         BO    TGOTLOK             BR IF YES                         R4 U7343100
         SPACE 1                                                     R4 U7346100
TDUMPJOB CLI   JQETYPE,$PURGE      IF JOB BEING PURGED,              R4 U7346400
         BE    TLOSTJOB             TREAT AS LOST JOB                   U7347200
         NI    JQEHQLOK,255-QUEBUSY  RESET HOLD QUEUE LOCK              U7348000
         TM    PSOFLG1,PSOFJOBI+PSOFJOBN  IF SPECIFIC JOB REQUEST,      U7348800
         BNZ   TRCEODS                     BR TO SHOW NO DATA SETS      U7349600
         B     TSTNMREQ                     ELSE FIND ANOTHER JOB       U7350400
         EJECT                                                       R4 U7350500
*********************************************************************** U7350600
*                                                                     * U7352000
*        J O B   E N D E D   W H I L E   G E T T I N G   L O C K      * U7352800
*                                                                     * U7353600
*********************************************************************** U7353700
         SPACE 1                                                        U7354400
TLOSTJOB NI    JQEHQLOK,255-QUEBUSY  RESET HOLD QUEUE LOCK              U7355200
         TM    PSOFLG1,PSOFJOBI+PSOFJOBN  IF SPECIFIC JOB REQUEST,      U7356000
         BNZ   TRCNOJOB                    BR TO SHOW JOB NOT FOUND     U7356800
         B     TSTNMREQ                     ELSE FIND ANOTHER JOB       U7357600
         SPACE 1                                                     R4 U7357700
*********************************************************************** U7357800
*                                                                     * U7359200
*        J O B   W I T H   H E L D   D A T A   S E T   L O C K E D    * U7360000
*                                                                     * U7360800
*********************************************************************** U7360900
         SPACE 1                                                        U7361600
         CNOP  0,8                                                      U7362400
TGOTLOK  LH    R0,JQEJOBNO         MOVE                                 U7363200
         CVD   R0,PCER1             JOB ID                              U7382000
         UNPK  PSOJOBI+3(5),PCER1+5(3)  TO                              U7384000
         OI    PSOJOBI+7,C'0'            PSO                            U7386000
         MVC   PSOJOBI(3),=C'JOB'  ASSUME BACKGROUND JOB                U7388000
         C     R0,=F'10000'        TEST ASSUMPTION                      U7390000
         BL    *+10                BR IF VALID                          U7392000
         MVC   PSOJOBI(4),=C'STC0' ASSUME STARTED TASK                  U7394000
         C     R0,=F'20000'        TEST ASSUMPTION                      U7396000
         BL    *+10                BR IF VALID                          U7398000
         MVC   PSOJOBI(3),=C'TSU'   ELSE MUST BE FOREGROUND JOB         U7400000
         MVC   PCESEEK,JQETRAK     SET SEEK ADDRESS FOR $EXCP           U7402000
         BAL   WE,TGETBUF          GET BUFFERS FOR I/O                  U7404000
         BAL   WE,THQTRD           READ IN THE JCT                      U7406000
         ICM   R0,15,JCTHQT-JCTDSECT(WB)  GET HQT ADDRESS      @OZ39316 U7407000
         BZ    TRNOHELD            BR IF NO HQT FOR JOB        @OZ39316 U7408000
         ST    R0,PSOHQT                 ELSE SAVE HQT ADDR    @OZ39316 U7410000
         ST    R0,PCESEEK                 AND READ                      U7412000
         BAL   WE,THQTRD                   IN 1ST HQT                   U7414000
         CLC   HQTID,=CL4'HQT'     IF VALID HQT,                        U7418000
         BE    THQR1                BR TO LOCATE 1ST HELD DATA SET      U7420000
         SPACE 1                                               @OZ39316 U7421000
TRNOHELD BAL   WE,TREMLOK          REMOVE JOB HOLD QUEUE LOCK  @OZ39316 U7422000
         B     TRCEODS             BR TO SHOW NO HELD OUTPUT   @OZ39316 U7424000
         EJECT                                                          U7502000
*********************************************************************** U7502100
*                                                                     * U7504000
*        S E C O N D A R Y   E N T R Y   T O   H A S P P S O          * U7506000
*                                                                     * U7508000
*********************************************************************** U7508100
         SPACE 1                                                        U7510000
         CNOP  0,8                                                      U7512000
T2NDARY  LA    PDDB,PSOPDDB        GET ADDRESS OF RETURNED PDDB         U7514000
         SPACE 1                                                        U7514500
         USING PDBDSECT,PDDB       PROVIDE PDDB ADDRESSABILITY          U7515000
         SPACE 1                                                        U7515500
         L     R1,PSOJQEP          GET JQE OFFSET FROM PSO              U7516000
         AL    R1,$JOBQPTR         CONVERT TO ABSOLUTE ADDRESS          U7518000
         BAL   WE,TGETLOK          GET JOB HOLD QUEUE LOCK              U7519000
         TM    JQEFLAGS,QUEPURGE   TEST FOR JOB BEING PURGED            U7520000
         BNO   *+8                 BR IF NO                             U7522000
         OI    PDBFLAG1,PDB1NSOT    ELSE FLAG DATASET FOR DELETION      U7524000
         TM    PSOFLG2,PSOFCKPT    TEST CHECKPOINT REQUIREMENT          U7526000
         BZ    *+10                BR IF NONE                           U7528000
         MVC   PDBRBA,PSORBA       UPDATE CHECKPOINT FIELD              U7540000
         SPACE 1                                                        U7542000
*********************************************************************** U7542100
*                                                                     * U7544000
*        T E S T   F O R   M O D I F I E D   P D D B                  * U7546000
*                                                                     * U7548000
*********************************************************************** U7548100
         SPACE 1                                                        U7550000
         BAL   WE,TGETBUF          GET BUFFER FOR HQT                   U7551000
         MVC   HQTHQT,PSOHQT       SET UP INITIAL HQT READ     @OZ31509 U7551200
*              THIS LINE DELETED BY APAR NUMBER                @OZ31509 U7551500
         SPACE 1                                               @OZ31509 U7551700
THQTNEXT MVC   PSOHQT,HQTHQT       SET UP FOR NEXT HQT READ    @OZ31509 U7552000
         MVC   PCESEEK,PSOHQT      GET TRACK ADDRESS OF HQT    @OZ31509 U7552200
*              THIS LINE DELETED BY APAR NUMBER                @OZ31509 U7552500
         BAL   WE,THQTRD           READ IN THE HQT             @OZ31509 U7552700
         L     R0,PSOIOTTR         PREPARE                     @OZ31509 U7553000
         LA    WA,HQTHQR            TO                         @OZ31509 U7553200
         SL    WA,=A(HQRLENG)        LOCATE                    @OZ31509 U7553500
         L     R1,HQTHQRP             THE                      @OZ31509 U7553700
         LA    R1,0(WB,R1)             HQR                     @OZ31509 U7554000
         SPACE 1                                               @OZ31509 U7554200
THQRNEXT LA    WA,HQRLENG(,WA)     POINT TO NEXT HQR IN HQT    @OZ31509 U7554500
         CLR   WA,R1               TEST FOR END OF HQT         @OZ31509 U7554700
         BE    THQTNEXT            BR IF YES                   @OZ31509 U7554800
         C     R0,HQRIOT           IS THIS THE HQR...          @OZ31509 U7555000
         BNE   THQRNEXT            BR IF NO                    @OZ31509 U7555200
*              THIS LINE DELETED BY APAR NUMBER                @OZ31509 U7555500
         EJECT                                                 @OZ31509 U7556000
TDISPOSE TM    HQRSTAT,HQRCAN      TEST FOR DELAYED CANCEL              U7557000
         BZ    *+8                 BR IF NO                             U7558000
         OI    PDBFLAG1,PDB1NSOT    ELSE FLAG DATASET FOR DELETION      U7560000
         TM    HQRSTAT,HQRRLSE     TEST FOR DELAYED RELEASE             U7562000
         BZ    *+8                 BR IF NO                             U7564000
         NI    PDBFLAG1,255-PDB1HOLD  ELSE RELEASE THE DATASET          U7566000
         NI    HQRSTAT,255-HQRCAN-HQRRLSE-HQRINUSE  RESET HQR FLAGS     U7567000
         OI    HQTFLAG1,HQT1CKPT   REQUEST HQT CHECKPOINT               U7568000
         CLC   HQRPDDB,PSOPDDB     TEST RETURNED PDDB FOR CHANGE        U7570000
         BE    THOLD               BR IF NO CHANGES TO PDDB             U7572000
         MVC   HQRPDDB,PSOPDDB      ELSE MOVE UPDATED PDDB TO HQR       U7574000
*              THIS LINE DELETED BY APAR NUMBER                @OZ31509 U7575000
         EJECT                                                          U7576000
*********************************************************************** U7576100
*                                                                     * U7578000
*        D I S P O S E   O F   M O D I F I E D   H Q R                * U7580000
*                                                                     * U7582000
*********************************************************************** U7582100
         SPACE 1                                                        U7584000
         L     R0,HQRIOT           GET TRACK ADDRESS OF IOT             U7588000
         ST    R0,PCESEEK           AND STORE FOR I/O                   U7590000
         ST    IOT,PCEBUFAD        SET BUFFER ADDRESS FOR $EXCP         U7591000
         TM    HQRSTAT,HQRTGMAP    TEST FOR ALLOCATION IOT              U7592000
         BZ    TNOALLOC            BR IF NO                             U7594000
         SPACE 1                                                        U7596000
*********************************************************************** U7596100
*                                                                     * U7598000
*        R E A D   I N   A L L O C A T I O N   I O T                  * U7600000
*                                                                     * U7602000
*********************************************************************** U7602100
         SPACE 1                                                        U7604000
         MVI   PCEDEVTP,PCEDARD    INDICATE READ OPERATION           R4 U7604100
         BAL   WE,TIO              READ IN THE IOT                      U7608000
         BM    TDSTERR             BR IF ERROR READING IOT           R4 U7610000
         CLC   IOTJBKEY,HQTJBKEY   TEST IOT VALIDITY                    U7612000
         BE    TIOTPUT             BR IF OK                             U7614000
         SPACE 1                                                        U7622000
TDSTERR $DISTERR                   ISSUE DISASTROUS ERROR MESSAGE       U7624000
         OI    PDBFLAG1,PDB1NSOT   INDICATE DATASET TO BE DELETED       U7626000
         OI    HQRSTAT,HQRUNHLD    SHOW DATASET NO LONGER HELD @OZ39639 U7628000
         B     TENDTEST             AND BR TO TEST NXT REQUEST @OZ39639 U7629000
         EJECT                                                          U7630000
*********************************************************************** U7630100
*                                                                     * U7632000
*        R E C O N S T R U C T   N O N - A L L O C A T I O N   I O T  * U7634000
*                                                                     * U7636000
*********************************************************************** U7636100
         SPACE 1                                                        U7638000
         CNOP  0,8                                                      U7640000
TNOALLOC MVC   IOTJBKEY,HQTJBKEY   SET                                  U7642000
         MVC   IOTTRACK,HQRIOT      UNIQUE                              U7644000
         MVC   IOTIOTTR,HQRIOTTR     IOT FIELDS                         U7646000
         L     R15,$CYLMAPL             LENGTH OF                    R4 U7650000
         LA    R15,TGMAP-TGMDSECT(,R15)  ALLOCATION BIT MAP          R4 U7651000
         LA    R14,IOTTGMAP         AND ADDR OF 1ST BYTE TO BE CLEARED  U7652000
         SLR   R1,R1               CLEAR FOR ZEROING                    U7654000
         MVCL  R14,R0              CLEAR IOT ALLOCATION BIT MAP         U7656000
         MVI   IOTFLAG1,IOT1SPIN    AND SET THE                         U7658000
         MVI   IOTFLAG2,0            IOT FLAG BYTES                     U7660000
         MVC   IOTJQOFF,PSOJQEP    SAVE JQE OFFSET FOR PRPU             U7661000
         SPACE 1                                                        U7662000
*********************************************************************** U7662100
*                                                                     * U7664000
*        R E W R I T E   U P D A T E D   I O T                        * U7666000
*                                                                     * U7668000
*********************************************************************** U7668100
         SPACE 1                                                        U7670000
TIOTPUT  L     PDDB,$IOTPDDB       POINT TO                          R4 U7671000
         ALR   PDDB,IOT             SPIN/HOLD PDDB                   R4 U7672000
         MVC   0(PDBLENG,PDDB),HQRPDDB  MOVE UPDATED PDDB TO IOT     R4 U7673000
         L     R0,$IOTPDDB         RESET                             R4 U7674000
         AL    R0,=A(PDBLENG)       ADDRESS                          R4 U7674100
         ST    R0,IOTPDDBP           OF NEXT AVAILABLE PDDB          R4 U7674200
         MVI   PCEDEVTP,PCEDAWR    SHOW WRITE OPERATION                 U7678000
         TM    PDBFLAG1,PDB1NSOT   TEST FOR DATASET TO BE DELETED       U7680000
         BO    TDELPDDB            BR IF YES                   @OZ39639 U7682000
         TM    PDBFLAG2,PDB2NEWS   JESNEWS DATA SET...         @OZ39639 U7684000
         BZ    TREWRITE            BR IF NO                    @OZ39639 U7684100
         NI    IOTFLAG1,FF-IOT1ALOC-IOT1NEWS  DISOWN JESNEWS   @OZ39639 U7684200
         OI    PDBFLAG1,PDB1NSOT   DELETE DATA SET FROM JOB    @OZ39639 U7684300
         SPACE 1                                               @OZ39639 U7684400
TDELPDDB NI    PDBFLAG1,255-PDB1HOLD-PDB1PSO  SHOW RELEASED    @OZ39639 U7684500
         TM    IOTFLAG1,IOT1ALOC   TEST FOR ALLOCATION IOT              U7686000
         BNO   TREWRITE            BR IF NO                             U7688000
        $PURGE IOTTGMAP             ELSE PURGE THE DATA SET'S TRACKS    U7690000
         NI    IOTFLAG1,255-IOT1ALOC  SHOW NO LONGER ALLOCATION IOT     U7692000
         SPACE 1                                                        U7694000
TREWRITE BAL   WE,TIO              RE-WRITE THE IOT AND WAIT ON I/O     U7696000
         TM    PDBFLAG1,PDB1HOLD   IF DATA SET TO BE RELEASED,          U7698000
         BZ    TUNHOLD              BR TO UNHOLD THE HQR                U7700000
         SPACE 1                                                        U7702000
THOLD    L     R1,PSOJQEP          GET JQE OFFSET FROM PSO              U7708000
         AL    R1,$JOBQPTR         CONVERT TO ABSOLUTE ADDRESS          U7710000
         B     TESTDONE             AND BR TO TEST NEXT REQUEST         U7712000
         EJECT                                                          U7714000
*********************************************************************** U7714100
*                                                                     * U7716000
*        U N - H O L D   A   D A T A   S E T                          * U7718000
*                                                                     * U7720000
*        SPECIAL PROCESSING IF JESNEWS DATA SET RELEASED       @OZ39639 U7720010
*                                                              @OZ39639 U7720020
*********************************************************************** U7720100
         SPACE 1                                                        U7722000
         CNOP  0,8                                                      U7724000
TUNHOLD  OI    HQRSTAT,HQRUNHLD    SHOW DATA SET NO LONGER HELD         U7726000
         TM    PDBFLAG2,PDB2NEWS   JESNEWS DATA SET...         @OZ39639 U7744000
         BZ    TUNHOLD1            BR IF NO                    @OZ39639 U7744010
         TM    IOTFLAG1,IOT1NEWS   IF IOT STILL SAYS NEWS,     @OZ39639 U7744020
         BO    TUNHOLD1             THEN DON'T UPDATE JESNEWS  @OZ39639 U7744030
         OI    IOTFLAG1,IOT1ALOC+IOT1NEWS  SET NEWS INDICATION @OZ39639 U7744040
         NI    PDBFLAG1,FF-PDB1NSOT        SHOW PRINTABLE      @OZ39639 U7744050
         MVC   IOTJBKEY,=C'$$NE'   UPDATE IOT JOB KEY          @OZ39639 U7744055
        $TRACK IOTMSTAB            OBTAIN NEW IOT MTTR         @OZ39639 U7744060
         ST    R1,IOTTRACK         UPDATE IOT TRACK ADDRESS    @OZ39639 U7744070
         ST    R1,PCESEEK           AND WRITE NEW JESNEWS      @OZ39639 U7744080
         BAL   WE,TIO                IOT TO THE SPOOL          @OZ39639 U7744090
        $QSUSE                     REGAIN ACCESS TO QUEUES     @OZ39639 U7744100
         MVC   $NEWSIOT,IOTTRACK   UPDATE JESNEWS IOT POINTER  @OZ39639 U7744110
         MVC   $NEWSTTR,PDBMTTR    UPDATE JESNEWS DS  POINTER  @OZ39639 U7744120
         L     R10,PSOJQEP         POINT TO JQE FOR            @OZ39639 U7744130
         AL    R10,$JOBQPTR         JOB=YES MESSAGE            @OZ39639 U7744140
         L     R1,=A(XNEWSMSG)     POINT TO 'JESNEWS REPLACED' @OZ39639 U7744150
        $WTO   (R1),L'XNEWSMSG,JOB=YES,  TELL OPERATOR         @OZ39639*U7744160
               ROUTE=$UR+$MAIN+$LOG,CLASS=$NORMAL,PRI=$ST      @OZ39639 U7744170
         B     TENDTEST            BR TO BYPASS JOE CREATION   @OZ45170 U7744180
         SPACE 1                                               @OZ39639 U7744190
TUNHOLD1 TM    PDBFLAG1,PDB1NULL+PDB1NSOT  IF NOT PRINTABLE,   @OZ39639 U7744200
         BNZ   TENDTEST                     BR TO TEST NEXT REQUEST     U7746000
         LA    WE,PCEWORK          POINT TO WORK AREA FOR JOES          U7750000
         SPACE 1                                                        U7760000
         USING JOEDSECT,WE         PROVIDE JOE ADDRESSABILITY           U7762000
         SPACE 1                                                        U7764000
        $#BLD  JOES=(WE),PDDB=(PDDB),JQE=PSOJQEP CREATE WK/CH JOES   R4 U7764100
         MVI   JOEFLAG,$JOESPIN    UPDATE WORK JOE TO                R4 U7764200
         MVC   JOEIOTTR,IOTTRACK    INDICATE SPUN DATA SET           R4 U7764300
         LA    R1,JOESIZE(,WE)     POINT TO CHARACTERISTICS JOE         U7772000
        $#ADD  CHAR=(R1),WORK=(WE) ADD JOE TO JOT                    R4 U7772100
         BZ    TESTEND             BR IF $#ADD SUCCESSFUL               U7774000
         EJECT                                                       R4 U7774100
*********************************************************************** U7774200
*                                                                     * U7776000
*        N O   R O O M   I N   J O T                                  * U7777000
*                                                                     * U7778000
*********************************************************************** U7778100
         SPACE 1                                                        U7779000
         NI    PDBFLAG1,255-PDB1PSO  INDICATE DATA SET                  U7780000
         OI    PDBFLAG1,PDB1HOLD      ON SPIN QUEUE (NOT IN JOT)        U7781000
         SPACE 1                                                        U7782000
TWRSPIOT MVC   IOTSPIOT,$UNSPUNQ   LIFO QUEUE                           U7783000
         BAL   WE,TIO               IOT TO                              U7784000
        $QSUSE                       SPIN QUEUE                      R4 U7785000
         CLC   IOTSPIOT,$UNSPUNQ      USING                             U7786000
         BNE   TWRSPIOT                'COMPARE AND SWAP'               U7787000
         SPACE 1                                                        U7788000
         MVC   $UNSPUNQ,IOTTRACK   UPDATE POINTER TO 1ST SPIN IOT       U7789000
                                   PRINT OFF - SECTION DELETED @OZ27300 U7790000
*                                  THIS LINE DELETED BY APAR   @OZ27300 U7791000
*                                  THIS LINE DELETED BY APAR   @OZ27300 U7792000
*                                  THIS LINE DELETED BY APAR   @OZ27300 U7793000
                                   PRINT ON  - SECTION DELETED @OZ27300 U7794000
         B     TESTDONE            BR TO CONTINUE              @OZ27300 U7795000
         SPACE 1                                                        U7800000
         DROP  WE                  KILL JOE ADDRESSABILITY              U7802000
         EJECT                                                          U7804000
         CNOP  0,8                                                      U7806000
TENDTEST $QSUSE                    REQUEST ACCESS TO CHECKPOINT DATA R4 U7807000
         SPACE 1                                                        U7808000
TESTEND  L     R1,PSOJQEP          GET JQE ADDRESS                      U7809000
         AL    R1,$JOBQPTR          FROM PSO                            U7810000
         SPACE 1                                                        U7811000
THOLDECR LH    R0,JQEHLDCT         DECREMENT                            U7812000
         SL    R0,=A(X'10')         HOLD                                U7813000
         STH   R0,JQEHLDCT           COUNT                              U7814000
         N     R0,=A(X'FFF0')        IF HOLD COUNT NOT ZERO,         R4 U7814100
         BNZ   TCKPT                  BR TO CHECKPOINT THE JQE @OZ27300 U7814200
         NI    JQEHLDCT+1,255-JQEHLDDS ELSE RESET 3540 HOLD FLAG     R4 U7814300
*                                  THIS LINE DELETED BY APAR   @OZ27300 U7815000
         CLC   JQEJOE,$ZEROS       ANY NON-HELD OUTPUT...      @OZ27300 U7816000
         BNE   TCKPT               BR IF YES TO CKPT THE JQE   @OZ27300 U7817000
         CLI   JQETYPE,$HARDCPY    IF JOB NOT IN OUTPUT PHASE,          U7818000
         BNE   TCKPT                BR TO CHECKPOINT THE JQE            U7819000
TLOKREL  NI    JQEHQLOK,FF-QUEBUSY   ELSE RELEASE HOLD Q LOCK  @OZ53687 U7820000
        $QPUT  (R1),$PURGE            AND QUEUE JOB FOR PURGE           U7821000
         CLI   PSOUFLG,0           IF GROUP REQUEST,                    U7822000
         BNE   TRCOK                BR TO POST WAITING TASK             U7823000
         TM    PSOFLG2,PSOFDONE    TEST FOR LAST REQUEST                U7838000
         BO    TRCOK               BR IF SO TO POST WAITING TASK        U7840000
         SPACE 1                                                        U7842000
TRCEODS  LA    R0,PSOFEODS         INDICATE SELECTED DATA SET NOT FOUND U7844000
         B     TPOST                AND GO TO POST WAITING TASK         U7846000
         SPACE 1                                                        U7848000
         CNOP  0,8                                                      U7850000
TCKPT   $QCKPT (R1)                FORCE CHECKPOINT OF JQE              U7852000
         BAL   WE,THQTWR            AND RE-WRITE THE HQT       @OZ40278 U7852100
         L     R1,PSOJQEP          RESTORE JQE ADDRESS         @OZ53687 U7853000
         AL    R1,$JOBQPTR            FROM PSO                 @OZ53687 U7853100
         LH    R0,JQEHLDCT         GET HOLD COUNT AFTER WRITE  @OZ53687 U7853200
         N     R0,=A(X'FFF0')      IF HOLD COUNT NOT ZERO,     @OZ53687 U7853300
         BNZ   TESTDONE              BR TO RESUME PDDB SCAN    @OZ53687 U7853400
         CLC   JQEJOE,$ZEROS       IF ANY NON-HELD OUTPUT,     @OZ53687 U7853500
         BNE   TESTDONE              BR TO RESUME PDDB SCAN    @OZ53687 U7853600
         CLI   JQETYPE,$HARDCPY    IF NO DATASETS AND JOB ...  @OZ53687 U7853700
         BE    TLOKREL               IN OUTPUT, Q FOR PURGE    @OZ53687 U7853800
         SPACE 1                                                        U7854000
TESTDONE L     R0,HQTHQRP          PREPARE TO RESUME                    U7856000
         ALR   R0,WB                PDDB SCAN                           U7858000
         CLI   PSOUFLG,0           IF GROUP REQUEST,                    U7859000
         BNE   TNXTHQR              BR TO TEST NEXT HQR                 U7860000
         TM    PSOFLG2,PSOFDONE    IF NOT LAST REQUEST,                 U7861000
         BZ    TNXTHQR              BR TO TEST NEXT HQR                 U7862000
         TM    HQTFLAG1,HQT1CKPT   IF HQT NOT UPDATED,               R4 U7863000
         BZ    SKIP40               BR TO AVOID CHECKPOINT           R4 U7863500
         BAL   WE,THQTWR             ELSE RE-WRITE CURRENT HQT       R4 U7864000
SKIP40   BAL   WE,TREMLOK          REMOVE JOB HOLD QUEUE LOCK        R4 U7864500
         B     TRCOK                AND BR TO SHOW WE'RE DONE        R4 U7865000
         EJECT                                                          U7866000
*********************************************************************** U7866100
*                                                                     * U7868000
*        S C A N   F O R   M A T C H I N G   D A T A   S E T          * U7870000
*                                                                     * U7872000
*********************************************************************** U7872100
         SPACE 1                                                        U7874000
         CNOP  0,8                                                      U7876000
TNXTHQR  LA    WA,HQRLENG(,WA)     POINT TO NEXT HQR                    U7878000
         CLR   WA,R0               IF HQR WITHIN CURRENT HQT,           U7878100
         BL    TPDBSCAN             BR TO TEST PDDB                     U7878200
         L     WC,HQTHQT           SAVE ADDRESS OF NEXT HQT (IF ANY)    U7878300
         TM    HQTFLAG1,HQT1CKPT   IF HQT NOT UPDATED,                  U7878400
         BZ    *+8                  BR TO AVOID CHECKPOINT              U7878500
         BAL   WE,THQTWR             ELSE RE-WRITE CURRENT HQT          U7878600
*              THIS LINE DELETED BY APAR NUMBER                @OZ24707 U7878700
         LTR   WC,WC               IF VALID HQT CHAIN ADDRESS,          U7878800
         BNZ   TNXTHQT              BR TO READ NEXT HQT                 U7878900
         BAL   WE,TREMLOK            ELSE REMOVE JOB HOLD QUEUE LOCK    U7879000
         CLI   PSOUFLG,0           TEST FOR GROUP REQUEST            R4 U7879100
         BE    TGROUPNO            BR IF NO                          R4 U7879200
         CLI   PSORETN+3,PSOFEODS  WERE ANY DATA SETS FOUND...       R4 U7879300
         BE    TRCEODS             BR IF NO                          R4 U7879400
         B     TRCOK                ELSE BR TO 'GOOD' RETURN         R4 U7879500
         SPACE 1                                                     R4 U7879600
TGROUPNO CLI   PSODSN,0            TEST FOR PRIMARY REQUEST          R4 U7879700
         BNE   TRCEODS             BR IF NO                          R4 U7879800
         TM    PSOFLG1,PSOFJOBI+PSOFJOBN TEST FOR JOBNAME/JOBID      R4 U7879900
         BNZ   TRCEODS             BR IF YES                         R4 U7880000
         L     R14,=V($QINDEX)     GET JOB'S                         R4 U7880100
         SLR   R15,R15              CURRENT                          R4 U7880200
         IC    R15,JQETYPE           QUEUE                           R4 U7880300
         IC    R15,0(R15,R14)         OFFSET                         R4 U7880400
         LA    R14,$JQTYPES*2      NUMBER OF QUEUES(TIMES 2)         R4 U7880500
         B     TNXTJQE1            RE-ENTER JOB QUEUE SCAN           R4 U7880600
         EJECT                                                       R4 U7880700
         CNOP  0,8                                                      U7880800
TNXTHQT  ST    WC,PCESEEK          SET SEEK ADDRESS FOR $EXCP           U7880900
         ST    WC,PSOHQT           STORE NEW HQT ADDRESS       @OZ24707 U7880950
         BAL   WE,THQTRD            AND READ IN THE HQT                 U7881000
         SPACE 1                                                        U7881100
THQR1    L     WE,HQTHQRP          PREPARE TO RESUME                    U7881200
         LA    R0,0(WB,WE)          SCAN OF HQT                         U7881300
         LA    WA,HQTHQR           POINT TO FIRST HQR IN HQT         R4 U7881400
         SPACE 1                                                        U7881500
TPDBSCAN TM    HQRSTAT,HQRUNHLD    IF DATA SET NO LONGER HELD,          U7881600
         BO    TNXTHQR              BR TO TEST NEXT HQR                 U7881700
         LA    PDDB,HQRPDDB        PROVIDE PDDB ADDRESSABILITY          U7881800
         CLI   PSOUFLG,0           TEST FOR GROUP REQUEST               U7881900
         BE    TNOTGRUP            BR IF NO                             U7882000
         CLC   PSOCRDT,HQRCRDT     TEST CREATION DATE               R41 U7882100
         BL    TNXTHQR             BR IF INELLIGIBLE                R41 U7882200
         TM    PSOFLG1,PSOFCLAS    IF NO CLASS REQUIREMENT,             U7882300
         BZ    TGRPALTR             BR TO UPDATE PDDB                   U7882400
         LA    R14,L'PSOCLAS         ELSE PREPARE TO CHECK              U7882500
         LA    R15,PSOCLAS-1          FOR SELECTED CLASS                U7882600
         SPACE 1                                                        U7882700
TGRPCLAS LA    R15,1(,R15)         GET ADDRESS OF NEXT CLASS            U7882800
         CLC   PDBCLASS,0(R15)     IF ELLIGIBLE CLASS,                  U7882900
         BE    TGRPALTR             BR TO UPDATE PDDB                   U7883000
         CLI   0(R15),C' '         IF END OF ELLIGIBLE                  U7883100
         BE    TNXTHQR              CLASS LIST,                         U7883200
         BCT   R14,TGRPCLAS          BR TO TEST NEXT HQR                U7883300
         B     TNXTHQR                ELSE LOOP                         U7883400
         EJECT                                                          U7883500
*********************************************************************** U7883600
*                                                                     * U7883700
*        D A T A   S E T   F O R   G R O U P   R E Q U E S T          * U7883800
*                                                                     * U7883900
*********************************************************************** U7884000
         SPACE 1                                                        U7884100
         CNOP  0,8                                                      U7884200
TGRPALTR OI    HQTFLAG1,HQT1CKPT   REQUEST HQT CHECKPOINT               U7884300
         MVI   PSORETN+3,PSOFRTOK  SHOW GROUP RQST DATA SET FOUND    R4 U7884400
         TM    PSOUFLG,PSOFHOLD    IF DATA SET TO REMAIN HELD,          U7884500
         BO    *+8                  BR TO AVOID RELEASE                 U7884600
         OI    HQRSTAT,HQRRLSE       ELSE FLAG HQR FOR RELEASE          U7884700
         TM    PSOUFLG,PSOFDELC    IF DATA SET TO BE KEPT,              U7884800
         BZ    *+8                  BR TO AVOID DELETE                  U7884900
         OI    HQRSTAT,HQRCAN        ELSE FLAG HQR FOR DELETION         U7885000
         TM    HQRSTAT,HQRINUSE    IF DATA SET IN USE,                  U7885100
         BNZ   TNXTHQR              BR TO TEST NEXT HQR                 U7885200
         MVC   PSOPDDB,HQRPDDB       ELSE PREP FOR DATA SET DISPOSAL    U7885300
         LA    PDDB,PSOPDDB        POINT TO 'NEW' PDDB                  U7885400
         TM    PSOUFLG,PSOFSETC    IF SYSOUT CLASS UNCHANGED,           U7885500
         BZ    TGRPA10             BR TO AVOID UPDATE          @OZ32679 U7885600
         MVC   PDBCLASS,PSOCLS       ELSE UPDATE SYSOUT CLASS           U7885700
         SLR   R14,R14                CLEAR REGISTER           @OZ32679 U7885710
         IC    R14,PSOCLS             GET SYSOUT CLASS         @OZ32679 U7885720
         L     R15,$SSVT              GET ADDRESS OF SSVT      @OZ32679 U7885730
         LA    R15,$SVSCAT-$SVDSECT(R14,R15) PT TO SCAT ENTRY  @OZ32679 U7885740
         TM    SCATFLAG-SCADSECT(R15),SCATDUMM DUMMY CLASS..   @OZ32679 U7885760
         BZ    *+8                    SKIP IF NOT              @OZ32679 U7885770
         OI    PDBFLAG1,PDB1NSOT      ELSE MARK NOPRINT        @OZ32679 U7885780
TGRPA10  DS    0H                                              @OZ32679 U7885790
         TM    PSOUFLG,PSOFROUT    IF ROUTING UNCHANGED,                U7885800
         BZ    TDISPOSE             BR TO DISPOSE OF DATA SET           U7885900
         MVC   PDBDEST,PSOROUTE      ELSE RE-ROUTE DATA SET             U7886000
         B     TDISPOSE            THEN BR TO DISPOSE OF DATA SET       U7886100
         SPACE 1                                                        U7886200
         CNOP  0,8                                                      U7886300
TNOTGRUP TM    PSOFLG1,PSOFCLAS    IF NO CLASS REQUIREMENT,             U7886400
         BZ    *+14                 BR TO AVOID CLASS TEST              U7886500
         CLC   PDBCLASS,PSOCLAS    IF NO CLASS MATCH,                   U7886600
         BNE   TNXTHQR              BR TO TEST NEXT HQR                 U7886700
         TM    HQRSTAT,HQRINUSE    TEST FOR DATA SET IN USE             U7886800
         BZ    TMATCH              BR IF NO                          R4 U7886900
         TM    HQTFLAG1,HQT1CKPT   IF HQT NOT UPDATED,               R4 U7888000
         BZ    SKIP50               BR TO AVOID CHECKPOINT           R4 U7890000
         BAL   WE,THQTWR             ELSE RE-WRITE CURRENT HQT       R4 U7892000
SKIP50   BAL   WE,TREMLOK          REMOVE JOB HOLD QUEUE LOCK        R4 U7894000
         SPACE 1                                                        U7904000
TRCBUSY  LA    R0,PSOFUNAV         INDICATE TRY AGAIN LATER             U7906000
         B     TPOST                AND GO TO POST WAITING TASK         U7908000
         EJECT                                                       R4 U7910000
*********************************************************************** U7910100
*                                                                     * U7912000
*        H A V E   D A T A   S E T   F O R   N O N - G R P   R Q S T  * U7914000
*                                                                     * U7916000
*********************************************************************** U7916100
         SPACE 1                                                        U7918000
         CNOP  0,8                                                      U7920000
TMATCH   CLC   PSOPGMN,WTR3540     IF NOT 3540 REQUEST,              R4 U7920100
         BNE   TMATCHGO             BR TO ACCEPT DATA SET            R4 U7920200
         TM    PDBFLAG1,PDB1DSID   IF NOT 3540 DATA SET,             R4 U7920300
         BZ    TNXTHQR              BR TO REJECT DATA SET            R4 U7920400
         TM    PSOFLG1,PSOFJOBN+PSOFJOBI  IF NAME AND ID NOT REQ'D,  R4 U7920500
         BNO   TMATCHGO                    BR TO ACCEPT DATA SET     R4 U7920600
         PACK PCER1(8),PSODSNR     IF DATA SET NUMBER                R4 U7920700
         CVB   R1,PCER1             SAME AS LAST PROVIDED            R4 U7920800
         CH    R1,PDBDSKEY           DATA SET,                       R4 U7920900
         BE    TNXTHQR                BR TO REJECT DATA SET          R4 U7921000
         SPACE 1                                                     R4 U7921100
TMATCHGO MVC   PSOCLAS(1),PDBCLASS MOVE SYSOUT CLASS TO PSO          R4 U7921200
         SLR   R1,R1               MOVE                                 U7924000
         IC    R1,PDBCOPYS          COPY COUNT                          U7926000
         STH   R1,PSOCOPY            TO PSO                             U7928000
         MVC   PSORBA,PDBRBA       MOVE CKPT ADDR (IF ANY) TO PSO       U7930000
         OC    HQRSTAT,$SIDBUSY    SHOW DATA SET IN USE                 U7932000
         BAL   WE,THQTWR            AND CHECKPOINT THE HQT              U7934000
         MVC   PSOIOTTR,HQRIOT     SAVE IOT TTR FOR IDENT.     @OZ31509 U7936000
*              THIS LINE DELETED BY APAR NUMBER                @OZ31509 U7938000
         BAL   WE,TREMLOK          REMOVE JOB HOLD QUEUE LOCK           U7939000
         LH    WG,PDBDEST          GET ROUTE CODE FROM PDDB    @OZ33843 U7939050
*              THIS LINE DELETED BY APAR NUMBER                @OZ31509 U7939100
*              THIS LINE DELETED BY APAR NUMBER                @OZ31509 U7939200
*              THIS LINE DELETED BY APAR NUMBER                @OZ31509 U7939300
*              THIS LINE DELETED BY APAR NUMBER                @OZ31509 U7939400
*              THIS LINE DELETED BY APAR NUMBER                @OZ31509 U7939500
*              THIS LINE DELETED BY APAR NUMBER                @OZ31509 U7939600
         EJECT                                                          U7940000
TSAVPDDB MVC   PSOPDDB,0(PDDB)     SAVE PDDB IN PSO                     U7942000
         MVC   PSOCLS,PDBCLASS     MOVE OUTPUT CLASS TO PSO             U7944000
         MVC   PSOFORM,PDBFORMS    MOVE FORMS NUMBER TO PSO             U7946000
         TM    PDBFLAG1,PDB1DSID   IS DSID IN WTRID/DSID FIELD...    R4 U7946100
         BZ    SKIP60              BR IF YES TO MOVE WTR ID          R4 U7946200
         MVC   PSODSID,PDBDSID      ELSE MOVE DSID TO PSO            R4 U7946300
         BO    SKIP70                AND BR AROUND WTR ID MOVE       R4 U7946400
SKIP60   MVC   PSOPGMN,PDBWTRID    MOVE WTR ID TO PSO                R4 U7946500
SKIP70   L     R1,PSOJQEP          GET ADDRESS                          U7950000
         AL    R1,$JOBQPTR          OF JOB QUEUE ELEMENT                U7952000
         L     WE,$SSVT            GET SSVT ADDRESS                     U7954000
         SPACE 1                                                        U7956000
         USING $SVDSECT,WE         PROVIDE SSVT ADDRESSABILITY          U7958000
         SPACE 1                                                        U7960000
*********************************************************************** U7960100
*                                                                     * U7962000
*        P R O V I D E   E B C D I C   R O U T E   C O D E            * U7964000
*                                                                     * U7966000
*********************************************************************** U7966100
         SPACE 1                                                        U7968000
         MVC   PSODEST,=CL8'LOCAL' ASSUME NO ROUTING                    U7970000
*              THIS LINE DELETED BY APAR NUMBER                @OZ33843 U7976000
         N     WG,=A(X'FFFF')       AND TEST FOR ROUTING             R4 U7978000
         BNZ   TRATDEST            BR IF DIRECT ROUTING              R4 U7978100
         IC    WG,PDBCLASS         GET SYSOUT CLASS FROM PDDB        R4 U7978200
         LA    WG,$SVSCAT(WG)      POINT TO SCAT ENTRY                  U7988000
         SPACE 1                                                        U7990000
         USING SCADSECT,WG         PROVIDE SCAT ADDRESSABILITY          U7992000
         SPACE 1                                                        U7994000
         TM    SCATFLAG,SCATPNCH   TEST FOR PUNCH ROUTING               U7996000
         LH    WG,JQEPRTRT         ASSUME PRINT ROUTING                 U7998000
         BZ    *+8                 BR IF VALID ASSUMPTION               U8000000
         LH    WG,JQEPUNRT          ELSE GET PUNCH ROUTING              U8002000
         N     WG,=A(X'FFFF')      AND CHECK FOR ROUTING             R4 U8004000
         BZ    TDSNAME             BR IF NO                             U8006000
         SPACE 1                                                        U8008000
         USING RATDSECT,R15        PROVIDE RAT ADDRESSABILITY        R4 U8010000
         SPACE 1                                                        U8012000
TRATDEST L     R15,$RATABLE        GET ADDRESS OF 1ST RAT ENTRY      R4 U8012100
         LH    R0,$SVROUT          GET NUMBER OF RAT ENTRIES         R4 U8016000
         LTR   R0,R0               IF NO REMOTES DEFINED,            R4 U8018000
         BZ    TUNITDST             CHECK FOR UXXX             @OZ47388 U8020000
         SPACE 1                                                        U8022000
         CNOP  0,8                                                   R4 U8023000
TRATLOOP CH    WG,RATROUTE         TEST FOR RIGHT ENTRY                 U8024000
         BE    TGOTRAT             BR IF SO                             U8026000
         LA    R15,RATEND           ELSE STEP TO NEXT RAT ENTRY         U8028000
         BCT   R0,TRATLOOP         LOOP UNTIL END OF RAT                U8030000
TUNITDST CLM   WG,2,=X'00'         WAS REQUEST FOR 'LOCAL'...  @OZ47388 U8030100
         BNE   TDSNAME             BR IF YES                   @OZ47388 U8030200
         MVI   PSODSN,C' '         CREATE 12-BYTE              @OZ47388 U8030300
         MVC   PSODSN+1(11),PSODSN   BLANK WORK AREA           @OZ47388 U8030400
         CVD   WG,$DOUBLE          CREATE                      @OZ47388 U8030500
         MVC   PSODSN+5(3),=X'202020'  LEFT-JUSTIFIED          @OZ47388 U8030600
         EDMK  PSODSN+4(4),$DOUBLE+6    UNIT                   @OZ47388 U8030700
         MVC   PSODSN+5(3),0(R1)          NUMBER               @OZ47388 U8030800
         MVI   PSODSN+4,C'U'       RESET FOR 'UNIT'            @OZ47388 U8030900
         MVC   PSODEST,PSODSN+4    MOVE UNIT ROUTE TO PSO      @OZ47388 U8031000
         L     R1,PSOJQEP          RESTORE JQE ADDRESS         @OZ47388 U8031100
         AL    R1,$JOBQPTR         (R1 CLOBBERED BY EDMK)      @OZ47388 U8031200
         B     TDSNAME             BR IF NO ENTRY FOUND                 U8032000
         SPACE 1                                                     R4 U8033100
TGOTRAT  MVC   PSODEST,RATNAME     GET PROPER NAME FROM RAT             U8038000
         SPACE 1                                                        U8040000
         DROP  WG,R15              KILL RAT, SCAT ADDRESSABILITY        U8042000
         EJECT                                                          U8046200
*********************************************************************** U8046300
*                                                                     * U8050000
*        C O N S T R U C T   S U B - S Y S T E M   D S N A M E        * U8052000
*                                                                     * U8054000
*********************************************************************** U8054100
         SPACE 1                                                        U8056000
TDSNAME  MVC   PSODSN(4),$SVSSNM   MOVE SUBSYSTEM NAME TO DSNAME        U8058000
         MVI   PSODSN+4,C'.'       MOVE QUALIFIERS                      U8060000
         MVC   PSODSN+5(8),PSOJOBI  AND JOB ID                          U8062000
         MVC   PSODSN+13(3),=C'.PS'  TO DSNAME                          U8064000
         LH    R0,PDBDSKEY         GET DD NUMBER FROM PDDB,             U8066000
         CVD   R0,PCER1             CONVERT TO DECIMAL,                 U8068000
         UNPK  PSODSNR,PCER1+5(3)    THEN TO EBCDIC,                    U8070000
         OI    PSODSNR+L'PSODSNR-1,C'0'  THEN SET SIGN                  U8072000
         MVI   PSODSNR+L'PSODSNR,C' '  MOVE IN FIRST OF TRAILING BLANKS U8074000
         MVC   PSODSNR+L'PSODSNR+1(L'PSODSN-(PSODSNR+L'PSODSNR+1-PSODSNCU8076000
               )),PSODSNR+L'PSODSNR  THEN MOVE REST OF TRAILING BLANKS  U8078000
         MVC   PSOJOBN,JQEJNAME    MOVE JOB NAME TO PSO                 U8080000
         EJECT                                                       R4 U8080100
*********************************************************************** U8080200
*                                                                     * U8084000
*        R E Q U E S T   S A T I S F I E D   - -   S E T   R . C .    * U8086000
*                                                                     * U8088000
*********************************************************************** U8088100
         SPACE 1                                                        U8090000
TRCOK    LA    R0,PSOFRTOK         SET 'GOOD' RETURN CODE               U8092000
         B     TXMPOST             BR TO XMPOST WAITING TASK        R41 U8093000
         SPACE 1                                                        U8094000
*********************************************************************** U8094100
*                                                                     * U8096000
*        P R O C E S S I N G   D O N E   - -   I S S U E   P O S T    * U8098000
*                                                                     * U8100000
*********************************************************************** U8100100
         SPACE 1                                                        U8102000
TPOST    MVC   PSOIOTTR,$ZEROS     INDICATE NO HQR ALLOCATED   @OZ31509 U8104000
         SPACE 1                                                    R41 U8104100
TXMPOST  ST    R0,PSORETN          STORE RETURN CODE IN PSO         R41 U8104200
         TM    PSOFLG2,PSOF$O      IF $O INITIATED GROUP REQUEST,       U8104300
         BO    TFREEPSO             BR TO FREE THE PSO                  U8104400
         TM    PSOFLG2,PSOFPURG    IF PSO IS FROM PURGE,       @OZ40277 U8104430
         BO    TFREEPRG             THEN FREE THE PSO          @OZ40277 U8104460
         L     R1,PSOSJB                XM POST                         U8104500
         LA    R1,SJBECBP-SJBDSECT(,R1)  THE WAITING                    U8104600
        $XMPOST (R1)                      TASK                          U8104700
         XC    $PSOPEND,$PSOPEND   CLEAR PENDING SJB ADDR      @OZ54367 U8104750
         B     TQSEARCH            THEN LOOK FOR MORE WORK TO DO        U8104800
TFREEPRG LR    R1,WD               GET ADDRESS OF PSO          @OZ40277 U8104825
         FREEMAIN R,LV=PSOLNGTH,A=(1),SP=241  FREE THE PSO     @OZ40277 U8104850
         B     TQSEARCH            BR TO FIND OTHER WORK       @OZ40277 U8104875
         SPACE 1                                                        U8104900
*********************************************************************** U8105000
*                                                                     * U8105100
*        F R E E   P S O   F R O M   $ O   R E Q U E S T              * U8105200
*                                                                     * U8105300
*********************************************************************** U8105400
         SPACE 1                                                        U8105500
         CNOP  0,8                                                      U8105600
TFREEPSO MVC   $OQUEUE,PSONEXT     DE-QUEUE THE PSO                     U8105700
         LA    R0,PSOLNGTH         GET LENGTH (AND SUBPOOL) OF PSO      U8105800
         LR    R1,WD               GET ADDRESS OF PSO                   U8105900
         FREEMAIN R,LV=(0),A=(1)   FREE THE PSO STORAGE                 U8106000
         B     TQSEARCH            THEN BR TO FIND OTHER WORK           U8106100
         EJECT                                                          U8106200
*********************************************************************** U8106300
*                                                                     * U8106400
*        R E - W R I T E   C U R R E N T   H Q T                      * U8106500
*                                                                     * U8106600
*********************************************************************** U8106700
         SPACE 1                                                        U8106800
         CNOP  0,8                                                      U8106900
THQTWR   MVI   PCEDEVTP,PCEDAWR    INDICATE WRITE OPERATION             U8107000
         MVC   PCESEEK,PSOHQT      SET SEEK ADDRESS FOR $EXCP           U8107100
         ST    WB,PCEBUFAD         SET BUFFER ADDRESS FOR $EXCP         U8107200
         NI    HQTFLAG1,255-HQT1CKPT  RESET CKPT REQUEST FLAG           U8107300
         B     TIO                 THEN BR TO DO WRITE                  U8107400
         SPACE 1                                                     R4 U8107500
*********************************************************************** U8107600
*                                                                     * U8107700
*        R E A D   A N D   C H E C K   A N   H Q T                    * U8107800
*                                                                     * U8107900
*********************************************************************** U8108000
         SPACE 1                                                        U8108100
         CNOP  0,8                                                      U8108200
THQTRD   ST    WE,PSOLINK          SAVE RETURN ADDRESS                  U8108300
         MVI   PCEDEVTP,PCEDARD    INDICATE READ OPERATION              U8108400
         ST    WB,PCEBUFAD         SET BUFFER ADDRESS FOR $EXCP         U8108500
         BAL   WE,TIO              THEN READ THE HQT                    U8108600
         L     WE,PSOLINK          RESTORE RETURN ADDRESS               U8108700
         BM    THQTBAD             BR IF ERROR READING HQT           R4 U8108800
         CLC   HQTID,=CL4'HQT'     IF NOT AN HQT,                       U8108900
         BNE   TESTJCT              BR TO TEST FOR JCT                  U8109000
         CLC   HQTJBKEY,PSOJBKEY   IF VALID IDENTIFIER KEY,             U8109100
         BER   WE                   RETURN                              U8109200
         B     THQTBAD               ELSE BR TO ISSUE ERROR MSG         U8109300
         SPACE 1                                                        U8109400
TESTJCT  CLC   HQTID,=CL4'JCT'     IF NOT A JCT,                        U8109500
         BNE   THQTBAD              BR TO ISSUE ERROR MSG               U8109600
         CLC   PSOJQEP,JCTJQE-JCTDSECT(WB)  IF WRONG JOB,               U8109700
         BNE   THQTBAD                       BR TO ISSUE ERROR MSG      U8109800
         MVC   PSOJBKEY,JCTJBKEY-JCTDSECT(WB)  SAVE IDENTIFIER KEY      U8109900
         BR    WE                  THEN RETURN                          U8110000
         SPACE 1                                                        U8110100
THQTBAD $DISTERR                   ISSUE DISATEROUS ERROR MESSAGE       U8110200
         BAL   WE,TREMLOK          REMOVE JOB HOLD QUEUE LOCK           U8110300
                                   PRINT OFF - SECTION DELETED @OZ27300 U8110400
*                                  THIS LINE DELETED BY APAR   @OZ27300 U8110500
*                                  THIS LINE DELETED BY APAR   @OZ27300 U8110600
*                                  THIS LINE DELETED BY APAR   @OZ27300 U8110700
*                                  THIS LINE DELETED BY APAR   @OZ27300 U8110800
                                   PRINT ON  - SECTION DELETED @OZ27300 U8110900
         B     TRCEODS             THEN BR TO RETURN WITH ERROR         U8111000
         EJECT                                                          U8111100
*********************************************************************** U8111200
*                                                                     * U8111300
*        O B T A I N   J O B   H O L D   Q U E U E   L O C K          * U8111400
*                                                                     * U8111500
*********************************************************************** U8111600
         SPACE 1                                                        U8111700
         CNOP  0,8                                                      U8111800
TWAIT   $WAIT  ABIT                $WAIT A LITTLE WHILE                 U8111900
         SPACE 1                                                        U8112000
TGETLOK $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA R4 U8112100
         TM    JQEHQLOK,QUEBUSY    IF JOB HOLD QUEUE LOCK HELD,         U8112200
         BNZ   TWAIT                BR TO $WAIT A LITTLE WHILE          U8112300
         OC    JQEHQLOK,$SIDBUSY     ELSE GRAB THE LOCK                 U8112400
        $QCKPT (R1)                   AND FORCE CHECKPOINT OF JQE       U8112500
         BR    WE                  THEN RETURN                          U8112600
         SPACE 5                                                        U8112700
*********************************************************************** U8112800
*                                                                     * U8112900
*        R E M O V E   J O B   H O L D   Q U E U E   L O C K          * U8113000
*                                                                     * U8113100
*********************************************************************** U8113200
         SPACE 1                                                        U8113300
         CNOP  0,8                                                      U8113400
TREMLOK $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA R4 U8113500
         L     R1,PSOJQEP          GET JQE ADDRESS                      U8113600
         AL    R1,$JOBQPTR          FROM PSO,                           U8113700
         NI    JQEHQLOK,255-QUEBUSY  RESET HOLD QUEUE LOCK,             U8113800
        $QCKPT (R1)                   AND FORCE CHECKPOINT OF JQE       U8113900
         BR    WE                  THEN RETURN                          U8114000
         SPACE 1                                                        U8114100
         DROP  WA,WB,WE,PDDB       KILL CTL BLOCK ADDRESSABILITY        U8114200
         EJECT                                                       R4 U8114300
*********************************************************************** U8114400
*                                                                     * U8114500
*        P R E P A R E   I O T   A N D   H Q T   B U F F E R S        * U8114600
*                                                                     * U8114700
*********************************************************************** U8114800
         SPACE 1                                                     R4 U8114900
         CNOP  0,8                                                   R4 U8115000
TGETBUF  LTR   IOT,IOT             IF IOT ALREADY PREPARED,          R4 U8115100
         BP    TBLDHQT              BR TO BUILD HQT IOB              R4 U8115200
         LA    IOT,0(,IOT)           ELSE SHOW VALID IOT             R4 U8115300
        $BFRBLD (IOT)                 AND BUILD IOB WITHIN IOT       R4 U8115400
         MVC   IOTID,=CL4'IOT'          INITIALIZE IOT               R4 U8115500
         LH    R1,$BUFLENG               IDENTIFICATION              R4 U8115600
         STH   R1,IOTLENG                  AND LENGTH FIELDS         R4 U8115700
         SPACE 1                                                     R4 U8115800
TBLDHQT $BFRBLD (WB)               REBUILD HQT IOB                   R4 U8115900
         BR    WE                  THEN RETURN                       R4 U8116000
         SPACE 3                                                     R4 U8116100
*********************************************************************** U8116200
*                                                                     * U8116300
*        I O T / H Q T   R E A D / W R I T E   R O U T I N E          * U8116400
*                                                                     * U8116500
*********************************************************************** U8116600
         SPACE 1                                                     R4 U8116700
         CNOP  0,8                                                   R4 U8116800
TIO      LA    R1,PCEDADCT         GET DIRECT ACCESS DCT ADDRESS     R4 U8116900
        $EXCP  (R1),WAIT=YES       READ/WRITE IOT/HQT                R4 U8117000
         BR    WE                  RETURN WITH VALID CC              R4 U8117100
         EJECT                                                       R4 U8117600
WTR3540  DC    CL8'IEBDKWTR'       3540 DISKETTE EXTERNAL WRITER     R4 U8117700
         SPACE 5                                                     R4 U8117800
         LTORG                                                       R4 U8117900
  TITLE  'HASP PROCESS SYSOUT SUPPORT -- EXTERNAL WRITER SUPPORT'    R4 U8118000
*********************************************************************** U8118100
*                                                                     * U8118200
*        B E G I N   E X T E R N A L   W R I T E R   S U P P O R T    * U8118300
*                                                                     * U8120000
*********************************************************************** U8120100
         SPACE 1                                                        U8120500
         USING SJBDSECT,WC         PROVIDE SJB ADDRESSABILITY           U8121000
         SPACE 1                                                        U8122000
         CNOP  0,8                                                      U8124000
HASPWTR  LA    BASE2,*             RE-ESTABLISH BASE ADDRESS         R4 U8125000
         SPACE 1                                                     R4 U8125500
         USING HASPWTR,BASE2       PROVIDE NEW ADDRESSABILITY        R4 U8126000
         SPACE 1                                                     R4 U8126500
         ST    WB,PSOHQT           SAVE HQT BUFFER ADDRESS           R4 U8127000
         L     R10,$JOTABLE        GET JOT ADDRESS             @OZ40028 U8127100
         TM    SJBPSOP,X'C0'       WAS WRITER WAITING ON JOT...      R4 U8127500
         BZ    TESTRQST            BR IF NO                             U8128000
         BM    *+14                BR IF WAIT COUNT DECREMENTED         U8130000
         IC    R0,$WTRWTCT          ELSE DECREMENT COUNT                U8132000
         BCTR  R0,0                  OF EXTERNAL WRITERS                U8134000
         STC   R0,$WTRWTCT            WAITING ON JOT                    U8136000
         NI    SJBPSOP,255-X'C0'   RESET EXTERNAL WRITER WAIT BITS      U8138000
         TM    PSOFLG2,PSOFDONE    TEST FOR END OF REQUESTS             U8140000
         BO    TWTREODS            BR IF SO                          R4 U8142000
         SPACE 1                                                        U8144000
TESTRQST CLI   PSOWKOFF,0          NEW REQUEST...              @OZ40028 U8148000
         BNE   TREENTRY            BR IF NO                             U8150000
         LA    R0,PSOECB            ELSE SET POINTER TO                 U8152000
         ST    R0,PSOWTRC            EXTERNAL WTR PARAMETER AREA        U8154000
        $QSUSE                     REQUEST ACCESS TO CKPT DATA      R41 U8155000
         B     TJOEGET             THEN BR TO GET A JOE              R4 U8156000
         SPACE 1                                                     R4 U8156100
TWTRDUPJ LA    R0,PSOFDUPJ         INDICATE DUPLICATE JOB NAMES      R4 U8156200
         B     TWTRPOST             AND BR TO EXIT TO POST RTN       R4 U8156300
         SPACE 1                                                     R4 U8156400
TWTREODS LA    R0,PSOFEODS         INDICATE DATA SET NOT FOUND       R4 U8156500
         SPACE 1                                                     R4 U8156600
TWTRPOST MVI   PSOWKOFF,0          INDICATE NO JOES ALLOCATED  @OZ40028 U8156700
         L     R15,=A(TXMPOST)     POINT TO XMPOST ROUTINE          R41 U8156800
         SPACE 1                                                     R4 U8156900
*********************************************************************** U8157000
*                                                                     * U8157100
*        ( O N L Y )   E X I T   F R O M   H A S P W T R              * U8157200
*                                                                     * U8157300
*********************************************************************** U8157400
         SPACE 1                                                     R4 U8157500
TWTREXIT L     WB,PSOHQT           RESTORE HQT BUFFER ADDRESS        R4 U8157600
         L     BASE2,=A(HASPPSO)   RESTORE HASPPSO BASE              R4 U8157700
         BR    R15                 THEN RETURN TO HASPPSO            R4 U8157800
         EJECT                                                       R4 U8157900
*********************************************************************** U8158000
*                                                                     * U8158100
*        T R Y   T O   G E T   A   J O E                              * U8160000
*                                                                     * U8162000
*********************************************************************** U8162100
         SPACE 1                                                        U8164000
*                                  THIS LINE DELETED BY APAR   @OZ40028 U8166000
         SPACE 1                                                        U8168000
         USING JOTDSECT,R10        PROVIDE JOT ADDRESSABILITY           U8170000
         SPACE 1                                                        U8172000
TJOEGET  LH    R1,JOTFREC          TEST FOR                    @OZ40028 U8174000
         BCTR  R1,0                 MINIMUM NUMBER                      U8176000
         LTR   R1,R1                 OF FREE JOES                       U8178000
         BP    TESTJOT             BR IF SO TO TEST JOT                 U8180000
         SPACE 1                                                        U8182000
*********************************************************************** U8182100
*                                                                     * U8184000
*        F O R C E   W R I T E R   T O   W A I T   O N   J O T        * U8186000
*                                                                     * U8188000
*********************************************************************** U8188100
         SPACE 1                                                        U8190000
TNOJOE   L     WC,PSOSJB           RESTORE SJB ADDRESS               R4 U8191000
         OI    SJBPSOP,X'C0'       SET JOT WAIT BITS                    U8192000
         SLR   R0,R0               CLEAR                                U8194000
         ST    R0,PSOECB            WAIT ECB                            U8196000
         IC    R1,$WTRWTCT         INCREMENT COUNT                      U8198000
         LA    R1,1(,R1)            OF EXTERNAL WRITERS                 U8200000
         STC   R1,$WTRWTCT           WAITING ON JOT                     U8202000
         LA    R0,PSOECB           SET XMPOST                           U8204000
         ST    R0,PSOECBP           PARAMETER LIST                      U8206000
         MVC   PSOECBP+4(8),SJBASCBP FOR JOT POST ROUTINE               U8208000
         B     TWTREODS            THEN BR TO SHOW NO DATA SET       R4 U8212000
         SPACE 1                                                        U8212500
         DROP  WC                  KILL SJB ADDRESSABILITY              U8213000
         EJECT                                                          U8214000
*********************************************************************** U8214100
*                                                                     * U8216000
*        S C A N   J O T   F O R   B E S T   J O E                    * U8218000
*                                                                     * U8220000
*********************************************************************** U8220100
         SPACE 1                                                        U8222000
         CNOP  0,8                                                      U8224000
TESTJOT  SLR   WE,WE               CLEAR BEST                           U8226000
         ST    WE,PCER1             CHOICE SLOT                         U8228000
         MVI   PCER0,36            SET CLASS ORDER PRIORITY TO 36       U8230000
         TM    PSOFLG1,PSOFCLAS    TEST CLASS REQUIREMENT               U8232000
         BZ    TNOCLASS            BR IF NONE                           U8234000
         MVI   PSOCLAS+L'PSOCLAS,C' '  SET CLASS SCAN TERMINATOR        U8236000
         LA    WE,PSOCLAS-1        SET UP TO SCAN CLASS LIST            U8238000
         SPACE 1                                                        U8240000
TNXTCLAS LA    WE,1(,WE)           POINT TO NEXT CLASS                  U8242000
         CLI   0(WE),C' '          TEST FOR END OF CLASS LIST           U8244000
         BE    TESTBEST            BR IF SO                             U8246000
         SLR   WG,WG               PICK UP                              U8248000
         IC    WG,0(,WE)            OUTPUT CLASS                        U8250000
         S     WG,=A(C'A')         REDUCE TO ELIGIBLE RANGE             U8252000
         BM    TNXTCLAS            BR IF ILLEGAL OUTPUT CLASS           U8254000
         IC    WG,TJOTDISP(WG)      ELSE GET JOTCLSQ OFFSET             U8256000
         LTR   WG,WG                 AND TEST                           U8258000
         BZ    TNXTCLAS            BR IF ILLEGAL OUTPUT CLASS           U8260000
         LA    WG,JOTCLSQ-2-(JOENEXT-JOEDSECT)(WG)  POINT TO NEXT QUEUE U8262000
         SPACE 1                                                        U8264000
         USING JOEDSECT,WG         PROVIDE JOE ADDRESSABILITY           U8266000
         SPACE 1                                                        U8268000
TWKJOE   LH    WG,JOENEXT          GET OFFSET                           U8270000
         N     WG,=X'0000FFFF'      OF NEXT WORK JOE                    U8272000
         BNZ   TVERIFY             BR IF VALID OFFSET                   U8274000
         NI    PCER0,X'3F'         CLEAR PRIORITY BITS                  U8276000
         IC    WG,PCER0            DECREMENT                            U8278000
         BCTR  WG,0                 CLASS ORDER                         U8280000
         STC   WG,PCER0              PRIORITY                           U8282000
         TM    PSOFLG1,PSOFCLAS    TEST CLASS REQUIREMENT               U8284000
         BO    TNXTCLAS            BR IF SO TO TEST NEXT CLASS          U8286000
         SPACE 1                                                        U8288000
TNXTJOE  BCTR  R15,0               DROP BACK TO NEXT JOT CLASS          U8290000
         BCT   R15,TJOECLAS        BR IF NOT END OF QUEUES              U8292000
         B     TESTBEST             ELSE BR TO TEST FOR FIND            U8294000
         SPACE 1                                                        U8296000
TJOTDISP DC     9AL1(2*(*+1-TJOTDISP)),7AL1(0)        OUTPUT CLASS A-I  U8300000
         DC     9AL1(2*(*+1-TJOTDISP-7)),8AL1(0)      OUTPUT CLASS J-R  U8302000
         DC     8AL1(2*(*+1-TJOTDISP-7-8)),6AL1(0)    OUTPUT CLASS S-Z  U8304000
         DC    10AL1(2*(*+1-TJOTDISP-7-8-6)),6AL1(0)  OUTPUT CLASS 0-9  U8306000
         SPACE 1                                                        U8308000
TNOCLASS LA    R15,72              SET UP TO SCAN ALL CLASSES           U8310000
         SPACE 1                                                        U8312000
TJOECLAS LH    WG,JOTCLSQ-2(R15)   GET NEXT CLASS QUEUE HDR             U8314000
         N     WG,=X'0000FFFF'     TEST FOR EMPTY OUTPUT QUEUE          U8316000
         BZ    TNXTJOE             BR IF SO                             U8318000
         EJECT                                                          U8326000
*                                                                       U8328000
*        H A V E   A   J O E   - -   V A L I D A T E   I T              U8330000
*                                                                       U8332000
         SPACE 1                                                        U8334000
TVERIFY  NI    PCER0,X'3F'         CLEAR PRIORITY BITS                  U8336000
         STH   WG,PCER0+2          SAVE WORK JOE DISPLACEMENT           U8338000
         SLL   WG,2                CONVERT WORK JOE OFFSET           R4 U8338100
         ALR   WG,R10               TO ABSOLUTE ADDRESS                 U8340000
         TM    JOEFLAG,$JOEBUSY    TEST JOE STATUS                      U8342000
         BNZ   TWKJOE              BR IF JOE IN USE                     U8344000
         LH    R1,JOEJQE           GET JQE OFFSET                       U8346000
         N     R1,=X'0000FFFF'      FROM JOE                            U8347000
         SLL   R1,2                CONVERT OFFSET                       U8348000
         AL    R1,$JOBQPTR          TO ABSOLUTE ADDRESS                 U8349000
         TM    JQEFLAGS,QUEHOLDA+QUEHOLD1  TEST JOB STATUS              U8350000
         BNZ   TWKJOE              BR IF JOB HELD                       U8352000
         MVI   PCER0+1,X'FF'       PRESET MAX PRIORITY         @OZ52102 U8354000
         SLR   R14,R14             LOAD PRIORITY               @OZ52102 U8354100
         IC    R14,JOEPRIO          FROM JOE                   @OZ52102 U8354200
         LA    WB,1*16             USE '1' FOR                 @OZ52102 U8354300
         CLI   JQETYPE,$HARDCPY     JQE PRIORITY               @OZ52102 U8354400
         BNE   TJOEPR1             IF JOB STILL EXECUTING      @OZ52102 U8354500
         TM    JQEPRIO,X'F0'       JQE PRIORITY = 15...        @OZ52102 U8354600
         BO    TJOEPR2             BR IF YES                   @OZ52102 U8354700
         IC    WB,JQEPRIO          LOAD PRIORITY FROM JQE      @OZ52102 U8354800
TJOEPR1  ALR   R14,WB              ADD JQE AND JOE PRIORITIES  @OZ52102 U8354900
         SRL   R14,1               INSURE SUM IN 1 BYTE        @OZ52102 U8355000
         STC   R14,PCER0+1         SAVE RESULT                 @OZ52102 U8355100
TJOEPR2  EQU   *                                               @OZ52102 U8355200
         TM    PSOFLG1,PSOFJOBI    TEST JOB ID REQUIREMENT              U8356000
         BZ    TESTNAME            BR IF NONE                           U8358000
         CLC   PSOJOBNO,JQEJOBNO   TEST FOR JOB ID MATCH                U8360000
         BNE   TWKJOE              BR IF NO                             U8362000
         TM    PSOFLG1,PSOFJOBN    TEST JOBNAME REQUIREMENT             U8364000
         BZ    TESTDEST            BR IF NONE                           U8366000
         CLC   PSOJOBN,JQEJNAME    IS JOBNAME CORRECT...                U8368000
         BE    TESTDEST            BR IF SO                             U8370000
         LA    R0,PSOFINVJ          ELSE SHOW INVALID JOB NAME/ID    R4 U8371000
         B     TWTRPOST              AND BR TO EXIT TO POST RTN      R4 U8372000
         SPACE 1                                                        U8374000
TESTNAME TM    PSOFLG1,PSOFJOBN    TEST JOBNAME REQUIREMENT             U8378000
         BZ    TESTDEST            BR IF NONE                           U8380000
         CLC   PSOJOBN,JQEJNAME    TEST FOR JOBNAME MATCH               U8382000
         BNE   TWKJOE              BR IF NO                             U8384000
         LA    WC,72               SET UP TO SCAN FOR DUPLICATE         U8386000
         SPACE 1                                                        U8388000
TNXTCLS  LH    WB,JOTCLSQ-2(WC)    GET NEXT JOT CLASS QUEUE HDR         U8390000
         N     WB,=X'0000FFFF'     TEST FOR EMPTY OUTPUT QUEUE          U8392000
         BZ    TSCANCLS            BR IF SO                             U8394000
         SPACE 1                                                        U8396000
TNAMCHK  SLL   WB,2                CONVERT WORK JOE OFFSET           R4 U8396100
         ALR   WB,R10               TO ABSOLUTE ADDRESS                 U8398000
         LH    R14,JOEJQE-JOEDSECT(,WB)  GET JQE OFFSET                 U8400000
         CH    R14,JOEJQE          TEST FOR CURRENT JOB                 U8402000
         BE    TJOENXT             BR IF SO TO IGNORE TEST              U8404000
         N     R14,=X'0000FFFF'     ELSE CONVERT                        U8405000
         SLL   R14,2                 OFFSET TO                          U8406000
         AL    R14,$JOBQPTR           ABSOLUTE ADDRESS                  U8407000
         CLC   JQEJNAME,QUEJNAME(R14)  TEST FOR JOBNAME MATCH           U8408000
         BE    TWTRDUPJ            RETURN IF SO WITH ERROR           R4 U8410000
         SPACE 1                                                        U8412000
TJOENXT  LH    WB,JOENEXT-JOEDSECT(,WB)  GET OFFSET OF NEXT JOE         U8414000
         N     WB,=X'0000FFFF'     TEST FOR END OF CHAIN                U8416000
         BNZ   TNAMCHK             BR IF NO                             U8418000
         SPACE 1                                                        U8420000
TSCANCLS BCTR  WC,0                LOOP UNTIL ALL                       U8422000
         BCT   WC,TNXTCLS           QUEUES SEARCHED                     U8424000
         EJECT                                                          U8426000
*********************************************************************** U8426100
*                                                                     * U8428000
*        T E S T   O P T I O N A L   Q U A L I F I C A T I O N S      * U8430000
*                                                                     * U8432000
*********************************************************************** U8432100
         SPACE 1                                                        U8434000
TESTDEST TM    PSOFLG1,PSOFDEST    TEST ROUTING REQUIREMENT             U8436000
         BZ    TESTPGMN            BR IF NONE                           U8438000
         LH    WB,JOEROUT          GET ROUTING FROM JOE              R4 U8440000
         LTR   WB,WB               TEST FOR EXPLICIT ROUTING         R4 U8442000
         BNZ   *+8                 BR IF YES                         R4 U8444000
         LH    WB,JQEPRTRT          ELSE GET ROUTING FROM JQE        R4 U8446000
         CH    WB,PSOROUTE         TEST DESTINATION                     U8448000
         BNE   TWKJOE              BR IF NO MATCH                       U8450000
         SPACE 1                                                        U8452000
TESTPGMN TM    PSOFLG1,PSOFPGM     TEST WTR NAME REQUIREMENT            U8454000
         BZ    TESTFORM            BR IF NONE                           U8456000
         LH    WB,JOECHAR           ELSE GET ADDRESS                    U8458000
         N     WB,=X'0000FFFF'       OF                                 U8459000
         SLL   WB,2                   CHARACTERISTICS                R4 U8459100
         ALR   WB,R10                  JOE                              U8461000
         CLC   PSOPGMN,JOEWTRID-JOEDSECT(WB)  TEST WRITER NAME          U8462000
         BNE   TWKJOE              BR IF NO MATCH                       U8464000
         SPACE 1                                                        U8466000
TESTFORM TM    PSOFLG1,PSOFFORM    TEST FORMS REQUIREMENT               U8468000
         BZ    TJOEGOT             BR IF NONE                           U8470000
         LH    WB,JOECHAR           ELSE GET ADDRESS                    U8472000
         N     WB,=X'0000FFFF'       OF                                 U8473000
         SLL   WB,2                   CHARACTERISTICS                R4 U8473100
         ALR   WB,R10                  JOE                              U8475000
         CLC   PSOFORM,JOEFORM-JOEDSECT(WB)  TEST FORMS                 U8476000
         BNE   TWKJOE              BR IF NO MATCH                       U8478000
         SPACE 1                                                        U8480000
TJOEGOT  OI    PCER0,X'80'         SET 'MATCH' PRIORITY BIT             U8482000
         CLC   PCER0(2),PCER1      IS CURRENT JOE A BETTER CHOICE...    U8484000
         BL    TWKJOE              BR IF NO                             U8486000
         MVC   PCER1,PCER0          ELSE REPLACE BEST CHOICE         R4 U8486100
         B     TWKJOE                AND RESUME SEARCH               R4 U8486200
         SPACE 1                                                        U8494000
*********************************************************************** U8494100
*                                                                     * U8496000
*        E N D   O F   J O T   S C A N                                * U8498000
*                                                                     * U8500000
*********************************************************************** U8500100
         SPACE 1                                                        U8502000
         CNOP  0,8                                                      U8504000
TESTBEST MVI   PSOWTRC,0           RESET HI-ORDER BYTE OF PSOWTRC       U8506000
         OC    PCER1,PCER1         TEST FOR SELECTED JOE                U8508000
         BZ    TNOJOE              BR IF NO TO WAIT ON JOT              U8510000
         EJECT                                                          U8512000
*********************************************************************** U8512100
*                                                                     * U8514000
*        H A V E   S E L E C T E D   A   W O R K   J O E              * U8516000
*                                                                     * U8518000
*********************************************************************** U8518100
         SPACE 1                                                        U8520000
         LH    WA,PCER1+2          SAVE WORK-JOE OFFSET        @OZ27300 U8521000
         LH    WG,PCER1+2          SAVE OFFSET                 @OZ40028 U8522000
         N     WG,=X'0000FFFF'      OF BEST                    @OZ40028 U8523000
         SLL   WG,2                  WORK JOE                  @OZ40028 U8523100
         ST    WG,PSOWKOFF            IN PSO                   @OZ40028 U8525000
         ALR   WG,R10              CONVERT OFFSET TO ADDRESS   @OZ40028 U8525100
         LH    WB,JOECHAR          SAVE OFFSET                 @OZ40028 U8528000
         N     WB,=X'0000FFFF'      OF CORRESPONDING           @OZ40028 U8529000
         SLL   WB,2                  CHARACTERISTICS JOE       @OZ40028 U8529100
         ST    WB,PSOCHOFF            IN PSO                   @OZ40028 U8531000
         ALR   WB,R10              CONVERT OFFSET TO ADDRESS   @OZ40028 U8532000
         LH    R1,JOEJQE           GET JQE OFFSET                       U8534000
         N     R1,=X'0000FFFF'      FROM JOE                            U8535000
         SLL   R1,2                  AND SAVE                           U8536000
         ST    R1,PSOJQEP             IN PSO                            U8537000
         AL    R1,$JOBQPTR         THEN CONVERT TO ABSOLUTE ADDR        U8538000
         XC    JOEDEVID,JOEDEVID   ZERO DEVICE ID                    R4 U8539000
         OI    JOEDEVID,X'0F'      INDICATE EXTERNAL WTR       @OZ30706 U8539500
         OC    JOEFLAG,$SIDBUSY    INDICATE JOE IN USE                  U8540000
        $#CKPT JOE=0(,WG),TYPE=A   CHECKPOINT WORK JOE                  U8542000
         OC    JOECKPT,JOECKPT     TEST FOR CHECKPOINT JOE              U8544000
         BNZ   TPOSTCK             BR IF SO                             U8546000
         EJECT                                                          U8546500
*********************************************************************** U8546600
*                                                                     * U8547000
*        O B T A I N   C H E C K P O I N T   J O E                    * U8547500
*                                                                     * U8548000
*********************************************************************** U8548100
         SPACE 1                                                        U8548500
         LH    WC,JOTFREC          DECREMENT                            U8549000
         BCTR  WC,0                 FREE JOE                            U8550000
         STH   WC,JOTFREC            COUNT                              U8552000
         LH    WC,JOTFREQ          GET NEW CHECKPOINT JOE OFFSET        U8554000
         STH   WC,JOECKPT           AND CHAIN CKPT KOE TO WORK JOE      U8555000
         N     WC,=X'0000FFFF'     CONVERT TO FULL                      U8556000
         SLL   WC,2                 ADDRESS OFFSET                   R4 U8556100
        $#CKPT JOE=0(,WC),HEAD=YES CHECKPOINT THE CKPT JOE              U8558000
         ALR   WC,R10              CONVERT TO ABSOLUTE ADDRESS          U8560000
         MVI   JOETYPE-JOEDSECT(WC),$JOECKPT INDICATE CKPT-JOE @OZ27300 U8561000
         MVC   JOTFREQ,JOENEXT-JOEDSECT(WC)  DE-CHAIN THE CKPT JOE      U8562000
         STH   WA,JOEWORK-JOEDSECT(,WC)  CHAIN TO WORK-JOE     @OZ27300 U8563000
         SPACE 1                                                        U8564000
TPOSTCK $POST  $HASPECF,CKPW       $POST THE CHECKPOINT WRITER          U8566000
         EJECT                                                 @OZ43905 U8568000
*********************************************************************** U8568100
*                                                                     * U8570000
*        E X T R A C T   S M F   D A T A   F R O M   J C T            * U8572000
*                                                                     * U8574000
*********************************************************************** U8574100
         SPACE 1                                                        U8576000
         LR    JCT,R1              RE-LOAD JQE ADDRESS FOR $#JCT        U8578000
         SPACE 1                                                        U8580000
         USING JCTDSECT,JCT        RESTORE JCT ADDRESSABILITY           U8582000
         SPACE 1                                                        U8584000
        $#JCT  READ                GET ADDRESS OF JCT                   U8586000
         BNZ   TJCTOK              BRANCH IF READ SUCCESSFUL   @OZ43905 U8588000
         L     R10,$JOTABLE        RESTORE JOT ADDRESS         @OZ43905 U8588200
         B     TBADKEY             BR IF READ UNSUCCESSFUL     @OZ43905 U8588300
TJCTOK   DS    0H                                              @OZ43905 U8588400
         MVC   PSOWKOFF(1),JCTMCLAS  SAVE MESSAGE CLASS        @OZ40028 U8589000
         MVC   PSOJBKEY,JCTJBKEY   SAVE JCT FIELDS                      U8590000
         MVC   PSOUSEID,JCTUSEID    RELAVENT TO                         U8592000
         MVC   PSORDRON(8),JCTRDRON  EXTERNAL WRITER                    U8594000
         MVC   PSOJOBI(3),JCTJOBID    MOVE                              U8596000
         PACK  PCER1(3),JCTJOBID+3(5)  JOB ID                           U8598000
         UNPK  PSOJOBI+3(5),PCER1(3)    TO PSO                          U8600000
         L     WC,JCTIOT           SAVE ADDRESS OF FIRST IOT        R41 U8602000
        $#JCT  FREE                THEN FREE THE JCT                    U8604000
         SPACE 1                                               @OZ40028 U8605000
         DROP  JCT                 KILL JCT ADDRESSABILITY     @OZ40028 U8605500
         EJECT                                                          U8606000
*********************************************************************** U8606100
*                                                                     * U8608000
*        P R E P A R E   T O   P R O C E S S   J O E                  * U8610000
*                                                                     * U8612000
*********************************************************************** U8612100
         SPACE 1                                                        U8614000
         L     R10,$JOTABLE        RESTORE JOT ADDRESS         @OZ40028 U8615000
         BAL   WE,TBUFGET          GET BUFFER FOR IOT                R4 U8616000
         LH    WE,JOECKPT          COMPUTE                              U8618000
         N     WE,=X'0000FFFF'      AND                                 U8619000
         SLL   WE,2                  SAVE CHECKPOINT                 R4 U8619100
         ST    WE,PSOCKOFF            JOE OFFSET               @OZ40028 U8621000
         ALR   WE,R10                  AND                     @OZ40028 U8622000
         MVC   PSOCKOFF(1),JOEFLAG      FLAG BYTE              @OZ40028 U8624000
         TM    JOEFLAG,$JOESPIN    TEST FOR SPIN JOE                    U8630000
         BZ    *+8                 BR IF NO                             U8632000
         L     WC,JOEIOTTR          ELSE USE SPIN IOT ADDRESS       R41 U8634000
         L     WB,$IOTPDDB         GET OFFSET OF FIRST PDDB         R41 U8636000
         TM    JOEFLAG,$JOECKV     CHECKPOINT JOE VALID...          R41 U8638000
         BZ    TIOTRD              BR IF NO TO READ IOT             R41 U8640000
         LH    WB,JOEPDDB-JOEDSECT(,WE)  USE SAVED PDDB OFFSET      R41 U8642000
         L     WC,JOEIOTTR-JOEDSECT(,WE) LOAD CORRECT IOT      @OZ28561 U8642500
         EJECT                                                          U8649000
*********************************************************************** U8649100
*                                                                     * U8650000
*        R E A D   I N   O U T P U T   I O T                          * U8652000
*                                                                     * U8654000
*********************************************************************** U8654100
         SPACE 1                                                        U8656000
TIOTRD   MVI   PCEDEVTP,PCEDARD    INDICATE READ FOR $EXCP              U8658000
         ST    WC,PCESEEK          SET SEEK ADDRESS FOR $EXCP       R41 U8662000
         BAL   WE,TEXCP             AND READ IN THE IOT              R4 U8664000
         BM    TBADKEY             BR IF ERROR READING IOT           R4 U8666000
         CLC   IOTJBKEY,PSOJBKEY   TEST IOT VALIDITY                    U8668000
         BNE   TBADKEY             BR IF INVALID IOT                    U8670000
         SH    WB,=Y(PDBLENG)      PREPARE TO SCAN PDDBS            R41 U8672000
         SPACE 1                                                        U8676000
*********************************************************************** U8676100
*                                                                     * U8678000
*        G E T   N E X T   P D D B                                    * U8680000
*                                                                     * U8682000
*********************************************************************** U8682100
         SPACE 1                                                        U8682500
         USING PDBDSECT,PDDB       PROVIDE PDDB ADDRESSABILITY          U8683000
         SPACE 1                                                        U8684000
TPDBNEXT AH    WB,=Y(PDBLENG)      GET OFFSET OF NEXT PDDB          R41 U8685000
         LA    PDDB,0(WB,IOT)      GET ABSOLUTE PDDB ADDRESS        R41 U8686000
         CL    WB,IOTPDDBP         TEST FOR END OF PDDBS                U8688000
         BL    TPDDB               BR IF NO                             U8690000
         TM    IOTFLAG1,IOT1SPIN   TEST FOR SPIN IOT                    U8702000
         BZ    TIOTNEXT            BR IF NO                             U8704000
         MVI   PCEDEVTP,PCEDAWR    INDICATE WRITE OPERATION          R4 U8706000
         L     R1,$IOTPDDB         POINT TO                          R4 U8707000
         ALR   R1,IOT               SPIN DATA SET PDDB               R4 U8708000
         NI    PDBFLAG1-PDBDSECT(R1),255-PDB1HOLD-PDB1PSO            R4 U8709000
         TM    IOTFLAG1,IOT1ALOC   TEST FOR ALLOCATION IOT              U8710000
         BZ    TPUTSPIN            BR IF NO                             U8712000
         L     R6,PSOWKOFF         GET OFFSET OF CURRENT JOE   @OZ53680 U8712050
         ALR   R6,R10              CONVERT OFFSET TO ABSOLUTE  @OZ53680 U8712100
         LA    R6,0(,R6)           CLEAR HIGH BYTE             @OZ53680 U8712150
        $QSUSE                     OBTAIN CONTROL OF QUEUES    @OZ53680 U8712200
         L     R14,IOTTRACK        GET MTTR OF SPIN IOT        @OZ53680 U8712250
         L     R1,PSOJQEP          GET JQE OFFSET FROM PSO     @OZ53680 U8712300
         AL    R1,$JOBQPTR         CONVERT TO ABSOLUTE ADDR    @OZ53680 U8712350
         LH    R1,JQEJOE-JQEDSECT(,R1) GET FIRST JOE OFFSET    @OZ53680 U8712400
         N     R1,=X'0000FFFF'          FROM JQE               @OZ53680 U8712450
         B     T$NCHECK            CHECK FOR $N'ED JOE         @OZ53680 U8712500
         EJECT                                                 @OZ53680 U8712550
T$NLOOP  LH    R1,JOEJOE-JOEDSECT(,R1) GET NEXT JOE OFFSET     @OZ53680 U8712600
         N     R1,=X'0000FFFF'     CLEAR HIGH BYTES AND        @OZ53680 U8712650
         BZ    TPRGSPIN             BRANCH IF END OF CHAIN     @OZ53680 U8712700
         SPACE 1                                               @OZ53680 U8712750
T$NCHECK SLL   R1,2                CONVERT JOE OFFSET          @OZ53680 U8712800
         ALR   R1,R10               TO ABSOLUTE ADDRESS        @OZ53680 U8712850
         CL    R14,JOEIOTTR-JOEDSECT(,R1) SAME IOT MTTR...     @OZ53680 U8712900
         BNE   T$NLOOP             BR IF NOT                   @OZ53680 U8712950
         CLR   R1,R6               IF ANOTHER WORK JOE         @OZ53680 U8713000
         BE    T$NLOOP              EXISTS FOR THIS SPIN IOT,  @OZ53680 U8713050
         B     TPUTSPIN              DONT PURGE THE TRACKS     @OZ53680 U8713100
TPRGSPIN DS 0H                                                 @OZ53680 U8713150
        $PURGE IOTTGMAP             ELSE PURGE DATA SET TRACKS          U8714000
         NI    IOTFLAG1,255-IOT1ALOC  SHOW NO LONGER ALLOCATION IOT     U8716000
         SPACE 1                                                        U8718000
TPUTSPIN BAL   WE,TEXCP            RE-WRITE SPIN IOT                 R4 U8720000
         SPACE 1                                               @OZ53680 U8720100
*********************************************************************** U8720200
*                                                                     * U8724000
*        D O N E   W I T H   J O E   - -   R E M O V E   I T          * U8726000
*                                                                     * U8728000
*********************************************************************** U8728100
         SPACE 1                                                        U8730000
TJOEREM  L     R1,PSOWKOFF         GET WORK JOE OFFSET         @OZ40028 U8731000
         ALR   R1,R10              CONVERT OFFSET TO ADDRESS   @OZ40028 U8732000
        $#REM  WORK=(R1)           REMOVE WORK JOE FROM JOT    @OZ40028 U8733000
         TM    PSOFLG2,PSOFDONE    TEST FOR END OF REQUESTS             U8734000
         BZ    TJOEGET             BR IF NO TO GET ANOTHER JOE          U8736000
         B     TWTREODS             ELSE RETURN                      R4 U8738000
         SPACE 1                                                     R4 U8738100
*********************************************************************** U8738200
*                                                                     * U8742000
*        G E T   N E X T   I O T   ( I F   A N Y )                    * U8744000
*                                                                     * U8746000
*********************************************************************** U8746100
         SPACE 1                                                        U8748000
         CNOP  0,8                                                      U8750000
TIOTNEXT L     WB,$IOTPDDB         GET OFFSET OF FIRST PDDB         R41 U8752000
         ICM   WC,15,IOTIOTTR      GET ADDRESS OF NEXT IOT          R41 U8754000
         BNZ   TIOTRD              BR IF VALID                      R41 U8756000
         B     TJOEREM              ELSE BR TO PURGE JOE            R41 U8758000
         EJECT                                                      R41 U8768000
*********************************************************************** U8768100
*                                                                     * U8770000
*        T R Y   T O   V A L I D A T E   C U R R E N T   P D D B      * U8772000
*                                                                     * U8774000
*********************************************************************** U8774100
         SPACE 1                                                        U8776000
         CNOP  0,8                                                      U8778000
TPDDB    TM    PDBFLAG1,PDB1NULL+PDB1NSOT  IS DATA SET PRINTABLE...     U8780000
         BNZ   TPDBNEXT            BR IF NO                         R41 U8782000
         L     WG,PSOWKOFF         GET WORK JOE OFFSET         @OZ40028 U8782100
         ALR   WG,R10              CONVERT OFFSET TO ADDRESS   @OZ40028 U8782150
         CLC   PDBCLASS,JOEPDBCL   TEST SYSOUT CLASS                 R4 U8782200
         BNE   TPDBNEXT            BR IF NOT SAME                   R41 U8786000
         TM    JOEFLAG2,$JOEDMND   DEMAND SETUP JOE...              R41 U8787000
         L     WG,PSOCHOFF         GET CHAR JOE OFFSET         @OZ40028 U8788000
         LA    WG,0(R10,WG)        CONVERT OFFSET TO ADDRESS   @OZ40028 U8788500
         BZ    TPDBFORM            BR IF NO                         R41 U8789000
         CLC   PDBCLASS,PSOWKOFF   CLASS MATCH MSGCLASS...     @OZ40028 U8790000
         BE    TPDBWTR             BR IF YES                        R41 U8791000
         SPACE 1                                                    R41 U8791500
TPDBFORM CLC   JOEFORM,PDBFORMS    FORMS MATCH...                   R41 U8792000
         BNE   TPDBNEXT            BR IF NO                         R41 U8793000
         CLC   JOEFCB,PDBFCB       TEST FOR FCB ID MATCH                U8794000
         BNE   TPDBNEXT            BR IF NO                         R41 U8796000
         CLC   JOEUCS,PDBUCS       TEST FOR UCS ID MATCH                U8798000
         BNE   TPDBNEXT            BR IF NO                         R41 U8798500
         CLC   JOEFLASH,PDBFLASH   FLASHING OK...                   R41 U8799000
         BNE   TPDBNEXT            BR IF NO                         R41 U8799500
         TM    PDBFLAG2,PDB2BRST   BURST SPECIFIED...               R41 U8800000
         BZ    TPDBNBRS            BR IF NO                         R41 U8800500
         TM    JOECFLAG,$JOEBRST   BURST REQUIRED...                R41 U8801000
         BZ    TPDBNEXT            BR IF NO                         R41 U8801500
         B     TPDBWTR              ELSE BR TO CONTINUE             R41 U8802000
         SPACE 1                                                    R41 U8802500
TPDBNBRS TM    JOECFLAG,$JOEBRST   BURST REQUIRED...                R41 U8803000
         BO    TPDBNEXT            BR IF YES                        R41 U8803500
         SPACE 1                                                    R41 U8804000
TPDBWTR  CLC   JOEWTRID,PDBWTRID   WRITER ID MATCH...               R41 U8804500
         BNE   TPDBNEXT            BR IF NO                         R41 U8805000
         L     WG,PSOWKOFF         GET WORK JOE ADDRESS        @OZ40028 U8806000
         ALR   WG,R10              CONVERT OFFSET TO ADDRESS   @OZ40028 U8807000
         CLC   JOEDEST,PDBDEST     TEST FOR ROUTE CODE MATCH            U8808000
         BNE   TPDBNEXT            BR IF NO                         R41 U8810000
         EJECT                                                       R4 U8810100
*********************************************************************** U8830100
*                                                                     * U8832000
*        H A V E   P D D B   F O R   E X T E R N A L   W R I T E R    * U8834000
*                                                                     * U8836000
*********************************************************************** U8836100
         SPACE 1                                                        U8838000
        $QSUSE                     REQUEST ACCESS TO CKPT DATA      R41 U8838500
         L     WG,PSOCKOFF         GET CKPT JOE ADDRESS        @OZ40028 U8839000
         ALR   WG,R10              CONVERT OFFSET TO ADDRESS   @OZ40028 U8839500
         IC    R15,JOECOPY         SAVE DATA SET COPY COUNT         R41 U8840000
         XC    JOECKPP,JOECKPP     CLEAR CHECKPOINT JOE        @OZ27300 U8840500
         STC   R15,JOECOPY         RESTORE DATA SET COPY COUNT      R41 U8841000
         MVC   JOEJRCB,=Y(HDBSTART-BUFDSECT)  SET BUFFER OFFSET     R41 U8842000
         STH   WB,JOEPDDB          SET PDDB DISPLACEMENT            R41 U8842500
         MVC   JOEMTTR,PDBMTTR     SET DATA SET TRACK ADDRESS       R41 U8843000
         MVC   JOEIOTTR,IOTTRACK   SET IOT TRACK ADDRESS            R41 U8843500
         MVI   PSOCOPY,0           SET INITIAL JOECOPY VALUE        R41 U8844000
         TM    PSOCHOFF,X'80'      TEST FOR NEW SELECTION REQS @OZ40028 U8846000
         BO    TNOTOK              BR IF SO                             U8848000
         TM    PSOCKOFF,$JOECKV    TEST FOR WARM START         @OZ40028 U8852000
         BO    TFASTART            BR IF SO                             U8854000
         L     R1,PSOWKOFF         GET WORK JOE ADDRESS        @OZ40028 U8856000
         ALR   R1,R10              CONVERT OFFSET TO ADDRESS   @OZ40028 U8857000
         TM    JOEFLAG-JOEDSECT(R1),$JOECKV  CKPT JOE VALID...      R41 U8858000
         BO    TKWIKST             BR IF YES                        R41 U8860000
         OI    JOEFLAG-JOEDSECT(R1),$JOECKV  SHOW CKPT JOE VALID        U8862000
        $#CKPT JOE=0(,R1),TYPE=A   CHECKPOINT THE WORK JOE              U8863000
         EJECT                                                       R4 U8863100
*********************************************************************** U8863200
*                                                                     * U8866000
*        C H E C K P O I N T   T H E   C H E C K P O I N T   J O E    * U8868000
*                                                                     * U8870000
*********************************************************************** U8870100
         SPACE 1                                                        U8872000
TKWIKST  MVI   JOECOPY,0           INITIALIZE DATA SET COPY CT      R41 U8873000
         SPACE 1                                                    R41 U8873500
TFASTART NI    PSOCKOFF,FF-$JOECKV RESET WARM START BIT        @OZ40028 U8874000
        $#CKPT JOE=0(,WG),TYPE=A   CHECKPOINT THE CKPT JOE              U8876000
         L     R1,PSOJQEP          GET ADDRESS                      R41 U8877000
         AL    R1,$JOBQPTR          OF JOB QUEUE ELEMENT            R41 U8877100
         TM    JQEFLAGS,QUEPURGE+QUEHOLDA+QUEHOLD1  TEST JOB        R41 U8877200
         BNZ   TNOTOK2             BR IF JOB PURGING OR HELD        R41 U8877300
         LA    R1,1                SET PSO DATA SET                     U8878000
         STH   R1,PSOCOPY           COPY COUNT TO 1                     U8880000
         L     WG,PSOWKOFF         POINT TO JOEROUT BEFORE     @OZ40028 U8880100
         LH    WG,JOEROUT-JOEDSECT(R10,WG)  CONVERT TO EBCDIC  @OZ40028 U8880200
         L     R15,=A(TSAVPDDB)    POINT TO PDDB SAVE ROUTINE        R4 U8881000
         B     TWTREXIT             AND BR TO EXIT FROM HASPWTR      R4 U8882000
         SPACE 1                                                    R41 U8914000
*********************************************************************** U8914100
*                                                                     * U8916000
*        H A V E   A   J O E   -   G E T   N E X T   D A T A   S E T  * U8916100
*                                                                     * U8920000
*********************************************************************** U8920100
         SPACE 1                                                        U8922000
         CNOP  0,8                                                      U8924000
TREENTRY L     WG,PSOCKOFF         GET CKPT JOE OFFSET         @OZ40028 U8926000
         ALR   WG,R10              CONVERT OFFSET TO ADDRESS   @OZ40028 U8927000
         LA    PDDB,PSOPDDB        GET UPDATED PDDB ADDRESS         R41 U8928000
         TM    PDBFLAG1,PDB1NSOT   DATA SET BEING DELETED...        R41 U8930000
         BO    TREENTOK            BR IF YES                        R41 U8932000
         OI    PSOFLG2,PSOFDONE    ERROR -- FORCE ABORT             R41 U8934000
         B     TNOTOK              BR TO REQUEUE JOES               R41 U8936000
         SPACE 1                                                    R41 U8938000
TREENTOK NI    PDBFLAG1,255-PDB1NSOT RESET IN CASE ANOTHER COPY     R41 U8940000
         IC    R1,JOECOPY          INCREMENT                        R41 U8942000
         LA    R1,1(,R1)            AND SAVE                        R41 U8944000
         STC   R1,PSOCOPY            DATA SET COPY COUNT            R41 U8946000
         L     R1,PSOJQEP          GET JQE ADDRESS             @OZ40028 U8948000
         AL    R1,$JOBQPTR         CONVERT OFFSET TO ADDRESS   @OZ40028 U8950000
         EJECT                                                       R4 U8968100
*********************************************************************** U8968200
*                                                                     * U8972000
*        R E - T E S T   S E L E C T I O N   R E Q U I R E M E N T S  * U8974000
*                                                                     * U8976000
*********************************************************************** U8976100
         SPACE 1                                                        U8978000
         TM    PSOFLG2,PSOFDONE    TEST FOR END OF REQUESTS             U8980000
         BO    TJOEREQ             BR IF SO                             U8982000
         TM    PSOFLG1,PSOFCLAS    TEST CLASS REQUIREMENT               U8984000
         BZ    TCLASOK             BR IF NONE                           U8986000
         LA    R0,L'PSOCLAS         ELSE PREPARE TO                     U8988000
         LA    WE,PSOCLAS-1          RE-SCAN SYSOUT CLASS LIST          U8990000
         L     WG,PSOWKOFF         GET WORK JOE ADDRESS        @OZ40028 U8991000
         ALR   WG,R10              CONVERT OFFSET TO ADDRESS   @OZ40028 U8991500
         SPACE 1                                                        U8992000
TCLASNXT LA    WE,1(,WE)           GET NEXT OUTPUT CLASS                U8994000
         CLC   JOEPDBCL,0(WE)      TEST SYSOUT CLASS FOR MATCH       R4 U8994200
         BE    TCLASOK             BR IF SO                             U8998000
         CLI   0(WE),C' '          TEST FOR END OF CLASS LIST           U9000000
         BE    TJOEREQ             BR IF SO                             U9002000
         BCT   R0,TCLASNXT         LOOP UNTIL END OF CLASS LIST         U9004000
         SPACE 1                                                        U9006000
TJOEREQ  L     WG,PSOCKOFF         GET CKPT JOE OFFSET         @OZ40028 U9008000
         ALR   WG,R10              CONVERT OFFSET TO ADDRESS   @OZ40028 U9008500
         CLC   PDBCOPYS,PSOCOPY    ANOTHER COPY NEEDED...           R41 U9009000
         BH    TNOTOK              BR IF YES                        R41 U9010000
         OI    PSOCHOFF,X'80'      INDICATE NEW SELECTION REQS @OZ40028 U9012000
         B     TNXTDS               AND BR TO LOCATE NEXT PDDB      R41 U9016000
         SPACE 1                                                     R4 U9016100
         CNOP  0,8                                                      U9020000
TCLASOK  TM    PSOFLG1,PSOFJOBI    TEST JOB ID REQUIREMENT              U9022000
         BZ    TIDOK               BR IF NONE                           U9024000
         CLC   PSOJOBNO,JQEJOBNO   TEST FOR JOB ID MATCH                U9026000
         BNE   TJOEREQ             BR IF NO                             U9028000
         SPACE 1                                                        U9030000
TIDOK    TM    PSOFLG1,PSOFJOBN    TEST JOB NAME REQUIREMENT            U9032000
         BZ    TNAMEOK             BR IF NONE                           U9034000
         CLC   PSOJOBN,JQEJNAME    TEST FOR JOB NAME MATCH              U9036000
         BNE   TJOEREQ             BR IF NO                             U9038000
         SPACE 1                                                        U9040000
TNAMEOK  TM    PSOFLG1,PSOFDEST    TEST ROUTING REQUIREMENT             U9042000
         BZ    TDESTOK             BR IF NONE                           U9044000
         L     WG,PSOWKOFF         GET WORK JOE OFFSET         @OZ40028 U9046000
         ALR   WG,R10              CONVERT OFFSET TO ADDRESS   @OZ40028 U9047000
         LH    WB,JOEROUT          GET ROUTING FROM JOE              R4 U9048000
         LTR   WB,WB               TEST FOR EXPLICIT ROUTING         R4 U9050000
         BNZ   *+8                 BR IF YES                         R4 U9052000
         LH    WB,JQEPRTRT          ELSE GET ROUTING FROM JQE        R4 U9054000
         CH    WB,PSOROUTE         TEST FOR SAME ROUTING                U9058000
         BNE   TJOEREQ             BR IF NO                             U9060000
         SPACE 1                                                        U9062000
TDESTOK  TM    PSOFLG1,PSOFPGM     TEST WRITER NAME REQUIREMENT         U9064000
         BZ    TPGMNOK             BR IF NONE                           U9066000
         CLC   PSOPGMN,PDBWTRID    TEST FOR WRITER NAME MATCH           U9068000
         BNE   TJOEREQ             BR IF NO                             U9070000
         EJECT                                                       R4 U9070100
TPGMNOK  TM    PSOFLG1,PSOFFORM    TEST FORMS REQUIREMENT               U9074000
         BZ    TOK                 BR IF NONE                           U9076000
         CLC   PSOFORM,PDBFORMS    TEST FOR FORMS MATCH                 U9078000
         BNE   TJOEREQ             BR IF NO                             U9080000
         SPACE 1                                                        U9082000
*********************************************************************** U9082100
*                                                                     * U9084000
*        REQUIREMENTS UNCHANGED -- CONTINUE PROCESSING JOE     @OZ40028 U9086000
*                                                                     * U9088000
*********************************************************************** U9088100
         SPACE 1                                                        U9090000
TOK      L     WG,PSOCKOFF         GET CKPT JOE OFFSET         @OZ40028 U9091000
         ALR   WG,R10              CONVERT OFFSET TO ADDRESS   @OZ40028 U9091100
         CLC   PDBCOPYS,PSOCOPY    ANOTHER COPY NEEDED...           R41 U9091500
         BNH   TNXTDS              BR IF NO TO LOCATE NEXT PDDB     R41 U9092000
        $QSUSE                     REQUEST ACCESS TO CKPT DATA      R41 U9093000
         MVC   JOECOPY,PSOCOPY     SET DATA SET COPY COUNT          R41 U9093500
         B     TFASTART            BR TO PROVIDE NEXT COPY          R41 U9094000
         SPACE 1                                                    R41 U9094500
TNXTDS   LH    WB,JOEPDDB          GET AND UPDATE                   R41 U9095000
         AH    WB,=Y(PDBLENG)       CURRENT PDDB OFFSET             R41 U9096000
         L     WC,JOEIOTTR         GET IOT TRACK ADDRESS            R41 U9097000
         BAL   WE,TBUFGET          GET A BUFFER                     R41 U9098000
         B     TIOTRD              BR TO READ IOT                   R41 U9099000
         EJECT                                                 @OZ40028 U9100000
*********************************************************************** U9100100
*                                                                     * U9102000
*        REQUIREMENTS CHANGED -- RETURN JOE TO JOT             @OZ40028 U9104000
*                                                                     * U9106000
*********************************************************************** U9106100
         SPACE 1                                                        U9108000
TNOTOK  $QSUSE                     REQUEST ACCESS TO CKPT DATA      R41 U9108500
         L     R1,PSOJQEP          GET ADDRESS                      R41 U9109000
         AL    R1,$JOBQPTR          OF JOB QUEUE ELEMENT            R41 U9109500
         SPACE 1                                                    R41 U9110000
TNOTOK2  TM    JQEFLAGS,QUEPURGE   JOB BEING PURGED...              R41 U9110500
         BO    TNXTDS              BR IF YES TO                     R41 U9111000
         MVC   JOECOPY,PSOCOPY     UPDATE COPY COUNT                R41 U9111500
         L     R1,PSOWKOFF         GET WORK JOE OFFSET         @OZ40028 U9111600
         ALR   R1,R10              CONVERT OFFSET TO ADDRESS   @OZ40028 U9111700
        $#PUT  WORK=(R1),PRC=(WG)  RETURN WORK JOE TO JOT      @OZ40028 U9112000
         TM    PSOFLG2,PSOFDONE    END OF REQUESTS...               R41 U9113000
         BZ    TJOEGET             BR IF NO TO GET ANOTHER JOE      R41 U9114000
         B     TWTREODS             ELSE BR TO EXIT TO POST RTN     R41 U9115000
         EJECT                                                          U9116000
         SPACE 1                                                        U9144000
*********************************************************************** U9144100
*                                                                     * U9146000
*        E R R O R   R E A D I N G   I O T                            * U9148000
*                                                                     * U9150000
*********************************************************************** U9150100
         SPACE 1                                                        U9152000
TBADKEY $DISTERR                   ISSUE DISASTEROUS ERROR MSG          U9158000
         B     TJOEREM             THEN BR TO REMOVE CURRENT JOE        U9160000
         SPACE 1                                                    R41 U9162000
*********************************************************************** U9162100
*                                                                     * U9164000
*        G E T   A N D   P R E P A R E   I O T   B U F F E R          * U9166000
*                                                                     * U9168000
*********************************************************************** U9168100
         SPACE 1                                                        U9170000
         CNOP  0,8                                                      U9172000
TBUFGET  LTR   IOT,IOT             HAS IOT BEEN PAGE RELEASED...     R4 U9174000
         BP    TBUFGETS            BR IF NO TO SET BUFFER ADDR       R4 U9178000
         LA    IOT,0(,IOT)          ELSE SHOW VALID IOT                 U9180000
        $BFRBLD (IOT)                AND BUILD IOB WITHIN IOT BFR       U9182000
         MVC   IOTID,=CL4'IOT'          INITIALIZE IOT               R4 U9184000
         LH    R1,$BUFLENG               IDENTIFICATION              R4 U9186000
         STH   R1,IOTLENG                  AND LENGTH FIELDS         R4 U9188000
         SPACE 1                                               @OZ40028 U9190000
TBUFGETS ST    IOT,PCEBUFAD        SET BUFFER ADDR FOR $EXCP   @OZ40028 U9191000
         BR    WE                  THEN RETURN                          U9192000
         SPACE 3                                                     R4 U9194000
*********************************************************************** U9194100
*                                                                     * U9196000
*        I O T   R E A D / W R I T E   R O U T I N E                  * U9198000
*                                                                     * U9200000
*********************************************************************** U9200100
         SPACE 1                                                        U9202000
         CNOP  0,8                                                      U9204000
TEXCP    LA    R1,PCEDADCT         GET DIRECT ACCESS DCT ADDRESS     R4 U9206000
        $EXCP  (R1),WAIT=YES       READ/WRITE IOT                    R4 U9208000
         BR    WE                  RETURN WITH VALID CC              R4 U9210000
         EJECT                                                          U9242000
         SPACE 5                                                        U9244000
         LTORG                                                          U9246000
         SPACE 1                                                        U9248000
         DROP  R1,WD,WG,IOT,PDDB   KILL PROCESSOR ADDRESSABILITY        U9250000
         TITLE 'HASP PROCESS SYSOUT SUPPORT -- $L SUPPORT'              U9252000
*********************************************************************** U9252100
*                                                                     * U9254000
*        $ L   S U P P O R T   R O U T I N E                          * U9256000
*                                                                     * U9258000
*********************************************************************** U9258100
         SPACE 2                                                        U9260000
         USING HQRDSECT,WA         PROVIDE HQR ADDRESSABILITY           U9262000
         USING JQEDSECT,WD         PROVIDE JQE ADDRESSABILITY           U9264000
         SPACE 2                                                        U9266000
HASPLIST $ENTRY BASE=BASE3,CSECT=NO  PROVIDE $L SUPPORT ENTRY POINT     U9268000
         LR    WB,R1               SAVE PARAMETER AREA ADDRESS          U9270000
         L     WD,0(,WB)           LOAD JQE ADDRESS                     U9272000
         ICM   JCT,15,TLBUFFER     IF BUFFER EXISTS,                    U9274000
         BNZ   TLBLD                BR TO CONSTRUCT IOB                 U9276000
         SPACE 1                                                        U9278000
*********************************************************************** U9278100
*                                                                     * U9280000
*        O B T A I N   J C T / H Q T   B U F F E R   S T O R A G E    * U9282000
*                                                                     * U9284000
*********************************************************************** U9284100
         SPACE 1                                                        U9286000
         L     R0,TLBFRSIZ         GET BUFFER SIZE (ROUNDED TO 4K)      U9288000
         GETMAIN RC,LV=(0),BNDRY=PAGE  GET THE BUFFER STORAGE           U9290000
         LR    JCT,R1              RELOAD THE BUFFER ADDRESS            U9292000
         ST    JCT,TLBUFFER         AND SAVE IT FOR FUTURE USE          U9294000
         LTR   R15,R15             IF GETMAIN SUCCESSFUL,               U9296000
         BZ    TLBLD                BR TO CONSTRUCT IOB                 U9298000
T02     $ERROR                       ELSE CRUMP                         U9300000
         SPACE 1                                                        U9302000
TLBUFFER DC    A(*-*)              PERMANENT JCT/HQT BUFFER             U9304000
TLBFRSIZ DC    A(4096)             STORAGE SIZE FOR JCT/HQT BUFFERS  R4 U9306000
         EJECT                                                          U9308000
*********************************************************************** U9308100
*                                                                     * U9310000
*        C O N T S R U C T   I O B   F O R   B U F F E R              * U9312000
*                                                                     * U9314000
*********************************************************************** U9314100
         SPACE 1                                                        U9316000
         USING JCTDSECT,JCT        PROVIDE JCT ADDRESSABILITY           U9318000
TLBLD   $BFRBLD (JCT)              REBUILD IOB WITHIN BUFFER            U9320000
         MVI   PCEDEVTP,PCEDARD    INDICATE READ OPERATIONS             U9322000
         L     R0,JQETRAK          GET JCT TRACK ADDRESS                U9324000
         ST    JCT,PCEBUFAD        SET BUFFER ADDRESS FOR $EXCP         U9326000
         BAL   WE,TLIO              AND READ IN THE JCT                 U9328000
         LR    R0,WD               IF JCT                               U9330000
         SL    R0,$JOBQPTR          NOT                                 U9332000
         CL    R0,JCTJQE             VALID,                             U9334000
         BNE   TLIODST                BR TO ISSUE ERROR MSG             U9336000
         L     WC,JCTJBKEY         SAVE JOB KEY FOR HQT VALIDATION      U9338000
         ICM   R0,15,JCTHQT         AND LOAD ADDRESS OF 1ST HQT         U9340000
         BZ    TLEXIT              IF NO HQT, BR TO RETURN              U9342000
         SPACE 1                                                        U9344000
         USING HQTDSECT,JCT        PROVIDE HQT ADDRESSABILITY           U9346000
         SPACE 1                                                        U9348000
*********************************************************************** U9348100
*                                                                     * U9350000
*        R E A D   I N   H Q T                                        * U9352000
*                                                                     * U9354000
*********************************************************************** U9354100
         SPACE 1                                                        U9356000
TLHQTRD  BAL   WE,TLIO             READ IN THE HQT                      U9358000
         CL    WC,HQTJBKEY         IF INVALID HQT,                      U9360000
         BNE   TLIODST              BR TO ISSUE ERROR MSG               U9362000
         CLC   HQTID,=CL4'HQT'     IF DUMMY HQT,                        U9364000
         BNE   TLEXIT               BR TO RETURN                        U9366000
         LA    WA,HQTHQR             ELSE PREPARE TO           @OZ19494 U9368000
         L     WF,HQTHQRP             SCAN HQT                          U9370000
         ALR   WF,JCT                  FOR ACTIVE              @OZ19494 U9372000
         B     TLHQR1                   HQRS                   @OZ19494 U9372100
         SPACE 1                                                        U9374000
TLHQRNXT LA    WA,HQRLENG(,WA)     POINT TO NEXT HQR                    U9376000
TLHQR1   CLR   WA,WF               IF END OF HQRS,             @OZ19494 U9378000
         BE    TLHQTNXT             BR TO TEST FOR ANOTHER HQT          U9380000
         TM    HQRSTAT,HQRUNHLD    IF DATA SET NO LONGER HELD,          U9382000
         BO    TLHQRNXT             BR TO TEST NEXT HQR                 U9384000
         IC    R1,PDBCLASS-PDBDSECT+HQRPDDB  GET SYSOUT CLASS           U9386000
         N     R1,=A(X'3F')        GET PARAMETER                        U9388000
         IC    R1,TLOFFSET(R1)      TABLE OFFSET                        U9390000
         LTR   R1,R1               IF ILLEGAL SYSOUT CLASS,             U9392000
         BZ    TLHQRNXT             BR TO TEST NEXT HQR                 U9394000
         LH    WE,2(WB,R1)           ELSE BUMP                          U9396000
         LA    WE,1(,WE)              SYSOUT                            U9398000
         STH   WE,2(WB,R1)             CLASS COUNT                      U9400000
         B     TLHQRNXT            THEN BR TO TEST NEXT HQR             U9402000
         EJECT                                                          U9404000
TLHQTNXT ICM   R0,15,HQTHQT        IF ANOTHER HQT,                      U9406000
         BNZ   TLHQTRD              BR TO SCAN IT                       U9408000
         SPACE 1                                                        U9410000
TLEXIT  $PGSRVC RLSE,(JCT),TLBFRSIZ PAGE RELEASE THE BUFFER          R4 U9410100
        $RETURN                    THEN RETURN TO CALLER                U9414000
         SPACE 2                                                        U9416000
*********************************************************************** U9416100
*                                                                     * U9418000
*        R E A D   A   C O N T R O L   B L O C K                      * U9420000
*                                                                     * U9422000
*********************************************************************** U9422100
         SPACE 1                                                        U9424000
         CNOP  0,8                                                      U9426000
TLIO     ST    R0,PCESEEK          SET SEEK ADDRESS FOR $EXCP           U9428000
         LA    R1,PCEDADCT         GET DIRECT ACCESS DCT ADDRESS        U9430000
        $EXCP  (R1),WAIT=YES       READ CONTROL BLOCK                R4 U9432000
         BOR   WE                  RETURN IF READ OK                 R4 U9434000
         SPACE 1                                                        U9446000
TLIODST $DISTERR                   ISSUE DISASTEROUS ERROR MESSAGE      U9448000
         B     TLEXIT              THEN BR TO RETURN TO CALLER          U9450000
         SPACE 1                                                        U9452000
         DROP  WA,WD,JCT           KILL CTL BLOCK ADDRESSABILITY        U9454000
         EJECT                                                       R4 U9454100
TLOFFSET DC    10AL1(2*(*-TLOFFSET)),7AL1(0)        OUTPUT CLASS A-I    U9458000
         DC     9AL1(2*(*-TLOFFSET-7)),8AL1(0)      OUTPUT CLASS J-R    U9460000
         DC     8AL1(2*(*-TLOFFSET-7-8)),6AL1(0)    OUTPUT CLASS S-Z R4 U9462000
         DC    10AL1(2*(*-TLOFFSET-7-8-6)),6AL1(0)  OUTPUT CLASS 0-9    U9464000
         SPACE 5                                                     R4 U9464100
         LTORG                                                          U9468000
         SPACE 5                                                     R4 U9468100
$XEQLEN $DLENGTH                   COMPUTE CONTROL SECTION LENGTH       U9472000
         SPACE 3                                                        U9474000
APARNUM  DC    CL5'56448'          APAR NUMBER                          U9475998
         END   ,                   END OF HASPXEQ                       U9476000
