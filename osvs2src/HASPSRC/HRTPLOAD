         TITLE 'RTPLOAD PROLOGUE'                                       W0002000
*********************************************************************** W0004000
*                                                                     * W0006000
* MODULE NAME = HRTPLOAD                                              * W0008000
*                                                                     * W0010000
* DESCRIPTIVE NAME = RTPLOAD (LOADER FOR 1130 RJE PROGRAM - RTP1130)  * W0012000
*                                                                     * W0014000
* COPYRIGHT = NONE                                                    * W0016000
*                                                                     * W0018000
* STATUS = OS/VS2 RELEASE 2, LEVEL 0                                  * W0020000
*                                                                     * W0022000
* FUNCTION = RTPLOAD IS THE CORE IMAGE LOADER AND REP CARD PROCESSOR  * W0024000
*            FOR THE 1130 RJE WORKSTATION PROGRAM (RTP1130). RTPLOAD  * W0026000
*            IS LOADED INTO 1130 CORE STORAGE VIA A 2501 OR 1442 CARD * W0028000
*            READER BY THE BOOTSTRAP LOADER (RTPBOOT). IF A /*SIGNON  * W0030000
*            CARD IS INCLUDED WITH THE RTP1130 DECK BEING LOADED, IT  * W0032000
*            IS READ BY RTPLOAD AND PASSED TO RTP1130, OTHERWISE AN   * W0034000
*            INTERNAL DEFAULT /*SIGNON CARD IS USED.                  * W0036000
*                                                                     * W0038000
* NOTES = SEE BELOW                                                   * W0040000
*                                                                     * W0042000
* DEPENDENCIES = STRUCTURE OF THE RTPBOOT PROGRAM WHICH DICTATES      * W0044000
*                THE 1442/2501 FLAG USED TO DETERMINE THE READER      * W0046000
*                TYPE                                                 * W0048000
*                                                                     * W0050000
* RESTRICTIONS = NONE                                                 * W0052000
*                                                                     * W0054000
* REGISTER CONVENTIONS = WA = XR1 = WORK                              * W0056000
*                        WB = XR2 = WORK                              * W0058000
*                        WC = XR3 = WORK                              * W0060000
*                                                                     * W0062000
* PATCH LABEL = NONE                                                  * W0064000
*                                                                     * W0066000
* MODULE TYPE = PROCEDURE                                             * W0068000
*                                                                     * W0070000
* PROCESSOR = ASSEMBLER F                                             * W0072000
*                                                                     * W0074000
* MODULE SIZE = 1024 DECIMAL 1130 WORDS                               * W0076000
*                                                                     * W0078000
* ATTRIBUTES = NON-REENTERNT, NON-REFRESHABLE, NON-SERIALLY REUSABLE  * W0080000
*                                                                     * W0082000
* ENTRY POINT = RTPLINIT                                              * W0084000
*                                                                     * W0086000
* PURPOSE = SEE FUNCTION                                              * W0088000
*                                                                     * W0090000
* LINKAGE = TRANSFER OF CONTROL FROM RTPBOOT VIA 'END' CARD ENTRY     * W0092000
*           POINT SPECIFICATION. WB = ADDRESS OF /*SIGNON CARD.       * W0094000
*                                                                     * W0096000
* INPUT = RTP1130 PROGRAM DECK AS PRODUCED BY RMTGEN PROCESS          * W0098000
*                                                                     * W0100000
* OUTPUT = EXECUTABLE RTP1130 PROGRAM LOADED IN 1130 CORE             * W0102000
*                                                                     * W0104000
* EXIT-NORMAL = CONTROL PASSED TO RTP1130                             * W0106000
*                                                                     * W0108000
* EXIT-ERROR = WAIT AT LOCATION X'0010' WITH AC DISPLAYED AS FOLLOWS- * W0110000
*                                                                     * W0112000
*              AC   CONDITION                                         * W0114000
*              --   ---------                                         * W0116000
*              FFF3 LAST REP CARD READ IN ERROR. LOADING PERMANENTLY  * W0118000
*                   TERMINATED                                        * W0120000
*                                                                     * W0122000
*              FFF2 CHECKSUM OF LAST CARD READ DOES NOT AGREE         * W0124000
*                   WITH RMTGEN COMPUTED CHECKSUM                     * W0126000
*                                                                     * W0128000
*              FFF1 LAST CARD INDICATION. TO COMMENCE RTP1130 , PRESS * W0130000
*                   START ON READER AND THEN ON 1130 CONSOLE          * W0132000
*                                                                     * W0134000
* EXTERNAL REFERENCES = NONE                                          * W0136000
*                                                                     * W0138000
* TABLES = XPRSZNTB - 12 BIT CARD CODE TO EBCDIC CONVERSION           * W0140000
*                                                                     * W0142000
* MACROS = LOCALLY DEFINED 1130 EQUIVALENT INSTRUCTION SET            * W0144000
*                                                                     * W0146000
*********************************************************************** W0148000
         TITLE '1130 MACRO DEFINITIONS (11/7/70)'                       W0150000
         SPACE 3                                                        W0152000
*********************************************************************** W0154000
*                                                                     * W0156000
* TITLE - OS/360 MACRO DEFINTIONS FOR 1130 INSTRUCTIONS               * W0158000
*                                                                     * W0160000
* GENERAL DESCRIPTION -                                               * W0162000
*                                                                     * W0164000
*  THE MACROS DEFINED BELOW ATTEMPT TO ALLOW 1130 PROGRAMS TO BE      * W0166000
*  ASSEMBLED ON AN IBM 360 USING THE OS/360 ASSEMBLER OR IT'S         * W0168000
*  EQUIVALENT UNDER OTHER OPERATING SYSTEMS.                          * W0170000
*                                                                     * W0172000
*  THE OBJECT DECK PRODUCED BY THE ASSEMBLER IS INCOMPATIBLE WITH     * W0174000
*  NORMAL 1130 LOADER AND THEREFORE MUST BE PROCESSED BY A SPECIAL    * W0176000
*  1130 LOADER COGNIZANT OF THE 360 FORMAT.                           * W0178000
*                                                                     * W0180000
* MACRO INSTRUCTION FORMAT                                            * W0182000
*                                                                     * W0184000
*  THE GENERAL FORMAT OF 1130 INSTRUCTIONS TO BE ASSEMBLED WITH       * W0186000
*  THE MACRO SET IS...                                                * W0188000
*                                                                     * W0190000
*                                                                     * W0192000
*                        LABEL $OP ADDR,TAG,FMT,MOD                   * W0194000
*                                                                     * W0196000
*  WHERE                                                              * W0198000
*              LABEL = THE STATEMENT LABEL SUBJECT TO OS/360          * W0200000
*                      ASSEMBLER RESTRICTIONS AND RULES               * W0202000
*                                                                     * W0204000
*              $OP   = MACRO FROM THE SET DEFINED BELOW               * W0206000
*                                                                     * W0208000
*              ADDR  = THE ADDRESS FIELD OF THE 1130 INSTRUCTION      * W0210000
*                                                                     * W0212000
*              TAG   = THE INDEX REGISTER (TAG) FIELD OF THE          * W0214000
*                      1130 INSTRUCTION                               * W0216000
*                                                                     * W0218000
*              FMT   = THE FORMAT OF THE 1130 INSTRUCTION.            * W0220000
*                    = L FOR LONG FORM                                * W0222000
*                                                                     * W0224000
*                    = I FOR LONG FORM INDIRECT ADDRESSING            * W0226000
*                                                                     * W0228000
*                    = X FOR SHORT FORM ABSOLUTE ADDRESS              * W0230000
*                                                                     * W0232000
*                    = 'BLANK' FOR SHORT FORM RELATIVE ADDRESS        * W0234000
*                                                                     * W0236000
*              MOD   = MODIFIER BITS REQUIRED FOR SOME 1130           * W0238000
*                      INSTRUCTIONS                                   * W0240000
*                                                                     * W0242000
*********************************************************************** W0244000
         EJECT                                                          W0246000
*********************************************************************** W0248000
*              GENERAL 1130 INSTRUCTION DEFINITION MACRO              * W0250000
*********************************************************************** W0252000
         MACRO                                                          W0254000
&NAME    $DEF  &OP,&ADD,&TAG,&FMT,&MOD                                  W0256000
         LCLA  &I                  DEFINED FOR INDIRECT ADDRESSING BIT  W0258000
         LCLC  &T,&M               DEFINED FOR INTERNAL MANIPULATION    W0260000
&T       SETC  '&TAG'              EQUATE TAG AND MOD FIELDS TO         W0262000
&M       SETC  '&MOD'               INTERNAL PARAMETERS                 W0264000
         AIF   ('&T' NE '').A      TEST FOR NULL TAG FIELD              W0266000
&T       SETC  '0'                  AVOID ASSEMBLY ERROR IF NULL        W0268000
.A       AIF   ('&M' NE '').B      TEST FOR NULL MOD FIELD              W0270000
&M       SETC  '0'                  AVOID ASSEMBLY ERROR IF NULL        W0272000
.B       AIF   ('&FMT' NE 'L' AND '&FMT' NE 'I').H BRA IF SHORT FORM    W0274000
         AIF   ('&FMT' EQ 'L').C   DETERMINE IF LONG ONLY OR INDIRECT   W0276000
&I       SETA  X'80'               TURN ON INDIRECT ADDRESS BIT         W0278000
.C       AIF   (T'&ADD EQ 'N' OR '&ADD'(1,1) EQ '$').G BR IF $ OR NUMR  W0280000
         AIF   ('&ADD'(1,1) EQ 'W').E TEST FOR SYMBOL BEGINNING WITH W  W0282000
         AIF   ('&ADD'(1,1) EQ '*').F TEST FOR RELATIVE EXPRESSION      W0284000
.D       ANOP                                                           W0286000
&NAME    DC    AL1(&OP+&T+4,&I+&M),AL2((&ADD-$Z)/2)                     W0288000
         MEXIT                                                          W0290000
.E       AIF   ('&ADD'(2,1) EQ 'A' OR '&ADD'(2,1) EQ 'B' OR '&ADD'(2,1)CW0292000
                EQ 'C').G          BRANCH IF WA, WB OR WC               W0294000
         AGO   .D                   WHICH ARE DEFINED AS ABSOLUTE       W0296000
.F       AIF   (K'&ADD LT 3).D     ELIMINATE ILLEGAL EXPRESSION         W0298000
         AIF   ('&ADD'(2,2) NE '-*').D   BRANCH IF NOT *-*              W0300000
.G       ANOP                                                           W0302000
&NAME    DC    AL1(&OP+&T+4,&I+&M),AL2(&ADD)                            W0304000
         MEXIT                                                          W0306000
.H       AIF   ('&FMT' EQ 'X' OR '&ADD'(1,1) EQ '-' OR T'&ADD EQ 'N').I W0308000
&NAME    DC 0SL2(*+D-&ADD,&ADD-*+D),AL1(&OP+&T,(&ADD-*-1)/2)            W0310000
         MEXIT                                                          W0312000
.I       AIF   ('&ADD'(1,1) EQ '-').J  BRANCH IF MINUS ABSOLUTE         W0314000
&NAME    DC    0SL2(A-&ADD),AL1(&OP+&T,&ADD+&M)                         W0316000
         MEXIT                                                          W0318000
.J       ANOP                                                           W0320000
&NAME    DC    0SL2(B&ADD),AL1(&OP+&T,0&ADD)                            W0322000
         MEND                                                           W0324000
*********************************************************************** W0326000
*              GENERAL LONG FORM DEFINITION MACRO                     * W0328000
*********************************************************************** W0330000
         MACRO                                                          W0332000
&NAME    $DEFL &OP,&ADD,&TAG,&FMT,&MOD                                  W0334000
         AIF   ('&FMT' EQ 'I').A                                        W0336000
&NAME    $DEF  &OP,&ADD,&TAG,L,&MOD                                     W0338000
         MEXIT                                                          W0340000
.A       ANOP                                                           W0342000
&NAME    $DEF  &OP,&ADD,&TAG,I,&MOD                                     W0344000
         MEND                                                           W0346000
         EJECT                                                          W0348000
*********************************************************************** W0350000
*              1130 INSTRUCTIONS                                      * W0352000
*********************************************************************** W0354000
         SPACE 2                                                        W0356000
*                                  $LD    LOAD ACC                      W0358000
         MACRO                                                          W0360000
&NAME    $LD   &ADD,&TAG,&FMT                                           W0362000
&NAME    $DEF  192,&ADD,&TAG,&FMT                                       W0364000
         MEND                                                           W0366000
*                                  $LDD   LOAD DOUBLE                   W0368000
         MACRO                                                          W0370000
&NAME    $LDD  &ADD,&TAG,&FMT                                           W0372000
&NAME    $DEF  200,&ADD,&TAG,&FMT                                       W0374000
         MEND                                                           W0376000
*                                  $STO   STORE ACC                     W0378000
         MACRO                                                          W0380000
&NAME    $STO  &ADD,&TAG,&FMT                                           W0382000
&NAME    $DEF  208,&ADD,&TAG,&FMT                                       W0384000
         MEND                                                           W0386000
*                                  $STD   STORE DOUBLE                  W0388000
         MACRO                                                          W0390000
&NAME    $STD  &ADD,&TAG,&FMT                                           W0392000
&NAME    $DEF  216,&ADD,&TAG,&FMT                                       W0394000
         MEND                                                           W0396000
*                                  $LDX   LOAD INDEX                    W0398000
         MACRO                                                          W0400000
&NAME    $LDX  &ADD,&TAG,&FMT                                           W0402000
&NAME    $DEF  96,&ADD,&TAG,&FMT                                        W0404000
         MEND                                                           W0406000
*                                  $LXA   LOAD INDEX FROM ADD (LONG)    W0408000
         MACRO                                                          W0410000
&NAME    $LXA  &ADD,&TAG                                                W0412000
&NAME    $LDX  &ADD,&TAG,I                                              W0414000
         MEND                                                           W0416000
*                                  $AXT   ADDRESS TO INDEX TRUE         W0418000
         MACRO                                                          W0420000
&NAME    $AXT  &ADD,&TAG,&FMT                                           W0422000
&NAME    $LDX  &ADD,&TAG,&FMT                                           W0424000
         MEND                                                           W0426000
*                                  $STX   STORE INDEX                   W0428000
         MACRO                                                          W0430000
&NAME    $STX  &ADD,&TAG,&FMT                                           W0432000
&NAME    $DEF  104,&ADD,&TAG,&FMT                                       W0434000
         MEND                                                           W0436000
*                                  $STS   STORE STATUS                  W0438000
         MACRO                                                          W0440000
&NAME    $STS  &ADD,&TAG,&FMT                                           W0442000
&NAME    $DEF  40,&ADD,&TAG,&FMT                                        W0444000
         MEND                                                           W0446000
*                                  $LDS   LOAD STATUS                   W0448000
         MACRO                                                          W0450000
&NAME    $LDS  &ADD,&TAG                                                W0452000
&NAME    $DEF  32,&ADD,&TAG,X                                           W0454000
         MEND                                                           W0456000
*                                  $A     ADD                           W0458000
         MACRO                                                          W0460000
&NAME    $A    &ADD,&TAG,&FMT                                           W0462000
&NAME    $DEF  128,&ADD,&TAG,&FMT                                       W0464000
         MEND                                                           W0466000
*                                  $AD    ADD DOUBLE                    W0468000
         MACRO                                                          W0470000
&NAME    $AD   &ADD,&TAG,&FMT                                           W0472000
&NAME    $DEF  136,&ADD,&TAG,&FMT                                       W0474000
         MEND                                                           W0476000
*                                  $S     SUBTRACT                      W0478000
         MACRO                                                          W0480000
&NAME    $S    &ADD,&TAG,&FMT                                           W0482000
&NAME    $DEF  144,&ADD,&TAG,&FMT                                       W0484000
         MEND                                                           W0486000
*                                  $SD    SUBTRACT DOUBLE               W0488000
         MACRO                                                          W0490000
&NAME    $SD   &ADD,&TAG,&FMT                                           W0492000
&NAME    $DEF  152,&ADD,&TAG,&FMT                                       W0494000
         MEND                                                           W0496000
*                                  $M     MULTIPLY                      W0498000
         MACRO                                                          W0500000
&NAME    $M    &ADD,&TAG,&FMT                                           W0502000
&NAME    $DEF  160,&ADD,&TAG,&FMT                                       W0504000
         MEND                                                           W0506000
*                                  $D     DIVIDE                        W0508000
         MACRO                                                          W0510000
&NAME    $D    &ADD,&TAG,&FMT                                           W0512000
&NAME    $DEF  168,&ADD,&TAG,&FMT                                       W0514000
         MEND                                                           W0516000
*                                  $AND   LOGICAL AND                   W0518000
         MACRO                                                          W0520000
&NAME    $AND  &ADD,&TAG,&FMT                                           W0522000
&NAME    $DEF  224,&ADD,&TAG,&FMT                                       W0524000
         MEND                                                           W0526000
*                                  $OR    LOGICAL OR                    W0528000
         MACRO                                                          W0530000
&NAME    $OR   &ADD,&TAG,&FMT                                           W0532000
&NAME    $DEF  232,&ADD,&TAG,&FMT                                       W0534000
         MEND                                                           W0536000
*                                  $EOR   LOGICAL EXCLUSIVE OR          W0538000
         MACRO                                                          W0540000
&NAME    $EOR  &ADD,&TAG,&FMT                                           W0542000
&NAME    $DEF  240,&ADD,&TAG,&FMT                                       W0544000
         MEND                                                           W0546000
*                                  $SLA   SHIFT LEFT ACC                W0548000
         MACRO                                                          W0550000
&NAME    $SLA  &ADD,&TAG                                                W0552000
&NAME    $DEF  16,&ADD,&TAG,X,0                                         W0554000
         MEND                                                           W0556000
*                                  $SLT   SHIFT LEFT ACC AND EXT        W0558000
         MACRO                                                          W0560000
&NAME    $SLT  &ADD,&TAG                                                W0562000
&NAME    $DEF  16,&ADD,&TAG,X,128                                       W0564000
         MEND                                                           W0566000
*                                  $SLCA  SHIFT LEFT AND COUNT ACC      W0568000
         MACRO                                                          W0570000
&NAME    $SLCA &ADD,&TAG                                                W0572000
&NAME    $DEF  16,&ADD,&TAG,X,64                                        W0574000
         MEND                                                           W0576000
*                                  $SLC   SHIFT LEFT AND COUNT ACC+EXT  W0578000
         MACRO                                                          W0580000
&NAME    $SLC  &ADD,&TAG                                                W0582000
&NAME    $DEF  16,&ADD,&TAG,X,192                                       W0584000
         MEND                                                           W0586000
*                                  $SRA   SHIFT RIGHT ACC               W0588000
         MACRO                                                          W0590000
&NAME    $SRA  &ADD,&TAG                                                W0592000
&NAME    $DEF  24,&ADD,&TAG,X,0                                         W0594000
         MEND                                                           W0596000
*                                  $SRT   SHIFT RIGHT ACC+EXT           W0598000
         MACRO                                                          W0600000
&NAME    $SRT  &ADD,&TAG                                                W0602000
&NAME    $DEF  24,&ADD,&TAG,X,128                                       W0604000
         MEND                                                           W0606000
*                                  $RTE   ROTATE RIGHT ACC+EXT          W0608000
         MACRO                                                          W0610000
&NAME    $RTE  &ADD,&TAG                                                W0612000
&NAME    $DEF  24,&ADD,&TAG,X,192                                       W0614000
         MEND                                                           W0616000
*                                  $BSC   BRANCH/SKIP ON CONDITION      W0618000
         MACRO                                                          W0620000
&NAME    $BSC  &ADD,&TAG,&FMT,&MOD                                      W0622000
         AIF   ('&FMT' EQ 'L' OR '&FMT' EQ 'I').A                       W0624000
&NAME    DC    AL1(72,&ADD)                                             W0626000
         MEXIT                                                          W0628000
.A       ANOP                                                           W0630000
&NAME    $DEF  72,&ADD,&TAG,&FMT,&MOD                                   W0632000
         MEND                                                           W0634000
*                                  $BOSC  BRANCH/SKIP RESET INTERRUPT   W0636000
         MACRO                                                          W0638000
&NAME    $BOSC &ADD,&TAG,&FMT,&MOD                                      W0640000
         LCLC  &M                                                       W0642000
         AIF   ('&FMT' EQ '' OR '&FMT' EQ 'X').A                        W0644000
&M       SETC  '64'                                                     W0646000
         AIF   ('&MOD' EQ '').B                                         W0648000
&M       SETC  '&M+64'                                                  W0650000
.B       ANOP                                                           W0652000
&NAME    $DEF  72,&ADD,&TAG,&FMT,&M                                     W0654000
         MEXIT                                                          W0656000
.A       ANOP                                                           W0658000
&NAME    DC    AL1(72,&ADD+64)                                          W0660000
         MEND                                                           W0662000
*                                  $BP    BRANCH ACC POSITIVE (LONG)    W0664000
         MACRO                                                          W0666000
&NAME    $BP   &ADD,&TAG,&FMT                                           W0668000
&NAME    $DEFL 72,&ADD,&TAG,&FMT,48                                     W0670000
         MEND                                                           W0672000
*                                  $BNP   BRANCH ACC NOT POSITIVE(LONG) W0674000
         MACRO                                                          W0676000
&NAME    $BNP  &ADD,&TAG,&FMT                                           W0678000
&NAME    $DEFL 72,&ADD,&TAG,&FMT,8                                      W0680000
         MEND                                                           W0682000
*                                  $BN    BRANCH ACC NEGATIVE (LONG)    W0684000
         MACRO                                                          W0686000
&NAME    $BN   &ADD,&TAG,&FMT                                           W0688000
&NAME    $DEFL 72,&ADD,&TAG,&FMT,40                                     W0690000
         MEND                                                           W0692000
*                                  $BNN   BRANCH ACC NOT NEG. (LONG)    W0694000
         MACRO                                                          W0696000
&NAME    $BNN  &ADD,&TAG,&FMT                                           W0698000
&NAME    $DEFL 72,&ADD,&TAG,&FMT,16                                     W0700000
         MEND                                                           W0702000
*                                  $BZ    BRANCH ACC ZERO (LONG)        W0704000
         MACRO                                                          W0706000
&NAME    $BZ   &ADD,&TAG,&FMT                                           W0708000
&NAME    $DEFL 72,&ADD,&TAG,&FMT,24                                     W0710000
         MEND                                                           W0712000
*                                  $BNZ   BRANCH ACC NOT ZERO (LONG)    W0714000
         MACRO                                                          W0716000
&NAME    $BNZ  &ADD,&TAG,&FMT                                           W0718000
&NAME    $DEFL 72,&ADD,&TAG,&FMT,32                                     W0720000
         MEND                                                           W0722000
*                                  $BC    BRANCH ON CARRY (LONG)        W0724000
         MACRO                                                          W0726000
&NAME    $BC   &ADD,&TAG,&FMT                                           W0728000
&NAME    $DEFL 72,&ADD,&TAG,&FMT,2                                      W0730000
         MEND                                                           W0732000
*                                  $BO    BRANCH ON OVERFLOW (LONG)     W0734000
         MACRO                                                          W0736000
&NAME    $BO   &ADD,&TAG,&FMT                                           W0738000
&NAME    $DEFL 72,&ADD,&TAG,&FMT,1                                      W0740000
         MEND                                                           W0742000
*                                  $BOD   BRANCH ACC ODD (LONG)         W0744000
         MACRO                                                          W0746000
&NAME    $BOD  &ADD,&TAG,&FMT                                           W0748000
&NAME    $DEFL 72,&ADD,&TAG,&FMT,4                                      W0750000
         MEND                                                           W0752000
*                                  $SKPP  SKIP IF ACC POSITIVE (SHORT)  W0754000
         MACRO                                                          W0756000
&NAME    $SKPP                                                          W0758000
&NAME    $DEF  72,0,,X,8                                                W0760000
         MEND                                                           W0762000
*                                  $SKPN  SKIP IF ACC NON-ZERO (SHORT)  W0764000
         MACRO                                                          W0766000
&NAME    $SKPN                                                          W0768000
&NAME    $DEF  72,0,,X,24                                               W0770000
         MEND                                                           W0772000
*                                  $SKPZ  SKIP IF ACC IS ZERO (SHORT)   W0774000
         MACRO                                                          W0776000
&NAME    $SKPZ                                                          W0778000
&NAME    $DEF  72,0,,X,32                                               W0780000
         MEND                                                           W0782000
*                                  $SKPO  SKIP IF OVERFLOW OFF (SHORT)  W0784000
         MACRO                                                          W0786000
&NAME    $SKPO                                                          W0788000
&NAME    $DEF  72,0,,X,1                                                W0790000
         MEND                                                           W0792000
*                                  $SKPC  SKIP IF CARRY IS OFF (SHORT)  W0794000
         MACRO                                                          W0796000
&NAME    $SKPC                                                          W0798000
&NAME    $DEF  72,0,,X,2                                                W0800000
         MEND                                                           W0802000
*                                  $SKPX  SKIP ACC NE 0, CARRY OFF      W0804000
         MACRO                                                          W0806000
&NAME    $SKPX                                                          W0808000
&NAME    $DEF  72,0,,X,26                                               W0810000
         MEND                                                           W0812000
*                                  $B     BRANCH UNCONDITIONALLY        W0814000
         MACRO                                                          W0816000
&NAME    $B    &ADD,&TAG,&FMT                                           W0818000
         AIF   ('&FMT' EQ 'L' OR '&FMT' EQ 'I').A                       W0820000
&NAME    $MDX  &ADD,&TAG,&FMT                                           W0822000
         MEXIT                                                          W0824000
.A       ANOP                                                           W0826000
&NAME    $BSC  &ADD,&TAG,&FMT                                           W0828000
         MEND                                                           W0830000
*                                  $BSI   BRANCH AND STORE IAR          W0832000
         MACRO                                                          W0834000
&NAME    $BSI  &ADD,&TAG,&FMT,&MOD                                      W0836000
&NAME    $DEF  64,&ADD,&TAG,&FMT,&MOD                                   W0838000
         MEND                                                           W0840000
*                                  $TSL   BRANCH AND STORE IAR (LONG)   W0842000
         MACRO                                                          W0844000
&NAME    $TSL  &ADD,&TAG,&FMT                                           W0846000
&NAME    $DEFL 64,&ADD,&TAG,&FMT,0                                      W0848000
         MEND                                                           W0850000
*                                  $MDX   MODIFY INDEX AND SKIP         W0852000
         MACRO                                                          W0854000
&NAME    $MDX  &ADD,&TAG,&FMT                                           W0856000
&NAME    $DEF  112,&ADD,&TAG,&FMT                                       W0858000
         MEND                                                           W0860000
*                                  $STL   STORE LOCATION COUNTER        W0862000
         MACRO                                                          W0864000
&NAME    $STL  &ADD,&FMT                                                W0866000
&NAME    $STX  &ADD,0,&FMT                                              W0868000
         MEND                                                           W0870000
*                                  $MDM   MODIFY MEMORY                 W0872000
         MACRO                                                          W0874000
&NAME    $MDM  &ADD,&VALUE                                              W0876000
         AIF   ('&VALUE'(1,1) EQ '-').B                                 W0878000
         AIF   ('&ADD'(1,1) EQ '$').A                                   W0880000
&NAME    DC    0SL2(A-&VALUE),AL1(116,&VALUE),AL2((&ADD-$Z)/2)          W0882000
         MEXIT                                                          W0884000
.A       ANOP                                                           W0886000
&NAME    DC    0SL2(A-&VALUE),AL1(116,&VALUE),AL2(&ADD)                 W0888000
         MEXIT                                                          W0890000
.B       AIF   ('&ADD'(1,1) EQ '$').C                                   W0892000
&NAME    DC    0SL2(B&VALUE),AL1(116,0&VALUE),AL2((&ADD-$Z)/2)          W0894000
         MEXIT                                                          W0896000
.C       ANOP                                                           W0898000
&NAME    DC    0SL2(B&VALUE),AL1(116,0&VALUE),AL2(&ADD)                 W0900000
         MEND                                                           W0902000
*                                  $WAIT  WAIT FOR INTERRUPT            W0904000
         MACRO                                                          W0906000
&NAME    $WAIT                                                          W0908000
&NAME    DC    X'3000'                                                  W0910000
         MEND                                                           W0912000
*                                  $XIO   EXECUTE I/O                   W0914000
         MACRO                                                          W0916000
&NAME    $XIO  &ADD,&TAG,&FMT                                           W0918000
&NAME    $DEF  8,&ADD,&TAG,&FMT                                         W0920000
         MEND                                                           W0922000
*                                  $BSS   BLOCK STARTED BY SYMBOL       W0924000
         MACRO                                                          W0926000
&NAME    $BSS  &NWRDS,&EVEN                                             W0928000
         AIF   ('&EVEN' EQ '').B                                        W0930000
         AIF   ('&EVEN' EQ 'E').A                                       W0932000
         MNOTE 'ILLEGAL ALIGNMENT PARAMETER. ''E'' ASSUMED.'            W0934000
.A       ANOP                                                           W0936000
&NAME    DS    0F,(&NWRDS)H                                             W0938000
         MEXIT                                                          W0940000
.B       ANOP                                                           W0942000
&NAME    DS    (&NWRDS)H                                                W0944000
         MEND                                                           W0946000
*                                  $BES   BLOCK ENDED BY SYSMBOL        W0948000
         MACRO                                                          W0950000
&NAME    $BES  &NWRDS,&EVEN                                             W0952000
         AIF   ('&EVEN' EQ '').B                                        W0954000
         AIF   ('&EVEN' EQ 'E').A                                       W0956000
         MNOTE 'ILLEGAL ALIGNMENT PARAMETER. ''E'' ASSUMED.'            W0958000
.A       DS    0F,(&NWRDS)H                                             W0960000
&NAME    DS    0H                                                       W0962000
         MEXIT                                                          W0964000
.B       DS    (&NWRDS)H                                                W0966000
&NAME    DS    0H                                                       W0968000
         MEND                                                           W0970000
*                                  NULL OPERATION FOR DEFINING S        W0972000
         MACRO                                                          W0974000
&NAME    $NULL                                                          W0976000
&NAME    DS    0H                                                       W0978000
         MEND                                                           W0980000
*                                  $ADCON    1130 ADCON EQUIVALENT      W0982000
         MACRO                                                          W0984000
&NAME    $ADCON &ADDR                                                   W0986000
&NAME    DC    AL2((&ADDR-$Z)/2)                                        W0988000
         MEND                                                           W0990000
*                                  $NOP  NO OPERATION                   W0992000
         MACRO                                                          W0994000
&NAME    $NOP                                                           W0996000
&NAME    $SLA  0                                                        W0998000
         MEND                                                           W1000000
*                                  $ZAC  CLEAR AC                       W1002000
         MACRO                                                          W1004000
&NAME    $ZAC                                                           W1006000
&NAME    $SRA  16                                                       W1008000
         MEND                                                           W1010000
         SPACE 1                                                        W1012000
         TITLE 'RTP1130 (SYSTEM MACRO DEFINITIONS)'                     W1014000
*********************************************************************** W1016000
*                                  TRACE ROUTINE LINKAGE              * W1018000
*********************************************************************** W1020000
         MACRO                                                          W1022000
         $TRACE                                                         W1024000
         GBLA  &TRACE              TRACE INDICATOR AND TABLE SIZE       W1026000
         AIF   (&TRACE EQ 0).NOTRACE                                    W1028000
         $TSL  STRACE              $TRACE LINKAGE                       W1030000
         DC    H'0'                ENTRY COUNTER                        W1032000
.NOTRACE MEND                                                           W1034000
*                                                                       W1036000
*********************************************************************** W1038000
*                                  $DEQUE - DEQUEUE AN ELEMENT        * W1040000
*********************************************************************** W1042000
*                                                                     * W1044000
         MACRO                                                          W1046000
&NAME    $DEQUE &QP                &QP=QUEUE POINTER                    W1048000
&NAME    $NULL                                                          W1050000
         AIF   ('&QP' EQ '').A                                          W1052000
         $AXT  &QP,WC,L            GET QUEUE POINTER                    W1054000
.A       $TSL  SGETQEL             GO TO DEQUEUE ROUTINE                W1056000
         MEND                                                           W1058000
*                                                                       W1060000
*********************************************************************** W1062000
*                                  $QACTL - QUEUE AN ACTIVE ELEMENT   * W1064000
*********************************************************************** W1066000
*                                                                     * W1068000
         MACRO                                                          W1070000
&NAME    $QACTL &QP,&QE            &QP=QUEUE POINTER, &QE=QUEUE ELEMENT W1072000
&NAME    $NULL                                                          W1074000
         AIF   ('&QE' EQ '').A                                          W1076000
         $LD   &QE,,L              GET QUEUE ELEMENT ADDRESS            W1078000
.A       AIF   ('&QP' EQ '').B                                          W1080000
         $AXT  &QP,WC,L            GET QUEUE POINTER ADDRESS            W1082000
.B       $TSL  SPUTAQL             GO TO ENQUEUE ROUTINE                W1084000
         MEND                                                           W1086000
*                                                                       W1088000
*********************************************************************** W1090000
*                                  $QFREL - QUEUE A FREE ELEMENT      * W1092000
*********************************************************************** W1094000
*                                                                     * W1096000
         MACRO                                                          W1098000
&NAME    $QFREL &QP,&QE            QP=QUEUE POINTER                     W1100000
&NAME    $NULL                                                          W1102000
         AIF   ('&QE' EQ '').A                                          W1104000
         $LD   &QE,,L              GET ELEMENT ADDRESS                  W1106000
.A       AIF   ('&QP' EQ '').B                                          W1108000
         $AXT  &QP,WC,L            GET QUEUE POINTER ADDRESS            W1110000
.B       $TSL  SPUTFQL             GO TO ENQUEUE ROUTINE                W1112000
         MEND                                                           W1114000
*                                                                       W1116000
         EJECT                                                          W1118000
*********************************************************************** W1120000
*                                  $GENQ - GENERATE CHAINED QUEUE     * W1122000
*********************************************************************** W1124000
*                                                                     * W1126000
         MACRO                                                          W1128000
         $GENQ &ID=,&SIZE=,&NUM=                                        W1130000
         LCLA  &CNT                                                     W1132000
&ID.AQP  DC    AL2(*-*)            ACTIVE ELEMENT QUEUE POINTER         W1134000
&ID.BGN  $BSS  0,E                 START OF QUEUE                       W1136000
.A       $ADCON (*+4*D1+2*&SIZE)   CHAIN WORD                           W1138000
         DC    AL2(0)              ROOM FOR FIRST  CONTROL WORD         W1140000
         DC    AL2(0)              ROOM FOR SECOND CONTROL WORD         W1142000
         DC    AL2(0)              SPARE WORD                           W1144000
         DC    (&SIZE)AL2(0)       DATA AREA                            W1146000
&CNT     SETA  &CNT+1              INCREMENT COUNTER                    W1148000
         AIF   (&CNT LT &NUM-1).A  GENERATE &NUM-1 ENTRIES              W1150000
         DC    AL2(0)              LAST ENTRY                           W1152000
         DC    AL2(0)              ROOM FOR FIRST  CONTROL WORD         W1154000
         DC    AL2(0)              ROOM FOR SECOND CONTROL WORD         W1156000
         DC    AL2(0)              SPARE WORD                           W1158000
         DC    (&SIZE)AL2(0)                                            W1160000
         MEND                                                           W1162000
*********************************************************************** W1164000
*                                  $WTO - TYPE SPECIFIED MESSAGE      * W1166000
*********************************************************************** W1168000
         MACRO                                                          W1170000
&NAME    $WTO  &MESS,&NONE                                              W1172000
&NAME    $NULL                                                          W1174000
         $TSL  SWTOPR              LINKAGE TO CONSOLE QUEUEING ROUTINE  W1176000
         $ADCON (&NONE)            EXIT ADDRESS IF NO BUFFER AVAILABLE  W1178000
         $ADCON (&MESS)            ADDRESS OF MESSAGE TO BE TYPED       W1180000
         MEND                                                           W1182000
         TITLE 'RTP1130 (GLOBAL SET DEFINITIONS)'                       W1184000
         SPACE 3                                                        W1186000
*********************************************************************** W1188000
*              GLOBAL DEFINITIONS                                     * W1190000
*********************************************************************** W1192000
         GBLA  &RMTID              REMOTE IDENTIFICATION NUMBER         W1194000
         GBLA  &MACHSIZ            1130 CORE SIZE IN WORDS              W1196000
         GBLA  &RTPLORG            RTPLOAD ORIGIN IN 1130               W1198000
         GBLA  &DEBUG              DEBUG MODE INDICATOR                 W1200000
         GBLA  &REP                PATCH MODE SWITCH                    W1202000
         GBLA  &TRACE              TRACE INDICATOR AND TABLE SIZE       W1204000
         GBLA  &RD2501             CARD READER (2501-A1,A2)             W1206000
         GBLB  &RD1442             CARD READER (1442-6,7)               W1208000
         GBLB  &PN1442             CARD PUNCH (1442-5 OR 6,7)           W1210000
         GBLB  &RP1442             CARD READER/PUNCH (1442-6,7)         W1212000
         GBLB  &XX1442             DEFINE EXISTENCE OF 1442             W1214000
         GBLA  &PR1132             PRINTER (1132)                       W1216000
         GBLA  &PR1403             PRINTER (1403-6,7)                   W1218000
         GBLA  &BSCALO             BSCA (STANDARD)                      W1220000
         GBLA  &BSCAHI             BSCA (SPECIAL)                       W1222000
         GBLA  &CNPSIZE            CONSOLE MESSAGE SIZE IN BYTES        W1224000
         GBLA  &CONINSZ            CONSOLE INPUT TANK SIZE              W1226000
         GBLA  &PRFOTLW            1403 PRINTER LINE WIDTH IN BYTES     W1228000
         GBLA  &TRANPRN            TRANSPARENCY MODE INDICATOR          W1230000
         GBLA  &TPBFSIZ            DEFAULT HASP TP BUFFER SIZE          W1232000
         GBLA  &MLBFSIZ            MULTI-LEAVING BUFFER SIZE            W1234000
         GBLA  &TPBFSZE            RTP1130 TP BUFFER SIZE               W1236000
         GBLA  &LINESPD            LINE BAUD RATE                       W1238000
         GBLA  &CLOCK              DATA SET OR INTERNAL CLOCKING        W1240000
         GBLA  &PRTSTRV            PRINT STREAM INITIAL VALUE           W1242000
         GBLA  &PUNSTRV            PUNCH STREAM INITIAL VALUE           W1244000
         GBLA  &RDRSTRV            READER STREAM INITIAL VALUE          W1246000
         GBLA  &CNSKSTR            CONSOLE INPUT STREAM VALUE           W1248000
         GBLA  &CNSPSTR            CONSOLE PRINT STREAM VALUE           W1250000
         GBLA  &PRTFCSV            PRINT STREAM INITIAL FCS VALUE       W1252000
         GBLA  &PUNFCSV            PUNCH STREAM INITIAL FCS VALUE       W1254000
         GBLA  &RDRFCSV            READER STREAM INITIAL FCS VALUE      W1256000
         GBLA  &CNSKFCS            CONSOLE INPUT FCS VALUE              W1258000
         GBLA  &CNSPFCS            CONSOLE PRINT FCS VALUE              W1260000
         GBLA  &PRFOTKL            NUMBER OF 1403 TANKS                 W1262000
         GBLA  &PRETTKL            NUMBER OF 1132 TANKS                 W1264000
         GBLA  &PUNFTKL            NUMBER OF 1442 (PUNCH) TANKS         W1266000
         GBLA  &CONSTKL            NUMBER OF CONSOLE TANKS              W1268000
         GBLA  &PRFOBFL            NUMBER OF 1403 TP BUFFERS            W1270000
         GBLA  &PRETBFL            NUMBER OF 1132 TP BUFFERS            W1272000
         GBLA  &PUNFBFL            NUMBER OF 1442 (PUNCH) TP BUFFERS    W1274000
         GBLA  &CNSPBFL            NUMBER OF CONSOLE (PRINT) TP BUFFERS W1276000
         GBLA  &NPTFBFL            NUMBER OF INPUT DEVICE TP BUFFERS    W1278000
         GBLA  &CMPTYPE            COMPRESSION TECHNIQUE                W1280000
         GBLB  &DOCUMNT            DETAILED INTERNAL DOCUMENTATION      W1282000
         GBLA  &FULLIST            FULL LISTING OPTION                  W1284000
         GBLA  &DELAY              DELAY COUNT FOR PROGRAM TIMER        W1286000
         TITLE 'RTP1130 (HASPGEN VARIABLES)'                            W1288000
         SPACE 3                                                        W1290000
*********************************************************************** W1292000
*              REMOTE TERMINAL GENERATION VARIABLES                   * W1294000
*********************************************************************** W1296000
         SPACE 2                                                        W1298000
&MACHSIZ SETA  8*1024              1130 CORE SIZE IN WORDS              W1300000
&RTPLORG SETA  2*(&MACHSIZ-1024)   RTPLOAD ORIGIN (-1K)                 W1302000
         SPACE 2                                                        W1304000
$Z       START 0                   DEFINE RELOCATABLE LOCATION 0        W1306000
$RTPLORG EQU   &RTPLORG            DEFINE ABSOLUTE VALUE FOR &RTPLORG   W1308000
$MACHSIZ EQU   &MACHSIZ            DEFINE ABSOLUTE VALUE FOR &MACHSIZ   W1310000
         ORG   *+$RTPLORG          ORIGIN AT &RTPLORG                   W1312000
START    EQU   *                   DEFINE START SYMBOL                  W1314000
         SPACE 2                                                        W1316000
&RMTID   SETA  1                   DEFINE REMOTE IDENTIFICATION         W1318000
&DEBUG   SETA  0                   SET TO 1 IF DEBUG                    W1320000
&TRACE   SETA  0                   TRACE INDICATOR AND TABLE SIZE       W1322000
&REP     SETA  1                   SET TO 1 FOR REP OPTION              W1324000
&DOCUMNT SETB  0                   SET TO 1 IF DETAILED DOCUMENTATION   W1326000
&FULLIST SETA  1                   SET TO 0 FOR NO MACRO EXPANSION      W1328000
         SPACE 2                                                        W1330000
&RD2501  SETA  0                   SET TO 1 IF 2501 READER              W1332000
&RD1442  SETB  1                   SET TO 0 IF NO 1442 READER FUNCTION  W1334000
&PN1442  SETB  1                   SET TO 0 IF NO 1442 PUNCH FUNCTION   W1336000
&RP1442  SETB  (&RD1442 AND &PN1442)  SET 0 IF NO 1442 READER/PUNCH     W1338000
&XX1442  SETB  (&RD1442  OR &PN1442)  SET 0 IF NO 1442                  W1340000
&PR1403  SETA  1                   SET TO 0 IF NO 1403 PRINTER          W1342000
&PR1132  SETA  0                   SET TO 1 IF 1132 PRINTER             W1344000
&BSCALO  SETA  1                   SET TO 1 IF STANDARD BSCA            W1346000
&BSCAHI  SETA  0                   SET TO 1 IF SPECIAL BSCA             W1348000
         SPACE 2                                                        W1350000
&CNPSIZE SETA  120                 CONSOLE PRINTER SIZE IN BYTES        W1352000
&CONINSZ SETA  120                 CONSOLE INPUT TANK SIZE              W1354000
&PRFOTLW SETA  120                 1403 PRINTER LINE WIDTH              W1356000
         SPACE 1                                                        W1358000
&TRANPRN SETA  1                   SET TO 0 IF NO TRANSPARENCY          W1360000
&TPBFSIZ SETA  400                 DEFAULT HASP TP BUFFER SIZE          W1362000
&MLBFSIZ SETA  &TPBFSIZ            MULTI-LEAVING TP BUFFER SIZE         W1364000
&TPBFSZE SETA  &MLBFSIZ            RTP1130 TP BUFFER SIZE               W1366000
&LINESPD SETA  2000                LINE BAUD RATE                       W1368000
&CLOCK   SETA  0                   SET TO 1 IF INTERNAL CLOCKING        W1370000
&DELAY   SETA  3                   DELAY COUNT FOR PROGRAM TIMER        W1372000
         EJECT                                                          W1374000
&PRTSTRV SETA  X'94'               PRINT STREAM INITIAL VALUE           W1376000
&PUNSTRV SETA  X'95'               PUNCH STREAM INITIAL VALUE           W1378000
&RDRSTRV SETA  X'93'               READER STREAM INITIAL VALUE          W1380000
&CNSPSTR SETA  X'91'               CONSOLE PRINT STREAM VALUE           W1382000
&CNSKSTR SETA  X'92'               CONSOLE INPUT STREAM VALUE           W1384000
&PRTFCSV SETA  X'08'               PRINT STREAM INITIAL FCS VALUE       W1386000
&PUNFCSV SETA  X'01'               PUNCH STREAM INITIAL FCS VALUE       W1388000
&RDRFCSV SETA  X'08'               READER STREAM INITIAL FCS VALUE      W1390000
&CNSPFCS SETA  X'40'               CONSOLE PRINT FCS VALUE              W1392000
&CNSKFCS SETA  X'40'               CONSOLE INPUT FCS VALUE              W1394000
&PRFOTKL SETA  2                   NUMBER OF 1403 TANKS                 W1396000
&PRETTKL SETA  2                   NUMBER OF 1132 TANKS                 W1398000
&PUNFTKL SETA  2                   NUMBER OF 1442 TANKS (PUNCH)         W1400000
&CONSTKL SETA  5                   NUMBER OF CONSOLE PRINT TANKS        W1402000
&PRFOBFL SETA  2                   NUMBER OF 1403 TP BUFFERS            W1404000
&PRETBFL SETA  2                   NUMBER OF 1132 TP BUFFERS            W1406000
&PUNFBFL SETA  2                   NUMBER OF 1442 (PUNCH) TP BUFFERS    W1408000
&CNSPBFL SETA  1                   NUMBER OF CONSOLE (PRINT) TP BUFFERS W1410000
&NPTFBFL SETA  (&RD2501+&RD1442+1) NUMBER OF INPUT DEVICE TP BUFFERS    W1412000
         SPACE 3                                                        W1414000
&CMPTYPE SETA  2                   COMPRESSION TECHNIQUE                W1416000
*                                                                       W1418000
*                                  SET = 0 IF NO COMPRESSION            W1420000
*                                                                       W1422000
*                                  SET = 1 IF TRAILING BLANK            W1424000
*                                          ELIMINATION ONLY             W1426000
*                                                                       W1428000
*                                  SET = 2 IF COMPRESSION OF ALL        W1430000
*                                          IDENTICAL CHARACTERS         W1432000
*                                          AND TRAILING BLANK           W1434000
*                                          ELIMINATION                  W1436000
         TITLE 'RTP1130 (SYSTEM COMMUNICATION LOCATIONS)'               W1438000
         SPACE 3                                                        W1440000
*********************************************************************** W1442000
*              SYMBOLIC DEFINITIONS OF SYSTEM COMMUNICATION LOCATIONS * W1444000
*********************************************************************** W1446000
         SPACE 3                                                        W1448000
$DUMPPTR EQU   0                   LOCATION OF SHORT FORM BRANCH        W1450000
*                                  ($B $DUMP) TO SYSTEM DUMP LINKAGE    W1452000
$WAIT    EQU   14                  LOCATION OF GENERAL 'WAIT' ROUTINE   W1454000
*                                  ENTERED VIA $TSL $WAIT               W1456000
*        EQU   15                  LOCATION OF WAIT INSTRUCTION         W1458000
*        EQU   16                  LOCATION OF $B $WAIT,,I INSTRUCTION  W1460000
$DUMP    EQU   18                  LOCATION OF $TSL $SDUMP              W1462000
$LLIMIT  EQU   $DUMP+2             LOWER LIMIT OF TERMINAL DUMP         W1464000
$ULIMIT  EQU   $LLIMIT+1           UPPER LIMIT OF TERMINAL DUMP         W1466000
$CORESIZ EQU   $ULIMIT             CELL CONTAINING 1130 CORE SIZE       W1468000
$ERRLOG  EQU   $CORESIZ+1          START OF LOG AREA                    W1470000
$ERRFFWT EQU   $ERRLOG             1403 WRITE ERROR COUNTER             W1472000
$ERRETSC EQU   $ERRLOG+1           1132 SCAN CHECK COUNTER              W1474000
$ERRSCRT EQU   $ERRLOG+2           SCA (LOW) RECEIVE TIMEOUT            W1476000
$ERRSCWC EQU   $ERRLOG+3           SCA (LOW) TRANSMIT CHECK             W1478000
$ERRSCTT EQU   $ERRLOG+4           SCA (LOW) TRANSMIT TIMEOUT           W1480000
$ERRSCXX EQU   $ERRLOG+5           SCA (LOW) UNIDENTIFIED INTERRUPT     W1482000
$PRTSCAN EQU   32                  1132 PRINTER SCAN AREA               W1484000
         TITLE 'RTP1130 (UNIQUE KEYWORD DEFINITIONS)'                   W1486000
*********************************************************************** W1488000
*              DEVICE CODES FOR I/O UNITS ALA IOCC                    * W1490000
*********************************************************************** W1492000
         SPACE 3                                                        W1494000
$SWITCH  EQU   X'3800'             CONSOLE SWITCHES                     W1496000
$CONSOLE EQU   X'0800'             CONSOLE/KEYBOARD PRINTER             W1498000
$1442    EQU   X'1000'             1442 CARD READER/PUNCH               W1500000
$1132    EQU   X'3000'             1132 PRINTER                         W1502000
$ENTRY   EQU   X'3800'             CONSOLE ENTRY SWITCHES               W1504000
$2501    EQU   X'4800'             2501 READER                          W1506000
$SCALOW  EQU   X'5000'             LOW SPEED BSCA                       W1508000
$1403    EQU   X'A800'             1403 PRINTER                         W1510000
         SPACE 2                                                        W1512000
*********************************************************************** W1514000
*              I/O FUNCTIONS ALA IOCC                                 * W1516000
*********************************************************************** W1518000
         SPACE 3                                                        W1520000
$WRITE   EQU   X'0100'             WRITE                                W1522000
$READ    EQU   X'0200'             READ                                 W1524000
$SENSEI  EQU   X'0300'             SENSE INTERRUPT                      W1526000
$CONTROL EQU   X'0400'             CONTROL                              W1528000
$IWRITE  EQU   X'0500'             INITIATE WRITE                       W1530000
$IREAD   EQU   X'0600'             INITIATE READ                        W1532000
$SENSED  EQU   X'0700'             SENSE DEVICE                         W1534000
         SPACE 3                                                        W1536000
*********************************************************************** W1538000
*              CONDITION CODE TEST BITS                               * W1540000
*********************************************************************** W1542000
         SPACE 3                                                        W1544000
O        EQU   1                   OVERFLOW INDICATOR OFF               W1546000
C        EQU   2                   CARRY INDICATOR OFF                  W1548000
E        EQU   4                   AC CONTENTS EVEN                     W1550000
P        EQU   8                   AC POSITIVE, NOT ZERO                W1552000
N        EQU   16                  AC NEGATIVE                          W1554000
Z        EQU   32                  AC ZERO                              W1556000
         EJECT                                                          W1558000
         SPACE 3                                                        W1560000
*********************************************************************** W1562000
*              MISCELLANEOUS UNIQUE SYMBOL DEFINITIONS                * W1564000
*********************************************************************** W1566000
         SPACE 2                                                        W1568000
D1       EQU   2                   DISPLACEMENT OF 1 1130 WORD          W1570000
A        EQU   127                 DEFINED TO                           W1572000
B        EQU   128                  SHORTEN MACRO                       W1574000
D        EQU   256                   EXPANSION LINE                     W1576000
         SPACE 1                                                        W1578000
*********************************************************************** W1580000
*              BINARY SYNCHRONOUS CONTROL CHARACTERS                  * W1582000
*********************************************************************** W1584000
         SPACE 1                                                        W1586000
$SOH     EQU   X'01'               START OF HEADING                     W1588000
$STX     EQU   X'02'               START OF TEXT                        W1590000
$ETX     EQU   X'03'               END OF TEXT                          W1592000
$DLE     EQU   X'10'               DATA LINK ESCAPE                     W1594000
$ETB     EQU   X'26'               END OF BLOCK                         W1596000
$ENQ     EQU   X'2D'               ENQUIRY                              W1598000
$SYN     EQU   X'32'               SYNCHRONOUS IDLE                     W1600000
$EOT     EQU   X'37'               END OF TRANSMISSION                  W1602000
$NAK     EQU   X'3D'               NEGATIVE ACKNOWLEDGEMENT             W1604000
$ACK0    EQU   X'70'               POSITIVE ACKNOWLEDGEMENT             W1606000
$PAD     EQU   X'FF'               PAD CHARACTER                        W1608000
         EJECT                                                          W1610000
*********************************************************************** W1612000
*              SCA FUNCTION INDICATORS FOR BSXIOS INTERPRETATION      * W1614000
*********************************************************************** W1616000
         SPACE 2                                                        W1618000
$BSXRDX  EQU   0                   READ (RECEIVE) FUNCTION              W1620000
$BSXTMR  EQU   1                   PROGRAM TIMER FUNCTION               W1622000
$BSXTNT  EQU   2                   TRANSMIT NORMAL TEXT                 W1624000
$BSXTTT  EQU   3                   TRANSMIT TRANSPARENT TEXT            W1626000
$BSXTAK  EQU   4                   TRANSMIT DLE-ACK0                    W1628000
$BSXTNK  EQU   5                   TRANSMIT NAK                         W1630000
$BSXTSQ  EQU   6                   TRANSMIT SOH-ENQ                     W1632000
         SPACE 3                                                        W1634000
*********************************************************************** W1636000
*              CONTROL RECORD TYPE IDENTIFICATION DEFINITIONS         * W1638000
*********************************************************************** W1640000
         SPACE 2                                                        W1642000
$CRREQT  EQU   X'90'               REQUEST TO START                     W1644000
$CRPERM  EQU   X'A0'               PERMISSION TO START                  W1646000
         SPACE 3                                                        W1648000
*********************************************************************** W1650000
*              INPUT (LOCAL DEVICES) CHARACTER CODE DEFINITIONS       * W1652000
*********************************************************************** W1654000
         SPACE 2                                                        W1656000
$CRDCODE EQU   0                   IBM CARD CODE                        W1658000
$PTTCODE EQU   1                   PAPER TAPE CODE                      W1660000
$EBCCODE EQU   2                   EBCDIC CODE                          W1662000
         SPACE 3                                                        W1664000
*********************************************************************** W1666000
*              CONSOLE MESSAGE LIST LEVEL SYMBOLICS                   * W1668000
*********************************************************************** W1670000
         SPACE 2                                                        W1672000
$LIST15  EQU   15                  HIGHEST LEVEL                        W1674000
         SPACE 3                                                        W1676000
*********************************************************************** W1678000
*              CONSOLE RIBBON COLOR AND PRINT CODE SYMBOLICS          * W1680000
*********************************************************************** W1682000
         SPACE 2                                                        W1684000
$RED     EQU   X'80'               RED RIBBON CODE                      W1686000
$BLACK   EQU   X'00'               BLACK RIBBON CODE                    W1688000
$EBCD    EQU   X'00'               EBCDIC CODE                          W1690000
$TILT    EQU   X'01'               TILT-ROTATE CODE                     W1692000
         TITLE 'RTP1130 (CONSOLE ENTRY KEY DEFINITIONS)'                W1694000
*********************************************************************** W1696000
*              CONSOLE ENTRY KEY DEFINITIONS                          * W1698000
*********************************************************************** W1700000
*                                                                     * W1702000
*                                  KEY  DESCRIPTION                   * W1704000
*                                  ---  -----------                   * W1706000
$KEY00   EQU   X'8000'               0  SET ON TO UPDATE $ENTKEYS WITH  W1708000
*                                       VALUE OF ENTRY KEYS READ EACH   W1710000
*                                       COMMUTATOR CYCLE                W1712000
*                                                                     * W1714000
$KEY01   EQU   X'4000'               1  SET ON TO INHIBIT SCA TRACE     W1716000
*                                                                       W1718000
*                                    -  KEYS 2 THRU 7 ARE RESERVED FOR  W1720000
*                                       SYSTEM PROGRAMMER WHIMS         W1722000
*                                                                     * W1724000
*                                    -  KEYS 8 THRU 15 ARE AVAILABLE    W1726000
*                                       FOR SENSIBLE OPERATIONAL USE    W1728000
*                                                                     * W1730000
         TITLE 'RTP1130 (INDEX REGISTER DEFINITIONS)'                   W1732000
*********************************************************************** W1734000
*              ABSOLUTE DEFINITION FOR INDEX REGISTERS                * W1736000
*********************************************************************** W1738000
         SPACE 3                                                        W1740000
XR1      EQU   1                   INDEX REGISTER 1                     W1742000
XR2      EQU   2                   INDEX REGISTER 2                     W1744000
XR3      EQU   3                   INDEX REGISTER 3                     W1746000
         SPACE 3                                                        W1748000
*********************************************************************** W1750000
*              STANDARD SYMBOLICS FOR WORK REGISTERS                  * W1752000
*********************************************************************** W1754000
         SPACE 3                                                        W1756000
WA       EQU   XR1                 WORK REGISTER 1                      W1758000
WB       EQU   XR2                 WORK REGISTER 2                      W1760000
WC       EQU   XR3                 WORK REGISTER 3                      W1762000
         SPACE 3                                                        W1764000
         AIF   (&FULLIST EQ 1).XPANDOK                                  W1766000
         PRINT NOGEN               DELETE MACRO EXPANSIONS              W1768000
.XPANDOK ANOP                                                           W1770000
         TITLE 'RTPLOAD (ERROR CODE DEFINITIONS)'                       W1772000
         SPACE 3                                                        W1774000
*********************************************************************** W1776000
*              ERROR CODES WHICH ARE DISPLAYED IN AC AT $WAIT TIME    * W1778000
*********************************************************************** W1780000
         DS    0H                                                       W1782000
*ERROR1  DC    AL2(X'FFF1')        CARD READER OUT OF READY             W1784000
SERROR2  DC    AL2(X'FFF2')        CHECKSUM ERROR ON LOAD CARD          W1786000
SERROR3  DC    AL2(X'FFF3')        REP CARD FORMAT ERROR                W1788000
*ERROR4  DC    AL2(X'FFF4')        BAD CALL TO 'RDCARD'                 W1790000
         TITLE 'RTPLOAD (INITIALIZATION SECTION)'                       W1792000
         SPACE 3                                                        W1794000
*********************************************************************** W1796000
*                                                                     * W1798000
* TITLE - RTPLOAD                                                     * W1800000
*                                                                     * W1802000
* FUNCTION/OPERATION                                                  * W1804000
*                                                                     * W1806000
*  RTPLOAD IS THE MAIN LOADER FOR THE RTP1130 PROGRAM. RTPLOAD IS     * W1808000
*  LOADED INTO UPPER 1130 CORE BY THE BOOTSTRAP LOADER RTPBOOT.       * W1810000
*  THE MAJOR FUNCTIONS PERFORMED BY RTPLOAD ARE...                    * W1812000
*                                                                     * W1814000
*                    1. CLEARS DEFINED 1130 CORE UP TO ORIGIN OF      * W1816000
*                       RTPLOAD                                       * W1818000
*                                                                     * W1820000
*                    2. SETS INTERRUPT TRANSFER VECTORS AND A 'WAIT'  * W1822000
*                       ROUTINE IN LOWER CORE                         * W1824000
*                                                                     * W1826000
*                    3. TESTS THE VALUE OF HEX LOCATION 28 FOR AN     * W1828000
*                       INDICATION OF THE CARD READER BEING USED.     * W1830000
*                       INITIALIZES THE CARD READER ROUTINE FOR 1442  * W1832000
*                       OR 2501 OPERATION                             * W1834000
*                                                                     * W1836000
*                    4. READS AND PROCESSES RTP1130 DECK              * W1838000
*                                                                     * W1840000
*                    5. READS AND PROCESSES REP CARDS IF ANY          * W1842000
*                                                                     * W1844000
*                    6. READS AND PROCESSES /*SIGNON CARD IF ANY      * W1846000
*                                                                     * W1848000
*                    7. LOADS ADDRESS OF /*SIGNON CARD IN REGISTER    * W1850000
*                       WB AND TRANSFERS CONTROL TO RTP1130           * W1852000
*                       NOTE..IF A /*SIGNON CARD IS NOT READ, THEN    * W1854000
*                       A DEFAULT /*SIGNON CARD AS PRODUCED BY        * W1856000
*                       THE RMTGEN PROCESS IS USED                    * W1858000
*                                                                     * W1860000
*********************************************************************** W1862000
         SPACE 3                                                        W1864000
*********************************************************************** W1866000
*              CLEAR 1130 CORE FROM &RTPLORG-1 TO 0                   * W1868000
*********************************************************************** W1870000
RTPLINIT $NULL                     INITIALIZATION BEGINS HERE           W1872000
         $LD   40,,L               GET 1442 COLUMN INTERRUPT ENTRY      W1874000
         $STO  COLITVL             SAVE FOR LATER INTERROGATION         W1876000
         $AXT  $RTPLORG/2-1,WA,L   LENGTH OF CORE TO CLEAR              W1878000
         $ZAC                      CLEAR AC                             W1880000
RTPLICLR $STO  0,WA                CLEAR A CORE LOCATION                W1882000
         $MDX  -1,WA               INCREMENT AND TEST INDEX             W1884000
         $B    RTPLICLR            KEEP GOING                           W1886000
*                                  ALL DONE...                          W1888000
*********************************************************************** W1890000
*              SET INTERRUPT VECTORS IN LOCATIONS 8 THRU 13           * W1892000
*********************************************************************** W1894000
         $AXT  6,WA                NUMBER OF TRANSFER VECTORS           W1896000
RTPLIGET $LD   RTPLIVCT-D1,WA,L    GET A VECTOR                         W1898000
         $STO  7,WA,L              STORE IT                             W1900000
         $MDX  -1,WA               DECREMENT AND TEST INDEX             W1902000
         $B    RTPLIGET            GET NEXT VECTOR                      W1904000
         EJECT                                                          W1906000
*********************************************************************** W1908000
*              SET UP GENERAL WAIT ROUTINE IN LOW CORE                * W1910000
*********************************************************************** W1912000
         $LD   RTPLWT1             GET 'WAIT' INSTRUCTION               W1914000
         $STO  $WAIT+1,,L          STORE IN $WAIT+1                     W1916000
         $LD   RTPLWT2             GET $B $WAIT,,I INSTRUCTION          W1918000
         $STO  $WAIT+2,,L          STORE IN $WAIT+2                     W1920000
         $LD   RTPLWT2+D1          GET SECOND HALF                      W1922000
         $STO  $WAIT+3,,L          STORE IT                             W1924000
         $B    RTPLTRDR            GO TEST READER TYPE                  W1926000
RTPLWT1  $WAIT                     WAIT FOR $WAIT                       W1928000
RTPLWT2  $B    $WAIT,,I            RETURN FOR $WAIT                     W1930000
*********************************************************************** W1932000
*              TEST FOR 2501/1442 READER AND ADJUST PROGRAM IF 1442   * W1934000
*********************************************************************** W1936000
RTPLTRDR $NULL                                                          W1938000
         $LD   COLITVL             GET RTPBOOT 1442  COLUMN INTERRUPT   W1940000
         $SRA  1                   CLEAR AC IF NO COLUMN INTERRUPT      W1942000
         $BNZ  RTPLNT25            BRANCH IF 1442 COLUMN INTERRUPT      W1944000
         $B    RTPLPB               OTHERWISE ASSUME 2501 READER        W1946000
*********************************************************************** W1948000
*              1442 INITIALIZATION VALUES                             * W1950000
*********************************************************************** W1952000
         $BSS  0,E                 FOR EVEN STORAGE ASSIGNMENT          W1954000
RTPLNOPI $NOP                      NOP FOR 1442 ADJUSTMENT              W1956000
RTPLTR25 DC    AL2($2501+$SENSED)  SENSE 2501 NO RESET                  W1958000
RTPFFIR  DC    AL2($1442+$CONTROL+4) START 1442 COMMAND                 W1960000
RTPLTR42 DC    AL2($1442+$SENSED)  SENSE 1442 NO RESET                  W1962000
RTPLSRS4 DC    AL2($1442+$SENSED+2) SENSE WITH LEVEL 4 RESET            W1964000
COLITVL  DC    AL2(*-*)            SET TO 1 IF 2501 READER              W1966000
         $ADCON (RTPLZERO)         POINTER TO ZERO WORD COUNT           W1968000
RTPLFEED DC    AL2($IREAD+$2501)   2501 FEED COMMAND                    W1970000
RTPLZERO DC    AL2(0)              ZERO WORD COUNT                      W1972000
RTPLFD42 DC    AL2($CONTROL+$1442+2) FEED COMMAND FOR 1442              W1974000
*                                  MODIFY PROGRAM FOR 1442              W1976000
RTPLNT25 $NULL                                                          W1978000
         $XIO  RTPLTR42-D1         SENSE 1442 WITHOUT RESET             W1980000
         $BOD  RTPLTRDR            LOOP IF NOT READY                    W1982000
         $LD   RTPLSRS4            GET 1442 SENSE/RESET LEVEL 4         W1984000
         $STO  RE252,,L            STORE IN CARD READ ROUTINE           W1986000
         $LD   RTPFFIR             GET 1442 START READ COMMAND          W1988000
         $STO  RE264+D1,,L         STORE IN CARD READ ROUTINE           W1990000
         $LD   RTPLTR42            GET 1442 SENSE WITHOUT RESET         W1992000
         $STO  RE288,,L            STORE IN CARD READ ROUTINE           W1994000
         $LD   RTPLFD42            SET FEED COMMAND                     W1996000
         $STO  RTPLFEED            FOR 1442                             W1998000
         TITLE 'RTPLOAD (LOAD PROCESSOR)'                               W2000000
         SPACE 3                                                        W2002000
*********************************************************************** W2004000
*              COMMENCE THE LOAD PROCESS                              * W2006000
*********************************************************************** W2008000
RTPLPB   $NULL                     PRIME FIRST BUFFER                   W2010000
         $TSL  RDCARD              LINK TO CARD READ ROUTINE            W2012000
         DC    X'1000'             READ PARAMETER                       W2014000
         $ADCON RTPLB1             POINTER TO FIRST BUFFER              W2016000
         $ADCON RTPLUE             UNUSUAL END ROUTINE                  W2018000
*                                  WAIT FOR BUFFER  TO FILL             W2020000
RTPLUP   $TSL  RDCARD              LINK TO CARD READ ROUTINE            W2022000
         DC    X'0000'             TEST PARAMETER                       W2024000
         $B    RTPLUP              KEEP TESTING                         W2026000
         $LDD  RTPLBP              GET BUFFER POINTERS                  W2028000
         $RTE  16                  SWITCH BUFFERS                       W2030000
         $STD  RTPLBP              SET NEW POINTERS                     W2032000
         $MDM  RTPNDS,0            TEST LAST CARD FLAG                  W2034000
         $B    RTPZIPP             BRANCH IF ON                         W2036000
         $STO  RTPLNX              SET FOR NEXT READ                    W2038000
         $TSL  RDCARD              START READ INTO ALTERNATE BUFFER     W2040000
         DC    X'1000'             READ PARAMETER                       W2042000
RTPLNX   DC    AL2(*-*)            MODIFIED TO ALTERNATE BUFFER         W2044000
         $ADCON RTPLUE             UNUSUAL END ROUTINE ADDRESS          W2046000
RTPZIPP  $NULL                                                          W2048000
         $LD   RTPLBP+D1           GET PRIMED BUFFER ADDRESS            W2050000
         $STO  RTPLCL+D1           SET TEXT CARD PROCESSOR              W2052000
RTPANOP  $A    C1                  POINT TO DATA                        W2054000
         $STO  RTPLDP              IN CONVERSION CALL                   W2056000
         $TSL  CONVRT              GO CONVERT CARD CODE TO EBCDIC       W2058000
RTPLDP   DC    AL2(*-*)            SET TO ADDRESS OF INPUT/OUTPUT       W2060000
*********************************************************************** W2062000
*              TEST CARD TYPE AND GO TO PROPER ROUTINE                * W2064000
*********************************************************************** W2066000
         $LXA  RTPLDP,WA           OUTPUT AREA ADDRESS                  W2068000
         $LD   0,WA                GET COLUMNS 1 AND 2                  W2070000
         $SRA  8                   COLUMN 1 TO LOW ORDER AC             W2072000
         $S    RTPLCT              TEST FOR TEXT CARD                   W2074000
         $BZ   RTPLTX              BRANCH IF TEXT                       W2076000
         $LD   0,WA                NO. GET COLUMNS 1 AND I              W2078000
         $AND  XFF00               MASK COLUMN 2                        W2080000
         $S    RTPLEN              TEST FOR END CARD                    W2082000
         $BNZ  RTPLUP              IGNORE IF NONE OF THE ABOVE          W2084000
*********************************************************************** W2086000
*              END CARD PROCESSOR                                     * W2088000
*********************************************************************** W2090000
         $LD   1,WA                GET RIGHT HALF OF LOAD ADDRESS       W2092000
         $SRT  16                  TO EXT                               W2094000
         $LD   0,WA                GET LEFT HALF OF LOAD ADDRESS        W2096000
         $SLT  8                   FORM COMPLETE LOAD ADDRESS           W2098000
         $STO  RTPLGO+D1           SAVE IT FOR GO...                    W2100000
RTPLLC   $NULL                                                          W2102000
         $LD   RTPNDS              GET LAST CARD FLAG                   W2104000
         $BZ   RTPLRP,,L           GO TO REP ROUTINE IF MORE CARDS      W2106000
*********************************************************************** W2108000
*              TERMINATION OF RTPLOAD                                 * W2110000
*********************************************************************** W2112000
RTPLEND  $NULL                                                          W2114000
         $XIO  RTPLFEED-D1,,L      EJECT LAST CARD FROM READER          W2116000
         $AXT  RTPETSOR,WB,L       ADDRESS OF SIGN-ON RECORD            W2118000
RTPLGO   $B    *-*,,L              GO GO GO                             W2120000
*********************************************************************** W2122000
*              TEXT CARD PROCESSOR                                    * W2124000
*********************************************************************** W2126000
RTPXMS   DC    X'00FF'             MASK FOR HIGH ORDER BYTE             W2128000
RTPLCK   DC    H'0'                CHECKSUM ACCUMULATOR                 W2130000
RTPLTX   $NULL                     TEXT CARD PROCESSOR                  W2132000
         $ZAC                      CLEAR AC                             W2134000
         $STO  RTPLCK              CLEAR CHECKSUM ACCUMULATOR           W2136000
         $AXT  36,WB               SET WB FOR 72 COLUMNS                W2138000
RTPLCL   $LD   *-*,WB,L            GET 2 COLUMNS                        W2140000
         $SRT  8                   MAKE IT 1 COLUMN                     W2142000
         $AND  RTPXMS              CLEAR HIGH BYTE                      W2144000
         $A    RTPLCK              COMPUTE COLUMN CHECKSUM              W2146000
         $STO  RTPLCK              SAVE IT                              W2148000
         $ZAC                      CLEAR AC                             W2150000
         $SLT  8                   GET OTHER COLUMN                     W2152000
         $A    RTPLCK              COMPUTE CHECKSUM                     W2154000
         $STO  RTPLCK                                                   W2156000
         $MDX  -1,WB               DO IT FOR 72 COLUMNS                 W2158000
         $B    RTPLCL              KEEP GOING                           W2160000
*********************************************************************** W2162000
*              COMPARE COMPUTED CHECKSUM WITH CARD VALUE              * W2164000
*********************************************************************** W2166000
         $LD   36,WA               GET LETRRIP CHECKSUM                 W2168000
         $S    RTPLCK              COMPARE IT WITH RTPLOAD VALUE        W2170000
         $BNZ  RTPLCE              BRANCH IF ERROR                      W2172000
*********************************************************************** W2174000
*              FORM LOAD ADDRESS FOR DATA ON THIS CARD                * W2176000
*********************************************************************** W2178000
RTPLGULP $NULL                                                          W2180000
         $LD   1,WA                GET RIGHT HALF OF LA                 W2182000
         $SRT  16                  TO EXT                               W2184000
         $LD   0,WA                GET LEFT HALF                        W2186000
         $SLT  8                   FORM LA IN AC                        W2188000
         $STO  TEMP1               TO TEMP STORAGE                      W2190000
         $LXA  TEMP1,WB            TO WB                                W2192000
         $ZAC                      CLEAR AC                             W2194000
         $SLT  8                   WORD COUNT FROM EXT                  W2196000
         $STO  RTPLWC              SAVE IT                              W2198000
RTPLDR   $LD   2,WA                GET DATA TO BE LOADED                W2200000
         $STO  0,WB                LOAD IT                              W2202000
         $MDX  1,WA                INCREMENT WA                         W2204000
         $MDX  1,WB                AND WB                               W2206000
         $MDM  RTPLWC,-1           DECREMENT AND TEST WORD COUNT        W2208000
         $B    RTPLDR              MORE TO LOAD                         W2210000
         $B    RTPLUP              GET NEXT BUFFER                      W2212000
         EJECT                                                          W2214000
*********************************************************************** W2216000
*        CHECKSUM ERROR ROUTINE                                       * W2218000
*********************************************************************** W2220000
RTPLCE   $NULL                                                          W2222000
         $LD   SERROR2,,L          GET CHECKSUM ERROR CODE              W2224000
         $TSL  $WAIT               GO TO $WAIT ROUTINE                  W2226000
         $B    RTPLGULP            IGNORE ERROR ON RETURN               W2228000
*********************************************************************** W2230000
*              UNUSUAL END ROUTINE FOR 2501                           * W2232000
*********************************************************************** W2234000
RTPLUE   DC    H'0'                ENTERED FROM RD2501                  W2236000
         $BNZ  RTPLUE,,I           RETRY ON ALL ERRORS                  W2238000
         $STL  RTPNDS              LAST CARD RUN UP THE FLAG            W2240000
         $ZAC                      SET TERMINATION INDICATOR            W2242000
         $B    RTPLUE,,I           AND RETURN TO READ ROUTINE           W2244000
RTPNDS   DC    H'0'                SET TO NON-ZERO ON LAST CARD         W2246000
*********************************************************************** W2248000
*              CONSTANTS, STORAGE, BUFFERS, ETC.                      * W2250000
*********************************************************************** W2252000
C1       DC    H'1'                CONSTANT UNO                         W2254000
XFF00    DC    X'FF00'             MASK                                 W2256000
RTPLWC   DC    H'0'                CURRENT CARD LOAD ADDRESS            W2258000
TEMP1    DC    H'0'                TEMPORARY STORAGE                    W2260000
RTPLCT   DC    X'00E3'             EBCDIC 'T'                           W2262000
RTPLEN   DC    X'C500'             EBCDIC 'E'                           W2264000
         $BSS  0,E                 EVEN LOCATION COUNTER                W2266000
RTPLBP   $ADCON RTPLB1             BUFFER 1 POINTER                     W2268000
         $ADCON RTPLB2             BUFFER 2 POINTER                     W2270000
RTPLB1   DC    H'80'               BUFFER 1 CONTROL WORD                W2272000
         $BSS  80                  BUFFER 1                             W2274000
RTPLB2   DC    H'80'               BUFFER 2 CONTROL WORD                W2276000
         $BSS  80                  BUFFER 2                             W2278000
         TITLE 'REPLDR (REP CARD LOADER)'                               W2280000
         SPACE 3                                                        W2282000
*********************************************************************** W2284000
*                                                                     * W2286000
* TITLE - REPLDR - REP CARD LOADER                                    * W2288000
*                                                                     * W2290000
* FUNCTION/PURPOSE -                                                  * W2292000
*                                                                     * W2294000
*  TO REPAIR FAULTY CODE OR TO ALLOW PROGRAMMING IN THE LOWEST        * W2296000
*  FORM. REP CARDS WITH FORMAT SHOWN BELOW MAY BE INCLUDED            * W2298000
*  FOLLOWING THE DECK LOADED BY RTPLOAD...                            * W2300000
*                                                                     * W2302000
*              COL 000000000111111111122222.........                  * W2304000
*                  123456789012345678901234.........                  * W2306000
*                  ------------------------.........                  * W2308000
*                  IREP CAAAAA CDDDD,CDDDD,...,CDDDD                  * W2310000
*                                                                     * W2312000
*              WHERE                                                  * W2314000
*                                                                     * W2316000
*                  I=ANY IDENTIFICATION CHARACTER                     * W2318000
*                                                                     * W2320000
*                  C=L FOR 'LISTING' OPTION WHERE THE                 * W2322000
*                    LOAD ADDRESS OR DATA CORRESPONDS                 * W2324000
*                    TO THE OS/360 ASSEMBLER LISTING OF               * W2326000
*                    THE PROGRAM BEING REPPED.                        * W2328000
*                                                                     * W2330000
*                  C=X FOR ABSOLUTE LOAD ADDRESS OR DATA              * W2332000
*                                                                     * W2334000
*                  A=LOAD ADDRESS OF FIRST DATA WORD AND              * W2336000
*                    IS INCREMENTED FOR EACH ADDITIONAL               * W2338000
*                    DATA WORDS ON THE CARD. REP CARDS MAY            * W2340000
*                    BE CONTINUED BY LEAVING 'A' BLANK.               * W2342000
*                                                                     * W2344000
*                  D=DATA (HEXADECIMAL) TO BE LOADED IN THE           * W2346000
*                    LOCATION COMPUTED AS A FUNCTION OF 'A'.          * W2348000
*                                                                     * W2350000
*              NOTE..THE LISTING OPTION (L) CAUSES THE SPECIFIED      * W2352000
*                    DATA TO BE DIVIDED BY 2 FOR CONVERSION FROM      * W2354000
*                    BYTE DATA TO 1130 WORD DATA. CAVEAT EMPTOR.      * W2356000
*                                                                     * W2358000
*********************************************************************** W2360000
         SPACE 3                                                        W2362000
RTPLRP   $NULL                                                          W2364000
RTPRWTE  $TSL  RDCARD              WAIT FOR READ STARTED                W2366000
         DC    X'0000'             BY LOADER TO COMPLETE                W2368000
         $B    RTPRWTE             BRANCH IF NOT COMPLETE               W2370000
         $LXA  RTPLNX,WA,L         GET BUFFER ADDRESS                   W2372000
         $STX  REPBFPT,WA          SET FOR NEXT READ                    W2374000
         $LD   RTPNDS,,L           GET LOADER LAST CARD FLAG            W2376000
         $STO  REPLSC              AND STORE IN REP LAST CARD FLAG      W2378000
         $B    REPNEXT             GO PROCESS REP CARD                  W2380000
REPREAD  $NULL                                                          W2382000
         $LD   REPLSC              TEST LAST CARD SWITCH                W2384000
         $BNZ  RTPLEND             BRANCH IF ON                         W2386000
         $TSL  RDCARD              GO GET A REP CARD                    W2388000
         DC    X'1000'             READ PARAMETER                       W2390000
REPBFPT  DC    AL2(*-*)            SET TO DATA BUFFER ADDRESS           W2392000
         $ADCON REPUSE             UNUSUAL END ROUTINE                  W2394000
REPTEST  $TSL  RDCARD              TEST FOR READ COMPLETE               W2396000
         DC    X'0000'             TEST PARAMETER                       W2398000
         $B    REPTEST             WAIT FOR READ TO COMPLETE            W2400000
*********************************************************************** W2402000
*              TEST FOR 'REP' IN COLUMNS 2-4                          * W2404000
*********************************************************************** W2406000
         $LXA  REPBFPT,WA          GET BUFFER POINTER                   W2408000
REPNEXT  $MDX  1,WA                POINT TO DATA                        W2410000
         $LD   1,WA                GET POSSIBLE 'R'                     W2412000
         $EOR  REPCNR              COMPARE WITH CARD CODE 'R'           W2414000
         $BNZ  SIGNOT              GO TEST FOR /*SIGNON CARD            W2416000
         $LD   2,WA                GET POSSIBLE 'E'                     W2418000
         $EOR  REPCNE              COMPARE WITH CARD CODE 'E'           W2420000
         $BNZ  REPREAD             BRANCH IF NO MATCH                   W2422000
         $LD   3,WA                GET POSSIBLE 'P'                     W2424000
         $EOR  REPCNP              COMPARE WITH CARD CODE 'P'           W2426000
         $BNZ  REPREAD             BRANCH IF NO MATCH                   W2428000
*********************************************************************** W2430000
*              REP CARD DATA PROCESSOR                                * W2432000
*********************************************************************** W2434000
REPROC   $NULL                     COMMENCE REPPING                     W2436000
         $MDX  7,WA                POINT TO LOAD ADDRESS                W2438000
*                                  (ACCOMODATES 16K 1130                W2440000
*                                  ONLY IF C=L)                         W2442000
         $LD   0,WA                GET FIRST DIGIT OF OF LOAD ADDRESS   W2444000
         $EOR  REPBLK              TEST FOR BLANK (COL. 8 ONLY)         W2446000
         $BZ   REPSKP              BRANCH IF BLANK AND ASSUME           W2448000
*                                  CONTINUATION OF PREVIOUS LA          W2450000
         $STX  REPDPT,WA           SET UP CONVERSION ROUTINE            W2452000
         $TSL  SXHXBIN             GO CONVERT TO BINARY                 W2454000
REPDPT   DC    AL2(0)              DATA POINTER                         W2456000
         $BO   REPERR              BRANCH IF ERROR                      W2458000
         $STO  REPLDA              STORE LOAD ADDRESS                   W2460000
         $LD   -2,WA               GET CONTROL CHARACTER                W2462000
         $EOR  REPCNX              TEST FOR 'X'                         W2464000
         $BZ   REPSKP              BRANCH IF 'X'                        W2466000
         $LD   -2,WA               GET CONTROL CHARACTER                W2468000
         $EOR  REPCNL              TEST FOR 'L'                         W2470000
         $BNZ  REPERR              ERROR IF NOT 'X' OR 'L'              W2472000
         $LD   REPLDA              IT'S 'L'. GET LOAD ADDRESS           W2474000
         $SRA  1                   DIVIDE BY 2                          W2476000
         $STO  REPLDA              BACK TO LOAD ADDRESS CELL            W2478000
REPSKP   $NULL                                                          W2480000
REPLOOP  $MDX  6,WA                POINT TO DATA                        W2482000
         $STX  REPDATA,WA          SET UP CONVERSION                    W2484000
         $TSL  SXHXBIN             GO CONVERT TO BINARY                 W2486000
REPDATA  DC    AL2(0)              DATA POINTER                         W2488000
         $BO   REPERR              BRANCH IF ERROR                      W2490000
         $STO  REPTMP              SAVE DATA                            W2492000
         $LD   -1,WA               GET CONTROL CHARACTER                W2494000
         $EOR  REPCNX              TEST FOR 'X'                         W2496000
         $BZ   REPJMP              BRANCH IF 'X'                        W2498000
         $LD   -1,WA               GET CONTROL CHARACTER                W2500000
         $EOR  REPCNL              TEST FOR 'L'                         W2502000
         $BNZ  REPERR              ERROR IF NOT 'X' OR 'L'              W2504000
         $LD   REPTMP              IT'S 'L'. GET DATA                   W2506000
         $SRA  1                   DIVIDE BY 2                          W2508000
         $B    REPSTO              GO STORE IT                          W2510000
REPJMP   $LD   REPTMP              GET DATA                             W2512000
REPSTO   $STO  REPLDA,,I           STUFF IT                             W2514000
         $MDM  REPLDA,1            UP THE LOAD ADDRESS                  W2516000
*                                  AND THE IRISH                        W2518000
         $LD   4,WA                GET SEPARATOR OR TERMINATOR          W2520000
         $EOR  REPCMA              TEST FOR COMMA                       W2522000
         $BZ   REPLOOP             BRANCH FOR MORE IF COMMA             W2524000
         $LD   4,WA                NOT COMMA. HOW ABOUT                 W2526000
         $EOR  REPBLK              A BLANK (TERMINATOR)                 W2528000
         $BZ   REPREAD             BRANCH IF BLANK                      W2530000
*********************************************************************** W2532000
*              REP CARD FORMAT ERROR                                  * W2534000
*********************************************************************** W2536000
REPERR   $NULL                                                          W2538000
         $LD   SERROR3,,L          GET REP CARD ERROR CODE              W2540000
         $TSL  $WAIT               GO TO $WAIT                          W2542000
         $B    REPREAD             IGNORE IF RETURN                     W2544000
*********************************************************************** W2546000
*              UNUSUAL END WHILE READING REP CARDS                    * W2548000
*********************************************************************** W2550000
REPUSE   DC    H'0'                ENTERED FROM CARD READ AT INTERRUPT  W2552000
         $BNZ  REPUSE,,I           RETRY IF READ/FEED ERROR             W2554000
         $STL  REPLSC              SET LAST CARD FLAG                   W2556000
         $ZAC                      CLEAR AC                             W2558000
         $B    REPUSE,,I           EXIT                                 W2560000
*********************************************************************** W2562000
*              CONSTANTS AND ALL THAT GOOD STUFF                      * W2564000
*********************************************************************** W2566000
         DS    0H                                                       W2568000
REPCNR   DC    X'4010'             CARD CODE 'R'                        W2570000
REPCNE   DC    X'8100'             CARD CODE 'E'                        W2572000
REPCNP   DC    X'4040'             CARD CODE 'P'                        W2574000
REPBLK   DC    X'0000'             CARD CODE ' '                        W2576000
REPCMA   DC    X'2420'             CARD CODE ','                        W2578000
REPCNL   DC    X'4400'             CARD CODE 'L'                        W2580000
REPCNX   DC    X'2040'             CARD CODE 'X'                        W2582000
REPTMP   DC    H'0'                TEMPORARY STORAGE                    W2584000
REPLDA   DC    H'0'                LOAD ADDRESS                         W2586000
REPLSC   DC    H'0'                LAST CARD SWITCH FOR REP ROUTINE     W2588000
         TITLE '$XHXBIN (HEXADECIMAL TO BINARY CONVERSION)'             W2590000
         SPACE 3                                                        W2592000
*********************************************************************** W2594000
*                                                                     * W2596000
* TITLE - $XHXBIN - EBCDIC HEXADECIMAL (CARD CODE) TO BINARY          * W2598000
*                                                                     * W2600000
* FUNCTION/PURPOSE -                                                  * W2602000
*                                                                     * W2604000
*  CONVERTS A FOUR CHARACTER HEXADECIMAL NUMBER IN CARD CODE EBCDIC   * W2606000
*  TO A ONE WORD BINARY EQUIVALENT CONTAINED IN AC AT EXIT. AC AND    * W2608000
*  EXT ARE NOT SAVED BY THIS ROUTINE                                  * W2610000
*                                                                     * W2612000
* CALLING SEQUENCE -                                                  * W2614000
*                                                                     * W2616000
*                   $TSL   $XHXBIN      LINKAGE                       * W2618000
*                   $ADCON INPUT        INPUT POINTER                 * W2620000
*                   ...                 EXIT WITH VALUE IN AC         * W2622000
*                                                                     * W2624000
* ERROR INDICATION -                                                  * W2626000
*                                                                     * W2628000
*  ILLEGAL CHARACTER (NOT HEX) INDICATED BY OVERFLOW INDICATOR        * W2630000
*  TURNED ON AND CARRY INDICATOR OFF AT EXIT                          * W2632000
*                                                                     * W2634000
*********************************************************************** W2636000
         SPACE 3                                                        W2638000
SXHXBIN  DC    AL2(*-*)            ENTRY POINT                          W2640000
         $STX  XHXWA+D1,WA         SAVE WA                              W2642000
         $STX  XHXWB+D1,WB         AND WB                               W2644000
         $LDS  0                   TURN OFF OVERFLOW AND CARRY          W2646000
         $STS  XHXST               SET FOR NORMAL EXIT                  W2648000
         $LXA  SXHXBIN,WA          ADDRESS OF INPUT POINTER             W2650000
         $LD   0,WA                GET INPUT POINTER                    W2652000
         $A    XHXC3               INCREMENT TO END OF INPUT            W2654000
         $STO  XHXSE+D1            SAVE END POINTER                     W2656000
         $MDX  1,WA                SET UP RETURN ADDRESS                W2658000
         $STX  XHXEX+D1,WA         SET EXIT                             W2660000
XHXSE    $AXT  *-*,WA,L            END POINTER TO WA                    W2662000
         $LD   XHXC4               SET COUNT FOR                        W2664000
         $STO  XHXCT               FOUR DIGITS                          W2666000
XHX16    $LD   0,WA                GET CARD CODE                        W2668000
         $BN   XHX40               BRANCH IF SIGN BIT ON                W2670000
         $AND  XHX400F             NUMERIC. CHECK FOR 1,12-15           W2672000
         $BNZ  XHX42               BITS AND BRANCH IF YES               W2674000
         $LD   0,WA                WHICH ROW BIT IS IT                  W2676000
XHX17    $AXT  12,WB               *                                    W2678000
         $SLCA 0,WB                WB=10 IF ROW 0,WB=9 IF ROW 1, ETC.   W2680000
         $S    XHX80               ERROR IF MULTIPLE ROWS               W2682000
         $BNZ  XHX42               OR NO BITS ON                        W2684000
         $STX  XHXTM,WB            SAVE SHIFT COUNT                     W2686000
         $LD   XHXC10              CONSTANT 10 TO AC                    W2688000
         $S    XHXTM               XHXTM=ROW BIT SET                    W2690000
         $BSC  O                   IS DIGIT ALPHA                       W2692000
         $A    XHXC9               YES. ADD 9 TO ROW                    W2694000
         $SRT  4                   SAVE BINARY DIGITS IN EXT            W2696000
         $MDX  -1,WA               NEXT DIGIT                           W2698000
         $MDM  XHXCT,-1            ARE WE DONE...                       W2700000
         $B    XHX16               NO. DO 4 DIGITS                      W2702000
XHXST    $LDS  0                   YES. RESTORE STATUS                  W2704000
XHX22    $RTE  16                  PUT RESULTS IN AC                    W2706000
XHXWA    $AXT  *-*,WA,L            RESTORE WA                           W2708000
XHXWB    $AXT  *-*,WB,L            RESTORE WB                           W2710000
XHXEX    $B    *-*,,L              RETURN                               W2712000
*********************************************************************** W2714000
*              SECTION TO PROCESS ALPHA CHARACTERS                    * W2716000
*********************************************************************** W2718000
XHX40    $LDS  1                   SET ALPHA INDICATOR                  W2720000
         $LD   0,WA                GET CHARACTER                        W2722000
         $AND  XHX607F             TEST FOR 11,0,7,8,9 ROW              W2724000
         $BNZ  XHX42               ERROR IF SET                         W2726000
         $LD   0,WA                GET CHARACTER                        W2728000
         $EOR  XHX80               MASK 12 ROW BIT                      W2730000
         $B    XHX17               GO TO NORMAL PROCESSING              W2732000
XHX42    $LDS  1                   SET ERROR INDICATOR                  W2734000
         $B    XHX22               EXIT                                 W2736000
*********************************************************************** W2738000
*              CONSTANTS AND STORAGE                                  * W2740000
*********************************************************************** W2742000
XHXCT    DC    H'0'                CHARACTER COUNT                      W2744000
XHXC3    DC    H'3'                DECIMAL NUMBER FOR SCALING           W2746000
XHXC4    DC    H'4'                ROW BIT VALUE                        W2748000
XHXC9    DC    H'9'                SCALING DIGIT                        W2750000
XHXC10   DC    H'10'               SCALING DIGIT                        W2752000
XHX400F  DC    X'400F'             MASK FOR BITS 1,12-15                W2754000
XHX607F  DC    X'607F'             MASK FOR BITS 11,0,7,8,9             W2756000
XHX80    DC    X'8000'             12-15 SIGN BIT MASK                  W2758000
XHXTM    DC    H'0'                TEMPORARY STORAGE                    W2760000
         TITLE 'RTPLOAD (INTERRUPT PROCESSORS)'                         W2762000
         SPACE 3                                                        W2764000
*********************************************************************** W2766000
*              LEVEL 0 - 1442 CARD READ/PUNCH                         * W2768000
*********************************************************************** W2770000
RTPLLVL0 DC    H'0'                ENTRY VIA HARDWARE $BSI 8,,I         W2772000
         $STO  RTPL0SAC            SAVE AC                              W2774000
         $XIO  RTPL0SRS-D1         SENSE WITH RESET                     W2776000
         $LD   RE264,,L            GET CURRENT DATA POINTER-1           W2778000
         $A    RTPL0CN1            POINT TO NEXT DATA SLOT              W2780000
         $STO  RE264,,L            RESET DATA POINTER                   W2782000
         $STO  RTPL0DPT            SET FOR READ                         W2784000
         $XIO  RTPL0DPT            READ CURRENT COLUMN                  W2786000
         $LD   RTPL0SAC            RESTORE AC                           W2788000
         $BOSC RTPLLVL0,,I         RETURN                               W2790000
         $BSS  0,E                 FOR EVEN STORAGE ASSIGNMENT          W2792000
RTPL0SAC DC    AL2(*-*)            AC SAVE                              W2794000
RTPL0SRS DC    AL2($1442+$SENSED+1) SENSE 1442 WITH RESET               W2796000
RTPL0DPT DC    AL2(*-*)            COLUMN POINTER                       W2798000
         DC    AL2($1442+$READ)    READ 1442 COMMAND                    W2800000
RTPL0CN1 DC    AL2(1)              CONSTANT 1                           W2802000
         SPACE 1                                                        W2804000
*********************************************************************** W2806000
*              LEVEL 1 - SCA AND 1130 PRINTER                         * W2808000
*********************************************************************** W2810000
RTPLLVL1 DC    H'0'                ENTRY VIA HARDWARE $BSI 9,,I         W2812000
         $WAIT                                                          W2814000
         SPACE 1                                                        W2816000
*********************************************************************** W2818000
*              LEVEL 2 - DISK AND SAC                                 * W2820000
*********************************************************************** W2822000
RTPLLVL2 DC    H'0'                ENTRY VIA HARDWARE $BSI 10,,I      * W2824000
         $WAIT                                                          W2826000
         SPACE 1                                                        W2828000
*********************************************************************** W2830000
*              LEVEL 3 - 1627,2250 AND SAC                            * W2832000
*********************************************************************** W2834000
RTPLLVL3 DC    H'0'                ENTRY VIA HARDWARE $BSI 11,,I        W2836000
         $WAIT                                                          W2838000
         SPACE 1                                                        W2840000
*********************************************************************** W2842000
*              LEVEL 4 - 1442,KB PRINTER,1134,1055,2501,1403,1231,SAC * W2844000
*********************************************************************** W2846000
RTPLLVL4 DC    H'0'                ENTRY VIA HARDWARE $BSI 12,,I        W2848000
         $STD  RTPL4SAQ            SAVE AC AND EXT                      W2850000
         $STS  RTPL4STS            AND STATUS                           W2852000
         $STX  RTPL4XR1+D1,XR1     XR1                                  W2854000
         $STX  RTPL4XR2+D1,XR2     XR2                                  W2856000
         $STX  RTPL4XR3+D1,XR3     XR3                                  W2858000
         $XIO  RTPL4SIL-D1         SENSE ILSW                           W2860000
         $AND  RTPL4MSK            MASK ALL BUT 2501 AND 1442           W2862000
         $BSI  RE048,,L,Z          GO IF 2501 OR 1442                   W2864000
*                                  IGNORE ALL OTHERS                    W2866000
RTPL4STS $LDS  0                   RESTORE STATUS AND                   W2868000
RTPL4XR1 $AXT  *-*,XR1,L           XR1                                  W2870000
RTPL4XR2 $AXT  *-*,XR2,L           XR2                                  W2872000
RTPL4XR3 $AXT  *-*,XR3,L           XR3                                  W2874000
         $LDD  RTPL4SAQ            AC AND EXT                           W2876000
         $BOSC RTPLLVL4,,I         RETURN                               W2878000
RTPL4SAQ $BSS  2,E                 AC AND EXT SAVE                      W2880000
RTPL4MSK DC    X'3000'             MASK FOR ILSW                        W2882000
RTPL4SIL DC    X'0300'             IOCC FOR SENSE ILSW                  W2884000
         SPACE 1                                                        W2886000
*********************************************************************** W2888000
*              LEVEL 5 - CONSOLE STOP AND SAC                         * W2890000
*********************************************************************** W2892000
RTPLLVL5 DC    H'0'                ENTRY VIA HARDWARE $BSI 13,,I        W2894000
         $WAIT                     WAIT FOR SOMEONE TO PUSH START       W2896000
         $BOSC RTPLLVL5,,I         RETURN                               W2898000
         EJECT                                                          W2900000
*********************************************************************** W2902000
*              INTERRUPT TRANSFER VECTORS                             * W2904000
*********************************************************************** W2906000
         SPACE 1                                                        W2908000
RTPLIVCT $NULL                     LEVEL     VECTOR                     W2910000
         $ADCON RTPLLVL0           0           8                        W2912000
         $ADCON RTPLLVL1           1           9                        W2914000
         $ADCON RTPLLVL2           2          10                        W2916000
         $ADCON RTPLLVL3           3          11                        W2918000
         $ADCON RTPLLVL4           4          12                        W2920000
         $ADCON RTPLLVL5           5          13                        W2922000
         TITLE 'RTPLOAD (2501 CARD READ SUBROUTINE)    '                W2924000
         SPACE 3                                                        W2926000
*********************************************************************** W2928000
*                                                                     * W2930000
* TITLE - RD2501 (READ 2501 SUBROUTINE)                               * W2932000
*                                                                     * W2934000
* FUNCTION/OPERATION                                                  * W2936000
*                                                                     * W2938000
*  READS CARDS FROM THE 2501 OR 1442 READER AS MODIFIED DURING        * W2940000
*  RTPLOAD INITIALIZATION                                             * W2942000
*                                                                     * W2944000
* CALLING SEQUENCE                                                    * W2946000
*                                                                     * W2948000
*  TEST FUNCTION                                                      * W2950000
*                                                                     * W2952000
*              $TSL   RD2501       LINKAGE                            * W2954000
*              DC     X'0000'      CONTROL (TEST) PARAMETER           * W2956000
*              ...                 PREVIOUS OPERATION INCOMPLETE      * W2958000
*              ...                 PREVIOUS OPERATION COMPLETE        * W2960000
*                                                                     * W2962000
*  INITIATE READ FUNCTION                                             * W2964000
*                                                                     * W2966000
*              $TSL   RD2501       LINKAGE                            * W2968000
*              DC     X'1000'      CONTROL (READ) PARAMETER           * W2970000
*              $ADCON IOADD        I/O AREA ADDRESS                   * W2972000
*              $ADCON UNEND        UNUSUAL END ROUTINE ADDRESS        * W2974000
*              ...                 READ INITIATED                     * W2976000
*                                                                     * W2978000
*********************************************************************** W2980000
RD2501   $NULL                                                          W2982000
RDCARD   EQU   RD2501                                                   W2984000
         DC    H'0'                ENTRY VIA $TSL RDCARD                W2986000
         $STX  RE144+D1,WA         SAVE WA                              W2988000
         $LXA  RD2501,WA           CONTROL PARAMETER ADDRESS TO WA      W2990000
         $STO  RE324               SAVE AC                              W2992000
         $STS  RE168               SAVE STATUS                          W2994000
         $STX  RE156+D1,WB         SAVE WB                              W2996000
         $LD   0,WA                GET CONTROL PARAMETER                W2998000
         $SRA  12                  IS FUNCTION 'TEST'                   W3000000
         $BNZ  RE072               BRANCH IF NOT                        W3002000
         $LD   RE228               TEST FOR SUBROUTINE BUSY             W3004000
         $SKPN                     SKIP IF BUSY (AC NON-ZERO)           W3006000
         $MDX  1,WA                SET EXIT TO CALL+3                   W3008000
         $B    RE120               EXIT TO CALL+2 (OR CALL+3)           W3010000
RE072    $S    RE240               IS FUNCTION LEGAL                    W3012000
         $BNZ  RE192               BRANCH IF NOT                        W3014000
RE084    $LD   RE228               IS SUBROUTINE BUSY                   W3016000
         $BNZ  RE084               LOOP IF YES                          W3018000
RE096    $XIO  RE288-D1            IS THE 2501 READY                    W3020000
         $BOD  RE204               BRANCH IF NOT                        W3022000
         $LD   1,WA,I              GET WORD COUNT                       W3024000
         $SKPN                     TEST FOR ZERO                        W3026000
         $B    RE108               BRANCH IF ZERO                       W3028000
         $BN   RE192               BRANCH IF NEGATIVE                   W3030000
         $S    RE276               0 THRU 80 IS LEGAL                   W3032000
         $BP   RE192               BRANCH IF GREATER THAN 80            W3034000
RE108    $MDX  2,WA                SET WA TO SKIP PARAMETERS            W3036000
         $LD   -1,WA               SAVE DATA                            W3038000
         $STO  RE264               ADDRESS                              W3040000
         $STO  RETRY               IN CASE OF 1442 READER               W3042000
         $LD   0,WA                LOAD ERROR ADDRESS                   W3044000
         $STO  RE360+2*D1          STORE IN INTERRUPT ROUTINE           W3046000
         $STO  RE370+2*D1          ERROR AND LAST CARD EXITS            W3048000
         $STX  RE228,0             SET BUSY INDICATOR ON                W3050000
         $XIO  RE264               INITIATE READ                        W3052000
RE120    $MDX  1,WA                SET EXIT POINTER                     W3054000
         $LD   RE324               RESTORE AC                           W3056000
RE132    $STX  RE180+D1,WA         SET TO SKIP FIRST PARAMETER          W3058000
RE144    $AXT  *-*,WA,L            RESTORE WA                           W3060000
RE156    $AXT  *-*,WB,L            RESTORE WB                           W3062000
RE168    $LDS  0                   RESTORE STATUS                       W3064000
RE180    $B    *-*,,L              EXIT                                 W3066000
RE192    $LD   RE312               ERROR CODE-ILLEGAL CALL              W3068000
         $B    RE216               GO SET RETURN ADDRESS                W3070000
RE204    $SRA  1                   IS DEVICE BUSY                       W3072000
         $BOD  RE096               BRANCH IF YES                        W3074000
         $LD   RE300               ERROR CODE-2501 NOT READY            W3076000
RE216    $MDX  -2,WA               SET WAIT ROUTINE TO RETRY            W3078000
         $STX  $WAIT,WA,L          WHEN OPERATOR PUSHES START           W3080000
         $AXT  $WAIT+1,WA,L        GET WAIT INSTRUCTION ADDRESS         W3082000
         $B    RE132               GO TO EXIT FOR RESTORATION           W3084000
         SPACE 3                                                        W3086000
*********************************************************************** W3088000
*              CONSTANTS                                              * W3090000
*********************************************************************** W3092000
         SPACE 3                                                        W3094000
RE228    DC    H'0'                ROUTINE BUSY INDICATOR               W3096000
         $BSS  0,E                 EVEN STORAGE DESIRED                 W3098000
RE240    DC    H'1'                CONSTANT 1                           W3100000
RE252    DC    X'4F01'             SENSE WITH RESET                     W3102000
RE264    DC    H'0'                I/O BUFFER ADDRESS                   W3104000
         DC    X'4E00'             IOCC TO INITIATE READ                W3106000
RE276    DC    H'80'               CONSTANT                             W3108000
RE288    DC    X'4F00'             SENSE DSW WITHOUT RESET              W3110000
RE300    DC    X'FFF1'             $ERROR1...2501 NOT READY             W3112000
RE312    DC    X'FFF4'             $ERROR4...BAD CALL                   W3114000
RETRY    DC    AL2(*-*)            DATA ADDRESS                         W3116000
RE324    DC    H'0'                SAVE FOR AC                          W3118000
         SPACE 3                                                        W3120000
         EJECT                                                          W3122000
*********************************************************************** W3124000
*                                  RD2501 INTERRUPT PROCESSING        * W3126000
*********************************************************************** W3128000
RE048    DC    H'0'                ENTRY FROM INTERRUPT PROCESSOR       W3130000
RE336    $XIO  RE252-D1            SENSE WITH RESET                     W3132000
         $SLA  3                   CHECK FOR READ ERROR                 W3134000
         $BC   RE360               YES. GO TO ERROR ROUTINE             W3136000
         $BSC  P+Z                 TEST LAST CARD INDICATOR             W3138000
         $B    RE370               YES...GO TELL USER                   W3140000
*********************************************************************** W3142000
*                                  TERMINATE OPERATION AND EXIT       * W3144000
*********************************************************************** W3146000
RE340    $SRA  16                  CLEAR ROUTINE BUSY INDICATOR         W3148000
         $STO  RE228                                                    W3150000
RE348    $B    RE048,,I            RETURN TO INTERRUPT ROUTINE          W3152000
*********************************************************************** W3154000
*                                  EXIT TO USERS UNUSUAL END ROUTINE  * W3156000
*********************************************************************** W3158000
RE360    $LD   RE240               GET READ ERROR CODE                  W3160000
         $TSL  *-*                 GO TO ROUTINE                        W3162000
         $SKPN                     TEST RETURN CODE                     W3164000
         $B    RE340               ZERO. TERMINATE OPERATION            W3166000
RE362    $XIO  RE288-D1            SENSE WITHOUT RESET                  W3168000
         $BOD  RE375               TO ERROR EXIT IF NOT READY           W3170000
         $LD   RETRY               RESET IOAR                           W3172000
         $STO  RE264               IN CASE 1442 READER                  W3174000
         $XIO  RE264               RE-INITIATE OPERATION                W3176000
         $B    RE348               EXIT. DON'T CLEAR BUSY               W3178000
RE370    $SRA  16                  SET LAST CARD INDICATOR (AC=0)       W3180000
         $TSL  *-*                 GO TO USER ROUTINE                   W3182000
         $B    RE340               TERMINATE                            W3184000
RE375    $LD   RE300               NOT READY INDICATOR                  W3186000
         $TSL  $WAIT               GO TO WAIT                           W3188000
         $B    RE362               TRY AGAIN                            W3190000
         TITLE 'RTPLOAD (UNPACKED CARD CODE TO PACKED EBCDIC ROUTINE)'  W3192000
*********************************************************************** W3194000
*              UNPACKED CARD CODE TO PACKED EBCDIC IN INPUT AREA      * W3196000
*********************************************************************** W3198000
CONVRT   DC    AL2(*-*)            ENTRY VIA $TSL CONVRT                W3200000
         $LD   CONVRT,,I           INPUT DATA AREA ADDRESS              W3202000
         $STO  WA,,L                TO WA                               W3204000
         $STO  CONVSB+D1             TO PUT                             W3206000
         $LD   CONV40              LOOP CONSTANT                        W3208000
         $STO  CONVCT               TO LOOP COUNTER                     W3210000
         $MDM  CONVRT,1            SET EXIT LINKAGE                     W3212000
CONVLP   $LD   0,WA                GET FIRST WORD OF COUPLE             W3214000
         $TSL  SXPRESS             GO CONVERT TO EBCDIC                 W3216000
         $SLA  8                   PREPARE FOR                          W3218000
         $STO  CONVTM               BUILDING OUTPUT                     W3220000
         $LD   1,WA                GET SECOND WORD OF COUPLE            W3222000
         $TSL  SXPRESS             GO CONVERT TO EBCDIC                 W3224000
         $OR   CONVTM              BUILD OUTPUT                         W3226000
CONVSB   $STO  *-*,,L              STORE IN PACKED FORM                 W3228000
         $MDM  CONVSB+D1,1         INCREMENT STORE ADDRESS              W3230000
         $MDX  2,WA                 AND FETCH ADDRESS                   W3232000
         $MDM  CONVCT,-1           DECREMENT AND TEST COUNT             W3234000
         $B    CONVLP              BRANCH IF MORE                       W3236000
         $B    CONVRT,,I            OR EXIT IF DONE                     W3238000
CONVCT   DC    AL2(*-*)            LOOP COUNTER                         W3240000
CONV40   DC    AL2(40)             COUNTER VALUE                        W3242000
CONVTM   DC    AL2(*-*)            TEMPORARY STORAGE                    W3244000
         TITLE 'RTPLOAD (/*SIGNON PROCESSOR)'                           W3246000
*********************************************************************** W3248000
*              TEST FOR /*SIGNON AND PROCESS IF FOUND                 * W3250000
*********************************************************************** W3252000
SIGNOT   $NULL                     WA POINTS TO FIRST WORD OF INPUT     W3254000
         $STX  SIGDPT,WA           ASSUME CARD IS /*SIGNON              W3256000
         $TSL  CONVRT              GO CONVERT TO EBCDIC                 W3258000
SIGDPT   DC    AL2(*-*)            INPUT/OUTPUT POINTER                 W3260000
         $LXA  SIGDPT,WA           RESTORE WA                           W3262000
         $LD   0,WA                TEST COLUMNS                         W3264000
         $EOR  SIGT12               1 AND 2                             W3266000
         $BNZ  REPREAD               FOR '/*'                           W3268000
         $LD   1,WA                   TEST COLUMNS                      W3270000
         $EOR  SIGT34                  3 AND 4                          W3272000
         $BNZ  REPREAD                  FOR 'SI'                        W3274000
         $LD   2,WA                      TEST COLUMNS                   W3276000
         $EOR  SIGT56                     5 AND 6                       W3278000
         $BNZ  REPREAD                     FOR 'GN'                     W3280000
         $LD   3,WA                         TEST COLUMNS                W3282000
         $EOR  SIGT78                        7 AND 8                    W3284000
         $BNZ  REPREAD                        FOR 'ON'                  W3286000
*********************************************************************** W3288000
*              MOVE SIGNON VARIABLE FIELD OVER ASSEMBLED VALUE        * W3290000
*********************************************************************** W3292000
         $AXT  RTPETSOR+9*D1,WB,L  ADDRESS OF SIGNON VARIABLE FIELD     W3294000
         $AXT  33,WC               SET UP TO MOVE COLUMNS 16-81         W3296000
SIGLOOP  $LD   7,WA                GET OFFSET COLUMNS                   W3298000
         $SLA  8                    AND                                 W3300000
         $STO  SIGSAV                ADJUST                             W3302000
         $LD   8,WA                   FOR                               W3304000
         $SRA  8                       RTP1130                          W3306000
         $OR   SIGSAV                   INITIALIZATION                  W3308000
         $STO  0,WB                      REQUIREMENTS                   W3310000
         $MDX  1,WB                       INCREMENT                     W3312000
         $MDX  1,WA                        POINTERS                     W3314000
         $MDX  -1,WC               TEST FOR COMPLETION                  W3316000
         $B    SIGLOOP             GET NEXT SET                         W3318000
         $B    REPREAD,,L           OR RETURN TO REP ROUTINE            W3320000
SIGSAV   DC    AL2(*-*)            TEMPORARY STORAGE                    W3322000
SIGT12   DC    C'/*'               TEST VALUE FOR COLUMNS 1 AND 2       W3324000
SIGT34   DC    C'SI'               TEST VALUE FOR COLUMNS 3 AND 4       W3326000
SIGT56   DC    C'GN'               TEST VALUE FOR COLUMNS 5 AND 6       W3328000
SIGT78   DC    C'ON'               TEST VALUE FOR COLUMNS 7 AND 8       W3330000
         TITLE 'RTPLOAD (CARD CODE TO EBCDIC CONVERSION SUBROUTINE)'    W3332000
*********************************************************************** W3334000
*                                                                     * W3336000
* TITLE - $XPRESS (CONVERT 12 BIT CARD CODE TO EBCIDC)                * W3338000
*                                                                     * W3340000
* FUNCTION/PURPOSE -                                                  * W3342000
*                                                                     * W3344000
* TO  CONVERT 12 BIT 'IBM' CARD CODE TO EBCDIC 8 BIT CHARACTERS       * W3346000
*                                                                     * W3348000
* CALLING SEQUENCE -                                                  * W3350000
*                                                                     * W3352000
*                             $TSL  $XPRESS  LINKAGE                  * W3354000
*                             ....           RETURN                   * W3356000
*                                                                     * W3358000
*                   WHERE--AC CONTAINS CARD CODE IN BITS 0-11 ON      * W3360000
*                          ENTRY TO $XPRESS                           * W3362000
*                                                                     * W3364000
*                        --AC CONTAINS EBCDIC CHARACTER IN BITS 7-15  * W3366000
*                          ON RETURN FROM $XPRESS                     * W3368000
*                                                                     * W3370000
* NOTE---           EXT, WB AND WC ARE DESTROYED BY $XPRESS           * W3372000
*                                                                     * W3374000
*********************************************************************** W3376000
SXPRESS  DC    AL2(*-*)            ENTRY VIA $TSL SXPRESS               W3378000
         $BZ   XPRSBLNK            BRANCH IF CARD CODE BLANK            W3380000
         $SRA  4                   RIGHT JUSTIFY DATA                   W3382000
         $SRT  2                   COLUMNS 8,9 TO EXT                   W3384000
         $STO  XPRSTEMP            SAVE REST TEMPORARILY                W3386000
         $SRA  6                   DROP COLUMNS 2-7                     W3388000
         $SLT  2                   RESTORE COLUMNS 8,9                  W3390000
         $STO  WB,,L               TO REGISTER WB                       W3392000
         $LD   XPRSTEMP            GET RESIDUAL COLUMNS                 W3394000
         $AND  XPRSMASK            LEAVES COLUMNS 2-7                   W3396000
         $AXT  16,WC               START COUNTER                        W3398000
         $SLCA 0,WC                SET WC WITH ZONE                     W3400000
         $LD   XPRSZNTB,WB,L       GET ZONE BIT CONBINATION             W3402000
         $MDX  0,WC                TEST FOR NUMERIC PUNCHES             W3404000
         $SRA  8                   YES. POSITION ZONE WITH NUMERIC CODE W3406000
         $OR   XPRSNUMT,WC,L       ADD NUMERIC, IF ANY                  W3408000
         $MDX  -5,WC               TEST FOR POSSIBLE SPECIAL CASE       W3410000
         $B    XPRSPECL            BRANCH FOR FURTHER INVESTIGATION     W3412000
         $AND  XPRSCLHF            CLEAR HIGH ORDER BYTE                W3414000
         $B    SXPRESS,,I          RETURN TO CALLER                     W3416000
XPRSPECL $EOR  XPRSXV6A            TEST FOR CONVERSION VALUE='6A'       W3418000
         $SKPN                     SKIP AND RESTORE VALUE IF NOT        W3420000
         $LD   XPRSCDE0            GET CODED 'E0'                       W3422000
         $EOR  XPRSXV6A            RESTORE OR CONVERT                   W3424000
         $B    SXPRESS,,I          RETURN TO CALLER                     W3426000
XPRSBLNK $LD   XPRSBLKC            GET EBCDIC BLANK                     W3428000
         $B    SXPRESS,,I          RETURN TO CALLER                     W3430000
XPRSCLHF DC    AL2(X'00FF')        CLEAR LEFT HALF                      W3432000
XPRSBLKC DC    AL2(X'0040')        EBCDIC BLANK                         W3434000
XPRSXV6A DC    X'006A'             TEST VALUE FOR POSSIBLE 'E0'         W3436000
XPRSCDE0 DC    X'008A'             CODED VALUE FOR 'E0'                 W3438000
XPRSTEMP DC    AL2(*-*)            TEMPORARY STORAGE                    W3440000
XPRSMASK DC    X'003F'             MASK WORD                            W3442000
         EJECT                                                          W3444000
*********************************************************************** W3446000
*              $XPRESS CONVERSION TABLE                               * W3448000
*********************************************************************** W3450000
XPRSZNTB DC    X'F040'             00= NO PUNCHES                       W3452000
         DC    X'30F9'             01 = 9                               W3454000
         DC    X'78F8'             02 = 8                               W3456000
         DC    X'3838'             03 = 8-9                             W3458000
         DC    X'00F1'             04 = 1                               W3460000
         DC    X'0031'             05 = 1-9                             W3462000
         DC    X'0079'             06 = 1-8                             W3464000
         DC    X'0039'             07 = 1-8-9                           W3466000
         DC    X'E0F0'             08 = 0                               W3468000
         DC    X'20E9'             09 = 0-9                             W3470000
         DC    X'68E8'             0A = 0-8            * 0-8-2 = E0     W3472000
         DC    X'2828'             0B = 0-8-9                           W3474000
         DC    X'6161'             0C = 0-1                             W3476000
         DC    X'2121'             0D = 0-1-9                           W3478000
         DC    X'6969'             0E = 0-1-8                           W3480000
         DC    X'2929'             0F   0-1-8-9                         W3482000
         DC    X'D060'             10 = 11             *                W3484000
         DC    X'10D9'             11   11-9                            W3486000
         DC    X'58D8'             12 = 11-8                            W3488000
         DC    X'1818'             13 = 11-8-9                          W3490000
         DC    X'D1D1'             14 = 11-1                            W3492000
         DC    X'0011'             15 = 11-1-9                          W3494000
         DC    X'0059'             16 = 11-1-8                          W3496000
         DC    X'0019'             17 = 11-1-8-9                        W3498000
         DC    X'A0D0'             18 = 11-0           *                W3500000
         DC    X'60A9'             19 = 11-0-9                          W3502000
         DC    X'A8A8'             1A = 11-0-8                          W3504000
         DC    X'E868'             1B = 11-0-8-9                        W3506000
         DC    X'00A1'             1C = 11-0-1                          W3508000
         DC    X'00E1'             1D = 11-0-1-9       *                W3510000
         DC    X'00A0'             1E = 11-0-1-8                        W3512000
         DC    X'0020'             1F = 11-0-1-8-9                      W3514000
         DC    X'C050'             20 = 12                              W3516000
         DC    X'00C9'             21 = 12-9           * REAL 00        W3518000
         DC    X'48C8'             22 = 12-8                            W3520000
         DC    X'0808'             23 = 12-8-9                          W3522000
         DC    X'00C1'             24 = 12-1                            W3524000
         DC    X'0001'             25 = 12-1-9                          W3526000
         DC    X'0049'             26 = 12-1-8                          W3528000
         DC    X'0009'             27 = 12-1-8-9                        W3530000
         DC    X'80C0'             28 = 12-0                            W3532000
         DC    X'4089'             29 = 12-0-9                          W3534000
         DC    X'8888'             2A = 12-0-8                          W3536000
         DC    X'C848'             2B = 12-0-8-9                        W3538000
         DC    X'0081'             2C = 12-0-1                          W3540000
         DC    X'0041'             2D = 12-0-1-9                        W3542000
         DC    X'0080'             2E = 12-0-1-8                        W3544000
         DC    X'0000'             2F = 12-0-1-8-9     * VALID 00       W3546000
         DC    X'906A'             30 = 12-11                           W3548000
         DC    X'5099'             31 = 12-11-9                         W3550000
         DC    X'9898'             32 = 12-11-8                         W3552000
         DC    X'D858'             33 = 12-11-8-9                       W3554000
         DC    X'0091'             34 = 12-11-1                         W3556000
         DC    X'0051'             35 = 12-11-1-9                       W3558000
         DC    X'0090'             36 = 12-11-1-8                       W3560000
         DC    X'0010'             37 = 12-11-1-8-9                     W3562000
         DC    X'B070'             38 = 12-11-0                         W3564000
         DC    X'70B9'             39 = 12-11-0-9                       W3566000
         DC    X'B8B8'             3A = 12-11-0-8                       W3568000
         DC    X'F878'             3B = 12-11-0-8-9                     W3570000
         DC    X'00B1'             3C = 12-11-0-1                       W3572000
         DC    X'0071'             3D = 12-11-0-1-9                     W3574000
         DC    X'00B0'             3E = 12-11-0-1-8                     W3576000
         DC    X'0030'             3F = 12-11-0-1-8-9                   W3578000
*********************************************************************** W3580000
*              $XPRESS CONVERSION TABLE                               * W3582000
*********************************************************************** W3584000
XPRSNUMT DC    X'0000'             NO NUMERIC                           W3586000
         DC    X'0007'             7 PUNCH                              W3588000
         DC    X'0006'             6 PUNCH                              W3590000
         DC    X'0005'             5 PUNCH                              W3592000
         DC    X'0004'             4 PUNCH                              W3594000
         DC    X'0003'             3 PUNCH                              W3596000
         DC    X'0002'             2 PUNCH                              W3598000
         TITLE 'RTPLOAD (/*SIGNON CARD STORAGE)'                        W3600000
UPPER    EQU   START+2*(1024-43)                                        W3602000
         ORG   UPPER               ORIGIN SIGN-ON IN FAR REACHES        W3604000
*                                  OF UPPER CORE TO SIDESTEP            W3606000
*                                  RTP1130 TP BUFFER BUILDING           W3608000
*                                  PROCESS                              W3610000
RTPETSOR DC    AL1(0),C'0A/*SIGNON',7C' ',C'REMOTE',C'&RMTID',59C' '    W3612000
         END   RTPLINIT                                                 W3614000
