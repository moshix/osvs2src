         TITLE 'HMBLKCTL -- CONTROL MODULE FOR HMBLIST -- VERSION 1.0'  00010000
         LCLA  &T,&SPN                                                  00020000
&SPN     SETA  33                  CHANGE SUBPOOL NUMBER TO 33          00030000
         AGO   .@001                                                    00040000
         LCLA  &T,&SPN                                            0002  00050000
.@001    ANOP                                                     0002  00060000
HMBLKCTL CSECT ,                                                  0002  00070000
         BC    15,14(0,@F)                                              00080000
         DC    C'ÊHMBLKCTL'                                       0002  00090000
         ST    @E,12(0,@D)                                        0002  00100000
         STM   @0,@C,20(@D)                                       0002  00110000
         BALR  @B,0                                               0002  00120000
@PSTART  DS    0H                                                 0002  00130000
         USING @PSTART+00000,@B                                   0002  00140000
         LA    @7,4095(0,@B)                                      0002  00150000
         USING @PSTART+04095,@7                                   0002  00160000
         LA    @2,4095(0,@7)                                      0002  00170000
         USING @PSTART+08190,@2                                   0002  00180000
         L     @0,@SIZ001                                         0002  00190000
         GETMAIN  R,LV=(0)                                        0002  00200000
         LR    @C,@1                                              0002  00210000
         USING @DATD+00000,@C                                     0002  00220000
         LM    @0,@1,20(@D)                                       0002  00230000
         XC    @TEMPS(@L),@TEMPS                                  0002  00240000
         ST    @D,@SAV001+4                                       0002  00250000
         LA    @F,@SAV001                                         0002  00260000
         ST    @F,8(0,@D)                                         0002  00270000
         LR    @D,@F                                              0002  00280000
         MVC   INDCB(INLEN),INPUT      SET UP REENTRANT SYSIN           00290000
         MVC   OUTDCB(OUTLEN),OUTPUT   SET UP REENTRANT SYSPRINT        00300000
         MVC   PODCB(PDSLEN),PDSDCB    SET UP REENTRANT SYSLIB          00310000
         MVC   READIR(RLEN),READ1      SET UP REENTRANT READ            00320000
         MVC   OPEN1(8),OP1            SET UP REENTRANT OPEN            00330000
         MVC   OPEN2(4),OP2            SET UP REENTRANT OPEN            00340000
         MVC   CLOSR1(8),CL1           SET UP REENTRANT CLOSE           00350000
         MVC   CLOSR2(4),CL2           SET UP REENTRANT CLOSE           00360000
         DS    0H                                                       00370000
*   LOW=12288;                          /* SET LOW GM REQ     YM03244 * 00380000
         MVC   HIGHLOW(4),@D1                                     0063  00390000
*   HIGH=9437184;                       /* SET HIGH GM REQ    YM03244 * 00400000
         MVC   HIGHLOW+4(4),@D2                                   0064  00410000
*   NLOW=49152;                         /* SET LOW LPA REQ    YM03244 * 00420000
         MVC   HILOLPA(4),@D3                                     0065  00430000
*   NHIGH=9437184;                      /* SET HIGH LPA REQ   YM03244 * 00440000
         MVC   HILOLPA+4(4),@D2                                   0066  00450000
*   BCARD(1:121)=' ';                   /* BLANK OUT CARD BUFFER      * 00460000
         MVI   BCARD,C' '                                         0067  00470000
         MVC   BCARD+1(120),BCARD                                 0067  00480000
*   ECARD(1:121)=' ';                   /* BLANK OUT ERR.MARKER BUFFER* 00490000
         MVI   ECARD,C' '                                         0068  00500000
         MVC   ECARD+1(120),ECARD                                 0068  00510000
*   TBLANK='0';                         /* SKIP TWO LINES             * 00520000
         MVI   BLINE,C'0'                                         0069  00530000
*   /* INITIALIZE MODULE SUMMARY HEADING                              * 00540000
*   MODULE='*****  M O D U L E   S U M M A R Y  *****';                 00550000
         MVC   MODULE(41),@C3                                     0070  00560000
*   NAME='MEMBER NAME';                 /* INIT ENTRY HEADING         * 00570000
         MVC   NAME(11),@C4                                       0071  00580000
         MVI   NAME+11,C' '                                       0071  00590000
*   MAIN='MAIN ENTRY POINT';            /* INITIALIZE MAIN HEADING    * 00600000
         MVC   MAIN(16),@C5                                       0072  00610000
         MVI   MAIN+16,C' '                                       0072  00620000
*   ALIASES='** ALIASES **';            /* INIT ALIAS HEADING         * 00630000
         MVC   ALIASES(13),@C6                                    0073  00640000
*   SECOND(1:16)='SECONDARY ENTRY ';    /* INITIALIZE SECONDARY         00650000
*                                         ENTRY POINT HEADING         * 00660000
         MVC   SECOND(16),@C7                                     0074  00670000
*   /* INITIALIZE SECONDARY ENTRY POINT HEADING                       * 00680000
*   SECOND(17:56)='POINT ADDRESSES ASSOCIATED WITH ALIASES:';           00690000
         MVC   SECOND+16(40),@C8                                  0075  00700000
*   MODSSI='MODULE SSI:';               /* MODULE SSI HEADING         * 00710000
         MVC   MODSSI(11),@C9                                     0076  00720000
*   /* INITIALIZE LINKAGE EDITOR ATTRIBUTE HEADING                    * 00730000
*   LINKAGE='LINKAGE EDITOR ATTRIBUTES OF MODULE:';                     00740000
         MVC   LINKAGE(36),@C10                                   0077  00750000
*   /****************************************************************** 00760000
*   /* THE FOLLOWING CODE INITIALIZES THE SIXTEEN BITS WHICH          * 00770000
*   /*DETERMINES THE LOAD MODULE ATTRIBUTE. EACH BIT HAS AN ON AND    * 00780000
*   /*OFF ATTRIBUTE                                                   * 00790000
*   /****************************************************************** 00800000
*   ATON(1)='RENT';                     /* BIT 0 IF ON                * 00810000
         MVC   ATNAME(4),@C11                                     0078  00820000
         MVI   ATNAME+4,C' '                                      0078  00830000
         MVC   ATNAME+5(4),ATNAME+4                               0078  00840000
*   ATOFF(1)='NOT-RENT';                /* BIT 0 IF OFF               * 00850000
         MVC   ATNAME+72(8),@C12                                  0079  00860000
         MVI   ATNAME+80,C' '                                     0079  00870000
*   ATON(2)='REUS';                     /* BIT 1 IF ON                * 00880000
         MVC   ATNAME+9(4),@C13                                   0080  00890000
         MVI   ATNAME+13,C' '                                     0080  00900000
         MVC   ATNAME+14(4),ATNAME+13                             0080  00910000
*   ATOFF(2)='NOT-REUS';                /* BIT 1 IF OFF               * 00920000
         MVC   ATNAME+81(8),@C14                                  0081  00930000
         MVI   ATNAME+89,C' '                                     0081  00940000
*   ATON(3)='OVLY';                     /* BIT 2 IF ON                * 00950000
         MVC   ATNAME+18(4),@C15                                  0082  00960000
         MVI   ATNAME+22,C' '                                     0082  00970000
         MVC   ATNAME+23(4),ATNAME+22                             0082  00980000
*   ATOFF(3)='NOT-OVLY';                /* BIT 2 IF OFF               * 00990000
         MVC   ATNAME+90(8),@C16                                  0083  01000000
         MVI   ATNAME+98,C' '                                     0083  01010000
*   ATON(4)='TEST';                     /* BIT 3 IF ON                * 01020000
         MVC   ATNAME+27(4),@C17                                  0084  01030000
         MVI   ATNAME+31,C' '                                     0084  01040000
         MVC   ATNAME+32(4),ATNAME+31                             0084  01050000
*   ATOFF(4)='NOT-TEST';                /* BIT 3 IF OFF               * 01060000
         MVC   ATNAME+99(8),@C18                                  0085  01070000
         MVI   ATNAME+107,C' '                                    0085  01080000
*   ATON(5)='ONLY-LOAD';                /* BIT 4 IF ON                * 01090000
         MVC   ATNAME+36(9),@C19                                  0086  01100000
*   ATOFF(5)='NOT-OL';                  /* BIT 4 IF OFF               * 01110000
         MVC   ATNAME+108(6),@C20                                 0087  01120000
         MVI   ATNAME+114,C' '                                    0087  01130000
         MVC   ATNAME+115(2),ATNAME+114                           0087  01140000
*   ATON(6)='SCTR';                     /* BIT 5 IF ON                * 01150000
         MVC   ATNAME+45(4),@C21                                  0088  01160000
         MVI   ATNAME+49,C' '                                     0088  01170000
         MVC   ATNAME+50(4),ATNAME+49                             0088  01180000
*   ATOFF(6)='BLOCK';                   /* BIT 5 IF OFF               * 01190000
         MVC   ATNAME+117(5),@C22                                 0089  01200000
         MVI   ATNAME+122,C' '                                    0089  01210000
         MVC   ATNAME+123(3),ATNAME+122                           0089  01220000
*   ATON(7)='EXEC';                     /* BIT 6 IF ON                * 01230000
         MVC   ATNAME+54(4),@C23                                  0090  01240000
         MVI   ATNAME+58,C' '                                     0090  01250000
         MVC   ATNAME+59(4),ATNAME+58                             0090  01260000
*   ATOFF(7)='NOT-EXEC';                /* BIT 6 IF OFF               * 01270000
         MVC   ATNAME+126(8),@C24                                 0091  01280000
         MVI   ATNAME+134,C' '                                    0091  01290000
*   ATON(8)='1-TXT';                    /* BIT 7 IF ON                * 01300000
         MVC   ATNAME+63(5),@C25                                  0092  01310000
         MVI   ATNAME+68,C' '                                     0092  01320000
         MVC   ATNAME+69(3),ATNAME+68                             0092  01330000
*   ATOFF(8)='MULTI-RCD';               /* BIT 7 IF OFF               * 01340000
         MVC   ATNAME+135(9),@C26                                 0093  01350000
*   SECATON(1)='NOT-DC';                /* BIT 8 IF ON                * 01360000
         MVC   ATNAME+144(6),@C27                                 0094  01370000
         MVI   ATNAME+150,C' '                                    0094  01380000
         MVC   ATNAME+151(2),ATNAME+150                           0094  01390000
*   SECATOFF(1)='DC';                   /* BIT 8 IF OFF               * 01400000
         MVC   ATNAME+216(2),@C28                                 0095  01410000
         MVI   ATNAME+218,C' '                                    0095  01420000
         MVC   ATNAME+219(6),ATNAME+218                           0095  01430000
*   SECATON(2)='ZERO-ORG';              /* BIT 9 IF ON                * 01440000
         MVC   ATNAME+153(8),@C29                                 0096  01450000
         MVI   ATNAME+161,C' '                                    0096  01460000
*   SECATOFF(2)='NOT-ZERO';             /* BIT 9 IF OFF               * 01470000
         MVC   ATNAME+225(8),@C30                                 0097  01480000
         MVI   ATNAME+233,C' '                                    0097  01490000
*   SECATON(3)='EP-ZERO';               /* BIT 10 IF ON               * 01500000
         MVC   ATNAME+162(7),@C31                                 0098  01510000
         MVI   ATNAME+169,C' '                                    0098  01520000
         MVI   ATNAME+170,C' '                                    0098  01530000
*   SECATOFF(3)='EP > ZERO';            /* BIT 10 IF OFF              * 01540000
         MVC   ATNAME+234(9),@C32                                 0099  01550000
*   SECATON(4)='NO-RLD';                /* BIT 11 IF ON               * 01560000
         MVC   ATNAME+171(6),@C33                                 0100  01570000
         MVI   ATNAME+177,C' '                                    0100  01580000
         MVC   ATNAME+178(2),ATNAME+177                           0100  01590000
*   SECATOFF(4)='RLD';                  /* BIT 11 IF OFF              * 01600000
         MVC   ATNAME+243(3),@C34                                 0101  01610000
         MVI   ATNAME+246,C' '                                    0101  01620000
         MVC   ATNAME+247(5),ATNAME+246                           0101  01630000
*   SECATON(5)='NOT-EDIT';              /* BIT 12 IF ON               * 01640000
         MVC   ATNAME+180(8),@C35                                 0102  01650000
         MVI   ATNAME+188,C' '                                    0102  01660000
*   SECATOFF(5)='EDIT';                 /* BIT 12 IF OFF              * 01670000
         MVC   ATNAME+252(4),@C36                                 0103  01680000
         MVI   ATNAME+256,C' '                                    0103  01690000
         MVC   ATNAME+257(4),ATNAME+256                           0103  01700000
*   SECATON(6)='SYMS';                  /* BIT 13 IF ON               * 01710000
         MVC   ATNAME+189(4),@C37                                 0104  01720000
         MVI   ATNAME+193,C' '                                    0104  01730000
         MVC   ATNAME+194(4),ATNAME+193                           0104  01740000
*   SECATOFF(6)='NO-SYMS';              /* BIT 13 IF OFF              * 01750000
         MVC   ATNAME+261(7),@C38                                 0105  01760000
         MVI   ATNAME+268,C' '                                    0105  01770000
         MVI   ATNAME+269,C' '                                    0105  01780000
*   SECATON(7)='F-LEVEL';               /* BIT 14 IF ON               * 01790000
         MVC   ATNAME+198(7),@C39                                 0106  01800000
         MVI   ATNAME+205,C' '                                    0106  01810000
         MVI   ATNAME+206,C' '                                    0106  01820000
*   SECATOFF(7)='E-LEVEL';              /* BIT 14 IF OFF              * 01830000
         MVC   ATNAME+270(7),@C40                                 0107  01840000
         MVI   ATNAME+277,C' '                                    0107  01850000
         MVI   ATNAME+278,C' '                                    0107  01860000
*   SECATON(8)='REFR';                  /* BIT 15 IF ON               * 01870000
         MVC   ATNAME+207(4),@C41                                 0108  01880000
         MVI   ATNAME+211,C' '                                    0108  01890000
         MVC   ATNAME+212(4),ATNAME+211                           0108  01900000
*   SECATOFF(8)='NOT-REFR';             /* BIT 15 IF OFF              * 01910000
         MVC   ATNAME+279(8),@C42                                 0109  01920000
         MVI   ATNAME+287,C' '                                    0109  01930000
*   SYSLIB='SYSLIB  ';                  /* INITIALIZE SYSLIB          * 01940000
         MVC   SYSLIB(8),@C43                                     0110  01950000
*   ENDNAME='FFFFFFFFFFFFFFFF'X;        /* ALL F'S MEAN END OF DIRECT.* 01960000
         MVC   ENDNAME(8),@X44                                    0111  01970000
*   HEXCHAR='0123456789ABCDEF';         /* INITIALIZE CONVERSION        01980000
*                                         CHARACTERS                  * 01990000
         MVC   HEXCHAR(16),@C45                                   0112  02000000
*   ZONEOFF='0F0F0F0F0F0F0F0F'X;        /* INITIALIZE ZONEOFF FIELD   * 02010000
         MVC   ZONEOFF(8),@X46                                    0113  02020000
*   LENGTH=14;                          /* LEN OF EACH BLDLIST ENTRY  * 02030000
         LA    @F,14                                              0114  02040000
         STH   @F,BLDLIST+2                                       0114  02050000
*   DIRORG='00000100'X;                 /* FIRST BLOCK ADDRESS        * 02060000
         MVC   DIRORG(4),@X47                                     0115  02070000
*   /****************************************************************** 02080000
*   /* OPEN SYSIN AND SYSPRINT DATA CONTROL BLOCKS                    * 02090000
*   /****************************************************************** 02100000
*   GEN;                                                                02110000
   LA R5,INDCB                         GET ADDR OF SYSIN DCB            02120000
   USING IHADCB,R5                     SET REG AS DSECT BASE            02130000
   OPEN (INDCB,,OUTDCB,(OUTPUT)),MF=(E,OPEN1)                           02140000
   TM DCBOFLGS,X'10'                   TEST IF SYSIN OPEN SUCCESSFUL    02150000
   BZ AAB0                             UNSUCCESSFUL OPEN                02160000
   LA R5,OUTDCB                        GET ADDR OF SYSOUT DCB           02170000
   USING IHADCB,R5                     SET REG AS DSECT BASE            02180000
   TM DCBOFLGS,X'10'                   TEST IF SYSOUT OPEN SUCCESSFUL   02190000
   BZ ENDITB                           UNSUCCESSFUL OPEN                02200000
   BC 15,SETPLIST                      SUCCESSFUL OPEN           XM2962 02210000
         DS    0H                                                       02220000
* AAB0: /* BRANCH HERE IF SYSIN NOT OPENED                            * 02230000
*   GEN(  XC    PARMLIST(69),PARMLIST); /* ZERO OUT PARMLIST          * 02240000
AAB0       XC    PARMLIST(69),PARMLIST                                  02250000
         DS    0H                                                       02260000
*   DCBOUT=ADDR(OUTDCB);                /* STORE DCB ADDR IN PARM     * 02270000
         LA    @F,OUTDCB                                          0118  02280000
         ST    @F,PARMLIST+4                                      0118  02290000
*   ERRORS=ERRORS|'0020'X;              /* DDNAME COULD NOT BE        * 02300000
         OC    PARMLIST+32(2),@X48                                0119  02310000
*                                       /* OPENED ERROR               * 02320000
*   GO TO ENDITA;                       /* GO PRINT ERROR MESSAGE     * 02330000
         BC    15,ENDITA                                          0120  02340000
* SETPLIST:                             /*                     XM2962 * 02350000
*   NFLGS= '00000000'X;                 /* CLEAR RET CODE FLAGS XM2962* 02360000
SETPLIST MVC   PARMLIST+68(4),@X49                                0121  02370000
* AAB1:                                                                 02380000
*   CONTINUE='0'B;                      /* TURN OF CONTINUE INDICATOR * 02390000
AAB1     NI    CONTINUE,B'01111111'                               0122  02400000
*   GEN(  XC    PARMLIST(68),PARMLIST); /* ZERO OUT PARMLIST   XM2962 * 02410000
           XC    PARMLIST(68),PARMLIST                                  02420000
         DS    0H                                                       02430000
*   DCBIN=ADDR(PODCB);                  /* STORE DCB ADDR IN PARMLIST * 02440000
         LA    @F,PODCB                                           0124  02450000
         ST    @F,PARMLIST                                        0124  02460000
*   DCBOUT=ADDR(OUTDCB);                /* STORE DCB ADDR IN PARMLIST * 02470000
         LA    @F,OUTDCB                                          0125  02480000
         ST    @F,PARMLIST+4                                      0125  02490000
*   TITLINE=ADDR(BLINE);                /* ADDRESS OF TITLE LINE      * 02500000
         LA    @F,BLINE                                           0126  02510000
         ST    @F,PARMLIST+8                                      0126  02520000
*   SWITCHES='0000'X;                   /* INITIALIZE SWITCHES TO OFF * 02530000
         MVC   SWITCHES(2),@X47                                   0127  02540000
*   MEMNAME=' ';                        /* BLANK OUT MEMBER NAME      * 02550000
         MVI   PARMLIST+36,C' '                                   0128  02560000
         MVC   PARMLIST+37(7),PARMLIST+36                         0128  02570000
*   BLINE(1:121)=' ';                   /* BLANK OUT TITLE BUFFER     * 02580000
         MVI   BLINE,C' '                                         0129  02590000
         MVC   BLINE+1(120),BLINE                                 0129  02600000
*   LISTCNT=1;                          /* SET BLDLIST PTR TO ONE     * 02610000
         LA    @F,1                                               0130  02620000
         STH   @F,LISTCNT                                         0130  02630000
*   ALCNT=1;                            /* SET ALIASLST PTR TO ONE    * 02640000
         STH   @F,ALCNT                                           0131  02650000
*   APFDATA='NONE';                     /* INITIALIZE APF TO NONE     * 02660000
         MVC   APFDATA(4),@C51                                    0132  02670000
         MVI   APFDATA+4,C' '                                     0132  02680000
         MVC   APFDATA+5(3),APFDATA+4                             0132  02690000
*   BLANK1(1:256)=' ';                  /* BLANK OUT ALIASLST         * 02700000
         MVI   BLNKALAS,C' '                                      0133  02710000
         MVC   BLNKALAS+1(255),BLNKALAS                           0133  02720000
*   BLANK2(1:32)=' ';                   /* BLANK OUT ALIASLST         * 02730000
         MVI   BLNKALAS+256,C' '                                  0134  02740000
         MVC   BLNKALAS+257(31),BLNKALAS+256                      0134  02750000
* AAC1:                                                                 02760000
*   GEN(  GET   INDCB,CARD);            /* READ CONTROL CARD          * 02770000
AAC1       GET   INDCB,CARD                                             02780000
         DS    0H                                                       02790000
*   COL=2;                              /* SET SCAN TO COLUMN 2       * 02800000
         LA    @9,2                                               0136  02810000
*   /* CHECK TO SEE IF CONTINUATION WAS INDICATED                     * 02820000
*   IF CONTINUE^='1'B                   /* SHOULD THIS BE CONTINUATION* 02830000
*      THEN DO;                         /* NOT CONTINUATION           * 02840000
         TM    CONTINUE,B'10000000'                               0137  02850000
         BC    01,@9FF                                            0137  02860000
* AAG0:                                                                 02870000
*           CBLANK='1';                 /* SKIP TO NEW PAGE           * 02880000
AAG0     MVI   BCARD,C'1'                                         0139  02890000
*           GEN(PUT   OUTDCB,BCARD);    /* PRINT CONTROL CARD         * 02900000
         PUT   OUTDCB,BCARD                                             02910000
         DS    0H                                                       02920000
*           OPTNMAP='0'B;               /* SET BIT MAP TO ZERO        * 02930000
         MVI   OPTNMAP,B'00000000'                                0141  02940000
         XC    OPTNMAP+1(3),OPTNMAP+1                             0141  02950000
*           ERRORS='0'B;                /* ZERO OUT ERROR MAP         * 02960000
         MVI   PARMLIST+32,B'00000000'                            0142  02970000
         XC    PARMLIST+33(3),PARMLIST+33                         0142  02980000
*           /* LOOK FOR FIRST COLUMN OPERATION                        * 02990000
* AAH1:                                                                 03000000
*           IF CARD(COL-1)=' '          /* IS COLUMN ONE BLANK        * 03010000
*              & CARD(COL)^=' '         /* IS COLUMN TWO NOT A BLANK  * 03020000
*              THEN DO;                 /* PROCESS CARD               * 03030000
AAH1     LH    @1,@D4                                             0143  03040000
         AR    @1,@9                                              0143  03050000
         LA    @A,BCARD(@1)                                       0143  03060000
         CLI   0(@A),C' '                                         0143  03070000
         BC    07,@9FE                                            0143  03080000
         LR    @3,@9                                              0143  03090000
         LA    @A,BCARD(@3)                                       0143  03100000
         CLI   0(@A),C' '                                         0143  03110000
         BC    08,@9FD                                            0143  03120000
*                   /* LOOK FOR A LISTLOAD OPERATION ON CARD          * 03130000
*                   IF CARD(COL:COL+8)='LISTLOAD '/* LISTLOAD CARD    * 03140000
*                      THEN DO;         /* INDICATE LISTLOAD          * 03150000
         CLC   0(9,@A),@C53                                       0145  03160000
         BC    07,@9FC                                            0145  03170000
*                           LISTLOAD='1'B;/* TURN ON BIT IN OPTNMAP   * 03180000
         OI    OPTNMAP,B'10000000'                                0147  03190000
*                           COL=COL+9;  /* POINT TO NEXT VALID COLUMN * 03200000
         AH    @9,@D5                                             0148  03210000
*                           GOTO ABB1;  /* GOTO OPERAND PROCESSOR     * 03220000
         BC    15,ABB1                                            0149  03230000
*                           END;                                        03240000
*                   /* LOOK FOR LISTOBJ OPERATION                     * 03250000
*                   IF CARD(COL:COL+7)='LISTOBJ '/* IS IT LISTOBJ     * 03260000
*                      THEN DO;         /* INDICATE LISTOBJ OPERATION * 03270000
@9FC     LR    @1,@9                                              0151  03280000
         LA    @A,BCARD(@1)                                       0151  03290000
         CLC   0(8,@A),@C54                                       0151  03300000
         BC    07,@9FB                                            0151  03310000
*                           LISTOBJ='1'B;/* TURN ON BIT IN OPTNMAP    * 03320000
         OI    OPTNMAP,B'01000000'                                0153  03330000
*                           COL=COL+8;  /* POINT TO NEXT VALID COLUMN * 03340000
         AH    @9,@D6                                             0154  03350000
*                           GOTO ABB1;  /* GOTO OPERAND PROCESSOR     * 03360000
         BC    15,ABB1                                            0155  03370000
*                           END;                                        03380000
*                   /* LOOK FOR LISTIDR OPERATION                     * 03390000
*                   IF CARD(COL:COL+7)='LISTIDR '/* LISTIDR OPERATION?* 03400000
*                      THEN DO;         /* INDICATE LISTIDR OPERATION * 03410000
@9FB     LR    @1,@9                                              0157  03420000
         LA    @A,BCARD(@1)                                       0157  03430000
         CLC   0(8,@A),@C55                                       0157  03440000
         BC    07,@9FA                                            0157  03450000
*                           LISTIDR='1'B;/* TURN ON BIT IN OPTNMAP    * 03460000
         OI    OPTNMAP,B'00100000'                                0159  03470000
*                           COL=COL+8;  /* POINT TO NEXT VALID COLUMN * 03480000
         AH    @9,@D6                                             0160  03490000
*                           NUMO='00'X; /* INITIALIZE LINE CNT XM3799 * 03500000
         MVI   PARMLIST+76,X'00'                                  0161  03510000
*                           GOTO ABB1;  /* GOTO OPERAND PROCESSOR     * 03520000
         BC    15,ABB1                                            0162  03530000
*                           END;                                        03540000
*                   /* CHECK TO SEE IF IT IS A LINK PACK AREA MAP IS    03550000
*                     WANTED                                          * 03560000
*                   IF CARD(COL:COL+7)='LISTLPA '/* LISTLPA OPERATION?* 03570000
*                      THEN DO;         /* PROCESS LISTLPA            * 03580000
@9FA     LR    @1,@9                                              0164  03590000
         LA    @A,BCARD(@1)                                       0164  03600000
         CLC   0(8,@A),@C56                                       0164  03610000
         BC    07,@9F9                                            0164  03620000
*                           LISTLPA='1'B;/* INDICATE LPA OPTION       * 03630000
         OI    OPTNMAP,B'00010000'                                0166  03640000
*                           GOTO GETMAIN;/* GET WORKING STORAGE FOR LPA 03650000
*                                          SORT                       * 03660000
         BC    15,GETMAIN                                         0167  03670000
* LPACALL:                                                              03680000
*                           R1=ADDR(PARMLIST);/* SET UP PARMLIST      * 03690000
LPACALL  LA    @1,PARMLIST                                        0168  03700000
*                           CALL HMBLKLPA;/* CALL LINK PACK AREA ROUT.* 03710000
         L     @F,@V1              ADDRESS OF HMBLKLPA            0169  03720000
         BALR  @E,@F                                              0169  03730000
*                           GEN;        /* ISSUE FREEMAIN FOR SP22    * 03740000
          FREEMAIN V,A=AREAGET,SP=22,MF=(E,SPFREE)                      03750000
         DS    0H                                                       03760000
*                           GOTO ERRCHK;/* CHECK FOR ANY ERRORS       * 03770000
         BC    15,ERRCHK                                          0171  03780000
*                           END;                                        03790000
*                      ELSE DO;         /* INDICATE INVALID CARD      * 03800000
@9F9     EQU   *                                                  0173  03810000
* AAJ4:                                                                 03820000
*                           ERRORS=ERRORS|'00000800'X;/* TURN ON BIT  * 03830000
AAJ4     OC    PARMLIST+32(4),@X57                                0174  03840000
* ERRCHK:                                                               03850000
*                           R1=ADDR(PARMLIST);/* SET UP PARAMETER LIST* 03860000
ERRCHK   LA    @1,PARMLIST                                        0175  03870000
*                           CALL HMBLKERR;/* PROCESS ERROR MESSAGES   * 03880000
         L     @F,@V2              ADDRESS OF HMBLKERR            0176  03890000
         BALR  @E,@F                                              0176  03900000
*                           GOTO AAC1;  /* READ ANOTHER CONTROL CARD  * 03910000
         BC    15,AAC1                                            0177  03920000
*                           END;                                        03930000
*                   END;                                                03940000
*              ELSE DO;                 /* LOOK FOR FIRST STARTING      03950000
*                                         COLUMN                      * 03960000
@9FD     EQU   *                                                  0180  03970000
*                   COL=COL+1;          /* BUMP COL BY ONE            * 03980000
@9FE     AH    @9,@D7                                             0181  03990000
*                   /*CHECK TO SEE IF IT CAN BE A VALID CARD          * 04000000
*                   IF COL>64           /* IS COL PAST WHER VALID       04010000
*                                         OPERATION CAN START?        * 04020000
*                      THEN GOTO AAJ4;  /* INDICATE INVALID CARD      * 04030000
         CH    @9,@D8                                             0182  04040000
         BC    02,AAJ4                                            0183  04050000
*                      ELSE GOTO AAH1;  /* REPROCESS CARD             * 04060000
         BC    15,AAH1                                            0184  04070000
*                   END;                                                04080000
*           END;                                                        04090000
@9F7     EQU   *                                                  0186  04100000
*   /* CHECK TO SEE IF CONTINUATION BEGINS IN VALID COLUMN            * 04110000
*   IF CARD(1)^=' '                     /* IS THERE A PUNCH IN ONE?   * 04120000
*      | CARD(2:16)='               '   /* ARE COLUMNS 2 TO 16 BLANK? * 04130000
*      THEN DO;                         /* ONE OR BOTH CONDITIONS TRUE* 04140000
@9FF     CLI   BCARD+1,C' '                                       0187  04150000
         BC    07,@9F6                                            0187  04160000
         CLC   BCARD+2(15),@C58                                   0187  04170000
         BC    07,@9F5                                            0187  04180000
*           CBLANK=' ';                 /* SKIP ONE LINE              * 04190000
@9F6     MVI   BCARD,C' '                                         0189  04200000
*           GEN(PUT   OUTDCB,BCARD);    /* PRINT OUT A CARD           * 04210000
         PUT   OUTDCB,BCARD                                             04220000
         DS    0H                                                       04230000
*           CONTINUE='0'B;              /* TURN OFF CONTINUATION BIT  * 04240000
         NI    CONTINUE,B'01111111'                               0191  04250000
*           ERRORS=ERRORS|'00001000'X;  /* TURN ON ERROR BIT          * 04260000
         OC    PARMLIST+32(4),@X59                                0192  04270000
*           R1=ADDR(PARMLIST);          /* SAVE PARMLIST ADDR TO PASS * 04280000
         LA    @1,PARMLIST                                        0193  04290000
*           CALL HMBLKERR;              /* PROCESS ERROR MESSAGE      * 04300000
         L     @F,@V2              ADDRESS OF HMBLKERR            0194  04310000
         BALR  @E,@F                                              0194  04320000
*           GOTO AAG0;                  /*PRINT OUT BAD CARD          * 04330000
         BC    15,AAG0                                            0195  04340000
*           END;                                                        04350000
*   CBLANK=' ';                         /* SKIP ONE LINE              * 04360000
@9F5     MVI   BCARD,C' '                                         0197  04370000
*   GEN(  PUT   OUTDCB,BCARD);          /* PRINT CONTROL CARD         * 04380000
           PUT   OUTDCB,BCARD                                           04390000
         DS    0H                                                       04400000
*   /* CHECK TO SEE IF MEMBERS WERE CONTINUED                         * 04410000
*   IF MCONTIN='1'B                     /* IS THERE MEMBER OPTION       04420000
*                                         CONTINUATION?               * 04430000
*      THEN DO;                         /* MEMBERS WERE CONTINUED     * 04440000
         TM    OPTNMAP+1,B'00000100'                              0199  04450000
         BC    12,@9F4                                            0199  04460000
*           MCONTIN='0'B;               /* TURN OFF CONTINUE BIT      * 04470000
         NI    OPTNMAP+1,B'11111011'                              0201  04480000
* AAG3:                                                                 04490000
*           /* FIND WHERE MEMBERS WERE CONTINUED                      * 04500000
*           IF CARD(COL)=' '            /* DOES THE MEMBER START HERE * 04510000
*              THEN DO;                 /* NO MEMBER FOUND            * 04520000
AAG3     LR    @1,@9                                              0202  04530000
         LA    @A,BCARD(@1)                                       0202  04540000
         CLI   0(@A),C' '                                         0202  04550000
         BC    07,@9F3                                            0202  04560000
*                   COL=COL+1;          /* BUMP COL POINTER BY ONE    * 04570000
         AH    @9,@D7                                             0204  04580000
*                   GOTO AAG3;          /* REPROCESS MEMBER CHECK     * 04590000
         BC    15,AAG3                                            0205  04600000
*                   END;                                                04610000
*              ELSE GOTO AEC1;          /* PROCESS MEMBERS            * 04620000
*           END;                                                        04630000
@9F2     EQU   *                                                  0208  04640000
* ABB1:                                                                 04650000
*   /* SCAN FOR NON BLANK CHARACTER AND BEGIN TO PROCESS              * 04660000
*   IF CARD(COL)=' '                    /* IS COLUMN A BLANK?         * 04670000
*      THEN DO;                         /* YES, THEN CHECK FURTHER    * 04680000
@9F4     EQU   *                                                  0209  04690000
ABB1     LR    @1,@9                                              0209  04700000
         LA    @A,BCARD(@1)                                       0209  04710000
         CLI   0(@A),C' '                                         0209  04720000
         BC    07,@9F1                                            0209  04730000
*           COL=COL+1;                  /* BUMP POINTER TO NEXT COLUMN* 04740000
         AH    @9,@D7                                             0211  04750000
*           /* CHECK TO SEE IF CARD COLUMN IS PAST COLUMN 71          * 04760000
*           IF COL > 71                 /* IS CARD COLUMN GREATER THAN  04770000
*                                         COLUMN 71?                  * 04780000
*              THEN IF LISTLOAD='1'B |  /* IS IT LISTLOAD OPERATION?  * 04790000
         CH    @9,@D9                                             0212  04800000
         BC    12,@9F0                                            0212  04810000
*                      LISTIDR='1'B |   /* IS IT LISTIDR OPERATION?   * 04820000
*                      LISTOBJ='1'B     /* IS IT LISTOBJ OPERATION?   * 04830000
*                      THEN GOTO PROCESS;/* PROCESS CONTROL CARD      * 04840000
         TM    OPTNMAP,B'10000000'                                0213  04850000
         BC    01,@9EF                                            0213  04860000
         TM    OPTNMAP,B'00100000'                                0213  04870000
         BC    01,@9EE                                            0213  04880000
         TM    OPTNMAP,B'01000000'                                0213  04890000
         BC    03,PROCESS                                         0214  04900000
*                      ELSE GOTO ABA2;  /* SET UP ERROR MESSAGE       * 04910000
         BC    15,ABA2                                            0215  04920000
*              ELSE GOTO ABB1;          /* CHECK FOR NON-BLANK        * 04930000
*           END;                                                        04940000
@9EC     EQU   *                                                  0217  04950000
* ABC1:                                                                 04960000
*   /* CHECK TO SEE IF OPERAND IS MODLIB                              * 04970000
*   IF CARD(COL:COL+5)='MODLIB'         /* IS OPERAND MODLIB          * 04980000
*     THEN                              /* YES                        * 04990000
@9F1     EQU   *                                                  0218  05000000
ABC1     LR    @1,@9                                              0218  05010000
         LA    @A,BCARD(@1)                                       0218  05020000
         CLC   0(6,@A),@C60                                       0218  05030000
         BC    07,@9EB                                            0218  05040000
*       DO;                                                             05050000
*         COL=COL+6;                    /* BUMP POINTER TO NEXT COL   * 05060000
         AH    @9,@D10                                            0220  05070000
*         MDLB='1'B;                    /* INDICATE MODLIB IN PARMLIST* 05080000
         OI    PARMLIST+20,B'00001000'                            0221  05090000
*         GO TO ACG4;                   /* CHECK FOR MORE OPT  XM3799 * 05100000
         BC    15,ACG4                                            0222  05110000
*       END;                                                            05120000
*     ELSE;                             /* NULL ELSE                  * 05130000
@9EB     EQU   *                                                  0224  05140000
*   /* CHECK TO SEE IF OPERAND IS TITLE                               * 05150000
*   IF CARD(COL:COL+5)='TITLE='         /* IS OPERAND TITLE OPERAND?  * 05160000
*      THEN DO;                         /* PROCESS TITLE OPERAND      * 05170000
@9EA     LR    @1,@9                                              0225  05180000
         LA    @A,BCARD(@1)                                       0225  05190000
         CLC   0(6,@A),@C61                                       0225  05200000
         BC    07,@9E9                                            0225  05210000
*           COL=COL+6;                  /* BUMP POINTER TO START OF     05220000
*                                         VALID TITLE OPERAND         * 05230000
         AH    @9,@D10                                            0227  05240000
*           TITLE='1'B;                 /* INDICATE TITLE IN OPTNMAP  * 05250000
         OI    OPTNMAP,B'00001000'                                0228  05260000
*           TTLINE=' ';                 /* BLANK OUT TITLE BUFFER     * 05270000
         MVI   BLINE+1,C' '                                       0229  05280000
         MVC   BLINE+2(119),BLINE+1                               0229  05290000
*           LPAREN='0'B;                /* TURN OFF LEFT PARENTHESIS    05300000
*                                         INDICATOR                   * 05310000
         NI    LPAREN,B'01111111'                                 0230  05320000
*           /* CHECK FOR LEFT PARENTHESIS                             * 05330000
*           IF CARD(COL)='('            /* IS COLUMN A LEFT PAREND?   * 05340000
*              THEN DO;                 /* PROCESS LEFT PAREND        * 05350000
         LR    @1,@9                                              0231  05360000
         LA    @A,BCARD(@1)                                       0231  05370000
         CLI   0(@A),C'('                                         0231  05380000
         BC    07,@9E8                                            0231  05390000
*                   COL=COL+1;          /* POINT TO NEXT COLUMN       * 05400000
         AH    @9,@D7                                             0233  05410000
*                   LPAREN='1'B;        /* INDICATE LEFT PAREND IN      05420000
*                                         OPTNMAP                     * 05430000
         OI    LPAREN,B'10000000'                                 0234  05440000
*                   END;                                                05450000
*           /* CHECK FOR BEGGINNING QUOTE                             * 05460000
*           IF CARD(COL)=''''           /* IS IT FIRST QUOTE IN TITLE*/ 05470000
*              THEN DO;                 /* PROCESS FIRST QUOTE        * 05480000
@9E8     LR    @1,@9                                              0236  05490000
         LA    @A,BCARD(@1)                                       0236  05500000
         CLI   0(@A),C''''                                        0236  05510000
         BC    07,@9E7                                            0236  05520000
*                   TCOL1=COL+1;        /* SAVE BEGINNING TITLE ADDR  * 05530000
         LA    @F,1                                               0238  05540000
         AR    @F,@9                                              0238  05550000
         STH   @F,TCOL1                                           0238  05560000
*                   GOTO ACB1;          /* PROCESS TITLE FURTHER      * 05570000
         BC    15,ACB1                                            0239  05580000
*                   END;                                                05590000
*              ELSE GOTO ABA2;          /* SET UP ERROR MESSAGE       * 05600000
*           END;                                                        05610000
@9E6     EQU   *                                                  0242  05620000
*   /* CHECK FOR MEMBER OPERAND                                       * 05630000
*   IF CARD(COL:COL+6)='MEMBER='        /* IS IT MEMBER OPERAND?      * 05640000
*      THEN DO;                         /* PROCESS MEMBER OPERAND     * 05650000
@9E9     LR    @1,@9                                              0243  05660000
         LA    @A,BCARD(@1)                                       0243  05670000
         CLC   0(7,@A),@C64                                       0243  05680000
         BC    07,@9E5                                            0243  05690000
*           COL=COL+7;                  /* BUMP POINTER TO BEGINNING    05700000
*                                         OF MEMBER OPERAND           * 05710000
         AH    @9,@D11                                            0245  05720000
*           MEMBER='1'B;                /* INDICATE MEMBER IN OPTNMAP * 05730000
         OI    OPTNMAP,B'00000010'                                0246  05740000
*           PO='1'B;                    /* SHOW OBJECT PDS IF LISTOBJ * 05750000
         OI    OPTNMAP+1,B'00100000'                              0247  05760000
*           LASTMEM='0'B;               /* TURN OFF LAST MEM BIT      * 05770000
         NI    OPTNMAP+1,B'11101111'                              0248  05780000
*           LPAREN='0'B;                /* ZERO LEFT PAREND BIT       * 05790000
         NI    LPAREN,B'01111111'                                 0249  05800000
*           /* CHECK IF COLUMN CONTAINS LEFT PARENDS                  * 05810000
*           IF CARD(COL)='('            /* IS IT LEFT PAREND          * 05820000
*              THEN DO;                 /* PROCESS LEFT PAREND        * 05830000
         LR    @1,@9                                              0250  05840000
         LA    @A,BCARD(@1)                                       0250  05850000
         CLI   0(@A),C'('                                         0250  05860000
         BC    07,@9E4                                            0250  05870000
*                   COL=COL+1;          /* BUMP POINTER TO NEXT COLUMN* 05880000
         AH    @9,@D7                                             0252  05890000
*                   LPAREN='1'B;        /* TURN ON LEFT PAREND BIT    * 05900000
         OI    LPAREN,B'10000000'                                 0253  05910000
         BC    15,@9E3                                            0255  05920000
*                   END;                                                05930000
*              ELSE LASTMEM='1'B;       /* INDICATE LAST MEMBER       * 05940000
@9E4     OI    OPTNMAP+1,B'00010000'                              0255  05950000
*           GOTO AEB1;                  /* CHECK IF LIMIT REACHED     * 05960000
         BC    15,AEB1                                            0256  05970000
*           END;                                                        05980000
*   /* CHECK FOR RELOCATION FACTOR                                    * 05990000
*   IF CARD(COL:COL+5)='RELOC='         /* IS IT RELOC OPERAND?       * 06000000
*      THEN DO;                         /* PROCESS RELOC OPERAND      * 06010000
@9E5     LR    @1,@9                                              0258  06020000
         LA    @A,BCARD(@1)                                       0258  06030000
         CLC   0(6,@A),@C65                                       0258  06040000
         BC    07,@9E2                                            0258  06050000
*           RELOC='1'B;                 /* TURN ON BIT IN OPTNMAP     * 06060000
         OI    OPTNMAP+1,B'00000010'                              0260  06070000
*           COL=COL+6;                  /* POINT TO START OF FACTOR   * 06080000
         AH    @9,@D10                                            0261  06090000
*           TCOL1=COL;                  /* SAVE LEFT BOUNDARY         * 06100000
         STH   @9,TCOL1                                           0262  06110000
* INCREM:                                                               06120000
*           COL=COL+1;                  /* POINT TO NEXT POSITION     * 06130000
INCREM   AH    @9,@D7                                             0263  06140000
*           /* IS COL PAST 71?                                        * 06150000
*           IF COL > 71                 /* PAST COL 71?               * 06160000
*              THEN GOTO ABA2;          /* INDICATE ERROR             * 06170000
         CH    @9,@D9                                             0264  06180000
         BC    02,ABA2                                            0265  06190000
*           /* CHECK FOR END OF RELOC OPERAND                         * 06200000
*           IF CARD(COL)=','            /* IS THERE ANOTHER OPERAND?  * 06210000
*              | CARD(COL)=' '          /* END OF OPERAND             * 06220000
*              /* CHECK IF RELOC FACTOR IS A VALID LENGTH             * 06230000
*              THEN IF COL-TCOL1 < 7    /* IS IT SMALL ENOUGH         * 06240000
         LR    @1,@9                                              0266  06250000
         LA    @A,BCARD(@1)                                       0266  06260000
         CLI   0(@A),C','                                         0266  06270000
         BC    08,@9E1                                            0266  06280000
         CLI   0(@A),C' '                                         0266  06290000
         BC    07,@9E0                                            0266  06300000
*                      & COL-TCOL1 > 0  /* IS IT AT LEAST 1 CHARACTER * 06310000
*                      THEN DO;         /* PROCESS VALID RELOC OPERAND* 06320000
@9E1     LR    @F,@9                                              0267  06330000
         SH    @F,TCOL1                                           0267  06340000
         LA    @1,7                                               0267  06350000
         CR    @F,@1                                              0267  06360000
         BC    10,@9DF                                            0267  06370000
         LR    @F,@9                                              0267  06380000
         SH    @F,TCOL1                                           0267  06390000
         CH    @F,@D12                                            0267  06400000
         BC    12,@9DE                                            0267  06410000
*                           RELFAC=CARD(TCOL1:COL-1);/* SAVE FACTOR   * 06420000
         LH    @1,@D4                                             0269  06430000
         AR    @1,@9                                              0269  06440000
         LH    @3,TCOL1                                           0269  06450000
         SR    @1,@3                                              0269  06460000
         LA    @E,BCARD(@3)                                       0269  06470000
         LA    @A,RELFAC                                          0269  06480000
         MVI   0(@A),C' '                                         0269  06490000
         MVC   1(005,@A),0(@A)                                    0269  06500000
         EX    @1,@MVC                                            0269  06510000
*                           LOCLEN=COL-TCOL1;/* SAVE LENGTH OF          06520000
*                                         RELOCATION FACTOR           * 06530000
         LR    @F,@9                                              0270  06540000
         SH    @F,TCOL1                                           0270  06550000
         ST    @F,LOCLEN                                          0270  06560000
*                           GOTO VALID; /* CONTINUE PROCESSING CARD   * 06570000
*                           END;                                        06580000
*                      ELSE;            /* NULL ELSE                  * 06590000
*              ELSE GOTO INCREM;        /* BUMP COL POINTER           * 06600000
*           /* CHECK IF HEX CHARACTERS A TO F WERE CODED AND CONVERT  * 06610000
* VALID:                                                                06620000
*           DO A=1 TO LOCLEN;                                           06630000
@9DC     EQU   *                                                  0275  06640000
VALID    LA    @F,1                                               0275  06650000
         BC    15,@DO9DA                                          0275  06660000
*              /* CHECK IF IT IS A VALID HEX CHARACTER                * 06670000
*              DO B=1 TO 16;                                            06680000
@DO9DB   LA    @F,1                                               0276  06690000
         ST    @F,B                                               0276  06700000
*                 /* VERIFY IF A VALID HEX CHARACTER ADDRESS IS GIVEN * 06710000
*                 IF RELFAC(A)=HEXCHAR(B)/* IS IT A VALID HEX CHAR    * 06720000
*                    THEN GOTO CONVERT; /* CONVERT CHAR TO HEX        * 06730000
@DO9D7   L     @1,B                                               0277  06740000
         LA    @E,HEXCHAR-1(@1)                                   0277  06750000
         L     @3,A                                               0277  06760000
         LA    @A,RELFAC-1(@3)                                    0277  06770000
         CLC   0(1,@A),0(@E)                                      0277  06780000
         BC    08,CONVERT                                         0278  06790000
*                 END;                                                  06800000
*              GOTO ABA2;               /* INVALID OPERAND            * 06810000
         L     @F,B                                               0279  06820000
         AH    @F,@D7                                             0279  06830000
@DO9D6   ST    @F,B                                               0279  06840000
         CH    @F,@D13                                            0279  06850000
         BC    12,@DO9D7                                          0279  06860000
         BC    15,ABA2                                            0280  06870000
*              /* CHECK FOR VALID A TO F HEX CHARACTER                * 06880000
* CONVERT:                                                              06890000
*              IF RELFAC(A) < 'C7'X     /* IS IT BETWEEN F            * 06900000
*                 & RELFAC(A) > 'C0'X   /* AND A ONLY                 * 06910000
*                 THEN DO;              /* PROCESS FOR CONVERSION     * 06920000
CONVERT  L     @1,A                                               0281  06930000
         LA    @A,RELFAC-1(@1)                                    0281  06940000
         CLI   0(@A),X'C7'                                        0281  06950000
         BC    10,@9D3                                            0281  06960000
         CLI   0(@A),X'C0'                                        0281  06970000
         BC    12,@9D2                                            0281  06980000
*                      RELOCX=0;        /* ZERO OUT PARM FIELD        * 06990000
         SR    @F,@F                                              0283  07000000
         ST    @F,PARMLIST+60                                     0283  07010000
*                      RELOCX=RELFAC(A);/* STORE CHAR TO CONVERT      * 07020000
         IC    @F,RELFAC-1(@1)                                    0284  07030000
         ST    @F,PARMLIST+60                                     0284  07040000
*                      RELOCX=RELOCX+'39'X;/* ADD CONVERSION FACTOR   * 07050000
         LA    @F,X'39'                                           0285  07060000
         A     @F,PARMLIST+60                                     0285  07070000
         ST    @F,PARMLIST+60                                     0285  07080000
*                      RELFAC(A)=RELCHAR(4);/* SAVE CONVERTED CHAR    * 07090000
         MVC   0(1,@A),RELCHAR+3                                  0286  07100000
*                      END;                                             07110000
*              END;                                                     07120000
@9D2     EQU   *                                                  0288  07130000
*           WORKAREA=WORKAREA && WORKAREA;/* ZERO OUT WORKAREA        * 07140000
@9D3     L     @F,A                                               0288  07150000
         AH    @F,@D7                                             0288  07160000
@DO9DA   ST    @F,A                                               0288  07170000
         C     @F,LOCLEN                                          0288  07180000
         BC    12,@DO9DB                                          0288  07190000
         XC    WORKAREA(8),WORKAREA                               0289  07200000
*           WORKAREA(9-LOCLEN:8)=RELFAC(1:LOCLEN);/* SET UP FOR PACK  * 07210000
         LA    @E,RELFAC                                          0290  07220000
         LA    @1,8                                               0290  07230000
         L     @3,LOCLEN                                          0290  07240000
         LCR   @3,@3                                              0290  07250000
         AH    @3,@D5                                             0290  07260000
         SR    @1,@3                                              0290  07270000
         LA    @A,WORKAREA-1(@3)                                  0290  07280000
         EX    @1,@MVC                                            0290  07290000
*           GENERATE;                                                   07300000
         PACK  A(4),WORKAREA(8)        PACK RELOC FACTOR                07310000
         L     R4,A                    PUT PACKED FACTOR IN REG         07320000
         SRL   R4,4                    DROP SIGN                        07330000
         ST    R4,RELOCX               STORE IN PARMLIST                07340000
         DS    0H                                                       07350000
*           GOTO ACG4;                  /* CHECK IF MORE OPTIONS      * 07360000
         BC    15,ACG4                                            0292  07370000
*           END;                                                        07380000
*   /* CHECK TO SEE IF OPERAND IS DDN                                 * 07390000
*   IF CARD(COL:COL+3)='DDN='           /* IS IT DDN OPERAND?         * 07400000
*      THEN DO;                         /* PROCESS DDN OPERAND        * 07410000
@9E2     LR    @1,@9                                              0294  07420000
         LA    @A,BCARD(@1)                                       0294  07430000
         CLC   0(4,@A),@C70                                       0294  07440000
         BC    07,@9D1                                            0294  07450000
*           COL=COL+4;                  /* BUMP POINTER TO BEGINNING    07460000
*                                         OF OPERAND                  * 07470000
         AH    @9,@D14                                            0296  07480000
*           DDN='1'B;                   /* INDICATE DDN IN OPTNMAP    * 07490000
         OI    OPTNMAP,B'00000100'                                0297  07500000
*           TCOL1=COL;                  /* SET UP LEFT BOUNDARY OF DDN* 07510000
         STH   @9,TCOL1                                           0298  07520000
* ABF4:                                                                 07530000
*           COL=COL+1;                  /* BUMP POINTER TO FIND END     07540000
*                                         OF DDN                      * 07550000
ABF4     AH    @9,@D7                                             0299  07560000
*           /* CHECK IF COLUMN IS PAST COLUMN 71                      * 07570000
*           IF COL > 71                 /* IS IT PAST COLUMN 71?      * 07580000
*              THEN GOTO ABA2;          /* SET UP ERROR MESSAGE       * 07590000
         CH    @9,@D9                                             0300  07600000
         BC    02,ABA2                                            0301  07610000
*           /* CHECK TO SEE IF DDNAME GIVEN IS VALID                  * 07620000
*           IF CARD(COL)=','            /* IS THERE ANOTHER OPERAND OR* 07630000
*              |  CARD(COL)=' '         /* IS IT END OF OPERAND       * 07640000
*              /* CHECK FOR VALID SIZE OF DDNAME                      * 07650000
*              THEN IF COL-TCOL1<9      /* IS DDNAME LESS THAN 9 CHARS* 07660000
         LR    @1,@9                                              0302  07670000
         LA    @A,BCARD(@1)                                       0302  07680000
         CLI   0(@A),C','                                         0302  07690000
         BC    08,@9D0                                            0302  07700000
         CLI   0(@A),C' '                                         0302  07710000
         BC    07,@9CF                                            0302  07720000
*                      &  COL-TCOL1>0   /* IS DDNAME > ZERO?          * 07730000
*                      THEN DO;         /* PROCESS DDNAME             * 07740000
@9D0     LR    @F,@9                                              0303  07750000
         SH    @F,TCOL1                                           0303  07760000
         LA    @1,9                                               0303  07770000
         CR    @F,@1                                              0303  07780000
         BC    10,@9CE                                            0303  07790000
         LR    @F,@9                                              0303  07800000
         SH    @F,TCOL1                                           0303  07810000
         CH    @F,@D12                                            0303  07820000
         BC    12,@9CD                                            0303  07830000
*                           DDNAME=CARD(TCOL1:COL-1);/* SAVE DDNAME   * 07840000
         LH    @1,@D4                                             0305  07850000
         AR    @1,@9                                              0305  07860000
         LH    @3,TCOL1                                           0305  07870000
         SR    @1,@3                                              0305  07880000
         LA    @E,BCARD(@3)                                       0305  07890000
         LA    @A,PARMLIST+44                                     0305  07900000
         MVI   0(@A),C' '                                         0305  07910000
         MVC   1(007,@A),0(@A)                                    0305  07920000
         EX    @1,@MVC                                            0305  07930000
*                           GOTO ACG4;  /* CONTINUE TO PROCESS CARD   * 07940000
         BC    15,ACG4                                            0306  07950000
*                           END;                                        07960000
*                      ELSE DO;         /* CHECK IF VALID CARD        * 07970000
@9CD     EQU   *                                                  0308  07980000
*                           /* CHECK IF COLUMN POINTER > 1            * 07990000
*                           IF COL-TCOL1<1/* IS COL > 1               * 08000000
*                              THEN GOTO ABA2;/*SET UP ERROR MESSAGE  * 08010000
@9CE     LR    @F,@9                                              0309  08020000
         SH    @F,TCOL1                                           0309  08030000
         CH    @F,@D7                                             0309  08040000
         BC    04,ABA2                                            0310  08050000
*                           COL=COL-9;  /* RESET COLUMN POINTER       * 08060000
         SH    @9,@D5                                             0311  08070000
*                           GOTO ABA2;  /* SET UP ERROR MESSAGE       * 08080000
         BC    15,ABA2                                            0312  08090000
*                           END;                                        08100000
*              ELSE GOTO ABF4;          /* RECHECK CARD               * 08110000
*           END;                                                        08120000
@9CB     EQU   *                                                  0315  08130000
*   /* CHECK OPERAND TO SEE IF IT IS THE OUTPUT OPERAND               * 08140000
*   IF CARD(COL:COL+6)='OUTPUT='        /* OPERAND SPECIFY OUTPUT?    * 08150000
*      THEN DO;                         /* PROCESS OUTPUT OPERAND     * 08160000
@9D1     LR    @1,@9                                              0316  08170000
         LA    @A,BCARD(@1)                                       0316  08180000
         CLC   0(7,@A),@C71                                       0316  08190000
         BC    07,@9CA                                            0316  08200000
*           /* CHECK FOR INVALID OPERAND SPECIFIED FOR OPERATION      * 08210000
*           IF LISTOBJ='1'B             /* IS IT LISTOBJ OPERATION    * 08220000
*              THEN GOTO ABA8;          /* SET UP ERROR MESSAGE       * 08230000
         TM    OPTNMAP,B'01000000'                                0318  08240000
         BC    01,ABA8                                            0319  08250000
*           COL=COL+7;                  /* BUMP COLUMN POINTER        * 08260000
         AH    @9,@D11                                            0320  08270000
*           /* CHECK FOR A LISTIDR OPERATION                          * 08280000
*           IF LISTIDR='1'B             /* IS IT LISTIDR OPERATION    * 08290000
*              THEN GOTO ABA7;          /* PROCESS OUTPUT OPTIONS     * 08300000
         TM    OPTNMAP,B'00100000'                                0321  08310000
         BC    01,ABA7                                            0322  08320000
*           /********************************************************** 08330000
*           /* THE OUTPUT OPTIONS FOR A LISTLOAD OPERATION CAN BE     * 08340000
*           /* MODLIST, XREF OR BOTH WHERE BOTH IS THE DEFAULT IF     * 08350000
*           /* NO OUTPUT OPERAND IS SPECIFIED. XREF AND MODLIST ARE   * 08360000
*           /* INDICATED AS ON IF THE XREF AND MODLIST BITS IN        * 08370000
*           /* OPTNMAP ARE SET TO ZERO. IF EITHER ONE IS SET TO ONE   * 08380000
*           /* IT SIGNIFIES BYPASS PROCESSING THIS OPTION.            * 08390000
*           /********************************************************** 08400000
*           /* CHECK IF OUTPUT OPTION IS MODLIST FOR LISTLOAD         * 08410000
*           IF CARD(COL:COL+6)='MODLIST'/* IS IT MODLIST OPTION?      * 08420000
*              THEN DO;                 /* PROCESS MODLIST OPTION     * 08430000
         LR    @1,@9                                              0323  08440000
         LA    @A,BCARD(@1)                                       0323  08450000
         CLC   0(7,@A),@C72                                       0323  08460000
         BC    07,@9C9                                            0323  08470000
*                   COL=COL+7;          /* BUMP COLUMN POINTER        * 08480000
         AH    @9,@D11                                            0325  08490000
*                   XREF='1'B;          /* TURN OFF XREF OUTPUT       * 08500000
         OI    OPTNMAP+1,B'10000000'                              0326  08510000
*                   GOTO ACG4;          /* IS NEXT COLUMN A BLANK?    * 08520000
         BC    15,ACG4                                            0327  08530000
*                   END;                                                08540000
*           /* CHECK IF OUTPUT OPTION IS XREF FOR LISTLOAD OPERATION  * 08550000
*           IF CARD(COL:COL+3)='XREF'   /* IS IT XREF OPTION?         * 08560000
*              THEN DO;                 /* XREF OPTION                * 08570000
@9C9     LR    @1,@9                                              0329  08580000
         LA    @A,BCARD(@1)                                       0329  08590000
         CLC   0(4,@A),@C73                                       0329  08600000
         BC    07,@9C8                                            0329  08610000
*                   COL=COL+4;          /* BUMP COLUMN POINTER        * 08620000
         AH    @9,@D14                                            0331  08630000
*                   MODLIST='1'B;       /* TURN OFF MODLIST OPTION    * 08640000
         OI    OPTNMAP,B'00000001'                                0332  08650000
*                   GOTO ACG4;          /* KEEP PROCESSING CARD       * 08660000
         BC    15,ACG4                                            0333  08670000
*                   END;                                                08680000
*           /* CHECK IF OUTPUT OPTION IS BOTH XREF AND MODLIST        * 08690000
*           IF CARD(COL:COL+3)='BOTH'   /* IS IT BOTH OPTION          * 08700000
*              THEN DO;                 /* PROCESS BOTH OPTION        * 08710000
@9C8     LR    @1,@9                                              0335  08720000
         LA    @A,BCARD(@1)                                       0335  08730000
         CLC   0(4,@A),@C74                                       0335  08740000
         BC    07,@9C7                                            0335  08750000
*                   COL=COL+4;          /* BUMP COLUMN POINTER        * 08760000
         AH    @9,@D14                                            0337  08770000
*                   GOTO ACG4;          /* KEEP PROCESSING CARD       * 08780000
         BC    15,ACG4                                            0338  08790000
*                   END;                                                08800000
* ABA6:                                                                 08810000
*           ECARD(COL+1)='$';           /* MARK ERROR WITH DOLLAR SIGN* 08820000
@9C7     EQU   *                                                  0340  08830000
ABA6     LA    @1,1                                               0340  08840000
         AR    @1,@9                                              0340  08850000
         LA    @A,ECARD-1(@1)                                     0340  08860000
         MVI   0(@A),C'$'                                         0340  08870000
*           GEN  (PUT   OUTDCB,ECARD);  /* PRINT ERROR MARKER         * 08880000
         PUT   OUTDCB,ECARD                                             08890000
         DS    0H                                                       08900000
*           ECARD(COL+1)=' ';           /* BLANK OUT ERROR MARKER     * 08910000
         LA    @1,1                                               0342  08920000
         AR    @1,@9                                              0342  08930000
         LA    @A,ECARD-1(@1)                                     0342  08940000
         MVI   0(@A),C' '                                         0342  08950000
*           ERRORS=ERRORS|'00000040'X;  /* WRITE: IMPROPER OPTION     * 08960000
         OC    PARMLIST+32(4),@X76                                0343  08970000
*           GOTO ABA9;                  /* BUMP COLUMN POINTER        * 08980000
         BC    15,ABA9                                            0344  08990000
* ABA7:                                                                 09000000
*           /* CHECK IF OUTPUT OPTION IS IDENT FOR LISTIDR            * 09010000
*           IF CARD(COL:COL+4)='IDENT'  /* IDENT OPTION?              * 09020000
*              THEN DO;                 /* PROCESS IDENT OPTION       * 09030000
ABA7     LR    @1,@9                                              0345  09040000
         LA    @A,BCARD(@1)                                       0345  09050000
         CLC   0(5,@A),@C77                                       0345  09060000
         BC    07,@9C6                                            0345  09070000
*                   COL=COL+5;          /* BUMP COLUMN POINTER        * 09080000
         AH    @9,@D15                                            0347  09090000
*                   IDENT='1'B;         /* TURN ON IDENT OPTION       * 09100000
         OI    OPTNMAP+1,B'01000000'                              0348  09110000
*                   GOTO ACG4;          /* KEEP PROCESSING CARD       * 09120000
         BC    15,ACG4                                            0349  09130000
*                   END;                                                09140000
*           /* CHECK IF OUTPUT OPTION IS ALL FOR LISTIDR              * 09150000
*           IF CARD(COL:COL+2)='ALL'    /* ALL OPTION?                * 09160000
*              THEN DO;                 /* PROCESS ALL OPTION         * 09170000
@9C6     LR    @1,@9                                              0351  09180000
         LA    @A,BCARD(@1)                                       0351  09190000
         CLC   0(3,@A),@C78                                       0351  09200000
         BC    07,@9C5                                            0351  09210000
*                   COL=COL+3;          /* BUMP COLUMN POINTER        * 09220000
         AH    @9,@D16                                            0353  09230000
*                   GOTO ACG4;          /* KEEP PROCESSING CARD       * 09240000
         BC    15,ACG4                                            0354  09250000
*                   END;                                                09260000
*           GOTO ABA6;                  /* INDICATE ERROR IN OPTION   * 09270000
*           END;                                                        09280000
* ABA2:                                                                 09290000
*   ECARD(COL+1)='$';                   /* MARK ERROR                 * 09300000
@9CA     EQU   *                                                  0358  09310000
ABA2     LA    @1,1                                               0358  09320000
         AR    @1,@9                                              0358  09330000
         LA    @A,ECARD-1(@1)                                     0358  09340000
         MVI   0(@A),C'$'                                         0358  09350000
*   GEN (PUT   OUTDCB,ECARD);           /* PRINT ERROR MARKER         * 09360000
         PUT   OUTDCB,ECARD                                             09370000
         DS    0H                                                       09380000
*   ECARD(COL+1)=' ';                   /* BLANK OUT ERROR MARKER     * 09390000
         LA    @1,1                                               0360  09400000
         AR    @1,@9                                              0360  09410000
         LA    @A,ECARD-1(@1)                                     0360  09420000
         MVI   0(@A),C' '                                         0360  09430000
*   ERRORS=ERRORS|'00000400'X;          /* SET UP INVALID OPTION MSG  * 09440000
         OC    PARMLIST+32(4),@X79                                0361  09450000
*   R1=ADDR(PARMLIST);                  /* SET UP PARAMETER LIST      * 09460000
         LA    @1,PARMLIST                                        0362  09470000
*   CALL HMBLKERR;                      /* PROCESS ERROR MESSAGE      * 09480000
         L     @F,@V2              ADDRESS OF HMBLKERR            0363  09490000
         BALR  @E,@F                                              0363  09500000
*   GOTO AAB1;                          /* PROCESS ANOTHER CARD       * 09510000
         BC    15,AAB1                                            0364  09520000
* ABA8:                                                                 09530000
*   ECARD(COL+1)='$';                   /* MARK ERROR COLUMN          * 09540000
ABA8     LA    @1,1                                               0365  09550000
         AR    @1,@9                                              0365  09560000
         LA    @A,ECARD-1(@1)                                     0365  09570000
         MVI   0(@A),C'$'                                         0365  09580000
*   GEN (PUT   OUTDCB,ECARD);           /* PRINT ERROR MARKER         * 09590000
         PUT   OUTDCB,ECARD                                             09600000
         DS    0H                                                       09610000
*   ECARD(COL+1)=' ';                   /* BLANK OUT ERROR MARKER     * 09620000
         LA    @1,1                                               0367  09630000
         AR    @1,@9                                              0367  09640000
         LA    @A,ECARD-1(@1)                                     0367  09650000
         MVI   0(@A),C' '                                         0367  09660000
*   ERRORS=ERRORS|'00000080'X;          /* WRITE: IMPROPER OPERAND    * 09670000
         OC    PARMLIST+32(4),@X80                                0368  09680000
* ABA9:                                                                 09690000
*   COL=COL+1;                          /* BUMP COLUMN POINTER        * 09700000
ABA9     AH    @9,@D7                                             0369  09710000
*   /* CHECK IF COLUMN POINTER IS PAST COLUMN 71                      * 09720000
*   IF COL>71                           /* IS COLUMN PAST 71?         * 09730000
*      THEN GOTO ABA2;                  /* SET UP ERROR MESSAGE       * 09740000
         CH    @9,@D9                                             0370  09750000
         BC    02,ABA2                                            0371  09760000
*   /* CHECK IF COLUMN POINTER IS POINTING TO A COMMA OR A BLANK      * 09770000
*   IF CARD(COL)=','                    /* IS COL POINTING TO A COMMA?* 09780000
*      | CARD(COL)=' '                  /* OR A BLANK?                * 09790000
*      THEN GOTO ACG4;                  /* PROCESS CARD               * 09800000
         LR    @1,@9                                              0372  09810000
         LA    @A,BCARD(@1)                                       0372  09820000
         CLI   0(@A),C','                                         0372  09830000
         BC    08,@9C4                                            0372  09840000
         CLI   0(@A),C' '                                         0372  09850000
         BC    08,ACG4                                            0373  09860000
*      ELSE GOTO ABA9;                  /* BUMP COLUMN POINTER        * 09870000
         BC    15,ABA9                                            0374  09880000
* ACB1:                                                                 09890000
*   COL=COL+1;                          /* BUMP COLUMN POINTER        * 09900000
ACB1     AH    @9,@D7                                             0375  09910000
*   IF COL>70                           /* COLUMN PAST 71?            * 09920000
*      THEN DO;                         /* YES THEN DO                * 09930000
         CH    @9,@D17                                            0376  09940000
         BC    12,@9C2                                            0376  09950000
* ACC2:                                                                 09960000
*           ERRORS=ERRORS|'00000200'X;  /* SET UP ERROR MESSAGE       * 09970000
ACC2     OC    PARMLIST+32(4),@X81                                0378  09980000
*           R1=ADDR(PARMLIST);          /* SAVE PARMLIST ADDR TO PASS * 09990000
         LA    @1,PARMLIST                                        0379  10000000
*           CALL HMBLKERR;              /* PROCESS ANY ERROR MSGS     * 10010000
         L     @F,@V2              ADDRESS OF HMBLKERR            0380  10020000
         BALR  @E,@F                                              0380  10030000
*           GOTO AAB1;                  /* PROCESS ANOTHER CARD       * 10040000
         BC    15,AAB1                                            0381  10050000
*           END;                                                        10060000
*   /* CHECK FOR A DOUBLE QUOTE IN TITLE TO INDICATE A CONTRACTION    * 10070000
*   IF CARD(COL:COL+1)=''''''           /* IS IT DOUBLE QUOTE?        * 10080000
*      THEN DO;                         /* PROCESS DOUBLE QUOTE       * 10090000
@9C2     LR    @1,@9                                              0383  10100000
         LA    @A,BCARD(@1)                                       0383  10110000
         CLC   0(2,@A),@C82                                       0383  10120000
         BC    07,@9C1                                            0383  10130000
*           CARD(COL:71)=CARD(COL+1:71);/* SHIFT CARD LEFT ONE COLUMN * 10140000
         LA    @3,1                                               0385  10150000
         AR    @3,@9                                              0385  10160000
         LA    @E,BCARD(@3)                                       0385  10170000
         LA    @4,71                                              0385  10180000
         SR    @4,@1                                              0385  10190000
         EX    @4,@MVC                                            0385  10200000
*           COL=COL+2;                  /* BUMP COLUMN POINTER        * 10210000
         AH    @9,@D18                                            0386  10220000
*           END;                                                        10230000
*   /* CHECK FOR A SINGLE QUOTE TO INDICATE END OF TITLE              * 10240000
*   IF CARD(COL)=''''                   /* IS IT SINGLE QUOTE?        * 10250000
*      THEN TCOL2=COL-1;                /* SAVE TITLE RIGHT BOUNDARY  * 10260000
@9C1     LR    @1,@9                                              0388  10270000
         LA    @A,BCARD(@1)                                       0388  10280000
         CLI   0(@A),C''''                                        0388  10290000
         BC    07,@9C0                                            0388  10300000
         LR    @F,@9                                              0389  10310000
         BCTR  @F,0                                               0389  10320000
         STH   @F,TCOL2                                           0389  10330000
*      ELSE GOTO ACB1;                  /* POINT TO NEXT COLUMN       * 10340000
*   /* CHECK FOR LEFT PAREND INDICATING USER OUTPUT POSITION GIVEN    * 10350000
*   IF LPAREN^='1'B                     /* WAS LEFT PAREND FOUND?     * 10360000
*      THEN DO;                         /* PROCESS NO LEFT PAREND     * 10370000
@9BF     TM    LPAREN,B'10000000'                                 0391  10380000
         BC    01,@9BE                                            0391  10390000
* ACG2:                                                                 10400000
*           TITLECOL=1;                 /* STARTING TITLE OUTPUT COL  * 10410000
ACG2     LA    @F,1                                               0393  10420000
         STH   @F,TITLECOL                                        0393  10430000
* ACH2:                                                                 10440000
*           IF TCOL2-TCOL1>39           /* IS TITLE BIGGER THAN 40    * 10450000
*              THEN TCOL2=TCOL1+39;     /* TRUNCATE TITLE TO 40 CHARS.* 10460000
ACH2     LH    @F,TCOL2                                           0394  10470000
         SH    @F,TCOL1                                           0394  10480000
         CH    @F,@D19                                            0394  10490000
         BC    12,@9BD                                            0394  10500000
         LA    @F,39                                              0395  10510000
         AH    @F,TCOL1                                           0395  10520000
         STH   @F,TCOL2                                           0395  10530000
*           /* MOVE TITLE INTO TITLE BUFFER FOR PRINTING              * 10540000
*           TTLINE(TITLECOL:TITLECOL+39)=CARD(TCOL1:TCOL2);             10550000
@9BD     LH    @1,TCOL2                                           0396  10560000
         LH    @3,TCOL1                                           0396  10570000
         SR    @1,@3                                              0396  10580000
         LA    @E,BCARD(@3)                                       0396  10590000
         LH    @4,TITLECOL                                        0396  10600000
         LA    @A,BLINE(@4)                                       0396  10610000
         MVI   0(@A),C' '                                         0396  10620000
         MVC   1(039,@A),0(@A)                                    0396  10630000
         EX    @1,@MVC                                            0396  10640000
* ACF4:                                                                 10650000
*           COL=COL+1;                  /* BUMP COLUMN POINTER        * 10660000
ACF4     AH    @9,@D7                                             0397  10670000
* ACG4:                                                                 10680000
*           /* CHECK IF ALL OPTIONS SPECIFIED HAVE BEEN ENCOUNTERED   * 10690000
*           IF CARD(COL)=' '            /* IS COLUMN BLANK?           * 10700000
*              THEN GOTO PROCESS;       /* PROCESS OUTPUT OPTIONS     * 10710000
ACG4     LR    @1,@9                                              0398  10720000
         LA    @A,BCARD(@1)                                       0398  10730000
         CLI   0(@A),C' '                                         0398  10740000
         BC    08,PROCESS                                         0399  10750000
*           /* CHECK TO SEE IF CONTINUATION WAS SPECIFIED             * 10760000
*           IF CARD(COL:COL+1)=', '     /* IS IT CONTINUATION?        * 10770000
*              THEN DO;                 /* PROCESS CONTINUATION       * 10780000
         CLC   0(2,@A),@C83                                       0400  10790000
         BC    07,@9BC                                            0400  10800000
*                   CONTINUE='1'B;      /* TURN ON CONTINUATION BIT   * 10810000
         OI    CONTINUE,B'10000000'                               0402  10820000
*                   GOTO AAC1;          /* READ ANOTHER CARD          * 10830000
         BC    15,AAC1                                            0403  10840000
*                   END;                                                10850000
*           /* CHECK IF CARD COLUMN IS A COMMA                        * 10860000
*           IF CARD(COL)=','            /* IS COL A COMMA?            * 10870000
*              /* CHECK IF COLUMN IS EQUAL TO 71                      * 10880000
*              THEN IF COL=71           /* IS COL EQUAL TO 71?        * 10890000
@9BC     LR    @1,@9                                              0405  10900000
         LA    @A,BCARD(@1)                                       0405  10910000
         CLI   0(@A),C','                                         0405  10920000
         BC    07,@9BB                                            0405  10930000
*                      THEN DO;         /* PROCESS COL=71             * 10940000
         CH    @9,@D9                                             0406  10950000
         BC    07,@9BA                                            0406  10960000
*                           CONTINUE='1'B;/* TURN ON CONTINUATION     * 10970000
         OI    CONTINUE,B'10000000'                               0408  10980000
*                           GOTO AAC1;  /* READ ANOTHER CARD          * 10990000
         BC    15,AAC1                                            0409  11000000
*                           END;                                        11010000
*                      ELSE DO;         /* COL NOT EQUAL TO 71        * 11020000
*                           COL=COL+1;  /* BUMP COLUMN POINTER        * 11030000
@9BA     AH    @9,@D7                                             0412  11040000
*                           GOTO ABC1;  /* FIND NEXT OPTION           * 11050000
         BC    15,ABC1                                            0413  11060000
*                           END;                                        11070000
*              ELSE GOTO ABA2;          /* MARK COLUMN IN ERROR       * 11080000
*           END;                                                        11090000
@9B8     EQU   *                                                  0416  11100000
*   COL=COL+1;                          /* BUMP COLUMN POINTER        * 11110000
@9BE     AH    @9,@D7                                             0417  11120000
*   /* CHECK IF COLUMN POINTER IS POINTING TO A COMMA                 * 11130000
*   IF CARD(COL)=','                    /* IS COL A COMMA?            * 11140000
*      THEN GOTO ADB1;                  /* BUMP COLUMN POINTER        * 11150000
         LR    @1,@9                                              0418  11160000
         LA    @A,BCARD(@1)                                       0418  11170000
         CLI   0(@A),C','                                         0418  11180000
         BC    08,ADB1                                            0419  11190000
*   /* CHECK IF COLUMN POINTER IS POINTING TO A RIGHT PAREND          * 11200000
*   IF CARD(COL)=')'                    /* IS COL A RIGHT PAREND      * 11210000
*      THEN GOTO ACG2;                  /* TAKE DEFAULT OUTPUT PLACE  * 11220000
         CLI   0(@A),C')'                                         0420  11230000
         BC    08,ACG2                                            0421  11240000
*      ELSE GOTO ABA2;                  /* SET UP ERROR MARKER        * 11250000
         BC    15,ABA2                                            0422  11260000
* ADB1:                                                                 11270000
*   COL=COL+1;                          /* BUMP COLUMN POINTER        * 11280000
ADB1     AH    @9,@D7                                             0423  11290000
*   TITLECOL=0;                         /* ZERO OUT TITLE OUTPUT ADDR * 11300000
         SR    @F,@F                                              0424  11310000
         STH   @F,TITLECOL                                        0424  11320000
*   /* CHECK FOR TWO POSITION TITLE OUTPUT ADDRESS PLUS RIGHT PAREND  * 11330000
*   IF CARD(COL+3)=')'                  /* IS COL+3 EQUAL RIGHT PAREND* 11340000
*      THEN GOTO ADC2;                  /* PROCESS TITLE OUTPUT ADDR  * 11350000
         LA    @1,3                                               0425  11360000
         AR    @1,@9                                              0425  11370000
         LA    @A,BCARD(@1)                                       0425  11380000
         CLI   0(@A),C')'                                         0425  11390000
         BC    08,ADC2                                            0426  11400000
*   /* CHECK FOR ONE POSITION TITLE OUTPUT ADDRESS PLUS RIGHT PAREND  * 11410000
*   IF CARD(COL+2)=')'                  /* IS COL+2 EQUAL RIGHT PAREND* 11420000
*      THEN GOTO ADD2;                  /* PROCESS TITLE OUTPUT ADDR  * 11430000
         LA    @3,2                                               0427  11440000
         AR    @3,@9                                              0427  11450000
         LA    @A,BCARD(@3)                                       0427  11460000
         CLI   0(@A),C')'                                         0427  11470000
         BC    08,ADD2                                            0428  11480000
*   /* CHECK FOR RIGHT PAREND ONLY                                    * 11490000
*   IF CARD(COL+1)=')'                  /* IS COL+1 EQUAL RIGHT PAREND* 11500000
*      THEN GOTO ADE2;                  /* PROCESS TITLE OUTPUT ADDR  * 11510000
         LA    @4,1                                               0429  11520000
         AR    @4,@9                                              0429  11530000
         LA    @A,BCARD(@4)                                       0429  11540000
         CLI   0(@A),C')'                                         0429  11550000
         BC    08,ADE2                                            0430  11560000
*      ELSE GOTO ACC2;                  /* SET UP ERROR MESSAGE       * 11570000
         BC    15,ACC2                                            0431  11580000
* ADC2:                                                                 11590000
*   TEMP=CARD(COL);                     /* SAVE POINTER TO QUOTE      * 11600000
ADC2     LR    @1,@9                                              0432  11610000
         SR    @F,@F                                              0432  11620000
         IC    @F,BCARD(@1)                                       0432  11630000
         STH   @F,TEMP                                            0432  11640000
*   TITLECOL=100*(TEMP-240);            /* CALCULATE OUTPUT COLUMN    * 11650000
         SH    @F,@D20                                            0433  11660000
         MH    @F,@D21                                            0433  11670000
         STH   @F,TITLECOL                                        0433  11680000
*   COL=COL+1;                          /* BUMP COLUMN POINTER        * 11690000
         AH    @9,@D7                                             0434  11700000
* ADD2:                                                                 11710000
*   TEMP=CARD(COL);                     /* SAVE POINTER TO QUOTE      * 11720000
ADD2     LR    @1,@9                                              0435  11730000
         SR    @F,@F                                              0435  11740000
         IC    @F,BCARD(@1)                                       0435  11750000
         STH   @F,TEMP                                            0435  11760000
*   TITLECOL=TITLECOL+10*(TEMP-240);    /* CALCULATE OUTPUT COLUMN    * 11770000
         SH    @F,@D20                                            0436  11780000
         MH    @F,@D22                                            0436  11790000
         AH    @F,TITLECOL                                        0436  11800000
         STH   @F,TITLECOL                                        0436  11810000
*   COL=COL+1;                          /* BUMP COLUMN POINTER        * 11820000
         AH    @9,@D7                                             0437  11830000
* ADE2:                                                                 11840000
*   TEMP=CARD(COL);                     /* SAVE POINTER TO QUOTE      * 11850000
ADE2     LR    @1,@9                                              0438  11860000
         SR    @F,@F                                              0438  11870000
         IC    @F,BCARD(@1)                                       0438  11880000
         STH   @F,TEMP                                            0438  11890000
*   TITLECOL=TITLECOL+TEMP-240;         /* CALCULATE OUTPUT COLUMN    * 11900000
         LH    @F,@D23                                            0439  11910000
         AH    @F,TEMP                                            0439  11920000
         AH    @F,TITLECOL                                        0439  11930000
         STH   @F,TITLECOL                                        0439  11940000
*   COL=COL+1;                          /* BUMP COLUMN POINTER        * 11950000
         AH    @9,@D7                                             0440  11960000
*   /* CHECK IF TITLE WILL FIT AT ADDRESS SPECIFIED                   * 11970000
*   IF TCOL2-TCOL1+TITLECOL>120         /* IS TITLE ADDR > 120        * 11980000
*      | TCOL2-TCOL1+TITLECOL < 1       /* IS TITLE ADDR < 1          * 11990000
*      THEN GOTO ACG2;                  /* START TITLE IN COLUMN 1    * 12000000
         SH    @F,TCOL1                                           0441  12010000
         AH    @F,TCOL2                                           0441  12020000
         LA    @1,120                                             0441  12030000
         CR    @F,@1                                              0441  12040000
         BC    02,@9B7                                            0441  12050000
         LH    @F,TITLECOL                                        0441  12060000
         SH    @F,TCOL1                                           0441  12070000
         AH    @F,TCOL2                                           0441  12080000
         CH    @F,@D7                                             0441  12090000
         BC    05,ACG2                                            0442  12100000
*      ELSE GOTO ACH2;                  /* IS TITLE > 40 CHARACTERS?  * 12110000
         BC    15,ACH2                                            0443  12120000
* AEB1:                                                                 12130000
*   /* CHECK TO SEE IF TOO MANY MEMBERS WERE SPECIFIED                * 12140000
*   IF LIMIT='1'B                       /* HAS MEMBER LIMIT BEEN HIT? * 12150000
*      THEN GOTO AEG2;                  /* FIND END OF MEMBER OPERAND * 12160000
AEB1     TM    OPTNMAP+1,B'00001000'                              0444  12170000
         BC    01,AEG2                                            0445  12180000
*   NUMBER=0;                           /* MEMBER OPERAND PROCESSER   * 12190000
         SR    @F,@F                                              0446  12200000
         STH   @F,NUMBER                                          0446  12210000
* AEC1:                                                                 12220000
*   TCOL1=COL;                          /* SAVE LEFT BOUNDARY         * 12230000
AEC1     STH   @9,TCOL1                                           0447  12240000
* AED1:                                                                 12250000
*   /* CHECK IF END OF MEMBER HAS BEEN FOUND                          * 12260000
*   IF CARD(COL)=','                    /* HAS END OF MEMBER BEEN HIT * 12270000
*      THEN DO;                         /* PROCESS MEMBER             * 12280000
AED1     LR    @1,@9                                              0448  12290000
         LA    @A,BCARD(@1)                                       0448  12300000
         CLI   0(@A),C','                                         0448  12310000
         BC    07,@9B5                                            0448  12320000
* AEE1:                                                                 12330000
*           TCOL2=COL-1;                /* SAVE RIGHT BOUNDARY        * 12340000
AEE1     LR    @F,@9                                              0450  12350000
         BCTR  @F,0                                               0450  12360000
         STH   @F,TCOL2                                           0450  12370000
* AEF1:                                                                 12380000
*           /* CHECK IF MEMBER IS GREATER THAN EIGHT CHARACTERS       * 12390000
*           IF TCOL2-TCOL1>7            /* IS MEMBER TOO LARGE?       * 12400000
*              THEN DO;                 /* PROCESS LARGE MEMBER       * 12410000
AEF1     LH    @F,TCOL2                                           0451  12420000
         SH    @F,TCOL1                                           0451  12430000
         CH    @F,@D11                                            0451  12440000
         BC    12,@9B4                                            0451  12450000
*                   COL=TCOL1;          /* POINT COL TO BEGINNING     * 12460000
         LH    @9,TCOL1                                           0453  12470000
*                   GOTO ABA2;          /* SET UP ERROR MARKER        * 12480000
         BC    15,ABA2                                            0454  12490000
*                   END;                                                12500000
*           /* CHECK TO SEE IF A MEMBER WAS SPECIFIED                 * 12510000
*           IF TCOL2-TCOL1<0            /* WAS MEMBER GIVEN?          * 12520000
*              THEN GOTO ABA2;          /* SET UP ERROR MARKER        * 12530000
@9B4     LH    @F,TCOL1                                           0456  12540000
         LCR   @F,@F                                              0456  12550000
         AH    @F,TCOL2                                           0456  12560000
         CH    @F,@D12                                            0456  12570000
         BC    04,ABA2                                            0457  12580000
*           NUMBER=NUMBER+1;            /* ADD 1 TO MEMBER COUNT      * 12590000
         LA    @F,1                                               0458  12600000
         AH    @F,NUMBER                                          0458  12610000
         STH   @F,NUMBER                                          0458  12620000
*           /* CHECK TO SEE IF LESS THAN 33 MEMBERS WERE PROCESSED    * 12630000
*           IF NUMBER<33                /* LESS THAN 33 MEMBERS?      * 12640000
*              THEN DO;                 /* PROCESS MEMBER             * 12650000
         LA    @F,33                                              0459  12660000
         CH    @F,NUMBER                                          0459  12670000
         BC    12,@9B3                                            0459  12680000
*                   LISTNAME(NUMBER)=CARD(TCOL1:TCOL2);/* SAVE MEMBER * 12690000
         LH    @1,TCOL2                                           0461  12700000
         LH    @3,TCOL1                                           0461  12710000
         SR    @1,@3                                              0461  12720000
         LA    @E,BCARD(@3)                                       0461  12730000
         LH    @4,NUMBER                                          0461  12740000
         MH    @4,@D24                                            0461  12750000
         LA    @A,BLDLIST-10(@4)                                  0461  12760000
         MVI   0(@A),C' '                                         0461  12770000
         MVC   1(007,@A),0(@A)                                    0461  12780000
         EX    @1,@MVC                                            0461  12790000
*                   /* CHECK IF ONLY ONE MEMBER SPECIFIED             * 12800000
*                   IF LASTMEM='1'B     /* WAS ONE MEMBER SPECIFIED?  * 12810000
*                      THEN GOTO ACG4;  /* CHECK IF MORE OPTIONS      * 12820000
         TM    OPTNMAP+1,B'00010000'                              0462  12830000
         BC    01,ACG4                                            0463  12840000
*                   /* CHECK TO SEE IF MEMBERS ARE CONTINUED          * 12850000
*                   IF CARD(COL+1)=' '  /* CHECK FOR CONTINUATION     * 12860000
*                      THEN DO;         /* PROCESS CONTINUATION       * 12870000
         LA    @1,1                                               0464  12880000
         AR    @1,@9                                              0464  12890000
         LA    @A,BCARD(@1)                                       0464  12900000
         CLI   0(@A),C' '                                         0464  12910000
         BC    07,@9B2                                            0464  12920000
* AEK3:                                                                 12930000
*                           MCONTIN='1'B;/* CONTINUATION OF MEMBERS   * 12940000
AEK3     OI    OPTNMAP+1,B'00000100'                              0466  12950000
*                           CONTINUE='1'B;/* CONTINUATION OF CARD     * 12960000
         OI    CONTINUE,B'10000000'                               0467  12970000
*                           GOTO AAC1;  /* READ ANOTHER CARD          * 12980000
         BC    15,AAC1                                            0468  12990000
*                           END;                                        13000000
*                   /* CHECK IF COMMA IS IN 71 INDICATING CONTINUATION* 13010000
*                   IF COL=71           /* COL EQUAL 71, CONTINUE     * 13020000
*                      THEN GOTO AEK3;  /* SET UP CONTINUATION BITS   * 13030000
@9B2     CH    @9,@D9                                             0470  13040000
         BC    08,AEK3                                            0471  13050000
*                      ELSE DO;         /* COL NO EQUAL TO 71         * 13060000
*                           COL=COL+1;  /* BUMP COLUMN POINTER        * 13070000
         AH    @9,@D7                                             0473  13080000
*                           GOTO AEC1;  /* SAVE LEFT BOUNDARY OF MEM  * 13090000
         BC    15,AEC1                                            0474  13100000
*                           END;                                        13110000
*                   END;                                                13120000
*              ELSE NUMBER=NUMBER-1;    /* SET NUMBER EQUAL TO 32     * 13130000
@9B3     LH    @F,NUMBER                                          0477  13140000
         BCTR  @F,0                                               0477  13150000
         STH   @F,NUMBER                                          0477  13160000
*           COL=TCOL1;                  /* COL EQUALS LEFT BOUNDARY   * 13170000
@9B1     LH    @9,TCOL1                                           0478  13180000
*           ECARD(COL+1)='$';           /* MARK ERROR COLUMN          * 13190000
         LA    @1,1                                               0479  13200000
         AR    @1,@9                                              0479  13210000
         LA    @A,ECARD-1(@1)                                     0479  13220000
         MVI   0(@A),C'$'                                         0479  13230000
*           GEN (PUT   OUTDCB,ECARD);   /* PRINT ERROR MARKER         * 13240000
         PUT   OUTDCB,ECARD                                             13250000
         DS    0H                                                       13260000
*           ECARD(COL+1)=' ';           /* BLANK OUT ERROR MARKER     * 13270000
         LA    @1,1                                               0481  13280000
         AR    @1,@9                                              0481  13290000
         LA    @A,ECARD-1(@1)                                     0481  13300000
         MVI   0(@A),C' '                                         0481  13310000
*           ERRORS=ERRORS|'00000100'X;  /* WRITE: NO. MEM NAMES > 32  * 13320000
         OC    PARMLIST+32(4),@X47                                0482  13330000
* AEG2:                                                                 13340000
*           /* CHECK FOR END OF MEMBER OPERAND                        * 13350000
*           IF CARD(COL)=')'            /* COL EQUAL RIGHT PAREND?    * 13360000
*              THEN GOTO ACF4;          /* BUMP COLUMN POINTER        * 13370000
AEG2     LR    @1,@9                                              0483  13380000
         LA    @A,BCARD(@1)                                       0483  13390000
         CLI   0(@A),C')'                                         0483  13400000
         BC    08,ACF4                                            0484  13410000
*           /* CHECK FOR CONTINUATION OF MEMBER OPERAND               * 13420000
*           IF CARD(COL:COL+1)=', '     /* CONTINUATION SPECIFIED?    * 13430000
*              THEN DO;                 /* PROCESS CONTINUATION       * 13440000
         CLC   0(2,@A),@C83                                       0485  13450000
         BC    07,@9B0                                            0485  13460000
* AEH3:                                                                 13470000
*                   LIMIT='1'B;         /* INDICATE MEMBER LIMIT      * 13480000
AEH3     OI    OPTNMAP+1,B'00001100'                              0487  13490000
*                   MCONTIN='1'B;       /* INDICATE MEMBER CONTINUE   * 13500000
*                   GOTO AAC1;          /* READ ANOTHER CARD          * 13510000
         BC    15,AAC1                                            0489  13520000
*                   END;                                                13530000
*           COL=COL+1;                  /* BUMP COLUMN POINTER        * 13540000
@9B0     AH    @9,@D7                                             0491  13550000
*           /* CHECK IF COLUMN POINTER IS PAST COLUMN 71              * 13560000
*           IF COL^>71                  /* IS COL LESS THAN 71?       * 13570000
*              THEN GOTO AEG2;          /* PROCESS NEXT COLUMN        * 13580000
         CH    @9,@D9                                             0492  13590000
         BC    12,AEG2                                            0493  13600000
*           /* CHECK IF COLUMN POINTER IS POINTING TO A COMMA         * 13610000
*           IF CARD(71)=','             /* IS COL A COMMA?            * 13620000
*              THEN GOTO AEH3;          /* SET UP MEMBER CONTINUATION * 13630000
         CLI   BCARD+71,C','                                      0494  13640000
         BC    08,AEH3                                            0495  13650000
*              ELSE GOTO ABA2;          /* SET UP ERROR MARKER        * 13660000
         BC    15,ABA2                                            0496  13670000
*           END;                                                        13680000
*   /* CHECK IF COLUMN POINTER IS POINTING TO A RIGHT PAREND          * 13690000
*   IF CARD(COL)=')'                    /* IS COL A RIGHT PAREND?     * 13700000
*      THEN DO;                         /* PROCESS RIGHT PAREND       * 13710000
@9B5     LR    @1,@9                                              0498  13720000
         LA    @A,BCARD(@1)                                       0498  13730000
         CLI   0(@A),C')'                                         0498  13740000
         BC    07,@9AF                                            0498  13750000
*           LASTMEM='1'B;               /* TURN ON LAST MEMBER BIT    * 13760000
         OI    OPTNMAP+1,B'00010000'                              0500  13770000
*           TCOL2=COL-1;                /* SET RIGHT BOUNDARY         * 13780000
         LR    @F,@9                                              0501  13790000
         BCTR  @F,0                                               0501  13800000
         STH   @F,TCOL2                                           0501  13810000
*           COL=COL+1;                  /* BUMP COLUMN POINTER        * 13820000
         AH    @9,@D7                                             0502  13830000
*           GOTO AEF1;                  /* CHECK IF VALID MEMBER      * 13840000
         BC    15,AEF1                                            0503  13850000
*           END;                                                        13860000
*   /* CHECK IF COLUMN POINTER IS A BLANK                             * 13870000
*   IF CARD(COL)=' '                    /* IS COL A BLANK?            * 13880000
*      /* IF COL WAS A BLANK THAN SEE IF A LEFT PAREND WAS GIVEN      * 13890000
*      THEN IF LPAREN='0'B              /* WAS THERE A LEFT PAREND?   * 13900000
@9AF     LR    @1,@9                                              0505  13910000
         LA    @A,BCARD(@1)                                       0505  13920000
         CLI   0(@A),C' '                                         0505  13930000
         BC    07,@9AE                                            0505  13940000
*              THEN GOTO AEE1;          /* CHECK IF VALID MEMBER      * 13950000
         TM    LPAREN,B'10000000'                                 0506  13960000
         BC    08,AEE1                                            0507  13970000
*              ELSE GOTO ABA2;          /* SET UP ERROR MESSAGE       * 13980000
         BC    15,ABA2                                            0508  13990000
*   /* CHECK TO SEE IF COL IS NOT PAST A VALID ENDING COLUMN          * 14000000
*   IF COL>70                           /* IS COL PAST ENDING COL     * 14010000
*      THEN GOTO ACC2;                  /* SET UP ERROR MESSAGE       * 14020000
@9AE     CH    @9,@D17                                            0509  14030000
         BC    02,ACC2                                            0510  14040000
*      ELSE DO;                         /* NOT PAST 70 THEN PROCESS   * 14050000
*           COL=COL+1;                  /* BUMP COLUMN POINTER        * 14060000
         AH    @9,@D7                                             0512  14070000
*           GOTO AED1;                  /* CHECK FOR A COMMA          * 14080000
         BC    15,AED1                                            0513  14090000
*           END;                                                        14100000
* /******************************************************************** 14110000
* /* ENTRY POINT FOR END OF DATA ON INPUT DATASET-THIS IS AN ABNORMAL * 14120000
* /* OCCURANCE....................................           @ZA05200 * 14130000
* /******************************************************************** 14140000
* PDSEOD:                                                 /* @ZA05200 * 14150000
*   GEN;                                                  /* @ZA05200 * 14160000
PDSEOD   EQU   *                                                  0515  14170000
         BALR  15,0                                      /* @ZA05200 */ 14180000
         USING *,15                                      /* @ZA05200 */ 14190000
*********** I S S U E  E R R O R  M E S S A G E  *********************  14200000
         WTO   'HMB107I  I/O ERROR ON READ',ROUTCDE=11   /* @ZA05200 */ 14210000
         DROP  15                                        /* @ZA05200 */ 14220000
         DS    0H                                                       14230000
*     GO TO CLOSEIT;                                      /* @ZA05200 * 14240000
         BC    15,CLOSEIT                                         0516  14250000
* /******************************************************************** 14260000
* /* ENTRY POINT FOR SYNAD ROUTINE FOR INPUT DATA SET BEING PROCESSED * 14270000
* /******************************************************************** 14280000
* SYSIOPDS:                                                             14290000
*   GEN;                                                                14300000
SYSIOPDS EQU   *                                                  0517  14310000
         USING *,15                                      /* @ZA15060 */ 14320000
         TM    SWITCH,X'01'       /* IS IT A PDS ERRROR?    @ZA15060 */ 14330000
         BO    PARTDS             /* YES DON'T RESTORE REGS @ZA15060 */ 14340000
*********** I S S U E  E R R O R  M E S S A G E     ********@ZA15060    14350000
         WTO   'HMB107I  I/O ERROR ON READ',ROUTCDE=11   /* @ZA15060 */ 14360000
         DROP  15                                        /* @ZA15060 */ 14370000
         L     13,4(13)           /* RESTORE                @ZA15060 */ 14380000
         LM    @E,@C,12(@D)       /* REGISTERS              @ZA15060 */ 14390000
         B     FINISH                                    /* @ZA15060 */ 14400000
PARTDS   EQU   *                                         /* @ZA15060 */ 14410000
         USING *,15                                      /* @ZA15060 */ 14420000
********** I S S U E  E R R O R  M E S S A G E       **********         14430000
         WTO   'HMB109I  I/O ERROR ON READ',ROUTCDE=11                  14440000
         DROP  15                                                       14450000
         B     FINISH                                    /* @ZA15060 */ 14460000
         DS    0H               /* READING DIRECTORY IN CTL @ZA15060 */ 14470000
FINISH   EQU  *                                          /* @ZA15060 */ 14480000
         DS    0H                                                       14490000
*   ERRORS=ERRORS|'0100'X;                                              14500000
         OC    PARMLIST+32(2),@X85                                0518  14510000
*   R1=ADDR(PARMLIST);                                                  14520000
         LA    @1,PARMLIST                                        0519  14530000
*   CALL HMBLKERR;                                                      14540000
         L     @F,@V2              ADDRESS OF HMBLKERR            0520  14550000
         BALR  @E,@F                                              0520  14560000
*   GO TO CLOSEIT;                                       /*  @SA71638 * 14570000
         BC    15,CLOSEIT                                         0521  14580000
*   /****************************************************************** 14590000
*   /* PROCESSING OF CONTROL CARD OPTIONS BEGINS HERE                 * 14600000
*   /****************************************************************** 14610000
* PROCESS:                                                              14620000
*   GEN;                                                                14630000
PROCESS  EQU   *                                                  0522  14640000
         LA    R5,PODCB                 PUT DCB ADDRESS IN REGISTER     14650000
         USING IHADCB,R5                USE R5 AS BASE FOR DCB DSECT    14660000
         DS    0H                                                       14670000
*   /* CHECK TO SEE IF CONTROL CARD HAD A DDNAME GIVEN                * 14680000
*   IF DDN='1'B                         /* WAS A DDNAME GIVEN?        * 14690000
*      THEN DCBDDNAM=DDNAME;            /* PUT IN DCB DDNAME GIVEN    * 14700000
         TM    OPTNMAP,B'00000100'                                0523  14710000
         BC    12,@9AD                                            0523  14720000
         MVC   DCBDDNAM(8),PARMLIST+44                            0524  14730000
         BC    15,@9AC                                            0525  14740000
*      ELSE DO;                         /* PROCESS NO DDNAME GIVEN    * 14750000
*           DDNAME=SYSLIB;              /* USE SYSLIB AS DEFAULT      * 14760000
@9AD     MVC   PARMLIST+44(8),SYSLIB                              0526  14770000
*           DCBDDNAM=SYSLIB;            /* PUT SYSLIB IN DCB          * 14780000
         MVC   DCBDDNAM(8),SYSLIB                                 0527  14790000
*           END;                                                        14800000
*   /* CHECK FOR SEQUENTIAL OBJECT MODULE DATA SET OPERATION          * 14810000
*   IF PO='0'B                          /* IS IT A OBJ SEQUENTIAL       14820000
*                                         DATA SET?                   * 14830000
*      & LISTOBJ='1'B                   /* LISTOBJ OPTION?            * 14840000
*      THEN GOTO OBJSEQ;                /* PROCESS SEQ. DATA SET      * 14850000
@9AC     TM    OPTNMAP+1,B'00100000'                              0529  14860000
         BC    05,@9AB                                            0529  14870000
         TM    OPTNMAP,B'01000000'                                0529  14880000
         BC    03,OBJSEQ                                          0530  14890000
*   /****************************************************************** 14900000
*   /* OPEN PODCB, GET A WORK BUFFER AND ACQUIRE STORAGE DYNAMICALLY  * 14910000
*   /****************************************************************** 14920000
*   GEN;                                                                14930000
@9AA     EQU   *                                                  0531  14940000
@9AB     EQU   *                                                  0531  14950000
         OPEN PODCB,MF=(E,OPEN2)       OPEN PODCB                       14960000
         TM    DCBOFLGS,X'10'          SEE IF OPEN IS SUCCESSFUL        14970000
         BZ    NOOPEN                  SET UP ERROR MESSAGE             14980000
         GETBUF  PODCB,R6              GET WORK BUFFER                  14990000
         LTR   R6,R6                   SET CONDITION CODE               15000000
         BZ    ERRMSG                  ISSUE ERROR MESSAGE              15010000
         ST    R6,BUFF                 SAVE BUFFER ADDRESS              15020000
         DS    0H                                                       15030000
* GETMAIN:                                                              15040000
*   IF LISTLPA='1'B                      /* GETMAIN FOR LPA           * 15050000
*     THEN                               /* YES                       * 15060000
GETMAIN  TM    OPTNMAP,B'00010000'                                0532  15070000
         BC    12,@9A9                                            0532  15080000
*       DO;                                                             15090000
*          GEN(GETMAIN VU,LA=HILOLPA,A=STORAGE,SP=22,MF=(E,SPGET));     15100000
         GETMAIN VU,LA=HILOLPA,A=STORAGE,SP=22,MF=(E,SPGET)             15110000
         DS    0H                                                       15120000
         BC    15,@9A8                                            0536  15130000
*       END;                                                            15140000
*     ELSE                              /* NO,GETMAIN NOT FOR LPA     * 15150000
*       DO;                                                             15160000
@9A9     EQU   *                                                  0536  15170000
*          GEN(GETMAIN VU,LA=HIGHLOW,A=STORAGE,SP=22,MF=(E,SPGET));     15180000
         GETMAIN VU,LA=HIGHLOW,A=STORAGE,SP=22,MF=(E,SPGET)             15190000
         DS    0H                                                       15200000
*       END;                                                            15210000
*   AREAGET=MAINADDR;                   /* PUT GETMAIN ADDR IN PARMLST* 15220000
@9A8     MVC   PARMLIST+12(4),STORAGE                             0539  15230000
*   MAINADDR=MAINADDR + (MAINLEN-OVERHEAD);/* STARTING ADDR FOR FREEMAI 15240000
*                                         OF SUBPOOL 22               * 15250000
         L     @F,STORAGE+4                                       0540  15260000
         S     @F,OVERHEAD                                        0540  15270000
         A     @F,STORAGE                                         0540  15280000
         ST    @F,STORAGE                                         0540  15290000
*   GMLENGTH=MAINLEN - OVERHEAD;        /* ACTUAL LENGTH OF SP 22       15300000
*                                         AFTER FREEMAIN              * 15310000
         L     @F,STORAGE+4                                       0541  15320000
         S     @F,OVERHEAD                                        0541  15330000
         ST    @F,PARMLIST+16                                     0541  15340000
*   MAINLEN=OVERHEAD;                   /* LENGTH TO BE FREED         * 15350000
         MVC   STORAGE+4(4),OVERHEAD                              0542  15360000
*   GEN;                                                                15370000
         FREEMAIN  V,A=STORAGE,SP=22,MF=(E,SPFREE)  FREE UP 8K OF SP22  15380000
         DS    0H                                                       15390000
*   /* CHECK IF GETMAIN WAS FOR LINK PACK AREA OPTION                 * 15400000
*   IF LISTLPA='1'B                     /* LINK PACK AREA OPTION?     * 15410000
*      THEN GOTO LPACALL;               /* RETURN TO CALLER           * 15420000
         TM    OPTNMAP,B'00010000'                                0544  15430000
         BC    01,LPACALL                                         0545  15440000
*      ELSE GOTO TEST;                  /* CONTINUE PROCESSING        * 15450000
         BC    15,TEST                                            0546  15460000
* NOOPEN:                                                               15470000
*   /****************************************************************** 15480000
*   /* SET UP ERROR MESSAGE, DDNAME COULD NOT BE OPENED               * 15490000
*   /****************************************************************** 15500000
*   ERRORS=ERRORS|'0020'X;              /* TURN ON ERROR BIT AND GOTO * 15510000
NOOPEN   OC    PARMLIST+32(2),@X48                                0547  15520000
*   R1=ADDR(PARMLIST);                  /* SAVE PARMLIST ADDR TO PASS * 15530000
         LA    @1,PARMLIST                                        0548  15540000
*   CALL HMBLKERR;                      /* PROCESS ANY ERROR MSGS     * 15550000
         L     @F,@V2              ADDRESS OF HMBLKERR            0549  15560000
         BALR  @E,@F                                              0549  15570000
*   GOTO  AAB1;                         /* READ ANOTHER CARD          * 15580000
         BC    15,AAB1                                            0550  15590000
* TEST:                                                                 15600000
*   /* IS IT OBJECT MODULE PARTITIONED DATA SET                       * 15610000
*   IF SW4='1'B                         /* IS IT OBJPDS OPERATION?    * 15620000
*      THEN GOTO BLDCH;                 /* CHECK FOR MEMBER FOUND     * 15630000
TEST     TM    SWITCHES,B'00010000'                               0551  15640000
         BC    01,BLDCH                                           0552  15650000
*   /* CHECK IF IT IS A LOAD MODULE OPERATION                         * 15660000
*   IF LISTLOAD='1'B                    /* IS IT A LISTLOAD OPERATION?* 15670000
*      | LISTIDR='1'B                   /* IS IT A LISTIDR OPERATION? * 15680000
*      THEN DO;                         /* PROCESS LOAD MODULE        * 15690000
         TM    OPTNMAP,B'10000000'                                0553  15700000
         BC    01,@9A7                                            0553  15710000
         TM    OPTNMAP,B'00100000'                                0553  15720000
         BC    12,@9A6                                            0553  15730000
@9A7     EQU   *                                                  0554  15740000
*           GEN;                                                        15750000
         TM    DCBRECFM,X'C0'          IS IT UNDEFINED RECORD LENGTH    15760000
         BNO   NOLOAD                  SET UP ERROR MESSAGE             15770000
         TM    DCBDSORG,X'02'          IS IT PARTITIONED DATA SET       15780000
         BO    MEM                     ARE THERE MEMBERS GIVEN          15790000
         DS    0H                                                       15800000
* NOLOAD:                                                               15810000
*   /****************************************************************** 15820000
*   /* SET UP ERROR MESSAGE FOR INVALID LOAD MODULE                   * 15830000
*   /****************************************************************** 15840000
*           ERRORS=ERRORS|'0800'X;      /* TURN ON ERROR BIT          * 15850000
NOLOAD   OC    PARMLIST+32(2),@X86                                0556  15860000
* NOLOAD1:                                                   /* Y03207* 15870000
*           R1=ADDR(PARMLIST);          /* SAVE PARMLIST ADDR TO PASS * 15880000
NOLOAD1  LA    @1,PARMLIST                                        0557  15890000
*           CALL HMBLKERR;              /* PROCESS ANY ERROR MSGS     * 15900000
         L     @F,@V2              ADDRESS OF HMBLKERR            0558  15910000
         BALR  @E,@F                                              0558  15920000
*           GEN(FREEBUF PODCB,R6);      /* FREE WORK BUFFER           * 15930000
         FREEBUF PODCB,R6                                               15940000
         DS    0H                                                       15950000
*           GEN;                                                        15960000
         CLOSE  PODCB,MF=(E,CLOSR2)      CLOSE PODCB                    15970000
         DS    0H                                                       15980000
*           GEN(FREEPOOL PODCB);        /* FREE BUFFER STORAGE        * 15990000
         FREEPOOL PODCB                                                 16000000
         DS    0H                                                       16010000
*           GEN;                        /* ISSUE FREEMAIN FOR SP22    * 16020000
       FREEMAIN V,A=AREAGET,SP=22,MF=(E,SPFREE) FREE WORKING STORAGE    16030000
         DS    0H                                                       16040000
*           GOTO AAB1;                  /* PROCESS ANOTHER CARD       * 16050000
         BC    15,AAB1                                            0563  16060000
* MEM:                                                                  16070000
*           /* CHECK TO SEE IF A MEMBER OPTION WAS USED               * 16080000
*           IF MEMBER^='1'B             /* WAS MEMBER PARAMETER GIVEN?* 16090000
*              THEN DO;                 /* PROCESS DEFAULT OF ALL       16100000
MEM      TM    OPTNMAP,B'00000010'                                0564  16110000
         BC    01,@9A5                                            0564  16120000
*                                         MEMBERS                     * 16130000
*                   SW1='1'B;           /* NO TAKE DEFAULT OF ALL MEMS* 16140000
         OI    SWITCHES,B'10000000'                               0566  16150000
*                   GOTO SKIP;          /* READ A DIRECTORY ENTRY     * 16160000
         BC    15,SKIP                                            0567  16170000
*                   END;                                                16180000
* SORT:                                                                 16190000
*           NUMENTS=NUMBER;             /*NUM OF ENTRIES IN BLDLIST   * 16200000
@9A5     EQU   *                                                  0569  16210000
SORT     MVC   BLDLIST(2),NUMBER                                  0569  16220000
*           /********************************************************** 16230000
*           /* THE FOLLOWING CODE SORTS THE MEMBERS IN ALPHA-         * 16240000
*           /* NUMERIC SEQUENCE.                                      * 16250000
*           /********************************************************** 16260000
*           F=NUMBER;                   /* INIT F TO NO. OF MEMBERS   * 16270000
         MVC   F(2),NUMBER                                        0570  16280000
* SORT1:                                                                16290000
*           F=F/2;                      /* DIVIDE ARRAY IN HALF       * 16300000
SORT1    LH    @E,F                                               0571  16310000
         SRDA  @E,32                                              0571  16320000
         LA    @0,2                                               0571  16330000
         DR    @E,@0                                              0571  16340000
         STH   @F,F                                               0571  16350000
*           /* CHECK FOR END OF SORT OR IF 1 MEMBER TO SKIP SORT      * 16360000
*           IF F=0                      /* IS SORT FINISHED?          * 16370000
*              THEN GOTO BUILD;         /* ISSUE BLDL MACRO           * 16380000
         SR    @F,@F                                              0572  16390000
         CH    @F,F                                               0572  16400000
         BC    08,BUILD                                           0573  16410000
*           G=NUMBER-F;                 /* SET INDEX G                * 16420000
         LH    @F,NUMBER                                          0574  16430000
         SH    @F,F                                               0574  16440000
         STH   @F,G                                               0574  16450000
*           H=1;                        /* SET INDEX H TO 1           * 16460000
         LA    @F,1                                               0575  16470000
         STH   @F,H                                               0575  16480000
* SORT2:                                                                16490000
*           J=H;                        /* SET INDEX J                * 16500000
SORT2    MVC   J(2),H                                             0576  16510000
* SORT3:                                                                16520000
*           L=J+F;                      /* SET INDEX L                * 16530000
SORT3    LH    @F,F                                               0577  16540000
         AH    @F,J                                               0577  16550000
         STH   @F,L                                               0577  16560000
*           /* TEST WHICH IS GREATER OF TWO ARRAYS                    * 16570000
*           IF LISTNAME(J,1:8)<=LISTNAME(L,1:8) /* IS SECOND > FIRST  * 16580000
*               THEN GOTO SORT4;        /* DONT EXCHANGE MEMNAMES     * 16590000
         LR    @1,@F                                              0578  16600000
         MH    @1,@D24                                            0578  16610000
         LA    @E,BLDLIST-10(@1)                                  0578  16620000
         LH    @3,J                                               0578  16630000
         MH    @3,@D24                                            0578  16640000
         LA    @A,BLDLIST-10(@3)                                  0578  16650000
         CLC   0(8,@A),0(@E)                                      0578  16660000
         BC    12,SORT4                                           0579  16670000
*           WORKAREA=LISTNAME(J);       /* FIRST GOES INTO WORKAREA   * 16680000
         LA    @E,BLDLIST-10(@3)                                  0580  16690000
         MVC   WORKAREA(8),0(@E)                                  0580  16700000
*           LISTNAME(J)=LISTNAME(L);    /* SWAP POSITIONS IN ARRAY    * 16710000
         LA    @E,BLDLIST-10(@1)                                  0581  16720000
         MVC   0(8,@A),0(@E)                                      0581  16730000
*           LISTNAME(L)=WORKAREA;       /* PUT FIRST IN SECOND        * 16740000
         LA    @A,BLDLIST-10(@1)                                  0582  16750000
         MVC   0(8,@A),WORKAREA                                   0582  16760000
*           J=J-F;                      /* DECREMENT INDEX J BY F     * 16770000
         LH    @F,J                                               0583  16780000
         SH    @F,F                                               0583  16790000
         STH   @F,J                                               0583  16800000
*           /* TEST IF BEGINNING OF MEMNAME ARRAY HAS BEEN REACHED    * 16810000
*           IF J>=1                     /* IF BEGINNING NOT REACHED   * 16820000
*               THEN GOTO SORT3;        /* COMPARE MEMNAMES           * 16830000
         LA    @F,1                                               0584  16840000
         CH    @F,J                                               0584  16850000
         BC    12,SORT3                                           0585  16860000
* SORT4:                                                                16870000
*           H=H+1;                      /* BUMP INDEX H BY 1          * 16880000
SORT4    LA    @F,1                                               0586  16890000
         AH    @F,H                                               0586  16900000
         STH   @F,H                                               0586  16910000
*           /* TEST IF SCAN IS FINISHED                               * 16920000
*           IF H>G                      /* IS H GREATER THAN G        * 16930000
*               THEN GOTO SORT1;        /* GO TO POSSIBLE SCAN AGAIN  * 16940000
         LH    @F,G                                               0587  16950000
         CH    @F,H                                               0587  16960000
         BC    04,SORT1                                           0588  16970000
*               ELSE GOTO SORT2;        /* GO TO FINISH IT            * 16980000
         BC    15,SORT2                                           0589  16990000
* BUILD:                                                                17000000
*   /****************************************************************** 17010000
*   /* ISSUE BLDL MACRO ON MEMBERS IN BLDLIST                         * 17020000
*   /****************************************************************** 17030000
*           GEN;                                                        17040000
BUILD    EQU   *                                                  0590  17050000
         BLDL  PODCB,BLDLIST           CREATE BLDL LIST                 17060000
         POINT PODCB,DIRORG            REPOSITION R/W HEAD TO BEGIN     17070000
         DS    0H                                                       17080000
* BLDCH:                                                                17090000
*           /* CHECK TO SEE IF BLDL WAS ABLE TO FIND MEMBER           * 17100000
*           IF LISTTR(LISTCNT,3)='00'X  /* WAS MEMBER FOUND?          * 17110000
*              THEN DO;                 /* PROCESS MEMBER NOT FOUND   * 17120000
BLDCH    LH    @1,LISTCNT                                         0591  17130000
         MH    @1,@D24                                            0591  17140000
         LA    @A,BLDLIST(@1)                                     0591  17150000
         CLI   0(@A),X'00'                                        0591  17160000
         BC    07,@9A4                                            0591  17170000
*                   MEMNAME=LISTNAME(LISTCNT,1:8);/* STORE MEMBER     * 17180000
         LA    @E,BLDLIST-10(@1)                                  0593  17190000
         MVC   PARMLIST+36(8),0(@E)                               0593  17200000
*                   ERRORS=ERRORS | '0100'X;/* SET UP ERROR MESSAGE   * 17210000
         OC    PARMLIST+32(2),@X85                                0594  17220000
*                   R1=ADDR(PARMLIST);  /* STORE PARMLIST ADDRESS     * 17230000
         LA    @1,PARMLIST                                        0595  17240000
*                   CALL HMBLKERR;      /* PROCESS ERROR MESSAGE      * 17250000
         L     @F,@V2              ADDRESS OF HMBLKERR            0596  17260000
         BALR  @E,@F                                              0596  17270000
*                   GOTO OUT;           /* CHECK FOR ANYMORE MEMBERS  * 17280000
         BC    15,OUT                                             0597  17290000
*                   END;                                                17300000
*           /* CHECK TO SEE IF IT IS AN OBJECT PARTITIONED DATA SET   * 17310000
*           IF SW4='1'B                 /* IS IT OBJPDS OPERATION?    * 17320000
*              THEN GOTO OBJCALL;       /* PROCESS OBJECT PDS         * 17330000
@9A4     TM    SWITCHES,B'00010000'                               0599  17340000
         BC    01,OBJCALL                                         0600  17350000
*           GEN;                                                        17360000
SKIP     EQU   *                                                        17370000
         OI    SWITCH,X'01'      /* TURN ON SYNAD SWITCH     @ZA15060*/ 17380000
         READ  READIR,SF,PODCB,(R6),264,MF=E  READ A DIRECTORY BLOCK    17390000
         CHECK READIR                  WAS READ SUCCESSFUL?             17400000
         NI    SWITCH,X'FE'      /* TURN OFF SYNAD SWITCH    @ZA15060*/ 17410000
         DS    0H                                                       17420000
*           IF DCBLRECL^=264             /* GOOD DIR BLOCK?    Y03207 * 17430000
*              THEN DO;                  /* NO, ERROR          Y03207 * 17440000
         LA    @F,264                                             0602  17450000
         CH    @F,DCBLRECL                                        0602  17460000
         BC    08,@9A3                                            0602  17470000
*               ERRORS=ERRORS|'00008000'X; /* SET ERROR BIT    Y03207 * 17480000
         OC    PARMLIST+32(4),@X87                                0604  17490000
*               GOTO NOLOAD1;             /* TO ERROR PROCESS  Y03207 * 17500000
         BC    15,NOLOAD1                                         0605  17510000
*             END;                       /*                    Y03207 * 17520000
*           /* WAS THE DEFAULT OF ALL MEMBERS IN A LOAD MODULE PDS ON * 17530000
*           IF SW1='1'B                 /* DO I PROCESS ALL OF        * 17540000
*              THEN GOTO ALL;           /* DIRECTORY                  * 17550000
@9A3     TM    SWITCHES,B'10000000'                               0607  17560000
         BC    01,ALL                                             0608  17570000
* PDSREAD:  /* START PROCESSING DIRECTORY                             * 17580000
*           /* CHECK FOR LAST ACTIVE ENTRY IN DIRECTORY BLOCK         * 17590000
*           IF PDSNAME=ENDNAME          /*  LAST NAME IN DIRECTORY?   * 17600000
*              THEN GOTO ENDOFILE;      /* IS IT END OF DIRECTORY?    * 17610000
PDSREAD  CLC   10(8,@6),ENDNAME                                   0609  17620000
         BC    08,ENDOFILE                                        0610  17630000
*           TEMPCNT=INDICATR;           /* SAVE USER COUNT FIELD      * 17640000
         MVC   TEMPCNT(1),21(@6)                                  0611  17650000
*           GEN;                                                        17660000
         XC    USER(2),USER            ZERO OUT USER FIELD              17670000
         MVC   USER+1(1),TEMPCNT       MOVE IN USER COUNT FIELD         17680000
         NI    USER+1,B'00011111'      TURN OFF HIGH ORDER 3 BYTES      17690000
         DS    0H                                                       17700000
*           USER=(USER * 2)+12;         /* CALC LENGTH OF DIRC ENTRY  * 17710000
         LA    @E,2                                               0613  17720000
         MH    @E,USER                                            0613  17730000
         AH    @E,@D25                                            0613  17740000
         STH   @E,USER                                            0613  17750000
*           /* CHECK TO SEE IF TTR IN BLDL LIST MATCHES TTR IN DIRECTOR 17760000
*             ENTRY                                                   * 17770000
*           IF PDSTTR^=LISTTR(LISTCNT)  /* READ ANOTHER ENTRY IF        17780000
*                                         TTRS DO NOT MATCH           * 17790000
*              THEN GOTO BUMP;          /* PROCESS ANOTHER ENTRY      * 17800000
         LH    @1,LISTCNT                                         0614  17810000
         MH    @1,@D24                                            0614  17820000
         LA    @E,BLDLIST-2(@1)                                   0614  17830000
         CLC   18(3,@6),0(@E)                                     0614  17840000
         BC    07,BUMP                                            0615  17850000
*              ELSE DO;                 /* TTRS ARE EQUAL             * 17860000
*                   /* IS ENTRY IN DIRECTORY AN ALIAS                 * 17870000
*                   IF ALIAS='1'B       /* IS ENTRY AN ALIAS          * 17880000
*                      THEN DO;         /* PROCESS ALIAS              * 17890000
         TM    21(@6),B'10000000'                                 0617  17900000
         BC    12,@9A2                                            0617  17910000
*                           /* WAS MEMBER GIVEN AN ALIAS              * 17920000
*                           IF LISTNAME(LISTCNT)=PDSNAME/* ARE NAMES    17930000
*                                         EQUAL                       * 17940000
*                              THEN GOTO CHECK;/* SAVE DATA           * 17950000
         LA    @A,BLDLIST-10(@1)                                  0619  17960000
         CLC   0(8,@A),10(@6)                                     0619  17970000
         BC    08,CHECK                                           0620  17980000
*                              ELSE DO; /* PROCESS ALIAS IN ENTRY     * 17990000
*                                   SW5='1'B;/* TURN ON SAVE ALIAS      18000000
*                                         DATA SWITCH                 * 18010000
         OI    SWITCHES,B'00001000'                               0622  18020000
*                                   GOTO STORIT;/* SAVE ALIAS NAMES   * 18030000
         BC    15,STORIT                                          0623  18040000
*                                   END;                                18050000
*                           END;                                        18060000
*                      ELSE DO;         /* IF NOT ALIAS THEN MEMBER   * 18070000
*                           /* CHECK IF ENTRY GIVEN IS MEMBER AND       18080000
*                             BLDLIST NAME IS ALIAS                   * 18090000
*                           IF LISTNAME(LISTCNT)^=PDSNAME/* IS ENTRY    18100000
*                                         AN ALIAS                    * 18110000
*                              THEN DO; /* PROCESS MEMBER AS ALIAS    * 18120000
@9A2     LH    @1,LISTCNT                                         0627  18130000
         MH    @1,@D24                                            0627  18140000
         LA    @A,BLDLIST-10(@1)                                  0627  18150000
         CLC   0(8,@A),10(@6)                                     0627  18160000
         BC    08,@9A0                                            0627  18170000
*                                   ASTERISK(ALCNT,2)='*';/* MARK       18180000
*                                         MEMBER IN ALIAS LIST        * 18190000
         LH    @3,ALCNT                                           0629  18200000
         SLA   @3,1                                               0629  18210000
         LA    @A,ALIASLST+127(@3)                                0629  18220000
         MVI   0(@A),C'*'                                         0629  18230000
*                                   SW5='1'B;/*STORE IN ALIAS LIST    * 18240000
         OI    SWITCHES,B'00001000'                               0630  18250000
*                                   GOTO SAVATTS; /* GET MODULE         18260000
*                                         ATTRIBUTES                  * 18270000
         BC    15,SAVATTS                                         0631  18280000
*                                   END;                                18290000
*                           END;                                        18300000
@9A0     EQU   *                                                  0633  18310000
*                   END;                                                18320000
@9A1     EQU   *                                                  0634  18330000
* CHECK:                                                                18340000
*           HEADNAME=PDSNAME;           /* SAVE MEMBER NAME           * 18350000
CHECK    MVC   HEADNAME(8),10(@6)                                 0635  18360000
*           HEADEP(5:7)=EPADDR;         /* SAVE ENTRY POINT FOR MEMBER* 18370000
         MVC   HEADEP+4(3),37(@6)                                 0636  18380000
*           ATTRIBUT=MODATTR;           /* SAVE MODULE ATTRIBUTES     * 18390000
         MVC   ATTRIBUT(2),30(@6)                                 0637  18400000
*           /* CHECK TO SEE IF MEMBER BEING PROCESSED IS IN OVERLAY   * 18410000
*           IF TESTBIT(3)=(MODATTR&TESTBIT(3))/*  OVERLAY ATTRIBUTE?  * 18420000
*              THEN OVLYFLAG='1'B;      /* TURN ON OVERLAY BIT IN       18430000
         MVC   @CTEMP2(1),TESTBIT+2                               0638  18440000
         NC    @CTEMP2(1),30(@6)                                  0638  18450000
         CLC   @CTEMP2(1),TESTBIT+2                               0638  18460000
         BC    07,@99F                                            0638  18470000
*                                          PARMLIST                   * 18480000
         OI    PARMLIST+20,B'01000000'                            0639  18490000
*           MODSIZE(2:4)=MAINSTOR;      /* SAVE MODULE SIZE           * 18500000
@99F     MVC   PARMLIST+65(3),32(@6)                              0640  18510000
*           /* CHECK FOR NOT-EDITABLE ATTRIBUTE TO BYPASS HMBLKXRF    * 18520000
*           IF TESTBIT(5)=(MODATTR(2)&TESTBIT(5))/* NOT-EDITABLE?     * 18530000
*              THEN DO;                 /* PROCESS NOT-EDITABLE       * 18540000
         MVC   @CTEMP2(1),TESTBIT+4                               0641  18550000
         NC    @CTEMP2(1),31(@6)                                  0641  18560000
         CLC   @CTEMP2(1),TESTBIT+4                               0641  18570000
         BC    07,@99E                                            0641  18580000
*                   NOTEDIT='1'B;       /* INDICATE NOT-EDITABLE      * 18590000
         OI    PARMLIST+20,B'00100000'                            0643  18600000
*                   TXTTR=TTRTEXT;      /* SAVE 1ST TXT TTR           * 18610000
         MVC   PARMLIST+52(3),22(@6)                              0644  18620000
*                   TXTLEN=FSTXTLEN;    /* SAVE 1ST TXT LENGTH        * 18630000
         MVC   PARMLIST+55(2),35(@6)                              0645  18640000
*                   /* CHECK FOR RLD RECORDS                          * 18650000
*                   IF TESTBIT(4)=(MODATTR(2) & TESTBIT(4))             18660000
*                      THEN NORLD='1'B; /* INDICATE NO RLD RECORDS    * 18670000
         MVC   @CTEMP2(1),TESTBIT+3                               0646  18680000
         NC    @CTEMP2(1),31(@6)                                  0646  18690000
         CLC   @CTEMP2(1),TESTBIT+3                               0646  18700000
         BC    07,@99D                                            0646  18710000
         OI    PARMLIST+20,B'00010000'                            0647  18720000
         BC    15,@99C                                            0648  18730000
*                      ELSE NORLD='0'B; /* INDICATE RLD RECORDS       * 18740000
@99D     NI    PARMLIST+20,B'11101111'                            0648  18750000
*                   /* CHECK FOR LISTLOAD AND XREF OPTION             * 18760000
*                   IF XREF='0'B        /* XREF OPTION?               * 18770000
*                      & LISTLOAD='1'B  /* LISTLOAD OPTION?           * 18780000
*                      THEN DO;         /* XREF WAS GIVEN             * 18790000
@99C     TM    OPTNMAP+1,B'10000000'                              0649  18800000
         BC    05,@99B                                            0649  18810000
         TM    OPTNMAP,B'10000000'                                0649  18820000
         BC    12,@99A                                            0649  18830000
*                           SW3='1'B;   /* BYPASS XREF PROCESSING     * 18840000
         OI    SWITCHES,B'00100000'                               0651  18850000
*                           ERRORS=ERRORS | '04'X;/* SET UP MESSAGE   * 18860000
         OI    PARMLIST+32,X'04'                                  0652  18870000
*                           END;                                        18880000
*                   END;                                                18890000
@99A     EQU   *                                                  0654  18900000
@99B     EQU   *                                                  0654  18910000
* SAVATTS:                                                              18920000
*           /* CHECK WHAT LINKAGE EDITOR WAS USED TO PROCESS MODULE   * 18930000
*           IF TESTBIT(2)=(MODATTR(2)&TESTBIT(2))/* ZERO ORIGIN?      * 18940000
*              THEN DO;                 /* PROCESS ZERO ORIGIN FURTHER* 18950000
@99E     EQU   *                                                  0655  18960000
SAVATTS  MVC   @CTEMP2(1),TESTBIT+1                               0655  18970000
         NC    @CTEMP2(1),31(@6)                                  0655  18980000
         CLC   @CTEMP2(1),TESTBIT+1                               0655  18990000
         BC    07,@999                                            0655  19000000
*                   /* CHECK FOR AOS LINKAGE EDITOR PROCESSING        * 19010000
*                   IF AOSLKED='1'B     /* AOS LINKAGE EDITOR?        * 19020000
*                      THEN DO;         /* INDICATE AOS LINKAGE EDITOR* 19030000
         TM    40(@6),B'10000000'                                 0657  19040000
         BC    12,@998                                            0657  19050000
*                           SW8='1'B;   /* AOS LINKAGE EDITOR USED    * 19060000
         OI    SWITCHES,B'00000001'                               0659  19070000
*                           /* CHECK FOR PAGE ALIGNMENT               * 19080000
*                           IF PAGALGN='1'B/* PAGE ALIGNMENT NEEDED?  * 19090000
*                              THEN SW9='1'B;/* INDICATE PAGE ALIGN.  * 19100000
         TM    40(@6),B'00100000'                                 0660  19110000
         BC    12,@997                                            0660  19120000
         OI    SWITCHES+1,B'10000000'                             0661  19130000
*                           /* APF DATA PRESENT?                      * 19140000
*                           IF APFBIT='1'B/* APF DATA?                * 19150000
*                              THEN SW10='1'B;/* INDICATE APF DATA    * 19160000
@997     TM    40(@6),B'00001000'                                 0662  19170000
         BC    12,@996                                            0662  19180000
         OI    SWITCHES+1,B'01000000'                             0663  19190000
*                           END;                                        19200000
@996     EQU   *                                                  0664  19210000
*                   END;                                                19220000
@998     EQU   *                                                  0665  19230000
*           /* CHECK FOR LENGTH OF PDS ENTRY IF IT IS SCATTER         * 19240000
*           IF TESTBIT(6)=(MODATTR&TESTBIT(6))/* SCATTER ATTRIBUTE?   * 19250000
*              THEN DO;                 /* PROCESS SCATTER DATA       * 19260000
@999     MVC   @CTEMP2(1),TESTBIT+5                               0666  19270000
         NC    @CTEMP2(1),30(@6)                                  0666  19280000
         CLC   @CTEMP2(1),TESTBIT+5                               0666  19290000
         BC    07,@995                                            0666  19300000
*                   SCATLEN=SCATDATA;   /* SAVE SCATTER DATA FOR        19310000
*                                         HMBLKLDM                    * 19320000
         MVC   PARMLIST+28(4),43(@6)                              0668  19330000
*                   /* CHECK IF SCATTER, REENTRANT  & ALIAS           * 19340000
*                   IF TESTBIT(1)=(MODATTR&TESTBIT(1))/* REENTRANT?   * 19350000
*                      & ALIAS='1'B     /* IS IT AN ALIAS?            * 19360000
*                      THEN GOTO SAVLEN;/* GET PDS ENTRY LENGTH       * 19370000
         MVC   @CTEMP2(1),TESTBIT                                 0669  19380000
         NC    @CTEMP2(1),30(@6)                                  0669  19390000
         CLC   @CTEMP2(1),TESTBIT                                 0669  19400000
         BC    07,@994                                            0669  19410000
         TM    21(@6),B'10000000'                                 0669  19420000
         BC    03,SAVLEN                                          0670  19430000
*                   /* CHECK IF IT IS SCATTER,REUSABLE AND AN ALIAS   * 19440000
*                   IF TESTBIT(2)=(MODATTR&TESTBIT(2))/* REUSABLE?    * 19450000
*                      & ALIAS='1'B       /* AND AN ALIAS?            * 19460000
*                      THEN DO;         /* PROCESS SCATTER WITH ALIAS * 19470000
@993     EQU   *                                                  0671  19480000
@994     MVC   @CTEMP2(1),TESTBIT+1                               0671  19490000
         NC    @CTEMP2(1),30(@6)                                  0671  19500000
         CLC   @CTEMP2(1),TESTBIT+1                               0671  19510000
         BC    07,@992                                            0671  19520000
         TM    21(@6),B'10000000'                                 0671  19530000
         BC    12,@991                                            0671  19540000
* SAVLEN:                                                               19550000
*                           ACCUM=52;   /* LENGTH OF PDS ENTRY        * 19560000
SAVLEN   LA    @F,52                                              0673  19570000
         STH   @F,ACCUM                                           0673  19580000
*                           GOTO SSITEST;/* CHECK FOR SSI DATA        * 19590000
         BC    15,SSITEST                                         0674  19600000
*                           END;                                        19610000
*                      ELSE DO;         /* PROCESS SCATTER ONLY       * 19620000
@991     EQU   *                                                  0676  19630000
*                      /* CHECK IF AOS CREATED                        * 19640000
*                      IF AOSLKED='1'B  /* AOS-EDITOR USED?           * 19650000
*                         & ALIAS='1'B  /* ALIAS?                     * 19660000
*                         THEN ACCUM=52;/* YES- ALIAS                 * 19670000
@992     TM    40(@6),B'10000000'                                 0677  19680000
         BC    12,@98F                                            0677  19690000
         TM    21(@6),B'10000000'                                 0677  19700000
         BC    12,@98E                                            0677  19710000
         LA    @F,52                                              0678  19720000
         STH   @F,ACCUM                                           0678  19730000
*                      IF AOSLKED='1'B  /* AOS-EDITOR USED?           * 19740000
*                         & SSIBIT^='1'B/* NO SSI DATA?               * 19750000
*                         THEN ACCUM=41;/* AOS LENGTH                 * 19760000
@98E     EQU   *                                                  0679  19770000
@98F     TM    40(@6),B'10000000'                                 0679  19780000
         BC    12,@98D                                            0679  19790000
         TM    40(@6),B'00010000'                                 0679  19800000
         BC    01,@98C                                            0679  19810000
         LA    @F,41                                              0680  19820000
         STH   @F,ACCUM                                           0680  19830000
         BC    15,@98B                                            0681  19840000
*                         ELSE ACCUM=42;/* OS LENGTH                  * 19850000
@98C     EQU   *                                                  0681  19860000
@98D     LA    @F,42                                              0681  19870000
         STH   @F,ACCUM                                           0681  19880000
*                           GOTO SSITEST;/* CHECK FOR SSI DATA        * 19890000
         BC    15,SSITEST                                         0682  19900000
*                           END;                                        19910000
*                   END;                                                19920000
@990     EQU   *                                                  0684  19930000
*           /* CHECK IF ENTRY IS REENTRANT  AND ALIAS                 * 19940000
*           IF TESTBIT(1)=(MODATTR&TESTBIT(1))/* IS IT REENTRANT?     * 19950000
*              & ALIAS='1'B             /* IS IT AN ALIAS?            * 19960000
*              THEN DO;                 /* PROCESS REUSABLE ALIAS     * 19970000
@995     MVC   @CTEMP2(1),TESTBIT                                 0685  19980000
         NC    @CTEMP2(1),30(@6)                                  0685  19990000
         CLC   @CTEMP2(1),TESTBIT                                 0685  20000000
         BC    07,@98A                                            0685  20010000
         TM    21(@6),B'10000000'                                 0685  20020000
         BC    12,@989                                            0685  20030000
*                   ACCUM=44;           /* GET PDS ENTRY LENGTH       * 20040000
         LA    @F,44                                              0687  20050000
         STH   @F,ACCUM                                           0687  20060000
*                   GOTO SSITEST;       /* CHECK FOR SSI DATA         * 20070000
         BC    15,SSITEST                                         0688  20080000
*                   END;                                                20090000
*           /* CHECK IF IT IS REUSABLE AND AN ALIAS                   * 20100000
*           IF TESTBIT(2)=(MODATTR&TESTBIT(2))/* IS IT REUSABLE?      * 20110000
*              & ALIAS='1'B             /* AND AN ALIAS?              * 20120000
*              THEN ACCUM=44;           /* LENGTH OF PDS ENTRY        * 20130000
@989     EQU   *                                                  0690  20140000
@98A     MVC   @CTEMP2(1),TESTBIT+1                               0690  20150000
         NC    @CTEMP2(1),30(@6)                                  0690  20160000
         CLC   @CTEMP2(1),TESTBIT+1                               0690  20170000
         BC    07,@988                                            0690  20180000
         TM    21(@6),B'10000000'                                 0690  20190000
         BC    12,@987                                            0690  20200000
         LA    @F,44                                              0691  20210000
         STH   @F,ACCUM                                           0691  20220000
         BC    15,@986                                            0692  20230000
*              /* CHECK FOR AOS CREATION                              * 20240000
*             ELSE DO;                                                  20250000
@987     EQU   *                                                  0692  20260000
*                  IF AOSLKED='1'B      /* AOS-EDITOR USED?           * 20270000
*                      & ALIAS='1'B     /* ALIAS?                     * 20280000
*                      THEN ACCUM=44;   /* AOS LENGTH                 * 20290000
@988     TM    40(@6),B'10000000'                                 0693  20300000
         BC    12,@985                                            0693  20310000
         TM    21(@6),B'10000000'                                 0693  20320000
         BC    12,@984                                            0693  20330000
         LA    @F,44                                              0694  20340000
         STH   @F,ACCUM                                           0694  20350000
*                  IF AOSLKED='1'B      /* AOS EDITOR USED?           * 20360000
*                     & SSIBIT^='1'B    /* NO SSI DATA?               * 20370000
*                     THEN ACCUM=33;    /* AOS LENGTH                 * 20380000
@984     EQU   *                                                  0695  20390000
@985     TM    40(@6),B'10000000'                                 0695  20400000
         BC    12,@983                                            0695  20410000
         TM    40(@6),B'00010000'                                 0695  20420000
         BC    01,@982                                            0695  20430000
         LA    @F,33                                              0696  20440000
         STH   @F,ACCUM                                           0696  20450000
         BC    15,@981                                            0697  20460000
*                     ELSE ACCUM=34;    /* OS LENGTH                  * 20470000
@982     EQU   *                                                  0697  20480000
@983     LA    @F,34                                              0697  20490000
         STH   @F,ACCUM                                           0697  20500000
*                  IF ALIAS='1'B        /* ALIAS?              OY09530* 20510000
*                     THEN ACCUM=44;    /* AOS LENGTH          OY09530* 20520000
@981     TM    21(@6),B'10000000'                                 0698  20530000
         BC    12,@980                                            0698  20540000
         LA    @F,44                                              0699  20550000
         STH   @F,ACCUM                                           0699  20560000
*                  END;                                                 20570000
@980     EQU   *                                                  0700  20580000
* SSITEST:                                                              20590000
*           /* CHECK FOR SSI DATA BY COMPARING LENGTH CALCULATED WITH   20600000
*             USER DATA COUNT WITH LENGTH FOUND BY CHECKING ATTRIBUTES* 20610000
*           /* CHECK FOR AOS LOAD MODULE                              * 20620000
*           IF SW8='1'B                 /* AOS LOAD MODULE?           * 20630000
*              /* CHECK FOR SSI CODE                                  * 20640000
*              THEN IF SSIBIT='1'B      /* SSI DATA PRESENT?          * 20650000
@986     EQU   *                                                  0701  20660000
SSITEST  TM    SWITCHES,B'00000001'                               0701  20670000
         BC    12,@97F                                            0701  20680000
*                      THEN GOTO COLLECT;/* PROCESS SSI               * 20690000
         TM    40(@6),B'00010000'                                 0702  20700000
         BC    01,COLLECT                                         0703  20710000
*                      /* CHECK IF APF DATA PRESENT                   * 20720000
*                      ELSE IF SW10='1'B/* APF DATA PRESENT?          * 20730000
*                              THEN DO; /* START PROCESSING IT        * 20740000
         TM    SWITCHES+1,B'01000000'                             0704  20750000
         BC    12,@97E                                            0704  20760000
*                                   ACCUM=ACCUM+10;/* ADJUST PTR FOR    20770000
*                                                    DIRECTORY KEY    * 20780000
         LA    @F,10                                              0706  20790000
         AH    @F,ACCUM                                           0706  20800000
         STH   @F,ACCUM                                           0706  20810000
*                                   R6=R6+ACCUM;/* POINT TO APF LENGTH* 20820000
         AH    @6,ACCUM                                           0707  20830000
*                                   GOTO GETAPF;/* CONVERT TO PRINT   * 20840000
         BC    15,GETAPF                                          0708  20850000
*                                   END;                                20860000
*           IF USER > ACCUM             /* IS SSI DATA IN ENTRY       * 20870000
*              THEN DO;                 /* GET SSI DATA               * 20880000
@97E     EQU   *                                                  0710  20890000
@97F     LH    @F,ACCUM                                           0710  20900000
         CH    @F,USER                                            0710  20910000
         BC    10,@97D                                            0710  20920000
* COLLECT:                                                              20930000
*                   SW6='1'B;           /* TURN ON SSI SWITCH         * 20940000
COLLECT  OI    SWITCHES,B'00000100'                               0712  20950000
*                   ACCUM=ACCUM+10;     /* ADJUST POINTER             * 20960000
         LA    @F,10                                              0713  20970000
         AH    @F,ACCUM                                           0713  20980000
         STH   @F,ACCUM                                           0713  20990000
*                   R6=R6+ACCUM;        /* SET UP POINTER TO SSI DATA * 21000000
         AH    @6,ACCUM                                           0714  21010000
*                   SSI(5:8)=R6->SSIDATA;/* SAVE SSI DATA             * 21020000
         MVC   SSI+4(4),0(@6)                                     0715  21030000
*                   /* CHECK FOR APF DATA                             * 21040000
*                   IF SW8='1'B         /* AOS LOAD MODULE?           * 21050000
*                      & SW10='1'B      /* APF DATA PRESENT?          * 21060000
*                      THEN DO;         /* PROCESS APF DATA           * 21070000
         TM    SWITCHES,B'00000001'                               0716  21080000
         BC    12,@97C                                            0716  21090000
         TM    SWITCHES+1,B'01000000'                             0716  21100000
         BC    12,@97B                                            0716  21110000
*                           R6=R6+4;    /* POINT TO APF LENGTH IF THER* 21120000
         AH    @6,@D14                                            0718  21130000
* GETAPF:                                                               21140000
*                           WORKAREA=' ';/* BLANK OUT WORKAREA        * 21150000
GETAPF   MVI   WORKAREA,C' '                                      0719  21160000
         MVC   WORKAREA+1(7),WORKAREA                             0719  21170000
*                           WORKAREA(7)=APFCODE;/* GET APF CODE       * 21180000
         MVC   WORKAREA+6(1),1(@6)                                0720  21190000
*                           GENERATE;                                   21200000
         UNPK  HEXDATA(9),WORKAREA+6(2) UNPACK APF CODE                 21210000
         NC    HEXDATA(8),ZONEOFF                                       21220000
         TR    HEXDATA(8),HEXCHAR      TRANSLATE TO EBCIDIC             21230000
         DS    0H                                                       21240000
*                           SW10='1'B;  /* TURN ON APF INDICATOR      * 21250000
         OI    SWITCHES+1,B'01000000'                             0722  21260000
*                           APFDATA=HEXDATA;/* SAVE APF DATA TO PRINT * 21270000
         MVC   APFDATA(8),HEXDATA                                 0723  21280000
*                           IF SW6='1'B /* SSI DATA PRESENT?          * 21290000
*                              THEN R6=R6-4;/* MINUS SSI LENGTH       * 21300000
         TM    SWITCHES,B'00000100'                               0724  21310000
         BC    12,@97A                                            0724  21320000
         SH    @6,@D14                                            0725  21330000
*                           END;                                        21340000
@97A     EQU   *                                                  0726  21350000
*                   R6=R6-ACCUM;        /* RESET R6 ADDRESS TO BUFF   * 21360000
@97B     EQU   *                                                  0727  21370000
@97C     SH    @6,ACCUM                                           0727  21380000
*                   END;                                                21390000
* STORIT:                                                               21400000
*           /* CHECK TO SEE IF AN ENTRY SHOULD BE MADE TO ALIAS LIST  * 21410000
*           IF SW5='1'B                 /* SHOULD PDSNAME BE PUT IN     21420000
*                                         ALIASLST?                   * 21430000
*              THEN DO;                 /* ENTER ALIAS DATA           * 21440000
@97D     EQU   *                                                  0729  21450000
STORIT   TM    SWITCHES,B'00001000'                               0729  21460000
         BC    12,@979                                            0729  21470000
*                   ALNAME(ALCNT)=PDSNAME;/* SAVE ALIAS NAME          * 21480000
         LH    @1,ALCNT                                           0731  21490000
         SLA   @1,3                                               0731  21500000
         LA    @A,ALIASLST-8(@1)                                  0731  21510000
         MVC   0(8,@A),10(@6)                                     0731  21520000
*                   ALEPADDR(ALCNT,2:4)=EPADDR;/* SAVE ALIAS ENTRY      21530000
*                                         ADDRESS                     * 21540000
         LA    @A,ALIASLST+153(@1)                                0732  21550000
         MVC   0(3,@A),37(@6)                                     0732  21560000
*                   ALCNT=ALCNT+1;      /* POINT TO NEXT  AVAILABLE     21570000
*                                         ENTRY IN ARRAY              * 21580000
         LA    @F,1                                               0733  21590000
         AH    @F,ALCNT                                           0733  21600000
         STH   @F,ALCNT                                           0733  21610000
*                   SW5='0'B;           /* TURN OFF SWITCH 5          * 21620000
         NI    SWITCHES,B'11110111'                               0734  21630000
*                   END;                                                21640000
* BUMP:                                                                 21650000
*           /* CHECK FOR END OF DIRECTORY BLOCK                       * 21660000
*           IF KEYNAME=PDSNAME          /* IS IT LAST ENTRY?          * 21670000
*              THEN DO;                 /* REPOSITION DIRECTORY FOR     21680000
@979     EQU   *                                                  0736  21690000
BUMP     L     @1,PARMLIST+24                                     0736  21700000
         CLC   0(8,@1),10(@6)                                     0736  21710000
         BC    07,@978                                            0736  21720000
*                                         ANOTHER READ                * 21730000
*                   R6=BUFF;            /* RESET DIRECTORY POINTER    * 21740000
         L     @6,PARMLIST+24                                     0738  21750000
*                   GOTO SKIP;          /* READ ANOTHER DIRECTORY BLK * 21760000
         BC    15,SKIP                                            0739  21770000
*                   END;                                                21780000
*              ELSE R6=R6+USER;         /* POSITION DIRECTORY POINTER * 21790000
@978     AH    @6,USER                                            0741  21800000
*           GOTO PDSREAD;               /* PROCESS ANOTHER ENTRY      * 21810000
         BC    15,PDSREAD                                         0742  21820000
*           END;                                                        21830000
*   /****************************************************************** 21840000
*   /*  B E G I N   L I S T O B J  O P E R A T I O N                  * 21850000
*   /****************************************************************** 21860000
*   /* CHECK TO SEE IF OBJECT MODULE DATA SET IS PARTITIONED          * 21870000
*     IF PO='1'B                        /* IS IT A PARTITIONED DATA   * 21880000
*        THEN GOTO OBJPDS;              /* SET                        * 21890000
@9A6     TM    OPTNMAP+1,B'00100000'                              0744  21900000
         BC    01,OBJPDS                                          0745  21910000
* OBJSEQ:                                                               21920000
*     DCBDSORG='40'X;                   /* MAKE PODCB SEQUENTIAL      * 21930000
OBJSEQ   MVI   DCBDSORG,X'40'                                     0746  21940000
*     GEN;                        /* ISSUE OPEN AND GETBUF      */      21950000
         NI    DCBMACR1,X'FF'-DCBMRPT1 TURN OFF POINT  OPTION    YM5740 21960000
*                                      BIT IN DCB MACRF FIELD    YM5740 21970000
         OPEN  PODCB,MF=(E,OPEN2)      OPEN PODCB SEQUENTIAL            21980000
         TM    DCBOFLGS,X'10'          CHECK FOR SUCCESSFUL OPEN        21990000
         BZ    NOOPEN                  ISSUE ERROR MESSAGE              22000000
         GETBUF PODCB,R6               GET A WORK BUFFER                22010000
         LTR   R6,R6                   SET CONDITION CODE ON            22020000
         BZ    ERRMSG                  SET UP ERROR MESSAGE             22030000
         ST    R6,BUFF                 SAVE BUFFER ADDRESS              22040000
         DS    0H                                                       22050000
*     BLKCNT=(DCBBLKSI/DCBLRECL);       /* GET BLOCKING FACTOR        * 22060000
         LH    @E,DCBBLKSI                                        0748  22070000
         SRDA  @E,32                                              0748  22080000
         LH    @0,DCBLRECL                                        0748  22090000
         DR    @E,@0                                              0748  22100000
         STH   @F,PARMLIST+22                                     0748  22110000
*     DCBKEYLE='00'X;                   /* ZERO OUT KEY LENGTH        * 22120000
         MVI   DCBKEYLE,X'00'                                     0749  22130000
*   /* CHECK IF LOGICAL RECORD LENGTH IS 80                     M1204 * 22140000
*     IF DCBLRECL^=80                   /* IS LRECL = 80?       M1204 * 22150000
*        THEN DO;                       /* NO                   M1204 * 22160000
         LA    @F,80                                              0750  22170000
         CH    @F,DCBLRECL                                        0750  22180000
         BC    08,@976                                            0750  22190000
*             ERRORS=ERRORS|'0040'X;    /* TURN ON ERROR BIT    M1204 * 22200000
         OC    PARMLIST+32(2),@X90                                0752  22210000
*             R1=ADDR(PARMLIST);        /* PASS PARMLIST ADDR   M1204 * 22220000
         LA    @1,PARMLIST                                        0753  22230000
*             CALL HMBLKERR;            /* PROCESS ANY ERR MSGS M1204 * 22240000
         L     @F,@V2              ADDRESS OF HMBLKERR            0754  22250000
         BALR  @E,@F                                              0754  22260000
*             GOTO CLOSEIT;             /* TERMINATE THIS CARD  M1204 * 22270000
         BC    15,CLOSEIT                                         0755  22280000
*             END;                                                      22290000
*     R1=ADDR(PARMLIST);                /* SET UP PARMLIST TO PASS    * 22300000
@976     LA    @1,PARMLIST                                        0757  22310000
*     CALL HMBLKOBJ;                    /* PROCESS OBJECT MODULE      * 22320000
         L     @F,@V3              ADDRESS OF HMBLKOBJ            0758  22330000
         BALR  @E,@F                                              0758  22340000
*     R1=ADDR(PARMLIST);                /* SET UP PARMLIST TO PASS    * 22350000
         LA    @1,PARMLIST                                        0759  22360000
*     CALL HMBLKERR;                    /* PROCESS ANY ERRORS         * 22370000
         L     @F,@V2              ADDRESS OF HMBLKERR            0760  22380000
         BALR  @E,@F                                              0760  22390000
*     DCBKEYLE='08'X;                   /* RESET KEY LENGTH           * 22400000
         MVI   DCBKEYLE,X'08'                                     0761  22410000
*     GOTO CLOSEIT;                     /* CLOSE DCB                  * 22420000
         BC    15,CLOSEIT                                         0762  22430000
* ALL:                                                                  22440000
*   /****************************************************************** 22450000
*   /* PROCESS DEFAULT OF ALL MEMBERS ON A LISTLOAD OR LISTIDR OPTION * 22460000
*   /****************************************************************** 22470000
*   GEN;                                                                22480000
ALL      EQU   *                                                  0763  22490000
         NOTE  PODCB                   GET ADDR OF MEMBER               22500000
         ST    1,ALLADDR               SAVE TTR OF LAST MEM PROCESSED   22510000
         DS    0H                                                       22520000
*   LISTCNT=0;                          /* INIT. POINTER TO MEMBER      22530000
*                                          IN LIST BEING PROCESSED    * 22540000
         SR    @F,@F                                              0764  22550000
         STH   @F,LISTCNT                                         0764  22560000
*   NUMENTS=0;                          /* INIT. NUMBER OF ENTRIES    * 22570000
         STH   @F,BLDLIST                                         0765  22580000
* GETMEMS:                                                              22590000
*    TEMPCNT=INDICATR;                  /* SAVE USER COUNT FIELD      * 22600000
GETMEMS  MVC   TEMPCNT(1),21(@6)                                  0766  22610000
*    GEN;                                                               22620000
         XC    USER(2),USER            ZERO OUT USER FIELD              22630000
         MVC   USER+1(1),TEMPCNT       MOVE IN USER COUNT FIELD         22640000
         NI    USER+1,B'00011111'      TURN OFF HIGH ORDER 3 BYTES      22650000
         DS    0H                                                       22660000
*   USER=(USER * 2)+12;                 /* CALC LENGTH OF DIRC ENTRY  * 22670000
         LA    @E,2                                               0768  22680000
         MH    @E,USER                                            0768  22690000
         AH    @E,@D25                                            0768  22700000
         STH   @E,USER                                            0768  22710000
*   /* CHECK FOR MEMBER AND IF LAST ENTRY IN DIRECTORY BLOCK          * 22720000
*   IF ALIAS='0'B &                     /* IS IT A MEMBER?            * 22730000
*      PDSNAME^= ENDNAME                /* NOT END OF DIRECTORY       * 22740000
*      THEN DO;                         /* PROCESS MEMBER             * 22750000
         TM    21(@6),B'10000000'                                 0769  22760000
         BC    05,@975                                            0769  22770000
         CLC   10(8,@6),ENDNAME                                   0769  22780000
         BC    08,@974                                            0769  22790000
*           /* CHECK FOR FIRST ENTRY IN BLDLIST                       * 22800000
*           IF NUMENTS=0                /* ARE THERE ENTRIES IN LIST? * 22810000
*              THEN LISTCNT=LISTCNT+1;  /* POINT INDEX TO FIRST ENTRY * 22820000
         SR    @F,@F                                              0771  22830000
         CH    @F,BLDLIST                                         0771  22840000
         BC    07,@973                                            0771  22850000
         LA    @F,1                                               0772  22860000
         AH    @F,LISTCNT                                         0772  22870000
         STH   @F,LISTCNT                                         0772  22880000
*           NUMENTS=NUMENTS+1;          /* KEEP COUNT OF TOTAL AMOUNT   22890000
*                                         OF ENTRIES IN BLDLIST       * 22900000
@973     LA    @F,1                                               0773  22910000
         AH    @F,BLDLIST                                         0773  22920000
         STH   @F,BLDLIST                                         0773  22930000
*           LISTNAME(NUMENTS)=PDSNAME;  /* SAVE MEMBER NAME           * 22940000
         LR    @1,@F                                              0774  22950000
         MH    @1,@D24                                            0774  22960000
         LA    @A,BLDLIST-10(@1)                                  0774  22970000
         MVC   0(8,@A),10(@6)                                     0774  22980000
*           END;                                                        22990000
*   /* CHECK IF IT IS LAST ENTRY IN DIRECTORY BLOCK                   * 23000000
*   IF KEYNAME=PDSNAME                  /* IS IT LAST ENTRY IN BLOCK  * 23010000
*      /* CHECK IF THERE WERE ANY ENTRIES IN BLDLIST                  * 23020000
*      THEN IF NUMENTS=0                /* WAS A MEMBER ENTERED IN      23030000
@974     EQU   *                                                  0776  23040000
@975     L     @1,PARMLIST+24                                     0776  23050000
         CLC   0(8,@1),10(@6)                                     0776  23060000
         BC    07,@972                                            0776  23070000
*                                         BLDLIST?                    * 23080000
*              THEN DO;                 /* PROCESS NO ENTRIES         * 23090000
         SR    @F,@F                                              0777  23100000
         CH    @F,BLDLIST                                         0777  23110000
         BC    07,@971                                            0777  23120000
*                   /* CHECK FOR END OF ACTIVE DIRECTORY BLOCKS       * 23130000
*                   IF KEYNAME=ENDNAME  /* END OF ACTIVE DIRECTORY?   * 23140000
*                      THEN GOTO CLOSEIT;/* CLOSE DCB                 * 23150000
         CLC   0(8,@1),ENDNAME                                    0779  23160000
         BC    08,CLOSEIT                                         0780  23170000
*                   R6=BUFF;            /* RESET DIRECTORY POINTER    * 23180000
         L     @6,PARMLIST+24                                     0781  23190000
*                   ALLADDR(4)='01'X;   /* POINT TO NEXT DIRECTORY BLK* 23200000
         MVI   ALLADDR+3,X'01'                                    0782  23210000
*                   GEN(POINT  PODCB,ALLADDR    POSITION R/W HEAD);     23220000
         POINT  PODCB,ALLADDR    POSITION R/W HEAD                      23230000
         DS    0H                                                       23240000
*                   GOTO SKIP;          /* READ A DIRECTORY BLOCK     * 23250000
         BC    15,SKIP                                            0784  23260000
*                   END;                                                23270000
*              ELSE DO;                 /* MEMBERS WERE ENTERED       * 23280000
*                   /* CHECK FOR END OF ACTIVE DIRECTORY BLOCKS       * 23290000
*                   IF KEYNAME=ENDNAME  /* IS IT LAST ACTIVE BLOCK?   * 23300000
*                      THEN SW7='1'B;   /* INDICATE NO MORE BLOCKS    * 23310000
@971     L     @1,PARMLIST+24                                     0787  23320000
         CLC   0(8,@1),ENDNAME                                    0787  23330000
         BC    07,@96F                                            0787  23340000
         OI    SWITCHES,B'00000010'                               0788  23350000
*                   SW1='0'B;           /*TURN OFF  ALL OF DIRECTORY  * 23360000
@96F     NI    SWITCHES,B'01111111'                               0789  23370000
*                   R6=BUFF;            /* RESET DIRECTORY POINTER    * 23380000
         L     @6,PARMLIST+24                                     0790  23390000
*                   NUMBER=NUMENTS;     /* SAVE NUMBER OF MEMBERS     * 23400000
         MVC   NUMBER(2),BLDLIST                                  0791  23410000
*                   GEN(POINT  PODCB,DIRORG);/* POSITION R/W HEAD TO    23420000
*                                         BEGINNING OF DIRECTORY      * 23430000
         POINT  PODCB,DIRORG                                            23440000
         DS    0H                                                       23450000
*                   GEN;                                                23460000
         BLDL  PODCB,BLDLIST           CREATE BLDL LIST                 23470000
         POINT PODCB,DIRORG            POSITION R/W HEAD TO BEGINNING   23480000
         DS    0H                                                       23490000
*                   GOTO SKIP;          /* READ A DIRECTORY BLOCK     * 23500000
         BC    15,SKIP                                            0794  23510000
*                   END;                                                23520000
*      ELSE DO;                         /* PROCESS NEXT ENTRY         * 23530000
*           R6=R6+USER;                 /* BUMP ENTRY POINTER         * 23540000
@972     AH    @6,USER                                            0797  23550000
*           GOTO GETMEMS;               /* PROCESS ANOTHER ENTRY      * 23560000
         BC    15,GETMEMS                                         0798  23570000
*           END;                                                        23580000
* ERRMSG:                                                               23590000
*   ERRORS=ERRORS | '0002'X;            /* SET UP ERROR MESSAGE       * 23600000
@96E     EQU   *                                                  0800  23610000
ERRMSG   OC    PARMLIST+32(2),@X91                                0800  23620000
*   R1=ADDR(PARMLIST);                  /* SET UP PARMLIST TO PASS    * 23630000
         LA    @1,PARMLIST                                        0801  23640000
*   CALL HMBLKERR;                      /* PROCESS ERROR MESSAGE      * 23650000
         L     @F,@V2              ADDRESS OF HMBLKERR            0802  23660000
         BALR  @E,@F                                              0802  23670000
*   GOTO CLOSEIT;                       /* CLOSE DCB AND TERMINATE    * 23680000
         BC    15,CLOSEIT                                         0803  23690000
* ENDOFILE:                                                             23700000
*   /****************************************************************** 23710000
*   /* END OF FILE ON DIRECTORY, PRINT OUT MODULE SUMMARY             * 23720000
*   /****************************************************************** 23730000
*   /* IF MODLIB SPECIFIED IN LISTIDR THEN BYPASS MODULE SUMMARY      * 23740000
*   IF MDLB='1'B                        /* MODLIB SPECIFIED           * 23750000
*     THEN                              /* YES                        * 23760000
ENDOFILE TM    PARMLIST+20,B'00001000'                            0804  23770000
*       GO TO FINDIT;                   /* GO POSITION READ WRITE HEAD* 23780000
         BC    01,FINDIT                                          0805  23790000
*     ELSE;                             /* NULL ELSE                  * 23800000
*                                                                       23810000
*   /* CHECK TO SEE IF ANY SYSTEM STATUS INDEX WAS ENCOUNTERED        * 23820000
*   IF SW6='1'B                         /* SSI DATA PRESENT           * 23830000
*      THEN DO;                         /* CONVERT TO PRINTABLE HEX   * 23840000
         TM    SWITCHES,B'00000100'                               0807  23850000
         BC    12,@96D                                            0807  23860000
*           GEN;                                                        23870000
         UNPK  HEXDATA(9),SSI+4(5)     ZONE SSI DATA                    23880000
         NC    HEXDATA(8),ZONEOFF      TURN OFF ALL ZONES               23890000
         TR    HEXDATA(8),HEXCHAR      GET PRINTABLE HEX CHARACTERS     23900000
         DS    0H                                                       23910000
*           SSI=HEXDATA;                /* SAVE PRINTABLE SSI DATA    * 23920000
         MVC   SSI(8),HEXDATA                                     0810  23930000
         BC    15,@96C                                            0812  23940000
*           END;                                                        23950000
*      ELSE SSI='NONE';                 /* INDICATE NO SSI DATA       * 23960000
@96D     MVC   SSI(4),@C51                                        0812  23970000
         MVI   SSI+4,C' '                                         0812  23980000
         MVC   SSI+5(3),SSI+4                                     0812  23990000
*   ALCNT=ALCNT-1;                      /* ADJUST ALCNT TO PROPER       24000000
*                                         COUNT IN ARRAY              * 24010000
@96C     LH    @F,ALCNT                                           0813  24020000
         BCTR  @F,0                                               0813  24030000
         STH   @F,ALCNT                                           0813  24040000
         BC    15,@DO96A                                          0814  24050000
*   DO A=ALCNT TO 1 BY -1;                                              24060000
*      WORKAREA=' ';                    /* BLANKOUT WORKAREA          * 24070000
@DO96B   MVI   WORKAREA,C' '                                      0815  24080000
         MVC   WORKAREA+1(7),WORKAREA                             0815  24090000
*      WORKAREA(5:7)=ALEPADDR(A,2:4);   /* PUT ALIAS ADDR IN WORKAREA * 24100000
         L     @1,A                                               0816  24110000
         SLA   @1,3                                               0816  24120000
         LA    @E,ALIASLST+153(@1)                                0816  24130000
         MVC   WORKAREA+4(3),0(@E)                                0816  24140000
*      GEN;                                                             24150000
         UNPK  HEXDATA(8),WORKAREA+4(4) ZONE ALIAS ENTRY POINT          24160000
         NC    HEXDATA(7),ZONEOFF      TURN OFF ZONES                   24170000
         TR    HEXDATA+1(6),HEXCHAR    SAVE PRINTABLE DATA              24180000
         DS    0H                                                       24190000
*      ALEPADDR(A,3:8)=HEXDATA(2:7);    /* SAVE PRINTABLE ADDRESS     * 24200000
         L     @1,A                                               0818  24210000
         SLA   @1,3                                               0818  24220000
         LA    @A,ALIASLST+154(@1)                                0818  24230000
         MVC   0(6,@A),HEXDATA+1                                  0818  24240000
*   END;                                                                24250000
*   LINE(1:120)=' ';                    /* CLEAR OUTPUT LINE          * 24260000
         L     @F,A                                               0819  24270000
         BCTR  @F,0                                               0819  24280000
@DO96A   ST    @F,A                                               0819  24290000
         CH    @F,@D7                                             0819  24300000
         BC    10,@DO96B                                          0819  24310000
         MVI   OUTLINE+1,C' '                                     0820  24320000
         MVC   OUTLINE+2(119),OUTLINE+1                           0820  24330000
*   ASCII='1';                          /* SKIP TO NEXT PAGE          * 24340000
         MVI   OUTLINE,C'1'                                       0821  24350000
*   LINE(35:75)=MODULE;                 /* SET UP MODULE HEADING      * 24360000
         MVC   OUTLINE+35(41),MODULE                              0822  24370000
*   GEN(PUT   OUTDCB,OUTLINE);          /* PRINT HEADING              * 24380000
         PUT   OUTDCB,OUTLINE                                           24390000
         DS    0H                                                       24400000
*                                                                       24410000
*   /* CONVERT ENTRY POINT TO ZONE THEN TO PRINTABLE CHARACTERS       * 24420000
*   GEN;                                                                24430000
         UNPK  HEXDATA(8),HEADEP+4(4)  ZONE ENTRY POINT FOR MEMBER      24440000
         NC    HEXDATA(7),ZONEOFF      TURN OFF ZONES                   24450000
         TR    HEXDATA+1(6),HEXCHAR    GET PRINTABLE CHARACTERS         24460000
         DS    0H                                                       24470000
*   HEADEP(3:8)=HEXDATA(2:7);           /* SAVE PRINTABLE ADDR        * 24480000
         MVC   HEADEP+2(6),HEXDATA+1                              0825  24490000
*   LINE(1:120)=' ';                    /* BLANK OUTPUT LINE          * 24500000
         MVI   OUTLINE+1,C' '                                     0826  24510000
         MVC   OUTLINE+2(119),OUTLINE+1                           0826  24520000
*   ASCII='0';                          /* SKIP 2 LINES BEFORE PRINT  * 24530000
         MVI   OUTLINE,C'0'                                       0827  24540000
*   LINE(10:22)=NAME;                   /****************************** 24550000
         MVC   OUTLINE+10(12),NAME                                0828  24560000
         MVI   OUTLINE+22,C' '                                    0828  24570000
*   LINE(24:31)=HEADNAME;               /* SET UP MEMBER NAME AND     * 24580000
         MVC   OUTLINE+24(8),HEADNAME                             0829  24590000
*   LINE(61:77)=MAIN;                   /* ENTRY POINT FOR PRINT      * 24600000
         MVC   OUTLINE+61(17),MAIN                                0830  24610000
*   LINE(79:84)=HEADEP(3:8);            /****************************** 24620000
         MVC   OUTLINE+79(6),HEADEP+2                             0831  24630000
*   GEN(PUT   OUTDCB,OUTLINE);          /* PRINT MEMBER               * 24640000
         PUT   OUTDCB,OUTLINE                                           24650000
         DS    0H                                                       24660000
*   LINE(1:120)=' ';                    /* BLANK OUTPUT LINE          * 24670000
         MVI   OUTLINE+1,C' '                                     0833  24680000
         MVC   OUTLINE+2(119),OUTLINE+1                           0833  24690000
*   LINE(19:31)=ALIASES;                /* SET UP ALIAS HEADING       * 24700000
         MVC   OUTLINE+19(13),ALIASES                             0834  24710000
*   LINE(51:106)=SECOND;                /* ALIAS ENTRY POINT HEADING  * 24720000
         MVC   OUTLINE+51(56),SECOND                              0835  24730000
*   GEN(PUT   OUTDCB,OUTLINE);          /* PRINT ALIAS HEADING        * 24740000
         PUT   OUTDCB,OUTLINE                                           24750000
         DS    0H                                                       24760000
*   LINE(1:120)=' ';                    /* BLANK OUTPUT LINE          * 24770000
         MVI   OUTLINE+1,C' '                                     0837  24780000
         MVC   OUTLINE+2(119),OUTLINE+1                           0837  24790000
*   DO B=1 TO ALCNT;                    /* PROCESS ALIASES            * 24800000
         LA    @F,1                                               0838  24810000
         BC    15,@DO966                                          0838  24820000
*      LINE(21:28)=ALNAME(B);           /* PUT OUT ALIAS NAME         * 24830000
@DO967   L     @1,B                                               0839  24840000
         SLA   @1,3                                               0839  24850000
         LA    @E,ALIASLST-8(@1)                                  0839  24860000
         MVC   OUTLINE+21(8),0(@E)                                0839  24870000
*      LINE(29:30)=ASTERISK(B);         /* PRINT OUT MEMBER MARKER    * 24880000
         L     @3,B                                               0840  24890000
         SLA   @3,1                                               0840  24900000
         LA    @E,ALIASLST+126(@3)                                0840  24910000
         MVC   OUTLINE+29(2),0(@E)                                0840  24920000
*      LINE(68:73)=ALEPADDR(B,3:8);     /* ALIAS ENTRY POINT          * 24930000
         LA    @E,ALIASLST+154(@1)                                0841  24940000
         MVC   OUTLINE+68(6),0(@E)                                0841  24950000
*      GEN(PUT   OUTDCB,OUTLINE);       /* PRINT ALIAS                * 24960000
         PUT   OUTDCB,OUTLINE                                           24970000
         DS    0H                                                       24980000
*      ASCII=' ';                       /* SKIP ONE LINE              * 24990000
         MVI   OUTLINE,C' '                                       0843  25000000
*      ALNAME(B)=' ';                   /* BLANK OUT ALIAS NAME       * 25010000
         L     @1,B                                               0844  25020000
         SLA   @1,3                                               0844  25030000
         LA    @A,ALIASLST-8(@1)                                  0844  25040000
         MVI   0(@A),C' '                                         0844  25050000
         MVC   1(7,@A),0(@A)                                      0844  25060000
*      ALEPADDR(B)=' ';                 /* BLANK OUT ENTRY ADDR       * 25070000
         LA    @A,ALIASLST+152(@1)                                0845  25080000
         MVI   0(@A),C' '                                         0845  25090000
         MVC   1(7,@A),0(@A)                                      0845  25100000
*      ASTERISK(B)=' ';                 /* BLANK OUT ASTERISK         * 25110000
         LA    @A,ALIASLST+126(@3)                                0846  25120000
         MVI   0(@A),C' '                                         0846  25130000
         MVI   1(@A),C' '                                         0846  25140000
*   END;                                                                25150000
*   ALCNT=1;                            /* POINT TO BEGINNING OF LIST * 25160000
         L     @F,B                                               0847  25170000
         AH    @F,@D7                                             0847  25180000
@DO966   ST    @F,B                                               0847  25190000
         CH    @F,ALCNT                                           0847  25200000
         BC    12,@DO967                                          0847  25210000
         LA    @F,1                                               0848  25220000
         STH   @F,ALCNT                                           0848  25230000
*   ASCII='-';                          /* SKIP THREE LINES           * 25240000
         MVI   OUTLINE,C'-'                                       0849  25250000
*   LINE='-';                           /* SET UP SEPARATOR LINE      * 25260000
         MVI   OUTLINE+1,C'-'                                     0850  25270000
         MVI   OUTLINE+2,C' '                                     0850  25280000
         MVC   OUTLINE+3(118),OUTLINE+2                           0850  25290000
*   LINE(2:120)=LINE(1:119);            /* CREATE LINE OF DASHES      * 25300000
         MVC   OUTLINE+2(119),OUTLINE+1                           0851  25310000
*   GEN(  PUT   OUTDCB,OUTLINE);        /* PRINT A LINE               * 25320000
           PUT   OUTDCB,OUTLINE                                         25330000
         DS    0H                                                       25340000
*   ASCII='0';                          /* SKIP TWO LINES             * 25350000
         MVI   OUTLINE,C'0'                                       0853  25360000
*   LINE(1:120)=' ';                    /* BLANK OUTPUT LINE          * 25370000
         MVI   OUTLINE+1,C' '                                     0854  25380000
         MVC   OUTLINE+2(119),OUTLINE+1                           0854  25390000
*   LINE(24:27)='****';                 /* SET UP ASTERISKS           * 25400000
         MVC   OUTLINE+24(4),@C93                                 0855  25410000
*   LINE(31:65)=LINKAGE;                /* SET UP ATTRIBUTE HEADING   * 25420000
         MVC   OUTLINE+31(35),LINKAGE                             0856  25430000
*   LINE(69:72)='****';                 /* SET UP ASTERISKS           * 25440000
         MVC   OUTLINE+69(4),@C93                                 0857  25450000
*   GEN(  PUT   OUTDCB,OUTLINE);        /* PRINT A LINE               * 25460000
           PUT   OUTDCB,OUTLINE                                         25470000
         DS    0H                                                       25480000
*   LINE(1:120)=' ';                    /* BLANK OUTPUT LINE          * 25490000
         MVI   OUTLINE+1,C' '                                     0859  25500000
         MVC   OUTLINE+2(119),OUTLINE+1                           0859  25510000
*   LINE(17:18)='**';                   /* SET UP ASTERISKS           * 25520000
         MVC   OUTLINE+17(2),@C93                                 0860  25530000
*   LINE(96:97)='**';                   /* SET UP BIT HEADING         * 25540000
         MVC   OUTLINE+96(2),@C93                                 0861  25550000
*   DO D=22 TO 82 BY 20;                /* SET UP BIT HEADING         * 25560000
         LA    @F,22                                              0862  25570000
         ST    @F,D                                               0862  25580000
*      LINE(D:D+11)='BIT  STATUS';      /* PUT BIT HEADING OUT        * 25590000
@DO963   L     @1,D                                               0863  25600000
         LA    @A,OUTLINE(@1)                                     0863  25610000
         MVC   0(11,@A),@C94                                      0863  25620000
         MVI   11(@A),C' '                                        0863  25630000
*   END;                                                                25640000
*   GEN(  PUT   OUTDCB,OUTLINE);        /* PRINT A LINE               * 25650000
         L     @F,D                                               0864  25660000
         AH    @F,@D26                                            0864  25670000
@DO962   ST    @F,D                                               0864  25680000
         CH    @F,@D27                                            0864  25690000
         BC    12,@DO963                                          0864  25700000
           PUT   OUTDCB,OUTLINE                                         25710000
         DS    0H                                                       25720000
*   LINE(1:120)=' ';                    /* BLANK OUTPUT LINE          * 25730000
         MVI   OUTLINE+1,C' '                                     0866  25740000
         MVC   OUTLINE+2(119),OUTLINE+1                           0866  25750000
*   ASCII='0';                          /* SKIP TWO LINES             * 25760000
         MVI   OUTLINE,C'0'                                       0867  25770000
*   LINE(23)='0';                       /* PUT OUT BIT ZERO           * 25780000
         MVI   OUTLINE+23,C'0'                                    0868  25790000
*   LINE(43)='1';                       /* PUT OUT BIT ONE            * 25800000
         MVI   OUTLINE+43,C'1'                                    0869  25810000
*   LINE(63)='2';                       /* PUT OUT BIT TWO            * 25820000
         MVI   OUTLINE+63,C'2'                                    0870  25830000
*   LINE(83)='3';                       /* PUT OUT BIT THREE          * 25840000
         MVI   OUTLINE+83,C'3'                                    0871  25850000
*   LINPTR=26;                          /* SET UP LINE POINTER        * 25860000
         LA    @F,26                                              0872  25870000
         STH   @F,LINPTR                                          0872  25880000
*   DO D=1 TO 4;                        /* PUT OUT FIRST FOUR           25890000
*                                         ATTRIBUTES                  * 25900000
         LA    @F,1                                               0873  25910000
         ST    @F,D                                               0873  25920000
*      /* CHECK FOR MODULE ATTRIBUTE AND TAKE PROPER DESCRIPTION      * 25930000
*      IF TESTBIT(D)=(ATTRIB1&TESTBIT(D))/* WHAT IS MODULE ATTRIBUTE? * 25940000
*         THEN LINE(LINPTR:LINPTR+8)=ATON(D);/* GET ON ATTRIBUTE      * 25950000
@DO95F   L     @1,D                                               0874  25960000
         LA    @E,TESTBIT-1(@1)                                   0874  25970000
         MVC   @CTEMP2(1),0(@E)                                   0874  25980000
         NC    @CTEMP2(1),ATTRIBUT                                0874  25990000
         CLC   @CTEMP2(1),0(@E)                                   0874  26000000
         BC    07,@95B                                            0874  26010000
         L     @3,D                                               0875  26020000
         MH    @3,@D5                                             0875  26030000
         LA    @E,ATNAME-9(@3)                                    0875  26040000
         LH    @4,LINPTR                                          0875  26050000
         LA    @A,OUTLINE(@4)                                     0875  26060000
         MVC   0(9,@A),0(@E)                                      0875  26070000
         BC    15,@95A                                            0876  26080000
*         ELSE LINE(LINPTR:LINPTR+9)=ATOFF(D);/* GET OFF ATTRIBUTE    * 26090000
@95B     L     @1,D                                               0876  26100000
         MH    @1,@D5                                             0876  26110000
         LA    @E,ATNAME+63(@1)                                   0876  26120000
         LH    @3,LINPTR                                          0876  26130000
         LA    @A,OUTLINE(@3)                                     0876  26140000
         MVC   0(9,@A),0(@E)                                      0876  26150000
         MVI   9(@A),C' '                                         0876  26160000
*      LINPTR=LINPTR+20;                /* BUMP OUTPUT POINTER BY 20  * 26170000
@95A     LA    @F,20                                              0877  26180000
         AH    @F,LINPTR                                          0877  26190000
         STH   @F,LINPTR                                          0877  26200000
*   END;                                                                26210000
*   GEN(  PUT   OUTDCB,OUTLINE);        /* PRINT A LINE               * 26220000
         L     @F,D                                               0878  26230000
         AH    @F,@D7                                             0878  26240000
@DO95E   ST    @F,D                                               0878  26250000
         CH    @F,@D14                                            0878  26260000
         BC    12,@DO95F                                          0878  26270000
           PUT   OUTDCB,OUTLINE                                         26280000
         DS    0H                                                       26290000
*   ASCII=' ';                          /* SKIP ONE LINE              * 26300000
         MVI   OUTLINE,C' '                                       0880  26310000
*   LINE(23)='4';                       /* PUT OUT BIT FOUR           * 26320000
         MVI   OUTLINE+23,C'4'                                    0881  26330000
*   LINE(43)='5';                       /* PUT OUT BIT FIVE           * 26340000
         MVI   OUTLINE+43,C'5'                                    0882  26350000
*   LINE(63)='6';                       /* PUT OUT BIT SIX            * 26360000
         MVI   OUTLINE+63,C'6'                                    0883  26370000
*   LINE(83)='7';                       /* PUT OUT BIT SEVEN          * 26380000
         MVI   OUTLINE+83,C'7'                                    0884  26390000
*   LINPTR=26;                          /* SET UP LINE POINTER        * 26400000
         LA    @F,26                                              0885  26410000
         STH   @F,LINPTR                                          0885  26420000
*   DO D=5 TO 8;                        /* FIND NEXT FOUR  ATTRIBUTES * 26430000
         LA    @F,5                                               0886  26440000
         ST    @F,D                                               0886  26450000
*      /* CHECK FOR MODULE ATTRIBUTE AND TAKE PROPER DESCRIBTION      * 26460000
*      IF TESTBIT(D)=(ATTRIB1&TESTBIT(D))/* WHAT IS MODULE ATTRIBUTE? * 26470000
*         THEN LINE(LINPTR:LINPTR+8)=ATON(D);/* GET ON ATTRIBUTE      * 26480000
@DO959   L     @1,D                                               0887  26490000
         LA    @E,TESTBIT-1(@1)                                   0887  26500000
         MVC   @CTEMP2(1),0(@E)                                   0887  26510000
         NC    @CTEMP2(1),ATTRIBUT                                0887  26520000
         CLC   @CTEMP2(1),0(@E)                                   0887  26530000
         BC    07,@955                                            0887  26540000
         L     @3,D                                               0888  26550000
         MH    @3,@D5                                             0888  26560000
         LA    @E,ATNAME-9(@3)                                    0888  26570000
         LH    @4,LINPTR                                          0888  26580000
         LA    @A,OUTLINE(@4)                                     0888  26590000
         MVC   0(9,@A),0(@E)                                      0888  26600000
         BC    15,@954                                            0889  26610000
*         ELSE LINE(LINPTR:LINPTR+9)=ATOFF(D);/* GET OFF ATTRIBUTE    * 26620000
@955     L     @1,D                                               0889  26630000
         MH    @1,@D5                                             0889  26640000
         LA    @E,ATNAME+63(@1)                                   0889  26650000
         LH    @3,LINPTR                                          0889  26660000
         LA    @A,OUTLINE(@3)                                     0889  26670000
         MVC   0(9,@A),0(@E)                                      0889  26680000
         MVI   9(@A),C' '                                         0889  26690000
*      LINPTR=LINPTR+20;                /* BUMP OUTPUT POINTER BY 20  * 26700000
@954     LA    @F,20                                              0890  26710000
         AH    @F,LINPTR                                          0890  26720000
         STH   @F,LINPTR                                          0890  26730000
*   END;                                                                26740000
*   GEN(  PUT   OUTDCB,OUTLINE);        /* PRINT A LINE               * 26750000
         L     @F,D                                               0891  26760000
         AH    @F,@D7                                             0891  26770000
@DO958   ST    @F,D                                               0891  26780000
         CH    @F,@D6                                             0891  26790000
         BC    12,@DO959                                          0891  26800000
           PUT   OUTDCB,OUTLINE                                         26810000
         DS    0H                                                       26820000
*   LINE(23)='8';                       /* PUT OUT BIT EIGHT          * 26830000
         MVI   OUTLINE+23,C'8'                                    0893  26840000
*   LINE(43)='9';                       /* PUT OUT BIT NINE           * 26850000
         MVI   OUTLINE+43,C'9'                                    0894  26860000
*   LINE(63:64)='10';                   /* PUT OUT BIT TEN            * 26870000
         MVC   OUTLINE+63(2),@C103                                0895  26880000
*   LINE(83:84)='11';                   /* PUT OUT BIT ELEVEN         * 26890000
         MVC   OUTLINE+83(2),@C104                                0896  26900000
*   LINPTR=26;                          /* SET UP LINE POINTER        * 26910000
         LA    @F,26                                              0897  26920000
         STH   @F,LINPTR                                          0897  26930000
*   DO E=1 TO 4;                        /* FIND SECOND BYTE FIRST       26940000
*                                         FOUR ATTRIBUTES             * 26950000
         LA    @F,1                                               0898  26960000
         ST    @F,E                                               0898  26970000
*      /* CHECK FOR MODULE ATTRIBUTE AND TAKE PROPER DESCRIPTION      * 26980000
*      IF TESTBIT(E)=(ATTRIB2&TESTBIT(E))/* WHAT IS MODULE ATTRIBUTE? * 26990000
*         THEN LINE(LINPTR:LINPTR+8)=SECATON(E);/* GET ON ATTRIBUTE   * 27000000
@DO953   L     @1,E                                               0899  27010000
         LA    @E,TESTBIT-1(@1)                                   0899  27020000
         MVC   @CTEMP2(1),0(@E)                                   0899  27030000
         NC    @CTEMP2(1),ATTRIBUT+1                              0899  27040000
         CLC   @CTEMP2(1),0(@E)                                   0899  27050000
         BC    07,@94F                                            0899  27060000
         L     @3,E                                               0900  27070000
         MH    @3,@D5                                             0900  27080000
         LA    @E,ATNAME+135(@3)                                  0900  27090000
         LH    @4,LINPTR                                          0900  27100000
         LA    @A,OUTLINE(@4)                                     0900  27110000
         MVC   0(9,@A),0(@E)                                      0900  27120000
         BC    15,@94E                                            0901  27130000
*         ELSE LINE(LINPTR:LINPTR+9)=SECATOFF(E);/* GET OFF ATTRIBUTE * 27140000
@94F     L     @1,E                                               0901  27150000
         MH    @1,@D5                                             0901  27160000
         LA    @E,ATNAME+207(@1)                                  0901  27170000
         LH    @3,LINPTR                                          0901  27180000
         LA    @A,OUTLINE(@3)                                     0901  27190000
         MVC   0(9,@A),0(@E)                                      0901  27200000
         MVI   9(@A),C' '                                         0901  27210000
*      LINPTR=LINPTR+20;                /* BUMP OUTPUT POINTER BY 20  * 27220000
@94E     LA    @F,20                                              0902  27230000
         AH    @F,LINPTR                                          0902  27240000
         STH   @F,LINPTR                                          0902  27250000
*   END;                                                                27260000
*   GEN(  PUT   OUTDCB,OUTLINE);        /* PRINT A LINE               * 27270000
         L     @F,E                                               0903  27280000
         AH    @F,@D7                                             0903  27290000
@DO952   ST    @F,E                                               0903  27300000
         CH    @F,@D14                                            0903  27310000
         BC    12,@DO953                                          0903  27320000
           PUT   OUTDCB,OUTLINE                                         27330000
         DS    0H                                                       27340000
*   LINE(23:24)='12';                   /* PUT OUT BIT TWELVE         * 27350000
         MVC   OUTLINE+23(2),@C105                                0905  27360000
*   LINE(43:44)='13';                   /* PUT OUT BIT THIRTEEN       * 27370000
         MVC   OUTLINE+43(2),@C106                                0906  27380000
*   LINE(63:64)='14';                   /* PUT OUT BIT FOURTEEN       * 27390000
         MVC   OUTLINE+63(2),@C107                                0907  27400000
*   LINE(83:84)='15';                   /* PUT OUT BIT FIFTEEN        * 27410000
         MVC   OUTLINE+83(2),@C108                                0908  27420000
*   LINPTR=26;                          /* SET UP LINE POINTER        * 27430000
         LA    @F,26                                              0909  27440000
         STH   @F,LINPTR                                          0909  27450000
*   DO E=5 TO 8;                        /*FIND LAST FOUR ATTRIBUTES   * 27460000
         LA    @F,5                                               0910  27470000
         ST    @F,E                                               0910  27480000
*      /* CHECK FOR MODULE ATTRIBUTE AND TAKE PROPER DESCRIPTION      * 27490000
*      IF TESTBIT(E)=(ATTRIB2&TESTBIT(E))/* WHAT IS MODULE ATTRIBUTE? * 27500000
*         THEN LINE(LINPTR:LINPTR+8)=SECATON(E);/* GET ON ATTRIBUTE   * 27510000
@DO94D   L     @1,E                                               0911  27520000
         LA    @E,TESTBIT-1(@1)                                   0911  27530000
         MVC   @CTEMP2(1),0(@E)                                   0911  27540000
         NC    @CTEMP2(1),ATTRIBUT+1                              0911  27550000
         CLC   @CTEMP2(1),0(@E)                                   0911  27560000
         BC    07,@949                                            0911  27570000
         L     @3,E                                               0912  27580000
         MH    @3,@D5                                             0912  27590000
         LA    @E,ATNAME+135(@3)                                  0912  27600000
         LH    @4,LINPTR                                          0912  27610000
         LA    @A,OUTLINE(@4)                                     0912  27620000
         MVC   0(9,@A),0(@E)                                      0912  27630000
         BC    15,@948                                            0913  27640000
*         ELSE LINE(LINPTR:LINPTR+9)=SECATOFF(E);/* GET OFF ATTRIBUTE * 27650000
@949     L     @1,E                                               0913  27660000
         MH    @1,@D5                                             0913  27670000
         LA    @E,ATNAME+207(@1)                                  0913  27680000
         LH    @3,LINPTR                                          0913  27690000
         LA    @A,OUTLINE(@3)                                     0913  27700000
         MVC   0(9,@A),0(@E)                                      0913  27710000
         MVI   9(@A),C' '                                         0913  27720000
*      LINPTR=LINPTR+20;                /* BUMP OUTPUT POINTER BY 20  * 27730000
@948     LA    @F,20                                              0914  27740000
         AH    @F,LINPTR                                          0914  27750000
         STH   @F,LINPTR                                          0914  27760000
*   END;                                                                27770000
*   GEN(  PUT   OUTDCB,OUTLINE);        /* PRINT A LINE               * 27780000
         L     @F,E                                               0915  27790000
         AH    @F,@D7                                             0915  27800000
@DO94C   ST    @F,E                                               0915  27810000
         CH    @F,@D6                                             0915  27820000
         BC    12,@DO94D                                          0915  27830000
           PUT   OUTDCB,OUTLINE                                         27840000
         DS    0H                                                       27850000
*   ASCII='0';                          /* SKIP ONE LINE              * 27860000
         MVI   OUTLINE,C'0'                                       0917  27870000
*   LINE='-';                           /* SET UP SEPARATOR LINE      * 27880000
         MVI   OUTLINE+1,C'-'                                     0918  27890000
         MVI   OUTLINE+2,C' '                                     0918  27900000
         MVC   OUTLINE+3(118),OUTLINE+2                           0918  27910000
*   LINE(2:120)=LINE(1:119);            /* CREATE LINE OF DASHES      * 27920000
         MVC   OUTLINE+2(119),OUTLINE+1                           0919  27930000
*   GEN(  PUT   OUTDCB,OUTLINE);        /* PRINT A LINE               * 27940000
           PUT   OUTDCB,OUTLINE                                         27950000
         DS    0H                                                       27960000
*   ASCII='-';                          /* SKIP 3 LINES               * 27970000
         MVI   OUTLINE,C'-'                                       0921  27980000
*   LINE(1:120)=' ';                    /* BLANK OUTPUT LINE          * 27990000
         MVI   OUTLINE+1,C' '                                     0922  28000000
         MVC   OUTLINE+2(119),OUTLINE+1                           0922  28010000
*   LINE(37:47)=MODSSI;                 /* PUT OUT SSI HEADING        * 28020000
         MVC   OUTLINE+37(11),MODSSI                              0923  28030000
*   LINE(50:57)=SSI;                    /* PUT OUT SSI                * 28040000
         MVC   OUTLINE+50(8),SSI                                  0924  28050000
*   GEN(PUT   OUTDCB,OUTLINE);          /* PRINT SSI INFORMATION      * 28060000
         PUT   OUTDCB,OUTLINE                                           28070000
         DS    0H                                                       28080000
*   LINE(1:120)=' ';                    /* BLANK OUTPUT LINE          * 28090000
         MVI   OUTLINE+1,C' '                                     0926  28100000
         MVC   OUTLINE+2(119),OUTLINE+1                           0926  28110000
*   LINE(37:43)='APFCODE';              /* SET UP HEADING             * 28120000
         MVC   OUTLINE+37(7),@C109                                0927  28130000
*   LINE(50:57)=APFDATA;                /* SET UP APF CODE            * 28140000
         MVC   OUTLINE+50(8),APFDATA                              0928  28150000
*   ASCII=' ';                          /* SKIP ONE LINE              * 28160000
         MVI   OUTLINE,C' '                                       0929  28170000
*   GEN(  PUT   OUTDCB,OUTLINE);        /* PRINT APF DATA             * 28180000
           PUT   OUTDCB,OUTLINE                                         28190000
         DS    0H                                                       28200000
*   /* CHECK IF ANY AOS MESSAGES ARE REQUIRED                         * 28210000
*   IF SW8='1'B                         /* AOS LINKAGE EDITOR USED    * 28220000
*      THEN DO;                         /* PUT OUT ADDITIONAL MESSAGES* 28230000
         TM    SWITCHES,B'00000001'                               0931  28240000
         BC    12,@947                                            0931  28250000
*           ASCII='0';                  /* SKIP TWO LINES             * 28260000
         MVI   OUTLINE,C'0'                                       0933  28270000
*           LINE(20:60)='*****LOAD MODULE PROCESSED BY VS LINKAGE';     28280000
         MVC   OUTLINE+20(40),@C110                               0934  28290000
         MVI   OUTLINE+60,C' '                                    0934  28300000
*                                       /*                     YM3474 * 28310000
*           LINE(61:66)='EDITOR';       /* SET UP MESSAGE             * 28320000
         MVC   OUTLINE+61(6),@C111                                0935  28330000
*           GEN(PUT   OUTDCB,OUTLINE);  /* PRINT OUT MESSAGE          * 28340000
         PUT   OUTDCB,OUTLINE                                           28350000
         DS    0H                                                       28360000
*           /* CHECK FOR ADDITIONAL MESSAGES                          * 28370000
*           IF SW9='1'B                 /* PAGE MESSAGE NEEDED        * 28380000
*              THEN DO;                 /* SET UP PAGE BOUNDARY MESS. * 28390000
         TM    SWITCHES+1,B'10000000'                             0937  28400000
         BC    12,@946                                            0937  28410000
*                   ASCII=' ';          /* SPACE 1 LINE               * 28420000
         MVI   OUTLINE,C' '                                       0939  28430000
*                   LINE(20:67)='***PAGE ALIGNMENT REQUIRED';           28440000
         MVC   OUTLINE+20(26),@C112                               0940  28450000
         MVI   OUTLINE+46,C' '                                    0940  28460000
         MVC   OUTLINE+47(21),OUTLINE+46                          0940  28470000
*                   GEN(PUT   OUTDCB,OUTLINE);/* PRINT PAGE MESSAGE   * 28480000
         PUT   OUTDCB,OUTLINE                                           28490000
         DS    0H                                                       28500000
*                   END;                                                28510000
*           END;                                                        28520000
@946     EQU   *                                                  0943  28530000
*   RESTRICT (R4);                                                      28540000
@947     EQU   *                                                  0944  28550000
* FINDIT:                                                               28560000
*   /****************************************************************** 28570000
*   /* POSITION READ/WRITE HEAD AND PASS CONTROL TO PROCESSING ROUTINE* 28580000
*   /****************************************************************** 28590000
*   R4=(LISTCNT-1)*14;                  /* POSITIONING FOR R/W HEAD   * 28600000
FINDIT   LH    @F,LISTCNT                                         0945  28610000
         BCTR  @F,0                                               0945  28620000
         MH    @F,@D24                                            0945  28630000
         LR    @4,@F                                              0945  28640000
*   GEN(FIND  PODCB,LTTR(R4),C);        /* POSITION R/W HEAD FOR      * 28650000
         FIND  PODCB,LTTR(R4),C                                         28660000
         DS    0H                                                       28670000
*   RELEASE (R4);                                                       28680000
*                                       /* NEXT ROUTINE               * 28690000
*   MEMNAME=LISTNAME(LISTCNT,1:8);      /* PASS MEMBER NAME FOR TITLE * 28700000
         LH    @1,LISTCNT                                         0948  28710000
         MH    @1,@D24                                            0948  28720000
         LA    @E,BLDLIST-10(@1)                                  0948  28730000
         MVC   PARMLIST+36(8),0(@E)                               0948  28740000
*   /* CHECK FOR LISTIDR OPTION IN ORDER TO CALL HMBLKIDR             * 28750000
*   IF LISTIDR='1'B                     /* IS IT IDR OPERATION?       * 28760000
*      THEN GOTO IDRCHK;                /* CALL HMBLKIDR              * 28770000
         TM    OPTNMAP,B'00100000'                                0949  28780000
         BC    01,IDRCHK                                          0950  28790000
*   /* CHECK IF MODLIST OUTPUT WAS SPECIFIED AND CALL HMBLKLDM        * 28800000
*   IF MODLIST='0'B                     /* IS IT A MODLIST OPERATION? * 28810000
*      & SW2='0'B                       /* IS BYPASS HMBLKLDM ON?     * 28820000
*      THEN DO;                         /* GOTO HMBLKLDM              * 28830000
         TM    OPTNMAP,B'00000001'                                0951  28840000
         BC    05,@945                                            0951  28850000
         TM    SWITCHES,B'01000000'                               0951  28860000
         BC    05,@944                                            0951  28870000
*           R1=ADDR(PARMLIST);          /* STORE PARAMETER ADDRESS    * 28880000
         LA    @1,PARMLIST                                        0953  28890000
*           CALL HMBLKLDM;              /* GOTO MODLIST ROUTINE       * 28900000
         L     @F,@V4              ADDRESS OF HMBLKLDM            0954  28910000
         BALR  @E,@F                                              0954  28920000
*           SW2='1'B;                   /* INDICATES MODLIST OUTPUT   * 28930000
         OI    SWITCHES,B'01000000'                               0955  28940000
*           R1=ADDR(PARMLIST);          /* SAVE PARMLIST ADDR TO PASS * 28950000
         LA    @1,PARMLIST                                        0956  28960000
*           CALL HMBLKERR;              /* PROCESS ANY ERROR MSGS     * 28970000
         L     @F,@V2              ADDRESS OF HMBLKERR            0957  28980000
         BALR  @E,@F                                              0957  28990000
*           GOTO FINDIT;                /* REPOSITION R/W HEAD        * 29000000
         BC    15,FINDIT                                          0958  29010000
*           END;                                                        29020000
*   /* CHECK IF XREF OUTPUT WAS SPECIFIED AND CALL HMBLKXRF           * 29030000
*   IF XREF='0'B                        /* SHOULD HMBLKXRF BE CALLED? * 29040000
*      & SW3='0'B                       /* IS HMBLKXRF BYPASS ON?     * 29050000
*      THEN DO;                         /* GOTO HMBLKXRF              * 29060000
@944     EQU   *                                                  0960  29070000
@945     TM    OPTNMAP+1,B'10000000'                              0960  29080000
         BC    05,@943                                            0960  29090000
         TM    SWITCHES,B'00100000'                               0960  29100000
         BC    05,@942                                            0960  29110000
*           R1=ADDR(PARMLIST);          /* STORE PARMLIST ADDR        * 29120000
         LA    @1,PARMLIST                                        0962  29130000
*           CALL HMBLKXRF;              /* GOTO XREF ROUTINE          * 29140000
         L     @F,@V5              ADDRESS OF HMBLKXRF            0963  29150000
         BALR  @E,@F                                              0963  29160000
*           GOTO BITCHK;                /* PROCESS ERROR MESSAGES     * 29170000
         BC    15,BITCHK                                          0964  29180000
*           END;                                                        29190000
*   GOTO BITCHK;                        /* CHECK FOR ERRORS           * 29200000
* IDRCHK:                                                               29210000
*   /* CHECK IF IDENT OUTPUT FOT LISTIDR WAS SPECIFIED                * 29220000
*   IF IDENT='1'B                       /* IS IT AN IDENT OPERATION   * 29230000
*      THEN IDRFLAG='1'B;               /* INDICATE IDENT OUTPUT      * 29240000
IDRCHK   TM    OPTNMAP+1,B'01000000'                              0967  29250000
         BC    12,@941                                            0967  29260000
         OI    PARMLIST+20,B'10000000'                            0968  29270000
*   R1=ADDR(PARMLIST);                  /* STORE PARMLIST ADDR        * 29280000
@941     LA    @1,PARMLIST                                        0969  29290000
*   CALL  HMBLKIDR;                     /* GOTO IDR ROUTINE           * 29300000
         L     @F,@V6              ADDRESS OF HMBLKIDR            0970  29310000
         BALR  @E,@F                                              0970  29320000
*   IDRFLAG='0'B;                       /* TURN OFF IDENT OUTPUT      * 29330000
         NI    PARMLIST+20,B'01111111'                            0971  29340000
* BITCHK:                                                               29350000
*   R1=ADDR(PARMLIST);                  /* SAVE PARMLIST ADDR TO PASS * 29360000
BITCHK   LA    @1,PARMLIST                                        0972  29370000
*   CALL HMBLKERR;                      /* PROCESS ANY ERROR MSGS     * 29380000
         L     @F,@V2              ADDRESS OF HMBLKERR            0973  29390000
         BALR  @E,@F                                              0973  29400000
* OUT:                                                                  29410000
*   SCATLEN=0;                          /* ZERO OUT SCATTER DATA      * 29420000
OUT      SR    @F,@F                                              0974  29430000
         ST    @F,PARMLIST+28                                     0974  29440000
*   OVLYFLAG='0'B;                      /* TURN OFF OVERLAY BIT       * 29450000
         NI    PARMLIST+20,B'10111111'                            0975  29460000
*   SSI='NONE';                         /* INITIALIZE SSI TO NONE     * 29470000
         MVC   SSI(4),@C51                                        0976  29480000
         MVI   SSI+4,C' '                                         0976  29490000
         MVC   SSI+5(3),SSI+4                                     0976  29500000
*   SW6='0'B;                           /* TURN OFF SSI DATA SWITCH   * 29510000
         NI    SWITCHES,B'10011010'                               0977  29520000
*   SW3='0'B;                           /* TURN OFF HMBLKXRF BYPASS   * 29530000
*   SW2='0'B;                           /* TURN OFF MODLIST BYPASS    * 29540000
*   SW8='0'B;                           /* TURN OFF AOS-EDITOR SWITCH * 29550000
*   SW9='0'B;                           /* TURN OFF PAGE ALIGNMENT    * 29560000
         NI    SWITCHES+1,B'00111111'                             0981  29570000
*   SW10='0'B;                          /* TURN OFF APF INDICATOR     * 29580000
*   /* CHECK IF ALL OF DIRECTORY IS TO BE PROCESSED                   * 29590000
*   IF MEMBER^='1'B                     /* PROCESS ALL OF DIRECTORY?  * 29600000
*      THEN DO;                         /* ALL OF DIRECTORY           * 29610000
         TM    OPTNMAP,B'00000010'                                0983  29620000
         BC    01,@940                                            0983  29630000
*           HEADNAME(1:8)=' ';          /* BLANK OUT ENTRY NAME       * 29640000
         MVI   HEADNAME,C' '                                      0985  29650000
         MVC   HEADNAME+1(7),HEADNAME                             0985  29660000
*           HEADEP(1:8)=' ';            /* BLANK OUT ENTRY POINT      * 29670000
         MVI   HEADEP,C' '                                        0986  29680000
         MVC   HEADEP+1(7),HEADEP                                 0986  29690000
*           LISTCNT=LISTCNT+1;          /* BUMP BLDLIST POINTER       * 29700000
         LA    @F,1                                               0987  29710000
         AH    @F,LISTCNT                                         0987  29720000
         STH   @F,LISTCNT                                         0987  29730000
*           /* WAS ALL ENTRIES IN BLDLIST PROCESSED?                  * 29740000
*           IF LISTCNT>NUMENTS          /* DO WE NEED ANOTHER BLDLIST * 29750000
*              THEN DO;                 /* CHECK FURTHER              * 29760000
         LH    @F,BLDLIST                                         0988  29770000
         CH    @F,LISTCNT                                         0988  29780000
         BC    10,@93F                                            0988  29790000
*                   /* WAS ALL DIRECTORY BLOCKS PROCESSED?            * 29800000
*                   IF SW7='1'B         /* LAST DIRECTORY PROCESSED?  * 29810000
*                      THEN GOTO CLOSEIT;/* CLOSE DCB                 * 29820000
         TM    SWITCHES,B'00000010'                               0990  29830000
         BC    01,CLOSEIT                                         0991  29840000
*                   SW1='1'B;           /* INDICATE ALL OF DIRECTORY  * 29850000
         OI    SWITCHES,B'10000000'                               0992  29860000
*                   R6=BUFF;            /* RESET REGISTER 6           * 29870000
         L     @6,PARMLIST+24                                     0993  29880000
*                   ALLADDR(4)='01'X;   /* SET UP POINT MACRO         * 29890000
         MVI   ALLADDR+3,X'01'                                    0994  29900000
*                   GEN(POINT  PODCB,ALLADDR);/* PNT TO NEXT DIRECTORY* 29910000
         POINT  PODCB,ALLADDR                                           29920000
         DS    0H                                                       29930000
*                   GOTO SKIP;          /* READ A DIRECTORY BLOCK     * 29940000
         BC    15,SKIP                                            0996  29950000
*                   END;                                                29960000
*           END;                                                        29970000
*      ELSE  LISTCNT=LISTCNT+1;         /* POINT TO NEXT ENTRY IN       29980000
*                                         MEMLIST                     * 29990000
@940     LA    @F,1                                               0999  30000000
         AH    @F,LISTCNT                                         0999  30010000
         STH   @F,LISTCNT                                         0999  30020000
*   /* WERE ALL ENTRIES IN BLDLIST PROCESSED                          * 30030000
*   IF NUMBER<LISTCNT                   /* ARE ALL MEMBERS IN MEMLIST   30040000
*                                         PROCESSED?                  * 30050000
*      THEN GOTO CLOSEIT;               /* CLOSE DCB                  * 30060000
@93E     LH    @F,LISTCNT                                         1000  30070000
         CH    @F,NUMBER                                          1000  30080000
         BC    02,CLOSEIT                                         1001  30090000
*   HEADNAME(1:8)=' ';                  /* CLEAR OUT MEMBER NAME      * 30100000
         MVI   HEADNAME,C' '                                      1002  30110000
         MVC   HEADNAME+1(7),HEADNAME                             1002  30120000
*   HEADEP(1:8)=' ';                    /* CLEAR OUT ENTRY ADDRESS    * 30130000
         MVI   HEADEP,C' '                                        1003  30140000
         MVC   HEADEP+1(7),HEADEP                                 1003  30150000
*   GEN(  POINT PODCB,DIRORG);          /* REPOSITION TO BEGINNING OF   30160000
*                                         DIRECTORY                   * 30170000
           POINT PODCB,DIRORG                                           30180000
         DS    0H                                                       30190000
*   R6=BUFF;                            /* RESET BUFFER ADDRESS       * 30200000
         L     @6,PARMLIST+24                                     1005  30210000
*   GOTO BLDCH;                         /* READ DIRECTORY             * 30220000
         BC    15,BLDCH                                           1006  30230000
* OBJPDS:                                                               30240000
*   /* CHECK IF LOGICAL RECORD LENGTH IS 80                           * 30250000
*   IF DCBLRECL^=80 | DCBRECFM='C0'X    /* IS LRECL=80 OR    @ZA15060 * 30260000
*      THEN DO;                         /* RECFM UNDEFINED   @ZA15060 * 30270000
OBJPDS   LA    @F,80                                              1007  30280000
         CH    @F,DCBLRECL                                        1007  30290000
         BC    07,@93D                                            1007  30300000
         CLI   DCBRECFM,X'C0'                                     1007  30310000
         BC    07,@93C                                            1007  30320000
*           ERRORS=ERRORS|'0040'X;      /* TURN ON ERROR BIT          * 30330000
@93D     OC    PARMLIST+32(2),@X90                                1009  30340000
*           R1=ADDR(PARMLIST);          /* SAVE PARMLIST ADDR TO PASS * 30350000
         LA    @1,PARMLIST                                        1010  30360000
*           CALL HMBLKERR;              /* PROCESS ANY ERROR MSGS     * 30370000
         L     @F,@V2              ADDRESS OF HMBLKERR            1011  30380000
         BALR  @E,@F                                              1011  30390000
         BC    15,@93B                                            1013  30400000
*           END;                                                        30410000
*      ELSE                             /* LOGICAL RECORD LENGTH GOOD * 30420000
*           DO;                     /* AND RECFM MUST BE FB  @ZA15060 * 30430000
*           BLKCNT=(DCBBLKSI/DCBLRECL); /* RECORDS PER BLOCK @ZA33776 * 30440000
@93C     LH    @E,DCBBLKSI                                        1014  30450000
         SRDA  @E,32                                              1014  30460000
         LH    @0,DCBLRECL                                        1014  30470000
         DR    @E,@0                                              1014  30480000
         STH   @F,PARMLIST+22                                     1014  30490000
*              SW4='1'B;                /* TURN ON BLDL SWITCH        * 30500000
         OI    SWITCHES,B'00010000'                               1015  30510000
*              GOTO SORT;               /* SORT MEMBERS FOR BLDL      * 30520000
         BC    15,SORT                                            1016  30530000
*           END;                                                        30540000
* CLOSEIT:  /* TERMINATE PROCESSING OF CONTROL CARD                   * 30550000
*         R6=BUFF;                      /* BUFFER ADDR                * 30560000
@93B     EQU   *                                                  1018  30570000
CLOSEIT  L     @6,PARMLIST+24                                     1018  30580000
*           GEN;                                                        30590000
         FREEBUF PODCB,R6              FREE BUFFER                      30600000
         CLOSE PODCB,MF=(E,CLOSR2)     CLOSE PODCB                      30610000
         FREEPOOL PODCB                RELEASE BUFFER STORAGE           30620000
         DS    0H                                                       30630000
*         DCBDSORG='02'X;               /* MAKE PODCB PARTITIONED     * 30640000
         MVI   DCBDSORG,X'02'                                     1020  30650000
*           /* CHECK TO SEE IF FREEMAIN SHOULD BE BYPASSED            * 30660000
*           IF PO='0'B &                /* IS IT OBJECT SEQUENTIAL?   * 30670000
*              LISTOBJ='1'B             /* LISTOBJ OPERATION?         * 30680000
*              THEN GOTO AAB1;          /* READ ANOTHER CONTROL CARD  * 30690000
         TM    OPTNMAP+1,B'00100000'                              1021  30700000
         BC    05,@93A                                            1021  30710000
         TM    OPTNMAP,B'01000000'                                1021  30720000
         BC    03,AAB1                                            1022  30730000
*           GEN;                        /* ISSUE FREEMAIN FOR SP22    * 30740000
@939     EQU   *                                                  1023  30750000
@93A     EQU   *                                                  1023  30760000
         FREEMAIN V,A=AREAGET,SP=22,MF=(E,SPFREE) FREE WORKING STORAGE  30770000
         DS    0H                                                       30780000
*           GOTO AAB1;                  /* READ ANOTHER CONTROL CARD  * 30790000
         BC    15,AAB1                                            1024  30800000
*   /****************************************************************** 30810000
*   /* PROCESS MEMBERS OF AN OBJECT MODULE PARTITIONED DATA SET       * 30820000
*   /****************************************************************** 30830000
*  OBJCALL:                                                             30840000
*   DCBKEYLE='00'X;                     /* ZERO OUT KEY LENGTH        * 30850000
OBJCALL  MVI   DCBKEYLE,X'00'                                     1025  30860000
*   DCBBUFL=DCBLRECL;                   /* SET BUFFER LENGTH          * 30870000
         MVC   DCBBUFL(2),DCBLRECL                                1026  30880000
*   MEMNAME=LISTNAME(LISTCNT,1:8);      /* PASS MEMBER NAME           * 30890000
         LH    @1,LISTCNT                                         1027  30900000
         MH    @1,@D24                                            1027  30910000
         LA    @E,BLDLIST-10(@1)                                  1027  30920000
         MVC   PARMLIST+36(8),0(@E)                               1027  30930000
*   RESTRICT (R4);                                                      30940000
*   R4=(LISTCNT-1)*14;                  /* GET TTR                    * 30950000
         LH    @F,LISTCNT                                         1029  30960000
         BCTR  @F,0                                               1029  30970000
         MH    @F,@D24                                            1029  30980000
         LR    @4,@F                                              1029  30990000
*   GEN(FIND  PODCB,LTTR(R4),C);        /* POSITION R/W HEAD          * 31000000
         FIND  PODCB,LTTR(R4),C                                         31010000
         DS    0H                                                       31020000
*   RELEASE (R4);                       /* RELEASE REGISTER 4         * 31030000
*   R1=ADDR(PARMLIST);                  /* STORE PARMLIST ADDR        * 31040000
         LA    @1,PARMLIST                                        1032  31050000
*   CALL  HMBLKOBJ;                     /* PROCESS OBJECT MODULE      * 31060000
         L     @F,@V3              ADDRESS OF HMBLKOBJ            1033  31070000
         BALR  @E,@F                                              1033  31080000
*   R1=ADDR(PARMLIST);                  /* SAVE PARMLIST ADDR TO PASS * 31090000
         LA    @1,PARMLIST                                        1034  31100000
*   CALL HMBLKERR;                      /* PROCESS ANY ERROR MSGS     * 31110000
         L     @F,@V2              ADDRESS OF HMBLKERR            1035  31120000
         BALR  @E,@F                                              1035  31130000
*   DCBBUFL='0000'X;                    /* RESET BUFFER LENGTH        * 31140000
         MVC   DCBBUFL(2),@X49+2                                  1036  31150000
*   DCBKEYLE='08'X;                     /* RESET KEY LENGTH           * 31160000
         MVI   DCBKEYLE,X'08'                                     1037  31170000
*   /* CHECK IF ALL MEMBERS HAVE BEEN PROCESSED                       * 31180000
*   IF LISTCNT=NUMBER                   /* ARE ALL MEMBERS PROCESSED? * 31190000
*      THEN GOTO CLOSEIT;               /* CLOSE DCB                  * 31200000
         LH    @F,NUMBER                                          1038  31210000
         CH    @F,LISTCNT                                         1038  31220000
         BC    08,CLOSEIT                                         1039  31230000
*   LISTCNT=LISTCNT+1;                  /* POINT TO NEXT MEMBER       * 31240000
         LA    @F,1                                               1040  31250000
         AH    @F,LISTCNT                                         1040  31260000
         STH   @F,LISTCNT                                         1040  31270000
*   GOTO BLDCH;                         /* CHECK IF MEMBER FOUND      * 31280000
         BC    15,BLDCH                                           1041  31290000
* ENDIT:                                                                31300000
* /* CHECK IF EOF OCCURED WHEN A CONTINUATION CARD WAS EXPECTED M1204 * 31310000
*   IF CONTINUE='1'B                    /* CONTIN EXPECTED?     M1204 * 31320000
*      THEN DO;                         /* YES                  M1204 * 31330000
ENDIT    TM    CONTINUE,B'10000000'                               1042  31340000
         BC    12,@938                                            1042  31350000
*           ERRORS=ERRORS|'00001000'X;  /* SET ERR MSG BIT      M1204 * 31360000
         OC    PARMLIST+32(4),@X59                                1044  31370000
* ENDITA:   R1=ADDR(PARMLIST);          /* POINT TO PARMLIST    M1204 * 31380000
ENDITA   LA    @1,PARMLIST                                        1045  31390000
*           CALL HMBLKERR;              /* PRINT ERRORS         M1204 * 31400000
         L     @F,@V2              ADDRESS OF HMBLKERR            1046  31410000
         BALR  @E,@F                                              1046  31420000
*           END;                                                        31430000
*   ENDITB: /* CLOSE DATA SETS                                        * 31440000
*   GEN (CLOSE  (INDCB,,OUTDCB),MF=(E,CLOSR1));/* CLOSE DCB'S         * 31450000
@938     EQU   *                                                  1048  31460000
ENDITB   CLOSE  (INDCB,,OUTDCB),MF=(E,CLOSR1)                           31470000
         DS    0H                                                       31480000
*           IF ECD12 = '1'B             /* ANY RETURN CODE 12 ERRORS  * 31490000
*             THEN                      /* YES                        * 31500000
         TM    PARMLIST+68,B'00100000'                            1049  31510000
         BC    12,@937                                            1049  31520000
*               DO;                                                     31530000
*               RCODE = 12;             /* SET RETURN CODE            * 31540000
         LA    @F,12                                              1051  31550000
         ST    @F,RCODE                                           1051  31560000
*               GO TO ENDITC;           /* RETURN TO USER             * 31570000
         BC    15,ENDITC                                          1052  31580000
*               END;                                                    31590000
*             ELSE;                     /* NULL ELSE                  * 31600000
@937     EQU   *                                                  1054  31610000
*           IF ECD8 = '1'B              /* ANY RETURN CODE 8 ERRORS   * 31620000
*             THEN                      /* YES                        * 31630000
@936     TM    PARMLIST+68,B'01000000'                            1055  31640000
         BC    12,@935                                            1055  31650000
*               DO;                                                     31660000
*               RCODE = 8;              /* SET RETURN CODE            * 31670000
         LA    @F,8                                               1057  31680000
         ST    @F,RCODE                                           1057  31690000
*               GO TO ENDITC;           /* RETURN TO USER             * 31700000
         BC    15,ENDITC                                          1058  31710000
*               END;                                                    31720000
*             ELSE;                     /* NULL ELSE                  * 31730000
@935     EQU   *                                                  1060  31740000
*           IF ECD4 = '1'B              /* ANY RETURN CODE 4 ERRORS   * 31750000
*             THEN                      /* YES                        * 31760000
@934     TM    PARMLIST+68,B'10000000'                            1061  31770000
         BC    12,@933                                            1061  31780000
*               DO;                                                     31790000
*               RCODE = 4;              /* SET RETURN CODE            * 31800000
         LA    @F,4                                               1063  31810000
         ST    @F,RCODE                                           1063  31820000
*               GO TO ENDITC;           /* RETURN TO USER             * 31830000
         BC    15,ENDITC                                          1064  31840000
*               END;                                                    31850000
*             ELSE;                     /* NULL ELSE                  * 31860000
@933     EQU   *                                                  1066  31870000
*                                                                       31880000
*           /********************************************************** 31890000
*           /* IF NO RETURN CODE ERRORS THEN SET RETURN CODE TO 0     * 31900000
*           /********************************************************** 31910000
*           RCODE = 0;                  /* SET RETURN CODE            * 31920000
@932     SR    @F,@F                                              1067  31930000
         ST    @F,RCODE                                           1067  31940000
*   ENDITC: RETURN CODE(RCODE);         /* RETURN WITH CODE 0         * 31950000
ENDITC   L     @D,4(0,@D)                                         1068  31960000
         L     @F,RCODE                                           1068  31970000
         ST    @F,16(0,@D)                                        1068  31980000
         LR    @1,@C                                              1068  31990000
         L     @0,@SIZ001                                         1068  32000000
         FREEMAIN R,LV=(0),A=(1)                                  1068  32010000
         LM    @E,@C,12(@D)                                       1068  32020000
         BCR   15,@E                                              1068  32030000
*   END HMBLKCTL;                                                       32040000
@EL01    L     @D,4(0,@D)                                         1069  32050000
         LR    @1,@C                                              1069  32060000
         L     @0,@SIZ001                                         1069  32070000
         FREEMAIN R,LV=(0),A=(1)                                  1069  32080000
         L     @E,12(0,@D)                                        1069  32090000
         LM    @0,@C,20(@D)                                       1069  32100000
         BCR   15,@E                                              1069  32110000
@DATA1   EQU   *                                                        32120000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           32130000
@1       EQU   01                                                       32140000
@2       EQU   02                                                       32150000
@3       EQU   03                                                       32160000
@4       EQU   04                                                       32170000
@5       EQU   05                                                       32180000
@6       EQU   06                                                       32190000
@7       EQU   07                                                       32200000
@8       EQU   08                                                       32210000
@9       EQU   09                                                       32220000
@A       EQU   10                                                       32230000
@B       EQU   11                                                       32240000
@C       EQU   12                                                       32250000
@D       EQU   13                                                       32260000
@E       EQU   14                                                       32270000
@F       EQU   15                                                       32280000
@D1      DC    F'12288'                                                 32290000
@D2      DC    F'9437184'                                               32300000
@D3      DC    F'49152'                                                 32310000
@D4      DC    H'-1'                                                    32320000
@D5      DC    H'9'                                                     32330000
@D6      DC    H'8'                                                     32340000
@D7      DC    H'1'                                                     32350000
@D8      DC    H'64'                                                    32360000
@D9      DC    H'71'                                                    32370000
@D10     DC    H'6'                                                     32380000
@D11     DC    H'7'                                                     32390000
@D12     DC    H'0'                                                     32400000
@D13     DC    H'16'                                                    32410000
@D14     DC    H'4'                                                     32420000
@D15     DC    H'5'                                                     32430000
@D16     DC    H'3'                                                     32440000
@D17     DC    H'70'                                                    32450000
@D18     DC    H'2'                                                     32460000
@D19     DC    H'39'                                                    32470000
@D20     DC    H'240'                                                   32480000
@D21     DC    H'100'                                                   32490000
@D22     DC    H'10'                                                    32500000
@D23     DC    H'-240'                                                  32510000
@D24     DC    H'14'                                                    32520000
@D25     DC    H'12'                                                    32530000
@D26     DC    H'20'                                                    32540000
@D27     DC    H'82'                                                    32550000
@MVC     MVC   0(1,@A),0(@E)                                            32560000
@V1      DC    V(HMBLKLPA)                                              32570000
@V2      DC    V(HMBLKERR)                                              32580000
@V3      DC    V(HMBLKOBJ)                                              32590000
@V4      DC    V(HMBLKLDM)                                              32600000
@V5      DC    V(HMBLKXRF)                                              32610000
@V6      DC    V(HMBLKIDR)                                              32620000
         DS    0F                                                       32630000
@SIZ001  DC    AL1(&SPN)                                                32640000
         DC    AL3(@DATEND-@DATD)                                       32650000
         DS    0F                                                       32660000
@C5      DC    C'MAIN ENTRY POINT'                                      32670000
@C7      DC    C'SECONDARY ENTRY '                                      32680000
@C8      DC    C'POINT ADDRESSES ASSOCIATED WITH ALIASES:'              32690000
@C10     DC    C'LINKAGE EDITOR ATTRIBUTES OF MODULE:'                  32700000
@C11     DC    C'RENT'                                                  32710000
@C12     DC    C'NOT-RENT'                                              32720000
@C13     DC    C'REUS'                                                  32730000
@C14     DC    C'NOT-REUS'                                              32740000
@C15     DC    C'OVLY'                                                  32750000
@C16     DC    C'NOT-OVLY'                                              32760000
@C17     DC    C'TEST'                                                  32770000
@C18     DC    C'NOT-TEST'                                              32780000
@C21     DC    C'SCTR'                                                  32790000
@C23     DC    C'EXEC'                                                  32800000
@C24     DC    C'NOT-EXEC'                                              32810000
@C29     DC    C'ZERO-ORG'                                              32820000
@C30     DC    C'NOT-ZERO'                                              32830000
@C35     DC    C'NOT-EDIT'                                              32840000
@C36     DC    C'EDIT'                                                  32850000
@C37     DC    C'SYMS'                                                  32860000
@C41     DC    C'REFR'                                                  32870000
@C42     DC    C'NOT-REFR'                                              32880000
@C43     DC    C'SYSLIB  '                                              32890000
@X44     DC    X'FFFFFFFFFFFFFFFF'                                      32900000
@C45     DC    C'0123456789ABCDEF'                                      32910000
@X46     DC    X'0F0F0F0F0F0F0F0F'                                      32920000
@X47     DC    X'00000100'                                              32930000
@X49     DC    X'00000000'                                              32940000
@C51     DC    C'NONE'                                                  32950000
@C54     DC    C'LISTOBJ '                                              32960000
@C55     DC    C'LISTIDR '                                              32970000
@C56     DC    C'LISTLPA '                                              32980000
@X57     DC    X'00000800'                                              32990000
@X59     DC    X'00001000'                                              33000000
@C70     DC    C'DDN='                                                  33010000
@C73     DC    C'XREF'                                                  33020000
@C74     DC    C'BOTH'                                                  33030000
@X76     DC    X'00000040'                                              33040000
@X79     DC    X'00000400'                                              33050000
@X80     DC    X'00000080'                                              33060000
@X81     DC    X'00000200'                                              33070000
@X87     DC    X'00008000'                                              33080000
@C93     DC    C'****'                                                  33090000
@C110    DC    C'*****LOAD MODULE PROCESSED BY VS LINKAGE'              33100000
@C20     DC    C'NOT-OL'                                                33110000
@C27     DC    C'NOT-DC'                                                33120000
@C28     DC    C'DC'                                                    33130000
@C33     DC    C'NO-RLD'                                                33140000
@X48     DC    X'0020'                                                  33150000
@C60     DC    C'MODLIB'                                                33160000
@C61     DC    C'TITLE='                                                33170000
@C65     DC    C'RELOC='                                                33180000
@C82     DC    C''''''                                                  33190000
@C83     DC    C', '                                                    33200000
@X85     DC    X'0100'                                                  33210000
@X86     DC    X'0800'                                                  33220000
@X90     DC    X'0040'                                                  33230000
@X91     DC    X'0002'                                                  33240000
@C103    DC    C'10'                                                    33250000
@C104    DC    C'11'                                                    33260000
@C105    DC    C'12'                                                    33270000
@C106    DC    C'13'                                                    33280000
@C107    DC    C'14'                                                    33290000
@C108    DC    C'15'                                                    33300000
@C111    DC    C'EDITOR'                                                33310000
@C112    DC    C'***PAGE ALIGNMENT REQUIRED'                            33320000
@C3      DC    C'*****  M O D U L E   S U M M A R Y  *****'             33330000
@C4      DC    C'MEMBER NAME'                                           33340000
@C6      DC    C'** ALIASES **'                                         33350000
@C9      DC    C'MODULE SSI:'                                           33360000
@C19     DC    C'ONLY-LOAD'                                             33370000
@C22     DC    C'BLOCK'                                                 33380000
@C25     DC    C'1-TXT'                                                 33390000
@C26     DC    C'MULTI-RCD'                                             33400000
@C31     DC    C'EP-ZERO'                                               33410000
@C32     DC    C'EP > ZERO'                                             33420000
@C34     DC    C'RLD'                                                   33430000
@C38     DC    C'NO-SYMS'                                               33440000
@C39     DC    C'F-LEVEL'                                               33450000
@C40     DC    C'E-LEVEL'                                               33460000
@C53     DC    C'LISTLOAD '                                             33470000
@C58     DC    C'               '                                       33480000
@C64     DC    C'MEMBER='                                               33490000
@C71     DC    C'OUTPUT='                                               33500000
@C72     DC    C'MODLIST'                                               33510000
@C77     DC    C'IDENT'                                                 33520000
@C78     DC    C'ALL'                                                   33530000
@C94     DC    C'BIT  STATUS'                                           33540000
@C109    DC    C'APFCODE'                                               33550000
         DS    0D                                                       33560000
@DATA    EQU   *                                                        33570000
COL      EQU   00000009            FULLWORD POINTER REGISTER            33580000
OVERHEAD EQU   *                   FULLWORD INTEGER                     33590000
         DC    FL4'8192'                                                33600000
PRNTEXT  EQU   @DATA+00000004      4 BYTE(S) ON WORD                    33610000
A00002   EQU   *                   1 BYTE(S)                            33620000
         DC    X'85'                                                    33630000
EXAD     EQU   *                   3  BYTE  POINTER ON WORD+1           33640000
         DC    VL3(HMBLKSZE)                                            33650000
R1       EQU   00000001            FULLWORD POINTER REGISTER            33660000
R5       EQU   00000005            FULLWORD POINTER REGISTER            33670000
R6       EQU   00000006            FULLWORD POINTER REGISTER            33680000
R4       EQU   00000004            FULLWORD POINTER REGISTER            33690000
PDS      EQU   00000010            37 BYTE(S) ON WORD                   33700000
PDSNAME  EQU   PDS+00000000        8 BYTE(S)                            33710000
PDSTTR   EQU   PDS+00000008        3 BYTE(S)                            33720000
INDICATR EQU   PDS+00000011        8 BIT(S)                             33730000
ALIAS    EQU   PDS+00000011        1 BIT(S)                             33740000
USERTTR  EQU   PDS+00000011        2 BIT(S)                             33750000
USERLNTH EQU   PDS+00000011        5 BIT(S)                             33760000
TTRTEXT  EQU   PDS+00000012        3 BYTE(S)                            33770000
A00003   EQU   PDS+00000015        1 BYTE(S)                            33780000
NOTESCAT EQU   PDS+00000016        3 BYTE(S)                            33790000
NOENTRY  EQU   PDS+00000019        1 BYTE(S)                            33800000
MODATTR  EQU   PDS+00000020        2 BYTE(S)                            33810000
MAINSTOR EQU   PDS+00000022        3 BYTE(S)                            33820000
FSTXTLEN EQU   PDS+00000025        2 BYTE(S)                            33830000
EPADDR   EQU   PDS+00000027        3 BYTE(S)                            33840000
FSTXTORG EQU   PDS+00000030        3 BYTE(S)                            33850000
AOSLKED  EQU   PDS+00000030        1 BIT(S)                             33860000
A00004   EQU   PDS+00000030        1 BIT(S)                             33870000
PAGALGN  EQU   PDS+00000030        1 BIT(S)                             33880000
SSIBIT   EQU   PDS+00000030        1 BIT(S)                             33890000
APFBIT   EQU   PDS+00000030        1 BIT(S)                             33900000
A00005   EQU   PDS+00000030        19 BIT(S)                            33910000
SCATDATA EQU   PDS+00000033        4 BYTE(S)                            33920000
KEYNAME  EQU   00000000            8 BYTE(S)                            33930000
TESTBIT  EQU   *                   8*1 BYTE(S)                          33940000
         DC    X'80'                                                    33950000
         DC    X'40'                                                    33960000
         DC    X'20'                                                    33970000
         DC    X'10'                                                    33980000
         DC    X'08'                                                    33990000
         DC    X'04'                                                    34000000
         DC    X'02'                                                    34010000
         DC    X'01'                                                    34020000
SSIDATA  EQU   00000000            4 BYTE(S)                            34030000
APF      EQU   00000000            2 BYTE(S) ON WORD                    34040000
APFLEN   EQU   APF+00000000        1  BYTE  POINTER                     34050000
APFCODE  EQU   APF+00000001        1 BYTE(S)                            34060000
MAINT    EQU   *                   400 BYTE(S)                          34070000
         DC    C'HMBLKCTL MAINT AREA'                                   34080000
         DC    00381C' '                                                34090000
         ORG   @DATA                                                    34100000
         DS    00000416C                                                34110000
@L       EQU   1                                                        34120000
@DATD    DSECT                                                          34130000
@SAV001  EQU   @DATD+00000000      72 BYTE(S) ON WORD                   34140000
PARMLIST EQU   @DATD+00000072      77 BYTE(S) ON WORD                   34150000
DCBIN    EQU   PARMLIST+00000000   FULLWORD POINTER                     34160000
DCBOUT   EQU   PARMLIST+00000004   FULLWORD POINTER                     34170000
TITLINE  EQU   PARMLIST+00000008   FULLWORD POINTER                     34180000
AREAGET  EQU   PARMLIST+00000012   FULLWORD POINTER                     34190000
GMLENGTH EQU   PARMLIST+00000016   FULLWORD INTEGER                     34200000
FLAGS    EQU   PARMLIST+00000020   16 BIT(S)                            34210000
IDRFLAG  EQU   PARMLIST+00000020   1 BIT(S)                             34220000
OVLYFLAG EQU   PARMLIST+00000020   1 BIT(S)                             34230000
NOTEDIT  EQU   PARMLIST+00000020   1 BIT(S)                             34240000
NORLD    EQU   PARMLIST+00000020   1 BIT(S)                             34250000
MDLB     EQU   PARMLIST+00000020   1 BIT(S)                             34260000
A00000   EQU   PARMLIST+00000020   11 BIT(S)                            34270000
BLKCNT   EQU   PARMLIST+00000022   HALFWORD INTEGER                     34280000
BUFF     EQU   PARMLIST+00000024   FULLWORD POINTER                     34290000
SCATLEN  EQU   PARMLIST+00000028   FULLWORD INTEGER                     34300000
ERRORS   EQU   PARMLIST+00000032   32 BIT(S)                            34310000
MEMNAME  EQU   PARMLIST+00000036   8 BYTE(S)                            34320000
DDNAME   EQU   PARMLIST+00000044   8 BYTE(S)                            34330000
TXTTR    EQU   PARMLIST+00000052   3 BYTE(S)                            34340000
TXTLEN   EQU   PARMLIST+00000055   2 BYTE(S)                            34350000
RELOCX   EQU   PARMLIST+00000060   FULLWORD INTEGER                     34360000
MODSIZE  EQU   PARMLIST+00000064   4 BYTE(S)                            34370000
NFLGS    EQU   PARMLIST+00000068   32 BIT(S)                            34380000
ECD4     EQU   PARMLIST+00000068   1 BIT(S)                             34390000
ECD8     EQU   PARMLIST+00000068   1 BIT(S)                             34400000
ECD12    EQU   PARMLIST+00000068   1 BIT(S)                             34410000
SWITCH   EQU   PARMLIST+00000072   32 BIT(S)                            34420000
NUMO     EQU   PARMLIST+00000076   1  BYTE  POINTER                     34430000
OPTNMAP  EQU   @DATD+00000149      32 BIT(S) ON BYTE                    34440000
LISTLOAD EQU   OPTNMAP+00000000    1 BIT(S)                             34450000
LISTOBJ  EQU   OPTNMAP+00000000    1 BIT(S)                             34460000
LISTIDR  EQU   OPTNMAP+00000000    1 BIT(S)                             34470000
LISTLPA  EQU   OPTNMAP+00000000    1 BIT(S)                             34480000
TITLE    EQU   OPTNMAP+00000000    1 BIT(S)                             34490000
DDN      EQU   OPTNMAP+00000000    1 BIT(S)                             34500000
MEMBER   EQU   OPTNMAP+00000000    1 BIT(S)                             34510000
MODLIST  EQU   OPTNMAP+00000000    1 BIT(S)                             34520000
XREF     EQU   OPTNMAP+00000001    1 BIT(S)                             34530000
IDENT    EQU   OPTNMAP+00000001    1 BIT(S)                             34540000
PO       EQU   OPTNMAP+00000001    1 BIT(S)                             34550000
LASTMEM  EQU   OPTNMAP+00000001    1 BIT(S)                             34560000
LIMIT    EQU   OPTNMAP+00000001    1 BIT(S)                             34570000
MCONTIN  EQU   OPTNMAP+00000001    1 BIT(S)                             34580000
RELOC    EQU   OPTNMAP+00000001    1 BIT(S)                             34590000
LPAREN   EQU   @DATD+00000153      1 BIT(S) ON BYTE                     34600000
CONTINUE EQU   @DATD+00000154      1 BIT(S) ON BYTE                     34610000
BCARD    EQU   @DATD+00000155      121 BYTE(S)                          34620000
CBLANK   EQU   BCARD+00000000      1 BYTE(S)                            34630000
CARD     EQU   BCARD+00000001      80 BYTE(S)                           34640000
A00001   EQU   BCARD+00000081      40 BYTE(S)                           34650000
ECARD    EQU   @DATD+00000276      121 BYTE(S)                          34660000
BLINE    EQU   @DATD+00000397      121 BYTE(S)                          34670000
TBLANK   EQU   BLINE+00000000      1 BYTE(S)                            34680000
TTLINE   EQU   BLINE+00000001      120 BYTE(S)                          34690000
RELCHAR  EQU   @DATD+00000132      4 BYTE(S)                            34700000
TCOL1    EQU   @DATD+00000518      HALFWORD INTEGER                     34710000
TCOL2    EQU   @DATD+00000520      HALFWORD INTEGER                     34720000
TITLECOL EQU   @DATD+00000522      HALFWORD INTEGER                     34730000
TEMP     EQU   @DATD+00000524      HALFWORD INTEGER                     34740000
NUMBER   EQU   @DATD+00000526      HALFWORD INTEGER                     34750000
HIGHLOW  EQU   @DATD+00000528      8 BYTE(S) ON WORD                    34760000
LOW      EQU   HIGHLOW+00000000    FULLWORD INTEGER                     34770000
HIGH     EQU   HIGHLOW+00000004    FULLWORD INTEGER                     34780000
HILOLPA  EQU   @DATD+00000536      8 BYTE(S) ON WORD                    34790000
NLOW     EQU   HILOLPA+00000000    FULLWORD INTEGER                     34800000
NHIGH    EQU   HILOLPA+00000004    FULLWORD INTEGER                     34810000
STORAGE  EQU   @DATD+00000544      8 BYTE(S) ON WORD                    34820000
MAINADDR EQU   STORAGE+00000000    FULLWORD INTEGER                     34830000
MAINLEN  EQU   STORAGE+00000004    FULLWORD INTEGER                     34840000
TEMPCNT  EQU   @DATD+00000552      1 BYTE(S)                            34850000
ENDNAME  EQU   @DATD+00000553      8 BYTE(S)                            34860000
FMEMNAME EQU   @DATD+00000568      8 BYTE(S) ON DWORD                   34870000
HEXCHAR  EQU   @DATD+00000576      16 BYTE(S) ON DWORD                  34880000
ZONEOFF  EQU   @DATD+00000592      8 BYTE(S)                            34890000
HEXDATA  EQU   @DATD+00000600      9 BYTE(S)                            34900000
SYSLIB   EQU   @DATD+00000609      8 BYTE(S)                            34910000
BLDLIST  EQU   @DATD+00000620      452 BYTE(S) ON WORD                  34920000
NUMENTS  EQU   BLDLIST+00000000    HALFWORD INTEGER                     34930000
LENGTH   EQU   BLDLIST+00000002    HALFWORD INTEGER                     34940000
ENTRIES  EQU   BLDLIST+00000004    32*14 BYTE(S)                        34950000
LISTNAME EQU   BLDLIST+00000004    8 BYTE(S)                            34960000
LTTR     EQU   BLDLIST+00000012    4 BYTE(S)                            34970000
LISTTR   EQU   BLDLIST+00000012    3 BYTE(S)                            34980000
K        EQU   BLDLIST+00000015    1 BYTE(S)                            34990000
LIB      EQU   BLDLIST+00000016    1 BYTE(S)                            35000000
C        EQU   BLDLIST+00000017    8 BIT(S)                             35010000
SWITCHES EQU   @DATD+00001072      16 BIT(S) ON BYTE                    35020000
SW1      EQU   SWITCHES+00000000   1 BIT(S)                             35030000
SW2      EQU   SWITCHES+00000000   1 BIT(S)                             35040000
SW3      EQU   SWITCHES+00000000   1 BIT(S)                             35050000
SW4      EQU   SWITCHES+00000000   1 BIT(S)                             35060000
SW5      EQU   SWITCHES+00000000   1 BIT(S)                             35070000
SW6      EQU   SWITCHES+00000000   1 BIT(S)                             35080000
SW7      EQU   SWITCHES+00000000   1 BIT(S)                             35090000
SW8      EQU   SWITCHES+00000000   1 BIT(S)                             35100000
SW9      EQU   SWITCHES+00000001   1 BIT(S)                             35110000
SW10     EQU   SWITCHES+00000001   1 BIT(S)                             35120000
USER     EQU   @DATD+00001074      HALFWORD INTEGER                     35130000
ACCUM    EQU   @DATD+00001076      HALFWORD POINTER                     35140000
SSI      EQU   @DATD+00001080      8 BYTE(S) ON DWORD                   35150000
DIRORG   EQU   @DATD+00001088      FULLWORD INTEGER                     35160000
LISTCNT  EQU   @DATD+00001092      HALFWORD INTEGER                     35170000
ALIASLST EQU   @DATD+00001096      288 BYTE(S) ON WORD                  35180000
ALNAME   EQU   ALIASLST+00000000   16*8 BYTE(S)                         35190000
ASTERISK EQU   ALIASLST+00000128   16*2 BYTE(S)                         35200000
ALEPADDR EQU   ALIASLST+00000160   16*8 BYTE(S)                         35210000
BLNKALAS EQU   @DATD+00001096      288 BYTE(S)                          35220000
BLANK1   EQU   BLNKALAS+00000000   256 BYTE(S)                          35230000
BLANK2   EQU   BLNKALAS+00000256   32 BYTE(S)                           35240000
ALCNT    EQU   @DATD+00001384      HALFWORD INTEGER                     35250000
HEADNAME EQU   @DATD+00001386      8 BYTE(S)                            35260000
HEADEP   EQU   @DATD+00001400      8 BYTE(S) ON DWORD                   35270000
OUTLINE  EQU   @DATD+00001408      121 BYTE(S) ON WORD                  35280000
ASCII    EQU   OUTLINE+00000000    1 BYTE(S)                            35290000
LINE     EQU   OUTLINE+00000001    120 BYTE(S)                          35300000
ATTRIBUT EQU   @DATD+00001529      16 BIT(S) ON BYTE                    35310000
ATTRIB1  EQU   ATTRIBUT+00000000   8 BIT(S)                             35320000
ATTRIB2  EQU   ATTRIBUT+00000001   8 BIT(S)                             35330000
ALLADDR  EQU   @DATD+00001532      4 BYTE(S) ON WORD                    35340000
MODULE   EQU   @DATD+00001536      41 BYTE(S)                           35350000
NAME     EQU   @DATD+00001577      12 BYTE(S)                           35360000
MAIN     EQU   @DATD+00001589      17 BYTE(S)                           35370000
ALIASES  EQU   @DATD+00001606      13 BYTE(S)                           35380000
SECOND   EQU   @DATD+00001619      56 BYTE(S)                           35390000
MODSSI   EQU   @DATD+00001675      11 BYTE(S)                           35400000
LINKAGE  EQU   @DATD+00001686      36 BYTE(S)                           35410000
RELFAC   EQU   @DATD+00001722      6 BYTE(S)                            35420000
ATNAME   EQU   @DATD+00001728      288 BYTE(S) ON WORD                  35430000
ATON     EQU   ATNAME+00000000     8*9 BYTE(S)                          35440000
ATOFF    EQU   ATNAME+00000072     8*9 BYTE(S)                          35450000
SECATON  EQU   ATNAME+00000144     8*9 BYTE(S)                          35460000
SECATOFF EQU   ATNAME+00000216     8*9 BYTE(S)                          35470000
LINPTR   EQU   @DATD+00002016      HALFWORD INTEGER                     35480000
APFDATA  EQU   @DATD+00002018      8 BYTE(S)                            35490000
A        EQU   @DATD+00002028      FULLWORD INTEGER                     35500000
B        EQU   @DATD+00002032      FULLWORD INTEGER                     35510000
D        EQU   @DATD+00002036      FULLWORD INTEGER                     35520000
E        EQU   @DATD+00002040      FULLWORD INTEGER                     35530000
I        EQU   @DATD+00002044      FULLWORD INTEGER                     35540000
X        EQU   @DATD+00002048      FULLWORD INTEGER                     35550000
WORKAREA EQU   @DATD+00002056      8 BYTE(S) ON DWORD                   35560000
F        EQU   @DATD+00002064      HALFWORD INTEGER                     35570000
G        EQU   @DATD+00002066      HALFWORD INTEGER                     35580000
H        EQU   @DATD+00002068      HALFWORD INTEGER                     35590000
J        EQU   @DATD+00002070      HALFWORD INTEGER                     35600000
L        EQU   @DATD+00002072      HALFWORD INTEGER                     35610000
LOCLEN   EQU   @DATD+00002076      FULLWORD INTEGER                     35620000
RCODE    EQU   @DATD+00002080      FULLWORD INTEGER                     35630000
INDCB    EQU   @DATD+00002088      96 BYTE(S) ON DWORD                  35640000
OUTDCB   EQU   @DATD+00002184      96 BYTE(S) ON DWORD                  35650000
PODCB    EQU   @DATD+00002280      88 BYTE(S) ON DWORD                  35660000
OPEN1    EQU   @DATD+00002368      8 BYTE(S) ON WORD                    35670000
OPEN2    EQU   @DATD+00002376      4 BYTE(S)                            35680000
CLOSR1   EQU   @DATD+00002380      8 BYTE(S) ON WORD                    35690000
CLOSR2   EQU   @DATD+00002388      4 BYTE(S)                            35700000
READIR   EQU   @DATD+00002392      24 BYTE(S) ON WORD                   35710000
SPGET    EQU   @DATD+00002416      10 BYTE(S) ON WORD                   35720000
SPFREE   EQU   @DATD+00002428      10 BYTE(S) ON WORD                   35730000
         DS    00002438C                                                35740000
@TEMPS   DS    0F                                                       35750000
         DS    C                                                        35760000
@CTEMP2  DS    CL001                                                    35770000
HMBLKCTL CSECT                                                          35780000
*********************************************************************** 35790000
*      D A T A  C O N T R O L  B L O C K S                            * 35800000
*********************************************************************** 35810000
INPUT    DCB   DSORG=PS,MACRF=GM,LRECL=80,DDNAME=SYSIN,EODAD=ENDIT,    X35820000
               EROPT=SKP                                                35830000
INLEN    EQU   *-INPUT                 LENGTH OF INPUT                  35840000
OUTPUT   DCB   DSORG=PS,MACRF=PM,LRECL=121,RECFM=FBA,EXLST=PRNTEXT,    X35850000
               DDNAME=SYSPRINT,EROPT=SKP                                35860000
OUTLEN   EQU   *-OUTPUT                LENGTH OF OUTPUT                 35870000
PDSDCB   DCB   DDNAME=XXXXXXXX,DSORG=PO,MACRF=R,                       X35880000
               BUFNO=1,SYNAD=SYSIOPDS,KEYLEN=8,                        X35890000
               EODAD=PDSEOD                              /* @ZA05200 */ 35900000
PDSLEN   EQU   *-PDSDCB                LENGTH OF PDS DCB                35910000
READ1    READ  DECB,SF,MF=L                                             35920000
RLEN     EQU   *-READ1                 LENGTH OF READ1                  35930000
OP1      OPEN  (INPUT,,OUTPUT,(OUTPUT)),MF=L                            35940000
OP2      OPEN  PDSDCB,MF=L                                              35950000
CL1      CLOSE (INPUT,,OUTPUT),MF=L                                     35960000
CL2      CLOSE PDSDCB,MF=L                                              35970000
         DCBD  DSORG=PO                                                 35980000
HMBLKCTL CSECT                                                          35990000
@DATD    DSECT                                                          36000000
@DATEND  EQU   *                                                        36010000
HMBLKCTL CSECT ,                                                        36020000
@9F8     EQU   @9F7                                                     36030000
@9F3     EQU   AEC1                                                     36040000
@9EF     EQU   PROCESS                                                  36050000
@9EE     EQU   PROCESS                                                  36060000
@9ED     EQU   ABA2                                                     36070000
@9F0     EQU   ABB1                                                     36080000
@9E7     EQU   ABA2                                                     36090000
@9E3     EQU   AEB1                                                     36100000
@9DD     EQU   @9DC                                                     36110000
@9DF     EQU   @9DC                                                     36120000
@9DE     EQU   @9DC                                                     36130000
@9E0     EQU   INCREM                                                   36140000
@9CC     EQU   @9CB                                                     36150000
@9CF     EQU   ABF4                                                     36160000
@9C5     EQU   ABA6                                                     36170000
@9C4     EQU   ACG4                                                     36180000
@9C3     EQU   ABA9                                                     36190000
@9C0     EQU   ACB1                                                     36200000
@9B9     EQU   @9B8                                                     36210000
@9BB     EQU   ABA2                                                     36220000
@9B7     EQU   ACG2                                                     36230000
@9B6     EQU   ACH2                                                     36240000
@98B     EQU   SSITEST                                                  36250000
@977     EQU   PDSREAD                                                  36260000
@970     EQU   @96E                                                     36270000
@943     EQU   BITCHK                                                   36280000
@942     EQU   BITCHK                                                   36290000
@93F     EQU   @93E                                                     36300000
         END   HMBLKCTL,(C'PL/S',1400,78206)                            36310000
