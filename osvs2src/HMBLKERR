         TITLE 'HMBLKERR  -  ERROR HANDLING ROUTINE'                    00010000
         LCLA  &T,&SPN                                            0001  00020000
.@001    ANOP                                                     0001  00030000
HMBLKERR CSECT ,                                                  0001  00040000
         BC    15,14(0,@F)                                              00050000
         DC    C'ÊHMBLKERR'                                       0001  00060000
         STM   @E,@C,12(@D)                                       0001  00070000
         BALR  @B,0                                               0001  00080000
@PSTART  DS    0H                                                 0001  00090000
         USING @PSTART+00000,@B                                   0001  00100000
         L     @0,@SIZ001                                         0001  00110000
         GETMAIN  R,LV=(0)                                        0001  00120000
         LR    @C,@1                                              0001  00130000
         USING @DATD+00000,@C                                     0001  00140000
         LM    @0,@1,20(@D)                                       0001  00150000
         XC    @TEMPS(@L),@TEMPS                                  0001  00160000
         ST    @D,@SAV001+4                                       0001  00170000
         LA    @F,@SAV001                                         0001  00180000
         ST    @F,8(0,@D)                                         0001  00190000
         LR    @D,@F                                              0001  00200000
*         PARMPTR=R1;                   /* SAVE REG. 1 INTERNALLY     * 00210000
         ST    @1,PARMPTR                                         0013  00220000
*         RESTRICT(3);                  /* USED TO HOLD DCB ADDRESS   * 00230000
*         IF ERRORS=0                   /* IF NO ERRORS, DONT PRINT   * 00240000
*            THEN GO TO RET;            /* ANYTHING                   * 00250000
         L     @2,PARMPTR                                         0015  00260000
         CLC   32(4,@2),@D1                                       0015  00270000
         BC    08,RET                                             0016  00280000
*         PARM=DCBOUT;                  /* SET DCBADDRESS FOR PUTS    * 00290000
         L     @3,4(0,@2)                                         0017  00300000
*         LINE=' ';                     /* BLANK OUT LINE             * 00310000
         MVI   LINE,C' '                                          0018  00320000
         MVC   LINE+1(120),LINE                                   0018  00330000
*         ASACHAR='1';                  /* SET TO GO TO TOP OF PAGE   * 00340000
         MVI   LINE,C'1'                                          0019  00350000
*         DO I=1 TO 2;                  /* SKIP DOWN A FEW LINES      * 00360000
         LA    @F,1                                               0020  00370000
         ST    @F,I                                               0020  00380000
@DO9FF   EQU   *                                                  0020  00390000
*         GEN(PUT  (PARM),LINE);        /* PRINT OUT A LINE OF BLANKS * 00400000
         PUT  (PARM),LINE                                               00410000
         DS    0H                                                       00420000
*         ASACHAR='0';                  /* SKIP TWO LINES             * 00430000
         MVI   LINE,C'0'                                          0022  00440000
*         END;                                                          00450000
*         MSG='**** D I A G N O S T I C  D I R E C T O R Y ****';       00460000
         L     @F,I                                               0023  00470000
         AH    @F,@D2                                             0023  00480000
@DO9FE   ST    @F,I                                               0023  00490000
         CH    @F,@D3                                             0023  00500000
         BC    12,@DO9FF                                          0023  00510000
         MVC   LINE+6(48),@C4                                     0024  00520000
         MVI   LINE+54,C' '                                       0024  00530000
         MVC   LINE+55(66),LINE+54                                0024  00540000
*         GEN(PUT  (PARM),LINE);        /* PRINT IT PUT               * 00550000
         PUT  (PARM),LINE                                               00560000
         DS    0H                                                       00570000
*         /* ******************************************************** * 00580000
*         /*   LOOP THRU TESTING EACH BIT OF 'ERRORS'.  IF A BIT IS ON* 00590000
*         /*   THEN PRINT OUT ASSOC. MESSAGE                          * 00600000
*         /* ******************************************************** * 00610000
*         RESTRICT(2);                  /*  USED FOR BIT TESTING      * 00620000
*         TESTBIT=1;                    /* SET UP BIT FOR FIRST TEST  * 00630000
         LA    @2,1                                               0027  00640000
*         GEN(SLL  TESTBIT,31);         /* START AT LEFT END OF FIELD * 00650000
         SLL  TESTBIT,31                                                00660000
         DS    0H                                                       00670000
*         DO MSGNUM=1 TO 32;            /* CHECK EACH BIT             * 00680000
         LA    @F,1                                               0029  00690000
         ST    @F,MSGNUM                                          0029  00700000
*         IF (TESTBIT & ERRORS) ^=0     /* IS BIT ON?                 * 00710000
*            THEN DO;                   /* YES - PRINT MESSAGE        * 00720000
@DO9FB   L     @8,PARMPTR                                         0030  00730000
         MVC   @TEMP4(4),32(@8)                                   0030  00740000
         L     @F,@TEMP4                                          0030  00750000
         NR    @F,@2                                              0030  00760000
         CL    @F,@D1                                             0030  00770000
         BC    08,@9F7                                            0030  00780000
*                 /* GET POINTER TO OFFSET AND LENGTH FOR MESSAGE     * 00790000
*                 LISTPTR=ADDR(MSGLIST) + (MSGNUM-1)*4;                 00800000
         L     @F,MSGNUM                                          0032  00810000
         BCTR  @F,0                                               0032  00820000
         SLA   @F,2                                               0032  00830000
         L     @9,@V1              ADDRESS OF MSGLIST             0032  00840000
         AR    @F,@9                                              0032  00850000
         ST    @F,LISTPTR                                         0032  00860000
*                 IF LENGTH=0           /* UNDEFINED MESSAGE?         * 00870000
*                    THEN GO TO EL1;    /* YES - SKIP PRINTING        * 00880000
         SR    @F,@F                                              0033  00890000
         L     @6,LISTPTR                                         0033  00900000
         CH    @F,2(0,@6)                                         0033  00910000
         BC    08,EL1                                             0034  00920000
*                 MSGPTR=ADDR(MESSAGES) + OFFSET; /* POINT TO MESSAGE * 00930000
         LH    @F,0(0,@6)                                         0035  00940000
         L     @7,@V2              ADDRESS OF MESSAGES            0035  00950000
         AR    @F,@7                                              0035  00960000
         ST    @F,MSGPTR                                          0035  00970000
*                 MSG=' ';              /* INIT. LINE                 * 00980000
         MVI   LINE+6,C' '                                        0036  00990000
         MVC   LINE+7(114),LINE+6                                 0036  01000000
*                 MSG(1:LENGTH)=TEXT(1:LENGTH);  /* MOVE IN MESAAGE   * 01010000
         L     @4,MSGPTR                                          0037  01020000
         LR    @E,@4                                              0037  01030000
         LH    @5,2(0,@6)                                         0037  01040000
         BCTR  @5,0                                               0037  01050000
         LA    @A,LINE+6                                          0037  01060000
         EX    @5,@MVC                                            0037  01070000
*                 IF MSGNUM=10 |        /* CHECK FOR MESSAGES WHICH   * 01080000
*                    MSGNUM=11 |        /* NEEED TO HAVE DDNAME       * 01090000
*                    MSGNUM=5                                           01100000
*                       THEN MSG(10:17)=DDNAME;                         01110000
         LA    @F,10                                              0038  01120000
         C     @F,MSGNUM                                          0038  01130000
         BC    08,@9F6                                            0038  01140000
         LA    @F,11                                              0038  01150000
         C     @F,MSGNUM                                          0038  01160000
         BC    08,@9F5                                            0038  01170000
         LA    @F,5                                               0038  01180000
         C     @F,MSGNUM                                          0038  01190000
         BC    07,@9F4                                            0038  01200000
@9F5     EQU   *                                                  0039  01210000
@9F6     L     @8,PARMPTR                                         0039  01220000
         MVC   LINE+15(8),44(@8)                                  0039  01230000
*                 IF MSGNUM=8           /* MEMBER NOT FOUND?          * 01240000
*                    THEN MSG(10:17)=MEMNAME;/* PUT MEMNAME IN MESSAGE* 01250000
@9F4     LA    @F,8                                               0040  01260000
         C     @F,MSGNUM                                          0040  01270000
         BC    07,@9F3                                            0040  01280000
         L     @8,PARMPTR                                         0041  01290000
         MVC   LINE+15(8),36(@8)                                  0041  01300000
*                 GEN(PUT  (PARM),LINE);  /* PRINT LINNE              * 01310000
@9F3     EQU   *                                                  0042  01320000
         PUT  (PARM),LINE                                               01330000
         DS    0H                                                       01340000
*                 ASACHAR=' ';          /* SET FOR SINGLE SPACING     * 01350000
         MVI   LINE,C' '                                          0043  01360000
*                 END;                                                  01370000
*         GEN(SRL  TESTBIT,1);          /* SHIFT TO TEST NEXT BIT     * 01380000
@9F7     EQU   *                                                  0045  01390000
         SRL  TESTBIT,1                                                 01400000
         DS    0H                                                       01410000
* EL1:    END;                                                          01420000
*         IF (E12MASK&ERRORS) > 0       /* ANY RETURN CODE 12 ERRORS  * 01430000
*           THEN                        /* YES                        * 01440000
EL1      L     @F,MSGNUM                                          0046  01450000
         AH    @F,@D2                                             0046  01460000
@DO9FA   ST    @F,MSGNUM                                          0046  01470000
         CH    @F,@D4                                             0046  01480000
         BC    12,@DO9FB                                          0046  01490000
         L     @8,PARMPTR                                         0047  01500000
         MVC   @CTEMP2(4),32(@8)                                  0047  01510000
         NC    @CTEMP2(4),E12MASK                                 0047  01520000
         CLC   @CTEMP2(4),@D1                                     0047  01530000
         BC    12,@9F2                                            0047  01540000
*             DO;                                                       01550000
*               ECD12 = '1'B;           /* SET RC 12 ERROR BIT        * 01560000
         OI    68(@8),B'00100000'                                 0049  01570000
*               GO TO EL2;              /* ZERO ERROR BITS            * 01580000
         BC    15,EL2                                             0050  01590000
*             END;                                                      01600000
*           ELSE;                       /* NO RETURN CODE ERRORS      * 01610000
@9F2     EQU   *                                                  0052  01620000
*         IF (E8MASK&ERRORS) > 0        /* ANY RETURN CODE 8 ERRORS   * 01630000
*           THEN                        /* YES                        * 01640000
@9F1     L     @8,PARMPTR                                         0053  01650000
         MVC   @CTEMP2(4),32(@8)                                  0053  01660000
         NC    @CTEMP2(4),E8MASK                                  0053  01670000
         CLC   @CTEMP2(4),@D1                                     0053  01680000
         BC    12,@9F0                                            0053  01690000
*             DO;                                                       01700000
*               ECD8 = '1'B;            /* SET RC 8 ERROR BIT         * 01710000
         OI    68(@8),B'01000000'                                 0055  01720000
*               GO TO EL2;              /* ZERO ERROR BITS            * 01730000
         BC    15,EL2                                             0056  01740000
*             END;                                                      01750000
*           ELSE;                       /* NO RETURN CODE ERRORS      * 01760000
@9F0     EQU   *                                                  0058  01770000
*         IF (E4MASK&ERRORS) > 0        /* ANY RETURN CODE 4 ERRORS   * 01780000
*           THEN                        /* YES                        * 01790000
@9EF     L     @8,PARMPTR                                         0059  01800000
         MVC   @CTEMP2(4),32(@8)                                  0059  01810000
         NC    @CTEMP2(4),E4MASK                                  0059  01820000
         CLC   @CTEMP2(4),@D1                                     0059  01830000
         BC    12,@9EE                                            0059  01840000
*             ECD4 = '1'B;              /* SET RC 4 ERROR BIT         * 01850000
         OI    68(@8),B'10000000'                                 0060  01860000
*           ELSE;                       /* NO RETURN CODE ERRORS      * 01870000
@9EE     EQU   *                                                  0061  01880000
* EL2:    ERRORS=0;                     /* RE-INITIALIZE ERROR BITS   * 01890000
@9ED     EQU   *                                                  0062  01900000
EL2      L     @8,PARMPTR                                         0062  01910000
         MVC   32(4,@8),@D1                                       0062  01920000
* RET:    END HMBLKERR;                                                 01930000
RET      EQU   *                                                  0063  01940000
@EL01    L     @D,4(0,@D)                                         0063  01950000
         LR    @1,@C                                              0063  01960000
         L     @0,@SIZ001                                         0063  01970000
         FREEMAIN R,LV=(0),A=(1)                                  0063  01980000
         LM    @E,@C,12(@D)                                       0063  01990000
         BCR   15,@E                                              0063  02000000
@DATA1   EQU   *                                                        02010000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           02020000
@1       EQU   01                                                       02030000
@2       EQU   02                                                       02040000
@3       EQU   03                                                       02050000
@4       EQU   04                                                       02060000
@5       EQU   05                                                       02070000
@6       EQU   06                                                       02080000
@7       EQU   07                                                       02090000
@8       EQU   08                                                       02100000
@9       EQU   09                                                       02110000
@A       EQU   10                                                       02120000
@B       EQU   11                                                       02130000
@C       EQU   12                                                       02140000
@D       EQU   13                                                       02150000
@E       EQU   14                                                       02160000
@F       EQU   15                                                       02170000
@D1      DC    F'0'                                                     02180000
@D2      DC    H'1'                                                     02190000
@D3      DC    H'2'                                                     02200000
@D4      DC    H'32'                                                    02210000
@MVC     MVC   0(1,@A),0(@E)                                            02220000
@V1      DC    V(MSGLIST)                                               02230000
@V2      DC    V(MESSAGES)                                              02240000
         DS    0F                                                       02250000
@SIZ001  DC    AL1(&SPN)                                                02260000
         DC    AL3(@DATEND-@DATD)                                       02270000
         DS    0F                                                       02280000
@C4      DC    C'**** D I A G N O S T I C  D I R E C T O R Y ****'      02290000
         DS    0D                                                       02300000
@DATA    EQU   *                                                        02310000
DUMMY    EQU   00000000            FULLWORD INTEGER                     02320000
PARM     EQU   00000003            FULLWORD POINTER REGISTER            02330000
R1       EQU   00000001            FULLWORD POINTER REGISTER            02340000
TESTBIT  EQU   00000002            FULLWORD INTEGER REGISTER            02350000
PARMLIST EQU   00000000            72 BYTE(S) ON WORD                   02360000
A00000   EQU   PARMLIST+00000000   FULLWORD POINTER                     02370000
DCBOUT   EQU   PARMLIST+00000004   FULLWORD POINTER                     02380000
A00001   EQU   PARMLIST+00000008   12 BYTE(S)                           02390000
FLAGS    EQU   PARMLIST+00000020   16 BIT(S)                            02400000
A00002   EQU   PARMLIST+00000020   8 BIT(S)                             02410000
A00003   EQU   PARMLIST+00000021   8 BIT(S)                             02420000
BLKCNT   EQU   PARMLIST+00000022   HALFWORD INTEGER                     02430000
A00004   EQU   PARMLIST+00000024   8 BYTE(S)                            02440000
ERRORS   EQU   PARMLIST+00000032   32 BIT(S)                            02450000
MEMNAME  EQU   PARMLIST+00000036   8 BYTE(S)                            02460000
DDNAME   EQU   PARMLIST+00000044   8 BYTE(S)                            02470000
A00005   EQU   PARMLIST+00000052   5 BYTE(S)                            02480000
A00006   EQU   PARMLIST+00000060   FULLWORD INTEGER                     02490000
A00007   EQU   PARMLIST+00000064   4 BYTE(S)                            02500000
NFLGS    EQU   PARMLIST+00000068   32 BIT(S)                            02510000
ECD4     EQU   PARMLIST+00000068   1 BIT(S)                             02520000
ECD8     EQU   PARMLIST+00000068   1 BIT(S)                             02530000
ECD12    EQU   PARMLIST+00000068   1 BIT(S)                             02540000
MSGL     EQU   00000000            4 BYTE(S) ON WORD                    02550000
OFFSET   EQU   MSGL+00000000       HALFWORD INTEGER                     02560000
LENGTH   EQU   MSGL+00000002       HALFWORD INTEGER                     02570000
TEXT     EQU   00000000            115 BYTE(S)                          02580000
E4MASK   EQU   *                   32 BIT(S) ON BYTE                    02590000
         DC    B'00000100000100000000000001111100'                      02600000
E8MASK   EQU   *                   32 BIT(S) ON BYTE                    02610000
         DC    B'11111011110011101000111110000000'                      02620000
E12MASK  EQU   *                   32 BIT(S) ON BYTE                    02630000
         DC    B'00000000001000010001000000000000'                      02640000
         ORG   @DATA                                                    02650000
         DS    00000012C                                                02660000
@L       EQU   1                                                        02670000
@DATD    DSECT                                                          02680000
@SAV001  EQU   @DATD+00000000      72 BYTE(S) ON WORD                   02690000
I        EQU   @DATD+00000072      FULLWORD INTEGER                     02700000
MSGPTR   EQU   @DATD+00000076      FULLWORD POINTER                     02710000
LISTPTR  EQU   @DATD+00000080      FULLWORD POINTER                     02720000
MSGNUM   EQU   @DATD+00000084      FULLWORD INTEGER                     02730000
PARMPTR  EQU   @DATD+00000088      FULLWORD POINTER                     02740000
LINE     EQU   @DATD+00000092      121 BYTE(S)                          02750000
ASACHAR  EQU   LINE+00000000       1 BYTE(S)                            02760000
BLANKS   EQU   LINE+00000001       5 BYTE(S)                            02770000
MSG      EQU   LINE+00000006       115 BYTE(S)                          02780000
         DS    00000213C                                                02790000
@TEMPS   DS    0F                                                       02800000
@TEMP4   DC    F'0'                                                     02810000
@CTEMP2  DS    CL004                                                    02820000
@DATEND  EQU   *                                                        02830000
HMBLKERR CSECT ,                                                        02840000
         END   HMBLKERR,(C'PL/S',1400,74038)                            02850000
