         TITLE 'LOAD MODULE LISTER - HMBLKLDM'                          00010000
         LCLA  &T,&SPN                                            0001  00020000
.@001    ANOP                                                     0001  00030000
HMBLKLDM CSECT ,                                                  0001  00040000
         BC    15,14(0,@F)                                              00050000
         DC    C'ÊHMBLKLDM'                                       0001  00060000
         STM   @E,@C,12(@D)                                       0001  00070000
         BALR  @B,0                                               0001  00080000
@PSTART  DS    0H                                                 0001  00090000
         USING @PSTART+00000,@B                                   0001  00100000
         L     @0,@SIZ001                                         0001  00110000
         GETMAIN  R,LV=(0)                                        0001  00120000
         LR    @C,@1                                              0001  00130000
         USING @DATD+00000,@C                                     0001  00140000
         LM    @0,@1,20(@D)                                       0001  00150000
         XC    @TEMPS(@L),@TEMPS                                  0001  00160000
         ST    @D,@SAV001+4                                       0001  00170000
         LA    @F,@SAV001                                         0001  00180000
         ST    @F,8(0,@D)                                         0001  00190000
         LR    @D,@F                                              0001  00200000
*         PARMS=PARMLST;                /* LOCAL COPY OF PARAMETERS     00210000
*                                          TO AVOID INDIRECT ADDRESSING 00220000
*                                          AND SAVING-RESTORING REG 1   00230000
*                                          AROUND MACRO INSTRUCTIONS    00240000
         MVC   PARMS(57),0(@1)                                    0100  00250000
*         SAVE1=REG1;                   /* SAVE PARM LIST POINTER       00260000
         ST    @1,SAVE1                                           0101  00270000
*         EVCB=LECB;                    /* INITIALIZE DECB              00280000
         MVC   EVCB(20),LECB                                      0102  00290000
*         RECCNT=0;                     /* INIT RECORD NUMBER           00300000
         SR    @F,@F                                              0103  00310000
         STH   @F,RECCNT                                          0103  00320000
*         P=0;                          /* INIT PAGE NUMBER             00330000
         STH   @F,P                                               0104  00340000
*         BIGSEG=0;                     /* INITIALIZE SEGMENT NUMBER    00350000
         MVI   BIGSEG,0                                           0105  00360000
*         SW1='00'X;                    /* INITIALIZE SWITCHES          00370000
         MVI   SW1,X'00'                                          0106  00380000
*         LINE=' ';                     /* BLANK OUT OUTPUT BUFFER      00390000
         MVI   LINE,C' '                                          0107  00400000
         MVC   LINE+1(120),LINE                                   0107  00410000
*         HDLINE=LINE;                  /* BLANK OUT HEADING BUFFER     00420000
         MVC   HDLINE(121),LINE                                   0108  00430000
*         TIT1LINE=LINE;                /* BLANK OUT TITLE BUFFER       00440000
         MVC   TIT1LINE(121),LINE                                 0109  00450000
*         BLANKS=LINE;                  /* BLANK CONVERSION FIELD       00460000
         MVC   DBLW2+8(3),LINE                                    0110  00470000
*         LASTBYT=ADDR(SIGNBYT);        /* ADDR OF LAST BYTE IN CONV    00480000
         LA    @F,DBLW2+7                                         0111  00490000
         ST    @F,LASTBYT                                         0111  00500000
*         ENDADDR=ADDR(LENHEX)+5;       /* ADDR OF LAST BYTE - HEX CONV 00510000
         LA    @F,CESDLIN2+69                                     0112  00520000
         ST    @F,ENDADDR                                         0112  00530000
*         LINECNT=PGEND;                /* INIT LINE COUNT - 55         00540000
         LH    @6,PGEND                                           0113  00550000
*         HCC=SKIP2;                    /* CARRIAGE CNTRL-SKIP 2 LINES  00560000
         MVC   HDLINE(1),SKIP2                                    0114  00570000
*         RECHD=RECHD2;                 /* INITIALIZE HEADING LINE      00580000
         MVC   HDLINE+1(7),RECHD2                                 0115  00590000
*         TYP1=TYP2;                    /* TYPE                         00600000
         MVC   HDLINE+15(4),TYP2                                  0116  00610000
*         HYPH1=HYPH2;                  /* HYPHEN                       00620000
         MVC   HDLINE+23(1),STTAB+7                               0117  00630000
*         SZHD2=SIZEHD;                 /* SIZE                         00640000
         MVC   HDLINE+69(4),SIZEHD                                0118  00650000
*         TCC=NEWPG;                    /* TO SKIP TO A NEW PAGE        00660000
         MVC   TIT1LINE(1),NEWPG                                  0119  00670000
*         MEMB=MEMNAME;                 /* MEMBER NAME                  00680000
         MVC   TIT1LINE+64(8),PARMS+36                            0120  00690000
*         TITLE='LISTING OF LOAD MODULE '; /* TITLE - LOAD MOD LISTING  00700000
         MVC   TIT1LINE+41(23),@C3                                0121  00710000
*         PAGE=PAGE1;                   /* PAGE - HDG                   00720000
         MVC   TIT1LINE+108(4),PAGE1                              0122  00730000
*         IF NOTEDIT='1'B               /* NOT-EDITABLE?              * 00740000
*            THEN NESW='1'B;            /* YES - INIT NE SWITCH       * 00750000
         TM    PARMS+20,B'00100000'                               0123  00760000
         BC    12,@9FF                                            0123  00770000
         OI    SW1,B'00000010'                                    0124  00780000
*         ADDRX=ADDR(LINE);             /* INITIALIZE OUTPUT POINTER    00790000
@9FF     LA    @F,LINE                                            0125  00800000
         ST    @F,ADDRX                                           0125  00810000
*         LABPTR=ADDR(READIN);          /* RETURN ADDR FOR ENDPAGE      00820000
         LA    @4,READIN                                          0126  00830000
*         GOTO PRINT;                   /* GO TO PRINT FIRST HEADING    00840000
         BC    15,PRINT                                           0127  00850000
*                                                                       00860000
* /******************************************************************** 00870000
* /*                  PROCESS                                           00880000
* /******************************************************************** 00890000
*         GEN(READ  LECB,SF,MF=L);      /* LIST FORM OF READ            00900000
         READ  LECB,SF,MF=L                                             00910000
         DS    0H                                                       00920000
* READIN: PTR2=INDCB;                   /* INPUT DCB ADDRESS            00930000
READIN   L     @2,PARMS                                           0129  00940000
*         PTR1=INPTR;                   /* INPUT BUFFER ADDRESS         00950000
         L     @3,PARMS+24                                        0130  00960000
*         GEN(READ  EVCB,SF,(PTR2),(PTR1),'S',MF=E); /* READ INPUT REC. 00970000
         READ  EVCB,SF,(PTR2),(PTR1),'S',MF=E                           00980000
         DS    0H                                                       00990000
*         GEN(CHECK EVCB);              /* CHECK FOR END OF READ OPER   01000000
         CHECK EVCB                                                     01010000
         DS    0H                                                       01020000
*         /* CHECK IF MODULE TO BE LISTED IS NOT-EDITABLE             * 01030000
*         IF NESW='1'B                  /* IS IT NOT-EDITABLE?        * 01040000
*            THEN                                                       01050000
         TM    SW1,B'00000010'                                    0133  01060000
         BC    12,@9FE                                            0133  01070000
*              DO;                      /* YES                        * 01080000
*                GENERATE;                                              01090000
         NOTE  (PTR2)                  GET TTR FROM READ                01100000
         ST    1,NOTETTR               SAVE TTR FROM NOTE               01110000
         DS    0H                                                       01120000
*                NESW='0'B;             /* TURN OFF NOT EDITABLE SW   * 01130000
         NI    SW1,B'11111101'                                    0136  01140000
*              IF NOTETTR(1:3)=TEXTTR   /* DO TTRS MATCH FOR 1ST TEXT * 01150000
*                 THEN                                                  01160000
         CLC   NOTETTR(3),PARMS+52                                0137  01170000
         BC    07,@9FD                                            0137  01180000
*                   DO;                 /* PROCESS 1ST TEXT           * 01190000
*                     COUNTX=TEXTLEN;   /* SET UP 1ST TEXT LENGTH     * 01200000
         MVC   COUNTX(2),PARMS+55                                 0139  01210000
*                     TXTADR=0;         /* STARTING ADDRESS OF TEXT   * 01220000
         SR    @F,@F                                              0140  01230000
         ST    @F,TXTADR                                          0140  01240000
*                     IF NORLD='1'B     /* ARE THERE ANY RLDS ?       * 01250000
*                        THEN EOMSW='1'B; /* INDICATE NO RLDS & EOM   * 01260000
         TM    PARMS+20,B'00010000'                               0141  01270000
         BC    12,@9FC                                            0141  01280000
         OI    SW1,B'00010000'                                    0142  01290000
*                     TXTSW='1'B;       /* TURN ON TEXT SWITCH        * 01300000
@9FC     OI    SW1,B'00100000'                                    0143  01310000
*                     IF OVLYFL='1'B    /* IS IT OVERLAY STRUCTURE?   * 01320000
*                        THEN                                           01330000
         TM    PARMS+20,B'01000000'                               0144  01340000
         BC    12,@9FB                                            0144  01350000
*                          DO;          /* YES                        * 01360000
*                            BIGSEG=SEGRG1;/* SAVE LAST SEG NO IN RGN1* 01370000
         L     @8,PARMS+24         PARMS                          0146  01380000
         MVC   BIGSEG(1),8(@8)                                    0146  01390000
*                            IF SEGRG1<SEGRG2/* RGN2 SEGMENTS?        * 01400000
*                               THEN BIGSEG=SEGRG2;/* SAVE LAST SGMT. * 01410000
         CLC   8(1,@8),10(@8)                                     0147  01420000
         BC    10,@9FA                                            0147  01430000
         MVC   BIGSEG(1),10(@8)                                   0148  01440000
*                            IF SEGRG2<SEGRG3/* RGN3 SEGMENTS?        * 01450000
*                               THEN BIGSEG=SEGRG3;/* SAVE LAST SGMT  * 01460000
@9FA     CLC   10(1,@8),12(@8)                                    0149  01470000
         BC    10,@9F9                                            0149  01480000
         MVC   BIGSEG(1),12(@8)                                   0150  01490000
*                            IF SEGRG3<SEGRG4/*RGN4 SEGMENTS?         * 01500000
*                               THEN BIGSEG=SEGRG4;/* SAVE RGN4 SGMT  * 01510000
@9F9     CLC   12(1,@8),14(@8)                                    0151  01520000
         BC    10,@9F8                                            0151  01530000
         MVC   BIGSEG(1),14(@8)                                   0152  01540000
*                          END;                                         01550000
@9F8     EQU   *                                                  0153  01560000
*                   END;                                                01570000
@9FB     EQU   *                                                  0154  01580000
*              END;                                                     01590000
@9FD     EQU   *                                                  0155  01600000
*         IF TTRSW='1'B                 /* IS IT TTR LIST FOR OVLY SEG? 01610000
*           THEN GOTO TTRLAB;           /* YES-GO TO PROCESS THE LIST   01620000
@9FE     TM    SW1,B'00000100'                                    0156  01630000
         BC    01,TTRLAB                                          0157  01640000
*         RECCNT=RECCNT+1;              /* INCREASE RECORD NUMBER BY 1  01650000
         LA    @F,1                                               0158  01660000
         AH    @F,RECCNT                                          0158  01670000
         STH   @F,RECCNT                                          0158  01680000
*         PTR2=RECCNT;                  /* REC NUMBER INTO REG FOR CONV 01690000
         LR    @2,@F                                              0159  01700000
*         LABPTR2=ADDR(RECNO);          /* RETURN ADDR FOR CONVDEC RTN  01710000
         LA    @5,RECNO                                           0160  01720000
*         GOTO CONVDEC;                 /* TO CONVERT RECORD NUMBER     01730000
         BC    15,CONVDEC                                         0161  01740000
* RECNO:  RECNUM=WKX;                   /* RECORD NUMBER IN DECIMAL     01750000
RECNO    MVC   HDLINE+9(4),0(@2)                                  0162  01760000
*         IF TXTSW='1'B                 /* IS IT TEXT?                  01770000
*           THEN GOTO TEXT1;            /* YES - GO TO PROCESS TEXT     01780000
         TM    SW1,B'00100000'                                    0163  01790000
         BC    01,TEXT1                                           0164  01800000
*         WK3=ID;                       /* RECORD ID FOR CONVERSION     01810000
         L     @8,PARMS+24         PARMS                          0165  01820000
         MVC   DBLW2+4(1),0(@8)                                   0165  01830000
*         GENERATE;                                                     01840000
         UNPK  TYPEID(3),WK3(2)        CONVERT RECORD ID                01850000
         NC    TYPEID(2),ZONEOFF       CLEAR HIGH ORD 4 BITS            01860000
         TR    TYPEID(2),TABLE         TRANSLATE TO PRINTABLE HEX       01870000
         DS    0H                                                       01880000
*         SPAR2=' ';                    /* CLEAR IGNORED BYTE           01890000
         MVI   HDLINE+22,C' '                                     0167  01900000
*         /* IF AT LEAST ONE CONTROL RECORD HAVE BEEN ENCOUNTERED,      01910000
*            DO NOT TEST FOR SYM,CESD,IDR OR SCATTER-TRANSLATION RECORD 01920000
*            BUT GO DIRECTLY TO CHECK FOR RLD OR CONTROL RECORD         01930000
*         IF SKIPSW='1'B                                                01940000
*           THEN GOTO NEXTREC;                                          01950000
         TM    SW1,B'00001000'                                    0168  01960000
         BC    01,NEXTREC                                         0169  01970000
*         IF SCTRSW='1'B                /*MORE THAN ONE SC-TR REC?      01980000
*           THEN                                                        01990000
         TM    SW1,B'10000000'                                    0170  02000000
         BC    12,@9F7                                            0170  02010000
*             DO;                       /* YES -                        02020000
*               SCTRCNT=SCTRCNT-1;      /* DECREASE SC-TR RECORD COUNT  02030000
         LH    @F,SCTRCNT                                         0172  02040000
         BCTR  @F,0                                               0172  02050000
         STH   @F,SCTRCNT                                         0172  02060000
*               IF SCTRCNT=1            /* LAST SC-TR RECORD?           02070000
*                 THEN                                                  02080000
         LA    @F,1                                               0173  02090000
         CH    @F,SCTRCNT                                         0173  02100000
         BC    07,@9F6                                            0173  02110000
*                   DO;                 /* YES - LAST RECORD            02120000
*                     IF ERRORS(4)='0'B /* IF NO ERROR THEN PRINT RTN   02130000
*                                          WILL GO TO PROCESS TABLES    02140000
*                       THEN LABPTR=ADDR(SCTRB);                        02150000
         TM    PARMS+32,B'00010000'                               0175  02160000
         BC    05,@9F5                                            0175  02170000
         LA    @4,SCTRB                                           0176  02180000
         BC    15,@9F4                                            0177  02190000
*                       ELSE SCTRSW='0'B; /* IF ERROR THEN ONLY LAST HD 02200000
*                                            WILL BE PRINTED            02210000
@9F5     NI    SW1,B'01111111'                                    0177  02220000
*                     GOTO SCTRHDG;     /* GO TO PRINT SC-TR HDG        02230000
         BC    15,SCTRHDG                                         0178  02240000
*                   END;                                                02250000
*                 ELSE                  /* NO - MORE RECORDS            02260000
*                   IF ERRORS(4)='0'B   /* ERROR?                       02270000
*                     THEN GOTO SCTRA;  /* NO - GO TO MOVE SC-TR DATA   02280000
@9F6     TM    PARMS+32,B'00010000'                               0180  02290000
*                                          TO WORK AREA                 02300000
         BC    08,SCTRA                                           0181  02310000
*                     ELSE GOTO SCTRHDG; /* YES - GO TO PRINT HDG       02320000
         BC    15,SCTRHDG                                         0182  02330000
*             END;                      /* END OF TEST FOR SC-TR        02340000
@9F3     EQU   *                                                  0183  02350000
*                                                                       02360000
* /******************************************************************** 02370000
* /*  THIS SECTION OF CODE PROCESSES SYM AND IDR RECORDS DATA.          02380000
* /*  IF MODULE IS IN OVERLAY STRUCTURE THE TTR LIST FOR OVERLAY        02390000
* /*  SEGMENTS IS PRINTED BY THIS CODE ALSO.                            02400000
* /******************************************************************** 02410000
*         IF ID=SYM                     /* IS IT SYM RECORD?            02420000
*           THEN                                                        02430000
@9F7     L     @8,PARMS+24         PARMS                          0184  02440000
         CLC   0(1,@8),SYM                                        0184  02450000
         BC    07,@9F2                                            0184  02460000
*             DO;                       /* YES -                        02470000
*               PTR1=PTR1+4;            /* POINT TO SYM RECORD DATA     02480000
         LA    @3,4(0,@3)                                         0186  02490000
*               COUNTX=COUNT;           /* SYM RECORD DATA COUNT        02500000
         MVC   COUNTX(2),2(@8)                                    0187  02510000
*               TP2=SYMHD;              /* SYM RECORD HEADING           02520000
         MVC   HDLINE+25(3),SYMHD                                 0188  02530000
         MVI   HDLINE+28,C' '                                     0188  02540000
         MVC   HDLINE+29(3),HDLINE+28                             0188  02550000
*               WK3=SYMSUBT;            /* SYM REC SUBTYPE FOR CONV     02560000
         MVC   DBLW2+4(1),1(@8)                                   0189  02570000
* IDRLAB:       GENERATE;               /* CONVERTING SUBTYPE ID        02580000
IDRLAB   EQU   *                                                  0190  02590000
         UNPK  SUBTYPID(3),WK3(2)      RESULT DIRECTLY INTO THE BUFFER  02600000
         NC    SUBTYPID(2),ZONEOFF     CLEAR HIGH ORDER 4 BITS          02610000
         TR    SUBTYPID(2),TABLE       TRANSLATE TO PRINTABLE CHAR      02620000
         DS    0H                                                       02630000
*               SUBTYPID(3)=' ';        /* CLEAR LAST BYTE              02640000
         MVI   HDLINE+42,C' '                                     0191  02650000
*               TP3=SYMSHD;             /* SYM REC SUBTYPE HEADING      02660000
         MVC   HDLINE+32(7),SYMSHD                                0192  02670000
*               DATAHD1=DATAHD2;        /* FORMATTING OUTPUT LINE       02680000
         MVC   HDLINE+64(4),DATAHD2                               0193  02690000
*               PTR2=COUNTX;            /* IDR/SYM DATA COUNT FOR CONV  02700000
         LH    @2,COUNTX                                          0194  02710000
*               LABPTR2=ADDR(SYMLAB1);  /* RETURN ADDR FROM CONVERSION  02720000
         LA    @5,SYMLAB1                                         0195  02730000
*               GOTO CONVDEC;           /* TO CONV SYM DATA COUNT       02740000
         BC    15,CONVDEC                                         0196  02750000
* SYMLAB1:      SZ2=WKX;                /* CONVERTED NUMBER             02760000
SYMLAB1  MVC   HDLINE+74(4),0(@2)                                 0197  02770000
*               LABPTR2=ADDR(READIN);   /* RETURN ADDR FOR CONV RTN     02780000
         LA    @5,READIN                                          0198  02790000
*               ADDRX=ADDR(HDLINE);     /* POINT TO HEADING LINE        02800000
         LA    @F,HDLINE                                          0199  02810000
         ST    @F,ADDRX                                           0199  02820000
*               LABPTR=ADDR(TTRLAB);    /* RETURN ADDR FROM PRINT RTN   02830000
         LA    @4,TTRLAB                                          0200  02840000
*               IF LINECNT>49           /* DO NOT START NEW RECORD HDG  02850000
*                                          AT THE BOTTOM OF THE PAGE    02860000
*                 THEN LINECNT=PGEND;                                   02870000
         CH    @6,@D1                                             0201  02880000
         BC    12,@9F1                                            0201  02890000
         LH    @6,PGEND                                           0202  02900000
         BC    15,@9F0                                            0203  02910000
*                 ELSE LINECNT=LINECNT+2; /* INCREASE LINE COUNT        02920000
@9F1     AH    @6,@D2                                             0203  02930000
*               GOTO PRINT;             /* GO TO PRINT SYM/IDR HEADING  02940000
         BC    15,PRINT                                           0204  02950000
* TTRLAB:       CC=SKIP2;               /* CARRIAGE CTL - SKIP 2 LINES  02960000
TTRLAB   MVC   LINE(1),SKIP2                                      0205  02970000
*               LABPTR=ADDR(CONVSYM);   /* INIT LOOP ADDRESS            02980000
         LA    @4,CONVSYM                                         0206  02990000
*               ADDRX=ADDR(LINE);       /* POINT TO OUTPUT BUFFER       03000000
         LA    @F,LINE                                            0207  03010000
         ST    @F,ADDRX                                           0207  03020000
* CONVSYM:      PTR2=ADDR(OLINE);       /* OUTPUT LINE ADDRESS          03030000
CONVSYM  LA    @2,LINE+13                                         0208  03040000
*               DO I=1 TO 10;           /* TEN 4-BYTE ENTRIES PER LINE  03050000
         LA    @7,1                                               0209  03060000
@DO9EF   EQU   *                                                  0209  03070000
*                 GENERATE;             /* CONVERT SYM/IDR DATA         03080000
         UNPK  0(9,PTR2),0(5,PTR1)     CONVERTING DIRECTLY INTO BUFFER  03090000
         NC    0(8,PTR2),ZONEOFF       CLEAR HIGH ORDER 4 BITS          03100000
         TR    0(8,PTR2),TABLE         TRANSLATE TO PRINTABLE CHAR      03110000
         MVI   8(PTR2),BLANK           CLEAR LAST BYTE                  03120000
         DS    0H                                                       03130000
*                 COUNTX=COUNTX-4;      /* DECREASE BYTE COUNT          03140000
         LH    @F,COUNTX                                          0211  03150000
         SH    @F,@D3                                             0211  03160000
         STH   @F,COUNTX                                          0211  03170000
*                 IF COUNTX<=0          /* END OF DATA?                 03180000
*                   THEN                                                03190000
         SR    @F,@F                                              0212  03200000
         CH    @F,COUNTX                                          0212  03210000
         BC    04,@9EB                                            0212  03220000
*                     DO;               /* YES -                        03230000
*                       /* IDR DATA COUNT MAY BE NOT AN EVEN MULT. OF 4 03240000
*                       IF COUNTX<0     /* IS COUNT A NEGATIVE NUMBER?  03250000
*                         THEN                                          03260000
         CH    @F,COUNTX                                          0214  03270000
         BC    12,@9EA                                            0214  03280000
*                           DO;         /* YES -                        03290000
*                             PTR2=PTR2+X*2; /* POINT TO IDR DATA END   03300000
         LH    @E,X                                               0216  03310000
         AR    @E,@E                                              0216  03320000
         AR    @E,@2                                              0216  03330000
         LR    @2,@E                                              0216  03340000
*                             IDREND=' '; /* BLANKS IN PLACE OF GARBAGE 03350000
         MVI   0(@2),C' '                                         0217  03360000
         MVC   1(5,@2),0(@2)                                      0217  03370000
*                           END;                                        03380000
*                       LABPTR=LABPTR2; /* BRANCH AT END OF DATA        03390000
@9EA     LR    @4,@5                                              0219  03400000
*                       GOTO PRINT;     /* GO TO PRINT LAST LINE        03410000
         BC    15,PRINT                                           0220  03420000
*                     END;                                              03430000
*                 PTR1=PTR1+4;          /* ADVANCE INPUT DATA POINTER   03440000
@9EB     LA    @3,4(0,@3)                                         0222  03450000
*                 PTR2=PTR2+10;         /* NEXT ENTRY ON OUTPUT LINE    03460000
         LA    @2,10(0,@2)                                        0223  03470000
*               END;                                                    03480000
*               GOTO PRINT;             /* GO TO PRINT DATA             03490000
         AH    @7,@D4                                             0224  03500000
@DO9EE   CH    @7,@D5                                             0224  03510000
         BC    12,@DO9EF                                          0224  03520000
         BC    15,PRINT                                           0225  03530000
*             END;                      /* END OF SYM,IDR AND TTR LST   03540000
*                                          FOR OVLY SEGMENTS PROCESSING 03550000
*                                                                       03560000
* /******************************************************************** 03570000
* /*                CESD RECORD PROCESSING                              03580000
* /******************************************************************** 03590000
*         IF ID=CESD                    /* CESD RECORD?                 03600000
*           THEN                                                        03610000
@9F2     L     @8,PARMS+24         PARMS                          0227  03620000
         CLC   0(1,@8),CESD                                       0227  03630000
         BC    07,@9E9                                            0227  03640000
*             DO;                       /* YES -                        03650000
*               LABPTR2=ADDR(CESDLAB);  /* RETURN ADDR FOR CONVDEC      03660000
         LA    @5,CESDLAB                                         0229  03670000
*               PTR2=COUNT2;            /* ESD DATA COUNT               03680000
         LH    @2,6(0,@8)                                         0230  03690000
*               GOTO CONVDEC;           /* GO TO CONVERSION RTN         03700000
         BC    15,CONVDEC                                         0231  03710000
* CESDLAB:      SZ2=WKX;                /* CONVTD NUMB IN OUTPUT BUFFER 03720000
CESDLAB  MVC   HDLINE+74(4),0(@2)                                 0232  03730000
*               TP2=CESDTYP;            /* RECORD TYPE - CESD           03740000
         MVC   HDLINE+25(4),CESDTYP                               0233  03750000
         MVI   HDLINE+29,C' '                                     0233  03760000
         MVC   HDLINE+30(2),HDLINE+29                             0233  03770000
*               TP3=ESDIDHD;            /* ESDID HEADING                03780000
         MVC   HDLINE+32(7),ESDIDHD                               0234  03790000
*               DATAHD1=ESDHD;          /* ESD HEADING                  03800000
         MVC   HDLINE+64(4),ESDHD                                 0235  03810000
*               PTR2=COUNT1;            /* ESDID OF FIRST ESD ITEM      03820000
         L     @8,PARMS+24         PARMS                          0236  03830000
         LH    @2,4(0,@8)                                         0236  03840000
*               LABPTR2=ADDR(CESDL1);   /* RETURN ADDR FOR CONVDEC      03850000
         LA    @5,CESDL1                                          0237  03860000
*               GOTO CONVDEC;           /* GO TO CONVERSION RTN         03870000
         BC    15,CONVDEC                                         0238  03880000
* CESDL1:       SUBTYPID=WKX;           /* ESDID OF FIRST ESD ITEM      03890000
CESDL1   MVC   HDLINE+40(4),0(@2)                                 0239  03900000
*               IF LINECNT>48           /* DO NOT START NEW RECORD HDG  03910000
*                                          AT THE BOTTOM OF THE PAGE    03920000
*                 THEN LINECNT=PGEND;                                   03930000
         CH    @6,@D6                                             0240  03940000
         BC    12,@9E8                                            0240  03950000
         LH    @6,PGEND                                           0241  03960000
         BC    15,@9E7                                            0242  03970000
*                 ELSE LINECNT=LINECNT+2; /* INCREASE LINE COUNT        03980000
@9E8     AH    @6,@D2                                             0242  03990000
*               ADDRX=ADDR(HDLINE);     /* POINT TO THE HEADING LINE    04000000
@9E7     LA    @F,HDLINE                                          0243  04010000
         ST    @F,ADDRX                                           0243  04020000
*               LABPTR=ADDR(CESDL2);    /* RET ADDR FOR PRINT ROUTINE   04030000
         LA    @4,CESDL2                                          0244  04040000
*               GOTO PRINT;             /* GO TO PRINT CESD HEADING     04050000
         BC    15,PRINT                                           0245  04060000
* CESDL2:       ADDRX=ADDR(LINE);       /* POINT TO OUTPUT BUFFER       04070000
CESDL2   LA    @F,LINE                                            0246  04080000
         ST    @F,ADDRX                                           0246  04090000
*               OLINE(4:74)=CESDLIN1;   /* CESD SUBHEADING INTO BUFFER  04100000
         MVC   LINE+16(71),CESDLIN1                               0247  04110000
*               CC=SKIP2;               /* SKIP 2 LINES - CESD SUBHDG   04120000
         MVC   LINE(1),SKIP2                                      0248  04130000
*               LABPTR=ADDR(CESDL2A);   /* RET ADDR FOR PRINT ROUTINE   04140000
         LA    @4,CESDL2A                                         0249  04150000
*               GOTO PRINT;             /* GO TO PRINT CESD SUBHEADING  04160000
         BC    15,PRINT                                           0250  04170000
* /******************************************************************** 04180000
* /*           CESD RECORD DATA - EACH PASS WILL PRINT 1 LINE           04190000
* /******************************************************************** 04200000
* CESDL2A:      LABPTR=ADDR(CESDL6);    /* RETURN ADDR FOR PRINT RTN    04210000
CESDL2A  LA    @4,CESDL6                                          0251  04220000
*               COUNTX=COUNT2;          /* CESD DATA COUNT              04230000
         L     @8,PARMS+24         PARMS                          0252  04240000
         MVC   COUNTX(2),6(@8)                                    0252  04250000
*               CESDCNT=COUNT1;         /* INIT CESD # TO FIRST ESDID   04260000
         MVC   CESDCNT(2),4(@8)                                   0253  04270000
*               DO I=COUNTX TO 16 BY -16; /* PROCESS 16-BYTE ENTRIES    04280000
         LH    @7,COUNTX                                          0254  04290000
         BC    15,@DO9E5                                          0254  04300000
*                 PTR2=CESDCNT;         /* CESD ITEM COUNT FOR CONV     04310000
@DO9E6   LH    @2,CESDCNT                                         0255  04320000
*                 LABPTR2=ADDR(CESDL3); /* RETURN ADDR FOR CONVDEC      04330000
         LA    @5,CESDL3                                          0256  04340000
*                 GOTO CONVDEC;         /* GO TO CONV CESD ITEM COUNT   04350000
         BC    15,CONVDEC                                         0257  04360000
* CESDL3:         CESDNUM2=WK2;         /* FORMATTING OUTPUT LINE       04370000
CESDL3   MVC   CESDLIN2(4),DBLW2+4                                0258  04380000
*                 CESDCNT=CESDCNT+1;    /* CESD ITEMS COUNT             04390000
         LA    @F,1                                               0259  04400000
         AH    @F,CESDCNT                                         0259  04410000
         STH   @F,CESDCNT                                         0259  04420000
*                 WK1=TPADDR;           /* CESD DATA FOR CONVERSION     04430000
         MVC   DBLW2(4),16(@3)                                    0260  04440000
*                 GENERATE;             /* CONVERT TYPE & ADDRESS FIELD 04450000
         UNPK  DBLW(9),WK1(5)          LAST BYTE WILL BE IGNORED        04460000
         NC    DBLW(8),ZONEOFF         CLEAR HIGH ORDER 4 BITS          04470000
         TR    DBLW(8),TABLE           TRANSLATE TO PRINTABLE CHAR      04480000
         DS    0H                                                       04490000
*                 CESDTYP1=HWRD1;       /* CESD ITEM ID                 04500000
         MVC   CESDLIN2+18(2),DBLW                                0262  04510000
*                 TYPE=TYPE & '0F'X;    /* CLEAR HIGH ORDER 4 BITS      04520000
         NI    16(@3),X'0F'                                       0263  04530000
*                 CESDTYP2=CESDTYPE(TYPE+1); /* CESD ITEM NAME          04540000
         SR    @8,@8                                              0264  04550000
         IC    @8,16(0,@3)                                        0264  04560000
         MH    @8,@D7                                             0264  04570000
         LA    @E,CESDTYPE(@8)                                    0264  04580000
         MVC   CESDLIN2+20(6),0(@E)                               0264  04590000
*                 CSECTADR=SIXBYT;      /* CSECT ADDRESS                04600000
         MVC   CESDLIN2+29(6),DBLW+2                              0265  04610000
*                 SYMB=SYMBOL;          /* EXTERNAL NAME FOR CESD ITEMS 04620000
         MVC   CESDLIN2+8(8),8(@3)                                0266  04630000
*                 IF TYPE=LR            /* LABEL REFERENCE ITEM?        04640000
*                   THEN LNGTH=LNGTH&'00FFFF'X; /* YES-CLEAR FIRST BYTE 04650000
         CLC   16(1,@3),LR                                        0267  04660000
         BC    07,@9E2                                            0267  04670000
*                                                  OF ID/LENGTH FIELD   04680000
         NC    21(3,@3),@X7                                       0268  04690000
*                 IF TYPE=ER | TYPE=WX  /* ER OR WX ITEM?               04700000
*                   THEN                                                04710000
@9E2     CLC   16(1,@3),ER                                        0269  04720000
         BC    08,@9E1                                            0269  04730000
         CLC   16(1,@3),WX                                        0269  04740000
         BC    07,@9E0                                            0269  04750000
*                     DO;               /* YES - NO CONVERSION REQUIRED 04760000
*                       IF LNGTH(1)='06'X /* NEVER CALL ITEM?           04770000
*                         THEN                                          04780000
@9E1     CLI   21(@3),X'06'                                       0271  04790000
         BC    07,@9DF                                            0271  04800000
*                           DO;         /* YES -                        04810000
*                             LENDEC(7:8)='06'; /* DEC ID               04820000
         MVC   CESDLIN2+56(2),@C9                                 0273  04830000
*                             LENHEX(5:6)='06'; /* HEX ID               04840000
         MVC   CESDLIN2+68(2),@C9                                 0274  04850000
*                             NEVCALL=NCMSG; /* NEVER CALL MESSAGE      04860000
         MVC   CESDLIN2+72(10),NCMSG                              0275  04870000
         BC    15,@9DE                                            0277  04880000
*                           END;                                        04890000
*                         ELSE                                          04900000
*                           DO;         /* NOT A NEVER CALL ER          04910000
*                             LENDEC=LNGTH; /* DEC LENGTH - BLANKS      04920000
@9DF     MVC   CESDLIN2+50(3),21(@3)                              0278  04930000
         MVI   CESDLIN2+53,C' '                                   0278  04940000
         MVC   CESDLIN2+54(4),CESDLIN2+53                         0278  04950000
*                             LENHEX=LNGTH; /* HEX LENGTH - BLANKS      04960000
         MVC   CESDLIN2+64(3),21(@3)                              0279  04970000
         MVI   CESDLIN2+67,C' '                                   0279  04980000
         MVC   CESDLIN2+68(2),CESDLIN2+67                         0279  04990000
*                           END;                                        05000000
*                     END;                                              05010000
         BC    15,@9DD                                            0282  05020000
*                   ELSE                /* NO - ITEM NOT ER             05030000
*                     DO;               /* CONVERT LENGTH FIELD         05040000
*                       WK4=LNGTH;      /* LENGTH FIELD TO BE CONVERTED 05050000
@9E0     MVC   DBLW2+5(3),21(@3)                                  0283  05060000
*                       GENERATE;       /* CONV TO PRINTABLE HEX        05070000
         UNPK  LENHEX(7),WK4(4)        LAST BYTE WILL BE INGORED        05080000
         NC    LENHEX(6),ZONEOFF       CLEAR HIGH ORDER 4 BITS          05090000
         TR    LENHEX(6),TABLE         TRANSLATE TO PRINTABLE CHAR      05100000
         MVI   LENHEX+6,BLANK          CLEAR LAST BYTE                  05110000
         DS    0H                                                       05120000
*                       /* BLANK OUT LEADING ZEROS IN HEX LENGTH FIELD  05130000
*                       PTR2=ADDR(LENHEX); /* POINT TO THE FIRST BYTE   05140000
         LA    @2,CESDLIN2+64                                     0285  05150000
* NEXTBYT:              IF BYTE='0'     /* IS IT ZERO?                  05160000
*                         THEN                                          05170000
NEXTBYT  CLI   0(@2),C'0'                                         0286  05180000
         BC    07,@9DC                                            0286  05190000
*                           DO;         /* YES -                        05200000
*                             BYTE=' '; /* BLANK IN PLACE OF ZERO       05210000
         MVI   0(@2),C' '                                         0288  05220000
*                             PTR2=PTR2+1; /* POINT TO THE NEXT BYTE    05230000
         LA    @2,1(0,@2)                                         0289  05240000
*                             IF PTR2<ENDADDR /* LAST BYTE?             05250000
*                               THEN GOTO NEXTBYT; /* NO - CHECK NEXT   05260000
         C     @2,ENDADDR                                         0290  05270000
         BC    04,NEXTBYT                                         0291  05280000
*                           END;                                        05290000
*                       IF OVLYFL='1'B & NOTEDIT='0'B /* OVERLAY &      05300000
*                                         NOT-EDITABLE?               * 05310000
*                         THEN                                          05320000
@9DC     TM    PARMS+20,B'01000000'                               0293  05330000
         BC    12,@9DB                                            0293  05340000
         TM    PARMS+20,B'00100000'                               0293  05350000
         BC    05,@9DA                                            0293  05360000
*                           IF SEGNUM>BIGSEG /* YES-SAVE NUMBER OF SEGM 05370000
*                             THEN BIGSEG=SEGNUM; /*# OF ELEM IN TTRLST 05380000
         CLC   20(1,@3),BIGSEG                                    0294  05390000
         BC    12,@9D9                                            0294  05400000
         MVC   BIGSEG(1),20(@3)                                   0295  05410000
*                       PTR2=SEGNUM;    /* FOR SEGMENT NUMBER CONV      05420000
@9D9     EQU   *                                                  0296  05430000
@9DA     EQU   *                                                  0296  05440000
@9DB     SR    @2,@2                                              0296  05450000
         IC    @2,20(0,@3)                                        0296  05460000
*                       LABPTR2=ADDR(CESDL4); /* RETURN ADDRESS         05470000
         LA    @5,CESDL4                                          0297  05480000
*                       GOTO CONVDEC;   /* TO CONVERT SEG NUMBER TO DEC 05490000
         BC    15,CONVDEC                                         0298  05500000
* CESDL4:               SEGNO=WK4;      /* SEGMENT NUMBER INTO BUFFER   05510000
CESDL4   MVC   CESDLIN2+41(3),DBLW2+5                             0299  05520000
*                       PTR2=LNGTH;     /* FOR CONVERSION               05530000
         MVC   @TEMP3+1(3),21(@3)                                 0300  05540000
         L     @2,@TEMP3                                          0300  05550000
*                       LABPTR2=ADDR(CESDL5); /* RETURN ADDRESS         05560000
         LA    @5,CESDL5                                          0301  05570000
*                       GOTO CONVDEC;   /* TO CONV ROUTINE              05580000
         BC    15,CONVDEC                                         0302  05590000
* CESDL5:               LENDEC=DBLW2;   /* LENGTH IN DECIMAL            05600000
CESDL5   MVC   CESDLIN2+50(8),DBLW2                               0303  05610000
*                     END;                                              05620000
*                 GOTO PRINT;           /* GO TO PRINT CESD LINE        05630000
         BC    15,PRINT                                           0305  05640000
* CESDL6:         PTR1=PTR1+16;         /* POINT TO THE NEXT CESD ITEM  05650000
CESDL6   LA    @3,16(0,@3)                                        0306  05660000
*               END;                    /* END OF ONE CESD LINE         05670000
*               GOTO READIN;            /* GO TO READ NEXT RECORD       05680000
         SH    @7,@D8                                             0307  05690000
@DO9E5   CH    @7,@D8                                             0307  05700000
         BC    10,@DO9E6                                          0307  05710000
         BC    15,READIN                                          0308  05720000
*             END;                      /* END OF CESD REC PROCESSING   05730000
* /******************************************************************** 05740000
* /*               IDR RECORD                                           05750000
* /******************************************************************** 05760000
*         IF ID=IDR                     /* IDR RECORD?                  05770000
*           THEN                                                        05780000
@9E9     L     @8,PARMS+24         PARMS                          0310  05790000
         CLC   0(1,@8),IDR                                        0310  05800000
         BC    07,@9D8                                            0310  05810000
*             DO;                       /* YES -                        05820000
*               WK3=IDRSUB;             /* IDR SUBTYPE FOR CONVERSION   05830000
         MVC   DBLW2+4(1),2(@8)                                   0312  05840000
*               TP2=IDRTYPE;            /* IDR NAME IN HEADING          05850000
         MVC   HDLINE+25(3),IDRTYPE                               0313  05860000
         MVI   HDLINE+28,C' '                                     0313  05870000
         MVC   HDLINE+29(3),HDLINE+28                             0313  05880000
*               COUNTX=IDRCNT-2;        /* IDR RECORD DATA COUNT        05890000
         LH    @F,@D9                                             0314  05900000
         SR    @0,@0                                              0314  05910000
         IC    @0,1(0,@8)                                         0314  05920000
         AR    @F,@0                                              0314  05930000
         STH   @F,COUNTX                                          0314  05940000
*               X=COUNTX//4;            /* REMAINDER - WILL BE USED     05950000
*                                          AT THE END OF IDR DATA PROC. 05960000
         LR    @E,@F                                              0315  05970000
         SRDA  @E,32                                              0315  05980000
         LA    @0,4                                               0315  05990000
         DR    @E,@0                                              0315  06000000
         STH   @E,X                                               0315  06010000
*               PTR1=ADDR(IDRDATA);     /* BEGINNING OF IDR DATA ADDR   06020000
         LA    @3,3(0,@8)                                         0316  06030000
*               GOTO IDRLAB;            /* GO TO PROCESS IDR REC DATA   06040000
         BC    15,IDRLAB                                          0317  06050000
*             END;                                                      06060000
*                                                                       06070000
* /******************************************************************** 06080000
* /*             SCATTER-TRANSLATION RECORD                             06090000
* /******************************************************************** 06100000
*         IF ID=SCTR                    /* SCTR-TRANS?                  06110000
*           THEN                                                        06120000
@9D8     L     @8,PARMS+24         PARMS                          0319  06130000
         CLC   0(1,@8),SCTR                                       0319  06140000
         BC    07,@9D7                                            0319  06150000
*             DO;                       /* YES -                        06160000
*               TYPENAME=STTAB;         /* RECORD TYPE NAME             06170000
         MVC   HDLINE+25(19),STTAB                                0321  06180000
*               DATAHD1=DATAHD2;        /* DATA HEADING                 06190000
         MVC   HDLINE+64(4),DATAHD2                               0322  06200000
*               SCTRCNT=1;              /* INITIALIZE SC-TR RECORD CNT  06210000
         LA    @F,1                                               0323  06220000
         STH   @F,SCTRCNT                                         0323  06230000
*               COUNTX=SCSZ+TRSZ;       /* TOTAL SCATT-TRANS DATA SIZE  06240000
         LH    @F,PARMS+30                                        0324  06250000
         AH    @F,PARMS+28                                        0324  06260000
         STH   @F,COUNTX                                          0324  06270000
*               IF COUNTX<=MAXREC       /* WORK AREA NEEDED?            06280000
*                 THEN LABPTR=ADDR(SCTRB); /* NO - RET ADR FOR PRINT RT 06290000
         LH    @F,MAXREC                                          0325  06300000
         CH    @F,COUNTX                                          0325  06310000
         BC    04,@9D6                                            0325  06320000
*                                             AFTER PRINTING SC-TR HDG  06330000
         LA    @4,SCTRB                                           0326  06340000
         BC    15,@9D5                                            0327  06350000
*                 ELSE                                                  06360000
*                   DO;                 /* YES- MORE THAN ONE SC-TR REC 06370000
*                     LABPTR=ADDR(READIN); /* PRINT WILL GO TO READ NEX 06380000
*                                             REC AFTER PRINTING HDG    06390000
@9D6     LA    @4,READIN                                          0328  06400000
*                     SCTRSW='1'B;      /* MORE THAN ONE SC-TR REC SW   06410000
         OI    SW1,B'10000000'                                    0329  06420000
*                     SCTRCNT=COUNTX/MAXREC; /* NUMBER OF SC-TR RECORDS 06430000
         LH    @E,COUNTX                                          0330  06440000
         SRDA  @E,32                                              0330  06450000
         LH    @0,MAXREC                                          0330  06460000
         DR    @E,@0                                              0330  06470000
         STH   @F,SCTRCNT                                         0330  06480000
*                     X=COUNTX//MAXREC; /* NUMBER OF BYTES IN LAST REC  06490000
         STH   @E,X                                               0331  06500000
*                     /* COMPUTING SIZE OF WORK AREA FOR SCATTER-TRANSL 06510000
*                     IF X=0            /* EXACTLY 1K RECORDS?          06520000
*                       THEN X=COUNTX-MAXREC; /* YES- X NOW HOLDS THE   06530000
         SR    @F,@F                                              0332  06540000
         CH    @F,X                                               0332  06550000
         BC    07,@9D4                                            0332  06560000
*                                                SIZE OF WRK AR NEEDED  06570000
         LH    @F,COUNTX                                          0333  06580000
         SH    @F,MAXREC                                          0333  06590000
         STH   @F,X                                               0333  06600000
         BC    15,@9D3                                            0334  06610000
*                       ELSE            /* NO -                         06620000
*                         DO;           /* X HAS THE SIZE OF LAST REC   06630000
*                           SCTRCNT=SCTRCNT+1; /* NUMBER OF SC-TR REC   06640000
@9D4     LA    @F,1                                               0335  06650000
         AH    @F,SCTRCNT                                         0335  06660000
         STH   @F,SCTRCNT                                         0335  06670000
*                           X=COUNTX-X; /* X NOW HOLDS THE SIZE         06680000
*                                          OF WORK AREA NEEDED          06690000
         LH    @F,COUNTX                                          0336  06700000
         SH    @F,X                                               0336  06710000
         STH   @F,X                                               0336  06720000
*                         END;                                          06730000
*                     IF X>STORLEN      /* WORK AREA BIG ENOUGH?        06740000
*                       THEN                                            06750000
@9D3     L     @F,PARMS+16                                        0338  06760000
         CH    @F,X                                               0338  06770000
         BC    10,@9D2                                            0338  06780000
*                         DO;           /* NO -                         06790000
*                           ERRORS(4)='1'B; /* ERROR-MORE STORAGE REQD  06800000
         OI    PARMS+32,B'00010000'                               0340  06810000
*                           GOTO SCTRHDG; /* GO TO PRINT HEADING        06820000
         BC    15,SCTRHDG                                         0341  06830000
*                         END;                                          06840000
*                     SCTRPTR=MAINADDR+STORLEN; /* END OF WORK AREA ADR 06850000
@9D2     L     @F,PARMS+16                                        0343  06860000
         A     @F,PARMS+12                                        0343  06870000
         ST    @F,SCTRPTR                                         0343  06880000
*                     SCTRPTR=SCTRPTR-4;/* ADJ FUTURE UNPACK   XA03396  06890000
         SH    @F,@D3                                             0344  06900000
         ST    @F,SCTRPTR                                         0344  06910000
*                                                                       06920000
* SCTRA:              SCTRPTR=SCTRPTR-MAXREC; /* POINT TO CURRENT REC   06930000
SCTRA    L     @F,SCTRPTR                                         0345  06940000
         SH    @F,MAXREC                                          0345  06950000
         ST    @F,SCTRPTR                                         0345  06960000
*                                                                       06970000
*                     /* MOVING SCATTER-TRANSLATION DATA TO WORK AREA   06980000
*                     SCTRREC(1:256)=RECORD(5:260);                     06990000
         L     @8,PARMS+24         PARMS                          0346  07000000
         LR    @9,@F                                              0346  07010000
         MVC   0(256,@9),4(@8)                                    0346  07020000
*                     SCTRREC(257:512)=RECORD(261:516);                 07030000
         MVC   256(256,@9),260(@8)                                0347  07040000
*                     SCTRREC(513:768)=RECORD(517:772);                 07050000
         MVC   512(256,@9),516(@8)                                0348  07060000
*                     SCTRREC(769:1020)=RECORD(773:1024);               07070000
         MVC   768(252,@9),772(@8)                                0349  07080000
*                   END;                                                07090000
* SCTRHDG:      PTR2=COUNT;             /* SCATTER DATA SIZE            07100000
@9D5     EQU   *                                                  0351  07110000
SCTRHDG  L     @8,PARMS+24         PARMS                          0351  07120000
         LH    @2,2(0,@8)                                         0351  07130000
*               LABPTR2=ADDR(SCTRL1);   /* RETURN ADDR FOR CONV RTN     07140000
         LA    @5,SCTRL1                                          0352  07150000
*               GOTO CONVDEC;           /* TO CONV RECORD COUNT         07160000
         BC    15,CONVDEC                                         0353  07170000
* SCTRL1:       SZ2=WKX;                /* COUNT IN DECIMAL             07180000
SCTRL1   MVC   HDLINE+74(4),0(@2)                                 0354  07190000
*               IF LINECNT>48           /* DO NOT START NEW RECORD HDG  07200000
*                                          AT THE BOTTOM OF THE PAGE    07210000
*                THEN LINECNT=PGEND;                                    07220000
         CH    @6,@D6                                             0355  07230000
         BC    12,@9D1                                            0355  07240000
         LH    @6,PGEND                                           0356  07250000
         BC    15,@9D0                                            0357  07260000
*                 ELSE LINECNT=LINECNT+2; /* INCREASE LINE COUNT        07270000
@9D1     AH    @6,@D2                                             0357  07280000
*               ADDRX=ADDR(HDLINE);     /* POINT TO HEADING LINE        07290000
@9D0     LA    @F,HDLINE                                          0358  07300000
         ST    @F,ADDRX                                           0358  07310000
*               GOTO PRINT;             /* TO PRINT SCTR-TRANS HEADING  07320000
         BC    15,PRINT                                           0359  07330000
* /******************************************************************** 07340000
* /*             TRANSLATION TABLE PROCESSING                           07350000
* /******************************************************************** 07360000
* SCTRB:        PTR1=PTR1+4;            /* POINT TO SCATTER-TRANSL DATA 07370000
SCTRB    LA    @3,4(0,@3)                                         0360  07380000
*               IF SCTRSW='1'B          /* MORE THAN ONE REC?           07390000
*                 THEN ENDADDR=PTR1+COUNT; /* YES-GET END OF BUFF ADDR  07400000
         TM    SW1,B'10000000'                                    0361  07410000
         BC    12,@9CF                                            0361  07420000
         L     @8,PARMS+24         PARMS                          0362  07430000
         LH    @F,2(0,@8)                                         0362  07440000
         AR    @F,@3                                              0362  07450000
         ST    @F,ENDADDR                                         0362  07460000
*               OLIN2=TRTAB;            /* TRANSLATION HEADING          07470000
@9CF     MVC   LINE+52(11),STTAB+8                                0363  07480000
*               OLIN5=TAB;              /* TABLE HEADING                07490000
         MVC   LINE+64(5),TAB                                     0364  07500000
*               CC=SKIP2;               /* SKIP 2 LINES BEFORE HDG      07510000
         MVC   LINE(1),SKIP2                                      0365  07520000
*               ADDRX=ADDR(LINE);       /* POINT TO OUTPUT BUFFER       07530000
         LA    @F,LINE                                            0366  07540000
         ST    @F,ADDRX                                           0366  07550000
*               LABPTR=ADDR(SCTRL3);    /* RET ADDR FOR PRINT ROUTINE   07560000
         LA    @4,SCTRL3                                          0367  07570000
*               GOTO PRINT;             /* GO TO PRINT SCATTER TAB HDG  07580000
         BC    15,PRINT                                           0368  07590000
* SCTRL3:       COUNTX=TRSZ;            /* TRANSLATION TABLE SIZE       07600000
SCTRL3   MVC   COUNTX(2),PARMS+30                                 0369  07610000
*               LABPTR2=ADDR(SCTRL4);   /* RETURN ADDR FOR CONVDEC RTN  07620000
         LA    @5,SCTRL4                                          0370  07630000
*               LABPTR=ADDR(NEXTTR);    /* RETURN ADDR FOR PRINT RTN    07640000
         LA    @4,NEXTTR                                          0371  07650000
* NEXTTR:       DATAPTR=ADDR(OLINE);    /* INITIAL OUTPUT LINE ENTRY    07660000
NEXTTR   LA    @F,LINE+13                                         0372  07670000
         ST    @F,DATAPTR                                         0372  07680000
*               DO I=1 TO 20;           /* 20 ENTRIES PER LINE          07690000
         LA    @7,1                                               0373  07700000
*                 PTR2=TR1;             /* FOR CONVERSION TO DEC        07710000
@DO9CE   LH    @2,0(0,@3)                                         0374  07720000
*                 GOTO CONVDEC;         /* TO CONVERT TR-TAB DATA       07730000
         BC    15,CONVDEC                                         0375  07740000
* SCTRL4:         TR2=WK2;              /* OUTPUT BUFFER - 4 BYTES      07750000
SCTRL4   L     @8,DATAPTR                                         0376  07760000
         MVC   0(4,@8),DBLW2+4                                    0376  07770000
*                 PTR1=PTR1+2;          /* POINT TO NEXT ITEM           07780000
         LA    @3,2(0,@3)                                         0377  07790000
*                 COUNTX=COUNTX-2;      /* TRANSLATION TABLE BYTE COUNT 07800000
         LH    @F,COUNTX                                          0378  07810000
         SH    @F,@D2                                             0378  07820000
         STH   @F,COUNTX                                          0378  07830000
*                 IF COUNTX<=0          /* END OF TRANSLATION TABLE?    07840000
*                   THEN                                                07850000
         SR    @F,@F                                              0379  07860000
         CH    @F,COUNTX                                          0379  07870000
         BC    04,@9CA                                            0379  07880000
*                     DO;               /* YES -                        07890000
*                       LABPTR=ADDR(SCATTER); /* GO TO SCTR PROCESSING  07900000
*                                                AFTER PRINT. LAST LINE 07910000
         LA    @4,SCATTER                                         0381  07920000
*                       COUNTX=SCSZ;    /* SCATTER TABLE SIZE           07930000
         MVC   COUNTX(2),PARMS+28                                 0382  07940000
*                       GOTO PRINT;     /* TO PROCESS LAST LINE         07950000
         BC    15,PRINT                                           0383  07960000
*                     END;                                              07970000
*                 IF SCTRSW='1'B & PTR1=ENDADDR /* ANY DATA IN WK AREA  07980000
*                                                  AND END OF BUFFER?   07990000
*                   THEN                                                08000000
@9CA     TM    SW1,B'10000000'                                    0385  08010000
         BC    12,@9C9                                            0385  08020000
         C     @3,ENDADDR                                         0385  08030000
         BC    07,@9C8                                            0385  08040000
*                     DO;               /* YES -                        08050000
*                       SCTRSW='0'B;    /* BUFFER DATA PROCESSED INDIC. 08060000
         NI    SW1,B'01111111'                                    0387  08070000
*                       PTR1=SCTRPTR;   /* POINT TO WORK AREA           08080000
         L     @3,SCTRPTR                                         0388  08090000
*                     END;                                              08100000
*                 DATAPTR=DATAPTR+5;    /* ADVANCE OUTPUT LINE POINTER  08110000
@9C8     EQU   *                                                  0390  08120000
@9C9     LA    @F,5                                               0390  08130000
         A     @F,DATAPTR                                         0390  08140000
         ST    @F,DATAPTR                                         0390  08150000
*               END;                    /* END OF ONE LINE LOOP         08160000
*               GOTO PRINT;             /* GO PRINT TRASLATION TAB LINE 08170000
         AH    @7,@D4                                             0391  08180000
@DO9CD   CH    @7,@D10                                            0391  08190000
         BC    12,@DO9CE                                          0391  08200000
         BC    15,PRINT                                           0392  08210000
* /******************************************************************** 08220000
* /*               SCATTER TABLE PROCESSING                             08230000
* /******************************************************************** 08240000
* SCATTER:      OLIN3=SCTAB;            /* SCATTER HEADING              08250000
SCATTER  MVC   LINE+55(7),STTAB                                   0393  08260000
*               OLIN4=TAB;              /* TABLE HEADING                08270000
         MVC   LINE+63(5),TAB                                     0394  08280000
*               CC=SKIP2;               /* SKIP 2 LINES BEFORE HEADING  08290000
         MVC   LINE(1),SKIP2                                      0395  08300000
*               IF LINECNT>48           /* DO NOT START SCATTER TABLE   08310000
*                                          AT THE BOTTOM OF THE PAGE    08320000
*                 THEN LINECNT=PGEND;                                   08330000
         CH    @6,@D6                                             0396  08340000
         BC    12,@9C7                                            0396  08350000
         LH    @6,PGEND                                           0397  08360000
*               LABPTR=ADDR(NEXTSC);    /* RET ADDR FROM PRINT ROUTINE  08370000
@9C7     LA    @4,NEXTSC                                          0398  08380000
*               GOTO PRINT;             /* TO PRINT SCATTER TABLE LINE  08390000
         BC    15,PRINT                                           0399  08400000
* NEXTSC:       PTR2=ADDR(OLINE)+4;     /* INITIALIZE OUTPUT POINTER    08410000
NEXTSC   LA    @2,LINE+17                                         0400  08420000
*               DO I=1 TO 8;            /* NUMBER OF ENTRIES PER PAGE   08430000
         LA    @7,1                                               0401  08440000
@DO9C6   EQU   *                                                  0401  08450000
*                 GENERATE;             /* CONVERTING SCATTER TABLE     08460000
         UNPK  DBLW(9),0(5,PTR1)       LAST BYTE WILL BE IGNORED        08470000
         NC    DBLW(8),ZONEOFF         CLEAR HIGH ORDER 4 BITS          08480000
         TR    DBLW(8),TABLE           TRANSLATE TO PRINTABLE CHAR      08490000
         DS    0H                                                       08500000
*                 HIAR=HWRD1;           /* HIERARCHY BYTE               08510000
         MVC   0(2,@2),DBLW                                       0403  08520000
*                 ADR=SIXBYT;           /* ADDRESS                      08530000
         MVC   3(6,@2),DBLW+2                                     0404  08540000
*                 PTR1=PTR1+4;          /* ADVANCE INPUT POINTER        08550000
         LA    @3,4(0,@3)                                         0405  08560000
*                 COUNTX=COUNTX-4;      /* DECREASE SCATT TAB BYTE CNT  08570000
         LH    @F,COUNTX                                          0406  08580000
         SH    @F,@D3                                             0406  08590000
         STH   @F,COUNTX                                          0406  08600000
*                 IF COUNTX<=0          /* END OF SCATTER TABLE?        08610000
*                   THEN                                                08620000
         SR    @F,@F                                              0407  08630000
         CH    @F,COUNTX                                          0407  08640000
         BC    04,@9C2                                            0407  08650000
*                     DO;               /* YES -                        08660000
*                       LABPTR=ADDR(READIN); /* PRINT WILL GO TO READ   08670000
*                                               A NEW RECORD            08680000
         LA    @4,READIN                                          0409  08690000
*                       GOTO PRINT;     /* GO TO PROCESS LAST LINE      08700000
         BC    15,PRINT                                           0410  08710000
*                     END;                                              08720000
*                 IF SCTRSW='1'B & PTR1=ENDADDR /* ANY DATA IN WORK ARE 08730000
*                                                  AND END OF BUFFER?   08740000
*                   THEN                                                08750000
@9C2     TM    SW1,B'10000000'                                    0412  08760000
         BC    12,@9C1                                            0412  08770000
         C     @3,ENDADDR                                         0412  08780000
         BC    07,@9C0                                            0412  08790000
*                     DO;               /* YES -                        08800000
*                       SCTRSW='0'B;    /* BUFFER PROCESSED INDICATOR   08810000
         NI    SW1,B'01111111'                                    0414  08820000
*                       PTR1=SCTRPTR;   /* POINT TO WORK AREA           08830000
         L     @3,SCTRPTR                                         0415  08840000
*                     END;              /* END OF TEST FOR END OF BUFF. 08850000
*                 PTR2=PTR2+12;         /* ADVANCE OUTPUT POINTER       08860000
@9C0     EQU   *                                                  0417  08870000
@9C1     LA    @2,12(0,@2)                                        0417  08880000
*               END;                    /* END OF ONE LINE PROCESSING   08890000
*               GOTO PRINT;             /* TO PRINT SCATTER TABLE LINE  08900000
         AH    @7,@D4                                             0418  08910000
@DO9C5   CH    @7,@D11                                            0418  08920000
         BC    12,@DO9C6                                          0418  08930000
         BC    15,PRINT                                           0419  08940000
*             END;                      /* END OF SCTR-TRANS PROCESSING 08950000
*                                                                       08960000
* /******************************************************************** 08970000
* /*              CONTROL RECORD PROCESSING                             08980000
* /******************************************************************** 08990000
*         SKIPSW='1'B;                  /* SET SWITCH TO BRANCH TO      09000000
*                                          NEXTREC AFTER NEXT READ      09010000
@9D7     OI    SW1,B'00001000'                                    0421  09020000
* NEXTREC:                                                              09030000
*         IF ID(1:4)^='0000'B                                           09040000
*           THEN GOTO INVREC;           /* INVALID LOAD MODULE REC TYPE 09050000
NEXTREC  L     @8,PARMS+24         PARMS                          0422  09060000
         TM    0(@8),B'11110000'                                  0422  09070000
         BC    05,INVREC                                          0423  09080000
*         IF (ID&TEST)=CTRL             /* CONTROL RECORD?              09090000
*           THEN                                                        09100000
         MVC   @CTEMP2(1),TEST                                    0424  09110000
         NC    @CTEMP2(1),0(@8)                                   0424  09120000
         CLC   @CTEMP2(1),CTRL                                    0424  09130000
         BC    07,@9BF                                            0424  09140000
*             DO;                       /* YES -                        09150000
*               IF ID=CTLEOM            /* LAST CONTROL RECORD?         09160000
*                 THEN EOMSW='1'B;      /* YES-SET END OF MODULE SWITCH 09170000
         CLC   0(1,@8),CTLEOM                                     0426  09180000
         BC    07,@9BE                                            0426  09190000
         OI    SW1,B'00010000'                                    0427  09200000
*               TYPENAME=CTLTYPE;       /* CONTROL REC HEADING          09210000
@9BE     MVC   HDLINE+25(8),CTRLDTYP                              0428  09220000
         MVI   HDLINE+33,C' '                                     0428  09230000
         MVC   HDLINE+34(10),HDLINE+33                            0428  09240000
*               SIZE2=' ';              /* CLEAR RLD SIZE FIELD         09250000
         MVI   HDLINE+64,C' '                                     0429  09260000
         MVC   HDLINE+65(13),HDLINE+64                            0429  09270000
* CTRLD1:       CTHD=CTLTYPE;           /* FORMATTING OUTPUT LINE       09280000
CTRLD1   MVC   HDLINE+44(8),CTRLDTYP                              0430  09290000
*               SZHD1=SIZEHD;           /* CTL REC SIZE HEADING         09300000
         MVC   HDLINE+52(4),SIZEHD                                0431  09310000
*               PTR2=COUNT1;            /* TO BE CONVERTED TO DEC       09320000
         L     @8,PARMS+24         PARMS                          0432  09330000
         LH    @2,4(0,@8)                                         0432  09340000
*               LABPTR2=ADDR(CNTRL1);   /* RETURN ADDR FOR CONVDEC      09350000
         LA    @5,CNTRL1                                          0433  09360000
*               GOTO CONVDEC;           /* TO CONVERT REC SIZE          09370000
         BC    15,CONVDEC                                         0434  09380000
* CNTRL1:       SZ1=WKX;                /* SIZE INTO BUFFER             09390000
CNTRL1   MVC   HDLINE+57(4),0(@2)                                 0435  09400000
*               CCWHD1=CCWHD2;          /* CCW HEADING                  09410000
         MVC   HDLINE+82(3),CCWHD2                                0436  09420000
*               DBLW2=CCW;              /* CCW FIELD INTO WORK AREA     09430000
         L     @8,PARMS+24         PARMS                          0437  09440000
         MVC   DBLW2(8),8(@8)                                     0437  09450000
         MVI   DBLW2+8,C' '                                       0437  09460000
         MVC   DBLW2+9(2),DBLW2+8                                 0437  09470000
*               GENERATE;                                               09480000
         UNPK  CCW1(9),WK1(5)          FIRST HALF OF CCW                09490000
         UNPK  CCW2(9),WK2(5)          SECOND HALF OF CCW               09500000
         NC    CCW1(8),ZONEOFF         CLEAR HIGH ORDER 4 BITS          09510000
         NC    CCW2(8),ZONEOFF         CLEAR HIGH ORDER 4 BITS          09520000
         TR    CCW1(8),TABLE           TRANSLATE TO PRINTABLE CHAR      09530000
         TR    CCW2(8),TABLE           TRANSLATE TO PRINTABLE CHAR      09540000
         DS    0H                                                       09550000
*               SPARE4=' ';             /* CLEAR SIGN BYTE              09560000
         MVI   HDLINE+94,C' '                                     0439  09570000
*               SPARE5=' ';             /* CLEAR SIGN BYTE              09580000
         MVI   HDLINE+103,C' '                                    0440  09590000
*               IF CRSW='1'B            /* IS IT CTR-RLD RECORD?        09600000
*                 THEN GOTO CTRLD2;     /* YES-GO PRINT RLD INFO FIRST  09610000
         TM    SW1,B'01000000'                                    0441  09620000
         BC    01,CTRLD2                                          0442  09630000
*               PTR1=PTR1+16;           /* POINT TO CONTROL REC DATA    09640000
         LA    @3,16(0,@3)                                        0443  09650000
*               LABPTR=ADDR(CTRLD3);    /* RETURN ADDR FOR PRINT RTN    09660000
         LA    @4,CTRLD3                                          0444  09670000
*               IF LINECNT>48           /* DO NOT START NEW RECORD HDG  09680000
*                                          AT THE BOTTOM OF THE PAGE    09690000
*                 THEN LINECNT=PGEND;                                   09700000
         CH    @6,@D6                                             0445  09710000
         BC    12,@9BD                                            0445  09720000
         LH    @6,PGEND                                           0446  09730000
         BC    15,@9BC                                            0447  09740000
*                 ELSE LINECNT=LINECNT+1; /* INCREASE LINE COUNT        09750000
@9BD     AH    @6,@D4                                             0447  09760000
*               ADDRX=ADDR(HDLINE);     /* HDG ADDR FOR PRINT RTN       09770000
@9BC     LA    @F,HDLINE                                          0448  09780000
         ST    @F,ADDRX                                           0448  09790000
*               GOTO PRINT;             /* GO PRINT CONTROL HEADING     09800000
         BC    15,PRINT                                           0449  09810000
* CTRLD3:       ADDRX=ADDR(LINE);       /* RESET OUTPUT PTR TO REG LINE 09820000
CTRLD3   LA    @F,LINE                                            0450  09830000
         ST    @F,ADDRX                                           0450  09840000
*               OLINE(6:19)=CTLHD;      /* CONTROL REC SUBHDG TO BUFFER 09850000
         MVC   LINE+18(14),CTLHD                                  0451  09860000
*               IF LINECNT>51           /* DO NOT START NEW REC HEADING 09870000
*                                          AT THE BOTTOM OF THE PAGE    09880000
*                 THEN LINECNT=PGEND;                                   09890000
         CH    @6,@D12                                            0452  09900000
         BC    12,@9BB                                            0452  09910000
         LH    @6,PGEND                                           0453  09920000
         BC    15,@9BA                                            0454  09930000
*                 ELSE LINECNT=LINECNT+1; /* INCREASE LINE COUNT        09940000
@9BB     AH    @6,@D4                                             0454  09950000
*               CC=SKIP2;               /* CARRIAGE CTL - SKIP 2 LINES  09960000
@9BA     MVC   LINE(1),SKIP2                                      0455  09970000
*               LABPTR=ADDR(CTRLD3A);   /* RETURN ADDR FOR PRINT RTN    09980000
         LA    @4,CTRLD3A                                         0456  09990000
*               GOTO PRINT;             /* GO TO PRINT CNTRL REC SUBHDG 10000000
         BC    15,PRINT                                           0457  10010000
* CTRLD3A:      LABPTR2=ADDR(CNTRL2);   /* RETURN ADDR FOR CONVDEC RTN  10020000
CTRLD3A  LA    @5,CNTRL2                                          0458  10030000
*               LABPTR=ADDR(CNTRL3);    /* RETURN ADDR FOR PRINT RTN    10040000
         LA    @4,CNTRL3                                          0459  10050000
*               COUNTX=COUNT1;          /* CONTROL RECORD DATA COUNT    10060000
         L     @8,PARMS+24         PARMS                          0460  10070000
         MVC   COUNTX(2),4(@8)                                    0460  10080000
*               DO I=COUNTX TO 4 BY -4; /* PROCESSING CTL DATA          10090000
         LH    @7,COUNTX                                          0461  10100000
         BC    15,@DO9B8                                          0461  10110000
*                 PTR2=CESDNUM;         /* CESD NUMBER WILL BE IN DEC   10120000
@DO9B9   LH    @2,0(0,@3)                                         0462  10130000
*                 GOTO CONVDEC;         /* GO CONVERT CESD NUMBER       10140000
         BC    15,CONVDEC                                         0463  10150000
* CNTRL2:         CESDNO=WK2;           /* CESD DEC ID INTO BUFFER      10160000
CNTRL2   MVC   CTLINE(4),DBLW2+4                                  0464  10170000
*                 WK5=CSECT;            /* CSECT / TEXT LENGTH WILL BE  10180000
*                                          GIVEN IN HEX                 10190000
         MVC   DBLW2+5(2),2(@3)                                   0465  10200000
*                 GENERATE;                                             10210000
         UNPK  WK1(5),WK5(3)           LAST BYTE WILL BE IGNORED        10220000
         NC    WK1(4),ZONEOFF          CLEAR HIGH ORDER 4 BITS          10230000
         TR    WK1(4),TABLE            TRANSLATE TO PRINTABLE CHAR      10240000
         DS    0H                                                       10250000
*                 LNG=WK1;              /* CSECT/TXT LENGTH INTO BUFFER 10260000
         MVC   CTLINE+9(4),DBLW2                                  0467  10270000
*                 GOTO PRINT;           /* TO PRINT CONTROL REC INFO    10280000
         BC    15,PRINT                                           0468  10290000
* CNTRL3:         PTR1=PTR1+4;          /* ADVANCE INPUT REC POINTER    10300000
CNTRL3   LA    @3,4(0,@3)                                         0469  10310000
*               END;                    /* END OF ONE LINE              10320000
* /******************************************************************** 10330000
* /*              TEXT PROCESSING                                       10340000
* /******************************************************************** 10350000
*               COUNTX=CCWCNT;          /* TEXT RECORD BYTE COUNT       10360000
         SH    @7,@D3                                             0470  10370000
@DO9B8   CH    @7,@D3                                             0470  10380000
         BC    10,@DO9B9                                          0470  10390000
         L     @8,PARMS+24         PARMS                          0471  10400000
         MVC   COUNTX(2),14(@8)                                   0471  10410000
*               TXTADR=ADDR1;           /* INITIAL ADDR OF TEXT/CSECT   10420000
         MVC   TXTADR+1(3),9(@8)                                  0472  10430000
         MVI   TXTADR,X'00'                                       0472  10440000
*               TXTSW='1'B;             /* INDICATE TEXT RECORD         10450000
         OI    SW1,B'00100000'                                    0473  10460000
*               GOTO READIN;            /* GO TO READ TEXT RECORD       10470000
         BC    15,READIN                                          0474  10480000
* TEXT1:        TXTSW='0'B;             /* RESET TEXT INDICATOR         10490000
TEXT1    NI    SW1,B'11011111'                                    0475  10500000
*               LINE=HDLINE;            /* COPY HEADING BUFFER          10510000
         MVC   LINE(121),HDLINE                                   0476  10520000
*               OLINE=' ';              /* CLEAR THIS PART OF THE BUFF. 10530000
         MVI   LINE+13,C' '                                       0477  10540000
         MVC   LINE+14(107),LINE+13                               0477  10550000
*               OLIN2(5:11)=TXTHD;      /* TEXT RECORD HEADING          10560000
         MVC   LINE+56(7),TXTHD                                   0478  10570000
*               IF LINECNT>48           /* DO NOT START NEW REC. HEADIN 10580000
*                                          AT THE BOTTOM OF THE PAGE    10590000
*                 THEN LINECNT=PGEND;                                   10600000
         CH    @6,@D6                                             0479  10610000
         BC    12,@9B5                                            0479  10620000
         LH    @6,PGEND                                           0480  10630000
         BC    15,@9B4                                            0481  10640000
*                 ELSE LINECNT=LINECNT+1; /* INCREASE LINE COUNT        10650000
@9B5     AH    @6,@D4                                             0481  10660000
*               LABPTR=ADDR(CONVTXT);   /* INITIALIZE LOOP ADDRESS      10670000
@9B4     LA    @4,CONVTXT                                         0482  10680000
*               GOTO PRINT;             /* GO TO PRINT TEXT REC HEADING 10690000
         BC    15,PRINT                                           0483  10700000
* CONVTXT:      PTR2=ADDR(OLINE);       /* BEGINNING OF NEW LINE        10710000
CONVTXT  LA    @2,LINE+13                                         0484  10720000
*               GENERATE;               /* CONVERTING TEXT ADDRESSES    10730000
         UNPK  0(7,PTR2),TXTADR+1(4)   LAST BYTE WILL BE IGNORED        10740000
         NC    0(6,PTR2),ZONEOFF       CLEAR HIGH ORDER 4 BITS          10750000
         TR    0(6,PTR2),TABLE         TRANSLATE TO PRINTABLE CHAR      10760000
         MVI   6(PTR2),BLANK           CLEAR SIGN BYTE                  10770000
         DS    0H                                                       10780000
*               TXTADR=TXTADR+32;       /* ADDRESS OF TXT ON NEXT LINE  10790000
         LA    @F,32                                              0486  10800000
         A     @F,TXTADR                                          0486  10810000
         ST    @F,TXTADR                                          0486  10820000
*               PTR2=PTR2+10;           /* INIT POSITION ON OUTPUT LINE 10830000
         LA    @2,10(0,@2)                                        0487  10840000
*               DO I=1 TO 8;            /* EIGHT 4-BYTE ENTR PER LINE   10850000
         LA    @7,1                                               0488  10860000
@DO9B3   EQU   *                                                  0488  10870000
*                 GENERATE;             /* CONVERTING TEXT              10880000
         UNPK  0(9,PTR2),0(5,PTR1)     LAST BYTE WILL BE IGNORED        10890000
         NC    0(8,PTR2),ZONEOFF       CLEAR HIGH ORDER 4 BITS          10900000
         TR    0(8,PTR2),TABLE         TRANSLATE TO PRINTABLE CHAR      10910000
         MVI   8(PTR2),BLANK           CLEAR LAST/IGNORED BYTE          10920000
         DS    0H                                                       10930000
*                 COUNTX=COUNTX-4;      /* KEEP TRACK OF BYTE COUNT     10940000
         LH    @F,COUNTX                                          0490  10950000
         SH    @F,@D3                                             0490  10960000
         STH   @F,COUNTX                                          0490  10970000
*                 IF COUNTX<=0          /* END OF RECORD?               10980000
*                   THEN                                                10990000
         SR    @F,@F                                              0491  11000000
         CH    @F,COUNTX                                          0491  11010000
         BC    04,@9AF                                            0491  11020000
*                     DO;               /* YES -                        11030000
*                       IF EOMSW='1'B   /* END OF MODULE?               11040000
*                         THEN LABPTR=ADDR(EOJ); /* YES - PRINT ROUTINE 11050000
         TM    SW1,B'00010000'                                    0493  11060000
         BC    12,@9AE                                            0493  11070000
*                                                 WILL GO TO END OF JOB 11080000
         LA    @4,EOJ                                             0494  11090000
         BC    15,@9AD                                            0495  11100000
*                         ELSE LABPTR=ADDR(READIN); /* NO -PRINT ROUTIN 11110000
*                                             WILL GO TO READ NEXT REC  11120000
@9AE     LA    @4,READIN                                          0495  11130000
*                       GOTO PRINT;     /* GO PRINT LAST LINE OF TEXT   11140000
         BC    15,PRINT                                           0496  11150000
*                     END;              /* END TEST FOR END OF RECORD   11160000
*                 IF I=4                /*                              11170000
*                   THEN PTR2=PTR2+12;  /* DIVIDE TEXT INTO TWO BLOCKS  11180000
@9AF     CH    @7,@D3                                             0498  11190000
         BC    07,@9AC                                            0498  11200000
         LA    @2,12(0,@2)                                        0499  11210000
         BC    15,@9AB                                            0500  11220000
*                   ELSE PTR2=PTR2+9;   /* ONE BLANK BETWEEN 4-BYTE TXT 11230000
@9AC     LA    @2,9(0,@2)                                         0500  11240000
*                 PTR1=PTR1+4;          /* ADVANCE INPUT POINTER        11250000
@9AB     LA    @3,4(0,@3)                                         0501  11260000
*               END;                    /* END OF LINE                  11270000
*               GOTO PRINT;             /* GO TO PRINT TEXT LINE        11280000
         AH    @7,@D4                                             0502  11290000
@DO9B2   CH    @7,@D11                                            0502  11300000
         BC    12,@DO9B3                                          0502  11310000
         BC    15,PRINT                                           0503  11320000
*             END;                      /* END OF CTL / CTL-RLD PROCESS 11330000
*                                                                       11340000
* /******************************************************************** 11350000
* /*                  RLD RECORD PROCESSING                             11360000
* /******************************************************************** 11370000
*         IF (ID&TEST)=RLD              /* RLD RECORD?                  11380000
*           THEN                                                        11390000
@9BF     MVC   @CTEMP2(1),TEST                                    0505  11400000
         L     @8,PARMS+24         PARMS                          0505  11410000
         NC    @CTEMP2(1),0(@8)                                   0505  11420000
         CLC   @CTEMP2(1),RLD                                     0505  11430000
         BC    07,@9AA                                            0505  11440000
*             DO;                       /* YES -                        11450000
*               TYPENAME=RLDTYPE(2:4);  /* RLD TYPE NAME INTO BUFFER    11460000
         MVC   HDLINE+25(3),CTRLDTYP+10                           0507  11470000
         MVI   HDLINE+28,C' '                                     0507  11480000
         MVC   HDLINE+29(15),HDLINE+28                            0507  11490000
*               SIZE1=' ';              /* CLEAR CONTROL REC SIZE FIELD 11500000
         MVI   HDLINE+44,C' '                                     0508  11510000
         MVC   HDLINE+45(16),HDLINE+44                            0508  11520000
*               OCCW=' ';               /* CLEAR CCW FIELD              11530000
         MVI   HDLINE+82,C' '                                     0509  11540000
         MVC   HDLINE+83(20),HDLINE+82                            0509  11550000
* CTRLD2:       DATAHD1=RLDTYPE;        /* FORMAT OUTPUT LINE           11560000
CTRLD2   MVC   HDLINE+64(4),CTRLDTYP+9                            0510  11570000
*               SZHD2=SIZEHD;           /* SIZE HEADING                 11580000
         MVC   HDLINE+69(4),SIZEHD                                0511  11590000
*               PTR2=COUNT2;            /* TO CONVERT RLD REC SIZE      11600000
         L     @8,PARMS+24         PARMS                          0512  11610000
         LH    @2,6(0,@8)                                         0512  11620000
*               LABPTR2=ADDR(RLDL1);    /* RETURN ADDR FOR CONVDEC RTN  11630000
         LA    @5,RLDL1                                           0513  11640000
*               GOTO CONVDEC;           /* GO CONVERT RLD RECORD SIZE   11650000
         BC    15,CONVDEC                                         0514  11660000
* RLDL1:        SZ2=WKX;                /* SIZE INTO BUFFER             11670000
RLDL1    MVC   HDLINE+74(4),0(@2)                                 0515  11680000
*               LABPTR=ADDR(RLDL2);     /* RETURN ADDR FOR PRINT RTN    11690000
         LA    @4,RLDL2                                           0516  11700000
*               ADDRX=ADDR(HDLINE);     /* BUFFER ADDR FOR PRINT RTN    11710000
         LA    @F,HDLINE                                          0517  11720000
         ST    @F,ADDRX                                           0517  11730000
*               IF LINECNT>48           /* DO NOT START NEW REC. HEADIN 11740000
*                                          AT THE BOTTOM OF THE PAGE    11750000
*                 THEN LINECNT=PGEND;                                   11760000
         CH    @6,@D6                                             0518  11770000
         BC    12,@9A9                                            0518  11780000
         LH    @6,PGEND                                           0519  11790000
         BC    15,@9A8                                            0520  11800000
*                 ELSE LINECNT=LINECNT+2; /* INCREASE LINE COUNT        11810000
@9A9     AH    @6,@D2                                             0520  11820000
*               GOTO PRINT;             /* GO TO PRINT RLD HEADING LINE 11830000
         BC    15,PRINT                                           0521  11840000
* RLDL2:        RPHD=RPTR2;             /* R-POINTER HDG                11850000
RLDL2    MVC   RLDHD1(5),RPTR2                                    0522  11860000
*               PPHD=PPTR2;             /* P-POINTER HDG                11870000
         MVC   RLDHD1+7(5),PPTR2                                  0523  11880000
*               PTR2=ADDR(OLINE)+18;    /* POINT TO FL-ADDR FIELD       11890000
         LA    @2,LINE+31                                         0524  11900000
*               DO I=1 TO 6;            /* 6 FL-ADDR ENTRIES PER LINE   11910000
         LA    @7,1                                               0525  11920000
*                 FLADR1=FLADR2;        /* MOVE FL-ADDR HDG TO BUFFER   11930000
@DO9A7   MVC   0(8,@2),FLADR2                                     0526  11940000
*                PTR2=PTR2+11;         /* POINT TO NEXT ENTRY         * 11950000
         LA    @2,11(0,@2)                                        0527  11960000
*               END;                                                    11970000
*               ADDRX=ADDR(LINE);       /* RESET OUTPUT BUFFER PTR      11980000
         AH    @7,@D4                                             0528  11990000
@DO9A6   CH    @7,@D7                                             0528  12000000
         BC    12,@DO9A7                                          0528  12010000
         LA    @F,LINE                                            0529  12020000
         ST    @F,ADDRX                                           0529  12030000
*               CC=SKIP2;               /* CARRIAGE CNTRL-SKIP 2 LINES  12040000
         MVC   LINE(1),SKIP2                                      0530  12050000
*               LABPTR=ADDR(RLDLIN);    /* RETURN ADDR FROM PRINT RTN   12060000
         LA    @4,RLDLIN                                          0531  12070000
*               COUNTX=COUNT2;          /* RLD DATA COUNT               12080000
         L     @8,PARMS+24         PARMS                          0532  12090000
         MVC   COUNTX(2),6(@8)                                    0532  12100000
*               PTR1=PTR1+16;           /* POINT TO RLD REC DATA        12110000
         LA    @3,16(0,@3)                                        0533  12120000
*               GOTO PRINT;             /* GO TO PRINT RLD REC SUBHDG   12130000
         BC    15,PRINT                                           0534  12140000
* RLDLIN:       PTR2=CESDNUM;           /* R-POINTER FOR CONVERSION     12150000
RLDLIN   LH    @2,0(0,@3)                                         0535  12160000
*               LABPTR2=ADDR(RLDL3);    /* RETURN ADDR FOR CONVDEC      12170000
         LA    @5,RLDL3                                           0536  12180000
*               GOTO CONVDEC;           /* TO CONVERT R-POINTER         12190000
         BC    15,CONVDEC                                         0537  12200000
* RLDL3:        RPTR=WK2;               /* R-POINTER INTO BUFFER        12210000
RLDL3    MVC   RLDLINE(4),DBLW2+4                                 0538  12220000
*               PTR2=CSECT;             /* P-POINTER FOR CONVERSION     12230000
         LH    @2,2(0,@3)                                         0539  12240000
*               LABPTR2=ADDR(RLDL4);    /* RETURN ADDR FOR CONVDEC      12250000
         LA    @5,RLDL4                                           0540  12260000
*               GOTO CONVDEC;           /* TO CONVERT P-POINTER         12270000
         BC    15,CONVDEC                                         0541  12280000
* RLDL4:        PPTR=WK2;               /* P-POINTER INTO BUFFER        12290000
RLDL4    MVC   RLDLINE+7(4),DBLW2+4                               0542  12300000
*               LABPTR=ADDR(RLDL6);     /* INIT LOOP ADDRESS            12310000
         LA    @4,RLDL6                                           0543  12320000
*               COUNTX=COUNTX-4;        /* DECREASE BYTE COUNT          12330000
         LH    @F,COUNTX                                          0544  12340000
         SH    @F,@D3                                             0544  12350000
         STH   @F,COUNTX                                          0544  12360000
* RLDL6:        PTR2=ADDR(OLINE)+18;    /* POINT TO FLAG-ADDR POSITION  12370000
RLDL6    LA    @2,LINE+31                                         0545  12380000
*               DO I=1 TO 6;            /* 6 FL-ADDR ENTRIES PER LINE   12390000
         LA    @7,1                                               0546  12400000
*               PTR1=PTR1+4;            /* POINT TO FLAG-ADDR - INPUT   12410000
@DO9A3   LA    @3,4(0,@3)                                         0547  12420000
*                 GENERATE;             /* CONVERTING FL-ADDR DATA      12430000
         UNPK  DBLW(9),0(5,PTR1)       LAST BYTE WILL BE IGNORED        12440000
         NC    DBLW(8),ZONEOFF         CLEAR HIGH ORDER 4 BITS          12450000
         TR    DBLW(8),TABLE           TRANSLATE TO PRINTABLE CHAR      12460000
         DS    0H                                                       12470000
*                 FL=HWRD1;             /* FORMAT OUTPUT LINE - FLAG    12480000
         MVC   0(2,@2),DBLW                                       0549  12490000
*                 ADDR3=SIXBYT;         /* ADDRESS                      12500000
         MVC   3(6,@2),DBLW+2                                     0550  12510000
*                 COUNTX=COUNTX-4;      /* KEEP TRACK OF BYTE COUNT     12520000
         LH    @F,COUNTX                                          0551  12530000
         SH    @F,@D3                                             0551  12540000
         STH   @F,COUNTX                                          0551  12550000
*                 IF COUNTX<=0          /* END OF RLD DATA?             12560000
*                   THEN                                                12570000
         SR    @F,@F                                              0552  12580000
         CH    @F,COUNTX                                          0552  12590000
         BC    04,@99F                                            0552  12600000
*                     DO;               /* YES -                        12610000
*                       IF ID=RLDEOM    /* LAST RECORD?                 12620000
*                         THEN LABPTR=ADDR(EOJ); /* YES - PRINT ROUTINE 12630000
         L     @8,PARMS+24         PARMS                          0554  12640000
         CLC   0(1,@8),RLDEOM                                     0554  12650000
         BC    07,@99E                                            0554  12660000
*                                                   WILL GO TO END      12670000
         LA    @4,EOJ                                             0555  12680000
         BC    15,@99D                                            0556  12690000
*                         ELSE          /* NO - TEST IF CTL-RLD RECORD  12700000
*                           DO;                                         12710000
*                             /* CONTROL-RLD RECORD BEING PROCESSED?    12720000
*                             IF CRSW='1'B                              12730000
*                               THEN                                    12740000
@99E     TM    SW1,B'01000000'                                    0557  12750000
         BC    12,@99C                                            0557  12760000
*                                 DO;   /* YES -                        12770000
*                                   CRSW='0'B; /* RESET CTRL-RLD SWITCH 12780000
         NI    SW1,B'10111111'                                    0559  12790000
*                                   PTR1=PTR1+4; /* POINT TO CTL DATA   12800000
         LA    @3,4(0,@3)                                         0560  12810000
*                                   LABPTR=ADDR(CTRLD3); /* ADR OF CTRL 12820000
         LA    @4,CTRLD3                                          0561  12830000
         BC    15,@99B                                            0563  12840000
*                                 END;                                  12850000
*                             ELSE LABPTR=ADDR(READIN); /* NO-READ NEXT 12860000
@99C     LA    @4,READIN                                          0563  12870000
*                           END;                                        12880000
*                           GOTO PRINT; /* GO TO PRINT LAST RLD LINE    12890000
         BC    15,PRINT                                           0565  12900000
*                     END;              /* END TEST FOR END OF MODULE   12910000
*                                          OR CTL-RLD RECORD            12920000
*                 /* DIFFERENT R & P POINTER FOR NEXT ITEM?             12930000
*                 IF RLDFLG(8)='0'B                                     12940000
*                   THEN                                                12950000
@99F     TM    0(@3),B'00000001'                                  0567  12960000
         BC    05,@99A                                            0567  12970000
*                     DO;               /* YES -                        12980000
*                        PTR1=PTR1+4;   /* POINT TO R & P POINTER FIELD 12990000
         LA    @3,4(0,@3)                                         0569  13000000
*                        LABPTR=ADDR(RLDLIN); /* PRINT RTN WILL GO TO   13010000
*                                                PROCESS NEXT R-P PTR   13020000
         LA    @4,RLDLIN                                          0570  13030000
*                        GOTO PRINT;    /* GO TO PRINT THIS LINE        13040000
         BC    15,PRINT                                           0571  13050000
*                     END;                                              13060000
*                 PTR2=PTR2+11;         /* OUTPUT LINE POSITION POINTER 13070000
@99A     LA    @2,11(0,@2)                                        0573  13080000
*               END;                    /* END OF ONE LINE LOOP         13090000
*               GOTO PRINT;             /* TO PRINT RLD DATA            13100000
         AH    @7,@D4                                             0574  13110000
@DO9A2   CH    @7,@D7                                             0574  13120000
         BC    12,@DO9A3                                          0574  13130000
         BC    15,PRINT                                           0575  13140000
*             END;                      /* END OF RLD REC PROCESSING    13150000
*                                                                       13160000
* /******************************************************************** 13170000
* /*       CONTROL & RLD RECORD PROCESSING                              13180000
* /******************************************************************** 13190000
*         IF (ID&TEST)=CTRLD            /* CONTROL & RLD RECORD?        13200000
*           THEN                                                        13210000
@9AA     MVC   @CTEMP2(1),TEST                                    0577  13220000
         L     @8,PARMS+24         PARMS                          0577  13230000
         NC    @CTEMP2(1),0(@8)                                   0577  13240000
         CLC   @CTEMP2(1),CTRLD                                   0577  13250000
         BC    07,@999                                            0577  13260000
*             DO;                       /* YES -                        13270000
*               IF ID=CTRLDEOM          /* LAST RECORD?                 13280000
*                 THEN EOMSW='1'B;      /* SET END OF MODULE SWITCH     13290000
         CLC   0(1,@8),CTRLDEOM                                   0579  13300000
         BC    07,@998                                            0579  13310000
         OI    SW1,B'00010000'                                    0580  13320000
*               TYPENAME=CTRLDTYP;      /* CTL & RLD HEADING            13330000
@998     MVC   HDLINE+25(13),CTRLDTYP                             0581  13340000
         MVI   HDLINE+38,C' '                                     0581  13350000
         MVC   HDLINE+39(5),HDLINE+38                             0581  13360000
*               CRSW='1'B;              /* SET CTL & RLD SWITCH         13370000
         OI    SW1,B'01000000'                                    0582  13380000
*               GOTO CTRLD1;            /* TO PROCESS CTL & RLD REC     13390000
         BC    15,CTRLD1                                          0583  13400000
*             END;                                                      13410000
*           ELSE                        /* NO - UNDEFINED RECORD TYPE   13420000
* INVREC:     ERRORS(2)='1'B;           /* SET ERROR BIT                13430000
@999     EQU   *                                                  0585  13440000
INVREC   OI    PARMS+32,B'01000000'                               0585  13450000
*             LINE(1:11)='0*****ERROR'; /* MESSAGE INTO BUFFER          13460000
@997     MVC   LINE(11),@C11                                      0586  13470000
*             GOTO EOJERR;              /* GO TO TERMINATE PROCESSING   13480000
         BC    15,EOJERR                                          0587  13490000
*                                                                       13500000
* /******************************************************************** 13510000
* /*                     PRINT ROUTINE                                  13520000
* /******************************************************************** 13530000
* PRINT:                                                                13540000
*         IF LINECNT>=PGEND             /* IS IT END OF PAGE?           13550000
*           THEN                                                        13560000
PRINT    CH    @6,PGEND                                           0588  13570000
         BC    04,@996                                            0588  13580000
*             DO;                       /* YES -                        13590000
*               LINECNT=2;              /* INITIALIZE LINE COUNT        13600000
         LA    @6,2                                               0590  13610000
*               P=P+1;                  /* INCREASE PAGE NUMBER         13620000
         LA    @F,1                                               0591  13630000
         AH    @F,P                                               0591  13640000
         STH   @F,P                                               0591  13650000
*               PTR2=P;                 /* FOR CONVERSION TO DEC        13660000
         LR    @2,@F                                              0592  13670000
*               GENERATE;               /* CONVERT TO PRINTABLE DECIMAL 13680000
         CVD   PTR2,DBLW               RESULT IN WORK AREA              13690000
         UNPK  PGNUM(4),DBLW+5(3)      DIRECTLY INTO OUTPUT BUFFER      13700000
         OI    PGNUM+3,X'F0'           FIX SIGN BYTE                    13710000
         L     REG1,OUTDCB             GET OUTPUT DCB ADDRESS           13720000
         PUT   (1),TIT1LINE            PRINT PROGRAM NAME               13730000
         L     REG1,OUTDCB             OUTPUT DCB ADDRESS               13740000
         L     REG0,TITADDR            USER SPECIFIED TITLE ADDR        13750000
         PUT   (1)                     PRINT USER SPECIFIED TITLE       13760000
         DS    0H                                                       13770000
*               CC=SKIP2;               /* SKIP EXTRA LINE ON NEW PAGE  13780000
         MVC   LINE(1),SKIP2                                      0594  13790000
*             END;                                                      13800000
*         LINECNT=LINECNT+1;            /* INCREASE LINE COUNT BY 1     13810000
@996     AH    @6,@D4                                             0596  13820000
*         REG0=ADDRX;                   /* ADDRESS OF OUTPUT BUFFER     13830000
         L     @0,ADDRX                                           0597  13840000
*         REG1=OUTDCB;                  /* OUTPUT DCB ADDRESS           13850000
         L     @1,PARMS+4                                         0598  13860000
*         GEN(PUT   (1));               /* PRINT OUTPUT LINE            13870000
         PUT   (1)                                                      13880000
         DS    0H                                                       13890000
*         LINE=' ';                     /* BLANK OUT OUTPUT BUFFER      13900000
         MVI   LINE,C' '                                          0600  13910000
         MVC   LINE+1(120),LINE                                   0600  13920000
*         GOTO LABX;                    /* RETURN                       13930000
         BCR   15,@4                                              0601  13940000
*                                                                       13950000
* /******************************************************************** 13960000
* /*     THIS CODE CONVERTS DATA TO DECIMAL                             13970000
* /*     AND BLANKS OUT LEADING ZEROS                                   13980000
* /******************************************************************** 13990000
* CONVDEC:                              /* CONVERT TO DEC & BLANK ZEROS 14000000
*         GENERATE;                                                     14010000
CONVDEC  EQU   *                                                  0602  14020000
         CVD   PTR2,DBLW               GET DECIMAL NUMBER               14030000
         UNPK  DBLW2(8),WRD2(4)        RESULT INTO WORK AREA            14040000
         DS    0H                                                       14050000
*         SIGNBYT=SIGNBYT | 'F0'X;      /* FIX SIGN BYTE                14060000
         OI    DBLW2+7,X'F0'                                      0603  14070000
*         PTR2=ADDR(DBLW2);             /* POINT TO THE FIRST BYTE      14080000
         LA    @2,DBLW2                                           0604  14090000
* NEXTBYTE:                                                             14100000
*         IF BYTE='0'                   /* IS IT ZERO?                  14110000
*           THEN                                                        14120000
NEXTBYTE CLI   0(@2),C'0'                                         0605  14130000
         BC    07,@995                                            0605  14140000
*             DO;                       /* YES -                        14150000
*               BYTE=' ';               /* BLANK                        14160000
         MVI   0(@2),C' '                                         0607  14170000
*               PTR2=PTR2+1;            /* POINT TO THE NEXT BYTE       14180000
         LA    @2,1(0,@2)                                         0608  14190000
*               IF PTR2 < LASTBYT       /* LAST BYTE?                   14200000
*                 THEN GOTO NEXTBYTE;   /* GO TO CHECK NEXT BYTE        14210000
         C     @2,LASTBYT                                         0609  14220000
         BC    04,NEXTBYTE                                        0610  14230000
*             END;                                                      14240000
*         GOTO LABX2;                   /* RETURN                       14250000
@995     BCR   15,@5                                              0612  14260000
*         GENERATE;                                                     14270000
BLANK    EQU   C' '                    BLANK FOR IMMEDIATE INSTR.       14280000
         DS    0H                                                       14290000
*                                                                       14300000
* /******************************************************************** 14310000
* /*        END OF MODULE - TEST IF OVERLAY                             14320000
* /******************************************************************** 14330000
* EOJ:    IF OVLYFL='1'B                /* MODULE IN OVERLAY?           14340000
*           THEN                                                        14350000
EOJ      TM    PARMS+20,B'01000000'                               0614  14360000
         BC    12,@994                                            0614  14370000
*             DO;                       /* YES -                        14380000
*               COUNTX=BIGSEG*4;        /* GET # OF BYTES IN TTR LIST   14390000
         SR    @F,@F                                              0616  14400000
         IC    @F,BIGSEG                                          0616  14410000
         SLA   @F,2                                               0616  14420000
         STH   @F,COUNTX                                          0616  14430000
*               OLINE(1:29)=SEGLSTHD;   /* TTR LIST HEADING             14440000
         MVC   LINE+13(29),SEGLSTHD                               0617  14450000
*               CC=SKIP2;               /* SKIP 2 LINES - CARR CONTROL  14460000
         MVC   LINE(1),SKIP2                                      0618  14470000
*               IF LINECNT>50           /* DO NOT START AT THE BOTTOM   14480000
*                                          OF THE PAGE                  14490000
*                 THEN LINECNT=PGEND;                                   14500000
         CH    @6,@D13                                            0619  14510000
         BC    12,@993                                            0619  14520000
         LH    @6,PGEND                                           0620  14530000
*               LABPTR=ADDR(READIN);    /* RETURN ADDR FROM PRINT RTN   14540000
@993     LA    @4,READIN                                          0621  14550000
*               TTRSW='1'B;             /* INDICATES TTR PROCESSING     14560000
         OI    SW1,B'00000100'                                    0622  14570000
*               LABPTR2=ADDR(EOJX);     /* RETURN ADDR FROM TTR PROCESS 14580000
         LA    @5,EOJX                                            0623  14590000
*               GOTO PRINT;             /* GO TO PRINT HEADING LINE     14600000
         BC    15,PRINT                                           0624  14610000
*             END;                                                      14620000
*                                                                       14630000
* EOJX:   LINE(1:34)=ENDMSG;            /* END OF LISTING MESSAGE       14640000
@994     EQU   *                                                  0626  14650000
EOJX     MVC   LINE(34),ENDMSG                                    0626  14660000
* EOJERR: REG1=OUTDCB;                  /* OUTPUT DCB ADDRESS           14670000
EOJERR   L     @1,PARMS+4                                         0627  14680000
*         GEN(PUT   (1),LINE);          /* PRINT END OF LISTING MSG     14690000
         PUT   (1),LINE                                                 14700000
         DS    0H                                                       14710000
*         REG1=SAVE1+32;                /* RESTORE PARM LIST POINTER    14720000
*                                          AND POINT TO ERROR BITS      14730000
         LA    @1,32                                              0629  14740000
         A     @1,SAVE1                                           0629  14750000
*         ERRBITS=ERRORS;               /* ERROR BITS SET DURING PROC.  14760000
         MVC   0(4,@1),PARMS+32                                   0630  14770000
*         END;                          /* END OF IMBLKLDM              14780000
@EL01    L     @D,4(0,@D)                                         0631  14790000
         LR    @1,@C                                              0631  14800000
         L     @0,@SIZ001                                         0631  14810000
         FREEMAIN R,LV=(0),A=(1)                                  0631  14820000
         LM    @E,@C,12(@D)                                       0631  14830000
         BCR   15,@E                                              0631  14840000
@DATA1   EQU   *                                                        14850000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           14860000
@1       EQU   01                                                       14870000
@2       EQU   02                                                       14880000
@3       EQU   03                                                       14890000
@4       EQU   04                                                       14900000
@5       EQU   05                                                       14910000
@6       EQU   06                                                       14920000
@7       EQU   07                                                       14930000
@8       EQU   08                                                       14940000
@9       EQU   09                                                       14950000
@A       EQU   10                                                       14960000
@B       EQU   11                                                       14970000
@C       EQU   12                                                       14980000
@D       EQU   13                                                       14990000
@E       EQU   14                                                       15000000
@F       EQU   15                                                       15010000
@D1      DC    H'49'                                                    15020000
@D2      DC    H'2'                                                     15030000
@D3      DC    H'4'                                                     15040000
@D4      DC    H'1'                                                     15050000
@D5      DC    H'10'                                                    15060000
@D6      DC    H'48'                                                    15070000
@D7      DC    H'6'                                                     15080000
@D8      DC    H'16'                                                    15090000
@D9      DC    H'-2'                                                    15100000
@D10     DC    H'20'                                                    15110000
@D11     DC    H'8'                                                     15120000
@D12     DC    H'51'                                                    15130000
@D13     DC    H'50'                                                    15140000
         DS    0F                                                       15150000
@SIZ001  DC    AL1(&SPN)                                                15160000
         DC    AL3(@DATEND-@DATD)                                       15170000
         DS    0F                                                       15180000
@C9      DC    C'06'                                                    15190000
@C3      DC    C'LISTING OF LOAD MODULE '                               15200000
@X7      DC    X'00FFFF'                                                15210000
@C11     DC    C'0*****ERROR'                                           15220000
         DS    0D                                                       15230000
@DATA    EQU   *                                                        15240000
DUMMYPTR EQU   00000000            FULLWORD INTEGER                     15250000
REG0     EQU   00000000            FULLWORD INTEGER REGISTER            15260000
REG1     EQU   00000001            3  BYTE  POINTER REGISTER            15270000
PTR2     EQU   00000002            3  BYTE  POINTER REGISTER            15280000
PTR1     EQU   00000003            3  BYTE  POINTER REGISTER            15290000
LABPTR   EQU   00000004            3  BYTE  POINTER REGISTER            15300000
LABPTR2  EQU   00000005            3  BYTE  POINTER REGISTER            15310000
LINECNT  EQU   00000006            FULLWORD INTEGER REGISTER            15320000
I        EQU   00000007            FULLWORD INTEGER REGISTER            15330000
PARMLST  EQU   00000000            57 BYTE(S)                           15340000
RECORD   EQU   00000000            16 BYTE(S) ON WORD                   15350000
ID       EQU   RECORD+00000000     8 BIT(S)                             15360000
SYMSUBT  EQU   RECORD+00000001     8 BIT(S)                             15370000
COUNT    EQU   RECORD+00000002     HALFWORD INTEGER                     15380000
COUNT1   EQU   RECORD+00000004     HALFWORD INTEGER                     15390000
COUNT2   EQU   RECORD+00000006     HALFWORD INTEGER                     15400000
CCW      EQU   RECORD+00000008     8 BYTE(S)                            15410000
A00004   EQU   RECORD+00000008     8 BIT(S)                             15420000
ADDR1    EQU   RECORD+00000009     3 BYTE(S)                            15430000
A00005   EQU   RECORD+00000012     16 BIT(S)                            15440000
CCWCNT   EQU   RECORD+00000014     2  BYTE  INTEGER                     15450000
CTRLDATA EQU   00000000            4 BYTE(S) ON WORD                    15460000
CESDNUM  EQU   CTRLDATA+00000000   HALFWORD INTEGER                     15470000
CSECT    EQU   CTRLDATA+00000002   HALFWORD INTEGER                     15480000
RLDFLG   EQU   00000000            8 BIT(S) ON BYTE                     15490000
CESDDATA EQU   00000008            16 BYTE(S) ON WORD                   15500000
SYMBOL   EQU   CESDDATA+00000000   8 BYTE(S)                            15510000
TPADDR   EQU   CESDDATA+00000008   4 BYTE(S)                            15520000
TYPE     EQU   CESDDATA+00000008   8 BIT(S)                             15530000
ADDR2    EQU   CESDDATA+00000009   3 BYTE(S)                            15540000
SEGNUM   EQU   CESDDATA+00000012   1 BYTE(S)                            15550000
LNGTH    EQU   CESDDATA+00000013   3 BYTE(S)                            15560000
IDRREC   EQU   00000000            4 BYTE(S) ON WORD                    15570000
IDRID    EQU   IDRREC+00000000     8 BIT(S)                             15580000
IDRCTL   EQU   IDRREC+00000001     2 BYTE(S)                            15590000
IDRCNT   EQU   IDRREC+00000001     8 BIT(S)                             15600000
IDRSUB   EQU   IDRREC+00000002     8 BIT(S)                             15610000
IDRDATA  EQU   IDRREC+00000003     1 BYTE(S)                            15620000
SEGTAB   EQU   00000000            16 BYTE(S) ON WORD                   15630000
A00006   EQU   SEGTAB+00000000     8 BYTE(S)                            15640000
SEGRG1   EQU   SEGTAB+00000008     1 BYTE(S)                            15650000
A00007   EQU   SEGTAB+00000009     1 BYTE(S)                            15660000
SEGRG2   EQU   SEGTAB+00000010     1 BYTE(S)                            15670000
A00008   EQU   SEGTAB+00000011     1 BYTE(S)                            15680000
SEGRG3   EQU   SEGTAB+00000012     1 BYTE(S)                            15690000
A00009   EQU   SEGTAB+00000013     1 BYTE(S)                            15700000
SEGRG4   EQU   SEGTAB+00000014     1 BYTE(S)                            15710000
A00010   EQU   SEGTAB+00000015     1 BYTE(S)                            15720000
CESDLIN1 EQU   *                   71 BYTE(S)                           15730000
         DC    C'CESD#    SYMBOL    TYPE     ADDRESS     SE'            15740000
         DC    C'GNUM   ID/LENGTH(DEC)   (HEX)'                         15750000
CESDTYPE EQU   *                   16*6 BYTE(S)                         15760000
         DC    C'(SD)'                                                  15770000
         DC    00002C' '                                                15780000
         DC    C'*UNDEF'                                                15790000
         DC    C'(ER)'                                                  15800000
         DC    00002C' '                                                15810000
         DC    C'(LR)'                                                  15820000
         DC    00002C' '                                                15830000
         DC    C'(PC)'                                                  15840000
         DC    00002C' '                                                15850000
         DC    C'(CM)'                                                  15860000
         DC    00002C' '                                                15870000
         DC    C'(PR)'                                                  15880000
         DC    00002C' '                                                15890000
         DC    C'(NULL)'                                                15900000
         DC    00002C'*UNDEF'                                           15910000
         DC    C'(WX)'                                                  15920000
         DC    00002C' '                                                15930000
         DC    C'*UNDEF'                                                15940000
         DC    C'(PC)'                                                  15950000
         DC    00002C' '                                                15960000
         DC    00003C'*UNDEF'                                           15970000
CTLHD    EQU   *                   14 BYTE(S)                           15980000
         DC    C'CESD#   LENGTH'                                        15990000
FLADR1   EQU   00000000            8 BYTE(S)                            16000000
RLDLIN2  EQU   00000000            9 BYTE(S) ON WORD                    16010000
FL       EQU   RLDLIN2+00000000    2 BYTE(S)                            16020000
SP12     EQU   RLDLIN2+00000002    1 BYTE(S)                            16030000
ADDR3    EQU   RLDLIN2+00000003    6 BYTE(S)                            16040000
SC1      EQU   00000000            FULLWORD INTEGER                     16050000
SC2      EQU   00000000            9 BYTE(S)                            16060000
HIAR     EQU   SC2+00000000        2 BYTE(S)                            16070000
SC2SP    EQU   SC2+00000002        1 BYTE(S)                            16080000
ADR      EQU   SC2+00000003        6 BYTE(S)                            16090000
TR1      EQU   00000000            HALFWORD INTEGER                     16100000
TR2      EQU   00000000            FULLWORD INTEGER                     16110000
SYMHD    EQU   *                   3 BYTE(S)                            16120000
         DC    C'SYM'                                                   16130000
SYMSHD   EQU   *                   7 BYTE(S)                            16140000
         DC    C'SUBTYPE'                                               16150000
CESDTYP  EQU   *                   4 BYTE(S)                            16160000
         DC    C'CESD'                                                  16170000
ESDIDHD  EQU   *                   7 BYTE(S)                            16180000
         DC    C'  ESDID'                                               16190000
STTAB    EQU   @DATA+00000202      19 BYTE(S)                           16200000
SCTAB    EQU   *                   7 BYTE(S)                            16210000
         DC    C'SCATTER'                                               16220000
HYPH2    EQU   *                   1 BYTE(S)                            16230000
         DC    C'-'                                                     16240000
TRTAB    EQU   *                   11 BYTE(S)                           16250000
         DC    C'TRANSLATION'                                           16260000
TAB      EQU   *                   5 BYTE(S)                            16270000
         DC    C'TABLE'                                                 16280000
CTRLDTYP EQU   @DATA+00000228      13 BYTE(S) ON WORD                   16290000
         ORG   CTRLDTYP+00000000                                        16300000
CTLTYPE  EQU   *                   8 BYTE(S)                            16310000
         DC    C'CONTROL'                                               16320000
         DC    00001C' '                                                16330000
AND      EQU   *                   1 BYTE(S)                            16340000
         DC    C'&&'                                                    16350000
RLDTYPE  EQU   *                   4 BYTE(S)                            16360000
         DC    C' RLD'                                                  16370000
RPTR2    EQU   *                   5 BYTE(S)                            16380000
         DC    C'R-PTR'                                                 16390000
PPTR2    EQU   *                   5 BYTE(S)                            16400000
         DC    C'P-PTR'                                                 16410000
FLADR2   EQU   *                   8 BYTE(S)                            16420000
         DC    C'FL  ADDR'                                              16430000
IDRTYPE  EQU   *                   3 BYTE(S)                            16440000
         DC    C'IDR'                                                   16450000
DATAHD2  EQU   *                   4 BYTE(S)                            16460000
         DC    C'DATA'                                                  16470000
ESDHD    EQU   *                   4 BYTE(S)                            16480000
         DC    C' ESD'                                                  16490000
CCWHD2   EQU   *                   3 BYTE(S)                            16500000
         DC    C'CCW'                                                   16510000
RECHD2   EQU   *                   7 BYTE(S)                            16520000
         DC    C'RECORD#'                                               16530000
TYP2     EQU   *                   4 BYTE(S)                            16540000
         DC    C'TYPE'                                                  16550000
SIZEHD   EQU   *                   4 BYTE(S)                            16560000
         DC    C'SIZE'                                                  16570000
PAGE1    EQU   *                   4 BYTE(S)                            16580000
         DC    C'PAGE'                                                  16590000
ENDMSG   EQU   *                   34 BYTE(S)                           16600000
         DC    C'- ******END OF LOAD MODULE LISTING'                    16610000
TXTHD    EQU   *                   7 BYTE(S)                            16620000
         DC    C'T E X T'                                               16630000
NCMSG    EQU   *                   10 BYTE(S)                           16640000
         DC    C'NEVER CALL'                                            16650000
SEGLSTHD EQU   *                   29 BYTE(S)                           16660000
         DC    C'TTR LIST FOR OVERLAY SEGMENTS'                         16670000
TEST     EQU   *                   1 BYTE(S)                            16680000
         DC    X'03'                                                    16690000
SYM      EQU   *                   1 BYTE(S)                            16700000
         DC    X'40'                                                    16710000
IDR      EQU   *                   1 BYTE(S)                            16720000
         DC    X'80'                                                    16730000
CESD     EQU   *                   1 BYTE(S)                            16740000
         DC    X'20'                                                    16750000
SCTR     EQU   *                   1 BYTE(S)                            16760000
         DC    X'10'                                                    16770000
CTRL     EQU   *                   1 BYTE(S)                            16780000
         DC    X'01'                                                    16790000
RLD      EQU   *                   1 BYTE(S)                            16800000
         DC    X'02'                                                    16810000
CTRLD    EQU   *                   1 BYTE(S)                            16820000
         DC    X'03'                                                    16830000
CTLEOM   EQU   *                   1 BYTE(S)                            16840000
         DC    X'0D'                                                    16850000
RLDEOM   EQU   *                   1 BYTE(S)                            16860000
         DC    X'0E'                                                    16870000
CTRLDEOM EQU   *                   1 BYTE(S)                            16880000
         DC    X'0F'                                                    16890000
TABLE    EQU   *                   16 BYTE(S)                           16900000
         DC    C'0123456789ABCDEF'                                      16910000
ZONEOFF  EQU   *                   8 BYTE(S)                            16920000
         DC    X'0F0F0F0F0F0F0F0F'                                      16930000
WKX      EQU   00000000            4 BYTE(S)                            16940000
IDREND   EQU   00000000            6 BYTE(S)                            16950000
BYTE     EQU   00000000            1 BYTE(S)                            16960000
         ORG   @DATA+00000408                                           16970000
PGEND    EQU   *                   HALFWORD INTEGER                     16980000
         DC    FL2'55'                                                  16990000
SCTRREC  EQU   00000000            1020 BYTE(S)                         17000000
SKIP2    EQU   *                   1 BYTE(S)                            17010000
         DC    C'0'                                                     17020000
NEWPG    EQU   *                   1 BYTE(S)                            17030000
         DC    C'1'                                                     17040000
MAXREC   EQU   *                   HALFWORD INTEGER                     17050000
         DC    FL2'1020'                                                17060000
ER       EQU   *                   8 BIT(S) ON BYTE                     17070000
         DC    X'02'                                                    17080000
LR       EQU   *                   8 BIT(S) ON BYTE                     17090000
         DC    X'03'                                                    17100000
WX       EQU   *                   8 BIT(S) ON BYTE                     17110000
         DC    X'0A'                                                    17120000
ERRBITS  EQU   00000000            32 BIT(S) ON BYTE                    17130000
MAINTAR  EQU   @DATA+00000417      200 BYTE(S)                          17140000
         ORG   @DATA                                                    17150000
         DS    00000617C                                                17160000
@L       EQU   3                                                        17170000
@DATD    DSECT                                                          17180000
@SAV001  EQU   @DATD+00000000      72 BYTE(S) ON WORD                   17190000
LASTBYT  EQU   @DATD+00000072      FULLWORD POINTER                     17200000
ADDRX    EQU   @DATD+00000076      FULLWORD POINTER                     17210000
DATAPTR  EQU   @DATD+00000080      FULLWORD POINTER                     17220000
SCTRPTR  EQU   @DATD+00000084      FULLWORD POINTER                     17230000
ENDADDR  EQU   @DATD+00000088      FULLWORD POINTER                     17240000
PARMS    EQU   @DATD+00000092      57 BYTE(S) ON WORD                   17250000
INDCB    EQU   PARMS+00000000      FULLWORD POINTER                     17260000
OUTDCB   EQU   PARMS+00000004      FULLWORD POINTER                     17270000
TITADDR  EQU   PARMS+00000008      FULLWORD POINTER                     17280000
MAINADDR EQU   PARMS+00000012      FULLWORD POINTER                     17290000
STORLEN  EQU   PARMS+00000016      FULLWORD INTEGER                     17300000
CTLFL    EQU   PARMS+00000020      16 BIT(S)                            17310000
A00000   EQU   PARMS+00000020      1 BIT(S)                             17320000
OVLYFL   EQU   PARMS+00000020      1 BIT(S)                             17330000
NOTEDIT  EQU   PARMS+00000020      1 BIT(S)                             17340000
NORLD    EQU   PARMS+00000020      1 BIT(S)                             17350000
A00001   EQU   PARMS+00000020      12 BIT(S)                            17360000
A00002   EQU   PARMS+00000022      2 BYTE(S)                            17370000
INPTR    EQU   PARMS+00000024      FULLWORD POINTER                     17380000
SCSZ     EQU   PARMS+00000028      HALFWORD INTEGER                     17390000
TRSZ     EQU   PARMS+00000030      HALFWORD INTEGER                     17400000
ERRORS   EQU   PARMS+00000032      32 BIT(S)                            17410000
MEMNAME  EQU   PARMS+00000036      8 BYTE(S)                            17420000
A00003   EQU   PARMS+00000044      8 BYTE(S)                            17430000
TEXTTR   EQU   PARMS+00000052      3 BYTE(S)                            17440000
TEXTLEN  EQU   PARMS+00000055      2 BYTE(S)                            17450000
LINE     EQU   @DATD+00000149      121 BYTE(S)                          17460000
CC       EQU   LINE+00000000       1 BYTE(S)                            17470000
OLINSP   EQU   LINE+00000001       12 BYTE(S)                           17480000
OLINE    EQU   LINE+00000013       108 BYTE(S)                          17490000
OLIN1    EQU   LINE+00000013       39 BYTE(S)                           17500000
OLIN2    EQU   LINE+00000052       11 BYTE(S)                           17510000
OLINSP1  EQU   LINE+00000052       3 BYTE(S)                            17520000
OLIN3    EQU   LINE+00000055       7 BYTE(S)                            17530000
OLINSP2  EQU   LINE+00000062       1 BYTE(S)                            17540000
OLIN4    EQU   LINE+00000063       5 BYTE(S)                            17550000
OLINSP3  EQU   LINE+00000063       1 BYTE(S)                            17560000
OLIN5    EQU   LINE+00000064       5 BYTE(S)                            17570000
HDLINE   EQU   @DATD+00000270      121 BYTE(S)                          17580000
HCC      EQU   HDLINE+00000000     1 BYTE(S)                            17590000
RECHD    EQU   HDLINE+00000001     7 BYTE(S)                            17600000
HDSP1    EQU   HDLINE+00000008     1 BYTE(S)                            17610000
RECNUM   EQU   HDLINE+00000009     4 BYTE(S)                            17620000
SPARE1   EQU   HDLINE+00000013     2 BYTE(S)                            17630000
TYP1     EQU   HDLINE+00000015     4 BYTE(S)                            17640000
SPARE1A  EQU   HDLINE+00000019     1 BYTE(S)                            17650000
TYPEID   EQU   HDLINE+00000020     2 BYTE(S)                            17660000
SPAR2    EQU   HDLINE+00000022     1 BYTE(S)                            17670000
HYPH1    EQU   HDLINE+00000023     1 BYTE(S)                            17680000
SPARE1B  EQU   HDLINE+00000024     1 BYTE(S)                            17690000
TYPENAME EQU   HDLINE+00000025     19 BYTE(S)                           17700000
TP1      EQU   HDLINE+00000025     15 BYTE(S)                           17710000
TP2      EQU   HDLINE+00000025     7 BYTE(S)                            17720000
TP3      EQU   HDLINE+00000032     7 BYTE(S)                            17730000
SPAR1A   EQU   HDLINE+00000039     1 BYTE(S)                            17740000
SUBTYPID EQU   HDLINE+00000040     4 BYTE(S)                            17750000
SIZE1    EQU   HDLINE+00000044     17 BYTE(S)                           17760000
CTHD     EQU   HDLINE+00000044     8 BYTE(S)                            17770000
SZHD1    EQU   HDLINE+00000052     4 BYTE(S)                            17780000
SPAR2A   EQU   HDLINE+00000056     1 BYTE(S)                            17790000
SZ1      EQU   HDLINE+00000057     4 BYTE(S)                            17800000
SPARE2   EQU   HDLINE+00000061     3 BYTE(S)                            17810000
SIZE2    EQU   HDLINE+00000064     14 BYTE(S)                           17820000
DATAHD1  EQU   HDLINE+00000064     4 BYTE(S)                            17830000
SPAR2B   EQU   HDLINE+00000068     1 BYTE(S)                            17840000
SZHD2    EQU   HDLINE+00000069     4 BYTE(S)                            17850000
SPARE2A  EQU   HDLINE+00000073     1 BYTE(S)                            17860000
SZ2      EQU   HDLINE+00000074     4 BYTE(S)                            17870000
SPARE3   EQU   HDLINE+00000078     4 BYTE(S)                            17880000
OCCW     EQU   HDLINE+00000082     21 BYTE(S)                           17890000
CCWHD1   EQU   HDLINE+00000082     3 BYTE(S)                            17900000
SPARE3A  EQU   HDLINE+00000085     1 BYTE(S)                            17910000
CCWDATA  EQU   HDLINE+00000086     17 BYTE(S)                           17920000
CCW1     EQU   HDLINE+00000086     8 BYTE(S)                            17930000
SPARE4   EQU   HDLINE+00000094     1 BYTE(S)                            17940000
CCW2     EQU   HDLINE+00000095     8 BYTE(S)                            17950000
SPARE5   EQU   HDLINE+00000103     1 BYTE(S)                            17960000
TIT1LINE EQU   @DATD+00000391      121 BYTE(S)                          17970000
TCC      EQU   TIT1LINE+00000000   1 BYTE(S)                            17980000
TITSP1   EQU   TIT1LINE+00000001   40 BYTE(S)                           17990000
TITLE    EQU   TIT1LINE+00000041   23 BYTE(S)                           18000000
MEMB     EQU   TIT1LINE+00000064   8 BYTE(S)                            18010000
TITSP2   EQU   TIT1LINE+00000072   36 BYTE(S)                           18020000
PAGE     EQU   TIT1LINE+00000108   4 BYTE(S)                            18030000
TITSP3   EQU   TIT1LINE+00000112   1 BYTE(S)                            18040000
PGNUM    EQU   TIT1LINE+00000113   4 BYTE(S)                            18050000
CESDLIN2 EQU   @DATD+00000165      82 BYTE(S) ON WORD                   18060000
CESDNUM2 EQU   CESDLIN2+00000000   4 BYTE(S)                            18070000
SP2      EQU   CESDLIN2+00000004   4 BYTE(S)                            18080000
SYMB     EQU   CESDLIN2+00000008   8 BYTE(S)                            18090000
SP3      EQU   CESDLIN2+00000016   2 BYTE(S)                            18100000
CESDTYP1 EQU   CESDLIN2+00000018   2 BYTE(S)                            18110000
CESDTYP2 EQU   CESDLIN2+00000020   6 BYTE(S)                            18120000
SP4      EQU   CESDLIN2+00000026   3 BYTE(S)                            18130000
CSECTADR EQU   CESDLIN2+00000029   6 BYTE(S)                            18140000
SP5      EQU   CESDLIN2+00000035   6 BYTE(S)                            18150000
SEGNO    EQU   CESDLIN2+00000041   3 BYTE(S)                            18160000
SP6      EQU   CESDLIN2+00000044   6 BYTE(S)                            18170000
LENDEC   EQU   CESDLIN2+00000050   8 BYTE(S)                            18180000
SP7      EQU   CESDLIN2+00000058   6 BYTE(S)                            18190000
LENHEX   EQU   CESDLIN2+00000064   6 BYTE(S)                            18200000
SP9      EQU   CESDLIN2+00000070   2 BYTE(S)                            18210000
NEVCALL  EQU   CESDLIN2+00000072   10 BYTE(S)                           18220000
CTLINE   EQU   @DATD+00000167      13 BYTE(S) ON WORD                   18230000
CESDNO   EQU   CTLINE+00000000     4 BYTE(S)                            18240000
SP8      EQU   CTLINE+00000004     5 BYTE(S)                            18250000
LNG      EQU   CTLINE+00000009     4 BYTE(S)                            18260000
RLDHD1   EQU   @DATD+00000164      12 BYTE(S) ON WORD                   18270000
RPHD     EQU   RLDHD1+00000000     5 BYTE(S)                            18280000
S2       EQU   RLDHD1+00000005     2 BYTE(S)                            18290000
PPHD     EQU   RLDHD1+00000007     5 BYTE(S)                            18300000
RLDLINE  EQU   @DATD+00000165      11 BYTE(S) ON WORD                   18310000
RPTR     EQU   RLDLINE+00000000    4 BYTE(S)                            18320000
SP10     EQU   RLDLINE+00000004    3 BYTE(S)                            18330000
PPTR     EQU   RLDLINE+00000007    4 BYTE(S)                            18340000
EVCB     EQU   @DATD+00000512      20 BYTE(S) ON WORD                   18350000
DBLW2    EQU   @DATD+00000536      11 BYTE(S) ON DWORD                  18360000
WK1      EQU   DBLW2+00000000      FULLWORD INTEGER                     18370000
WK2      EQU   DBLW2+00000004      FULLWORD INTEGER                     18380000
WK3      EQU   DBLW2+00000004      1 BYTE(S)                            18390000
WK4      EQU   DBLW2+00000005      3 BYTE(S)                            18400000
WK5      EQU   DBLW2+00000005      2 BYTE(S)                            18410000
SIGNBYT  EQU   DBLW2+00000007      1 BYTE(S)                            18420000
BLANKS   EQU   DBLW2+00000008      3 BYTE(S)                            18430000
DBLW     EQU   @DATD+00000552      9 BYTE(S) ON DWORD                   18440000
WRD1     EQU   DBLW+00000000       FULLWORD INTEGER                     18450000
HWRD1    EQU   DBLW+00000000       2 BYTE(S)                            18460000
SIXBYT   EQU   DBLW+00000002       6 BYTE(S)                            18470000
HWRD2    EQU   DBLW+00000002       2 BYTE(S)                            18480000
WRD2     EQU   DBLW+00000004       FULLWORD INTEGER                     18490000
BYTE2    EQU   DBLW+00000004       2 BYTE(S)                            18500000
BYTE2A   EQU   DBLW+00000006       2 BYTE(S)                            18510000
DUMMY    EQU   DBLW+00000008       1 BYTE(S)                            18520000
SW1      EQU   @DATD+00000564      1 BYTE(S) ON WORD                    18530000
SCTRSW   EQU   SW1+00000000        1 BIT(S)                             18540000
CRSW     EQU   SW1+00000000        1 BIT(S)                             18550000
TXTSW    EQU   SW1+00000000        1 BIT(S)                             18560000
EOMSW    EQU   SW1+00000000        1 BIT(S)                             18570000
SKIPSW   EQU   SW1+00000000        1 BIT(S)                             18580000
TTRSW    EQU   SW1+00000000        1 BIT(S)                             18590000
NESW     EQU   SW1+00000000        1 BIT(S)                             18600000
A00011   EQU   SW1+00000000        1 BIT(S)                             18610000
CESDCNT  EQU   @DATD+00000566      HALFWORD INTEGER                     18620000
COUNTX   EQU   @DATD+00000568      HALFWORD INTEGER                     18630000
BIGSEG   EQU   @DATD+00000570      1  BYTE  POINTER                     18640000
RECCNT   EQU   @DATD+00000572      HALFWORD INTEGER                     18650000
P        EQU   @DATD+00000574      HALFWORD INTEGER                     18660000
X        EQU   @DATD+00000576      HALFWORD INTEGER                     18670000
SCTRCNT  EQU   @DATD+00000578      HALFWORD INTEGER                     18680000
TXTADR   EQU   @DATD+00000580      FULLWORD INTEGER                     18690000
SAVE1    EQU   @DATD+00000584      FULLWORD INTEGER                     18700000
NOTETTR  EQU   @DATD+00000588      4 BYTE(S) ON WORD                    18710000
         DS    00000724C                                                18720000
@TEMPS   DS    0F                                                       18730000
@TEMP3   DC    F'0'                                                     18740000
@CTEMP2  DS    CL001                                                    18750000
@DATEND  EQU   *                                                        18760000
HMBLKLDM CSECT ,                                                        18770000
@9F4     EQU   SCTRHDG                                                  18780000
@9F0     EQU   PRINT                                                    18790000
@9DD     EQU   PRINT                                                    18800000
@9AD     EQU   PRINT                                                    18810000
@9A8     EQU   PRINT                                                    18820000
@99D     EQU   PRINT                                                    18830000
@99B     EQU   PRINT                                                    18840000
@9DE     EQU   @9DD                                                     18850000
         END    ,(C'PL/S',1400,73276)                                   18860000
