         TITLE 'HMBLKLPA  LISTS LINK PACK AREA'                         00010000
         LCLA  &T,&SPN                                            0001  00020000
.@001    ANOP                                                     0001  00030000
HMBLKLPA CSECT ,                                                  0001  00040000
         BC    15,14(0,@F)                                              00050000
         DC    C'ÊHMBLKLPA'                                       0001  00060000
         STM   @E,@C,12(@D)                                       0001  00070000
         BALR  @B,0                                               0001  00080000
@PSTART  DS    0H                                                 0001  00090000
         USING @PSTART+00000,@B                                   0001  00100000
         L     @0,@SIZ001                                         0001  00110000
         GETMAIN  R,LV=(0)                                        0001  00120000
         LR    @C,@1                                              0001  00130000
         USING @DATD+00000,@C                                     0001  00140000
         LM    @0,@1,20(@D)                                       0001  00150000
         XC    @TEMPS(@L),@TEMPS                                  0001  00160000
         ST    @D,@SAV001+4                                       0001  00170000
         LA    @F,@SAV001                                         0001  00180000
         ST    @F,8(0,@D)                                         0001  00190000
         LR    @D,@F                                              0001  00200000
*         REG6=REG1;                     /* USE REG 6 AS BASE YM03994 * 00210000
         LR    @6,@1                                              0038  00220000
*         LOCPARM=DCBADR;                /* INITIALIZE LOCAL DCB ADDR * 00230000
         MVC   LOCPARM(4),4(@6)                                   0039  00240000
*         REG4=WKARADR;                  /* POINT TO WORK AREA        * 00250000
         MVC   @TEMP4(4),12(@6)                                   0040  00260000
         L     @4,@TEMP4                                          0040  00270000
*         GEN;                                                          00280000
         LA REG2,CVTPTR                 GET ADDR OF PTR TO CVT          00290000
         L REG2,0(REG2)                 GET ADDR OF CVT                 00300000
         USING CVTMAP,REG2              SET BASE OF CVT MAP     YM2968  00310000
         L REG2,CVTLPDIA                POINT TO LPA DIRECTORY  YM2968  00320000
         DS    0H                                                       00330000
*         FLBUF='00'X;                   /* FILL LEFT BUFFER          * 00340000
         MVI   SWITCHES,X'00'                                     0042  00350000
*         ENTCN=0;                       /* INITIALIZE COUNTER        * 00360000
         SR    @F,@F                                              0043  00370000
         STH   @F,ENTCN                                           0043  00380000
*         ALNUSW='00'X;                  /* INITIALIZE SORT SWITCH    * 00390000
         MVI   SWITCHES+1,X'00'                                   0044  00400000
*         /************************************************************ 00410000
*         /* COUNT AND MOVE ENTRIES                                   * 00420000
*         /************************************************************ 00430000
* LPA06:  IF LPDENAME=LASTN              /* IS THIS LAST ENTRY?       * 00440000
*           THEN                         /* YES                       * 00450000
LPA06    CLC   8(8,@2),LASTN                                      0045  00460000
*             GO TO LPA07;               /* GO TO SORT                * 00470000
         BC    08,LPA07                                           0046  00480000
*           ELSE;                        /* NULL ELSE                 * 00490000
*         ENTCN=ENTCN+1;                 /* INCREMENT LPDE COUNTER    * 00500000
         LA    @F,1                                               0048  00510000
         AH    @F,ENTCN                                           0048  00520000
         STH   @F,ENTCN                                           0048  00530000
*         NAME2=LPDENAME;                /* MOVE MODULE NAME          * 00540000
         MVC   0(8,@4),8(@2)                                      0049  00550000
*         IF LPDEMIN='1'B                /* MINOR ENTRY ?             * 00560000
*           THEN                         /* YES                       * 00570000
         TM    28(@2),B'00000100'                                 0050  00580000
         BC    12,@9FF                                            0050  00590000
*             DO;                                                       00600000
*               LOLEMN=LPDEMJNM;         /* MOVE IN MAJOR LPDE NAME   * 00610000
         MVC   8(8,@4),32(@2)                                     0052  00620000
*               MAMIN='FF'X;             /* SET MINOR ENTRY FLAG      * 00630000
         MVI   19(@4),X'FF'                                       0053  00640000
         BC    15,@9FE                                            0055  00650000
*             END;                                                      00660000
*           ELSE                         /* NO,THIS IS A MAJOR ENTRY  * 00670000
*             DO;                                                       00680000
*               LOCN2=LPDEXTAD;          /* MOVE MODULE ADDRESS       * 00690000
@9FF     MVC   8(4,@4),36(@2)                                     0056  00700000
*               LENG2=LPDEXTLN;          /* MOVE MODULE LENGTH        * 00710000
         MVC   12(4,@4),32(@2)                                    0057  00720000
*               MAMIN='00'X;             /* SET MAJOR ENTRY FLAG      * 00730000
         MVI   19(@4),X'00'                                       0058  00740000
*             END;                                                      00750000
*         EPAD5=LPDENTP;                 /* MOVE ENTRY PT ADDR VS03809* 00760000
@9FE     MVC   16(3,@4),17(@2)                                    0060  00770000
*         REG2=REG2+LENGTH(LPDE);        /* INCREMENT LPDE PTR        * 00780000
         AH    @2,@D1                                             0061  00790000
*         REG4=REG4+LENGTH(CDETAB);      /* INCREMENT SORT ENTRY PTR  * 00800000
         AH    @4,@D2                                             0062  00810000
*         GO TO LPA06;                   /* INCREMENT COUNTER         * 00820000
         BC    15,LPA06                                           0063  00830000
*                                                                       00840000
*         RESPECIFY CDETAB BASED(REG2);  /* CHANGE POINTER            * 00850000
*         /************************************************************ 00860000
*         /* SORT ROUTINE                                             * 00870000
*         /************************************************************ 00880000
* LPA07:  COUNT=ENTCN;                   /* GET COUNT FOR SORT        * 00890000
LPA07    MVC   COUNT(2),ENTCN                                     0065  00900000
*         REG2=WKARADR;                  /* POINT TO WORK AREA        * 00910000
         MVC   @TEMP4(4),12(@6)                                   0066  00920000
         L     @2,@TEMP4                                          0066  00930000
*         IF ALNUSW='00'X                /* ALPHA SORT ?              * 00940000
*           THEN                         /* YES                       * 00950000
         CLI   SWITCHES+1,X'00'                                   0067  00960000
         BC    07,@9FD                                            0067  00970000
*             DO;                                                       00980000
*               X=1;                     /* STARTING SORT COLUMN      * 00990000
         LA    @F,1                                               0069  01000000
         STH   @F,X                                               0069  01010000
*               Z=LENGTH(NAME2);         /* ENDING SORT COLUMN        * 01020000
         LA    @F,8                                               0070  01030000
         STH   @F,Z                                               0070  01040000
         BC    15,@9FC                                            0072  01050000
*             END;                                                      01060000
*           ELSE                         /* NO,NUMERIC SORT           * 01070000
*             DO;                                                       01080000
*               X=17;                    /* STARTING SORT COL YM03994 * 01090000
@9FD     LA    @F,17                                              0073  01100000
         STH   @F,X                                               0073  01110000
*                                        /* (CHANGED BY)      YM05937 * 01120000
*               Z=19;                    /* ENDING SORT COL   YM03994 * 01130000
         LA    @F,19                                              0074  01140000
         STH   @F,Z                                               0074  01150000
*                                        /* (CHANGED BY)      YM05937 * 01160000
*             END;                                                      01170000
*                                                                       01180000
* LPA08:  COUNT=COUNT/2;                 /* DIVIDE ARRAY IN HALF      * 01190000
@9FC     EQU   *                                                  0076  01200000
LPA08    LH    @E,COUNT                                           0076  01210000
         SRDA  @E,32                                              0076  01220000
         LA    @0,2                                               0076  01230000
         DR    @E,@0                                              0076  01240000
         STH   @F,COUNT                                           0076  01250000
*         IF COUNT=0                     /* LAST ELEMENT?             * 01260000
*           THEN                         /* YES                       * 01270000
         SR    @F,@F                                              0077  01280000
         CH    @F,COUNT                                           0077  01290000
*             GO TO LPA01;               /* GO FORMAT OUTPUT          * 01300000
         BC    08,LPA01                                           0078  01310000
*           ELSE;                        /* NULL ELSE                 * 01320000
*         K=ENTCN-COUNT;                 /* NO-SET INDEX=1/2 ELEMENTS * 01330000
         LH    @F,ENTCN                                           0080  01340000
         SH    @F,COUNT                                           0080  01350000
         STH   @F,K                                               0080  01360000
*         J=1;                           /* INITIALIZE INDEX          * 01370000
         LA    @F,1                                               0081  01380000
         STH   @F,J                                               0081  01390000
* LPA09:  I=J;                           /* I=ELEM. NUMBER IN 1ST HALF* 01400000
LPA09    MVC   I(2),J                                             0082  01410000
* LPA10:  N=I+COUNT;                     /* N=ELEM. NUMBER IN 2ND HALF* 01420000
LPA10    LH    @F,COUNT                                           0083  01430000
         AH    @F,I                                               0083  01440000
         STH   @F,N                                               0083  01450000
*         /* COMPARE ELEMENT FIELDS                                   * 01460000
*         IF ARRAY(I,X:Z)<=ARRAY(N,X:Z)  /* ASCENDING ORDER?          * 01470000
*           THEN                         /* YES                       * 01480000
         LH    @1,X                                               0084  01490000
         LR    @5,@F                                              0084  01500000
         BCTR  @5,0                                               0084  01510000
         MH    @5,@D2                                             0084  01520000
         LA    @E,0(@5,@2)                                        0084  01530000
         AR    @E,@1                                              0084  01540000
         BCTR  @E,0                                               0084  01550000
         LH    @7,Z                                               0084  01560000
         LH    @8,I                                               0084  01570000
         BCTR  @8,0                                               0084  01580000
         MH    @8,@D2                                             0084  01590000
         SR    @7,@1                                              0084  01600000
         LA    @A,0(@8,@2)                                        0084  01610000
         AR    @A,@1                                              0084  01620000
         BCTR  @A,0                                               0084  01630000
         EX    @7,@CLC                                            0084  01640000
*             GO TO LPA11;               /* BYPASS SWAPPING           * 01650000
         BC    12,LPA11                                           0085  01660000
*           ELSE                         /* NO                        * 01670000
*             DO;                                                       01680000
*               TEMPAREA=ARRAY(I);       /* MOVE ELEMENT INTO TEMPAREA* 01690000
         LA    @E,0(@8,@2)                                        0087  01700000
         MVC   TEMPAREA(20),0(@E)                                 0087  01710000
*               ARRAY(I)=ARRAY(N);       /* REPLACE ELEM IN FIRST HALF* 01720000
         LA    @E,0(@5,@2)                                        0088  01730000
         LA    @A,0(@8,@2)                                        0088  01740000
         MVC   0(20,@A),0(@E)                                     0088  01750000
*               ARRAY(N)=TEMPAREA;       /* FIRST GOES INTO SECOND    * 01760000
         LA    @A,0(@5,@2)                                        0089  01770000
         MVC   0(20,@A),TEMPAREA                                  0089  01780000
*               I=I-COUNT;               /* DECREMENT INDEX           * 01790000
         LH    @F,I                                               0090  01800000
         SH    @F,COUNT                                           0090  01810000
         STH   @F,I                                               0090  01820000
*               IF I>=1                  /* BEGINNING OF TABLE REACHED* 01830000
*                 THEN                   /* NO                        * 01840000
         LA    @F,1                                               0091  01850000
         CH    @F,I                                               0091  01860000
*                   GO TO LPA10;         /* COMPARE NEXT ELEMENT      * 01870000
         BC    12,LPA10                                           0092  01880000
*                 ELSE;                  /* NULL ELSE                 * 01890000
*             END;                                                      01900000
* LPA11:  J=J+1;                         /* INDICATE NEW ELEMENT      * 01910000
LPA11    LA    @F,1                                               0095  01920000
         AH    @F,J                                               0095  01930000
         STH   @F,J                                               0095  01940000
*         IF J>K                         /* END OF FIRST HALF         * 01950000
*           THEN                         /* YES                       * 01960000
         LH    @F,K                                               0096  01970000
         CH    @F,J                                               0096  01980000
*             GO TO LPA08;               /* GO DO ANOTHER PASS        * 01990000
         BC    04,LPA08                                           0097  02000000
*           ELSE                         /* NO                        * 02010000
*             GO TO LPA09;               /* CONTINUE                  * 02020000
         BC    15,LPA09                                           0098  02030000
*                                                                       02040000
*         /************************************************************ 02050000
*         /* DETERMINE WHICH SIDE OF THE BUFFER TO FILL THEN MOVE     * 02060000
*         /* DATA FROM SORT TABLE INTO BUFFER TO PRINT. THERE WILL BE * 02070000
*         /* TWO ENTRIES PER BUFFER EXCEPT FOR THE LAST ODD LPDE      * 02080000
*         /* SITUATION. THERE WILL BE A CHECK MADE ON THE LPDE        * 02090000
*         /* BEFORE IT IS MOVED TO DETERMINE IF A MAJOR OR MINOR      * 02100000
*         /* LPDE STRUCTURE SHOULD BE USED FOR THE MOVE.              * 02110000
*         /************************************************************ 02120000
* LPA01:  CC=NEWPG;                      /* CARRIAGE CNTL-NEW PAGE    * 02130000
LPA01    MVC   BUF(1),NEWPG                                       0099  02140000
*         LINE=' ';                      /* CLEAR BUFFER              * 02150000
         MVI   BUF+1,C' '                                         0100  02160000
         MVC   BUF+2(119),BUF+1                                   0100  02170000
*         IF ALNUSW='00'X                /* ALPHA SORT ?              * 02180000
*           THEN                         /* YES                       * 02190000
         CLI   SWITCHES+1,X'00'                                   0101  02200000
         BC    07,@9FB                                            0101  02210000
*             TITLNE=TITLA;              /* MOVE IN ALPHA TITLE       * 02220000
         MVC   BUF+15(38),TITLA                                   0102  02230000
         MVI   BUF+53,C' '                                        0102  02240000
         BC    15,@9FA                                            0103  02250000
*           ELSE                         /* NO,NUMERIC SORT           * 02260000
*             TITLNE=TITLB;              /* MOVE IN NUMERIC TITLE     * 02270000
@9FB     MVC   BUF+15(39),TITLB                                   0103  02280000
*         RETADR=ADDR(LPA03);            /* GET RETURN ADDR           * 02290000
@9FA     LA    @F,LPA03                                           0104  02300000
         ST    @F,RETADR                                          0104  02310000
*         GO TO PRINTB;                  /* GO TO PRINT               * 02320000
         BC    15,PRINTB                                          0105  02330000
*         /* MOVE IN TWO IDENTICAL HEADINGS AND CARRIAGE CONTROL      * 02340000
* LPA03:  CC=SKIP3;                      /* SET CC TO SKIP 3 LINES    * 02350000
LPA03    MVC   BUF(1),SKIP3                                       0106  02360000
*         FTLNE=HDNG;                    /* MOVE IN FIRST HEADING     * 02370000
         MVC   BUF+1(60),HDNG                                     0107  02380000
*         STLNE=HDNG;                    /* MOVE IN SECOND HEADING    * 02390000
         MVC   BUF+61(60),HDNG                                    0108  02400000
*         RETADR=ADDR(LPA04);            /* GET RETURN ADDR           * 02410000
         LA    @F,LPA04                                           0109  02420000
         ST    @F,RETADR                                          0109  02430000
*         GO TO PRINTB;                  /* GO TO PRINT               * 02440000
         BC    15,PRINTB                                          0110  02450000
* LPA04:  LINECNT=3;                     /* SET LINE COUNT TO 3       * 02460000
LPA04    LA    @F,3                                               0111  02470000
         STH   @F,LINECNT                                         0111  02480000
*         LINE=' ';                      /* CLEAR BUFFER              * 02490000
         MVI   BUF+1,C' '                                         0112  02500000
         MVC   BUF+2(119),BUF+1                                   0112  02510000
* LPA02:  CC=SKIP1;                      /* SET CC TO SKIP 1 LINE     * 02520000
LPA02    MVC   BUF(1),SKIP1                                       0113  02530000
*         IF FLBUF = '00'X               /* FILL LEFT BUFFER ?        * 02540000
*           THEN                         /* YES                       * 02550000
         CLI   SWITCHES,X'00'                                     0114  02560000
         BC    07,@9F9                                            0114  02570000
*            DO;                         /*                           * 02580000
*               REG3=ADDR(FTLNE);        /* GET ADDR LEFT HALF OF BUFF* 02590000
         LA    @3,BUF+1                                           0116  02600000
*               FLBUF = '01'X;           /* FLIP BUFFER FILL SWITCH   * 02610000
         MVI   SWITCHES,X'01'                                     0117  02620000
         BC    15,@9F8                                            0119  02630000
*             END;                                                      02640000
*           ELSE                         /* FILL RIGHT BUFFER         * 02650000
*             DO;                                                       02660000
*               REG3=ADDR(STLNE);        /* GET ADDR RIGHT HALF OF BUF* 02670000
@9F9     LA    @3,BUF+61                                          0120  02680000
*               FLBUF = '00'X;           /* FLIP BUFFER FILL SWITCH   * 02690000
         MVI   SWITCHES,X'00'                                     0121  02700000
*             END;                                                      02710000
*                                                                       02720000
*         /************************************************************ 02730000
*         /* IF MINOR ENTRY MOVE IN MAJOR EP NAME. IF MAJOR ENTRY     * 02740000
*         /* MOVE IN MODULE ADDRESS AND LENGTH                        * 02750000
*         /************************************************************ 02760000
*         COUNT=COUNT+1;                 /* INCREMENT COUNTER         * 02770000
@9F8     LA    @F,1                                               0123  02780000
         AH    @F,COUNT                                           0123  02790000
         STH   @F,COUNT                                           0123  02800000
*         IF MAMIN='FF'X                 /* IS THIS A MINOR ENTRY ?   * 02810000
*           THEN                         /* YES                       * 02820000
         CLI   19(@2),X'FF'                                       0124  02830000
         BC    07,@9F7                                            0124  02840000
*             DO;                                                       02850000
*               MLPDNM=LOLEMN;           /* MOVE IN MAJOR LPDE NAME   * 02860000
         MVC   39(8,@3),8(@2)                                     0126  02870000
         BC    15,@9F6                                            0128  02880000
*             END;                                                      02890000
*           ELSE                         /* THIS IS A MAJOR ENTRY     * 02900000
*             DO;                                                       02910000
*               /* UNPACK HEX LOCATION INTO BUFFER AND INSERT ZONE    * 02920000
*               RESPECIFY (REG4,REG5) RESTRICTED;  /* RESTRICT REGS   * 02930000
*               REG4=ADDR(LCTION);       /* GET ADDR LOCATION IN BUFF * 02940000
@9F7     LA    @4,9(0,@3)                                         0130  02950000
*               REG5=ADDR(LOCN2);        /* GET ADDR LOC IN ENTRY     * 02960000
         LA    @5,8(0,@2)                                         0131  02970000
*               GEN(UNPK 0(7,REG4),1(4,REG5)); /* UNPACK THE ADDR     * 02980000
         UNPK 0(7,REG4),1(4,REG5)                                       02990000
         DS    0H                                                       03000000
*               GEN(NC 0(6,REG4),ZONE);  /* ZERO OUT ZONE BITS        * 03010000
         NC 0(6,REG4),ZONE                                              03020000
         DS    0H                                                       03030000
*               GEN(TR 0(6,REG4),TAB);   /* CONV TO PRINTABLE HEX     * 03040000
         TR 0(6,REG4),TAB                                               03050000
         DS    0H                                                       03060000
*               LCTSN=' ';               /* CLEAR SIGN BYTE           * 03070000
         MVI   15(@3),C' '                                        0135  03080000
*               /* UNPACK HEX LENGTH INTO BUFFER AND INSERT ZONE      * 03090000
*               REG4=ADDR(LENGTA);           /* GET ADDR LENGTH IN BUF* 03100000
         LA    @4,19(0,@3)                                        0136  03110000
*               REG5=ADDR(LENG2);            /* GET LENGTH IN ENTRY   * 03120000
         LA    @5,12(0,@2)                                        0137  03130000
*               GEN(UNPK 0(7,REG4),1(4,REG5)); /* UNPACK THE ADDR     * 03140000
         UNPK 0(7,REG4),1(4,REG5)                                       03150000
         DS    0H                                                       03160000
*               GEN(NC 0(6,REG4),ZONE);  /* ZERO OUT ZONE BITS        * 03170000
         NC 0(6,REG4),ZONE                                              03180000
         DS    0H                                                       03190000
*               GEN(TR 0(6,REG4),TAB);   /* CONV TO PRINTABLE HEX     * 03200000
         TR 0(6,REG4),TAB                                               03210000
         DS    0H                                                       03220000
*               LENSN=' ';               /* CLEAR SIGN BYTE           * 03230000
         MVI   25(@3),C' '                                        0141  03240000
*             END;                                                      03250000
*                                                                       03260000
*         /************************************************************ 03270000
*         /* MOVE IN MODULE NAME AND ENTRY POINT ADDRESS              * 03280000
*         /************************************************************ 03290000
*         NAME=NAME2;                    /* MOVE IN MODULE NAME       * 03300000
@9F6     MVC   0(8,@3),0(@2)                                      0143  03310000
*         /* UNPACK ENTRY POINT ADDRESS INTO BUFFER AND INSERT ZONE   * 03320000
*         REG4=ADDR(EPADDR);             /* PT TO LOC IN BUFFER       * 03330000
         LA    @4,29(0,@3)                                        0144  03340000
*         REG5=ADDR(EPAD2);              /* PT TO LOC IN ENTRY        * 03350000
         LA    @5,16(0,@2)                                        0145  03360000
*         GEN(UNPK 0(7,REG4),0(4,REG5)); /* UNPACK THE ADDR           * 03370000
         UNPK 0(7,REG4),0(4,REG5)                                       03380000
         DS    0H                                                       03390000
*         GEN(NC 0(6,REG4),ZONE);        /* ZERO OUT ZONE BITS        * 03400000
         NC 0(6,REG4),ZONE                                              03410000
         DS    0H                                                       03420000
*         GEN(TR 0(6,REG4),TAB);         /* CONVERT TO PRINTABLE HEX  * 03430000
         TR 0(6,REG4),TAB                                               03440000
         DS    0H                                                       03450000
*         EPSN=' ';                      /* CLEAR SIGN BYTE           * 03460000
         MVI   35(@3),C' '                                        0149  03470000
*         RESPECIFY (REG4,REG5) UNRSTD;  /* RELEASE REGS              * 03480000
*                                                                       03490000
*         /************************************************************ 03500000
*         /* IF LAST ENTRY THEN PRINT BUFFER AND EXIT.                * 03510000
*         /************************************************************ 03520000
*         IF ENTCN=COUNT                 /* LAST LPDE                 * 03530000
*           THEN                         /* YES                       * 03540000
         LH    @F,COUNT                                           0151  03550000
         CH    @F,ENTCN                                           0151  03560000
         BC    07,@9F5                                            0151  03570000
*             DO;                                                       03580000
*               IF ALNUSW='00'X          /* ALPHA SORT                * 03590000
*                 THEN                   /* YES                       * 03600000
         CLI   SWITCHES+1,X'00'                                   0153  03610000
         BC    07,@9F4                                            0153  03620000
*                   DO;                                                 03630000
*                     ALNUSW='01'X;      /* SET NUMERIC SORT SWITCH   * 03640000
         MVI   SWITCHES+1,X'01'                                   0155  03650000
*                     RETADR=ADDR(LPA07);  /* GET SORT ROUTINE ADDR   * 03660000
         LA    @F,LPA07                                           0156  03670000
         ST    @F,RETADR                                          0156  03680000
         BC    15,@9F3                                            0158  03690000
*                   END;                                                03700000
*                 ELSE                   /* NO,NUMERIC SORT           * 03710000
*                   RETADR=ADDR(LPAEN);  /* GET EXIT ADDR             * 03720000
@9F4     LA    @F,LPAEN                                           0158  03730000
         ST    @F,RETADR                                          0158  03740000
*               GO TO PRINTB;            /* PRINT BUFFER              * 03750000
         BC    15,PRINTB                                          0159  03760000
*             END;                                                      03770000
*           ELSE;                        /* NULL ELSE                 * 03780000
@9F5     EQU   *                                                  0161  03790000
*                                                                       03800000
*         /************************************************************ 03810000
*         /* INCREMENT POINTER TO NEXT LPDE ENTRY. IF RIGHT BUFFER    * 03820000
*         /* FILLED THEN PRINT.                                       * 03830000
*         /************************************************************ 03840000
*         REG2=REG2+LENGTH(CDETAB);      /* POINT TO NEXT LPDE        * 03850000
@9F2     AH    @2,@D2                                             0162  03860000
*                                                                       03870000
*         IF FLBUF = '00'X               /* IS RIGHT BUFFER FILLED    * 03880000
*           THEN                         /* YES                       * 03890000
         CLI   SWITCHES,X'00'                                     0163  03900000
         BC    07,@9F1                                            0163  03910000
*             DO;                                                       03920000
*               RETADR=ADDR(LPA05);      /* GET RETURN ADDR           * 03930000
         LA    @F,LPA05                                           0165  03940000
         ST    @F,RETADR                                          0165  03950000
*               GO TO PRINTB;            /* PRINT BUFFER              * 03960000
         BC    15,PRINTB                                          0166  03970000
* LPA05:        LINE=' ';                /* FILL IT WITH BLANKS       * 03980000
LPA05    MVI   BUF+1,C' '                                         0167  03990000
         MVC   BUF+2(119),BUF+1                                   0167  04000000
*               LINECNT=LINECNT+1;       /* INCREMENT LINE COUNT      * 04010000
         LA    @F,1                                               0168  04020000
         AH    @F,LINECNT                                         0168  04030000
         STH   @F,LINECNT                                         0168  04040000
*                 IF LINECNT < PGEND     /* SKIP TO NEW PAGE ?        * 04050000
*                   THEN                 /* NO                        * 04060000
         LH    @F,PGEND                                           0169  04070000
         CH    @F,LINECNT                                         0169  04080000
*                     GO TO LPA02;       /* CONVERT NEXT LPDEE        * 04090000
         BC    02,LPA02                                           0170  04100000
*                   ELSE                 /* YES                       * 04110000
*                     GO TO LPA01;       /* GO TO NEXT PAGE           * 04120000
         BC    15,LPA01                                           0171  04130000
*             END;                                                      04140000
*           ELSE                         /* NO,RIGHT BUFF NOT FILLED  * 04150000
*             GO TO LPA02;               /* CONVERT NEXT LPDE         * 04160000
*                                                                       04170000
*         /************************************************************ 04180000
*         /* PRINT SUBROUTINE                                         * 04190000
*         /************************************************************ 04200000
* PRINTB: REG1=LOCPARM;                  /* PUT DCB ADDR IN REG 1     * 04210000
@9F0     EQU   *                                                  0174  04220000
PRINTB   L     @1,LOCPARM                                         0174  04230000
*         GEN(PUT (REG1),BUF);           /* PRINT LINE                * 04240000
         PUT (REG1),BUF                                                 04250000
         DS    0H                                                       04260000
*         GO TO LABX;                    /* RETURN                    * 04270000
         L     @1,RETADR                                          0176  04280000
         BCR   15,@1                                              0176  04290000
* LPAEN:  END   HMBLKLPA                                                04300000
* /* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.       04310000
* /*%INCLUDE SYSLIB  (IHALPDE )                                         04320000
* ;                                                                     04330000
LPAEN    EQU   *                                                  0177  04340000
@EL01    L     @D,4(0,@D)                                         0177  04350000
         LR    @1,@C                                              0177  04360000
         L     @0,@SIZ001                                         0177  04370000
         FREEMAIN R,LV=(0),A=(1)                                  0177  04380000
         LM    @E,@C,12(@D)                                       0177  04390000
         BCR   15,@E                                              0177  04400000
@DATA1   EQU   *                                                        04410000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           04420000
@1       EQU   01                                                       04430000
@2       EQU   02                                                       04440000
@3       EQU   03                                                       04450000
@4       EQU   04                                                       04460000
@5       EQU   05                                                       04470000
@6       EQU   06                                                       04480000
@7       EQU   07                                                       04490000
@8       EQU   08                                                       04500000
@9       EQU   09                                                       04510000
@A       EQU   10                                                       04520000
@B       EQU   11                                                       04530000
@C       EQU   12                                                       04540000
@D       EQU   13                                                       04550000
@E       EQU   14                                                       04560000
@F       EQU   15                                                       04570000
@D1      DC    H'40'                                                    04580000
@D2      DC    H'20'                                                    04590000
@CLC     CLC   0(1,@A),0(@E)                                            04600000
         DS    0F                                                       04610000
@SIZ001  DC    AL1(&SPN)                                                04620000
         DC    AL3(@DATEND-@DATD)                                       04630000
         DS    0F                                                       04640000
         DS    0D                                                       04650000
@DATA    EQU   *                                                        04660000
REG1     EQU   00000001            FULLWORD POINTER REGISTER            04670000
REG2     EQU   00000002            FULLWORD POINTER REGISTER            04680000
LPDEPTR  EQU   00000002            FULLWORD POINTER REGISTER            04690000
REG3     EQU   00000003            FULLWORD POINTER REGISTER            04700000
REG4     EQU   00000004            FULLWORD POINTER REGISTER            04710000
REG5     EQU   00000005            FULLWORD POINTER REGISTER            04720000
REG6     EQU   00000006            FULLWORD POINTER REGISTER            04730000
LPEPTR   EQU   00000000            FULLWORD POINTER                     04740000
MAINT    EQU   *                   50 BYTE(S) ON DWORD                  04750000
         DC    C'HMBLKLPA MAINTENANCE AREA'                             04760000
         DC    00025C' '                                                04770000
LPDE     EQU   00000000            40 BYTE(S) ON WORD                   04780000
LPDECHN  EQU   LPDE+00000000       FULLWORD POINTER                     04790000
LPDERBP  EQU   LPDE+00000004       FULLWORD POINTER                     04800000
LPDENAME EQU   LPDE+00000008       8 BYTE(S)                            04810000
LPDENTP  EQU   LPDE+00000016       FULLWORD POINTER                     04820000
LPDEXLP  EQU   LPDE+00000020       FULLWORD POINTER                     04830000
LPDEUSE  EQU   LPDE+00000024       HALFWORD POINTER                     04840000
A00000   EQU   LPDE+00000026       HALFWORD POINTER                     04850000
LPDEATTR EQU   LPDE+00000028       1 BYTE(S)                            04860000
LPDENIP  EQU   LPDE+00000028       1 BIT(S)                             04870000
A00001   EQU   LPDE+00000028       1 BIT(S)                             04880000
LPDEREN  EQU   LPDE+00000028       1 BIT(S)                             04890000
LPDESER  EQU   LPDE+00000028       1 BIT(S)                             04900000
A00002   EQU   LPDE+00000028       1 BIT(S)                             04910000
LPDEMIN  EQU   LPDE+00000028       1 BIT(S)                             04920000
A00003   EQU   LPDE+00000028       1 BIT(S)                             04930000
LPDENLR  EQU   LPDE+00000028       1 BIT(S)                             04940000
LPDEATT2 EQU   LPDE+00000029       1 BYTE(S)                            04950000
A00004   EQU   LPDE+00000029       2 BIT(S)                             04960000
LPDEXLE  EQU   LPDE+00000029       1 BIT(S)                             04970000
LPDERLC  EQU   LPDE+00000029       1 BIT(S)                             04980000
A00005   EQU   LPDE+00000029       1 BIT(S)                             04990000
A00006   EQU   LPDE+00000029       1 BIT(S)                             05000000
LPDESYSL EQU   LPDE+00000029       1 BIT(S)                             05010000
LPDEAUTH EQU   LPDE+00000029       1 BIT(S)                             05020000
LPDEATT3 EQU   LPDE+00000030       HALFWORD INTEGER                     05030000
LPDEMJNM EQU   LPDE+00000032       8 BYTE(S) ON WORD                    05040000
LPDEXTLN EQU   LPDE+00000032       FULLWORD INTEGER                     05050000
LPDEXTAD EQU   LPDE+00000036       FULLWORD POINTER                     05060000
PARMLST  EQU   00000000            16 BYTE(S)                           05070000
A00007   EQU   PARMLST+00000000    4 BYTE(S)                            05080000
DCBADR   EQU   PARMLST+00000004    4  BYTE  POINTER                     05090000
A00008   EQU   PARMLST+00000008    4 BYTE(S)                            05100000
WKARADR  EQU   PARMLST+00000012    4  BYTE  POINTER                     05110000
LPDOL    EQU   00000000            57 BYTE(S) ON WORD                   05120000
NAME     EQU   LPDOL+00000000      8 BYTE(S)                            05130000
A00009   EQU   LPDOL+00000008      1 BYTE(S)                            05140000
LCTION   EQU   LPDOL+00000009      7 BYTE(S)                            05150000
A00010   EQU   LPDOL+00000009      6 BYTE(S)                            05160000
LCTSN    EQU   LPDOL+00000015      1 BYTE(S)                            05170000
A00011   EQU   LPDOL+00000016      3 BYTE(S)                            05180000
LENGTA   EQU   LPDOL+00000019      7 BYTE(S)                            05190000
A00012   EQU   LPDOL+00000019      6 BYTE(S)                            05200000
LENSN    EQU   LPDOL+00000025      1 BYTE(S)                            05210000
A00013   EQU   LPDOL+00000026      3 BYTE(S)                            05220000
EPADDR   EQU   LPDOL+00000029      7 BYTE(S)                            05230000
A00014   EQU   LPDOL+00000029      6 BYTE(S)                            05240000
EPSN     EQU   LPDOL+00000035      1 BYTE(S)                            05250000
A00015   EQU   LPDOL+00000036      3 BYTE(S)                            05260000
MLPDNM   EQU   LPDOL+00000039      8 BYTE(S)                            05270000
A00016   EQU   LPDOL+00000047      10 BYTE(S)                           05280000
CDETAB   EQU   00000000            20 BYTE(S)                           05290000
NAME2    EQU   CDETAB+00000000     8 BYTE(S)                            05300000
LOLEMN   EQU   CDETAB+00000008     8 BYTE(S)                            05310000
LOCN2    EQU   CDETAB+00000008     4 BYTE(S)                            05320000
LENG2    EQU   CDETAB+00000012     4 BYTE(S)                            05330000
EPAD2    EQU   CDETAB+00000016     3 BYTE(S)                            05340000
EPAD5    EQU   CDETAB+00000016     3  BYTE  POINTER                     05350000
MAMIN    EQU   CDETAB+00000019     1 BYTE(S)                            05360000
ZONE     EQU   *                   8 BYTE(S)                            05370000
         DC    X'0F0F0F0F0F0F0F0F'                                      05380000
LASTN    EQU   *                   8 BYTE(S)                            05390000
         DC    X'FFFFFFFFFFFFFFFF'                                      05400000
TAB      EQU   *                   16 BYTE(S)                           05410000
         DC    C'0123456789ABCDEF'                                      05420000
NEWPG    EQU   *                   1 BYTE(S)                            05430000
         DC    C'1'                                                     05440000
SKIP1    EQU   *                   1 BYTE(S)                            05450000
         DC    C' '                                                     05460000
SKIP3    EQU   *                   1 BYTE(S)                            05470000
         DC    C'-'                                                     05480000
         ORG   @DATA+00000086                                           05490000
PGEND    EQU   *                   HALFWORD INTEGER                     05500000
         DC    FL2'55'                                                  05510000
TITLA    EQU   *                   38 BYTE(S)                           05520000
         DC    C'LINK PACK MAP - ALPHABETICALLY BY NAME'                05530000
TITLB    EQU   *                   39 BYTE(S)                           05540000
         DC    C'LINK PACK MAP - NUMERICALLY BY LOCATION'               05550000
HDNG     EQU   *                   60 BYTE(S)                           05560000
         DC    C'NAME     LOCATION  LENGTH    EP ADDR  MAJO'            05570000
         DC    C'R LPDE NAME'                                           05580000
         DC    00007C' '                                                05590000
ARRAY    EQU   00000000            20 BYTE(S)                           05600000
         ORG   @DATA                                                    05610000
         DS    00000225C                                                05620000
@L       EQU   1                                                        05630000
@DATD    DSECT                                                          05640000
@SAV001  EQU   @DATD+00000000      72 BYTE(S) ON WORD                   05650000
RETADR   EQU   @DATD+00000072      FULLWORD POINTER                     05660000
TEMPAREA EQU   @DATD+00000076      20 BYTE(S)                           05670000
COUNTER  EQU   @DATD+00000096      HALFWORD INTEGER                     05680000
ENTCN    EQU   @DATD+00000098      HALFWORD INTEGER                     05690000
COUNT    EQU   @DATD+00000100      HALFWORD INTEGER                     05700000
I        EQU   @DATD+00000102      HALFWORD INTEGER                     05710000
J        EQU   @DATD+00000104      HALFWORD INTEGER                     05720000
K        EQU   @DATD+00000106      HALFWORD INTEGER                     05730000
N        EQU   @DATD+00000108      HALFWORD INTEGER                     05740000
X        EQU   @DATD+00000110      HALFWORD INTEGER                     05750000
Z        EQU   @DATD+00000112      HALFWORD INTEGER                     05760000
LOCPARM  EQU   @DATD+00000116      FULLWORD POINTER                     05770000
SWITCHES EQU   @DATD+00000120      2 BYTE(S)                            05780000
FLBUF    EQU   SWITCHES+00000000   1 BYTE(S)                            05790000
ALNUSW   EQU   SWITCHES+00000001   1 BYTE(S)                            05800000
LINECNT  EQU   @DATD+00000122      HALFWORD INTEGER                     05810000
BUF      EQU   @DATD+00000124      121 BYTE(S)                          05820000
CC       EQU   BUF+00000000        1 BYTE(S)                            05830000
LINE     EQU   BUF+00000001        120 BYTE(S)                          05840000
FTLNE    EQU   BUF+00000001        60 BYTE(S)                           05850000
A00017   EQU   BUF+00000001        14 BYTE(S)                           05860000
TITLNE   EQU   BUF+00000015        39 BYTE(S)                           05870000
STLNE    EQU   BUF+00000061        60 BYTE(S)                           05880000
         DS    00000245C                                                05890000
@TEMPS   DS    0F                                                       05900000
@TEMP4   DC    F'0'                                                     05910000
            CVT LIST=YES,DSECT=YES                                      05920000
@DATD    DSECT                                                          05930000
@DATEND  EQU   *                                                        05940000
HMBLKLPA CSECT ,                                                        05950000
@9F3     EQU   PRINTB                                                   05960000
@9F1     EQU   LPA02                                                    05970000
         END   HMBLKLPA,(C'PL/S',1400,73347)                            05980000
