         TITLE ' OBJECT MODULE LISTER - HMBLKOBJ'                       00010000
         LCLA  &T,&SPN                                            0001  00020000
.@001    ANOP                                                     0001  00030000
HMBLKOBJ CSECT ,                                                  0001  00040000
         BC    15,14(0,@F)                                              00050000
         DC    C'ÊHMBLKOBJ'                                       0001  00060000
         ST    @E,12(0,@D)                                        0001  00070000
         STM   @0,@C,20(@D)                                       0001  00080000
         BALR  @B,0                                               0001  00090000
@PSTART  DS    0H                                                 0001  00100000
         USING @PSTART+00000,@B                                   0001  00110000
         L     @0,@SIZ001                                         0001  00120000
         GETMAIN  R,LV=(0)                                        0001  00130000
         LR    @C,@1                                              0001  00140000
         USING @DATD+00000,@C                                     0001  00150000
         LM    @0,@1,20(@D)                                       0001  00160000
         XC    @TEMPS(@L),@TEMPS                                  0001  00170000
         ST    @D,@SAV001+4                                       0001  00180000
         LA    @F,@SAV001                                         0001  00190000
         ST    @F,8(0,@D)                                         0001  00200000
         LR    @D,@F                                              0001  00210000
* INITID: MLOG = '0000'X;               /* INITIAL. ERROR BITS        * 00220000
INITID   MVC   MLOG(2),@X1+2                                      0052  00230000
*         ESDCTR = '0000'X;             /* FOR ESDID                  * 00240000
         MVC   ESDCTR(2),@X1+2                                    0053  00250000
*         PAGCTR = '0000'X;             /* FOR PAGE NUMBER            * 00260000
         MVC   PAGCTR(2),@X1+2                                    0054  00270000
*         Q = '00'X;                    /* INITIALIZE Q               * 00280000
         MVI   Q,X'00'                                            0055  00290000
*         RLDSW1 = '00'X;               /* INIT. SWITCH FOR RLD       * 00300000
         MVI   RLDSW1,X'00'                                       0056  00310000
*         RLDSW2 = '00'X;               /* INITIALIZE SWITCH          * 00320000
         MVI   RLDSW2,X'00'                                       0057  00330000
*         RDCTR = '0000'X;              /* INITIALIZE DEBLK LOOP CTR  * 00340000
         MVI   RDCTR,X'00'                                        0058  00350000
*         DECBPTR = ADDR(READLIST);     /* PICK UP DECB ADDR          * 00360000
         LA    @F,READLIST                                        0059  00370000
         ST    @F,DECBPTR                                         0059  00380000
*         PARMPTR = REG1;               /* POINTS TO PARM LIST        * 00390000
         ST    @1,PARMPTR                                         0060  00400000
*         CVTWORK(1:4) = ADDR(OBJEOF);       /*STORE ADDR OF EOF RTN  * 00410000
         LA    @F,OBJEOF                                          0061  00420000
         ST    @F,CVTWORK                                         0061  00430000
*         ADRREG = DCBIN;               /* PICK UP INPUT DCB ADDR     * 00440000
         L     @8,PARMPTR                                         0062  00450000
         L     @3,0(0,@8)                                         0062  00460000
*         GENERATE;                     /* STORE EOF ADDR IN DCB      * 00470000
         USING IHADCB,ADRREG           EST. ADDRABILITY FOR DSECT       00480000
         MVC   DCBEODAD+1(3),CVTWORK+1  MOVE IN EOF ADDR                00490000
         DS    0H                                                       00500000
*         GO TO MAINHD;                 /* SKIP AROUND LIST READ FORM * 00510000
         BC    15,MAINHD                                          0064  00520000
*         GENERATE;                     /* ISSUE LIST FORM OF         * 00530000
READLB1  READ  DECB,SF,MF=L            READ MACRO                       00540000
READLTH  EQU   *-READLB1               PICK UP LIST FORM LENGTH         00550000
         DS    0H                                                       00560000
*         /************************************************************ 00570000
*         /* PRINT OUT LISTOBJ HEADING                                * 00580000
*         /************************************************************ 00590000
* MAINHD: K = 1;                        /* PTR TO PAGE HEADING        * 00600000
MAINHD   MVI   K,1                                                0066  00610000
*         RTNPTR = ADDR(HDLAB1);        /* SET RTN PTR                * 00620000
         LA    @F,HDLAB1                                          0067  00630000
         ST    @F,RTNPTR                                          0067  00640000
*         GO TO INIT1;                  /* GO TO MOVE IN HEADING      * 00650000
         BC    15,INIT1                                           0068  00660000
* HDLAB1: IF MEMNAME = BUF(112:119)     /* IS MEMBER NAME PASSED?     * 00670000
*           THEN                        /* NO                         * 00680000
HDLAB1   L     @8,PARMPTR                                         0069  00690000
         CLC   36(8,@8),BUF+111                                   0069  00700000
*             GO TO HDLAB3;             /* CONTINUE PROCESSING        * 00710000
         BC    08,HDLAB3                                          0070  00720000
*           ELSE                        /* MEMBER NAME PASSED         * 00730000
*             DO;                       /* SO, PUT ON HEADER LINE     * 00740000
*               K = 16;                 /* INDEX INTO HEADINGS        * 00750000
         MVI   K,16                                               0072  00760000
*               RTNPTR = ADDR(HDLAB2);  /* SET RETURN ADDR            * 00770000
         LA    @F,HDLAB2                                          0073  00780000
         ST    @F,RTNPTR                                          0073  00790000
*               GO TO MVHDS;            /* PUT HEADING IN BUFFER      * 00800000
         BC    15,MVHDS                                           0074  00810000
* HDLAB2:       BUF(60:68) = MEMNAME;   /* MOVE NAME INTO BUFFER      * 00820000
HDLAB2   L     @8,PARMPTR                                         0075  00830000
         MVC   BUF+59(8),36(@8)                                   0075  00840000
         MVI   BUF+67,C' '                                        0075  00850000
*             END;                      /* END DO FOR MEMEBER NAME    * 00860000
* HDLAB3: K = 2;                        /*  PTR TO PAGE NO. HEAD      * 00870000
HDLAB3   MVI   K,2                                                0077  00880000
*         RTNPTR = ADDR(HDLAB4);        /* SET RTN PTR                * 00890000
         LA    @F,HDLAB4                                          0078  00900000
         ST    @F,RTNPTR                                          0078  00910000
*         GO TO MVHDS;                  /* MOVE IN HEADING            * 00920000
         BC    15,MVHDS                                           0079  00930000
* HDLAB4: PAGCTR = PAGCTR + 1;          /* UPDATE PAGE NO.CTR         * 00940000
HDLAB4   LA    @F,1                                               0080  00950000
         AH    @F,PAGCTR                                          0080  00960000
         STH   @F,PAGCTR                                          0080  00970000
*         GENERATE;                     /* CVD PAGE NO. TO DEC.       * 00980000
         LH    PTRREG,PAGCTR           PICK UP PAGE NO.                 00990000
         CVD   PTRREG,DBLWD            CONVERT ONTO DOUBLEWD            01000000
         UNPK  CVTWORK(5),DBLWD+5(3)   UNPACK IT                        01010000
         OI    CVTWORK+4,X'F0'         'OR' OUT SIGN BIT                01020000
         MVC   BUF+117(4),CVTWORK+1   MOVE PAGE# INTO BUF               01030000
         DS    0H                                                       01040000
*         LINECT = '02'X;               /* UPDATE LINE CT             * 01050000
         LA    @F,X'02'                                           0082  01060000
         STH   @F,LINECT                                          0082  01070000
*         BUF(1) = '1';                 /* ASA CHAR FOR TOP PAGE      * 01080000
         MVI   BUF,C'1'                                           0083  01090000
*         REG1 = DCBOUT;                /* PICK UP DCB ADDR           * 01100000
         L     @8,PARMPTR                                         0084  01110000
         L     @1,4(0,@8)                                         0084  01120000
*         GENERATE  (PUT   (1),BUF);    /* PRINT HEADING              * 01130000
         PUT   (1),BUF                                                  01140000
         DS    0H                                                       01150000
*         /************************************************************ 01160000
*         /* PRINT USER TITLE                                         * 01170000
*         /************************************************************ 01180000
* PRTITLE:PTRREG = TITLEAD;             /* PICK UP TITLE ADDR         * 01190000
PRTITLE  L     @8,PARMPTR                                         0086  01200000
         L     @2,8(0,@8)                                         0086  01210000
*         REG1 = DCBOUT;                /* PICK UP DCB ADDR           * 01220000
         L     @1,4(0,@8)                                         0087  01230000
*         GENERATE  (PUT   (1),(PTRREG));  /* PRINT TITLE             * 01240000
         PUT   (1),(PTRREG)                                             01250000
         DS    0H                                                       01260000
*         GO TO READ;                   /* GO READ RECORD             * 01270000
         BC    15,READ                                            0089  01280000
*         /************************************************************ 01290000
*         /* COMMON RTN TO MOVE HEADINGS INTO BUFFER AREA             * 01300000
*         /************************************************************ 01310000
* INIT1:  BUF(2) = ' ';                 /* BLANK OUT BUFFER           * 01320000
INIT1    MVI   BUF+1,C' '                                         0090  01330000
*         BUF(3:121) = BUF(2:120);      /* BLANK OUT BUFFER           * 01340000
         MVC   BUF+2(119),BUF+1                                   0091  01350000
* MVHDS:  L = WHERE(K);                 /* INDEX INTO BUFFER          * 01360000
MVHDS    SR    @8,@8                                              0092  01370000
         IC    @8,K                                               0092  01380000
         SR    @F,@F                                              0092  01390000
         IC    @F,HEADERS+63(@8)                                  0092  01400000
         STC   @F,L                                               0092  01410000
*         N = LNGTH(K);                 /*LENGTH TO BE MOVED          * 01420000
         SR    @F,@F                                              0093  01430000
         IC    @F,HEADERS+79(@8)                                  0093  01440000
         STC   @F,N                                               0093  01450000
*         WDSPTR = WDSADR(K);           /* PICK UP PTR                * 01460000
         SR    @9,@9                                              0094  01470000
         IC    @9,K                                               0094  01480000
         SLA   @9,2                                               0094  01490000
         L     @F,HEADERS-4(@9)                                   0094  01500000
         ST    @F,WDSPTR                                          0094  01510000
*         BUF(L:L+N-1) = WDSPTR->HEADBUF(1:N);  /* MOVE MSG INTO BUF  * 01520000
         LR    @6,@F                                              0095  01530000
         LR    @E,@6                                              0095  01540000
         LH    @7,@D1                                             0095  01550000
         SR    @0,@0                                              0095  01560000
         IC    @0,N                                               0095  01570000
         AR    @7,@0                                              0095  01580000
         IC    @0,L                                               0095  01590000
         AR    @7,@0                                              0095  01600000
         SR    @4,@4                                              0095  01610000
         IC    @4,L                                               0095  01620000
         SR    @7,@4                                              0095  01630000
         LA    @A,BUF-1(@4)                                       0095  01640000
         EX    @7,@MVC                                            0095  01650000
*         GO TO RETRN;                  /* RETURN                     * 01660000
         L     @5,RTNPTR                                          0096  01670000
         BCR   15,@5                                              0096  01680000
*         /************************************************************ 01690000
*         /* CHECKS LINE COUNT AND READS NEXT RECORD AND DEBLKS       * 01700000
*         /************************************************************ 01710000
* READ:   IF  LINECT >= 54              /* CAN ANOTHER REC'D FIT?     * 01720000
*           THEN                        /* YES                        * 01730000
READ     LA    @F,54                                              0097  01740000
         CH    @F,LINECT                                          0097  01750000
*             GO TO MAINHD;             /* GO TO PRINT HEADING        * 01760000
         BC    12,MAINHD                                          0098  01770000
*           ELSE                        /* OTHERWISE  CONTINUE        * 01780000
*             IF RDCTR > '0000'X        /* FINISHED WITH THIS BLK     * 01790000
*               THEN                    /* NO                         * 01800000
         L     @F,@X1                                             0099  01810000
         SR    @0,@0                                              0099  01820000
         IC    @0,RDCTR                                           0099  01830000
         CR    @F,@0                                              0099  01840000
         BC    10,@9FF                                            0099  01850000
*                 DO;                   /* CONTINUE DEBLOCKING        * 01860000
*                   INPTR = INPTR + 80;     /* UPDATE INPUT PTR       * 01870000
         LA    @F,80                                              0101  01880000
         A     @F,INPTR                                           0101  01890000
         ST    @F,INPTR                                           0101  01900000
*                   GO TO DEBLKRD;      /* PROCESS THIS RECORD        * 01910000
         BC    15,DEBLKRD                                         0102  01920000
*                 END;                  /* END DEBLK LOOP             * 01930000
*               ELSE;                   /* BLOCK DONE SO READ NEXT    * 01940000
@9FF     EQU   *                                                  0104  01950000
* OBJGET: ADRREG = DCBIN;               /* PICK UP DCB ADDR           * 01960000
@9FE     EQU   *                                                  0105  01970000
OBJGET   L     @8,PARMPTR                                         0105  01980000
         L     @3,0(0,@8)                                         0105  01990000
*         PTRREG = WORKBUF;             /* PICK UP BUFFER ADDR        * 02000000
         L     @2,24(0,@8)                                        0106  02010000
*         INPTR = PTRREG;               /* PICK UP ADDR IN INPUT PTR  * 02020000
         ST    @2,INPTR                                           0107  02030000
*         GENERATE;                     /* READ NEXT RECORD           * 02040000
         MVC   READLIST(READLTH),READLB1  MOVE IN LIST FORM OF READ     02050000
         READ  READLIST,SF,(ADRREG),(PTRREG),MF=E  ISSUE EXECUTE READ   02060000
         CHECK READLIST                CHECK READ                       02070000
         DS    0H                                                       02080000
*         IF  RESIDCT > '0000'X         /* FULL BLK READ IN           * 02090000
*            THEN                       /* NO, SHORT BLOCK            * 02100000
         L     @F,@X1                                             0109  02110000
         L     @9,DECBPTR                                         0109  02120000
         L     @9,16(0,@9)         DECBSTR                        0109  02130000
         MVC   @TEMP2+2(2),14(@9)                                 0109  02140000
         C     @F,@TEMP2                                          0109  02150000
         BC    10,@9FD                                            0109  02160000
*              DO;                      /* FIND NUM RECORDS READ IN   * 02170000
*                RDCTR = (DCBBLKSI - RESIDCT)/80;      /* CALC LOOPCTR* 02180000
         MVC   @TEMP2+2(2),14(@9)                                 0111  02190000
         L     @E,@TEMP2                                          0111  02200000
         LCR   @E,@E                                              0111  02210000
         MVC   @TEMP2+2(2),DCBBLKSI                               0111  02220000
         A     @E,@TEMP2                                          0111  02230000
         SRDA  @E,32                                              0111  02240000
         LA    @0,80                                              0111  02250000
         DR    @E,@0                                              0111  02260000
         STC   @F,RDCTR                                           0111  02270000
*                GO TO DEBLKRD;         /* PROCESS RECORD             * 02280000
         BC    15,DEBLKRD                                         0112  02290000
*              END;                     /* END SHORT BLK PROCESSING   * 02300000
*            ELSE                       /* FULL BLK READ IN           * 02310000
*              RDCTR = BLKCNT;          /* CALC LOOP CTR VALUE        * 02320000
@9FD     L     @8,PARMPTR                                         0114  02330000
         MVC   RDCTR(1),23(@8)                                    0114  02340000
* DEBLKRD:RDCTR = RDCTR - 1;            /* DECREASE CTR AND PROCESS RD* 02350000
@9FC     EQU   *                                                  0115  02360000
DEBLKRD  SR    @F,@F                                              0115  02370000
         IC    @F,RDCTR                                           0115  02380000
         BCTR  @F,0                                               0115  02390000
         STC   @F,RDCTR                                           0115  02400000
*         /************************************************************ 02410000
*         /* CHECK CARD VALIDITY AND TYPE VALIDITY                    * 02420000
*         /************************************************************ 02430000
*         IF  ZEROTWO = '02'X           /* CHECK 1ST CARD COLUMN      * 02440000
*           THEN                        /* OKAY                       * 02450000
         L     @8,INPTR                                           0116  02460000
         CLI   0(@8),X'02'                                        0116  02470000
*             GO TO TYPCK;              /* GO TO CHECK TYPE           * 02480000
         BC    08,TYPCK                                           0117  02490000
*           ELSE                        /* CONTROL CARD OR ERR        * 02500000
*             DO;                       /* CHECK FOR CNTRL CARD       * 02510000
*               IF ZEROTWO = ' '        /* IS FIRST COLUMN BLANK?     * 02520000
*                 THEN                  /* YES, SO CONTROL CARD       * 02530000
         CLI   0(@8),C' '                                         0119  02540000
         BC    07,@9FB                                            0119  02550000
*                   DO;                 /* PROCESS CARD               * 02560000
*                     BUF(1) = '0';      /* TO SKIP NEXT LINE         * 02570000
         MVI   BUF,C'0'                                           0121  02580000
*                     BUF(2) = ' ';     /* BLANK OUT BUFFER           * 02590000
         MVI   BUF+1,C' '                                         0122  02600000
*                     BUF(3:121) = BUF(2:120); /* BLANK OUT ENTIRE BUF* 02610000
         MVC   BUF+2(119),BUF+1                                   0123  02620000
*                     BUF(2:81) = CARD;  /* MOVE CARD IMAGE INTO BUF  * 02630000
         MVC   BUF+1(80),0(@8)                                    0124  02640000
*                     RTNPTR = ADDR(READ);  /* READ NEXT CD AFTER PRT * 02650000
         LA    @F,READ                                            0125  02660000
         ST    @F,RTNPTR                                          0125  02670000
*                     GO TO OBJPUT;     /* PRINT CONTROL RECORD       * 02680000
         BC    15,OBJPUT                                          0126  02690000
*                   END;                /* END CNTRL DO               * 02700000
*                 ELSE                  /* ERROR IN CARD              * 02710000
*                   DO;                 /* ERROR IMB102I              * 02720000
*                     ERRORS(2) = '1'B;     /* SET ERROR BIT          * 02730000
@9FB     L     @8,PARMPTR                                         0129  02740000
         OI    32(@8),B'01000000'                                 0129  02750000
*                     GO TO ERROR;      /* GO TO ERROR RTN            * 02760000
         BC    15,ERROR                                           0130  02770000
*                   END;                /* END OF DO FOR ERROR        * 02780000
*            END;                       /* END FIRST COLM.CHECK       * 02790000
@9FA     EQU   *                                                  0132  02800000
* TYPCK:  DO  I = 1 TO 5;               /* SEARCH TAB FOR TYPE        * 02810000
TYPCK    LA    @F,1                                               0133  02820000
         STC   @F,I                                               0133  02830000
*           IF  TPES(I) = CARDTYP       /* RECORD TYPE MATCH?         * 02840000
*             THEN                      /* MATCH FOUND                * 02850000
@DO9F9   L     @8,INPTR                                           0134  02860000
         SR    @9,@9                                              0134  02870000
         IC    @9,I                                               0134  02880000
         MH    @9,@D2                                             0134  02890000
         LA    @A,TYPETAB+18(@9)                                  0134  02900000
         CLC   0(3,@A),1(@8)                                      0134  02910000
         BC    07,@9F5                                            0134  02920000
*               GO TO TYADR(I);         /* GO TO PROCESS CARD         * 02930000
         SR    @6,@6                                              0135  02940000
         IC    @6,I                                               0135  02950000
         SLA   @6,2                                               0135  02960000
         LA    @A,TYPETAB-3(@6)                                   0135  02970000
         MVC   @TEMP3+1(3),0(@A)                                  0135  02980000
         L     @F,@TEMP3                                          0135  02990000
         BCR   15,@F                                              0135  03000000
*             ELSE ;                    /* CONTINUE SEARCH            * 03010000
*         END  TYPCK;                   /* END TYPE TAB SEARCH        * 03020000
*         ERRORS(2) = '1'B;             /* ERROR:TYPE NOT FOUND       * 03030000
@9F5     SR    @F,@F                                              0137  03040000
         IC    @F,I                                               0137  03050000
         AH    @F,@D3                                             0137  03060000
@DO9F8   STC   @F,I                                               0137  03070000
         CH    @F,@D4                                             0137  03080000
         BC    12,@DO9F9                                          0137  03090000
         L     @8,PARMPTR                                         0138  03100000
         OI    32(@8),B'01000000'                                 0138  03110000
*         GO TO ERROR;                  /* GOTO ERR RTN: IMB102I      * 03120000
*         /************************************************************ 03130000
*         /* ERROR HANDLING:  WILL PRINT ENTIRE CARD                  * 03140000
*         /************************************************************ 03150000
*         /* TO PRINT HEADING                                         * 03160000
*         /************************************************************ 03170000
* ERROR:  K = 15;                       /* PTR TO ERROR HEADING       * 03180000
ERROR    MVI   K,15                                               0140  03190000
*         RTNPTR = ADDR(ER1);           /* SET RTN PTR                * 03200000
         LA    @F,ER1                                             0141  03210000
         ST    @F,RTNPTR                                          0141  03220000
*         GO TO INIT1;                  /* PUT HEADING IN BUF         * 03230000
         BC    15,INIT1                                           0142  03240000
*         /************************************************************ 03250000
*         /* TO PRINT FIRST 40 CHARS OF CARD                          * 03260000
*         /************************************************************ 03270000
* ER1:    PTRREG = INPTR;               /* PTR TO WHAT TO CONVT       * 03280000
ER1      L     @2,INPTR                                           0143  03290000
*         DATA = 40;                    /* NUMBER OF BYTES            * 03300000
         LA    @F,40                                              0144  03310000
         STH   @F,DATA                                            0144  03320000
*         RTNPTR = ADDR(ER2);           /* SET RTN PTR                * 03330000
         LA    @F,ER2                                             0145  03340000
         ST    @F,RTNPTR                                          0145  03350000
*         GO TO CVTHEX;                 /* CONV.TO PRT HEX IN BUF     * 03360000
         BC    15,CVTHEX                                          0146  03370000
* ER2:    RTNPTR = ADDR(ER3);           /* SET RTN PTR                * 03380000
ER2      LA    @F,ER3                                             0147  03390000
         ST    @F,RTNPTR                                          0147  03400000
*         BUF(1) = '0';                 /* TO SKIP TO NEXT LINE       * 03410000
         MVI   BUF,C'0'                                           0148  03420000
*         GO TO OBJPUT;                 /* GO PRINT OUT BUFFER        * 03430000
         BC    15,OBJPUT                                          0149  03440000
*         /************************************************************ 03450000
*         /* TO PRINT OUT LAST 40 CHAR OF CARD                        * 03460000
*         /************************************************************ 03470000
* ER3:    DATA = 40;                    /* SET NO. OF BYTES           * 03480000
ER3      LA    @F,40                                              0150  03490000
         STH   @F,DATA                                            0150  03500000
*         RTNPTR = ADDR(ER4);           /* SET RTN PTR                * 03510000
         LA    @F,ER4                                             0151  03520000
         ST    @F,RTNPTR                                          0151  03530000
*         BUF(1) = ' ';                 /* INITIALIZE  BLANKS         * 03540000
         MVI   BUF,C' '                                           0152  03550000
*         BUF(2:15) = BUF(1:14);        /* TO BLANK OUT HEADING       * 03560000
         MVC   BUF+1(14),BUF                                      0153  03570000
*         GO TO CVTHEX;                 /* CONV AND PUT ON BUF        * 03580000
         BC    15,CVTHEX                                          0154  03590000
* ER4:    RTNPTR = ADDR(READ);          /* SET RTN PTR                * 03600000
ER4      LA    @F,READ                                            0155  03610000
         ST    @F,RTNPTR                                          0155  03620000
*         BUF(1) = ' ';                 /* ASA CHAR TO PRT NEXT LINE  * 03630000
         MVI   BUF,C' '                                           0156  03640000
*         GO TO OBJPUT;                 /* PRINT OUT BUFFER           * 03650000
*         /************************************************************ 03660000
*         /* TO PRINT OUT LINE                                        * 03670000
*         /************************************************************ 03680000
* OBJPUT: REG1 = DCBOUT;                /* PICK UP DCB ADDR           * 03690000
OBJPUT   L     @8,PARMPTR                                         0158  03700000
         L     @1,4(0,@8)                                         0158  03710000
*         GENERATE( PUT   (REG1),BUF);  /* WRITE OUT BUFFER           * 03720000
          PUT   (REG1),BUF                                              03730000
         DS    0H                                                       03740000
*         IF BUF(1) = ' '               /* UPDATE LINE CTR            * 03750000
*           THEN                        /* ONLY 1 LINE PRINTED        * 03760000
         CLI   BUF,C' '                                           0160  03770000
         BC    07,@9F4                                            0160  03780000
*             LINECT = LINECT + 1;      /* ADD ON TO COUNT            * 03790000
         LA    @F,1                                               0161  03800000
         AH    @F,LINECT                                          0161  03810000
         STH   @F,LINECT                                          0161  03820000
         BC    15,@9F3                                            0162  03830000
*           ELSE                        /* 2 LINES PRINTED            * 03840000
*             LINECT = LINECT + '02'X;  /* ADD ON TO COUNT            * 03850000
@9F4     LA    @F,X'02'                                           0162  03860000
         AH    @F,LINECT                                          0162  03870000
         STH   @F,LINECT                                          0162  03880000
*         GO TO RETRN;                  /* RETURN                     * 03890000
@9F3     L     @9,RTNPTR                                          0163  03900000
         BCR   15,@9                                              0163  03910000
*         /************************************************************ 03920000
*         /* TO PROCESS SYM RECORDS                                   * 03930000
*         /************************************************************ 03940000
* SYMTYP: K = 3;                        /* SET POINTER TO MOVE HEADS  * 03950000
SYMTYP   MVI   K,3                                                0164  03960000
*         RTNPTR = ADDR(SYMLAB2);       /* SET RTN POINTER            * 03970000
         LA    @F,SYMLAB2                                         0165  03980000
         ST    @F,RTNPTR                                          0165  03990000
*         GO TO INIT1;                  /* PUT HEADING IN BUFFER      * 04000000
         BC    15,INIT1                                           0166  04010000
* SYMLAB2:K = 4;                        /* SET HEADINGS PTR           * 04020000
SYMLAB2  MVI   K,4                                                0167  04030000
*         RTNPTR = ADDR(SYMLAB3);       /* SET RTN PTR                * 04040000
         LA    @F,SYMLAB3                                         0168  04050000
         ST    @F,RTNPTR                                          0168  04060000
*         GO TO MVHDS;                  /* PUT HEADING IN BUFFER      * 04070000
         BC    15,MVHDS                                           0169  04080000
* SYMLAB3:IF NUMBYTE <= 36              /* LESS THAN 36 DATA BYTES?   * 04090000
*           THEN                        /* YES SO TRANSLATE           * 04100000
SYMLAB3  LA    @F,36                                              0170  04110000
         L     @8,INPTR                                           0170  04120000
         MVC   @TEMP2+2(2),10(@8)                                 0170  04130000
         C     @F,@TEMP2                                          0170  04140000
         BC    04,@9F2                                            0170  04150000
*             DO;                       /* ALL BYTES NOW              * 04160000
*               DATA = NUMBYTE;         /* PICK UP TOTAL NUM OF BYTES * 04170000
         MVC   DATA(2),10(@8)                                     0172  04180000
*               DATARES = '00'X;        /* REMAINING BYTES = ZERO     * 04190000
         LA    @F,X'00'                                           0173  04200000
         STH   @F,DATARES                                         0173  04210000
         BC    15,@9F1                                            0175  04220000
*             END;                      /* CONTINUE PROCESSING        * 04230000
*           ELSE                        /* MORE THAN 36 BYTES, SO     * 04240000
*             DO;                       /* TRANSLATE                  * 04250000
*               DATA = 36;              /* 36 BYTES TESTRAN BYTES AND * 04260000
@9F2     LA    @F,36                                              0176  04270000
         STH   @F,DATA                                            0176  04280000
*               DATARES = NUMBYTE - 36;       /* REST LATER           * 04290000
         LH    @F,@D5                                             0177  04300000
         L     @8,INPTR                                           0177  04310000
         MVC   @TEMP2+2(2),10(@8)                                 0177  04320000
         A     @F,@TEMP2                                          0177  04330000
         STH   @F,DATARES                                         0177  04340000
*             END;                      /* PROCESS FIRST 36 BYTES     * 04350000
*         PTRREG = ADDR(TESTDATA);      /* PTR TO BYTES TO TRANSLATE  * 04360000
@9F1     L     @8,INPTR                                           0179  04370000
         LA    @2,16(0,@8)                                        0179  04380000
*         RTNPTR = ADDR(SYMLAB4);       /* SET RTN PTR                * 04390000
         LA    @F,SYMLAB4                                         0180  04400000
         ST    @F,RTNPTR                                          0180  04410000
*         GO TO CVTHEX;                 /* GO CONVERT BYTES AND PUT     04420000
*                                          IN BUFFER                  * 04430000
         BC    15,CVTHEX                                          0181  04440000
* SYMLAB4:BUF(1) = '0';                 /* SET TO SKIP NEXT LINE      * 04450000
SYMLAB4  MVI   BUF,C'0'                                           0182  04460000
*         RTNPTR = ADDR(SYMLAB5);       /* SET RTN PTR                * 04470000
         LA    @F,SYMLAB5                                         0183  04480000
         ST    @F,RTNPTR                                          0183  04490000
*         GO TO CARDNMHD;               /* GO PUT IN CARD NUM AND       04500000
*                                          PRINT OUT LINE             * 04510000
         BC    15,CARDNMHD                                        0184  04520000
* SYMLAB5:BUF(1) = ' ';                 /* INITIALIZE BLANK           * 04530000
SYMLAB5  MVI   BUF,C' '                                           0185  04540000
*         BUF(2:121) = BUF(1:120);      /* BLANK OUT BUFFER           * 04550000
         MVC   BUF+1(120),BUF                                     0186  04560000
*         IF DATARES = '00'X            /* ANY LEFT TO TRANSLATE & MV * 04570000
*           THEN                        /* NO MORE                    * 04580000
         LA    @F,X'00'                                           0187  04590000
         MVC   @TEMP2+2(2),DATARES                                0187  04600000
         C     @F,@TEMP2                                          0187  04610000
*             GO TO READ;               /* SO GO READ NEXT CARD       * 04620000
         BC    08,READ                                            0188  04630000
*           ELSE                        /* MORE TO GO                 * 04640000
*             DO;                       /* THEREFORE CONTINUE         * 04650000
*               DATA = DATARES;         /* NUM BYTES LEFT TO DO       * 04660000
         MVC   DATA(2),DATARES                                    0190  04670000
*               RTNPTR = ADDR(SYMLAB6); /* SET RTN PTR                * 04680000
         LA    @F,SYMLAB6                                         0191  04690000
         ST    @F,RTNPTR                                          0191  04700000
*               GO TO CVTHEX;           /* GO DO REMAINING BYTES      * 04710000
         BC    15,CVTHEX                                          0192  04720000
*             END;                      /* END DO LOOP                * 04730000
* SYMLAB6:RTNPTR = ADDR(READ);          /* SET RTN PTR TO READ NEXT   * 04740000
SYMLAB6  LA    @F,READ                                            0194  04750000
         ST    @F,RTNPTR                                          0194  04760000
*         BUF(1) = ' ';                 /* ASA CHAR TO PRT NXT LINE   * 04770000
         MVI   BUF,C' '                                           0195  04780000
*         GO TO OBJPUT;                 /* GO PRINT OUT REMAINING LINE* 04790000
         BC    15,OBJPUT                                          0196  04800000
*         /************************************************************ 04810000
*         /* ESD CARD PROCESSING  - HEADINGS                          * 04820000
*         /************************************************************ 04830000
* ESDTYP: K = 5;                        /* SET HEADING PTR            * 04840000
ESDTYP   MVI   K,5                                                0197  04850000
*         RTNPTR = ADDR(ESDLAB1);       /* SET RTN PTR                * 04860000
         LA    @F,ESDLAB1                                         0198  04870000
         ST    @F,RTNPTR                                          0198  04880000
*         BUF(1) = '0';                 /* TO SKIP NEXT LINE          * 04890000
         MVI   BUF,C'0'                                           0199  04900000
*         GO TO INIT1;                  /* PUT HEADING IN BUFFER      * 04910000
         BC    15,INIT1                                           0200  04920000
* ESDLAB1:RTNPTR = ADDR(ESDLAB2);       /* SET RTN PTR                * 04930000
ESDLAB1  LA    @F,ESDLAB2                                         0201  04940000
         ST    @F,RTNPTR                                          0201  04950000
* CARDNMHD:BUF(114:121) = CARDCHAR;     /* FILL IN CC 73-76 FROM CARD * 04960000
CARDNMHD L     @8,INPTR                                           0202  04970000
         MVC   BUF+113(8),72(@8)                                  0202  04980000
*         GO TO OBJPUT;                 /* PRINT OUT BUFFER           * 04990000
         BC    15,OBJPUT                                          0203  05000000
* ESDLAB2:K = 6;                        /* SET HEADING PTR            * 05010000
ESDLAB2  MVI   K,6                                                0204  05020000
*         RTNPTR = ADDR(ESDLAB3);       /* SET RTN PTR                * 05030000
         LA    @F,ESDLAB3                                         0205  05040000
         ST    @F,RTNPTR                                          0205  05050000
*         GO TO INIT1;                  /* GO PUT HEADING IN BUFFER   * 05060000
         BC    15,INIT1                                           0206  05070000
* ESDLAB3:RTNPTR = ADDR(ESDLP1);        /* SET RTN PTR                * 05080000
ESDLAB3  LA    @F,ESDLP1                                          0207  05090000
         ST    @F,RTNPTR                                          0207  05100000
*         BUF(1) = ' ';                 /* SET TO SKIP NEXT LINE      * 05110000
         MVI   BUF,C' '                                           0208  05120000
*         GO TO OBJPUT;                 /* PRINT OUT BUFFER           * 05130000
         BC    15,OBJPUT                                          0209  05140000
*         /************************************************************ 05150000
*         /* ESD PROCESSING                                           * 05160000
*         /************************************************************ 05170000
* ESDLP1: P = NUMBYTE/16;               /* PICK UP NUMBER OF ESD ITEMS* 05180000
ESDLP1   L     @8,INPTR                                           0210  05190000
         MVC   @TEMP2+2(2),10(@8)                                 0210  05200000
         L     @E,@TEMP2                                          0210  05210000
         SRA   @E,4                                               0210  05220000
         STC   @E,P                                               0210  05230000
*         CARDPTR = INPTR + 16;         /* INITIALIZE ESD ITEM PTR    * 05240000
         LA    @F,16                                              0211  05250000
         A     @F,INPTR                                           0211  05260000
         ST    @F,CARDPTR                                         0211  05270000
*         IF FSTESDID ^= BUF(120:121)   /* IS 1ST ITEM AN LD ?        * 05280000
*           THEN                        /* NO                         * 05290000
         MVC   @TEMP2+2(2),BUF+119                                0212  05300000
         L     @F,@TEMP2                                          0212  05310000
         MVC   @TEMP2+2(2),14(@8)                                 0212  05320000
         C     @F,@TEMP2                                          0212  05330000
         BC    08,@9F0                                            0212  05340000
*             ESDCTR = FSTESDID - 1;    /* SO ID=ID ON CRD-1,+1 LATER * 05350000
         LH    @F,@D1                                             0213  05360000
         MVC   @TEMP2+2(2),14(@8)                                 0213  05370000
         A     @F,@TEMP2                                          0213  05380000
         STH   @F,ESDCTR                                          0213  05390000
*           ELSE;                       /* YES, LEAVE CTR AS IS       * 05400000
@9F0     EQU   *                                                  0214  05410000
*         DO Q = 1 TO P;                /* LOOP TO PROCESS ESD   CARD * 05420000
@9EF     LA    @F,1                                               0215  05430000
         BC    15,@DO9ED                                          0215  05440000
*           BUF(1) = ' ';               /* SET TO PRINT ON NEXT LINE  * 05450000
@DO9EE   MVI   BUF,C' '                                           0216  05460000
*           BUF(2:121) = BUF(1:120);    /* BLANK OUT BUFFER           * 05470000
         MVC   BUF+1(120),BUF                                     0217  05480000
* ESDNAME:  BUF(20:27) = NAME;          /* MOVE NAME TO BUFFER        * 05490000
ESDNAME  L     @8,CARDPTR                                         0218  05500000
         MVC   BUF+19(8),0(@8)                                    0218  05510000
* IDESD:    IF TYPE = '01'X             /* IS TYPE AN LD?             * 05520000
*             THEN                      /* YES                        * 05530000
IDESD    L     @8,CARDPTR                                         0219  05540000
         CLI   8(@8),X'01'                                        0219  05550000
*               GO TO ESDADDR;          /* DO NOT PROCESS ESDID FOR LD* 05560000
         BC    08,ESDADDR                                         0220  05570000
*             ELSE;                     /* NOT LD. SO PROC. ESDID     * 05580000
*           ESDCTR = ESDCTR + '0001'X;  /* UPDATE ESDID COUNTER       * 05590000
         L     @F,@X8                                             0222  05600000
         MVC   @TEMP2+2(2),ESDCTR                                 0222  05610000
         A     @F,@TEMP2                                          0222  05620000
         STH   @F,ESDCTR                                          0222  05630000
*           GENERATE;                   /* CNVT ID TO PRINTABLE DEC   * 05640000
         LH    PTRREG,ESDCTR           PICK UP ESD ID                   05650000
         CVD   PTRREG,DBLWD            CONVERT TO DECIMAL               05660000
         UNPK  CVTWORK(5),DBLWD+5(3)   UNPACK IT                        05670000
         OI    CVTWORK+4,X'F0'     'OR' OUT LAST ZONE                   05680000
         MVC   BUF+3(4),CVTWORK+1   MOVE ID INTO BUF                    05690000
         DS    0H                                                       05700000
* ESDADDR:  DATA = '03'X;               /* NUM BYTES TO TRANS. TO HEX * 05710000
ESDADDR  LA    @F,X'03'                                           0224  05720000
         STH   @F,DATA                                            0224  05730000
*           I = 30;                     /* SET PTR IN OUTPUT BUFFER   * 05740000
         MVI   I,30                                               0225  05750000
*           PTRREG = ADDR(ADRES);       /* PTR TO INPUT:ADDR          * 05760000
         L     @8,CARDPTR                                         0226  05770000
         LA    @2,9(0,@8)                                         0226  05780000
*           RTNPTR = ADDR(IDLTH);       /* SET RTN PTR                * 05790000
         LA    @F,IDLTH                                           0227  05800000
         ST    @F,RTNPTR                                          0227  05810000
*           GO TO BTHLP2;               /* GO TRANS AND PUT IN BUFFER * 05820000
         BC    15,BTHLP2                                          0228  05830000
* IDLTH:    DATA = '03'X;               /* NUM OF BYTES TO TRANS      * 05840000
IDLTH    LA    @F,X'03'                                           0229  05850000
         STH   @F,DATA                                            0229  05860000
*           I = 39;                     /* WHERE TO PLACE IN BUFFER   * 05870000
         MVI   I,39                                               0230  05880000
*           PTRREG = ADDR(IDORLGTH);    /* PTR TO BYTES TO TRANSLATE  * 05890000
         L     @8,CARDPTR                                         0231  05900000
         LA    @2,13(0,@8)                                        0231  05910000
*           RTNPTR = ADDR(ESDLP2);      /* SET RTN PTR                * 05920000
         LA    @F,ESDLP2                                          0232  05930000
         ST    @F,RTNPTR                                          0232  05940000
*           GO TO BTHLP2;               /* GO TRANS. ID/LTH INTO BUF  * 05950000
         BC    15,BTHLP2                                          0233  05960000
* ESDLP2:   DO I = 1 TO 8;              /* DO LOOP TO GET TYPE        * 05970000
ESDLP2   LA    @F,1                                               0234  05980000
         STC   @F,I                                               0234  05990000
*             IF ESDTAB(I) = TYPE       /* IS TYPE MATCH FOUND        * 06000000
*               THEN                    /* YES                        * 06010000
@DO9EA   L     @8,CARDPTR                                         0235  06020000
         SR    @F,@F                                              0235  06030000
         IC    @F,8(0,@8)                                         0235  06040000
         SR    @9,@9                                              0235  06050000
         IC    @9,I                                               0235  06060000
         SR    @0,@0                                              0235  06070000
         IC    @0,ESDTABLE-1(@9)                                  0235  06080000
         CR    @F,@0                                              0235  06090000
         BC    07,@9E6                                            0235  06100000
*                 DO;                   /* PROCESS TYPE               * 06110000
*                   BUF(11:16) = TYPTAB(I);  /* PUT TYPE IN BUFFER    * 06120000
         SR    @6,@6                                              0237  06130000
         IC    @6,I                                               0237  06140000
         MH    @6,@D6                                             0237  06150000
         LA    @E,ESDTABLE+2(@6)                                  0237  06160000
         MVC   BUF+10(6),0(@E)                                    0237  06170000
*                   GO TO ESDLAB4;      /* CONTINUE PROCESSING        * 06180000
         BC    15,ESDLAB4                                         0238  06190000
*                 END;                  /* END IF MATCH FOUND         * 06200000
*               ELSE;                   /* TYPE NOT FOUND,CONT SRCH   * 06210000
@9E6     EQU   *                                                  0240  06220000
*           END ESDLP2;                 /* CONTINUE SEARCH            * 06230000
*           ERRORS(3) = '1'B;           /* ERROR:TYPE NOT FOUND       * 06240000
@9E5     SR    @F,@F                                              0241  06250000
         IC    @F,I                                               0241  06260000
         AH    @F,@D3                                             0241  06270000
@DO9E9   STC   @F,I                                               0241  06280000
         CH    @F,@D7                                             0241  06290000
         BC    12,@DO9EA                                          0241  06300000
         L     @8,PARMPTR                                         0242  06310000
         OI    32(@8),B'00100000'                                 0242  06320000
*           GO TO ERROR;                /* GO PRINT OUT CARD AND ERROR* 06330000
         BC    15,ERROR                                           0243  06340000
* ESDLAB4:  RTNPTR = ADDR(ESDLAB5);     /* SET RTN PTR TO READ NEXT CD* 06350000
ESDLAB4  LA    @F,ESDLAB5                                         0244  06360000
         ST    @F,RTNPTR                                          0244  06370000
*           BUF(1) = ' ';               /* ASA CHAR TO PRT NXT LINE   * 06380000
         MVI   BUF,C' '                                           0245  06390000
*           GO TO OBJPUT;               /* PRINT OUT BUFFER           * 06400000
         BC    15,OBJPUT                                          0246  06410000
* ESDLAB5:  CARDPTR = CARDPTR + 16;     /* UPDATE ESD ITEM POINTER    * 06420000
ESDLAB5  LA    @F,16                                              0247  06430000
         A     @F,CARDPTR                                         0247  06440000
         ST    @F,CARDPTR                                         0247  06450000
*         END;                          /* END LOOP  ESD ITEMS:ESDLP1 * 06460000
*         GO TO READ;                   /* READ NEXT CARD             * 06470000
         SR    @F,@F                                              0248  06480000
         IC    @F,Q                                               0248  06490000
         AH    @F,@D3                                             0248  06500000
@DO9ED   STC   @F,Q                                               0248  06510000
         SR    @0,@0                                              0248  06520000
         IC    @0,P                                               0248  06530000
         CR    @F,@0                                              0248  06540000
         BC    12,@DO9EE                                          0248  06550000
         BC    15,READ                                            0249  06560000
*         /************************************************************ 06570000
*         /* TXT PROCESSING: MOVE IN HEADINGS                         * 06580000
*         /************************************************************ 06590000
* TXTTYP: K = 7;                        /* SET HEADING PTR            * 06600000
TXTTYP   MVI   K,7                                                0250  06610000
*         BUF(1) = '0';                 /* SKIP NEXT PRINTING LINE    * 06620000
         MVI   BUF,C'0'                                           0251  06630000
*         RTNPTR = ADDR(TXTLAB1);       /* SET RTN PTR                * 06640000
         LA    @F,TXTLAB1                                         0252  06650000
         ST    @F,RTNPTR                                          0252  06660000
*         GO TO INIT1;                  /* PUT HEADING IN BUFFER      * 06670000
         BC    15,INIT1                                           0253  06680000
* TXTLAB1:RTNPTR = ADDR(TXTLAB2);       /* SET RTN PTR                * 06690000
TXTLAB1  LA    @F,TXTLAB2                                         0254  06700000
         ST    @F,RTNPTR                                          0254  06710000
*         GO TO CARDNMHD;               /*PUT IN LAST 8 BYTES & PRINT * 06720000
         BC    15,CARDNMHD                                        0255  06730000
* TXTLAB2:BUF(1) = ' ';                 /* TO PRINT ON NEXT LINE      * 06740000
TXTLAB2  MVI   BUF,C' '                                           0256  06750000
*         K = 8;                        /* SET HEADING PTR            * 06760000
         MVI   K,8                                                0257  06770000
*         RTNPTR = ADDR(TXTLAB3);       /* SET RTN PTR                * 06780000
         LA    @F,TXTLAB3                                         0258  06790000
         ST    @F,RTNPTR                                          0258  06800000
*         GO TO INIT1;                  /* PUT HEADINGS IN BUFFER     * 06810000
         BC    15,INIT1                                           0259  06820000
*         /************************************************************ 06830000
*         /* TXT PROCESSING: CARD FORMATTING AND PRINTING             * 06840000
*         /************************************************************ 06850000
* TXTLAB3:DATA = '03'X;                 /* NUM BYTES TO TRANS INTO BUF* 06860000
TXTLAB3  LA    @F,X'03'                                           0260  06870000
         STH   @F,DATA                                            0260  06880000
*         I = 8;                        /* WHERE TO PUT IN BUFFER     * 06890000
         MVI   I,8                                                0261  06900000
*         PTRREG = ADDR(TXTADDR);       /* PTR TO BYTES TO BE TRANS   * 06910000
         L     @8,INPTR                                           0262  06920000
         LA    @2,5(0,@8)                                         0262  06930000
*         RTNPTR = ADDR(TXTLAB4);       /* SET RTN PTR                * 06940000
         LA    @F,TXTLAB4                                         0263  06950000
         ST    @F,RTNPTR                                          0263  06960000
*         GO TO BTHLP2;                 /* GO TRANS AND PUT IN BUFFER * 06970000
         BC    15,BTHLP2                                          0264  06980000
* TXTLAB4:GENERATE;                     /* ESDID TO PRINTABLE DEC     * 06990000
TXTLAB4  EQU   *                                                  0265  07000000
         L     ADRREG,INPTR            PICK UP INPTR                    07010000
         LH    PTRREG,ESDIFER(ADRREG)  PICK UP ESD ID                   07020000
         CVD   PTRREG,DBLWD            CONVERT TO DECIMAL               07030000
         UNPK  CVTWORK(5),DBLWD+5(3)  UNPACK IT                         07040000
         OI    CVTWORK+4,X'F0'      'OR' OUT LAST ZONE                  07050000
         MVC   BUF+21(4),CVTWORK+1  MOVE INTO BUF                       07060000
         DS    0H                                                       07070000
*         I = 33;                       /* SET INDEX INTO OUTPUT BUF  * 07080000
         MVI   I,33                                               0266  07090000
*         IF NUMBYTE3 > 40              /* MORE THAN 40 TEXT BYTES ?  * 07100000
*           THEN                        /* THEN                       * 07110000
         LA    @F,40                                              0267  07120000
         L     @8,INPTR                                           0267  07130000
         MVC   @TEMP2+2(2),10(@8)                                 0267  07140000
         C     @F,@TEMP2                                          0267  07150000
         BC    10,@9E4                                            0267  07160000
*             DO;                       /* TRANS. FIRST 40 BYTES 1ST  * 07170000
*                DATA = 40;             /* PICK UP NUM OF BYTES       * 07180000
         LA    @F,40                                              0269  07190000
         STH   @F,DATA                                            0269  07200000
*                DATARES = NUMBYTE3 - 40;     /* SAVE THE REMAINDER   * 07210000
         LH    @F,@D8                                             0270  07220000
         MVC   @TEMP2+2(2),10(@8)                                 0270  07230000
         A     @F,@TEMP2                                          0270  07240000
         STH   @F,DATARES                                         0270  07250000
         BC    15,@9E3                                            0272  07260000
*             END;                      /* CONTINUE  PROCESSING       * 07270000
*           ELSE                        /* LESS THAN 40 BYTES OF TXT  * 07280000
*             DO;                       /* TRANSLATE ALL NOW          * 07290000
*                DATA = NUMBYTE3;       /* PICK UP NUMBER OF BYTES    * 07300000
@9E4     L     @8,INPTR                                           0273  07310000
         MVC   DATA(2),10(@8)                                     0273  07320000
*                DATARES = '00'X;       /* ZERO OUT REMAINDER         * 07330000
         LA    @F,X'00'                                           0274  07340000
         STH   @F,DATARES                                         0274  07350000
*             END;                      /* CONTINUE PROCESSING        * 07360000
*         RTNPTR = ADDR(TXTLAB5);       /* SET RTN PTR                * 07370000
@9E3     LA    @F,TXTLAB5                                         0276  07380000
         ST    @F,RTNPTR                                          0276  07390000
*         PTRREG = ADDR(TXTDATA);       /* PTR TO BYTES TO BE TRANS   * 07400000
         L     @8,INPTR                                           0277  07410000
         LA    @2,16(0,@8)                                        0277  07420000
*         GO TO BTHLP2;                 /* TRANS TXT AND PUT IN BUFFER* 07430000
         BC    15,BTHLP2                                          0278  07440000
* TXTLAB5:RTNPTR = ADDR(TXTLAB6);       /* SET RTN PTR                * 07450000
TXTLAB5  LA    @F,TXTLAB6                                         0279  07460000
         ST    @F,RTNPTR                                          0279  07470000
*         BUF(1) = ' ';                 /* ASA CHAR TO PRT NXT LINE   * 07480000
         MVI   BUF,C' '                                           0280  07490000
*         GO TO OBJPUT;                 /* PRINT BUFFER               * 07500000
         BC    15,OBJPUT                                          0281  07510000
* TXTLAB6:BUF(1) = ' ';                 /* SET ASA CHAR FOR NEXT LINE * 07520000
TXTLAB6  MVI   BUF,C' '                                           0282  07530000
*         BUF(2:121) = BUF(1:120);      /* BLANK OUT HEADINGS         * 07540000
         MVC   BUF+1(120),BUF                                     0283  07550000
*         IF DATARES = '00'X            /* ANY MORE TXT TO TRANS?     * 07560000
*           THEN                        /* NO                         * 07570000
         LA    @F,X'00'                                           0284  07580000
         MVC   @TEMP2+2(2),DATARES                                0284  07590000
         C     @F,@TEMP2                                          0284  07600000
*             GO TO READ;               /* GO READ NEXT CARD          * 07610000
         BC    08,READ                                            0285  07620000
*           ELSE                        /* YES                        * 07630000
*             DO;                       /* SO                         * 07640000
*               RTNPTR = ADDR(TXTLAB7);  /* SET RTN PTR               * 07650000
         LA    @F,TXTLAB7                                         0287  07660000
         ST    @F,RTNPTR                                          0287  07670000
*               I = 33;                 /* SET INDEX INTO BUFFER      * 07680000
         MVI   I,33                                               0288  07690000
*               DATA = DATARES;         /* NUM BYTES LEFT TO TRANS    * 07700000
         MVC   DATA(2),DATARES                                    0289  07710000
*               GO TO BTHLP2;           /* GO TRANSLATE INTO BUFFER   * 07720000
         BC    15,BTHLP2                                          0290  07730000
*             END;                      /* END DO                     * 07740000
* TXTLAB7:RTNPTR = ADDR(READ);          /* SET RTN PTR TO READ NEXT CD* 07750000
TXTLAB7  LA    @F,READ                                            0292  07760000
         ST    @F,RTNPTR                                          0292  07770000
*         BUF(1) = ' ';                 /* ASA CHAR TO PRT NXT LINE   * 07780000
         MVI   BUF,C' '                                           0293  07790000
*         GO TO OBJPUT;                 /* PRINT OUT BUFFER           * 07800000
         BC    15,OBJPUT                                          0294  07810000
*         /************************************************************ 07820000
*         /* RLD PROCESSING: HEADINGS                                 * 07830000
*         /************************************************************ 07840000
* RLDTYP: K = 9;                        /* SET HEADING PTR            * 07850000
RLDTYP   MVI   K,9                                                0295  07860000
*         RTNPTR = ADDR(RLDLAB1);       /* SET RTN PTR                * 07870000
         LA    @F,RLDLAB1                                         0296  07880000
         ST    @F,RTNPTR                                          0296  07890000
*         BUF(1) = '0';                 /* SKIP NEXT PRINTING LINE    * 07900000
         MVI   BUF,C'0'                                           0297  07910000
*         GO TO INIT1;                  /* GO PUT HEADING IN BUFFER   * 07920000
         BC    15,INIT1                                           0298  07930000
* RLDLAB1:RTNPTR = ADDR(RLDLAB2);       /* SET RTN PTR                * 07940000
RLDLAB1  LA    @F,RLDLAB2                                         0299  07950000
         ST    @F,RTNPTR                                          0299  07960000
*         GO TO CARDNMHD;               /* PRINT BUFFER W/ LAST 8 CC  * 07970000
         BC    15,CARDNMHD                                        0300  07980000
* RLDLAB2:RLDPTR = INPTR + '0010'X;     /* PTR TO RLD CARD ITEM       * 07990000
RLDLAB2  L     @F,@X10                                            0301  08000000
         A     @F,INPTR                                           0301  08010000
         ST    @F,RLDPTR                                          0301  08020000
*         RLDCTR = NUMBYTE;             /* PICK UP NUM. ITEM BYTES    * 08030000
         L     @8,INPTR                                           0302  08040000
         MVC   RLDCTR(2),10(@8)                                   0302  08050000
* RLDLB2A:BUF(1) = ' ';                 /* PRINT ON NEXT LINE         * 08060000
RLDLB2A  MVI   BUF,C' '                                           0303  08070000
*         BUF(2:121) = BUF(1:120);      /* BLANK OUT BUFFER           * 08080000
         MVC   BUF+1(120),BUF                                     0304  08090000
*         I = 17;                       /* WHERE TO PLACE IN BUFFER   * 08100000
         MVI   I,17                                               0305  08110000
* RLDLAB3:IF RLDSW1 = '01'X             /* USE SAME PTRS AS LAST TIME?* 08120000
*           THEN                        /* YES                        * 08130000
RLDLAB3  CLI   RLDSW1,X'01'                                       0306  08140000
         BC    07,@9E2                                            0306  08150000
*             DO;                       /* FILL INTO OUTPUT BUFFER    * 08160000
*               BUF(I:I+3) = RPTRSAVE;  /* R POINTER                  * 08170000
         SR    @8,@8                                              0308  08180000
         IC    @8,I                                               0308  08190000
         LA    @A,BUF-1(@8)                                       0308  08200000
         MVC   0(4,@A),RPTRSAVE                                   0308  08210000
*               I = I + 8;              /* UPDATE BUFFER INDEX        * 08220000
         LA    @F,8                                               0309  08230000
         SR    @0,@0                                              0309  08240000
         IC    @0,I                                               0309  08250000
         AR    @F,@0                                              0309  08260000
         STC   @F,I                                               0309  08270000
*               BUF(I:I+3) = PPTRSAVE;  /* P POINTER                  * 08280000
         SR    @8,@8                                              0310  08290000
         IC    @8,I                                               0310  08300000
         LA    @A,BUF-1(@8)                                       0310  08310000
         MVC   0(4,@A),PPTRSAVE                                   0310  08320000
*               RLDSW2 = '01'X;         /* SET SWITCH TO UPDATE CTRS. * 08330000
         MVI   RLDSW2,X'01'                                       0311  08340000
*               RLDFLAG = FLAG2;        /* SAVE FLAG BYTE             * 08350000
         L     @9,RLDPTR                                          0312  08360000
         MVC   RLDFLAG(1),0(@9)                                   0312  08370000
*               RLDADDR = RLDADR2;      /* SAVE RLD ADDRESS           * 08380000
         MVC   RLDADDR(3),1(@9)                                   0313  08390000
*               GO TO RLDLAB4;          /* CONTINUE PROCESSING        * 08400000
         BC    15,RLDLAB4                                         0314  08410000
*             END;                      /* POINTERS IN BUFFER         * 08420000
*           ELSE                        /* MUST FILL IN NEW POINTERS  * 08430000
*             DO;                       /* POINTER CONVERSION         * 08440000
@9E2     EQU   *                                                  0316  08450000
*               GENERATE;               /* TRANS R PTR TO PRINT. DEC  * 08460000
         L     ADRREG,RLDPTR           PICK UP RLD ITEM PTR             08470000
         LH    PTRREG,RPTR(ADRREG)     PICK UP R PTR                    08480000
         CVD   PTRREG,DBLWD            CONVERT TO DECIMAL               08490000
         UNPK  CVTWORK(5),DBLWD+5(3)  UNPACK IT                         08500000
         OI    CVTWORK+4,X'F0'      'OR' OUT LAST ZONE                  08510000
         DS    0H                                                       08520000
*               BUF(I:I+3) = CVTWORK(2:5);  /* MOVE R PTR INTO BUFFER * 08530000
         SR    @8,@8                                              0318  08540000
         IC    @8,I                                               0318  08550000
         LA    @A,BUF-1(@8)                                       0318  08560000
         MVC   0(4,@A),CVTWORK+1                                  0318  08570000
*               GENERATE;               /* TRANS P PTR                * 08580000
         L     ADRREG,RLDPTR           PICK UP RLD ITEM PTR             08590000
         LH    PTRREG,PPTR(ADRREG)     PICK UP P PTR                    08600000
         CVD   PTRREG,DBLWD            CONVERT TO DECIMAL               08610000
         UNPK  CVTWORK(5),DBLWD+5(3)  UNPACK IT                         08620000
         OI    CVTWORK+4,X'F0'      'OR' OUT LAST ZONE                  08630000
         DS    0H                                                       08640000
*               I = I + 8;              /* UPDATE BUFFER PTR.         * 08650000
         LA    @F,8                                               0320  08660000
         SR    @0,@0                                              0320  08670000
         IC    @0,I                                               0320  08680000
         AR    @F,@0                                              0320  08690000
         STC   @F,I                                               0320  08700000
*               BUF(I:I+3) = CVTWORK(2:5);   /* MOVE INTO BUFFER      * 08710000
         SR    @8,@8                                              0321  08720000
         IC    @8,I                                               0321  08730000
         LA    @A,BUF-1(@8)                                       0321  08740000
         MVC   0(4,@A),CVTWORK+1                                  0321  08750000
*               RLDFLAG = FLAGS;        /* SAVE FLAG BYTE             * 08760000
         L     @9,RLDPTR                                          0322  08770000
         MVC   RLDFLAG(1),4(@9)                                   0322  08780000
*               RLDADDR = RLDADR;       /* SAVE RLD ADDRESS           * 08790000
         MVC   RLDADDR(3),5(@9)                                   0323  08800000
*               RLDSW2 = '00'X;         /* SET SWITCH TO  UPDATE PTRS * 08810000
         MVI   RLDSW2,X'00'                                       0324  08820000
*             END;                      /* END  CALCU.  IN PTRS       * 08830000
* RLDLAB4:DATA = '01'X;                 /* NUM BYTES TO TRANS TO HEX  * 08840000
@9E1     EQU   *                                                  0326  08850000
RLDLAB4  LA    @F,X'01'                                           0326  08860000
         STH   @F,DATA                                            0326  08870000
*         PTRREG = ADDR(RLDFLAG);       /* PICK UP ADDR OF FLAG BYTE  * 08880000
         LA    @2,RLDFLAG                                         0327  08890000
*         RTNPTR = ADDR(RLDLAB5);       /* SET RTN PTR                * 08900000
         LA    @F,RLDLAB5                                         0328  08910000
         ST    @F,RTNPTR                                          0328  08920000
*         I = I + 9;                    /* SET BUFFER PTR             * 08930000
         LA    @F,9                                               0329  08940000
         SR    @0,@0                                              0329  08950000
         IC    @0,I                                               0329  08960000
         AR    @F,@0                                              0329  08970000
         STC   @F,I                                               0329  08980000
*         GO TO BTHLP2;                 /* GO TRANSLATE INTO BUFFER   * 08990000
         BC    15,BTHLP2                                          0330  09000000
* RLDLAB5:RTNPTR = ADDR(RLDLAB6);       /* SET RTN PTR                * 09010000
RLDLAB5  LA    @F,RLDLAB6                                         0331  09020000
         ST    @F,RTNPTR                                          0331  09030000
*         PTRREG = ADDR(RLDADDR);       /* PTR TO WHAT TO TRANS       * 09040000
         LA    @2,RLDADDR                                         0332  09050000
*         I = I + 6;                    /* SET BUFFER POINTER         * 09060000
         LA    @F,6                                               0333  09070000
         SR    @0,@0                                              0333  09080000
         IC    @0,I                                               0333  09090000
         AR    @F,@0                                              0333  09100000
         STC   @F,I                                               0333  09110000
*         DATA = '03'X;                 /* NUM BYTES TO TRANS         * 09120000
         LA    @F,X'03'                                           0334  09130000
         STH   @F,DATA                                            0334  09140000
*         GO TO BTHLP2;                 /* GO TRANS INOT BUFFER       * 09150000
         BC    15,BTHLP2                                          0335  09160000
* RLDLAB6:IF PTRFLAG = '1'B             /* USE SAME PTRS FOR NEXT ITEM* 09170000
*           THEN                        /* YES, SAME PTRS             * 09180000
RLDLAB6  TM    RLDFLAG,B'00000001'                                0336  09190000
         BC    12,@9E0                                            0336  09200000
*             DO;                       /* SO SAVE PTRS               * 09210000
*               RPTRSAVE = BUF(I-23:I-20);  /* R PTR SAVED            * 09220000
         LH    @8,@D9                                             0338  09230000
         SR    @0,@0                                              0338  09240000
         IC    @0,I                                               0338  09250000
         AR    @8,@0                                              0338  09260000
         LH    @9,@D10                                            0338  09270000
         IC    @0,I                                               0338  09280000
         AR    @9,@0                                              0338  09290000
         SR    @8,@9                                              0338  09300000
         XC    @TEMP4(4),@TEMP4                                   0338  09310000
         LA    @E,BUF-1(@9)                                       0338  09320000
         LA    @A,@TEMP4+3                                        0338  09330000
         SR    @A,@8                                              0338  09340000
         EX    @8,@MVC                                            0338  09350000
         L     @F,@TEMP4                                          0338  09360000
         ST    @F,RPTRSAVE                                        0338  09370000
*               PPTRSAVE = BUF(I-15:I-12);  /* P PTR SAVED            * 09380000
         LH    @8,@D11                                            0339  09390000
         IC    @0,I                                               0339  09400000
         AR    @8,@0                                              0339  09410000
         LH    @9,@D12                                            0339  09420000
         IC    @0,I                                               0339  09430000
         AR    @9,@0                                              0339  09440000
         SR    @8,@9                                              0339  09450000
         XC    @TEMP4(4),@TEMP4                                   0339  09460000
         LA    @E,BUF-1(@9)                                       0339  09470000
         LA    @A,@TEMP4+3                                        0339  09480000
         SR    @A,@8                                              0339  09490000
         EX    @8,@MVC                                            0339  09500000
         L     @F,@TEMP4                                          0339  09510000
         ST    @F,PPTRSAVE                                        0339  09520000
*               RLDSW1 = '01'X;         /* TURN ON SWITCH: SAME PTRS  * 09530000
         MVI   RLDSW1,X'01'                                       0340  09540000
*               GO TO RLDLAB7;          /* CONTINUE                   * 09550000
         BC    15,RLDLAB7                                         0341  09560000
*             END;                      /* END SAVE PTRS FOR NEXT ITEM* 09570000
*           ELSE                        /* DON'T SAME PTRS            * 09580000
*             RLDSW1 = '00'X;           /* TURN  SWITCH OFF           * 09590000
@9E0     MVI   RLDSW1,X'00'                                       0343  09600000
*         /************************************************************ 09610000
*         /* TO UPDATE COUNTERS                                       * 09620000
*         /************************************************************ 09630000
* RLDLAB7:IF RLDSW2 = '01'X             /* WERE  OLD PTRS USED HERE?  * 09640000
*           THEN                        /* YES                        * 09650000
@9DF     EQU   *                                                  0344  09660000
RLDLAB7  CLI   RLDSW2,X'01'                                       0344  09670000
         BC    07,@9DE                                            0344  09680000
*             DO;                       /* UPDATE PTRS BY 4           * 09690000
*               RLDPTR = RLDPTR + 4;    /* PTR TO DATA ITEM           * 09700000
         LA    @F,4                                               0346  09710000
         A     @F,RLDPTR                                          0346  09720000
         ST    @F,RLDPTR                                          0346  09730000
*               RLDCTR = RLDCTR - 4;    /* COUNTER FOR LOOP           * 09740000
         LH    @F,RLDCTR                                          0347  09750000
         SH    @F,@D13                                            0347  09760000
         STH   @F,RLDCTR                                          0347  09770000
*               RLDSW2 = '00'X;         /* TURN OFF SWITCH            * 09780000
         MVI   RLDSW2,X'00'                                       0348  09790000
         BC    15,@9DD                                            0350  09800000
*             END;                      /* END UPDATE FOR OLD PTRS    * 09810000
*           ELSE                        /* NEW PTRS USED              * 09820000
*             DO;                       /* UPDATE BY 8                * 09830000
*               RLDPTR = RLDPTR + 8;      /* PTR TO DATA ITEM         * 09840000
@9DE     LA    @F,8                                               0351  09850000
         A     @F,RLDPTR                                          0351  09860000
         ST    @F,RLDPTR                                          0351  09870000
*               RLDCTR = RLDCTR - 8;      /* LOOP CTR                 * 09880000
         LH    @F,RLDCTR                                          0352  09890000
         SH    @F,@D7                                             0352  09900000
         STH   @F,RLDCTR                                          0352  09910000
*             END;                      /* COUNTERS UPDATED FOR NEW   * 09920000
* RLDLAB8:IF RLDCTR = '0000'X           /* FINISHED WITH PROCESSING?  * 09930000
*           THEN                        /* YES                        * 09940000
@9DD     EQU   *                                                  0354  09950000
RLDLAB8  L     @F,@X1                                             0354  09960000
         CH    @F,RLDCTR                                          0354  09970000
         BC    07,@9DC                                            0354  09980000
*             DO;                       /*  GO TO                     * 09990000
*               RTNPTR = ADDR(READ);    /*  READ NEXT CARD UPON RETURN* 10000000
         LA    @F,READ                                            0356  10010000
         ST    @F,RTNPTR                                          0356  10020000
*               BUF(1) = ' ';           /* ASA CHAR TO PRT NXT LINE   * 10030000
         MVI   BUF,C' '                                           0357  10040000
*               GO TO OBJPUT;           /*  PRINT LINE                * 10050000
         BC    15,OBJPUT                                          0358  10060000
*             END;                      /* RLD CARD FINISHED          * 10070000
*           ELSE;                       /* CONTINUE PROCESSING        * 10080000
@9DC     EQU   *                                                  0360  10090000
*         IF I >= 74                    /* IS LINE FULL?              * 10100000
*           THEN                        /* YES                        * 10110000
@9DB     CLI   I,74                                               0361  10120000
         BC    04,@9DA                                            0361  10130000
*             DO;                       /* THEREFORE                  * 10140000
*               RTNPTR = ADDR(RLDLB2A); /* CONTINUE UPON RETURN       * 10150000
         LA    @F,RLDLB2A                                         0363  10160000
         ST    @F,RTNPTR                                          0363  10170000
*               GO TO OBJPUT;           /* PRINT LINE                 * 10180000
         BC    15,OBJPUT                                          0364  10190000
*             END;                      /* LINE FINISHED              * 10200000
*           ELSE                        /* LINE NOT FINISHED          * 10210000
*             DO;                       /* THEREFORE                  * 10220000
*               I = I + 8;              /* UPDATE BUFFER INDEX        * 10230000
@9DA     LA    @F,8                                               0367  10240000
         SR    @0,@0                                              0367  10250000
         IC    @0,I                                               0367  10260000
         AR    @F,@0                                              0367  10270000
         STC   @F,I                                               0367  10280000
*               GO TO RLDLAB3;          /* AND CONTINUE ON THIS LINE  * 10290000
         BC    15,RLDLAB3                                         0368  10300000
*             END;                      /* END IF LINE NOT FINISHED   * 10310000
*         /************************************************************ 10320000
*         /* END PROCESSING:  HEADINGS                                * 10330000
*         /************************************************************ 10340000
* ENDTYP: K = 10;                       /* SET HEADING PTR            * 10350000
@9D9     EQU   *                                                  0370  10360000
ENDTYP   MVI   K,10                                               0370  10370000
*         RTNPTR = ADDR(ENDLAB1);       /* SET RTN PTR                * 10380000
         LA    @F,ENDLAB1                                         0371  10390000
         ST    @F,RTNPTR                                          0371  10400000
*         GO TO INIT1;                  /* PUT HEADING IN BUFFER      * 10410000
         BC    15,INIT1                                           0372  10420000
*         /************************************************************ 10430000
*         /* END CARD PROCESSING: TO PROCESS DATA                     * 10440000
*         /************************************************************ 10450000
* ENDLAB1:IF EPNAME = BUF(113:120)      /* CHECK FOR ENTRY PT NAME    * 10460000
*           THEN                        /* NO EP NAME                 * 10470000
ENDLAB1  L     @8,INPTR                                           0373  10480000
         CLC   16(8,@8),BUF+112                                   0373  10490000
*             GO TO ENDTYP1;            /* THEN TYPE 1 END CARD, GO DO* 10500000
         BC    08,ENDTYP1                                         0374  10510000
*           ELSE;                       /* YES EP NAME, SO PROCESS    * 10520000
*         K = 12;                       /* SET HEDING PTR FOR EP NAME * 10530000
         MVI   K,12                                               0376  10540000
*         RTNPTR = ADDR(ENDLAB2);       /* SET RTN PTR                * 10550000
         LA    @F,ENDLAB2                                         0377  10560000
         ST    @F,RTNPTR                                          0377  10570000
*         GO TO MVHDS;                  /* PUT HEADING IN BUFFER      * 10580000
         BC    15,MVHDS                                           0378  10590000
* ENDLAB2:BUF(26:33) = EPNAME;          /* PUT ENTRY PT NAME IN BUF   * 10600000
ENDLAB2  L     @8,INPTR                                           0379  10610000
         MVC   BUF+25(8),16(@8)                                   0379  10620000
* ENDLB2A:IF LTHBYTE = '00'X            /* IS THERE ANY LENGTH?       * 10630000
*           THEN                        /* YES, SO PROCESS            * 10640000
ENDLB2A  L     @8,INPTR                                           0380  10650000
         CLI   28(@8),X'00'                                       0380  10660000
*             GO TO ENDLTH;             /* GO PROCESS LENGTH          * 10670000
         BC    08,ENDLTH                                          0381  10680000
*           ELSE;                       /* NO LENGTH SO CONT.         * 10690000
* ENDLAB3:BUF(69:107) = CMPDATA;        /* COMPILER DATA MOVED IN BUF * 10700000
ENDLAB3  L     @8,INPTR                                           0383  10710000
         MVC   BUF+68(39),32(@8)                                  0383  10720000
*         RTNPTR = ADDR(READ);          /* END PROC.,RTN TO READ NEXT * 10730000
         LA    @F,READ                                            0384  10740000
         ST    @F,RTNPTR                                          0384  10750000
*         ESDCTR = '0000'X;             /* REINITIALIZE ESD ID CTR    * 10760000
         MVC   ESDCTR(2),@X1+2                                    0385  10770000
*         BUF(1) = '0';                 /* ASA CHAR TO SKIP NEXT LINE * 10780000
         MVI   BUF,C'0'                                           0386  10790000
*         GO TO CARDNMHD;               /* MOVE LAST 8 CC TO BUF & PRT* 10800000
         BC    15,CARDNMHD                                        0387  10810000
* ENDTYP1:IF ENDADDR = BUF(113:115)     /* ANY ADDR ON CARD?          * 10820000
*           THEN                        /* NO, GO CHECK FOR LENGTH    * 10830000
ENDTYP1  MVC   @TEMP3+1(3),BUF+112                                0388  10840000
         L     @F,@TEMP3                                          0388  10850000
         L     @8,INPTR                                           0388  10860000
         MVC   @TEMP3+1(3),5(@8)                                  0388  10870000
         C     @F,@TEMP3                                          0388  10880000
*             GO TO ENDLAB5;            /* GO CHECK ESD ID            * 10890000
         BC    08,ENDLAB5                                         0389  10900000
*           ELSE;                       /* YES, PROCESS ADDR          * 10910000
*         K = 11;                       /* SET HEADING PTR            * 10920000
         MVI   K,11                                               0391  10930000
*         RTNPTR = ADDR(ENDLAB4);       /* SET RTN PTR                * 10940000
         LA    @F,ENDLAB4                                         0392  10950000
         ST    @F,RTNPTR                                          0392  10960000
*         GO TO MVHDS;                  /* GO PUT HEADING IN BUFFER   * 10970000
         BC    15,MVHDS                                           0393  10980000
* ENDLAB4:I = 26;                       /* SET BUFFER PTR             * 10990000
ENDLAB4  MVI   I,26                                               0394  11000000
*         DATA = '03'X;                 /*  NUM BYTES TO TRANS        * 11010000
         LA    @F,X'03'                                           0395  11020000
         STH   @F,DATA                                            0395  11030000
*         RTNPTR = ADDR(ENDLAB5);       /* SET RTN PTR                * 11040000
         LA    @F,ENDLAB5                                         0396  11050000
         ST    @F,RTNPTR                                          0396  11060000
*         PTRREG = ADDR(ENDADDR);       /* BYTES TO BE TRANS. PTR     * 11070000
         L     @8,INPTR                                           0397  11080000
         LA    @2,5(0,@8)                                         0397  11090000
*         GO TO BTHLP2;                 /* TRANS ADDR AND PUT IN BUF  * 11100000
         BC    15,BTHLP2                                          0398  11110000
* ENDLAB5:IF ENDESD = BUF(113:114)      /* IS THERE AN ESD ID PRESENT?* 11120000
*           THEN                        /* NO                         * 11130000
ENDLAB5  MVC   @TEMP2+2(2),BUF+112                                0399  11140000
         L     @F,@TEMP2                                          0399  11150000
         L     @8,INPTR                                           0399  11160000
         MVC   @TEMP2+2(2),14(@8)                                 0399  11170000
         C     @F,@TEMP2                                          0399  11180000
*             GO TO ENDLB2A;            /* GO CONTINUE PROCESSING     * 11190000
         BC    08,ENDLB2A                                         0400  11200000
*           ELSE;                       /* ESD ID PRESENT, SO PROCESS * 11210000
*         K = 13;                       /* HEADING PTR OF ESDID       * 11220000
         MVI   K,13                                               0402  11230000
*         RTNPTR = ADDR(ENDLAB6);       /* SET RTN PTR                * 11240000
         LA    @F,ENDLAB6                                         0403  11250000
         ST    @F,RTNPTR                                          0403  11260000
*         GO TO MVHDS;                  /* PUT ESDID HEADING IN BUFFER* 11270000
         BC    15,MVHDS                                           0404  11280000
* ENDLAB6:GENERATE;                     /* TRANS ESDID TO PRINT. DEC  * 11290000
ENDLAB6  EQU   *                                                  0405  11300000
         L     ADRREG,INPTR            PICK UP CARD PTR ADDR            11310000
         LH    PTRREG,ENDESD(ADRREG)   PICK UP END ESD ID               11320000
         CVD   PTRREG,DBLWD            CONVERT TO DECIMAL               11330000
         UNPK  CVTWORK(5),DBLWD+5(3)  UNPACK IT                         11340000
         OI    CVTWORK+4,X'F0'      'OR' OUT LAST ZONE                  11350000
         DS    0H                                                       11360000
*         BUF(46:49) = CVTWORK(2:5);    /* MOVE INTO BUFFER           * 11370000
         MVC   BUF+45(4),CVTWORK+1                                0406  11380000
*         GO TO ENDLB2A;                /* CONTINUE PROCESSING        * 11390000
         BC    15,ENDLB2A                                         0407  11400000
* ENDLTH: K = 14;                       /* SET HEADING PTR,ESD LTH    * 11410000
ENDLTH   MVI   K,14                                               0408  11420000
*         RTNPTR = ADDR(ENDLAB7);       /* SET RTN PTR                * 11430000
         LA    @F,ENDLAB7                                         0409  11440000
         ST    @F,RTNPTR                                          0409  11450000
*         GO TO MVHDS;                  /* PUT HEADING IN BUF         * 11460000
         BC    15,MVHDS                                           0410  11470000
* ENDLAB7:DATA = '04'X;                 /* NUM BYTES TO TRANS.:LTH    * 11480000
ENDLAB7  LA    @F,X'04'                                           0411  11490000
         STH   @F,DATA                                            0411  11500000
*         I = 59;                       /* SET OUTPUT BUFFER INDEX    * 11510000
         MVI   I,59                                               0412  11520000
*         PTRREG = ADDR(CSLTH);         /* PTR TO BYTES TO TRANS      * 11530000
         L     @8,INPTR                                           0413  11540000
         LA    @2,28(0,@8)                                        0413  11550000
*         RTNPTR = ADDR(ENDLAB3);       /* SET RTN PTR TO CONT.PROC   * 11560000
         LA    @F,ENDLAB3                                         0414  11570000
         ST    @F,RTNPTR                                          0414  11580000
*         GO TO BTHLP2;                 /* TRANS TO PRINT. HEX        * 11590000
         BC    15,BTHLP2                                          0415  11600000
*         /************************************************************ 11610000
*         /* BINARY TO PRINTABLE HEX ROUTEEN                          * 11620000
*         /* DATA CONTAINS NUMBER OF BYTES TO TRANSLATE               * 11630000
*         /* PTRREG = REG2 CONTAINS TO ADDR OF THE BYTES TO TRANSLATE * 11640000
*         /* I IS THE INDEX INTO THE BUFFER AREA WHERE THE TRANSLATED * 11650000
*         /*   BYTES ARE TO BE PLACED                                 * 11660000
*         /* ENTERRED AT:                                             * 11670000
*         /*    CVTHEX - IF I TO BE 28 AND MORE THAN 40 BYTES TO TRANS* 11680000
*         /*    BTHLP2 - IF I IS ALREADY SPECIFIED                    * 11690000
*         /************************************************************ 11700000
* CVTHEX: I = 28;                       /* SET BUF PTR TO 28          * 11710000
CVTHEX   MVI   I,28                                               0416  11720000
* BTHLP2: IF DATA >= '0004'X            /* MRE THAN 8 CHAR TO TRANS?  * 11730000
*           THEN                        /* YES                        * 11740000
BTHLP2   L     @F,@X12                                            0417  11750000
         MVC   @TEMP2+2(2),DATA                                   0417  11760000
         C     @F,@TEMP2                                          0417  11770000
         BC    02,@9D8                                            0417  11780000
*             DO;                       /* PROCESS 4 BYTES            * 11790000
*               GENERATE;               /* CONVERT TO PRINT. HEX      * 11800000
UNPACK       UNPK  CVTWORK(9),0(5,PTRREG)  UNPACK BYTES                 11810000
ANDIT        NC    CVTWORK(8),ZEROZONE   'AND' OUT ZONES                11820000
TRANS        TR    CVTWORK(8),CVTTABLE   FIND EBCD CHAR                 11830000
         DS    0H                                                       11840000
*               DATA = DATA - 4;        /* UPDATE NUM BYTE TO GO      * 11850000
         MVC   @TEMP2+2(2),DATA                                   0420  11860000
         L     @F,@TEMP2                                          0420  11870000
         SH    @F,@D13                                            0420  11880000
         STH   @F,DATA                                            0420  11890000
*               PTRREG = PTRREG + 4;    /* UPDATE TO NEXT 4 BYTES     * 11900000
         AH    @2,@D13                                            0421  11910000
*               BUF(I:I+7) = CVTWORK;   /* MOVE TRANS'ED BYTES TO BUF * 11920000
         SR    @8,@8                                              0422  11930000
         IC    @8,I                                               0422  11940000
         LA    @A,BUF-1(@8)                                       0422  11950000
         MVC   0(8,@A),CVTWORK                                    0422  11960000
*               I = I + 9;              /* UPDATE BUF PTR             * 11970000
         LA    @F,9                                               0423  11980000
         SR    @0,@0                                              0423  11990000
         IC    @0,I                                               0423  12000000
         AR    @F,@0                                              0423  12010000
         STC   @F,I                                               0423  12020000
*               GO TO BTHLP2;           /* CONTINUE PROCESSING        * 12030000
         BC    15,BTHLP2                                          0424  12040000
*             END;                      /* END DO FOR DATA <= 4       * 12050000
*           ELSE                        /* LESS THAN 4 BYTES TO TRANS * 12060000
*             DO;                       /* PROCESS REMAINING BYTES    * 12070000
*               IF DATA = '00'X         /* FINISHED TRANSLATING       * 12080000
*                 THEN                  /* YES                        * 12090000
@9D8     LA    @F,X'00'                                           0427  12100000
         MVC   @TEMP2+2(2),DATA                                   0427  12110000
         C     @F,@TEMP2                                          0427  12120000
*                   GO TO DONECVT;      /* COMPLETE PROCESSING        * 12130000
         BC    08,DONECVT                                         0428  12140000
*                 ELSE                  /* NOT FINISHED               * 12150000
*                   DO;                 /* PROCESS REMAINING BYTES    * 12160000
*                     GENERATE;         /* TRANS. IF < 4 BYTES        * 12170000
           UNPK  CVTWORK(9),0(5,PTRREG)   UNPACK BYTES                  12180000
           NC    CVTWORK(8),ZEROZONE   'AND' OUT ZONES                  12190000
           TR    CVTWORK(8),CVTTABLE   FIND EBCD CHAR                   12200000
         DS    0H                                                       12210000
*                     J = I + (DATA * 2 - 1);     /* PTR TO LAST BYTE * 12220000
         LA    @E,2                                               0431  12230000
         MVC   @TEMP2+2(2),DATA                                   0431  12240000
         LR    @F,@E                                              0431  12250000
         M     @E,@TEMP2                                          0431  12260000
         BCTR  @F,0                                               0431  12270000
         SR    @0,@0                                              0431  12280000
         IC    @0,I                                               0431  12290000
         AR    @F,@0                                              0431  12300000
         STC   @F,J                                               0431  12310000
*                     BUF(I:J) = CVTWORK(1:J-I);   /* MOVE INTO BUFFER* 12320000
         LA    @E,CVTWORK                                         0432  12330000
         SR    @8,@8                                              0432  12340000
         IC    @8,J                                               0432  12350000
         SR    @9,@9                                              0432  12360000
         IC    @9,I                                               0432  12370000
         SR    @8,@9                                              0432  12380000
         LA    @A,BUF-1(@9)                                       0432  12390000
         EX    @8,@MVC                                            0432  12400000
*                   END;                /* END 'NOT FINISHED' DO      * 12410000
*             END;                      /* END DO FOR DATA < 4        * 12420000
* DONECVT:GO TO RETRN;                  /* RETURN TO CALLER           * 12430000
@9D7     EQU   *                                                  0435  12440000
DONECVT  L     @8,RTNPTR                                          0435  12450000
         BCR   15,@8                                              0435  12460000
*         /************************************************************ 12470000
*         /* END OF FILE RTN                                          * 12480000
*         /************************************************************ 12490000
* OBJEOF: RETURN;                       /* RTN TO CONTROL PGM         * 12500000
*         GENERATE;                     /* DSECT FOR DCB              * 12510000
         DCBD  DSORG=PS                DSECT FOR DCB                    12520000
HMBLKOBJ CSECT                                                          12530000
         DS    0H                                                       12540000
*         END HMBLKOBJ;                 /* END HMBLKOBJ               * 12550000
@EL01    L     @D,4(0,@D)                                         0438  12560000
         LR    @1,@C                                              0438  12570000
         L     @0,@SIZ001                                         0438  12580000
         FREEMAIN R,LV=(0),A=(1)                                  0438  12590000
         L     @E,12(0,@D)                                        0438  12600000
         LM    @0,@C,20(@D)                                       0438  12610000
         BCR   15,@E                                              0438  12620000
@DATA1   EQU   *                                                        12630000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           12640000
@1       EQU   01                                                       12650000
@2       EQU   02                                                       12660000
@3       EQU   03                                                       12670000
@4       EQU   04                                                       12680000
@5       EQU   05                                                       12690000
@6       EQU   06                                                       12700000
@7       EQU   07                                                       12710000
@8       EQU   08                                                       12720000
@9       EQU   09                                                       12730000
@A       EQU   10                                                       12740000
@B       EQU   11                                                       12750000
@C       EQU   12                                                       12760000
@D       EQU   13                                                       12770000
@E       EQU   14                                                       12780000
@F       EQU   15                                                       12790000
@D1      DC    H'-1'                                                    12800000
@D2      DC    H'3'                                                     12810000
@D3      DC    H'1'                                                     12820000
@D4      DC    H'5'                                                     12830000
@D5      DC    H'-36'                                                   12840000
@D6      DC    H'6'                                                     12850000
@D7      DC    H'8'                                                     12860000
@D8      DC    H'-40'                                                   12870000
@D9      DC    H'-20'                                                   12880000
@D10     DC    H'-23'                                                   12890000
@D11     DC    H'-12'                                                   12900000
@D12     DC    H'-15'                                                   12910000
@D13     DC    H'4'                                                     12920000
@MVC     MVC   0(1,@A),0(@E)                                            12930000
         DS    0F                                                       12940000
@SIZ001  DC    AL1(&SPN)                                                12950000
         DC    AL3(@DATEND-@DATD)                                       12960000
         DS    0F                                                       12970000
@X1      DC    X'00000000'                                              12980000
@X8      DC    X'00000001'                                              12990000
@X10     DC    X'00000010'                                              13000000
@X12     DC    X'00000004'                                              13010000
         DS    0D                                                       13020000
@DATA    EQU   *                                                        13030000
DUMMY    EQU   00000000            FULLWORD INTEGER                     13040000
REG1     EQU   00000001            FULLWORD POINTER REGISTER            13050000
PARMLIST EQU   00000000            52 BYTE(S) ON WORD                   13060000
DCBIN    EQU   PARMLIST+00000000   FULLWORD POINTER                     13070000
DCBOUT   EQU   PARMLIST+00000004   FULLWORD POINTER                     13080000
TITLEAD  EQU   PARMLIST+00000008   FULLWORD POINTER                     13090000
GETAREA  EQU   PARMLIST+00000012   FULLWORD POINTER                     13100000
A00000   EQU   PARMLIST+00000016   FULLWORD INTEGER                     13110000
A00001   EQU   PARMLIST+00000020   HALFWORD POINTER                     13120000
BLKCNT   EQU   PARMLIST+00000022   HALFWORD INTEGER                     13130000
WORKBUF  EQU   PARMLIST+00000024   FULLWORD POINTER                     13140000
A00002   EQU   PARMLIST+00000028   FULLWORD INTEGER                     13150000
ERRORS   EQU   PARMLIST+00000032   32 BIT(S)                            13160000
MEMNAME  EQU   PARMLIST+00000036   8 BYTE(S)                            13170000
DDNAME   EQU   PARMLIST+00000044   8 BYTE(S)                            13180000
TITLE    EQU   00000000            121 BYTE(S)                          13190000
ADRREG   EQU   00000003            FULLWORD INTEGER REGISTER            13200000
DECBSTR  EQU   00000000            20 BYTE(S) ON WORD                   13210000
A00003   EQU   DECBSTR+00000000    16 BYTE(S)                           13220000
IOBADR   EQU   DECBSTR+00000016    FULLWORD POINTER                     13230000
IOBSTR   EQU   00000000            16 BYTE(S) ON WORD                   13240000
A00004   EQU   IOBSTR+00000000     9 BYTE(S)                            13250000
IOBCSW   EQU   IOBSTR+00000009     7 BYTE(S)                            13260000
A00005   EQU   IOBSTR+00000009     5 BYTE(S)                            13270000
RESIDCT  EQU   IOBSTR+00000014     2  BYTE  POINTER                     13280000
CARD     EQU   00000000            80 BYTE(S) ON WORD                   13290000
ZEROTWO  EQU   CARD+00000000       1 BYTE(S) ON WORD                    13300000
CARDTYP  EQU   CARD+00000001       3 BYTE(S)                            13310000
DATAS    EQU   CARD+00000004       68 BYTE(S)                           13320000
CARDCHAR EQU   CARD+00000072       8 BYTE(S)                            13330000
HEADERS  EQU   @DATA+00000000      96 BYTE(S) ON WORD                   13340000
WDSADR   EQU   *                   16*FULLWORD POINTER                  13350000
         DC    AL4(W1)                                                  13360000
         DC    AL4(W2)                                                  13370000
         DC    AL4(W3)                                                  13380000
         DC    AL4(W4)                                                  13390000
         DC    AL4(W5)                                                  13400000
         DC    AL4(W6)                                                  13410000
         DC    AL4(W7)                                                  13420000
         DC    AL4(W8)                                                  13430000
         DC    AL4(W9)                                                  13440000
         DC    AL4(W10)                                                 13450000
         DC    AL4(W11)                                                 13460000
         DC    AL4(W12)                                                 13470000
         DC    AL4(W13)                                                 13480000
         DC    AL4(W14)                                                 13490000
         DC    AL4(W15)                                                 13500000
         DC    AL4(W16)                                                 13510000
WHERE    EQU   *                   16*1  BYTE  POINTER                  13520000
         DC    AL1(2)                                                   13530000
         DC    AL1(113)                                                 13540000
         DC    AL1(2)                                                   13550000
         DC    AL1(14)                                                  13560000
         DC    AL1(2)                                                   13570000
         DC    AL1(2)                                                   13580000
         DC    AL1(2)                                                   13590000
         DC    AL1(2)                                                   13600000
         DC    AL1(2)                                                   13610000
         DC    AL1(2)                                                   13620000
         DC    AL1(18)                                                  13630000
         DC    AL1(18)                                                  13640000
         DC    AL1(33)                                                  13650000
         DC    AL1(52)                                                  13660000
         DC    AL1(2)                                                   13670000
         DC    AL1(52)                                                  13680000
LNGTH    EQU   *                   16*1  BYTE  POINTER                  13690000
         DC    AL1(21)                                                  13700000
         DC    AL1(5)                                                   13710000
         DC    AL1(12)                                                  13720000
         DC    AL1(14)                                                  13730000
         DC    AL1(11)                                                  13740000
         DC    AL1(44)                                                  13750000
         DC    AL1(5)                                                   13760000
         DC    AL1(30)                                                  13770000
         DC    AL1(107)                                                 13780000
         DC    AL1(12)                                                  13790000
         DC    AL1(8)                                                   13800000
         DC    AL1(8)                                                   13810000
         DC    AL1(12)                                                  13820000
         DC    AL1(7)                                                   13830000
         DC    AL1(13)                                                  13840000
         DC    AL1(8)                                                   13850000
WORDS    EQU   @DATA+00000096      318 BYTE(S) ON WORD                  13860000
W1       EQU   *                   21 BYTE(S)                           13870000
         DC    C'OBJECT MODULE LISTING'                                 13880000
W2       EQU   *                   5 BYTE(S)                            13890000
         DC    C'PAGE '                                                 13900000
W3       EQU   *                   12 BYTE(S)                           13910000
         DC    C'SYM RECORD: '                                          13920000
W4       EQU   *                   14 BYTE(S)                           13930000
         DC    C'TESTRAN DATA: '                                        13940000
W5       EQU   *                   12 BYTE(S)                           13950000
         DC    C'ESD RECORD: '                                          13960000
W6       EQU   *                   44 BYTE(S)                           13970000
         DC    C' ESDID    TYPE      NAME     ADDR    ID/LT'            13980000
         DC    C'H '                                                    13990000
W7       EQU   *                   5 BYTE(S)                            14000000
         DC    C'TXT: '                                                 14010000
W8       EQU   *                   30 BYTE(S)                           14020000
         DC    C' ADDR=       ESDID=      TEXT:'                        14030000
W9       EQU   *                   107 BYTE(S)                          14040000
         DC    C'RLD RECORD:    R PTR   P PTR   FLAGS   ADD'            14050000
         DC    C'R   R PTR   P PTR   FLAGS   ADDR   R PTR  '            14060000
         DC    C' P PTR   FLAGS   ADDR  '                               14070000
W10      EQU   *                   12 BYTE(S)                           14080000
         DC    C'END RECORD: '                                          14090000
W11      EQU   *                   8 BYTE(S)                            14100000
         DC    C'EP ADDR='                                              14110000
W12      EQU   *                   8 BYTE(S)                            14120000
         DC    C'EP NAME='                                              14130000
W13      EQU   *                   12 BYTE(S)                           14140000
         DC    C'ESDID OF EP='                                          14150000
W14      EQU   *                   7 BYTE(S)                            14160000
         DC    C'LENGTH='                                               14170000
W15      EQU   *                   13 BYTE(S)                           14180000
         DC    C'****ERROR****'                                         14190000
W16      EQU   *                   8 BYTE(S)                            14200000
         DC    C'MEMBER= '                                              14210000
HEADBUF  EQU   00000000            120 BYTE(S)                          14220000
TYPETAB  EQU   @DATA+00000416      36 BYTE(S) ON WORD                   14230000
         ORG   TYPETAB+00000001                                         14240000
TYADR    EQU   *                   5*3  BYTE  POINTER ON WORD+1         14250000
         DC    AL3(SYMTYP)                                              14260000
         ORG   TYADR+00004                                              14270000
         DC    AL3(ESDTYP)                                              14280000
         ORG   TYADR+00008                                              14290000
         DC    AL3(TXTTYP)                                              14300000
         ORG   TYADR+00012                                              14310000
         DC    AL3(RLDTYP)                                              14320000
         ORG   TYADR+00016                                              14330000
         DC    AL3(ENDTYP)                                              14340000
         ORG   TYPETAB+00000021                                         14350000
TPES     EQU   *                   5*3 BYTE(S)                          14360000
         DC    C'SYM'                                                   14370000
         DC    C'ESD'                                                   14380000
         DC    C'TXT'                                                   14390000
         DC    C'RLD'                                                   14400000
         DC    C'END'                                                   14410000
SYMREC   EQU   00000000            72 BYTE(S) ON WORD                   14420000
A00006   EQU   SYMREC+00000000     10 BYTE(S)                           14430000
NUMBYTE  EQU   SYMREC+00000010     HALFWORD POINTER                     14440000
A00007   EQU   SYMREC+00000012     4 BYTE(S)                            14450000
TESTDATA EQU   SYMREC+00000016     56 BYTE(S)                           14460000
ESDHD    EQU   00000000            16 BYTE(S) ON WORD                   14470000
A00008   EQU   ESDHD+00000000      14 BYTE(S)                           14480000
FSTESDID EQU   ESDHD+00000014      HALFWORD POINTER                     14490000
ESDATA   EQU   00000000            16 BYTE(S) ON WORD                   14500000
NAME     EQU   ESDATA+00000000     8 BYTE(S)                            14510000
TYPE     EQU   ESDATA+00000008     1  BYTE  POINTER                     14520000
ADRES    EQU   ESDATA+00000009     3  BYTE  POINTER ON WORD+1           14530000
A00009   EQU   ESDATA+00000012     1 BYTE(S)                            14540000
IDORLGTH EQU   ESDATA+00000013     3  BYTE  POINTER ON WORD+1           14550000
ESDTABLE EQU   @DATA+00000452      56 BYTE(S) ON WORD                   14560000
ESDTAB   EQU   *                   8*1  BYTE  POINTER                   14570000
         DC    XL1'00'                                                  14580000
         DC    XL1'01'                                                  14590000
         DC    XL1'02'                                                  14600000
         DC    XL1'03'                                                  14610000
         DC    XL1'04'                                                  14620000
         DC    XL1'05'                                                  14630000
         DC    XL1'06'                                                  14640000
         DC    XL1'0A'                                                  14650000
TYPTAB   EQU   *                   8*6 BYTE(S)                          14660000
         DC    C'SD(00)'                                                14670000
         DC    C'LD(01)'                                                14680000
         DC    C'ER(02)'                                                14690000
         DC    C'LR(03)'                                                14700000
         DC    C'PC(04)'                                                14710000
         DC    C'CM(05)'                                                14720000
         DC    C'PR(06)'                                                14730000
         DC    C'WX(0A)'                                                14740000
TXTCD    EQU   00000000            71 BYTE(S) ON WORD                   14750000
A00010   EQU   TXTCD+00000000      5 BYTE(S)                            14760000
TXTADDR  EQU   TXTCD+00000005      3  BYTE  POINTER ON WORD+1           14770000
A00011   EQU   TXTCD+00000008      HALFWORD POINTER                     14780000
NUMBYTE3 EQU   TXTCD+00000010      HALFWORD POINTER                     14790000
A00012   EQU   TXTCD+00000012      HALFWORD POINTER                     14800000
ESDIFER  EQU   TXTCD+00000014      HALFWORD POINTER                     14810000
TXTDATA  EQU   TXTCD+00000016      55 BYTE(S)                           14820000
RLDDATA  EQU   00000000            8 BYTE(S) ON WORD                    14830000
RPTR     EQU   RLDDATA+00000000    2  BYTE  POINTER ON WORD             14840000
PPTR     EQU   RLDDATA+00000002    HALFWORD POINTER                     14850000
FLAGS    EQU   RLDDATA+00000004    1 BYTE(S)                            14860000
RLDADR   EQU   RLDDATA+00000005    3 BYTE(S)                            14870000
RLDNOPTR EQU   00000000            4 BYTE(S) ON WORD                    14880000
FLAG2    EQU   RLDNOPTR+00000000   1 BYTE(S)                            14890000
RLDADR2  EQU   RLDNOPTR+00000001   3 BYTE(S)                            14900000
ENDCARD  EQU   00000000            71 BYTE(S) ON WORD                   14910000
A00014   EQU   ENDCARD+00000000    5 BYTE(S) ON WORD                    14920000
ENDADDR  EQU   ENDCARD+00000005    3  BYTE  POINTER ON WORD+1           14930000
A00015   EQU   ENDCARD+00000008    6 BYTE(S)                            14940000
ENDESD   EQU   ENDCARD+00000014    HALFWORD POINTER                     14950000
EPNAME   EQU   ENDCARD+00000016    8 BYTE(S)                            14960000
A00016   EQU   ENDCARD+00000024    4 BYTE(S)                            14970000
CSLTH    EQU   ENDCARD+00000028    4 BYTE(S)                            14980000
LTHBYTE  EQU   ENDCARD+00000028    1 BYTE(S)                            14990000
A00017   EQU   ENDCARD+00000029    3 BYTE(S)                            15000000
CMPDATA  EQU   ENDCARD+00000032    39 BYTE(S)                           15010000
ZEROZONE EQU   *                   8 BYTE(S)                            15020000
         DC    X'0F0F0F0F0F0F0F0F'                                      15030000
CVTTABLE EQU   *                   16 BYTE(S)                           15040000
         DC    C'0123456789ABCDEF'                                      15050000
PTRREG   EQU   00000002            FULLWORD INTEGER REGISTER            15060000
         ORG   @DATA+00000536                                           15070000
MAINT    EQU   *                   175 BYTE(S) ON DWORD                 15080000
         DC    C'MAINTENANCE'                                           15090000
         DC    00164C' '                                                15100000
         ORG   @DATA                                                    15110000
         DS    00000711C                                                15120000
@L       EQU   6                                                        15130000
@DATD    DSECT                                                          15140000
@SAV001  EQU   @DATD+00000000      72 BYTE(S) ON WORD                   15150000
PARMPTR  EQU   @DATD+00000072      FULLWORD POINTER                     15160000
INPTR    EQU   @DATD+00000076      FULLWORD POINTER                     15170000
LINECT   EQU   @DATD+00000080      HALFWORD INTEGER                     15180000
PAGCTR   EQU   @DATD+00000082      HALFWORD INTEGER                     15190000
MLOG     EQU   @DATD+00000084      HALFWORD INTEGER                     15200000
READLIST EQU   @DATD+00000088      30 BYTE(S) ON WORD                   15210000
RDCTR    EQU   @DATD+00000118      1  BYTE  POINTER                     15220000
DECBPTR  EQU   @DATD+00000120      FULLWORD POINTER                     15230000
RTNPTR   EQU   @DATD+00000124      FULLWORD POINTER                     15240000
WDSPTR   EQU   @DATD+00000128      FULLWORD POINTER                     15250000
I        EQU   @DATD+00000132      1  BYTE  POINTER                     15260000
J        EQU   @DATD+00000133      1  BYTE  POINTER                     15270000
K        EQU   @DATD+00000134      1  BYTE  POINTER                     15280000
L        EQU   @DATD+00000135      1  BYTE  POINTER                     15290000
N        EQU   @DATD+00000136      1  BYTE  POINTER                     15300000
P        EQU   @DATD+00000137      1  BYTE  POINTER                     15310000
Q        EQU   @DATD+00000138      1  BYTE  POINTER                     15320000
CARDPTR  EQU   @DATD+00000140      FULLWORD POINTER                     15330000
ESDID    EQU   @DATD+00000144      4 BYTE(S)                            15340000
ESDCTR   EQU   @DATD+00000148      HALFWORD POINTER                     15350000
RLDPTR   EQU   @DATD+00000152      FULLWORD POINTER                     15360000
RLDCTR   EQU   @DATD+00000156      HALFWORD POINTER                     15370000
LOOPCTR  EQU   @DATD+00000158      HALFWORD POINTER                     15380000
RLDSW1   EQU   @DATD+00000160      1  BYTE  POINTER                     15390000
RLDSW2   EQU   @DATD+00000161      1  BYTE  POINTER                     15400000
RPTRSAVE EQU   @DATD+00000164      FULLWORD INTEGER                     15410000
PPTRSAVE EQU   @DATD+00000168      FULLWORD INTEGER                     15420000
RLDFLAG  EQU   @DATD+00000172      1 BYTE(S)                            15430000
A00013   EQU   RLDFLAG+00000000    7 BIT(S)                             15440000
PTRFLAG  EQU   RLDFLAG+00000000    1 BIT(S)                             15450000
RLDADDR  EQU   @DATD+00000173      3 BYTE(S)                            15460000
DATA     EQU   @DATD+00000176      HALFWORD POINTER                     15470000
DATARES  EQU   @DATD+00000178      HALFWORD POINTER                     15480000
DBLWD    EQU   @DATD+00000184      8 BYTE(S) ON DWORD                   15490000
CVTWORK  EQU   @DATD+00000192      8 BYTE(S)                            15500000
BUF      EQU   @DATD+00000200      121 BYTE(S)                          15510000
         DS    00000321C                                                15520000
@TEMPS   DS    0F                                                       15530000
@TEMP2   DC    F'0'                                                     15540000
@TEMP3   DC    F'0'                                                     15550000
@TEMP4   DC    F'0'                                                     15560000
@DATEND  EQU   *                                                        15570000
HMBLKOBJ CSECT ,                                                        15580000
OBJEOF   EQU   @EL01                                                    15590000
         END   HMBLKOBJ,(C'PL/S',1400,75247)                            15600000
