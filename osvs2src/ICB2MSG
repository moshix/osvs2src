         TITLE 'ICB2MSG: MSSC MESSAGE TASK                             *00001000
                        '                                               00002000
         MACRO                                                          00003000
         DATEM                                                          00004000
         LCLC  &FILL                                                    00005000
&FILL    SETC  'CL8'.''''.'&SYSDATE'.''''                               00006000
         DC    &FILL                                                    00007000
         MEND                                                           00008000
ICB2MSG  CSECT                                                 @Y30LB03 00009000
C8       EQU   8                    FOR DISPLACMENTS           @Z40LB01 00010000
C4       EQU   4                    FOR DISPLACMENTS           @ZA16123 00011000
F4095    EQU   4095                 FOR DISPLACMENTS           @Y30LB03 00012000
         USING *,R15                ESTB ADDRESSABILITY        @Y30LB03 00013000
         BALR  R8,R0                SET                        @Y30LB03 00014000
START    DS    0H                   BASE                       @Y30LB03 00015000
         DROP  R15                  REG                        @Y30LB03 00016000
         USING START,R8             ESTABLISH ADDRESSABILITY   @Y30LB03 00017000
         LA    R7,F4095(R8)         SET SECOND BASE REG        @ZA16123 00018000
         USING START+4095,R7        ESTABLISH ADDRESSABILITY   @ZA16123 00019000
         LA    R6,F4095(R7)         SET THIRD BASE REG         @ZA16123 00020000
         USING START+8190,R6        ESTABLISH ADDRESSABILITY   @ZA16123 00021000
         LA    R5,F4095(R6)         SET FOURTH BASE REG        @ZA16123 00022000
         USING START+12285,R5       ESTABLISH ADDRESSABILITY   @ZA16123 00023000
         LA    R14,SAVAREA          INITIALIZE                 @Y30LB03 00024000
         ST    R14,C8(R13)          SAVE                       @Z40LB01 00025000
         LR    R13,R14              AREA                       @Y30LB03 00026000
         ST    R1,INTECBPT          STORE ECB ADDR             @Y30LB03 00027000
         B     AROUNDAT                                                 00028000
         DS    0H                                                       00029000
         DC    C'ICB2MSG '                                              00030000
         DATEM                                                          00031000
AROUNDAT EQU   *                                                        00032000
*   ICBTCB=CURTCB;                  /* SET UP TCB POINTER    @G24LB02*/ 00033000
         L     @15,CVTPTR                                          0257 00034000
         L     @12,CVTEXT2(,@15)                                   0257 00035000
         L     @12,CVTICB(,@12)                                    0257 00036000
         L     @15,CVTTCBP(,@15)                                   0257 00037000
         L     @15,CURTCB(,@15)                                    0257 00038000
         ST    @15,ICBTCB(,@12)                                    0257 00039000
*   ICBPTR=CVTICB;                  /* SET INTERNAL CB PTR   @Z40LB01*/ 00040000
         ST    @12,ICBPTR                                          0258 00041000
*   RFY                                                            0259 00042000
*     ICB2SSCB BASED(ICBPTR);       /* RESET BASE FOR CB     @Z40LB01*/ 00043000
*   SMFAREA=''B;                    /* CLEAR SMF AREA        @X70AC02*/ 00044000
         XC    SMFAREA(64),SMFAREA                                 0260 00045000
*   SMF22PTR=ADDR(SMFAREA);         /* PTR TO SMF AREA       @G24LB02*/ 00046000
         LA    @15,SMFAREA                                         0261 00047000
         ST    @15,SMF22PTR                                        0261 00048000
*   RECOVER=''B;                    /* CLEAR STATE SWITCHES  @G24LB02*/ 00049000
         MVI   RECOVER,X'00'                                       0262 00050000
*   LOCKRCVY=''B;                   /* CLEAR LOCK TRACE SWITCH     0263 00051000
*                                                            @G24LB02*/ 00052000
         MVI   LOCKRCVY,X'00'                                      0263 00053000
*   INITBITS=''B;                   /* CLEAR INIT SWITCHES   @G24LB02*/ 00054000
         MVI   INITBITS,X'00'                                      0264 00055000
*   PURGINDC=''B;                   /*                       @G24LB02*/ 00056000
         XC    PURGINDC(4),PURGINDC                                0265 00057000
*   PURGPTR=ADDR(PURGINDC);         /* SET UP THE PURGE AREA PTR   0266 00058000
*                                                            @G24LB02*/ 00059000
         LA    @15,PURGINDC                                        0266 00060000
         ST    @15,PURGPTR                                         0266 00061000
*   REENTRY=ADDR(INITBEG);          /* SET REENTRY           @Y30LB03*/ 00062000
         LA    @15,INITBEG                                         0267 00063000
         ST    @15,REENTRY                                         0267 00064000
*/*  ESTABLISH STAE ENVIRONMENT FOR RECOVERY                 @Y30LB03*/ 00065000
*                                                                  0268 00066000
*   GEN;                                                           0268 00067000
*                                                          /*@Y30LB03*/ 00068000
ISTAE1   STAE  ICBMSG90,CT,XCTL=YES ESTABLISH STAE FOR TASK    @Y30LB03 00069000
*   RESPECIFY                                                      0269 00070000
*     R1 RSTD;                      /* RSTD REG 1            @ZA20251*/ 00071000
*   R1=INTECBPT;                    /* LD REG 1,ECB ADDR     @ZA20251*/ 00072000
         L     R1,INTECBPT                                         0270 00073000
*IPOST2:                                                           0271 00074000
*   GEN(POST  (1),2130706432);      /* POST ICBINIT          @ZA20251*/ 00075000
IPOST2   POST  (1),2130706432                                           00076000
*   RESPECIFY                                                      0272 00077000
*     R1 UNRSTD;                    /* RELEASE REG 1         @ZA20251*/ 00078000
*   INITPTR=ADDR(REQLIST1);         /* SETUP ENAB/DISAB RQB PTR    0273 00079000
*                                                            @G24LB02*/ 00080000
         LA    @15,REQLIST1                                        0273 00081000
         ST    @15,INITPTR                                         0273 00082000
*   IF ICBPUCB=F0 THEN              /* IS MSS THERE          @G24LB02*/ 00083000
         L     @15,ICBPTR                                          0274 00084000
         L     @15,ICBPUCB(,@15)                                   0274 00085000
         LTR   @15,@15                                             0274 00086000
         BNZ   @RF00274                                            0274 00087000
*     DO;                           /*                       @G24LB02*/ 00088000
*       CALL ICBMSG89;              /*                       @G24LB02*/ 00089000
         BAL   @14,ICBMSG89                                        0276 00090000
*     END;                          /*                       @G24LB02*/ 00091000
*   GTMAINLL=LENGTH(CCWS)+LENGTH(BUFFER)+/*                  @ZA08838*/ 00092000
*       +LENGTH(SRB)+LENGTH(IOSB)+LENGTH(SSCDATA)/*          @Y30LB03*/ 00093000
*       +LENGTH(MESG)               /*                       @ZA08838*/ 00094000
*       +LENGTH(AWAX)+LENGTH(AWBX); /*                       @ZA00671*/ 00095000
@RF00274 MVC   GTMAINLL(3),@CF03269+1                              0278 00096000
*   RESPECIFY                                                      0279 00097000
*    (R0,                                                          0279 00098000
*     R1,                                                          0279 00099000
*     R15) RSTD;                    /*                       @ZM31014*/ 00100000
*   R0=GTMAINR0;                    /* INIT R0 WITH GETMAIN LENGTH 0280 00101000
*                                                            @ZM31014*/ 00102000
         L     R0,GTMAINR0                                         0280 00103000
*   GEN;                                                           0281 00104000
*                                                          /*@Y30LB03*/ 00105000
* GETMAIN FOR CBLOCKS                                          @Y30LB03 00106000
IGETMN1  GETMAIN RC,LV=(R0),SP=245,RELATED=(ICB2MSG(IFREEMN1)) @ZM31056 00107000
*   IF R15=0 THEN                   /* GETMAIN SUCCESSFUL    @ZM31056*/ 00108000
         LTR   R15,R15                                             0282 00109000
         BNZ   @RF00282                                            0282 00110000
*     DO;                           /* SAVE ADDRESS OF STORAGE     0283 00111000
*                                                            @ZM31056*/ 00112000
*       CCWSPTR=R1;                 /* INIT PTR TO CCWS      @G24LB02*/ 00113000
         ST    R1,CCWSPTR                                          0284 00114000
*     END;                          /*                       @ZM31056*/ 00115000
*   ELSE                            /* NO I/O STORAGE, WILL QUIT   0286 00116000
*                                                            @ZM31056*/ 00117000
*     CALL ICBMSG89;                /* WILL NEVER RETURN     @ZM31056*/ 00118000
         B     @RC00282                                            0286 00119000
@RF00282 BAL   @14,ICBMSG89                                        0286 00120000
*   RFY                                                            0287 00121000
*    (R0,                                                          0287 00122000
*     R1,                                                          0287 00123000
*     R15) UNRSTD;                  /*                       @ZM31014*/ 00124000
*                                                                  0287 00125000
@RC00282 DS    0H                                                  0288 00126000
*   /*****************************************************************/ 00127000
*   /*                                                               */ 00128000
*   /* ICBMSG89 WAITS ON ECB THAT NO ONE POSTS               @ZM31056*/ 00129000
*   /*                                                               */ 00130000
*   /*****************************************************************/ 00131000
*                                                                  0288 00132000
*   ECB1=ADDR(ICBECB);              /* INIT ECB1(MSS ECB)    @Y30LB03*/ 00133000
         L     @15,ICBPTR                                          0288 00134000
         LA    @12,ICBECB(,@15)                                    0288 00135000
         ST    @12,ECB1                                            0288 00136000
*   ECB2=ADDR(ICBACTV);             /* INIT ECB2(ACT ECB)    @Y30LB03*/ 00137000
         LA    @12,ICBACTV(,@15)                                   0289 00138000
         ST    @12,ECB2                                            0289 00139000
*   ECB3=ADDR(ICBCOM);              /* INIT ECB3(COM ECB)    @Y30LB03*/ 00140000
         LA    @12,ICBCOM(,@15)                                    0290 00141000
         ST    @12,ECB3                                            0290 00142000
*   ECB4=ADDR(ICBIOR);              /* INIT ECB4(IOR ECB)    @Y30LB03*/ 00143000
         LA    @15,ICBIOR(,@15)                                    0291 00144000
         STCM  @15,7,ECB4                                          0291 00145000
*INITBEG:                                                          0292 00146000
*   REENTRY=ADDR(INITBEG);          /* SETUP REENTRY POINT   @G24LB02*/ 00147000
INITBEG  LA    @15,INITBEG                                         0292 00148000
         ST    @15,REENTRY                                         0292 00149000
*   CALL FSENTRY;                   /* CALL FIRST ENTRY ROUTINE    0293 00150000
*                                                            @G24LB02*/ 00151000
*                                                                  0293 00152000
         BAL   @14,FSENTRY                                         0293 00153000
*   /*****************************************************************/ 00154000
*   /*                                                               */ 00155000
*   /* SET SWITCHES FOR INITIALIZATION AND IMPL MESSAGES     @ZM31014*/ 00156000
*   /* FROM THE MSC, WITH CONFIGURATION INFORMATION          @ZM31014*/ 00157000
*   /*                                                               */ 00158000
*   /*****************************************************************/ 00159000
*                                                                  0294 00160000
*   NEED9092=BONE;                  /* NEED STORAGE FOR 90 & 92 AREA    00161000
*                                                            @ZM31014*/ 00162000
*   SAVE9092=BONE;                  /* 90 & 92S TO BE SAVED IN AREA     00163000
*                                                            @ZM31014*/ 00164000
*   PROC9092=BZERO;                 /* NOT TIME TO PROCESS 90 OR 92     00165000
*                                                            @ZM31014*/ 00166000
*   SKIP9092=BZERO;                 /* NOT SKIPPING 90S & 92S      0297 00167000
*                                                            @ZM31014*/ 00168000
*   HAVE90=BZERO;                   /* HAVE NO 90 MESSAGE AS YET   0298 00169000
*                                                            @ZM31014*/ 00170000
*   HAVE92=BZERO;                   /* HAVE NO 92 MESSAGE AS YET   0299 00171000
*                                                            @ZM31014*/ 00172000
         OI    NEED9092,B'11000000'                                0299 00173000
         NI    PROC9092,B'11000011'                                0299 00174000
*   VVICREC=BZERO;                  /* ZERO MSVC REC BIT     #Y30LB03*/ 00175000
         NI    VVICREC,B'11101111'                                 0300 00176000
*   REENTRY=ADDR(INITBEG2);         /* SET REENTRY POINT     #Y30LB03*/ 00177000
         LA    @15,INITBEG2                                        0301 00178000
         ST    @15,REENTRY                                         0301 00179000
*INITBEG2:                                                         0302 00180000
*   CLEANUP=F1;                     /* INIT CLEANUP SWTCH    @Y30LB03*/ 00181000
INITBEG2 MVC   CLEANUP(4),@CF00117                                 0302 00182000
*/******************************************************     @Y30LB03*/ 00183000
*/* CALL MSVC INIT RTN                                       @Y30LB03*/ 00184000
*/******************************************************     @Y30LB03*/ 00185000
*                                                                  0303 00186000
*   IF ICBV^=BONE THEN              /* DID MSVC GET INIT'D ? @Y30LB03*/ 00187000
         L     @15,ICBPTR                                          0303 00188000
         TM    ICBV(@15),B'00100000'                               0303 00189000
         BO    @RF00303                                            0303 00190000
*     DO;                           /* NO,                   @Y30LB03*/ 00191000
*       CALL ICBMSG89;              /* WILL NEVER RETURN     @ZM31056*/ 00192000
*                                                                  0305 00193000
         BAL   @14,ICBMSG89                                        0305 00194000
*       /*************************************************************/ 00195000
*       /*                                                           */ 00196000
*       /* ICBMSG89 WAITS FOREVER ON AN ECB THAT NO ONE POSTS        */ 00197000
*       /*                                                   @ZM31056*/ 00198000
*       /*                                                           */ 00199000
*       /*************************************************************/ 00200000
*                                                                  0306 00201000
*     END;                          /*                       @Y30LB03*/ 00202000
*   RESPECIFY                                                      0307 00203000
*    (R0,                                                          0307 00204000
*     R1) UNRSTD;                   /*                       @Y30LB03*/ 00205000
@RF00303 DS    0H                                                  0308 00206000
*/* *****************************************************    @Y30LB03*/ 00207000
*/*   SET UP CONTROL BLOCK POINTERS FOR ALL DATA AREAS       @Y30LB03*/ 00208000
*/*   IN DYNAMIC AREA THAT DID GETMAIN FOR                   @Y30LB03*/ 00209000
*/* *****************************************************    @Y30LB03*/ 00210000
*                                                                  0308 00211000
*   SSCDATAP=ADDR(BUFFER)+LENGTH(BUFFER);/*                  @Y30LB03*/ 00212000
         LA    @15,536                                             0308 00213000
         AL    @15,CCWSPTR                                         0308 00214000
         ST    @15,SSCDATAP                                        0308 00215000
*   IOSBPTR=SSCDATAP+LENGTH(SSCDATA);/*                      @Y30LB03*/ 00216000
         AL    @15,@CF03265                                        0309 00217000
         ST    @15,IOSBPTR                                         0309 00218000
*   SRBPTR=IOSBPTR+LENGTH(IOSB);    /*                       @Y30LB03*/ 00219000
         AL    @15,@CF02395                                        0310 00220000
         ST    @15,SRBPTR                                          0310 00221000
*   MESGPTR=SRBPTR+LENGTH(SRB);     /*                       @Y30LB03*/ 00222000
         AL    @15,@CF00838                                        0311 00223000
         ST    @15,MESGPTR                                         0311 00224000
*   REENTRY=ADDR(REINIT);           /* INIT RE-ENTRY PNT     @Y30LB03*/ 00225000
         LA    @15,REINIT                                          0312 00226000
         ST    @15,REENTRY                                         0312 00227000
*/*  ******************************************************  @Y30LB03*/ 00228000
*/*     START OF EXECUTION SHOULD THIS TASK BECOME           @Y30LB03*/ 00229000
*/*     RE-INSTATED.  THIS POINT IS ALSO A RE-ENTRY POINT    @Y30LB03*/ 00230000
*/*     FROM ICBMSG95(THE STAE RE-TRY SUBRTN).               @Y30LB03*/ 00231000
*/*  ******************************************************  @Y30LB03*/ 00232000
*                                                                  0313 00233000
*REINIT:                                                           0313 00234000
*   ASCBPTR=MSGASCB;                /* INIT ASCB PTR         @Y30LB03*/ 00235000
REINIT   L     @15,CVTPTR                                          0313 00236000
         LA    @12,4                                               0313 00237000
         AL    @12,CVTTCBP(,@15)                                   0313 00238000
         L     @11,MSGASCB(,@12)                                   0313 00239000
         ST    @11,ASCBPTR                                         0313 00240000
*   BITSW=''B;                      /* CLEAR DISPLAY SWITCHES      0314 00241000
*                                                            @Z40LB01*/ 00242000
         MVI   BITSW,X'00'                                         0314 00243000
*   RECOVER=''B;                    /* SET RECOVERY BITS     @Y30LB03   00244000
*                                      TO ZEROES             @Y30LB03*/ 00245000
         MVI   RECOVER,X'00'                                       0315 00246000
*   LOCKRCVY=''B;                   /* INIT LOCK RECOVERY    @Y30LB03   00247000
*                                      INFORMATION FIELD     @Y30LB03*/ 00248000
         MVI   LOCKRCVY,X'00'                                      0316 00249000
*   VVICREC=BONE;                   /* RE-SET MSVC RECY BIT(IF     0317 00250000
*                                      REINSTATED)           @Y30LB03*/ 00251000
         OI    VVICREC,B'00010000'                                 0317 00252000
*   ICBTCB=MSGTCB;                  /* DEFINE CB TCB         @Y30LB03*/ 00253000
         L     @11,ICBPTR                                          0318 00254000
         L     @12,MSGTCB(,@12)                                    0318 00255000
         ST    @12,ICBTCB(,@11)                                    0318 00256000
*   ASVTPTR=CVTASVT;                /* INIT ASVT PTR         @Y30LB03*/ 00257000
         L     @15,CVTASVT(,@15)                                   0319 00258000
         ST    @15,ASVTPTR                                         0319 00259000
*   UCBPTR=ICBPUCB;                 /* INIT UCB PTR TO       @Y30LB03   00260000
*                                      PRIMARY UCB(MSC)      @Y30LB03*/ 00261000
         L     @15,ICBPUCB(,@11)                                   0320 00262000
         ST    @15,UCBPTR                                          0320 00263000
*   ECB1=ADDR(ICBECB);              /* INIT ECB1(MSS ECB)    @Y30LB03*/ 00264000
         LA    @15,ICBECB(,@11)                                    0321 00265000
         ST    @15,ECB1                                            0321 00266000
*   ECB2=ADDR(ICBACTV);             /* INIT ECB2(ACT ECB)    @Y30LB03*/ 00267000
         LA    @15,ICBACTV(,@11)                                   0322 00268000
         ST    @15,ECB2                                            0322 00269000
*   ECB3=ADDR(ICBCOM);              /* INIT ECB3(COM ECB)    @Y30LB03*/ 00270000
         LA    @15,ICBCOM(,@11)                                    0323 00271000
         ST    @15,ECB3                                            0323 00272000
*   ECB4=ADDR(ICBIOR);              /* INIT ECB4(IOR ECB)    @Y30LB03*/ 00273000
*                                                                  0324 00274000
         LA    @15,ICBIOR(,@11)                                    0324 00275000
         STCM  @15,7,ECB4                                          0324 00276000
*   /*****************************************************************/ 00277000
*   /*                                                               */ 00278000
*   /* INIT ECBS IN CONTROL BLOCK TO ZEROES                  @Y30LB03*/ 00279000
*   /*                                                               */ 00280000
*   /*****************************************************************/ 00281000
*                                                                  0325 00282000
*   ICBECB=F0;                      /*                       @Y30LB03*/ 00283000
         SLR   @15,@15                                             0325 00284000
         ST    @15,ICBECB(,@11)                                    0325 00285000
*   ICBACTV=F0;                     /*                       @Y30LB03*/ 00286000
         ST    @15,ICBACTV(,@11)                                   0326 00287000
*   ICBCOM=F0;                      /*                       @Y30LB03*/ 00288000
         ST    @15,ICBCOM(,@11)                                    0327 00289000
*   ICBIOR=F0;                      /*                       @Y30LB03*/ 00290000
         ST    @15,ICBIOR(,@11)                                    0328 00291000
*   NON7F=F0;                       /* NO I/O ERRORS YET     @ZA13488*/ 00292000
         ST    @15,NON7F                                           0329 00293000
*   FIRST=CHAR0;                    /* INIT TO 0             @Y30LB03*/ 00294000
         MVI   FIRST,C'0'                                          0330 00295000
*   DO WHILE CLEANUP^=F0;           /* CLEANUP GARBAGE       @Y30LB03   00296000
*                                      IN MSC BUFFER FROM    @Y30LB03   00297000
*                                      LAST IPL              @Y30LB03*/ 00298000
         B     @DE00331                                            0331 00299000
@DL00331 DS    0H                                                  0332 00300000
*     CALL ICBMSG10;                /* CALL SUBRTN TO        @Y30LB03   00301000
*                                      DEBLK & ROUTE MSGS    @Y30LB03*/ 00302000
         BAL   @14,ICBMSG10                                        0332 00303000
*   END;                            /*                       @Y30LB03*/ 00304000
*                                                                  0333 00305000
@DE00331 L     @15,CLEANUP                                         0333 00306000
         LTR   @15,@15                                             0333 00307000
         BNZ   @DL00331                                            0333 00308000
*   /*****************************************************************/ 00309000
*   /*                                                               */ 00310000
*   /* HAVE READ ALL MESSAGE BUFFERS FROM MSC. DURING        @ZM31014*/ 00311000
*   /* INITIALIZATION, WANT TO PROCESS LAST 90 & 92 MESSAGE  @ZM31014*/ 00312000
*   /*                                                               */ 00313000
*   /*****************************************************************/ 00314000
*                                                                  0334 00315000
*   IF REENTRY=ADDR(REINIT)         /* DURING INITIALIZATION ?     0334 00316000
*                                                            @ZM31014*/ 00317000
*     THEN                                                         0334 00318000
         LA    @15,REINIT                                          0334 00319000
         C     @15,REENTRY                                         0334 00320000
         BNE   @RF00334                                            0334 00321000
*     DO;                           /* PROCESS 90 & 92 MESSAGES    0335 00322000
*                                                            @ZM31014*/ 00323000
*       PROC9092=BONE;              /* TIME TO PROCESS LAST ONES   0336 00324000
*                                                            @ZM31014*/ 00325000
*       SAVE9092=BZERO;             /* NO LONGER SAVING THEM @ZM31014*/ 00326000
         OI    PROC9092,B'00100000'                                0337 00327000
         NI    SAVE9092,B'10111111'                                0337 00328000
*       CALL ICBMSG18;              /* OFF TO PROCESS THEM   @ZM31014*/ 00329000
         BAL   @14,ICBMSG18                                        0338 00330000
*     END;                          /* PROCESSING LAST 90/92 MESSAGE    00331000
*                                                            @ZM31014*/ 00332000
*   ELSE                                                           0340 00333000
*     ;                             /* NOT PROCESSED LATER   @ZM31014*/ 00334000
@RF00334 DS    0H                                                  0341 00335000
*   IF ICBR=BZERO THEN              /* IS READY BIT ON?      @Y30LB03*/ 00336000
         L     @15,ICBPTR                                          0341 00337000
         TM    ICBR(@15),B'01000000'                               0341 00338000
         BNZ   @RF00341                                            0341 00339000
*     DO;                           /* NO,                   @Y30LB03*/ 00340000
*       SAVREENT=REENTRY;           /* SAVE REENTRY POINTER  @G24LB02*/ 00341000
         L     @15,REENTRY                                         0343 00342000
         ST    @15,SAVREENT                                        0343 00343000
*       REENTRY=ADDR(RDYRET);       /* SET NEW REENTRY POINT @G24LB02*/ 00344000
         LA    @15,RDYRET                                          0344 00345000
         ST    @15,REENTRY                                         0344 00346000
*       SVCCALL=ON;                 /* SET SVC CALL FLAG     @G24LB02*/ 00347000
         OI    SVCCALL,B'00001000'                                 0345 00348000
*       RESPECIFY                                                  0346 00349000
*         R15 RSTD;                 /* RESTRICT REG 15       @Y30LB03*/ 00350000
*IPAIR1:                                                           0347 00351000
*                                                                  0347 00352000
*       /*************************************************************/ 00353000
*       /*                                                           */ 00354000
*       /* *******************************************************   */ 00355000
*       /*                                                   @Y30LB02*/ 00356000
*       /* MACMEAN PURGE/ASSIGN/INITIALIZE/READY MACRO       @Y30LB02*/ 00357000
*       /* VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00           @Y30LB02*/ 00358000
*       /* THIS IS THE OUTPUT FOR THE EXECUTE FORM.          @Y30LB02*/ 00359000
*       /* THE LIST FORM OF THIS MACRO SHOULD BE             @Y30LB02*/ 00360000
*       /* INVOKED FIRST IN ORDER TO SET UP NECESSARY        @Y30LB02*/ 00361000
*       /* DECLARES. IF THE COMPLETE ARGUMENT IS             @Y30LB02*/ 00362000
*       /* SPECIFIED THE REQ BLOCK WILL BE ZEROED.           @Y30LB02*/ 00363000
*       /* *******************************************************   */ 00364000
*       /*                                                   @Y30LB02*/ 00365000
*       /*                                                           */ 00366000
*       /*************************************************************/ 00367000
*                                                                  0347 00368000
*       RFY                                                        0347 00369000
*        (PAIRR1) RSTD;             /* RESTRICT R1           @Y30LB02*/ 00370000
IPAIR1   DS    0H                                                  0348 00371000
*       PAIRR1=ADDR(ARLIST);        /* SET PAIRR1 TO REQ BLOCK     0348 00372000
*                                                            @Y30LB02*/ 00373000
         LA    PAIRR1,ARLIST                                       0348 00374000
*       AIRLL='08'X;                /* SET LENGTH FIELD      @Y30LB02*/ 00375000
         LA    @12,8                                               0349 00376000
         ST    @12,AIRLL                                           0349 00377000
*       AIROP='20'X;                /* RDY OPCODE            @Y30LB02*/ 00378000
         MVI   AIROP,X'20'                                         0350 00379000
*       SVC(126);                   /* ISSUE SVC INST.       @Y30LB02*/ 00380000
         SVC   126                                                 0351 00381000
*       RFY                                                        0352 00382000
*        (PAIRR1) UNRSTD;           /* UNRESTRICT R1         @Y30LB02*/ 00383000
*/*@Y30LB03                                                          */ 00384000
*                                                                  0353 00385000
*RDYRET:                            /* RETURN LABEL          @G24LB02*/ 00386000
*       SVCCALL=OFF;                /* CLEAR SVC CALL FLAG   @G24LB02*/ 00387000
RDYRET   NI    SVCCALL,B'11110111'                                 0353 00388000
*       REENTRY=SAVREENT;           /* RESTORE REENTRY POINTER     0354 00389000
*                                                            @G24LB02*/ 00390000
         L     @12,SAVREENT                                        0354 00391000
         ST    @12,REENTRY                                         0354 00392000
*       IF R15=F0 THEN              /* GOOD RTN CODE?        @Y30LB03*/ 00393000
         LTR   R15,R15                                             0355 00394000
         BNZ   @RF00355                                            0355 00395000
*         DO;                       /* SUCCESSFUL READY      @Y30LB03*/ 00396000
*           ICBR=BONE;              /* SET READY BIT         @ZM31014*/ 00397000
         L     @12,ICBPTR                                          0357 00398000
         OI    ICBR(@12),B'01000000'                               0357 00399000
*         END;                      /*                       @Y30LB03*/ 00400000
*       ELSE                        /* UNSUCCESSFUL READY    @Y30LB03*/ 00401000
*         DO;                       /* SET UP FAILURE MSG    @Y30LB03*/ 00402000
         B     @RC00355                                            0359 00403000
@RF00355 DS    0H                                                  0360 00404000
*           RESPECIFY                                              0360 00405000
*             R0 RSTD;              /* RESTRICT REG 0        @Y30LB03*/ 00406000
*           INTER=R0;               /* SET UP CONVERSION AREA      0361 00407000
*                                                            @X04AC03*/ 00408000
         ST    R0,INTER                                            0361 00409000
*           CALL ICBMSG82;          /* CALL SUBRTN TO        @X04AC03   00410000
*                                      CONVERT REAS CODE     @X04AC03*/ 00411000
         BAL   @14,ICBMSG82                                        0362 00412000
*           RESPECIFY                                              0363 00413000
*             R0 UNRSTD;            /* RELEASE REG 0         @X04AC03*/ 00414000
*           WTOGEN03=MESGS(MSG01201);/* FILL WTO BUFFER      @X50AC01*/ 00415000
         MVI   WTOGEN03+72,C' '                                    0364 00416000
         L     @12,@CA02101                                        0364 00417000
         MVC   WTOGEN03(72),MESGS-MSGS+1976(@12)                   0364 00418000
*           WTOGEN03(52:54)=BYTES234;/* FILL IN REAS CODE    @X50AC01*/ 00419000
         MVC   WTOGEN03+51(3),BYTES234                             0365 00420000
*           RESPECIFY                                              0366 00421000
*             R15 UNRSTD;           /* RELEASE REG 15        @G24LB02*/ 00422000
*           CALL ICBMSG45;          /* CALL WTO SUBRTN       @G24LB02*/ 00423000
*                                                                  0367 00424000
         BAL   @14,ICBMSG45                                        0367 00425000
*           /*********************************************************/ 00426000
*           /*                                                       */ 00427000
*           /* THIS SEGMENT OF CODE WILL SET ON MSSC SUSPEND FLAG,   */ 00428000
*           /* TURN ON THE BROKEN BOX FLAG AND SET OFF THE INITIALIZE*/ 00429000
*           /* BIT.                                          @G24LB02*/ 00430000
*           /*                                                       */ 00431000
*           /*********************************************************/ 00432000
*                                                                  0368 00433000
*           ICBS=ON;                /* SET SUSPEND INDICATOR ON    0368 00434000
*                                                            @G24LB02*/ 00435000
         L     @15,ICBPTR                                          0368 00436000
         OI    ICBS(@15),B'00001000'                               0368 00437000
*           REQLIST1=''B;           /* ZERO LIST 1           @G24LB02*/ 00438000
         XC    REQLIST1(40),REQLIST1                               0369 00439000
*           INILNGTH=INILEN;        /* SET REQ BLK LENGTH    @G24LB02*/ 00440000
         L     @15,INITPTR                                         0370 00441000
         LH    @12,INILEN                                          0370 00442000
         ST    @12,INILNGTH(,@15)                                  0370 00443000
*           INITOPCD=INICODE;       /* SET OP CODE           @G24LB02*/ 00444000
         MVI   INITOPCD(@15),X'88'                                 0371 00445000
*           INIDISAB=ON;            /* SET DISABLE FLAG      @G24LB02*/ 00446000
         OI    INIDISAB(@15),B'00100000'                           0372 00447000
*           INIABLE=ON;             /* SET MSVI FLAG ON      @G24LB02*/ 00448000
*           INIJRNL=ON;             /* SET JOURNAL FLAG      @G24LB02*/ 00449000
         OI    INIABLE(@15),B'01100000'                            0374 00450000
*           RFY                                                    0375 00451000
*             R1 RSTD;              /*                       @G24LB02*/ 00452000
*           R1=INITPTR;             /* SET PARAMETER REG     @G24LB02*/ 00453000
         LR    R1,@15                                              0376 00454000
*           SVC(126);               /* INVOKE SVC 126        @G24LB02*/ 00455000
         SVC   126                                                 0377 00456000
*           RFY                                                    0378 00457000
*             R1 UNRSTD;            /*                       @G24LB02*/ 00458000
*           ICBB=ON;                /* SET BROKEN BOX INDICATOR    0379 00459000
*                                                            @G24LB02*/ 00460000
*           ICBI=OFF;               /* INIT INDICATOR SET OFF      0380 00461000
*                                                            @G24LB02*/ 00462000
         L     @15,ICBPTR                                          0380 00463000
         OI    ICBB(@15),B'00010000'                               0380 00464000
         NI    ICBI(@15),B'01111111'                               0380 00465000
*           INITFLAG=OFF;           /* SETOFF FSENTRY LOOP CNTL    0381 00466000
*                                                            @G24LB02*/ 00467000
         NI    INITFLAG,B'11110111'                                0381 00468000
*           GOTO INITBEG;           /*                       @G24LB02*/ 00469000
         B     INITBEG                                             0382 00470000
*         END;                      /*                       @Y30LB03*/ 00471000
*     END;                          /*                       @Y30LB03*/ 00472000
@RC00355 DS    0H                                                  0385 00473000
*   IF ICBOPT=F0 THEN               /* FIRST TIME FOR ACTIVITY ?   0385 00474000
*                                                            @Y30LB03*/ 00475000
@RF00341 L     @15,ICBPTR                                          0385 00476000
         L     @12,ICBOPT(,@15)                                    0385 00477000
         LTR   @12,@12                                             0385 00478000
         BNZ   @RF00385                                            0385 00479000
*     DO;                           /* YES,                  @Y30LB03*/ 00480000
*       ICBOPT=MESGPTR+LENGTH(MESG);/* ACTIVITY BUFFER ADDRESS     0387 00481000
*                                                            @ZA08838*/ 00482000
         LA    @12,68                                              0387 00483000
         AL    @12,MESGPTR                                         0387 00484000
         ST    @12,ICBOPT(,@15)                                    0387 00485000
*     END;                          /*                       @Y30LB03*/ 00486000
*   SAVR14=R14;                     /*                       @Y30LB03*/ 00487000
@RF00385 ST    R14,SAVR14                                          0389 00488000
*   CALL ICBMSG50;                  /* CALL ACTIVITY RTN     @Y30LB03*/ 00489000
         BAL   @14,ICBMSG50                                        0390 00490000
*   R14=SAVR14;                     /*                       @Y30LB03*/ 00491000
         L     R14,SAVR14                                          0391 00492000
*   REENTRY=ADDR(SCAN);             /* SET RE-ENTRY PNT      @Y30LB03*/ 00493000
         LA    @15,SCAN                                            0392 00494000
         ST    @15,REENTRY                                         0392 00495000
*/*********************************************************  @Y30LB03*/ 00496000
*/*                                                          @Y30LB03*/ 00497000
*/* AT THIS POINT THE MESSAGE TASK ENTERS THE WAIT STATE     @Y30LB03*/ 00498000
*/*                                                          @Y30LB03*/ 00499000
*/*********************************************************  @Y30LB03*/ 00500000
*                                                                  0393 00501000
*WAIT:                                                             0393 00502000
*   GEN(WAIT  ECBLIST=WAITLIST);    /*                       @Y30LB03*/ 00503000
WAIT     WAIT  ECBLIST=WAITLIST                                         00504000
*/*********************************************************  @Y30LB03*/ 00505000
*/*                                                          @Y30LB03*/ 00506000
*/* SCAN LIST OF ECBS FOR POSTED ECB                         @Y30LB03*/ 00507000
*/*                                                          @Y30LB03*/ 00508000
*/*********************************************************  @Y30LB03*/ 00509000
*                                                                  0394 00510000
*SCAN:                                                             0394 00511000
*   REENTRY=ADDR(WAIT);             /*                       @Y30LB03*/ 00512000
SCAN     LA    @15,WAIT                                            0394 00513000
         ST    @15,REENTRY                                         0394 00514000
*   DO I=0 TO 12 BY 4;              /*                       @Y30LB03*/ 00515000
         SLR   @15,@15                                             0395 00516000
         ST    @15,I                                               0395 00517000
@DL00395 DS    0H                                                  0396 00518000
*     BITPTR=ECB1+I;                /*                       @Y30LB03*/ 00519000
         AL    @15,ECB1                                            0396 00520000
         ST    @15,BITPTR                                          0396 00521000
*     IF BITPATT(2)=BZERO THEN      /* THIS ECB POSTED       @Y30LB03*/ 00522000
         TM    BITPATT(@15),B'01000000'                            0397 00523000
         BZ    @RT00397                                            0397 00524000
*       ;                           /* NO,JUST INCR I        @Y30LB03*/ 00525000
*     ELSE                          /* YES,FIND RTN THAT     @Y30LB03   00526000
*                                      SHOULD BE CALLED      @Y30LB03*/ 00527000
*       DO;                         /*                       @Y30LB03*/ 00528000
*         IF I=F0 THEN              /* WAS IT MSS ECB?       @Y30LB03*/ 00529000
         L     @15,I                                               0400 00530000
         LTR   @15,@15                                             0400 00531000
         BNZ   @RF00400                                            0400 00532000
*           DO;                     /*                       @Y30LB03*/ 00533000
*             CALL ICBMSG10;        /* MSC MESSAGE           @Y30LB03   00534000
*                                      HANDLER RTN           @Y30LB03*/ 00535000
         BAL   @14,ICBMSG10                                        0402 00536000
*           END;                    /*                       @Y30LB03*/ 00537000
*         IF I=F4 THEN              /* WAS IT ACT ECB?       @Y30LB03*/ 00538000
@RF00400 CLC   I(4),@CF00109                                       0404 00539000
         BNE   @RF00404                                            0404 00540000
*           DO;                     /*                       @Y30LB03*/ 00541000
*             CALL ICBMSG50;        /* MSC ACTIVITY          @Y30LB03   00542000
*                                      INTERFACE RTN         @Y30LB03*/ 00543000
         BAL   @14,ICBMSG50                                        0406 00544000
*           END;                    /*                       @Y30LB03*/ 00545000
*         IF I=F8 THEN              /* WAS IT COM ECB?       @Y30LB03*/ 00546000
@RF00404 CLC   I(4),@CF00115                                       0408 00547000
         BNE   @RF00408                                            0408 00548000
*           DO;                     /*                       @Y30LB03*/ 00549000
*             RECOVER=''B;          /* CLEAR                 @Y30LB03   00550000
*                                      COMTASK RECOVERY BITS @Y30LB03*/ 00551000
         MVI   RECOVER,X'00'                                       0410 00552000
*             RECOVER(1)=BONE;      /* SET REC-              @Y30LB03   00553000
*                                      OVERY BIT FOR CMTASK  @Y30LB03*/ 00554000
         OI    RECOVER,B'10000000'                                 0411 00555000
*             CALL ICBMSG40;        /* MSC/COMTASK           @Y30LB03   00556000
*                                      INTERFACE RTN         @Y30LB03*/ 00557000
         BAL   @14,ICBMSG40                                        0412 00558000
*             RECOVER=''B;          /* TURN OFF              @Y30LB03   00559000
*                                      COMTASK RECOVERY BIT  @Y30LB03*/ 00560000
         MVI   RECOVER,X'00'                                       0413 00561000
*           END;                    /*                       @Y30LB03*/ 00562000
*         IF I=F12 THEN             /* I/O RESTART ECB?      @Y30LB03*/ 00563000
@RF00408 CLC   I(4),@CF02050                                       0415 00564000
         BNE   @RF00415                                            0415 00565000
*           DO;                     /*                       @Y30LB03*/ 00566000
*                                                                  0416 00567000
*             /*******************************************************/ 00568000
*             /*                                                     */ 00569000
*             /* *********************************           @Y30LB03*/ 00570000
*             /* CALL I/O RESTART SUBROUTINE                 @Y30LB03*/ 00571000
*             /* *********************************           @Y30LB03*/ 00572000
*             /*                                                     */ 00573000
*             /*******************************************************/ 00574000
*                                                                  0417 00575000
*             CALL ICBMSG70;        /*                       @Y30LB03*/ 00576000
         BAL   @14,ICBMSG70                                        0417 00577000
*           END;                    /*                       @Y30LB03*/ 00578000
*       END;                        /*                       @Y30LB03*/ 00579000
@RF00415 DS    0H                                                  0420 00580000
*   END;                            /*                       @Y30LB03*/ 00581000
@RT00397 LA    @15,4                                               0420 00582000
         AL    @15,I                                               0420 00583000
         ST    @15,I                                               0420 00584000
         C     @15,@CF02050                                        0420 00585000
         BNH   @DL00395                                            0420 00586000
*EXITX:                                                            0421 00587000
*   GOTO WAIT;                      /* BRANCH TO WAIT        @Y30LB03*/ 00588000
         B     WAIT                                                0421 00589000
*                                                                  0422 00590000
*/*********************************************************  @Y30LB03*/ 00591000
*/*                                                          @Y30LB03*/ 00592000
*/* SUBROUTINES                                              @Y30LB03*/ 00593000
*/*                                                          @Y30LB03*/ 00594000
*/*********************************************************  @Y30LB03*/ 00595000
*/*********************************************************  @G24LB02*/ 00596000
*/*    PROCEDURE NAME - FSENTRY                              @G24LB02*/ 00597000
*/*                                                          @G24LB02*/ 00598000
*/*    FUNCTION - THE FUNCTION OF THIS SUBROUTINE IS TO      @G24LB02*/ 00599000
*/*               DETERMINE INITIALIZATION STATUS OF THE     @G24LB02*/ 00600000
*/*               MSC.  IF THE MSC'S BROKEN BOX FLAG IS      @G24LB02*/ 00601000
*/*               SET IN THE ICBSS1CB CONTROL BLOCK, THEN    @G24LB02*/ 00602000
*/*               A WAIT WILL BE ISSUED UNTIL THE COMTASK    @G24LB02*/ 00603000
*/*               PROCESSOR RECEIVES A VARY-ON REQUEST       @G24LB02*/ 00604000
*/*               FOR THE MSC.  WHEN A VARY-ON OF THE MSC    @G24LB02*/ 00605000
*/*               IS PROCESSED, THE CKUCB SUBROUTINE WILL    @G24LB02*/ 00606000
*/*               BE  INVOKED TO LOAD AND CALL THE ICBMSG05  @G24LB02*/ 00607000
*/*               ROUTINE FOR INITIALIZATION OF THE MSC      @G24LB02*/ 00608000
*/*               UCB.                                       @G24LB02*/ 00609000
*/*                                                          @G24LB02*/ 00610000
*/*               IF THE FIRST ENTRY FLAG(ICBENT) IS ON      @G24LB02*/ 00611000
*/*               AND ICBI IS OFF, THEN THIS ROUTINE WILL    @G24LB02*/ 00612000
*/*               LOAD AND CALL ICBMSG05 FOR INITIALIZATION  @G24LB02*/ 00613000
*/*               PROCESSING.                                @G24LB02*/ 00614000
*/*                                                          @G24LB02*/ 00615000
*/*               IF THE INITIALIZE ATTEMPT IS SUCCESSFUL    @G24LB02*/ 00616000
*/*               THEN THIS SUBROUTINE WILL CALL THE         @G24LB02*/ 00617000
*/*               'SECENTRY' SUBROUTINE TO COMPLETE MSS      @G24LB02*/ 00618000
*/*               INITIALIZATION.                            @G24LB02*/ 00619000
*/*                                                          @G24LB02*/ 00620000
*/*  INPUTS - ICBENT FLAG                                    @G24LB02*/ 00621000
*/*                                                          @G24LB02*/ 00622000
*/*  OUTPUTS- ICBI FLAG SET                                  @G24LB02*/ 00623000
*/*           IF LOAD FOR ICBMSG05 FAILS-WTO MESSAGE         @G24LB02*/ 00624000
*/*                                                          @G24LB02*/ 00625000
*/*********************************************************  @G24LB02*/ 00626000
*                                                                  0422 00627000
*FSENTRY:                                                          0422 00628000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @G24LB02*/ 00629000
FSENTRY  DS    0H                                                  0423 00630000
*   RFY                                                            0423 00631000
*     R14 RSTD;                     /* RESTRICT REG 14       @G24LB02*/ 00632000
*   FSENTR14=R14;                   /* SAVE REG 14           @G24LB02*/ 00633000
         ST    R14,FSENTR14                                        0424 00634000
*   RFY                                                            0425 00635000
*     R14 UNRSTD;                   /* FREE REG 14           @G24LB02*/ 00636000
*   DO WHILE INITFLAG^=ON;          /* EXECUTE FSENTRY UNTIL INITLD     00637000
*                                                            @G24LB02*/ 00638000
*                                                                  0426 00639000
         B     @DE00426                                            0426 00640000
@DL00426 DS    0H                                                  0427 00641000
*     /***************************************************************/ 00642000
*     /*                                                             */ 00643000
*     /* CHECK FOR INITIALIZATION AND BROKEN BOX STATUS.     @G24LB02*/ 00644000
*     /* IF MSI HAS NOT BEEN POSTED THEN POST MSI BEFORE WAITING FOR */ 00645000
*     /* A MSC VARY COMMAND                                  @G24LB02*/ 00646000
*     /*                                                             */ 00647000
*     /***************************************************************/ 00648000
*                                                                  0427 00649000
*ICBITEST:                          /* LABEL FOR ICBI/ICBB TEST    0427 00650000
*                                                            @G24LB02*/ 00651000
*     IF(ICBI=OFF&ICBB=ON) THEN                                    0427 00652000
ICBITEST L     @12,ICBPTR                                          0427 00653000
         TM    ICBB(@12),B'00010000'                               0427 00654000
         BNO   @RF00427                                            0427 00655000
         TM    ICBI(@12),B'10000000'                               0427 00656000
         BNZ   @RF00427                                            0427 00657000
*       DO;                         /*                       @G24LB02*/ 00658000
*         IF MSG05FLG=ON THEN                                      0429 00659000
         TM    MSG05FLG,B'01000000'                                0429 00660000
         BNO   @RF00429                                            0429 00661000
*           DO;                     /*                       @G24LB02*/ 00662000
*             WTOGEN03=NOMSS;       /* PUT MSG IN WTO BUFFER @G24LB02*/ 00663000
         MVI   WTOGEN03+50,C' '                                    0431 00664000
         MVC   WTOGEN03+51(22),WTOGEN03+50                         0431 00665000
         MVC   WTOGEN03(50),NOMSS                                  0431 00666000
*             WTOGEN03(51:66)=', REAS CODE=179 ';/* REAS CODE      0432 00667000
*                                                            @G24LB02*/ 00668000
         MVC   WTOGEN03+50(16),@CC02598                            0432 00669000
*             CALL ICBMSG45;        /*                       @G24LB02*/ 00670000
         BAL   @14,ICBMSG45                                        0433 00671000
*             MSG05FLG=OFF;         /* MSG05 NOT IN CONTROL  @G24LB02*/ 00672000
         NI    MSG05FLG,B'10111111'                                0434 00673000
*           END;                    /*                       @G24LB02*/ 00674000
*         ICBCOM=F0;                /* CLEAR COMTASK ECB     @G24LB02*/ 00675000
@RF00429 SLR   @12,@12                                             0436 00676000
         L     @11,ICBPTR                                          0436 00677000
         ST    @12,ICBCOM(,@11)                                    0436 00678000
*         ICBCOMQ=F0;               /* CLEAR COMQUE PTR      @G24LB02*/ 00679000
         ST    @12,ICBCOMQ(,@11)                                   0437 00680000
*         RFY                                                      0438 00681000
*           R2 RSTD;                /* RESTRICT REG 2        @G24LB02*/ 00682000
*         R2=ADDR(ICBCOM);          /* POINT R2 TO ECB       @G24LB02*/ 00683000
         LA    R2,ICBCOM(,@11)                                     0439 00684000
*IWAIT3:                            /* LABEL WAIT            @G24LB02*/ 00685000
*         GEN(WAIT ECB=(R2));       /* ISSUE WAIT            @G24LB02*/ 00686000
IWAIT3   WAIT ECB=(R2)                                                  00687000
*         RFY                                                      0441 00688000
*           R2 UNRSTD;              /* FREE REG 2            @G24LB02*/ 00689000
*                                                                  0441 00690000
*         /***********************************************************/ 00691000
*         /*                                                         */ 00692000
*         /* THE CKUCB ROUTINE WILL PROCESS THE VARY ON      @G24LB02*/ 00693000
*         /* MSC COMMANDS UNTIL A SUCCESSFUL INITIALIZE IS           */ 00694000
*         /* ACCOMPLISHED.                                   @G24LB02*/ 00695000
*         /*                                                         */ 00696000
*         /***********************************************************/ 00697000
*                                                                  0442 00698000
*         CALL CKUCB;               /* PROCESS CWB UCB       @G24LB02*/ 00699000
         BAL   @14,CKUCB                                           0442 00700000
*       END;                        /*                       @G24LB02*/ 00701000
*     IF ICBI^=OFF THEN             /* WAS THE INIT ATTEMPT SUCC   0444 00702000
*                                                            @G24LB02*/ 00703000
@RF00427 L     @12,ICBPTR                                          0444 00704000
         TM    ICBI(@12),B'10000000'                               0444 00705000
         BZ    @RF00444                                            0444 00706000
*       DO;                         /*                       @G24LB02*/ 00707000
*                                                                  0445 00708000
*         /***********************************************************/ 00709000
*         /*                                                         */ 00710000
*         /* A SUCCESSFUL INITIALIZE ACCOMPLISHED, PROCEED   @G24LB02*/ 00711000
*         /* WITH ICBV TEST, MESSAGE BUFFER CLEANUP, READY FUNCTION  */ 00712000
*         /* AND ESTABLISH TIMER INTERRUPT.                  @G24LB02*/ 00713000
*         /*                                                         */ 00714000
*         /***********************************************************/ 00715000
*                                                                  0446 00716000
*         CALL SECENTRY;            /*                       @G24LB02*/ 00717000
         BAL   @14,SECENTRY                                        0446 00718000
*         INITFLAG=ON;              /* INIT IS COMPLETE      @G24LB02*/ 00719000
         OI    INITFLAG,B'00001000'                                0447 00720000
*       END;                        /*                       @G24LB02*/ 00721000
*   END;                            /*                       @G24LB02*/ 00722000
*                                                                  0449 00723000
@RF00444 DS    0H                                                  0449 00724000
@DE00426 TM    INITFLAG,B'00001000'                                0449 00725000
         BNO   @DL00426                                            0449 00726000
*   /*****************************************************************/ 00727000
*   /*                                                               */ 00728000
*   /* IF THE INITFLAG IS NOT SET ON, ANOTHER PASS           @G24LB02*/ 00729000
*   /* WILL BE MADE THROUGH THIS MODULE, THUS CAUSING A WAIT FOR     */ 00730000
*   /* ANOTHER VARY ON MSC COMMAND.                          @G24LB02*/ 00731000
*   /*                                                               */ 00732000
*   /*****************************************************************/ 00733000
*                                                                  0450 00734000
*   RFY                                                            0450 00735000
*     R14 RSTD;                     /* RESTRICT REG 14       @G24LB02*/ 00736000
*   R14=FSENTR14;                   /* RESTORE REG14         @G24LB02*/ 00737000
         L     R14,FSENTR14                                        0451 00738000
*   RFY                                                            0452 00739000
*     R14 UNRSTD;                   /* FREE REG 14           @G24LB02*/ 00740000
*   RETURN;                         /*                       @G24LB02*/ 00741000
@EL00002 DS    0H                                                  0453 00742000
@EF00002 DS    0H                                                  0453 00743000
@ER00002 BR    @14                                                 0453 00744000
*   END FSENTRY;                    /*                       @G24LB02*/ 00745000
*                                                                  0455 00746000
*/********************************************************** @G24LB02*/ 00747000
*/*  PROCEDURE NAME - SECENTRY                               @G24LB02*/ 00748000
*/*                                                          @G24LB02*/ 00749000
*/*  FUNCTION - THE PURPOSES OF THIS SUBROUTINE ARE          @G24LB02*/ 00750000
*/*             AS FOLLOWS:                                  @G24LB02*/ 00751000
*/*             (1) DETERMINE IF PSUEDO VATLIST PROCESSING   @G24LB02*/ 00752000
*/*                 IS NECESSARY.  IF VATLIST PROCESSING     @G24LB02*/ 00753000
*/*                 IS REQUIRED, THEN CALL SUBROUTINE        @G24LB02*/ 00754000
*/*                 VATLIST.                                @G24LB02 */ 00755000
*/*                                                          @G24LB02*/ 00756000
*/*             (2) IF THE MSC HAS BEEN SUSPENDED(ICBS=1)    @G24LB02*/ 00757000
*/*                 THEN MSVC MUST BE ENABLED.(ISSUE MSVC    @G24LB02*/ 00758000
*/*                 ENABLE/DISABLE MACRO)                    @G24LB02*/ 00759000
*/*                                                          @G24LB02*/ 00760000
*/*             (3) DISPATCH THE MSVC TASK                   @G24LB02*/ 00761000
*/*                                                          @G24LB02*/ 00762000
*/*             (4) WAIT FOR THE ICBERP AND ICBECB ECBS TO   @G24LB02*/ 00763000
*/*                 BE POSTED                                @G24LB02*/ 00764000
*/*                                                          @G24LB02*/ 00765000
*/*  INPUTS:  ICBB,ICBI,ICBS                                 @G24LB02*/ 00766000
*/*                                                          @G24LB02*/ 00767000
*/*  OUTPUT:  WTOR FOR PSUEDO VATLIST PROCESSING             @G24LB02*/ 00768000
*/*                                                          @G24LB02*/ 00769000
*/********************************************************** @G24LB02*/ 00770000
*                                                                  0455 00771000
*SECENTRY:                                                         0455 00772000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @G24LB02*/ 00773000
SECENTRY DS    0H                                                  0456 00774000
*   RFY                                                            0456 00775000
*     R14 RSTD;                     /*                       @G24LB02*/ 00776000
*   SECENR14=R14;                   /* SAVE REG 14           @G24LB02*/ 00777000
         ST    R14,SECENR14                                        0457 00778000
*   RFY                                                            0458 00779000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 00780000
*/*   THIS SEGMENT OF CODE SETS UP PARAMETERS TO ENABLE      @G24LB02*/ 00781000
*/*   THE MSVC, INVOKE SVC 126. THE RETURN CODE WILL NOT     @G24LB02*/ 00782000
*/*   BE CHECKED AFTER THE COMPLETION OF THE ENABLE.         @G24LB02*/ 00783000
*                                                                  0459 00784000
*   IF ICBS=ON THEN                 /*                       @G24LB02*/ 00785000
         L     @12,ICBPTR                                          0459 00786000
         TM    ICBS(@12),B'00001000'                               0459 00787000
         BNO   @RF00459                                            0459 00788000
*     DO;                           /* ENABLE MSVC CODE      @G24LB02*/ 00789000
*       ICBS=OFF;                   /* SET SUSPEND OFF       @G24LB02*/ 00790000
         NI    ICBS(@12),B'11110111'                               0461 00791000
*     END;                          /* END ENABLE MSVC CODE  @G24LB02*/ 00792000
*                                                                  0462 00793000
*   /*****************************************************************/ 00794000
*   /*                                                               */ 00795000
*   /* THIS SEGMENT OF CODE MAKES THE MSVC TASK              @G24LB02*/ 00796000
*   /* DISPATCHABLE                                          @G24LB02*/ 00797000
*   /*                                                               */ 00798000
*   /*****************************************************************/ 00799000
*                                                                  0463 00800000
*   ELSE                            /*                       @G24LB02*/ 00801000
*     DO;                           /* DISPATCH THE MSVC TASK      0463 00802000
*                                                            @G24LB02*/ 00803000
         B     @RC00459                                            0463 00804000
@RF00459 DS    0H                                                  0464 00805000
*       RFY                                                        0464 00806000
*         R14 RSTD;                 /*                       @G24LB02*/ 00807000
*       SAVR14=R14;                 /*                       @G24LB02*/ 00808000
         ST    R14,SAVR14                                          0465 00809000
*       RFY                                                        0466 00810000
*         R14 UNRSTD;               /*                       @G24LB02*/ 00811000
*       IF VVICREC=BZERO THEN       /* HAS MSVC BEEN INITL'D?      0467 00812000
*                                                            @G24LB02*/ 00813000
         TM    VVICREC,B'00010000'                                 0467 00814000
         BNZ   @RF00467                                            0467 00815000
*         DO;                       /* NO                    @G24LB02*/ 00816000
*           RESPECIFY                                              0469 00817000
*             R15 RSTD;             /*                       @G24LB02*/ 00818000
*           R15=ICBVN02P;           /*                       @G24LB02*/ 00819000
         L     @12,ICBPTR                                          0470 00820000
         L     R15,ICBVN02P(,@12)                                  0470 00821000
*           GEN(BALR  R14,R15);     /* CALL MSVC INIT        @G24LB02*/ 00822000
         BALR  R14,R15                                                  00823000
*           RESPECIFY                                              0472 00824000
*             R15 UNRSTD;           /*                       @G24LB02*/ 00825000
*           VVICREC=BONE;           /* SET MSVC REC BIT      @G24LB02*/ 00826000
         OI    VVICREC,B'00010000'                                 0473 00827000
*         END;                      /*                       @G24LB02*/ 00828000
*     END;                          /*                       @G24LB02*/ 00829000
@RF00467 DS    0H                                                  0476 00830000
*   RFY                                                            0476 00831000
*     R14 RSTD;                     /*                       @G24LB02*/ 00832000
@RC00459 DS    0H                                                  0477 00833000
*   R14=SECENR14;                   /* RESTORE REGISTER 14   @G24LB02*/ 00834000
         L     R14,SECENR14                                        0477 00835000
*   RFY                                                            0478 00836000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 00837000
*   RETURN;                         /*                       @G24LB02*/ 00838000
@EL00003 DS    0H                                                  0479 00839000
@EF00003 DS    0H                                                  0479 00840000
@ER00003 BR    @14                                                 0479 00841000
*   END SECENTRY;                   /*                       @G24LB02*/ 00842000
*                                                                  0481 00843000
*/*********************************************************  @G24LB02*/ 00844000
*/*                                                          @G24LB02*/ 00845000
*/*  PROCEDURE NAME = CKUCB                                  @G24LB02*/ 00846000
*/*                                                          @G24LB02*/ 00847000
*/*  FUNCTION = THIS ROUTINE WILL PROCESS THE VARIED-ON MSC  @G24LB02*/ 00848000
*/*             UCB.  SUBROUTINE ICBMSG49 WILL ACCOMPLISH    @G24LB02*/ 00849000
*/*             THE MSC VARY PROCESSING.  AFTER THIS         @G24LB02*/ 00850000
*/*             PROCESSING IS DONE AN ATTEMPT WILL BE MADE   @G24LB02*/ 00851000
*/*             TO LOAD ICBMSG05 FOR INITIALIZATION OF THE   @G24LB02*/ 00852000
*/*             MSC UCB.  SUBROUTINES ICBMSG44 AND ICBMSG46  @G24LB02*/ 00853000
*/*             ARE USED TO DEQUEUE AND FREEMAIN CWBS,       @G24LB02*/ 00854000
*/*             RESPECTIVELY.  A MESSAGE WILL BE GIVEN IF    @G24LB02*/ 00855000
*/*             THE INITIALIZATION ATTEMPT FAILED.           @G24LB02*/ 00856000
*/*                                                          @G24LB02*/ 00857000
*/*  INPUT = UCBONLI,UCBNOTRD                                @G24LB02*/ 00858000
*/*                                                          @G24LB02*/ 00859000
*/*  OUTPUT = ICBI,MESSAGE IF INITIALIZATION FAILS           @G24LB02*/ 00860000
*/*                                                          @G24LB02*/ 00861000
*/*********************************************************  @G24LB02*/ 00862000
*                                                                  0481 00863000
*CKUCB:                                                            0481 00864000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @G24LB02*/ 00865000
CKUCB    DS    0H                                                  0482 00866000
*   RFY                                                            0482 00867000
*     R14 RSTD;                     /* RESTRICT REG 14       @G24LB02*/ 00868000
*   CKUCBR14=R14;                   /* SAVE REGISTER 14      @G24LB02*/ 00869000
         ST    R14,CKUCBR14                                        0483 00870000
*   RFY                                                            0484 00871000
*     R14 UNRSTD;                   /* FREE REG 14           @G24LB02*/ 00872000
*   CWBCOMP=OFF;                    /* CLEAR CWB FLAG        @G24LB02*/ 00873000
         NI    CWBCOMP,B'11111011'                                 0485 00874000
*   DO WHILE CWBCOMP^=ON;           /* EXEC LOOP UNTIL ICBCOMQ=0   0486 00875000
*                                                            @G24LB02*/ 00876000
         B     @DE00486                                            0486 00877000
@DL00486 DS    0H                                                  0487 00878000
*CKCWB:                                                            0487 00879000
*     CWBPTR=ICBCOMQ;               /* SETUP CWB POINTER     @G24LB02*/ 00880000
*                                                                  0487 00881000
CKCWB    L     @12,ICBPTR                                          0487 00882000
         L     @12,ICBCOMQ(,@12)                                   0487 00883000
         ST    @12,CWBPTR                                          0487 00884000
*     /***************************************************************/ 00885000
*     /*                                                             */ 00886000
*     /* CHECK TO SEE IF PURGE WAS SPECIFIED ON THE VARY CMD @G24LB02*/ 00887000
*     /* IF SO THEN THE PURGE BIT MUST BE SET .              @G24LB02*/ 00888000
*     /*                                                             */ 00889000
*     /***************************************************************/ 00890000
*                                                                  0488 00891000
*     IF CWBCMND(19:23)='PURGE' THEN                               0488 00892000
         CLC   CWBCMND+18(5,@12),@CC02612                          0488 00893000
         BNE   @RF00488                                            0488 00894000
*       PURGBIT=ON;                 /* SET PURGE INDICATOR   @G24LB02*/ 00895000
         OI    PURGBIT,B'10000000'                                 0489 00896000
*     ELSE                          /*                       @G24LB02*/ 00897000
*       PURGBIT=OFF;                /* SET PURGE INDICATOR   @G24LB02*/ 00898000
*                                                                  0490 00899000
         B     @RC00488                                            0490 00900000
@RF00488 NI    PURGBIT,B'01111111'                                 0490 00901000
*     /***************************************************************/ 00902000
*     /*                                                             */ 00903000
*     /* FOR POST IPL VARY CHECK FOR BOTH PRIMARY AND ALTERNATE UCBS.*/ 00904000
*     /* TRY TO INITIALIZE BOTH UCBS.                        @G24LB02*/ 00905000
*     /*                                                             */ 00906000
*     /***************************************************************/ 00907000
*                                                                  0491 00908000
*     UCBPTR=ICBPUCB;               /* POINT TO PRIM UCB     @G24LB02*/ 00909000
@RC00488 L     @12,ICBPTR                                          0491 00910000
         L     @11,ICBPUCB(,@12)                                   0491 00911000
         ST    @11,UCBPTR                                          0491 00912000
*     IF(CWBCMND(1:3)=ICBPUCB->UCBNAME|CWBCMND(1:3)=ICBAUCB->UCBNAME)   00913000
*       THEN                        /*                       @G24LB02*/ 00914000
         L     @09,CWBPTR                                          0492 00915000
         CLC   CWBCMND(3,@09),UCBNAME(@11)                         0492 00916000
         BE    @RT00492                                            0492 00917000
         L     @12,ICBAUCB(,@12)                                   0492 00918000
         CLC   CWBCMND(3,@09),UCBNAME(@12)                         0492 00919000
         BNE   @RF00492                                            0492 00920000
@RT00492 DS    0H                                                  0493 00921000
*       DO;                         /* IF EITHER UCB SPECIFIED THEN     00922000
*                                      INITIALIZE BOTH       @G24LB02*/ 00923000
*         CALL MSG05LCD;            /* LOAD,CALL&DELETE MSG05      0494 00924000
*                                                            @G24LB02*/ 00925000
         BAL   @14,MSG05LCD                                        0494 00926000
*       END;                        /*                       @G24LB02*/ 00927000
*     ELSE                          /*                       @G24LB02*/ 00928000
*       GOTO NOMSSC;                /* GOTO PRINT NOMSS MSG  @G24LB02*/ 00929000
*                                                                  0496 00930000
*     /***************************************************************/ 00931000
*     /*                                                             */ 00932000
*     /* NEITHER OF THE MSC UCBS COULD BE INITIALIZED        @G24LB02*/ 00933000
*     /* IF ONE OF THE UCBS INITIALIZED SUCCESSFULLY, THEN   @G24LB02*/ 00934000
*     /* MUST CLEANUP CWB(DEQUEUE AND FREEMAIN). RETURN.     @G24LB02*/ 00935000
*     /*                                                             */ 00936000
*     /***************************************************************/ 00937000
*                                                                  0497 00938000
*     IF ICBI=ON THEN               /* INITIALIZE BIT ON?    @G24LB02*/ 00939000
         L     @12,ICBPTR                                          0497 00940000
         TM    ICBI(@12),B'10000000'                               0497 00941000
         BNO   @RF00497                                            0497 00942000
*       DO;                         /* YES, DEQUE AND FREEMAIN CWB 0498 00943000
*                                                            @G24LB02*/ 00944000
*         CWBCOMP=ON;               /* SET SWITCH, CWB PROC COMP   0499 00945000
*                                                            @G24LB02*/ 00946000
         OI    CWBCOMP,B'00000100'                                 0499 00947000
*         CALL ICBMSG44;            /* DEQUEUE SUCCESSFUL CWB      0500 00948000
*                                                            @G24LB02*/ 00949000
         BAL   @14,ICBMSG44                                        0500 00950000
*         CALL ICBMSG46;            /* FREEMAIN DEQUED CWB   @G24LB02*/ 00951000
         BAL   @14,ICBMSG46                                        0501 00952000
*         ICBCOMQ=F0;               /* CLEAR COMQUE POINTER  @G24LB02*/ 00953000
         SLR   @12,@12                                             0502 00954000
         L     @11,ICBPTR                                          0502 00955000
         ST    @12,ICBCOMQ(,@11)                                   0502 00956000
*         ICBCOM=F0;                /* CLEAR COMTASK ECB     @G24LB02*/ 00957000
         ST    @12,ICBCOM(,@11)                                    0503 00958000
*         GOTO CKEXIT;              /*                       @G24LB02*/ 00959000
         B     CKEXIT                                              0504 00960000
*       END;                        /*                       @G24LB02*/ 00961000
*     ELSE                                                         0506 00962000
*       DO;                         /*                       @G24LB02*/ 00963000
@RF00497 DS    0H                                                  0507 00964000
*         IF ICBCOMQ^=F0 THEN       /* IS CWB CHAIN EMPTY?   @G24LB02*/ 00965000
         L     @12,ICBPTR                                          0507 00966000
         L     @12,ICBCOMQ(,@12)                                   0507 00967000
         LTR   @12,@12                                             0507 00968000
         BZ    @RF00507                                            0507 00969000
*           DO;                     /*                       @G24LB02*/ 00970000
*             CALL ICBMSG44;        /* DEQUEUE FAILED CWB    @G24LB02*/ 00971000
         BAL   @14,ICBMSG44                                        0509 00972000
*             CALL ICBMSG46;        /* FREEMAIN FAILED CWB   @G24LB02*/ 00973000
         BAL   @14,ICBMSG46                                        0510 00974000
*             IF ICBCOMQ^=F0 THEN   /* IS CWB CHAIN EMPTY?   @G24LB02*/ 00975000
         L     @12,ICBPTR                                          0511 00976000
         L     @12,ICBCOMQ(,@12)                                   0511 00977000
         LTR   @12,@12                                             0511 00978000
         BNZ   @RT00511                                            0511 00979000
*               GOTO CKCWB;         /* CHECK FOR OTHER CWBS  @G24LB02*/ 00980000
*           END;                    /*                       @G24LB02*/ 00981000
*         ICBCOM=F0;                /* CLEAR COMTASK ECB     @G24LB02*/ 00982000
@RF00507 L     @12,ICBPTR                                          0514 00983000
         SLR   @11,@11                                             0514 00984000
         ST    @11,ICBCOM(,@12)                                    0514 00985000
*         RFY                                                      0515 00986000
*           R2 RSTD;                /* RESTRICT REG 2        @G24LB02*/ 00987000
*         R2=ADDR(ICBCOM);          /* POINT REG 2 TO ECB    @G24LB02*/ 00988000
         LA    R2,ICBCOM(,@12)                                     0516 00989000
*IWAIT7:                            /* LABEL WAIT            @G24LB02*/ 00990000
*         GEN(WAIT ECB=(R2));       /* ISSUE WAIT            @G24LB02*/ 00991000
IWAIT7   WAIT ECB=(R2)                                                  00992000
*         RFY                                                      0518 00993000
*           R2 UNRSTD;              /* FREE REG 2            @G24LB02*/ 00994000
*         GOTO CKCWB;               /* CHECK FOR OTHER CWBS  @G24LB02*/ 00995000
         B     CKCWB                                               0519 00996000
*       END;                        /*                       @G24LB02*/ 00997000
*NOMSSC:                                                           0521 00998000
*     DO;                           /*                       @G24LB02*/ 00999000
*                                                                  0521 01000000
NOMSSC   DS    0H                                                  0522 01001000
*       /*************************************************************/ 01002000
*       /*                                                           */ 01003000
*       /* SEND MSS INOPERATIVE MSG - MSC NOT INITIALIZED    @G24LB02*/ 01004000
*       /*                                                           */ 01005000
*       /*************************************************************/ 01006000
*                                                                  0522 01007000
*       WTOGEN03=NOMSS;             /* LOAD WTO BUFFER       @G24LB02*/ 01008000
         MVI   WTOGEN03+50,C' '                                    0522 01009000
         MVC   WTOGEN03+51(22),WTOGEN03+50                         0522 01010000
         MVC   WTOGEN03(50),NOMSS                                  0522 01011000
*       CALL ICBMSG45;              /* WRITE MSG TO OPR      @G24LB02*/ 01012000
         BAL   @14,ICBMSG45                                        0523 01013000
*       IF ICBCOMQ^=F0 THEN         /*                       @G24LB02*/ 01014000
         L     @12,ICBPTR                                          0524 01015000
         L     @12,ICBCOMQ(,@12)                                   0524 01016000
         LTR   @12,@12                                             0524 01017000
         BZ    @RF00524                                            0524 01018000
*         DO;                       /*                       @G24LB02*/ 01019000
*           CALL ICBMSG44;          /*                       @G24LB02*/ 01020000
         BAL   @14,ICBMSG44                                        0526 01021000
*           CALL ICBMSG46;          /*                       @G24LB02*/ 01022000
         BAL   @14,ICBMSG46                                        0527 01023000
*           IF ICBCOMQ^=F0 THEN     /* IS THE CWB CHAIN EMPTY?     0528 01024000
*                                                            @G24LB02*/ 01025000
         L     @12,ICBPTR                                          0528 01026000
         L     @12,ICBCOMQ(,@12)                                   0528 01027000
         LTR   @12,@12                                             0528 01028000
         BNZ   @RT00528                                            0528 01029000
*             GOTO CKCWB;           /* CHECK FOR OTHER CWBS  @G24LB02*/ 01030000
*         END;                      /*                       @G24LB02*/ 01031000
*       ICBCOM=F0;                  /* CLEAR COMTASK ECB     @G24LB02*/ 01032000
@RF00524 L     @12,ICBPTR                                          0531 01033000
         SLR   @11,@11                                             0531 01034000
         ST    @11,ICBCOM(,@12)                                    0531 01035000
*       RFY                                                        0532 01036000
*         R2 RSTD;                  /* RESTRICT REG 2        @G24LB02*/ 01037000
*       R2=ADDR(ICBCOM);            /* POINT REG 2 TO ECB    @G24LB02*/ 01038000
         LA    R2,ICBCOM(,@12)                                     0533 01039000
*IWAIT5:                            /* LABEL WAIT            @G24LB02*/ 01040000
*       GEN(WAIT ECB=(R2));         /* ISSUE WAIT            @G24LB02*/ 01041000
IWAIT5   WAIT ECB=(R2)                                                  01042000
*       RFY                                                        0535 01043000
*         R2 UNRSTD;                /* FREE REG 2            @G24LB02*/ 01044000
*       GOTO CKCWB;                 /*                       @G24LB02*/ 01045000
         B     CKCWB                                               0536 01046000
*     END;                          /*                       @G24LB02*/ 01047000
*CKEXIT:                                                           0538 01048000
*     RFY                                                          0538 01049000
*       R14 RSTD;                   /* RESTRICT REG 14       @G24LB02*/ 01050000
CKEXIT   DS    0H                                                  0539 01051000
*     R14=CKUCBR14;                 /*                       @G24LB02*/ 01052000
         L     R14,CKUCBR14                                        0539 01053000
*     RFY                                                          0540 01054000
*       R14 UNRSTD;                 /* FREE REG 14           @G24LB02*/ 01055000
*     RETURN;                       /*                       @G24LB02*/ 01056000
@EL00004 DS    0H                                                  0541 01057000
@EF00004 DS    0H                                                  0541 01058000
@ER00004 BR    @14                                                 0541 01059000
*   END;                            /*                       @G24LB02*/ 01060000
@DE00486 TM    CWBCOMP,B'00000100'                                 0542 01061000
         BNO   @DL00486                                            0542 01062000
*   END CKUCB;                      /*                       @G24LB02*/ 01063000
         B     @EL00004                                            0543 01064000
*                                                                  0544 01065000
*/********************************************************** @G24LB02*/ 01066000
*/*                                                          @G24LB02*/ 01067000
*/*  PROCEDURE NAME - MSG05LCD                               @G24LB02*/ 01068000
*/*                                                          @G24LB02*/ 01069000
*/*  FUNCTION - THIS ROUTINE SETS UP ARGUMENTS FOR AND       @G24LB02*/ 01070000
*/*             INVOKES THE LOAD MACRO.  THE LOAD MACRO      @G24LB02*/ 01071000
*/*             WILL CAUSE ICBMSG05 TO BE LOADED INTO THE    @G24LB02*/ 01072000
*/*             SYSTEM. AFTER THE LOAD IS COMPLETED,         @G24LB02*/ 01073000
*/*             IS CALLED TO DO MSC INITIALIZATION.          @G24LB02*/ 01074000
*/*             THE DELETE MACRO IS USED TO DELETE ICBMSG05. @G24LB02*/ 01075000
*/*                                                          @G24LB02*/ 01076000
*/*  INPUT - PARAMETERS ARE SET IN THIS ROUTINE              @G24LB02*/ 01077000
*/*                                                          @G24LB02*/ 01078000
*/*  OUTPUT - R15 IS SET TO THE ADDRESS OF ICBMSG05          @G24LB02*/ 01079000
*/*                                                          @G24LB02*/ 01080000
*/********************************************************   @G24LB02*/ 01081000
*                                                                  0544 01082000
*MSG05LCD:                                                         0544 01083000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @G24LB02*/ 01084000
MSG05LCD DS    0H                                                  0545 01085000
*   RFY                                                            0545 01086000
*     R14 RSTD;                     /*                       @G24LB02*/ 01087000
*   LDMSSR14=R14;                   /* SAVE REG 14           @G24LB02*/ 01088000
         ST    R14,LDMSSR14                                        0546 01089000
*   RFY                                                            0547 01090000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 01091000
*   RFY                                                            0548 01092000
*    (R0,                                                          0548 01093000
*     R1,                                                          0548 01094000
*     R15) RSTD;                    /*                       @G24LB02*/ 01095000
*   GEN REFS(LOADERR) SETS(R0);                                    0549 01096000
*                                                          /*@G24LB02*/ 01097000
LOAD05  LOAD EP=ICBMSG05,ERRET=LOADERR,RELATED=(ICBMSG05,ICB2MSG(CKUCB)*01098000
               )                                             @G24LB02   01099000
*   GOTO LOADGD;                    /* LOAD WAS GOOD, BRANCH @G24LB02*/ 01100000
         B     LOADGD                                              0550 01101000
*LOADERR:                           /*                       @G24LB02*/ 01102000
*   INTER=R1;                       /* CONVERT ERROR RTN     @G24LB02*/ 01103000
LOADERR  ST    R1,INTER                                            0551 01104000
*   FAILCODE=R1;                    /* SAVE FAIL CODE        @G24LB02*/ 01105000
         ST    R1,FAILCODE                                         0552 01106000
*   CALL ICBMSG82;                  /* MAKE RTN PRINTABLE    @G24LB02*/ 01107000
         BAL   @14,ICBMSG82                                        0553 01108000
*   WTOGEN03=MESGS(MSG53301);       /* LOAD MSG BUFFER       @MV44258*/ 01109000
         MVI   WTOGEN03+72,C' '                                    0554 01110000
         L     @14,@CA02101                                        0554 01111000
         MVC   WTOGEN03(72),MESGS-MSGS+3040(@14)                   0554 01112000
*   WTOGEN03(61:63)=BYTES234;       /* ABEND CODE            @G24LB02*/ 01113000
         MVC   WTOGEN03+60(3),BYTES234                             0555 01114000
*   CALL ICBMSG45;                  /*                       @G24LB02*/ 01115000
         BAL   @14,ICBMSG45                                        0556 01116000
*   RFY                                                            0557 01117000
*     R14 RSTD;                     /*                       @G24LB02*/ 01118000
*   R14=LDMSSR14;                   /*                       @G24LB02*/ 01119000
         L     R14,LDMSSR14                                        0558 01120000
*   RFY                                                            0559 01121000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 01122000
*   RETURN;                         /*                       @G24LB02*/ 01123000
@EL00005 DS    0H                                                  0560 01124000
@EF00005 DS    0H                                                  0560 01125000
@ER00005 BR    @14                                                 0560 01126000
*LOADGD:                            /*                       @G24LB02*/ 01127000
*   R15=R0;                         /* SAVE ADDRESS OF ICBMSG05 IN 0561 01128000
*                                      R15                   @G24LB02*/ 01129000
LOADGD   LR    R15,R0                                              0561 01130000
*   R1=PURGPTR;                     /* SET UP PARM POINTER FOR MSG05    01131000
*                                                            @G24LB02*/ 01132000
         L     R1,PURGPTR                                          0562 01133000
*   MSG05FLG=ON;                    /* ICBMSG05 MODULE IN CONTROL  0563 01134000
*                                                            @G24LB02*/ 01135000
         OI    MSG05FLG,B'01000000'                                0563 01136000
*   RFY                                                            0564 01137000
*    (R0,                                                          0564 01138000
*     R1,                                                          0564 01139000
*     R15) UNRSTD;                  /*                       @G24LB02*/ 01140000
*   GEN REFS(R14,R15);                                             0565 01141000
*                                                          /*@G24LB02*/ 01142000
          BALR   R14,R15      BR AND LINK TO ICBMSG05          @G24LB02 01143000
*   MSG05FLG=OFF;                   /* ICBMSG05 NOT IN CONTROL NOW 0566 01144000
*                                                            @G24LB02*/ 01145000
         NI    MSG05FLG,B'10111111'                                0566 01146000
*   GEN;                                                           0567 01147000
DELET05  DELETE EP=ICBMSG05,RELATED=(ICBMSG05,ICB2MSG(CKUCB))  @G24LB02 01148000
*   RFY                                                            0568 01149000
*     R14 RSTD;                     /*                       @G24LB02*/ 01150000
*   R14=LDMSSR14;                   /* RESTORE REGISTER 14   @G24LB02*/ 01151000
         L     R14,LDMSSR14                                        0569 01152000
*   RFY                                                            0570 01153000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 01154000
*   RETURN;                         /*                       @G24LB02*/ 01155000
         B     @EL00005                                            0571 01156000
*   END MSG05LCD;                   /*                       @G24LB02*/ 01157000
*                                                                  0573 01158000
*/*  START OF SPECIFICATIONS ****                             @Y30LB03  01159000
*                                                             @Y30LB03  01160000
*01*  MODULE-NAME = ICBMSG10                                  @Y30LB03  01161000
*                                                             @Y30LB03  01162000
*01*  DESCRIPTIVE-NAME = MSC MESSAGE SUBROUTINE               @Y30LB03  01163000
*                                                             @Y30LB03  01164000
*01*  FUNCTION = PROCESS MESSAGES FROM MSC                    @Y30LB03  01165000
*                                                             @Y30LB03  01166000
*02*  PURPOSE = HANDLE READING OF THE MSC MESSAGE             @Y30LB03  01167000
*                BUFFER AND APPROPRIATE ROUTING TO            @Y30LB03  01168000
*                OTHER SUBROUTINES FOR PROCESSING THE         @Y30LB03  01169000
*                MESSAGE CONTENT. ALSO,TO INTERFACE WITH MSVC @Y30LB03  01170000
*                MODULES (VIA SVC 126) FOR CERTAIN MESSAGES.  @Y30LB03  01171000
*                                                             @Y30LB03  01172000
*02*    INPUT = MSC MESSAGE                                   @Y30LB03  01173000
*                                                             @Y30LB03  01174000
*02*    OUTPUT = PROCESSED MSC MESSAGE                        @Y30LB03  01175000
*                                                             @Y30LB03  01176000
**** END OF SPECIFICATIONS **                                @Y30LB03*/ 01177000
*                                                                  0573 01178000
*ICBMSG10:                                                         0573 01179000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       #Y30LB03*/ 01180000
ICBMSG10 DS    0H                                                  0574 01181000
*/*  ****************************************************    #Y30LB03*/ 01182000
*/*                                                          #Y30LB03*/ 01183000
*/*    THIS SUBROUTINE HANDLES THE READING OF THE MSC        #Y30LB03*/ 01184000
*/*    MESSAGE BUFFER AND APPROPRIATE ROUTING TO OTHER       #Y30LB03*/ 01185000
*/*    SUBROUTINES FOR PROCESSING THE MESSAGE CONTENT.       @Y30LB03*/ 01186000
*/*                                                          @Y30LB03*/ 01187000
*/*  ****************************************************    @Y30LB03*/ 01188000
*                                                                  0574 01189000
*   DCL                                                            0574 01190000
*     SAVRENT FIXED(31);            /* SAVE AREA FOR REENTRY POINT 0574 01191000
*                                                            @G24LB02*/ 01192000
*   DCL                                                            0575 01193000
*     1 USERCB BASED(ICBMSSC),      /* TRAP CONTROL BLOCK    @G24LB02*/ 01194000
*      2 USERX1 PTR(31),            /* SVC EXIT ONE          @G24LB02*/ 01195000
*      2 USERX2 PTR(31),            /* SVC EXIT TWO          @G24LB02*/ 01196000
*      2 USERX3 PTR(31),            /* MSG EXIT ONE          @G24LB02*/ 01197000
*      2 USERX4 PTR(31),            /* MSG EXIT TWO          @G24LB02*/ 01198000
*      2 USERX5 PTR(31);            /* AEA EXIT              @G24LB02*/ 01199000
*   RFY                                                            0576 01200000
*     R14 RSTD;                     /*                       @G24LB02*/ 01201000
*   SAVR1410=R14;                   /* SAVE REG 14           @Y30LB03*/ 01202000
         ST    R14,SAVR1410                                        0577 01203000
*   RFY                                                            0578 01204000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 01205000
*   ICBECB=F0;                      /* CLEAR ICBECB          @Y30LB03*/ 01206000
         SLR   @12,@12                                             0579 01207000
         L     @11,ICBPTR                                          0579 01208000
         ST    @12,ICBECB(,@11)                                    0579 01209000
*/*********************************************************  @Y30LB03*/ 01210000
*/*                                                          @Y30LB03*/ 01211000
*/* TEST TO SEE IF MSC IS ON-LINE                            @Y30LB03*/ 01212000
*/*                                                          @Y30LB03*/ 01213000
*/*********************************************************  @Y30LB03*/ 01214000
*                                                                  0580 01215000
*   UCBPTR=ICBPUCB;                 /* SET UCB BASE TO       @Y30LB03   01216000
*                                      PRIMARY UCB           @Y30LB03*/ 01217000
         L     @11,ICBPUCB(,@11)                                   0580 01218000
         ST    @11,UCBPTR                                          0580 01219000
*   IF UCBONLI=BZERO THEN           /* MSC OFFLINE?          @Y30LB03*/ 01220000
         TM    UCBONLI(@11),B'10000000'                            0581 01221000
         BNZ   @RF00581                                            0581 01222000
*     DO;                           /*                       @Y30LB03*/ 01223000
*       IF REENTRY=ADDR(REINIT) THEN/* DURING INITIALIZATION?      0583 01224000
*                                                            @Y30LB03*/ 01225000
         LA    @11,REINIT                                          0583 01226000
         C     @11,REENTRY                                         0583 01227000
         BNE   @RF00583                                            0583 01228000
*         DO;                       /* YES                   @Y30LB03*/ 01229000
*           CLEANUP=F0;             /* DON'T LOOP WITH MSC OFFLINE 0585 01230000
*                                                            @ZA13488*/ 01231000
         ST    @12,CLEANUP                                         0585 01232000
*           RFY                                                    0586 01233000
*             R14 RSTD;             /*                       @G24LB02*/ 01234000
*           R14=SAVR1410;           /* RESET RETURN POINT    @Y30LB03*/ 01235000
         L     @12,SAVR1410                                        0587 01236000
         LR    R14,@12                                             0587 01237000
*           RFY                                                    0588 01238000
*             R14 UNRSTD;           /*                       @G24LB02*/ 01239000
*           RETURN;                 /* RETURN                @Y30LB03*/ 01240000
@EL00006 DS    0H                                                  0589 01241000
@EF00006 DS    0H                                                  0589 01242000
@ER00006 BR    @14                                                 0589 01243000
*         END;                      /*                       @Y30LB03*/ 01244000
*       ELSE                        /* NOT DURING INITIALIZATION   0591 01245000
*                                                            @Y30LB03*/ 01246000
*         REENTRY=ADDR(WAIT);       /* SET RE-ENTRY POINT    @Y30LB03*/ 01247000
@RF00583 LA    @12,WAIT                                            0591 01248000
         ST    @12,REENTRY                                         0591 01249000
*       CALL ICBMSG35;              /* YES,CALL MSC OFF-     @Y30LB03   01250000
*                                      LINE ROUTINE          @Y30LB03*/ 01251000
         BAL   @14,ICBMSG35                                        0592 01252000
*     END;                          /*                       @Y30LB03*/ 01253000
*/*********************************************************  @Y30LB03*/ 01254000
*/*                                                          @Y30LB03*/ 01255000
*/* THE REMAINING PORTION OF THE SUBRTN IS EXECUTED WHEN     @Y30LB03*/ 01256000
*/* MSC IS ON-LINE                                           @Y30LB03*/ 01257000
*/*                                                          @Y30LB03*/ 01258000
*/*********************************************************  @Y30LB03*/ 01259000
*                                                                  0594 01260000
*   ELSE                            /*                       @Y30LB03*/ 01261000
*     DO;                           /*                       @Y30LB03*/ 01262000
         B     @RC00581                                            0594 01263000
@RF00581 DS    0H                                                  0595 01264000
*       CALL ICBMSG80;              /* CALL I/O INITIALIZATION SUBRTN   01265000
*                                                            @Y30LB03*/ 01266000
         BAL   @14,ICBMSG80                                        0595 01267000
*       MSGPTR=ADDR(BUFFER);        /* LD MSGPTR BUFFER ADDR @ZA05076*/ 01268000
         L     @12,CCWSPTR                                         0596 01269000
         LA    @11,24                                              0596 01270000
         ALR   @11,@12                                             0596 01271000
         ST    @11,MSGPTR                                          0596 01272000
*       MSGL=F0;                    /* ZERO MSG LENGTH       @ZA05076*/ 01273000
         MVI   MSGL(@11),X'00'                                     0597 01274000
*       IOSVST=ADDR(CCWS);          /* ADDR OF THE CCWS      @Y30LB03*/ 01275000
         L     @09,IOSBPTR                                         0598 01276000
         ST    @12,IOSVST(,@09)                                    0598 01277000
*       OPCODE0=F38;                /* INIT OPCODE OF        @YD00154   01278000
*                                      CCW0 TO '26'X         @YD00154*/ 01279000
         MVI   OPCODE0(@12),X'26'                                  0599 01280000
*       DATA0=F0;                   /* INIT DATA0 OF CCW0    @YD00154*/ 01281000
         SLR   @04,@04                                             0600 01282000
         STCM  @04,7,DATA0(@12)                                    0600 01283000
*       FLAGS0=F96;                 /* INIT FLAGS0 OF CCW0   @YD00154   01284000
*                                      TO '60'X              @YD00154*/ 01285000
         MVI   FLAGS0(@12),X'60'                                   0601 01286000
*       COUNT0=F1;                  /* INIT COUNT0 OF CCW0   @YD00154   01287000
*                                      TO '000001'X          @YD00154*/ 01288000
         LA    @15,1                                               0602 01289000
         STCM  @15,7,COUNT0(@12)                                   0602 01290000
*       OPCODE=F6;                  /* INIT OPCODE OF        @Y30LB03   01291000
*                                      CCW TO '06'X          @Y30LB03*/ 01292000
         MVI   OPCODE(@12),X'06'                                   0603 01293000
*       DATA1=ADDR(BUFFER);         /* INIT DATA1 OF CCW     @Y30LB03*/ 01294000
         STCM  @11,7,DATA1(@12)                                    0604 01295000
*       FLAGS=F96;                  /* INIT FLAGS OF CCW     @Y30LB03   01296000
*                                      TO 60                 @YD00154*/ 01297000
         MVI   FLAGS(@12),X'60'                                    0605 01298000
*       COUNT=FF7;                  /* INIT COUNT OF CCW     @ZA08845   01299000
*                                      TO '0000F7'X          @ZA08845*/ 01300000
         MVC   COUNT(3,@12),@CF00741+1                             0606 01301000
*       OPCODE2=F3;                 /* INIT NO-OP CCW        @Y30LB03*/ 01302000
         MVI   OPCODE2(@12),X'03'                                  0607 01303000
*       DATA2=F0;                   /*                       @Y30LB03*/ 01304000
         STCM  @04,7,DATA2(@12)                                    0608 01305000
*       FLAGS2=F0;                  /*                       @Y30LB03*/ 01306000
         MVI   FLAGS2(@12),X'00'                                   0609 01307000
*       COUNT2=F1;                  /*                       @Y30LB03*/ 01308000
         STCM  @15,7,COUNT2(@12)                                   0610 01309000
*       RESPECIFY                                                  0611 01310000
*        (R1,                                                      0611 01311000
*         R13,                                                     0611 01312000
*         R15) RSTD;                /* RESTRICT R1,R13,R15   @Y30LB03*/ 01313000
*       R1=IOSBPTR;                 /* R1 SET TO IOB ADDR    @G24LB02*/ 01314000
*                                                                  0612 01315000
         LR    R1,@09                                              0612 01316000
*       /*************************************************************/ 01317000
*       /*                                                           */ 01318000
*       /* IF ICBMSSC IS NOT ZERO THEN TRAP HAS BEEN SET.    @G24LB02*/ 01319000
*       /* CHECK USER EXIT FOR A NON-ZERO PTR, IF NON-ZERO   @G24LB02*/ 01320000
*       /* THEN BALR TO ADDR IN USERX3 FIELD.                @G24LB02*/ 01321000
*       /*                                                           */ 01322000
*       /*************************************************************/ 01323000
*                                                                  0613 01324000
*       IF ICBMSSC^=F0 THEN         /*                       @G24LB02*/ 01325000
         L     @14,ICBPTR                                          0613 01326000
         L     @14,ICBMSSC(,@14)                                   0613 01327000
         CR    @14,@04                                             0613 01328000
         BE    @RF00613                                            0613 01329000
*         DO;                       /*                       @G24LB02*/ 01330000
*           IF USERX3^=F0 THEN      /*                       @G24LB02*/ 01331000
         C     @04,USERX3(,@14)                                    0615 01332000
         BE    @RF00615                                            0615 01333000
*             DO;                   /*                       @G24LB02*/ 01334000
*               SAVRENT=REENTRY;    /* SAVE REENTRY ADDRESS  @G24LB02*/ 01335000
         L     @14,REENTRY                                         0617 01336000
         ST    @14,SAVRENT                                         0617 01337000
*               REENTRY=ADDR(UEXITR1);/* SET NEW REENTRY     @G24LB02*/ 01338000
         LA    @14,UEXITR1                                         0618 01339000
         ST    @14,REENTRY                                         0618 01340000
*               RFY                                                0619 01341000
*                 R15 RSTD;         /* RESTRICT REG 15       @G24LB02*/ 01342000
*               GEN(STM   0,15,SAVX);/* SAVE REGS            @ZA17151*/ 01343000
         STM   0,15,SAVX                                                01344000
*               R15=USERX3;         /* SET REG 15 TO ENTRY   @ZA17151*/ 01345000
         L     @12,ICBPTR                                          0621 01346000
         L     @12,ICBMSSC(,@12)                                   0621 01347000
         L     R15,USERX3(,@12)                                    0621 01348000
*               GEN(BALR  14,15);   /* BRANCH TO TRAP ROUTINE      0622 01349000
*                                                            @G24LB02*/ 01350000
         BALR  14,15                                                    01351000
*UEXITR1:                           /* LABEL FOR EXIT RETURN @G24LB02*/ 01352000
*               GEN(LM    0,15,SAVX);/* RESTORE REGS         @ZA17151*/ 01353000
UEXITR1  LM    0,15,SAVX                                                01354000
*               REENTRY=SAVRENT;    /* RESTORE REENTRY ADDRESS     0624 01355000
*                                                            @G24LB02*/ 01356000
         L     @14,SAVRENT                                         0624 01357000
         ST    @14,REENTRY                                         0624 01358000
*               RFY                                                0625 01359000
*                 R15 UNRSTD;       /* FREE REG 15           @G24LB02*/ 01360000
*             END;                  /*                       @G24LB02*/ 01361000
*         END;                      /*                       @G24LB02*/ 01362000
@RF00615 DS    0H                                                  0628 01363000
*       RFY                                                        0628 01364000
*         R15 RSTD;                 /*                       @G24LB02*/ 01365000
@RF00613 DS    0H                                                  0629 01366000
*       R1=SRBPTR;                  /* R1 SET TO SRB ADDR    @Y30LB03*/ 01367000
         L     R1,SRBPTR                                           0629 01368000
*       GEN(LA    R13,SAVAREA);     /* RESET SAVE AREA ADDR  @ZA16123*/ 01369000
         LA    R13,SAVAREA                                              01370000
*       R15=ICBSIOP;                /* GET I/O DRVR ADDR     @Y30LB03*/ 01371000
         L     @12,ICBPTR                                          0631 01372000
         L     R15,ICBSIOP(,@12)                                   0631 01373000
*       GEN(BALR  R14,R15);         /* ISSUE I/O             @Y30LB03*/ 01374000
         BALR  R14,R15                                                  01375000
*       RESPECIFY                                                  0633 01376000
*        (R1,                                                      0633 01377000
*         R13) UNRSTD;              /*                       @Y30LB03*/ 01378000
*       IF R15=F0 THEN              /* GOOD RTN?             @Y30LB03*/ 01379000
         LTR   R15,R15                                             0634 01380000
         BNZ   @RF00634                                            0634 01381000
*         DO;                       /* YES,                  @Y30LB03*/ 01382000
*           RESPECIFY                                              0636 01383000
*             R15 UNRSTD;           /* RELEASE R15           @Y30LB03*/ 01384000
*           RESPECIFY                                              0637 01385000
*             R2 RSTD;              /* RESTRICT R2           @Y30LB03*/ 01386000
*           R2=SSCDATAP;            /* R2 SET TO ECB ADDR    @Y30LB03*/ 01387000
         L     R2,SSCDATAP                                         0638 01388000
*IWAIT2:                                                           0639 01389000
*           GEN(WAIT  ECB=(R2));    /* WAIT ON IOECB         @Y30LB03*/ 01390000
IWAIT2   WAIT  ECB=(R2)                                                 01391000
*           RESPECIFY                                              0640 01392000
*            (R1,                                                  0640 01393000
*             R2) UNRSTD;           /* RELEASE REGS          @Y30LB03*/ 01394000
*                                                                  0640 01395000
*           /*********************************************************/ 01396000
*           /*                                                       */ 01397000
*           /* IF ICBMSSC IS NOT ZERO THEN TRAP HAS BEEN SET.        */ 01398000
*           /*                                               @G24LB02*/ 01399000
*           /* CHECK USER EXIT FOR A NON-ZERO PTR, IF NON-ZERO       */ 01400000
*           /*                                               @G24LB02*/ 01401000
*           /* THEN BALR TO ADDR IN USERX4 FIELD.            @G24LB02*/ 01402000
*           /*                                                       */ 01403000
*           /*********************************************************/ 01404000
*                                                                  0641 01405000
*           IF ICBMSSC^=F0 THEN     /*                       @G24LB02*/ 01406000
         SLR   @12,@12                                             0641 01407000
         L     @11,ICBPTR                                          0641 01408000
         L     @11,ICBMSSC(,@11)                                   0641 01409000
         CR    @11,@12                                             0641 01410000
         BE    @RF00641                                            0641 01411000
*             DO;                   /*                       @G24LB02*/ 01412000
*               IF USERX4^=F0 THEN  /*                       @G24LB02*/ 01413000
         C     @12,USERX4(,@11)                                    0643 01414000
         BE    @RF00643                                            0643 01415000
*                 DO;               /*                       @G24LB02*/ 01416000
*                   SAVRENT=REENTRY;/* SAVE REENTRY ADDRESS  @G24LB02*/ 01417000
         L     @12,REENTRY                                         0645 01418000
         ST    @12,SAVRENT                                         0645 01419000
*                   REENTRY=ADDR(UEXITR2);/* SET NEW REENTRY @G24LB02*/ 01420000
         LA    @12,UEXITR2                                         0646 01421000
         ST    @12,REENTRY                                         0646 01422000
*                   RFY                                            0647 01423000
*                    (R1,                                          0647 01424000
*                     R15) RSTD;    /* RESTRICT REG 15       @G24LB02*/ 01425000
*                   R1=IOSBPTR;     /* RESET IOB POINTER     @G24LB02*/ 01426000
         L     R1,IOSBPTR                                          0648 01427000
*                   GEN(STM   0,15,SAVX);/* SAVE REGS        @ZA17151*/ 01428000
         STM   0,15,SAVX                                                01429000
*                   R15=USERX4;     /* SET REG 15 TO ENTRY   @ZA17151*/ 01430000
         L     @12,ICBPTR                                          0650 01431000
         L     @12,ICBMSSC(,@12)                                   0650 01432000
         L     R15,USERX4(,@12)                                    0650 01433000
*                   GEN(BALR  14,15);/* BRANCH TO TRAP ROUTINE     0651 01434000
*                                                            @G24LB02*/ 01435000
         BALR  14,15                                                    01436000
*                   GEN(LM    0,15,SAVX);/* RESTORE REGS     @ZA17151*/ 01437000
         LM    0,15,SAVX                                                01438000
*                   RFY                                            0653 01439000
*                    (R1,                                          0653 01440000
*                     R15) UNRSTD;  /* FREE REG 15           @G24LB02*/ 01441000
*UEXITR2:                           /* LABEL FOR EXIT RETURN @G24LB02*/ 01442000
*                   REENTRY=SAVRENT;/* RESTORE REENTRY ADDRESS     0654 01443000
*                                                            @G24LB02*/ 01444000
UEXITR2  L     @12,SAVRENT                                         0654 01445000
         ST    @12,REENTRY                                         0654 01446000
*                 END;              /*                       @G24LB02*/ 01447000
*             END;                  /*                       @G24LB02*/ 01448000
*                                                                  0656 01449000
@RF00643 DS    0H                                                  0657 01450000
*           /*********************************************************/ 01451000
*           /*                                                       */ 01452000
*           /* END OF TRAP CODE                              @G24LB02*/ 01453000
*           /*                                                       */ 01454000
*           /*********************************************************/ 01455000
*                                                                  0657 01456000
*           IF ECBCODE^=CHAR7F THEN /* POST CODE^='7F'X?(BAD)      0657 01457000
*                                                            @Y30LB03*/ 01458000
@RF00641 L     @12,SSCDATAP                                        0657 01459000
         CLI   ECBCODE(@12),X'7F'                                  0657 01460000
         BE    @RF00657                                            0657 01461000
*             DO;                   /* YES,BAD POST CODE     @Y30LB03*/ 01462000
*               IF REENTRY=ADDR(REINIT) THEN/* DURING INITIALIZATION?   01463000
*                                                            @Y30LB03*/ 01464000
         LA    @12,REINIT                                          0659 01465000
         C     @12,REENTRY                                         0659 01466000
         BNE   @RF00659                                            0659 01467000
*                 DO;               /* YES                   @Y30LB03*/ 01468000
*                   IF NON7F>F12 THEN/* DON'T ALLOW MORE THAN 12 I/O    01469000
*                                      ERRS                  @ZA13488*/ 01470000
         L     @12,NON7F                                           0661 01471000
         C     @12,@CF02050                                        0661 01472000
         BNH   @RF00661                                            0661 01473000
*                     DO;           /* RESET TO STOP LOOP ON I/O ERRS   01474000
*                                                            @ZA13488*/ 01475000
*                       NON7F=F0;   /* RESET I/O ERROR CNTR  @ZA13488*/ 01476000
         SLR   @12,@12                                             0663 01477000
         ST    @12,NON7F                                           0663 01478000
*                       CLEANUP=F0; /* RESET CLEANUP TO GET OUT OF 0664 01479000
*                                      LOOP                  @ZA13488*/ 01480000
         ST    @12,CLEANUP                                         0664 01481000
*                     END;          /*                       @ZA13488*/ 01482000
*                   NON7F=NON7F+F1; /* INCREMENT I/O ERR COUNTER   0666 01483000
*                                                            @ZA13488*/ 01484000
@RF00661 LA    @12,1                                               0666 01485000
         AL    @12,NON7F                                           0666 01486000
         ST    @12,NON7F                                           0666 01487000
*                   RFY                                            0667 01488000
*                     R14 RSTD;     /*                       @G24LB02*/ 01489000
*                   R14=SAVR1410;   /* RESET RETURN POINT    @Y30LB03*/ 01490000
         L     R14,SAVR1410                                        0668 01491000
*                   RFY                                            0669 01492000
*                     R14 UNRSTD;   /*                       @G24LB02*/ 01493000
*                   RETURN;         /* RETURN                @Y30LB03*/ 01494000
         B     @EL00006                                            0670 01495000
*                 END;              /*                       @Y30LB03*/ 01496000
*               ELSE                /* NOT DURING INITIALIZATION   0672 01497000
*                                                            @Y30LB03*/ 01498000
*                 REENTRY=ADDR(ICBMSG30);/* SET RENTRY       @Y30LB03*/ 01499000
@RF00659 LA    @12,ICBMSG30                                        0672 01500000
         ST    @12,REENTRY                                         0672 01501000
*               CALL ICBMSG30;      /* CALL ICBMSG30         @Y30LB03*/ 01502000
         BAL   @14,ICBMSG30                                        0673 01503000
*             END;                  /*                       @Y30LB03*/ 01504000
*           ELSE                    /* NO,GOOD POST CODE     @Y30LB03*/ 01505000
*             DO;                   /* CONTINUE PROCESSING   @Y30LB03   01506000
*                                      MESSAGE               @Y30LB03*/ 01507000
         B     @RC00657                                            0675 01508000
@RF00657 DS    0H                                                  0676 01509000
*               MSGPTR=ADDR(BUFFER);/* LD MSGPTR BUFFER ADDR @Y30LB03*/ 01510000
         LA    @12,24                                              0676 01511000
         AL    @12,CCWSPTR                                         0676 01512000
         ST    @12,MSGPTR                                          0676 01513000
*               LENCNTR=F0;         /* TO CONTAIN TOTAL      @Y30LB03   01514000
*                                      LENGTH OF MSGS        @Y30LB03*/ 01515000
         SLR   @12,@12                                             0677 01516000
         ST    @12,LENCNTR                                         0677 01517000
*/*********************************************************  @Y30LB03*/ 01518000
*/* DEBLOCK AND ROUTE MSGS IN MSG BUFFER                     @Y30LB03*/ 01519000
*/*********************************************************  @Y30LB03*/ 01520000
*                                                                  0678 01521000
*PROCMSG:                                                          0678 01522000
*               DO WHILE(MSGL^=F0&LENCNTR<F248);/* DO IF MSGL^=0   0678 01523000
*                                                            @ZA08845   01524000
*                                      AND TOTAL LENGTH      @Y30LB03   01525000
*                                      < 248                 @ZA08845*/ 01526000
PROCMSG  B     @DE00678                                            0678 01527000
@DL00678 DS    0H                                                  0679 01528000
*                 IF REENTRY^=ADDR(REINIT) THEN/* DURING           0679 01529000
*                                      INITIALIZATION?       @Y30LB03*/ 01530000
         LA    @12,REINIT                                          0679 01531000
         C     @12,REENTRY                                         0679 01532000
         BE    @RF00679                                            0679 01533000
*                   REENTRY=ADDR(PROCMSG);/* NO,SET RE-ENTRY POINT 0680 01534000
*                                                            @Y30LB03*/ 01535000
         LA    @12,PROCMSG                                         0680 01536000
         ST    @12,REENTRY                                         0680 01537000
*                 IF(MSGC='04'X|MSGC='0A'X|/*                @Y30LB03*/ 01538000
*                     MSGC='0D'X|MSGC='83'X) THEN/* MSVC NEED MSG  0681 01539000
*                                                            @Y30LB03*/ 01540000
@RF00679 L     @12,MSGPTR                                          0681 01541000
         CLI   MSGC(@12),4                                         0681 01542000
         BE    @RT00681                                            0681 01543000
         CLI   MSGC(@12),10                                        0681 01544000
         BE    @RT00681                                            0681 01545000
         CLI   MSGC(@12),13                                        0681 01546000
         BE    @RT00681                                            0681 01547000
         CLI   MSGC(@12),131                                       0681 01548000
         BNE   @RF00681                                            0681 01549000
@RT00681 DS    0H                                                  0682 01550000
*                   DO;             /* YES,                  @Y30LB03*/ 01551000
*                     MESLNGTH=MESLEN;/* INIT LENGTH FIELD   @Y30LB03*/ 01552000
         L     @12,MESGPTR                                         0683 01553000
         LH    @11,MESLEN                                          0683 01554000
         ST    @11,MESLNGTH(,@12)                                  0683 01555000
*                     MESOPCD=MESOP;/* INIT OPCODE FIELD     @Y30LB03*/ 01556000
         MVI   MESOPCD(@12),X'86'                                  0684 01557000
*                     MESGBUF=MSG1; /* INIT BUFFER FIELD W/ MSG    0685 01558000
*                                                            @Y30LB03*/ 01559000
         L     @11,MSGPTR                                          0685 01560000
         MVC   MESGBUF(60,@12),MSG1(@11)                           0685 01561000
*                     RESPECIFY                                    0686 01562000
*                      (R0,                                        0686 01563000
*                       R1,                                        0686 01564000
*                       R13,                                       0686 01565000
*                       R15) RSTD;  /*                       @ZA29990*/ 01566000
*                     R0=NULL;      /* CLEAR REG 0           @ZA29990*/ 01567000
         SLR   R0,R0                                               0687 01568000
*                     R1=MESGPTR;   /* LOAD REG1 W ADDR MSG  @ZA29990*/ 01569000
         LR    R1,@12                                              0688 01570000
*                     R15=ICBVVIC;  /* LOAD MSVC ADDRESS     @ZA29990*/ 01571000
         L     @12,ICBPTR                                          0689 01572000
         L     R15,ICBVVIC(,@12)                                   0689 01573000
*                     R13=ADDR(SAVAREA);/* LOAD SAVE AREA ADDR     0690 01574000
*                                                            @ZA29990*/ 01575000
         LA    R13,SAVAREA                                         0690 01576000
*                     GEN(BALR  14,15);/* BRANCH TO MSVC     @ZA29990*/ 01577000
         BALR  14,15                                                    01578000
*                     RESPECIFY                                    0692 01579000
*                      (R0,                                        0692 01580000
*                       R1,                                        0692 01581000
*                       R13,                                       0692 01582000
*                       R15) UNRSTD;/*                       @ZA29990*/ 01583000
*                   END;            /*                       @Y30LB03*/ 01584000
*                 IF MSGC<='70'X THEN/* CODE TO POST ECB ?   @Y30LB03*/ 01585000
@RF00681 L     @12,MSGPTR                                          0694 01586000
         CLI   MSGC(@12),112                                       0694 01587000
         BH    @RF00694                                            0694 01588000
*                   DO;             /* YES, ....             @Y30LB03*/ 01589000
*                     CALL ICBMSG20;/* CALL ROUTINE THAT     @Y30LB03   01590000
*                                      POSTS USER'S ECB      @Y30LB03*/ 01591000
         BAL   @14,ICBMSG20                                        0696 01592000
*                   END;            /*                       @Y30LB03*/ 01593000
*                 ELSE              /* BYPASS POSTING        @Y30LB03*/ 01594000
*                   DO;             /*                       @Y30LB03*/ 01595000
         B     @RC00694                                            0698 01596000
@RF00694 DS    0H                                                  0699 01597000
*                     CALL ICBMSG15;/* CALL WTO SUB-RTN      @Y30LB03*/ 01598000
         BAL   @14,ICBMSG15                                        0699 01599000
*                   END;            /*                       @Y30LB03*/ 01600000
*                 LENCNTR=LENCNTR+MSGL;/* INCR LENGTH CTR    @Y30LB03*/ 01601000
@RC00694 L     @12,MSGPTR                                          0701 01602000
         SLR   @11,@11                                             0701 01603000
         IC    @11,MSGL(,@12)                                      0701 01604000
         L     @09,LENCNTR                                         0701 01605000
         ALR   @09,@11                                             0701 01606000
         ST    @09,LENCNTR                                         0701 01607000
*                 MSGPTR=MSGPTR+MSGL;/* POINT TO NEXT MSG    @Y30LB03*/ 01608000
         ALR   @12,@11                                             0702 01609000
         ST    @12,MSGPTR                                          0702 01610000
*               END;                /*                       @Y30LB03*/ 01611000
@DE00678 L     @12,MSGPTR                                          0703 01612000
         CLI   MSGL(@12),0                                         0703 01613000
         BE    @DC00678                                            0703 01614000
         L     @12,LENCNTR                                         0703 01615000
         C     @12,@CF00741                                        0703 01616000
         BL    @DL00678                                            0703 01617000
@DC00678 DS    0H                                                  0704 01618000
*               CLEANUP=LENCNTR;    /* SET CLEANUP SWITCH--  @Y30LB03   01619000
*                                      0'S IMPLIES HAVE CLEANED    0704 01620000
*                                                            @Y30LB03   01621000
*                                      UP GARBAGE LEFT FROM  @Y30LB03   01622000
*                                      PREVIOUS IPL          @Y30LB03*/ 01623000
         L     @12,LENCNTR                                         0704 01624000
         ST    @12,CLEANUP                                         0704 01625000
*             END;                  /*                       @Y30LB03*/ 01626000
*         END;                      /*                       @Y30LB03*/ 01627000
*       ELSE                        /* I/O DIDN'T WORK       @Y30LB03*/ 01628000
*         CLEANUP=F0;               /* CLEAR CLEAN-UP SWITCH @Y30LB03*/ 01629000
         B     @RC00634                                            0707 01630000
@RF00634 SLR   @12,@12                                             0707 01631000
         ST    @12,CLEANUP                                         0707 01632000
*       RESPECIFY                                                  0708 01633000
*         R15 UNRSTD;               /* RELEASE R15           @Y30LB03*/ 01634000
@RC00634 DS    0H                                                  0709 01635000
*     END;                          /*                       @Y30LB03*/ 01636000
*EXIT10:                                                           0710 01637000
*   RFY                                                            0710 01638000
*     R14 RSTD;                     /*                       @G24LB02*/ 01639000
@RC00581 DS    0H                                                  0710 01640000
EXIT10   DS    0H                                                  0711 01641000
*   R14=SAVR1410;                   /* RESTORE REG 14        @Y30LB03*/ 01642000
         L     R14,SAVR1410                                        0711 01643000
*   RFY                                                            0712 01644000
*     R14 RSTD;                     /*                       @G24LB02*/ 01645000
*   RETURN;                         /* RTN TO ICB2MSG        @Y30LB03*/ 01646000
         B     @EL00006                                            0713 01647000
*   END ICBMSG10;                   /*                       @Y30LB03*/ 01648000
*                                                                  0715 01649000
*/******************************************************     @Z40LB01*/ 01650000
*/*                                                          @Z40LB01*/ 01651000
*/* PROCEDURE NAME - ICBMSG15                                @Z40LB01*/ 01652000
*/*                                                          @Z40LB01*/ 01653000
*/* FUNCTION - THE PRIMARY PURPOSE OF THIS SUBROUTINE IS TO  @Z40LB01*/ 01654000
*/*            TRANSLATE DATA FROM MSC UNSOLICITED MESSAGES  @Z40LB01*/ 01655000
*/*            AND ISSUE WTO MACROS TO WRITE THE TRANSLATED  @Z40LB01*/ 01656000
*/*            MESSAGE TO THE OPERATOR.                      @Z40LB01*/ 01657000
*/*            OTHER FUNCTIONS -                             @Z40LB01*/ 01658000
*/*                    WHEN AN MSC MESSAGE WITH A MESSAGE    @Z40LB01*/ 01659000
*/*            CODE OF X'91' IS RECEIVED WHEN THE MSC HAS    @Z40LB01*/ 01660000
*/*            OFFLOADED ENVIRONMENTAL DATA AND THIS MESSAGE @Z40LB01*/ 01661000
*/*            IS INTERCEPTED AND AND IGNORED.               @Z40LB01*/ 01662000
*/*                     WHEN MESSAGES WITH MESSAGE CODE      @Z40LB01*/ 01663000
*/*            X'92' ARE RECEIVED, A TEST IS MADE OF A FLAG  @Z40LB01*/ 01664000
*/*            (MSG92FLG) AND IF IT IS SET TO B'1' THEN      @Z40LB01*/ 01665000
*/*            THE MESSAGE WAS REQUESTED BY THE DISPLAY      @Z40LB01*/ 01666000
*/*            3850 SUBROUTINE AND EXECUTION IS THEN ROUTED  @Z40LB01*/ 01667000
*/*            TO THE DISPLAY 3850 PROCESSOR SUBROUTINE      @Z40LB01*/ 01668000
*/*            (ICBMSG56). IF THE FLAG IS NOT SET TO B'1'    @Z40LB01*/ 01669000
*/*            THEN EXECUTION IS ROUTED TO THE CONFIG -      @Z40LB01*/ 01670000
*/*            URATION ERROR SUBROUTINE (ICBMSG16) AND       @Z40LB01*/ 01671000
*/*            THE SMF RECORD WRITE SUBROUTINE (ICBMSG17).   @Z40LB01*/ 01672000
*/*                     WHEN MESSAGES WITH MESSAGE CODE      @Z40LB01*/ 01673000
*/*            X'90' ARE RECEIVED, EXECUTION IS ROUTED       @Z40LB01*/ 01674000
*/*            TO THE CONFIGURATION ERROR SUBROUTINE         @Z40LB01*/ 01675000
*/*            (ICBMSG16.                                    @Z40LB01*/ 01676000
*/*                                                          @Z40LB01*/ 01677000
*/* INPUTS - MSGPTR SET                                      @Z40LB01*/ 01678000
*/*                                                          @Z40LB01*/ 01679000
*/* OUTPUTS - WTO MESSAGES FOR UNSOLICITED MSC MESSAGES.     @Z40LB01*/ 01680000
*/*                                                          @Z40LB01*/ 01681000
*/* MESSAGES ISSUED -                                        @Z40LB01*/ 01682000
*/*         ICB080I                                          @Z40LB01*/ 01683000
*/*         ICB081I                                          @Z40LB01*/ 01684000
*/*         ICB082I                                          @Z40LB01*/ 01685000
*/*         ICB083I                                          @Z40LB01*/ 01686000
*/*         ICB084I                                          @Z40LB01*/ 01687000
*/*         ICB085I                                          @Z40LB01*/ 01688000
*/*         ICB093I                                          @Z40LB01*/ 01689000
*/*         ICB100I                                          @Z40LB01*/ 01690000
*/*         ICB095A                                          @Z40LB01*/ 01691000
*/*         ICB096D                                          @ZA32787*/ 01692000
*/*         ICB097I                                          @Z40LB01*/ 01693000
*/*         ICB098I                                          @Z40LB01*/ 01694000
*/*         ICB101I                                          @Z40LB01*/ 01695000
*/*         ICB102E                                          @ZA17153*/ 01696000
*/*         ICB194E                                          @Z40LB01*/ 01697000
*/*                                                          @Z40LB01*/ 01698000
*/******************************************************     @Z40LB01*/ 01699000
*                                                                  0715 01700000
*ICBMSG15:                                                         0715 01701000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @XD00086*/ 01702000
ICBMSG15 DS    0H                                                  0716 01703000
*   DCL                                                            0716 01704000
*     CHAR1F BIT(8) INIT('1F'X);    /* HEX 1F                @Z40LB01*/ 01705000
*   DCL                                                            0717 01706000
*     1 MSG15SW BIT(8),             /* BIT SWITCHES          @Z40LB01*/ 01707000
*      2 DESC2 BIT(1),              /* DESC CODE 2 NEEDED    @Z40LB01*/ 01708000
*      2 DESC3 BIT(1),              /* DESC CODE 3 NEEDED    @Z40LB01*/ 01709000
*      2 ROUT24 BIT(1),             /* ROUT 2 AND 4          @Z40LB01*/ 01710000
*      2 WTOOK BIT(1),              /* WTO SWITCH            @Z40LB01*/ 01711000
*      2 * BIT(4);                  /* RESERVED              @Z40LB01*/ 01712000
*   DCL                                                            0718 01713000
*     DESCR2 BIT(16) INIT('4000'X); /* DESC 2 BYTES          @Z40LB01*/ 01714000
*   DCL                                                            0719 01715000
*     DESCR3 BIT(16) INIT('2000'X); /* DESC 3 BYTES          @Z40LB01*/ 01716000
*   DCL                                                            0720 01717000
*     SAVDESC BIT(16);              /* SAVE ORIG DESC        @Z40LB01*/ 01718000
*   DCL                                                            0721 01719000
*     ROUTE24 BIT(16) INIT('5000'X);/* ROUT CODE 24          @Z40LB01*/ 01720000
*   DCL                                                            0722 01721000
*     SAVROUT BIT(16);              /* SAVE ORIG ROUTE CODE  @Z40LB01*/ 01722000
*/********************************************************   @Z40LB01*/ 01723000
*/* FORMAT OF LZYX IN MSG                                    @Z40LB01*/ 01724000
*/********************************************************   @Z40LB01*/ 01725000
*                                                                  0723 01726000
*   DCL                                                            0723 01727000
*     LZYXPTR PTR(31);              /* BASE POINTER          @ZA17153*/ 01728000
*   DCL                                                            0724 01729000
*     1 MSGLZYX FIXED(16) BASED(LZYXPTR),/*                  @ZA17153*/ 01730000
*      2 MSGFLZY FIXED(8),          /* MSF, Z LOC            @Z40LB01   01731000
*                                      AND Y LOC ARE IN THIS @Z40LB01   01732000
*                                      BYTE                  @Z40LB01*/ 01733000
*       3 MSGCY CHAR(1),            /* Y IN CHARACTER -      @Z40LB01   01734000
*                                      (AFTER BITS0-2 0'D    @Z40LB01*/ 01735000
*        4 MSGLZY BIT(8),           /* BIT REP OF BYTE       @Z40LB01*/ 01736000
*      2 MSGCX CHAR(1),             /* X LOC IN CHARACTER    @Z40LB01*/ 01737000
*       3 MSGFX FIXED(8);           /* X LOC IN FIXED REP    @Z40LB01*/ 01738000
*/********************************************************   @Z40LB01*/ 01739000
*/* DATA AREA THAT IS FILLED WITH PRINTABLE MSF,             @Z40LB01*/ 01740000
*/*Z,Y, AND X LOCATIONS.  IT IS THIS FIELD THAT IS FINALLY   @Z40LB01*/ 01741000
*/*INSERTED INTO TO MSG TO BE WTO'D                          @Z40LB01*/ 01742000
*/*********************************************************  @Z40LB01*/ 01743000
*                                                                  0725 01744000
*   DCL                                                            0725 01745000
*     1 PRNTLZYX,                   /*                       @Z40LB01*/ 01746000
*      2 PRINTL CHAR(1),            /* MSF                   @Z40LB01*/ 01747000
*      2 PRINTX CHAR(3),            /* X LOCATION            @Z40LB01*/ 01748000
*      2 PRINTY CHAR(2),            /* Y LOCATION            @Z40LB01*/ 01749000
*      2 PRINTZ CHAR(1);            /* Z LOCATION            @Z40LB01*/ 01750000
*/********************************************************   @ZA17153*/ 01751000
*/*  REDEFINED STATUS BYTE FOR MSC MSG CODE 9C               @ZA17153*/ 01752000
*/********************************************************   @ZA17153*/ 01753000
*                                                                  0726 01754000
*   DCL                                                            0726 01755000
*     1 STATBYTE BIT(16) BASED(MSGPTR+2),/*                  @ZA17153*/ 01756000
*      2 BADLAB BIT(1),             /* LABEL UNREADABLE FLAG @ZA17153*/ 01757000
*      2 * BIT(15);                 /*                       @ZA17153*/ 01758000
*   DCL                                                            0727 01759000
*     LNOT CHAR(4) INIT('NOT ');    /* LIT NOT FOR 83 MSG    @ZA09555*/ 01760000
*   DCL                                                            0728 01761000
*     LALSO CHAR(4) INIT('ALSO');   /* LIT ALSO FOR 83 MSG   @ZA09555*/ 01762000
*   DCL                                                            0729 01763000
*     CMMA CHAR(1) INIT(',');       /* LIT COMMA FOR MSGS    @ZA17153*/ 01764000
*   RFY                                                            0730 01765000
*     R14 RSTD;                     /*                       @G24LB02*/ 01766000
*   SAVR1415=R14;                   /*                       @Z40LB01*/ 01767000
         ST    R14,SAVR1415                                        0731 01768000
*   RFY                                                            0732 01769000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 01770000
*   MSG15SW=''B;                    /* CLEAR LOCAL SWITCHES  @Z40LB01*/ 01771000
         MVI   MSG15SW,X'00'                                       0733 01772000
*   SAVROUT=WTOGEN05;               /* SAVE ORIG ROUT CODE   @Z40LB01*/ 01773000
         MVC   SAVROUT(2),WTOGEN05                                 0734 01774000
*   SAVDESC=WTOGEN04;               /* SAVE ORIG DESC CODE   @Z40LB01*/ 01775000
         MVC   SAVDESC(2),WTOGEN04                                 0735 01776000
*/*************************************************          @Z40LB01*/ 01777000
*/* CHECK FOR A MSG CODE OF '92'X AND IF THE DISPLAY REQUEST @Z40LB01*/ 01778000
*/* FLAG (MSG92FLG) IS SET TO '1'B ROUTE EXECUTION TO THE    @Z40LB01*/ 01779000
*/* DISPLAY PROCESSOR ROUTINE ICBMSG56.                      @Z40LB01*/ 01780000
*/*************************************************          @Z40LB01*/ 01781000
*                                                                  0736 01782000
*   IF MSGC='92'X&MSG92FLG=BONE THEN/* MSG FOR DISPLAY       @Z40LB01*/ 01783000
         L     @12,MSGPTR                                          0736 01784000
         CLI   MSGC(@12),146                                       0736 01785000
         BNE   @RF00736                                            0736 01786000
         TM    MSG92FLG,B'10000000'                                0736 01787000
         BNO   @RF00736                                            0736 01788000
*     DO;                           /*                       @ZA16123*/ 01789000
*       MSG92FLG=BZERO;             /* RESET MSG92 FLAG      @ZA16123*/ 01790000
         NI    MSG92FLG,B'01111111'                                0738 01791000
*       GEN(LA    R13,SAVAREA);     /* SET SAVE AREA ADDR    @ZA16123*/ 01792000
         LA    R13,SAVAREA                                              01793000
*       CALL ICBMSG56;              /* CALL DISPLAY SUB      @Z40LB01*/ 01794000
         L     @15,@CV00087                                        0740 01795000
         BALR  @14,@15                                             0740 01796000
*     END;                          /*                       @ZA16123*/ 01797000
*/*************************************************          @Z40LB01*/ 01798000
*/* CHECK FOR MSG CODE OF '90'X OR '92'X                     @Z40LB01*/ 01799000
*/*************************************************          @Z40LB01*/ 01800000
*                                                                  0742 01801000
*   ELSE                            /*                       @Z40LB01*/ 01802000
*     IF(MSGC='90'X|MSGC='92'X) THEN/*                       @Z40LB01*/ 01803000
         B     @RC00736                                            0742 01804000
@RF00736 L     @12,MSGPTR                                          0742 01805000
         CLI   MSGC(@12),144                                       0742 01806000
         BE    @RT00742                                            0742 01807000
         CLI   MSGC(@12),146                                       0742 01808000
         BNE   @RF00742                                            0742 01809000
@RT00742 DS    0H                                                  0743 01810000
*       CALL ICBMSG18;              /* CALL CONFIG SUBRTN    @Z40LB01*/ 01811000
         BAL   @14,ICBMSG18                                        0743 01812000
*                                                                  0744 01813000
*/*********************************************************  @Z40LB01*/ 01814000
*/* USING THE MESSAGE CODE CONTAINED IN THE MSC MESSAGE,     @Z40LB01*/ 01815000
*/* FIND THE APPROPRIATE SKELETON MESSAGE TEXT AND FILL      @Z40LB01*/ 01816000
*/* THE APPROPRIATE DATA FIELDS FROM THE MSC MESSAGE.        @Z40LB01*/ 01817000
*/*********************************************************  @Z40LB01*/ 01818000
*                                                                  0744 01819000
*     ELSE                          /* UNSOLICITED MESSAGE PROCESS 0744 01820000
*                                                            @Z40LB01*/ 01821000
*       DO;                         /*                       @Z40LB01*/ 01822000
*                                                                  0744 01823000
         B     @RC00742                                            0744 01824000
@RF00742 DS    0H                                                  0745 01825000
*         /***********************************************************/ 01826000
*         /*                                                         */ 01827000
*         /* CERTAIN MESSAGES REQUIRE THE LZYX CARTRIDGE LOCATION    */ 01828000
*         /*                                                 @Z40LB01*/ 01829000
*         /* WHICH MUST BE TRANSLATED TO PRINTABLE CHARACTERS.       */ 01830000
*         /*                                                 @Z40LB01*/ 01831000
*         /*                                                         */ 01832000
*         /***********************************************************/ 01833000
*                                                                  0745 01834000
*         IF MSGC='80'X|            /* UNSOLICITED MSG 80    @Z40LB01*/ 01835000
*             MSGC='81'X|           /* UNSOLICITED MSG 81    @Z40LB01*/ 01836000
*             MSGC='82'X|           /* UNSOLICITED MSG 82    @Z40LB01*/ 01837000
*             MSGC='83'X|           /* UNSOLICITED MSG 83    @ZA17153*/ 01838000
*             MSGC='9C'X THEN       /* UNSOLICITED MSG 9C    @ZA17153*/ 01839000
         L     @12,MSGPTR                                          0745 01840000
         CLI   MSGC(@12),128                                       0745 01841000
         BE    @RT00745                                            0745 01842000
         CLI   MSGC(@12),129                                       0745 01843000
         BE    @RT00745                                            0745 01844000
         CLI   MSGC(@12),130                                       0745 01845000
         BE    @RT00745                                            0745 01846000
         CLI   MSGC(@12),131                                       0745 01847000
         BE    @RT00745                                            0745 01848000
         CLI   MSGC(@12),156                                       0745 01849000
         BNE   @RF00745                                            0745 01850000
@RT00745 DS    0H                                                  0746 01851000
*           DO;                     /* THESE MESSAGES REQUIRE LZYX 0746 01852000
*                                      DATA TRANSLATED       @Z40LB01*/ 01853000
*             IF MSGC='9C'X THEN    /* FOR 9C LZYX IS OFFSET 17    0747 01854000
*                                                            @ZA17153*/ 01855000
         L     @12,MSGPTR                                          0747 01856000
         CLI   MSGC(@12),156                                       0747 01857000
         BNE   @RF00747                                            0747 01858000
*               LZYXPTR=MSGPTR+16;  /* SET LZYX FIELD POINTER      0748 01859000
*                                                            @ZA17153*/ 01860000
         AL    @12,@CF00090                                        0748 01861000
         ST    @12,LZYXPTR                                         0748 01862000
*             ELSE                  /* OTHER LZYX FLDS AT OFFSET 3 0749 01863000
*                                                            @ZA17153*/ 01864000
*               LZYXPTR=MSGPTR+2;   /* SET LZYX FIELD POINTER      0749 01865000
*                                                            @ZA17153*/ 01866000
         B     @RC00747                                            0749 01867000
@RF00747 LA    @12,2                                               0749 01868000
         AL    @12,MSGPTR                                          0749 01869000
         ST    @12,LZYXPTR                                         0749 01870000
*             IF MSGLZY(1:2)=B2ZERO THEN/* MSF 0?            @Z40LB01*/ 01871000
@RC00747 L     @12,LZYXPTR                                         0750 01872000
         TM    MSGLZY(@12),B'11000000'                             0750 01873000
         BNZ   @RF00750                                            0750 01874000
*               PRINTL='F0'X;       /* YES,INIT AS SUCH      @Z40LB01*/ 01875000
         MVI   PRINTL,X'F0'                                        0751 01876000
*             ELSE                  /* NO,CHECK NEXT CASE    @Z40LB01*/ 01877000
*               IF MSGLZY(1:2)=B2ZERONE THEN/* IS THIS MSF 1?      0752 01878000
*                                                            @Z40LB01*/ 01879000
         B     @RC00750                                            0752 01880000
@RF00750 L     @12,LZYXPTR                                         0752 01881000
         TM    MSGLZY(@12),B'01000000'                             0752 01882000
         BNO   @RF00752                                            0752 01883000
         TM    MSGLZY(@12),B'10000000'                             0752 01884000
         BNZ   @RF00752                                            0752 01885000
*                 PRINTL='F1'X;     /* YES,INIT AS SUCH      @Z40LB01*/ 01886000
         MVI   PRINTL,X'F1'                                        0753 01887000
*               ELSE                /* NO,CHECK NEXT CASE    @Z40LB01*/ 01888000
*                 IF MSGLZY(1:2)=B2ONEZER THEN/* IS THIS MSF 2?    0754 01889000
*                                                            @Z40LB01*/ 01890000
         B     @RC00752                                            0754 01891000
@RF00752 L     @12,LZYXPTR                                         0754 01892000
         TM    MSGLZY(@12),B'10000000'                             0754 01893000
         BNO   @RF00754                                            0754 01894000
         TM    MSGLZY(@12),B'01000000'                             0754 01895000
         BNZ   @RF00754                                            0754 01896000
*                   PRINTL='F2'X;   /* YES,INIT AS SUCH      @Z40LB01*/ 01897000
         MVI   PRINTL,X'F2'                                        0755 01898000
*                 ELSE              /* HAS TO BE MSF 3       @Z40LB01*/ 01899000
*                   PRINTL='F3'X;   /* INIT AS 3             @Z40LB01*/ 01900000
*                                                                  0756 01901000
         B     @RC00754                                            0756 01902000
@RF00754 MVI   PRINTL,X'F3'                                        0756 01903000
*             /*******************************************************/ 01904000
*             /*                                                     */ 01905000
*             /* NOW, CONVERT Z LOCATION                     @Z40LB01*/ 01906000
*             /*                                                     */ 01907000
*             /*******************************************************/ 01908000
*                                                                  0757 01909000
*             IF MSGLZY(3:3)=BZERO THEN/* IS Z 0?            @Z40LB01*/ 01910000
@RC00754 DS    0H                                                  0757 01911000
@RC00752 DS    0H                                                  0757 01912000
@RC00750 L     @12,LZYXPTR                                         0757 01913000
         TM    MSGLZY(@12),B'00100000'                             0757 01914000
         BNZ   @RF00757                                            0757 01915000
*               PRINTZ='F0'X;       /* INIT Z AS ZERO        @Z40LB01*/ 01916000
         MVI   PRINTZ,X'F0'                                        0758 01917000
*             ELSE                  /* NO,HAS TO BE 1        @Z40LB01*/ 01918000
*               PRINTZ='F1'X;       /* INIT Z AS ONE         @Z40LB01*/ 01919000
*                                                                  0759 01920000
         B     @RC00757                                            0759 01921000
@RF00757 MVI   PRINTZ,X'F1'                                        0759 01922000
*             /*******************************************************/ 01923000
*             /*                                                     */ 01924000
*             /* ZERO THESE 3 BITS THAT HAVE                 @Z40LB01*/ 01925000
*             /* JUST BEEN CONVERTED TO                      @Z40LB01*/ 01926000
*             /* PRINTABLE CHARACTERS                        @Z40LB01*/ 01927000
*             /*                                                     */ 01928000
*             /*******************************************************/ 01929000
*                                                                  0760 01930000
*             MSGLZY=MSGLZY&CHAR1F; /*                       @Z40LB01*/ 01931000
*                                                                  0760 01932000
@RC00757 L     @12,LZYXPTR                                         0760 01933000
         NC    MSGLZY(1,@12),CHAR1F                                0760 01934000
*             /*******************************************************/ 01935000
*             /*                                                     */ 01936000
*             /* NOW, MSGCY CONTAINS Y LOCATION              @Z40LB01*/ 01937000
*             /* ONLY (ANOTHER NAME FOR MSGLZY)              @Z40LB01*/ 01938000
*             /*                                                     */ 01939000
*             /*******************************************************/ 01940000
*                                                                  0761 01941000
*             INTER=''B;            /* INIT FIELD            @Z40LB01*/ 01942000
         XC    INTER(4),INTER                                      0761 01943000
*             BYTE4=MSGCY;          /* PUT Y LOC IN LAST BYTE      0762 01944000
*                                                            @Z40LB01*/ 01945000
         SLR   @11,@11                                             0762 01946000
         IC    @11,MSGCY(,@12)                                     0762 01947000
         STC   @11,BYTE4                                           0762 01948000
*             CVD(BYTE4,INTER);     /* CONVERT Y TO DECIMAL  @Z40LB01*/ 01949000
         CVD   @11,@TS00001                                        0763 01950000
         MVC   INTER(4),@TS00001+4                                 0763 01951000
*             INTER=INTER/F16;      /* CLEAR SIGN            @Z40LB01*/ 01952000
         L     @12,INTER                                           0764 01953000
         SRL   @12,4                                               0764 01954000
         ST    @12,INTER                                           0764 01955000
*             CALL ICBMSG82;        /* CONV SUB ROUTINE      @Z40LB01*/ 01956000
         BAL   @14,ICBMSG82                                        0765 01957000
*             PRINTY=BYTES34;       /* FILL IN CONVERTED Y LOC     0766 01958000
*                                                            @Z40LB01*/ 01959000
*                                                                  0766 01960000
         MVC   PRINTY(2),BYTES34                                   0766 01961000
*             /*******************************************************/ 01962000
*             /*                                                     */ 01963000
*             /* HAVE TO CONVERT X LOC YET                   @Z40LB01*/ 01964000
*             /*                                                     */ 01965000
*             /*******************************************************/ 01966000
*                                                                  0767 01967000
*             INTER=''B;            /* INIT FIELD            @Z40LB01*/ 01968000
         XC    INTER(4),INTER                                      0767 01969000
*             BYTE4=MSGCX;          /* PUT X LOC IN LAST BYTE      0768 01970000
*                                                            @Z40LB01*/ 01971000
         L     @12,LZYXPTR                                         0768 01972000
         SLR   @11,@11                                             0768 01973000
         IC    @11,MSGCX(,@12)                                     0768 01974000
         STC   @11,BYTE4                                           0768 01975000
*             CVD(BYTE4,INTER);     /* CONVERT X TO DECIMAL  @Z40LB01*/ 01976000
         CVD   @11,@TS00001                                        0769 01977000
         MVC   INTER(4),@TS00001+4                                 0769 01978000
*             INTER=INTER/F16;      /* CLEAR SIGN            @Z40LB01*/ 01979000
         L     @12,INTER                                           0770 01980000
         SRL   @12,4                                               0770 01981000
         ST    @12,INTER                                           0770 01982000
*             CALL ICBMSG82;        /* CONV SUB ROUTINE      @Z40LB01*/ 01983000
         BAL   @14,ICBMSG82                                        0771 01984000
*             PRINTX=BYTES234;      /* FILL IN CONVERTED X LOC     0772 01985000
*                                                            @Z40LB01*/ 01986000
         MVC   PRINTX(3),BYTES234                                  0772 01987000
*           END;                    /* END OF LXYZ TRANSLATION     0773 01988000
*                                                            @Z40LB01*/ 01989000
*                                                                  0774 01990000
*         /***********************************************************/ 01991000
*         /*                                                         */ 01992000
*         /* ***************************************************     */ 01993000
*         /*                                                 @Z40LB01*/ 01994000
*         /* THE FOLLOWING CODE INDEXES TO THE MESSAGE SKELETON      */ 01995000
*         /*                                                 @Z40LB01*/ 01996000
*         /* FOR UNSOLICITED MSC MESSAGE CODE 80 AND MOVES THE       */ 01997000
*         /*                                                 @Z40LB01*/ 01998000
*         /* APPROPRIATE DATA FROM THE MSC MESSAGE BUFFER TO THE     */ 01999000
*         /*                                                 @Z40LB01*/ 02000000
*         /* WTO MESSAGE SKELETON.                           @Z40LB01*/ 02001000
*         /* ***************************************************     */ 02002000
*         /*                                                 @Z40LB01*/ 02003000
*         /*                                                         */ 02004000
*         /***********************************************************/ 02005000
*                                                                  0774 02006000
*         IF MSGC='80'X THEN        /*                       @Z40LB01*/ 02007000
@RF00745 L     @12,MSGPTR                                          0774 02008000
         CLI   MSGC(@12),128                                       0774 02009000
         BNE   @RF00774                                            0774 02010000
*           DO;                     /* INDEX TO MESSAGE 80 AND FILL     02011000
*                                      MSG VARIABLES         @Z40LB01*/ 02012000
*             WTOOK=BONE;           /* SET WTO SWITCH        @Z40LB01*/ 02013000
         OI    WTOOK,B'00010000'                                   0776 02014000
*             WTOGEN03=MESGS(MSG08001);/* FILL WTO BUFFER    @Z40LB01*/ 02015000
         MVI   WTOGEN03+72,C' '                                    0777 02016000
         L     @12,@CA02101                                        0777 02017000
         MVC   WTOGEN03(72),MESGS-MSGS(@12)                        0777 02018000
*             WTOGEN03(34:34)=PRNTLZYX(1:1);/* LIB ID        @Z40LB01*/ 02019000
         MVC   WTOGEN03+33(1),PRNTLZYX                             0778 02020000
*             WTOGEN03(41:46)=PRNTLZYX(2:7);/* CART LOC      @Z40LB01*/ 02021000
         MVC   WTOGEN03+40(6),PRNTLZYX+1                           0779 02022000
*           END;                    /* END MSG 80 PROCESS    @Z40LB01   02023000
*                                                            @Z40LB01*/ 02024000
*                                                                  0780 02025000
*         /***********************************************************/ 02026000
*         /*                                                         */ 02027000
*         /* ***************************************************     */ 02028000
*         /*                                                 @Z40LB01*/ 02029000
*         /* THE FOLLOWING CODE INDEXES TO THE MESSAGE SKELETON      */ 02030000
*         /*                                                 @Z40LB01*/ 02031000
*         /* FOR UNSOLICITED MSC MESSAGE CODE 81 AND MOVES THE       */ 02032000
*         /*                                                 @Z40LB01*/ 02033000
*         /* APPROPRIATE DATA FROM THE MSC MESSAGE BUFFER TO THE     */ 02034000
*         /*                                                 @Z40LB01*/ 02035000
*         /* WTO MESSAGE SKELETON.                           @Z40LB01*/ 02036000
*         /* ***************************************************     */ 02037000
*         /*                                                 @Z40LB01*/ 02038000
*         /*                                                         */ 02039000
*         /***********************************************************/ 02040000
*                                                                  0781 02041000
*         ELSE                      /*                       @Z40LB01*/ 02042000
*           IF MSGC='81'X THEN      /*                       @Z40LB01*/ 02043000
         B     @RC00774                                            0781 02044000
@RF00774 L     @12,MSGPTR                                          0781 02045000
         CLI   MSGC(@12),129                                       0781 02046000
         BNE   @RF00781                                            0781 02047000
*             DO;                   /* INDEX TO MESSAGE 81 AND FILL     02048000
*                                      MSG VARIABLES         @Z40LB01*/ 02049000
*               WTOOK=BONE;         /* SET WTO SWITCH        @Z40LB01*/ 02050000
         OI    WTOOK,B'00010000'                                   0783 02051000
*               WTOGEN03=MESGS(MSG08101);/* FILL WTO BUFFER  @Z40LB01*/ 02052000
         MVI   WTOGEN03+72,C' '                                    0784 02053000
         L     @11,@CA02101                                        0784 02054000
         MVC   WTOGEN03(72),MESGS-MSGS+76(@11)                     0784 02055000
*               WTOGEN03(62:67)=PRNTLZYX(2:7);/* CART LOC    @Z40LB01*/ 02056000
         MVC   WTOGEN03+61(6),PRNTLZYX+1                           0785 02057000
*               WTOGEN03(55:55)=PRNTLZYX(1:1);/* LIB ID      @Z40LB01*/ 02058000
         MVC   WTOGEN03+54(1),PRNTLZYX                             0786 02059000
*               WTOGEN03(13:24)=MSGDATA(3:14);/* CSN NO.     @Z40LB01*/ 02060000
         MVC   WTOGEN03+12(12),MSGDATA+2(@12)                      0787 02061000
*             END;                  /* END MSG 81 PROCESS    @Z40LB01   02062000
*                                                            @Z40LB01*/ 02063000
*                                                                  0788 02064000
*         /***********************************************************/ 02065000
*         /*                                                         */ 02066000
*         /* ***************************************************     */ 02067000
*         /*                                                 @Z40LB01*/ 02068000
*         /* THE FOLLOWING CODE INDEXES TO THE MESSAGE SKELETON      */ 02069000
*         /*                                                 @Z40LB01*/ 02070000
*         /* FOR UNSOLICITED MSC MESSAGE CODE 82 AND MOVES THE       */ 02071000
*         /*                                                 @Z40LB01*/ 02072000
*         /* APPROPRIATE DATA FROM THE MSC MESSAGE BUFFER TO THE     */ 02073000
*         /*                                                 @Z40LB01*/ 02074000
*         /* WTO MESSAGE SKELETON.                           @Z40LB01*/ 02075000
*         /* ***************************************************     */ 02076000
*         /*                                                 @Z40LB01*/ 02077000
*         /*                                                         */ 02078000
*         /***********************************************************/ 02079000
*                                                                  0789 02080000
*           ELSE                    /*                       @Z40LB01*/ 02081000
*             IF MSGC='82'X THEN    /*                       @Z40LB01*/ 02082000
         B     @RC00781                                            0789 02083000
@RF00781 L     @12,MSGPTR                                          0789 02084000
         CLI   MSGC(@12),130                                       0789 02085000
         BNE   @RF00789                                            0789 02086000
*               DO;                 /* INDEX TO MESSAGE 82 AND FILL     02087000
*                                      MSG VARIABLES         @Z40LB01*/ 02088000
*                 WTOOK=BONE;       /* SET WTO SWITCH        @Z40LB01*/ 02089000
         OI    WTOOK,B'00010000'                                   0791 02090000
*                 WTOGEN03=MESGS(MSG08201);/* FILL WTO BUFFER      0792 02091000
*                                                            @Z40LB01*/ 02092000
         MVI   WTOGEN03+72,C' '                                    0792 02093000
         L     @11,@CA02101                                        0792 02094000
         MVC   WTOGEN03(72),MESGS-MSGS+152(@11)                    0792 02095000
*                 WTOGEN03(48:53)=PRNTLZYX(2:7);/* CART LOC  @Z40LB01*/ 02096000
         MVC   WTOGEN03+47(6),PRNTLZYX+1                           0793 02097000
*                 WTOGEN03(41:41)=PRNTLZYX(1:1);/* LIB ID    @Z40LB01*/ 02098000
         MVC   WTOGEN03+40(1),PRNTLZYX                             0794 02099000
*                 WTOGEN03(59:70)=MSGDATA(3:14);/* CSN NO.   @Z40LB01*/ 02100000
         MVC   WTOGEN03+58(12),MSGDATA+2(@12)                      0795 02101000
*                 WTOGEN03(13:18)=MSGDATA(27:32);/* VOLID    @Z40LB01*/ 02102000
         MVC   WTOGEN03+12(6),MSGDATA+26(@12)                      0796 02103000
*               END;                /* END MSG 82 PROCESS    @Z40LB01   02104000
*                                                            @Z40LB01*/ 02105000
*                                                                  0797 02106000
*         /***********************************************************/ 02107000
*         /*                                                         */ 02108000
*         /* ***************************************************     */ 02109000
*         /*                                                 @Z40LB01*/ 02110000
*         /* THE FOLLOWING CODE INDEXES TO THE MESSAGE SKELETON      */ 02111000
*         /*                                                 @Z40LB01*/ 02112000
*         /* FOR UNSOLICITED MSC MESSAGE CODE 83 AND MOVES THE       */ 02113000
*         /*                                                 @Z40LB01*/ 02114000
*         /* APPROPRIATE DATA FROM THE MSC MESSAGE BUFFER TO THE     */ 02115000
*         /*                                                 @Z40LB01*/ 02116000
*         /* WTO MESSAGE SKELETON.                           @Z40LB01*/ 02117000
*         /* ***************************************************     */ 02118000
*         /*                                                 @Z40LB01*/ 02119000
*         /*                                                         */ 02120000
*         /***********************************************************/ 02121000
*                                                                  0798 02122000
*             ELSE                  /*                       @Z40LB01*/ 02123000
*               IF MSGC='83'X THEN  /*                       @Z40LB01*/ 02124000
         B     @RC00789                                            0798 02125000
@RF00789 L     @12,MSGPTR                                          0798 02126000
         CLI   MSGC(@12),131                                       0798 02127000
         BNE   @RF00798                                            0798 02128000
*                 DO;               /* INDEX TO MESSAGE 83 AND FILL     02129000
*                                      MSG VARIABLES         @Z40LB01*/ 02130000
*                   WTOOK=BONE;     /* SET WTO SWITCH        @Z40LB01*/ 02131000
         OI    WTOOK,B'00010000'                                   0800 02132000
*                   WTOGEN03=MESGS(MSG08301);/* FILL WTO BUFFER    0801 02133000
*                                                            @Z40LB01*/ 02134000
         MVI   WTOGEN03+72,C' '                                    0801 02135000
         L     @11,@CA02101                                        0801 02136000
         MVC   WTOGEN03(72),MESGS-MSGS+228(@11)                    0801 02137000
*                   WTOGEN03(66:71)=PRNTLZYX(2:7);/* CART LOC      0802 02138000
*                                                            @ZA09555*/ 02139000
         MVC   WTOGEN03+65(6),PRNTLZYX+1                           0802 02140000
*                   WTOGEN03(60:60)=PRNTLZYX(1:1);/* LIB ID  @ZA09555*/ 02141000
         MVC   WTOGEN03+59(1),PRNTLZYX                             0803 02142000
*                   WTOGEN03(32:43)=MSGDATA(3:14);/* CSN NO. @ZA09555*/ 02143000
         MVC   WTOGEN03+31(12),MSGDATA+2(@12)                      0804 02144000
*                   WTOGEN03(18:23)=MSGDATA(27:32);/* VOLID  @ZA09555*/ 02145000
         MVC   WTOGEN03+17(6),MSGDATA+26(@12)                      0805 02146000
*                   WTOGEN03(30:30)=MSGDATA(33:33);/* SEQ NUM      0806 02147000
*                                                            @ZA09555*/ 02148000
         MVC   WTOGEN03+29(1),MSGDATA+32(@12)                      0806 02149000
*                 END;              /* END MSG 83 PROCESS    @Z40LB01   02150000
*                                                            @Z40LB01*/ 02151000
*                                                                  0807 02152000
*         /***********************************************************/ 02153000
*         /*                                                         */ 02154000
*         /* ***************************************************     */ 02155000
*         /*                                                 @Z40LB01*/ 02156000
*         /* THE FOLLOWING CODE SETS THE INDEX TO MESSAGE SKELETON   */ 02157000
*         /*                                                 @Z40LB01*/ 02158000
*         /* FOR UNSOLICITED MSC MESSAGE CODE 84. THIS MESSAGE       */ 02159000
*         /*                                                 @Z40LB01*/ 02160000
*         /* HAS NO VARIABLE DATA FIELDS AND NO MOVES ARE    @Z40LB01*/ 02161000
*         /* PERFORMED.                                      @Z40LB01*/ 02162000
*         /* ***************************************************     */ 02163000
*         /*                                                 @Z40LB01*/ 02164000
*         /*                                                         */ 02165000
*         /***********************************************************/ 02166000
*                                                                  0808 02167000
*               ELSE                /*                       @Z40LB01*/ 02168000
*                 IF MSGC='84'X THEN/*                       @Z40LB01*/ 02169000
         B     @RC00798                                            0808 02170000
@RF00798 L     @12,MSGPTR                                          0808 02171000
         CLI   MSGC(@12),132                                       0808 02172000
         BNE   @RF00808                                            0808 02173000
*                   DO;             /* INDEX TO MESSAGE 84 AND SET 0809 02174000
*                                      WTOOK SWITCH          @Z40LB01*/ 02175000
*                     WTOOK=BONE;   /* SET WTO SWITCH        @Z40LB01*/ 02176000
         OI    WTOOK,B'00010000'                                   0810 02177000
*                     WTOGEN03=MESGS(MSG08401);/* FILL WTO BUFFER  0811 02178000
*                                                            @Z40LB01*/ 02179000
         MVI   WTOGEN03+72,C' '                                    0811 02180000
         L     @12,@CA02101                                        0811 02181000
         MVC   WTOGEN03(72),MESGS-MSGS+380(@12)                    0811 02182000
*                   END;            /* END MSG 84 PROCESS    @Z40LB01   02183000
*                                                            @Z40LB01*/ 02184000
*                                                                  0812 02185000
*         /***********************************************************/ 02186000
*         /*                                                         */ 02187000
*         /* ***************************************************     */ 02188000
*         /*                                                 @Z40LB01*/ 02189000
*         /* THE FOLLOWING CODE INDEXES TO THE MESSAGE SKELETON      */ 02190000
*         /*                                                 @Z40LB01*/ 02191000
*         /* FOR UNSOLICITED MSC MESSAGE CODE 85 AND MOVES THE       */ 02192000
*         /*                                                 @Z40LB01*/ 02193000
*         /* APPROPRIATE DATA FROM THE MSC MESSAGE BUFFER TO THE     */ 02194000
*         /*                                                 @Z40LB01*/ 02195000
*         /* WTO MESSAGE SKELETON.                           @Z40LB01*/ 02196000
*         /* ***************************************************     */ 02197000
*         /*                                                 @Z40LB01*/ 02198000
*         /*                                                         */ 02199000
*         /***********************************************************/ 02200000
*                                                                  0813 02201000
*                 ELSE              /*                       @Z40LB01*/ 02202000
*                   IF MSGC='85'X THEN/*                     @Z40LB01*/ 02203000
         B     @RC00808                                            0813 02204000
@RF00808 L     @12,MSGPTR                                          0813 02205000
         CLI   MSGC(@12),133                                       0813 02206000
         BNE   @RF00813                                            0813 02207000
*                     DO;           /* INDEX TO MESSAGE 85 AND FILL     02208000
*                                      MSG VARIABLES         @Z40LB01*/ 02209000
*                       WTOOK=BONE; /* SET WTO SWITCH        @Z40LB01*/ 02210000
         OI    WTOOK,B'00010000'                                   0815 02211000
*                       WTOGEN03=MESGS(MSG08501);/* FILL WTO BUFFER     02212000
*                                                            @Z40LB01*/ 02213000
         MVI   WTOGEN03+72,C' '                                    0816 02214000
         L     @11,@CA02101                                        0816 02215000
         MVC   WTOGEN03(72),MESGS-MSGS+456(@11)                    0816 02216000
*                       WTOGEN03(23:23)=MSGDATA(1:1);/* TRACE X OR Y    02217000
*                                                            @Z40LB01*/ 02218000
         MVC   WTOGEN03+22(1),MSGDATA(@12)                         0817 02219000
*                     END;          /* END MSG 85 PROCESS    @Z40LB01   02220000
*                                                            @Z40LB01*/ 02221000
*                                                                  0818 02222000
*         /***********************************************************/ 02223000
*         /*                                                         */ 02224000
*         /* ***************************************************     */ 02225000
*         /*                                                 @Z40LB01*/ 02226000
*         /* THE FOLLOWING CODE INDEXES TO THE MESSAGE SKELETON      */ 02227000
*         /*                                                 @Z40LB01*/ 02228000
*         /* FOR UNSOLICITED MSC MESSAGE CODE 86 AND MOVES THE       */ 02229000
*         /*                                                 @Z40LB01*/ 02230000
*         /* APPROPRIATE DATA FROM THE MSC MESSAGE BUFFER TO THE     */ 02231000
*         /*                                                 @Z40LB01*/ 02232000
*         /* WTO MESSAGE SKELETON.                           @Z40LB01*/ 02233000
*         /* ***************************************************     */ 02234000
*         /*                                                 @Z40LB01*/ 02235000
*         /*                                                         */ 02236000
*         /***********************************************************/ 02237000
*                                                                  0819 02238000
*                   ELSE            /*                       @Z40LB01*/ 02239000
*                     IF MSGC='86'X THEN/*                   @Z40LB01*/ 02240000
         B     @RC00813                                            0819 02241000
@RF00813 L     @12,MSGPTR                                          0819 02242000
         CLI   MSGC(@12),134                                       0819 02243000
         BNE   @RF00819                                            0819 02244000
*                       DO;         /* INDEX TO MESSAGE 86 AND FILL     02245000
*                                      MSG VARIABLES         @Z40LB01*/ 02246000
*                         WTOOK=BONE;/* SET WTO SWITCH       @Z40LB01*/ 02247000
         OI    WTOOK,B'00010000'                                   0821 02248000
*                         WTOGEN03=MESGS(MSG08601);/* FILL WTO BUFFER   02249000
*                                                            @Z40LB01*/ 02250000
         MVI   WTOGEN03+72,C' '                                    0822 02251000
         L     @11,@CA02101                                        0822 02252000
         MVC   WTOGEN03(72),MESGS-MSGS+532(@11)                    0822 02253000
*                         WTOGEN03(23:23)=MSGDATA(1:1);/* TRACE X OR    02254000
*                                      Y                     @Z40LB01*/ 02255000
         MVC   WTOGEN03+22(1),MSGDATA(@12)                         0823 02256000
*                       END;        /* END MSG 86 PROCESS    @Z40LB01   02257000
*                                                            @Z40LB01*/ 02258000
*                                                                  0824 02259000
*         /***********************************************************/ 02260000
*         /*                                                         */ 02261000
*         /* ***************************************************     */ 02262000
*         /*                                                 @Z40LB01*/ 02263000
*         /* THE FOLLOWING CODE INDEXES TO THE MESSAGE SKELETON      */ 02264000
*         /*                                                 @Z40LB01*/ 02265000
*         /* FOR UNSOLICITED MSC MESSAGE CODE 93 AND MOVES THE       */ 02266000
*         /*                                                 @Z40LB01*/ 02267000
*         /* APPROPRIATE DATA FROM THE MSC MESSAGE BUFFER TO THE     */ 02268000
*         /*                                                 @Z40LB01*/ 02269000
*         /* WTO MESSAGE SKELETON.                           @Z40LB01*/ 02270000
*         /* ***************************************************     */ 02271000
*         /*                                                 @Z40LB01*/ 02272000
*         /*                                                         */ 02273000
*         /***********************************************************/ 02274000
*                                                                  0825 02275000
*                     ELSE          /*                       @Z40LB01*/ 02276000
*                       IF MSGC='93'X THEN/*                 @Z40LB01*/ 02277000
         B     @RC00819                                            0825 02278000
@RF00819 L     @12,MSGPTR                                          0825 02279000
         CLI   MSGC(@12),147                                       0825 02280000
         BNE   @RF00825                                            0825 02281000
*                         DO;       /* INDEX TO PROPER MESSAGE     0826 02282000
*                                      SKELETON              @Z40LB01*/ 02283000
*                           WTOOK=BONE;/* SET WTO SWITCH     @Z40LB01*/ 02284000
         OI    WTOOK,B'00010000'                                   0827 02285000
*                           WTOGEN03=MESGS(MSG09301);/* FILL WTO   0828 02286000
*                                      BUFFER                @Z40LB01*/ 02287000
*                                                                  0828 02288000
         MVI   WTOGEN03+72,C' '                                    0828 02289000
         L     @11,@CA02101                                        0828 02290000
         MVC   WTOGEN03(72),MESGS-MSGS+608(@11)                    0828 02291000
*                           /*****************************************/ 02292000
*                           /*                                       */ 02293000
*                           /* TRANSLATE THE SSID FROM THE MSC       */ 02294000
*                           /* MESSAGE                       @Z40LB01*/ 02295000
*                           /*                                       */ 02296000
*                           /*****************************************/ 02297000
*                                                                  0829 02298000
*                           INTER=''B;/* CLEAR WORK AREA     @Z40LB01*/ 02299000
         XC    INTER(4),INTER                                      0829 02300000
*                           BYTE4=MSGDATA(1:1);/* INSERT BYTE      0830 02301000
*                                                            @Z40LB01*/ 02302000
         IC    @11,MSGDATA(,@12)                                   0830 02303000
         STC   @11,BYTE4                                           0830 02304000
*                           CALL ICBMSG82;/* CALL TRANSLATE SUB    0831 02305000
*                                                            @Z40LB01*/ 02306000
         BAL   @14,ICBMSG82                                        0831 02307000
*                           WTOGEN03(43:45)=BYTES234;/* SSID @Z40LB01*/ 02308000
*                                                                  0832 02309000
         MVC   WTOGEN03+42(3),BYTES234                             0832 02310000
*                           /*****************************************/ 02311000
*                           /*                                       */ 02312000
*                           /* TRANSLATE THE STATUS BYTE FROM MSC MSG*/ 02313000
*                           /*                               @Z40LB01*/ 02314000
*                           /*                                       */ 02315000
*                           /*****************************************/ 02316000
*                                                                  0833 02317000
*                           INTER=''B;/* CLEAR WORK AREA     @Z40LB01*/ 02318000
         XC    INTER(4),INTER                                      0833 02319000
*                           BYTE4C=MSGDATAC;/* INSERT BYTE   @Z40LB01*/ 02320000
         L     @12,MSGPTR                                          0834 02321000
         MVC   BYTE4C(1),MSGDATAC(@12)                             0834 02322000
*                           CALL ICBMSG82;/* CALL TRANSLATE SUB    0835 02323000
*                                                            @Z40LB01*/ 02324000
         BAL   @14,ICBMSG82                                        0835 02325000
*                           WTOGEN03(55:57)=BYTES234;/* REASON CODE     02326000
*                                                            @Z40LB01*/ 02327000
         MVC   WTOGEN03+54(3),BYTES234                             0836 02328000
*                           ROUT24=BONE;/* SET ROUT CHNG SW  @Z40LB01*/ 02329000
         OI    ROUT24,B'00100000'                                  0837 02330000
*                         END;      /* END MESSAGE 93 PROCESS      0838 02331000
*                                                            @Z40LB01   02332000
*                                                            @Z40LB01*/ 02333000
*                                                                  0838 02334000
*         /***********************************************************/ 02335000
*         /*                                                         */ 02336000
*         /* ***************************************************     */ 02337000
*         /*                                                 @Z40LB01*/ 02338000
*         /* THE FOLLOWING CODE INDEXES TO THE MESSAGE SKELETON      */ 02339000
*         /*                                                 @Z40LB01*/ 02340000
*         /* FOR UNSOLICITED MSC MESSAGE CODE 94 AND MOVES THE       */ 02341000
*         /*                                                 @Z40LB01*/ 02342000
*         /* APPROPRIATE DATA FROM THE MSC MESSAGE BUFFER TO THE     */ 02343000
*         /*                                                 @Z40LB01*/ 02344000
*         /* WTO MESSAGE SKELETON.                           @Z40LB01*/ 02345000
*         /* ***************************************************     */ 02346000
*         /*                                                 @Z40LB01*/ 02347000
*         /*                                                         */ 02348000
*         /***********************************************************/ 02349000
*                                                                  0839 02350000
*                       ELSE        /*                       @Z40LB01*/ 02351000
*                         IF MSGC='94'X THEN/* 94 USES ICB194E MESG     02352000
*                                                            @Z40LB01*/ 02353000
         B     @RC00825                                            0839 02354000
@RF00825 L     @12,MSGPTR                                          0839 02355000
         CLI   MSGC(@12),148                                       0839 02356000
         BNE   @RF00839                                            0839 02357000
*                           DO;     /* INDEX TO MESSAGE 194 AND FILL    02358000
*                                      MSG VARIABLES         @Z40LB01*/ 02359000
*                             WTOOK=BONE;/* SET WTO SWITCH   @Z40LB01*/ 02360000
         OI    WTOOK,B'00010000'                                   0841 02361000
*                             WTOGEN03=MESGS(MSG19401);/* FILL WTO 0842 02362000
*                                      BUFFER                @Z40LB01*/ 02363000
         MVI   WTOGEN03+72,C' '                                    0842 02364000
         L     @11,@CA02101                                        0842 02365000
         MVC   WTOGEN03(72),MESGS-MSGS+1748(@11)                   0842 02366000
*                             WTOGEN03(22:27)=VOLSER;/* FILL VOLID 0843 02367000
*                                      FIELD                 @Z40LB01*/ 02368000
         MVC   WTOGEN03+21(6),VOLSER(@12)                          0843 02369000
*                             CARTNO=CARTNO|'F0'X;/* CONV TO EBCDIC     02370000
*                                                            @ZA05082*/ 02371000
         OI    CARTNO(@12),X'F0'                                   0844 02372000
*                             WTOGEN03(34)=CARTNO;/* FILL CARTNO   0845 02373000
*                                      FIELD                 @ZA05082*/ 02374000
         MVC   WTOGEN03+33(1),CARTNO(@12)                          0845 02375000
*                             INTER=''B;/* CLEAR CONV WORKAREA     0846 02376000
*                                                            @Z40LB01*/ 02377000
         XC    INTER(4),INTER                                      0846 02378000
*                             BYTE4C=RESTCD;/* PUT IN RESTART CODE 0847 02379000
*                                                            @Z40LB01*/ 02380000
         MVC   BYTE4C(1),RESTCD(@12)                               0847 02381000
*                             CALL ICBMSG82;/* CALL CONV SUBROUTINE     02382000
*                                                            @Z40LB01*/ 02383000
         BAL   @14,ICBMSG82                                        0848 02384000
*                             WTOGEN03(67:68)=BYTES34;/* FILL RESTART   02385000
*                                      FLD                   @ZA05082*/ 02386000
         MVC   WTOGEN03+66(2),BYTES34                              0849 02387000
*                           END;    /* END MESSAGE 94 PROCESS      0850 02388000
*                                                            @Z40LB01   02389000
*                                                            @Z40LB01*/ 02390000
*                                                                  0850 02391000
*         /***********************************************************/ 02392000
*         /*                                                         */ 02393000
*         /* ***************************************************     */ 02394000
*         /*                                                 @Z40LB01*/ 02395000
*         /* THE FOLLOWING CODE INDEXES TO THE MESSAGE SKELETON      */ 02396000
*         /*                                                 @Z40LB01*/ 02397000
*         /* FOR UNSOLICITED MSC MESSAGE CODE 8F AND MOVES THE       */ 02398000
*         /*                                                 @Z40LB01*/ 02399000
*         /* APPROPRIATE DATA FROM THE MSC MESSAGE BUFFER TO THE     */ 02400000
*         /*                                                 @Z40LB01*/ 02401000
*         /* WTO MESSAGE SKELETON.                           @Z40LB01*/ 02402000
*         /* ***************************************************     */ 02403000
*         /*                                                 @Z40LB01*/ 02404000
*         /*                                                         */ 02405000
*         /***********************************************************/ 02406000
*                                                                  0851 02407000
*                         ELSE      /*                       @Z40LB01*/ 02408000
*                           IF MSGC='8F'X THEN/* 8F USES ICB100I MESG   02409000
*                                                            @Z40LB01*/ 02410000
         B     @RC00839                                            0851 02411000
@RF00839 L     @12,MSGPTR                                          0851 02412000
         CLI   MSGC(@12),143                                       0851 02413000
         BNE   @RF00851                                            0851 02414000
*                             DO;   /* INDEX TO MESSAGE 100 AND FILL    02415000
*                                      MSG VARIABLES         @Z40LB01*/ 02416000
*                               WTOOK=BONE;/* SET WTO SWITCH @Z40LB01*/ 02417000
         OI    WTOOK,B'00010000'                                   0853 02418000
*                               WTOGEN03=MESGS(MSG10001);/* FILL WTO    02419000
*                                      BUFFER                @Z40LB01*/ 02420000
         MVI   WTOGEN03+72,C' '                                    0854 02421000
         L     @11,@CA02101                                        0854 02422000
         MVC   WTOGEN03(72),MESGS-MSGS+684(@11)                    0854 02423000
*                               WTOGEN03(20:25)=MSGDATA(1:6);/* VOLID   02424000
*                                                            @Z40LB01*/ 02425000
         MVC   WTOGEN03+19(6),MSGDATA(@12)                         0855 02426000
*                             END;  /* END MSG 8F PROCESS    @Z40LB01   02427000
*                                                            @Z40LB01*/ 02428000
*                                                                  0856 02429000
*         /***********************************************************/ 02430000
*         /*                                                         */ 02431000
*         /* ***************************************************     */ 02432000
*         /*                                                 @Z40LB01*/ 02433000
*         /* THE FOLLOWING CODE INDEXES TO THE MESSAGE SKELETON      */ 02434000
*         /*                                                 @Z40LB01*/ 02435000
*         /* FOR UNSOLICITED MSC MESSAGE CODE 95 AND MOVES THE       */ 02436000
*         /*                                                 @Z40LB01*/ 02437000
*         /* APPROPRIATE DATA FROM THE MSC MESSAGE BUFFER TO THE     */ 02438000
*         /*                                                 @Z40LB01*/ 02439000
*         /* WTO MESSAGE SKELETON.                           @Z40LB01*/ 02440000
*         /* ***************************************************     */ 02441000
*         /*                                                 @Z40LB01*/ 02442000
*         /*                                                         */ 02443000
*         /***********************************************************/ 02444000
*                                                                  0857 02445000
*                           ELSE    /*                       @Z40LB01*/ 02446000
*                             IF MSGC='95'X THEN/*           @Z40LB01*/ 02447000
         B     @RC00851                                            0857 02448000
@RF00851 L     @12,MSGPTR                                          0857 02449000
         CLI   MSGC(@12),149                                       0857 02450000
         BNE   @RF00857                                            0857 02451000
*                               DO; /* INDEX TO MESSAGE 95 AND FILL     02452000
*                                      MSG VARIABLES         @Z40LB01*/ 02453000
*                                 WTOOK=BONE;/* SET WTO SWITCH     0859 02454000
*                                                            @Z40LB01*/ 02455000
         OI    WTOOK,B'00010000'                                   0859 02456000
*                                 WTOGEN03=MESGS(MSG09501);/* FILL 0860 02457000
*                                      WTO BUFFER            @Z40LB01*/ 02458000
         MVI   WTOGEN03+72,C' '                                    0860 02459000
         L     @11,@CA02101                                        0860 02460000
         MVC   WTOGEN03(72),MESGS-MSGS+760(@11)                    0860 02461000
*                                 INTER=''B;/* CLEAR CONV WORKAREA 0861 02462000
*                                                            @Z40LB01*/ 02463000
         XC    INTER(4),INTER                                      0861 02464000
*                                 BYTES34=MSGDATA(1:2);/* PUT IN SSID   02465000
*                                                            @Z40LB01*/ 02466000
         MVC   BYTES34(2),MSGDATA(@12)                             0862 02467000
*                                 CALL ICBMSG82;/* CALL CONV       0863 02468000
*                                      SUBROUTINE            @Z40LB01*/ 02469000
         BAL   @14,ICBMSG82                                        0863 02470000
*                                 WTOGEN03(40:42)=BYTES234;/* FILL 0864 02471000
*                                      MESG FIELD            @Z40LB01*/ 02472000
         MVC   WTOGEN03+39(3),BYTES234                             0864 02473000
*                                 IF CONFGMSK(1)=(MSGDATA(13:13)&  0865 02474000
*                                     CONFGMSK(1)) THEN/*    @Z40LB01*/ 02475000
         L     @12,MSGPTR                                          0865 02476000
         MVC   @TS00001(1),MSGDATA+12(@12)                         0865 02477000
         NC    @TS00001(1),CONFGMSK                                0865 02478000
         CLC   CONFGMSK(1),@TS00001                                0865 02479000
         BNE   @RF00865                                            0865 02480000
*                                   WTOGEN03(45:48)='3333';/*      0866 02481000
*                                      CONTROLLER            @Z40LB01*/ 02482000
         MVC   WTOGEN03+44(4),@CC02725                             0866 02483000
*                                 ELSE/*                     @Z40LB01*/ 02484000
*                                   WTOGEN03(45:48)='3330';/* DASD 0867 02485000
*                                                            @Z40LB01*/ 02486000
         B     @RC00865                                            0867 02487000
@RF00865 MVC   WTOGEN03+44(4),@CC02726                             0867 02488000
*                                 ROUT24=BONE;/* SET ROUT CHNG SW  0868 02489000
*                                                            @Z40LB01*/ 02490000
@RC00865 DS    0H                                                  0869 02491000
*                                 DESC2=BONE;/* SET DESC CHNG SW   0869 02492000
*                                                            @Z40LB01*/ 02493000
         OI    ROUT24,B'10100000'                                  0869 02494000
*                               END;/* END MSG 95 PROCESS    @Z40LB01   02495000
*                                                            @Z40LB01*/ 02496000
*                                                                  0870 02497000
*         /***********************************************************/ 02498000
*         /*                                                         */ 02499000
*         /* ***************************************************     */ 02500000
*         /*                                                 @Z40LB01*/ 02501000
*         /* THE FOLLOWING CODE INDEXES TO THE MESSAGE SKELETON      */ 02502000
*         /*                                                 @Z40LB01*/ 02503000
*         /* FOR UNSOLICITED MSC MESSAGE CODE 96 AND MOVES THE       */ 02504000
*         /*                                                 @Z40LB01*/ 02505000
*         /* APPROPRIATE DATA FROM THE MSC MESSAGE BUFFER TO THE     */ 02506000
*         /*                                                 @Z40LB01*/ 02507000
*         /* WTO MESSAGE SKELETON.                           @Z40LB01*/ 02508000
*         /* ***************************************************     */ 02509000
*         /*                                                 @Z40LB01*/ 02510000
*         /*                                                         */ 02511000
*         /***********************************************************/ 02512000
*                                                                  0871 02513000
*         IF MSGC='96'X THEN        /*                       @Z40LB01*/ 02514000
@RF00857 DS    0H                                                  0871 02515000
@RC00851 DS    0H                                                  0871 02516000
@RC00839 DS    0H                                                  0871 02517000
@RC00825 DS    0H                                                  0871 02518000
@RC00819 DS    0H                                                  0871 02519000
@RC00813 DS    0H                                                  0871 02520000
@RC00808 DS    0H                                                  0871 02521000
@RC00798 DS    0H                                                  0871 02522000
@RC00789 DS    0H                                                  0871 02523000
@RC00781 DS    0H                                                  0871 02524000
@RC00774 L     @12,MSGPTR                                          0871 02525000
         CLI   MSGC(@12),150                                       0871 02526000
         BNE   @RF00871                                            0871 02527000
*           DO;                     /* INDEX TO MESSAGE 96 AND FILL     02528000
*                                      MSG VARIABLES         @Z40LB01*/ 02529000
*             DSTGERR=BZERO;        /* RESET DESTAGE ERR SW  @ZA16123*/ 02530000
         NI    DSTGERR,B'10111111'                                 0873 02531000
*             WTOOK=BONE;           /* SET WTO SWITCH        @Z40LB01*/ 02532000
         OI    WTOOK,B'00010000'                                   0874 02533000
*             WTOGEN03=MESGS(MSG09601);/* FILL WTO BUFFER    @Z40LB01*/ 02534000
         MVI   WTOGEN03+72,C' '                                    0875 02535000
         L     @11,@CA02101                                        0875 02536000
         MVC   WTOGEN03(72),MESGS-MSGS+836(@11)                    0875 02537000
*             INTER=''B;            /* CLEAR CONV WORK AREA  @Z40LB01*/ 02538000
         XC    INTER(4),INTER                                      0876 02539000
*             BYTES34=MSGDATA(1:2); /* PUT IN SSID           @Z40LB01*/ 02540000
         MVC   BYTES34(2),MSGDATA(@12)                             0877 02541000
*             CALL ICBMSG82;        /* CALL CONV SUBROUTINE  @Z40LB01*/ 02542000
         BAL   @14,ICBMSG82                                        0878 02543000
*             WTOGEN03(46:48)=BYTES234;/* FILL SSID FIELD    @Z40LB01*/ 02544000
         MVC   WTOGEN03+45(3),BYTES234                             0879 02545000
*             INTER=''B;            /* CLEAR CONV WORKAREA   @Z40LB01*/ 02546000
         XC    INTER(4),INTER                                      0880 02547000
*             BYTE4C=MSGDATA(5:5);  /* THE REAL PAGE BYTE    @Z40LB01*/ 02548000
         L     @12,MSGPTR                                          0881 02549000
         MVC   BYTE4C(1),MSGDATA+4(@12)                            0881 02550000
*             CVD(BYTE4,INTER);     /* CVD REAL PAGE TO DEC  @Z40LB01*/ 02551000
         SLR   @12,@12                                             0882 02552000
         IC    @12,BYTE4                                           0882 02553000
         CVD   @12,@TS00001                                        0882 02554000
         MVC   INTER(4),@TS00001+4                                 0882 02555000
*             INTER=INTER/F16;      /* SHIFT OUT SIGN MSG82  @Z40LB01*/ 02556000
         L     @12,INTER                                           0883 02557000
         SRL   @12,4                                               0883 02558000
         ST    @12,INTER                                           0883 02559000
*             CALL ICBMSG82;        /* CALL CONV SUBROUTINE  @Z40LB01*/ 02560000
         BAL   @14,ICBMSG82                                        0884 02561000
*             WTOGEN03(35:36)=BYTES34;/* FILL REAL PAGE FLD  @Z40LB01*/ 02562000
         MVC   WTOGEN03+34(2),BYTES34                              0885 02563000
*             IF CONFGMSK(8)=(MSGDATA(13:13)&CONFGMSK(8)) THEN/*   0886 02564000
*                                                            @Z40LB01*/ 02565000
         L     @12,MSGPTR                                          0886 02566000
         MVC   @TS00001(1),MSGDATA+12(@12)                         0886 02567000
         NC    @TS00001(1),CONFGMSK+7                              0886 02568000
         CLC   CONFGMSK+7(1),@TS00001                              0886 02569000
         BNE   @RF00886                                            0886 02570000
*               DO;                 /* THIS IS DESTG ERROR   @Z40LB01*/ 02571000
*                 WTOGEN03(17:23)='DESTAGE';/* FILL MESG     @Z40LB01*/ 02572000
         MVC   WTOGEN03+16(7),@CC02728                             0888 02573000
*                 DSTGERR=BONE;     /* SET 2ND LINE SWITCH   @Z40LB01*/ 02574000
         OI    DSTGERR,B'01000000'                                 0889 02575000
*               END;                /*                       @Z40LB01*/ 02576000
*             ELSE                  /* TEST FOR STAGE ERR    @Z40LB01*/ 02577000
*               IF CONFGMSK(7)=(MSGDATA(13:13)&CONFGMSK(7)) THEN/* 0891 02578000
*                                                            @Z40LB01*/ 02579000
         B     @RC00886                                            0891 02580000
@RF00886 L     @12,MSGPTR                                          0891 02581000
         MVC   @TS00001(1),MSGDATA+12(@12)                         0891 02582000
         NC    @TS00001(1),CONFGMSK+6                              0891 02583000
         CLC   CONFGMSK+6(1),@TS00001                              0891 02584000
         BNE   @RF00891                                            0891 02585000
*                 WTOGEN03(17:23)='STAGE   ';/* FILL MESG    @Z40LB01*/ 02586000
         MVC   WTOGEN03+16(7),@CC02729                             0892 02587000
*               ELSE                /* MUST BE HOST ERROR    @Z40LB01*/ 02588000
*                 WTOGEN03(17:23)='HOST    ';/* FILL MESG    @Z40LB01*/ 02589000
         B     @RC00891                                            0893 02590000
@RF00891 MVC   WTOGEN03+16(7),@CC02730                             0893 02591000
*             ROUT24=BONE;          /* SET ROUT CHNG SW      @Z40LB01*/ 02592000
@RC00891 DS    0H                                                  0894 02593000
@RC00886 OI    ROUT24,B'00100000'                                  0894 02594000
*           END;                    /* END MSG 96 PROCESS    @Z40LB01   02595000
*                                                            @Z40LB01*/ 02596000
*                                                                  0895 02597000
*         /***********************************************************/ 02598000
*         /*                                                         */ 02599000
*         /* ***************************************************     */ 02600000
*         /*                                                 @Z40LB01*/ 02601000
*         /* THE FOLLOWING CODE INDEXES TO THE MESSAGE SKELETON      */ 02602000
*         /*                                                 @Z40LB01*/ 02603000
*         /* FOR UNSOLICITED MSC MESSAGE CODE 97 AND MOVES THE       */ 02604000
*         /*                                                 @Z40LB01*/ 02605000
*         /* APPROPRIATE DATA FROM THE MSC MESSAGE BUFFER TO THE     */ 02606000
*         /*                                                 @Z40LB01*/ 02607000
*         /* WTO MESSAGE SKELETON.                           @Z40LB01*/ 02608000
*         /* ***************************************************     */ 02609000
*         /*                                                 @Z40LB01*/ 02610000
*         /*                                                         */ 02611000
*         /***********************************************************/ 02612000
*                                                                  0896 02613000
*         ELSE                      /*                       @Z40LB01*/ 02614000
*           IF MSGC='97'X THEN      /*                       @Z40LB01*/ 02615000
         B     @RC00871                                            0896 02616000
@RF00871 L     @12,MSGPTR                                          0896 02617000
         CLI   MSGC(@12),151                                       0896 02618000
         BNE   @RF00896                                            0896 02619000
*             DO;                   /* INDEX TO MESSAGE 97 AND FILL     02620000
*                                      MSG VARIABLES         @Z40LB01*/ 02621000
*               WTOOK=BONE;         /* SET WTO SWITCH        @Z40LB01*/ 02622000
         OI    WTOOK,B'00010000'                                   0898 02623000
*               WTOGEN03=MESGS(MSG09701);/* FILL WTO BUFFER  @Z40LB01*/ 02624000
         MVI   WTOGEN03+72,C' '                                    0899 02625000
         L     @11,@CA02101                                        0899 02626000
         MVC   WTOGEN03(72),MESGS-MSGS+988(@11)                    0899 02627000
*               INTER=''B;          /* CLEAR CONV WORK AREA  @Z40LB01*/ 02628000
         XC    INTER(4),INTER                                      0900 02629000
*               BYTES34=MSGDATA(3:4);/* FROM SSID            @Z40LB01*/ 02630000
         MVC   BYTES34(2),MSGDATA+2(@12)                           0901 02631000
*               CALL ICBMSG82;      /* CALL CONV SUBROUTINE  @Z40LB01*/ 02632000
         BAL   @14,ICBMSG82                                        0902 02633000
*               WTOGEN03(34:36)=BYTES234;/* FILL FROM SSID   @Z40LB01*/ 02634000
         MVC   WTOGEN03+33(3),BYTES234                             0903 02635000
*               INTER=''B;          /* CLEAR CONV WORK AREA  @Z40LB01*/ 02636000
         XC    INTER(4),INTER                                      0904 02637000
*               BYTES34=MSGDATA(5:6);/* TO SSID              @Z40LB01*/ 02638000
         L     @12,MSGPTR                                          0905 02639000
         MVC   BYTES34(2),MSGDATA+4(@12)                           0905 02640000
*               CALL ICBMSG82;      /* CALL CONV SUBROUTINE  @Z40LB01*/ 02641000
         BAL   @14,ICBMSG82                                        0906 02642000
*               WTOGEN03(38:40)=BYTES234;/* FILL TO SSID     @Z40LB01*/ 02643000
         MVC   WTOGEN03+37(3),BYTES234                             0907 02644000
*               INTER=''B;          /* CLEAR CONV WORKAREA   @Z40LB01*/ 02645000
         XC    INTER(4),INTER                                      0908 02646000
*               BYTES34=MSGDATA(1:2);/* FROM/TO RUA          @Z40LB01*/ 02647000
         L     @12,MSGPTR                                          0909 02648000
         MVC   BYTES34(2),MSGDATA(@12)                             0909 02649000
*               CALL ICBMSG82;      /* CALL CONV SUBROUTINE  @Z40LB01*/ 02650000
         BAL   @14,ICBMSG82                                        0910 02651000
*               WTOGEN03(42:43)=INTER(1:2);/* FILL FROM RUA  @Z40LB01*/ 02652000
         MVC   WTOGEN03+41(2),INTER                                0911 02653000
*               WTOGEN03(45:46)=INTER(3:4);/* FILL TO RUA    @Z40LB01*/ 02654000
         MVC   WTOGEN03+44(2),INTER+2                              0912 02655000
*               ROUT24=BONE;        /* CHANGE ROUT CODE SW   @Z40LB01*/ 02656000
         OI    ROUT24,B'00100000'                                  0913 02657000
*             END;                  /* END MSG 97 PROCESS    @Z40LB01   02658000
*                                                            @Z40LB01*/ 02659000
*                                                                  0914 02660000
*         /***********************************************************/ 02661000
*         /*                                                         */ 02662000
*         /* ***************************************************     */ 02663000
*         /*                                                 @Z40LB01*/ 02664000
*         /* THE FOLLOWING CODE INDEXES TO THE MESSAGE SKELETON      */ 02665000
*         /*                                                 @Z40LB01*/ 02666000
*         /* FOR UNSOLICITED MSC MESSAGE CODE 98 AND MOVES THE       */ 02667000
*         /*                                                 @Z40LB01*/ 02668000
*         /* APPROPRIATE DATA FROM THE MSC MESSAGE BUFFER TO THE     */ 02669000
*         /*                                                 @Z40LB01*/ 02670000
*         /* WTO MESSAGE SKELETON.                           @Z40LB01*/ 02671000
*         /* ***************************************************     */ 02672000
*         /*                                                 @Z40LB01*/ 02673000
*         /*                                                         */ 02674000
*         /***********************************************************/ 02675000
*                                                                  0915 02676000
*           ELSE                    /*                       @Z40LB01*/ 02677000
*             IF MSGC='98'X THEN    /*                       @Z40LB01*/ 02678000
         B     @RC00896                                            0915 02679000
@RF00896 L     @12,MSGPTR                                          0915 02680000
         CLI   MSGC(@12),152                                       0915 02681000
         BNE   @RF00915                                            0915 02682000
*               DO;                 /* INDEX TO MESSAGE 98 AND FILL     02683000
*                                      MSG VARIABLES         @Z40LB01*/ 02684000
*                 WTOOK=BONE;       /* SET WTO SWITCH        @Z40LB01*/ 02685000
         OI    WTOOK,B'00010000'                                   0917 02686000
*                 WTOGEN03=MESGS(MSG09801);/* FILL WTO BUFFER      0918 02687000
*                                                            @Z40LB01*/ 02688000
         MVI   WTOGEN03+72,C' '                                    0918 02689000
         L     @11,@CA02101                                        0918 02690000
         MVC   WTOGEN03(72),MESGS-MSGS+1064(@11)                   0918 02691000
*                 WTOGEN03(37:42)=MSGDATA(3:8);/* FILL VOLID @Z40LB01*/ 02692000
         MVC   WTOGEN03+36(6),MSGDATA+2(@12)                       0919 02693000
*                 INTER=''B;        /* CLEAR CONV WORKAREA   @Z40LB01*/ 02694000
         XC    INTER(4),INTER                                      0920 02695000
*                 BYTES34=MSGDATA(9:10);/* PUT IN VUA        @Z40LB01*/ 02696000
         MVC   BYTES34(2),MSGDATA+8(@12)                           0921 02697000
*                 CALL ICBMSG82;    /* CALL CONV SUBROUTINE  @Z40LB01*/ 02698000
         BAL   @14,ICBMSG82                                        0922 02699000
*                 WTOGEN03(44:46)=BYTES234;/* FILL VUA       @Z40LB01*/ 02700000
         MVC   WTOGEN03+43(3),BYTES234                             0923 02701000
*                 INTER=''B;        /* CLEAR CONV WORKAREA   @Z40LB01*/ 02702000
         XC    INTER(4),INTER                                      0924 02703000
*                 BYTES34=MSGDATA(11:12);/* PUT IN BYT 1&2 HOSTID  0925 02704000
*                                                            @Z40LB01*/ 02705000
         L     @12,MSGPTR                                          0925 02706000
         MVC   BYTES34(2),MSGDATA+10(@12)                          0925 02707000
*                 CALL ICBMSG82;    /* CALL CONV SUBROUTINE  @Z40LB01*/ 02708000
         BAL   @14,ICBMSG82                                        0926 02709000
*                 WTOGEN03(54:57)=INTER;/* FILL BYT 1&2 HOSTID     0927 02710000
*                                                            @Z40LB01*/ 02711000
         MVC   WTOGEN03+53(4),INTER                                0927 02712000
*                 INTER=''B;        /* CLEAR CONV WORKAREA   @Z40LB01*/ 02713000
         XC    INTER(4),INTER                                      0928 02714000
*                 BYTES34=MSGDATA(13:14);/* PUT IN BYT 3&4 HOSTID  0929 02715000
*                                                            @Z40LB01*/ 02716000
         L     @12,MSGPTR                                          0929 02717000
         MVC   BYTES34(2),MSGDATA+12(@12)                          0929 02718000
*                 CALL ICBMSG82;    /* CALL CONV SUBROUTINE  @Z40LB01*/ 02719000
         BAL   @14,ICBMSG82                                        0930 02720000
*                 WTOGEN03(58:61)=INTER;/* FILL BYT 3&4 HOSTID     0931 02721000
*                                                            @Z40LB01*/ 02722000
         MVC   WTOGEN03+57(4),INTER                                0931 02723000
*                 INTER=''B;        /* CLEAR CONV WORKAREA   @Z40LB01*/ 02724000
         XC    INTER(4),INTER                                      0932 02725000
*                 BYTE4C=MSGDATA(15:15);/* PUT IN BYT 5 HOSTID     0933 02726000
*                                                            @Z40LB01*/ 02727000
         L     @12,MSGPTR                                          0933 02728000
         MVC   BYTE4C(1),MSGDATA+14(@12)                           0933 02729000
*                 CALL ICBMSG82;    /* CALL CONV SUBROUTINE  @Z40LB01*/ 02730000
         BAL   @14,ICBMSG82                                        0934 02731000
*                 WTOGEN03(62:63)=BYTES34;/* FILL BYT 5 HOSTID     0935 02732000
*                                                            @Z40LB01*/ 02733000
         MVC   WTOGEN03+61(2),BYTES34                              0935 02734000
*                 INTER=''B;        /* CLEAR CONV WORKAREA   @Z40LB01*/ 02735000
         XC    INTER(4),INTER                                      0936 02736000
*                 BYTE4C=MSGDATA(16:16);/* THE FROM SDG BYTE @Z40LB01*/ 02737000
         L     @12,MSGPTR                                          0937 02738000
         MVC   BYTE4C(1),MSGDATA+15(@12)                           0937 02739000
*                 CVD(BYTE4,INTER); /* FROM SDG TO DEC       @Z40LB01*/ 02740000
         SLR   @12,@12                                             0938 02741000
         IC    @12,BYTE4                                           0938 02742000
         CVD   @12,@TS00001                                        0938 02743000
         MVC   INTER(4),@TS00001+4                                 0938 02744000
*                 INTER=INTER/F16;  /* SHIFT OUT SIGN MSG82  @Z40LB01*/ 02745000
         L     @12,INTER                                           0939 02746000
         SRL   @12,4                                               0939 02747000
         ST    @12,INTER                                           0939 02748000
*                 CALL ICBMSG82;    /* CALL CONV SUBROUTINE  @Z40LB01*/ 02749000
         BAL   @14,ICBMSG82                                        0940 02750000
*                 WTOGEN03(48:49)=BYTES34;/* FILL FROM SDG   @Z40LB01*/ 02751000
         MVC   WTOGEN03+47(2),BYTES34                              0941 02752000
*                 INTER=''B;        /* CLEAR CONV WORKAREA   @Z40LB01*/ 02753000
         XC    INTER(4),INTER                                      0942 02754000
*                 BYTE4C=MSGDATA(17:17);/* THE TO SDG BYTE   @Z40LB01*/ 02755000
         L     @12,MSGPTR                                          0943 02756000
         MVC   BYTE4C(1),MSGDATA+16(@12)                           0943 02757000
*                 CVD(BYTE4,INTER); /* TO SDG TO DEC         @Z40LB01*/ 02758000
         SLR   @12,@12                                             0944 02759000
         IC    @12,BYTE4                                           0944 02760000
         CVD   @12,@TS00001                                        0944 02761000
         MVC   INTER(4),@TS00001+4                                 0944 02762000
*                 INTER=INTER/F16;  /* SHIFT OUT SIGN MSG82  @Z40LB01*/ 02763000
         L     @12,INTER                                           0945 02764000
         SRL   @12,4                                               0945 02765000
         ST    @12,INTER                                           0945 02766000
*                 CALL ICBMSG82;    /* CALL CONV SUBROUTINE  @Z40LB01*/ 02767000
         BAL   @14,ICBMSG82                                        0946 02768000
*                 WTOGEN03(51:52)=BYTES34;/* FILL TO SDG     @Z40LB01*/ 02769000
         MVC   WTOGEN03+50(2),BYTES34                              0947 02770000
*                 ROUT24=BONE;      /* CHANGE ROUT CODE SW   @Z40LB01*/ 02771000
         OI    ROUT24,B'00100000'                                  0948 02772000
*               END;                /* END MSG 98 PROCESS    @Z40LB01   02773000
*                                                            @Z40LB01*/ 02774000
*                                                                  0949 02775000
*         /***********************************************************/ 02776000
*         /*                                                         */ 02777000
*         /* ***************************************************     */ 02778000
*         /*                                                 @Z40LB01*/ 02779000
*         /* THE FOLLOWING CODE INDEXES TO THE MESSAGE SKELETON      */ 02780000
*         /*                                                 @Z40LB01*/ 02781000
*         /* FOR UNSOLICITED MSC MESSAGE CODE 99 AND MOVES THE       */ 02782000
*         /*                                                 @Z40LB01*/ 02783000
*         /* APPROPRIATE DATA FROM THE MSC MESSAGE BUFFER TO THE     */ 02784000
*         /*                                                 @Z40LB01*/ 02785000
*         /* WTO MESSAGE SKELETON.                           @Z40LB01*/ 02786000
*         /* ***************************************************     */ 02787000
*         /*                                                 @Z40LB01*/ 02788000
*         /*                                                         */ 02789000
*         /***********************************************************/ 02790000
*                                                                  0950 02791000
*             ELSE                  /*                       @Z40LB01*/ 02792000
*               IF MSGC='99'X THEN  /*                       @Z40LB01*/ 02793000
         B     @RC00915                                            0950 02794000
@RF00915 L     @12,MSGPTR                                          0950 02795000
         CLI   MSGC(@12),153                                       0950 02796000
         BNE   @RF00950                                            0950 02797000
*                 DO;               /* INDEX TO MESSAGE 99 AND FILL     02798000
*                                      MSG VARIABLES         @Z40LB01*/ 02799000
*                   WTOOK=BONE;     /* SET WTO SWITCH        @Z40LB01*/ 02800000
         OI    WTOOK,B'00010000'                                   0952 02801000
*                   WTOGEN03=MESGS(MSG09901);/* FILL WTO BUFFER    0953 02802000
*                                                            @Z40LB01*/ 02803000
         MVI   WTOGEN03+72,C' '                                    0953 02804000
         L     @11,@CA02101                                        0953 02805000
         MVC   WTOGEN03(72),MESGS-MSGS+1824(@11)                   0953 02806000
*                   INTER=''B;      /* CLEAR CONV WORK AREA  @Z40LB01*/ 02807000
         XC    INTER(4),INTER                                      0954 02808000
*                   BYTES34=MSGDATA(5:6);/* PUT IN SA SSID   @Z40LB01*/ 02809000
         MVC   BYTES34(2),MSGDATA+4(@12)                           0955 02810000
*                   CALL ICBMSG82;  /* CONVERSION SUB RTN    @Z40LB01*/ 02811000
         BAL   @14,ICBMSG82                                        0956 02812000
*                   WTOGEN03(34:36)=BYTES234;/* SSID TO MESSAGE    0957 02813000
*                                                            @Z40LB01*/ 02814000
         MVC   WTOGEN03+33(3),BYTES234                             0957 02815000
*                   INTER=''B;      /* CLEAR CONV WORK AREA  @Z40LB01*/ 02816000
         XC    INTER(4),INTER                                      0958 02817000
*                   BYTES34=MSGDATA(9:10);/* PUT IN CORE ADDR      0959 02818000
*                                                            @Z40LB01*/ 02819000
         L     @12,MSGPTR                                          0959 02820000
         MVC   BYTES34(2),MSGDATA+8(@12)                           0959 02821000
*                   CALL ICBMSG82;  /* CONV SUB RTN          @Z40LB01*/ 02822000
         BAL   @14,ICBMSG82                                        0960 02823000
*                   WTOGEN03(43:46)=INTER;/* CORE ADDR TO MSG      0961 02824000
*                                                            @Z40LB01*/ 02825000
         MVC   WTOGEN03+42(4),INTER                                0961 02826000
*                   INTER=''B;      /* CLEAR CONV WORK AREA  @Z40LB01*/ 02827000
         XC    INTER(4),INTER                                      0962 02828000
*                   BYTES34=MSGDATA(11:12);/* PUT IN 1ST HALF CUR  0963 02829000
*                                                            @Z40LB01*/ 02830000
         L     @12,MSGPTR                                          0963 02831000
         MVC   BYTES34(2),MSGDATA+10(@12)                          0963 02832000
*                   CALL ICBMSG82;  /* CONV SUB RTN          @Z40LB01*/ 02833000
         BAL   @14,ICBMSG82                                        0964 02834000
*                   WTOGEN03(52:55)=INTER;/* 1ST HALF CUR TO MSG   0965 02835000
*                                                            @Z40LB01*/ 02836000
         MVC   WTOGEN03+51(4),INTER                                0965 02837000
*                   INTER=''B;      /* CLEAR CONV WORK AREA  @Z40LB01*/ 02838000
         XC    INTER(4),INTER                                      0966 02839000
*                   BYTES34=MSGDATA(13:14);/* PUT IN 2ND HALF CUR  0967 02840000
*                                                            @Z40LB01*/ 02841000
         L     @12,MSGPTR                                          0967 02842000
         MVC   BYTES34(2),MSGDATA+12(@12)                          0967 02843000
*                   CALL ICBMSG82;  /* CONV SUB RTN          @Z40LB01*/ 02844000
         BAL   @14,ICBMSG82                                        0968 02845000
*                   WTOGEN03(56:59)=INTER;/* 2ND HALF CUR TO MSG   0969 02846000
*                                                            @Z40LB01*/ 02847000
         MVC   WTOGEN03+55(4),INTER                                0969 02848000
*                   INTER=''B;      /* CLEAR CONV WORK AREA  @Z40LB01*/ 02849000
         XC    INTER(4),INTER                                      0970 02850000
*                   BYTES34=MSGDATA(15:16);/* PUT IN 1ST HALF VER  0971 02851000
*                                                            @Z40LB01*/ 02852000
         L     @12,MSGPTR                                          0971 02853000
         MVC   BYTES34(2),MSGDATA+14(@12)                          0971 02854000
*                   CALL ICBMSG82;  /* CONV SUB RTN          @Z40LB01*/ 02855000
         BAL   @14,ICBMSG82                                        0972 02856000
*                   WTOGEN03(65:68)=INTER;/* 1ST HALF VER TO MSG   0973 02857000
*                                                            @Z40LB01*/ 02858000
         MVC   WTOGEN03+64(4),INTER                                0973 02859000
*                   INTER=''B;      /* CLEAR CONV WORK AREA  @Z40LB01*/ 02860000
         XC    INTER(4),INTER                                      0974 02861000
*                   BYTES34=MSGDATA(17:18);/* PUT IN 2ND HALF VER  0975 02862000
*                                                            @Z40LB01*/ 02863000
         L     @12,MSGPTR                                          0975 02864000
         MVC   BYTES34(2),MSGDATA+16(@12)                          0975 02865000
*                   CALL ICBMSG82;  /* CONV SUB RTN          @Z40LB01*/ 02866000
         BAL   @14,ICBMSG82                                        0976 02867000
*                   WTOGEN03(69:72)=INTER;/* 2ND HALF VER TO MSG   0977 02868000
*                                                            @Z40LB01*/ 02869000
         MVC   WTOGEN03+68(4),INTER                                0977 02870000
*                 END;              /* END MSG 99 CODE       @Z40LB01   02871000
*                                                            @Z40LB01*/ 02872000
*                                                                  0978 02873000
*         /***********************************************************/ 02874000
*         /*                                                         */ 02875000
*         /* ***************************************************     */ 02876000
*         /*                                                 @Z40LB01*/ 02877000
*         /* THE FOLLOWING CODE INDEXES TO THE MESSAGE SKELETON      */ 02878000
*         /*                                                 @Z40LB01*/ 02879000
*         /* FOR UNSOLICITED MSC MESSAGE CODE 9A AND MOVES THE       */ 02880000
*         /*                                                 @Z40LB01*/ 02881000
*         /* APPROPRIATE DATA FROM THE MSC MESSAGE BUFFER TO THE     */ 02882000
*         /*                                                 @Z40LB01*/ 02883000
*         /* WTO MESSAGE SKELETON.                           @Z40LB01*/ 02884000
*         /* ***************************************************     */ 02885000
*         /*                                                 @Z40LB01*/ 02886000
*         /*                                                         */ 02887000
*         /***********************************************************/ 02888000
*                                                                  0979 02889000
*               ELSE                /*                       @Z40LB01*/ 02890000
*                 IF MSGC='9A'X THEN/* 9A USES ICB101I MESG  @Z40LB01*/ 02891000
         B     @RC00950                                            0979 02892000
@RF00950 L     @12,MSGPTR                                          0979 02893000
         CLI   MSGC(@12),154                                       0979 02894000
         BNE   @RF00979                                            0979 02895000
*                   DO;             /* INDEX TO MESSAGE 101 AND FILL    02896000
*                                      MSG VARIABLES         @Z40LB01*/ 02897000
*                     WTOOK=BONE;   /* SET WTO SWITCH        @Z40LB01*/ 02898000
         OI    WTOOK,B'00010000'                                   0981 02899000
*                     WTOGEN03=MESGS(MSG10101);/* FILL WTO BUFFER  0982 02900000
*                                                            @Z40LB01*/ 02901000
         MVI   WTOGEN03+72,C' '                                    0982 02902000
         L     @11,@CA02101                                        0982 02903000
         MVC   WTOGEN03(72),MESGS-MSGS+1140(@11)                   0982 02904000
*                     INTER=''B;    /* CLEAR CONV WORKAREA   @Z40LB01*/ 02905000
         XC    INTER(4),INTER                                      0983 02906000
*                     BYTES34=MSGDATA(1:2);/* PUT IN SAID/VUA      0984 02907000
*                                                            @Z40LB01*/ 02908000
         MVC   BYTES34(2),MSGDATA(@12)                             0984 02909000
*                     CALL ICBMSG82;/* CALL CONV SUBROUTINE  @Z40LB01*/ 02910000
         BAL   @14,ICBMSG82                                        0985 02911000
*                     WTOGEN03(57:57)=INTER(2:2);/* FILL SA FIELD  0986 02912000
*                                                            @Z40LB01*/ 02913000
         MVC   WTOGEN03+56(1),INTER+1                              0986 02914000
*                     WTOGEN03(65:66)=INTER(3:4);/* FILL RUA FIELD 0987 02915000
*                                                            @Z40LB01*/ 02916000
         MVC   WTOGEN03+64(2),INTER+2                              0987 02917000
*                     ROUT24=BONE;  /* CHANGE ROUT CODE SW   @Z40LB01*/ 02918000
         OI    ROUT24,B'00100000'                                  0988 02919000
*                   END;            /* END MSG 9A PROCESS    @Z40LB01*/ 02920000
*                                                                  0989 02921000
*         /***********************************************************/ 02922000
*         /*                                                         */ 02923000
*         /* ***************************************************     */ 02924000
*         /*                                                 @ZA17153*/ 02925000
*         /* THE FOLLOWING CODE INDEXES TO THE MESSAGE SKELETON      */ 02926000
*         /*                                                 @ZA17153*/ 02927000
*         /* FOR UNSOLICITED MSC MESSAGE CODE 9C AND MOVES THE       */ 02928000
*         /*                                                 @ZA17153*/ 02929000
*         /* APPROPRIATE DATA FROM THE MSC MESSAGE BUFFER TO THE     */ 02930000
*         /*                                                 @ZA17153*/ 02931000
*         /* WTO MESSAGE SKELETON.                           @ZA17153*/ 02932000
*         /* ***************************************************     */ 02933000
*         /*                                                 @ZA17153*/ 02934000
*         /*                                                         */ 02935000
*         /***********************************************************/ 02936000
*                                                                  0990 02937000
*                 ELSE              /*                       @ZA17153*/ 02938000
*                   IF MSGC='9C'X THEN/* 9C USES ICB102E MESG      0990 02939000
*                                                            @ZA17153*/ 02940000
         B     @RC00979                                            0990 02941000
@RF00979 L     @12,MSGPTR                                          0990 02942000
         CLI   MSGC(@12),156                                       0990 02943000
         BNE   @RF00990                                            0990 02944000
*                     DO;           /* INDEX TO MESSAGE 102 AND FILL    02945000
*                                      MSG VARIABLES         @ZA17153*/ 02946000
*                       WTOOK=BONE; /* SET WTO SWITCH        @ZA17153*/ 02947000
         OI    WTOOK,B'00010000'                                   0992 02948000
*                       WTOGEN03=MESGS(MSG10201);/* FILL WTO BUFFER     02949000
*                                                            @ZA17153*/ 02950000
         MVI   WTOGEN03+72,C' '                                    0993 02951000
         L     @11,@CA02101                                        0993 02952000
         MVC   WTOGEN03(72),MESGS-MSGS+3116(@11)                   0993 02953000
*                       WTOGEN03(11:22)=MSGDATA(3:14);/* FOREIGN CSN    02954000
*                                      FIELD                 @ZA17153*/ 02955000
         MVC   WTOGEN03+10(12),MSGDATA+2(@12)                      0994 02956000
*                       INTER=''B;  /* CLEAR CONV WORK AREA  @ZA17153*/ 02957000
         XC    INTER(4),INTER                                      0995 02958000
*                       BYTE4=MSGDATA(1:1);/* CART STAT BYTE @ZA17153*/ 02959000
         IC    @11,MSGDATA(,@12)                                   0996 02960000
         STC   @11,BYTE4                                           0996 02961000
*                       CALL ICBMSG82;/* CALL CONV SUB ROUTINE     0997 02962000
*                                                            @ZA17153*/ 02963000
         BAL   @14,ICBMSG82                                        0997 02964000
*                       WTOGEN03(24:25)=BYTES34;/* CART STAT IN MSG     02965000
*                                                            @ZA17153*/ 02966000
*                                                                  0998 02967000
         MVC   WTOGEN03+23(2),BYTES34                              0998 02968000
*                       /*********************************************/ 02969000
*                       /*                                           */ 02970000
*                       /* BIT 0 IN CART STAT BYTE IS SET BY MSC IF  */ 02971000
*                       /* THE                               @ZA17153*/ 02972000
*                       /* CART LABEL IS UNREADABLE. IF SET, NO OTHER*/ 02973000
*                       /* DATA                              @ZA17153*/ 02974000
*                       /* FIELDS IN MSG ARE VALID AND SHALL NOT BE  */ 02975000
*                       /* WRITTEN.                          @ZA17153*/ 02976000
*                       /*                                           */ 02977000
*                       /*********************************************/ 02978000
*                                                                  0999 02979000
*                       IF BADLAB=BZERO THEN/*               @ZA17153*/ 02980000
         L     @12,MSGPTR                                          0999 02981000
         TM    BADLAB+2(@12),B'10000000'                           0999 02982000
         BNZ   @RF00999                                            0999 02983000
*                         DO;       /* CART LABEL GOOD CODE  @ZA17153*/ 02984000
*                           WTOGEN03(26:26)=CMMA;/* INSERT COMMA   1001 02985000
*                                                            @ZA17153*/ 02986000
         MVC   WTOGEN03+25(1),CMMA                                 1001 02987000
*                           WTOGEN03(27:38)=MSGDATA(19:30);/* CART 1002 02988000
*                                      CSN FIELD             @ZA17153*/ 02989000
         MVC   WTOGEN03+26(12),MSGDATA+18(@12)                     1002 02990000
*                           WTOGEN03(39:39)=CMMA;/* INSERT COMMA   1003 02991000
*                                                            @ZA17153*/ 02992000
         MVC   WTOGEN03+38(1),CMMA                                 1003 02993000
*                           WTOGEN03(40:51)=MSGDATA(31:42);/* OTHER     02994000
*                                      CSN FIELD             @ZA17153*/ 02995000
         MVC   WTOGEN03+39(12),MSGDATA+30(@12)                     1004 02996000
*                           WTOGEN03(52:52)=CMMA;/* INSERT COMMA   1005 02997000
*                                                            @ZA17153*/ 02998000
         MVC   WTOGEN03+51(1),CMMA                                 1005 02999000
*                           WTOGEN03(53:53)=PRNTLZYX(1:1);/* MSF ID     03000000
*                                      FIELD                 @ZA17153*/ 03001000
         MVC   WTOGEN03+52(1),PRNTLZYX                             1006 03002000
*                           WTOGEN03(54:54)=CMMA;/* INSERT COMMA   1007 03003000
*                                                            @ZA17153*/ 03004000
         MVC   WTOGEN03+53(1),CMMA                                 1007 03005000
*                           WTOGEN03(55:60)=PRNTLZYX(2:7);/* CART LOC   03006000
*                                      FIELD                 @ZA17153*/ 03007000
         MVC   WTOGEN03+54(6),PRNTLZYX+1                           1008 03008000
*                           WTOGEN03(61:61)=CMMA;/* INSERT COMMA   1009 03009000
*                                                            @ZA17153*/ 03010000
         MVC   WTOGEN03+60(1),CMMA                                 1009 03011000
*                           INTER=''B;/* CLEAR CONV WORK AREA      1010 03012000
*                                                            @ZA17153*/ 03013000
         XC    INTER(4),INTER                                      1010 03014000
*                           BYTES34=MSGDATA(17:18);/* VOLSEQ AND VOL    03015000
*                                      FLAGS                 @ZA17153*/ 03016000
         MVC   BYTES34(2),MSGDATA+16(@12)                          1011 03017000
*                           CALL ICBMSG82;/* CALL CONV SUB ROUTINE 1012 03018000
*                                                            @ZA17153*/ 03019000
         BAL   @14,ICBMSG82                                        1012 03020000
*                           WTOGEN03(62:62)=INTER(4:4);/* VOL SEQ  1013 03021000
*                                      NUMBER FLD            @ZA17153*/ 03022000
         MVC   WTOGEN03+61(1),INTER+3                              1013 03023000
*                           WTOGEN03(63:63)=CMMA;/* INSERT COMMA   1014 03024000
*                                                            @ZA17153*/ 03025000
         MVC   WTOGEN03+62(1),CMMA                                 1014 03026000
*                           WTOGEN03(64:65)=INTER(1:2);/* VOL FLAGS     03027000
*                                      FIELD                 @ZA17153*/ 03028000
         MVC   WTOGEN03+63(2),INTER                                1015 03029000
*                         END;      /* END LABEL GOOD CODE   @ZA17153*/ 03030000
*                       DESC3=BONE; /* SET FOR DESC CODE 3   @ZA17153*/ 03031000
@RF00999 OI    DESC3,B'01000000'                                   1017 03032000
*                     END;          /* END MSG 9C PROCESS    @ZA17153*/ 03033000
*                                                                  1019 03034000
*         /***********************************************************/ 03035000
*         /*                                                         */ 03036000
*         /* IF NO MATCH FOUND ON MSGC THEN THE WTO AND SECOND       */ 03037000
*         /*                                                 @Z40LB01*/ 03038000
*         /* LINE CODE WILL BE BYPASSED.                     @Z40LB01*/ 03039000
*         /*                                                         */ 03040000
*         /***********************************************************/ 03041000
*                                                                  1019 03042000
*         IF WTOOK=BONE THEN        /* SEE IF MATCH FOUND    @Z40LB01*/ 03043000
@RF00990 DS    0H                                                  1019 03044000
@RC00979 DS    0H                                                  1019 03045000
@RC00950 DS    0H                                                  1019 03046000
@RC00915 DS    0H                                                  1019 03047000
@RC00896 DS    0H                                                  1019 03048000
@RC00871 TM    WTOOK,B'00010000'                                   1019 03049000
         BNO   @RF01019                                            1019 03050000
*           DO;                     /* PROCESS WTO           @Z40LB01*/ 03051000
*                                                                  1020 03052000
*             /*******************************************************/ 03053000
*             /*                                                     */ 03054000
*             /* IF ROUTE AND DESCRIPTOR CODES MUST BE CHANGED,      */ 03055000
*             /*                                             @Z40LB01*/ 03056000
*             /* CHANGE THEM HERE.                           @Z40LB01*/ 03057000
*             /*                                                     */ 03058000
*             /*******************************************************/ 03059000
*                                                                  1021 03060000
*             IF DESC3=BONE THEN    /* CHANGE DESC NEEDED    @Z40LB01*/ 03061000
         TM    DESC3,B'01000000'                                   1021 03062000
         BNO   @RF01021                                            1021 03063000
*               WTOGEN04=DESCR3;    /* FILL WITH DESC CODE 3 @Z40LB01*/ 03064000
         MVC   WTOGEN04(2),DESCR3                                  1022 03065000
*             IF DESC2=BONE THEN    /* CHANGE DESC NEEDED    @Z40LB01*/ 03066000
@RF01021 TM    DESC2,B'10000000'                                   1023 03067000
         BNO   @RF01023                                            1023 03068000
*               WTOGEN04=DESCR2;    /* FILL WITH DESC CODE 2 @Z40LB01*/ 03069000
         MVC   WTOGEN04(2),DESCR2                                  1024 03070000
*             IF ROUT24=BONE THEN   /* CHANGE ROUT NEEDED    @Z40LB01*/ 03071000
@RF01023 TM    ROUT24,B'00100000'                                  1025 03072000
         BNO   @RF01025                                            1025 03073000
*               WTOGEN05=ROUTE24;   /* FILL WITH 24 ROUTE    @Z40LB01*/ 03074000
         MVC   WTOGEN05(2),ROUTE24                                 1026 03075000
*             RFY                                                  1027 03076000
*               R1 RSTD;            /*                       @Z40LB01*/ 03077000
@RF01025 DS    0H                                                  1028 03078000
*IWTO2:                                                            1028 03079000
*             DO;                   /* WTOP MF(E,WTOGEN) RTCD(R15)   */ 03080000
IWTO2    DS    0H                                                  1029 03081000
*               RFY                                                1029 03082000
*                 GPR01P RSTD;      /* RESTRICT REG 1                */ 03083000
*               GPR01P=ADDR(WTOGEN);/* ADDRESS CONTROL PROGRAM LIST  */ 03084000
         LA    GPR01P,WTOGEN                                       1030 03085000
*               SVC(35);            /* ISSUE WTO SVC                 */ 03086000
         SVC   35                                                  1031 03087000
*               RFY                                                1032 03088000
*                 GPR15F RSTD;      /* RESTRICT REG 15               */ 03089000
*               R15=GPR15F;         /* SAVE SVC RETURN CODE          */ 03090000
*               RFY                                                1034 03091000
*                 GPR15F UNRSTD;    /* RELEASE REG 15                */ 03092000
*               RFY                                                1035 03093000
*                 GPR01P UNRSTD;    /* RELEASE REG 1                 */ 03094000
*             END;                  /* WTOP MF(E,WTOGEN) RTCD(R15) 1036 03095000
*                                      ISSUE WTO MACRO       @Z40LB01*/ 03096000
*                                                                  1036 03097000
*             /*******************************************************/ 03098000
*             /*                                                     */ 03099000
*             /* TEST TO SEE IF A SECOND LINE IS REQUIRED. IF THE    */ 03100000
*             /*                                             @Z40LB01*/ 03101000
*             /* MESSAGE PROCESSED REQUIRES A SECOND LINE THEN       */ 03102000
*             /*                                             @Z40LB01*/ 03103000
*             /* LOCATE THE PROPER MESSAGE SKELETON, FILL IN THE     */ 03104000
*             /*                                             @Z40LB01*/ 03105000
*             /* VARIABLE DATA FIELDS, MOVE THE MESSAGE TO THE       */ 03106000
*             /*                                             @Z40LB01*/ 03107000
*             /* WTO AREA AND ISSUE THE SECOND WTO MACRO     @Z40LB01*/ 03108000
*             /*                                                     */ 03109000
*             /*******************************************************/ 03110000
*                                                                  1037 03111000
*             IF MSGC='83'X|MSGC='96'X|/* THESE REQ 2ND LINE @ZA17153*/ 03112000
*                 MSGC='9C'X THEN   /*                       @ZA17153*/ 03113000
         L     @12,MSGPTR                                          1037 03114000
         CLI   MSGC(@12),131                                       1037 03115000
         BE    @RT01037                                            1037 03116000
         CLI   MSGC(@12),150                                       1037 03117000
         BE    @RT01037                                            1037 03118000
         CLI   MSGC(@12),156                                       1037 03119000
         BNE   @RF01037                                            1037 03120000
@RT01037 DS    0H                                                  1038 03121000
*               DO;                 /* BUILD AND WRITE LINE  @Z40LB01*/ 03122000
*                 LINETWO=BZERO;    /* SET SW TO BYPASS WTO  @Z40LB01*/ 03123000
*                                                                  1039 03124000
         NI    LINETWO,B'11011111'                                 1039 03125000
*                 /***************************************************/ 03126000
*                 /*                                                 */ 03127000
*                 /* 83 MESSAGES ALWAYS REQUIRE A SECOND LINE        */ 03128000
*                 /*                                         @Z40LB01*/ 03129000
*                 /*                                                 */ 03130000
*                 /***************************************************/ 03131000
*                                                                  1040 03132000
*                 IF MSGC='83'X THEN/*                       @Z40LB01*/ 03133000
         L     @12,MSGPTR                                          1040 03134000
         CLI   MSGC(@12),131                                       1040 03135000
         BNE   @RF01040                                            1040 03136000
*                   DO;             /*                       @Z40LB01*/ 03137000
*                     WTOGEN03=MESGS(MSG08302);/* FILL WTO BUFFER  1042 03138000
*                                                            @Z40LB01*/ 03139000
         MVI   WTOGEN03+72,C' '                                    1042 03140000
         L     @11,@CA02101                                        1042 03141000
         MVC   WTOGEN03(72),MESGS-MSGS+304(@11)                    1042 03142000
*                     WTOGEN03(18:23)=MSGDATA(27:32);/* VOLID      1043 03143000
*                                                            @ZA09555*/ 03144000
         MVC   WTOGEN03+17(6),MSGDATA+26(@12)                      1043 03145000
*                     IF MSGDATA(33:33)='F1'X THEN/* SET CART      1044 03146000
*                                                            @ZA09555*/ 03147000
         CLI   MSGDATA+32(@12),X'F1'                               1044 03148000
         BNE   @RF01044                                            1044 03149000
*                       WTOGEN03(30:30)='F2'X;/* SEQ NUM     @ZA09555*/ 03150000
         MVI   WTOGEN03+29,X'F2'                                   1045 03151000
*                     ELSE                                         1046 03152000
*                       WTOGEN03(30:30)='F1'X;/* OF OTHER CART     1046 03153000
*                                                            @ZA09555*/ 03154000
         B     @RC01044                                            1046 03155000
@RF01044 MVI   WTOGEN03+29,X'F1'                                   1046 03156000
*                     WTOGEN03(32:43)=MSGDATA(15:26);/* CSN ID     1047 03157000
*                                                            @ZA09555*/ 03158000
@RC01044 L     @12,MSGPTR                                          1047 03159000
         MVC   WTOGEN03+31(12),MSGDATA+14(@12)                     1047 03160000
*                     IF MSGDATA(34:34)='F1'X THEN/* OTHER CART IN 1048 03161000
*                                      MSF?                  @ZA09555*/ 03162000
         CLI   MSGDATA+33(@12),X'F1'                               1048 03163000
         BNE   @RF01048                                            1048 03164000
*                       WTOGEN03(45:48)=LNOT;/* NOT THERE    @ZA09555*/ 03165000
         MVC   WTOGEN03+44(4),LNOT                                 1049 03166000
*                     ELSE                                         1050 03167000
*                       WTOGEN03(45:48)=LALSO;/* ALSO THERE  @ZA09555*/ 03168000
         B     @RC01048                                            1050 03169000
@RF01048 MVC   WTOGEN03+44(4),LALSO                                1050 03170000
*                     LINETWO=BONE; /* SET 2ND LINE WTO SW   @Z40LB01*/ 03171000
@RC01048 OI    LINETWO,B'00100000'                                 1051 03172000
*                   END;            /* END MSG83 2ND LINE    @Z40LB01*/ 03173000
*                                                                  1052 03174000
*                 /***************************************************/ 03175000
*                 /*                                                 */ 03176000
*                 /* 96 MESSAGES ONLY REQUIRE A SECOND LINE IF THE   */ 03177000
*                 /*                                         @Z40LB01*/ 03178000
*                 /* ERROR CAUSING THE MESSAGE TO COME UP IS A       */ 03179000
*                 /*                                         @Z40LB01*/ 03180000
*                 /* RESULT OF A DESTAGING ERROR. ON DESTAGE ERRORS, */ 03181000
*                 /*                                         @Z40LB01*/ 03182000
*                 /* THE INSTALLATION PERSONNEL REQUIRE THE VIRTUAL  */ 03183000
*                 /*                                         @Z40LB01*/ 03184000
*                 /* AND REAL VOLUME CYLINDERS WHERE THE ERROR       */ 03185000
*                 /*                                         @Z40LB01*/ 03186000
*                 /* OCCURRED TO BE TRANSLTED AND REPORTED TO THE    */ 03187000
*                 /*                                         @Z40LB01*/ 03188000
*                 /* OPERATOR SO CORRECTIVE ACTION CAN BE INITIATED  */ 03189000
*                 /*                                         @Z40LB01*/ 03190000
*                 /* TO RECOVER FROM THE ERROR.              @Z40LB01*/ 03191000
*                 /*                                                 */ 03192000
*                 /***************************************************/ 03193000
*                                                                  1053 03194000
*                 IF MSGC='96'X&DSTGERR=BONE THEN/* 2ND LINE REQ   1053 03195000
*                                                            @Z40LB01*/ 03196000
@RF01040 L     @12,MSGPTR                                          1053 03197000
         CLI   MSGC(@12),150                                       1053 03198000
         BNE   @RF01053                                            1053 03199000
         TM    DSTGERR,B'01000000'                                 1053 03200000
         BNO   @RF01053                                            1053 03201000
*                   DO;             /* MSG96 2ND LINE        @Z40LB01*/ 03202000
*                     WTOGEN03=MESGS(MSG09602);/* FILL WTO BUFFER  1055 03203000
*                                                            @Z40LB01*/ 03204000
         MVI   WTOGEN03+72,C' '                                    1055 03205000
         L     @11,@CA02101                                        1055 03206000
         MVC   WTOGEN03(72),MESGS-MSGS+912(@11)                    1055 03207000
*                     WTOGEN03(56:61)=MSGDATA(7:12);/* VOLID @Z40LB01*/ 03208000
         MVC   WTOGEN03+55(6),MSGDATA+6(@12)                       1056 03209000
*                     BYTE4C=MSGDATA(6:6);/* CYLINDER IN ERROR     1057 03210000
*                                                            @Z40LB01*/ 03211000
         MVC   BYTE4C(1),MSGDATA+5(@12)                            1057 03212000
*                     LOOPEND=BZERO;/* SET LOOPEND SW OFF    @Z40LB01*/ 03213000
         NI    LOOPEND,B'11101111'                                 1058 03214000
*                     IF BYTE4=F0 THEN/* USE CYL 0 IN CALC   @Z40LB01*/ 03215000
         CLI   BYTE4,0                                             1059 03216000
         BNE   @RF01059                                            1059 03217000
*                       J=F1;       /* SET J = 1             @Z40LB01*/ 03218000
         MVC   J(4),@CF00117                                       1060 03219000
*                     ELSE          /* FIND THE CYL NO       @Z40LB01*/ 03220000
*                       DO;         /* SCAN CYL BITS FIRST   @Z40LB01*/ 03221000
         B     @RC01059                                            1061 03222000
@RF01059 DS    0H                                                  1062 03223000
*                         J=F0;     /* SET RELATIVE CYL NO   @Z40LB01*/ 03224000
         SLR   @12,@12                                             1062 03225000
         ST    @12,J                                               1062 03226000
*                         DO UNTIL LOOPEND=BONE;/* SCAN BITS @Z40LB01*/ 03227000
@DL01063 DS    0H                                                  1064 03228000
*                           J=J+F1; /* DEC RELATIVE CYL NO   @Z40LB01*/ 03229000
         LA    @12,1                                               1064 03230000
         AL    @12,J                                               1064 03231000
         ST    @12,J                                               1064 03232000
*                           IF CONFGMSK(J)=(BYTE4&CONFGMSK(J)) THEN/*   03233000
*                                                            @Z40LB01*/ 03234000
         SLR   @11,@11                                             1065 03235000
         IC    @11,CONFGMSK-1(@12)                                 1065 03236000
         SLR   @12,@12                                             1065 03237000
         IC    @12,BYTE4                                           1065 03238000
         NR    @12,@11                                             1065 03239000
         CR    @11,@12                                             1065 03240000
         BNE   @RF01065                                            1065 03241000
*                             LOOPEND=BONE;/* SET LOOP EXIT SW     1066 03242000
*                                                            @Z40LB01*/ 03243000
         OI    LOOPEND,B'00010000'                                 1066 03244000
*                         END;      /* END DO UNTIL LOOP     @Z40LB01*/ 03245000
@RF01065 DS    0H                                                  1067 03246000
@DE01063 TM    LOOPEND,B'00010000'                                 1067 03247000
         BNO   @DL01063                                            1067 03248000
*                       END;        /* END SCAN              @Z40LB01*/ 03249000
*                     INTER=''B;    /* CLEAR CONV WORK AREA  @Z40LB01*/ 03250000
@RC01059 XC    INTER(4),INTER                                      1069 03251000
*                     BYTE4C=MSGDATA(5:5);/* THE REAL PAGE NO BYTE 1070 03252000
*                                                            @Z40LB01*/ 03253000
*                                                                  1070 03254000
         L     @12,MSGPTR                                          1070 03255000
         MVC   BYTE4C(1),MSGDATA+4(@12)                            1070 03256000
*                     /***********************************************/ 03257000
*                     /*                                             */ 03258000
*                     /* ALGORITHM FOR REAL CYL CALCULATION -        */ 03259000
*                     /*                                     @Z40LB01*/ 03260000
*                     /* REAL PAGE *8 -7 +CYLINDER           @Z40LB01*/ 03261000
*                     /* THE CYL BYTE IS BIT SENSITIVE 0THRU7        */ 03262000
*                     /*                                     @Z40LB01*/ 03263000
*                     /*                                             */ 03264000
*                     /***********************************************/ 03265000
*                                                                  1071 03266000
*                     INTER=(INTER*8)+J-F8;/* CALC REAL VOL CYL NO 1071 03267000
*                                                            @Z40LB01*/ 03268000
         L     @12,INTER                                           1071 03269000
         SLL   @12,3                                               1071 03270000
         AL    @12,J                                               1071 03271000
         SL    @12,@CF00115                                        1071 03272000
         ST    @12,INTER                                           1071 03273000
*                     CALL ICBMSG82;/* CONV SUBROUTINE       @Z40LB01*/ 03274000
         BAL   @14,ICBMSG82                                        1072 03275000
*                     WTOGEN03(45:47)=BYTES234;/* REAL VOL CYL     1073 03276000
*                                                            @Z40LB01*/ 03277000
         MVC   WTOGEN03+44(3),BYTES234                             1073 03278000
*                     INTER=''B;    /* CLEAR CONV WORK AREA  @Z40LB01*/ 03279000
         XC    INTER(4),INTER                                      1074 03280000
*                     BYTE4C=MSGDATA(4:4);/* THE VIRT PAGE NO BYTE 1075 03281000
*                                                            @Z40LB01*/ 03282000
*                                                                  1075 03283000
         L     @12,MSGPTR                                          1075 03284000
         MVC   BYTE4C(1),MSGDATA+3(@12)                            1075 03285000
*                     /***********************************************/ 03286000
*                     /*                                             */ 03287000
*                     /* ALGORITHM FOR VIRT CYL CALCULATION -        */ 03288000
*                     /*                                     @Z40LB01*/ 03289000
*                     /* VIRT PAGE *8 +CYLINDER              @Z40LB01*/ 03290000
*                     /* THE CYL BYTE IS BIT SENSITIVE 0THRU7        */ 03291000
*                     /*                                     @Z40LB01*/ 03292000
*                     /*                                             */ 03293000
*                     /***********************************************/ 03294000
*                                                                  1076 03295000
*                     INTER=(INTER*8)+J-F1;/* CALC VIRT VOL CYL NO 1076 03296000
*                                                            @Z40LB01*/ 03297000
         L     @12,INTER                                           1076 03298000
         SLL   @12,3                                               1076 03299000
         AL    @12,J                                               1076 03300000
         BCTR  @12,0                                               1076 03301000
         ST    @12,INTER                                           1076 03302000
*                     CALL ICBMSG82;/* CALL CONV SUBROUTINE  @Z40LB01*/ 03303000
         BAL   @14,ICBMSG82                                        1077 03304000
*                     WTOGEN03(31:33)=BYTES234;/* VIRT VOL CYL     1078 03305000
*                                                            @Z40LB01*/ 03306000
         MVC   WTOGEN03+30(3),BYTES234                             1078 03307000
*                     LINETWO=BONE; /* SET SW FOR 2ND WTO    @Z40LB01*/ 03308000
         OI    LINETWO,B'00100000'                                 1079 03309000
*                   END;            /* END MSG96 2ND LINE    @Z40LB01*/ 03310000
*                                                                  1080 03311000
*                 /***************************************************/ 03312000
*                 /*                                                 */ 03313000
*                 /* 9C MESSAGES ONLY REQUIRE A SECOND LINE IF THE   */ 03314000
*                 /*                                         @ZA17153*/ 03315000
*                 /* CART LABEL IS READABLE.                 @ZA17153*/ 03316000
*                 /*                                                 */ 03317000
*                 /***************************************************/ 03318000
*                                                                  1081 03319000
*                 IF MSGC='9C'X&BADLAB=BZERO THEN/*          @ZA17153*/ 03320000
@RF01053 L     @12,MSGPTR                                          1081 03321000
         CLI   MSGC(@12),156                                       1081 03322000
         BNE   @RF01081                                            1081 03323000
         TM    BADLAB+2(@12),B'10000000'                           1081 03324000
         BNZ   @RF01081                                            1081 03325000
*                   DO;             /* CART LABEL GOOD CODE  @ZA17153*/ 03326000
*                     WTOGEN03=MESGS(MSG10202);/* FILL MSG BUFFER  1083 03327000
*                                                            @ZA17153*/ 03328000
         MVI   WTOGEN03+72,C' '                                    1083 03329000
         L     @11,@CA02101                                        1083 03330000
         MVC   WTOGEN03(72),MESGS-MSGS+3192(@11)                   1083 03331000
*                     WTOGEN03(11:61)=MSGDATA(43:93);/* LABEL DATA 1084 03332000
*                                      FLD                   @ZA17153*/ 03333000
         MVC   WTOGEN03+10(51),MSGDATA+42(@12)                     1084 03334000
*                     LINETWO=BONE; /* SET SECOND LINE SW    @ZA17153*/ 03335000
         OI    LINETWO,B'00100000'                                 1085 03336000
*                   END;            /* END LABEL GOOD CODE   @ZA17153*/ 03337000
*                                                                  1086 03338000
*                 /***************************************************/ 03339000
*                 /*                                                 */ 03340000
*                 /* IF ANY NEW MESSAGES NEED A SECOND LINE ADD A    */ 03341000
*                 /*                                         @Z40LB01*/ 03342000
*                 /* TEST FOR THAT MSGC AND BUILD THE SECOND LINE    */ 03343000
*                 /*                                         @Z40LB01*/ 03344000
*                 /* FOR THE MESSAGE HERE.                   @Z40LB01*/ 03345000
*                 /* THE NEXT CODE MOVES THE MESSAGE INTO THE WTO    */ 03346000
*                 /*                                         @Z40LB01*/ 03347000
*                 /* LIST WORK AREA AND ISSUES THE WTO MACRO.        */ 03348000
*                 /*                                         @Z40LB01*/ 03349000
*                 /*                                                 */ 03350000
*                 /***************************************************/ 03351000
*                                                                  1087 03352000
*                 IF LINETWO=BONE THEN/* 1ND WTO REQUIRED    @Z40LB01*/ 03353000
@RF01081 TM    LINETWO,B'00100000'                                 1087 03354000
         BNO   @RF01087                                            1087 03355000
*                   DO;             /* SET UP AND ISSUE WTO  @Z40LB01*/ 03356000
*IWTO3:                                                            1089 03357000
*                     DO;           /* WTOP MF(E,WTOGEN) RTCD(R15)   */ 03358000
IWTO3    DS    0H                                                  1090 03359000
*                       RFY                                        1090 03360000
*                         GPR01P RSTD;/* RESTRICT REG 1              */ 03361000
*                       GPR01P=ADDR(WTOGEN);/* ADDRESS CONTROL     1091 03362000
*                                      PROGRAM LIST                  */ 03363000
         LA    GPR01P,WTOGEN                                       1091 03364000
*                       SVC(35);    /* ISSUE WTO SVC                 */ 03365000
         SVC   35                                                  1092 03366000
*                       RFY                                        1093 03367000
*                         GPR15F RSTD;/* RESTRICT REG 15             */ 03368000
*                       R15=GPR15F; /* SAVE SVC RETURN CODE          */ 03369000
*                       RFY                                        1095 03370000
*                         GPR15F UNRSTD;/* RELEASE REG 15            */ 03371000
*                       RFY                                        1096 03372000
*                         GPR01P UNRSTD;/* RELEASE REG 1             */ 03373000
*                     END;          /* WTOP MF(E,WTOGEN) RTCD(R15) 1097 03374000
*                                      ISSUE WTO MACRO       @Z40LB01*/ 03375000
*                   END;            /* END 2ND WTO           @Z40LB01*/ 03376000
*               END;                /* END SECOND LINE CODE  @Z40LB01*/ 03377000
@RF01087 DS    0H                                                  1100 03378000
*           END;                    /* END OF WTO OK CODE    @Z40LB01*/ 03379000
@RF01037 DS    0H                                                  1101 03380000
*         WTOGEN04=SAVDESC;         /* RESTORE ORIG DESC     @Z40LB01*/ 03381000
@RF01019 MVC   WTOGEN04(2),SAVDESC                                 1101 03382000
*         WTOGEN05=SAVROUT;         /* RESTORE ORIG ROUT     @Z40LB01*/ 03383000
         MVC   WTOGEN05(2),SAVROUT                                 1102 03384000
*       END;                        /* END UNSOLICITED MESSAGE     1103 03385000
*                                      PROCESS               @Z40LB01*/ 03386000
*                                                                  1104 03387000
*/******************************************************     @Z40LB01*/ 03388000
*/*                                                          @Z40LB01*/ 03389000
*/*  RETURN TO CALLING ROUTINE ICBMSG10.                     @Z40LB01*/ 03390000
*/*                                                          @Z40LB01*/ 03391000
*/******************************************************     @Z40LB01*/ 03392000
*                                                                  1104 03393000
*   RFY                                                            1104 03394000
*     R1 UNRSTD;                    /* FREE R1               @Z40LB01*/ 03395000
@RC00742 DS    0H                                                  1104 03396000
@RC00736 DS    0H                                                  1105 03397000
*   RFY                                                            1105 03398000
*     R14 RSTD;                     /*                       @G24LB02*/ 03399000
*   R14=SAVR1415;                   /* RESTORE REG 14        @Z40LB01*/ 03400000
         L     R14,SAVR1415                                        1106 03401000
*   RFY                                                            1107 03402000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 03403000
*   RETURN;                         /* RTN TO ICBMSG10       @Z40LB01*/ 03404000
@EL00007 DS    0H                                                  1108 03405000
@EF00007 DS    0H                                                  1108 03406000
@ER00007 BR    @14                                                 1108 03407000
*   END ICBMSG15;                   /*                       @Z40LB01*/ 03408000
*                                                                  1110 03409000
*/****************************************************       #Y30LB03*/ 03410000
*/*  START OF SPECIFICATIONS ****                             @Y30LB03  03411000
*                                                             @Y30LB03  03412000
*01*  MODULE-NAME = ICBMSG16                                  @Y30LB03  03413000
*                                                             @Y30LB03  03414000
*01*  DESCRIPTIVE-NAME = SMF CONFIGURATION SUBROUTINE         @Y30LB03  03415000
*                                                             @Y30LB03  03416000
*01*  FUNCTION = CREATE AND WRITE SMF CONFIGURATION RECORD    @Y30LB03  03417000
*                                                             @Y30LB03  03418000
*                                                             @Y30LB03  03419000
*02*    PURPOSE = TO DEFINE AN SMF CONFIGURATION RECORD       @Y30LB03  03420000
*       THAT REFLECTS THOSE UNITS IN MSS THAT EXIST AND       @Y30LB03  03421000
*       ARE ONLINE.  AND, TO RECORD THIS DATA ON SYS1.MANX.   @Y30LB03  03422000
*                                                             @Y30LB03  03423000
*02*    INPUT = CONFIGURATION MESSAGE (CONTAINING SMF DATA)   @Y30LB03  03424000
*       THAT APPLIES TO MSS AT TIME OF THIS IPL.              @ZM31014  03425000
*       (THIS IS A 92 MESSAGE FROM THE MSC )                  @ZM31014  03426000
*                                                             @Y30LB03  03427000
*02*    OUTPUT = SMF RECORD WRITTEN TO SYS1.MANX              @Y30LB03  03428000
*       MESSAGE ICB094I ABOUT TABLES PACKS IS SENT TO CONSOLE @ZM31014  03429000
*                                                             @Y30LB03  03430000
**** END OF SPECIFICATIONS **                                @Y30LB03*/ 03431000
*                                                                  1110 03432000
*ICBMSG16:                                                         1110 03433000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB03*/ 03434000
ICBMSG16 DS    0H                                                  1111 03435000
*/*  VARIABLE DATA FOR SMF CONFIGURATION RECORD, TYPE 22     @Y30LB03*/ 03436000
*                                                                  1111 03437000
*   DCL                                                            1111 03438000
*     SSIDLENM FIXED CONSTANT(2);   /* CHARS TO FILL IN LESS 1     1111 03439000
*                                                            @ZD00177*/ 03440000
*/*  POSITION IN MESSAGE FOR 1ST CHAR OF TABLES PACK SSIDS   @ZD00177*/ 03441000
*                                                                  1112 03442000
*   DCL                                                            1112 03443000
*     PAKMPOS(2) FIXED(8) INIT(41,62);/* PACK PLACE IN MSG   @ZD00177*/ 03444000
*   RFY                                                            1113 03445000
*     R14 RSTD;                     /*                       @G24LB02*/ 03446000
*   SAVR1416=R14;                   /* SAVE REGISTER 14      @Z307B04*/ 03447000
         ST    R14,SAVR1416                                        1114 03448000
*   RFY                                                            1115 03449000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 03450000
*/*  *****************************************************   @Y30LB03*/ 03451000
*/*                                                          @Y30LB03*/ 03452000
*                                                                  1116 03453000
*   RFY                                                            1116 03454000
*     SMF22IPL BASED(SMF22PTR+LENGTH(SMFRCD22));/*           @G24LB02*/ 03455000
*   IF CVTSMCA^=F0 THEN             /* IS SMF AVAILABLE?     @Y30LB03*/ 03456000
         L     @12,CVTPTR                                          1117 03457000
         L     @12,CVTSMCA(,@12)                                   1117 03458000
         LTR   @12,@12                                             1117 03459000
         BZ    @RF01117                                            1117 03460000
*     DO;                           /* YES, CONTINUE         @Y30LB03*/ 03461000
*                                                                  1118 03462000
*       /*************************************************************/ 03463000
*       /*                                                           */ 03464000
*       /* INITIALIZE SMF RECORD TYPE 22                     @Y30LB03*/ 03465000
*       /*                                                           */ 03466000
*       /*************************************************************/ 03467000
*                                                                  1119 03468000
*       SMFRCD22=''B;               /* ZERO RECORD           @G24LB02*/ 03469000
         L     @12,SMF22PTR                                        1119 03470000
         XC    SMFRCD22(22,@12),SMFRCD22(@12)                      1119 03471000
*       SMF22LEN=LENGTH(SMFRCD22)+LENGTH(SMF22IPL);                1120 03472000
         MVC   SMF22LEN(2,@12),@CH00935                            1120 03473000
*       SMF22RTY='16'X;             /* RECORD TYPE 22        @G24LB02*/ 03474000
         MVI   SMF22RTY(@12),X'16'                                 1121 03475000
*       SMF22IND='04'X;             /* RECORD CREATOR INDIC  @G24LB02*/ 03476000
         LA    @11,4                                               1122 03477000
         STH   @11,SMF22IND(,@12)                                  1122 03478000
*       SMF22ECT='0001'X;           /* NUMBER OF RECS        @G24LB02*/ 03479000
         MVC   SMF22ECT(2,@12),@CH02431                            1123 03480000
*       SMF22IPL=''B;               /* ZERO IPL LIST         @G24LB02*/ 03481000
         LA    @11,22                                              1124 03482000
         ALR   @11,@12                                             1124 03483000
         XC    SMF22IPL(42,@11),SMF22IPL(@11)                      1124 03484000
*       SMF22IID='04'X;             /* RECORD ELEMENT        @G24LB02*/ 03485000
         MVI   SMF22IID(@11),X'04'                                 1125 03486000
*       SMF22ION=EXIST&ONLIN;       /* DEFINE SMF DATA       @G24LB02*/ 03487000
         L     @09,MSGPTR                                          1126 03488000
         MVC   SMF22ION(40,@11),EXIST(@09)                         1126 03489000
         NC    SMF22ION(40,@11),ONLIN(@09)                         1126 03490000
*       RFY                                                        1127 03491000
*         R1 RSTD;                  /*                       @G24LB02*/ 03492000
*       R1=SMF22PTR;                /* PTR TO SMF PARM LIST  @G24LB02*/ 03493000
         LR    R1,@12                                              1128 03494000
*       CALL ICBMSG83;              /* CALL SMF SUBRTN       @G24LB02*/ 03495000
         BAL   @14,ICBMSG83                                        1129 03496000
*       RFY                                                        1130 03497000
*         R1 UNRSTD;                /*                       @G24LB02*/ 03498000
*     END;                          /*                       @ZM31014*/ 03499000
*/*  GET AND PRINT PRIMARY AND SECONDARY TABLES PACK ID INFO @ZD00177*/ 03500000
*                                                                  1132 03501000
*   WTOGEN03=MESGS(MSG09401);       /* FILL WTO BUFFER       @Z40LB01*/ 03502000
@RF01117 MVI   WTOGEN03+72,C' '                                    1132 03503000
         L     @12,@CA02101                                        1132 03504000
         MVC   WTOGEN03(72),MESGS-MSGS+2356(@12)                   1132 03505000
*   DO K=F1 TO F2;                  /* DO ONCE FOR PRIMARY, ONCE FOR    03506000
*                                      SECONDARY             @ZD00177*/ 03507000
         LA    @12,1                                               1133 03508000
         ST    @12,K                                               1133 03509000
@DL01133 DS    0H                                                  1134 03510000
*     INTER=''B;                    /* CLEAR CONVERSION AREA @ZD00177*/ 03511000
         XC    INTER(4),INTER                                      1134 03512000
*     BYTE4C=TPAKSSID(K);           /* BYTE OF ID FROM MSC MESSAGE 1135 03513000
*                                                            @ZD00177*/ 03514000
         L     @11,MSGPTR                                          1135 03515000
         ALR   @11,@12                                             1135 03516000
         MVC   BYTE4C(1),TPAKSSID+1(@11)                           1135 03517000
*     CALL ICBMSG82;                /* FOR CONVERSION TO EBCDIC    1136 03518000
*                                                            @ZD00177*/ 03519000
*                                                                  1136 03520000
         BAL   @14,ICBMSG82                                        1136 03521000
*     /***************************************************************/ 03522000
*     /*                                                             */ 03523000
*     /* PUT CONVERTED CUU INTO MESSAGE AT PROPER POSITION   @ZD00177*/ 03524000
*     /*                                                             */ 03525000
*     /***************************************************************/ 03526000
*                                                                  1137 03527000
*     WTOGEN03(PAKMPOS(K):PAKMPOS(K)+SSIDLENM)=BYTES234;/*   @Z40LB01*/ 03528000
         L     @12,K                                               1137 03529000
         SLR   @11,@11                                             1137 03530000
         IC    @11,PAKMPOS-1(@12)                                  1137 03531000
         LA    @09,WTOGEN03-1(@11)                                 1137 03532000
         MVC   0(3,@09),BYTES234                                   1137 03533000
*   END;                            /* CONVERTING SSID OF TABLES   1138 03534000
*                                      PACKS                 @ZD00177*/ 03535000
         AL    @12,@CF00117                                        1138 03536000
         ST    @12,K                                               1138 03537000
         C     @12,@CF00129                                        1138 03538000
         BNH   @DL01133                                            1138 03539000
*/*  NOW WRITE TABLES PACK ID MESSAGE                        @ZD00177*/ 03540000
*                                                                  1139 03541000
*   CALL ICBMSG45;                  /* SUBROUTINE WHICH WRITES     1139 03542000
*                                      MESSAGE               @ZD00177*/ 03543000
         BAL   @14,ICBMSG45                                        1139 03544000
*   RFY                                                            1140 03545000
*     R14 RSTD;                     /*                       @G24LB02*/ 03546000
*   R14=SAVR1416;                   /* RESTORE REGISTER 14   @Z307B04*/ 03547000
         L     R14,SAVR1416                                        1141 03548000
*   RFY                                                            1142 03549000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 03550000
*   RETURN;                         /* RETURN TO ICBMSG15    @Y30LB03*/ 03551000
@EL00008 DS    0H                                                  1143 03552000
@EF00008 DS    0H                                                  1143 03553000
@ER00008 BR    @14                                                 1143 03554000
*   END ICBMSG16;                   /*                       @Y30LB03*/ 03555000
*                                                                  1145 03556000
*/*********************************************************  @Y30LB03*/ 03557000
*/*  START OF SPECIFICATIONS ****                             @Y30LB03  03558000
*                                                             @Y30LB03  03559000
*01*  MODULE-NAME = ICBMSG17                                  @Y30LB03  03560000
*                                                             @Y30LB03  03561000
*01*  DESCRIPTIVE-NAME = CONFIGURATION MESSAGE SUBROUTINE     @ZM31014  03562000
*                                                             @Y30LB03  03563000
*01*  FUNCTION = PROCESS MSS CONFIGURATION MESSAGE  (90)      @ZM31014  03564000
*                                                             @Y30LB03  03565000
*02*    INPUT = MSC MESSAGE THAT INDICATES STATUS OF EACH     @Y30LB03  03566000
*               SSID DEFINED IN MSS.                          @Y30LB03  03567000
*                                                             @Y30LB03  03568000
*02*    OUTPUT = CONFIGURATION MESSAGES (INFORMATIONAL        @Y30LB03  03569000
*       AND ERROR) WRITTEN TO OPERATOR.                       @Y30LB03  03570000
*                                                             @Y30LB03  03571000
**** END OF SPECIFICATIONS **                                @Y30LB03*/ 03572000
*                                                                  1145 03573000
*ICBMSG17:                                                         1145 03574000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB03*/ 03575000
*                                                                  1145 03576000
ICBMSG17 DS    0H                                                  1146 03577000
*   /*****************************************************************/ 03578000
*   /*                                                               */ 03579000
*   /* DESC. FOR MSG 92                                      @Y30LB03*/ 03580000
*   /*                                                               */ 03581000
*   /*****************************************************************/ 03582000
*                                                                  1146 03583000
*   DCL                                                            1146 03584000
*     WTO92 BIT(16) INIT('0010000000000000'B);/*             @Y30LB03*/ 03585000
*                                                                  1146 03586000
*   /*****************************************************************/ 03587000
*   /*                                                               */ 03588000
*   /* DESC. FOR OTHERS                                      @Y30LB03*/ 03589000
*   /*                                                               */ 03590000
*   /*****************************************************************/ 03591000
*                                                                  1147 03592000
*   DCL                                                            1147 03593000
*     WTOREST BIT(16) INIT('0001000000000000'B);/*           @Y30LB03*/ 03594000
*   RFY                                                            1148 03595000
*     R14 RSTD;                     /*                       @G24LB02*/ 03596000
*   SAVR1417=R14;                   /* SAVE REGISTER 14 FOR RETURN 1149 03597000
*                                                            @ZD00177*/ 03598000
         ST    R14,SAVR1417                                        1149 03599000
*   RFY                                                            1150 03600000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 03601000
*/*********************************************************  #YM02189*/ 03602000
*/* ZERO OUT THE RESERVED BYTES IN THE MSG                   #YM02189*/ 03603000
*/*********************************************************  #YM02189*/ 03604000
*                                                                  1151 03605000
*   EXISTING(39)=F0;                /*                       #YM02189*/ 03606000
         LA    @12,2                                               1151 03607000
         AL    @12,MSGPTR                                          1151 03608000
         MVI   EXISTING+38(@12),X'00'                              1151 03609000
*   ONLINE(39)=F0;                  /*                       #YM02189*/ 03610000
         MVI   ONLINE+38(@12),X'00'                                1152 03611000
*   AVAILBL(39)=F0;                 /*                       #YM02189*/ 03612000
         MVI   AVAILBL+38(@12),X'00'                               1153 03613000
*   DO K=F1 TO F40;                 /* DETERMINE STATUS OF   #Y30LB03   03614000
*                                      SSID ACCORDING TO     @Y30LB03   03615000
*                                      CONFIG MAPPING OF MSG @Y30LB03*/ 03616000
         LA    @12,1                                               1154 03617000
         ST    @12,K                                               1154 03618000
@DL01154 DS    0H                                                  1155 03619000
*     DO J=F1 TO F8;                /* DO LOOP FOR BITS      @Y30LB03*/ 03620000
*                                                                  1155 03621000
         LA    @12,1                                               1155 03622000
         ST    @12,J                                               1155 03623000
@DL01155 DS    0H                                                  1156 03624000
*       /*************************************************************/ 03625000
*       /*                                                           */ 03626000
*       /* DOES SSID EXIST?                                  @Y30LB03*/ 03627000
*       /*                                                           */ 03628000
*       /*************************************************************/ 03629000
*                                                                  1156 03630000
*       IF CONFGMSK(J)=(EXISTING(K)&CONFGMSK(J)) THEN/*      @Y30LB03*/ 03631000
         L     @11,K                                               1156 03632000
         LA    @09,2                                               1156 03633000
         AL    @09,MSGPTR                                          1156 03634000
         ALR   @11,@09                                             1156 03635000
         MVC   @TS00001(1),EXISTING-1(@11)                         1156 03636000
         LA    @11,CONFGMSK-1(@12)                                 1156 03637000
         NC    @TS00001(1),0(@11)                                  1156 03638000
         LA    @11,CONFGMSK-1(@12)                                 1156 03639000
         CLC   0(1,@11),@TS00001                                   1156 03640000
         BNE   @RF01156                                            1156 03641000
*         IF CONFGMSK(J)=(ONLINE(K)&CONFGMSK(J)) THEN/*      @Y30LB03   03642000
*                                      YES,IS IT ONLINE?     @Y30LB03*/ 03643000
         L     @11,K                                               1157 03644000
         ALR   @11,@09                                             1157 03645000
         MVC   @TS00001(1),ONLINE-1(@11)                           1157 03646000
         LA    @11,CONFGMSK-1(@12)                                 1157 03647000
         NC    @TS00001(1),0(@11)                                  1157 03648000
         LA    @11,CONFGMSK-1(@12)                                 1157 03649000
         CLC   0(1,@11),@TS00001                                   1157 03650000
         BNE   @RF01157                                            1157 03651000
*           IF CONFGMSK(J)=(AVAILBL(K)&CONFGMSK(J)) THEN/*   @Y30LB03   03652000
*                                      YES,IS IT AVAILBL?    @Y30LB03*/ 03653000
         L     @11,K                                               1158 03654000
         ALR   @09,@11                                             1158 03655000
         MVC   @TS00001(1),AVAILBL-1(@09)                          1158 03656000
         LA    @11,CONFGMSK-1(@12)                                 1158 03657000
         NC    @TS00001(1),0(@11)                                  1158 03658000
         LA    @11,CONFGMSK-1(@12)                                 1158 03659000
         CLC   0(1,@11),@TS00001                                   1158 03660000
         BE    @RT01158                                            1158 03661000
*             ;                                                    1159 03662000
*           ELSE                    /* IF NOT AVAILABLE      @Y30LB03   03663000
*                                      (BUT ONLINE) ...      @Y30LB03*/ 03664000
*             DO;                   /* CREATE SSID CONFIG    @Y30LB03   03665000
*                                      ERROR MSG             @Y30LB03*/ 03666000
*               WTOGEN03=MESGS(MSG09201);/* FILL BUFF        @Z40LB01*/ 03667000
         MVI   WTOGEN03+72,C' '                                    1161 03668000
         L     @12,@CA02101                                        1161 03669000
         MVC   WTOGEN03(72),MESGS-MSGS+2280(@12)                   1161 03670000
*               WTOGEN03(14:16)=SSIDS((K-F1)*F8+J);/*        @Z40LB01   03671000
*                                      FILL IN SSID          @Y30LB03*/ 03672000
         L     @12,K                                               1162 03673000
         BCTR  @12,0                                               1162 03674000
         SLA   @12,3                                               1162 03675000
         AL    @12,J                                               1162 03676000
         MH    @12,@CH00081                                        1162 03677000
         L     @11,@CA02112                                        1162 03678000
         ALR   @11,@12                                             1162 03679000
         AL    @11,@CF03331                                        1162 03680000
         MVC   WTOGEN03+13(3),SSIDS-SSIDS(@11)                     1162 03681000
*               WTOGEN04=WTO92;     /* FILL IN DESC.         @Y30LB03*/ 03682000
         MVC   WTOGEN04(2),WTO92                                   1163 03683000
*               CALL ICBMSG45;      /* CALL WTO SUBRTN       @Y30LB03*/ 03684000
         BAL   @14,ICBMSG45                                        1164 03685000
*               WTOGEN04=WTOREST;   /* RESTORE DESC.         @Y30LB03*/ 03686000
         MVC   WTOGEN04(2),WTOREST                                 1165 03687000
*             END;                  /*                       @Y30LB03*/ 03688000
*         ELSE                      /* NOT ONLINE            @Y30LB03*/ 03689000
*           DO;                     /* CREATE SSID OFFLINE   @Y30LB03   03690000
*                                      INFORMATION MSG       @Y30LB03*/ 03691000
         B     @RC01157                                            1167 03692000
@RF01157 DS    0H                                                  1168 03693000
*             WTOGEN03=MESGS(MSG09001);/* FILL WTO BUFF      @Z40LB01*/ 03694000
         MVI   WTOGEN03+72,C' '                                    1168 03695000
         L     @12,@CA02101                                        1168 03696000
         MVC   WTOGEN03(72),MESGS-MSGS+2204(@12)                   1168 03697000
*             WTOGEN03(14:16)=SSIDS((K-F1)*F8+J);/*          @Z40LB01   03698000
*                                      FILL IN SSID          @Y30LB03*/ 03699000
         L     @12,K                                               1169 03700000
         BCTR  @12,0                                               1169 03701000
         SLA   @12,3                                               1169 03702000
         AL    @12,J                                               1169 03703000
         MH    @12,@CH00081                                        1169 03704000
         L     @11,@CA02112                                        1169 03705000
         ALR   @11,@12                                             1169 03706000
         AL    @11,@CF03331                                        1169 03707000
         MVC   WTOGEN03+13(3),SSIDS-SSIDS(@11)                     1169 03708000
*             CALL ICBMSG45;        /* CALL WTO SUBRTN       @Y30LB03*/ 03709000
         BAL   @14,ICBMSG45                                        1170 03710000
*           END;                    /*                       @Y30LB03*/ 03711000
*     END;                          /*                       @Y30LB03*/ 03712000
@RC01157 DS    0H                                                  1172 03713000
@RF01156 LA    @12,1                                               1172 03714000
         AL    @12,J                                               1172 03715000
         ST    @12,J                                               1172 03716000
         C     @12,@CF00115                                        1172 03717000
         BNH   @DL01155                                            1172 03718000
*   END;                            /*                       @Y30LB03*/ 03719000
         LA    @12,1                                               1173 03720000
         AL    @12,K                                               1173 03721000
         ST    @12,K                                               1173 03722000
         C     @12,@CF02094                                        1173 03723000
         BNH   @DL01154                                            1173 03724000
*   RFY                                                            1174 03725000
*     R14 RSTD;                     /*                       @G24LB02*/ 03726000
*   R14=SAVR1417;                   /* RESTORE RETURN ADDRESS      1175 03727000
*                                                            @ZD00177*/ 03728000
         L     R14,SAVR1417                                        1175 03729000
*   RFY                                                            1176 03730000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 03731000
*   RETURN;                         /* RETURN TO ICBMSG15    @Y30LB03*/ 03732000
@EL00009 DS    0H                                                  1177 03733000
@EF00009 DS    0H                                                  1177 03734000
@ER00009 BR    @14                                                 1177 03735000
*   END ICBMSG17;                   /*                       @ZM31014*/ 03736000
*                                                                  1179 03737000
*/********************************************************   @ZM31014*/ 03738000
*/*                                                          @ZM31014*/ 03739000
*/*     ICBMSG18     HANDLES 90 AND 92 MESSAGES FROM MSC     @ZM31014*/ 03740000
*/*                                                          @ZM31014*/ 03741000
*/*     PURPOSE   DURING MSSC INITIALIZATION,                @ZM31014*/ 03742000
*/*           GET STORAGE IN WHICH THE LAST-RECEIVED 90 AND  @ZM31014*/ 03743000
*/*             92 MESSAGES MAY BE KEPT.                     @ZM31014*/ 03744000
*/*           WRITE EACH 90 OR 92 MESSAGE RECEIVED ON TOP OF @ZM31014*/ 03745000
*/*           ITS PREDECESSOR IN THIS SPECIAL AREA           @ZM31014*/ 03746000
*/*           WHEN NOTIFIED THAT ALL OF THE MSC BUFFERS HAVE @ZM31014*/ 03747000
*/*           BEEN EMPTIED, PERFORM PROCESSING FOR THE 92 AND@ZM31014*/ 03748000
*/*           90 MESSAGE (THERE MUST BE AT LEAST ONE 92)     @ZM31014*/ 03749000
*/*           AFTER PROCESSING THE LATEST 90 AND 92 RECEIVED @ZM31014*/ 03750000
*/*           DURING SYSTEM INITIALIZATION, FREES THE SPECIAL@ZM31014*/ 03751000
*/*           STORAGE OBTAINED TO KEEP THESE MESSAGES        @ZM31014*/ 03752000
*/*         AFTER SYSTEM INITIALIZATION, 90 AND 92 MESSAGES  @ZM31014*/ 03753000
*/*         ARE NOT PROCESSED BY THIS MODULE                 @ZM31014*/ 03754000
*/*                                                          @ZM31014*/ 03755000
*/*     INPUT A 90 OR 92 MESSAGE, OR SWITCHES ONLY           @ZM31014*/ 03756000
*/*                                                          @ZM31014*/ 03757000
*/********************************************************   @ZM31014*/ 03758000
*                                                                  1179 03759000
*ICBMSG18:                                                         1179 03760000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @ZM31014*/ 03761000
ICBMSG18 DS    0H                                                  1180 03762000
*   RFY                                                            1180 03763000
*     R14 RSTD;                     /*                       @G24LB02*/ 03764000
*   SAVR1418=R14;                   /*                       @ZM31014*/ 03765000
         ST    R14,SAVR1418                                        1181 03766000
*   RFY                                                            1182 03767000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 03768000
*   IF SKIP9092=BONE                /* ARE ALL 90,92 BEING SKIPPED?     03769000
*                                                            @ZM31014*/ 03770000
*     THEN                                                         1183 03771000
         TM    SKIP9092,B'00010000'                                1183 03772000
         BO    @RT01183                                            1183 03773000
*     ;                             /* YES, DO NOTHING BUT RETURN  1184 03774000
*                                                            @ZM31014*/ 03775000
*   ELSE                            /* THERE SOMETHING FOR MSG18 TO     03776000
*                                      DO                    @ZM31014*/ 03777000
*     DO;                           /*                       @ZM31014*/ 03778000
*       IF NEED9092=BONE            /* NEED STORAGE TO SAVE 90 & 92?    03779000
*                                                            @ZM31014*/ 03780000
*         THEN                                                     1186 03781000
         TM    NEED9092,B'10000000'                                1186 03782000
         BNO   @RF01186                                            1186 03783000
*         DO;                       /* OBTAIN THAT STORAGE   @ZM31014*/ 03784000
*           RFY                                                    1188 03785000
*            (R0,                                                  1188 03786000
*             R1,                                                  1188 03787000
*             R15) RSTD;            /*                       @ZM31014*/ 03788000
*           R0=LENGTH(STOR9092);    /* AMOUNT NEEDED         @ZM31014*/ 03789000
         LA    R0,248                                              1189 03790000
*IGETMN3:                           /*                       @ZM31014*/ 03791000
*           GEN REFS(R0,R1,R15) SETS(R0,R1,R15);                   1190 03792000
IGETMN3  DS    0H                                                  1190 03793000
*                                                          /*@ZM31014*/ 03794000
     GETMAIN RC,LV=(R0),RELATED=(ICB2MSG(IFREEMN5))            @ZM31014 03795000
*           IF R15^=0               /* SOME PROBLEM ?        @ZM31014*/ 03796000
*             THEN                  /* NO STORAGE FOR 90 & 92      1191 03797000
*                                                            @ZM31014*/ 03798000
         LTR   R15,R15                                             1191 03799000
         BZ    @RF01191                                            1191 03800000
*             DO;                   /* WILL NOT PROCESS ANY  @ZM31014*/ 03801000
*               WTOGEN03=MESGS(MSG98701);/* FILL WTO BUFFER  @Z40LB01*/ 03802000
         MVI   WTOGEN03+72,C' '                                    1193 03803000
         L     @14,@CA02101                                        1193 03804000
         MVC   WTOGEN03(72),MESGS-MSGS+2964(@14)                   1193 03805000
*               CALL ICBMSG45;      /* WHICH WRITES MESSAGE  @ZM31014*/ 03806000
         BAL   @14,ICBMSG45                                        1194 03807000
*               SAVE9092=BZERO;     /* NOT SAVING ANY        @ZM31014*/ 03808000
*               SKIP9092=BONE;      /* WILL SKIP HEREAFTER   @ZM31014*/ 03809000
         OI    SKIP9092,B'00010000'                                1196 03810000
         NI    SAVE9092,B'10111111'                                1196 03811000
*             END;                  /*                       @ZM31014*/ 03812000
*           ELSE                    /* HAVE STORAGE TO PILE MESSAGES    03813000
*                                      INTO                  @ZM31014*/ 03814000
*             DO;                   /*                       @ZM31014*/ 03815000
         B     @RC01191                                            1198 03816000
@RF01191 DS    0H                                                  1199 03817000
*               PNTR9092=R1;        /* ADDR OF 9092 STORAGE  @ZM31014*/ 03818000
         ST    R1,PNTR9092                                         1199 03819000
*               NEED9092=BZERO;     /* NOTE HAVE STORAGE     @ZM31014*/ 03820000
         NI    NEED9092,B'01111111'                                1200 03821000
*             END;                  /* STORAGE ADDRESSABILITY      1201 03822000
*                                                            @ZM31014*/ 03823000
*           RFY                                                    1202 03824000
*            (R0,                                                  1202 03825000
*             R1,                                                  1202 03826000
*             R15) UNRSTD;          /*                       @ZM31014*/ 03827000
@RC01191 DS    0H                                                  1203 03828000
*         END;                      /* GETTING STORAGE FOR 90 & 92 1203 03829000
*                                                            @ZM31014*/ 03830000
*       ELSE                                                       1204 03831000
*         ;                         /* DO NOT NEED TO GET STORAGE  1204 03832000
*                                                            @ZM31014*/ 03833000
@RF01186 DS    0H                                                  1205 03834000
*       IF SAVE9092=BONE            /* IS THERE A 90 OR 92 TO KEEP?     03835000
*                                                            @ZM31014*/ 03836000
*         THEN                      /* YES                   @ZM31014*/ 03837000
         TM    SAVE9092,B'01000000'                                1205 03838000
         BNO   @RF01205                                            1205 03839000
*         DO;                       /*                       @ZM31014*/ 03840000
*           IF MCODE='90'X          /* A 90 ?                @ZM31014*/ 03841000
*             THEN                                                 1207 03842000
         L     @12,MSGPTR                                          1207 03843000
         CLI   MCODE(@12),X'90'                                    1207 03844000
         BNE   @RF01207                                            1207 03845000
*             DO;                   /*                       @ZM31014*/ 03846000
*               STOR90=CONFIG;      /* SAVE THIS AS LATEST   @ZM31014*/ 03847000
         L     @11,PNTR9092                                        1209 03848000
         MVC   STOR90(124,@11),CONFIG(@12)                         1209 03849000
*               HAVE90=BONE;        /* NOTE HAVE A 90        @ZM31014*/ 03850000
         OI    HAVE90,B'00001000'                                  1210 03851000
*             END;                  /*                       @ZM31014*/ 03852000
*           ELSE                                                   1212 03853000
*             DO;                   /* MUST BE A 92 IF GET HERE    1212 03854000
*                                                            @ZM31014*/ 03855000
         B     @RC01207                                            1212 03856000
@RF01207 DS    0H                                                  1213 03857000
*               STOR92=CONFIG;      /* WRITE INTO AREA       @ZM31014*/ 03858000
         L     @12,PNTR9092                                        1213 03859000
         L     @11,MSGPTR                                          1213 03860000
         MVC   STOR92(124,@12),CONFIG(@11)                         1213 03861000
*               HAVE92=BONE;        /* HAVE A 92             @ZM31014*/ 03862000
         OI    HAVE92,B'00000100'                                  1214 03863000
*             END;                  /*                       @ZM31014*/ 03864000
*         END;                      /* PROCESSING WITH SAVE9092 ON 1216 03865000
*                                                            @ZM31014*/ 03866000
*       ELSE                                                       1217 03867000
*         ;                         /* NO SINGLE MESSAGE TO SAVE   1217 03868000
*                                                            @ZM31014*/ 03869000
@RF01205 DS    0H                                                  1218 03870000
*       IF PROC9092=BONE            /* TIME TO PROCESS 90 & 92 ?   1218 03871000
*                                                            @ZM31014*/ 03872000
*         THEN                                                     1218 03873000
@RC01205 TM    PROC9092,B'00100000'                                1218 03874000
         BNO   @RF01218                                            1218 03875000
*         DO;                       /*                       @ZM31014*/ 03876000
*           IF HAVE90=BONE          /* HAVE A 90 ?           @ZM31014*/ 03877000
*             THEN                                                 1220 03878000
         TM    HAVE90,B'00001000'                                  1220 03879000
         BNO   @RF01220                                            1220 03880000
*             DO;                   /*                       @ZM31014*/ 03881000
*               MSGPTR=ADDR(STOR90);/* SET UP ADDRESS        @ZM31014*/ 03882000
         L     @12,PNTR9092                                        1222 03883000
         ST    @12,MSGPTR                                          1222 03884000
*               CALL ICBMSG17;      /* TO PROCESS IT         @ZM31014*/ 03885000
         BAL   @14,ICBMSG17                                        1223 03886000
*             END;                  /*                       @ZM31014*/ 03887000
*           ELSE                                                   1225 03888000
*             ;                     /*                       @ZM31014*/ 03889000
@RF01220 DS    0H                                                  1226 03890000
*           IF HAVE92=BONE          /* HAVE A 92 ?           @ZM31014*/ 03891000
*             THEN                                                 1226 03892000
         TM    HAVE92,B'00000100'                                  1226 03893000
         BNO   @RF01226                                            1226 03894000
*             DO;                   /*                       @ZM31014*/ 03895000
*               MSGPTR=ADDR(STOR92);/* SET UP ADDRESS OF LAST        */ 03896000
         L     @12,PNTR9092                                        1228 03897000
         LA    @12,STOR92(,@12)                                    1228 03898000
         ST    @12,MSGPTR                                          1228 03899000
*               CALL ICBMSG16;      /* TO PROCESS IT         @ZM31014*/ 03900000
         BAL   @14,ICBMSG16                                        1229 03901000
*             END;                  /*                       @ZM31014*/ 03902000
*           RFY                                                    1231 03903000
*            (R0,                                                  1231 03904000
*             R1) RSTD;             /*                       @ZM31014*/ 03905000
@RF01226 DS    0H                                                  1232 03906000
*           R0=LENGTH(STOR9092);    /*                       @ZM31014*/ 03907000
         LA    R0,248                                              1232 03908000
*           R1=ADDR(STOR9092);      /* TEMPORARY 90 & 92 AREA      1233 03909000
*                                                            @ZM31014*/ 03910000
         L     R1,PNTR9092                                         1233 03911000
*IFREEMN5:                          /* FREE TEMPORARY 90 & 92 STORAGE   03912000
*                                      AREA                  @ZM31014*/ 03913000
*           GEN REFS(R0,R1);                                       1234 03914000
IFREEMN5 DS    0H                                                  1234 03915000
*                                                          /*@ZM31014*/ 03916000
      FREEMAIN R,LV=(R0),A=(R1),RELATED=(ICB2MSG(IGETMN3))     @ZM31014 03917000
*           PROC9092=BZERO;         /*                       @ZM31014*/ 03918000
*           SAVE9092=BZERO;         /*                       @ZM31014*/ 03919000
*           SKIP9092=BONE;          /* ONLY PROCESS ONCE     @ZM31014*/ 03920000
         OI    SKIP9092,B'00010000'                                1237 03921000
         NI    PROC9092,B'10011111'                                1237 03922000
*         END;                      /* PROCESSING FOR PROCESS-TIME 1238 03923000
*                                      FOR 90 & 92                   */ 03924000
*     END;                          /* PROCESSING WHEN NOT SKIPPING     03925000
*                                                            @ZM31014*/ 03926000
@RF01218 DS    0H                                                  1240 03927000
*   RFY                                                            1240 03928000
*     R14 RSTD;                     /*                       @G24LB02*/ 03929000
@RT01183 DS    0H                                                  1241 03930000
*   R14=SAVR1418;                   /*                       @ZM31014*/ 03931000
         L     R14,SAVR1418                                        1241 03932000
*   RFY                                                            1242 03933000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 03934000
*   END ICBMSG18;                   /*                       @ZM31014*/ 03935000
@EL00010 DS    0H                                                  1243 03936000
@EF00010 DS    0H                                                  1243 03937000
@ER00010 BR    @14                                                 1243 03938000
*                                                                  1244 03939000
*/*********************************************************  #Y30LB03*/ 03940000
*/*  START OF SPECIFICATIONS ****                             @Y30LB03  03941000
*                                                             @Y30LB03  03942000
*01*  MODULE-NAME = ICBMSG20                                  @Y30LB03  03943000
*                                                             @Y30LB03  03944000
*01*  DESCRIPTIVE-NAME = POST USER ECB SUBROUTINE             @Y30LB03  03945000
*                                                             @Y30LB03  03946000
*01*  FUNCTION = POST ECB FOR TASK AWAITING MSS EVENT         @Y30LB03  03947000
*                                                             @Y30LB03  03948000
*                                                             @Y30LB03  03949000
*02*    PURPOSE = TO VERIFY THAT THE ECB TO BE POSTED         @Y30LB03  03950000
*       IS VALID AND TO ISSUE POST SPECIFYING THE ECB         @Y30LB03  03951000
*       AND POST CODE. INVALID ECB(S) OCCUR WHEN THE          @Y30LB03  03952000
*       REQUESTING TASK HAS ABENDED. POST IS BYPASSED FOR     @Y30LB03  03953000
*       INVALID ECB(S).                                       @Y30LB03  03954000
*                                                             @Y30LB03  03955000
*02*    INPUT = MSC SOLICITED AND DELAYED RESPONSES MESSAGES  @Y30LB03  03956000
*                                                             @Y30LB03  03957000
*02*    OUTPUT = POSTED USER ECB                              @Y30LB03  03958000
*                                                             @Y30LB03  03959000
**** END OF SPECIFICATIONS **                                @Y30LB03*/ 03960000
*                                                                  1244 03961000
*ICBMSG20:                                                         1244 03962000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB03*/ 03963000
ICBMSG20 DS    0H                                                  1245 03964000
*/*  ****************************************************    @Y30LB03*/ 03965000
*/*    THIS SUBROUTINE HANDLES MSC MESSAGE WHICH REQUIRE     @Y30LB03*/ 03966000
*/*    POSTING OF A USER ECB.                                @Y30LB03*/ 03967000
*/*                                                          @Y30LB03*/ 03968000
*/*  ****************************************************    @Y30LB03*/ 03969000
*                                                                  1245 03970000
*   DCL                                                            1245 03971000
*     CHARFF BIT(8) CONSTANT('FF'X);/* HEX'FF'               @Y30LB03*/ 03972000
*   DCL                                                            1246 03973000
*     CHAR77 BIT(8) CONSTANT('77'X);/* HEX'77'               @YD00111*/ 03974000
*   DCL                                                            1247 03975000
*     RPRNHUNT CHAR(1) BASED(CWBVREF-1);/* USED TO CHECK     @Y30LB03   03976000
*                                      FOR RIGHT PAREN       @Y30LB03*/ 03977000
*   DCL                                                            1248 03978000
*     VALIDCNT FIXED(31);           /* COUNT OF NUMBER       @Y30LB03   03979000
*                                      UNITS--IF 0 ALL       @Y30LB03   03980000
*                                      HAVE HAD THEIR ECB    @Y30LB03   03981000
*                                      POSTED.               @Y30LB03*/ 03982000
*   DCL                                                            1249 03983000
*     HAVELK FIXED(8);              /* SWITCH--SET WHEN      @Y30LB03   03984000
*                                      GET LOCAL LOCK        @Y30LB03*/ 03985000
*   DCL                                                            1250 03986000
*     POSTC7F CHAR(1);              /* GOOD POST CODE        @Y30LB03*/ 03987000
*   DCL                                                            1251 03988000
*     MSGVARY FIXED(8);             /* SWITCH--SET WHEN NO   @Y30LB03   03989000
*                                      DR Q ELT MATCH AND MSG IS   1251 03990000
*                                                            @Y30LB03   03991000
*                                      FOR MSG TASK          @Y30LB03*/ 03992000
*   DCL                                                            1252 03993000
*     HIGHBIT BIT(32) BDY(WORD)     /*                       @Y30LB03*/ 03994000
*         INIT('10000000000000000000000000000000'B);/* BIT MASK TO 1252 03995000
*                                      SET                   @Y30LB03   03996000
*                                      HIGH BIT OF ECBPTR FOR POST 1252 03997000
*                                                            @Y30LB03*/ 03998000
*   RFY                                                            1253 03999000
*     R14 RSTD;                     /*                       @G24LB02*/ 04000000
*   SAVR1420=R14;                   /* SAVE REG 14           @Y30LB03*/ 04001000
         ST    R14,SAVR1420                                        1254 04002000
*   RFY                                                            1255 04003000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 04004000
*   VALIDCNT=F0;                    /* INIT VALIDCNT         @Y30LB03*/ 04005000
         SLR   @12,@12                                             1256 04006000
         ST    @12,VALIDCNT                                        1256 04007000
*   POSTC7F='7F'X;                  /* INIT GOOD POST CD     @Y30LB03*/ 04008000
         MVI   POSTC7F,X'7F'                                       1257 04009000
*   MSGVARY=F0;                     /* INIT SWITCH           @Y30LB03*/ 04010000
         MVI   MSGVARY,X'00'                                       1258 04011000
*   HAVELK=F0;                      /* INIT LCL LCK SWTCH    @Y30LB03*/ 04012000
         MVI   HAVELK,X'00'                                        1259 04013000
*   QELTPTR=ICBQHEAD;               /* SET Q ELT PTR         @Y30LB03*/ 04014000
         L     @11,ICBPTR                                          1260 04015000
         L     @11,ICBQHEAD(,@11)                                  1260 04016000
         ST    @11,QELTPTR                                         1260 04017000
*   ECBPTR=ADDR(MSGECB);            /* SET PTR TO ECBWORD    @Y30LB03*/ 04018000
         L     @09,MSGPTR                                          1261 04019000
         LA    @09,MSGECB(,@09)                                    1261 04020000
         ST    @09,ECBPTR                                          1261 04021000
*   RESPECIFY                                                      1262 04022000
*     BITPATT BASED(ECBPTR);        /*                       @Y30LB03*/ 04023000
*   IF QELTPTR=F0 THEN              /* IS DL RES Q EMPTY?    @Y30LB03*/ 04024000
         CR    @11,@12                                             1263 04025000
         BNE   @RF01263                                            1263 04026000
*     DO;                           /* YES,...........       @Y30LB03*/ 04027000
*       IF BITPATT(1:8)=CHARFF THEN /* IS HIGH BYTE OF       @Y30LB03   04028000
*                                      ECB(IN MSG) = 'FF'X?  @Y30LB03   04029000
*                                      I.E. VARY RESPONSE FOR@Y30LB03   04030000
*                                      THIS TASK ?           @Y30LB03*/ 04031000
         CLI   BITPATT(@09),X'FF'                                  1265 04032000
         BNE   @RF01265                                            1265 04033000
*         MSGVARY=F1;               /* YES, SET SWTCH        @Y30LB03*/ 04034000
         MVI   MSGVARY,X'01'                                       1266 04035000
*       ELSE                        /* NO,............       @Y30LB03*/ 04036000
*         DO;                       /* RETURN                @Y30LB03*/ 04037000
         B     @RC01265                                            1267 04038000
@RF01265 DS    0H                                                  1268 04039000
*           RFY                                                    1268 04040000
*             R14 RSTD;             /*                       @G24LB02*/ 04041000
*           R14=SAVR1420;           /* SETUP REG14           @Y30LB03*/ 04042000
         L     R14,SAVR1420                                        1269 04043000
*           RFY                                                    1270 04044000
*             R14 UNRSTD;           /*                       @G24LB02*/ 04045000
*           RETURN;                 /* RETURN                @Y30LB03*/ 04046000
@EL00011 DS    0H                                                  1271 04047000
@EF00011 DS    0H                                                  1271 04048000
@ER00011 BR    @14                                                 1271 04049000
*         END;                      /*                       @Y30LB03*/ 04050000
*     END;                          /*                       @Y30LB03*/ 04051000
*   ELSE                            /*                       @Y30LB03*/ 04052000
*                                                                  1274 04053000
*     /***************************************************************/ 04054000
*     /*                                                             */ 04055000
*     /* SEARCH FOR MATCH ON ECB,QELECB PTRS OR              @Y30LB03*/ 04056000
*     /* ASID,QELASID FIELDS OR HAS ELT BEEN INVALIDATED     @Y30LB03*/ 04057000
*     /* BY SVC,OR END OF Q                                  @Y30LB03*/ 04058000
*     /*                                                             */ 04059000
*     /***************************************************************/ 04060000
*                                                                  1274 04061000
*     DO WHILE((ECBRBADR^=QELECBPR|MSGASID^=QELASID|/*       @Y30LB03*/ 04062000
*           QELFLG3=CHARFF)&MSGVARY=F0);/*                   @Y30LB03*/ 04063000
         B     @RC01263                                            1274 04064000
@RF01263 B     @DE01274                                            1274 04065000
@DL01274 DS    0H                                                  1275 04066000
*       IF QELAHEAD=F0 THEN         /* END RSPNS Q CHAIN?    @Y30LB03*/ 04067000
         L     @12,QELTPTR                                         1275 04068000
         L     @12,QELAHEAD-1(,@12)                                1275 04069000
         LA    @12,0(,@12)                                         1275 04070000
         LTR   @12,@12                                             1275 04071000
         BNZ   @RF01275                                            1275 04072000
*         DO;                       /* YES, .....            @Y30LB03*/ 04073000
*           IF BITPATT(1:8)=CHARFF THEN/* HIGH ORDER         @Y30LB03   04074000
*                                      BYTE OF ECB = 'FF'X?  @Y30LB03   04075000
*                                      I.E.RESPONSE FOR THIS @Y30LB03   04076000
*                                      TASK?                 @Y30LB03*/ 04077000
         L     @12,ECBPTR                                          1277 04078000
         CLI   BITPATT(@12),X'FF'                                  1277 04079000
         BNE   @RF01277                                            1277 04080000
*             MSGVARY=F1;           /* YES,SET SWTCH         @Y30LB03*/ 04081000
         MVI   MSGVARY,X'01'                                       1278 04082000
*           ELSE                    /* NO,                   @Y30LB03*/ 04083000
*             DO;                   /* RETURN                @Y30LB03*/ 04084000
         B     @RC01277                                            1279 04085000
@RF01277 DS    0H                                                  1280 04086000
*               RFY                                                1280 04087000
*                 R14 RSTD;         /*                       @G24LB02*/ 04088000
*               R14=SAVR1420;       /* SETUP REG14           @Y30LB03*/ 04089000
         L     R14,SAVR1420                                        1281 04090000
*               RFY                                                1282 04091000
*                 R14 UNRSTD;       /*                       @G24LB02*/ 04092000
*               RETURN;             /* RETURN                @Y30LB03*/ 04093000
         B     @EL00011                                            1283 04094000
*             END;                  /*                       @Y30LB03*/ 04095000
*         END;                      /*                       @Y30LB03*/ 04096000
*       ELSE                        /* NOT END               @Y30LB03*/ 04097000
*         QELTPTR=QELAHEAD;         /* INCR RES Q PTR        @Y30LB03*/ 04098000
         B     @RC01275                                            1286 04099000
@RF01275 L     @12,QELTPTR                                         1286 04100000
         L     @12,QELAHEAD-1(,@12)                                1286 04101000
         LA    @12,0(,@12)                                         1286 04102000
         ST    @12,QELTPTR                                         1286 04103000
*     END;                          /*                       @Y30LB03*/ 04104000
@RC01275 DS    0H                                                  1287 04105000
@DE01274 L     @12,QELTPTR                                         1287 04106000
         L     @11,ECBPTR                                          1287 04107000
         CLC   ECBRBADR(3,@11),QELECBPR(@12)                       1287 04108000
         BNE   @GL00016                                            1287 04109000
         L     @11,MSGPTR                                          1287 04110000
         CLC   MSGASID(2,@11),QELASID(@12)                         1287 04111000
         BNE   @GL00016                                            1287 04112000
         CLI   QELFLG3(@12),X'FF'                                  1287 04113000
         BNE   @DC01274                                            1287 04114000
@GL00016 CLI   MSGVARY,0                                           1287 04115000
         BE    @DL01274                                            1287 04116000
@DC01274 DS    0H                                                  1288 04117000
*   IF BITPATT(1:8)=CHARFF THEN     /* IS HIGH BYTE OF       @Y30LB03   04118000
*                                      ECB POINTED TO BY     @Y30LB03   04119000
*                                      MSGECB='FF'X ?        @Y30LB03*/ 04120000
@RC01263 L     @12,ECBPTR                                          1288 04121000
         CLI   BITPATT(@12),X'FF'                                  1288 04122000
         BNE   @RF01288                                            1288 04123000
*     DO;                           /*                       @Y30LB03*/ 04124000
*                                                                  1289 04125000
*       /*************************************************************/ 04126000
*       /*                                                           */ 04127000
*       /* ******************************************        @Y30LB03*/ 04128000
*       /*                                                   @Y30LB03*/ 04129000
*       /* THE FOLLOWING CODE DETERMINES WHAT                @Y30LB03*/ 04130000
*       /* COMMAND THE RESPONSE IF FOR, IF THE               @Y30LB03*/ 04131000
*       /* EXECUTION WAS SUCCESSFUL, FILLS                   @Y30LB03*/ 04132000
*       /* IN THE WTO MESSAGE ACCORDINGLY,                   @Y30LB03*/ 04133000
*       /* AND CALLS ICBMSG45 WHICH ISSUES THE               @Y30LB03*/ 04134000
*       /* WTO MACRO. ICBMSG46 IS THEN CALLED                @Y30LB03*/ 04135000
*       /* TO FREEUP THE SPACE THAT THE COMTASK              @Y30LB03*/ 04136000
*       /* QUEUE ELEMENT OCCUPIES.                           @Y30LB03*/ 04137000
*       /*                                                   @Y30LB03*/ 04138000
*       /* ******************************************        @Y30LB03*/ 04139000
*       /*                                                           */ 04140000
*       /*************************************************************/ 04141000
*                                                                  1290 04142000
*       CWBPTR=MSGECB;              /* SET CNTRL BLOCK UP    @Y30LB03*/ 04143000
         L     @12,MSGPTR                                          1290 04144000
         L     @11,MSGECB(,@12)                                    1290 04145000
         ST    @11,CWBPTR                                          1290 04146000
*       INTER=''B;                  /* INIT FIELD            @Y30LB03*/ 04147000
         XC    INTER(4),INTER                                      1291 04148000
*       BYTES34=MSGSSID;            /* PUT SSID IN           @Y30LB03   04149000
*                                      LAST 3 BYTES          @Y30LB03*/ 04150000
*                                                                  1292 04151000
         MVC   BYTES34(2),MSGSSID(@12)                             1292 04152000
*       /*************************************************************/ 04153000
*       /*                                                           */ 04154000
*       /* *************************************             @Y30LB03*/ 04155000
*       /*                                                   @Y30LB03*/ 04156000
*       /* CONVERT 2 BYTE HEX SSID(UNIT)                     @Y30LB03*/ 04157000
*       /* TO 3 BYTE REAL UNIT IN EBCDIC                     @Y30LB03*/ 04158000
*       /* BY CALLING SUBRTN ICBMSG82                        @Y30LB03*/ 04159000
*       /*                                                   @Y30LB03*/ 04160000
*       /* *************************************             @Y30LB03*/ 04161000
*       /*                                                           */ 04162000
*       /*************************************************************/ 04163000
*                                                                  1293 04164000
*       CALL ICBMSG82;              /*                       @Y30LB03*/ 04165000
*                                                                  1293 04166000
         BAL   @14,ICBMSG82                                        1293 04167000
*       /*************************************************************/ 04168000
*       /*                                                           */ 04169000
*       /* *************************************             @Y30LB03*/ 04170000
*       /*                                                   @Y30LB03*/ 04171000
*       /* TRANSLATED TO 3 BYTES                             @Y30LB03*/ 04172000
*       /*                                                   @Y30LB03*/ 04173000
*       /* *************************************             @Y30LB03*/ 04174000
*       /*                                                           */ 04175000
*       /*************************************************************/ 04176000
*                                                                  1294 04177000
*       WTOMCS03=MESGS(MSG01301);   /* FILL WTO BUFFER       @Z40LB01*/ 04178000
         MVI   WTOMCS03+72,C' '                                    1294 04179000
         L     @12,@CA02101                                        1294 04180000
         MVC   WTOMCS03(72),MESGS-MSGS+2052(@12)                   1294 04181000
*       IF MSGPOSTC>CHAR77 THEN     /* GOOD CODE?            @YD00111*/ 04182000
         L     @12,MSGPTR                                          1295 04183000
         CLI   MSGPOSTC(@12),X'77'                                 1295 04184000
         BNH   @RF01295                                            1295 04185000
*         WTOMCS03(27:37)='SUCCESSFUL,';/* YES,              @Z40LB01*/ 04186000
         MVC   WTOMCS03+26(11),@CC02786                            1296 04187000
*       ELSE                        /* NO,                   @Y30LB03*/ 04188000
*         WTOMCS03(27:37)='FAILED,    ';/* FAILED@Z40LB01            */ 04189000
         B     @RC01295                                            1297 04190000
@RF01295 MVC   WTOMCS03+26(11),@CC02788                            1297 04191000
*       WTOMCS03(19:21)=BYTES234;   /* UNIT                  @Z40LB01*/ 04192000
*                                                                  1298 04193000
@RC01295 MVC   WTOMCS03+18(3),BYTES234                             1298 04194000
*       /*************************************************************/ 04195000
*       /*                                                           */ 04196000
*       /* TRANSLATE POST CODE                               @Y30LB03*/ 04197000
*       /*                                                           */ 04198000
*       /*************************************************************/ 04199000
*                                                                  1299 04200000
*       INTER=''B;                  /* INIT FIELD            @Y30LB03*/ 04201000
         XC    INTER(4),INTER                                      1299 04202000
*       BYTE4C=MSGPOSTC;            /* PUT POST CODE IN      @Y30LB03   04203000
*                                      LAST BYTE             @Y30LB03*/ 04204000
         L     @12,MSGPTR                                          1300 04205000
         MVC   BYTE4C(1),MSGPOSTC(@12)                             1300 04206000
*       CALL ICBMSG82;              /* CALL CONVERSION SUB   @Z40LB01*/ 04207000
*                                                                  1301 04208000
         BAL   @14,ICBMSG82                                        1301 04209000
*       /*************************************************************/ 04210000
*       /*                                                           */ 04211000
*       /* TRANSLATED                                        @Y30LB03*/ 04212000
*       /*                                                           */ 04213000
*       /*************************************************************/ 04214000
*                                                                  1302 04215000
*       WTOMCS03(49:50)=BYTES34;    /* FILL IN POST CD       @Z40LB01*/ 04216000
         MVC   WTOMCS03+48(2),BYTES34                              1302 04217000
*       CALL ICBMSG47;              /* CALL WTO SUBRTN       @Y30LB03*/ 04218000
         BAL   @14,ICBMSG47                                        1303 04219000
*       IF MSGVARY=F0 THEN          /* WAS THERE A MATCH     @Y30LB03   04220000
*                                      IN DR QUEUE?          @Y30LB03*/ 04221000
         CLI   MSGVARY,0                                           1304 04222000
         BNE   @RF01304                                            1304 04223000
*         DO;                       /* YES,                  @Y30LB03*/ 04224000
*           IF CWBCOMQ=F0 THEN      /* IS THERE ONLY 1       @Y30LB03   04225000
*                                      UNIT IN COMMAND?      @Y30LB03*/ 04226000
         L     @12,CWBPTR                                          1306 04227000
         CLI   CWBCOMQ(@12),0                                      1306 04228000
         BNE   @RF01306                                            1306 04229000
*             DO;                   /* YES,                  @Y30LB03*/ 04230000
*               IF CWBCMND(1:3)=BYTES234 THEN/* DO SSID'S    @Y30LB03   04231000
*                                      MATCH?                @Y30LB03*/ 04232000
         CLC   CWBCMND(3,@12),BYTES234                             1308 04233000
         BNE   @RF01308                                            1308 04234000
*                 DO;               /* YES,                  @Y30LB03*/ 04235000
*                   CALL ICBMSG46;  /* CALL SUB RTN TO       @Y30LB03   04236000
*                                      FREE THE DEQ'D CWB    @Y30LB03*/ 04237000
         BAL   @14,ICBMSG46                                        1310 04238000
*                 END;              /*                       @Y30LB03*/ 04239000
*             END;                  /*                       @Y30LB03*/ 04240000
*           ELSE                    /* PROCESSING FOR MULTI  @Y30LB03   04241000
*                                      UNITS                 @Y30LB03*/ 04242000
*             DO;                   /*                       @Y30LB03*/ 04243000
         B     @RC01306                                            1313 04244000
@RF01306 DS    0H                                                  1314 04245000
*               CWBVREF=CWBCOMQ+CWBPTR+F9;/*                 @Y30LB03*/ 04246000
         L     @12,CWBPTR                                          1314 04247000
         SLR   @11,@11                                             1314 04248000
         IC    @11,CWBCOMQ(,@12)                                   1314 04249000
         ALR   @11,@12                                             1314 04250000
         AL    @11,@CF02044                                        1314 04251000
         ST    @11,CWBVREF                                         1314 04252000
*               DO WHILE RPRNHUNT^=')';/*                    @Y30LB03   04253000
*                                      FIND THE UNIT IN      @Y30LB03   04254000
*                                      THE CMND              @Y30LB03*/ 04255000
         B     @DE01315                                            1315 04256000
@DL01315 DS    0H                                                  1316 04257000
*                 IF BYTES234=RU THEN/* MATCH?               @Y30LB03*/ 04258000
         L     @12,CWBVREF                                         1316 04259000
         CLC   BYTES234(3),RU(@12)                                 1316 04260000
         BNE   @RF01316                                            1316 04261000
*                   RU='***';       /* CROSS UNIT OUT        @Y30LB03*/ 04262000
         MVC   RU(3,@12),@CC02792                                  1317 04263000
*                 ELSE              /* IF NOT THE UNIT,      @Y30LB03*/ 04264000
*                   IF RU^='***' THEN/* CKECK VALIDITY       @Y30LB03   04265000
*                                      IF VALID, INCR # OF   @Y30LB03   04266000
*                                      OUTSTANDING UNITS     @Y30LB03*/ 04267000
         B     @RC01316                                            1318 04268000
@RF01316 L     @12,CWBVREF                                         1318 04269000
         CLC   RU(3,@12),@CC02792                                  1318 04270000
         BE    @RF01318                                            1318 04271000
*                     VALIDCNT=VALIDCNT+F1;/*                @Y30LB03*/ 04272000
         LA    @12,1                                               1319 04273000
         AL    @12,VALIDCNT                                        1319 04274000
         ST    @12,VALIDCNT                                        1319 04275000
*                 CWBVREF=CWBVREF+F4;/* NEXT UNIT            @Y30LB03*/ 04276000
@RF01318 DS    0H                                                  1320 04277000
@RC01316 LA    @12,4                                               1320 04278000
         AL    @12,CWBVREF                                         1320 04279000
         ST    @12,CWBVREF                                         1320 04280000
*               END;                /*                       @Y30LB03*/ 04281000
@DE01315 L     @12,CWBVREF                                         1321 04282000
         BCTR  @12,0                                               1321 04283000
         CLI   RPRNHUNT(@12),C')'                                  1321 04284000
         BNE   @DL01315                                            1321 04285000
*               IF VALIDCNT=F0 THEN /* ANY UNITS LEFT        @Y30LB03*/ 04286000
         L     @12,VALIDCNT                                        1322 04287000
         LTR   @12,@12                                             1322 04288000
         BNZ   @RF01322                                            1322 04289000
*                 DO;               /* NO,...                @Y30LB03*/ 04290000
*                   CALL ICBMSG46;  /* CALL DEQUEUE          @Y30LB03   04291000
*                                      SUBRTN                @Y30LB03*/ 04292000
         BAL   @14,ICBMSG46                                        1324 04293000
*                 END;              /*                       @Y30LB03*/ 04294000
*             END;                  /*                       @Y30LB03*/ 04295000
*         END;                      /*                       @Y30LB03*/ 04296000
*       GO TO DQELT;                /* GO DEQUEUE ELT        @Y30LB03*/ 04297000
         B     DQELT                                               1328 04298000
*     END;                          /*                       @Y30LB03*/ 04299000
*   IF QELFLG2=CHARFF THEN          /* DID TASK ABEND?       @Y30LB03*/ 04300000
@RF01288 L     @12,QELTPTR                                         1330 04301000
         CLI   QELFLG2(@12),X'FF'                                  1330 04302000
         BE    @RT01330                                            1330 04303000
*     GO TO DQELT;                  /* YES,BRCH TO DQ IT     @Y30LB03*/ 04304000
*                                                                  1331 04305000
*   /*****************************************************************/ 04306000
*   /*                                                               */ 04307000
*   /* AT THIS POINT HAVE MATCH OF MESSAGE FROM MSC AND      @ZM31001*/ 04308000
*   /* A DELAYED RESPONSE QUEUE ELEMENT, BY ECB ADDRESS      @ZM31001*/ 04309000
*   /* AND ASID NUMBER, STILL HAVE VALID DRQ ELEMENT,        @ZM31001*/ 04310000
*   /* SO WILL FLAG IT FOR EVENTUAL REMOVAL LEST IT BE       @ZM31001*/ 04311000
*   /* LEFT ON IF NORMAL PROCESSING IS INTERRUPTED (FOR      @ZM31001*/ 04312000
*   /* EXAMPLE, POST PROCESSING IS NOT COMPLETED )           @ZM31001*/ 04313000
*   /*                                                               */ 04314000
*   /*****************************************************************/ 04315000
*                                                                  1332 04316000
*   QELFLG3=CHARFF;                 /* MARK ELEMENT FINISHED @ZM31001*/ 04317000
         MVI   QELFLG3(@12),X'FF'                                  1332 04318000
*   IF ECBRBADR=F0 THEN             /* INVALID ECB           @Y30LB03*/ 04319000
         L     @12,ECBPTR                                          1333 04320000
         L     @11,ECBRBADR-1(,@12)                                1333 04321000
         LA    @11,0(,@11)                                         1333 04322000
         LTR   @11,@11                                             1333 04323000
         BZ    @RT01333                                            1333 04324000
*     GO TO DQELT;                  /* YES,BRCH TO DQ IT     @Y30LB03*/ 04325000
*   IF BITPATT(31:32)^=B2ZERO THEN  /* ECB ON WD BDY?        @Y30LB03*/ 04326000
         TM    BITPATT+3(@12),B'00000011'                          1335 04327000
         BNZ   @RT01335                                            1335 04328000
*     GO TO DQELT;                  /* NO ,BRCH TO DQ IT     @Y30LB03*/ 04329000
*   IF ECBRBADR>=CVTMZ00 THEN       /* ECB ADDR INVALID?     @Y30LB03*/ 04330000
         L     @12,CVTPTR                                          1337 04331000
         C     @11,CVTMZ00(,@12)                                   1337 04332000
         BNL   @RT01337                                            1337 04333000
*     GO TO DQELT;                  /* YES,BRCH TO DQ IT     @Y30LB03*/ 04334000
*   ECBPTR=MSGECB;                  /* SET PTR TO ECB        @Y30LB03*/ 04335000
         L     @11,MSGPTR                                          1339 04336000
         L     @09,MSGECB(,@11)                                    1339 04337000
         ST    @09,ECBPTR                                          1339 04338000
*   RESPECIFY                                                      1340 04339000
*     BITPATT BASED(BITPTR);        /* RESET BITPATT BASE    @Y30LB03*/ 04340000
*   RFY                                                            1341 04341000
*    (R15,                                                         1341 04342000
*     R10,                                                         1341 04343000
*     R11,                                                         1341 04344000
*     R12,                                                         1341 04345000
*     R13) RSTD;                    /* RST REGS 15,10,11,12,13     1341 04346000
*                                                            @Y30LB03*/ 04347000
*                                                                  1341 04348000
*   /*****************************************************************/ 04349000
*   /*                                                               */ 04350000
*   /* ***************************************************** @Y30LB03*/ 04351000
*   /* FOR UTILITY RESPONSES, THE CONTENTS OF THE            @Y30LB03*/ 04352000
*   /* MSC BUFFER DATA IS MOVED TO THE UTILITY PROGRAM       @Y30LB03*/ 04353000
*   /* DATA AREA DEFINED AS THE ECB ADDRESS+4.               @Y30LB03*/ 04354000
*   /* ***************************************************** @Y30LB03*/ 04355000
*   /*                                                               */ 04356000
*   /*****************************************************************/ 04357000
*                                                                  1342 04358000
*   R10=F0;                         /* ZERO REG 10           @Y30LB03*/ 04359000
         SLR   R10,R10                                             1342 04360000
*   IF MSGC<'70'X THEN              /* DATA TO BE MOVED?     @Y30LB03*/ 04361000
         L     @14,MSGPTR                                          1343 04362000
         CLI   MSGC(@14),112                                       1343 04363000
         BNL   @RF01343                                            1343 04364000
*     DO;                           /* YES, FILL IN THE      @YM32899   04365000
*                                      FIELD WITH MSG DATA   @YM32899*/ 04366000
*                                                                  1344 04367000
*       /*************************************************************/ 04368000
*       /*                                                           */ 04369000
*       /* IS FIELD THAT IS TO RECEIVE THE RESPONSE DATA     @Y30LB03*/ 04370000
*       /* IN COMMON DATA AREA?????                          @Y30LB03*/ 04371000
*       /*                                                           */ 04372000
*       /*************************************************************/ 04373000
*                                                                  1345 04374000
*       IF ADDR(ECBDATA)<CVTSHRVM THEN/*                     @ZA17176*/ 04375000
         LA    @14,ECBDATA(,@09)                                   1345 04376000
         L     @09,CVTPTR                                          1345 04377000
         C     @14,CVTSHRVM(,@09)                                  1345 04378000
         BNL   @RF01345                                            1345 04379000
*         R10='70'X;                /* NO, BY PASS MOVE, AND @Y30LB03   04380000
*                                      SET UP POST CD INDICATING   1346 04381000
*                                                            @Y30LB03   04382000
*                                      THE REASON            @Y30LB03*/ 04383000
         LA    R10,112                                             1346 04384000
*       ELSE                        /* YES, IN COMMON AREA   @Y30LB03*/ 04385000
*         DO;                       /* SO DO MOVE            @Y30LB03*/ 04386000
         B     @RC01345                                            1347 04387000
@RF01345 DS    0H                                                  1348 04388000
*           ECBDATA(1:MSGL-F8)=MSGDATA(7:MSGL-F2);/* LENGTH,CODE   1348 04389000
*                                                            @Y30LB03   04390000
*                                      AND MSGID ARE         @Y30LB03   04391000
*                                      STRIPPED OFF          @Y30LB03*/ 04392000
         L     @14,ECBPTR                                          1348 04393000
         L     @09,MSGPTR                                          1348 04394000
         SLR   @04,@04                                             1348 04395000
         IC    @04,MSGL(,@09)                                      1348 04396000
         SL    @04,@CF02044                                        1348 04397000
         EX    @04,@SM03332                                        1348 04398000
*         END;                      /*                       @Y30LB03*/ 04399000
*     END;                          /*                       @Y30LB03*/ 04400000
@RC01345 DS    0H                                                  1351 04401000
*   GEN;                                                           1351 04402000
@RF01343 DS    0H                                                  1351 04403000
*                                                          /*@Y30LB03*/ 04404000
IGETLCL1 SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                @Y30LB03*04405000
               RELATED=(LOCALLOCK,ICB2MSG(IFRELCL2)),REGS=USE  @Y30LB03 04406000
*   LOCALLK=BONE;                   /* SET LOCAL LOCK BIT    @Y30LB03*/ 04407000
         OI    LOCALLK,B'10000000'                                 1352 04408000
*   HAVELK=F1;                      /* SET LOCAL LK SWTCH    @Y30LB03*/ 04409000
         MVI   HAVELK,X'01'                                        1353 04410000
*   R15=CVT0PT01;                   /* LD R15 POST BR ENT    @Y30LB03*/ 04411000
         L     @09,CVTPTR                                          1354 04412000
         L     R15,CVT0PT01(,@09)                                  1354 04413000
*   R11=ECBPTR;                     /* LD R11 ECB TO BE      @Y30LB03   04414000
*                                      POSTED                @Y30LB03*/ 04415000
         L     R11,ECBPTR                                          1355 04416000
*   R11=R11|HIGHBIT;                /* SET HI BIT OF R11     @Y30LB03*/ 04417000
         O     R11,HIGHBIT                                         1356 04418000
*   R12=ADDR(CVTBRET);              /* LD R12 ERROR RTN      @ZA16123*/ 04419000
         LA    R12,CVTBRET(,@09)                                   1357 04420000
*   R13=ASVTENTY(MSGASIDF);         /* LD R13 ADDR SP ID     @Y30LB03*/ 04421000
         L     @14,MSGPTR                                          1358 04422000
         LH    @09,MSGASIDF(,@14)                                  1358 04423000
         SLA   @09,2                                               1358 04424000
         L     @04,ASVTPTR                                         1358 04425000
         L     R13,ASVTENTY-4(@09,@04)                             1358 04426000
*   IF R10=F0 THEN                  /* HAS POST CODE         @Y30LB03   04427000
*                                      ALREADY BEEN SET?     @Y30LB03*/ 04428000
         LTR   R10,R10                                             1359 04429000
         BNZ   @RF01359                                            1359 04430000
*     DO;                           /* NO,                   @Y30LB03*/ 04431000
*       IF MSGC='70'X THEN          /* IS POSTCODE IN MSG    @Y30LB03*/ 04432000
         CLI   MSGC(@14),112                                       1361 04433000
         BNE   @RF01361                                            1361 04434000
*         R10=MSGPOSTC;             /* YES,LD R10 POST CD    @Y30LB03*/ 04435000
         SLR   R10,R10                                             1362 04436000
         IC    R10,MSGPOSTC(,@14)                                  1362 04437000
*       ELSE                        /* NO,SET UP POST CD     @Y30LB03*/ 04438000
*         R10=POSTC7F;              /* LD R10 W/ GOOD CD     @Y30LB03*/ 04439000
         B     @RC01361                                            1363 04440000
@RF01361 SLR   R10,R10                                             1363 04441000
         IC    R10,POSTC7F                                         1363 04442000
*     END;                          /*                       @Y30LB03*/ 04443000
@RC01361 DS    0H                                                  1365 04444000
*   GEN REFS(SAVX);                                                1365 04445000
@RF01359 DS    0H                                                  1365 04446000
*                                                            @ZD00155*/ 04447000
         STM   R0,R14,SAVX          SAVE REGS AROUND POST      @Y30LB03 04448000
IPOST3   BALR  R14,R15              BRANCH TO POST             @Y30LB03 04449000
         LM    R0,R14,SAVX          RESTORE REGS               @Y30LB03 04450000
*   GEN(LA    R13,SAVAREA);         /* RESET SAVE AREA ADDR  @ZA16123*/ 04451000
         LA    R13,SAVAREA                                              04452000
*   RESPECIFY                                                      1367 04453000
*    (R15,                                                         1367 04454000
*     R10,                                                         1367 04455000
*     R11,                                                         1367 04456000
*     R12,                                                         1367 04457000
*     R13) UNRSTD;                  /* RELEASE REGS          @Y30LB03*/ 04458000
*DQELT:                             /* TAKE QEL OFF CHAIN    @Y30LB03*/ 04459000
*   IF HAVELK=F0 THEN               /* HAS LOCAL LOCK AL-    @Y30LB03   04460000
*                                      READY BEEN OBTAINED?  @Y30LB03   04461000
*                                      NO,OBTAIN IT          @Y30LB03*/ 04462000
DQELT    CLI   HAVELK,0                                            1368 04463000
         BNE   @RF01368                                            1368 04464000
*     GEN;                                                         1369 04465000
*                                                          /*@Y30LB03*/ 04466000
IGETLCL2 SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                @Y30LB03*04467000
               RELATED=(LOCALLOCK,ICB2MSG(IFRELCL2)),REGS=USE  @Y30LB03 04468000
*     GEN;                                                         1370 04469000
@RF01368 DS    0H                                                  1370 04470000
*                                                          /*@Y30LB03*/ 04471000
IGTCMS3  SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,                  @Y30LB03*04472000
               RELATED=(CMSLOCK,ICB2MSG(IFRECMS)),REGS=USE     @Y30LB03 04473000
*     LOCKRCVY(1:2)=B2ONE;          /* SET LOCAL & CMS LOCK BITS   1371 04474000
*                                                            @Y30LB03*/ 04475000
         OI    LOCKRCVY,B'11000000'                                1371 04476000
*   IF MSGVARY=F0 THEN              /* WAS THERE A D R Q     @Y30LB03   04477000
*                                      ELT THAT MATCHED?     @Y30LB03*/ 04478000
         CLI   MSGVARY,0                                           1372 04479000
         BNE   @RF01372                                            1372 04480000
*     DO;                           /* YES,                  @Y30LB03*/ 04481000
*       IF ICBQHEAD=F0 THEN                                        1374 04482000
         L     @12,ICBPTR                                          1374 04483000
         L     @12,ICBQHEAD(,@12)                                  1374 04484000
         LTR   @12,@12                                             1374 04485000
         BZ    @RT01374                                            1374 04486000
*         ;                         /* QUEUE SHOULD NOT      @Y30LB03   04487000
*                                      BE EMPTY,BUT IF IS    @Y30LB03   04488000
*                                      THEN DO NOTHING       @Y30LB03*/ 04489000
*       ELSE                        /* NOT EMPTY, THEN...    @Y30LB03*/ 04490000
*         DO;                       /*                       @Y30LB03*/ 04491000
*           CALL ICBMSG21;          /* CALL DQ-FREEMAIN      @Y30LB03   04492000
*                                      SUBROUTINE            @Y30LB03*/ 04493000
         BAL   @14,ICBMSG21                                        1377 04494000
*         END;                      /*                       @Y30LB03*/ 04495000
*     END;                          /*                       @Y30LB03*/ 04496000
@RT01374 DS    0H                                                  1380 04497000
*   QELTPTR=ICBQHEAD;               /* INIT Q ELT PTR TO     @Y30LB03   04498000
*                                      BEGINNING OF D.R.Q.   @Y30LB03*/ 04499000
@RF01372 L     @12,ICBPTR                                          1380 04500000
         L     @12,ICBQHEAD(,@12)                                  1380 04501000
         ST    @12,QELTPTR                                         1380 04502000
*   DO WHILE QELTPTR^=F0;           /* BEGIN SEARCH FOR      @Y30LB03   04503000
*                                      ELTS FLAGGED          @ZM31001   04504000
*                                      AS BEING INVALID      @Y30LB03*/ 04505000
         B     @DE01381                                            1381 04506000
@DL01381 DS    0H                                                  1382 04507000
*     IF QELFLG3=CHARFF THEN        /* READY FOR DEQUEUE?    @ZM31001*/ 04508000
         L     @12,QELTPTR                                         1382 04509000
         CLI   QELFLG3(@12),X'FF'                                  1382 04510000
         BNE   @RF01382                                            1382 04511000
*       DO;                         /* YES,....              @Y30LB03*/ 04512000
*         CALL ICBMSG21;            /* CALL DQ-FREEMAIN      @Y30LB03   04513000
*                                      SUBROUTINE            @Y30LB03*/ 04514000
         BAL   @14,ICBMSG21                                        1384 04515000
*       END;                        /*                       @Y30LB03*/ 04516000
*     QELTPTR=QELAHEAD;             /* POINT TO NEXT ELT     @Y30LB03*/ 04517000
@RF01382 L     @12,QELTPTR                                         1386 04518000
         L     @12,QELAHEAD-1(,@12)                                1386 04519000
         LA    @12,0(,@12)                                         1386 04520000
         ST    @12,QELTPTR                                         1386 04521000
*   END;                            /*                       @Y30LB03*/ 04522000
@DE01381 L     @12,QELTPTR                                         1387 04523000
         LTR   @12,@12                                             1387 04524000
         BNZ   @DL01381                                            1387 04525000
*   GEN;                                                           1388 04526000
*                                                          /*@Y30LB03*/ 04527000
IFRECMS SETLOCK RELEASE,TYPE=CMS,                              @Y30LB03*04528000
               RELATED=(CMSLOCK,ICB2MSG(IGTCMS3)),REGS=USE     @Y30LB03 04529000
IFRELCL2 SETLOCK RELEASE,TYPE=LOCAL,RELATED=(LOCALLOCK,        @Y30LB03*04530000
               ICB2MSG(IGETLCL1ORIGETLCL2)),REGS=USE           @Y30LB03 04531000
*   LOCKRCVY(1:2)=B2ZERO;           /* 0 LOCAL & CMS LOCK BITS     1389 04532000
*                                                            @Y30LB03*/ 04533000
         NI    LOCKRCVY,B'00111111'                                1389 04534000
*EXIT20:                            /*                       @Y30LB03*/ 04535000
*   RFY                                                            1390 04536000
*     R14 RSTD;                     /*                       @G24LB02*/ 04537000
EXIT20   DS    0H                                                  1391 04538000
*   R14=SAVR1420;                   /* RESTORE REG 14        @G24LB02*/ 04539000
         L     R14,SAVR1420                                        1391 04540000
*   RFY                                                            1392 04541000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 04542000
*   RETURN;                         /* RTN TO ICBMSG10       @Y30LB03*/ 04543000
         B     @EL00011                                            1393 04544000
*   END ICBMSG20;                   /*                       @Y30LB03*/ 04545000
*                                                                  1395 04546000
*/*********************************************************  @Y30LB03*/ 04547000
*/*  START OF SPECIFICATIONS ****                             @Y30LB03  04548000
*                                                             @Y30LB03  04549000
*01*  MODULE-NAME = ICBMSG21                                  @Y30LB03  04550000
*                                                             @Y30LB03  04551000
*01*  DESCRIPTIVE-NAME = DEQUEUE/FREEMAIN RESPONSE QUEUE      @Y30LB03  04552000
*     ELEMENTS SUBROUTINE                                     @Y30LB03  04553000
*                                                             @Y30LB03  04554000
*01*  FUNCTION = DEQUEUE RESPONSE ELEMENTS FROM DELAYED       @Y30LB03  04555000
*                RESPONSE QUEUE AND FREE ITS STORAGE          @Y30LB03  04556000
*                                                             @Y30LB03  04557000
*                                                             @Y30LB03  04558000
*02*    PURPOSE = TO DEQUEUE RESPONSE ELEMENT FROM DELAYED    @Y30LB03  04559000
*       RESPONSE QUEUE AND TO FREE STORAGE IT OCCUPIED        @Y30LB03  04560000
*                                                             @Y30LB03  04561000
*02*    INPUT = POINTER INDICATING ELEMENT TO BE DEQUEUED.    @Y30LB03  04562000
*                                                             @Y30LB03  04563000
*02*    OUTPUT = RESPONSE QUEUE ELEMENT DEQUEUED AND STORAGE  @Y30LB03  04564000
*                FREED                                        @Y30LB03  04565000
*                                                             @Y30LB03  04566000
*                                                             @Y30LB03  04567000
**** END OF SPECIFICATIONS **                                @Y30LB03*/ 04568000
*                                                                  1395 04569000
*ICBMSG21:                                                         1395 04570000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB03*/ 04571000
*                                                                  1395 04572000
ICBMSG21 DS    0H                                                  1396 04573000
*   /*****************************************************************/ 04574000
*   /*                                                               */ 04575000
*   /* ***************************************************** @Y30LB03*/ 04576000
*   /*                                                       @Y30LB03*/ 04577000
*   /* THIS SUBRTN DEQUEUES THE ELEMENT FROM THE DELAYED     @Y30LB03*/ 04578000
*   /* RESPONSE QUEUE BY CHANGING FORWARD(AHEAD) PTR         @Y30LB03*/ 04579000
*   /* OF LAST RESPONSE ELEMENT AND BACK POINTER OF          @Y30LB03*/ 04580000
*   /* NEXT RESPONSE ELEMENT. SPECIAL ACTION IS TAKEN IF     @Y30LB03*/ 04581000
*   /* THE ELEMENT TO BE DEQUEUED IS THE FIRST/LAST          @Y30LB03*/ 04582000
*   /* ELEMENT ON THE QUEUE.                                 @Y30LB03*/ 04583000
*   /*                                                       @Y30LB03*/ 04584000
*   /* ***************************************************** @Y30LB03*/ 04585000
*   /*                                                               */ 04586000
*   /*****************************************************************/ 04587000
*                                                                  1396 04588000
*   RFY                                                            1396 04589000
*     R14 RSTD;                     /*                       @G24LB02*/ 04590000
*   SAVR1421=R14;                   /*                       @Y30LB03*/ 04591000
         ST    R14,SAVR1421                                        1397 04592000
*   RFY                                                            1398 04593000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 04594000
*   IF QELBACK=F0&QELAHEAD=F0 THEN  /* ONLY ONE ON Q?        @Y30LB03*/ 04595000
         L     @12,QELTPTR                                         1399 04596000
         L     @09,QELBACK-1(,@12)                                 1399 04597000
         LA    @09,0(,@09)                                         1399 04598000
         LTR   @09,@09                                             1399 04599000
         BNZ   @RF01399                                            1399 04600000
         L     @12,QELAHEAD-1(,@12)                                1399 04601000
         LA    @12,0(,@12)                                         1399 04602000
         LTR   @12,@12                                             1399 04603000
         BNZ   @RF01399                                            1399 04604000
*     ICBQHEAD=F0;                  /* YES,SET CB PTR=0      @Y30LB03*/ 04605000
         L     @12,ICBPTR                                          1400 04606000
         SLR   @09,@09                                             1400 04607000
         ST    @09,ICBQHEAD(,@12)                                  1400 04608000
*   ELSE                            /* MORE THAN ONE,SO..    @Y30LB03*/ 04609000
*     DO;                           /* CHECK FOR 1ST ELT     @Y30LB03*/ 04610000
         B     @RC01399                                            1401 04611000
@RF01399 DS    0H                                                  1402 04612000
*       IF QELBACK=F0 THEN          /* 1ST ELEMENT?          @Y30LB03*/ 04613000
         L     @12,QELTPTR                                         1402 04614000
         L     @09,QELBACK-1(,@12)                                 1402 04615000
         LA    @09,0(,@09)                                         1402 04616000
         LTR   @09,@09                                             1402 04617000
         BNZ   @RF01402                                            1402 04618000
*         ICBQHEAD=QELAHEAD;        /* CHG CB PTR TO NEXT    @Y30LB03*/ 04619000
         L     @12,QELAHEAD-1(,@12)                                1403 04620000
         LA    @12,0(,@12)                                         1403 04621000
         L     @09,ICBPTR                                          1403 04622000
         ST    @12,ICBQHEAD(,@09)                                  1403 04623000
*       ELSE                        /* IF NOT 1ST, THEN      @Y30LB03   04624000
*                                      CHG LAST FORWARD PTR  @Y30LB03*/ 04625000
*         QELBACK->QELAHEAD=QELAHEAD;/*                      @Y30LB03*/ 04626000
         B     @RC01402                                            1404 04627000
@RF01402 L     @12,QELTPTR                                         1404 04628000
         L     @09,QELBACK-1(,@12)                                 1404 04629000
         MVC   QELAHEAD(3,@09),QELAHEAD(@12)                       1404 04630000
*       DQING=BONE;                 /* SET RECVRY BIT        @Y30LB03*/ 04631000
@RC01402 OI    DQING,B'00100000'                                   1405 04632000
*FINISHDQ:                                                         1406 04633000
*       IF QELAHEAD=F0 THEN         /* CHECK FOR LAST 1      @Y30LB03*/ 04634000
FINISHDQ L     @12,QELTPTR                                         1406 04635000
         L     @12,QELAHEAD-1(,@12)                                1406 04636000
         LA    @12,0(,@12)                                         1406 04637000
         LTR   @12,@12                                             1406 04638000
         BZ    @RT01406                                            1406 04639000
*         ;                         /* IF LAST,DO NOTHING    @Y30LB03*/ 04640000
*       ELSE                        /* IF NOT LAST THEN      @Y30LB03   04641000
*                                      CHG NEXT BACK PTR     @Y30LB03*/ 04642000
*         QELAHEAD->QELBACK=QELBACK;/*                       @Y30LB03*/ 04643000
         L     @12,QELTPTR                                         1408 04644000
         L     @09,QELAHEAD-1(,@12)                                1408 04645000
         MVC   QELBACK(3,@09),QELBACK(@12)                         1408 04646000
*       DQING=BZERO;                /* SET RECVRY BIT        @Y30LB03*/ 04647000
@RT01406 NI    DQING,B'11011111'                                   1409 04648000
*     END;                          /*                       @Y30LB03*/ 04649000
*/*   TO BRANCH ENTER FREEMAIN                               @Y30LB03*/ 04650000
*                                                                  1411 04651000
*   RESPECIFY                                                      1411 04652000
*    (R2,                                                          1411 04653000
*     R3,                                                          1411 04654000
*     R4) RSTD;                     /* RESTRICT REGS         @G24LB02   04655000
*                                      2,3,4                 @Y30LB03*/ 04656000
@RC01399 DS    0H                                                  1412 04657000
*   R1=QELTPTR;                     /* R1-->QELEMENT         @ZA16123*/ 04658000
         L     R1,QELTPTR                                          1412 04659000
*   R4=ICBTCB;                      /* LD R4 MSGTASK TCB     @Y30LB03*/ 04660000
         L     @12,ICBPTR                                          1413 04661000
         L     R4,ICBTCB(,@12)                                     1413 04662000
*   R7=ASVTENTY(1);                 /* LD R7 ADDR SP ID      @Y30LB03   04663000
*                                      BRANCH                @Y30LB03   04664000
*                                      ENTER FREEMAIN TO     @Y30LB03   04665000
*                                      FREE CORE FOR DQ'D    @Y30LB03   04666000
*                                      ELEMENT               @Y30LB03*/ 04667000
         L     @12,ASVTPTR                                         1414 04668000
         L     R7,ASVTENTY(,@12)                                   1414 04669000
*   GEN;                                                           1415 04670000
*                                                          /*@Y30LB03*/ 04671000
         DROP  R7                   DROP BASE REG              @ZA16123 04672000
         BALR  R14,R0               SET BASE FOR INSTRUCTIONS  @ZA16123 04673000
         USING *,R14                ESTB ADDRESSABILITY        @ZA16123 04674000
IFREEMN2 FREEMAIN BRANCH=YES,RC,LV=20,A=(1),SP=245,            @ZA16123*04675000
               RELATED=(SP245,IGC0012F(IGETMA20))              @Y30LB03 04676000
         LA    R7,F4095(R8)         RESTORE REG 7              @ZA16123 04677000
         DROP  R14                  DROP BASE REG              @ZA16123 04678000
         USING START+4095,R7        ESTABLISH ADDRESSABILITY   @ZA16123 04679000
*   RESPECIFY                                                      1416 04680000
*    (R2,                                                          1416 04681000
*     R3,                                                          1416 04682000
*     R4) UNRSTD;                   /* RELEASE REGS          @G24LB02   04683000
*                                      2,3,4                 @Y30LB03*/ 04684000
*   RFY                                                            1417 04685000
*     R14 RSTD;                     /*                       @G24LB02*/ 04686000
*   R14=SAVR1421;                   /*                       @Y30LB03*/ 04687000
         L     R14,SAVR1421                                        1418 04688000
*   RFY                                                            1419 04689000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 04690000
*   RETURN;                         /* RTN TO ICBMSG20       @Y30LB03*/ 04691000
@EL00012 DS    0H                                                  1420 04692000
@EF00012 DS    0H                                                  1420 04693000
@ER00012 BR    @14                                                 1420 04694000
*   END ICBMSG21;                   /*                       @Y30LB03*/ 04695000
*                                                                  1422 04696000
*/*  START OF SPECIFICATIONS ****                             @Y30LB03  04697000
*                                                             @Y30LB03  04698000
*01*  MODULE-NAME = ICBMSG30                                  @Y30LB03  04699000
*                                                             @Y30LB03  04700000
*01*  DESCRIPTIVE-NAME = MSC I/O ERROR SUBROUTINE             @Y30LB03  04701000
*                                                             @Y30LB03  04702000
*01*  FUNCTION = RECOVERY PROCEDURE FOR PERMANENT I/O ERRORS  @Y30LB03  04703000
*                                                             @Y30LB03  04704000
*                                                             @Y30LB03  04705000
*02*    PURPOSE = RECOVERY FROM MSC I/O ERROR. THIS           @Y30LB03  04706000
*       SUBROUTINE SETS THE RETURN ADDRESS TO THE             @Y30LB03  04707000
*       SCAN INSTRUCITON IN ICB2MSG (MAIN).                   @Y30LB03  04708000
*                                                             @Y30LB03  04709000
*02*    INPUT = NONE                                          @Y30LB03  04710000
*                                                             @Y30LB03  04711000
*02*    OUTPUT = NONE                                         @Y30LB03  04712000
**** END OF SPECIFICATIONS **                                @Y30LB03*/ 04713000
*                                                                  1422 04714000
*ICBMSG30:                                                         1422 04715000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB03*/ 04716000
ICBMSG30 DS    0H                                                  1423 04717000
*/*  ****************************************************    @Y30LB03*/ 04718000
*/*                                                          @Y30LB03*/ 04719000
*/*    THIS SUBROUTINE IS ENTERED IF A MSC I/O ERROR         @Y30LB03*/ 04720000
*/*    IS INCOUNTERED THAT THE ERP'S COULD NOT RESOLVE.      @Y30LB03*/ 04721000
*/*    NOTHING ELSE CAN BE DONE TO RESOLVE THE I/O           @Y30LB03*/ 04722000
*/*    ERROR.   THE RETURN ADDR                              @Y30LB03*/ 04723000
*/*    IS SET TO THE SCAN INSTRUCTION IN ICB2MSG(MAIN).      @Y30LB03*/ 04724000
*/*                                                          @Y30LB03*/ 04725000
*/*  ****************************************************    @Y30LB03*/ 04726000
*                                                                  1423 04727000
*   REENTRY=ADDR(SCAN);             /* SET RE-ENTRY POINT    @Y30LB03*/ 04728000
         LA    @12,SCAN                                            1423 04729000
         ST    @12,REENTRY                                         1423 04730000
*   CLEANUP=F0;                     /* CLEAR CLEAN-UP SWITCH @Y30LB03*/ 04731000
         SLR   @12,@12                                             1424 04732000
         ST    @12,CLEANUP                                         1424 04733000
*   RFY                                                            1425 04734000
*     R14 RSTD;                     /*                       @G24LB02*/ 04735000
*   R14=ADDR(SCAN);                 /* SET RTN ADDR          @Y30LB03*/ 04736000
         LA    R14,SCAN                                            1426 04737000
*   RFY                                                            1427 04738000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 04739000
*   RETURN;                         /* RTN TO ICB2MSG        @Y30LB03*/ 04740000
@EL00013 DS    0H                                                  1428 04741000
@EF00013 DS    0H                                                  1428 04742000
@ER00013 BR    @14                                                 1428 04743000
*   END ICBMSG30;                   /*                       @Y30LB03*/ 04744000
*                                                                  1430 04745000
*/*********************************************************  @Y30LB03*/ 04746000
*/*  START OF SPECIFICATIONS ****                             @Y30LB03  04747000
*                                                             @Y30LB03  04748000
*01*  MODULE-NAME = ICBMSG35                                  @Y30LB03  04749000
*                                                             @Y30LB03  04750000
*01*  DESCRIPTIVE-NAME = MSC OFFLINE SUBROUTINE               @Y30LB03  04751000
*                                                             @Y30LB03  04752000
*01*  FUNCTION = USED TO BYPASS NORMAL FUNCTION               @Y30LB03  04753000
*     OF MESSAGE TASK IF MSC VARIED OFFLINE.                  @Y30LB03  04754000
*                                                             @Y30LB03  04755000
*                                                             @Y30LB03  04756000
*02*    PURPOSE = TO BYPASS NORMAL FUNCTIONS OF THE           @Y30LB03  04757000
*       MESSAGE TASK WHEN THE MSC IS OFFLINE. THIS            @Y30LB03  04758000
*       ROUTINE SETS THE RETURN ADDRESS TO THE SCAN           @Y30LB03  04759000
*       INSTRUCTION IN ICB2MSG (MAIN).                        @Y30LB03  04760000
*                                                             @Y30LB03  04761000
*02*    INPUT = NONE                                          @Y30LB03  04762000
*                                                             @Y30LB03  04763000
*02*    OUTPUT = NONE                                         @Y30LB03  04764000
*                                                             @Y30LB03  04765000
**** END OF SPECIFICATIONS **                                @Y30LB03*/ 04766000
*                                                                  1430 04767000
*ICBMSG35:                                                         1430 04768000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB03*/ 04769000
ICBMSG35 DS    0H                                                  1431 04770000
*/*  ****************************************************    @Y30LB03*/ 04771000
*/*                                                          @Y30LB03*/ 04772000
*/*    THIS SUBROUTINE HANDLES MSC OFFLINE CONDITIONS.       @Y30LB03*/ 04773000
*/*    THE RETURN ADDRESS IS SET TO THE SCAN INSTRUCTION     @Y30LB03*/ 04774000
*/*    IN ICB2MSG(MAIN)                                      @Y30LB03*/ 04775000
*/*                                                          @Y30LB03*/ 04776000
*/*  ****************************************************    @Y30LB03*/ 04777000
*                                                                  1431 04778000
*   RFY                                                            1431 04779000
*     R14 RSTD;                     /*                       @G24LB02*/ 04780000
*   R14=ADDR(SCAN);                 /*                       @Y30LB03*/ 04781000
         LA    R14,SCAN                                            1432 04782000
*   RFY                                                            1433 04783000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 04784000
*   RETURN;                         /* RTN TO ICB2MSG        @Y30LB03*/ 04785000
@EL00014 DS    0H                                                  1434 04786000
@EF00014 DS    0H                                                  1434 04787000
@ER00014 BR    @14                                                 1434 04788000
*   END ICBMSG35;                   /*                       @Y30LB03*/ 04789000
*                                                                  1436 04790000
*/*****************************************************      @Y30LB03*/ 04791000
*/*  START OF SPECIFICATIONS ****                             @Y30LB03  04792000
*                                                             @Y30LB03  04793000
*01*  MODULE-NAME = ICBMSG40                                  @Y30LB03  04794000
*                                                             @Y30LB03  04795000
*01*  DESCRIPTIVE-NAME = COMTASK INTERFACE SUBROUTINE         @Y30LB03  04796000
*                                                             @Y30LB03  04797000
*01*  FUNCTION = PROCESS COMTASK COMMANDS                     @Y30LB03  04798000
*                                                             @Y30LB03  04799000
*                                                             @Y30LB03  04800000
*02*  PURPOSE = HANDLE ROUTING OF COMTASK COMMANDS TO         @Y30LB03  04801000
*                APPROPRIATE SUBROUTINE                       @Y30LB03  04802000
*                                                             @Y30LB03  04803000
*02*    INPUT = COMTASK COMMAND                               @Y30LB03  04804000
*                                                             @Y30LB03  04805000
*02*    OUTPUT = PROCESSED COMTASK COMMAND                    @Y30LB03  04806000
*                                                             @Y30LB03  04807000
**** END OF SPECIFICATIONS **                                @Y30LB03*/ 04808000
*                                                                  1436 04809000
*ICBMSG40:                                                         1436 04810000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB03*/ 04811000
ICBMSG40 DS    0H                                                  1437 04812000
*/*  ****************************************************    @Y30LB03*/ 04813000
*/*                                                          @Y30LB03*/ 04814000
*/*    THIS SUBROUTINE HANDLES ROUTING OF COMTASK            @Y30LB03*/ 04815000
*/*    COMMANDS TO APPROPRIATE SUBROUTINE.                   @Y30LB03*/ 04816000
*/*                                                          @Y30LB03*/ 04817000
*/*  ****************************************************    @Y30LB03*/ 04818000
*                                                                  1437 04819000
*   RFY                                                            1437 04820000
*     R14 RSTD;                     /*                       @G24LB02*/ 04821000
*   SAVR1440=R14;                   /* SAVE REG 14           @Y30LB03*/ 04822000
         ST    R14,SAVR1440                                        1438 04823000
*   RFY                                                            1439 04824000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 04825000
*INITPTRL:                                                         1440 04826000
*   CWBPTR=ICBCOMQ;                 /* SET CWB POINTER       @Y30LB03*/ 04827000
INITPTRL L     @12,ICBPTR                                          1440 04828000
         L     @12,ICBCOMQ(,@12)                                   1440 04829000
         ST    @12,CWBPTR                                          1440 04830000
*   REENTRY=ADDR(INITPTRL);         /* SET RE-ENTRY POINT    @Y30LB03*/ 04831000
         LA    @09,INITPTRL                                        1441 04832000
         ST    @09,REENTRY                                         1441 04833000
*   IF CWBVBCDE=40&                 /* VARY MSG? AND         @ZM31122*/ 04834000
*       CWBUCMID^=CHAR80 THEN       /* NOT INPUT STREAM      @ZM31122*/ 04835000
         CLI   CWBVBCDE(@12),40                                    1442 04836000
         BNE   @RF01442                                            1442 04837000
         CLI   CWBUCMID(@12),128                                   1442 04838000
         BE    @RF01442                                            1442 04839000
*     DO;                           /*                       @Y30LB03*/ 04840000
*       CALL ICBMSG41;              /* YES,CALL SUBRTN TO    @Y30LB03   04841000
*                                      ISSUE VARY MACRO      @Y30LB03*/ 04842000
         BAL   @14,ICBMSG41                                        1444 04843000
*     END;                          /*                       @Y30LB03*/ 04844000
*   ELSE                            /* NO,CHECK ANOTHER      @Z40LB01*/ 04845000
*     IF CWBVBCDE=104 THEN          /* DISPLAY 3850          @Z40LB01*/ 04846000
         B     @RC01442                                            1446 04847000
@RF01442 L     @12,CWBPTR                                          1446 04848000
         CLI   CWBVBCDE(@12),104                                   1446 04849000
         BNE   @RF01446                                            1446 04850000
*       DO;                         /* YES,...               @Z40LB01*/ 04851000
*         CALL ICBMSG55;            /* CALL DISPLAY SUB      @Z40LB01*/ 04852000
         BAL   @14,ICBMSG55                                        1448 04853000
*       END;                        /*                       @Z40LB01*/ 04854000
*     ELSE                          /* NO,CHECK ANOTHER      @Y30LB03*/ 04855000
*       IF CWBVBCDE=140 THEN        /* IS IT AN ASSGN MSG    @Y30LB03*/ 04856000
         B     @RC01446                                            1450 04857000
@RF01446 L     @12,CWBPTR                                          1450 04858000
         CLI   CWBVBCDE(@12),140                                   1450 04859000
         BNE   @RF01450                                            1450 04860000
*         DO;                       /* YES,...               @Y30LB03*/ 04861000
*           CALL ICBMSG42;          /* CALL SUBRTN TO ISSUE  @Y30LB03   04862000
*                                      ASSIGN PRIMARY HOST   @Y30LB03   04863000
*                                      MACRO                 @Y30LB03*/ 04864000
         BAL   @14,ICBMSG42                                        1452 04865000
*         END;                      /*                       @Y30LB03*/ 04866000
*       ELSE                        /* NO,CHECK ANOTHER      @Y30LB03*/ 04867000
*         IF CWBVBCDE=60 THEN       /* IS IT A               @Y30LB03   04868000
*                                      HALT(SUSPEND) MSG?    @Y30LB03*/ 04869000
         B     @RC01450                                            1454 04870000
@RF01450 L     @12,CWBPTR                                          1454 04871000
         CLI   CWBVBCDE(@12),60                                    1454 04872000
         BNE   @RF01454                                            1454 04873000
*           DO;                     /* YES,...               @Y30LB03*/ 04874000
*             CALL ICBMSG43;        /* CALL SUBRTN TO ISSUE  @Y30LB03   04875000
*                                      HALT(MSS SUSPEND)     @Y30LB03   04876000
*                                      MACRO                 @Y30LB03*/ 04877000
         BAL   @14,ICBMSG43                                        1456 04878000
*           END;                    /*                       @Y30LB03*/ 04879000
*         ELSE                      /* NO,CHECK ANOTHER      @Y30LB03   04880000
*                                      IS IT A PURGE MSG?    @Y30LB03*/ 04881000
*           IF CWBVBCDE=164 THEN    /*                       @Y30LB03*/ 04882000
         B     @RC01454                                            1458 04883000
@RF01454 L     @12,CWBPTR                                          1458 04884000
         CLI   CWBVBCDE(@12),164                                   1458 04885000
         BNE   @RF01458                                            1458 04886000
*             DO;                   /*                       @Y30LB03*/ 04887000
*               CALL ICBMSG42;      /* YES,CALL SUBRTN TO    @Y30LB03   04888000
*                                      ISSUE PURGE MACRO     @Y30LB03*/ 04889000
         BAL   @14,ICBMSG42                                        1460 04890000
*             END;                  /*                       @Y30LB03*/ 04891000
*           ELSE                    /* NO,ERROR SITUATION    @Y30LB03*/ 04892000
*             DO;                   /* SO, RECOVER           @Y30LB03*/ 04893000
         B     @RC01458                                            1462 04894000
@RF01458 DS    0H                                                  1463 04895000
*               WTOMCS03=MESGS(MSG01401);/* ERR MSG          @Z40LB01*/ 04896000
         MVI   WTOMCS03+72,C' '                                    1463 04897000
         L     @12,@CA02101                                        1463 04898000
         MVC   WTOMCS03(72),MESGS-MSGS+2128(@12)                   1463 04899000
*               CALL ICBMSG47;      /* THEN CALL SUBRTN      @G24LB02   04900000
*                                      TO ISSUE WTO MCRO     @G24LB02*/ 04901000
         BAL   @14,ICBMSG47                                        1464 04902000
*               IF ICBCOMQ^=F0 THEN /*                       @G24LB02*/ 04903000
         L     @12,ICBPTR                                          1465 04904000
         L     @12,ICBCOMQ(,@12)                                   1465 04905000
         LTR   @12,@12                                             1465 04906000
         BZ    @RF01465                                            1465 04907000
*                 DO;               /*                       @G24LB02*/ 04908000
*                   CALL ICBMSG44;  /* THEN CALL SUBRTN      @Y30LB03   04909000
*                                      TO DEQ CWB            @Y30LB03*/ 04910000
         BAL   @14,ICBMSG44                                        1467 04911000
*                   CALL ICBMSG46;  /* AND CALL SUBRTN       @Y30LB03   04912000
*                                      TO FREE WORKAREA      @Y30LB03*/ 04913000
         BAL   @14,ICBMSG46                                        1468 04914000
*                 END;              /*                       @G24LB02*/ 04915000
*             END;                  /*                       @Y30LB03*/ 04916000
@RF01465 DS    0H                                                  1471 04917000
*RTN40L:                                                           1471 04918000
*   RFY                                                            1471 04919000
*     R14 RSTD;                     /*                       @G24LB02*/ 04920000
@RC01458 DS    0H                                                  1471 04921000
@RC01454 DS    0H                                                  1471 04922000
@RC01450 DS    0H                                                  1471 04923000
@RC01446 DS    0H                                                  1471 04924000
@RC01442 DS    0H                                                  1471 04925000
RTN40L   DS    0H                                                  1472 04926000
*   R14=SAVR1440;                   /* RESTORE REG 14        @Y30LB03*/ 04927000
         L     R14,SAVR1440                                        1472 04928000
*   RFY                                                            1473 04929000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 04930000
*   RETURN;                         /* RTN TO ICB2MSG        @Y30LB03*/ 04931000
@EL00015 DS    0H                                                  1474 04932000
@EF00015 DS    0H                                                  1474 04933000
@ER00015 BR    @14                                                 1474 04934000
*   END ICBMSG40;                   /*                       @Y30LB03*/ 04935000
*                                                                  1476 04936000
*/********************************************************   @Y30LB03*/ 04937000
*/*  START OF SPECIFICATIONS ****                             @Y30LB03  04938000
*                                                             @Y30LB03  04939000
*01*  MODULE-NAME = ICBMSG41                                  @Y30LB03  04940000
*                                                             @Y30LB03  04941000
*01*  DESCRIPTIVE-NAME = VARY COMMAND PROCESSING SUBROUTINE   @Y30LB03  04942000
*                                                             @Y30LB03  04943000
*01*  FUNCTION = ISSUE ICBVARY MACRO FOR COMTASK              @Y30LB03  04944000
*                VARY COMMANDS                                @Y30LB03  04945000
*                                                             @Y30LB03  04946000
*                                                             @Y30LB03  04947000
*02*  PURPOSE = SYNTAX CHECK THE VARY COMMAND AND DETERMINE   @Y30LB03  04948000
*               TYPE OF VARY. IF '3851' WAS SPECIFIED ON      @Y30LB03  04949000
*               VARY COMMAND THE MSC'S UCB IS TO BE VARIED.   @Y30LB03  04950000
*               THEREFORE, SUBROUTINE ICBMSG49 IS CALLED      @Y30LB03  04951000
*               TO PERFORM THE NECESSARY PROCESSING.          @Y30LB03  04952000
*               IF 'REAL' IS SPECIFIED, A REAL-SWITCH         @Y30LB03  04953000
*               IS SET TO INDICATE THAT THE REAL ATTRIBUTE    @Y30LB03  04954000
*               IS TO BE SET ON THE (ICB)VARY FLAGS.  IF      @Y30LB03  04955000
*               'REAL' IS NOT SPECIFIED AND THE UNIT TO BE    @Y30LB03  04956000
*               VARIED IS A DASD UNIT (I.E. OF TYPE 0XX)      @Y30LB03  04957000
*               A DASD-SWITCH IS SET.  THIS SWITCH IS ALSO    @Y30LB03  04958000
*               USED TO DEFINE FLAG SETTINGS FOR THE          @Y30LB03  04959000
*               (ICB)VARY MACRO.  IF THE VARY WAS NOT FOR A   @Y30LB03  04960000
*               MSC UNIT AND IF NO SYNTAX ERRORS WERE         @Y30LB03  04961000
*               FOUND, THE APPROPRIATE MACRO VARIABLES        @Y30LB03  04962000
*               ARE DEFINED AND ICBVARY IS ISSUED. THEN,      @Y30LB03  04963000
*               THE RETURN CODE IS INTERROGATED SO THAT A WTO @Y30LB03  04964000
*               MESSAGE (INDICATING SUCCESSFUL/UNSUCCESSFUL   @Y30LB03  04965000
*               PROCESSING) CAN BE DEFINED, IF APPLICABLE.    @Y30LB03  04966000
*               IF VIRTUAL(DASD) WAS INDICATED ON THE         @Y30LB03  04967000
*               VARY OFF FLAGS AND IF THERE WAS NO            @Y30LB03  04968000
*               ERROR INDICATION ON RETURN FROM SVC 126       @Y30LB03  04969000
*               THEN A DELAYED RESPONSE MESSAGE WILL          @Y30LB03  04970000
*               BE RECEIVED FROM THE MSC.  IT WILL BE         @Y30LB03  04971000
*               PROCESSED BY SUBROUTINE ICBMSG20.             @Y30LB03  04972000
*               THE DEQUEUE SUBROUTINE(ICBMSG44) IS           @Y30LB03  04973000
*               CALLED AND IN SOMECASES, THE WTO(ICBMSG47)    @Y30LB03  04974000
*               AND FREEMAIN(ICBMSG46)SUBROUTINES ARE CALLED. @Y30LB03  04975000
*                                                             @Y30LB03  04976000
*02*    INPUT = COMTASK VARY(MSS HARDWARE) COMMAND            @Y30LB03  04977000
*                                                             @Y30LB03  04978000
*02*    OUTPUT = PROCESSED COMTASK VARY COMMAND               @Y30LB03  04979000
*                                                             @Y30LB03  04980000
**** END OF SPECIFICATIONS **                                @Y30LB03*/ 04981000
*                                                                  1476 04982000
*ICBMSG41:                                                         1476 04983000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB03*/ 04984000
ICBMSG41 DS    0H                                                  1477 04985000
*/*  ****************************************************    @Y30LB03*/ 04986000
*/*                                                          @Y30LB03*/ 04987000
*/*    THIS SUBROUTINE HANDLES REQUESTS FOR THE VARY         @Y30LB03*/ 04988000
*/*    ON/OFF ORDERS.                                        @Y30LB03*/ 04989000
*/*                                                          @Y30LB03*/ 04990000
*/*  ****************************************************    @Y30LB03*/ 04991000
*                                                                  1477 04992000
*   DCL                                                            1477 04993000
*     VARYCNT FIXED(31);            /* DO LOOP CNTR          @Y30LB03*/ 04994000
*   DCL                                                            1478 04995000
*     RPARNPOS FIXED(8);            /* RIGHT PAREN POS       @Y30LB03*/ 04996000
*   DCL                                                            1479 04997000
*     VFLAGS BIT(16) INIT('0000000000000000'B);/* FLAGS      @Y30LB03*/ 04998000
*/*******************************************************    @Y30LB03*/ 04999000
*/*  MSGRU AND RU1BYTE ARE                                   @Y30LB03*/ 05000000
*/*  USED IN CONVERSION OF REAL UNIT TO 2 DIGITS             @Y30LB03*/ 05001000
*/*******************************************************    @Y30LB03*/ 05002000
*                                                                  1480 05003000
*   DCL                                                            1480 05004000
*     1 MSGRU CHAR(3),              /*                       @Y30LB03*/ 05005000
*      2 * CHAR(1),                 /*                       @Y30LB03*/ 05006000
*      2 MACRORU CHAR(2);           /* TARGET FOR CONVERTED  @Y30LB03   05007000
*                                      UNIT                  @Y30LB03*/ 05008000
*   DCL                                                            1481 05009000
*     CWBRU CHAR(3) BASED(CWBVREF); /* UNIT UNDER SCAN       @Z40LB01*/ 05010000
*   DCL                                                            1482 05011000
*     RU1BYTE CHAR(1) BASED(R1);    /* FOR BYTE CHECKING     @Y30LB03   05012000
*                                      THE REAL UNIT         @Y30LB03*/ 05013000
*   DCL                                                            1483 05014000
*     DASD BIT(1);                  /* DASD SWITCH           @Y30LB03*/ 05015000
*   DCL                                                            1484 05016000
*     REAL BIT(1);                  /* REAL SWITCH           @Y30LB03*/ 05017000
*   DCL                                                            1485 05018000
*     CMNDINDX FIXED(8);            /* FOR SYNTAX CHECK-     @Y30LB03   05019000
*                                      ING THE COMMAND       @Y30LB03*/ 05020000
*   DCL                                                            1486 05021000
*     UNITCNT FIXED(31);            /* FOR # OF UNITS        @Y30LB03*/ 05022000
*                                                                  1486 05023000
*   /*****************************************************************/ 05024000
*   /*                                                               */ 05025000
*   /* MASTER AND I/O CONSOLE AUTHORIZATION                  @Y30LB03*/ 05026000
*   /*                                                               */ 05027000
*   /*****************************************************************/ 05028000
*                                                                  1487 05029000
*   DCL                                                            1487 05030000
*     AUTHMASK CHAR(2) INIT('4000'X);/*                      @Y30LB03*/ 05031000
*   DCL                                                            1488 05032000
*     CKAUTH CHAR(2) INIT('0001'X); /* TO CHECK AUTH         @Y30LB03*/ 05033000
*   DCL                                                            1489 05034000
*     ICBR1 REG(1) PTR;             /* ADDRESS OF REQUEST BLOCK    1489 05035000
*                                                            @Y30LB02*/ 05036000
*                                                                  1489 05037000
*   /*****************************************************************/ 05038000
*   /*                                                               */ 05039000
*   /* ********************************************************      */ 05040000
*   /*                                                       @Y30LB02*/ 05041000
*   /* MACMEAN MSSC VARYOFF MACRO                            @Y30LB02*/ 05042000
*   /* VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00                @Y30LB02*/ 05043000
*   /* THIS IS THE INITIALIZED LIST FORM                     @Y30LB02*/ 05044000
*   /* ********************************************************      */ 05045000
*   /*                                                       @Y30LB02*/ 05046000
*   /*                                                               */ 05047000
*   /*****************************************************************/ 05048000
*                                                                  1490 05049000
*   DCL                                                            1490 05050000
*     1 VOFLIST STATIC LOCAL,       /* VARYOFF REQ BLOCK     @Y30LB02*/ 05051000
*      2 VOFLEN FIXED(31) INIT('18'X),/* LENGTH OF VOF REQUEST BLK 1490 05052000
*                                                            @Y30LB02*/ 05053000
*      2 VOFOPCD CHAR(1) INIT('0C'X),/* VARYOFF OPCODE       @Y30LB02*/ 05054000
*      2 VOFRES1 CHAR(1) INIT('00'X),/* ONE BYTE OF ZERO     @Y30LB02*/ 05055000
*      2 VOFFLG BIT(16) INIT('0000000000000000'B),/* FLAGS AREA    1490 05056000
*                                                            @Y30LB02*/ 05057000
*       3 VOFSTAG BIT(1),           /* VIRTUAL ATTRIBUTE     @Y30LB02*/ 05058000
*       3 VOFREAL BIT(1),           /* REAL ATTRIBUTE        @Y30LB02*/ 05059000
*       3 VOFNEUT BIT(1),           /* NEUTRAL ATTRIBUTE     @Y30LB02*/ 05060000
*       3 VOFTEST BIT(1),           /* TEST ATTRIBUTE        @Y30LB02*/ 05061000
*       3 * BIT(12),                /* TWELVE BITS RESERVED  @Y30LB02*/ 05062000
*      2 VOFSSID FIXED(15) INIT(0), /* SUBSYSTEM ID          @Y30LB02*/ 05063000
*      2 VOFRUA FIXED(15) INIT(0),  /* REAL UNIT ADDRESS     @Y30LB02*/ 05064000
*      2 VOFHOST CHAR(5) INIT('0000000000'X),/* HOSTID AREA  @Y30LB02*/ 05065000
*      2 * CHAR(1) INIT('00'X),     /* RESERVED AREA         @Y30LB02*/ 05066000
*      2 VOFASID CHAR(2) INIT('0000'X),/* ASID AREA          @Y30LB02*/ 05067000
*      2 VOFECB FIXED(31) INIT(0);  /* EVENT CONTROL BLOCK AREA    1490 05068000
*                                                            @Y30LB02   05069000
*                                      GET VARY OFF LIST     @Y30LB03*/ 05070000
*   RFY                                                            1491 05071000
*     R14 RSTD;                     /*                       @G24LB02*/ 05072000
*   SAVR1441=R14;                   /* SAVE REG 14           @Y30LB03*/ 05073000
         ST    R14,SAVR1441                                        1492 05074000
*   RFY                                                            1493 05075000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 05076000
*   RECOVER(4)=BONE;                /* SET VARY RECOVERY     @Y30LB03   05077000
*                                      BIT                   @Y30LB03*/ 05078000
         OI    RECOVER,B'00010000'                                 1494 05079000
*   CMNDINDX=F1;                    /* INIT STRING INDEX     @Y30LB03*/ 05080000
         LA    @12,1                                               1495 05081000
         STC   @12,CMNDINDX                                        1495 05082000
*   UNITCNT=F1;                     /* INIT # OF UNITS       @Y30LB03*/ 05083000
         LA    @09,1                                               1496 05084000
         ST    @09,UNITCNT                                         1496 05085000
*   RPARNPOS=F0;                    /* INIT RGHT PARN POS    @Y30LB03*/ 05086000
         MVI   RPARNPOS,X'00'                                      1497 05087000
*   CWBCOMQ=F0;                     /* INIT FLAG FIELD       @Y30LB03*/ 05088000
         L     @04,CWBPTR                                          1498 05089000
         MVI   CWBCOMQ(@04),X'00'                                  1498 05090000
*   REAL=BZERO;                     /* ZERO 'REAL' SWITCH    @Y30LB03*/ 05091000
         NI    REAL,B'01111111'                                    1499 05092000
*   CKAUTH=CHAR0001;                /* INIT AUTH SWITCH      @Y30LB03*/ 05093000
         MVC   CKAUTH(2),@CB02431                                  1500 05094000
*                                                                  1501 05095000
*/*********************************************************  @Y30LB03*/ 05096000
*/*                                                          @Y30LB03*/ 05097000
*/*      SYNTAX ERROR CHECKING                               @Y30LB03*/ 05098000
*/*      AND INITIALIZATION OF WORK VARIABLES                @Y30LB03*/ 05099000
*/*                                                          @Y30LB03*/ 05100000
*/*********************************************************  @Y30LB03*/ 05101000
*                                                                  1501 05102000
*   IF CWBCMND(CMNDINDX:CMNDINDX)='(' THEN/* MULTI UNITS?    @Y30LB03*/ 05103000
         ALR   @12,@04                                             1501 05104000
         CLI   CWBCMND-1(@12),C'('                                 1501 05105000
         BNE   @RF01501                                            1501 05106000
*     DO;                           /* YES,SET UP UNITPTR    @Y30LB03   05107000
*                                      AND,LEFT PAREN POS    @Y30LB03*/ 05108000
*       CWBVREF=CMNDINDX+F1+CWBPTR+F8;/*                     @Y30LB03*/ 05109000
         SLR   @12,@12                                             1503 05110000
         IC    @12,CMNDINDX                                        1503 05111000
         ALR   @09,@12                                             1503 05112000
         ALR   @09,@04                                             1503 05113000
         AL    @09,@CF00115                                        1503 05114000
         ST    @09,CWBVREF                                         1503 05115000
*       CWBCOMQ=CMNDINDX;           /*                       @Y30LB03*/ 05116000
*                                                                  1504 05117000
         STC   @12,CWBCOMQ(,@04)                                   1504 05118000
*       /*************************************************************/ 05119000
*       /*                                                           */ 05120000
*       /* *********************************                 @Y30LB03*/ 05121000
*       /*                                                   @Y30LB03*/ 05122000
*       /* THIS DO LOOP IS EXECUTED TO                       @Y30LB03*/ 05123000
*       /* MAKE SURE COMMAS ARE BETWEEN                      @Y30LB03*/ 05124000
*       /* THE UNITS SPECIFIED, AND THAT                     @Y30LB03*/ 05125000
*       /* A RIGHT PAREN FOLLOWS THE UNITS                   @Y30LB03*/ 05126000
*       /*                                                   @Y30LB03*/ 05127000
*       /* *********************************                 @Y30LB03*/ 05128000
*       /*                                                           */ 05129000
*       /*************************************************************/ 05130000
*                                                                  1505 05131000
*       DO WHILE CMNDINDX<F50&RPARNPOS=F0;/*                 @Y30LB03*/ 05132000
         B     @DE01505                                            1505 05133000
@DL01505 DS    0H                                                  1506 05134000
*         CMNDINDX=CMNDINDX+F4;     /* POINT TO COMMA/       @Y30LB03   05135000
*                                      RIGHT PAREN POS       @Y30LB03   05136000
*                                      FIND COMMA? YES..     @Y30LB03*/ 05137000
         SLR   @12,@12                                             1506 05138000
         IC    @12,CMNDINDX                                        1506 05139000
         LA    @12,4(,@12)                                         1506 05140000
         STC   @12,CMNDINDX                                        1506 05141000
*         IF CWBCMND(CMNDINDX:CMNDINDX)=',' THEN/*           @Y30LB03*/ 05142000
         L     @09,CWBPTR                                          1507 05143000
         ALR   @09,@12                                             1507 05144000
         CLI   CWBCMND-1(@09),C','                                 1507 05145000
         BNE   @RF01507                                            1507 05146000
*           UNITCNT=UNITCNT+F1;     /* INCR UNITS BY 1       @Y30LB03*/ 05147000
         LA    @12,1                                               1508 05148000
         AL    @12,UNITCNT                                         1508 05149000
         ST    @12,UNITCNT                                         1508 05150000
*         ELSE                      /* NO, CHECK FOR         @Y30LB03   05151000
*                                      THE RIGHT PAREN       @Y30LB03*/ 05152000
*           IF CWBCMND(CMNDINDX:CMNDINDX)=')' THEN/*         @Y30LB03   05153000
*                                      FIND RIGHT PARN?      @Y30LB03*/ 05154000
         B     @RC01507                                            1509 05155000
@RF01507 SLR   @12,@12                                             1509 05156000
         IC    @12,CMNDINDX                                        1509 05157000
         L     @09,CWBPTR                                          1509 05158000
         ALR   @09,@12                                             1509 05159000
         CLI   CWBCMND-1(@09),C')'                                 1509 05160000
         BNE   @RF01509                                            1509 05161000
*             RPARNPOS=CMNDINDX;    /* YES,SET RGHT          @Y30LB03   05162000
*                                      PAREN POS             @Y30LB03*/ 05163000
         STC   @12,RPARNPOS                                        1510 05164000
*           ELSE                    /* IF NEITHER THERE      @Y30LB03   05165000
*                                      IS A SYNTAX ERROR     @Y30LB03*/ 05166000
*             GO TO SYNERROR;       /* GO PROC IT            @Y30LB03*/ 05167000
*       END;                        /*                       @Y30LB03*/ 05168000
@RC01507 DS    0H                                                  1512 05169000
@DE01505 CLI   CMNDINDX,50                                         1512 05170000
         BNL   @DC01505                                            1512 05171000
         CLI   RPARNPOS,0                                          1512 05172000
         BE    @DL01505                                            1512 05173000
@DC01505 DS    0H                                                  1513 05174000
*       IF RPARNPOS=F0 THEN         /* NO RIGHT PAREN?       @Y30LB03*/ 05175000
         CLI   RPARNPOS,0                                          1513 05176000
         BE    @RT01513                                            1513 05177000
*         GO TO SYNERROR;           /* YES, SYNTAX ERROR     @Y30LB03*/ 05178000
*       CMNDINDX=RPARNPOS+F1;       /* NO, POINT TO CHAR     @Y30LB03   05179000
*                                      AFTER ')'             @Y30LB03*/ 05180000
         IC    @12,RPARNPOS                                        1515 05181000
         LA    @12,1(,@12)                                         1515 05182000
         STC   @12,CMNDINDX                                        1515 05183000
*     END;                          /*                       @Y30LB03*/ 05184000
*   ELSE                            /* PROCESSED FOR         @Y30LB03   05185000
*                                      SINGLE UNIT VARY      @Y30LB03*/ 05186000
*     DO;                           /*                       @Y30LB03*/ 05187000
         B     @RC01501                                            1517 05188000
@RF01501 DS    0H                                                  1518 05189000
*       CWBVREF=CMNDINDX+CWBPTR+F8; /* POINT TO UNIT         @Y30LB03*/ 05190000
         SLR   @12,@12                                             1518 05191000
         IC    @12,CMNDINDX                                        1518 05192000
         LR    @09,@12                                             1518 05193000
         AL    @09,CWBPTR                                          1518 05194000
         AL    @09,@CF00115                                        1518 05195000
         ST    @09,CWBVREF                                         1518 05196000
*       CMNDINDX=CMNDINDX+F3;       /* POINT TO CHAR         @Y30LB03   05197000
*                                      AFTER UNIT            @Y30LB03*/ 05198000
         LA    @12,3(,@12)                                         1519 05199000
         STC   @12,CMNDINDX                                        1519 05200000
*     END;                          /*                       @Y30LB03*/ 05201000
*   IF CWBCMND(CMNDINDX:CMNDINDX)^=',' THEN/* COMMA?         @Y30LB03*/ 05202000
@RC01501 L     @12,CWBPTR                                          1521 05203000
         SLR   @09,@09                                             1521 05204000
         IC    @09,CMNDINDX                                        1521 05205000
         ALR   @09,@12                                             1521 05206000
         CLI   CWBCMND-1(@09),C','                                 1521 05207000
         BNE   @RT01521                                            1521 05208000
*     GO TO SYNERROR;               /* NO,SYNTAX ERROR       @Y30LB03*/ 05209000
*   CMNDINDX=CMNDINDX+F1;           /* YES,POINT TO NEXT     @Y30LB03   05210000
*                                      CHAR                  @Y30LB03   05211000
*                                      CHCK FOR 'OFFLINE'    @Y30LB03*/ 05212000
         SLR   @09,@09                                             1523 05213000
         IC    @09,CMNDINDX                                        1523 05214000
         LA    @09,1(,@09)                                         1523 05215000
         STC   @09,CMNDINDX                                        1523 05216000
*   IF CWBCMND(CMNDINDX:CMNDINDX+F6)='OFFLINE' THEN/*        @Y30LB03*/ 05217000
         ALR   @12,@09                                             1524 05218000
         CLC   CWBCMND-1(7,@12),@CC02860                           1524 05219000
         BNE   @RF01524                                            1524 05220000
*     DO;                           /* YES,....              @Y30LB03*/ 05221000
*       ONOFF='OF';                 /* SET ON/OFF SWITCH     @Y30LB03*/ 05222000
         MVC   ONOFF(2),@CC02861                                   1526 05223000
*       CMNDINDX=CMNDINDX+F7;       /* POINT TO NEXT FLD     @Y30LB03*/ 05224000
         LA    @09,7(,@09)                                         1527 05225000
         STC   @09,CMNDINDX                                        1527 05226000
*     END;                          /*                       @Y30LB03*/ 05227000
*   ELSE                            /* NO,....               @Y30LB03   05228000
*                                      CHECK FOR 'ONLINE'    @Y30LB03*/ 05229000
*     IF CWBCMND(CMNDINDX:CMNDINDX+F5)='ONLINE' THEN/*       @Y30LB03*/ 05230000
         B     @RC01524                                            1529 05231000
@RF01524 SLR   @12,@12                                             1529 05232000
         IC    @12,CMNDINDX                                        1529 05233000
         L     @09,CWBPTR                                          1529 05234000
         ALR   @09,@12                                             1529 05235000
         CLC   CWBCMND-1(6,@09),@CC02862                           1529 05236000
         BNE   @RF01529                                            1529 05237000
*       DO;                         /* YES,....              @Y30LB03*/ 05238000
*         ONOFF='ON';               /* SET ON/OFF SWITCH     @Y30LB03*/ 05239000
         MVC   ONOFF(2),@CC02863                                   1531 05240000
*         CMNDINDX=CMNDINDX+F6;     /* POINT TO NEXT FLD     @Y30LB03*/ 05241000
         LA    @12,6(,@12)                                         1532 05242000
         STC   @12,CMNDINDX                                        1532 05243000
*       END;                        /*                       @Y30LB03*/ 05244000
*     ELSE                          /* NEITHER?              @Y30LB03*/ 05245000
*       GO TO SYNERROR;             /* THEN SYNTAX ERROR     @Y30LB03   05246000
*                                      CHECK FOR ',S'        @Y30LB03*/ 05247000
*   IF CWBCMND(CMNDINDX:CMNDINDX+F1)^=',S' THEN/*            @Y30LB03*/ 05248000
@RC01524 SLR   @12,@12                                             1535 05249000
         IC    @12,CMNDINDX                                        1535 05250000
         L     @09,CWBPTR                                          1535 05251000
         ALR   @09,@12                                             1535 05252000
         CLC   CWBCMND-1(2,@09),@CC02864                           1535 05253000
         BE    @RF01535                                            1535 05254000
*SYNERROR:                          /* ERROR PROCESSING      @Y30LB03*/ 05255000
*/*********************************************************  @Y30LB03*/ 05256000
*/*                                                          @Y30LB03*/ 05257000
*/*   SYNTAX ERROR PROCESSING                                @Y30LB03*/ 05258000
*/*                                                          @Y30LB03*/ 05259000
*/*********************************************************  @Y30LB03*/ 05260000
*                                                                  1536 05261000
*     DO;                           /* YES,                  @Y30LB03*/ 05262000
SYNERROR DS    0H                                                  1537 05263000
*       WTOMCS03=MESGS(MSG31501);   /* SETUP ERROR MSG       @Z40LB01*/ 05264000
         MVI   WTOMCS03+72,C' '                                    1537 05265000
         L     @12,@CA02101                                        1537 05266000
         MVC   WTOMCS03(72),MESGS-MSGS+2736(@12)                   1537 05267000
*       CALL ICBMSG44;              /* CALL SUBRTN TO        @Y30LB03   05268000
*                                      DEQ CWB AREA          @Y30LB03*/ 05269000
         BAL   @14,ICBMSG44                                        1538 05270000
*       CALL ICBMSG47;              /* CALL WTO SUBRTN       @Y30LB03*/ 05271000
         BAL   @14,ICBMSG47                                        1539 05272000
*       CALL ICBMSG46;              /* CALL SUBRTN TO        @Y30LB03   05273000
*                                      FREE DQ'D CWB AREA    @Y30LB03*/ 05274000
         BAL   @14,ICBMSG46                                        1540 05275000
*       RFY                                                        1541 05276000
*         R14 RSTD;                 /*                       @G24LB02*/ 05277000
*       R14=SAVR1441;               /*                       @Y30LB03*/ 05278000
         L     R14,SAVR1441                                        1542 05279000
*       RFY                                                        1543 05280000
*         R14 UNRSTD;               /*                       @G24LB02*/ 05281000
*       RETURN;                     /* RTN TO ICBMSG40       @Y30LB03*/ 05282000
@EL00016 DS    0H                                                  1544 05283000
@EF00016 DS    0H                                                  1544 05284000
@ER00016 BR    @14                                                 1544 05285000
*     END;                          /*                       @Y30LB03*/ 05286000
*/*********************************************************  @Y30LB03*/ 05287000
*/*                                                          @Y30LB03*/ 05288000
*/*      END OF SYNTAX ERROR CHECKING AND PROCESSING         @Y30LB03*/ 05289000
*/*      NOW DO AUTHORIZATION CHECKING.                      @Y30LB03*/ 05290000
*/*                                                          @Y30LB03*/ 05291000
*/*********************************************************  @Y30LB03*/ 05292000
*                                                                  1546 05293000
*   WTOMCS03=MESGS(MSG31101);       /* FILL WTO BUFFER       @Z40LB01*/ 05294000
@RF01535 MVI   WTOMCS03+72,C' '                                    1546 05295000
         L     @12,@CA02101                                        1546 05296000
         MVC   WTOMCS03(72),MESGS-MSGS+2584(@12)                   1546 05297000
*   CKAUTH=CWBAUTH&AUTHMASK;        /* DEFINE AUTH SWITCH    @Y30LB03*/ 05298000
         L     @12,CWBPTR                                          1547 05299000
         MVC   CKAUTH(2),CWBAUTH(@12)                              1547 05300000
         NC    CKAUTH(2),AUTHMASK                                  1547 05301000
*   WTOMCS03(47:50)='    ';         /*                       @Z40LB01*/ 05302000
         MVC   WTOMCS03+46(4),@CC02866                             1548 05303000
*   IF CKAUTH=CHAR0000 THEN         /* WAS SWITCH ZEROED?    @Y30LB03*/ 05304000
         CLC   CKAUTH(2),@CB02433                                  1549 05305000
         BNE   @RF01549                                            1549 05306000
*     WTOMCS03(47:50)='0177';       /* YES, FILL IN REASON   @Z40LB01   05307000
*                                      CODE INDICATING       @Y30LB03   05308000
*                                      NOT AUTHORIZED        @Y30LB03*/ 05309000
         MVC   WTOMCS03+46(4),@CC02867                             1550 05310000
*   IF CKAUTH=CHAR0000 THEN         /* WAS AUTH SWITCH CHNG'D?     1551 05311000
*                                                            @Y30LB03*/ 05312000
@RF01549 CLC   CKAUTH(2),@CB02433                                  1551 05313000
         BNE   @RF01551                                            1551 05314000
*     DO;                           /* YES,DEFINE UNAUTHR'D MSG    1552 05315000
*                                                            @Y30LB03*/ 05316000
*       IF ONOFF='ON' THEN          /* VARY ON CMD?          @Y30LB03*/ 05317000
         CLC   ONOFF(2),@CC02863                                   1553 05318000
         BNE   @RF01553                                            1553 05319000
*         WTOMCS03(22:24)=' ON';    /* PUT 'ON' IN MSG       @Z40LB01*/ 05320000
         MVC   WTOMCS03+21(3),@CC02868                             1554 05321000
*       ELSE                        /* FILL IN MSG WITH      @Y30LB03   05322000
*                                      OFF                   @Y30LB03*/ 05323000
*         WTOMCS03(22:24)='OFF';    /* PUT 'OFF' IN MSG      @Z40LB01*/ 05324000
         B     @RC01553                                            1555 05325000
@RF01553 MVC   WTOMCS03+21(3),@CC02869                             1555 05326000
*     END;                          /*                       @Y30LB03*/ 05327000
@RC01553 DS    0H                                                  1557 05328000
*/*END OF AUTHORIZATION CHECKING                             @Y30LB03*/ 05329000
*                                                                  1557 05330000
*   FREESWTH=F0;                    /*                       @Y30LB03*/ 05331000
@RF01551 MVI   FREESWTH,X'00'                                      1557 05332000
*   DO VARYCNT=F1 TO UNITCNT;       /*                       @Y30LB03*/ 05333000
         LA    @12,1                                               1558 05334000
         B     @DE01558                                            1558 05335000
@DL01558 DS    0H                                                  1559 05336000
*/*********************************************************  @Y30LB03*/ 05337000
*/*                                                          @Y30LB03*/ 05338000
*/*        RTN TO CONVERT RU TO 2 DIGITS                     @Y30LB03*/ 05339000
*/*                                                          @Y30LB03*/ 05340000
*/*********************************************************  @Y30LB03*/ 05341000
*                                                                  1559 05342000
*     ALPHAS=CHARS;                 /* BUILD TRANS TABLE     @Z40LB01*/ 05343000
         LA    @12,24                                              1559 05344000
         AL    @12,CCWSPTR                                         1559 05345000
         MVC   ALPHAS(6,@12),CHARS                                 1559 05346000
*     NUMBRS=NUMS;                  /* BUILT TRANS TABLE     @Z40LB01*/ 05347000
         MVC   NUMBRS(16,@12),NUMS                                 1560 05348000
*     MSGRU=CWBRU;                  /* MOVE IN UNIT NAME     @Z40LB01*/ 05349000
         L     @12,CWBVREF                                         1561 05350000
         MVC   MSGRU(3),CWBRU(@12)                                 1561 05351000
*     IF MSGRU(1:1)=CHAR0 THEN      /* TEST FOR DASD         @Z40LB01*/ 05352000
         CLI   MSGRU,C'0'                                          1562 05353000
         BNE   @RF01562                                            1562 05354000
*       DASD=BONE;                  /* SET DASD SWITCH       @Z40LB01*/ 05355000
         OI    DASD,B'10000000'                                    1563 05356000
*     ELSE                          /* NOT DASD              @Z40LB01*/ 05357000
*       DASD=BZERO;                 /* RESET DASD SWITCH     @Z40LB01*/ 05358000
         B     @RC01562                                            1564 05359000
@RF01562 NI    DASD,B'01111111'                                    1564 05360000
*     TR(MSGRU,TRANSTBL);           /* TRANSLATE UNIT HEX    @Z40LB01*/ 05361000
@RC01562 L     @12,CCWSPTR                                         1565 05362000
         TR    MSGRU(3),TRANSTBL+24(@12)                           1565 05363000
*     PACK(MSGRU,MSGRU);            /* PACK MSGRU            @Y30LB03*/ 05364000
         PACK  MSGRU(3),MSGRU(3)                                   1566 05365000
*     MSGRU=MSGRU/F16;              /* SHIFT RIGHT 4 BITS    @Y30LB03*/ 05366000
         SLR   @12,@12                                             1567 05367000
         ICM   @12,7,MSGRU                                         1567 05368000
         SRL   @12,4                                               1567 05369000
         STCM  @12,7,MSGRU                                         1567 05370000
*/*********************************************************  @Y30LB03*/ 05371000
*/*                                                          @Y30LB03*/ 05372000
*/*     RU CONVERTED                                         @Y30LB03*/ 05373000
*/*                                                          @Y30LB03*/ 05374000
*/*********************************************************  @Y30LB03*/ 05375000
*                                                                  1568 05376000
*     BRSWTCH=F0;                   /* SET BRSWTCH TO 0      @Y30LB03*/ 05377000
         MVI   BRSWTCH,X'00'                                       1568 05378000
*     SSIDADDR=MACRORU;             /* SET TO 2 BYTE RU      @Y30LB03*/ 05379000
         MVC   SSIDADDR(2),MACRORU                                 1569 05380000
*     DSDSWTH=F0;                   /*                       @Y30LB03*/ 05381000
         MVI   DSDSWTH,X'00'                                       1570 05382000
*     IF CKAUTH=CHAR0000 THEN       /* CALLER AUTHORIZED?    @Y30LB03*/ 05383000
         CLC   CKAUTH(2),@CB02433                                  1571 05384000
         BNE   @RF01571                                            1571 05385000
*       WTOMCS03(18:20)=RU;         /* NO,FILL IN UNIT       @Z40LB01*/ 05386000
         L     @12,CWBVREF                                         1572 05387000
         MVC   WTOMCS03+17(3),RU(@12)                              1572 05388000
*     ELSE                          /* YES,                  @Y30LB03*/ 05389000
*       DO;                         /* CKECK FOR MSC VARY    @Y30LB03*/ 05390000
         B     @RC01571                                            1573 05391000
@RF01571 DS    0H                                                  1574 05392000
*         IF VARYCNT=F1 THEN        /* HAS ALL SYNTAX CHECKING     1574 05393000
*                                                            @Y30LB03   05394000
*                                      BEEN DONE?            @Y30LB03*/ 05395000
         CLC   VARYCNT(4),@CF00117                                 1574 05396000
         BNE   @RF01574                                            1574 05397000
*           DO;                     /* NO,DO REST OF IT      @Y30LB03*/ 05398000
*             CMNDINDX=CMNDINDX+F2; /* INCREMENT CNTR        @Y30LB03*/ 05399000
         SLR   @12,@12                                             1576 05400000
         IC    @12,CMNDINDX                                        1576 05401000
         LA    @12,2(,@12)                                         1576 05402000
         STC   @12,CMNDINDX                                        1576 05403000
*             IF CWBCMND(CMNDINDX:CMNDINDX)^=' ' THEN/* OPERAND AFTER   05404000
*                                      'S'?                  @Y30LB03*/ 05405000
         L     @09,CWBPTR                                          1577 05406000
         ALR   @12,@09                                             1577 05407000
         CLI   CWBCMND-1(@12),C' '                                 1577 05408000
         BE    @RF01577                                            1577 05409000
*               DO;                 /* YES,                  @Y30LB03*/ 05410000
*/*  **********************************************          @Y30LB03*/ 05411000
*/*   THE FOLLOWING STATEMENT CHECKS THE COMMAND SYNTAX      @Y30LB03*/ 05412000
*/*   FOLLOWING THE 'S'.  A COMMA IS THE ONLY CHARACTER      @Y30LB03*/ 05413000
*/*   THAT CAN FOLLOW THE 'S'.  AND, 'REAL' AND '3851'       @Y30LB03*/ 05414000
*/*   ARE THE ONLY OPERANDS THAT CAN FOLLOW 'S,'.            @Y30LB03*/ 05415000
*/*   IF THESE CASES DO NOT HOLD TRUE, SWITCHES ARE SET      @Y30LB03*/ 05416000
*/*   THAT WILL (LATER) CAUSE A SYNTAX ERROR MESSAGE TO      @Y30LB03*/ 05417000
*/*   BE PRINTED.  OTHER THAN PROCESSING TO TERMINATE        @Y30LB03*/ 05418000
*/*   THE ORDER, VARY PROCESSING IS DISCONTINUED.            @Y30LB03*/ 05419000
*/*  **********************************************          @Y30LB03*/ 05420000
*                                                                  1579 05421000
*                 IF CWBCMND(CMNDINDX:CMNDINDX)^=','|((/*    @Y30LB03*/ 05422000
*                     CWBCMND(CMNDINDX+F1:CMNDINDX+F4)^='3851')&/* 1579 05423000
*                                      MSC VARY?             @Y30LB03*/ 05424000
*                     (CWBCMND(CMNDINDX+F1:CMNDINDX+F4)^='REAL')) THEN  05425000
         SLR   @12,@12                                             1579 05426000
         IC    @12,CMNDINDX                                        1579 05427000
         ALR   @12,@09                                             1579 05428000
         CLI   CWBCMND-1(@12),C','                                 1579 05429000
         BNE   @RT01579                                            1579 05430000
         SLR   @12,@12                                             1579 05431000
         IC    @12,CMNDINDX                                        1579 05432000
         ALR   @12,@09                                             1579 05433000
         CLC   CWBCMND(4,@12),@CC02873                             1579 05434000
         BE    @RF01579                                            1579 05435000
         SLR   @12,@12                                             1579 05436000
         IC    @12,CMNDINDX                                        1579 05437000
         ALR   @09,@12                                             1579 05438000
         CLC   CWBCMND(4,@09),@CC02874                             1579 05439000
         BE    @RF01579                                            1579 05440000
@RT01579 DS    0H                                                  1580 05441000
*                                   /* VARY REAL?@Y30LB03            */ 05442000
*                   DO;             /* YES                   @Y30LB03*/ 05443000
*                     DSDSWTH=F2;   /* SET SYNTAX ERROR SWITCH     1581 05444000
*                                                            @Y30LB03*/ 05445000
         MVI   DSDSWTH,X'02'                                       1581 05446000
*                     UNITCNT=F1;   /* CHG SWITCH TO EXIT DO LOOP  1582 05447000
*                                                            @Y30LB03*/ 05448000
         MVC   UNITCNT(4),@CF00117                                 1582 05449000
*                   END;            /*                       @Y30LB03*/ 05450000
*                 ELSE              /* CORRECT FORMAT AFTER 'S'    1584 05451000
*                                                            @Y30LB03*/ 05452000
*                   DO;             /* IS IT 'REAL' OR '3851'?     1584 05453000
*                                                            @Y30LB03*/ 05454000
         B     @RC01579                                            1584 05455000
@RF01579 DS    0H                                                  1585 05456000
*                     IF CWBCMND(CMNDINDX+F1:CMNDINDX+F4)='REAL' THEN   05457000
         SLR   @12,@12                                             1585 05458000
         IC    @12,CMNDINDX                                        1585 05459000
         L     @09,CWBPTR                                          1585 05460000
         ALR   @09,@12                                             1585 05461000
         CLC   CWBCMND(4,@09),@CC02874                             1585 05462000
         BNE   @RF01585                                            1585 05463000
*                                   /* REAL?                 @Y30LB03*/ 05464000
*                       REAL=BONE;  /* YES, SET REAL SWITCH  @Y30LB03*/ 05465000
         OI    REAL,B'10000000'                                    1586 05466000
*                     ELSE          /* NO, HAS TO BE '3851'(VARY MSC)   05467000
*                                                            @Y30LB03*/ 05468000
*                       DO;         /* (VARY MSC)            @Y30LB03*/ 05469000
         B     @RC01585                                            1587 05470000
@RF01585 DS    0H                                                  1588 05471000
*                         IF UNITCNT>F1 THEN/* MULTI UNIT VARY?    1588 05472000
*                                                            @Y30LB03*/ 05473000
         LA    @12,1                                               1588 05474000
         C     @12,UNITCNT                                         1588 05475000
         BNL   @RF01588                                            1588 05476000
*                           DO;     /* YES,                  @Y30LB03*/ 05477000
*                             DSDSWTH=F2;/* YES, SET SYNTAX ERROR  1590 05478000
*                                      SWITCH,               @Y30LB03*/ 05479000
         MVI   DSDSWTH,X'02'                                       1590 05480000
*                             UNITCNT=F1;/* RESET UNIT CNT TO GET OUT   05481000
*                                      OF LOOP               @Y30LB03*/ 05482000
         ST    @12,UNITCNT                                         1591 05483000
*                           END;    /*                       @Y30LB03*/ 05484000
*                                                                  1592 05485000
*                         /*******************************************/ 05486000
*                         /*                                         */ 05487000
*                         /* CAN ONLY VARY ONE UNIT WITH '3851'      */ 05488000
*                         /*                                 @Y30LB03*/ 05489000
*                         /*                                         */ 05490000
*                         /*******************************************/ 05491000
*                                                                  1593 05492000
*                         ELSE      /* NO, SINGLE UNIT, SO CONTINUE     05493000
*                                                            @Y30LB03*/ 05494000
*                                                                  1593 05495000
*                           /*****************************************/ 05496000
*                           /*                                       */ 05497000
*                           /* BY CALLING MSC VARY SUBROUTINE        */ 05498000
*                           /*                               @Y30LB03*/ 05499000
*                           /*                                       */ 05500000
*                           /*****************************************/ 05501000
*                                                                  1593 05502000
*                           DO;     /* YES,                  @Y30LB03*/ 05503000
         B     @RC01588                                            1593 05504000
@RF01588 DS    0H                                                  1594 05505000
*                             DSDSWTH=F1;/* TURN ON SWITCH   @Y30LB03*/ 05506000
         MVI   DSDSWTH,X'01'                                       1594 05507000
*                             CALL ICBMSG49;/* CALL VARY MSC SUBRTN     05508000
*                                                            @Y30LB03*/ 05509000
         BAL   @14,ICBMSG49                                        1595 05510000
*                             IF DSDSWTH=F0 THEN/* IF WASN'T MSC UNIT   05511000
*                                                            @Y30LB03*/ 05512000
         CLI   DSDSWTH,0                                           1596 05513000
         BNE   @RF01596                                            1596 05514000
*                               DSDSWTH=F2;/* THEN SYNTAX ERROR    1597 05515000
*                                                            @Y30LB03*/ 05516000
         MVI   DSDSWTH,X'02'                                       1597 05517000
*                           END;    /*                       @Y30LB03*/ 05518000
@RF01596 DS    0H                                                  1599 05519000
*                       END;        /*                       @Y30LB03*/ 05520000
@RC01588 DS    0H                                                  1600 05521000
*                   END;            /*                       @Y30LB03*/ 05522000
@RC01585 DS    0H                                                  1601 05523000
*               END;                /*                       @Y30LB03*/ 05524000
@RC01579 DS    0H                                                  1602 05525000
*           END;                    /*                       @Y30LB03*/ 05526000
@RF01577 DS    0H                                                  1603 05527000
*       END;                        /*                       @Y30LB03*/ 05528000
*                                                                  1603 05529000
@RF01574 DS    0H                                                  1604 05530000
*     /***************************************************************/ 05531000
*     /*                                                             */ 05532000
*     /* ****************************************************        */ 05533000
*     /*                                                     @Y30LB03*/ 05534000
*     /* AT THIS POINT DSDSWTH WILL CONTAIN EITHER 0,1,OR 2  @Y30LB03*/ 05535000
*     /* F0 = 0                                              @Y30LB03*/ 05536000
*     /* F1 = 1                                              @Y30LB03*/ 05537000
*     /* F2 = 2                                              @Y30LB03*/ 05538000
*     /* IF DSDSWTH = F0 THEN THIS IS A NORMAL VARY          @Y30LB03*/ 05539000
*     /* IF DSDSWTH = F1 THEN THIS WAS A SUCCESSFUL MSC VARY,        */ 05540000
*     /*                                                     @Y30LB03*/ 05541000
*     /* AND MAY BE A WTO MESSAGE TO BE PRINTED              @Y30LB03*/ 05542000
*     /*                                                             */ 05543000
*     /***************************************************************/ 05544000
*                                                                  1604 05545000
*/*   IF DSDSWTCH = F2 THE WRONG UNIT WAS SPECIFIED FOR      @Y30LB03   05546000
*     VARYING THE MSC (I.E.'3851' SPECIFIED ON COMMAND, BUT  @Y30LB03   05547000
*     NOT WITH A MSC UNIT). OR, THERE IS A SYNTAX ERROR      @Y30LB03   05548000
*    FOLLOWING THE 'S' OPERAND.                              @Y30LB03   05549000
*     FOR THESE CASES, A SYNTAX ERROR MESSAGE IS SET UP.     @Y30LB03*/ 05550000
*                                                                  1604 05551000
*     IF DSDSWTH=F2 THEN            /* WAS WRONG UNIT/OPERAND      1604 05552000
*                                                            @Y30LB03   05553000
*                                      SPECIFIED IN VARY COMMAND?  1604 05554000
*                                                            @Y30LB03*/ 05555000
@RC01571 CLI   DSDSWTH,2                                           1604 05556000
         BNE   @RF01604                                            1604 05557000
*       WTOMCS03=MESGS(MSG31501);   /*                       @Z40LB01*/ 05558000
         MVI   WTOMCS03+72,C' '                                    1605 05559000
         L     @12,@CA02101                                        1605 05560000
         MVC   WTOMCS03(72),MESGS-MSGS+2736(@12)                   1605 05561000
*     ELSE                          /* IF WASN'T SYNTAX ERROR      1606 05562000
*                                                            @Y30LB03   05563000
*                                      IN MSC VARY           @Y30LB03*/ 05564000
*       IF DSDSWTH=F0 THEN          /* CHECK FOR NORMAL VARY @Y30LB03*/ 05565000
         B     @RC01604                                            1606 05566000
@RF01604 CLI   DSDSWTH,0                                           1606 05567000
         BNE   @RF01606                                            1606 05568000
*         IF CKAUTH^=CHAR0000 THEN  /* WAS CALLER AUTHORIZED?      1607 05569000
*                                                            @Y30LB03*/ 05570000
         CLC   CKAUTH(2),@CB02433                                  1607 05571000
         BE    @RF01607                                            1607 05572000
*           IF ONOFF='OF' THEN      /* VARY OFF CMD?         @Y30LB03*/ 05573000
         CLC   ONOFF(2),@CC02861                                   1608 05574000
         BNE   @RF01608                                            1608 05575000
*             DO;                   /* YES,                  @Y30LB03*/ 05576000
*               OPCMECB=F0;         /* ZERO ECB              @Y30LB03*/ 05577000
         SLR   @12,@12                                             1610 05578000
         ST    @12,OPCMECB                                         1610 05579000
*               IF REAL=BONE THEN   /* REAL?                 @Y30LB03*/ 05580000
         TM    REAL,B'10000000'                                    1611 05581000
         BNO   @RF01611                                            1611 05582000
*                 VFLAGS(1:3)='010'B;/* YES, SET REAL              1612 05583000
*                                      ATTRIBUTE@Y30LB03             */ 05584000
         NI    VFLAGS,B'01011111'                                  1612 05585000
         OI    VFLAGS,B'01000000'                                  1612 05586000
*               ELSE                /* NO,                   @Y30LB03*/ 05587000
*                 IF DASD=BONE THEN /* DASD?                 @Y30LB03*/ 05588000
         B     @RC01611                                            1613 05589000
@RF01611 TM    DASD,B'10000000'                                    1613 05590000
         BNO   @RF01613                                            1613 05591000
*                   DO;             /* YES,CHECK TYPE        @Y30LB03*/ 05592000
*                     VFLAGS(1:3)='100'B;/* SET FLAGS VIRTUAL      1615 05593000
*                                                            @Y30LB03*/ 05594000
         NI    VFLAGS,B'10011111'                                  1615 05595000
         OI    VFLAGS,B'10000000'                                  1615 05596000
*                     OPCMECB=CWBPTR;/* SET ECB              @Y30LB03*/ 05597000
         L     @12,CWBPTR                                          1616 05598000
         ST    @12,OPCMECB                                         1616 05599000
*                     OPCMECB1=CHARFF;/* SET ECBS HIGH BYTE  @Y30LB03*/ 05600000
         MVI   OPCMECB1,X'FF'                                      1617 05601000
*                     BRSWTCH=F1;   /* TURN BRCH SWTCH ON    @Y30LB03*/ 05602000
         MVI   BRSWTCH,X'01'                                       1618 05603000
*                     FREESWTH=FREESWTH+F1;/* WHEN THIS SWTH IS 0  1619 05604000
*                                                            @Y30LB03   05605000
*                                      THE CWB AREA CAN BE   @Y30LB03   05606000
*                                      FREED IN ICBMSG46     @Y30LB03*/ 05607000
         IC    @12,FREESWTH                                        1619 05608000
         LA    @12,1(,@12)                                         1619 05609000
         STC   @12,FREESWTH                                        1619 05610000
*                   END;            /*                       @Y30LB03*/ 05611000
*                 ELSE              /* NOT,DASD              @Y30LB03*/ 05612000
*                   VFLAGS(1:3)='000'B;/* SO ZERO ATTRIBUTE  @Y30LB03   05613000
*                                      BITS IN FLAGS         @Y30LB03*/ 05614000
         B     @RC01613                                            1621 05615000
@RF01613 NI    VFLAGS,B'00011111'                                  1621 05616000
*               VOFECB=OPCMECB;     /* FILL IN ECB FIELD     @Y30LB03*/ 05617000
@RC01613 DS    0H                                                  1622 05618000
@RC01611 L     @12,OPCMECB                                         1622 05619000
         ST    @12,VOFECB                                          1622 05620000
*               SAVREENT=REENTRY;   /* SAVE REENTRY POINTER  @G24LB02*/ 05621000
         L     @12,REENTRY                                         1623 05622000
         ST    @12,SAVREENT                                        1623 05623000
*               REENTRY=ADDR(VOFRET);/* SET NEW REENTRY PTR  @G24LB02*/ 05624000
         LA    @12,VOFRET                                          1624 05625000
         ST    @12,REENTRY                                         1624 05626000
*               SVCCALL=ON;         /* SET SVC CALL FLAG     @G24LB02*/ 05627000
         OI    SVCCALL,B'00001000'                                 1625 05628000
*IVARYOF1:                                                         1626 05629000
*                                                                  1626 05630000
*               /*****************************************************/ 05631000
*               /*                                                   */ 05632000
*               /* ***************************************************/ 05633000
*               /* ******                                    @Y30LB02*/ 05634000
*               /* MACMEAN MSSC VARYON/VARYOFF MACRO         @Y30LB02*/ 05635000
*               /* VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00   @Y30LB02*/ 05636000
*               /* THIS IS THE OUTPUT FOR THE EXECUTE FORM.  @Y30LB02*/ 05637000
*               /* THE LIST FORM OF THIS MACRO SHOULD BE     @Y30LB02*/ 05638000
*               /* INVOKED FIRST IN ORDER TO SET UP NECESSARY        */ 05639000
*               /*                                           @Y30LB02*/ 05640000
*               /* DECLARES. IF THE COMPLETE ARGUMENT IS     @Y30LB02*/ 05641000
*               /* SPECIFIED THE REQ BLOCK WILL BE ZEROED.   @Y30LB02*/ 05642000
*               /* ***************************************************/ 05643000
*               /* ******                                    @Y30LB02*/ 05644000
*               /*                                                   */ 05645000
*               /*****************************************************/ 05646000
*                                                                  1626 05647000
*               RFY                                                1626 05648000
*                (ICBR1) RSTD;      /* RESTRICT REG 1        @Y30LB02*/ 05649000
IVARYOF1 DS    0H                                                  1627 05650000
*               ICBR1=ADDR(VOFLIST);/* R1 PTR TO REQUEST BLOCK     1627 05651000
*                                                            @Y30LB02*/ 05652000
         LA    ICBR1,VOFLIST                                       1627 05653000
*               VOFLEN='18'X;       /* LENG-VARYOFF REQUEST BLOCK  1628 05654000
*                                                            @Y30LB02*/ 05655000
         LA    @12,24                                              1628 05656000
         ST    @12,VOFLEN                                          1628 05657000
*               VOFOPCD='0C'X;      /* OPCODE FOR VARYOFF REQ      1629 05658000
*                                                            @Y30LB02*/ 05659000
         MVI   VOFOPCD,X'0C'                                       1629 05660000
*               VOFFLG=(VFLAGS);    /* VALUE OF FLAGS        @Y30LB02*/ 05661000
         MVC   VOFFLG(2),VFLAGS                                    1630 05662000
*               VOFSSID=(SSIDADDR); /* VALUE OF SSID         @Y30LB02*/ 05663000
         MVC   VOFSSID(2),SSIDADDR                                 1631 05664000
*               SVC(126);           /* INVOKE THE SVC        @Y30LB02*/ 05665000
         SVC   126                                                 1632 05666000
*               RFY                                                1633 05667000
*                 ICBR1 UNRSTD;     /* UNRESTRICT REG 1      @Y30LB02   05668000
*                                      VARY OFF              @Y30LB03*/ 05669000
*VOFRET:                            /* LABEL RETURN          @G24LB02*/ 05670000
*               SVCCALL=OFF;        /* CLEAR SVC CALL FLAG   @G24LB02*/ 05671000
VOFRET   NI    SVCCALL,B'11110111'                                 1634 05672000
*               REENTRY=SAVREENT;   /* RESTORE REENTRY POINTER     1635 05673000
*                                                            @G24LB02*/ 05674000
         L     @12,SAVREENT                                        1635 05675000
         ST    @12,REENTRY                                         1635 05676000
*               RFY                                                1636 05677000
*                (R15) RSTD;        /* R15 RESTRICT          @Z40LB01*/ 05678000
*               IF R15^=F0 THEN     /* ERROR RETURN?         @Y30LB03*/ 05679000
         LTR   R15,R15                                             1637 05680000
         BZ    @RF01637                                            1637 05681000
*                 DO;               /* YES                   @Y30LB03*/ 05682000
*                                                                  1638 05683000
*                   /*************************************************/ 05684000
*                   /*                                               */ 05685000
*                   /* CONVERT REASON CODE                   @Y30LB03*/ 05686000
*                   /*                                               */ 05687000
*                   /*************************************************/ 05688000
*                                                                  1639 05689000
*                   RESPECIFY                                      1639 05690000
*                     R0 RSTD;      /* RSTD REG 0            @Y30LB03*/ 05691000
*                   INTER=R0;       /*                       @Y30LB03*/ 05692000
         ST    R0,INTER                                            1640 05693000
*                   CALL ICBMSG82;  /* CALL SUBRTN TO        @Y30LB03   05694000
*                                      CONVERT REAS CODE     @Y30LB03*/ 05695000
         BAL   @14,ICBMSG82                                        1641 05696000
*                   RFY                                            1642 05697000
*                    (R0,                                          1642 05698000
*                     R15) UNRSTD;  /* RELEASE REG 0         @G24LB02*/ 05699000
*                                                                  1642 05700000
*                   /*************************************************/ 05701000
*                   /*                                               */ 05702000
*                   /* PREPARE NORMAL                        @Y30LB03*/ 05703000
*                   /* FAILURE MESSAGE(WTO)                  @Y30LB03*/ 05704000
*                   /* FILL IN REAS CODE,                    @Y30LB03*/ 05705000
*                   /* REAL UNIT, AND 'OFF'                  @Y30LB03*/ 05706000
*                   /*                                               */ 05707000
*                   /*************************************************/ 05708000
*                                                                  1643 05709000
*                   WTOMCS03=MESGS(MSG31101);/* FILL BUFF    @Z40LB01*/ 05710000
         MVI   WTOMCS03+72,C' '                                    1643 05711000
         L     @12,@CA02101                                        1643 05712000
         MVC   WTOMCS03(72),MESGS-MSGS+2584(@12)                   1643 05713000
*                   WTOMCS03(47:49)=BYTES234;/*              @Z40LB01*/ 05714000
         MVC   WTOMCS03+46(3),BYTES234                             1644 05715000
*                   WTOMCS03(18:20)=RU;/*                    @Z40LB01*/ 05716000
         L     @12,CWBVREF                                         1645 05717000
         MVC   WTOMCS03+17(3),RU(@12)                              1645 05718000
*                   WTOMCS03(22:24)='OFF';/*                 @Z40LB01*/ 05719000
         MVC   WTOMCS03+21(3),@CC02869                             1646 05720000
*                   IF VFLAGS(1)=BONE THEN/* DEL RESPONSE?   @Y30LB03*/ 05721000
         TM    VFLAGS,B'10000000'                                  1647 05722000
         BNO   @RF01647                                            1647 05723000
*                     DO;           /* YES....               @Y30LB03*/ 05724000
*                       FREESWTH=FREESWTH-F1;/*              @Y30LB03*/ 05725000
         SLR   @12,@12                                             1649 05726000
         IC    @12,FREESWTH                                        1649 05727000
         BCTR  @12,0                                               1649 05728000
         STC   @12,FREESWTH                                        1649 05729000
*                       BRSWTCH=F0; /* TURN BRCH SWTCH OF    @Y30LB03*/ 05730000
         MVI   BRSWTCH,X'00'                                       1650 05731000
*                     END;          /*                       @Y30LB03*/ 05732000
*                   RU='***';       /* CROSS OUT UNIT        @Y30LB03*/ 05733000
@RF01647 L     @12,CWBVREF                                         1652 05734000
         MVC   RU(3,@12),@CC02792                                  1652 05735000
*                 END;              /*                       @Y30LB03*/ 05736000
*               ELSE                /* GOOD RETURN           @Y30LB03*/ 05737000
*                 IF BRSWTCH=F0 THEN/* CHECK BRCH SWITCH     @Y30LB03*/ 05738000
         B     @RC01637                                            1654 05739000
@RF01637 CLI   BRSWTCH,0                                           1654 05740000
         BNE   @RF01654                                            1654 05741000
*                   DO;             /* SET UP GOOD MSG       @Y30LB03*/ 05742000
*                     WTOMCS03=MESGS(MSG30201);/* FILL BUFF  @Z40LB01*/ 05743000
         MVI   WTOMCS03+72,C' '                                    1656 05744000
         L     @12,@CA02101                                        1656 05745000
         MVC   WTOMCS03(72),MESGS-MSGS+2432(@12)                   1656 05746000
*                     WTOMCS03(13:15)=RU;/*                  @Z40LB01*/ 05747000
         L     @12,CWBVREF                                         1657 05748000
         MVC   WTOMCS03+12(3),RU(@12)                              1657 05749000
*                     WTOMCS03(21:23)='OFF';/*               @Z40LB01*/ 05750000
         MVC   WTOMCS03+20(3),@CC02869                             1658 05751000
*                     RU='***';     /* CROSS OUT UNIT        @Y30LB03*/ 05752000
         MVC   RU(3,@12),@CC02792                                  1659 05753000
*                   END;            /*                       @Y30LB03*/ 05754000
*             END;                  /*                       @Y30LB03*/ 05755000
*           ELSE                    /* CHECK FOR 'ON'        @Y30LB03*/ 05756000
*             IF ONOFF='ON' THEN    /* VARY ON CMD?          @Y30LB03*/ 05757000
         B     @RC01608                                            1662 05758000
@RF01608 CLC   ONOFF(2),@CC02863                                   1662 05759000
         BNE   @RF01662                                            1662 05760000
*               DO;                 /* YES,                  @Y30LB03*/ 05761000
*                 IF REAL=BONE THEN /* REAL?                 @Y30LB03*/ 05762000
         TM    REAL,B'10000000'                                    1664 05763000
         BNO   @RF01664                                            1664 05764000
*                   VFLAGS(1:3)='010'B;/* YES, SET REAL            1665 05765000
*                                      ATTRIBUTE@Y30LB03             */ 05766000
         NI    VFLAGS,B'01011111'                                  1665 05767000
         OI    VFLAGS,B'01000000'                                  1665 05768000
*                 ELSE              /* NO,                   @Y30LB03*/ 05769000
*                   IF DASD='1'B THEN/* DASD TO BE VARIED?   @Y30LB03*/ 05770000
         B     @RC01664                                            1666 05771000
@RF01664 TM    DASD,B'10000000'                                    1666 05772000
         BNO   @RF01666                                            1666 05773000
*                     VFLAGS(1:3)='100'B;/* SET FLAGS VIRTUAL      1667 05774000
*                                                            @Y30LB03*/ 05775000
         NI    VFLAGS,B'10011111'                                  1667 05776000
         OI    VFLAGS,B'10000000'                                  1667 05777000
*                   ELSE            /* NOT DASD, SO...       @Y30LB03*/ 05778000
*                     VFLAGS(1:3)='000'B;/* ZERO FLAGS       @Y30LB03   05779000
*                                      ISSUE VARY ON         @Y30LB03*/ 05780000
         B     @RC01666                                            1668 05781000
@RF01666 NI    VFLAGS,B'00011111'                                  1668 05782000
*                 SAVREENT=REENTRY; /* SAVE REENTRY POINTER  @G24LB02*/ 05783000
@RC01666 DS    0H                                                  1669 05784000
@RC01664 L     @12,REENTRY                                         1669 05785000
         ST    @12,SAVREENT                                        1669 05786000
*                 REENTRY=ADDR(VONRET);/* SET NEW REENTRY POINTER  1670 05787000
*                                                            @G24LB02*/ 05788000
         LA    @12,VONRET                                          1670 05789000
         ST    @12,REENTRY                                         1670 05790000
*                 SVCCALL=ON;       /* SET SVC CALL FLAG     @G24LB02*/ 05791000
         OI    SVCCALL,B'00001000'                                 1671 05792000
*IVARYON1:                                                         1672 05793000
*                                                                  1672 05794000
*                 /***************************************************/ 05795000
*                 /*                                                 */ 05796000
*                 /* *************************************************/ 05797000
*                 /* *******                                 @Y30LB02*/ 05798000
*                 /* MACMEAN MSSC VARYON MACRO               @Y30LB02*/ 05799000
*                 /* VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00  @Y30LB02*/ 05800000
*                 /* THIS IS THE STANDARD FORM - VARYON MACRO        */ 05801000
*                 /*                                         @Y30LB02*/ 05802000
*                 /* *************************************************/ 05803000
*                 /* *******                                 @Y30LB02*/ 05804000
*                 /*                                                 */ 05805000
*                 /***************************************************/ 05806000
*                                                                  1672 05807000
*                 RFY                                              1672 05808000
*                  (ICBR1) RSTD;    /* RESTRICT REG 1        @Y30LB02*/ 05809000
IVARYON1 DS    0H                                                  1673 05810000
*                 ICBR1=ADDR(VONLEN);/* R1 PTR TO REQ BLK    @Y30LB02*/ 05811000
         LA    ICBR1,VONLEN                                        1673 05812000
*                 DCL                                              1674 05813000
*                   1 VONLST01 STATIC LOCAL,/* VARYON REQUEST BLOCK     05814000
*                                                            @Y30LB02*/ 05815000
*                    2 VONLEN FIXED(31) INIT('0C'X),/* LENGTH OF   1674 05816000
*                                      VARYON REQ BLK        @Y30LB02*/ 05817000
*                    2 VONOPCD CHAR(1) INIT('0A'X),/* VARYON OPCODE     05818000
*                                                            @Y30LB02*/ 05819000
*                    2 VONRES1 CHAR(1) INIT('00'X),/* ONE BYTE OF  1674 05820000
*                                      ZERO                  @Y30LB02*/ 05821000
*                    2 VONFLG BIT(16) INIT('0000000000000000'B),/* 1674 05822000
*                                      FLAGS AREA            @Y30LB02*/ 05823000
*                     3 VONSTAG BIT(1),/* STAGING ATTRIBUTE  @Y30LB02*/ 05824000
*                     3 VONREAL BIT(1),/* REAL ATTRIBUTE     @Y30LB02*/ 05825000
*                     3 * BIT(14),  /* FOURTEEN BITS RESERVED      1674 05826000
*                                                            @Y30LB02*/ 05827000
*                    2 VONSSID FIXED(15) INIT(0),/* SUBSYSTEM ID   1674 05828000
*                                                            @Y30LB02*/ 05829000
*                    2 VONRES2 CHAR(2) INIT('0000'X);/* RESERVED AREA   05830000
*                                                            @Y30LB02*/ 05831000
*                 VONLEN='0C'X;     /* LENG-VARYON REQUEST BLOCK   1675 05832000
*                                                            @Y30LB02*/ 05833000
         LA    @12,12                                              1675 05834000
         ST    @12,VONLEN                                          1675 05835000
*                 VONOPCD='0A'X;    /* VARYON OPCODE         @Y30LB02*/ 05836000
         MVI   VONOPCD,X'0A'                                       1676 05837000
*                 VONFLG=(VFLAGS);  /* VALUE OF FLAGS        @Y30LB02*/ 05838000
         MVC   VONFLG(2),VFLAGS                                    1677 05839000
*                 VONSSID=(SSIDADDR);/* VALUE OF SSID        @Y30LB02*/ 05840000
         MVC   VONSSID(2),SSIDADDR                                 1678 05841000
*                 SVC(126);         /* INVOKE THE SVC        @Y30LB02*/ 05842000
         SVC   126                                                 1679 05843000
*                 RFY                                              1680 05844000
*                   ICBR1 UNRSTD;   /* UNRESTRICT REG 1      @Y30LB02   05845000
*                                                            @Y30LB03*/ 05846000
*VONRET:                            /* LABEL FOR RETURN      @G24LB02*/ 05847000
*                 SVCCALL=OFF;      /* CLEAR SVC CALL FLAG   @G24LB02*/ 05848000
VONRET   NI    SVCCALL,B'11110111'                                 1681 05849000
*                 REENTRY=SAVREENT; /* RESTORE REENTRY POINTER     1682 05850000
*                                                            @G24LB02*/ 05851000
         L     @12,SAVREENT                                        1682 05852000
         ST    @12,REENTRY                                         1682 05853000
*                 RFY                                              1683 05854000
*                   R15 RSTD;       /* R15 RESTRICT          @Z40LB01*/ 05855000
*                 IF R15^=F0 THEN   /* ERROR RETURN?         @Y30LB03*/ 05856000
         LTR   R15,R15                                             1684 05857000
         BZ    @RF01684                                            1684 05858000
*                   DO;             /*                       @Y30LB03*/ 05859000
*                                                                  1685 05860000
*                     /***********************************************/ 05861000
*                     /*                                             */ 05862000
*                     /* CONVERT REASON CODE                 @Y30LB03*/ 05863000
*                     /*                                             */ 05864000
*                     /***********************************************/ 05865000
*                                                                  1686 05866000
*                     RESPECIFY                                    1686 05867000
*                       R0 RSTD;    /* RSTD REG 0            @Y30LB03*/ 05868000
*                     INTER=R0;     /*                       @Y30LB03*/ 05869000
         ST    R0,INTER                                            1687 05870000
*                     CALL ICBMSG82;/* CALL SUBRTN TO        @Y30LB03   05871000
*                                      CONVERT REAS CODE     @Y30LB03*/ 05872000
         BAL   @14,ICBMSG82                                        1688 05873000
*                     RFY                                          1689 05874000
*                      (R0,                                        1689 05875000
*                       R15) UNRSTD;/* RELEASE REG 0         @G24LB02*/ 05876000
*                                                                  1689 05877000
*                     /***********************************************/ 05878000
*                     /*                                             */ 05879000
*                     /* PREPARE NORMAL                      @Y30LB03*/ 05880000
*                     /* FAILURE MESSAGE(WTO)                @Y30LB03*/ 05881000
*                     /* FILL IN REAS CODE,                  @Y30LB03*/ 05882000
*                     /* REAL UNIT, AND ' ON'                @Y30LB03*/ 05883000
*                     /*                                             */ 05884000
*                     /***********************************************/ 05885000
*                                                                  1690 05886000
*                     WTOMCS03=MESGS(MSG31101);/* FILL BUFF  @Z40LB01*/ 05887000
         MVI   WTOMCS03+72,C' '                                    1690 05888000
         L     @12,@CA02101                                        1690 05889000
         MVC   WTOMCS03(72),MESGS-MSGS+2584(@12)                   1690 05890000
*                     WTOMCS03(47:49)=BYTES234;/*            @Z40LB01*/ 05891000
         MVC   WTOMCS03+46(3),BYTES234                             1691 05892000
*                     WTOMCS03(18:20)=RU;/*                  @Z40LB01*/ 05893000
         L     @12,CWBVREF                                         1692 05894000
         MVC   WTOMCS03+17(3),RU(@12)                              1692 05895000
*                     WTOMCS03(22:24)=' ON';/*               @Z40LB01*/ 05896000
         MVC   WTOMCS03+21(3),@CC02868                             1693 05897000
*                   END;            /*                       @Y30LB03*/ 05898000
*                 ELSE              /* GOOD RETURN           @Y30LB03*/ 05899000
*                   DO;             /*                       @Y30LB03*/ 05900000
         B     @RC01684                                            1695 05901000
@RF01684 DS    0H                                                  1696 05902000
*                     WTOMCS03=MESGS(MSG30201);/* FILL BUFF  @Z40LB01*/ 05903000
         MVI   WTOMCS03+72,C' '                                    1696 05904000
         L     @12,@CA02101                                        1696 05905000
         MVC   WTOMCS03(72),MESGS-MSGS+2432(@12)                   1696 05906000
*                     WTOMCS03(13:15)=RU;/*                  @Z40LB01*/ 05907000
         L     @12,CWBVREF                                         1697 05908000
         MVC   WTOMCS03+12(3),RU(@12)                              1697 05909000
*                     WTOMCS03(21:23)=' ON';/*               @Z40LB01*/ 05910000
         MVC   WTOMCS03+20(3),@CC02868                             1698 05911000
*                   END;            /*                       @Y30LB03*/ 05912000
*               END;                /*                       @Y30LB03*/ 05913000
*             ELSE                  /* ERROR SITUATION       @Y30LB03*/ 05914000
*               WTOMCS03=MESGS(MSG31501);/* SYNTAX ERROR     @Z40LB01*/ 05915000
         B     @RC01662                                            1701 05916000
@RF01662 MVI   WTOMCS03+72,C' '                                    1701 05917000
         L     @12,@CA02101                                        1701 05918000
         MVC   WTOMCS03(72),MESGS-MSGS+2736(@12)                   1701 05919000
*     IF BRSWTCH=F0 THEN            /* IS BRSWTCH OFF?       @Y30LB03*/ 05920000
@RC01662 DS    0H                                                  1702 05921000
@RC01608 DS    0H                                                  1702 05922000
@RF01607 DS    0H                                                  1702 05923000
@RF01606 DS    0H                                                  1702 05924000
@RC01604 CLI   BRSWTCH,0                                           1702 05925000
         BNE   @RF01702                                            1702 05926000
*       DO;                         /*                       @Y30LB03*/ 05927000
*         CALL ICBMSG47;            /* CALL SUBRTN THAT      @Y30LB03   05928000
*                                      ISSUES WTO MACRO      @Y30LB03*/ 05929000
         BAL   @14,ICBMSG47                                        1704 05930000
*       END;                        /*                       @Y30LB03*/ 05931000
*     CWBVREF=CWBVREF+F4;           /* INCR PTR TO NXT       @Y30LB03   05932000
*                                      UNIT                  @Y30LB03*/ 05933000
@RF01702 LA    @12,4                                               1706 05934000
         AL    @12,CWBVREF                                         1706 05935000
         ST    @12,CWBVREF                                         1706 05936000
*   END;                            /*                       @Y30LB03*/ 05937000
         LA    @12,1                                               1707 05938000
         AL    @12,VARYCNT                                         1707 05939000
@DE01558 ST    @12,VARYCNT                                         1707 05940000
         C     @12,UNITCNT                                         1707 05941000
         BNH   @DL01558                                            1707 05942000
*                                                                  1708 05943000
*/*********************************************************  @Y30LB03*/ 05944000
*/*  FINISH UP PROCESSING FOR THIS SUBROUTINE                @Y30LB03*/ 05945000
*/*********************************************************  @Y30LB03*/ 05946000
*                                                                  1708 05947000
*FIN41:                             /*                       @Y30LB03*/ 05948000
*   CALL ICBMSG44;                  /* CALL DQ SUBRTN        @Y30LB03*/ 05949000
FIN41    BAL   @14,ICBMSG44                                        1708 05950000
*/*********************************************************  @Y30LB03*/ 05951000
*/*  CHECK TO SEE IF CWB SHOULD BE FREED                     @Y30LB03*/ 05952000
*/*********************************************************  @Y30LB03*/ 05953000
*                                                                  1709 05954000
*VFREEL:                                                           1709 05955000
*   IF FREESWTH=F0 THEN             /* FREE SWTCH OFF?       @Y30LB03*/ 05956000
VFREEL   CLI   FREESWTH,0                                          1709 05957000
         BNE   @RF01709                                            1709 05958000
*     DO;                           /*                       @Y30LB03*/ 05959000
*       CALL ICBMSG46;              /* CALL FREEMAIN SRTN    @Y30LB03*/ 05960000
         BAL   @14,ICBMSG46                                        1711 05961000
*     END;                          /*                       @Y30LB03*/ 05962000
*   RFY                                                            1713 05963000
*     R14 RSTD;                     /*                       @G24LB02*/ 05964000
@RF01709 DS    0H                                                  1714 05965000
*   R14=SAVR1441;                   /* RESTORE REG 14        @Y30LB03*/ 05966000
         L     R14,SAVR1441                                        1714 05967000
*   RFY                                                            1715 05968000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 05969000
*   RETURN;                         /* RTN TO ICBMSG40       @Y30LB03*/ 05970000
         B     @EL00016                                            1716 05971000
*   END ICBMSG41;                   /*                       @Y30LB03*/ 05972000
*                                                                  1718 05973000
*/*********************************************************  @Y30LB03*/ 05974000
*/*  START OF SPECIFICATIONS ****                             @Y30LB03  05975000
*                                                             @Y30LB03  05976000
*01*  MODULE-NAME = ICBMSG42                                  @Y30LB03  05977000
*                                                             @Y30LB03  05978000
*01*  DESCRIPTIVE-NAME = ASSIGN/PURGE COMMAND PROCESSING      @Y30LB03  05979000
*                        SUBROUTINE                           @Y30LB03  05980000
*                                                             @Y30LB03  05981000
*01*  FUNCTION = ISSUE ICBPAIR MACRO FOR COMTASK              @Y30LB03  05982000
*                ASSIGN AND PURGE COMMANDS                    @Y30LB03  05983000
*                                                             @Y30LB03  05984000
*                                                             @Y30LB03  05985000
*02*  PURPOSE = DETERMINE TYPE OF COMMAND (ASSIGN OR PURGE)   @Y30LB03  05986000
*               AND SET UP MACRO PARAMETERS FOR ICBPAIR       @Y30LB03  05987000
*               MACRO. INTEROGATE RETURN CODE IN ORDER TO     @Y30LB03  05988000
*               SET UP SUCCESSFUL/UNSUCCESSFUL WTO MESSAGE.   @Y30LB03  05989000
*               CALL WTO SUBROUTINE(ICBMSG47),DEQUEUE         @Y30LB03  05990000
*               SUBROUTINE(ICBMSG44), AND FREEMAIN SUB-       @Y30LB03  05991000
*               ROUTINE(ICBMSG46).                            @Y30LB03  05992000
*                                                             @Y30LB03  05993000
*02*    INPUT = ASSIGN/PURGE COMTASK COMMANDS                 @Y30LB03  05994000
*                                                             @Y30LB03  05995000
*02*    OUTPUT = PROCESSED COMTASK ASSIGN/PURGE COMMAND       @Y30LB03  05996000
*                                                             @Y30LB03  05997000
**** END OF SPECIFICATIONS **                                @Y30LB03*/ 05998000
*                                                                  1718 05999000
*ICBMSG42:                                                         1718 06000000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB03*/ 06001000
ICBMSG42 DS    0H                                                  1719 06002000
*/*  ****************************************************    @Y30LB03*/ 06003000
*/*                                                          @Y30LB03*/ 06004000
*/*    THIS SUBROUTINE HANDLES REQUESTS FOR THE PURGE        @Y30LB03*/ 06005000
*/*    AND ASSIGN PRIMARY HOST ORDERS.                       @Y30LB03*/ 06006000
*/*                                                          @Y30LB03*/ 06007000
*/*  ****************************************************    @Y30LB03*/ 06008000
*/*  ASSIGN PRIMARY HOST AND PURGE WTO MESSAGE               @Y30LB03*/ 06009000
*/*********************************************************  @Y30LB03*/ 06010000
*/*  HOSTID IN CWB                                           @Y30LB03*/ 06011000
*                                                                  1719 06012000
*   DCL                                                            1719 06013000
*     1 HSTINCWB CHAR(11) DEF(CWBCMND),/*                    @Y30LB03*/ 06014000
*      2 REALHOST CHAR(10),         /* ACTUAL HOSTID IN CMND @Y30LB03*/ 06015000
*      2 * CHAR(1);                 /* DUMMY BYTE FOR PACKING      1719 06016000
*                                                            @Y30LB03*/ 06017000
*   DCL                                                            1720 06018000
*     VOLKEY CHAR(6) INIT('VOLID=');/* KEYWORD CONSTANT      @ZDR2048*/ 06019000
*                                                                  1720 06020000
*   /*****************************************************************/ 06021000
*   /*                                                               */ 06022000
*   /* FIELD USED TO PACK HOSTID                             @Y30LB03*/ 06023000
*   /*                                                               */ 06024000
*   /*****************************************************************/ 06025000
*                                                                  1721 06026000
*   DCL                                                            1721 06027000
*     1 PKHOSTID CHAR(7),           /*                       @Y30LB03*/ 06028000
*      2 * CHAR(1),                 /*                       @Y30LB03*/ 06029000
*      2 RECVHOST CHAR(6),          /* RECEIVES PACKED HOSTID      1721 06030000
*                                                            @Y30LB03*/ 06031000
*       3 PCKDHOST CHAR(5),         /* 5-BYTE HOSTID FOR REQ.BLK   1721 06032000
*                                                            @Y30LB03*/ 06033000
*       3 * CHAR(1);                /* DUMMY BYTE            @Y30LB03*/ 06034000
*   RFY                                                            1722 06035000
*     R14 RSTD;                     /*                       @G24LB02*/ 06036000
*   SAVR1442=R14;                   /* SAVE REG 14           @Y30LB03*/ 06037000
         ST    R14,SAVR1442                                        1723 06038000
*   RFY                                                            1724 06039000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 06040000
*   RECOVER(5)=BONE;                /* SET RECOVERY BIT      @Y30LB03   06041000
*                                      FOR ASSIGN/PURGE      @Y30LB03*/ 06042000
         OI    RECOVER,B'00001000'                                 1725 06043000
*   RESPECIFY                                                      1726 06044000
*     R15 RSTD;                     /* RESTRICT REG 15       @Y30LB03*/ 06045000
*                                                                  1726 06046000
*   /*****************************************************************/ 06047000
*   /*                                                               */ 06048000
*   /* IF THE COMMAND CODE IS PURGE AND THE HOSTID           @ZM01013*/ 06049000
*   /* IS NOT SUPPLIED IN THE COMMAND, ISSUE MESSAGE         @ZM01013*/ 06050000
*   /* ICB316I AND EXIT FROM THE PROC                        @ZM01013*/ 06051000
*   /*                                                               */ 06052000
*   /*****************************************************************/ 06053000
*                                                                  1727 06054000
*   IF CWBVBCDE=164&CWBCMND(1:1)=' ' THEN                          1727 06055000
         L     @14,CWBPTR                                          1727 06056000
         CLI   CWBVBCDE(@14),164                                   1727 06057000
         BNE   @RF01727                                            1727 06058000
         CLI   CWBCMND(@14),C' '                                   1727 06059000
         BNE   @RF01727                                            1727 06060000
*     DO;                           /*                       @ZM01013*/ 06061000
*       WTOMCS03=MESGS(MSG31601);   /* PUT MESSAGE TEXT      @Z40LB01   06062000
*                                      INTO WTO AREA         @ZM01013*/ 06063000
         MVI   WTOMCS03+72,C' '                                    1729 06064000
         L     @14,@CA02101                                        1729 06065000
         MVC   WTOMCS03(72),MESGS-MSGS+2812(@14)                   1729 06066000
*       CALL ICBMSG44;              /* DEQ THE CWB           @ZM01013*/ 06067000
         BAL   @14,ICBMSG44                                        1730 06068000
*       CALL ICBMSG47;              /* ISSUE WTO MACRO       @ZM01013*/ 06069000
         BAL   @14,ICBMSG47                                        1731 06070000
*       CALL ICBMSG46;              /* FREE WORKAREA         @ZM01013*/ 06071000
         BAL   @14,ICBMSG46                                        1732 06072000
*     END;                          /*                       @ZM01013*/ 06073000
*                                                                  1733 06074000
*   /*****************************************************************/ 06075000
*   /*                                                               */ 06076000
*   /* BUT IF THE PURGE COMMAND IS NOT IN ERROR              @ZM01013*/ 06077000
*   /* CONTINUE WITH PROCESSING OF ASSIGN/PURGE              @ZM01013*/ 06078000
*   /*                                                               */ 06079000
*   /*****************************************************************/ 06080000
*                                                                  1734 06081000
*   ELSE                                                           1734 06082000
*     DO;                           /*                       @ZM01013*/ 06083000
         B     @RC01727                                            1734 06084000
@RF01727 DS    0H                                                  1735 06085000
*       IF CWBVBCDE=140 THEN        /* ASSIGN REQUEST?       @Y30LB03*/ 06086000
         L     @14,CWBPTR                                          1735 06087000
         CLI   CWBVBCDE(@14),140                                   1735 06088000
         BNE   @RF01735                                            1735 06089000
*         DO;                       /* YES,ISSUE ASSIGN      @Y30LB03   06090000
*                                      FORM OF ICBPAIR       @Y30LB03*/ 06091000
*           SAVREENT=REENTRY;       /* SAVE REENTRY POINTER  @G24LB02*/ 06092000
         L     @14,REENTRY                                         1737 06093000
         ST    @14,SAVREENT                                        1737 06094000
*           REENTRY=ADDR(ASNRET);   /* SET NEW REENTRY POINTER     1738 06095000
*                                                            @G24LB02*/ 06096000
         LA    @14,ASNRET                                          1738 06097000
         ST    @14,REENTRY                                         1738 06098000
*           SVCCALL=ON;             /* SET SVC CALL FLAG     @G24LB02*/ 06099000
         OI    SVCCALL,B'00001000'                                 1739 06100000
*IPAIR2:                                                           1740 06101000
*                                                                  1740 06102000
*           /*********************************************************/ 06103000
*           /*                                                       */ 06104000
*           /* *******************************************************/ 06105000
*           /* *                                             @Y30LB02*/ 06106000
*           /* MACMEAN PURGE/ASSIGN/INITIALIZE/READY MACRO   @Y30LB02*/ 06107000
*           /* VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00       @Y30LB02*/ 06108000
*           /* THIS IS THE OUTPUT FOR THE EXECUTE FORM.      @Y30LB02*/ 06109000
*           /* THE LIST FORM OF THIS MACRO SHOULD BE         @Y30LB02*/ 06110000
*           /* INVOKED FIRST IN ORDER TO SET UP NECESSARY    @Y30LB02*/ 06111000
*           /* DECLARES. IF THE COMPLETE ARGUMENT IS         @Y30LB02*/ 06112000
*           /* SPECIFIED THE REQ BLOCK WILL BE ZEROED.       @Y30LB02*/ 06113000
*           /* *******************************************************/ 06114000
*           /* *                                             @Y30LB02*/ 06115000
*           /*                                                       */ 06116000
*           /*********************************************************/ 06117000
*                                                                  1740 06118000
*           RFY                                                    1740 06119000
*            (PAIRR1) RSTD;         /* RESTRICT R1           @Y30LB02*/ 06120000
IPAIR2   DS    0H                                                  1741 06121000
*           PAIRR1=ADDR(ARLIST);    /* SET PAIRR1 TO REQ BLOCK     1741 06122000
*                                                            @Y30LB02*/ 06123000
         LA    PAIRR1,ARLIST                                       1741 06124000
*           AIRLL='08'X;            /* SET LENGTH FIELD      @Y30LB02*/ 06125000
         LA    @14,8                                               1742 06126000
         ST    @14,AIRLL                                           1742 06127000
*           AIROP='12'X;            /* APH OPCODE            @Y30LB02*/ 06128000
         MVI   AIROP,X'12'                                         1743 06129000
*           SVC(126);               /* ISSUE SVC INST.       @Y30LB02*/ 06130000
         SVC   126                                                 1744 06131000
*           RFY                                                    1745 06132000
*            (PAIRR1) UNRSTD;       /* UNRESTRICT R1         @Y30LB02*/ 06133000
*/*@Y30LB03                                                          */ 06134000
*                                                                  1746 06135000
*ASNRET:                            /* LABEL FOR RETURN      @G24LB02*/ 06136000
*           SVCCALL=OFF;            /* CLEAR SVC CALL FLAG   @G24LB02*/ 06137000
ASNRET   NI    SVCCALL,B'11110111'                                 1746 06138000
*           REENTRY=SAVREENT;       /* RESTORE REENTRY POINTER     1747 06139000
*                                                            @G24LB02*/ 06140000
         L     @14,SAVREENT                                        1747 06141000
         ST    @14,REENTRY                                         1747 06142000
*         END;                      /*                       @Y30LB03*/ 06143000
*                                                                  1748 06144000
*       /*************************************************************/ 06145000
*       /*                                                           */ 06146000
*       /* THE COMMAND BEING PROCESSED IS PURGE              @ZDR2048*/ 06147000
*       /*                                                           */ 06148000
*       /*************************************************************/ 06149000
*                                                                  1749 06150000
*       ELSE                        /*                       @ZDR2048*/ 06151000
*         IF KEYWD=VOLKEY THEN      /* PURGE VOLID REQ?      @ZDR2048*/ 06152000
         B     @RC01735                                            1749 06153000
@RF01735 L     @14,CWBPTR                                          1749 06154000
         CLC   KEYWD(6,@14),VOLKEY                                 1749 06155000
         BNE   @RF01749                                            1749 06156000
*           DO;                     /* PURGE VOLID CODE      @ZDR2048*/ 06157000
*             R15=F0;               /* CLEAR REG 15          @G24LB02*/ 06158000
         SLR   R15,R15                                             1751 06159000
*             CUUUCB='   ';         /* CLEAR UCBNAME SAVE          1752 06160000
*                                      AREA@ZDR2048                  */ 06161000
         MVC   CUUUCB(3),@CC02356                                  1752 06162000
*             MSG42SW=BONE;         /* SET MSG42 CALL SWITCH @ZDR2048*/ 06163000
         OI    MSG42SW,B'00000010'                                 1753 06164000
*             CALL ICBMSG88;        /* CALL UCB SCAN ROUTINE @ZDR2048*/ 06165000
         BAL   @14,ICBMSG88                                        1754 06166000
*             IF CUUUCB='   ' THEN  /* TEST UCB VOL FIND     @ZDR2048*/ 06167000
         CLC   CUUUCB(3),@CC02356                                  1755 06168000
         BNE   @RF01755                                            1755 06169000
*               DO;                 /* VOL NOT FOUND IN VUCB @ZDR2048*/ 06170000
*                 SAVREENT=REENTRY; /* SAVE REENTRY POINTER  @G24LB02*/ 06171000
         L     @14,REENTRY                                         1757 06172000
         ST    @14,SAVREENT                                        1757 06173000
*                 REENTRY=ADDR(DMTRET);/* SET NEW REENTRY PTR      1758 06174000
*                                                            @G24LB02*/ 06175000
         LA    @14,DMTRET                                          1758 06176000
         ST    @14,REENTRY                                         1758 06177000
*                 SVCCALL=ON;       /* SET SVC CALL FLAG     @G24LB02*/ 06178000
*                                                                  1759 06179000
         OI    SVCCALL,B'00001000'                                 1759 06180000
*                 /***************************************************/ 06181000
*                 /*                                                 */ 06182000
*                 /* ISSUE DEMOUNT VOLID FOR VOLUME          @ZDR2048*/ 06183000
*                 /* MACRO INVOCATION:                       @ZA28964*/ 06184000
*                 /* ICBMNTDE                                        */ 06185000
*                 /* MF(E,DMTLIST,COMPLETE)TYPE(DMNT)VOLID(VOL)      */ 06186000
*                 /*                                         @ZA28964*/ 06187000
*                 /* *************************************************/ 06188000
*                 /* ********                                @Y30LB02*/ 06189000
*                 /* MACMEAN MSSC MOUNT/DEMOUNT MACRO        @Y30LB02*/ 06190000
*                 /* VERSION - VS/2 REL 3 77/12/15 LEVEL 04  @ZA28964*/ 06191000
*                 /* THIS IS THE OUTPUT FOR THE EXECUTE FORM.        */ 06192000
*                 /*                                         @Y30LB02*/ 06193000
*                 /* THE LIST FORM OF THIS MACRO SHOULD BE   @Y30LB02*/ 06194000
*                 /* INVOKED FIRST IN ORDER TO SET UP NECESSARY      */ 06195000
*                 /*                                         @Y30LB02*/ 06196000
*                 /* DECLARES. IF THE COMPLETE ARGUMENT IS   @Y30LB02*/ 06197000
*                 /* SPECIFIED THE REQ BLOCK WILL BE ZEROED. @Y30LB02*/ 06198000
*                 /* *************************************************/ 06199000
*                 /* ********                                @Y30LB02*/ 06200000
*                 /*                                                 */ 06201000
*                 /***************************************************/ 06202000
*                                                                  1760 06203000
*                 RFY                                              1760 06204000
*                   MDREG1 RSTD;    /* RESTRICT REG 1        @Y30LB02*/ 06205000
*                 MDREG1=ADDR(DMTLIST);/* R1 PTR TO REQ BLOCK      1761 06206000
*                                                            @Y30LB02*/ 06207000
         LA    MDREG1,DMTLIST                                      1761 06208000
*                 DMTLIST=DMTLIST&&DMTLIST;/* ZERO OUT BLOCK @Y30LB02*/ 06209000
         XC    DMTLIST(28),DMTLIST                                 1762 06210000
*                 DMLEN='1C'X;      /* LENGTH OF DEMOUNT REQUEST   1763 06211000
*                                      BLOCK                 @Y30LB02*/ 06212000
         LA    @14,28                                              1763 06213000
         ST    @14,DMLEN                                           1763 06214000
*                 DMOPCD='06'X;     /* DEMOUNT OPCODE        @Y30LB02*/ 06215000
         MVI   DMOPCD,X'06'                                        1764 06216000
*                 DMVOL=(VOL);      /* VALUE OF VOLID        @Y30LB02*/ 06217000
         L     @14,CWBPTR                                          1765 06218000
         MVC   DMVOL(6),VOL(@14)                                   1765 06219000
*                 SVC(126);         /* INVOKE THE MSSC SVC   @Y30LB02*/ 06220000
         SVC   126                                                 1766 06221000
*                 RFY                                              1767 06222000
*                   MDREG1 UNRSTD;  /* UNREST REG 1          @Y30LB02*/ 06223000
*/*@ZDR2048                                                          */ 06224000
*                                                                  1768 06225000
*DMTRET:                            /* LABEL FOR RETURN      @G24LB02*/ 06226000
*                 SVCCALL=OFF;      /* CLEAR SVC CALL FLAG   @G24LB02*/ 06227000
DMTRET   NI    SVCCALL,B'11110111'                                 1768 06228000
*                 REENTRY=SAVREENT; /* RESTORE REENTRY POINTER     1769 06229000
*                                                            @G24LB02*/ 06230000
         L     @14,SAVREENT                                        1769 06231000
         ST    @14,REENTRY                                         1769 06232000
*               END;                /* END VOL NOT FOUND     @ZDR2048*/ 06233000
*             ELSE                  /* VOL WAS FOUND IN VUCB @ZDR2048*/ 06234000
*               R15=F12;            /* SET R15 TO ERROR VALUE      1771 06235000
*                                                            @ZDR2048*/ 06236000
         B     @RC01755                                            1771 06237000
@RF01755 LA    R15,12                                              1771 06238000
*           END;                    /* END PURGE VOLID CODE  @ZDR2048*/ 06239000
*         ELSE                      /*                       @ZDR2048*/ 06240000
*           DO;                     /*                       @Y30LB03*/ 06241000
         B     @RC01749                                            1773 06242000
@RF01749 DS    0H                                                  1774 06243000
*             PACK(PKHOSTID,HSTINCWB);/* PACK HOSTID IN CMND @Y30LB03*/ 06244000
         L     @14,CWBPTR                                          1774 06245000
         PACK  PKHOSTID(7),HSTINCWB(11,@14)                        1774 06246000
*             HOST=PCKDHOST;        /* FILL IN HOST FIELD    @Y30LB03*/ 06247000
         MVC   HOST(5),PCKDHOST                                    1775 06248000
*             SAVREENT=REENTRY;     /* SAVE REENTRY POINTER  @G24LB02*/ 06249000
         L     @14,REENTRY                                         1776 06250000
         ST    @14,SAVREENT                                        1776 06251000
*             REENTRY=ADDR(PRGRET); /* SET NEW REENTRY PTR   @G24LB02*/ 06252000
         LA    @14,PRGRET                                          1777 06253000
         ST    @14,REENTRY                                         1777 06254000
*             SVCCALL=ON;           /* SET SVC CALL FLAG     @G24LB02*/ 06255000
         OI    SVCCALL,B'00001000'                                 1778 06256000
*IPAIR3:                                                           1779 06257000
*                                                                  1779 06258000
*             /*******************************************************/ 06259000
*             /*                                                     */ 06260000
*             /* *****************************************************/ 06261000
*             /* ***                                         @Y30LB02*/ 06262000
*             /* MACMEAN PURGE/ASSIGN/INITIALIZE/READY MACRO @Y30LB02*/ 06263000
*             /* VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00     @Y30LB02*/ 06264000
*             /* THIS IS THE OUTPUT FOR THE EXECUTE FORM.    @Y30LB02*/ 06265000
*             /* THE LIST FORM OF THIS MACRO SHOULD BE       @Y30LB02*/ 06266000
*             /* INVOKED FIRST IN ORDER TO SET UP NECESSARY  @Y30LB02*/ 06267000
*             /* DECLARES. IF THE COMPLETE ARGUMENT IS       @Y30LB02*/ 06268000
*             /* SPECIFIED THE REQ BLOCK WILL BE ZEROED.     @Y30LB02*/ 06269000
*             /* *****************************************************/ 06270000
*             /* ***                                         @Y30LB02*/ 06271000
*             /*                                                     */ 06272000
*             /*******************************************************/ 06273000
*                                                                  1779 06274000
*             RFY                                                  1779 06275000
*              (PAIRR1) RSTD;       /* RESTRICT R1           @Y30LB02*/ 06276000
IPAIR3   DS    0H                                                  1780 06277000
*             PAIRR1=ADDR(PURGLIST);/* SET PAIRR1 TO REQ BLOCK     1780 06278000
*                                                            @Y30LB02*/ 06279000
         LA    PAIRR1,PURGLIST                                     1780 06280000
*             PURGLL='0D'X;         /* SET LENGTH FIELD      @Y30LB02*/ 06281000
         LA    @14,13                                              1781 06282000
         ST    @14,PURGLL                                          1781 06283000
*             PURGOP='14'X;         /* PURG OPCODE           @Y30LB02*/ 06284000
         MVI   PURGOP,X'14'                                        1782 06285000
*             PURGHOST=(HOST);      /* FILL IN HOSTID FIELD  @Y30LB02*/ 06286000
         MVC   PURGHOST(5),HOST                                    1783 06287000
*             SVC(126);             /* ISSUE SVC INST.       @Y30LB02*/ 06288000
         SVC   126                                                 1784 06289000
*             RFY                                                  1785 06290000
*              (PAIRR1) UNRSTD;     /* UNRESTRICT R1         @Y30LB02   06291000
*                                                            @Y30LB03*/ 06292000
*PRGRET:                            /* LABEL FOR RETURN      @G24LB02*/ 06293000
*             SVCCALL=OFF;          /* CLEAR SVC CALL FLAG   @G24LB02*/ 06294000
PRGRET   NI    SVCCALL,B'11110111'                                 1786 06295000
*             REENTRY=SAVREENT;     /* RESTORE REENTRY POINTER     1787 06296000
*                                                            @G24LB02*/ 06297000
         L     @14,SAVREENT                                        1787 06298000
         ST    @14,REENTRY                                         1787 06299000
*           END;                    /*                       @Y30LB03*/ 06300000
*       WTOMCS03=MESGS(MSG01001);   /* FILL WTO BUFFER       @Z40LB01*/ 06301000
@RC01749 DS    0H                                                  1789 06302000
@RC01735 MVI   WTOMCS03+72,C' '                                    1789 06303000
         L     @14,@CA02101                                        1789 06304000
         MVC   WTOMCS03(72),MESGS-MSGS+1900(@14)                   1789 06305000
*       WTOMCS03(28:37)='          ';/*                      @Z40LB01*/ 06306000
         MVC   WTOMCS03+27(10),@CC02926                            1790 06307000
*       IF R15=F0 THEN              /* GOOD RTN CODE?        @Y30LB03*/ 06308000
         LTR   R15,R15                                             1791 06309000
         BNZ   @RF01791                                            1791 06310000
*         WTOMCS03(18:27)='SUCCESSFUL';/* YES,MAKE'GOOD'MSG  @Z40LB01*/ 06311000
         MVC   WTOMCS03+17(10),@CC02928                            1792 06312000
*       ELSE                        /* ERROR CONDITION - REJECT OR 1793 06313000
*                                      FAILURE NEEDED        @ZDR2048*/ 06314000
*         IF R15=F12 THEN           /* TEST FOR VOLID REJECT MSG   1793 06315000
*                                                            @ZDR2048*/ 06316000
         B     @RC01791                                            1793 06317000
@RF01791 C     R15,@CF02050                                        1793 06318000
         BNE   @RF01793                                            1793 06319000
*           DO;                     /* VOLID REJECT MSG      @ZDR2048*/ 06320000
*             WTOMCS03(18:48)='REJECTED,VVVVVV MOUNTED ON UUU ';/* 1795 06321000
*                                                            @ZDR2048*/ 06322000
         MVC   WTOMCS03+17(31),@CC02930                            1795 06323000
*             WTOMCS03(27:32)=VOL;  /* FILL IN VOLID FIELD   @ZDR2048*/ 06324000
         L     @14,CWBPTR                                          1796 06325000
         MVC   WTOMCS03+26(6),VOL(@14)                             1796 06326000
*             WTOMCS03(45:47)=CUUUCB;/* FILL IN UNIT ADDRESS @ZDR2048*/ 06327000
         MVC   WTOMCS03+44(3),CUUUCB                               1797 06328000
*           END;                    /* END VOLID REJECT MSG CODE   1798 06329000
*                                                            @ZDR2048*/ 06330000
*         ELSE                      /* NO,MAKE FAILUR MSG    @Y30LB03*/ 06331000
*           DO;                     /*                       @Y30LB03*/ 06332000
         B     @RC01793                                            1799 06333000
@RF01793 DS    0H                                                  1800 06334000
*             RESPECIFY                                            1800 06335000
*               R0 RSTD;            /* RSTD REG 0            @Y30LB03*/ 06336000
*             INTER=R0;             /*                       @Y30LB03*/ 06337000
         ST    R0,INTER                                            1801 06338000
*             CALL ICBMSG82;        /* CALL SUBRTN TO        @Y30LB03   06339000
*                                      CONVERT REAS CODE     @Y30LB03*/ 06340000
         BAL   @14,ICBMSG82                                        1802 06341000
*             RESPECIFY                                            1803 06342000
*               R0 UNRSTD;          /* RELEASE REG 0         @Y30LB03*/ 06343000
*             WTOMCS03(18:37)='FAILED,REAS CODE=   ';/* MAKE BAD   1804 06344000
*                                      MSG@Z40LB01                   */ 06345000
         MVC   WTOMCS03+17(20),@CC02933                            1804 06346000
*             WTOMCS03(35:37)=BYTES234;/* PUT IN REAS CODE   @Z40LB01*/ 06347000
         MVC   WTOMCS03+34(3),BYTES234                             1805 06348000
*           END;                    /*                       @Y30LB03*/ 06349000
*       IF CWBVBCDE=140 THEN        /* ASSIGN REQUEST?       @Y30LB03*/ 06350000
@RC01793 DS    0H                                                  1807 06351000
@RC01791 L     @14,CWBPTR                                          1807 06352000
         CLI   CWBVBCDE(@14),140                                   1807 06353000
         BNE   @RF01807                                            1807 06354000
*         WTOMCS03(11:16)='ASSIGN'; /* YES,PUT IN MSG        @Z40LB01*/ 06355000
         MVC   WTOMCS03+10(6),@CC02935                             1808 06356000
*       ELSE                        /* NO,...                @Y30LB03*/ 06357000
*         WTOMCS03(11:16)='PURGE '; /* PUT 'PURGE'           @Z40LB01   06358000
*                                      IN MSG FOR OPER       @Y30LB03*/ 06359000
         B     @RC01807                                            1809 06360000
@RF01807 MVC   WTOMCS03+10(6),@CC02936                             1809 06361000
*       RESPECIFY                                                  1810 06362000
*         R15 UNRSTD;               /* RELEASE REG 15        @Y30LB03*/ 06363000
@RC01807 DS    0H                                                  1811 06364000
*       CALL ICBMSG44;              /* CALL SUBRTN TO        @Y30LB03   06365000
*                                      DEQ THE CWB           @Y30LB03*/ 06366000
         BAL   @14,ICBMSG44                                        1811 06367000
*PAWTOL:                            /* FILL IN MSG           @Z40LB01*/ 06368000
*       CALL ICBMSG47;              /* ISSUE WTO MACRO       @Y30LB03*/ 06369000
PAWTOL   BAL   @14,ICBMSG47                                        1812 06370000
*       CALL ICBMSG46;              /* CALL SUBRTN TO        @Y30LB03   06371000
*                                      FREE WORKAREA         @Y30LB03*/ 06372000
         BAL   @14,ICBMSG46                                        1813 06373000
*     END;                          /*                       @ZM01013*/ 06374000
*   RFY                                                            1815 06375000
*     R14 RSTD;                     /*                       @G24LB02*/ 06376000
@RC01727 DS    0H                                                  1816 06377000
*   R14=SAVR1442;                   /* RESTORE REG14         @Y30LB03*/ 06378000
         L     R14,SAVR1442                                        1816 06379000
*   RFY                                                            1817 06380000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 06381000
*   RETURN;                         /* RTN TO ICBMSG40       @Y30LB03*/ 06382000
@EL00017 DS    0H                                                  1818 06383000
@EF00017 DS    0H                                                  1818 06384000
@ER00017 BR    @14                                                 1818 06385000
*   END ICBMSG42;                   /*                       @Y30LB03*/ 06386000
*                                                                  1820 06387000
*/*********************************************************  @Y30LB03*/ 06388000
*/*  START OF SPECIFICATIONS ****                             @Y30LB03  06389000
*                                                             @Y30LB03  06390000
*01*  MODULE-NAME = ICBMSG43                                  @Y30LB03  06391000
*                                                             @Y30LB03  06392000
*01*  DESCRIPTIVE-NAME = HALT S COMMAND (SUSPEND) PROCESSING  @ZM31054  06393000
*                        SUBROUTINE                           @Y30LB03  06394000
*                                                             @Y30LB03  06395000
*01*  FUNCTION = ISSUE ICBSUSP MACRO FOR COMTASK              @Y30LB03  06396000
*                HALT S COMMANDS                              @ZM31054  06397000
*                                                             @Y30LB03  06398000
*                                                             @Y30LB03  06399000
*02*  PURPOSE = SET UP ICBSUSP PARAMETERS AND ISSUE THE       @Y30LB03  06400000
*               MACRO. INTEROGATE RETURN CODE. SET UP         @Y30LB03  06401000
*               SUCCESSFUL/UNSUCCESSFUL WTO MESSAGE AND       @Y30LB03  06402000
*               CALL WTO SUBROUTINE(ICBMSG47). CALL DEQUEUE   @Y30LB03  06403000
*               SUBROUTINE(ICBMSG44) AND THE FREEMAIN         @Y30LB03  06404000
*               SUBROUTINE(ICBMSG46). IF THE RETURN CODE      @Y30LB03  06405000
*               INDICATES THAT THE HALT (S) PROCESSING        @Y30LB03  06406000
*               WAS SUCCESSFUL, THEN THE INITIALIZED          @Y30LB03  06407000
*               AND READY BITS (ICBI AND ICBR) IN THE         @Y30LB03  06408000
*               MSSC CONTROL BLOCK, ICB2SSCB, ARE SET TO ZERO.@Y30LB03  06409000
*                                                             @Y30LB03  06410000
*02*    INPUT = COMTASK HALT COMMAND                          @Y30LB03  06411000
*                                                             @Y30LB03  06412000
*02*    OUTPUT = PROCESSED COMTASK HALT COMMAND               @Y30LB03  06413000
*                                                             @Y30LB03  06414000
**** END OF SPECIFICATIONS **                                @Y30LB03*/ 06415000
*                                                                  1820 06416000
*ICBMSG43:                                                         1820 06417000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB03*/ 06418000
ICBMSG43 DS    0H                                                  1821 06419000
*/*  ****************************************************    @Y30LB03*/ 06420000
*/*                                                          @Y30LB03*/ 06421000
*/*   THIS SUBROUTINE HANDLES REQUESTS FOR THE SUSPEND       @Y30LB03*/ 06422000
*/*    ORDER.                                                @Y30LB03*/ 06423000
*/*                                                          @Y30LB03*/ 06424000
*/*  ****************************************************    @Y30LB03*/ 06425000
*                                                                  1821 06426000
*   DCL                                                            1821 06427000
*     SUSPCOMP FIXED(31);           /* RETURN SAVE           @G24LB02*/ 06428000
*   SUSPCOMP=''B;                   /* CLEAR SAVE AREA       @G24LB02*/ 06429000
         SLR   @12,@12                                             1822 06430000
         ST    @12,SUSPCOMP                                        1822 06431000
*   RFY                                                            1823 06432000
*     R14 RSTD;                     /*                       @G24LB02*/ 06433000
*   SAVR1443=R14;                   /* SAVE REG 14           @Y30LB03*/ 06434000
         ST    R14,SAVR1443                                        1824 06435000
*   RFY                                                            1825 06436000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 06437000
*   RECOVER(6)=BONE;                /* SET RECOVERY BIT      @Y30LB03   06438000
*                                      FOR SUSPEND (HALT)    @Y30LB03*/ 06439000
         OI    RECOVER,B'00000100'                                 1826 06440000
*   SUSPFLG=''B;                    /* CLEAR SUSPEND FLAGS   @ZD00155*/ 06441000
         XC    SUSPFLG(2),SUSPFLG                                  1827 06442000
*   IF CWBCMND(3:6)='SNAP' THEN     /* SUSPEND SNAP ?        @Y30LB03*/ 06443000
         L     @12,CWBPTR                                          1828 06444000
         CLC   CWBCMND+2(4,@12),@CC02943                           1828 06445000
         BNE   @RF01828                                            1828 06446000
*     SUPIMED=BONE;                 /* SUSPEND IMMEDIATE     @ZD00155*/ 06447000
         OI    SUPIMED,B'10000000'                                 1829 06448000
*   ELSE                            /* CHECK ANOTHER OPTN    @Y30LB03*/ 06449000
*     IF CWBCMND(3:6)='LONG' THEN   /* SUSPEND LONG ?        @Y30LB03*/ 06450000
         B     @RC01828                                            1830 06451000
@RF01828 L     @12,CWBPTR                                          1830 06452000
         CLC   CWBCMND+2(4,@12),@CC02944                           1830 06453000
         BNE   @RF01830                                            1830 06454000
*       DO;                         /*                       @G24LB02*/ 06455000
*         SUPRCON=BONE;             /* RECONFIGURATION       @ZD00155*/ 06456000
         OI    SUPRCON,B'01000000'                                 1832 06457000
*         SUSPLONG=BONE;            /* SET SUSP LONG FLAG    @G24LB02*/ 06458000
         OI    SUSPLONG,B'00100000'                                1833 06459000
*       END;                        /*                       @G24LB02*/ 06460000
*     ELSE                          /* IF NONE,ERROR         @Y30LB03*/ 06461000
*       DO;                         /* SYNTAX ERROR MSG      @Y30LB03*/ 06462000
         B     @RC01830                                            1835 06463000
@RF01830 DS    0H                                                  1836 06464000
*         WTOMCS03=MESGS(MSG31401); /*                       @Z40LB01*/ 06465000
         MVI   WTOMCS03+72,C' '                                    1836 06466000
         L     @12,@CA02101                                        1836 06467000
         MVC   WTOMCS03(72),MESGS-MSGS+2660(@12)                   1836 06468000
*         CALL ICBMSG47;            /* CALL WTO SUBRTN       @Y30LB03*/ 06469000
         BAL   @14,ICBMSG47                                        1837 06470000
*         GO TO SPDQFREE;           /* BRCH TO DQ & FREE     @Y30LB03*/ 06471000
         B     SPDQFREE                                            1838 06472000
*       END;                        /*                       @Y30LB03*/ 06473000
*ISUSPD1:                           /*                       @Z40LB01*/ 06474000
*   WTOMCS03=MESGS(MSG01001);       /* FILL WTO BUFFER       @Z40LB01*/ 06475000
@RC01830 DS    0H                                                  1840 06476000
@RC01828 DS    0H                                                  1840 06477000
ISUSPD1  MVI   WTOMCS03+72,C' '                                    1840 06478000
         L     @12,@CA02101                                        1840 06479000
         MVC   WTOMCS03(72),MESGS-MSGS+1900(@12)                   1840 06480000
*   WTOMCS03(28:37)='          ';   /*                       @Z40LB01*/ 06481000
         MVC   WTOMCS03+27(10),@CC02926                            1841 06482000
*   SAVREENT=REENTRY;               /* SAVE REENTRY POINTER  @G24LB02*/ 06483000
         L     @12,REENTRY                                         1842 06484000
         ST    @12,SAVREENT                                        1842 06485000
*   REENTRY=ADDR(SUSRET);           /* SET NEW REENTRY       @G24LB02*/ 06486000
         LA    @12,SUSRET                                          1843 06487000
         ST    @12,REENTRY                                         1843 06488000
*   SVCCALL=ON;                     /* SET SVC CALL FLAG     @G24LB02*/ 06489000
*                                                                  1844 06490000
         OI    SVCCALL,B'00001000'                                 1844 06491000
*   /*****************************************************************/ 06492000
*   /*                                                               */ 06493000
*   /* *******************************************************       */ 06494000
*   /*                                                       @Y30LB02*/ 06495000
*   /* MACMEAN MSSC SUSPEND MACRO                            @Y30LB02*/ 06496000
*   /* VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00               @Y30LB02*/ 06497000
*   /* THIS IS THE OUTPUT FOR THE EXECUTE FORM.              @Y30LB02*/ 06498000
*   /* THE LIST FORM OF THIS MACRO SHOULD BE                 @Y30LB02*/ 06499000
*   /* INVOKED FIRST IN ORDER TO SET UP NECESSARY            @Y30LB02*/ 06500000
*   /* DECLARES. IF THE COMPLETE ARGUMENT IS                 @Y30LB02*/ 06501000
*   /* SPECIFIED THE REQ BLOCK WILL BE ZEROED.               @Y30LB02*/ 06502000
*   /* *******************************************************       */ 06503000
*   /*                                                       @Y30LB02*/ 06504000
*   /*                                                               */ 06505000
*   /*****************************************************************/ 06506000
*                                                                  1845 06507000
*   RFY                                                            1845 06508000
*    (SUSPR1) RSTD;                 /* RESTRICT REG1         @Y30LB02*/ 06509000
*   SUSPR1=ADDR(SUSPLIST);          /* R1 POINTER TO REQUEST BLOCK 1846 06510000
*                                                            @Y30LB02*/ 06511000
         LA    SUSPR1,SUSPLIST                                     1846 06512000
*   SUSPLEN='8'X;                   /* LENGTH OF SUSPEND REQUEST   1847 06513000
*                                                            @Y30LB02*/ 06514000
         LA    @12,8                                               1847 06515000
         ST    @12,SUSPLEN                                         1847 06516000
*   SUSPOP='22'X;                   /* SUSPEND OPCODE        @Y30LB02*/ 06517000
         MVI   SUSPOP,X'22'                                        1848 06518000
*   SVC(126);                       /* INVOKE SVC 126        @Y30LB02*/ 06519000
         SVC   126                                                 1849 06520000
*   RFY                                                            1850 06521000
*     SUSPR1 UNRSTD;                /* UNRESTRICT REG 1      @Y30LB02   06522000
*                                      ISSUE SUSPEND         @ZD00155*/ 06523000
*   RESPECIFY                                                      1851 06524000
*    (R0,                                                          1851 06525000
*     R15) RSTD;                    /*                       @G24LB02*/ 06526000
*SUSRET:                            /* LABEL FOR RETURN      @G24LB02*/ 06527000
*   SVCCALL=OFF;                    /* CLEAR SVC CALL FLAG   @G24LB02*/ 06528000
SUSRET   NI    SVCCALL,B'11110111'                                 1852 06529000
*   REENTRY=SAVREENT;               /* RESTORE REENTRY POINTER     1853 06530000
*                                                            @G24LB02*/ 06531000
         L     @14,SAVREENT                                        1853 06532000
         ST    @14,REENTRY                                         1853 06533000
*   SUSPCOMP=R15;                   /* SAVE RETURN           @G24LB02*/ 06534000
         ST    R15,SUSPCOMP                                        1854 06535000
*   IF R15=F0|R0='F7'X THEN         /* GOOD RTN CODE?        @Y30LB03*/ 06536000
         LTR   R15,R15                                             1855 06537000
         BZ    @RT01855                                            1855 06538000
         C     R0,@CF02951                                         1855 06539000
         BNE   @RF01855                                            1855 06540000
@RT01855 DS    0H                                                  1856 06541000
*     DO;                           /*                       @Y30LB03*/ 06542000
*       RESPECIFY                                                  1857 06543000
*        (R0,                                                      1857 06544000
*         R15) UNRSTD;              /*                       @G24LB02*/ 06545000
*                                                                  1857 06546000
*       /*************************************************************/ 06547000
*       /*                                                           */ 06548000
*       /* ******************************                    @Y30LB03*/ 06549000
*       /* YES,PREPARE SUCCESSFUL MSG                        @Y30LB03*/ 06550000
*       /* AND TURN OFF INITIALIZED AND                      @Y30LB03*/ 06551000
*       /* READY BITS                                        @Y30LB03*/ 06552000
*       /* ******************************                    @Y30LB03*/ 06553000
*       /*                                                           */ 06554000
*       /*************************************************************/ 06555000
*                                                                  1858 06556000
*       WTOMCS03(18:27)='SUCCESSFUL';/*                      @Z40LB01*/ 06557000
         MVC   WTOMCS03+17(10),@CC02928                            1858 06558000
*       ICBS=ON;                    /* SET MSSC SUSPEND FLAG @G24LB02*/ 06559000
*       ICBB=ON;                    /* SET BROKEN BOX INDICATOR    1860 06560000
*                                                            @G24LB02*/ 06561000
*       ICBR=OFF;                   /* SET READY FLAG OFF    @G24LB02*/ 06562000
*       ICBI=OFF;                   /* INIT INDICATOR SET OFF      1862 06563000
*                                                            @G24LB02*/ 06564000
         L     @12,ICBPTR                                          1862 06565000
         OI    ICBS(@12),B'00011000'                               1862 06566000
         NI    ICBR(@12),B'00111111'                               1862 06567000
*       RECOVER=''B;                /* CLEAR COMTASK RECOVERY BITS 1863 06568000
*                                                            @G24LB02*/ 06569000
         MVI   RECOVER,X'00'                                       1863 06570000
*       SUSPCOMP=F0;                /* CLEAR RETURN CODE     @G24LB02*/ 06571000
         SLR   @09,@09                                             1864 06572000
         ST    @09,SUSPCOMP                                        1864 06573000
*       REENTRY=ADDR(INITBEG);      /* SET REENTRY           @G24LB02*/ 06574000
         LA    @09,INITBEG                                         1865 06575000
         ST    @09,REENTRY                                         1865 06576000
*       INITFLAG=OFF;               /* CLEAR FLAG FOR FSENTRY LOOP 1866 06577000
*                                                            @G24LB02*/ 06578000
*                                                                  1866 06579000
         NI    INITFLAG,B'11110111'                                1866 06580000
*       /*************************************************************/ 06581000
*       /*                                                           */ 06582000
*       /* SET UP FOR SVC 91                                 @YD00167*/ 06583000
*       /*                                                           */ 06584000
*       /*************************************************************/ 06585000
*                                                                  1867 06586000
*       RESPECIFY                                                  1867 06587000
*        (R0,                                                      1867 06588000
*         R1) RSTD;                 /*                       @YD00167*/ 06589000
*       R0=ICBPUCB;                 /* LOAD REG 0 W/ PRIM UCB ADDR 1868 06590000
*                                                            @YD00167*/ 06591000
         L     R0,ICBPUCB(,@12)                                    1868 06592000
*       GEN;                                                       1869 06593000
*                                                          /*@YD00167*/ 06594000
         LCR   R0,R0                LOAD COMPLEMENT            @YD00167 06595000
*       R1=R1COMPL;                 /*                       @YD00167*/ 06596000
         L     R1,@CF02463                                         1870 06597000
*       SVC(91);                    /* ISSUE SVC 91 TO OFFLOAD     1871 06598000
*                                      BUFFERED LOG DATA     @YD00167*/ 06599000
         SVC   91                                                  1871 06600000
*       RESPECIFY                                                  1872 06601000
*        (R0,                                                      1872 06602000
*         R1) UNRSTD;               /*                       @YD00167*/ 06603000
*     END;                          /*                       @Y30LB03*/ 06604000
*   ELSE                            /* NO,MAKE FAILUR MSG    @Y30LB03*/ 06605000
*     DO;                           /*                       @Y30LB03*/ 06606000
         B     @RC01855                                            1874 06607000
@RF01855 DS    0H                                                  1875 06608000
*       RESPECIFY                                                  1875 06609000
*         R0 RSTD;                  /* RSTD REG 0            @Y30LB03*/ 06610000
*       INTER=R0;                   /* FILL IN REAS CD       @Y30LB03*/ 06611000
*                                                                  1876 06612000
         ST    R0,INTER                                            1876 06613000
*       /*************************************************************/ 06614000
*       /*                                                           */ 06615000
*       /* CALL SUBROUTINE TO CONVERT REAS CODE              @Y30LB03*/ 06616000
*       /*                                                           */ 06617000
*       /*************************************************************/ 06618000
*                                                                  1877 06619000
*       CALL ICBMSG82;              /*                       @Y30LB03*/ 06620000
         BAL   @14,ICBMSG82                                        1877 06621000
*       RESPECIFY                                                  1878 06622000
*         R0 UNRSTD;                /* RELEASE REG 0         @Y30LB03*/ 06623000
*       WTOMCS03(18:37)='FAILED,REAS CODE=   ';/* MAKE BAD         1879 06624000
*                                      MSG@Z40LB01                   */ 06625000
         MVC   WTOMCS03+17(20),@CC02933                            1879 06626000
*       WTOMCS03(35:37)=BYTES234;   /* PUT IN REAS CODE      @Z40LB01*/ 06627000
         MVC   WTOMCS03+34(3),BYTES234                             1880 06628000
*     END;                          /*                       @Y30LB03*/ 06629000
*   WTOMCS03(11:16)='HALT S';       /*                       @Z40LB01*/ 06630000
@RC01855 MVC   WTOMCS03+10(6),@CC02953                             1882 06631000
*   CALL ICBMSG47;                  /* CALL WTO(MCS) SUBRTN  @Y30LB03*/ 06632000
         BAL   @14,ICBMSG47                                        1883 06633000
*/********************************************************   @Y30LB03*/ 06634000
*/* DEQUEUE AND FREE SUSPEND COMMAND WORK BLOCK              @Y30LB03*/ 06635000
*/*********************************************************  @Y30LB03*/ 06636000
*                                                                  1884 06637000
*SPDQFREE:                          /*                       @Y30LB03*/ 06638000
*   CALL ICBMSG44;                  /* CALL DEQ SUBRTN       @Y30LB03*/ 06639000
SPDQFREE BAL   @14,ICBMSG44                                        1884 06640000
*SPFREEL:                                                          1885 06641000
*   CALL ICBMSG46;                  /* CALL FREEMN SBRTN     @Y30LB03*/ 06642000
SPFREEL  BAL   @14,ICBMSG46                                        1885 06643000
*   RFY                                                            1886 06644000
*     R14 RSTD;                     /*                       @G24LB02*/ 06645000
*   IF SUSPCOMP=F0 THEN             /*                       @G24LB02*/ 06646000
         L     @15,SUSPCOMP                                        1887 06647000
         LTR   @15,@15                                             1887 06648000
         BNZ   @RF01887                                            1887 06649000
*     DO;                           /*                       @G24LB02*/ 06650000
*       R14=REENTRY;                /*                       @G24LB02*/ 06651000
         L     R14,REENTRY                                         1889 06652000
*     END;                          /*                       @G24LB02*/ 06653000
*   ELSE                            /*                       @G24LB02*/ 06654000
*     R14=SAVR1443;                 /*                       @G24LB02*/ 06655000
         B     @RC01887                                            1891 06656000
@RF01887 L     R14,SAVR1443                                        1891 06657000
*   RFY                                                            1892 06658000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 06659000
*   RETURN;                         /* RTN TO ICBMSG40       @Y30LB03*/ 06660000
@EL00018 DS    0H                                                  1893 06661000
@EF00018 DS    0H                                                  1893 06662000
@ER00018 BR    @14                                                 1893 06663000
*   END ICBMSG43;                   /*                       @Y30LB03*/ 06664000
         B     @EL00018                                            1894 06665000
*                                                                  1895 06666000
*/*********************************************************  @Y30LB03*/ 06667000
*/*  START OF SPECIFICATIONS ****                             @Y30LB03  06668000
*                                                             @Y30LB03  06669000
*01*  MODULE-NAME = ICBMSG44                                  @Y30LB03  06670000
*                                                             @Y30LB03  06671000
*01*  DESCRIPTIVE-NAME = DEQUEUE SUBROUTINE                   @Y30LB03  06672000
*                                                             @Y30LB03  06673000
*01*  FUNCTION = DEQUEUE COMMAND WORK AREA                    @Y30LB03  06674000
*                                                             @Y30LB03  06675000
*                                                             @Y30LB03  06676000
*02*  PURPOSE = TO DEQUEUE THE COMMAND WORK BUFFER            @Y30LB03  06677000
*               FROM QUEUE OF WORK AREA ELEMENTS.             @Y30LB03  06678000
*                                                             @Y30LB03  06679000
*02*    INPUT = POINTER TO COMMAND WORK BUFFER TO BE DEQUEUED @Y30LB03  06680000
*                                                             @Y30LB03  06681000
*02*    OUTPUT = WORK AREA DEQUEUED FROM THE WORK AREA QUEUE  @Y30LB03  06682000
*                                                             @Y30LB03  06683000
**** END OF SPECIFICATIONS **                                @Y30LB03*/ 06684000
*                                                                  1895 06685000
*ICBMSG44:                                                         1895 06686000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB03*/ 06687000
ICBMSG44 DS    0H                                                  1896 06688000
*/*  ****************************************************    @Y30LB03*/ 06689000
*/*                                                          @Y30LB03*/ 06690000
*/*    THIS SUBROUTINE DEQUEUES THE COMTASK CWB.             @Y30LB03*/ 06691000
*/*                                                          @Y30LB03*/ 06692000
*/*  ****************************************************    @Y30LB03*/ 06693000
*                                                                  1896 06694000
*   RFY                                                            1896 06695000
*     R14 RSTD;                     /*                       @G24LB02*/ 06696000
*   SAVR1444=R14;                   /*                       @Z307B04*/ 06697000
         ST    R14,SAVR1444                                        1897 06698000
*   RFY                                                            1898 06699000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 06700000
*   GEN;                                                           1899 06701000
*                                                          /*@Y30LB03*/ 06702000
IGETLCL3 SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                @Y30LB03*06703000
               RELATED=(LOCALLOCK,ICB2MSG(IFRELCL3)),REGS=USE  @Y30LB03 06704000
IGTCMS2  SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,                  @Y30LB03*06705000
               RELATED=(CMSLOCK,ICB2MSG(IFRECMS2)),REGS=USE    @Y30LB03 06706000
*   LOCKRCVY(1:2)=B2ONE;            /* SET LOCAL & CMS LOCK BITS   1900 06707000
*                                                            @Y30LB03*/ 06708000
         OI    LOCKRCVY,B'11000000'                                1900 06709000
*   RESPECIFY                                                      1901 06710000
*     R2 RSTD;                      /* RESTRICT REG 2        @Y30LB03*/ 06711000
*   R2=CWBPTR;                      /* SET R2-->COMWKAREA    @Y30LB03*/ 06712000
         L     @12,CWBPTR                                          1902 06713000
         LR    R2,@12                                              1902 06714000
*   ICBCOMQ=CWBCHAIN;               /* SET TO NEW WK AREA    @Y30LB03*/ 06715000
         L     @09,ICBPTR                                          1903 06716000
         L     @12,CWBCHAIN(,@12)                                  1903 06717000
         ST    @12,ICBCOMQ(,@09)                                   1903 06718000
*   IF ICBCOMQ=F0 THEN              /* END OF CHAIN?         @Y30LB03*/ 06719000
         SLR   @04,@04                                             1904 06720000
         CR    @12,@04                                             1904 06721000
         BNE   @RF01904                                            1904 06722000
*     ICBCOM=F0;                    /* CLEAR COMTASK ECB     @Y30LB03*/ 06723000
         ST    @04,ICBCOM(,@09)                                    1905 06724000
*   RECOVER(2)=BONE;                /* SET RECOVERY BIT      @Y30LB03*/ 06725000
@RF01904 OI    RECOVER,B'01000000'                                 1906 06726000
*   GEN;                                                           1907 06727000
*                                                          /*@Y30LB03*/ 06728000
IFRECMS2 SETLOCK RELEASE,TYPE=CMS,                             @Y30LB03*06729000
               RELATED=(LOCALLOCK,ICB2MSG(IGTCMS2)),REGS=USE   @Y30LB03 06730000
IFRELCL3 SETLOCK RELEASE,TYPE=LOCAL,                           @Y30LB03*06731000
               RELATED=(LOCALLOCK,ICB2MSG(IGETLCL3)),REGS=USE  @Y30LB03 06732000
*   RESPECIFY                                                      1908 06733000
*     R2 UNRSTD;                    /*                       @Y30LB03*/ 06734000
*   LOCKRCVY(1:2)=B2ZERO;           /* SET LOCAL & CMS LOCK BITS   1909 06735000
*                                                            @Y30LB03*/ 06736000
         NI    LOCKRCVY,B'00111111'                                1909 06737000
*   RECOVER(2)=BONE;                /* SET RECOVERY BIT      @Y30LB03   06738000
*                                      FOR DQ'D              @Y30LB03*/ 06739000
         OI    RECOVER,B'01000000'                                 1910 06740000
*   RFY                                                            1911 06741000
*     R14 RSTD;                     /*                       @G24LB02*/ 06742000
*   R14=SAVR1444;                   /*                       @Z307B04*/ 06743000
         L     R14,SAVR1444                                        1912 06744000
*   RFY                                                            1913 06745000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 06746000
*   RETURN;                         /* RTN TO CALLER         @Y30LB03*/ 06747000
@EL00019 DS    0H                                                  1914 06748000
@EF00019 DS    0H                                                  1914 06749000
@ER00019 BR    @14                                                 1914 06750000
*   END ICBMSG44;                   /*                       @Y30LB03*/ 06751000
*                                                                  1916 06752000
*/*********************************************************  @Y30LB03*/ 06753000
*/*  START OF SPECIFICATIONS ****                             @Y30LB03  06754000
*                                                             @Y30LB03  06755000
*01*  MODULE-NAME = ICBMSG45                                  @Y30LB03  06756000
*                                                             @Y30LB03  06757000
*01*  DESCRIPTIVE-NAME = WTO SUBROUTINE (GENERAL)             @Y30LB03  06758000
*                                                             @Y30LB03  06759000
*01*  FUNCTION = WRITE TO OPERATOR (ON MASTER CONSOLE)        @Y30LB03  06760000
*                                                             @Y30LB03  06761000
*                                                             @Y30LB03  06762000
*02*  PURPOSE = TO WRITE MESSAGES TO THE OPERATOR             @Y30LB03  06763000
*                                                             @Y30LB03  06764000
*02*    INPUT = MESSAGE TO BE WRITTEN TO OPERATOR             @Y30LB03  06765000
*                                                             @Y30LB03  06766000
*02*    OUTPUT = MESSAGE WRITTEN TO OPERATOR                  @Y30LB03  06767000
*                                                             @Y30LB03  06768000
**** END OF SPECIFICATIONS **                                @Y30LB03*/ 06769000
*                                                                  1916 06770000
*ICBMSG45:                                                         1916 06771000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB03*/ 06772000
ICBMSG45 DS    0H                                                  1917 06773000
*/*  ****************************************************    @Y30LB03*/ 06774000
*/*                                                          @Y30LB03*/ 06775000
*/*    THIS SUBROUTINE ISSUES THE WTO COMMAND RESPONSE.      @Y30LB03*/ 06776000
*/*                                                          @Y30LB03*/ 06777000
*/*  ****************************************************    @Y30LB03*/ 06778000
*                                                                  1917 06779000
*   RFY                                                            1917 06780000
*     R14 RSTD;                     /*                       @G24LB02*/ 06781000
*   SAVR1445=R14;                   /* SAVE CALLERS REGISTER 14    1918 06782000
*                                                            @Z307B04*/ 06783000
         ST    R14,SAVR1445                                        1918 06784000
*   RFY                                                            1919 06785000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 06786000
*IWTO1:                                                            1920 06787000
*   DO;                             /* WTOP MF(E,WTOGEN) RTCD(R15)   */ 06788000
IWTO1    DS    0H                                                  1921 06789000
*     RFY                                                          1921 06790000
*       GPR01P RSTD;                /* RESTRICT REG 1                */ 06791000
*     GPR01P=ADDR(WTOGEN);          /* ADDRESS CONTROL PROGRAM LIST  */ 06792000
         LA    GPR01P,WTOGEN                                       1922 06793000
*     SVC(35);                      /* ISSUE WTO SVC                 */ 06794000
         SVC   35                                                  1923 06795000
*     RFY                                                          1924 06796000
*       GPR15F RSTD;                /* RESTRICT REG 15               */ 06797000
*     R15=GPR15F;                   /* SAVE SVC RETURN CODE          */ 06798000
*     RFY                                                          1926 06799000
*       GPR15F UNRSTD;              /* RELEASE REG 15                */ 06800000
*     RFY                                                          1927 06801000
*       GPR01P UNRSTD;              /* RELEASE REG 1                 */ 06802000
*   END;                            /* WTOP MF(E,WTOGEN) RTCD(R15) 1928 06803000
*                                                            @Y30LB03*/ 06804000
*   RFY                                                            1929 06805000
*     R14 RSTD;                     /*                       @G24LB02*/ 06806000
*   R14=SAVR1445;                   /* RESTORE CALLERS REGISTER 14 1930 06807000
*                                                            @Z307B04*/ 06808000
         L     R14,SAVR1445                                        1930 06809000
*   RFY                                                            1931 06810000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 06811000
*   RETURN;                         /* RTN TO CALLER         @Y30LB03*/ 06812000
@EL00020 DS    0H                                                  1932 06813000
@EF00020 DS    0H                                                  1932 06814000
@ER00020 BR    @14                                                 1932 06815000
*   END ICBMSG45;                   /*                       @Y30LB03*/ 06816000
*                                                                  1934 06817000
*/*********************************************************  @Y30LB03*/ 06818000
*/*  START OF SPECIFICATIONS ****                             @Y30LB03  06819000
*                                                             @Y30LB03  06820000
*01*  MODULE-NAME = ICBMSG46                                  @Y30LB03  06821000
*                                                             @Y30LB03  06822000
*01*  DESCRIPTIVE-NAME = FREEMAIN SUBROUTINE                  @Y30LB03  06823000
*                                                             @Y30LB03  06824000
*01*  FUNCTION = FREE CORE FOR COMMAND WORK AREA              @Y30LB03  06825000
*                                                             @Y30LB03  06826000
*                                                             @Y30LB03  06827000
*02*  PURPOSE = TO FREE THE CORE FOR THE DEQUEUED WORK AREA   @Y30LB03  06828000
*                                                             @Y30LB03  06829000
*02*    INPUT = POINTER TO COMMAND WORK BUFFER TO BE FREED    @Y30LB03  06830000
*                                                             @Y30LB03  06831000
*02*    OUTPUT = FREED CORE (FOR COMMAND WORK AREA)           @Y30LB03  06832000
*                                                             @Y30LB03  06833000
**** END OF SPECIFICATIONS **                                @Y30LB03*/ 06834000
*                                                                  1934 06835000
*ICBMSG46:                                                         1934 06836000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB03*/ 06837000
ICBMSG46 DS    0H                                                  1935 06838000
*/*  ****************************************************    @Y30LB03*/ 06839000
*/*                                                          @Y30LB03*/ 06840000
*/*    THIS SUBROUTINE ISSUES THE FREEMAIN MACRO FOR         @Y30LB03*/ 06841000
*/*    THE DEQ'D COMTASK CWB.                                @Y30LB03*/ 06842000
*/*                                                          @Y30LB03*/ 06843000
*/*  ****************************************************    @Y30LB03*/ 06844000
*                                                                  1935 06845000
*   DCL                                                            1935 06846000
*     SBPOL CHAR(1);                /* SUBPOOL               @Y30LB03*/ 06847000
*   RESPECIFY                                                      1936 06848000
*    (R2,                                                          1936 06849000
*     R14) RSTD;                    /* RESTRICT REG 2        @G24LB02*/ 06850000
*   SAVR1446=R14;                   /* SAVE CALLERS REGISTER 14    1937 06851000
*                                                            @Z307B04*/ 06852000
         ST    R14,SAVR1446                                        1937 06853000
*   R2=CWBPTR;                      /* SET R2 -> CWB         @Y30LB03*/ 06854000
         L     @15,CWBPTR                                          1938 06855000
         LR    R2,@15                                              1938 06856000
*   SBPOL=CWBSBPOL;                 /* SET SUBPOOL FOR       @Y30LB03   06857000
*                                      FREEMAIN              @Y30LB03*/ 06858000
         MVC   SBPOL(1),CWBSBPOL(@15)                              1939 06859000
*/*********************************************************  @Y30LB03*/ 06860000
*/* ISSUE FREEMAIN FOR COM WORK AREA                         @Y30LB03*/ 06861000
*/*********************************************************  @Y30LB03*/ 06862000
*                                                                  1940 06863000
*   GEN;                                                           1940 06864000
*                                                          /*@Y30LB03*/ 06865000
          SR    R3,R3               ZERO REG 3                 @Y30LB03 06866000
          IC    R3,SBPOL            PUT SBPOL IN LOW BYTE      @Y30LB03 06867000
IFREEMN3  FREEMAIN R,LV=136,A=(R2),SP=(R3) ISSUE FREEMAIN      @Y30LB03 06868000
*   RESPECIFY                                                      1941 06869000
*     R2 UNRSTD;                    /* RELEASE REG 2         @Y30LB03*/ 06870000
*   RECOVER(3)=BONE;                /* SET RECOVERY BIT      @Y30LB03   06871000
*                                      FOR FREED             @Y30LB03*/ 06872000
         OI    RECOVER,B'00100000'                                 1942 06873000
*   R14=SAVR1446;                   /* RESTORE CALLERS REGISTER 14 1943 06874000
*                                                            @Z307B04*/ 06875000
         L     R14,SAVR1446                                        1943 06876000
*   RFY                                                            1944 06877000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 06878000
*   RETURN;                         /* RTN TO CALLER         @Y30LB03*/ 06879000
@EL00021 DS    0H                                                  1945 06880000
@EF00021 DS    0H                                                  1945 06881000
@ER00021 BR    @14                                                 1945 06882000
*   END ICBMSG46;                   /*                       @Y30LB03*/ 06883000
*                                                                  1947 06884000
*   /*****************************************************************/ 06885000
*   /*                                                               */ 06886000
*   /* ***************************************************** @Y30LB03*/ 06887000
*   /*                                                               */ 06888000
*   /*****************************************************************/ 06889000
*                                                                  1947 06890000
*/*  START OF SPECIFICATIONS ****                             @Y30LB03  06891000
*                                                             @Y30LB03  06892000
*01*  MODULE-NAME = ICBMSG47                                  @Y30LB03  06893000
*                                                             @Y30LB03  06894000
*01*  DESCRIPTIVE-NAME = WTO SUBROUTINE (MCS)                 @Y30LB03  06895000
*                                                             @Y30LB03  06896000
*01*  FUNCTION = WRITE TO OPERATOR (IN RESPONSE TO COMTASK    @Y30LB03  06897000
*                COMMANDS)                                    @Y30LB03  06898000
*                                                             @Y30LB03  06899000
*                                                             @Y30LB03  06900000
*02*  PURPOSE = TO WRITE MESSAGES TO THE OPERATOR             @Y30LB03  06901000
*                                                             @Y30LB03  06902000
*02*    LINKAGE = CALL                                        @Y30LB03  06903000
*                                                             @Y30LB03  06904000
*02*    INPUT = MESSAGE TO BE WRITTEN TO OPERATOR             @Y30LB03  06905000
*                                                             @Y30LB03  06906000
*02*    OUTPUT = MESSAGE WRITTEN TO OPERATOR                  @Y30LB03  06907000
*                                                             @Y30LB03  06908000
**** END OF SPECIFICATIONS **                                @Y30LB03*/ 06909000
*                                                                  1947 06910000
*ICBMSG47:                                                         1947 06911000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB03*/ 06912000
ICBMSG47 DS    0H                                                  1948 06913000
*/* ***********************************************          @Y30LB03*/ 06914000
*/*   INSERT CONSOLE ID (CWBUCMID) INTO R0                   @Y30LB03*/ 06915000
*/* ***********************************************          @Y30LB03*/ 06916000
*                                                                  1948 06917000
*   RFY                                                            1948 06918000
*     R14 RSTD;                     /*                       @G24LB02*/ 06919000
*   SAVR1447=R14;                   /* SAVE CALLERS REGISTER 14    1949 06920000
*                                                            @Z307B04*/ 06921000
         ST    R14,SAVR1447                                        1949 06922000
*   RFY                                                            1950 06923000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 06924000
*   GEN REFS(CWBPTR,CWBUCMID);                                     1951 06925000
*                                                          /*@Y30LB03*/ 06926000
         L     R15,CWBPTR           LOAD R15 WITH PTR          @Y30LB03 06927000
         IC    R0,CWBUCMID(R15)     INSERT CONSOLE ID,R0       @Y30LB03 06928000
*IWTO4:                                                            1952 06929000
*   DO;                             /* WTOP MF(E,WTOMCS) RTCD(R15)   */ 06930000
IWTO4    DS    0H                                                  1953 06931000
*     RFY                                                          1953 06932000
*       GPR01P RSTD;                /* RESTRICT REG 1                */ 06933000
*     GPR01P=ADDR(WTOMCS);          /* ADDRESS CONTROL PROGRAM LIST  */ 06934000
         LA    GPR01P,WTOMCS                                       1954 06935000
*     SVC(35);                      /* ISSUE WTO SVC                 */ 06936000
         SVC   35                                                  1955 06937000
*     RFY                                                          1956 06938000
*       GPR15F RSTD;                /* RESTRICT REG 15               */ 06939000
*     R15=GPR15F;                   /* SAVE SVC RETURN CODE          */ 06940000
*     RFY                                                          1958 06941000
*       GPR15F UNRSTD;              /* RELEASE REG 15                */ 06942000
*     RFY                                                          1959 06943000
*       GPR01P UNRSTD;              /* RELEASE REG 1                 */ 06944000
*   END;                            /* WTOP MF(E,WTOMCS) RTCD(R15) 1960 06945000
*                                                            @Z40LB01*/ 06946000
*   RFY                                                            1961 06947000
*     R14 RSTD;                     /*                       @G24LB02*/ 06948000
*   R14=SAVR1447;                   /* RESTORE CALLERS REGISTER 14 1962 06949000
*                                                            @Z307B04*/ 06950000
         L     R14,SAVR1447                                        1962 06951000
*   RFY                                                            1963 06952000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 06953000
*   RETURN;                         /* RTN TO CALLER         @Y30LB03*/ 06954000
@EL00022 DS    0H                                                  1964 06955000
@EF00022 DS    0H                                                  1964 06956000
@ER00022 BR    @14                                                 1964 06957000
*   END ICBMSG47;                   /*                       @Y30LB03*/ 06958000
*                                                                  1966 06959000
*/*********************************************************  @Y30LB03*/ 06960000
*/*  START OF SPECIFICATIONS ****                             @Y30LB03  06961000
*                                                             @Y30LB03  06962000
*01*  MODULE-NAME = ICBMSG49                                  @Y30LB03  06963000
*                                                             @Y30LB03  06964000
*01*  DESCRIPTIVE-NAME = MSC VARY SUBROUTINE                  @Y30LB03  06965000
*                                                             @Y30LB03  06966000
*01*  FUNCTION = HANDLES MSC VARIES IF A COMTASK VARY         @Y30LB03  06967000
*                IS FOR THE PRIMARY OR ALTERNATE MSC          @Y30LB03  06968000
*                                                             @Y30LB03  06969000
*                                                             @Y30LB03  06970000
*02*  PURPOSE = TO CHECK THE UNIT (BEING VARIED) TO DETERMINE @Y30LB03  06971000
*               IF IT IS THE PRIMARY OR ALTERNATE MSC. AND,IF @Y30LB03  06972000
*               IT IS, TO PERFORM THE NECESSARY PROCESSING TO @Y30LB03  06973000
*               VARY THE MSC. IF THE PRIMARY MSC IS TO BE     @Y30LB03  06974000
*               VARIED OFFLINE AND THERE IS NO ALTERNATE MSC  @Y30LB03  06975000
*               ONLINE THE OPERATOR IS CONTACTED VIA WTOR TO  @Y30LB03  06976000
*               DETERMINE IF THE PROCESSING IS TO CONTINUE.   @Y30LB03  06977000
*               FINALLY, A WTO MESSAGE IS BUILT TO DESCRIBE   @Y30LB03  06978000
*               THE FINAL STATUS OF THE VARY PROCESSING.      @Y30LB03  06979000
*                                                             @Y30LB03  06980000
*02*    INPUT = COMTASK VARY S COMMAND THAT CONTAINS THE      @Y30LB03  06981000
*               KEYWORD '3851'                                @Y30LB03  06982000
*                                                             @Y30LB03  06983000
*02*    OUTPUT = IF IT WAS A MSC UNIT, SPECIAL (VARY)         @Y30LB03  06984000
*                PROCESSING TO VARY THE MSC.                  @Y30LB03  06985000
*                                                             @Y30LB03  06986000
**** END OF SPECIFICATIONS **                                @Y30LB03*/ 06987000
*                                                                  1966 06988000
*ICBMSG49:                                                         1966 06989000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB03*/ 06990000
ICBMSG49 DS    0H                                                  1967 06991000
*   DCL                                                            1967 06992000
*     PRIMSWTH FIXED(8);            /* IF 1, PRIMARY MSC BEING VARIED   06993000
*                                                            @Y30LB03*/ 06994000
*/*  SMF VARY ON/OFF RECORD (VARIABLE DATA FIELD)            @Y30LB03*/ 06995000
*                                                                  1968 06996000
*   DCL                                                            1968 06997000
*     DVCLUNTP CHAR(2) DEF(UCBTBYT3);/* DEVICE CLASS, UNIT   @Y30LB03   06998000
*                                      TYPE,FOR SMF RECORD   @Y30LB03*/ 06999000
*/*********************************************************  @Y30LB03*/ 07000000
*/* A WTOR IS PRINTED WHEN THE VARY IS FOR THE PRIMARY MSC,  @Y30LB03*/ 07001000
*/* AND, THE UCBONLINE BIT FOR THE ALT. MSC SAYS THAT IT IS  @Y30LB03*/ 07002000
*/* OFFLINE. THE OPERATOR IS INFORMED VIA THE WTOR MESSAGE.  @Y30LB03*/ 07003000
*/* IF CONTINUE IS SPECIFIED, SVC 91 IS ISSUED TO OFFLOAD    @Y30LB03*/ 07004000
*/* MSS BUFFERED LOG DATA.                                   @Y30LB03*/ 07005000
*/*THIS FIELD IS SPECIFIED ON THE WTOR, AND WILL CONTAIN     @Y30LB03*/ 07006000
*/*OPERATOR'S REPLY.IF U IS SPECIFIED, VARY PROCESSING       @Y30LB03*/ 07007000
*/* CONTINUES OTHERWISE THE VARY IS CANCELLED.               @Y30LB03*/ 07008000
*                                                                  1969 07009000
*   /*****************************************************************/ 07010000
*   /*                                                               */ 07011000
*   /* *************************************************     @Y30LB03*/ 07012000
*   /*                                                               */ 07013000
*   /*****************************************************************/ 07014000
*                                                                  1969 07015000
*   DCL                                                            1969 07016000
*     1 OFFRPLY CHAR(6),            /* REPLY FIELD FOR WTOR  @Y30LB03*/ 07017000
*      2 REPLYU CHAR(1),            /* THIS IS U IF DEFAULT TAKEN, 1969 07018000
*                                                            @Y30LB03   07019000
*                                      (I.E. TO CONTINUE)    @Y30LB03*/ 07020000
*      2 * CHAR(5);                 /* FILLED WHEN 'CANCEL' GIVEN  1969 07021000
*                                                            @Y30LB03*/ 07022000
*   DCL                                                            1970 07023000
*     CHARA4 BIT(8) CONSTANT('A4'X);/* HEX 'A4'              @Y30LB03*/ 07024000
*   DCL                                                            1971 07025000
*     CHARE4 BIT(8) CONSTANT('E4'X);/* HEX 'E4'              @Y30LB03*/ 07026000
*   DCL                                                            1972 07027000
*     ALTONLIN FIXED(8) INIT(0);    /* SWITCH THAT WILL BE   @Y30LB03   07028000
*                                      SET IF ALTERNATE MSC  @Y30LB03   07029000
*                                      IS ONLINE             @Y30LB03*/ 07030000
*   RFY                                                            1973 07031000
*     R14 RSTD;                     /*                       @G24LB02*/ 07032000
*   SAVR1449=R14;                   /*                       @Y30LB03*/ 07033000
         ST    R14,SAVR1449                                        1974 07034000
*   RFY                                                            1975 07035000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 07036000
*   IF ONOFF='ON' THEN              /* VARY ON?              @G24LB02*/ 07037000
         CLC   ONOFF(2),@CC02863                                   1976 07038000
         BNE   @RF01976                                            1976 07039000
*     DO;                           /*                       @G24LB02*/ 07040000
*       SMF09PTR=ADDR(SMFAREA);     /*                       @G24LB02*/ 07041000
         LA    @12,SMFAREA                                         1978 07042000
         ST    @12,SMF09PTR                                        1978 07043000
*       RFY                                                        1979 07044000
*         SMF9DVAD BASED(SMF09PTR+LENGTH(SMFRCD09));/*       @G24LB02*/ 07045000
*       SMFRCD09=''B;               /* CLEAR PARM LIST       @G24LB02*/ 07046000
         XC    SMFRCD09(20,@12),SMFRCD09(@12)                      1980 07047000
*       SMF9LEN='18'X;              /* LENGTH OF PARM LIST   @G24LB02*/ 07048000
         LA    @09,24                                              1981 07049000
         STH   @09,SMF9LEN(,@12)                                   1981 07050000
*       SMF9RTY='09'X;              /* TYPE VARY ON          @G24LB02*/ 07051000
         MVI   SMF9RTY(@12),X'09'                                  1982 07052000
*       SMF9LENN='06'X;             /* LENGTH OF VAR DATA    @G24LB02*/ 07053000
         LA    @09,6                                               1983 07054000
         STH   @09,SMF9LENN(,@12)                                  1983 07055000
*       SMF9DUT=DVCLUNTP;           /* DEV CLASS, UNIT TYPE  @G24LB02*/ 07056000
         AL    @12,@CF01407                                        1984 07057000
         L     @09,UCBPTR                                          1984 07058000
         MVC   SMF9DUT(2,@12),DVCLUNTP(@09)                        1984 07059000
*       SMF9CUA=SSIDADDR;           /* CHANNEL, UNIT ADDRESS @G24LB02*/ 07060000
         MVC   SMF9CUA(2,@12),SSIDADDR                             1985 07061000
*     END;                          /*                       @G24LB02*/ 07062000
*   ELSE                            /* VARY OFF .....        @G24LB02*/ 07063000
*     DO;                           /*                       @G24LB02*/ 07064000
         B     @RC01976                                            1987 07065000
@RF01976 DS    0H                                                  1988 07066000
*       SMF11PTR=ADDR(SMFAREA);     /*                       @G24LB02*/ 07067000
         LA    @12,SMFAREA                                         1988 07068000
         ST    @12,SMF11PTR                                        1988 07069000
*       RFY                                                        1989 07070000
*         SMF11DEV BASED(SMF11PTR+LENGTH(SMFRCD11));/*       @G24LB02*/ 07071000
*       SMFRCD11=''B;               /* CLEAR PARM LIST       @G24LB02*/ 07072000
         XC    SMFRCD11(20,@12),SMFRCD11(@12)                      1990 07073000
*       SMF11LEN='18'X;             /* LENGTH OF PARM LIST   @G24LB02*/ 07074000
         LA    @09,24                                              1991 07075000
         STH   @09,SMF11LEN(,@12)                                  1991 07076000
*       SMF11RTY='0B'X;             /* TYPE VARY OFF         @G24LB02*/ 07077000
         MVI   SMF11RTY(@12),X'0B'                                 1992 07078000
*       SMF11LN='06'X;              /* LENGTH OF VAR DATA    @G24LB02*/ 07079000
         LA    @09,6                                               1993 07080000
         STH   @09,SMF11LN(,@12)                                   1993 07081000
*       SMF11DUT=DVCLUNTP;          /* DEV CLASS, UNIT TYPE  @G24LB02*/ 07082000
         AL    @12,@CF01407                                        1994 07083000
         L     @09,UCBPTR                                          1994 07084000
         MVC   SMF11DUT(2,@12),DVCLUNTP(@09)                       1994 07085000
*       SMF11CUA=SSIDADDR;          /* CHANNEL, UNIT ADDRESS @G24LB02*/ 07086000
         MVC   SMF11CUA(2,@12),SSIDADDR                            1995 07087000
*     END;                          /*                       @G24LB02*/ 07088000
*   DSDSWTH=F0;                     /* 0 MSC SWITCH          #Y30LB03*/ 07089000
@RC01976 MVI   DSDSWTH,X'00'                                       1997 07090000
*   PRIMSWTH=F1;                    /* INIT PRIMARY MSC SWITCH     1998 07091000
*                                                            @Y30LB03*/ 07092000
         MVI   PRIMSWTH,X'01'                                      1998 07093000
*   ALTONLIN=F0;                    /* INIT ALT-ONLINE SWTCH @Y30LB03*/ 07094000
         MVI   ALTONLIN,X'00'                                      1999 07095000
*   UCBPTR=ICBPUCB;                 /* INIT UCBPTR           @Y30LB03*/ 07096000
         L     @12,ICBPTR                                          2000 07097000
         L     @09,ICBPUCB(,@12)                                   2000 07098000
         ST    @09,UCBPTR                                          2000 07099000
*   IF UCBNAME^=RU THEN             /* IS IT THE PRIMARY MSC?      2001 07100000
*                                                            @ZA13491*/ 07101000
         L     @04,CWBVREF                                         2001 07102000
         CLC   UCBNAME(3,@09),RU(@04)                              2001 07103000
         BE    @RF02001                                            2001 07104000
*     DO;                           /* NO, THEN              @Y30LB03*/ 07105000
*       IF ICBAUCB^=F0 THEN         /* DOES AN ALT MSC EXIST?      2003 07106000
*                                                            @Y30LB03*/ 07107000
         L     @12,ICBAUCB(,@12)                                   2003 07108000
         LTR   @12,@12                                             2003 07109000
         BZ    @RF02003                                            2003 07110000
*         UCBPTR=ICBAUCB;           /* DEFINE UCBPTR         @Y30LB03*/ 07111000
         ST    @12,UCBPTR                                          2004 07112000
*       PRIMSWTH=F0;                /* TURN OFF PRIMARY SWTCH      2005 07113000
*                                                            @Y30LB03*/ 07114000
@RF02003 MVI   PRIMSWTH,X'00'                                      2005 07115000
*     END;                          /*                       @Y30LB03*/ 07116000
*   IF UCBNAME=RU THEN              /* IS IT A VARY FOR A MSC?     2007 07117000
*                                                            @ZA13491*/ 07118000
@RF02001 L     @12,UCBPTR                                          2007 07119000
         L     @09,CWBVREF                                         2007 07120000
         CLC   UCBNAME(3,@12),RU(@09)                              2007 07121000
         BNE   @RF02007                                            2007 07122000
*     DO;                           /* YES, PROCESS IT       @Y30LB03*/ 07123000
*       DSDSWTH=F1;                 /* TURN ON MSC SWITCH    @Y30LB03*/ 07124000
         MVI   DSDSWTH,X'01'                                       2009 07125000
*       BRSWTCH=F0;                 /* TURN BRCH SWITCH OFF? @Y30LB03*/ 07126000
*                                                                  2010 07127000
         MVI   BRSWTCH,X'00'                                       2010 07128000
*       /*************************************************************/ 07129000
*       /*                                                           */ 07130000
*       /* IS THE GIVEN MSC ALREADY IN THE CORRECT STATUS ?  @Y30LB03*/ 07131000
*       /*                                                           */ 07132000
*       /*************************************************************/ 07133000
*                                                                  2011 07134000
*       IF((ONOFF='ON'&UCBONLI=BONE)|(ONOFF='OF'&UCBONLI=BZERO))/* 2011 07135000
*                                                            @Y30LB03*/ 07136000
*         THEN                      /*                       @Y30LB03*/ 07137000
         CLC   ONOFF(2),@CC02863                                   2011 07138000
         BNE   @GL00026                                            2011 07139000
         TM    UCBONLI(@12),B'10000000'                            2011 07140000
         BO    @RT02011                                            2011 07141000
@GL00026 CLC   ONOFF(2),@CC02861                                   2011 07142000
         BNE   @RF02011                                            2011 07143000
         L     @12,UCBPTR                                          2011 07144000
         TM    UCBONLI(@12),B'10000000'                            2011 07145000
         BNZ   @RF02011                                            2011 07146000
@RT02011 DS    0H                                                  2012 07147000
*         DO;                       /* YES,                  @Y30LB03*/ 07148000
*                                                                  2012 07149000
*           /*********************************************************/ 07150000
*           /*                                                       */ 07151000
*           /* FILL IN WTO MSG                               @Y30LB03*/ 07152000
*           /*                                                       */ 07153000
*           /*********************************************************/ 07154000
*                                                                  2013 07155000
*           WTOMCS03=MESGS(MSG30301);/* FILL WTO BUFFER      @Z40LB01*/ 07156000
         MVI   WTOMCS03+72,C' '                                    2013 07157000
         L     @12,@CA02101                                        2013 07158000
         MVC   WTOMCS03(72),MESGS-MSGS+2508(@12)                   2013 07159000
*           WTOMCS03(13:15)=RU;     /* FILL IN UNIT          @Z40LB01*/ 07160000
         L     @12,CWBVREF                                         2014 07161000
         MVC   WTOMCS03+12(3),RU(@12)                              2014 07162000
*           IF ONOFF='ON' THEN      /* FILL IN PART OF MESSAGE     2015 07163000
*                                                            @ZA24770*/ 07164000
         CLC   ONOFF(2),@CC02863                                   2015 07165000
         BNE   @RF02015                                            2015 07166000
*             DO;                   /*                       @ZA24770*/ 07167000
*               ICBECB=CHAR40;      /* DUMMY POST ATTN ECB   @ZA24770*/ 07168000
         L     @12,ICBPTR                                          2017 07169000
         MVC   ICBECB(4,@12),@CF02435                              2017 07170000
*               WTOMCS03(25:27)=' ON';/* 'ON' IN MESSAGE     @ZA24770*/ 07171000
         MVC   WTOMCS03+24(3),@CC02868                             2018 07172000
*             END;                  /*                       @ZA24770*/ 07173000
*           ELSE                    /*                       @ZA24770*/ 07174000
*             WTOMCS03(25:27)='OFF';/* 'OFF' IN MESSAGE      @ZA24770*/ 07175000
         B     @RC02015                                            2020 07176000
@RF02015 MVC   WTOMCS03+24(3),@CC02869                             2020 07177000
*         END;                      /*                       @Y30LB03*/ 07178000
*       ELSE                        /* NOT ALREADY ON/OFF LINE     2022 07179000
*                                                            @Y30LB03*/ 07180000
*         DO;                       /* SO, DO DIFFERENT PROCESSING 2022 07181000
*                                                            @Y30LB03*/ 07182000
         B     @RC02011                                            2022 07183000
@RF02011 DS    0H                                                  2023 07184000
*           IF PRIMSWTH=F0 THEN     /* THE ALTERNATE TO BE VARIED? 2023 07185000
*                                                            @Y30LB03*/ 07186000
         CLI   PRIMSWTH,0                                          2023 07187000
         BNE   @RF02023                                            2023 07188000
*             DO;                   /* YES,                  @Y30LB03*/ 07189000
*               WTOMCS03=MESGS(MSG30201);/* FILL WTO BUFFER  @Z40LB01*/ 07190000
         MVI   WTOMCS03+72,C' '                                    2025 07191000
         L     @12,@CA02101                                        2025 07192000
         MVC   WTOMCS03(72),MESGS-MSGS+2432(@12)                   2025 07193000
*               IF ONOFF='ON' THEN  /* VARY ON?              @Y30LB03*/ 07194000
         CLC   ONOFF(2),@CC02863                                   2026 07195000
         BNE   @RF02026                                            2026 07196000
*                 DO;               /* YES,                  @Y30LB03*/ 07197000
*                   UCBONLI=BONE;   /* TURN ONLINE BIT ON, IN UCB  2028 07198000
*                                                            @Y30LB03*/ 07199000
         L     @12,UCBPTR                                          2028 07200000
         OI    UCBONLI(@12),B'10000000'                            2028 07201000
*                   WTOMCS03(21:23)=' ON';/*                 @Z40LB01*/ 07202000
         MVC   WTOMCS03+20(3),@CC02868                             2029 07203000
*                 END;              /*                       @Y30LB03*/ 07204000
*               ELSE                /* VARY OFF              @Y30LB03*/ 07205000
*                 DO;               /* YES,                  @Y30LB03*/ 07206000
         B     @RC02026                                            2031 07207000
@RF02026 DS    0H                                                  2032 07208000
*                   UCBONLI=BZERO;  /* TURN OFF ONLINE-BIT,IN UCB  2032 07209000
*                                                            @Y30LB03*/ 07210000
         L     @12,UCBPTR                                          2032 07211000
         NI    UCBONLI(@12),B'01111111'                            2032 07212000
*                   WTOMCS03(21:23)='OFF';/*                 @Z40LB01*/ 07213000
         MVC   WTOMCS03+20(3),@CC02869                             2033 07214000
*                 END;              /*                       @Y30LB03*/ 07215000
*               WTOMCS03(13:15)=RU; /* FILL IN UNIT          @Z40LB01*/ 07216000
@RC02026 L     @12,CWBVREF                                         2035 07217000
         MVC   WTOMCS03+12(3),RU(@12)                              2035 07218000
*             END;                  /*                       @Y30LB03*/ 07219000
*           ELSE                    /* IF NOT ALTERNATE,     @Y30LB03*/ 07220000
*             DO;                   /* VARYING PRIMARY       @Y30LB03*/ 07221000
         B     @RC02023                                            2037 07222000
@RF02023 DS    0H                                                  2038 07223000
*               IF ONOFF='ON' THEN  /* ONLINE VARY?          @Y30LB03*/ 07224000
         CLC   ONOFF(2),@CC02863                                   2038 07225000
         BNE   @RF02038                                            2038 07226000
*                 DO;               /* YES,                  @Y30LB03*/ 07227000
*                   UCBONLI=BONE;   /* TURN ONLINE BIT ON,IN UCB   2040 07228000
*                                                            @Y30LB03*/ 07229000
         L     @12,UCBPTR                                          2040 07230000
         OI    UCBONLI(@12),B'10000000'                            2040 07231000
*                   UCBQISCE=OFF;   /* TURN QUISCE BIT OFF,IN UCB  2041 07232000
*                                                            @ZA24770*/ 07233000
         NI    UCBQISCE(@12),B'11111110'                           2041 07234000
*                   ICBECB=CHAR40;  /* DUMMY POST OF ATTN ECB      2042 07235000
*                                                            @ZA24770*/ 07236000
         L     @09,ICBPTR                                          2042 07237000
         MVC   ICBECB(4,@09),@CF02435                              2042 07238000
*                   UCBNOTRD=BZERO; /* TURN OFF NOT-READY-BIT      2043 07239000
*                                                            @Y30LB03*/ 07240000
         NI    UCBNOTRD(@12),B'10111111'                           2043 07241000
*                   WTOMCS03=MESGS(MSG30201);/* FILL WTO BUFF      2044 07242000
*                                                            @Z40LB01*/ 07243000
         MVI   WTOMCS03+72,C' '                                    2044 07244000
         L     @12,@CA02101                                        2044 07245000
         MVC   WTOMCS03(72),MESGS-MSGS+2432(@12)                   2044 07246000
*                   WTOMCS03(13:15)=RU;/* SET UP WTO MESSAGE @Z40LB01*/ 07247000
         L     @12,CWBVREF                                         2045 07248000
         MVC   WTOMCS03+12(3),RU(@12)                              2045 07249000
*                   WTOMCS03(21:23)=' ON';/*                 @Z40LB01*/ 07250000
         MVC   WTOMCS03+20(3),@CC02868                             2046 07251000
*                 END;              /*                       @Y30LB03*/ 07252000
*               ELSE                /* OFFLINE VARY          @Y30LB03*/ 07253000
*                 DO;               /* OFFLINE VARY FOR PRIMARY MSC     07254000
*                                                            @Y30LB03*/ 07255000
         B     @RC02038                                            2048 07256000
@RF02038 DS    0H                                                  2049 07257000
*                   IF ICBAUCB^=F0 THEN/* DOES ALT MSC EXIST?      2049 07258000
*                                                            @Y30LB03*/ 07259000
         L     @12,ICBPTR                                          2049 07260000
         L     @09,ICBAUCB(,@12)                                   2049 07261000
         LTR   @09,@09                                             2049 07262000
         BZ    @RF02049                                            2049 07263000
*                     DO;           /* YES,                  @Y30LB03*/ 07264000
*                                                                  2050 07265000
*                       /*********************************************/ 07266000
*                       /*                                           */ 07267000
*                       /* DEFINE UCB AS ALT.                @Y30LB03*/ 07268000
*                       /*                                           */ 07269000
*                       /*********************************************/ 07270000
*                                                                  2051 07271000
*                       UCBPTR=ICBAUCB;/*                    @Y30LB03*/ 07272000
         ST    @09,UCBPTR                                          2051 07273000
*                       IF UCBONLI=BONE THEN/* IS ALTERNATE MSC    2052 07274000
*                                      ONLINE?               @Y30LB03*/ 07275000
         TM    UCBONLI(@09),B'10000000'                            2052 07276000
         BNO   @RF02052                                            2052 07277000
*                         DO;       /* YES,                  @Y30LB03*/ 07278000
*                           ALTONLIN=F1;/* TURN ON ALT-ONLINE      2054 07279000
*                                                            @Y30LB03   07280000
*                                      SWITCH                @Y30LB03*/ 07281000
*                                                                  2054 07282000
         MVI   ALTONLIN,X'01'                                      2054 07283000
*                           /*****************************************/ 07284000
*                           /*                                       */ 07285000
*                           /* RESET UCB TO PRIMARY UCB      @Y30LB03*/ 07286000
*                           /*                                       */ 07287000
*                           /*****************************************/ 07288000
*                                                                  2055 07289000
*                           UCBPTR=ICBPUCB;/*                @Y30LB03*/ 07290000
         L     @12,ICBPUCB(,@12)                                   2055 07291000
         ST    @12,UCBPTR                                          2055 07292000
*                           SUSPFLG=''B;/* RESET SUSPEND FLAGS IN  2056 07293000
*                                      LIST                  @ZD00155*/ 07294000
         XC    SUSPFLG(2),SUSPFLG                                  2056 07295000
*                           SUPPRSW=BONE;/* INDICATE PREPARE TO SWAP    07296000
*                                                            @ZD00155*/ 07297000
         OI    SUPPRSW,B'00100000'                                 2057 07298000
*                           RFY                                    2058 07299000
*                             R15 RSTD;/*                    @YD00155*/ 07300000
*                           SAVREENT=REENTRY;/* SAVE REENTRY POINTER    07301000
*                                                            @G24LB02*/ 07302000
         L     @14,REENTRY                                         2059 07303000
         ST    @14,SAVREENT                                        2059 07304000
*                           REENTRY=ADDR(SWAPRET);/* SET NEW REENTRY    07305000
*                                      POINTER               @G24LB02*/ 07306000
         LA    @14,SWAPRET                                         2060 07307000
         ST    @14,REENTRY                                         2060 07308000
*                           SVCCALL=ON;/* SET SVC CALL FLAG  @G24LB02*/ 07309000
         OI    SVCCALL,B'00001000'                                 2061 07310000
*ISUSPD2:                           /*                       @YD00155*/ 07311000
*/*  ******************************************************* @Y30LB02*/ 07312000
*/*       MACMEAN  MSSC SUSPEND MACRO                        @Y30LB02*/ 07313000
*/*  VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00                 @Y30LB02*/ 07314000
*/*  THIS IS THE OUTPUT FOR THE EXECUTE FORM.                @Y30LB02*/ 07315000
*/*  THE LIST FORM OF THIS MACRO SHOULD BE                   @Y30LB02*/ 07316000
*/*  INVOKED FIRST IN ORDER TO SET UP NECESSARY              @Y30LB02*/ 07317000
*/*  DECLARES.  IF THE COMPLETE ARGUMENT IS                  @Y30LB02*/ 07318000
*/*  SPECIFIED THE REQ BLOCK WILL BE ZEROED.                 @Y30LB02*/ 07319000
*/*  ******************************************************* @Y30LB02*/ 07320000
*                                                                  2062 07321000
*                           RFY                                    2062 07322000
*                            (SUSPR1) RSTD;/* RESTRICT REG1  @Y30LB02*/ 07323000
ISUSPD2  DS    0H                                                  2063 07324000
*                           SUSPR1=ADDR(SUSPLIST);/* R1 POINTER TO 2063 07325000
*                                      REQUEST BLOCK         @Y30LB02*/ 07326000
         LA    SUSPR1,SUSPLIST                                     2063 07327000
*                           SUSPLEN='8'X;/* LENGTH OF SUSPEND REQUEST   07328000
*                                                            @Y30LB02*/ 07329000
         LA    @14,8                                               2064 07330000
         ST    @14,SUSPLEN                                         2064 07331000
*                           SUSPOP='22'X;/* SUSPEND OPCODE   @Y30LB02*/ 07332000
         MVI   SUSPOP,X'22'                                        2065 07333000
*                           SVC(126);/* INVOKE SVC 126       @Y30LB02*/ 07334000
         SVC   126                                                 2066 07335000
*                           RFY                                    2067 07336000
*                             SUSPR1 UNRSTD;/* UNRESTRICT REG 1    2067 07337000
*                                                            @Y30LB02   07338000
*                                      ISSUE SWAP WITH SUSPEND     2067 07339000
*                                                            @ZD00155*/ 07340000
*SWAPRET:                           /* LABEL FOR RETURN      @G24LB02*/ 07341000
*                           SVCCALL=OFF;/* CLEAR SVC CALL FLAG     2068 07342000
*                                                            @G24LB02*/ 07343000
SWAPRET  NI    SVCCALL,B'11110111'                                 2068 07344000
*                           REENTRY=SAVREENT;/* RESTORE REENTRY    2069 07345000
*                                      POINTER               @G24LB02*/ 07346000
         L     @14,SAVREENT                                        2069 07347000
         ST    @14,REENTRY                                         2069 07348000
*                           IF R15^=F0 THEN/* IS ERROR INDICATOR ON?    07349000
*                                                            @Y30LB03*/ 07350000
         LTR   R15,R15                                             2070 07351000
         BZ    @RF02070                                            2070 07352000
*                             DO;   /* YES,                  @Y30LB03*/ 07353000
*                               RFY                                2072 07354000
*                                 R0 RSTD;/* RST REGISTER 0  @YD00155*/ 07355000
*                               RFY                                2073 07356000
*                                 R15 UNRSTD;/* REL REGISTER 15    2073 07357000
*                                                            @YD00155*/ 07358000
*                               OFFRPLY='CANCEL';/* SMF SWITCH, USED    07359000
*                                      AT END OF THIS        @Y30LB03   07360000
*                                      SUBROUTINE            @Y30LB03*/ 07361000
         MVC   OFFRPLY(6),@CC02995                                 2074 07362000
*                               INTER=R0;/* SET UP FOR REAS CODE   2075 07363000
*                                      CONVERSION            @Y30LB03*/ 07364000
*                                                                  2075 07365000
         ST    R0,INTER                                            2075 07366000
*                               /*************************************/ 07367000
*                               /*                                   */ 07368000
*                               /* CALL ICBMSG82 TO CONVERT REAS CD  */ 07369000
*                               /*                           @Y30LB03*/ 07370000
*                               /*                                   */ 07371000
*                               /*************************************/ 07372000
*                                                                  2076 07373000
*                               CALL ICBMSG82;/*             @Y30LB03*/ 07374000
         BAL   @14,ICBMSG82                                        2076 07375000
*                               RESPECIFY                          2077 07376000
*                                 R0 UNRSTD;/*               @Y30LB03*/ 07377000
*                               WTOMCS03=MESGS(MSG31101);/* FILL WTO    07378000
*                                      BUFFER                @Z40LB01*/ 07379000
         MVI   WTOMCS03+72,C' '                                    2078 07380000
         L     @12,@CA02101                                        2078 07381000
         MVC   WTOMCS03(72),MESGS-MSGS+2584(@12)                   2078 07382000
*                               WTOMCS03(18:20)=RU;/* FILL IN UNIT 2079 07383000
*                                                            @Z40LB01*/ 07384000
         L     @12,CWBVREF                                         2079 07385000
         MVC   WTOMCS03+17(3),RU(@12)                              2079 07386000
*                               WTOMCS03(47:49)=BYTES234;/* FILL IN     07387000
*                                      REAS CD               @Z40LB01*/ 07388000
         MVC   WTOMCS03+46(3),BYTES234                             2080 07389000
*                               WTOMCS03(22:24)='OFF';/*     @Z40LB01*/ 07390000
         MVC   WTOMCS03+21(3),@CC02869                             2081 07391000
*                               BRSWTCH=F0;/* WANT TO WTO, SO TURN 2082 07392000
*                                      OFF BRCH              @Y30LB03   07393000
*                                      SWITCH THAT IS CHECKED IN   2082 07394000
*                                      ICBMSG41              @Y30LB03*/ 07395000
         MVI   BRSWTCH,X'00'                                       2082 07396000
*                             END;  /*                       @Y30LB03*/ 07397000
*                           ELSE    /* ERROR INDICATOR IS NOT ON   2084 07398000
*                                                            @ZD00155*/ 07399000
*                             DO;   /* SWAP IN PROCESS       @ZD00155*/ 07400000
         B     @RC02070                                            2084 07401000
@RF02070 DS    0H                                                  2085 07402000
*                               BRSWTCH=F1;/* SET NO-MESSAGE NEEDED     07403000
*                                                            @ZD00155*/ 07404000
         MVI   BRSWTCH,X'01'                                       2085 07405000
*                             END;  /* BECAUSE ERPS WRITE SWAP     2086 07406000
*                                      MESSAGES              @ZD00155*/ 07407000
*                         END;      /*                       @Y30LB03*/ 07408000
@RC02070 DS    0H                                                  2088 07409000
*                     END;          /*                       @Y30LB03*/ 07410000
@RF02052 DS    0H                                                  2089 07411000
*                   IF ALTONLIN=F0 THEN/* IS ALT. MSC OFFLINE?     2089 07412000
*                                                            @Y30LB03*/ 07413000
*                                                                  2089 07414000
@RF02049 CLI   ALTONLIN,0                                          2089 07415000
         BNE   @RF02089                                            2089 07416000
*                     /***********************************************/ 07417000
*                     /*                                             */ 07418000
*                     /* YES, ALT. IS OFFLINE                @Y30LB03*/ 07419000
*                     /*                                             */ 07420000
*                     /***********************************************/ 07421000
*                                                                  2090 07422000
*                     DO;           /*                       @Y30LB03*/ 07423000
*                                                                  2090 07424000
*                       /*********************************************/ 07425000
*                       /*                                           */ 07426000
*                       /* BASE UCB ON PRIMARY MSC           @Y30LB03*/ 07427000
*                       /*                                           */ 07428000
*                       /*********************************************/ 07429000
*                                                                  2091 07430000
*                       UCBPTR=ICBPUCB;/*                    @Y30LB03*/ 07431000
         L     @12,ICBPTR                                          2091 07432000
         L     @12,ICBPUCB(,@12)                                   2091 07433000
         ST    @12,UCBPTR                                          2091 07434000
*                       OFFRPLY=''B;/* ZERO RESPONSE FIELD   @Y30LB03*/ 07435000
         XC    OFFRPLY(6),OFFRPLY                                  2092 07436000
*                       WAITECB=F0; /* CLEAR ECB             @Y30LB03*/ 07437000
         SLR   @12,@12                                             2093 07438000
         ST    @12,WAITECB                                         2093 07439000
*                       RESPECIFY                                  2094 07440000
*                         R2 RSTD;  /*                       @Y30LB03*/ 07441000
*                       R2=ADDR(WAITECB);/* SET UP REG 2 W/ ECB    2095 07442000
*                                                            @Y30LB03*/ 07443000
         LA    R2,WAITECB                                          2095 07444000
*                       GEN;                                       2096 07445000
*                                                          /*@Y30LB03*/ 07446000
IWTOR1   WTOR  '  ICB015D - ALT MSC DOES NOT EXIST OR IS OFFLINE, REPLY*07447000
                 CANCEL OR U ',OFFRPLY,6,(R2)                  @Y30LB03 07448000
IWAIT4   WAIT  ECB=WAITECB          ISSUE WAIT, FOR REPLY      @Y30LB03 07449000
*                       RESPECIFY                                  2097 07450000
*                         R2 UNRSTD;/*                       @Y30LB03*/ 07451000
*                       IF(REPLYU=CHARA4|REPLYU=CHARE4) THEN/*     2098 07452000
*                                      CONTINUE?             @Y30LB03*/ 07453000
         CLI   REPLYU,X'A4'                                        2098 07454000
         BE    @RT02098                                            2098 07455000
         CLI   REPLYU,X'E4'                                        2098 07456000
         BNE   @RF02098                                            2098 07457000
@RT02098 DS    0H                                                  2099 07458000
*                         DO;       /* YES,                  @Y30LB03*/ 07459000
*                                                                  2099 07460000
*                           /*****************************************/ 07461000
*                           /*                                       */ 07462000
*                           /* SET UP FOR SVC 91             @Y30LB03*/ 07463000
*                           /*                                       */ 07464000
*                           /*****************************************/ 07465000
*                                                                  2100 07466000
*                           RESPECIFY                              2100 07467000
*                            (R0,                                  2100 07468000
*                             R1) RSTD;/*                    @Y30LB03*/ 07469000
*                           R0=ICBPUCB;/* LOAD REG 0 W/ PRIM UCB ADDR   07470000
*                                                            @Y30LB03*/ 07471000
         L     @12,ICBPTR                                          2101 07472000
         L     R0,ICBPUCB(,@12)                                    2101 07473000
*                           GEN;                                   2102 07474000
*                                                          /*@Y30LB03*/ 07475000
         LCR   R0,R0                LOAD COMPLEMENT            @Y30LB03 07476000
*                           R1=R1COMPL;/*                    @Y30LB03*/ 07477000
         L     R1,@CF02463                                         2103 07478000
*                           SVC(91);/* ISSUE SVC 91 TO OFFLOAD     2104 07479000
*                                      BUFFERED LOG DATA     @Y30LB03*/ 07480000
         SVC   91                                                  2104 07481000
*                           RESPECIFY                              2105 07482000
*                            (R0,                                  2105 07483000
*                             R1) UNRSTD;/*                  @Y30LB03*/ 07484000
*                           UCBONLI=BZERO;/* TURN ONLINE BIT OFF   2106 07485000
*                                                            @Y30LB03*/ 07486000
         L     @12,UCBPTR                                          2106 07487000
         NI    UCBONLI(@12),B'01111111'                            2106 07488000
*                           WTOMCS03=MESGS(MSG30201);/* FILL WTO   2107 07489000
*                                      BUFFER                @Z40LB01*/ 07490000
         MVI   WTOMCS03+72,C' '                                    2107 07491000
         L     @12,@CA02101                                        2107 07492000
         MVC   WTOMCS03(72),MESGS-MSGS+2432(@12)                   2107 07493000
*                           WTOMCS03(21:23)='OFF';/* SET UP WTO    2108 07494000
*                                      MESSAGE               @Z40LB01*/ 07495000
         MVC   WTOMCS03+20(3),@CC02869                             2108 07496000
*                           WTOMCS03(13:15)=RU;/*            @Z40LB01*/ 07497000
         L     @12,CWBVREF                                         2109 07498000
         MVC   WTOMCS03+12(3),RU(@12)                              2109 07499000
*                         END;      /*                       @Y30LB03*/ 07500000
*                       ELSE        /* CANCEL IT             @Y30LB03*/ 07501000
*                         BRSWTCH=F1;/* TURN BRCH SWITCH BACK ON   2111 07502000
*                                                            @Y30LB03   07503000
*                                      SINCE NO WTO MESSAGE  @Y30LB03*/ 07504000
         B     @RC02098                                            2111 07505000
@RF02098 MVI   BRSWTCH,X'01'                                       2111 07506000
*                     END;          /*                       @Y30LB03*/ 07507000
@RC02098 DS    0H                                                  2113 07508000
*                 END;              /*                       @Y30LB03*/ 07509000
@RF02089 DS    0H                                                  2114 07510000
*             END;                  /*                       @Y30LB03*/ 07511000
@RC02038 DS    0H                                                  2115 07512000
*/*   IS SMF AVAILABLE AND SHOULD SMF SUBRTN BE CALLED ?     @Y30LB03*/ 07513000
*                                                                  2115 07514000
*           IF((CVTSMCA^=F0)&(OFFRPLY^='CANCEL')) THEN/*     @Y30LB03*/ 07515000
@RC02023 L     @12,CVTPTR                                          2115 07516000
         L     @12,CVTSMCA(,@12)                                   2115 07517000
         LTR   @12,@12                                             2115 07518000
         BZ    @RF02115                                            2115 07519000
         CLC   OFFRPLY(6),@CC02995                                 2115 07520000
         BE    @RF02115                                            2115 07521000
*             DO;                   /* YES,                  @Y30LB03*/ 07522000
*               RFY                                                2117 07523000
*                 R1 RSTD;          /*                       @G24LB02*/ 07524000
*               IF ONOFF='ON' THEN  /*                       @G24LB02*/ 07525000
         CLC   ONOFF(2),@CC02863                                   2118 07526000
         BNE   @RF02118                                            2118 07527000
*                 R1=SMF09PTR;      /* R1 POINTS TO REC 9 DATA     2119 07528000
*                                                            @G24LB02*/ 07529000
         L     R1,SMF09PTR                                         2119 07530000
*               ELSE                /*                       @G24LB02*/ 07531000
*                 R1=SMF11PTR;      /* R1 POINTS TO REC 11 DATA    2120 07532000
*                                                            @G24LB02*/ 07533000
         B     @RC02118                                            2120 07534000
@RF02118 L     R1,SMF11PTR                                         2120 07535000
*               CALL ICBMSG83;      /* CALL SMF SUBRTN       @Y30LB03*/ 07536000
@RC02118 BAL   @14,ICBMSG83                                        2121 07537000
*               RFY                                                2122 07538000
*                 R1 UNRSTD;        /*                       @G24LB02*/ 07539000
*             END;                  /*                       @Y30LB03*/ 07540000
*         END;                      /*                       @Y30LB03*/ 07541000
@RF02115 DS    0H                                                  2125 07542000
*     END;                          /*                       @Y30LB03*/ 07543000
@RC02011 DS    0H                                                  2126 07544000
*   RFY                                                            2126 07545000
*     R14 RSTD;                     /*                       @G24LB02*/ 07546000
@RF02007 DS    0H                                                  2127 07547000
*   R14=SAVR1449;                   /*                       @Y30LB03*/ 07548000
         L     R14,SAVR1449                                        2127 07549000
*   RFY                                                            2128 07550000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 07551000
*   RETURN;                         /* RTN TO CALLER         @Y30LB03*/ 07552000
@EL00023 DS    0H                                                  2129 07553000
@EF00023 DS    0H                                                  2129 07554000
@ER00023 BR    @14                                                 2129 07555000
*   END ICBMSG49;                   /*                       @Y30LB03*/ 07556000
*                                                                  2131 07557000
*/*********************************************************  @Y30LB03*/ 07558000
*/*  START OF SPECIFICATIONS ****                             @Y30LB03  07559000
*                                                             @Y30LB03  07560000
*01*  MODULE-NAME = ICBMSG50                                  @Y30LB03  07561000
*                                                             @Y30LB03  07562000
*01*  DESCRIPTIVE-NAME = MSS ACTIVITY UPDATE SUBROUTINE       @Y30LB03  07563000
*                                                             @Y30LB03  07564000
*01*  FUNCTION = INITIALIZE/UPDATE MSS ACTIVITY TABLES        @Y30LB03  07565000
*           AND PROVIDE UPDATED ACTIVITY INFORMATION TO JES3  @G18MB04  07566000
*                                                             @Y30LB03  07567000
*01*  NOTES = IF THE ACTIVITY BUFFER CANNOT BE INITIALIZED,   @Y30LB03  07568000
*             NO CODE USING THE BUFFER WILL ABEND. HOWEVER,   @Y30LB03  07569000
*             MOUNT EQUALIZATION OPTIMIZATION WILL BE LOST    @Y30LB03  07570000
*             UNTIL THE NEXT TIMED UPDATE.                    @Y30LB03  07571000
*             THE CODE PROGRESSIVLY INITIALIZES THE ACTIVITY  @Y30LB03  07572000
*             BUFFER FIRST WITH BINARY ZEROS, THEN WITH       @Y30LB03  07573000
*             STATIC SDG00 TO SDG27, THEN WITH MSS ACTIVITY   @ZM31027  07574000
*             TABLES. WHEN FAILURE OF CODE IS ENCOUNTERED,    @Y30LB03  07575000
*             THE STAE REENTRY IS SET SO NO UPDATE IS MADE    @Y30LB03  07576000
*             AND THE PREVIOUS LEVEL OF MOUNT EQUALIZATION    @Y30LB03  07577000
*             SORT IS RETAINED. THE STAE RETRY ALWAYS         @Y30LB03  07578000
*             ATTEMPTS TO REESTABLISH THE TIMER ELEMENT FOR   @Y30LB03  07579000
*             UPDATING THE ACTIVITY BUFFER.                   @Y30LB03  07580000
*             THE INITIAL STATE OF THE ACTIVITY BUFFER IS NOT @G18MB04  07581000
*             SENT TO JES3 BECAUSE THE MESSAGE TASK           @G18MB04  07582000
*             INITIALIZATION OCCURS BEFORE JES3 IS STARTED.   @G18MB04  07583000
*                                                             @Y30LB03  07584000
*02*  PURPOSE = TO INITIALIZE AND UPDATE THE MSS ACTIVITY     @Y30LB03  07585000
*               TABLES THAT ARE USED BY ALLOCATION.  THE      @Y30LB03  07586000
*               FIRST ENTRY TO THE SUBROUTINE CAUSES THE      @Y30LB03  07587000
*               TABLE INITIALIZATION BESIDES NORMAL ACTIVITY  @Y30LB03  07588000
*               PROCESSING.  FOR NORMAL PROCESSING,           @Y30LB03  07589000
*               INFORMATION FOR UPDATING THE TABLES IS READ   @Y30LB03  07590000
*               VIA THE ICBQUERY MACRO TO THE MSC AND THE     @ZA08838  07591000
*               TABLES ARE SORTED. A TIMER INTERRUPT          @Y30LB03  07592000
*               ELEMENT (STIMER MACRO) IS ESTABLISHED         @Y30LB03  07593000
*               SPECIFYING AN ASYNCHRONOUS TIMER              @Y30LB03  07594000
*               INTERRUPT ROUTINE (ICB2ACT) WHICH WILL        @Y30LB03  07595000
*               BE USED TO POST THE ACTIVITY ECB (ONE         @Y30LB03  07596000
*               OF THE ECBS IN THE ECB LIST THAT THE          @Y30LB03  07597000
*               MESSAGE TASK IS WAITING ON).                  @Y30LB03  07598000
*               AFTER SORTING THE LIST, AND BEFORE REPLACING  @G18MB04  07599000
*               THE NUMERICAL INDEX CALCULATED FOR SORTING BY @G18MB04  07600000
*               THE BLANKS OF THE UNIT NAME FIELD IN EACH     @G18MB04  07601000
*               ENTRY, THE MESSAGE TASK FINDS THE ADDRESS OF  @G18MB04  07602000
*               THE FIRST STAGING DRIVE GROUP ENTRY FOR WHICH @G18MB04  07603000
*               LRU ACTIVITY HAD OCCURRED SINCE THE LAST      @G18MB04  07604000
*               UPDATE OF THE LIST.                           @G18MB04  07605000
*               AFTER THE UNIT NAMES ARE COMPLETED, ICBMSG50  @G18MB04  07606000
*               FILLS IN CONTROL BLOCK NECESSARY TO PASS THE  @G18MB04  07607000
*               LIST TO THE APPROPRIATE JES3 FUNCTION, BY     @G18MB04  07608000
*               THE SUBSYSTEM INTERFACE FUNCTION IN VS/2.     @G18MB04  07609000
*               WHEN ICBMSG50 RECEIVES CONTROL BACK, IT       @G18MB04  07610000
*               OBTAINS LOCKS FOR SERIALIZATION OF THE        @G18MB04  07611000
*               UPDATE OF THE MASTER LIST, AND COPIES THE     @G18MB04  07612000
*               SORTED STAGING DRIVE GROUP LIST INTO THE      @G18MB04  07613000
*               BUFFER WHICH IS THE MASTER COPY OF THE LIST.  @G18MB04  07614000
*                                                             @Y30LB03  07615000
*02*    INPUT = NONE                                          @Y30LB03  07616000
*                                                             @Y30LB03  07617000
*02*    OUTPUT = INITIALIZED/UPDATED MSS ACTIVITY TABLES      @Y30LB03  07618000
*                TO JES3, COPY OF LIST WITH ADDRESS OF FIRST  @G18MB04  07619000
*                STAGING DRIVE GROUP FOR WHICH LRU ACTIVITY   @G18MB04  07620000
*                HAD OCCURRED SINCE THE LAST UPDATE           @G18MB04  07621000
*                                                             @Y30LB03  07622000
**** END OF SPECIFICATIONS **                                @Y30LB03*/ 07623000
*                                                                  2131 07624000
*ICBMSG50:                                                         2131 07625000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB03*/ 07626000
ICBMSG50 DS    0H                                                  2132 07627000
*/*  ****************************************************    @Y30LB03*/ 07628000
*/*                                                          @Y30LB03*/ 07629000
*/*      FORMAT OF STAGING DRIVE GROUP DATA                  @Y30LB03*/ 07630000
*/*      RECEIVED FROM ICBQUERY COMMAND TO MSC               @ZA08838*/ 07631000
*/*                                                          @Y30LB03*/ 07632000
*/*  ****************************************************    @Y30LB03*/ 07633000
*                                                                  2132 07634000
*   DCL                                                            2132 07635000
*     1 ACTWKBUF BDY(WORD) BASED(ADDR(BUFFER)),/* BUFFER     @Y30LB03*/ 07636000
*      2 ACTENT1(28) CHAR(4) BDY(WORD),/* FIRST PART         @Y30LB03*/ 07637000
*       3 * CHAR(1),                /* FILLER                @Y30LB03*/ 07638000
*       3 AVL FIXED(8),             /* AVAIL STAGE SPINDLES  @Y30LB03*/ 07639000
*       3 MV FIXED(16),             /* #MNTD VOLS THIS GROUP @Y30LB03*/ 07640000
*      2 ACTFIL CHAR(16),           /* FILLER                @ZA13483*/ 07641000
*      2 ACTENT2(28) CHAR(4) BDY(WORD),/* SECOND PART        @Y30LB03*/ 07642000
*       3 LRU FIXED(8),             /* LRU COUNT THIS GROUP  @Y30LB03*/ 07643000
*       3 CAP FIXED(8),             /* SYSGEN STAGE SPINDLES @Y30LB03*/ 07644000
*       3 UA FIXED(16);             /* VUAS SYSGEND THIS           2132 07645000
*                                      GROUP@Y30LB03                 */ 07646000
*   DCL                                                            2133 07647000
*     LRUIX(30) FIXED(8);           /* PREVIOUS LRU COUNT    @ZA00671*/ 07648000
*   DCL                                                            2134 07649000
*     MAX CONSTANT(1048576);        /* MAXIMUM VALUE         @ZA00671*/ 07650000
*   DCL                                                            2135 07651000
*     LRUED CONSTANT(1048576);      /* LRU ED VALUE          @ZA00671*/ 07652000
*   DCL                                                            2136 07653000
*     PREC CONSTANT(100);           /* PRECISION             @ZA00671*/ 07654000
*   DCL                                                            2137 07655000
*     F1024 FIXED(24) CONSTANT(1024);/* CONSTANT 1024        @Y30LB03*/ 07656000
*/*********************************************************  @Y30LB03*/ 07657000
*/*  CONSTANT TABLE                                          @Y30LB03*/ 07658000
*/*********************************************************  @Y30LB03*/ 07659000
*                                                                  2138 07660000
*   DCL                                                            2138 07661000
*     CONST(30) CHAR(2) INIT('00','01','02','03','04','05',/*      2138 07662000
*                                                            @Y30LB03*/ 07663000
*         '06','07','08','09','10','11','12','13','14','15','16',/*     07664000
*                                                            @Y30LB03*/ 07665000
*         '17','18','19','20','21','22','23','24','25','26',/*     2138 07666000
*                                                            @Y30LB03*/ 07667000
*         '27','28','29');          /*                       @Y30LB03*/ 07668000
*/*********************************************************  @ZA08838*/ 07669000
*/* FORMAT OF STAGING DRIVE GROUP LIST IN OPERATING SYSTEM   @ZA08838*/ 07670000
*/*********************************************************  @ZA08838*/ 07671000
*/***********************************************************@G18MB04*/ 07672000
*/*   MACCOMP        @G18MB04    SC1DP/BL0019                @G18MB04*/ 07673000
*/*   MACSTAT        @G18MB04    75.344                      @G18MB04*/ 07674000
*/*                                                          @G18MB04*/ 07675000
*/*           ***** MAPPING MACRO *****                      @G18MB04*/ 07676000
*/*                                                          @G18MB04*/ 07677000
*/*   NAME    SDGLS     MSSC STAGING DRIVE GROUP LIST        @G18MB04*/ 07678000
*/*                                                          @G18MB04*/ 07679000
*/*  FUNCTION -  THIS IS A LIST OF UNIT NAMES, ONE FOR EACH  @G18MB04*/ 07680000
*/*           POSSIBLE STAGING DRIVE GROUP THAT COULD EXIST  @G18MB04*/ 07681000
*/*           IN A MASS STORAGE SYSTEM.                      @G18MB04*/ 07682000
*/*           THESE ARE SORTED IN ORDER OF BEST CHOICE       @G18MB04*/ 07683000
*/*           (LEAST BUSY) TO WORST CHOICE.                  @G18MB04*/ 07684000
*/*                                                          @G18MB04*/ 07685000
*/*   STATUS - CHANGE LEVEL = 0                              @G18MB04*/ 07686000
*/*                                                          @G18MB04*/ 07687000
*/***********************************************************@G18MB04*/ 07688000
*                                                                  2139 07689000
*   DCL                                                            2139 07690000
*     1 SDGLS BASED,                /* STAGING DRIVE GROUP LIST    2139 07691000
*                                                            @G18MB04*/ 07692000
*      2 SDGNNBBB(30) CHAR(8),      /* UNIT NAMES FOR SDGS   @G18MB04*/ 07693000
*       3 SDG CHAR(3),              /* EBCDIC LITERALS SDG   @G18MB04*/ 07694000
*       3 SDGNN CHAR(2),            /* EBCDIC NUMBER OF SDG  @G18MB04*/ 07695000
*       3 SDGBBB CHAR(3),           /* EBCDIC BLANKS         @G18MB04*/ 07696000
*        4 SDGIX FIXED(24);         /* FOR USE IN MSSC SORT  @G18MB04*/ 07697000
*   DCL                                                            2140 07698000
*     SDGSLEN CONSTANT(240);        /* LENGTH OF SDGLS       @SDGSDGS*/ 07699000
*/*                                                                  */ 07700000
*/********************************************************************/ 07701000
*/*                                                                  */ 07702000
*/*       SUBSYSTEM OPTIONS BLOCK (SSOB)                             */ 07703000
*/*                                                                  */ 07704000
*/********************************************************************/ 07705000
*/*                                                                  */ 07706000
*/*        ***** LAST UPDATE = DECEMBER 21, 1976 ******      @ZM44655*/ 07707000
*/*                                                                  */ 07708000
*/*   STATUS - VS2 SU 16 - IN THIS MACRO, SU 16 SUPPORTS     @G16APPK*/ 07709000
*/*            JES3-MSS (SU 18 - @G18MP21) AND VPSS          @G16APPK*/ 07710000
*/*            SUPPORT (SU 29 - @G29AN2F).                   @G16APPK*/ 07711000
*/*                                                                  */ 07712000
*/*   THE SSOB IS USED TO REQUEST A PARTICULAR FUNCTION FROM         */ 07713000
*/*   A VS/2 SUBSYSTEM.  THE FORMAT OF THIS CONTROL BLOCK IS A FIXED */ 07714000
*/*   LENGTH HEADER SECTION WHICH POINTS TO A FUNCTION DEPENDENT     */ 07715000
*/*   SECTION.                                                       */ 07716000
*/*                                                                  */ 07717000
*/*   THE PARTICULAR FUNCTION REQUESTED IS INDICATED BY A FUNCTION   */ 07718000
*/*   ID IN THE HEADER.  PLS/2 CONSTANTS DEFINE THE VARIOUS ID'S.    */ 07719000
*/*                                                                  */ 07720000
*/*   MACRO VARIABLES ARE DEFINED TO CONTROL THE GENERATION OF THE   */ 07721000
*/*   SSOB HEADER AND THE FUNCTION DEPENDENT SECTIONS.               */ 07722000
*/*   TO OBTAIN THE HEADER, SET THE VARIABLE 'SSOBSSOB' TO ANY NON-  */ 07723000
*/*   NULL/BLANK CHARACTER, E.G., %SSOBSSOB = 'BASED'.               */ 07724000
*/*   THIS VALUE WILL BE USED TO ASSIGN ATTRIBUTES TO THE SSOB.      */ 07725000
*/*   %SSOBSSOB = 'BDY(WORD)' WILL CAUSE PL/S TO GET                 */ 07726000
*/*   STORAGE FOR THE SSOB. THE ATTRIBUTES OF THE FUNCTION           */ 07727000
*/*   DEPENDENT SECTIONS ARE SIMILARLY SET.                          */ 07728000
*/*                                                                  */ 07729000
*/*   CONSTANTS DEFINING THE POSSIBLE VALUES OF SSOBRETN ARE         */ 07730000
*/*   GENERATED WITH EACH FUNCTION DEPENDENT SECTION THE             */ 07731000
*/*   VARIABLES WHICH CAN BE SET TO OBTAIN THE FUNCTION DEPENDENT    */ 07732000
*/*   SECTIONS ARE -                                                 */ 07733000
*/*                                                                  */ 07734000
*/*       SSOBSO - ACCESS SYSOUT DATA SETS                           */ 07735000
*/*       SSOBCS - FIND THE STATUS OF A JOB, OR CANCEL A JOB         */ 07736000
*/*                %CSARAYSZ DEFINES THE SIZE OF THE C/S ARRAY       */ 07737000
*/*                -SET %CSARAYSZ='*' IF THE C/S EXTENSION IS        */ 07738000
*/*                 MAPPING STORAGE.                                 */ 07739000
*/*                -SET %CSARAYSZ TO THE ACTUAL ARRAY SIZE IF        */ 07740000
*/*                 PLS IS GETTING STORAGE.                          */ 07741000
*/*       SSOBJS - SUBSYSTEM JOB SELECTION                           */ 07742000
*/*       SSOBAL - ALLOCATION/UNALLOCATION OF SYSOUT DATA SETS       */ 07743000
*/*       SSOBEN - NOTIFY SUBSYSTEM OF END OF MEMORY                 */ 07744000
*/*       SSOBET - NOTIFY SUBSYSTEM OF END OF TASK                   */ 07745000
*/*       SSOBWT - NOTIFY SUBSYSTEM OF A WRITE TO OPERATOR           */ 07746000
*/*       SSOBCM - NOTIFY SUBSYSTEM OF AN OPERATOR COMMAND           */ 07747000
*/*       SSOBUS - REQUEST SUBSYSTEM TO VERIFY A REMOTE DESTINATION  */ 07748000
*/*       SSOBJT - NOTIFY SUBSYSTEM OF JOB TERMINATION               */ 07749000
*/*       SSOBRQ - REQUEST SUBSYSTEM TO RE-ENQUEUE A JOB             */ 07750000
*/*       SSOBDM - REQUEST SUBSYSTEM TO DELETE OPERATOR MESSAGE      */ 07751000
*/*       SSOBVS - REQUEST (MSTR) SUBSYSTEM TO VERIFY SUBSYSTEM NAME */ 07752000
*/*       SSOBDA - OPEN/CLOSE/CHECKPOINT RESTART                     */ 07753000
*/*       SSOBRR - REQUEST/RETURN JOBID                              */ 07754000
*/*       SSOBCF - FAILING SVC34 COMMAND                     @Z30BPSV*/ 07755000
*/*       SSOBSI - NOTIFY SUBSYSTEM OF STEP INITIATION       @Y02BPSD*/ 07756000
*/*       SSOBDY - DYNAMIC ALLOCATION/JES3 EXIT              @Y02BPSD*/ 07757000
*/*       SSOBCA - COMMON ALLOCATION/JES3 EXIT               @Y02BPSD*/ 07758000
*/*       SSOBCU - COMMON UNALLOCATION/JES3 EXIT             @Y02BPSD*/ 07759000
*/*       SSOBDD - CHANGE DDNAME/JES3 EXIT                   @Y02BPSD*/ 07760000
*/*       SSOBNQ - CHANGE ENQ USE ATTRIBUTE/JES3 EXIT        @Y02BPSD*/ 07761000
*/*       SSOBDR - DYNAMIC DEVICE RECONFIGURATION/JES3 EXIT  @Y02BPSD*/ 07762000
*/*       SSOBMO - MASS STORAGE VOLUME CONTROL JES3 EXIT     @G18MP21*/ 07763000
*/*       SSOBMS - MSSC MESSAGE TASK JES3 EXIT               @G18MP21*/ 07764000
*/*       SSOBCI - CONVERTER SUBSYS KEYWORD EXIT             @G29AN2F*/ 07765000
*/*       SSOBAG - ALLOCATION GROUP SUBSYSTEM REQUESTS       @G29AN2F*/ 07766000
*/*                                                                  */ 07767000
*/*                                                                  */ 07768000
*/* ******************************************************************/ 07769000
*                                                                  2141 07770000
*                                                                  2141 07771000
*/********************************************************************/ 07772000
*/*                                                                  */ 07773000
*/* THE COMMON FIXED-LENGTH SSOB HEADER                              */ 07774000
*/*                                                                  */ 07775000
*/********************************************************************/ 07776000
*                                                                  2141 07777000
*   DECLARE                                                        2141 07778000
*     1 SSOB BASED,                 /* SSOB FIXED-LENGTH HEADER      */ 07779000
*      2 SSOBID CHAR(4),            /* 'SSOB' = CNTL BLOCK IDENT.    */ 07780000
*      2 SSOBLEN FIXED(15),         /* LENGTH OF SSOB HEADER         */ 07781000
*      2 SSOBFUNC FIXED(15),        /* FUNCTION ID - SEE PLS       2141 07782000
*                                      CONSTANTS FOR THESE VALUES    */ 07783000
*      2 SSOBSSIB PTR(31),          /* ADDRESS OF SSIB, WHICH      2141 07784000
*                                      CONTAINS SUBSYSTEM NAME, OR 2141 07785000
*                                      ZERO                          */ 07786000
*      2 SSOBRETN PTR(31),          /* RETURN CODE FROM SUBSYSTEM    */ 07787000
*      2 SSOBINDV PTR(31);          /* POINTER TO INDIVIDUAL       2141 07788000
*                                      FUNCTIONAL DEPENDENT AREA     */ 07789000
*/********************************************************************/ 07790000
*/*                                                                  */ 07791000
*/*  THE FOLLOWING RETURN CODES WILL BE RETURNED IN REGISTER 15      */ 07792000
*/*  TO THE ISSUER OF THE IEFSSREQ MACRO -                           */ 07793000
*/*                                                                  */ 07794000
*/*  SSOBRETN CONTAINS FUNCTION-RELATED RETURN CODES                 */ 07795000
*/*    (DEFINED IN EACH FUNCTION EXTENSION)                          */ 07796000
*/*                                                                  */ 07797000
*/********************************************************************/ 07798000
*                                                                  2142 07799000
*   DCL                                                            2142 07800000
*     SSRTOK FIXED(31) CONSTANT(0); /* SUCCESSFUL COMPLETION -     2142 07801000
*                                      REQUEST WENT TO A SUBSYSTEM   */ 07802000
*   DCL                                                            2143 07803000
*     SSRTNSUP FIXED(31) CONSTANT(4);/* SUBSYSTEM DOES NOT SUPPORT 2143 07804000
*                                      THIS FUNCTION                 */ 07805000
*   DCL                                                            2144 07806000
*     SSRTNTUP FIXED(31) CONSTANT(8);/* SUBSYSTEM EXISTS, BUT IS NOT    07807000
*                                      UP                            */ 07808000
*   DCL                                                            2145 07809000
*     SSRTNOSS FIXED(31) CONSTANT(12);/* SUBSYSTEM DOES NOT EXIST    */ 07810000
*   DCL                                                            2146 07811000
*     SSRTDIST FIXED(31) CONSTANT(16);/* FUNCTION NOT COMPLETED -  2146 07812000
*                                      DISASTROUS ERROR              */ 07813000
*   DCL                                                            2147 07814000
*     SSRTLERR FIXED(31) CONSTANT(20);/* LOGICAL ERROR (I.E. BAD SSOB   07815000
*                                      FORMAT, LENGTH...             */ 07816000
*/********************************************************************/ 07817000
*                                                                  2148 07818000
*                                                                  2148 07819000
*/********************************************************************/ 07820000
*/*                                                                  */ 07821000
*/*   MSSC MESSAGE TASK JES3 EXIT                                    */ 07822000
*/*                                                                  */ 07823000
*/********************************************************************/ 07824000
*                                                                  2148 07825000
*   /*****************************************************************/ 07826000
*   /*                                                               */ 07827000
*   /* FUNCTION IDS (SSOBFUNC)                                       */ 07828000
*   /*                                                               */ 07829000
*   /*****************************************************************/ 07830000
*                                                                  2148 07831000
*   DCL                                                            2148 07832000
*     SSOBMSSC FIXED(15) CONSTANT(36);/* MSSC MESSAGE TASK   @G18MP21*/ 07833000
*                                                                  2148 07834000
*   /*****************************************************************/ 07835000
*   /*                                                               */ 07836000
*   /* NO MSSC MESSAGE TASK RETURN CODES                             */ 07837000
*   /*                                                               */ 07838000
*   /*****************************************************************/ 07839000
*                                                                  2149 07840000
*/*     S S M S                                              @G18MP21*/ 07841000
*                                                                  2149 07842000
*   DECLARE                                                        2149 07843000
*     1 SSMS BASED,                 /*                       @G18MP21*/ 07844000
*      2 SSMSLEN FIXED(15),         /* LENGTH OF SSMS        @G18MP21*/ 07845000
*      2 SSMSRV0 FIXED(15),         /* RESERVED              @G18MP21*/ 07846000
*      2 SSMSPSDG PTR(31),          /* POINTER TO THE SORTED SDG LIST   07847000
*                                                            @G18MP21*/ 07848000
*      2 SSMSPLRU PTR(31);          /* POINTER TO FIRST SDG WITH LRU    07849000
*                                                            @G18MP21*/ 07850000
*/*                                                                  */ 07851000
*/*  SUBSYSTEM IDENTIFICATION BLOCK (SSIB)                           */ 07852000
*/*                                                                  */ 07853000
*/*      -IDENTIFIES THE SUBSYSTEM TO WHICH A REQUEST FOR SERVICES   */ 07854000
*/*       IS BEING MADE                                              */ 07855000
*/*                                                                  */ 07856000
*/*      -CONTAINS COMMON CONTROL INFORMATION PASSED BETWEEN THE     */ 07857000
*/*       REQUESTOR AND THE SUBSYSTEM                                */ 07858000
*/*                                                                  */ 07859000
*                                                                  2150 07860000
*   DCL                                                            2150 07861000
*     1 SSIB BASED(SSIBPTR),                                       2150 07862000
*      2 SSIBID CHAR(4),            /* CONTROL BLOCK ID='SSIB'       */ 07863000
*      2 SSIBLEN FIXED(15),         /* SSIB LENGTH                   */ 07864000
*      2 SSIBFLG1 BIT(8),           /* FLAGS                         */ 07865000
*       3 SSIBPJES BIT(1),          /* THIS SSIB IS USED TO START THE   07866000
*                                      PRIMARY JOB ENTRY SUBSYSTEM   */ 07867000
*       3 * BIT(7),                 /* RESERVED FLAGS                */ 07868000
*      2 SSIBRESV CHAR(1),          /* RESERVED                      */ 07869000
*      2 SSIBSSNM CHAR(4),          /* SUBSYSTEM NAME                */ 07870000
*      2 SSIBJBID CHAR(8),          /* JOB IDENTIFIER                */ 07871000
*      2 SSIBDEST CHAR(8),          /* DEFAULT USERID FOR SYSOUT   2150 07872000
*                                      DESTINATION                   */ 07873000
*      2 SSIBRSV1 FIXED(31),        /* RESERVED                      */ 07874000
*      2 SSIBSUSE PTR(31);          /* RESERVED FOR SUBSYSTEM USAGE  */ 07875000
*/*                                                                  */ 07876000
*/* MACMEAN JESCT MEANS JOB ENTRY SUBSYSTEM COMMUNICATION TABLE      */ 07877000
*/* MACCOMP Y-2 SC1B8/PZD02                                  @G16APPK*/ 07878000
*/* MACSTAT Y-2 76323/G16APPK                                @G16APPK*/ 07879000
*/*                                                                  */ 07880000
*/* STATUS - VS2 SU 16 - IN THIS MACRO, SU 16 SUPPORTS       @G16APPK*/ 07881000
*/*          VPSS SUPPORT (SU29 - @G29AN2F).                 @G16APPK*/ 07882000
*/*                                                                  */ 07883000
*                                                                  2151 07884000
*   DECLARE                                                        2151 07885000
*     1 JESCT BASED(CVTJESCT),                                     2151 07886000
*                                                                  2151 07887000
*/*                                                                  */ 07888000
*                                                                  2151 07889000
*      2 * CHAR(4),                 /* RESERVED                      */ 07890000
*      2 JESUNITS PTR(31),          /* POINTER TO UCB'S Y02668       */ 07891000
*      2 JESWAA PTR(31),            /* ADDRESS OF SWA MANAGER -    2151 07892000
*                                      LOCATE MODE Y02668            */ 07893000
*      2 JESQMGR PTR(31),           /* ADDRESS OF SWA MANAGER MOVE -    07894000
*                                      MODE Y02668                   */ 07895000
*      2 JESRESQM PTR(31),          /* ENTRY POINT USED TO INTERFACE    07896000
*                                      BETWEEN THE QMNGRIO MACRO AND    07897000
*                                      THE RESIDENT SWA MANAGER    2151 07898000
*                                      Y02668                        */ 07899000
*      2 JESSSREQ PTR(31),          /* ADDRESS OF THE IEFSSREQ     2151 07900000
*                                      ROUTINE Y02668                */ 07901000
*      2 JESSSCT PTR(31),           /* ADDRESS OF THE FIRST SUBSYSTEM   07902000
*                                      COMMUNICATIONS TABLE Y02668   */ 07903000
*      2 JESPJESN CHAR(4),          /* NAME OF PRIMARY JOB ENTRY   2151 07904000
*                                      SUBSYSTEM SET AT SYSGEN Y02668*/ 07905000
*      2 JESALLOC PTR(31),          /* DEVICE ALLOCATION ENTRY POINT    07906000
*                                      USED BY INITIATOR     @Z40FPPJ*/ 07907000
*      2 JESUNALC PTR(31),          /* DEVICE UNALLOCATION ENTRY   2151 07908000
*                                      POINT USED BY INITIATOR     2151 07909000
*                                                            @Z40FPPJ*/ 07910000
*      2 JESCATL PTR(31),           /* DEVICE ALLOCATION PRIVATE   2151 07911000
*                                      CATALOG ENTRY POINT USED BY 2151 07912000
*                                      INITIATOR             @Z40FPPJ*/ 07913000
*      2 JESNUCBS FIXED(31),        /* NUMBER OF UCB'S IN THE SYSTEM.   07914000
*                                      USED BY DEVICE ALLOCATION   2151 07915000
*                                                            @Z40FPPJ*/ 07916000
*      2 JESSASTA PTR(31);          /* ADDRESS OF SUBSYSTEM        2151 07917000
*                                      ALLOCATION SEQUENCE TABLE   2151 07918000
*                                                            @G29AN2F*/ 07919000
*                                                                  2151 07920000
*   /*****************************************************************/ 07921000
*   /*                                                               */ 07922000
*   /* TO CALL THE SWA MANAGER , USE THE SWAREQ MACRO. IT WILL ISSUE */ 07923000
*   /* A 'CALL SWAMGR'                                               */ 07924000
*   /*                                                               */ 07925000
*   /*****************************************************************/ 07926000
*                                                                  2152 07927000
*   DECLARE                                                        2152 07928000
*     SWAMGR ENTRY BASED(JESWAA);                                  2152 07929000
*                                                                  2152 07930000
*   /*****************************************************************/ 07931000
*   /*                                                               */ 07932000
*   /* TO CALL THE SUBSYSTEM, USE THE IEFSSREQ MACRO. IT WILL ISSUE A*/ 07933000
*   /* 'CALL SSREQ'                                                  */ 07934000
*   /*                                                               */ 07935000
*   /*****************************************************************/ 07936000
*                                                                  2153 07937000
*   DECLARE                                                        2153 07938000
*     SSREQ ENTRY BASED(JESSSREQ) OPTIONS(VLIST);                  2153 07939000
*   DECLARE                                                        2154 07940000
*     IEFW21SD ENTRY BASED(JESALLOC);/* TO ENTER ALLOCATION ISSUE  2154 07941000
*                                      CALL IEFW21SD.        @Z40FPPJ*/ 07942000
*   DECLARE                                                        2155 07943000
*     IEFBB410 ENTRY BASED(JESUNALC);/* TO ENTER UNALLOCATION ISSUE     07944000
*                                      CALL IEFBB410.        @Z40FPPJ*/ 07945000
*   DECLARE                                                        2156 07946000
*     IEFAB4F5 ENTRY BASED(JESCATL);/* TO ENTER PRIVATE CATALOG    2156 07947000
*                                      ALLOCATION ISSUE CALL IEFAB4F5   07948000
*                                                            @Z40FPPJ*/ 07949000
*/*********************************************************  @G18MB04*/ 07950000
*/* FORMAT OF STORAGE USED TO FIND FIRST SDG IN RE-SORTED    @G18MB04*/ 07951000
*/* LIST THAT HAD LRU ACTIVITY SINCE LAST SORT OF LIST       @G18MB04*/ 07952000
*/* AND STORAGE TO USE SUBSYSTEM INTERFACE TO GIVE JES3      @G18MB04*/ 07953000
*/* THE SORTED LIST AND ADDRESS OF FIRST SDG WITH LRU        @G18MB04*/ 07954000
*/*********************************************************  @G18MB04*/ 07955000
*                                                                  2157 07956000
*   DCL                                                            2157 07957000
*     1 LRUSTGE,                    /*                       @G18MB04*/ 07958000
*      2 LRULIST,                   /* WILL SAVE EACH NN THAT HAD LRU   07959000
*                                      HERE                  @G18MB04*/ 07960000
*       3 LRUEDNN(28) CHAR(2),      /*                       @G18MB04*/ 07961000
*      2 LRUSSIB CHAR(LENGTH(SSIB)),/* SUBSYS INTERFACE BLOCK      2157 07962000
*                                                            @G18MB04*/ 07963000
*      2 LRUSSOB CHAR(LENGTH(SSOB)),/* SUBSYS OPTIONS BLOCK  @G18MB04*/ 07964000
*      2 LRUSSMS CHAR(LENGTH(SSMS)),/* MSSC EXTENSION OF IT  @G18MB04*/ 07965000
*      2 LRUREGS(18) PTR(31),       /* REGSAVE AREA FOR SUBSYSTEM  2157 07966000
*                                                            @G18MB04*/ 07967000
*      2 LRUCOUNT FIXED(16);        /* COUNT OF LRUED SDGS THIS TIME    07968000
*                                                            @G18MB04*/ 07969000
*   RFY                                                            2158 07970000
*     SSOB BASED(ADDR(LRUSSOB));    /*                       @G18MB04*/ 07971000
*   RFY                                                            2159 07972000
*     SSIB BASED(ADDR(LRUSSIB));    /*                       @G18MB04*/ 07973000
*   RFY                                                            2160 07974000
*     SSMS BASED(ADDR(LRUSSMS));    /*                       @G18MB04*/ 07975000
*   DCL                                                            2161 07976000
*     CHARSSOB CHAR(4) INITIAL('SSOB');/* FOR SSOB ID        @G18MB04*/ 07977000
*   DCL                                                            2162 07978000
*     CHARSSIB CHAR(4) INITIAL('SSIB');/* SSIB ID            @G18MB04*/ 07979000
*   DCL                                                            2163 07980000
*     IXSDGL FIXED;                 /* INDEX TO SORTED SDG LIST    2163 07981000
*                                                            @G18MB04*/ 07982000
*   DCL                                                            2164 07983000
*     IXLRUNN FIXED;                /* INDEX TO LIST OF LRUED SDGS 2164 07984000
*                                                            @G18MB04*/ 07985000
*   DCL                                                            2165 07986000
*     SSIBPTR PTR(31);              /* FOR MAPPING MACRO OF SSIB   2165 07987000
*                                                            @G18MB04*/ 07988000
*/*********************************************************  #Y30LB03*/ 07989000
*/*  AWAX: MSSC ACTIVITY BUFFER (STAGING DRIVE GROUP LIST)   @ZA08838*/ 07990000
*/*********************************************************  @Y30LB03*/ 07991000
*                                                                  2166 07992000
*   DCL                                                            2166 07993000
*     AWAX CHAR(SDGSLEN) BASED(ICBOPT);/*                    @ZA08838*/ 07994000
*/*********************************************************  @Y30LB03*/ 07995000
*/* WORK BUFFER FOR SORTING STAGING DRIVE GROUPS             @Y30LB03*/ 07996000
*/*********************************************************  @Y30LB03*/ 07997000
*                                                                  2167 07998000
*   DCL                                                            2167 07999000
*     AWBX CHAR(SDGSLEN) BASED(ADDR(AWAX)+SDGSLEN);/*        @ZA08838*/ 08000000
*   RFY                                                            2168 08001000
*     SDGLS BASED(ADDR(AWBX));      /* MAP WORKING COPY      @ZA08838*/ 08002000
*/*********************************************************  @Y30LB03*/ 08003000
*                                                                  2169 08004000
*   DCL                                                            2169 08005000
*     1 SAVESDG,                    /* SAVE AREA FOR SORTING @ZM31027*/ 08006000
*      2 * CHAR(3),                 /*                       @Y30LB03*/ 08007000
*      2 * CHAR(2),                 /*                       @Y30LB03*/ 08008000
*      2 * FIXED(24);               /*                       @Y30LB03*/ 08009000
*/*********************************************************  @Y30LB03*/ 08010000
*                                                                  2170 08011000
*   DCL                                                            2170 08012000
*     MM CHAR(2);                   /* NUMBER MINUTES        @Y30LB03*/ 08013000
*   DCL                                                            2171 08014000
*     1 CONV1 FIXED(15),            /* WORK FIELD            @Y30LB03*/ 08015000
*      2 CONV2 CHAR(2);             /* WORK FIELD            @Y30LB03*/ 08016000
*   GENERATE DATA;                                                 2172 08017000
*   DCL                                                            2173 08018000
*     SIXTHOU FIXED(15) INIT(6000); /* CONST 6,000           @Y30LB03*/ 08019000
*   RFY                                                            2174 08020000
*     R14 RSTD;                     /*                       @G24LB02*/ 08021000
*   SAVR1450=R14;                   /*                       @Y30LB03*/ 08022000
         ST    R14,SAVR1450                                        2175 08023000
*   RFY                                                            2176 08024000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 08025000
*   IF FIRST=CHAR0 THEN             /* 1ST TIME ATN INTR?    @Y30LB03*/ 08026000
         CLI   FIRST,C'0'                                          2177 08027000
         BNE   @RF02177                                            2177 08028000
*     DO;                           /* YES,....              @Y30LB03*/ 08029000
*       AWAX=''B;                   /* SET TO BINARY ZEROS   @Y30LB03*/ 08030000
         L     @12,ICBPTR                                          2179 08031000
         L     @12,ICBOPT(,@12)                                    2179 08032000
         XC    AWAX(240,@12),AWAX(@12)                             2179 08033000
*       AWBX=''B;                   /* SET TO BINARY ZEROS   @Y30LB03*/ 08034000
         XC    AWBX+240(240,@12),AWBX+240(@12)                     2180 08035000
*       DO I=F1 TO F28;             /* INIT AWB WITH LITERAL & NO. 2181 08036000
*                                                            @Y30LB03*/ 08037000
         LA    @12,1                                               2181 08038000
         ST    @12,I                                               2181 08039000
@DL02181 DS    0H                                                  2182 08040000
*         SDG(I)='SDG';             /* ALL LIT FIELDS TO 'SDG'     2182 08041000
*                                                            @ZA08838*/ 08042000
         LR    @09,@12                                             2182 08043000
         SLA   @09,3                                               2182 08044000
         LA    @04,240                                             2182 08045000
         L     @01,ICBPTR                                          2182 08046000
         AL    @04,ICBOPT(,@01)                                    2182 08047000
         ST    @09,@TF00001                                        2182 08048000
         ALR   @09,@04                                             2182 08049000
         AL    @09,@CF03340                                        2182 08050000
         MVC   SDG(3,@09),@CC03136                                 2182 08051000
*         SDGNN(I)=CONST(I);        /* IX PER CONST TBL      @ZA08838*/ 08052000
         LR    @09,@04                                             2183 08053000
         AL    @09,@TF00001                                        2183 08054000
         AL    @09,@CF03341                                        2183 08055000
         LR    @15,@12                                             2183 08056000
         ALR   @15,@15                                             2183 08057000
         LA    @14,CONST-2(@15)                                    2183 08058000
         MVC   SDGNN-3(2,@09),0(@14)                               2183 08059000
*         SDGBBB(I)='   ';          /* BLANKS COMPLETE UNIT NAME   2184 08060000
*                                                            @ZA08838*/ 08061000
         AL    @04,@TF00001                                        2184 08062000
         AL    @04,@CF03331                                        2184 08063000
         MVC   SDGBBB-5(3,@04),@CC02356                            2184 08064000
*         LRUIX(I)=F0;              /* ZERO LAST LRU COUNT   @ZA08838*/ 08065000
         SLR   @09,@09                                             2185 08066000
         STC   @09,LRUIX-1(@12)                                    2185 08067000
*       END;                        /* END LOOP              @Y30LB03*/ 08068000
         AL    @12,@CF00117                                        2186 08069000
         ST    @12,I                                               2186 08070000
         C     @12,@CF02075                                        2186 08071000
         BNH   @DL02181                                            2186 08072000
*/********************************************************   @G18MB04*/ 08073000
*/*INITIALIZE STORAGE FOR SUBSYSTEM INTERFACE TO JES3        @G18MB04*/ 08074000
*/********************************************************   @G18MB04*/ 08075000
*                                                                  2187 08076000
*       LRUSTGE=LRUSTGE&&LRUSTGE;   /*                       @G18MB04*/ 08077000
         XC    LRUSTGE(198),LRUSTGE                                2187 08078000
*/* FILL IN SUBSYSTEM INTERFACE BLOCK CONSTANT FIELDS        @G18MB04*/ 08079000
*                                                                  2188 08080000
*       SSIBID=CHARSSIB;            /* ID OF LETTERS SSIB    @G18MB04*/ 08081000
         LA    @12,LRUSSIB                                         2188 08082000
         MVC   SSIBID(4,@12),CHARSSIB                              2188 08083000
*       SSIBLEN=LENGTH(SSIB);       /* ITS LENGTH            @G18MB04*/ 08084000
         LA    @09,36                                              2189 08085000
         STH   @09,SSIBLEN(,@12)                                   2189 08086000
*       SSIBSSNM=JESPJESN;          /* GET INSTALLATION-DEFINED    2190 08087000
*                                      SUBSYSTEM NAME        @G18MB04*/ 08088000
         L     @04,CVTPTR                                          2190 08089000
         L     @04,CVTJESCT(,@04)                                  2190 08090000
         MVC   SSIBSSNM(4,@12),JESPJESN(@04)                       2190 08091000
*/* FILL IN SUBSYSTEM OPTIONS BLOCK CONSTANT FIELDS          @G18MB04*/ 08092000
*                                                                  2191 08093000
*       SSOBID=CHARSSOB;            /* ID OF LETTERS SSOB    @G18MB04*/ 08094000
         LA    @04,LRUSSOB                                         2191 08095000
         MVC   SSOBID(4,@04),CHARSSOB                              2191 08096000
*       SSOBLEN=LENGTH(SSOB);       /* ITS LENGTH            @G18MB04*/ 08097000
         MVC   SSOBLEN(2,@04),@CH01407                             2192 08098000
*       SSOBFUNC=SSOBMSSC;          /* MSSC CALLING JES3 FUNCTION  2193 08099000
*                                                            @G18MB04*/ 08100000
         STH   @09,SSOBFUNC(,@04)                                  2193 08101000
*       SSOBINDV=ADDR(LRUSSMS);     /* SSOB EXTN ADDR INTO SSOB    2194 08102000
*                                                            @G18MB04*/ 08103000
         LA    @09,LRUSSMS                                         2194 08104000
         ST    @09,SSOBINDV(,@04)                                  2194 08105000
*       SSOBSSIB=ADDR(SSIB);        /* MUST PROVIDE SSIB     @G18MB04*/ 08106000
         ST    @12,SSOBSSIB(,@04)                                  2195 08107000
*/* FILL IN MSSC KIND OF SUBSYSTEM INTERFACE EXTENSION BLOCK @G18MB04*/ 08108000
*                                                                  2196 08109000
*       SSMSLEN=LENGTH(SSMS);       /* LENGTH OF THIS EXTENSION    2196 08110000
*                                                            @G18MB04*/ 08111000
         MVC   SSMSLEN(2,@09),@CH02050                             2196 08112000
*       SSMSPSDG=ADDR(AWBX);        /* WHERE THE SORTED SDG LIST IS     08113000
*                                                            @G18MB04*/ 08114000
         LA    @12,240                                             2197 08115000
         L     @04,ICBPTR                                          2197 08116000
         AL    @12,ICBOPT(,@04)                                    2197 08117000
         ST    @12,SSMSPSDG(,@09)                                  2197 08118000
*/********************************************************   @Y30LB03*/ 08119000
*/*                                                          @Y30LB03*/ 08120000
*/*GET LOCAL AND CMS LOCKS TO UPDATE ACTIVE ACTIVITY BUFFER  @Y30LB03*/ 08121000
*/*                                                          @Y30LB03*/ 08122000
*/*********************************************************  @Y30LB03*/ 08123000
*                                                                  2198 08124000
*       LOCKRCVY(1:2)=B2ONE;        /* SET LOCK RECOVERY INDICATORS     08125000
*                                                            @Y30LB03*/ 08126000
         OI    LOCKRCVY,B'11000000'                                2198 08127000
*       GENERATE;                                                  2199 08128000
*                                                                  2199 08129000
*                                                          /*@Y30LB03*/ 08130000
IGETLCL4 SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=USE,       @Y30LB03*08131000
               RELATED=(LOCALLK,ICB2MSG(IFRELL1))              @Y30LB03 08132000
IGTCMS1  SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,REGS=USE,         @Y30LB03*08133000
               RELATED=(CMSLK,ICB2MSG(IFRECMS1))               @Y30LB03 08134000
*/********************************************************   @Y30LB03*/ 08135000
*                                                                  2200 08136000
*       MVC(AWAX,AWBX);             /* MOVE TO ALLOCATION          2200 08137000
*                                      TABLE@Y30LB03                 */ 08138000
         L     @12,ICBPTR                                          2200 08139000
         L     @12,ICBOPT(,@12)                                    2200 08140000
         MVC   AWAX(240,@12),AWBX+240(@12)                         2200 08141000
*/*********************************************************  @Y30LB03*/ 08142000
*/*                                                          @Y30LB03*/ 08143000
*/*FREE LOCAL & CMS LOCKS TO UPDATE ACTIVE ACTIVITY BUFFER   @Y30LB03*/ 08144000
*/*                                                          @Y30LB03*/ 08145000
*/*********************************************************  @Y30LB03*/ 08146000
*                                                                  2201 08147000
*       GENERATE;                                                  2201 08148000
*                                                          /*@Y30LB03*/ 08149000
IFRECMS1 SETLOCK RELEASE,TYPE=CMS,REGS=USE,                    @Y30LB03*08150000
               RELATED=(CMSLK,ICB2MSG(IGTCMS1))                @Y30LB03 08151000
IFRELL1  SETLOCK RELEASE,TYPE=LOCAL,REGS=USE,                  @Y30LB03*08152000
               RELATED=(LOCALLK,ICB2MSG(IGETLCL4))             @Y30LB03 08153000
*       LOCKRCVY(1:2)=B2ZERO;       /* SET LOCK RECOVERY INDICATORS     08154000
*                                                            @Y30LB03*/ 08155000
*                                                                  2202 08156000
         NI    LOCKRCVY,B'00111111'                                2202 08157000
*       /*************************************************************/ 08158000
*       /*                                                           */ 08159000
*       /* ************************************************* @Y30LB03*/ 08160000
*       /*                                                           */ 08161000
*       /*************************************************************/ 08162000
*                                                                  2203 08163000
*       FIRST=CHAR1;                /* END OF FIRST PASS     @Y30LB03*/ 08164000
         MVI   FIRST,C'1'                                          2203 08165000
*     END;                          /*                       @Y30LB03*/ 08166000
*   IF REENTRY^=ADDR(REINIT) THEN   /* IF NOT 1ST PASS,      @G24LB02*/ 08167000
@RF02177 LA    @12,REINIT                                          2205 08168000
         C     @12,REENTRY                                         2205 08169000
         BE    @RF02205                                            2205 08170000
*     REENTRY=ADDR(SETTIME);        /* SET NEW STAE REENTRY  @G24LB02*/ 08171000
         LA    @12,SETTIME                                         2206 08172000
         ST    @12,REENTRY                                         2206 08173000
*   SAVREENT=REENTRY;               /* SAVE REENTRY POINTER  @G24LB02*/ 08174000
@RF02205 L     @12,REENTRY                                         2207 08175000
         ST    @12,SAVREENT                                        2207 08176000
*   REENTRY=ADDR(QUERRET);          /* SET NEW STAE REENTRY  @G24LB02*/ 08177000
         LA    @12,QUERRET                                         2208 08178000
         ST    @12,REENTRY                                         2208 08179000
*   SVCCALL=ON;                     /* SET SVC CALL FLAG     @G24LB02*/ 08180000
*                                                                  2209 08181000
         OI    SVCCALL,B'00001000'                                 2209 08182000
*   /*****************************************************************/ 08183000
*   /*                                                               */ 08184000
*   /* ***************************************************** @Y30LB03*/ 08185000
*   /* ISSUE ICBQUERY TO OBTAIN THE MOUNT EQUALIZATION       @ZA08838*/ 08186000
*   /* RECORD FROM THE MSC                                   @ZA08838*/ 08187000
*   /* ***************************************************** @ZA08838*/ 08188000
*   /*                                                               */ 08189000
*   /*****************************************************************/ 08190000
*                                                                  2210 08191000
*ICBQUE1:                                                          2210 08192000
*                                                                  2210 08193000
*   /*****************************************************************/ 08194000
*   /*                                                               */ 08195000
*   /* *******************************************************       */ 08196000
*   /*                                                       @Z40LB22*/ 08197000
*   /* MSSC ICBQUERY QSWCS/QLAB/QTAB/QSWCS QCEL MACRO        @Z40LB22*/ 08198000
*   /* OS/VS2 VERSION-- 03/21/75 LEVEL 00                    @Z40LB22*/ 08199000
*   /* THIS IS THE OUTPUT FOR THE EXECUTE FORM.              @Z40LB22*/ 08200000
*   /* THE LIST FORM OF THIS MACRO SHOULD BE                 @Z40LB22*/ 08201000
*   /* INVOKED FIRST IN ORDER TO SET UP NECESSARY            @Z40LB22*/ 08202000
*   /* DECLARES. IF THE COMPLETE ARGUMENT IS                 @Z40LB22*/ 08203000
*   /* SPECIFIED THE REQ BLOCK WILL BE ZEROED.               @Z40LB22*/ 08204000
*   /* *******************************************************       */ 08205000
*   /*                                                       @Z40LB22*/ 08206000
*   /*                                                               */ 08207000
*   /*****************************************************************/ 08208000
*                                                                  2210 08209000
*   RFY                                                            2210 08210000
*    (QUERR1) RSTD;                 /* RESTRICT R1           @Z40LB22*/ 08211000
ICBQUE1  DS    0H                                                  2211 08212000
*   QUERR1=ADDR(QUERLIST);          /* SET QUERR1 TO REQ BLOCK     2211 08213000
*                                                            @Z40LB22*/ 08214000
         LA    QUERR1,QUERLIST                                     2211 08215000
*   QUERLIST=QUERLIST&&QUERLIST;    /* ZERO REQUEST BLOCK    @Z40LB22*/ 08216000
         XC    QUERLIST(44),QUERLIST                               2212 08217000
*   QULEN='2C'X;                    /* SET LENGTH FIELD      @Z40LB22*/ 08218000
         LA    @12,44                                              2213 08219000
         ST    @12,QULEN                                           2213 08220000
*   QUORD='0B'X;                    /* SET OPCODE FIELD      @Z40LB22*/ 08221000
         MVI   QUORD,X'0B'                                         2214 08222000
*   QUCODE='03'X;                   /* SET CODE TYPE         @Z40LB22*/ 08223000
         MVI   QUCODE,X'03'                                        2215 08224000
*   QUSECT=('C9'X);                 /* FILL IN SECTOR ID     @Z40LB22*/ 08225000
         MVI   QUSECT,X'C9'                                        2216 08226000
*   QUPTR=ADDR(BUFFER);             /* ADDR OF DATAPTR FIELD @Z40LB22*/ 08227000
         LA    @12,24                                              2217 08228000
         AL    @12,CCWSPTR                                         2217 08229000
         ST    @12,QUPTR                                           2217 08230000
*   SVC(126);                       /* ISSUE SVC INST.       @Z40LB22*/ 08231000
         SVC   126                                                 2218 08232000
*   RFY                                                            2219 08233000
*    (QUERR1) UNRSTD;               /* UNRESTRICT R1         @Z40LB22*/ 08234000
*                                                                  2219 08235000
*   /*****************************************************************/ 08236000
*   /*                                                               */ 08237000
*   /*                                                       @ZA08838*/ 08238000
*   /*                                                               */ 08239000
*   /*****************************************************************/ 08240000
*                                                                  2220 08241000
*   RESPECIFY                                                      2220 08242000
*    (R15) RSTD;                    /* RESTRICT REGS         @ZA08838*/ 08243000
*QUERRET:                           /* LABEL FOR RETURN      @G24LB02*/ 08244000
*   SVCCALL=OFF;                    /* CLEAR SVC CALL FLAG   @G24LB02*/ 08245000
QUERRET  NI    SVCCALL,B'11110111'                                 2221 08246000
*   REENTRY=SAVREENT;               /* SET REENTRY           @G24LB02*/ 08247000
         L     @14,SAVREENT                                        2222 08248000
         ST    @14,REENTRY                                         2222 08249000
*   IF R15=F0 THEN                  /* GOOD RETURN           @Y30LB03*/ 08250000
         SLR   @14,@14                                             2223 08251000
         CR    R15,@14                                             2223 08252000
         BNE   @RF02223                                            2223 08253000
*     DO;                           /*                       @ZA08838*/ 08254000
*                                                                  2224 08255000
*       /*************************************************************/ 08256000
*       /*                                                           */ 08257000
*       /* ****************************************          @G18MB04*/ 08258000
*       /* RESET COUNTERS FOR FINDING FIRST LRU              @G18MB04*/ 08259000
*       /* ****************************************          @G18MB04*/ 08260000
*       /*                                                           */ 08261000
*       /*************************************************************/ 08262000
*                                                                  2225 08263000
*       LRUCOUNT=F0;                /* NO LRU FOUND THIS TIME      2225 08264000
*                                                            @G18MB04*/ 08265000
         STH   @14,LRUCOUNT                                        2225 08266000
*       LRULIST='';                 /* CLEAR SDGS WITH LRU   @G18MB04*/ 08267000
         MVI   LRULIST,C' '                                        2226 08268000
         MVC   LRULIST+1(55),LRULIST                               2226 08269000
*       SSMSPLRU=F0;                /* NO SDGS WITH LRU YET  @G18MB04*/ 08270000
*                                                                  2227 08271000
         LA    @12,LRUSSMS                                         2227 08272000
         ST    @14,SSMSPLRU(,@12)                                  2227 08273000
*       /*************************************************************/ 08274000
*       /*                                                           */ 08275000
*       /* ****************************************          @Y30LB03*/ 08276000
*       /* INITIALIZE AWB WORK BUFFER ACCORD                 @Y30LB03*/ 08277000
*       /* ING TO USABILITY OF EACH STAGING DRV GRP          @Y30LB03*/ 08278000
*       /* ****************************************          @Y30LB03*/ 08279000
*       /*                                                           */ 08280000
*       /*************************************************************/ 08281000
*                                                                  2228 08282000
*       DO I=F1 TO F28;             /*                       @Y30LB03*/ 08283000
*                                                                  2228 08284000
         LA    @14,1                                               2228 08285000
         ST    @14,I                                               2228 08286000
@DL02228 DS    0H                                                  2229 08287000
*         /***********************************************************/ 08288000
*         /*                                                         */ 08289000
*         /* ***********************************             @Y30LB03*/ 08290000
*         /* EXECUTE USABILITY ALGORITHM                     @Y30LB03*/ 08291000
*         /* ***********************************             @Y30LB03*/ 08292000
*         /*                                                         */ 08293000
*         /***********************************************************/ 08294000
*                                                                  2229 08295000
*         IF UA(I)=F0|AVL(I)=F0|CAP(I)=F0 THEN/* CK ZERO FLDS      2229 08296000
*                                                            @ZA13483*/ 08297000
         SLA   @14,2                                               2229 08298000
         LA    @12,24                                              2229 08299000
         AL    @12,CCWSPTR                                         2229 08300000
         LH    @09,UA-4(@14,@12)                                   2229 08301000
         N     @09,@CF02463                                        2229 08302000
         LTR   @09,@09                                             2229 08303000
         BZ    @RT02229                                            2229 08304000
         SLR   @09,@09                                             2229 08305000
         LA    @04,0(@14,@12)                                      2229 08306000
         AL    @04,@CF03331                                        2229 08307000
         SLR   @11,@11                                             2229 08308000
         IC    @11,AVL-1(,@04)                                     2229 08309000
         CR    @09,@11                                             2229 08310000
         BE    @RT02229                                            2229 08311000
         SLR   @04,@04                                             2229 08312000
         IC    @04,CAP-4(@14,@12)                                  2229 08313000
         CR    @09,@04                                             2229 08314000
         BNE   @RF02229                                            2229 08315000
@RT02229 DS    0H                                                  2230 08316000
*           SDGIX(I)=F0;            /* SET SORT VALUE        @ZA00671   08317000
*                                      TO ZERO               @ZA00671*/ 08318000
         L     @14,I                                               2230 08319000
         SLA   @14,3                                               2230 08320000
         L     @12,ICBPTR                                          2230 08321000
         L     @12,ICBOPT(,@12)                                    2230 08322000
         ALR   @12,@14                                             2230 08323000
         SLR   @14,@14                                             2230 08324000
         STCM  @14,7,SDGIX+232(@12)                                2230 08325000
*         ELSE                      /*                       @ZA00671*/ 08326000
*           IF MV(I)=F0 THEN        /* IS NUMBER OF          @ZA00671   08327000
*                                      MOUNTED VOLUMES       @ZA00671   08328000
*                                      ZERO                  @ZA00671*/ 08329000
         B     @RC02229                                            2231 08330000
@RF02229 L     @14,I                                               2231 08331000
         LR    @12,@14                                             2231 08332000
         SLA   @12,2                                               2231 08333000
         L     @09,CCWSPTR                                         2231 08334000
         LH    @12,MV+20(@12,@09)                                  2231 08335000
         N     @12,@CF02463                                        2231 08336000
         LTR   @12,@12                                             2231 08337000
         BNZ   @RF02231                                            2231 08338000
*             SDGIX(I)=MAX;         /* SET SORT VALUE TO     @ZA00671   08339000
*                                      A LARGE VALUE         @ZA00671*/ 08340000
         SLA   @14,3                                               2232 08341000
         L     @12,ICBPTR                                          2232 08342000
         L     @12,ICBOPT(,@12)                                    2232 08343000
         ALR   @12,@14                                             2232 08344000
         MVC   SDGIX+232(3,@12),@CF03011+1                         2232 08345000
*           ELSE                    /*                       @ZA00671*/ 08346000
*                                                                  2233 08347000
*             /*******************************************************/ 08348000
*             /*                                                     */ 08349000
*             /* CALCULATE SORT VALUE                        @ZA00671*/ 08350000
*             /*                                                     */ 08351000
*             /*******************************************************/ 08352000
*                                                                  2233 08353000
*             SDGIX(I)=(UA(I)*AVL(I)*PREC)/*                 @ZA00671*/ 08354000
*                 /(CAP(I)*MV(I));  /*                       @ZA00671*/ 08355000
         B     @RC02231                                            2233 08356000
@RF02231 L     @14,I                                               2233 08357000
         LR    @12,@14                                             2233 08358000
         SLA   @12,3                                               2233 08359000
         L     @09,ICBPTR                                          2233 08360000
         L     @09,ICBOPT(,@09)                                    2233 08361000
         SLA   @14,2                                               2233 08362000
         LA    @04,24                                              2233 08363000
         AL    @04,CCWSPTR                                         2233 08364000
         LA    @01,0(@14,@04)                                      2233 08365000
         AL    @01,@CF03331                                        2233 08366000
         SLR   @03,@03                                             2233 08367000
         IC    @03,AVL-1(,@01)                                     2233 08368000
         LH    @11,UA-4(@14,@04)                                   2233 08369000
         N     @11,@CF02463                                        2233 08370000
         MR    @02,@11                                             2233 08371000
         MH    @03,@CH03014                                        2233 08372000
         LA    @01,0(@14,@04)                                      2233 08373000
         BCTR  @01,0                                               2233 08374000
         BCTR  @01,0                                               2233 08375000
         LH    @01,MV-2(,@01)                                      2233 08376000
         N     @01,@CF02463                                        2233 08377000
         SLR   @02,@02                                             2233 08378000
         IC    @02,CAP-4(@14,@04)                                  2233 08379000
         MR    @00,@02                                             2233 08380000
         LR    @10,@03                                             2233 08381000
         SRDA  @10,32                                              2233 08382000
         DR    @10,@01                                             2233 08383000
         ALR   @09,@12                                             2233 08384000
         STCM  @11,7,SDGIX+232(@09)                                2233 08385000
*         IF(LRU(I)=LRUIX(I)) THEN  /* HAS SDG BEEN          @ZA00671   08386000
*                                      LRU ED                @ZA00671*/ 08387000
@RC02231 DS    0H                                                  2234 08388000
@RC02229 L     @14,I                                               2234 08389000
         LR    @12,@14                                             2234 08390000
         SLA   @12,2                                               2234 08391000
         L     @09,CCWSPTR                                         2234 08392000
         SLR   @04,@04                                             2234 08393000
         IC    @04,LRU+20(@12,@09)                                 2234 08394000
         SLR   @12,@12                                             2234 08395000
         IC    @12,LRUIX-1(@14)                                    2234 08396000
         CR    @04,@12                                             2234 08397000
         BNE   @RF02234                                            2234 08398000
*           IF(SDGIX(I)^=F0) THEN   /* IS THE SORT           @ZA00671   08399000
*                                      VALUE ZERO            @ZA00671*/ 08400000
         SLA   @14,3                                               2235 08401000
         LA    @12,240                                             2235 08402000
         L     @09,ICBPTR                                          2235 08403000
         AL    @12,ICBOPT(,@09)                                    2235 08404000
         LA    @09,0(@14,@12)                                      2235 08405000
         AL    @09,@CF03342                                        2235 08406000
         L     @09,SDGIX-5(,@09)                                   2235 08407000
         LA    @09,0(,@09)                                         2235 08408000
         LTR   @09,@09                                             2235 08409000
         BZ    @RF02235                                            2235 08410000
*             SDGIX(I)=SDGIX(I)+LRUED;/* ADD LARGE NO        @ZA00671   08411000
*                                      TO SORT               @ZA00671   08412000
*                                      VALUE                 @ZA00671*/ 08413000
         AL    @09,@CF03011                                        2236 08414000
         ALR   @12,@14                                             2236 08415000
         AL    @12,@CF03331                                        2236 08416000
         STCM  @09,7,SDGIX-5(@12)                                  2236 08417000
*           ELSE                                                   2237 08418000
*             ;                     /*                       @G18MB04*/ 08419000
@RF02235 DS    0H                                                  2238 08420000
*         ELSE                      /* THERE WAS LRU ACTIVITY      2238 08421000
*                                                            @G18MB04*/ 08422000
*           DO;                     /*                       @G18MB04*/ 08423000
         B     @RC02234                                            2238 08424000
@RF02234 DS    0H                                                  2239 08425000
*             LRUIX(I)=LRU(I);      /* SAVE LRU COUNT        @G18MB04*/ 08426000
         L     @14,I                                               2239 08427000
         LR    @12,@14                                             2239 08428000
         SLA   @12,2                                               2239 08429000
         L     @09,CCWSPTR                                         2239 08430000
         SLR   @04,@04                                             2239 08431000
         IC    @04,LRU+20(@12,@09)                                 2239 08432000
         STC   @04,LRUIX-1(@14)                                    2239 08433000
*             LRUCOUNT=LRUCOUNT+1;  /* COUNT SDGS LRUED      @G18MB04*/ 08434000
         LH    @12,LRUCOUNT                                        2240 08435000
         N     @12,@CF02463                                        2240 08436000
         LA    @12,1(,@12)                                         2240 08437000
         STH   @12,LRUCOUNT                                        2240 08438000
*             LRUEDNN(LRUCOUNT)=CONST(I);/* SAVE ITS NO.     @G18MB04*/ 08439000
         ALR   @12,@12                                             2241 08440000
         LA    @09,LRUEDNN-2(@12)                                  2241 08441000
         ALR   @14,@14                                             2241 08442000
         LA    @12,CONST-2(@14)                                    2241 08443000
         MVC   0(2,@09),0(@12)                                     2241 08444000
*           END;                    /*                       @G18MB04*/ 08445000
*         SDG(I)='SDG';             /* LITERAL FILL          @ZA08838*/ 08446000
@RC02234 L     @14,I                                               2243 08447000
         LR    @12,@14                                             2243 08448000
         SLA   @12,3                                               2243 08449000
         LA    @09,240                                             2243 08450000
         L     @04,ICBPTR                                          2243 08451000
         AL    @09,ICBOPT(,@04)                                    2243 08452000
         ST    @12,@TF00001                                        2243 08453000
         ALR   @12,@09                                             2243 08454000
         AL    @12,@CF03340                                        2243 08455000
         MVC   SDG(3,@12),@CC03136                                 2243 08456000
*         SDGNN(I)=CONST(I);        /* CONSTANT FILL         @ZA08838*/ 08457000
         AL    @09,@TF00001                                        2244 08458000
         AL    @09,@CF03341                                        2244 08459000
         LR    @12,@14                                             2244 08460000
         ALR   @12,@12                                             2244 08461000
         LA    @04,CONST-2(@12)                                    2244 08462000
         MVC   SDGNN-3(2,@09),0(@04)                               2244 08463000
*       END;                        /*                       @Y30LB03*/ 08464000
         AL    @14,@CF00117                                        2245 08465000
         ST    @14,I                                               2245 08466000
         C     @14,@CF02075                                        2245 08467000
         BNH   @DL02228                                            2245 08468000
*       RFY                                                        2246 08469000
*         R15 UNRSTD;               /*                       @G24LB02*/ 08470000
*                                                                  2246 08471000
*       /*************************************************************/ 08472000
*       /*                                                           */ 08473000
*       /* ***********************************               @Y30LB03*/ 08474000
*       /*                                                           */ 08475000
*       /*************************************************************/ 08476000
*                                                                  2247 08477000
*                                                                  2247 08478000
*       /*************************************************************/ 08479000
*       /*                                                           */ 08480000
*       /* **********************************                @Y30LB03*/ 08481000
*       /* BINARY SORT GROUP ELEMENTS (IN AWB)               @Y30LB03*/ 08482000
*       /* IN DECENDING ORDER OF SDGIX FIELDS                @ZM31027*/ 08483000
*       /* **********************************                @Y30LB03*/ 08484000
*       /*                                                           */ 08485000
*       /*************************************************************/ 08486000
*                                                                  2247 08487000
*       DO I=F1 TO F27;             /*                       @Y30LB03*/ 08488000
         LA    @12,1                                               2247 08489000
         ST    @12,I                                               2247 08490000
@DL02247 DS    0H                                                  2248 08491000
*         DO J=F1 TO(F28-I);        /*                       @Y30LB03*/ 08492000
         LA    @12,1                                               2248 08493000
         B     @DE02248                                            2248 08494000
@DL02248 DS    0H                                                  2249 08495000
*           IF SDGIX(J)<SDGIX(J+F1) THEN/*                   @ZM31027*/ 08496000
         SLA   @12,3                                               2249 08497000
         LA    @09,240                                             2249 08498000
         L     @04,ICBPTR                                          2249 08499000
         AL    @09,ICBOPT(,@04)                                    2249 08500000
         ST    @12,@TF00001                                        2249 08501000
         ALR   @12,@09                                             2249 08502000
         AL    @12,@CF03331                                        2249 08503000
         LR    @04,@09                                             2249 08504000
         AL    @04,@TF00001                                        2249 08505000
         CLC   SDGIX-5(3,@12),SDGIX(@04)                           2249 08506000
         BNL   @RF02249                                            2249 08507000
*             DO;                   /*                       @Y30LB03*/ 08508000
*               SAVESDG=SDGNNBBB(J);/*                       @ZA08838*/ 08509000
         LR    @12,@09                                             2251 08510000
         AL    @12,@TF00001                                        2251 08511000
         AL    @12,@CF03340                                        2251 08512000
         MVC   SAVESDG(8),SDGNNBBB(@12)                            2251 08513000
*               SDGNNBBB(J)=SDGNNBBB(J+F1);/*                @ZA08838*/ 08514000
         LR    @12,@09                                             2252 08515000
         AL    @12,@TF00001                                        2252 08516000
         AL    @12,@CF03340                                        2252 08517000
         LR    @04,@09                                             2252 08518000
         AL    @04,@TF00001                                        2252 08519000
         MVC   @TS00001(8),SDGNNBBB(@04)                           2252 08520000
         MVC   SDGNNBBB(8,@12),@TS00001                            2252 08521000
*               SDGNNBBB(J+F1)=SAVESDG;/*                    @ZA08838*/ 08522000
         AL    @09,@TF00001                                        2253 08523000
         MVC   SDGNNBBB(8,@09),SAVESDG                             2253 08524000
*             END;                  /*                       @Y30LB03*/ 08525000
*         END;                      /*                       @Y30LB03*/ 08526000
@RF02249 LA    @12,1                                               2255 08527000
         AL    @12,J                                               2255 08528000
@DE02248 ST    @12,J                                               2255 08529000
         LA    @09,28                                              2255 08530000
         SL    @09,I                                               2255 08531000
         CR    @12,@09                                             2255 08532000
         BNH   @DL02248                                            2255 08533000
*       END;                        /*                       @Y30LB03*/ 08534000
*                                                                  2256 08535000
         LA    @12,1                                               2256 08536000
         AL    @12,I                                               2256 08537000
         ST    @12,I                                               2256 08538000
         C     @12,@CF02073                                        2256 08539000
         BNH   @DL02247                                            2256 08540000
*       /*************************************************************/ 08541000
*       /*                                                           */ 08542000
*       /* ******************************                    @Y30LB03*/ 08543000
*       /*                                                           */ 08544000
*       /*************************************************************/ 08545000
*                                                                  2257 08546000
*                                                                  2257 08547000
*       /*************************************************************/ 08548000
*       /*                                                           */ 08549000
*       /* BLANK OUT SDGIX FIELDS                            @ZM31027*/ 08550000
*       /*                                                           */ 08551000
*       /*************************************************************/ 08552000
*                                                                  2257 08553000
*       DO I=F1 TO F28;             /* LOOP                  @Y30LB03*/ 08554000
         LA    @12,1                                               2257 08555000
         ST    @12,I                                               2257 08556000
@DL02257 DS    0H                                                  2258 08557000
*         SDGBBB(I)='   ';          /* BLANKOUT              @ZA08838*/ 08558000
         LR    @09,@12                                             2258 08559000
         SLA   @09,3                                               2258 08560000
         L     @04,ICBPTR                                          2258 08561000
         L     @04,ICBOPT(,@04)                                    2258 08562000
         ALR   @04,@09                                             2258 08563000
         MVC   SDGBBB+232(3,@04),@CC02356                          2258 08564000
*       END;                        /*                       @Y30LB03*/ 08565000
         AL    @12,@CF00117                                        2259 08566000
         ST    @12,I                                               2259 08567000
         C     @12,@CF02075                                        2259 08568000
         BNH   @DL02257                                            2259 08569000
*/*******************************************************    @G18MB04*/ 08570000
*/* THIS IS THE INTERFACE TO JES3, GIVING ADDRESS OF JUST-   @G18MB04*/ 08571000
*/* SORTED LIST, AND ADDRESS OF FIRST SDG IN LIST WITH LRU,  @G18MB04*/ 08572000
*/* IF ANY                                                   @G18MB04*/ 08573000
*/*******************************************************    @G18MB04*/ 08574000
*                                                                  2260 08575000
*       IF LRUCOUNT=F0              /* WAS THERE NO LRU ?    @G18MB04*/ 08576000
*         THEN                                                     2260 08577000
         LH    @12,LRUCOUNT                                        2260 08578000
         N     @12,@CF02463                                        2260 08579000
         LTR   @12,@12                                             2260 08580000
         BZ    @RT02260                                            2260 08581000
*         ;                         /* NO LRU, SSMSPLRU STILL ZERO 2261 08582000
*                                                            @G18MB04*/ 08583000
*       ELSE                        /* THERE WAS LRU IN AT LEAST ONE    08584000
*                                      SDG, FIND FIRST       @G18MB04*/ 08585000
*         DO IXSDGL=1 TO 28 WHILE SSMSPLRU=F0;/* SCAN SORTED LIST  2262 08586000
*                                                            @G18MB04*/ 08587000
         LA    @12,1                                               2262 08588000
         ST    @12,IXSDGL                                          2262 08589000
@DL02262 LA    @12,LRUSSMS                                         2262 08590000
         L     @12,SSMSPLRU(,@12)                                  2262 08591000
         LTR   @12,@12                                             2262 08592000
         BNZ   @DC02262                                            2262 08593000
*           DO IXLRUNN=1 TO LRUCOUNT WHILE SSMSPLRU=F0;/* SCAN LIST     08594000
*                                      OF NNS THAT HAD LRU THIS TIME    08595000
*                                                            @G18MB04*/ 08596000
         LA    @12,1                                               2263 08597000
         B     @DE02263                                            2263 08598000
@DL02263 LA    @09,LRUSSMS                                         2263 08599000
         L     @04,SSMSPLRU(,@09)                                  2263 08600000
         LTR   @04,@04                                             2263 08601000
         BNZ   @DC02263                                            2263 08602000
*             IF SDGNN(IXSDGL)=LRUEDNN(IXLRUNN)/* THIS NN ?  @G18MB04*/ 08603000
*               THEN                /* FOUND FIRST IN SORTED LIST  2264 08604000
*                                      WITH LRU ACTIVITY     @G18MB04*/ 08605000
         L     @04,IXSDGL                                          2264 08606000
         SLA   @04,3                                               2264 08607000
         LA    @15,240                                             2264 08608000
         L     @14,ICBPTR                                          2264 08609000
         AL    @15,ICBOPT(,@14)                                    2264 08610000
         ALR   @12,@12                                             2264 08611000
         ST    @04,@TF00001                                        2264 08612000
         ALR   @04,@15                                             2264 08613000
         AL    @04,@CF03341                                        2264 08614000
         LA    @01,LRUEDNN-2(@12)                                  2264 08615000
         CLC   SDGNN-3(2,@04),0(@01)                               2264 08616000
         BNE   @RF02264                                            2264 08617000
*               SSMSPLRU=ADDR(SDGNNBBB(IXSDGL));/* PTR FOR JES3    2265 08618000
*                                                            @G18MB04*/ 08619000
         L     @12,@TF00001                                        2265 08620000
         AL    @15,@CF03340                                        2265 08621000
         LA    @12,SDGNNBBB(@12,@15)                               2265 08622000
         ST    @12,SSMSPLRU(,@09)                                  2265 08623000
*             ELSE                                                 2266 08624000
*               ;                   /*                       @G18MB04*/ 08625000
@RF02264 DS    0H                                                  2267 08626000
*           END;                    /* LOOKING AT LRUED LIST FOR   2267 08627000
*                                      SINGLE SDGNNBBB       @G18MB04*/ 08628000
         LA    @12,1                                               2267 08629000
         AL    @12,IXLRUNN                                         2267 08630000
@DE02263 ST    @12,IXLRUNN                                         2267 08631000
         LH    @09,LRUCOUNT                                        2267 08632000
         N     @09,@CF02463                                        2267 08633000
         CR    @12,@09                                             2267 08634000
         BNH   @DL02263                                            2267 08635000
@DC02263 DS    0H                                                  2268 08636000
*         END;                      /* SCANNING SORTED LIST OF     2268 08637000
*                                      SDGNNBBBS             @G18MB04*/ 08638000
         LA    @12,1                                               2268 08639000
         AL    @12,IXSDGL                                          2268 08640000
         ST    @12,IXSDGL                                          2268 08641000
         C     @12,@CF02075                                        2268 08642000
         BNH   @DL02262                                            2268 08643000
@DC02262 DS    0H                                                  2269 08644000
*/*******************************************************    @G18MB04*/ 08645000
*/* PASS SORTED LIST AND PTR TO 1ST SDG WITH LRU TO JES3,    @G18MB04*/ 08646000
*/* VIA THE SUBSYSTEM INTERFACE                              @G18MB04*/ 08647000
*/*******************************************************    @G18MB04*/ 08648000
*                                                                  2269 08649000
*       RFY                                                        2269 08650000
*        (R13) RSTD;                /*                       @G18MB04*/ 08651000
@RT02260 DS    0H                                                  2270 08652000
*       SAVR13=R13;                 /* SAVE PRESENT CONTENTS OF    2270 08653000
*                                      REGISTER 13           @G18MB04*/ 08654000
         ST    R13,SAVR13                                          2270 08655000
*       R13=ADDR(LRUREGS);          /* THIS FOR SUBSYSTEM FUNCTION 2271 08656000
*                                      USE                   @G18MB04*/ 08657000
*                                                                  2271 08658000
         LA    R13,LRUREGS                                         2271 08659000
*       /*************************************************************/ 08660000
*       /*                                                           */ 08661000
*       /* ? IEFSSREQ (LRUSSOB);                                     */ 08662000
*       /*                                                           */ 08663000
*       /*************************************************************/ 08664000
*                                                                  2272 08665000
*/*                                                                  */ 08666000
*/*  PASS CONTROL TO JOB ENTRY SUBSYSTEM TO                          */ 08667000
*/*  PROCESS REQUEST -                                               */ 08668000
*/*                                                                  */ 08669000
*/*    INPUT - REGISTER 1 POINTS TO A ONE-                           */ 08670000
*/*            WORD PARAMETER LIST WHICH                             */ 08671000
*/*            POINTS TO THE SSOB                                    */ 08672000
*/*                                                                  */ 08673000
*                                                                  2272 08674000
*       CALL SSREQ(LRUSSOB);        /* INVOKE SUBSYSTEM INTERFACE  2272 08675000
*                                                            @G18MB04*/ 08676000
         L     @12,CVTPTR                                          2272 08677000
         L     @12,CVTJESCT(,@12)                                  2272 08678000
         L     @15,JESSSREQ(,@12)                                  2272 08679000
         LA    @01,@AL02272                                        2272 08680000
         BALR  @14,@15                                             2272 08681000
*       R13=SAVR13;                 /* BACK TO ORIGINAL REGISTER 13     08682000
*                                      CONTENTS              @G18MB04*/ 08683000
         L     R13,SAVR13                                          2273 08684000
*       RFY                                                        2274 08685000
*        (R13) UNRSTD;              /*                       @G18MB04*/ 08686000
*/*******************************************************    @Y30LB03*/ 08687000
*/*                                                          @Y30LB03*/ 08688000
*/*GET LOCAL AND CMS LOCKS TO UPDATE ACTIVE ACTIVITY BUFFER  @Y30LB03*/ 08689000
*/*                                                          @Y30LB03*/ 08690000
*/********************************************************   @Y30LB03*/ 08691000
*                                                                  2275 08692000
*       LOCKRCVY(1:2)=B2ONE;        /* SET LOCK RECOVERY INDICATORS     08693000
*                                                            @Y30LB03*/ 08694000
         OI    LOCKRCVY,B'11000000'                                2275 08695000
*       GENERATE;                                                  2276 08696000
*                                                                  2276 08697000
*                                                          /*@Y30LB03*/ 08698000
IGETLCL5 SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=USE,       @Y30LB03*08699000
               RELATED=(LOCALLK,ICB2MSG(IFRELL2))              @Y30LB03 08700000
IGTCMS4  SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,REGS=USE,         @Y30LB03*08701000
               RELATED=(CMSLK,ICB2MSG(IFRCMSL2))              @Y30LB03  08702000
*/******************************************************     @Y30LB03*/ 08703000
*                                                                  2277 08704000
*       MVC(AWAX,AWBX);             /* MOVE UPDATED WORK     @Y30LB03   08705000
*                                      BUFFER TO ACTIVITY    @Y30LB03   08706000
*                                      TABLES                @Y30LB03*/ 08707000
         L     @12,ICBPTR                                          2277 08708000
         L     @12,ICBOPT(,@12)                                    2277 08709000
         MVC   AWAX(240,@12),AWBX+240(@12)                         2277 08710000
*/********************************************************   @Y30LB03*/ 08711000
*/*                                                          @Y30LB03*/ 08712000
*/*FREE LOCAL & CMS LOCKS TO UPDATE ACTIVE ACTIVITY BUFFER   @Y30LB03*/ 08713000
*/*                                                          @Y30LB03*/ 08714000
*/********************************************************   @Y30LB03*/ 08715000
*                                                                  2278 08716000
*       GENERATE;                                                  2278 08717000
*                                                          /*@Y30LB03*/ 08718000
IFRCMSL2 SETLOCK RELEASE,TYPE=CMS,REGS=USE,                    @Y30LB03*08719000
               RELATED=(CMSLK,ICB2MSG(IGTCMS4))                @Y30LB03 08720000
IFRELL2  SETLOCK RELEASE,TYPE=LOCAL,REGS=USE,                  @Y30LB03*08721000
               RELATED=(LOCALLK,ICB2MSG(IGETLCL5))             @Y30LB03 08722000
*       LOCKRCVY(1:2)=B2ZERO;       /* SET LOCK RECOVERY INDICATORS     08723000
*                                                            @Y30LB03*/ 08724000
         NI    LOCKRCVY,B'00111111'                                2279 08725000
*/********************************************************   @Y30LB03*/ 08726000
*                                                                  2280 08727000
*     END;                          /*                       @Y30LB03*/ 08728000
*SETTIME:                           /* SETUP FOR STIMER      @Y30LB03*/ 08729000
*   IF REENTRY^=ADDR(REINIT) THEN   /* IF NOT 1ST PASS,      @Y30LB03*/ 08730000
@RF02223 DS    0H                                                  2281 08731000
SETTIME  LA    @12,REINIT                                          2281 08732000
         C     @12,REENTRY                                         2281 08733000
         BE    @RF02281                                            2281 08734000
*     REENTRY=ADDR(SCAN);           /* SET STAE REENTRY      @Y30LB03*/ 08735000
         LA    @12,SCAN                                            2282 08736000
         ST    @12,REENTRY                                         2282 08737000
*   DBLWORD=''B;                    /* CLEAR CONV AREA       @Z40LB01*/ 08738000
@RF02281 XC    DBLWORD(8),DBLWORD                                  2283 08739000
*   MM=ICBSAMP;                     /* SET SAMPLE TIME       @ZM31129*/ 08740000
         L     @12,ICBPTR                                          2284 08741000
         MVC   MM(2),ICBSAMP(@12)                                  2284 08742000
*   GENERATE;                                                      2285 08743000
*                                                          /*@ZM31129*/ 08744000
         PACK  MM,MM                PACK MM(MINUTES) SPECIFD   @ZM31129 08745000
         MVC   DBLWORD+CON6(CON2),MM  MOVE MM TO DBL WRD BDY   @ZM31129 08746000
         CVB   R4,DBLWORD           CONVERT MM TO BINARY       @ZM31129 08747000
         MH    R4,SIXTHOU           GET IN REAL MINUTE FORM    @ZM31129 08748000
         ST    R4,TMER              INIT TMER(TIMER)           @ZM31129 08749000
*   ICBACTV=F0;                     /* CLEAR ACTIVITY ECB    @Y30LB03*/ 08750000
         L     @12,ICBPTR                                          2286 08751000
         SLR   @09,@09                                             2286 08752000
         ST    @09,ICBACTV(,@12)                                   2286 08753000
*   RESPECIFY                                                      2287 08754000
*     R3 RSTD;                      /* RESTRICT R3           @Y30LB03*/ 08755000
*   R3=ICB2ACTP;                    /* SET R3 FOR STIMER     @Y30LB03*/ 08756000
         L     R3,ICB2ACTP(,@12)                                   2288 08757000
*ISTIMER1:                                                         2289 08758000
*   GEN(STIMER REAL,(R3),BINTVL=TMER);/* ISSUE STIMER        @Y30LB03*/ 08759000
ISTIMER1 STIMER REAL,(R3),BINTVL=TMER                                   08760000
*   RFY                                                            2290 08761000
*     R14 RSTD;                     /*                       @G24LB02*/ 08762000
*   R14=SAVR1450;                   /* RESTORE R14           @Y30LB03*/ 08763000
         L     R14,SAVR1450                                        2291 08764000
*   RFY                                                            2292 08765000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 08766000
*   RESPECIFY                                                      2293 08767000
*     R3 UNRSTD;                    /* FREE R13              @Y30LB03*/ 08768000
*   RETURN;                         /* RTN TO ICB2MSG        @Y30LB03*/ 08769000
@EL00024 DS    0H                                                  2294 08770000
@EF00024 DS    0H                                                  2294 08771000
@ER00024 BR    @14                                                 2294 08772000
*   END ICBMSG50;                   /* END SUBROUTINE        @Z40LB01*/ 08773000
*ICBMSG55:                                                         2296 08774000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Z40LB01*/ 08775000
ICBMSG55 DS    0H                                                  2297 08776000
*/********************************************************   @Z40LB01*/ 08777000
*/*                                                          @Z40LB01*/ 08778000
*/*  PROCEDURE NAME - ICBMSG55                               @Z40LB01*/ 08779000
*/*                                                          @Z40LB01*/ 08780000
*/*  FUNCTION - DISPLAY 3850 COMMAND INITIALIZATION          @Z40LB01*/ 08781000
*/*             PROCESSING. THIS PROC DOES THE INITIAL       @Z40LB01*/ 08782000
*/*             HOUSKEEPING AND ISSUES AN ICBPAIR MACRO      @Z40LB01*/ 08783000
*/*             WITH THE INITIALIZE FOR STATUS UPDATE        @Z40LB01*/ 08784000
*/*             MESSAGE. IF THE INITIALIZE ORDER FAILS,      @Z40LB01*/ 08785000
*/*             A MESSAGE WILL BE ISSUED TO THE OPERATOR     @Z40LB01*/ 08786000
*/*             ADVISING HIM OF THE FAILURE AND REASON CODE  @Z40LB01*/ 08787000
*/*             FOR THE FAILURE. IF MORE THAN ONE DISPLAY    @Z40LB01*/ 08788000
*/*             COMMAND IS PROCESSED WHILE A REQUEST FOR     @Z40LB01*/ 08789000
*/*             THE STATUS UPDATE MESSAGE IS STILL OPEN,     @Z40LB01*/ 08790000
*/*             THE NEW COMMAND REQUEST IS QUEUED ON AN      @Z40LB01*/ 08791000
*/*             INTERNAL QUEUE SO IT WILL ALSO GET           @Z40LB01*/ 08792000
*/*             PROCESSED WITH THE SAME STATUS MESSAGE       @Z40LB01*/ 08793000
*/*             WHEN IT IS RECEIVED.                         @Z40LB01*/ 08794000
*/*                                                          @Z40LB01*/ 08795000
*/*  INPUT - POINTER TO THE CWB TO BE PROCESSED.             @Z40LB01*/ 08796000
*/*                                                          @Z40LB01*/ 08797000
*/*  OUTPUT - ICBPAIR INITIALIZE FOR STATUS UPDATE MESSAGE.  @Z40LB01*/ 08798000
*/*           QUEUED CWB FOR DISPLAY PROCESSING.             @Z40LB01*/ 08799000
*/*           ERROR MESSAGE TO OPERATOR ON INITIALIZE FAIL.  @Z40LB01*/ 08800000
*/*           RESET CMD QUEUE POINTER IF NO MORE CWBS.       @Z40LB01*/ 08801000
*/*           CURRENT DISPLAY CMD CWB DEQUEUED.              @Z40LB01*/ 08802000
*/*           SET MSG92FLG.                                  @Z40LB01*/ 08803000
*/*                                                          @Z40LB01*/ 08804000
*/*  MESSAGES - ICB056I DISPLAY 3850 FAILED -                @Z40LB01*/ 08805000
*/*             INITIALIZE REASON CODE AAA.                  @Z40LB01*/ 08806000
*/*             SYNTAX ERROR IN COMMAND.                     @Z40LB01*/ 08807000
*/*             INSUFFICIENT QUEUE SPACE.                    @Z40LB01*/ 08808000
*/*                                                          @Z40LB01*/ 08809000
*/********************************************************   @Z40LB01*/ 08810000
*                                                                  2297 08811000
*   DCL                                                            2297 08812000
*     SPACEMSG CHAR(26) INIT(       /* QUEUE FULL MSG TEXT   @Z40LB01*/ 08813000
*         'INSUFFICIENT QUEUE SPACE  ');/*                   @Z40LB01*/ 08814000
*   DCL                                                            2298 08815000
*     SYNTXMSG CHAR(26) INIT(       /* SYNTAX ERROR MSG TEXT @Z40LB01*/ 08816000
*         'SYNTAX ERROR IN COMMAND   ');/*                   @Z40LB01*/ 08817000
*   DCL                                                            2299 08818000
*     INITATTS BIT(16) INIT('8000'X);/* ICBPAIR ATTRIBUTES   @Z40LB01*/ 08819000
*   DCL                                                            2300 08820000
*     1 CONVID1 CHAR(3),            /* COMPARE SSID 1 FIELD  @Z40LB01*/ 08821000
*      2 BEGID1 FIXED(8),           /* BEGINNING CHARACTER   @Z40LB01*/ 08822000
*      2 MIDID1 FIXED(8),           /* MIDDLE CHARACTER      @Z40LB01*/ 08823000
*      2 ENDID1 FIXED(8);           /* END CHARACTER         @Z40LB01*/ 08824000
*   DCL                                                            2301 08825000
*     1 CONVID2 CHAR(3),            /* COMPARE SSID 2 FIELD  @Z40LB01*/ 08826000
*      2 BEGID2 FIXED(8),           /* BEGINNING CHARACTER   @Z40LB01*/ 08827000
*      2 MIDID2 FIXED(8),           /* MIDDLE CHARACTER      @Z40LB01*/ 08828000
*      2 ENDID2 FIXED(8);           /* END CHARACTER         @Z40LB01*/ 08829000
*   DCL                                                            2302 08830000
*     1 VALSID CHAR(5),             /* VALIDATE SSID         @ZA30157*/ 08831000
*      2 CSSID CHAR(4),             /* COMMA & SSID          @ZA30157*/ 08832000
*      2 CORB CHAR(1);              /* COMMA OR BLANK        @ZA30157*/ 08833000
*                                                                  2303 08834000
*/********************************************************   @Z40LB01*/ 08835000
*/*                                                          @Z40LB01*/ 08836000
*/* THE FOLLOWING CODE SYNTAX CHECKS THE COMMAND.            @Z40LB01*/ 08837000
*/*                                                          @Z40LB01*/ 08838000
*/********************************************************   @Z40LB01*/ 08839000
*                                                                  2303 08840000
*   RFY                                                            2303 08841000
*     R14 RSTD;                     /*                       @G24LB02*/ 08842000
*   SAVR1455=R14;                   /* SAVE RETURN ADDRESS   @Z40LB01*/ 08843000
         ST    R14,SAVR1455                                        2304 08844000
*   RFY                                                            2305 08845000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 08846000
*   EXITSW=OFF;                     /* CLEAR BYPASS SWITCH   @ZA30157*/ 08847000
*   DSPERR=OFF;                     /* CLEAR ERROR SWITCH    @ZA30157*/ 08848000
         NI    EXITSW,B'11110011'                                  2307 08849000
*   DSPFLG=''B;                     /* CLEAR DISPLAY FLAGS   @Z40LB01*/ 08850000
         L     @12,CWBPTR                                          2308 08851000
         MVI   DSPFLG(@12),X'00'                                   2308 08852000
*   PTHFLG=ZERO;                    /* ZERO FLAGS & CWBOFF   @ZA30157*/ 08853000
         MVC   PTHFLG(3,@12),ZERO                                  2309 08854000
*   IF CWBCMND(5:5)=' ' THEN        /* TEST FOR DEFAULT OPT  @Z40LB01*/ 08855000
         CLI   CWBCMND+4(@12),C' '                                 2310 08856000
         BNE   @RF02310                                            2310 08857000
*     DO;                           /* DISPLAY ALL UNITS     @Z40LB01*/ 08858000
*       DSPALL=ON;                  /* SET DISPLAY ALL FLAG  @ZA30157*/ 08859000
         OI    DSPALL(@12),B'10000000'                             2312 08860000
*       EXITSW=ON;                  /* SET EXIT ON,NO MORE   @ZA30157*/ 08861000
         OI    EXITSW,B'00001000'                                  2313 08862000
*     END;                          /* END DSP ALL CODE      @Z40LB01*/ 08863000
*   IF EXITSW=OFF THEN              /* SYNTAX NOT COMPLETE   @Z40LB01*/ 08864000
@RF02310 TM    EXITSW,B'00001000'                                  2315 08865000
         BNZ   @RF02315                                            2315 08866000
*     DO;                           /* CONTINUE SYNTAX CHECK @Z40LB01*/ 08867000
*       IF CWBCMND(5:8)=',SDG' THEN /* TEST FOR SDG DISPLAY  @Z40LB01*/ 08868000
         L     @12,CWBPTR                                          2317 08869000
         CLC   CWBCMND+4(4,@12),@CC03173                           2317 08870000
         BNE   @RF02317                                            2317 08871000
*         DO;                       /* DISPLAY SDG REQUEST   @Z40LB01*/ 08872000
*           DSPSDG=ON;              /* SET DISPLAY SDG FLAG  @ZA30157*/ 08873000
         OI    DSPSDG(@12),B'00010000'                             2319 08874000
*           S=F9;                   /* SET FOR ONOFF RTNE    @ZA30157*/ 08875000
         LA    @09,9                                               2320 08876000
         ST    @09,S                                               2320 08877000
*           IF CWBCMND(9:10)<F2F8&  /* 00 <= SDG <= 27       @ZA14741*/ 08878000
*               (CWBCMND(9:10)&F0F0)=F0F0 THEN/* IF NOT, ERROR     2321 08879000
*                                                            @ZA14741*/ 08880000
         CLC   CWBCMND+8(2,@12),@CC02458                           2321 08881000
         BNL   @RF02321                                            2321 08882000
         MVC   @TS00001(2),CWBCMND+8(@12)                          2321 08883000
         NC    @TS00001(2),@CC02456                                2321 08884000
         CLC   @TS00001(2),@CC02456                                2321 08885000
         BNE   @RF02321                                            2321 08886000
*             DO;                   /* SET OFFSET & CALL     @ZA30157*/ 08887000
*               CWBOFFS=HF9;        /* OFFSET FOR MSG56      @ZA30157*/ 08888000
         STH   @09,CWBOFFS(,@12)                                   2323 08889000
*               S=F11;              /* OFFSET FOR ONOFFCK    @ZA30157*/ 08890000
         MVC   S(4),@CF02048                                       2324 08891000
*             END;                  /* WAS SDGNN REQUEST     @ZA30157*/ 08892000
*           CALL ONOFFCK;           /* SEE IF ON/OFF LINE    @ZA30157*/ 08893000
@RF02321 BAL   @14,ONOFFCK                                         2326 08894000
*         END;                      /*                       @Z40LB01*/ 08895000
*     END;                          /* END OF DSP SDG CODE   @Z40LB01*/ 08896000
@RF02317 DS    0H                                                  2329 08897000
*   IF EXITSW=OFF THEN              /* SYNTAX NOT COMPLETE   @Z40LB01*/ 08898000
@RF02315 TM    EXITSW,B'00001000'                                  2329 08899000
         BNZ   @RF02329                                            2329 08900000
*     DO;                           /* CONTINUE SYNTAX CHK   @Z40LB01*/ 08901000
*       IF CWBCMND(5:6)=',(' THEN   /* TEST FOR RANGE DSP    @Z40LB01*/ 08902000
         L     @12,CWBPTR                                          2331 08903000
         CLC   CWBCMND+4(2,@12),@CC03175                           2331 08904000
         BNE   @RF02331                                            2331 08905000
*         DO;                       /* DISPLAY RANGE REQ     @Z40LB01*/ 08906000
*           DSPRNG=ON;              /* SET DSP RNG FLAG      @ZA30157*/ 08907000
         OI    DSPRNG(@12),B'00001000'                             2333 08908000
*           CWBOFFS=HF7;            /* OFFSET OF PARM        @ZA30157*/ 08909000
         MVC   CWBOFFS(2,@12),@CH01340                             2334 08910000
*           CONVID1=CWBCMND(7:9);   /* SSID1 TO CONV FIELD   @Z40LB01*/ 08911000
         MVC   CONVID1(3),CWBCMND+6(@12)                           2335 08912000
*           ALPHAS=CHARS;           /* BUILD TRANS TABLE     @Z40LB01*/ 08913000
         LA    @09,24                                              2336 08914000
         AL    @09,CCWSPTR                                         2336 08915000
         MVC   ALPHAS(6,@09),CHARS                                 2336 08916000
*           NUMBRS=NUMS;            /* BUILD TRANS TABLE     @Z40LB01*/ 08917000
         MVC   NUMBRS(16,@09),NUMS                                 2337 08918000
*           TR(CONVID1,TRANSTBL);   /* TRANSLATE SSID1       @Z40LB01*/ 08919000
         TR    CONVID1(3),TRANSTBL(@09)                            2338 08920000
*           CONVID2=CWBCMND(11:13); /* SSID2 TO CONV FIELD   @Z40LB01*/ 08921000
         MVC   CONVID2(3),CWBCMND+10(@12)                          2339 08922000
*           TR(CONVID2,TRANSTBL);   /* TRANSLATE SSID2       @Z40LB01*/ 08923000
         TR    CONVID2(3),TRANSTBL(@09)                            2340 08924000
*           IF CWBCMND(10:10)^='-' THEN/* TEST FOR UNIT-UNIT @Z40LB01*/ 08925000
         CLI   CWBCMND+9(@12),C'-'                                 2341 08926000
         BE    @RF02341                                            2341 08927000
*             DSPERR=ON;            /* SET SYNTAX ERR FLAG   @ZA30157*/ 08928000
         OI    DSPERR,B'00000100'                                  2342 08929000
*           IF CWBCMND(14:14)^=')' THEN/* TEST FOR END PAREN @Z40LB01*/ 08930000
@RF02341 L     @12,CWBPTR                                          2343 08931000
         CLI   CWBCMND+13(@12),C')'                                2343 08932000
         BE    @RF02343                                            2343 08933000
*             DSPERR=ON;            /* SET SYNTAX ERR FLAG   @ZA30157*/ 08934000
         OI    DSPERR,B'00000100'                                  2344 08935000
*           IF CONVID1>CONVID2 THEN /* INV RANGE REQ         @Z40LB01*/ 08936000
@RF02343 CLC   CONVID1(3),CONVID2                                  2345 08937000
         BNH   @RF02345                                            2345 08938000
*             DSPERR=ON;            /* SET SYNTAX ERR FLAG   @ZA30157*/ 08939000
         OI    DSPERR,B'00000100'                                  2346 08940000
*           S=F15;                  /* OFFSET OF ON/OFF      @ZA30157*/ 08941000
@RF02345 MVC   S(4),@CF00170                                       2347 08942000
*           IF DSPERR=OFF THEN      /* DON'T CALL IF ERROR   @ZA30157*/ 08943000
         TM    DSPERR,B'00000100'                                  2348 08944000
         BNZ   @RF02348                                            2348 08945000
*             CALL ONOFFCK;         /* SEE IF ON /OFF LINE   @ZA30157*/ 08946000
         BAL   @14,ONOFFCK                                         2349 08947000
*         END;                      /*                       @Z40LB01*/ 08948000
@RF02348 DS    0H                                                  2351 08949000
*     END;                          /* END OF DSP RNG CODE   @Z40LB01*/ 08950000
@RF02331 DS    0H                                                  2352 08951000
*   IF EXITSW=OFF THEN              /* SYNTAX NOT COMPLETE   @Z40LB01*/ 08952000
@RF02329 TM    EXITSW,B'00001000'                                  2352 08953000
         BNZ   @RF02352                                            2352 08954000
*     DO;                           /* CONTINUE SYNTAX CHK   @Z40LB01*/ 08955000
*       VALSID=CWBCMND(5:9);        /* SSID TO CNVRT FIELD   @ZA30157*/ 08956000
         L     @12,CWBPTR                                          2354 08957000
         MVC   VALSID(5),CWBCMND+4(@12)                            2354 08958000
*       TRANSTBL=' ';               /* BLANK OUT TABLE       @ZA30157*/ 08959000
         LA    @12,24                                              2355 08960000
         AL    @12,CCWSPTR                                         2355 08961000
         MVI   TRANSTBL+1(@12),C' '                                2355 08962000
         MVC   TRANSTBL+2(254,@12),TRANSTBL+1(@12)                 2355 08963000
         MVI   TRANSTBL(@12),C' '                                  2355 08964000
*       ALPHAS=CHARS;               /* VALIDATE A-F HEX      @ZA30157*/ 08965000
         MVC   ALPHAS(6,@12),CHARS                                 2356 08966000
*       NUMBRS=NUMS;                /* VALIDATE 1-9 HEX      @ZA30157*/ 08967000
         MVC   NUMBRS(16,@12),NUMS                                 2357 08968000
*       TRANSTBL(F64)=BB;           /* UNIQUE FOR BLANK      @ZA30157*/ 08969000
         MVC   TRANSTBL+64(1,@12),BB                               2358 08970000
*       TRANSTBL(F107)=CC;          /* UNIQUE FOR COMMA      @ZA30157*/ 08971000
         MVC   TRANSTBL+107(1,@12),CC                              2359 08972000
*       TR(VALSID,TRANSTBL);        /* CONVERT ,SSID,        @ZA30157*/ 08973000
         TR    VALSID(5),TRANSTBL(@12)                             2360 08974000
*       IF(CSSID&CCF0F0F0)=CCF0F0F0&/* SEE IF ,SSID          @ZA30157*/ 08975000
*           ((CORB&CC)=CC|(CORB&BB)=BB) THEN/* COMMA OR BLANK      2361 08976000
*                                                            @ZA30157*/ 08977000
         MVC   @TS00001(4),CSSID                                   2361 08978000
         NC    @TS00001(4),CCF0F0F0                                2361 08979000
         CLC   @TS00001(4),CCF0F0F0                                2361 08980000
         BNE   @RF02361                                            2361 08981000
         MVC   @TS00001(1),CORB                                    2361 08982000
         NC    @TS00001(1),CC                                      2361 08983000
         CLC   @TS00001(1),CC                                      2361 08984000
         BE    @RT02361                                            2361 08985000
         MVC   @TS00001(1),CORB                                    2361 08986000
         NC    @TS00001(1),BB                                      2361 08987000
         CLC   @TS00001(1),BB                                      2361 08988000
         BNE   @RF02361                                            2361 08989000
@RT02361 DS    0H                                                  2362 08990000
*         DO;                       /* DISPLAY SSID REQ      @Z40LB01*/ 08991000
*           DSPSSID=ON;             /* SET DSP SSID FLAG     @ZA30157*/ 08992000
         L     @12,CWBPTR                                          2363 08993000
         OI    DSPSSID(@12),B'00000100'                            2363 08994000
*           S=F9;                   /* OFFSET OF ON/OFF      @ZA30157*/ 08995000
         MVC   S(4),@CF02044                                       2364 08996000
*           CWBOFFS=HF6;            /* OFFSET OF NUMERIC     @ZA30157*/ 08997000
         MVC   CWBOFFS(2,@12),@CH00810                             2365 08998000
*           CALL ONOFFCK;           /* SEE IF ON/OFF LINE    @ZA30157*/ 08999000
         BAL   @14,ONOFFCK                                         2366 09000000
*         END;                      /*                       @Z40LB01*/ 09001000
*     END;                          /* END DSP SSID CODE     @Z40LB01*/ 09002000
@RF02361 DS    0H                                                  2369 09003000
*   IF EXITSW=OFF THEN              /* NOT FOUND IT YET      @ZA30157*/ 09004000
@RF02352 TM    EXITSW,B'00001000'                                  2369 09005000
         BNZ   @RF02369                                            2369 09006000
*     IF CWBCMND(5:9)=',QCB '       /* IS THIS QCB REQUEST   @ZA30157*/ 09007000
*       THEN                                                       2370 09008000
         L     @12,CWBPTR                                          2370 09009000
         CLC   CWBCMND+4(5,@12),@CC03177                           2370 09010000
         BNE   @RF02370                                            2370 09011000
*       DSPQCB=ON;                  /* TURN ON INDICATOR     @ZA30157*/ 09012000
         OI    DSPQCB(@12),B'00000100'                             2371 09013000
*     ELSE                                                         2372 09014000
*       IF CWBCMND(5:10)=',MSVC '   /* IS THIS MSVC REQUEST  @ZA30157*/ 09015000
*         THEN                                                     2372 09016000
         B     @RC02370                                            2372 09017000
@RF02370 L     @12,CWBPTR                                          2372 09018000
         CLC   CWBCMND+4(6,@12),@CC03178                           2372 09019000
         BNE   @RF02372                                            2372 09020000
*         DSPMSVC=ON;               /* TURN ON INDICATOR     @ZA30157*/ 09021000
         OI    DSPMSVC(@12),B'00010000'                            2373 09022000
*       ELSE                                                       2374 09023000
*         IF CWBCMND(5:11)=',TRACE '/* TRACE REQUEST ?       @ZA30157*/ 09024000
*           THEN                                                   2374 09025000
         B     @RC02372                                            2374 09026000
@RF02372 L     @12,CWBPTR                                          2374 09027000
         CLC   CWBCMND+4(7,@12),@CC03179                           2374 09028000
         BNE   @RF02374                                            2374 09029000
*           DSPTRC=ON;              /* INDICATE TRACE        @ZA30157*/ 09030000
         OI    DSPTRC(@12),B'00001000'                             2375 09031000
*         ELSE                                                     2376 09032000
*           IF CWBCMND(5:12)=',ALTMSC '/* ALTMSC REQUEST ?   @ZA30157*/ 09033000
*             THEN                                                 2376 09034000
         B     @RC02374                                            2376 09035000
@RF02374 L     @12,CWBPTR                                          2376 09036000
         CLC   CWBCMND+4(8,@12),@CC03180                           2376 09037000
         BNE   @RF02376                                            2376 09038000
*             DSPALTM=ON;           /* INDICATE ALTMSC       @ZA30157*/ 09039000
         OI    DSPALTM(@12),B'00000010'                            2377 09040000
*           ELSE                                                   2378 09041000
*             IF CWBCMND(5:10)=',PATHS' THEN/* PATHS REQUEST ?     2378 09042000
*                                                            @ZA30157*/ 09043000
         B     @RC02376                                            2378 09044000
@RF02376 L     @12,CWBPTR                                          2378 09045000
         CLC   CWBCMND+4(6,@12),@CC03181                           2378 09046000
         BNE   @RF02378                                            2378 09047000
*               DO;                 /* PROCESS PATHS         @ZA30157*/ 09048000
*                 S=F11;            /* OFFSET OF ON/OFF      @ZA30157*/ 09049000
         MVC   S(4),@CF02048                                       2380 09050000
*                 DSPPATH=ON;       /* INDICATE PATH         @ZA30157*/ 09051000
         OI    DSPPATH(@12),B'00000001'                            2381 09052000
*                 IF CWBCMND(11:14)=',CPU' THEN/* CPU PATHS ?      2382 09053000
*                                                            @ZA30157*/ 09054000
         CLC   CWBCMND+10(4,@12),@CC03182                          2382 09055000
         BNE   @RF02382                                            2382 09056000
*                   DO;             /* IS CPU                @ZA30157*/ 09057000
*                     S=F15;        /* OFFSET OF ON/OFF      @ZA30157*/ 09058000
         MVC   S(4),@CF00170                                       2384 09059000
*                     DSPCPU=ON;    /* INDICATE CPU PATHS    @ZA30157*/ 09060000
         OI    DSPCPU(@12),B'00000010'                             2385 09061000
*                   END;            /* END PATHS CPU         @ZA30157*/ 09062000
*                 ELSE                                             2387 09063000
*                   IF CWBCMND(11:14)=',SDG' THEN/* SDG PATHS ?    2387 09064000
*                                                            @ZA30157*/ 09065000
         B     @RC02382                                            2387 09066000
@RF02382 L     @12,CWBPTR                                          2387 09067000
         CLC   CWBCMND+10(4,@12),@CC03173                          2387 09068000
         BNE   @RF02387                                            2387 09069000
*                     DO;           /* SEE IF SDGNN          @ZA30157*/ 09070000
*                       DSPSDG=ON;  /* INDICATE SDG PATHS    @ZA30157*/ 09071000
         OI    DSPSDG(@12),B'00010000'                             2389 09072000
*                       S=F15;      /* OFFSET OF ON/OFF      @ZA30157*/ 09073000
         LA    @09,15                                              2390 09074000
         ST    @09,S                                               2390 09075000
*                       IF CWBCMND(15:16)<F2F8&/* SEE IF NN IS GOOD     09076000
*                                                            @ZA30157*/ 09077000
*                           (CWBCMND(15:16)&F0F0)=F0F0 THEN/* NUMERIC   09078000
*                                      < 28                  @ZA30157*/ 09079000
         CLC   CWBCMND+14(2,@12),@CC02458                          2391 09080000
         BNL   @RF02391                                            2391 09081000
         MVC   @TS00001(2),CWBCMND+14(@12)                         2391 09082000
         NC    @TS00001(2),@CC02456                                2391 09083000
         CLC   @TS00001(2),@CC02456                                2391 09084000
         BNE   @RF02391                                            2391 09085000
*                         DO;       /* YES                   @ZA30157*/ 09086000
*                           CWBOFFS=HF15;/* SET OFFSET OF NN @ZA30157*/ 09087000
         STH   @09,CWBOFFS(,@12)                                   2393 09088000
*                           S=F17;  /* OFFSET OF ON/OFF      @ZA30157*/ 09089000
         MVC   S(4),@CF02056                                       2394 09090000
*                         END;      /* END SDGNN CK          @ZA30157*/ 09091000
*                     END;          /* END SDG CHECK         @ZA30157*/ 09092000
*                   ELSE                                           2397 09093000
*                     IF CWBCMND(11:14)=',DRC' THEN/* DRC PATHS ?  2397 09094000
*                                                            @ZA30157*/ 09095000
         B     @RC02387                                            2397 09096000
@RF02387 L     @12,CWBPTR                                          2397 09097000
         CLC   CWBCMND+10(4,@12),@CC03183                          2397 09098000
         BNE   @RF02397                                            2397 09099000
*                       DO;         /* IS DRC                @ZA30157*/ 09100000
*                         DSPDRC=ON;/* INDICATE DRC PATHS    @ZA30157*/ 09101000
         OI    DSPDRC(@12),B'10000000'                             2399 09102000
*                         S=F15;    /* OFFSET OF ON/OFF      @ZA30157*/ 09103000
         LA    @09,15                                              2400 09104000
         ST    @09,S                                               2400 09105000
*                         IF(CWBCMND(15:16)&F0F0)=F0F0 THEN/* IS   2401 09106000
*                                      PATHS,DRCNN ??        @ZA30157*/ 09107000
         MVC   @TS00001(2),CWBCMND+14(@12)                         2401 09108000
         NC    @TS00001(2),@CC02456                                2401 09109000
         CLC   @TS00001(2),@CC02456                                2401 09110000
         BNE   @RF02401                                            2401 09111000
*                           DO;     /* YES ID PATHS,DRCNN    @ZA30157*/ 09112000
*                             S=F17;/* OFFSET OF ONOFFCK     @ZA30157*/ 09113000
         MVC   S(4),@CF02056                                       2403 09114000
*                             CWBOFFS=HF15;/* OFFSET OF NUMERICS   2404 09115000
*                                                            @ZA30157*/ 09116000
         STH   @09,CWBOFFS(,@12)                                   2404 09117000
*                           END;    /* END OF PATHS,DRCNN    @ZA30157*/ 09118000
*                       END;        /* END OF DRC CHK        @ZA30157*/ 09119000
*                     ELSE                                         2407 09120000
*                       DO;         /* SEE IF CPUID          @ZA30157*/ 09121000
         B     @RC02397                                            2407 09122000
@RF02397 DS    0H                                                  2408 09123000
*                         TRANSTBL='0'B;/* MAKE ALL VALID    @ZA30157*/ 09124000
         LA    @12,24                                              2408 09125000
         AL    @12,CCWSPTR                                         2408 09126000
         XC    TRANSTBL+1(255,@12),TRANSTBL+1(@12)                 2408 09127000
         MVI   TRANSTBL(@12),B'00000000'                           2408 09128000
*                         TRANSTBL(F64)=BB;/* INVALIDATE BLANKS    2409 09129000
*                                                            @ZA30157*/ 09130000
         MVC   TRANSTBL+64(1,@12),BB                               2409 09131000
*                         TRANSTBL(F107)=CC;/* INVALIDATE COMMAS   2410 09132000
*                                                            @ZA30157*/ 09133000
         MVC   TRANSTBL+107(1,@12),CC                              2410 09134000
*                         TRT(CWBCMND(12:21),TRANSTBL);/* SEE IF   2411 09135000
*                                      VALID CPUID           @ZA30157*/ 09136000
         L     @03,CWBPTR                                          2411 09137000
         L     @12,CCWSPTR                                         2411 09138000
         TRT   CWBCMND+11(10,@03),TRANSTBL+24(@12)                 2411 09139000
*                         GEN(BNZ  NOTCPU);/* BR IF NOT VALID      2412 09140000
*                                                            @ZA30157*/ 09141000
         BNZ  NOTCPU                                                    09142000
*                         CWBOFFS=HF12;/* OFFSET OF CPUID    @ZA30157*/ 09143000
         L     @12,CWBPTR                                          2413 09144000
         MVC   CWBOFFS(2,@12),@CH02050                             2413 09145000
*                         DSPCPU=ON;/* CPUID REQUEST         @ZA30157*/ 09146000
         OI    DSPCPU(@12),B'00000010'                             2414 09147000
*                         S=F22;    /* OFFSET OF ON/OFF      @ZA30157*/ 09148000
         MVC   S(4),@CF02064                                       2415 09149000
*NOTCPU:                                                           2416 09150000
*                       END;        /* END CPUID CHECK       @ZA30157*/ 09151000
NOTCPU   DS    0H                                                  2417 09152000
*                 CALL ONOFFCK;     /* SEE IF ON/OFF SOUGHT  @ZA30157*/ 09153000
@RC02397 DS    0H                                                  2417 09154000
@RC02387 DS    0H                                                  2417 09155000
@RC02382 BAL   @14,ONOFFCK                                         2417 09156000
*               END;                /* END PATHS CHECK       @ZA30157*/ 09157000
*   IF(CWBFLGS&F1E)^=F00 THEN       /* MSVC,QCB,TRC,ALTMSC?  @ZA30157*/ 09158000
@RF02378 DS    0H                                                  2419 09159000
@RC02376 DS    0H                                                  2419 09160000
@RC02374 DS    0H                                                  2419 09161000
@RC02372 DS    0H                                                  2419 09162000
@RC02370 DS    0H                                                  2419 09163000
@RF02369 L     @12,CWBPTR                                          2419 09164000
         MVC   @TS00001(1),CWBFLGS(@12)                            2419 09165000
         NI    @TS00001,X'1E'                                      2419 09166000
         CLI   @TS00001,X'00'                                      2419 09167000
         BE    @RF02419                                            2419 09168000
*     EXITSW=ON;                    /* YES SO DONE OK        @ZA30157*/ 09169000
         OI    EXITSW,B'00001000'                                  2420 09170000
*   IF EXITSW=OFF THEN              /* TST FOR VALID SYNTAX  @Z40LB01*/ 09171000
@RF02419 TM    EXITSW,B'00001000'                                  2421 09172000
         BNZ   @RF02421                                            2421 09173000
*     DO;                           /* CHK LAST PARM         @ZA30157*/ 09174000
*       S=F5;                       /* ON/OFF WITH NO PARMS  @ZA30157*/ 09175000
         MVC   S(4),@CF00796                                       2423 09176000
*       CALL ONOFFCK;               /* SEE IF ON/OFF ASKED   @ZA30157*/ 09177000
         BAL   @14,ONOFFCK                                         2424 09178000
*       DSPALL=ON;                  /* SET ALL DISPLAY ON    @ZA30157*/ 09179000
         L     @12,CWBPTR                                          2425 09180000
         OI    DSPALL(@12),B'10000000'                             2425 09181000
*     END;                          /* ALL VALID CKED        @ZA30157*/ 09182000
*   IF DSPERR=ON THEN               /* CHECK FOR SYNTAX ERR  @ZA30157*/ 09183000
@RF02421 TM    DSPERR,B'00000100'                                  2427 09184000
         BNO   @RF02427                                            2427 09185000
*     DO;                           /* PROCESS SYNTAX ERROR  @Z40LB01*/ 09186000
*       WTOMCS03=MESGS(MSG05601);   /* LOAD MESSAGE TEXT     @Z40LB01*/ 09187000
         MVI   WTOMCS03+72,C' '                                    2429 09188000
         L     @12,@CA02101                                        2429 09189000
         MVC   WTOMCS03(72),MESGS-MSGS+1216(@12)                   2429 09190000
*       WTOMCS03(33:58)=SYNTXMSG;   /* FILL IN SYNTAX TEXT   @Z40LB01*/ 09191000
         MVC   WTOMCS03+32(26),SYNTXMSG                            2430 09192000
*       CALL ICBMSG47;              /* CALL MSG47 FOR WTO    @Z40LB01*/ 09193000
         BAL   @14,ICBMSG47                                        2431 09194000
*     END;                          /* END SYNTAX ERR CODE   @Z40LB01   09195000
*                                                            @Z40LB01*/ 09196000
*                                                                  2433 09197000
*/*********************************************************  @Z40LB01*/ 09198000
*/* IF NO ERROR WAS ENCOUNTERED SO FAR THEN INTERNALLY       @Z40LB01*/ 09199000
*/* QUEUE THIS CWB SO COMTASK FUNCTIONS CAN CONTINUE         @Z40LB01*/ 09200000
*/* WHILE THE ASYNCRONOUS DISPLAY PROCESSING IS WAITING      @Z40LB01*/ 09201000
*/* TO COMPLETE.                                             @Z40LB01*/ 09202000
*/*********************************************************  @Z40LB01*/ 09203000
*                                                                  2433 09204000
*   IF DSPERR=OFF THEN              /* TEST FOR ERROR COND   @ZA30157*/ 09205000
@RF02427 TM    DSPERR,B'00000100'                                  2433 09206000
         BNZ   @RF02433                                            2433 09207000
*     DO;                           /* NO ERROR - CONTINUE   @Z40LB01*/ 09208000
*       LOOPEND=OFF;                /* CLEAR END SWITCH      @ZA30157*/ 09209000
         NI    LOOPEND,B'11101111'                                 2435 09210000
*       DO I=F1 TO F10 WHILE LOOPEND=OFF;/* FIND EMPTY SLOT  @Z40LB01*/ 09211000
         LA    @12,1                                               2436 09212000
         ST    @12,I                                               2436 09213000
@DL02436 TM    LOOPEND,B'00010000'                                 2436 09214000
         BNZ   @DC02436                                            2436 09215000
*         IF CMDQUE(I)=F0 THEN      /* SLOT IS EMPTY         @Z40LB01*/ 09216000
         SLA   @12,2                                               2437 09217000
         L     @09,CMDQUE-4(@12)                                   2437 09218000
         LTR   @09,@09                                             2437 09219000
         BNZ   @RF02437                                            2437 09220000
*           DO;                     /* QUE SLOT FILL CODE    @Z40LB01*/ 09221000
*             LOOPEND=ON;           /* SET LOOP EXIT SW      @Z40LB01*/ 09222000
         OI    LOOPEND,B'00010000'                                 2439 09223000
*             CMDQUE(I)=CWBPTR;     /* PUT CWB PTR IN SLOT   @Z40LB01*/ 09224000
         L     @09,CWBPTR                                          2440 09225000
         ST    @09,CMDQUE-4(@12)                                   2440 09226000
*           END;                    /* END QUE FILL CODE     @Z40LB01*/ 09227000
*         ELSE                      /* SLOT NOT EMPTY        @Z40LB01*/ 09228000
*           IF I=F10 THEN           /* TEST FOR FULL QUEUE   @Z40LB01*/ 09229000
         B     @RC02437                                            2442 09230000
@RF02437 CLC   I(4),@CF02046                                       2442 09231000
         BNE   @RF02442                                            2442 09232000
*             DO;                   /* QUEUE IS FULL         @Z40LB01*/ 09233000
*                                                                  2443 09234000
*               /*****************************************************/ 09235000
*               /*                                                   */ 09236000
*               /* ISSUE A COMMAND REJECT MESSAGE ADVISING   @Z40LB01*/ 09237000
*               /* OPERATOR THAT HE WILL HAVE TO TRY THE DISPLAY     */ 09238000
*               /*                                           @Z40LB01*/ 09239000
*               /* AGAIN AFTER A PREVIOUS DISPLAY ENDS.      @Z40LB01*/ 09240000
*               /*                                                   */ 09241000
*               /*****************************************************/ 09242000
*                                                                  2444 09243000
*               WTOMCS03=MESGS(MSG05601);/* MOVE MSG TO WTO AREA   2444 09244000
*                                                            @Z40LB01*/ 09245000
         MVI   WTOMCS03+72,C' '                                    2444 09246000
         L     @12,@CA02101                                        2444 09247000
         MVC   WTOMCS03(72),MESGS-MSGS+1216(@12)                   2444 09248000
*               WTOMCS03(33:58)=SPACEMSG;/* FILL MSG TEXT    @Z40LB01*/ 09249000
         MVC   WTOMCS03+32(26),SPACEMSG                            2445 09250000
*               CALL ICBMSG47;      /* CALL MSG47 FOR WTO    @Z40LB01*/ 09251000
         BAL   @14,ICBMSG47                                        2446 09252000
*               DSPERR=ON;          /* SET ERROR FLAG        @Z40LB01*/ 09253000
         OI    DSPERR,B'00000100'                                  2447 09254000
*             END;                  /* END ERROR PROCESS     @Z40LB01*/ 09255000
*       END;                        /* END INTERNAL QUE      @Z40LB01*/ 09256000
@RF02442 DS    0H                                                  2449 09257000
@RC02437 LA    @12,1                                               2449 09258000
         AL    @12,I                                               2449 09259000
         ST    @12,I                                               2449 09260000
         C     @12,@CF02046                                        2449 09261000
         BNH   @DL02436                                            2449 09262000
@DC02436 DS    0H                                                  2450 09263000
*     END;                          /* END QUEUE CODE        @Z40LB01*/ 09264000
*                                                                  2451 09265000
*/*********************************************************  @Z40LB01*/ 09266000
*/* REGARDLESS IF THERE WAS AN ERROR OR NOT, THE CWB MUST    @Z40LB01*/ 09267000
*/* BE DEQUEUED FROM THE COMQ. SUBROUTINE ICBMSG44 IS        @Z40LB01*/ 09268000
*/* CALLED TO DO THE DEQUEUING AND TO CLEAR THE COMTASK      @Z40LB01*/ 09269000
*/* ECB IF THE COMQ BECOMES EMPTY.                           @Z40LB01*/ 09270000
*/*********************************************************  @Z40LB01*/ 09271000
*                                                                  2451 09272000
*                                   /*                       @Z40LB01*/ 09273000
*   CALL ICBMSG44;                  /* CALL DEQUEUE SUB      @Z40LB01*/ 09274000
@RF02433 BAL   @14,ICBMSG44                                        2451 09275000
*                                                                  2452 09276000
*/*********************************************************  @Z40LB01*/ 09277000
*/* IF NO ERROR SO FAR, A CHECK IS MADE TO SEE IF THE        @Z40LB01*/ 09278000
*/* THE LATEST MSC UNIT STATUS OR NOT. A COMMUNICATIONS      @Z40LB01*/ 09279000
*/* FLAG (MSG92FLG) IS USED BY ICBMSG15, ICBMSG55, AND       @Z40LB01*/ 09280000
*/* ICBMSG56 TO KEEP THE STATUS OF WHETHER THE MSC UNIT      @Z40LB01*/ 09281000
*/* STATUS (MSG CODE 92) HAS BEEN REQUESTED OR NOT. IF       @Z40LB01*/ 09282000
*/* THE STATUS HAS ALREADY BEEN REQUESTED (FLAG SET ON)      @Z40LB01*/ 09283000
*/* OR AN ERROR WAS FOUND IN THIS COMMAND, THEN THIS         @Z40LB01*/ 09284000
*/* CODE GETS BYPASSED.                                      @Z40LB01*/ 09285000
*/*********************************************************  @Z40LB01*/ 09286000
*                                                                  2452 09287000
*                                   /*                       @Z40LB01*/ 09288000
*   IF DSPERR=OFF&MSG92FLG=OFF THEN /*                       @Z40LB01*/ 09289000
         TM    DSPERR,B'10000100'                                  2452 09290000
         BNZ   @RF02452                                            2452 09291000
*     DO;                           /* NO ERROR AND A MESSAGE 92 IS     09292000
*                                      REQUIRED              @Z40LB01*/ 09293000
*       RFY                                                        2454 09294000
*        (R15,                                                     2454 09295000
*         R0) RSTD;                 /* RESTRICT REGS         @Z40LB01*/ 09296000
*       SAVREENT=REENTRY;           /* SAVE REENTRY POINTER  @G24LB02*/ 09297000
         L     @14,REENTRY                                         2455 09298000
         ST    @14,SAVREENT                                        2455 09299000
*       REENTRY=ADDR(INITRET);      /* SET NEW REENTRY POINTER     2456 09300000
*                                                            @G24LB02*/ 09301000
         LA    @14,INITRET                                         2456 09302000
         ST    @14,REENTRY                                         2456 09303000
*       SVCCALL=ON;                 /* SET SVC CALL FLAG     @G24LB02*/ 09304000
         OI    SVCCALL,B'00001000'                                 2457 09305000
*IICBPAI3:                                                         2458 09306000
*                                                                  2458 09307000
*       /*************************************************************/ 09308000
*       /*                                                           */ 09309000
*       /* *******************************************************   */ 09310000
*       /*                                                   @Y30LB02*/ 09311000
*       /* MACMEAN PURGE/ASSIGN/INITIALIZE/READY MACRO       @Y30LB02*/ 09312000
*       /* VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00           @Y30LB02*/ 09313000
*       /* THIS IS THE OUTPUT FOR THE EXECUTE FORM.          @Y30LB02*/ 09314000
*       /* THE LIST FORM OF THIS MACRO SHOULD BE             @Y30LB02*/ 09315000
*       /* INVOKED FIRST IN ORDER TO SET UP NECESSARY        @Y30LB02*/ 09316000
*       /* DECLARES. IF THE COMPLETE ARGUMENT IS             @Y30LB02*/ 09317000
*       /* SPECIFIED THE REQ BLOCK WILL BE ZEROED.           @Y30LB02*/ 09318000
*       /* *******************************************************   */ 09319000
*       /*                                                   @Y30LB02*/ 09320000
*       /*                                                           */ 09321000
*       /*************************************************************/ 09322000
*                                                                  2458 09323000
*       RFY                                                        2458 09324000
*        (PAIRR1) RSTD;             /* RESTRICT R1           @Y30LB02*/ 09325000
IICBPAI3 DS    0H                                                  2459 09326000
*       PAIRR1=ADDR(ARLIST);        /* SET PAIRR1 TO REQ BLOCK     2459 09327000
*                                                            @Y30LB02*/ 09328000
         LA    PAIRR1,ARLIST                                       2459 09329000
*       ARLIST=ARLIST&&ARLIST;      /* ZERO REQUEST BLOCK    @Y30LB02*/ 09330000
         XC    ARLIST(8),ARLIST                                    2460 09331000
*       AIRLL='08'X;                /* SET LENGTH FIELD      @Y30LB02*/ 09332000
         LA    @14,8                                               2461 09333000
         ST    @14,AIRLL                                           2461 09334000
*       AIROP='10'X;                /* INITL OPCODE          @Y30LB02*/ 09335000
         MVI   AIROP,X'10'                                         2462 09336000
*       AIRFLAG=(INITATTS);         /* FILL IN FLAGS FIELD   @Y30LB02*/ 09337000
         MVC   AIRFLAG(2),INITATTS                                 2463 09338000
*       SVC(126);                   /* ISSUE SVC INST.       @Y30LB02*/ 09339000
         SVC   126                                                 2464 09340000
*       RFY                                                        2465 09341000
*        (PAIRR1) UNRSTD;           /* UNRESTRICT R1         @Y30LB02*/ 09342000
*                                                                  2465 09343000
*       /*************************************************************/ 09344000
*       /*                                                           */ 09345000
*       /*                                                   @Z40LB01*/ 09346000
*       /*                                                           */ 09347000
*       /*************************************************************/ 09348000
*                                                                  2466 09349000
*INITRET:                           /* LABEL FOR RETURN      @G24LB02*/ 09350000
*       SVCCALL=OFF;                /* CLEAR SVC CALL FLAG   @G24LB02*/ 09351000
INITRET  NI    SVCCALL,B'11110111'                                 2466 09352000
*       REENTRY=SAVREENT;           /* RESTORE REENTRY POINTER     2467 09353000
*                                                            @G24LB02*/ 09354000
         L     @14,SAVREENT                                        2467 09355000
         ST    @14,REENTRY                                         2467 09356000
*       IF R15^=F0 THEN             /* TEST FOR ERROR        @Z40LB01*/ 09357000
         LTR   R15,R15                                             2468 09358000
         BZ    @RF02468                                            2468 09359000
*         DO;                       /* PROCESS ERROR         @Z40LB01*/ 09360000
*                                                                  2469 09361000
*           /*********************************************************/ 09362000
*           /*                                                       */ 09363000
*           /* BUILD AND ISSUE DISPLAY 3850 FAIL MESSAGE     @Z40LB01*/ 09364000
*           /*                                                       */ 09365000
*           /*********************************************************/ 09366000
*                                                                  2470 09367000
*           INTER=''B;              /* CLEAR CONV AREA       @Z40LB01*/ 09368000
         XC    INTER(4),INTER                                      2470 09369000
*           BYTE4C=R0;              /* REASON CODE           @Z40LB01*/ 09370000
         STC   R0,BYTE4C                                           2471 09371000
*           CALL ICBMSG82;          /* CALL CONV SUBROUTINE  @Z40LB01*/ 09372000
         BAL   @14,ICBMSG82                                        2472 09373000
*           RFY                                                    2473 09374000
*            (R15,                                                 2473 09375000
*             R0) UNRSTD;           /* FREE REGS             @Z40LB01*/ 09376000
*           WTOMCS03=MESGS(MSG05601);/* MOVE TO WTO BUFFER   @Z40LB01*/ 09377000
         MVI   WTOMCS03+72,C' '                                    2474 09378000
         L     @12,@CA02101                                        2474 09379000
         MVC   WTOMCS03(72),MESGS-MSGS+1216(@12)                   2474 09380000
*           WTOMCS03(56:58)=BYTES234;/* FILL REASON          @Z40LB01*/ 09381000
         MVC   WTOMCS03+55(3),BYTES234                             2475 09382000
*           CALL ICBMSG47;          /* CALL MSG47 TO WTO     @Z40LB01*/ 09383000
         BAL   @14,ICBMSG47                                        2476 09384000
*           DSPERR=ON;              /* SET ERROR SWITCH      @Z40LB01*/ 09385000
         OI    DSPERR,B'00000100'                                  2477 09386000
*         END;                      /* END ERROR PROCESS     @Z40LB01*/ 09387000
*       ELSE                        /* NO ERROR              @Z40LB01*/ 09388000
*         MSG92FLG=ON;              /* SET MSG92 FLAG        @Z40LB01*/ 09389000
         B     @RC02468                                            2479 09390000
@RF02468 OI    MSG92FLG,B'10000000'                                2479 09391000
*     END;                          /* END MSG92 CODE        @Z40LB01*/ 09392000
@RC02468 DS    0H                                                  2481 09393000
*                                                                  2481 09394000
*/*********************************************************  @Z40LB01*/ 09395000
*/* IF THE ERROR FLAG HAS BEEN SET THEN THE CWB CORE         @Z40LB01*/ 09396000
*/* MUST BE FREED AND THE CWB REMOVED FROM THE INTERNAL      @Z40LB01*/ 09397000
*/* QUEUE.                                                   @Z40LB01*/ 09398000
*/*********************************************************  @Z40LB01*/ 09399000
*                                                                  2481 09400000
*   IF DSPERR=ON THEN               /* TEST FOR ERROR        @Z40LB01*/ 09401000
@RF02452 TM    DSPERR,B'00000100'                                  2481 09402000
         BNO   @RF02481                                            2481 09403000
*     DO;                           /* DO ON ERROR           @Z40LB01*/ 09404000
*                                                                  2482 09405000
*       /*************************************************************/ 09406000
*       /*                                                           */ 09407000
*       /* DEQUEUE CWB FROM INTERNAL QUEUE                   @Z40LB01*/ 09408000
*       /*                                                           */ 09409000
*       /*************************************************************/ 09410000
*                                                                  2483 09411000
*       DO I=F1 TO F10;             /* SCAN THE QUEUE        @Z40LB01*/ 09412000
         LA    @12,1                                               2483 09413000
         ST    @12,I                                               2483 09414000
@DL02483 DS    0H                                                  2484 09415000
*         IF CMDQUE(I)=CWBPTR THEN  /* CHECK CURRENT CWB     @Z40LB01*/ 09416000
         SLA   @12,2                                               2484 09417000
         L     @09,CMDQUE-4(@12)                                   2484 09418000
         C     @09,CWBPTR                                          2484 09419000
         BNE   @RF02484                                            2484 09420000
*           CMDQUE(I)=F0;           /* ZERO IF MATCH         @Z40LB01*/ 09421000
         SLR   @09,@09                                             2485 09422000
         ST    @09,CMDQUE-4(@12)                                   2485 09423000
*       END;                        /* END DEQUEUE CODE      @Z40LB01*/ 09424000
*                                                                  2486 09425000
@RF02484 LA    @12,1                                               2486 09426000
         AL    @12,I                                               2486 09427000
         ST    @12,I                                               2486 09428000
         C     @12,@CF02046                                        2486 09429000
         BNH   @DL02483                                            2486 09430000
*       /*************************************************************/ 09431000
*       /*                                                           */ 09432000
*       /* ISSUE FREEMAIN FOR CWB VIA ICBMSG46 SUBROUTINE    @Z40LB01*/ 09433000
*       /*                                                           */ 09434000
*       /*************************************************************/ 09435000
*                                                                  2487 09436000
*       CALL ICBMSG46;              /* CALL FREE CWB SUB     @Z40LB01*/ 09437000
         BAL   @14,ICBMSG46                                        2487 09438000
*     END;                          /* END FAIL TEST CODE    @Z40LB01   09439000
*                                                            @Z40LB01*/ 09440000
*/*********************************************************  @Z40LB01*/ 09441000
*/* NORMAL EXIT TO CALLING ROUTINE ICBMSG40                  @Z40LB01*/ 09442000
*/*********************************************************  @Z40LB01*/ 09443000
*                                                                  2489 09444000
*                                   /*                       @Z40LB01*/ 09445000
*   RFY                                                            2489 09446000
*     R14 RSTD;                     /*                       @G24LB02*/ 09447000
@RF02481 DS    0H                                                  2490 09448000
*   R14=SAVR1455;                   /* RESTORE RETURN REG    @Z40LB01*/ 09449000
         L     R14,SAVR1455                                        2490 09450000
*   RFY                                                            2491 09451000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 09452000
*   RETURN;                         /* RETURN                @Z40LB01*/ 09453000
@EL00025 DS    0H                                                  2492 09454000
@EF00025 DS    0H                                                  2492 09455000
@ER00025 BR    @14                                                 2492 09456000
*   END ICBMSG55;                   /* END OF PROC           @Z40LB01*/ 09457000
*                                                                  2494 09458000
*/*******************************************************    @ZA30157*/ 09459000
*/*  START OF SPECIFICATIONS  *****                           @ZA30157  09460000
*                                                             @ZA30157  09461000
*01*  MODULE-NAME = ONOFFCK                                   @ZA30157  09462000
*                                                             @ZA30157  09463000
*01*  DESCRIPTIVE-NAME = D3850 ONLINE/OFFLINE CHECKER         @ZA30157  09464000
*                                                             @ZA30157  09465000
*01*  FUNCTION = SYNTAX CHECK THE ONLINE/OFFLINE PARAMETER    @ZA30157  09466000
*                OF THE DISPLAY 3850 OPERATOR COMMAND         @ZA30157  09467000
*                                                             @ZA30157  09468000
*01*  PURPOSE = INSURE THAT THE LAST PARAMETER OF THE         @ZA30157  09469000
*               DISPLAY 3850 IS EQUAL TO ONE OF THE FOLLOWING @ZA30157  09470000
*               ,ON | ,ONL | ,ONLINE | ,OF | ,OFF | ,OFFLINE  @ZA30157  09471000
*               OR NO OPERAND ( BLANK )                       @ZA30157  09472000
*                                                             @ZA30157  09473000
*01*  INPUT = 'S' IS SET TO THE OFFSET IN THE CWB OF THE      @ZA30157  09474000
*             ONLINE/OFFLINE PARAMETER                        @ZA30157  09475000
*                                                             @ZA30157  09476000
*01*  OUTPUT = EXITSW = ON, DSPON OR DSPOFF OR DSPERR = ON    @ZA30157  09477000
*****END SPECIFICATIONS   ********************************   @ZA30157*/ 09478000
*                                                                  2494 09479000
*ONOFFCK:                                                          2494 09480000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @ZA30157*/ 09481000
ONOFFCK  DS    0H                                                  2495 09482000
*   RFY                                                            2495 09483000
*     R14 RSTD;                     /*                       @ZA30157*/ 09484000
*   SAVRONOF=R14;                   /* SAVE CALLERS REG 14   @ZA30157*/ 09485000
         ST    R14,SAVRONOF                                        2496 09486000
*   RFY                                                            2497 09487000
*     R14 UNRSTD;                   /*                       @ZA30157*/ 09488000
*   IF CWBCMND(S:S+7)=',ONLINE '|CWBCMND(S:S+4)=',ONL '|/*   @ZA30157*/ 09489000
*       CWBCMND(S:S+3)=',ON ' THEN                                 2498 09490000
         L     @12,CWBPTR                                          2498 09491000
         L     @09,S                                               2498 09492000
         ALR   @09,@12                                             2498 09493000
         CLC   CWBCMND-1(8,@09),@CC03194                           2498 09494000
         BE    @RT02498                                            2498 09495000
         L     @09,S                                               2498 09496000
         ALR   @09,@12                                             2498 09497000
         CLC   CWBCMND-1(5,@09),@CC03195                           2498 09498000
         BE    @RT02498                                            2498 09499000
         L     @09,S                                               2498 09500000
         ALR   @12,@09                                             2498 09501000
         CLC   CWBCMND-1(4,@12),@CC03196                           2498 09502000
         BNE   @RF02498                                            2498 09503000
@RT02498 DS    0H                                                  2499 09504000
*     DSPON=ON;                     /*                       @ZA30157*/ 09505000
         L     @12,CWBPTR                                          2499 09506000
         OI    DSPON(@12),B'01000000'                              2499 09507000
*   ELSE                                                           2500 09508000
*     IF CWBCMND(S:S+8)=',OFFLINE '|CWBCMND(S:S+4)=/*        @ZA30157*/ 09509000
*         ',OFF '|CWBCMND(S:S+3)=',OF ' THEN                       2500 09510000
         B     @RC02498                                            2500 09511000
@RF02498 L     @12,CWBPTR                                          2500 09512000
         L     @09,S                                               2500 09513000
         ALR   @09,@12                                             2500 09514000
         CLC   CWBCMND-1(9,@09),@CC03197                           2500 09515000
         BE    @RT02500                                            2500 09516000
         L     @09,S                                               2500 09517000
         ALR   @09,@12                                             2500 09518000
         CLC   CWBCMND-1(5,@09),@CC03199                           2500 09519000
         BE    @RT02500                                            2500 09520000
         L     @09,S                                               2500 09521000
         ALR   @12,@09                                             2500 09522000
         CLC   CWBCMND-1(4,@12),@CC03200                           2500 09523000
         BNE   @RF02500                                            2500 09524000
@RT02500 DS    0H                                                  2501 09525000
*       DSPOFF=ON;                  /*                       @ZA30157*/ 09526000
         L     @12,CWBPTR                                          2501 09527000
         OI    DSPOFF(@12),B'00100000'                             2501 09528000
*     ELSE                                                         2502 09529000
*       IF CWBCMND(S:S)^=' ' THEN                                  2502 09530000
         B     @RC02500                                            2502 09531000
@RF02500 L     @12,CWBPTR                                          2502 09532000
         AL    @12,S                                               2502 09533000
         CLI   CWBCMND-1(@12),C' '                                 2502 09534000
         BE    @RF02502                                            2502 09535000
*         DSPERR=ON;                /*                       @ZA30157*/ 09536000
         OI    DSPERR,B'00000100'                                  2503 09537000
*   EXITSW=ON;                      /* LAST PARM SO EXIT     @ZA30157*/ 09538000
@RF02502 DS    0H                                                  2504 09539000
@RC02500 DS    0H                                                  2504 09540000
@RC02498 OI    EXITSW,B'00001000'                                  2504 09541000
*   RFY                                                            2505 09542000
*     R14 RSTD;                     /*                       @ZA30157*/ 09543000
*   R14=SAVRONOF;                   /* RESTORE CALLERS R14   @ZA30157*/ 09544000
         L     R14,SAVRONOF                                        2506 09545000
*   RFY                                                            2507 09546000
*     R14 UNRSTD;                   /*                       @ZA30157*/ 09547000
*   RETURN;                         /* RETURN TO ICBMSG55    @ZA30157*/ 09548000
@EL00026 DS    0H                                                  2508 09549000
@EF00026 DS    0H                                                  2508 09550000
@ER00026 BR    @14                                                 2508 09551000
*   END ONOFFCK;                    /*                       @ZA30157*/ 09552000
*                                                                  2510 09553000
*/*******************************************************    @Z40LB01*/ 09554000
*/*  START OF SPECIFICATIONS ****                             @Y30LB03  09555000
*                                                             @Y30LB03  09556000
*01*  MODULE-NAME = ICBMSG70                                  @Y30LB03  09557000
*                                                             @Y30LB03  09558000
*01*  DESCRIPTIVE-NAME = I/O RESTART SUBROUTINE               @Y30LB03  09559000
*                                                             @Y30LB03  09560000
*01*  FUNCTION = PERFORM SYSTEM RECOVERY FOR FAILING CPU OF   @Y30LB03  09561000
*                A TIGHTLY COUPLED MP ENVIRONMENT             @Y30LB03  09562000
*                                                             @Y30LB03  09563000
*                                                             @Y30LB03  09564000
*02*    PURPOSE = TO DISASSOCIATE AND PURGE THE FAILING CPU   @Y30LB03  09565000
*                 OF A TIGHTLY COUPLED MP ENVIRONMENT         @Y30LB03  09566000
*                                                             @Y30LB03  09567000
*02*    INPUT = INDICATION THAT THE 'BROTHER' CPU OF A        @Y30LB03  09568000
*               TIGHTLY COUPLED MP ENVIRONMENT HAS FAILED     @Y30LB03  09569000
*               AND THAT I/O RESTART ROUTINES HAVE            @Y30LB03  09570000
*               DETERMINED THAT THE MESSAGE TASK SHOULD       @Y30LB03  09571000
*               TAKE RECOVERY ACTION.                         @Y30LB03  09572000
*                                                             @Y30LB03  09573000
*        PROCESSING = OBTAIN ID OF CPU WHICH HAS TAKEN OVER   @ZM31124  09574000
*               SYSTEM WORK                                   @ZM31124  09575000
*               DISASSOCIATE IT FROM ITS PAIR MEMBER          @ZM31124  09576000
*               PURGE VOLUMES MOUNTED FOR FAILING CPU         @ZM31124  09577000
*               CLEAR ECB ONLY IF ICBMSCA IS OFF              @G24LB05  09578000
*                                                             @ZM31124  09579000
*02*    OUTPUT = THE FAILING CPU IS PURGED AND                @Y30LB03  09580000
*                DISASSOCIATED FROM THIS HOST.                @Y30LB03  09581000
*                                                             @Y30LB03  09582000
**** END OF SPECIFICATIONS **                                @Y30LB03*/ 09583000
*                                                                  2510 09584000
*ICBMSG70:                                                         2510 09585000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB03*/ 09586000
ICBMSG70 DS    0H                                                  2511 09587000
*   DCL                                                            2511 09588000
*     DPFLAGS BIT(16);              /* DISASSOCIATE/PURGE    @Y30LB03   09589000
*                                      FLAGS                 @Y30LB03*/ 09590000
*   RFY                                                            2512 09591000
*     R14 RSTD;                     /*                       @G24LB02*/ 09592000
*   SAVR1470=R14;                   /* SAVE CALLERS REGISTER 14    2513 09593000
*                                                            @Z307B04*/ 09594000
         ST    R14,SAVR1470                                        2513 09595000
*   RFY                                                            2514 09596000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 09597000
*   IF ICBMSCA=OFF THEN             /* NOT AP                @G24LB05*/ 09598000
         L     @12,ICBPTR                                          2515 09599000
         TM    ICBMSCA(@12),B'00000010'                            2515 09600000
         BNZ   @RF02515                                            2515 09601000
*     DO;                                                          2516 09602000
*       DCL                                                        2517 09603000
*         ASDAR1 REG(1) PTR;        /* PTR TO REQUEST BLOCK  @Y30LB02*/ 09604000
*/*  ******************************************************** @Y30LB02  09605000
*                                                                    */ 09606000
*/*       MACMEAN  MSSC ASSOCIATE MACRO                       @Y30LB02  09607000
*                                                                    */ 09608000
*/*  VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00                   @Y30LB02  09609000
*                                                                    */ 09610000
*/*  THIS IS THE INITIALIZED LIST FORM                        @Y30LB02  09611000
*                                                                    */ 09612000
*/*  ******************************************************** @Y30LB02  09613000
*                                                                    */ 09614000
*                                                                  2518 09615000
*       DCL                                                        2518 09616000
*         1 ADLIST STATIC LOCAL,    /* ASSOCIATE REQUEST BLOCK     2518 09617000
*                                                            @Y30LB02*/ 09618000
*          2 ASDALEN FIXED(31) INIT('10'X),/* LENG OF ASSOC REQ BLK     09619000
*                                                            @Y30LB02*/ 09620000
*          2 ASDAOPC CHAR(1) INIT('2C'X),/* ASSOCIATE OPCODE @Y30LB02*/ 09621000
*          2 ASDA001 CHAR(1) INIT('00'X),/* RESERVED AND ZERO      2518 09622000
*                                                            @Y30LB02*/ 09623000
*          2 ASDAFLG BIT(16) INIT('0000000000000000'B),/* TWO BYTE 2518 09624000
*                                      ATTRIBUTE AREA        @Y30LB02*/ 09625000
*           3 ASASSOC BIT(1),       /* ASSOCIATE ATTRIBUTE   @Y30LB02*/ 09626000
*           3 ASDASSOC BIT(1),      /* DISASSOCIATE ATTRIBUTE      2518 09627000
*                                                            @Y30LB02*/ 09628000
*           3 * BIT(3),             /* THREE BITS RESERVE    @Y30LB02*/ 09629000
*           3 ASDEINT BIT(1),       /* DISASSOC AND DEINITIALIZE THE    09630000
*                                      INTERFACE FOR THE OTHER CPU 2518 09631000
*                                      SPECIFIED IN THE CPU ASSOCIATE   09632000
*                                      TABLE                 @Y30LB02*/ 09633000
*           3 ASDMNT BIT(1),        /* ASSOC CPUS AND DEMOUNT ALL  2518 09634000
*                                      VOLUMES FOR BOTH CPUS @Y30LB02*/ 09635000
*           3 * BIT(9),             /* RESERVED AND MUST BE ZERO   2518 09636000
*                                                            @Y30LB02*/ 09637000
*          2 ASDACPU CHAR(5) INIT('0000000000'X),/* HOSTID   @Y30LB02*/ 09638000
*          2 ASDA002 CHAR(3) INIT('000000'X);/* RESERVED AREA      2518 09639000
*                                                            @Y30LB02*/ 09640000
*                                                                  2518 09641000
*       /*************************************************************/ 09642000
*       /*                                                           */ 09643000
*       /* ISSUE DISASSOCIATE                                @Y30LB03*/ 09644000
*       /* MACRO                                             @Y30LB03*/ 09645000
*       /*                                                           */ 09646000
*       /*************************************************************/ 09647000
*                                                                  2519 09648000
*       DPFLAGS='0100000000000000'B;/* INIT FLAGS FIELD FOR  @Y30LB03   09649000
*                                      DISASSOCIATE          @Y30LB03*/ 09650000
         MVC   DPFLAGS(2),@CB02333                                 2519 09651000
*       GEN(STIDP NAMFIELD);        /* GET ID OF RUNNING CPU @ZM31124*/ 09652000
         STIDP NAMFIELD                                                 09653000
*       HOST=NAMFIELD(2:6);         /* INIT HOST ID          @Y30LB03*/ 09654000
*                                                                  2521 09655000
         MVC   HOST(5),NAMFIELD+1                                  2521 09656000
*       /*************************************************************/ 09657000
*       /*                                                           */ 09658000
*       /* ISSUE DISASSOCIATE MACRO                          @Y30LB03*/ 09659000
*       /*                                                           */ 09660000
*       /*************************************************************/ 09661000
*                                                                  2522 09662000
*       SAVREENT=REENTRY;           /* SAVE REENTRY POINTER  @G24LB02*/ 09663000
         L     @12,REENTRY                                         2522 09664000
         ST    @12,SAVREENT                                        2522 09665000
*       REENTRY=ADDR(IORSRET);      /* SET NEW REENTRY POINTER     2523 09666000
*                                                            @G24LB02*/ 09667000
         LA    @12,IORSRET                                         2523 09668000
         ST    @12,REENTRY                                         2523 09669000
*       SVCCALL=ON;                 /* SET SVC CALL FLAG     @G24LB02*/ 09670000
         OI    SVCCALL,B'00001000'                                 2524 09671000
*IASDAS1:                                                          2525 09672000
*                                                                  2525 09673000
*       /*************************************************************/ 09674000
*       /*                                                           */ 09675000
*       /* *******************************************************   */ 09676000
*       /*                                                   @Y30LB02*/ 09677000
*       /* MACMEAN MSSC ASSOCIATE MACRO                      @Y30LB02*/ 09678000
*       /* VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00           @Y30LB02*/ 09679000
*       /* THIS IS THE OUTPUT FOR THE EXECUTE FORM.          @Y30LB02*/ 09680000
*       /* THE LIST FORM OF THIS MACRO SHOULD BE             @Y30LB02*/ 09681000
*       /* INVOKED FIRST IN ORDER TO SET UP NECESSARY        @Y30LB02*/ 09682000
*       /* DECLARES. IF THE COMPLETE ARGUMENT IS             @Y30LB02*/ 09683000
*       /* SPECIFIED THE REQ BLOCK WILL BE ZEROED.           @Y30LB02*/ 09684000
*       /* *******************************************************   */ 09685000
*       /*                                                   @Y30LB02*/ 09686000
*       /*                                                           */ 09687000
*       /*************************************************************/ 09688000
*                                                                  2525 09689000
*       RFY                                                        2525 09690000
*        (ASDAR1) RSTD;             /* RESTRICT REG 1        @Y30LB02*/ 09691000
IASDAS1  DS    0H                                                  2526 09692000
*       ASDAR1=ADDR(ADLIST);        /* R1 POINTER TO REQUEST BLOCK 2526 09693000
*                                                            @Y30LB02*/ 09694000
         LA    ASDAR1,ADLIST                                       2526 09695000
*       ASDALEN='10'X;              /* LENGTH OF ASSOC REQUEST     2527 09696000
*                                                            @Y30LB02*/ 09697000
         LA    @12,16                                              2527 09698000
         ST    @12,ASDALEN                                         2527 09699000
*       ASDAOPC='2C'X;              /* ASSOCIATE OPCODE      @Y30LB02*/ 09700000
         MVI   ASDAOPC,X'2C'                                       2528 09701000
*       ASDAFLG=(DPFLAGS);          /* VALUE OF FLAGS PARAMETER    2529 09702000
*                                                            @Y30LB02*/ 09703000
         MVC   ASDAFLG(2),DPFLAGS                                  2529 09704000
*       ASDACPU=(HOST);             /* HOSTID                @Y30LB02*/ 09705000
         MVC   ASDACPU(5),HOST                                     2530 09706000
*       SVC(126);                   /* INVOKE THE SVC        @Y30LB02*/ 09707000
         SVC   126                                                 2531 09708000
*       RFY                                                        2532 09709000
*         ASDAR1 UNRSTD;            /* UNRESTRICT REG 1      @Y30LB02*/ 09710000
*                                                                  2532 09711000
*       /*************************************************************/ 09712000
*       /*                                                           */ 09713000
*       /*                                                   @Y30LB03*/ 09714000
*       /*                                                           */ 09715000
*       /*************************************************************/ 09716000
*                                                                  2533 09717000
*       DPFLAGS='1000000000000000'B;/* INIT FLAGS FOR        @Y30LB03   09718000
*                                      PURGE                 @Y30LB03*/ 09719000
         MVC   DPFLAGS(2),@CB02326                                 2533 09720000
*IPAIR4:                                                           2534 09721000
*                                                                  2534 09722000
*       /*************************************************************/ 09723000
*       /*                                                           */ 09724000
*       /* *******************************************************   */ 09725000
*       /*                                                   @Y30LB02*/ 09726000
*       /* MACMEAN PURGE/ASSIGN/INITIALIZE/READY MACRO       @Y30LB02*/ 09727000
*       /* VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00           @Y30LB02*/ 09728000
*       /* THIS IS THE OUTPUT FOR THE EXECUTE FORM.          @Y30LB02*/ 09729000
*       /* THE LIST FORM OF THIS MACRO SHOULD BE             @Y30LB02*/ 09730000
*       /* INVOKED FIRST IN ORDER TO SET UP NECESSARY        @Y30LB02*/ 09731000
*       /* DECLARES. IF THE COMPLETE ARGUMENT IS             @Y30LB02*/ 09732000
*       /* SPECIFIED THE REQ BLOCK WILL BE ZEROED.           @Y30LB02*/ 09733000
*       /* *******************************************************   */ 09734000
*       /*                                                   @Y30LB02*/ 09735000
*       /*                                                           */ 09736000
*       /*************************************************************/ 09737000
*                                                                  2534 09738000
*       RFY                                                        2534 09739000
*        (PAIRR1) RSTD;             /* RESTRICT R1           @Y30LB02*/ 09740000
IPAIR4   DS    0H                                                  2535 09741000
*       PAIRR1=ADDR(PURGLIST);      /* SET PAIRR1 TO REQ BLOCK     2535 09742000
*                                                            @Y30LB02*/ 09743000
         LA    PAIRR1,PURGLIST                                     2535 09744000
*       PURGLL='0D'X;               /* SET LENGTH FIELD      @Y30LB02*/ 09745000
         LA    @12,13                                              2536 09746000
         ST    @12,PURGLL                                          2536 09747000
*       PURGOP='14'X;               /* PURG OPCODE           @Y30LB02*/ 09748000
         MVI   PURGOP,X'14'                                        2537 09749000
*       PURGFLG=(DPFLAGS);          /* FILL IN FLAGS FIELD   @Y30LB02*/ 09750000
         MVC   PURGFLG(2),DPFLAGS                                  2538 09751000
*       PURGHOST=(HOST);            /* FILL IN HOSTID FIELD  @Y30LB02*/ 09752000
         MVC   PURGHOST(5),HOST                                    2539 09753000
*       SVC(126);                   /* ISSUE SVC INST.       @Y30LB02*/ 09754000
         SVC   126                                                 2540 09755000
*       RFY                                                        2541 09756000
*        (PAIRR1) UNRSTD;           /* UNRESTRICT R1         @Y30LB02   09757000
*                                      ISSUE PURGE FOR       @Y30LB03   09758000
*                                      BROTHER CPU           @Y30LB03*/ 09759000
*IORSRET:                           /* LABEL FOR RETURN      @G24LB02*/ 09760000
*       SVCCALL=OFF;                /* CLEAR SVC CALL FLAG   @G24LB02*/ 09761000
IORSRET  NI    SVCCALL,B'11110111'                                 2542 09762000
*       REENTRY=SAVREENT;           /* RESTORE REENTRY POINTER     2543 09763000
*                                                            @G24LB02*/ 09764000
         L     @12,SAVREENT                                        2543 09765000
         ST    @12,REENTRY                                         2543 09766000
*     END;                          /* NOT AP                @G24LB05*/ 09767000
*   ICBIOR=F0;                      /* CLEAR ECB BEFORE      @Y30LB03   09768000
*                                      RETURN TO WAIT        @Y30LB03*/ 09769000
@RF02515 L     @12,ICBPTR                                          2545 09770000
         SLR   @09,@09                                             2545 09771000
         ST    @09,ICBIOR(,@12)                                    2545 09772000
*   RFY                                                            2546 09773000
*     R14 RSTD;                     /*                       @G24LB02*/ 09774000
*   R14=SAVR1470;                   /* RESTORE CALLERS REGISTER 14 2547 09775000
*                                                            @Z307B04*/ 09776000
         L     R14,SAVR1470                                        2547 09777000
*   RFY                                                            2548 09778000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 09779000
*   RETURN;                         /* RTN TO ICBMSG00       @Y30LB03*/ 09780000
@EL00027 DS    0H                                                  2549 09781000
@EF00027 DS    0H                                                  2549 09782000
@ER00027 BR    @14                                                 2549 09783000
*   END ICBMSG70;                   /*                       @Y30LB03*/ 09784000
*                                                                  2551 09785000
*/*********************************************************  @Y30LB03*/ 09786000
*                                                                  2551 09787000
*ICBMSG80:                                                         2551 09788000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB03*/ 09789000
ICBMSG80 DS    0H                                                  2552 09790000
*/*********************************************************  @Y30LB03*/ 09791000
*/* THIS SUBROUTINE INITIALIZES COMMON I/O DATA AREAS        @ZD00177*/ 09792000
*/* CALLED BY SUBROUTINES ICBMSG10, AND ICBMSG50             @ZM31056*/ 09793000
*/*********************************************************  @Y30LB03*/ 09794000
*                                                                  2552 09795000
*   RFY                                                            2552 09796000
*     R14 RSTD;                     /*                       @G24LB02*/ 09797000
*   SAVR1480=R14;                   /* SAVE CALLERS REGISTER 14    2553 09798000
*                                                            @Z307B04*/ 09799000
         ST    R14,SAVR1480                                        2553 09800000
*   RFY                                                            2554 09801000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 09802000
*   SRB=''B;                        /* INIT SRB TO 0'S       @Y30LB03*/ 09803000
         L     @12,SRBPTR                                          2555 09804000
         XC    SRB(44,@12),SRB(@12)                                2555 09805000
*   IOSB=''B;                       /* INIT IOSB TO 0'S      @Y30LB03*/ 09806000
         L     @09,IOSBPTR                                         2556 09807000
         XC    IOSB(108,@09),IOSB(@09)                             2556 09808000
*   SSCDATA=''B;                    /* INIT SSCDATA FIELD TO 0'S   2557 09809000
*                                                            @Y30LB03*/ 09810000
         L     @04,SSCDATAP                                        2557 09811000
         XC    SSCDATA(84,@04),SSCDATA(@04)                        2557 09812000
*   SRBID=SRBEBCDC;                 /* EBCDIC OF SRB         @Y30LB03*/ 09813000
         MVC   SRBID(4,@12),SRBEBCDC                               2558 09814000
*   SRBASCB=ASCBPTR;                /* ASCB ADDR             @Y30LB03*/ 09815000
         L     @15,ASCBPTR                                         2559 09816000
         ST    @15,SRBASCB(,@12)                                   2559 09817000
*   SRBPARM=IOSBPTR;                /* IOSB PTR              @Y30LB03*/ 09818000
         ST    @09,SRBPARM(,@12)                                   2560 09819000
*   IOSCCHN='1'B;                   /* INIT IOSB FLG FOR CMND      2561 09820000
*                                      CHAINING              @Y30LB03*/ 09821000
         OI    IOSCCHN(@09),B'01000000'                            2561 09822000
*   IOSASID='0001'X;                /* ASID MSG TASK         @Y30LB03*/ 09823000
         MVC   IOSASID(2,@09),@CB02431                             2562 09824000
*   IOSSRB=SRBPTR;                  /* SRB ADDRESS           @Y30LB03*/ 09825000
         ST    @12,IOSSRB(,@09)                                    2563 09826000
*   IOSUSE=SSCDATAP;                /* SSCDATA AREA ADDR     @Y30LB03*/ 09827000
         ST    @04,IOSUSE(,@09)                                    2564 09828000
*   TCBADDR=ICBTCB;                 /* TCB ADDRESS           @Y30LB03*/ 09829000
         L     @12,ICBPTR                                          2565 09830000
         L     @12,ICBTCB(,@12)                                    2565 09831000
         ST    @12,TCBADDR(,@04)                                   2565 09832000
*   RFY                                                            2566 09833000
*     R14 RSTD;                     /*                       @G24LB02*/ 09834000
*   R14=SAVR1480;                   /* RESTORE CALLERS REGISTER 14 2567 09835000
*                                                            @Z307B04*/ 09836000
         L     @12,SAVR1480                                        2567 09837000
         LR    R14,@12                                             2567 09838000
*   RFY                                                            2568 09839000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 09840000
*   RETURN;                         /* RTN TO CALLER         @Y30LB03*/ 09841000
@EL00028 DS    0H                                                  2569 09842000
@EF00028 DS    0H                                                  2569 09843000
@ER00028 BR    @14                                                 2569 09844000
*   END ICBMSG80;                   /*                       @Y30LB03*/ 09845000
*                                                                  2571 09846000
*   /*****************************************************************/ 09847000
*   /*                                                               */ 09848000
*   /* **************************************************    @Y30LB03*/ 09849000
*   /*                                                               */ 09850000
*   /*****************************************************************/ 09851000
*                                                                  2571 09852000
*ICBMSG82:                                                         2571 09853000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB03*/ 09854000
*                                                                  2571 09855000
ICBMSG82 DS    0H                                                  2572 09856000
*   /*****************************************************************/ 09857000
*   /*                                                               */ 09858000
*   /* **************************************************    @Y30LB03*/ 09859000
*   /* THIS SUBROUTINE IS USED FOR 2 CONVERSION NEEDS:       @Y30LB03*/ 09860000
*   /* (1)                                                   @Y30LB03*/ 09861000
*   /* THIS SUBROUTINE IS CALLED WHENEVER AN MSSC MACRO IS   @Y30LB03*/ 09862000
*   /* IS ISSUED THAT RESULTS WITH FAILURE INDICATION ON     @Y30LB03*/ 09863000
*   /* RETURN FROM SVC 126.                                  @Y30LB03*/ 09864000
*   /* ON ERROR SITUATIONS A REASON CODE IS PASSED BACK      @Y30LB03*/ 09865000
*   /* TO THE CALLED IN REGISTER 0. THIS SUBROUTINE          @Y30LB03*/ 09866000
*   /* CONVERTS THE REASON CODE TO A 3-BYTE PRINTABLE        @Y30LB03*/ 09867000
*   /* FIELD. THIS FIELD IS THEN INSERTED INTO A WTO         @Y30LB03*/ 09868000
*   /* MESSAGE.                                              @Y30LB03*/ 09869000
*   /* (2)                                                   @Y30LB03*/ 09870000
*   /* CONVERT 2 BYTE HEX SSID(UNIT)                         @Y30LB03*/ 09871000
*   /* TO 3 BYTE REAL UNIT IN EBCDIC                         @Y30LB03*/ 09872000
*   /* SO THAT THE UNIT CAN BE PRINTED                       @Y30LB03*/ 09873000
*   /* VIA WTO.                                              @Y30LB03*/ 09874000
*   /* THIS SUBROUTINE IS CALLED FOR THIS REASON IN          @Y30LB03*/ 09875000
*   /* SUBROUTINES ICBMSG15 AND ICBMSG20                     @Y30LB03*/ 09876000
*   /* WHEN MESSAGE PROCESSING WARRANTS                      @Y30LB03*/ 09877000
*   /* ITS USE.                                              @Y30LB03*/ 09878000
*   /*                                                       @Y30LB03*/ 09879000
*   /* *************************************                 @Y30LB03*/ 09880000
*   /*                                                               */ 09881000
*   /*****************************************************************/ 09882000
*                                                                  2572 09883000
*   RFY                                                            2572 09884000
*     R14 RSTD;                     /*                       @G24LB02*/ 09885000
*   SAVR1482=R14;                   /* SAVE CALLERS REGISTER 14    2573 09886000
*                                                            @Z307B04*/ 09887000
         ST    R14,SAVR1482                                        2573 09888000
*   RFY                                                            2574 09889000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 09890000
*   NUMBRS=NUMS;                    /* BUILD TRANS TABLE     @Z40LB01*/ 09891000
         L     @12,CCWSPTR                                         2575 09892000
         MVC   NUMBRS+24(16,@12),NUMS                              2575 09893000
*   INTER=INTER*F16;                /* SHIFT LEFT            @Z40LB01   09894000
*                                      FOUR BITS             @Y30LB03*/ 09895000
         L     @12,INTER                                           2576 09896000
         SLL   @12,4                                               2576 09897000
         ST    @12,INTER                                           2576 09898000
*   GEN(OI    BYTE4,X'0F');         /* OR IN AN F            @Y30LB03*/ 09899000
         OI    BYTE4,X'0F'                                              09900000
*   UNPK(DBLWORD,INTER);            /* UNPACK                @Z40LB01*/ 09901000
         UNPK  DBLWORD(8),INTER(4)                                 2578 09902000
*   INTER=DBLWORD(5:8);             /* MOVE BACK 4 BYTES     @Z40LB01*/ 09903000
         MVC   INTER(4),DBLWORD+4                                  2579 09904000
*   TR(INTER,TRANSTBL);             /* TRANSLATE BYTES       @Z40LB01*/ 09905000
*                                                                  2580 09906000
         L     @12,CCWSPTR                                         2580 09907000
         TR    INTER(4),TRANSTBL+24(@12)                           2580 09908000
*   /*****************************************************************/ 09909000
*   /*                                                               */ 09910000
*   /* *************************************                 @Y30LB03*/ 09911000
*   /*                                                       @Y30LB03*/ 09912000
*   /* TRANSLATED TO 4 BYTES                                 @Z40LB01*/ 09913000
*   /*                                                       @Y30LB03*/ 09914000
*   /* *************************************                 @Y30LB03*/ 09915000
*   /*                                                               */ 09916000
*   /*****************************************************************/ 09917000
*                                                                  2581 09918000
*   RFY                                                            2581 09919000
*     R14 RSTD;                     /*                       @G24LB02*/ 09920000
*   R14=SAVR1482;                   /* RESTORE CALLERS REGISTER 14 2582 09921000
*                                                            @Z307B04*/ 09922000
         L     R14,SAVR1482                                        2582 09923000
*   RFY                                                            2583 09924000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 09925000
*   RETURN;                         /* RTN TO CALLER         @Y30LB03*/ 09926000
@EL00029 DS    0H                                                  2584 09927000
@EF00029 DS    0H                                                  2584 09928000
@ER00029 BR    @14                                                 2584 09929000
*   END ICBMSG82;                   /*                       @Y30LB03*/ 09930000
*                                                                  2586 09931000
*/*********************************************************  @Y30LB03*/ 09932000
*                                                                  2586 09933000
*ICBMSG83:                                                         2586 09934000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB03*/ 09935000
*                                                                  2586 09936000
ICBMSG83 DS    0H                                                  2587 09937000
*   /*****************************************************************/ 09938000
*   /*                                                               */ 09939000
*   /* THIS SUBROUTINE SETS UP THE REQUIRED INTERFACE        @Y30LB03*/ 09940000
*   /* FOR SMF PROCESSING AND ISSUES THE SMF SVC.            @Y30LB03*/ 09941000
*   /* CALLED BY SUBRTNS ICBMSG16 AND ICBMSG49.              @Y30LB03*/ 09942000
*   /*                                                               */ 09943000
*   /*****************************************************************/ 09944000
*                                                                  2587 09945000
*   RFY                                                            2587 09946000
*    (R1,                                                          2587 09947000
*     R14) RSTD;                    /* RESTRICT REG 1        @G24LB02*/ 09948000
*   SAVR1483=R14;                   /* SAVE CALLERS REGISTER 14    2588 09949000
*                                                            @Z307B04*/ 09950000
         ST    R14,SAVR1483                                        2588 09951000
*   SVC(83);                        /* ISSUE SMF SVC         @Y30LB03*/ 09952000
         SVC   83                                                  2589 09953000
*   RESPECIFY                                                      2590 09954000
*     R1 UNRSTD;                    /* RELEASE REG 1         @Y30LB03*/ 09955000
*   R14=SAVR1483;                   /* RESTORE CALLERS REGISTER 14 2591 09956000
*                                                            @Z307B04*/ 09957000
         L     R14,SAVR1483                                        2591 09958000
*   RFY                                                            2592 09959000
*     R14 UNRSTD;                   /*                       @G24LB02*/ 09960000
*   RETURN;                         /* RTN TO CALLER         @Y30LB03*/ 09961000
@EL00030 DS    0H                                                  2593 09962000
@EF00030 DS    0H                                                  2593 09963000
@ER00030 BR    @14                                                 2593 09964000
*   END ICBMSG83;                   /*                       @Y30LB03*/ 09965000
*                                                                  2595 09966000
*/*********************************************************  @ZM31056*/ 09967000
*/*                                                          @ZM31056*/ 09968000
*/*      ICBMSG88  VIRTUAL VOLUME UCB CLEANUP FOR SHUTDOWN   @ZM31056*/ 09969000
*/*                                                          @ZM31056*/ 09970000
*/*     INPUT:    POINTER TO THE UCBS VIA THE CVT            @ZM31056*/ 09971000
*/*                                                          @ZM31056*/ 09972000
*/*    PROCESSING:  SCAN THE UCB LIST FOR EACH VALID UCB     @ZM31056*/ 09973000
*/*       FOR EACH 3330 UCB WHICH HAS THE VIRTUAL VOLUME BIT @ZM31056*/ 09974000
*/*       SET ON. REPLACE VOLSER WITH ZEROE, SET PATH MASK   @ZM31056*/ 09975000
*/*       TO ZERO, MARK THE UCB NOT READY  AND OFFLINE       @ZA09553*/ 09976000
*/*                                                          @ZM31056*/ 09977000
*/*   OUTPUT:  3330V UCBS HAVE ZERO VOLSER, PATH MASK ZERO,  @ZM31056*/ 09978000
*/*        AND ARE MARKED OFFLINE                            @ZM31056*/ 09979000
*/*                                                          @ZM31056*/ 09980000
*/********************************************************** @ZM31056*/ 09981000
*/*                                                          @ZM31056*/ 09982000
*                                                                  2595 09983000
*ICBMSG88:                                                         2595 09984000
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @ZM31056*/ 09985000
ICBMSG88 DS    0H                                                  2596 09986000
*   DCL                                                            2596 09987000
*     UCBPTR16 PTR(16) INIT(0);     /* FOR UCB IN THIS ROUTINE     2596 09988000
*                                                            @ZM31056*/ 09989000
*   DCL                                                            2597 09990000
*     LISTA POINTER(31);            /* ADDR OF UCB LIST IN SCAN    2597 09991000
*                                                            @ZM31056*/ 09992000
*   DCL                                                            2598 09993000
*     BEGUPTR POINTER(16) BASED;    /* TO GET UCB ADDRESS    @ZM31056*/ 09994000
*   DCL                                                            2599 09995000
*     ZERZ FIXED(31) CONSTANT(0);   /* FULLWORD ZEROES       @ZM31056*/ 09996000
*   DCL                                                            2600 09997000
*     C1ZERO FIXED(8) CONSTANT(0);  /* BYTE OF ZERO          @ZM31056*/ 09998000
*   DCL                                                            2601 09999000
*     ALINC FIXED(15) CONSTANT(2);  /* INCR FOR UCB LIST SCAN      2601 10000000
*                                                            @ZM31056*/ 10001000
*   RFY                                                            2602 10002000
*     R14 RSTD;                     /* 14 FOR RETURN ADDRESS @ZM31056*/ 10003000
*   SAVR1498=R14;                   /* SAVE RETURN ADDRESS   @ZM31056*/ 10004000
         ST    R14,SAVR1498                                        2603 10005000
*   RFY                                                            2604 10006000
*     R14 UNRSTD;                   /* FREE UP 14            @ZM31056*/ 10007000
*   LISTA=CVTILK2;                  /* ADDRESS OF UCB ADDRESS LIST 2605 10008000
*                                                            @ZM31056*/ 10009000
         L     @12,CVTPTR                                          2605 10010000
         L     @12,CVTILK2(,@12)                                   2605 10011000
         ST    @12,LISTA                                           2605 10012000
*   DO WHILE UCBPTR16^=FOXES;       /* MORE UCBS TO SEARCH ? @ZM31056*/ 10013000
         B     @DE02606                                            2606 10014000
@DL02606 DS    0H                                                  2607 10015000
*     UCBPTR16=LISTA->BEGUPTR;      /* ADDRESS OF ONE UCB, MAYBE   2607 10016000
*                                                            @ZM31056*/ 10017000
         L     @12,LISTA                                           2607 10018000
         LH    @12,BEGUPTR(,@12)                                   2607 10019000
         N     @12,@CF02463                                        2607 10020000
         STH   @12,UCBPTR16                                        2607 10021000
*     IF UCBPTR16^=ZERZ&UCBPTR16^=FOXES/* VALID UCB ADDRESS ?@ZM31056*/ 10022000
*       THEN                        /* THERE IS A UCB ADDRESS IN   2608 10023000
*                                                            @ZM31056*/ 10024000
*                                                                  2608 10025000
         LH    @12,UCBPTR16                                        2608 10026000
         N     @12,@CF02463                                        2608 10027000
         LTR   @12,@12                                             2608 10028000
         BZ    @RF02608                                            2608 10029000
         SLR   @09,@09                                             2608 10030000
         ICM   @09,3,FOXES                                         2608 10031000
         CR    @12,@09                                             2608 10032000
         BE    @RF02608                                            2608 10033000
*       /*************************************************************/ 10034000
*       /*                                                           */ 10035000
*       /* THIS LIST POSITION                                @ZM31056*/ 10036000
*       /*                                                           */ 10037000
*       /*************************************************************/ 10038000
*                                                                  2609 10039000
*       DO;                         /* SEE IF ONE OF OUR UCBS      2609 10040000
*                                                            @ZM31056*/ 10041000
*         IF UCBPTR16->UCB3DACC=BONE/* DIRECT ACCESS ?       @ZM31056*/ 10042000
*             &UCBPTR16->UCBUNTYP='09'X/* 3330 ?             @ZM31056*/ 10043000
*           THEN                    /* THIS IS A 3330 UCB    @ZM31056*/ 10044000
         TM    UCB3DACC(@12),B'00100000'                           2610 10045000
         BNO   @RF02610                                            2610 10046000
         CLI   UCBUNTYP(@12),X'09'                                 2610 10047000
         BNE   @RF02610                                            2610 10048000
*           DO;                     /* SEE IF VIRTUAL 3330   @ZM31056*/ 10049000
*             IF UCBPTR16->UCBRVDEV=BONE/* VIRTUAL VOLUME?   @ZM31056*/ 10050000
*               THEN                /* THIS IS A VIRTUAL 3330      2612 10051000
*                                                            @ZM31056*/ 10052000
         TM    UCBRVDEV(@12),B'00001000'                           2612 10053000
         BNO   @RF02612                                            2612 10054000
*               DO;                 /* WHICH IS WHAT WERE LOOKING FOR   10055000
*                                                            @ZM31056*/ 10056000
*                 IF MSG42SW=BONE THEN/* MSG42 CALLER        @ZDR2048*/ 10057000
         TM    MSG42SW,B'00000010'                                 2614 10058000
         BNO   @RF02614                                            2614 10059000
*                   DO;             /* CALLED BY MSG42 FOR VOL CHECK    10060000
*                                                            @ZDR2048*/ 10061000
*                     IF UCBPTR16->UCBVOLI=VOL&/* VOLID CHECK      2616 10062000
*                                                            @ZDR2048*/ 10063000
*                         UCBPTR16->UCBNRY=BZERO THEN/* READY CHECK     10064000
*                                                            @ZDR2048*/ 10065000
         L     @04,CWBPTR                                          2616 10066000
         CLC   UCBVOLI(6,@12),VOL(@04)                             2616 10067000
         BNE   @RF02616                                            2616 10068000
         TM    UCBNRY(@12),B'01000000'                             2616 10069000
         BNZ   @RF02616                                            2616 10070000
*                       DO;         /* VOLID IS MOUNTED AND READY  2617 10071000
*                                                            @ZDR2048*/ 10072000
*                         CUUUCB=UCBPTR16->UCBNAME;/* SAVE UCBNAME 2618 10073000
*                                                            @ZDR2048*/ 10074000
         MVC   CUUUCB(3),UCBNAME(@12)                              2618 10075000
*                         UCBPTR16=FOXES;/* SET FOR SCAN EXIT      2619 10076000
*                                                            @ZDR2048*/ 10077000
         STH   @09,UCBPTR16                                        2619 10078000
*                       END;        /* END VOL MOUNTED AND READY CODE   10079000
*                                                            @ZDR2048*/ 10080000
*                   END;            /* END MSG42 CALLER CODE @ZDR2048*/ 10081000
*                 ELSE              /* MSG89 CALLER CODE     @ZDR2048*/ 10082000
*                   DO;             /* CLEAR ALL VUCBS FOR SHUT DOWN    10083000
*                                                            @ZDR2048*/ 10084000
         B     @RC02614                                            2622 10085000
@RF02614 DS    0H                                                  2623 10086000
*                     UCBPTR16->UCBVOLI=''B;/* ZERO THE VOLSER HERE     10087000
*                                                            @ZM31056*/ 10088000
         LH    @12,UCBPTR16                                        2623 10089000
         N     @12,@CF02463                                        2623 10090000
         XC    UCBVOLI(6,@12),UCBVOLI(@12)                         2623 10091000
*                     UCBPTR16->UCBCHM=C1ZERO;/* ZERO CHANNEL MASK 2624 10092000
*                                                            @ZM31056*/ 10093000
         MVI   UCBCHM(@12),X'00'                                   2624 10094000
*                     UCBPTR16->UCBNRY=BONE;/* MARK NOT READY      2625 10095000
*                                                            @ZM31056*/ 10096000
         OI    UCBNRY(@12),B'01000000'                             2625 10097000
*                     UCBPTR16->UCBONLI=OFF;/* MARK OFFLINE  @ZA09553*/ 10098000
         NI    UCBONLI(@12),B'01111111'                            2626 10099000
*                   END;            /* END CLEAR VUCBS FOR SHUTDOWN     10100000
*                                      CODE                  @ZDR2048*/ 10101000
*               END;                /* PROCESSING UCB FOR A VIRTUAL     10102000
*                                      VOLUME                @ZM31056*/ 10103000
*             ELSE                  /* NOT A VIRTUAL VOLUME  @ZM31056*/ 10104000
*               ;                   /* DO NOT TOUCH THIS UCB @ZM31056*/ 10105000
@RF02612 DS    0H                                                  2630 10106000
*           END;                    /* LOGIC FOR 3330 UCB    @ZM31056*/ 10107000
*         ELSE                      /* NOT A 3330 UCB        @ZM31056*/ 10108000
*           ;                       /* NOT OF INTEREST       @ZM31056*/ 10109000
@RF02610 DS    0H                                                  2632 10110000
*       END;                        /* LOOKING AT ONE UCB    @ZM31056*/ 10111000
*     ELSE                          /* NOT A UCB ADDRESS HERE      2633 10112000
*                                                            @ZM31056*/ 10113000
*       ;                           /* ON TO NEXT LIST ENTRY @ZM31056*/ 10114000
@RF02608 DS    0H                                                  2634 10115000
*     LISTA=LISTA+ALINC;            /* INCREMENT THROUGH UCB LIST  2634 10116000
*                                                            @ZM31056*/ 10117000
@RC02608 LA    @12,2                                               2634 10118000
         AL    @12,LISTA                                           2634 10119000
         ST    @12,LISTA                                           2634 10120000
*   END;                            /* OF THE SEARCH FOR VIRTUAL   2635 10121000
*                                                            @ZM31056*/ 10122000
*                                                                  2635 10123000
@DE02606 CLC   UCBPTR16(2),FOXES                                   2635 10124000
         BNE   @DL02606                                            2635 10125000
*   /*****************************************************************/ 10126000
*   /*                                                               */ 10127000
*   /* VOLUME UCBS FOR PURGE                                 @ZM31056*/ 10128000
*   /*                                                               */ 10129000
*   /*****************************************************************/ 10130000
*                                                                  2636 10131000
*   RFY                                                            2636 10132000
*     R14 RSTD;                     /* 14 FOR RETURN ADDRESS @ZM31056*/ 10133000
*   R14=SAVR1498;                   /* RESTORE RETURN ADDRESS      2637 10134000
*                                                            @ZM31056*/ 10135000
         L     R14,SAVR1498                                        2637 10136000
*   RFY                                                            2638 10137000
*     R14 UNRSTD;                   /* FREE 14 FOR BRANCH GEN      2638 10138000
*                                                            @ZM31056*/ 10139000
*   END ICBMSG88;                   /*                       @ZM31056*/ 10140000
@EL00031 DS    0H                                                  2639 10141000
@EF00031 DS    0H                                                  2639 10142000
@ER00031 BR    @14                                                 2639 10143000
*                                                                  2640 10144000
*/*********************************************************  @ZM31056*/ 10145000
*/*                                                          @ZM31056*/ 10146000
*/*    ICBMSG89     MESSAGE TASK SHUTDOWN                    @ZM31056*/ 10147000
*/*                                                          @ZM31056*/ 10148000
*/*    INPUT    CCWSPTR                                      @ZM31056*/ 10149000
*/*              IF ZERO, NO STORAGE WAS OBTAINED            @ZM31056*/ 10150000
*/*              IF NONZERO, STORAGE WAS OBTAINED            @ZM31056*/ 10151000
*/*             ICBV                                         @ZM31056*/ 10152000
*/*              IF ZERO, SHUTDOWN FOR NO MSVC               @ZM31056*/ 10153000
*/*              IF NONZERO, MSVC DID NOT INITIALIZE         @ZM31056*/ 10154000
*/*             READYFAL                                     @ZM31118*/ 10155000
*/*              IF ON, READY FAILURE IS CAUSE FOR SHUTDOWN  @ZM31118*/ 10156000
*/*              IF OFF, ANOTHER FAILURE CAUSE               @ZM31118*/ 10157000
*/*                                                          @ZM31056*/ 10158000
*/*    PROCESSING     DETERMINE CAUSE OF SHUTDOWN AND WRITE  @ZM31056*/ 10159000
*/*              APPROPRIATE MESSAGE, IF ANY                 @ZM31056*/ 10160000
*/*              WAIT FOREVER ON AN ECB NO ONE POSTS --      @ZM31056*/ 10161000
*/*              ICBMSG89 NEVER RETURNS TO ITS CALLER        @ZM31056*/ 10162000
*/*                                                          @ZM31056*/ 10163000
*/*     OUTPUT     MESSAGE TO SYSTEM OPERATOR IF GETMAIN     @ZM31056*/ 10164000
*/*              FOR MESSAGE TASK I/O STORAGE FAILED         @ZM31056*/ 10165000
*/*              POST TO ATTACHEE OF MESSAGE TASK            @ZM31056*/ 10166000
*/*                                                          @ZM31056*/ 10167000
*/*                                                          @ZM31056*/ 10168000
*/*********************************************************  @ZM31056*/ 10169000
*                                                                  2640 10170000
*ICBMSG89:                                                         2640 10171000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/* SHUTDOWN              @ZM31056*/ 10172000
ICBMSG89 DS    0H                                                  2641 10173000
*NOICBMSG:                          /* ICBMSG WILL NOT BE AVAILABLE     10174000
*                                                            @ZM31056*/ 10175000
*   WAITECB=F0;                     /* ZERO THE WAIT ECB     @ZM31056*/ 10176000
NOICBMSG SLR   @12,@12                                             2641 10177000
         ST    @12,WAITECB                                         2641 10178000
*   ICBI=BZERO;                     /* CLEAR INIT'D BIT IN CB      2642 10179000
*                                                            @ZM31056*/ 10180000
*/*   AS OF MSSC RELEASE 3, ALLOCATION WILL NOT ALLOCATE     @G24LB02*/ 10181000
*/*   VUCBS IF THE MSS BROKEN BOX FLAG (ICBB) IS SET ON.     @G24LB02*/ 10182000
*/*   SINCE ANY VVOLUME MOUNTS WILL NOT BE REJECTED BY       @G24LB02*/ 10183000
*/*   THE SVC, IT WILL SAVE EXECUTION TIME IF THIS FLAG      @G24LB02*/ 10184000
*/*   IS SET WHEN MSSC IS NOT AVAILABLE FOR THE IPL.         @G24LB02*/ 10185000
*                                                                  2643 10186000
*   ICBB=ON;                        /* SET BROKEN BOX FLAG   @G24LB02*/ 10187000
         L     @09,ICBPTR                                          2643 10188000
         OI    ICBB(@09),B'00010000'                               2643 10189000
         NI    ICBI(@09),B'01111111'                               2643 10190000
*   IF CCWSPTR^=0                   /* HAS STORAGE BEEN OBTAINED ? 2644 10191000
*                                                            @ZM31056*/ 10192000
*     THEN                                                         2644 10193000
         C     @12,CCWSPTR                                         2644 10194000
         BE    @RF02644                                            2644 10195000
*     DO;                           /* MUST FREE STORAGE OBTAINED  2645 10196000
*                                                            @ZM31056*/ 10197000
*       GTMAINSP='F5'X;             /* FOR SUBPOOL 245       @ZM31056*/ 10198000
         MVI   GTMAINSP,X'F5'                                      2646 10199000
*       GEN REFS(GTMAINR0,CCWSPTR);                                2647 10200000
*                                                  /*        @ZM31056*/ 10201000
         L     R0,GTMAINR0           SET UP REG0 FOR FREEMN    @ZM31056 10202000
         L     R1,CCWSPTR            PUT ADDRESS IN REG 1      @ZM31056 10203000
* FREE DYNAMIC AREA                                            @ZM31056 10204000
IFREEMN1 FREEMAIN R,LV=(R0),A=(R1),                            @ZM31056*10205000
               RELATED=(SP245,ICB2MSG(IGETMN1))                @ZM31056 10206000
*       WTOGEN03=MESGS(MSG98501);   /* PROVIDE TEXT          @Z40LB01*/ 10207000
         MVI   WTOGEN03+72,C' '                                    2648 10208000
         L     @12,@CA02101                                        2648 10209000
         MVC   WTOGEN03(72),MESGS-MSGS+2888(@12)                   2648 10210000
*       CALL ICBMSG45;              /* TO WRITE MESSAGE      @ZM31056*/ 10211000
         BAL   @14,ICBMSG45                                        2649 10212000
*       GEN REFS(WAITECB);                                         2650 10213000
*                                         /*WAIT FOREVER     @ZM31056*/ 10214000
IWAIT1   WAIT ECB=WAITECB            ERROR EXIT,NEVER POSTED   @ZM31056 10215000
*     END;                                                         2651 10216000
*   END ICBMSG89;                   /*                       @ZM31056*/ 10217000
@EL00032 DS    0H                                                  2652 10218000
@EF00032 DS    0H                                                  2652 10219000
@ER00032 BR    @14                                                 2652 10220000
*                                                                  2653 10221000
*/*********************************************************  #Y30LB03*/ 10222000
*/*  START OF SPECIFICATIONS ****                             @Y30LB03  10223000
*                                                             @Y30LB03  10224000
*01*  MODULE-NAME = ICBMSG90                                  @Y30LB03  10225000
*                                                             @Y30LB03  10226000
*01*  DESCRIPTIVE-NAME = STAE EXIT SUBROUTINE                 @Y30LB03  10227000
*                                                             @Y30LB03  10228000
*01*  FUNCTION = TO REESTABLISH MESSAGE TASK SHOULD IT ABEND  @Y30LB03  10229000
*                                                             @Y30LB03  10230000
*                                                             @Y30LB03  10231000
*02*    PURPOSE = TO REESTABLISH THE MESSAGE TASK             @Y30LB03  10232000
*       SHOULD IT ABEND.                                      @Y30LB03  10233000
*                                                             @Y30LB03  10234000
*02*    LINKAGE = BALR (FROM ASIR)                            @Y30LB03  10235000
*                                                             @Y30LB03  10236000
*02*    INPUT = R0 - I/O STATUS                               @Y30LB03  10237000
*               R1 - POINTER TO STAE WORK AREA                @Y30LB03  10238000
*               R13 - POINTER TO SAVE AREA                    @Y30LB03  10239000
*               R14 - RETURN TO ASIR                          @Y30LB03  10240000
*               R15 - ENTRY TO STAE EXIT ROUTINE              @Y30LB03  10241000
*                                                             @Y30LB03  10242000
*02*    OUTPUT = R0 - POINTER TO RETRY ROUTINE (ICBMSG95)     @Y30LB03  10243000
*                R1 - SAME AS AT ENTRY                        @Y30LB03  10244000
*                R13 - SAME AS AT ENTRY                       @Y30LB03  10245000
*                R14 - SAME AS AT ENTRY                       @Y30LB03  10246000
*                R15 - RC=4 FOR RETRY                         @Y30LB03  10247000
*                      RC=0 FOR CONTINUE ABEND                @Y30LB03  10248000
*                                                             @Y30LB03  10249000
**** END OF SPECIFICATIONS **                                @Y30LB03*/ 10250000
*                                                                  2653 10251000
*ICBMSG90:                                                         2653 10252000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB03*/ 10253000
ICBMSG90 DS    0H                                                  2654 10254000
*/*  ****************************************************    @Y30LB03*/ 10255000
*/*                                                          @Y30LB03*/ 10256000
*/*    STAE EXIT SUBROUTINE                                  @Y30LB03*/ 10257000
*/*                                                          @Y30LB03*/ 10258000
*/*  ****************************************************    @Y30LB03*/ 10259000
*                                                                  2654 10260000
*   RESPECIFY                                                      2654 10261000
*    (R0,                                                          2654 10262000
*     R1,                                                          2654 10263000
*     R13,                                                         2654 10264000
*     R14,                                                         2654 10265000
*     R15) RSTD;                    /*                       @Y30LB03*/ 10266000
*   GEN REFS(R0,R14,R15);                                          2655 10267000
*                                                          /*@ZA16123*/ 10268000
          DROP  R8                   DROP BASE REG             @ZA16123 10269000
          DROP  R7                   DROP BASE REG             @ZA16123 10270000
          DROP  R6                   DROP BASE REG             @ZA16123 10271000
          DROP  R5                   DROP BASE REG             @ZA16123 10272000
          USING *,R15                                          @Y30LB03 10273000
          L     R0,STAEB1                                      @ZA16123 10274000
          B     S90                  BRANCH TO S90             @Y30LB03 10275000
STAEB1    DC    A(ICBMSG95)          ADDRESS OF ICBMSG95       @ZA16123 10276000
S90       EQU   *                                              @Y30LB03 10277000
          LA    R15,C4(R0)           SET EXIT RETRY PARM       @ZA16123 10278000
          DROP  R15                  DROP EXIT BASE REG        @ZA16123 10279000
          BR    R14                  RETURN TO ABEND EXIT      @ZA16123 10280000
*   RETURN;                         /* RTN TO ABEND          @Y30LB03*/ 10281000
@EL00033 DS    0H                                                  2656 10282000
@EF00033 DS    0H                                                  2656 10283000
@ER00033 BR    @14                                                 2656 10284000
*   END ICBMSG90;                   /*                       @Y30LB03*/ 10285000
*                                                                  2658 10286000
*/********************************************************   @ZM31014*/ 10287000
*/*  START OF SPECIFICATIONS ****                             @Y30LB03  10288000
*                                                             @Y30LB03  10289000
*01*  MODULE-NAME = ICBMSG95                                  @Y30LB03  10290000
*                                                             @Y30LB03  10291000
*01*  DESCRIPTIVE-NAME = STAE RETRY SUBROUTINE                @Y30LB03  10292000
*                                                             @Y30LB03  10293000
*01*  COPYRIGHT = NONE                                        @Y30LB03  10294000
*                                                             @Y30LB03  10295000
*01*  STATUS = OS/VS2 RELEASE 3.0                             @Y30LB03  10296000
*                                                             @Y30LB03  10297000
*01*  FUNCTION = REESTABLISH EXECUTION OF MESSAGE TASK        @Y30LB03  10298000
*                                                             @Y30LB03  10299000
*01*  NOTES = NONE                                            @Y30LB03  10300000
*                                                             @Y30LB03  10301000
*02*    CHARACTER-CODE-DEPENDENCIES = NONE                    @Y30LB03  10302000
*                                                             @Y30LB03  10303000
*02*    DEPENDENCIES = ICB2MSG COMPONENT                      @Y30LB03  10304000
*                                                             @Y30LB03  10305000
*02*    RESTRICTIONS = NONE                                   @Y30LB03  10306000
*                                                             @Y30LB03  10307000
*02*    REGISTER-CONVENTIONS = R0 THROUGH R15                 @Y30LB03  10308000
*                                                             @Y30LB03  10309000
*02*    PATCH-LABEL = NONE                                    @Y30LB03  10310000
*                                                             @Y30LB03  10311000
*01*  MODULE-TYPE = MODULE                                    @Y30LB03  10312000
*                                                             @Y30LB03  10313000
*02*    PROCESSOR = PLS                                       @Y30LB03  10314000
*                                                             @Y30LB03  10315000
*02*    ATTRIBUTES = REUSABLE                                 @Y30LB03  10316000
*                    NUCLEUS RESIDENT                         @Y30LB03  10317000
*                    KEY = 0                                  @Y30LB03  10318000
*                    PAGEABLE                                 @Y30LB03  10319000
*                    SUPV STATE                               @Y30LB03  10320000
*                    ENABLED                                  @Y30LB03  10321000
*                                                             @Y30LB03  10322000
*01*  ENTRY-POINT = ICBMSG95                                  @Y30LB03  10323000
*                                                             @Y30LB03  10324000
*02*    PURPOSE = DETERMINE WHERE TO RE-ENTER EXECUTION       @Y30LB03  10325000
*       OF MESSAGE ROUTINE, FREE THE STAE WORK AREA,          @Y30LB03  10326000
*       REESTABLISH STAE ENVIRONMENT, AND RETURN TO           @Y30LB03  10327000
*       MESSAGE ROUTINE.                                      @Y30LB03  10328000
*                                                             @Y30LB03  10329000
*02*    LINKAGE = BALR (FROM ASIR)                            @Y30LB03  10330000
*                                                             @Y30LB03  10331000
*02*    INPUT = R0 - RETURN CODE                              @Y30LB03  10332000
*               R1 - POINTER TO STAE WORK AREA (IF R0^= 12)   @Y30LB03  10333000
*               R14 - RETURN TO ASIR                          @Y30LB03  10334000
*               R15 - ENTRY TO STAE RETRY ROUTINE (ICBMSG95)  @Y30LB03  10335000
*                                                             @Y30LB03  10336000
*02*    OUTPUT = R14 - RETURN TO MESSAGE TASK                 @Y30LB03  10337000
*                                                             @Y30LB03  10338000
*02*    EXIT-NORMAL = BR 14                                   @Y30LB03  10339000
*                                                             @Y30LB03  10340000
*02*    EXIT-ERROR = NONE                                     @Y30LB03  10341000
*                                                             @Y30LB03  10342000
*01*  EXTERNAL-REFERENCES = NONE                              @Y30LB03  10343000
*                                                             @Y30LB03  10344000
*02*    ROUTINES = NONE                                       @Y30LB03  10345000
*                                                             @Y30LB03  10346000
*02*    DATA-SETS = NONE                                      @Y30LB03  10347000
*                                                             @Y30LB03  10348000
*02*    DATA-AREA = STAE WORK AREA                            @Y30LB03  10349000
*                                                             @Y30LB03  10350000
*02*    CONTROL-BLOCKS = NONE                                 @Y30LB03  10351000
*                                                             @Y30LB03  10352000
*01*  TABLES = NONE                                           @Y30LB03  10353000
*                                                             @Y30LB03  10354000
*01*  MACROS = STAE                                           @Y30LB03  10355000
*              FREEMAIN                                       @Y30LB03  10356000
*              SETLOCK                                        @Y30LB03  10357000
*                                                             @Y30LB03  10358000
**** END OF SPECIFICATIONS **                                @Y30LB03*/ 10359000
*                                                                  2658 10360000
*ICBMSG95:                                                         2658 10361000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB03*/ 10362000
ICBMSG95 DS    0H                                                  2659 10363000
*/*  ****************************************************    @Y30LB03*/ 10364000
*/*                                                          @Y30LB03*/ 10365000
*/*    STAE RETRY SUBROUTINE                                 @Y30LB03*/ 10366000
*/*                                                          @Y30LB03*/ 10367000
*/*  ****************************************************    @Y30LB03*/ 10368000
*                                                                  2659 10369000
*   DCL                                                            2659 10370000
*    (FINISHDQ,                                                    2659 10371000
*     PROCMSG,                                                     2659 10372000
*     RTN40L,                                                      2659 10373000
*     VFREEL,                                                      2659 10374000
*     PAWTOL,                                                      2659 10375000
*     SPFREEL) EXTERNAL LABEL;      /* DECLARE LABELS        @G24LB02*/ 10376000
*   RESPECIFY                                                      2660 10377000
*    (R0,                                                          2660 10378000
*     R1,                                                          2660 10379000
*     R14,                                                         2660 10380000
*     R15) RSTD;                    /*                       @Y30LB03*/ 10381000
*   GEN REFS(R5,R6,R7,R8,R15);                                     2661 10382000
*                                                          /*@Y30LB03*/ 10383000
          USING *,R15                                          @Y30LB03 10384000
          L     R8,STAEB2                                      @Y30LB03 10385000
          B     S95                   BRANCH TO S95            @Y30LB03 10386000
STAEB2    DC    A(START)              ADDRESS OF START         @Y30LB03 10387000
S95       EQU   *                                              @Y30LB03 10388000
          DROP  R15                                            @Y30LB03 10389000
          USING START,R8                                       @Y30LB03 10390000
          LA    R7,F4095(R8)          SET SECOND BASE REG      @ZA16123 10391000
          USING START+4095,R7         ESTABLISH ADDRESSABILTY  @ZA16123 10392000
          LA    R6,F4095(R7)          SET THIRD BASE REG       @ZA16123 10393000
          USING START+8190,R6         ESTABLISH ADDRESSABILTY  @ZA16123 10394000
          LA    R5,F4095(R6)          SET FOURTH BASE REG      @ZA16123 10395000
          USING START+12285,R5        ESTABLISH ADDRESSABILTY  @ZA16123 10396000
          LA    R13,SAVAREA           RESET SAVE AREA ADDR     @ZA16123 10397000
*   IF R0^=F12 THEN                 /* GOOD RTN?             @Y30LB03*/ 10398000
*                                                                  2662 10399000
         C     R0,@CF02050                                         2662 10400000
         BE    @RF02662                                            2662 10401000
*     /***************************************************************/ 10402000
*     /*                                                             */ 10403000
*     /* YES,ISSUE FREEMAIN                                  @Y30LB03*/ 10404000
*     /*                                                             */ 10405000
*     /***************************************************************/ 10406000
*                                                                  2663 10407000
*IFREEMN4:                                                         2663 10408000
*     GEN(FREEMAIN R,LV=104,A=(R1),SP=250);/*                @Y30LB03*/ 10409000
IFREEMN4 FREEMAIN R,LV=104,A=(R1),SP=250                                10410000
*ISTAE2:                                                           2664 10411000
*   GEN(STAE  ICBMSG90,CT,XCTL=YES);/*                       @Y30LB03*/ 10412000
@RF02662 DS    0H                                                  2664 10413000
ISTAE2   STAE  ICBMSG90,CT,XCTL=YES                                     10414000
*   R13=ADDR(SAVAREA);              /* REESTABLISH SAVE AREA ADDR  2665 10415000
*                                                            @G24LB02*/ 10416000
         LA    R13,SAVAREA                                         2665 10417000
*   IF DQING=BONE THEN              /* DID ABEND OCCUR IN THE      2666 10418000
*                                                            @Y30LB03   10419000
*                                      MIDDLE OF DQING DELAYED     2666 10420000
*                                      RESPONSE QUEUE        @Y30LB03   10421000
*                                      ELEMENT ?             @Y30LB03*/ 10422000
         TM    DQING,B'00100000'                                   2666 10423000
         BNO   @RF02666                                            2666 10424000
*     REENTRY=ADDR(FINISHDQ);       /* YES, SET REENTRY POINT BACK 2667 10425000
*                                                            @Y30LB03   10426000
*                                      TO ICBMSG21, SO CAN FINISH  2667 10427000
*                                                            @Y30LB03*/ 10428000
         LA    @12,FINISHDQ                                        2667 10429000
         ST    @12,REENTRY                                         2667 10430000
*   ELSE                            /* NO, NOT AT THAT POINT @Y30LB03*/ 10431000
*     IF LOCKRCVY(1:2)^=B2ZERO THEN /* ANY LOCKS HELD?       @Y30LB03*/ 10432000
         B     @RC02666                                            2668 10433000
@RF02666 TM    LOCKRCVY,B'11000000'                                2668 10434000
         BZ    @RF02668                                            2668 10435000
*       DO;                         /* YES,                  @Y30LB03*/ 10436000
*         IF CMSLK=BONE THEN        /* CMS LOCK HELD?        @Y30LB03*/ 10437000
*                                                                  2670 10438000
         TM    CMSLK,B'01000000'                                   2670 10439000
         BNO   @RF02670                                            2670 10440000
*           /*********************************************************/ 10441000
*           /*                                                       */ 10442000
*           /* YES, RELEASE IT                               @Y30LB03*/ 10443000
*           /*                                                       */ 10444000
*           /*********************************************************/ 10445000
*                                                                  2671 10446000
*           GEN;                                                   2671 10447000
*                                                                  2671 10448000
*                                                          /*@Y30LB03*/ 10449000
IFRECMSR SETLOCK RELEASE,TYPE=CMS,RELATED=(LOCALLOCK,          @Y30LB03*10450000
               ICB2MSG(IGTCMS1THRU4)),REGS=USE                 @Y30LB03 10451000
*           /*********************************************************/ 10452000
*           /*                                                       */ 10453000
*           /* RELEASE THE LOCAL LOCK                        @Y30LB03*/ 10454000
*           /*                                                       */ 10455000
*           /*********************************************************/ 10456000
*                                                                  2672 10457000
*           GEN;                                                   2672 10458000
@RF02670 DS    0H                                                  2672 10459000
*                                                          /*@Y30LB03*/ 10460000
IFREELCL SETLOCK RELEASE,TYPE=LOCAL,RELATED=(LOCALLOCK,        @Y30LB03*10461000
               ICB2MSG(IGETLCL1THRU5)),REGS=USE                @Y30LB03 10462000
*           LOCKRCVY(1:2)=B2ZERO;   /* CLEAR LOCK RECOVERY FIELD   2673 10463000
*                                                            @Y30LB03*/ 10464000
         NI    LOCKRCVY,B'00111111'                                2673 10465000
*       END;                        /*                       @Y30LB03*/ 10466000
*   IF MSG05FLG=ON THEN             /* WAS ICBMSG05 IN CONTROL?    2675 10467000
*                                                            @G24LB02*/ 10468000
@RF02668 DS    0H                                                  2675 10469000
@RC02666 TM    MSG05FLG,B'01000000'                                2675 10470000
         BNO   @RF02675                                            2675 10471000
*     DO;                           /* YES                   @G24LB02*/ 10472000
*       ICBI=OFF;                   /* TURN OFF INIT INDICATOR     2677 10473000
*                                                            @G24LB02*/ 10474000
*       ICBB=ON;                    /* TURN ON BROKEN BOX INDICATOR     10475000
*                                                            @G24LB02*/ 10476000
         L     @12,ICBPTR                                          2678 10477000
         OI    ICBB(@12),B'00010000'                               2678 10478000
         NI    ICBI(@12),B'01111111'                               2678 10479000
*       SVCCALL=OFF;                /* CLEAR SVCCALL FLAG    @G24LB02*/ 10480000
         NI    SVCCALL,B'11110111'                                 2679 10481000
*       REENTRY=ADDR(INITBEG);      /* SETUP REENTRY ADDRESS @G24LB02*/ 10482000
         LA    @12,INITBEG                                         2680 10483000
         ST    @12,REENTRY                                         2680 10484000
*     END;                          /*                       @G24LB02*/ 10485000
*   ELSE                            /*                       @G24LB02*/ 10486000
*     IF REENTRY=ADDR(PROCMSG) THEN /* WAS MSG BEING PROCESSED?    2682 10487000
*                                                            @Y30LB03*/ 10488000
         B     @RC02675                                            2682 10489000
@RF02675 LA    @12,PROCMSG                                         2682 10490000
         C     @12,REENTRY                                         2682 10491000
         BNE   @RF02682                                            2682 10492000
*       DO;                         /* YES,                  @Y30LB03*/ 10493000
*                                                                  2683 10494000
*         /***********************************************************/ 10495000
*         /*                                                         */ 10496000
*         /* INCREMENT MSG POINTERS AND COUNTERS TO          @Y30LB03*/ 10497000
*         /* SKIP THAT MSG                                   @Y30LB03*/ 10498000
*         /*                                                         */ 10499000
*         /***********************************************************/ 10500000
*                                                                  2684 10501000
*         LENCNTR=LENCNTR+MSGL;     /*                       @Y30LB03*/ 10502000
         L     @12,MSGPTR                                          2684 10503000
         SLR   @09,@09                                             2684 10504000
         IC    @09,MSGL(,@12)                                      2684 10505000
         L     @04,LENCNTR                                         2684 10506000
         ALR   @04,@09                                             2684 10507000
         ST    @04,LENCNTR                                         2684 10508000
*         MSGPTR=MSGPTR+MSGL;       /*                       @Y30LB03*/ 10509000
         ALR   @12,@09                                             2685 10510000
         ST    @12,MSGPTR                                          2685 10511000
*       END;                        /*                       @Y30LB03*/ 10512000
*     ELSE                          /* NO, NOT MSG PROCESS   @G24LB02*/ 10513000
*       IF SVCCALL=ON THEN          /* ABEND WHILE SVC INVOKED?    2687 10514000
*                                                            @G24LB02*/ 10515000
         B     @RC02682                                            2687 10516000
@RF02682 TM    SVCCALL,B'00001000'                                 2687 10517000
         BNO   @RF02687                                            2687 10518000
*         DO;                       /* SVC ABEND CODE        @G24LB02*/ 10519000
*           R15=F4;                 /* SET REG 15 FOR FAIL   @G24LB02*/ 10520000
         LA    R15,4                                               2689 10521000
*           R0=CODE377;             /* SET R0 REAS CODE X179 @G24LB02*/ 10522000
         LA    R0,377                                              2690 10523000
*         END;                      /* END SVC ABEND CODE    @G24LB02*/ 10524000
*       ELSE                        /* NO,                   @Y30LB03*/ 10525000
*         IF RECOVER(1)=BONE THEN   /* COMTASK BEING PRO-    @Y30LB03   10526000
*                                      CESSED AT ABEND       @Y30LB03*/ 10527000
         B     @RC02687                                            2692 10528000
@RF02687 TM    RECOVER,B'10000000'                                 2692 10529000
         BNO   @RF02692                                            2692 10530000
*           DO;                     /* YES, ......           @Y30LB03*/ 10531000
*             IF RECOVER(2)=BZERO THEN/* HAS THE CWB BEEN    @Y30LB03   10532000
*                                      DQ'D ?                @Y30LB03*/ 10533000
         TM    RECOVER,B'01000000'                                 2694 10534000
         BNZ   @RF02694                                            2694 10535000
*               REENTRY=ADDR(INITPTRL);/* NO ,SET REENTRY    @Y30LB03*/ 10536000
         LA    @12,INITPTRL                                        2695 10537000
         ST    @12,REENTRY                                         2695 10538000
*             ELSE                  /* YES, .......          @Y30LB03*/ 10539000
*               DO;                 /* CHECK FREED BIT       @Y30LB03*/ 10540000
         B     @RC02694                                            2696 10541000
@RF02694 DS    0H                                                  2697 10542000
*                 IF RECOVER(3)=BONE THEN/* IF ON THEN       @Y30LB03*/ 10543000
         TM    RECOVER,B'00100000'                                 2697 10544000
         BNO   @RF02697                                            2697 10545000
*                   REENTRY=ADDR(RTN40L);/* SET REENTRY      @Y30LB03*/ 10546000
         LA    @12,RTN40L                                          2698 10547000
         ST    @12,REENTRY                                         2698 10548000
*                 ELSE              /* NOT FREED, SO....     @Y30LB03*/ 10549000
*                   DO;             /* DETERMINE TYPE OF     @Y30LB03   10550000
*                                      OPERATOR COMMAND      @Y30LB03*/ 10551000
         B     @RC02697                                            2699 10552000
@RF02697 DS    0H                                                  2700 10553000
*                     IF RECOVER(4)=BONE THEN/* WAS IT A VARY?     2700 10554000
*                                                            @Y30LB03*/ 10555000
         TM    RECOVER,B'00010000'                                 2700 10556000
         BNO   @RF02700                                            2700 10557000
*                       REENTRY=ADDR(VFREEL);/* YES,SET REENTRY    2701 10558000
*                                                            @Y30LB03*/ 10559000
         LA    @12,VFREEL                                          2701 10560000
         ST    @12,REENTRY                                         2701 10561000
*                     ELSE          /* NO,CHECK ANOTHER      @Y30LB03*/ 10562000
*                       IF RECOVER(5)=BONE THEN/* WAS IT FOR @Y30LB03   10563000
*                                      ASSIGN OR PURGE?      @Y30LB03*/ 10564000
         B     @RC02700                                            2702 10565000
@RF02700 TM    RECOVER,B'00001000'                                 2702 10566000
         BNO   @RF02702                                            2702 10567000
*                         REENTRY=ADDR(PAWTOL);/* YES,SET REENTRY  2703 10568000
*                                                            @Y30LB03*/ 10569000
         LA    @12,PAWTOL                                          2703 10570000
         ST    @12,REENTRY                                         2703 10571000
*                       ELSE        /* NO,                   @Y30LB03*/ 10572000
*                         IF RECOVER(6)=BONE THEN/* WAS IS FOR     2704 10573000
*                                                            @Y30LB03   10574000
*                                      SUSPEND?              @Y30LB03*/ 10575000
         B     @RC02702                                            2704 10576000
@RF02702 TM    RECOVER,B'00000100'                                 2704 10577000
         BNO   @RF02704                                            2704 10578000
*                           REENTRY=ADDR(SPFREEL);/* YES,SET RENTRY     10579000
*                                                            @Y30LB03*/ 10580000
         LA    @12,SPFREEL                                         2705 10581000
         ST    @12,REENTRY                                         2705 10582000
*                   END;            /*                       @Y30LB03*/ 10583000
@RF02704 DS    0H                                                  2706 10584000
@RC02702 DS    0H                                                  2706 10585000
@RC02700 DS    0H                                                  2707 10586000
*               END;                /*                       @Y30LB03*/ 10587000
@RC02697 DS    0H                                                  2708 10588000
*           END;                    /*                       @Y30LB03*/ 10589000
@RC02694 DS    0H                                                  2709 10590000
*   R14=REENTRY;                    /*                       @Y30LB03*/ 10591000
@RF02692 DS    0H                                                  2709 10592000
@RC02687 DS    0H                                                  2709 10593000
@RC02682 DS    0H                                                  2709 10594000
@RC02675 L     R14,REENTRY                                         2709 10595000
*   RETURN;                         /* RETURN TO ABEND       @Y30LB03*/ 10596000
@EL00034 DS    0H                                                  2710 10597000
@EF00034 DS    0H                                                  2710 10598000
@ER00034 BR    @14                                                 2710 10599000
*   END ICBMSG95;                   /*                       @Y30LB03*/ 10600000
*   END ICB2MSG                     /*                       @Y30LB03*/ 10601000
*/*********************************************************  @ZM31056*/ 10602000
*                                                                  2712 10603000
*                                                                  2712 10604000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 10605000
*/*%INCLUDE SYSLIB  (CVT     )                                       */ 10606000
*/*%INCLUDE SYSLIB  (IHAASVT )                                       */ 10607000
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */ 10608000
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */ 10609000
*/*%INCLUDE SYSLIB  (ICB2IOBX)                                       */ 10610000
*/*%INCLUDE SYSLIB  (IECDIOSB)                                       */ 10611000
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */ 10612000
*/*%INCLUDE SYSLIB  (IEZSSC  )                                       */ 10613000
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */ 10614000
*/*%INCLUDE SYSLIB  (IEZINIT )                                       */ 10615000
*/*%INCLUDE SYSLIB  (IEZMESG )                                       */ 10616000
*/*%INCLUDE SYSLIB  (ICBRQUE )                                       */ 10617000
*/*%INCLUDE SYSLIB  (IFASMFR )                                       */ 10618000
*/*%INCLUDE SYSLIB  (IFASMFR1)                                       */ 10619000
*/*%INCLUDE SYSLIB  (IFASMFR2)                                       */ 10620000
*/*%INCLUDE SYSLIB  (IFASMFR3)                                       */ 10621000
*/*%INCLUDE SYSLIB  (IFASMFR4)                                       */ 10622000
*/*%INCLUDE SYSLIB  (IFASMFR5)                                       */ 10623000
*/*%INCLUDE SYSLIB  (IFASMFR6)                                       */ 10624000
*/*%INCLUDE SYSLIB  (IFASMFR7)                                       */ 10625000
*/*%INCLUDE SYSLIB  (IFASMFR8)                                       */ 10626000
*/*%INCLUDE SYSLIB  (IFASMFR9)                                       */ 10627000
*/*%INCLUDE SYSLIB  (IFASMFRA)                                       */ 10628000
*/*%INCLUDE SYSLIB  (IFASMFRB)                                       */ 10629000
*/*%INCLUDE SYSLIB  (IFASMFRC)                                       */ 10630000
*/*%INCLUDE SYSLIB  (IFASMFRD)                                       */ 10631000
*/*%INCLUDE SYSLIB  (IEZCWB  )                                       */ 10632000
*/*%INCLUDE SYSLIB  (IEZSDGLS)                                       */ 10633000
*/*%INCLUDE SYSLIB  (IEFJSSOB)                                       */ 10634000
*/*%INCLUDE SYSLIB  (IEFJSSIB)                                       */ 10635000
*/*%INCLUDE SYSLIB  (IEFJESCT)                                       */ 10636000
*                                                                  2712 10637000
*       ;                                                          2712 10638000
@DATA    DS    0H                                                       10639000
@CH00081 DC    H'3'                                                     10640000
@CH00810 DC    H'6'                                                     10641000
@CH01340 DC    H'7'                                                     10642000
@CH00935 DC    H'64'                                                    10643000
@CH03014 DC    H'100'                                                   10644000
@CH02431 DC    XL2'0001'                                                10645000
@SM03332 MVC   ECBDATA(0,@14),MSGDATA+6(@09)                            10646000
         DS    0F                                                       10647000
@AL02272 DC    AL1(X'80')              LIST WITH   1 ARGUMENT(S)        10648000
         DC    AL3(LRUSSOB)                                             10649000
         DS    0F                                                       10650000
@TF00001 DS    F                                                        10651000
         DS    0F                                                       10652000
@CF00117 DC    F'1'                                                     10653000
@CF00129 DC    F'2'                                                     10654000
@CF00109 DC    F'4'                                                     10655000
@CF00796 DC    F'5'                                                     10656000
@CF00115 DC    F'8'                                                     10657000
@CF02044 DC    F'9'                                                     10658000
@CF02046 DC    F'10'                                                    10659000
@CF02048 DC    F'11'                                                    10660000
@CF02050 DC    F'12'                                                    10661000
@CH02050 EQU   @CF02050+2                                               10662000
@CF00170 DC    F'15'                                                    10663000
@CF00090 DC    F'16'                                                    10664000
@CF02056 DC    F'17'                                                    10665000
@CF01407 DC    F'20'                                                    10666000
@CH01407 EQU   @CF01407+2                                               10667000
@CF02064 DC    F'22'                                                    10668000
@CF02073 DC    F'27'                                                    10669000
@CF02075 DC    F'28'                                                    10670000
@CF02094 DC    F'40'                                                    10671000
@CF00838 DC    F'44'                                                    10672000
@CF03265 DC    F'84'                                                    10673000
@CF02395 DC    F'108'                                                   10674000
@CF00741 DC    F'248'                                                   10675000
@CF03269 DC    F'1320'                                                  10676000
@CF03011 DC    F'1048576'                                               10677000
@CF03340 DC    F'-8'                                                    10678000
@CF03341 DC    F'-5'                                                    10679000
@CF03342 DC    F'-4'                                                    10680000
@CF03331 DC    F'-3'                                                    10681000
@CF02435 DC    XL4'40000000'                                            10682000
@CF02463 DC    XL4'0000FFFF'                                            10683000
@CF02951 DC    XL4'F7'                                                  10684000
@CV00087 DC    V(ICBMSG56)                                              10685000
@CA02101 DC    A(MSGS)                                                  10686000
@CA02112 DC    A(SSIDS)                                                 10687000
@CV00088 DC    V(ICBMSG05)                                              10688000
         DS    0D                                                       10689000
SAVR13   DS    F                                                        10690000
SAVR14   DS    F                                                        10691000
SAVR1410 DS    A                                                        10692000
SAVR1415 DS    A                                                        10693000
SAVR1416 DS    A                                                        10694000
SAVR1417 DS    A                                                        10695000
SAVR1418 DS    A                                                        10696000
SAVR1420 DS    A                                                        10697000
SAVR1421 DS    A                                                        10698000
SAVR1440 DS    A                                                        10699000
SAVR1441 DS    A                                                        10700000
SAVR1442 DS    A                                                        10701000
SAVR1443 DS    A                                                        10702000
SAVR1444 DS    A                                                        10703000
SAVR1445 DS    A                                                        10704000
SAVR1446 DS    A                                                        10705000
SAVR1447 DS    A                                                        10706000
SAVR1449 DS    A                                                        10707000
SAVR1450 DS    A                                                        10708000
SAVRONOF DS    A                                                        10709000
SAVR1455 DS    A                                                        10710000
SAVR1470 DS    A                                                        10711000
SAVR1480 DS    A                                                        10712000
SAVR1482 DS    A                                                        10713000
SAVR1483 DS    A                                                        10714000
SAVR1498 DS    A                                                        10715000
LDMSSR14 DS    A                                                        10716000
CKUCBR14 DS    A                                                        10717000
SECENR14 DS    A                                                        10718000
FSENTR14 DS    A                                                        10719000
S        DS    F                                                        10720000
INTECBPT DC    A(0)                                                     10721000
ASVTPTR  DS    A                                                        10722000
ASCBPTR  DC    A(0)                                                     10723000
CCWSPTR  DC    A(0)                                                     10724000
SSCDATAP DC    A(0)                                                     10725000
IOSBPTR  DC    A(0)                                                     10726000
SRBPTR   DC    A(0)                                                     10727000
UCBPTR   DC    A(0)                                                     10728000
ECBPTR   DS    A                                                        10729000
BITPTR   DC    A(0)                                                     10730000
MSGPTR   DC    A(0)                                                     10731000
INITPTR  DS    A                                                        10732000
CMDPTR   DC    AL4(CMDQUE)                                              10733000
MESGPTR  DS    A                                                        10734000
RQBLKPTR DC    A(0)                                                     10735000
REENTRY  DC    AL4(START)                                               10736000
QELTPTR  DS    A                                                        10737000
LENCNTR  DC    F'0'                                                     10738000
CWBVREF  DS    A                                                        10739000
WAITECB  DC    F'0'                                                     10740000
SMF22PTR DS    A                                                        10741000
SMF09PTR DS    A                                                        10742000
SMF11PTR DS    A                                                        10743000
OPCMECB  DS    FL4                                                      10744000
         ORG   OPCMECB                                                  10745000
OPCMECB1 DS    CL1                                                      10746000
OPCMECB2 DS    AL3                                                      10747000
         ORG   OPCMECB+4                                                10748000
CWBPTR   DS    A                                                        10749000
FAILCODE DC    F'0'                                                     10750000
PURGPTR  DS    A                                                        10751000
I        DC    F'0'                                                     10752000
J        DC    F'0'                                                     10753000
K        DC    F'0'                                                     10754000
CLEANUP  DS    F                                                        10755000
NON7F    DS    F                                                        10756000
PNTR9092 DS    A                                                        10757000
GTMAINR0 DS    FL4                                                      10758000
         ORG   GTMAINR0                                                 10759000
GTMAINSP DC    X'00'                                                    10760000
GTMAINLL DC    AL3(0)                                                   10761000
         ORG   GTMAINR0+4                                               10762000
ICBPTR   DS    A                                                        10763000
SAVREENT DS    F                                                        10764000
SAVRENT  DS    F                                                        10765000
LZYXPTR  DS    A                                                        10766000
VALIDCNT DS    F                                                        10767000
VARYCNT  DS    F                                                        10768000
UNITCNT  DS    F                                                        10769000
SUSPCOMP DS    F                                                        10770000
SSIBPTR  DS    A                                                        10771000
IXSDGL   DS    F                                                        10772000
IXLRUNN  DS    F                                                        10773000
LISTA    DS    A                                                        10774000
MSCUCBA1 DS    A                                                        10775000
SAVPR14  DS    A                                                        10776000
INILEN   DC    AL2(20)                                                  10777000
MESLEN   DC    AL2(68)                                                  10778000
CONV1    DS    FL2                                                      10779000
         ORG   CONV1                                                    10780000
CONV2    DS    CL2                                                      10781000
         ORG   CONV1+2                                                  10782000
SIXTHOU  DC    H'6000'                                                  10783000
UCBPTR16 DC    AL2(0)                                                   10784000
BRSWTCH  DC    AL1(0)                                                   10785000
FREESWTH DC    AL1(0)                                                   10786000
DSDSWTH  DC    AL1(0)                                                   10787000
HAVELK   DS    FL1                                                      10788000
MSGVARY  DS    FL1                                                      10789000
RPARNPOS DS    FL1                                                      10790000
CMNDINDX DS    FL1                                                      10791000
PRIMSWTH DS    FL1                                                      10792000
ALTONLIN DC    AL1(0)                                                   10793000
         DS    0D                                                       10794000
@TS00001 DS    CL8                                                      10795000
@CC02930 DC    C'REJECTED,VVVVVV MOUNTED ON UUU '                       10796000
@CC02933 DC    C'FAILED,REAS CODE=   '                                  10797000
@CC02598 DC    C', REAS CODE=179 '                                      10798000
@CC02786 DC    C'SUCCESSFUL,'                                           10799000
@CC02788 DC    C'FAILED,    '                                           10800000
@CC02926 DC    C'          '                                            10801000
@CC02928 EQU   @CC02786                                                 10802000
@CC03197 DC    C',OFFLINE '                                             10803000
@CC02729 DC    C'STAGE   '                                              10804000
@CC02730 DC    C'HOST    '                                              10805000
@CC03180 DC    C',ALTMSC '                                              10806000
@CC03194 DC    C',ONLINE '                                              10807000
@CC02728 DC    C'DESTAGE'                                               10808000
@CC02860 DC    C'OFFLINE'                                               10809000
@CC03179 DC    C',TRACE '                                               10810000
@CC02862 DC    C'ONLINE'                                                10811000
@CC02935 DC    C'ASSIGN'                                                10812000
@CC02936 DC    C'PURGE '                                                10813000
@CC02953 DC    C'HALT S'                                                10814000
@CC02995 DC    C'CANCEL'                                                10815000
@CC03178 DC    C',MSVC '                                                10816000
@CC03181 DC    C',PATHS'                                                10817000
@CC02612 EQU   @CC02936                                                 10818000
@CC03177 DC    C',QCB '                                                 10819000
@CC03195 DC    C',ONL '                                                 10820000
@CC03199 DC    C',OFF '                                                 10821000
@CC02725 DC    C'3333'                                                  10822000
@CC02726 DC    C'3330'                                                  10823000
@CC02866 EQU   @CC02926                                                 10824000
@CC02867 DC    C'0177'                                                  10825000
@CC02873 DC    C'3851'                                                  10826000
@CC02874 DC    C'REAL'                                                  10827000
@CC02943 DC    C'SNAP'                                                  10828000
@CC02944 DC    C'LONG'                                                  10829000
@CC03173 DC    C',SDG'                                                  10830000
@CC03182 DC    C',CPU'                                                  10831000
@CC03183 DC    C',DRC'                                                  10832000
@CC03196 DC    C',ON '                                                  10833000
@CC03200 DC    C',OF '                                                  10834000
@CC02356 EQU   @CC02926                                                 10835000
@CC02792 DC    C'***'                                                   10836000
@CC02868 DC    C' ON'                                                   10837000
@CC02869 EQU   @CC02860                                                 10838000
@CC03136 DC    C'SDG'                                                   10839000
@CC02456 DC    C'00'                                                    10840000
@CC02458 DC    C'28'                                                    10841000
@CC02861 EQU   @CC02860                                                 10842000
@CC02863 EQU   @CC02862                                                 10843000
@CC02864 EQU   @CC03173                                                 10844000
@CC03175 DC    C',('                                                    10845000
@CB02431 DC    X'0001'                                                  10846000
@CB02433 DC    X'0000'                                                  10847000
@CB02326 DC    B'1000000000000000'                                      10848000
@CB02333 DC    B'0100000000000000'                                      10849000
ZERO     DC    X'000000'                                                10850000
QUERLIST DS    CL44                                                     10851000
         ORG   QUERLIST                                                 10852000
QULEN    DS    FL4                                                      10853000
QUORD    DS    CL1                                                      10854000
QURES    DS    CL1                                                      10855000
QUCODE   DS    BL1                                                      10856000
         ORG   QUCODE                                                   10857000
QULIB    DS    BL1                                                      10858000
         ORG   QUERLIST+7                                               10859000
QUSECT   DS    BL1                                                      10860000
         ORG   QUSECT                                                   10861000
QUXADDR  DS    BL1                                                      10862000
         ORG   QUXADDR                                                  10863000
QUFLAG   DS    BL1                                                      10864000
         ORG   QUFLAG                                                   10865000
QURES1   DS    CL1                                                      10866000
         ORG   QUERLIST+8                                               10867000
QUPARM   DS    CL32                                                     10868000
QUPTR    DS    FL4                                                      10869000
         ORG   QUERLIST+44                                              10870000
WAITLIST DS    CL16                                                     10871000
         ORG   WAITLIST                                                 10872000
ECB1     DS    AL4                                                      10873000
ECB2     DS    AL4                                                      10874000
ECB3     DS    AL4                                                      10875000
@NM00046 DS    CL4                                                      10876000
         ORG   @NM00046                                                 10877000
BYT1     DC    XL1'80'                                                  10878000
ECB4     DS    AL3                                                      10879000
         ORG   WAITLIST+16                                              10880000
NAMFIELD DS    CL8                                                      10881000
ARLIST   DS    CL8                                                      10882000
         ORG   ARLIST                                                   10883000
AIRLL    DC    XL4'08'                                                  10884000
AIROP    DC    XL1'20'                                                  10885000
@NM00047 DC    X'00'                                                    10886000
AIRFLAG  DC    B'0000000000000000'                                      10887000
         ORG   AIRFLAG                                                  10888000
AIRRESV  DS    BL1                                                      10889000
AIRCPUS  EQU   AIRFLAG+0                                                10890000
@NM00048 EQU   AIRFLAG+0                                                10891000
         ORG   ARLIST+8                                                 10892000
PURGLIST DS    CL13                                                     10893000
         ORG   PURGLIST                                                 10894000
PURGLL   DC    XL4'0D'                                                  10895000
PURGOP   DC    XL1'14'                                                  10896000
@NM00049 DC    X'00'                                                    10897000
PURGFLG  DC    B'0000000000000000'                                      10898000
         ORG   PURGFLG                                                  10899000
PURGMPP  DS    BL1                                                      10900000
@NM00050 EQU   PURGFLG+0                                                10901000
         ORG   PURGLIST+8                                               10902000
PURGHOST DC    X'0000000000'                                            10903000
         ORG   PURGLIST+13                                              10904000
         DS    CL3                                                      10905000
DMTLIST  DS    CL28                                                     10906000
         ORG   DMTLIST                                                  10907000
DMLEN    DC    XL4'1C'                                                  10908000
DMOPCD   DC    XL1'06'                                                  10909000
DMNTRES1 DC    X'00'                                                    10910000
DMNTFLAG DC    B'0000000000000000'                                      10911000
         ORG   DMNTFLAG                                                 10912000
DMBITRE1 DS    BL1                                                      10913000
DMDELRSP EQU   DMNTFLAG+0                                               10914000
DMVUAVAL EQU   DMNTFLAG+0                                               10915000
DMBITRES EQU   DMNTFLAG+0                                               10916000
         ORG   DMTLIST+8                                                10917000
DMVOL    DC    XL6'0'                                                   10918000
DMNTASID DC    XL2'0'                                                   10919000
DMNTECB  DC    A(0)                                                     10920000
DMHOST   DC    XL5'0'                                                   10921000
DMNTRES2 DC    XL1'0'                                                   10922000
DMNTVUA  DC    H'0'                                                     10923000
         ORG   DMTLIST+28                                               10924000
SUSPLIST DS    CL8                                                      10925000
         ORG   SUSPLIST                                                 10926000
SUSPLEN  DC    XL4'08'                                                  10927000
SUSPOP   DC    X'22'                                                    10928000
@NM00051 DC    X'00'                                                    10929000
SUSPFLG  DC    B'0000000000000000'                                      10930000
         ORG   SUSPFLG                                                  10931000
SUPIMED  DS    BL1                                                      10932000
SUPRCON  EQU   SUSPFLG+0                                                10933000
SUPPRSW  EQU   SUSPFLG+0                                                10934000
@NM00052 EQU   SUSPFLG+0                                                10935000
         ORG   SUSPLIST+8                                               10936000
BITSW    DS    BL1                                                      10937000
         ORG   BITSW                                                    10938000
MSG92FLG DS    BL1                                                      10939000
DSTGERR  EQU   BITSW+0                                                  10940000
LINETWO  EQU   BITSW+0                                                  10941000
LOOPEND  EQU   BITSW+0                                                  10942000
EXITSW   EQU   BITSW+0                                                  10943000
DSPERR   EQU   BITSW+0                                                  10944000
MSG42SW  EQU   BITSW+0                                                  10945000
@NM00061 EQU   BITSW+0                                                  10946000
         ORG   BITSW+1                                                  10947000
         DS    CL3                                                      10948000
REQLIST1 DS    CL40                                                     10949000
VATMSG   DS    CL4                                                      10950000
         ORG   VATMSG                                                   10951000
REPLYC   DS    CL1                                                      10952000
         ORG   VATMSG+4                                                 10953000
INTER    DS    CL4                                                      10954000
         ORG   INTER                                                    10955000
BYTE1    DS    FL1                                                      10956000
BYTES234 DS    CL3                                                      10957000
         ORG   BYTES234                                                 10958000
BYTE2    DS    FL1                                                      10959000
BYTES34  DS    CL2                                                      10960000
         ORG   BYTES34                                                  10961000
BYTE3    DS    FL1                                                      10962000
         ORG   BYTE3                                                    10963000
BYTE3C   DS    CL1                                                      10964000
         ORG   BYTES34+1                                                10965000
BYTE4    DS    FL1                                                      10966000
         ORG   BYTE4                                                    10967000
BYTE4C   DS    CL1                                                      10968000
         ORG   INTER+4                                                  10969000
ONOFF    DS    CL2                                                      10970000
SSIDADDR DS    CL2                                                      10971000
SMFAREA  DS    CL64                                                     10972000
WTOMCS   DS    CL81                                                     10973000
         ORG   WTOMCS                                                   10974000
WTOMCS01 DC    H'77'                                                    10975000
WTOMCS02 DC    B'1110000000000000'                                      10976000
WTOMCS03 DC    CL73'THE MAXIMUM MESSAGE LENGTH WILL BE SEVENTY-TWO CHARC10977000
               ACTERS SO LEN(MSG )=72'                                  10978000
WTOMCS04 DC    B'0000100000000000'                                      10979000
WTOMCS05 DC    B'0000000000000000'                                      10980000
         ORG   WTOMCS+81                                                10981000
         DS    CL3                                                      10982000
WTOGEN   DS    CL81                                                     10983000
         ORG   WTOGEN                                                   10984000
WTOGEN01 DC    H'77'                                                    10985000
WTOGEN02 DC    B'1000000000000000'                                      10986000
WTOGEN03 DC    CL73'THE MAXIMUM MESSAGE LENGTH WILL BE SEVENTY-TWO CHARC10987000
               ACTERS SO LEN(MSG )=72'                                  10988000
WTOGEN04 DC    B'0001000000000000'                                      10989000
WTOGEN05 DC    B'0100000000000000'                                      10990000
         ORG   WTOGEN+81                                                10991000
HOST     DS    CL5                                                      10992000
CUUUCB   DC    CL3'   '                                                 10993000
FIRST    DC    CL1'0'                                                   10994000
SRBEBCDC DC    CL4'SRB '                                                10995000
FOXES    DC    X'FFFF'                                                  10996000
INITBITS DS    BL1                                                      10997000
         ORG   INITBITS                                                 10998000
@NM00072 DS    BL1                                                      10999000
COMPOST  EQU   INITBITS+0                                               11000000
ECBPOST  EQU   INITBITS+0                                               11001000
@NM00073 EQU   INITBITS+0                                               11002000
INITFLAG EQU   INITBITS+0                                               11003000
CWBCOMP  EQU   INITBITS+0                                               11004000
@NM00074 EQU   INITBITS+0                                               11005000
         ORG   INITBITS+1                                               11006000
PURGINDC DS    BL4                                                      11007000
         ORG   PURGINDC                                                 11008000
PURGFLG5 DS    BL1                                                      11009000
         ORG   PURGFLG5                                                 11010000
PURGBIT  DS    BL1                                                      11011000
MSG05FLG EQU   PURGFLG5+0                                               11012000
SUSPLONG EQU   PURGFLG5+0                                               11013000
         ORG   PURGINDC+1                                               11014000
@NM00075 DS    BL3                                                      11015000
         ORG   PURGINDC+4                                               11016000
SCFLAGS  DS    BL1                                                      11017000
         ORG   SCFLAGS                                                  11018000
SCANEND  DS    BL1                                                      11019000
SCANSTRT EQU   SCFLAGS+0                                                11020000
SCANRUNN EQU   SCFLAGS+0                                                11021000
DUPEND   EQU   SCFLAGS+0                                                11022000
ACTPOST  EQU   SCFLAGS+0                                                11023000
ENTERED  EQU   SCFLAGS+0                                                11024000
FINDSW   EQU   SCFLAGS+0                                                11025000
RDLAB    EQU   SCFLAGS+0                                                11026000
         ORG   SCFLAGS+1                                                11027000
         DS    CL2                                                      11028000
HIBITOFF DC    B'01111111111111111111111111111111'                      11029000
SAVX     DS    CL64                                                     11030000
NOMSS    DC    CL50'ICB320I MSS INOPERATIVE. MSS INITIALIZATION FAILED' 11031000
RECOVER  DS    BL1                                                      11032000
         ORG   RECOVER                                                  11033000
@NM00076 DS    BL1                                                      11034000
@NM00077 EQU   RECOVER+0                                                11035000
@NM00078 EQU   RECOVER+0                                                11036000
@NM00079 EQU   RECOVER+0                                                11037000
@NM00080 EQU   RECOVER+0                                                11038000
@NM00081 EQU   RECOVER+0                                                11039000
@NM00082 EQU   RECOVER+0                                                11040000
         ORG   RECOVER+1                                                11041000
LOCKRCVY DS    BL1                                                      11042000
         ORG   LOCKRCVY                                                 11043000
LOCALLK  DS    BL1                                                      11044000
CMSLK    EQU   LOCKRCVY+0                                               11045000
DQING    EQU   LOCKRCVY+0                                               11046000
VVICREC  EQU   LOCKRCVY+0                                               11047000
SVCCALL  EQU   LOCKRCVY+0                                               11048000
@NM00083 EQU   LOCKRCVY+0                                               11049000
         ORG   LOCKRCVY+1                                               11050000
SW9092   DS    CL1                                                      11051000
         ORG   SW9092                                                   11052000
NEED9092 DS    BL1                                                      11053000
SAVE9092 EQU   SW9092+0                                                 11054000
PROC9092 EQU   SW9092+0                                                 11055000
SKIP9092 EQU   SW9092+0                                                 11056000
HAVE90   EQU   SW9092+0                                                 11057000
HAVE92   EQU   SW9092+0                                                 11058000
@NM00084 EQU   SW9092+0                                                 11059000
         ORG   SW9092+1                                                 11060000
PTCHAREA DS    CL400                                                    11061000
         ORG   PTCHAREA                                                 11062000
EYECTCHR DC    CL19'ICBMSG00 PATCH AREA'                                11063000
@NM00086 DS    CL381                                                    11064000
         ORG   PTCHAREA+400                                             11065000
         DS    CL3                                                      11066000
SAVAREA  DS    CL72                                                     11067000
         DS    CL4                                                      11068000
DBLWORD  DS    CL8                                                      11069000
CHARS    DC    X'FAFBFCFDFEFF'                                          11070000
NUMS     DC    CL16'0123456789ABCDEF'                                   11071000
CCF0F0F0 DC    X'CCF0F0F0'                                              11072000
CC       DC    X'CC'                                                    11073000
BB       DC    X'BB'                                                    11074000
CHAR1F   DC    X'1F'                                                    11075000
MSG15SW  DS    BL1                                                      11076000
         ORG   MSG15SW                                                  11077000
DESC2    DS    BL1                                                      11078000
DESC3    EQU   MSG15SW+0                                                11079000
ROUT24   EQU   MSG15SW+0                                                11080000
WTOOK    EQU   MSG15SW+0                                                11081000
@NM00090 EQU   MSG15SW+0                                                11082000
         ORG   MSG15SW+1                                                11083000
DESCR2   DC    X'4000'                                                  11084000
DESCR3   DC    X'2000'                                                  11085000
SAVDESC  DS    BL2                                                      11086000
ROUTE24  DC    X'5000'                                                  11087000
SAVROUT  DS    BL2                                                      11088000
PRNTLZYX DS    CL7                                                      11089000
         ORG   PRNTLZYX                                                 11090000
PRINTL   DS    CL1                                                      11091000
PRINTX   DS    CL3                                                      11092000
PRINTY   DS    CL2                                                      11093000
PRINTZ   DS    CL1                                                      11094000
         ORG   PRNTLZYX+7                                               11095000
LNOT     DC    CL4'NOT '                                                11096000
LALSO    DC    CL4'ALSO'                                                11097000
CMMA     DC    CL1','                                                   11098000
WTO92    DC    B'0010000000000000'                                      11099000
WTOREST  DC    B'0001000000000000'                                      11100000
POSTC7F  DS    CL1                                                      11101000
         DS    CL3                                                      11102000
HIGHBIT  DC    B'10000000000000000000000000000000'                      11103000
VFLAGS   DC    B'0000000000000000'                                      11104000
MSGRU    DS    CL3                                                      11105000
         ORG   MSGRU                                                    11106000
@NM00092 DS    CL1                                                      11107000
MACRORU  DS    CL2                                                      11108000
         ORG   MSGRU+3                                                  11109000
DASD     DS    BL1                                                      11110000
REAL     DS    BL1                                                      11111000
AUTHMASK DC    X'4000'                                                  11112000
CKAUTH   DC    X'0001'                                                  11113000
         DS    CL1                                                      11114000
VOFLIST  DS    CL24                                                     11115000
         ORG   VOFLIST                                                  11116000
VOFLEN   DC    XL4'18'                                                  11117000
VOFOPCD  DC    X'0C'                                                    11118000
VOFRES1  DC    X'00'                                                    11119000
VOFFLG   DC    B'0000000000000000'                                      11120000
         ORG   VOFFLG                                                   11121000
VOFSTAG  DS    BL1                                                      11122000
VOFREAL  EQU   VOFFLG+0                                                 11123000
VOFNEUT  EQU   VOFFLG+0                                                 11124000
VOFTEST  EQU   VOFFLG+0                                                 11125000
@NM00093 EQU   VOFFLG+0                                                 11126000
         ORG   VOFLIST+8                                                11127000
VOFSSID  DC    H'0'                                                     11128000
VOFRUA   DC    H'0'                                                     11129000
VOFHOST  DC    X'0000000000'                                            11130000
@NM00094 DC    X'00'                                                    11131000
VOFASID  DC    X'0000'                                                  11132000
VOFECB   DC    F'0'                                                     11133000
         ORG   VOFLIST+24                                               11134000
VONLST01 DS    CL12                                                     11135000
         ORG   VONLST01                                                 11136000
VONLEN   DC    XL4'0C'                                                  11137000
VONOPCD  DC    X'0A'                                                    11138000
VONRES1  DC    X'00'                                                    11139000
VONFLG   DC    B'0000000000000000'                                      11140000
         ORG   VONFLG                                                   11141000
VONSTAG  DS    BL1                                                      11142000
VONREAL  EQU   VONFLG+0                                                 11143000
@NM00095 EQU   VONFLG+0                                                 11144000
         ORG   VONLST01+8                                               11145000
VONSSID  DC    H'0'                                                     11146000
VONRES2  DC    X'0000'                                                  11147000
         ORG   VONLST01+12                                              11148000
VOLKEY   DC    CL6'VOLID='                                              11149000
PKHOSTID DS    CL7                                                      11150000
         ORG   PKHOSTID                                                 11151000
@NM00097 DS    CL1                                                      11152000
RECVHOST DS    CL6                                                      11153000
         ORG   RECVHOST                                                 11154000
PCKDHOST DS    CL5                                                      11155000
@NM00098 DS    CL1                                                      11156000
         ORG   PKHOSTID+7                                               11157000
SBPOL    DS    CL1                                                      11158000
OFFRPLY  DS    CL6                                                      11159000
         ORG   OFFRPLY                                                  11160000
REPLYU   DS    CL1                                                      11161000
@NM00099 DS    CL5                                                      11162000
         ORG   OFFRPLY+6                                                11163000
LRUSTGE  DS    CL198                                                    11164000
         ORG   LRUSTGE                                                  11165000
LRULIST  DS    CL56                                                     11166000
         ORG   LRULIST                                                  11167000
LRUEDNN  DS    28CL2                                                    11168000
         ORG   LRUSTGE+56                                               11169000
LRUSSIB  DS    CL36                                                     11170000
LRUSSOB  DS    CL20                                                     11171000
LRUSSMS  DS    CL12                                                     11172000
LRUREGS  DS    18A                                                      11173000
LRUCOUNT DS    FL2                                                      11174000
         ORG   LRUSTGE+198                                              11175000
CHARSSOB DC    CL4'SSOB'                                                11176000
CHARSSIB DC    CL4'SSIB'                                                11177000
         DS    CL2                                                      11178000
SAVESDG  DS    CL8                                                      11179000
         ORG   SAVESDG                                                  11180000
@NM00103 DS    CL3                                                      11181000
@NM00104 DS    CL2                                                      11182000
@NM00105 DS    FL3                                                      11183000
         ORG   SAVESDG+8                                                11184000
MM       DS    CL2                                                      11185000
SPACEMSG DC    CL26'INSUFFICIENT QUEUE SPACE  '                         11186000
SYNTXMSG DC    CL26'SYNTAX ERROR IN COMMAND   '                         11187000
INITATTS DC    X'8000'                                                  11188000
CONVID1  DS    CL3                                                      11189000
         ORG   CONVID1                                                  11190000
BEGID1   DS    FL1                                                      11191000
MIDID1   DS    FL1                                                      11192000
ENDID1   DS    FL1                                                      11193000
         ORG   CONVID1+3                                                11194000
CONVID2  DS    CL3                                                      11195000
         ORG   CONVID2                                                  11196000
BEGID2   DS    FL1                                                      11197000
MIDID2   DS    FL1                                                      11198000
ENDID2   DS    FL1                                                      11199000
         ORG   CONVID2+3                                                11200000
VALSID   DS    CL5                                                      11201000
         ORG   VALSID                                                   11202000
CSSID    DS    CL4                                                      11203000
CORB     DS    CL1                                                      11204000
         ORG   VALSID+5                                                 11205000
DPFLAGS  DS    BL2                                                      11206000
         DS    CL3                                                      11207000
ADLIST   DS    CL16                                                     11208000
         ORG   ADLIST                                                   11209000
ASDALEN  DC    XL4'10'                                                  11210000
ASDAOPC  DC    X'2C'                                                    11211000
ASDA001  DC    X'00'                                                    11212000
ASDAFLG  DC    B'0000000000000000'                                      11213000
         ORG   ASDAFLG                                                  11214000
ASASSOC  DS    BL1                                                      11215000
ASDASSOC EQU   ASDAFLG+0                                                11216000
@NM00106 EQU   ASDAFLG+0                                                11217000
ASDEINT  EQU   ASDAFLG+0                                                11218000
ASDMNT   EQU   ASDAFLG+0                                                11219000
@NM00107 EQU   ASDAFLG+0                                                11220000
         ORG   ADLIST+8                                                 11221000
ASDACPU  DC    X'0000000000'                                            11222000
ASDA002  DC    X'000000'                                                11223000
         ORG   ADLIST+16                                                11224000
CONFGMSK DC    B'10000000'                                              11225000
         DC    B'01000000'                                              11226000
         DC    B'00100000'                                              11227000
         DC    B'00010000'                                              11228000
         DC    B'00001000'                                              11229000
         DC    B'00000100'                                              11230000
         DC    B'00000010'                                              11231000
         DC    B'00000001'                                              11232000
CMDQUE   DC    10F'0'                                                   11233000
PAKMPOS  DC    AL1(41)                                                  11234000
         DC    AL1(62)                                                  11235000
LRUIX    DS    30AL1                                                    11236000
CONST    DC    CL2'00'                                                  11237000
         DC    CL2'01'                                                  11238000
         DC    CL2'02'                                                  11239000
         DC    CL2'03'                                                  11240000
         DC    CL2'04'                                                  11241000
         DC    CL2'05'                                                  11242000
         DC    CL2'06'                                                  11243000
         DC    CL2'07'                                                  11244000
         DC    CL2'08'                                                  11245000
         DC    CL2'09'                                                  11246000
         DC    CL2'10'                                                  11247000
         DC    CL2'11'                                                  11248000
         DC    CL2'12'                                                  11249000
         DC    CL2'13'                                                  11250000
         DC    CL2'14'                                                  11251000
         DC    CL2'15'                                                  11252000
         DC    CL2'16'                                                  11253000
         DC    CL2'17'                                                  11254000
         DC    CL2'18'                                                  11255000
         DC    CL2'19'                                                  11256000
         DC    CL2'20'                                                  11257000
         DC    CL2'21'                                                  11258000
         DC    CL2'22'                                                  11259000
         DC    CL2'23'                                                  11260000
         DC    CL2'24'                                                  11261000
         DC    CL2'25'                                                  11262000
         DC    CL2'26'                                                  11263000
         DC    CL2'27'                                                  11264000
         DC    CL2'28'                                                  11265000
         DC    CL2'29'                                                  11266000
ICB2MSG  CSECT                                                          11267000
*                                                          /*@G24LB02*/ 11268000
         DS    F                    ALIGN TO WORD BDY          @G24LB02 11269000
FOUR     EQU   X'04'                USED WHEN WTOR INVOKED     @G24LB02 11270000
ICB2MSG  CSECT                                                          11271000
*                                      /* GEN ASSEM DATA     @Y30LB03*/ 11272000
         DS    0F                   ALIGN                      @Y30LB03 11273000
TMER     DC    X'00000000'          CONST FOR SAMP TIME        @Y30LB03 11274000
CON2     EQU   2                    CONST FOR GEN ST           @Y30LB03 11275000
CON6     EQU   6                    CONST FOR GEN ST           @Y30LB03 11276000
ICB2MSG  CSECT                                                          11277000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       11278000
@01      EQU   01                                                       11279000
@02      EQU   02                                                       11280000
@03      EQU   03                                                       11281000
@04      EQU   04                                                       11282000
@05      EQU   05                                                       11283000
@06      EQU   06                                                       11284000
@07      EQU   07                                                       11285000
@08      EQU   08                                                       11286000
@09      EQU   09                                                       11287000
@10      EQU   10                                                       11288000
@11      EQU   11                                                       11289000
@12      EQU   12                                                       11290000
@13      EQU   13                                                       11291000
@14      EQU   14                                                       11292000
@15      EQU   15                                                       11293000
R0       EQU   @00                                                      11294000
R1       EQU   @01                                                      11295000
R2       EQU   @02                                                      11296000
R3       EQU   @03                                                      11297000
R4       EQU   @04                                                      11298000
R5       EQU   @05                                                      11299000
R6       EQU   @06                                                      11300000
R7       EQU   @07                                                      11301000
R8       EQU   @08                                                      11302000
R10      EQU   @10                                                      11303000
R11      EQU   @11                                                      11304000
R12      EQU   @12                                                      11305000
R13      EQU   @13                                                      11306000
R14      EQU   @14                                                      11307000
R15      EQU   @15                                                      11308000
QUERR1   EQU   @01                                                      11309000
PAIRR1   EQU   @01                                                      11310000
MDREG1   EQU   @01                                                      11311000
SUSPR1   EQU   @01                                                      11312000
GPR01P   EQU   @01                                                      11313000
GPR15F   EQU   @15                                                      11314000
ICBR1    EQU   @01                                                      11315000
ASDAR1   EQU   @01                                                      11316000
R9       EQU   @09                                                      11317000
         ENTRY CMDQUE                                                   11318000
         ENTRY CONFGMSK                                                 11319000
         ENTRY RECOVER                                                  11320000
         ENTRY INTER                                                    11321000
         ENTRY BITSW                                                    11322000
         ENTRY PROCMSG                                                  11323000
         ENTRY FINISHDQ                                                 11324000
         ENTRY RTN40L                                                   11325000
         ENTRY VFREEL                                                   11326000
         ENTRY PAWTOL                                                   11327000
         ENTRY SPFREEL                                                  11328000
         ENTRY SAVR1446                                                 11329000
         ENTRY SAVR1482                                                 11330000
         ENTRY UCBPTR                                                   11331000
         ENTRY MSGPTR                                                   11332000
         ENTRY CMDPTR                                                   11333000
         ENTRY CWBPTR                                                   11334000
         EXTRN MSGS                                                     11335000
         EXTRN SSIDS                                                    11336000
CVTPTR   EQU   16                                                       11337000
PSA      EQU   0                                                        11338000
FLCRNPSW EQU   PSA                                                      11339000
FLCROPSW EQU   PSA+8                                                    11340000
FLCICCW2 EQU   PSA+16                                                   11341000
PSAEEPSW EQU   PSA+132                                                  11342000
PSAESPSW EQU   PSA+136                                                  11343000
FLCSVILC EQU   PSAESPSW+1                                               11344000
PSAEPPSW EQU   PSA+140                                                  11345000
FLCPIILC EQU   PSAEPPSW+1                                               11346000
FLCPICOD EQU   PSAEPPSW+2                                               11347000
PSAPICOD EQU   FLCPICOD+1                                               11348000
FLCTEA   EQU   PSAEPPSW+4                                               11349000
FLCPER   EQU   PSA+152                                                  11350000
FLCMCLA  EQU   PSA+168                                                  11351000
FLCIOEL  EQU   FLCMCLA+4                                                11352000
FLCIOA   EQU   FLCMCLA+16                                               11353000
FLCFSA   EQU   FLCMCLA+80                                               11354000
PSASUPER EQU   PSA+552                                                  11355000
PSASUP1  EQU   PSASUPER                                                 11356000
PSASUP2  EQU   PSASUPER+1                                               11357000
PSASUP3  EQU   PSASUPER+2                                               11358000
PSASUP4  EQU   PSASUPER+3                                               11359000
PSACLHT  EQU   PSA+640                                                  11360000
PSALKSA  EQU   PSA+696                                                  11361000
PSAHLHI  EQU   PSA+760                                                  11362000
PSADSSFL EQU   PSA+836                                                  11363000
PSADSSF1 EQU   PSADSSFL                                                 11364000
PSADSSF3 EQU   PSADSSFL+2                                               11365000
PSADSSF4 EQU   PSADSSFL+3                                               11366000
PSARSVT  EQU   PSA+896                                                  11367000
CVTMAP   EQU   0                                                        11368000
CVTTCBP  EQU   CVTMAP                                                   11369000
CVTILK2  EQU   CVTMAP+40                                                11370000
CVTDAR   EQU   CVTMAP+72                                                11371000
CVTFLGS1 EQU   CVTDAR                                                   11372000
CVTBRET  EQU   CVTMAP+82                                                11373000
CVTDCB   EQU   CVTMAP+116                                               11374000
CVTIOQET EQU   CVTMAP+120                                               11375000
CVTIERLC EQU   CVTMAP+144                                               11376000
CVT0PT01 EQU   CVTMAP+152                                               11377000
CVTHEAD  EQU   CVTMAP+160                                               11378000
CVTSV76C EQU   CVTHEAD                                                  11379000
CVTMZ00  EQU   CVTMAP+164                                               11380000
CVTOPTA  EQU   CVTMAP+182                                               11381000
CVTOPTB  EQU   CVTMAP+183                                               11382000
CVTSMCA  EQU   CVTMAP+196                                               11383000
CVTGTF   EQU   CVTMAP+236                                               11384000
CVTGTFST EQU   CVTGTF                                                   11385000
CVTGTFS  EQU   CVTGTFST                                                 11386000
CVTSTATE EQU   CVTGTFST                                                 11387000
CVTTMODE EQU   CVTGTFST                                                 11388000
CVTFORM  EQU   CVTGTFST                                                 11389000
CVTAQAVT EQU   CVTMAP+240                                               11390000
CVTTCMFG EQU   CVTAQAVT                                                 11391000
CVTVOLM2 EQU   CVTMAP+244                                               11392000
CVTTATA  EQU   CVTVOLM2                                                 11393000
CVTTSKS  EQU   CVTTATA                                                  11394000
CVTVOLF2 EQU   CVTTSKS                                                  11395000
CVTTAT   EQU   CVTTATA+1                                                11396000
CVTATER  EQU   CVTMAP+248                                               11397000
CVTEXT1  EQU   CVTMAP+252                                               11398000
CVTPURG  EQU   CVTMAP+260                                               11399000
CVTQMSG  EQU   CVTMAP+268                                               11400000
CVTDMSR  EQU   CVTMAP+272                                               11401000
CVTRSV37 EQU   CVTDMSR                                                  11402000
CVTDMSRF EQU   CVTRSV37                                                 11403000
CVTJESCT EQU   CVTMAP+296                                               11404000
CVTERPV  EQU   CVTMAP+316                                               11405000
CVTINTLA EQU   CVTMAP+320                                               11406000
CVTAPF   EQU   CVTMAP+324                                               11407000
CVTEXT2  EQU   CVTMAP+328                                               11408000
CVTHJES  EQU   CVTMAP+332                                               11409000
CVTPGSIA EQU   CVTMAP+348                                               11410000
CVTA1F1  EQU   CVTMAP+356                                               11411000
CVTSYSK  EQU   CVTMAP+357                                               11412000
CVTVOLM1 EQU   CVTMAP+380                                               11413000
CVTVOLF1 EQU   CVTVOLM1                                                 11414000
CVTATMCT EQU   CVTMAP+388                                               11415000
CVTXTNT1 EQU   0                                                        11416000
CVTXTNT2 EQU   0                                                        11417000
CVTDSSV  EQU   CVTXTNT2                                                 11418000
CVTFLGBT EQU   CVTXTNT2+5                                               11419000
CVTQID   EQU   CVTXTNT2+24                                              11420000
CVTICB   EQU   CVTXTNT2+48                                              11421000
CVTRV400 EQU   CVTXTNT2+52                                              11422000
CVTRV409 EQU   CVTXTNT2+53                                              11423000
CVTATCVT EQU   CVTXTNT2+64                                              11424000
CVTRV429 EQU   CVTXTNT2+84                                              11425000
CVTRV438 EQU   CVTXTNT2+85                                              11426000
CVTRV457 EQU   CVTXTNT2+112                                             11427000
CVTRV466 EQU   CVTXTNT2+113                                             11428000
CVTFIX   EQU   0                                                        11429000
CVTRELNO EQU   CVTFIX+252                                               11430000
TCBASCB  EQU   0                                                        11431000
MSGTCB   EQU   TCBASCB                                                  11432000
MSGASCB  EQU   TCBASCB+8                                                11433000
ASVT     EQU   0                                                        11434000
ASVTFRST EQU   ASVT+524                                                 11435000
ASVTENTY EQU   ASVT+528                                                 11436000
ASCB     EQU   0                                                        11437000
ASCBSUPC EQU   ASCB+16                                                  11438000
ASCBRSM  EQU   ASCB+52                                                  11439000
ASCBRSMF EQU   ASCBRSM                                                  11440000
ASCBFW1  EQU   ASCB+100                                                 11441000
ASCBRCTF EQU   ASCBFW1+2                                                11442000
ASCBFLG1 EQU   ASCBFW1+3                                                11443000
ASCBDSP1 EQU   ASCB+114                                                 11444000
ASCBFLG2 EQU   ASCB+115                                                 11445000
ASCBLKGP EQU   ASCB+128                                                 11446000
ASCBSRQ  EQU   ASCB+180                                                 11447000
ASCBSRQ1 EQU   ASCBSRQ                                                  11448000
ASCBSRQ2 EQU   ASCBSRQ+1                                                11449000
ASCBSRQ3 EQU   ASCBSRQ+2                                                11450000
ASCBSRQ4 EQU   ASCBSRQ+3                                                11451000
CCWS     EQU   0                                                        11452000
CCW0     EQU   CCWS                                                     11453000
OPCODE0  EQU   CCW0                                                     11454000
DATA0    EQU   CCW0+1                                                   11455000
FLAGS0   EQU   CCW0+4                                                   11456000
COUNT0   EQU   CCW0+5                                                   11457000
CCW1     EQU   CCWS+8                                                   11458000
OPCODE   EQU   CCW1                                                     11459000
DATA1    EQU   CCW1+1                                                   11460000
FLAGS    EQU   CCW1+4                                                   11461000
COUNT    EQU   CCW1+5                                                   11462000
CCW2     EQU   CCWS+16                                                  11463000
OPCODE2  EQU   CCW2                                                     11464000
DATA2    EQU   CCW2+1                                                   11465000
FLAGS2   EQU   CCW2+4                                                   11466000
COUNT2   EQU   CCW2+5                                                   11467000
BUFFER   EQU   0                                                        11468000
SSCDATA  EQU   0                                                        11469000
IOECB    EQU   SSCDATA                                                  11470000
ECBCODE  EQU   IOECB                                                    11471000
TCBADDR  EQU   SSCDATA+4                                                11472000
IOERRCD  EQU   SSCDATA+8                                                11473000
APPSW    EQU   SSCDATA+10                                               11474000
APGAREA  EQU   SSCDATA+12                                               11475000
IOSB     EQU   0                                                        11476000
IOSFLA   EQU   IOSB                                                     11477000
IOSACHN  EQU   IOSFLA                                                   11478000
IOSCCHN  EQU   IOSACHN                                                  11479000
IOSFLB   EQU   IOSB+1                                                   11480000
IOSFLC   EQU   IOSB+2                                                   11481000
IOSDVALT EQU   IOSFLC                                                   11482000
IOSASID  EQU   IOSB+6                                                   11483000
IOSPKEY  EQU   IOSB+12                                                  11484000
IOSOPT   EQU   IOSB+14                                                  11485000
IOSOPT2  EQU   IOSB+15                                                  11486000
@NM00033 EQU   IOSB+20                                                  11487000
IOSCSW   EQU   @NM00033+1                                               11488000
IOSTATUS EQU   IOSCSW+3                                                 11489000
IOSSRB   EQU   IOSB+28                                                  11490000
IOSUSE   EQU   IOSB+32                                                  11491000
IOSIPIB  EQU   IOSB+44                                                  11492000
IOSVST   EQU   IOSB+76                                                  11493000
IOSPATH  EQU   IOSB+86                                                  11494000
IOSCHN   EQU   IOSPATH                                                  11495000
IOSCKEY  EQU   IOSB+89                                                  11496000
IOSEEKA  EQU   IOSB+100                                                 11497000
IOSCCHH  EQU   IOSEEKA+3                                                11498000
IOSSKHH  EQU   IOSCCHH+2                                                11499000
SRBSECT  EQU   0                                                        11500000
SRB      EQU   SRBSECT                                                  11501000
SRBID    EQU   SRB                                                      11502000
SRBASCB  EQU   SRB+8                                                    11503000
SRBFLC   EQU   SRB+12                                                   11504000
SRBPARM  EQU   SRB+28                                                   11505000
ICB2SSCB EQU   0                                                        11506000
ICBECB   EQU   ICB2SSCB+8                                               11507000
ICBACTV  EQU   ICB2SSCB+12                                              11508000
ICBCOM   EQU   ICB2SSCB+16                                              11509000
ICBIOR   EQU   ICB2SSCB+20                                              11510000
ICBCOMQ  EQU   ICB2SSCB+24                                              11511000
ICBPUCB  EQU   ICB2SSCB+28                                              11512000
ICBAUCB  EQU   ICB2SSCB+32                                              11513000
ICBQHEAD EQU   ICB2SSCB+36                                              11514000
ICBTCB   EQU   ICB2SSCB+40                                              11515000
ICBVN02P EQU   ICB2SSCB+44                                              11516000
ICBOPT   EQU   ICB2SSCB+48                                              11517000
ICBFLG   EQU   ICB2SSCB+52                                              11518000
ICBFG1   EQU   ICBFLG                                                   11519000
ICBI     EQU   ICBFG1                                                   11520000
ICBR     EQU   ICBFG1                                                   11521000
ICBV     EQU   ICBFG1                                                   11522000
ICBB     EQU   ICBFG1                                                   11523000
ICBS     EQU   ICBFG1                                                   11524000
ICBMSCA  EQU   ICBFG1                                                   11525000
ICB2ACTP EQU   ICB2SSCB+56                                              11526000
ICBSIOP  EQU   ICB2SSCB+68                                              11527000
ICBVVIC  EQU   ICB2SSCB+72                                              11528000
ICBMSSC  EQU   ICB2SSCB+104                                             11529000
ICBSAMP  EQU   ICB2SSCB+118                                             11530000
ICBTRACE EQU   ICB2SSCB+148                                             11531000
UCB      EQU   0                                                        11532000
UCBOB    EQU   0                                                        11533000
UCBJBNR  EQU   UCBOB                                                    11534000
UCBFL5   EQU   UCBOB+1                                                  11535000
UCBAF    EQU   UCBFL5                                                   11536000
UCBSTAT  EQU   UCBOB+3                                                  11537000
UCBONLI  EQU   UCBSTAT                                                  11538000
UCBCHAN  EQU   UCBOB+4                                                  11539000
UCBSFLS  EQU   UCBOB+6                                                  11540000
UCBFLA   EQU   UCBSFLS                                                  11541000
UCBFL1   EQU   UCBFLA                                                   11542000
UCBBSY   EQU   UCBFL1                                                   11543000
UCBNRY   EQU   UCBFL1                                                   11544000
UCBNOTRD EQU   UCBNRY                                                   11545000
UCBPST   EQU   UCBFL1                                                   11546000
UCBCUB   EQU   UCBFL1                                                   11547000
UCBQISCE EQU   UCBFL1                                                   11548000
UCBFLB   EQU   UCBSFLS+1                                                11549000
UCBCHM   EQU   UCBOB+8                                                  11550000
UCBCHM1  EQU   UCBCHM                                                   11551000
UCBPTH0  EQU   UCBCHM1                                                  11552000
UCBPTH1  EQU   UCBCHM1                                                  11553000
UCBWGT   EQU   UCBOB+12                                                 11554000
UCBNAME  EQU   UCBOB+13                                                 11555000
UCBTYP   EQU   UCBOB+16                                                 11556000
UCBTBYT1 EQU   UCBTYP                                                   11557000
UCB1FEA5 EQU   UCBTBYT1                                                 11558000
UCB1FEA6 EQU   UCBTBYT1                                                 11559000
UCBTBYT2 EQU   UCBTYP+1                                                 11560000
UCB2OPT2 EQU   UCBTBYT2                                                 11561000
UCBDUDN1 EQU   UCB2OPT2                                                 11562000
UCB2OPT3 EQU   UCBTBYT2                                                 11563000
UCBDUDN2 EQU   UCB2OPT3                                                 11564000
UCB2OPT4 EQU   UCBTBYT2                                                 11565000
UCBRWTAU EQU   UCB2OPT4                                                 11566000
UCBRVDEV EQU   UCBRWTAU                                                 11567000
UCB2OPT6 EQU   UCBTBYT2                                                 11568000
UCB2OPT7 EQU   UCBTBYT2                                                 11569000
UCBTBYT3 EQU   UCBTYP+2                                                 11570000
UCBDVCLS EQU   UCBTBYT3                                                 11571000
UCB3DACC EQU   UCBDVCLS                                                 11572000
UCBTBYT4 EQU   UCBTYP+3                                                 11573000
UCBUNTYP EQU   UCBTBYT4                                                 11574000
UCBEXTPT EQU   UCBOB+20                                                 11575000
UCBFLC   EQU   UCBEXTPT                                                 11576000
UCBDEV   EQU   UCBOB+24                                                 11577000
UCBCMEXT EQU   0                                                        11578000
UCBATI   EQU   UCBCMEXT+3                                               11579000
@NM00045 EQU   UCBATI                                                   11580000
UCBFLP1  EQU   UCBCMEXT+5                                               11581000
UCBMT    EQU   0                                                        11582000
UCBOCR   EQU   0                                                        11583000
UCB3540X EQU   0                                                        11584000
UCBDKBYT EQU   UCB3540X+6                                               11585000
UCBUCS   EQU   0                                                        11586000
UCBUCSOP EQU   UCBUCS+4                                                 11587000
UCBFCBOP EQU   UCBUCS+5                                                 11588000
ECBWORD  EQU   0                                                        11589000
ECBRBADR EQU   ECBWORD+1                                                11590000
ECBDATA  EQU   ECBWORD+4                                                11591000
BITPATT  EQU   0                                                        11592000
MSG1     EQU   0                                                        11593000
MSGL     EQU   MSG1                                                     11594000
MSGC     EQU   MSG1+1                                                   11595000
MSGDATA  EQU   MSG1+2                                                   11596000
MSGDATAC EQU   MSGDATA+1                                                11597000
MSG2     EQU   0                                                        11598000
MSGASID  EQU   MSG2+2                                                   11599000
MSGASIDF EQU   MSGASID                                                  11600000
MSGECB   EQU   MSG2+4                                                   11601000
MSGPOSTC EQU   MSG2+8                                                   11602000
MSGSSID  EQU   MSG2+10                                                  11603000
MSG94    EQU   0                                                        11604000
RESTCD   EQU   MSG94+2                                                  11605000
VOLSER   EQU   MSG94+4                                                  11606000
CARTNO   EQU   MSG94+10                                                 11607000
INITVVI  EQU   0                                                        11608000
INILNGTH EQU   INITVVI                                                  11609000
INITOPCD EQU   INITVVI+4                                                11610000
INIFLAGA EQU   INITVVI+5                                                11611000
INIDISAB EQU   INIFLAGA                                                 11612000
INIFLAGB EQU   INITVVI+6                                                11613000
INIJRNL  EQU   INIFLAGB                                                 11614000
INIABLE  EQU   INIFLAGB                                                 11615000
MESG     EQU   0                                                        11616000
MESLNGTH EQU   MESG                                                     11617000
MESCODE  EQU   MESG+4                                                   11618000
MESOPCD  EQU   MESCODE                                                  11619000
MESGBUF  EQU   MESG+8                                                   11620000
RQBLK    EQU   0                                                        11621000
TCBORRB  EQU   RQBLK+11                                                 11622000
OLDPSW   EQU   RQBLK+16                                                 11623000
RESPQEL  EQU   0                                                        11624000
QELECB   EQU   RESPQEL+4                                                11625000
QELECBPR EQU   QELECB+1                                                 11626000
QELFLG2  EQU   RESPQEL+8                                                11627000
QELAHEAD EQU   RESPQEL+9                                                11628000
QELFLG3  EQU   RESPQEL+12                                               11629000
QELBACK  EQU   RESPQEL+13                                               11630000
QELASID  EQU   RESPQEL+16                                               11631000
RU       EQU   0                                                        11632000
SMFRCD09 EQU   0                                                        11633000
SMF9LEN  EQU   SMFRCD09                                                 11634000
SMF9RTY  EQU   SMFRCD09+5                                               11635000
SMF9LENN EQU   SMFRCD09+18                                              11636000
SMF9DVAD EQU   0                                                        11637000
SMF9DUT  EQU   SMF9DVAD                                                 11638000
SMF9CUA  EQU   SMF9DVAD+2                                               11639000
SMFRCD11 EQU   0                                                        11640000
SMF11LEN EQU   SMFRCD11                                                 11641000
SMF11RTY EQU   SMFRCD11+5                                               11642000
SMF11LN  EQU   SMFRCD11+18                                              11643000
SMF11DEV EQU   0                                                        11644000
SMF11DUT EQU   SMF11DEV                                                 11645000
SMF11CUA EQU   SMF11DEV+2                                               11646000
SMFRCD22 EQU   0                                                        11647000
SMF22LEN EQU   SMFRCD22                                                 11648000
SMF22RTY EQU   SMFRCD22+5                                               11649000
SMF22IND EQU   SMFRCD22+18                                              11650000
SMF22ECT EQU   SMFRCD22+20                                              11651000
SMF22CPU EQU   0                                                        11652000
SMF22CHL EQU   0                                                        11653000
SMF22STR EQU   0                                                        11654000
SMF22IPL EQU   0                                                        11655000
SMF22IID EQU   SMF22IPL+1                                               11656000
SMF22ION EQU   SMF22IPL+2                                               11657000
SMF22VON EQU   0                                                        11658000
SMF22VOF EQU   0                                                        11659000
CWB      EQU   0                                                        11660000
CWBCHAIN EQU   CWB                                                      11661000
CWBFREE  EQU   CWB+4                                                    11662000
CWBSBPOL EQU   CWBFREE                                                  11663000
CWBVBCDE EQU   CWB+8                                                    11664000
CWBCMND  EQU   CWB+9                                                    11665000
CWBCOMQ  EQU   CWB+135                                                  11666000
CWBUCMID EQU   CWB+136                                                  11667000
CWBAUTH  EQU   CWB+137                                                  11668000
CWBRESV  EQU   CWB+141                                                  11669000
CONFIGTN EQU   0                                                        11670000
TPAKS    EQU   CONFIGTN                                                 11671000
EXISTING EQU   CONFIGTN+2                                               11672000
ONLINE   EQU   CONFIGTN+42                                              11673000
AVAILBL  EQU   CONFIGTN+82                                              11674000
CONFIG   EQU   0                                                        11675000
MCODE    EQU   CONFIG+1                                                 11676000
EXIST    EQU   CONFIG+4                                                 11677000
ONLIN    EQU   CONFIG+44                                                11678000
STOR9092 EQU   0                                                        11679000
STOR90   EQU   STOR9092                                                 11680000
STOR92   EQU   STOR9092+124                                             11681000
TCBWDS   EQU   0                                                        11682000
CURTCB   EQU   TCBWDS+4                                                 11683000
AWAX     EQU   0                                                        11684000
AWBX     EQU   0                                                        11685000
USERCB   EQU   0                                                        11686000
USERX3   EQU   USERCB+8                                                 11687000
USERX4   EQU   USERCB+12                                                11688000
MSGLZYX  EQU   0                                                        11689000
MSGFLZY  EQU   MSGLZYX                                                  11690000
MSGCY    EQU   MSGFLZY                                                  11691000
MSGLZY   EQU   MSGCY                                                    11692000
MSGCX    EQU   MSGLZYX+1                                                11693000
STATBYTE EQU   0                                                        11694000
BADLAB   EQU   STATBYTE                                                 11695000
RPRNHUNT EQU   0                                                        11696000
CWBRU    EQU   0                                                        11697000
ACTWKBUF EQU   0                                                        11698000
ACTENT1  EQU   ACTWKBUF                                                 11699000
AVL      EQU   ACTENT1+1                                                11700000
MV       EQU   ACTENT1+2                                                11701000
ACTENT2  EQU   ACTWKBUF+128                                             11702000
LRU      EQU   ACTENT2                                                  11703000
CAP      EQU   ACTENT2+1                                                11704000
UA       EQU   ACTENT2+2                                                11705000
SDGLS    EQU   0                                                        11706000
SDGNNBBB EQU   SDGLS                                                    11707000
SDG      EQU   SDGNNBBB                                                 11708000
SDGNN    EQU   SDGNNBBB+3                                               11709000
SDGBBB   EQU   SDGNNBBB+5                                               11710000
SDGIX    EQU   SDGBBB                                                   11711000
SSOB     EQU   0                                                        11712000
SSOBID   EQU   SSOB                                                     11713000
SSOBLEN  EQU   SSOB+4                                                   11714000
SSOBFUNC EQU   SSOB+6                                                   11715000
SSOBSSIB EQU   SSOB+8                                                   11716000
SSOBINDV EQU   SSOB+16                                                  11717000
SSMS     EQU   0                                                        11718000
SSMSLEN  EQU   SSMS                                                     11719000
SSMSPSDG EQU   SSMS+4                                                   11720000
SSMSPLRU EQU   SSMS+8                                                   11721000
SSIB     EQU   0                                                        11722000
SSIBID   EQU   SSIB                                                     11723000
SSIBLEN  EQU   SSIB+4                                                   11724000
SSIBFLG1 EQU   SSIB+6                                                   11725000
SSIBSSNM EQU   SSIB+8                                                   11726000
JESCT    EQU   0                                                        11727000
JESWAA   EQU   JESCT+8                                                  11728000
JESSSREQ EQU   JESCT+20                                                 11729000
JESPJESN EQU   JESCT+28                                                 11730000
JESALLOC EQU   JESCT+32                                                 11731000
JESUNALC EQU   JESCT+36                                                 11732000
JESCATL  EQU   JESCT+40                                                 11733000
SSREQ    EQU   0                                                        11734000
BEGUPTR  EQU   0                                                        11735000
IEFAB4F5 EQU   0                                                        11736000
IEFBB410 EQU   0                                                        11737000
IEFW21SD EQU   0                                                        11738000
INITECB  EQU   0                                                        11739000
RU1BYTE  EQU   0                                                        11740000
SWAMGR   EQU   0                                                        11741000
UCBBGN   EQU   0                                                        11742000
MCDE     EQU   MSGS+1                                                   11743000
MESGS    EQU   MSGS+4                                                   11744000
CVTS01   EQU   CVTPGSIA                                                 11745000
CVTLPDIA EQU   CVTS01+12                                                11746000
CVTDIRST EQU   CVTLPDIA                                                 11747000
CVTSLIDA EQU   CVTS01+24                                                11748000
CVTCTLFG EQU   CVTS01+50                                                11749000
CVTSHRVM EQU   CVTS01+68                                                11750000
CVTASVT  EQU   CVTS01+208                                               11751000
CVTRV210 EQU   CVTS01+424                                               11752000
CVTRV219 EQU   CVTS01+425                                               11753000
CVTRV228 EQU   CVTS01+426                                               11754000
CVTRV237 EQU   CVTS01+427                                               11755000
CVTMFRTR EQU   CVTS01+452                                               11756000
CVTRV262 EQU   CVTS01+468                                               11757000
CVTRV271 EQU   CVTS01+469                                               11758000
CVTRV280 EQU   CVTS01+470                                               11759000
CVTRV289 EQU   CVTS01+471                                               11760000
CVTGSDA  EQU   CVTS01+600                                               11761000
PSARSVTE EQU   PSARSVT                                                  11762000
QWPARM   EQU   QUPARM                                                   11763000
QWRES1   EQU   QWPARM                                                   11764000
QWFLAG   EQU   QWPARM+2                                                 11765000
QTPARM   EQU   QUPARM                                                   11766000
QTID     EQU   QTPARM                                                   11767000
QLPARM   EQU   QUPARM                                                   11768000
QCPARM   EQU   QUPARM                                                   11769000
IOSATTSC EQU   IOSIPIB                                                  11770000
IOSWTOWA EQU   IOSIPIB                                                  11771000
IOSPCISC EQU   IOSIPIB                                                  11772000
UCBOBS01 EQU   UCBDEV                                                   11773000
UCBVOLI  EQU   UCBOBS01+4                                               11774000
UCBSTAB  EQU   UCBOBS01+10                                              11775000
UCBBSVL  EQU   UCBSTAB                                                  11776000
UCBPRSRS EQU   UCBSTAB                                                  11777000
UCBDMCT  EQU   UCBOBS01+11                                              11778000
UCBFL4   EQU   UCBOBS01+13                                              11779000
UCBOBS02 EQU   UCBDEV                                                   11780000
UCBTFL1  EQU   UCBOBS02+19                                              11781000
UCBXTN   EQU   UCBOBS02+20                                              11782000
UCBVOPT  EQU   UCBXTN                                                   11783000
UCBOBS03 EQU   UCBDEV                                                   11784000
UCBXTADR EQU   UCBOBS03                                                 11785000
UCBOBS04 EQU   UCBDEV                                                   11786000
UCBBTA   EQU   UCBOBS04+12                                              11787000
UCBOBS06 EQU   UCBDEV                                                   11788000
UCBAOF   EQU   UCBOBS06                                                 11789000
UCBAOF1  EQU   UCBAOF                                                   11790000
UCBAOF2  EQU   UCBAOF+1                                                 11791000
@NM00044 EQU   UCBOBS06+3                                               11792000
UCBIRB   EQU   UCBOBS06+4                                               11793000
UCBGRAF  EQU   UCBIRB                                                   11794000
UCBLDNCA EQU   UCBOBS06+8                                               11795000
UCBRDYQ  EQU   UCBLDNCA                                                 11796000
UCBIRLN  EQU   UCBRDYQ                                                  11797000
UCBLDNCB EQU   UCBRDYQ+1                                                11798000
UCBCTLNK EQU   UCBOBS06+12                                              11799000
UCBOBS07 EQU   UCBDEV                                                   11800000
UCBOBS08 EQU   UCBDEV                                                   11801000
UCBOBS09 EQU   UCBDEV                                                   11802000
DSPFLG   EQU   CWBCOMQ                                                  11803000
DSPALL   EQU   DSPFLG                                                   11804000
DSPON    EQU   DSPFLG                                                   11805000
DSPOFF   EQU   DSPFLG                                                   11806000
DSPSDG   EQU   DSPFLG                                                   11807000
DSPRNG   EQU   DSPFLG                                                   11808000
DSPSSID  EQU   DSPFLG                                                   11809000
DSPCPU   EQU   DSPFLG                                                   11810000
DSPPATH  EQU   DSPFLG                                                   11811000
PTHFLG   EQU   CWBRESV                                                  11812000
CWBFLGS  EQU   PTHFLG                                                   11813000
DSPDRC   EQU   CWBFLGS                                                  11814000
DSPMSVC  EQU   CWBFLGS                                                  11815000
DSPTRC   EQU   CWBFLGS                                                  11816000
DSPQCB   EQU   CWBFLGS                                                  11817000
DSPALTM  EQU   CWBFLGS                                                  11818000
CWBOFFS  EQU   PTHFLG+1                                                 11819000
VOLINCWB EQU   CWBCMND                                                  11820000
KEYWD    EQU   VOLINCWB                                                 11821000
VOL      EQU   VOLINCWB+6                                               11822000
TPAKSSID EQU   TPAKS                                                    11823000
TRANSTBL EQU   BUFFER+256                                               11824000
ALPHAS   EQU   TRANSTBL+193                                             11825000
NUMBRS   EQU   TRANSTBL+240                                             11826000
HSTINCWB EQU   CWBCMND                                                  11827000
DVCLUNTP EQU   UCBTBYT3                                                 11828000
DMHOSTID EQU   DMHOST                                                   11829000
DMNTLEN  EQU   DMLEN                                                    11830000
DMOPCODE EQU   DMOPCD                                                   11831000
DMVOLID  EQU   DMVOL                                                    11832000
FLC      EQU   PSA                                                      11833000
*                                      START UNREFERENCED COMPONENTS    11834000
@NM00096 EQU   HSTINCWB+10                                              11835000
REALHOST EQU   HSTINCWB                                                 11836000
@NM00088 EQU   TRANSTBL+199                                             11837000
@NM00087 EQU   TRANSTBL                                                 11838000
DSPINP   EQU   CWBFLGS                                                  11839000
DSPQUAL  EQU   CWBFLGS                                                  11840000
DSPQMTPA EQU   CWBFLGS                                                  11841000
UCBRV066 EQU   UCBOBS09+4                                               11842000
UCBIOSBA EQU   UCBOBS09                                                 11843000
UCBRV042 EQU   UCBOBS08+5                                               11844000
UCBCTCF1 EQU   UCBOBS08+4                                               11845000
UCBCTCAD EQU   UCBOBS08                                                 11846000
UCBICNCB EQU   UCBOBS07+4                                               11847000
UCBRV040 EQU   UCBOBS07                                                 11848000
UCBCTLNA EQU   UCBCTLNK+1                                               11849000
UCBRLN   EQU   UCBCTLNK                                                 11850000
UCBRDYQA EQU   UCBLDNCB                                                 11851000
UCBINRLN EQU   UCBIRLN                                                  11852000
UCBIRBA  EQU   UCBIRB+1                                                 11853000
UCBRV039 EQU   UCBGRAF                                                  11854000
UCBDWNR  EQU   UCBGRAF                                                  11855000
UCBRPND  EQU   UCBGRAF                                                  11856000
UCBUPM   EQU   UCBGRAF                                                  11857000
UCBBTAM  EQU   UCBGRAF                                                  11858000
UCBDRNO  EQU   UCBGRAF                                                  11859000
UCBDRO   EQU   UCBGRAF                                                  11860000
UCBOIP   EQU   UCBGRAF                                                  11861000
UCBATRCD EQU   @NM00044                                                 11862000
UCBSKPFG EQU   @NM00044                                                 11863000
UCBRIPND EQU   @NM00044                                                 11864000
UCBRTIAC EQU   @NM00044                                                 11865000
UCBRSV79 EQU   @NM00044                                                 11866000
UCBRSV78 EQU   @NM00044                                                 11867000
UCBRSV77 EQU   @NM00044                                                 11868000
UCBOLTEP EQU   @NM00044                                                 11869000
UCBATNCT EQU   UCBOBS06+2                                               11870000
UCBRSV76 EQU   UCBAOF2                                                  11871000
UCBRSV75 EQU   UCBAOF2                                                  11872000
UCBRSV74 EQU   UCBAOF2                                                  11873000
UCBRSV73 EQU   UCBAOF2                                                  11874000
UCBRSV72 EQU   UCBAOF2                                                  11875000
UCBRSV71 EQU   UCBAOF2                                                  11876000
UCBRSV70 EQU   UCBAOF2                                                  11877000
UCBRSV69 EQU   UCBAOF2                                                  11878000
UCBRSV68 EQU   UCBAOF1                                                  11879000
UCBRSV67 EQU   UCBAOF1                                                  11880000
UCBRSV66 EQU   UCBAOF1                                                  11881000
UCBRSV65 EQU   UCBAOF1                                                  11882000
UCBRSV64 EQU   UCBAOF1                                                  11883000
UCBOFNL  EQU   UCBAOF1                                                  11884000
UCBOFSP  EQU   UCBAOF1                                                  11885000
UCBOFMCR EQU   UCBAOF1                                                  11886000
UCBBTB   EQU   UCBBTA+1                                                 11887000
UCBDI    EQU   UCBBTA                                                   11888000
UCBSNS   EQU   UCBOBS04+8                                               11889000
UCBTEB   EQU   UCBOBS04+4                                               11890000
UCBGCB   EQU   UCBOBS04+3                                               11891000
UCBOPEN  EQU   UCBOBS04+2                                               11892000
UCBSTART EQU   UCBOBS04                                                 11893000
UCBXTNB  EQU   UCBXTN+1                                                 11894000
UCBRSV22 EQU   UCBVOPT                                                  11895000
UCBRSV21 EQU   UCBVOPT                                                  11896000
UCBRSV20 EQU   UCBVOPT                                                  11897000
UCBESVE  EQU   UCBVOPT                                                  11898000
UCBERPC  EQU   UCBVOPT                                                  11899000
UCBESVC  EQU   UCBVOPT                                                  11900000
UCBEVA   EQU   UCBVOPT                                                  11901000
UCBESV   EQU   UCBVOPT                                                  11902000
UCBRV009 EQU   UCBTFL1                                                  11903000
UCBRV008 EQU   UCBTFL1                                                  11904000
UCBRV007 EQU   UCBTFL1                                                  11905000
UCBRV006 EQU   UCBTFL1                                                  11906000
UCBRV005 EQU   UCBTFL1                                                  11907000
UCBRV038 EQU   UCBTFL1                                                  11908000
UCBNSLTP EQU   UCBTFL1                                                  11909000
UCBNLTP  EQU   UCBTFL1                                                  11910000
UCBRES1B EQU   UCBOBS02+18                                              11911000
UCBFSER  EQU   UCBOBS02+12                                              11912000
@NM00043 EQU   UCBOBS02+4                                               11913000
UCBFSEQ  EQU   UCBOBS02+2                                               11914000
UCBFSCT  EQU   UCBOBS02                                                 11915000
UCBNEXP  EQU   UCBOBS01+20                                              11916000
UCBBASE  EQU   UCBOBS01+16                                              11917000
UCBRES1A EQU   UCBOBS01+15                                              11918000
UCBUSER  EQU   UCBOBS01+14                                              11919000
UCBFL47  EQU   UCBFL4                                                   11920000
UCBFL46  EQU   UCBFL4                                                   11921000
UCBFL45  EQU   UCBFL4                                                   11922000
UCBRV065 EQU   UCBFL4                                                   11923000
UCBDSS   EQU   UCBFL4                                                   11924000
UCBRV028 EQU   UCBFL4                                                   11925000
UCBWDAV  EQU   UCBFL4                                                   11926000
UCBDAVV  EQU   UCBFL4                                                   11927000
UCBSQC   EQU   UCBOBS01+12                                              11928000
UCBDATP  EQU   UCBOBS01+12                                              11929000
UCBDMC   EQU   UCBDMCT                                                  11930000
UCBMOUNT EQU   UCBDMCT                                                  11931000
UCBBNUL  EQU   UCBSTAB                                                  11932000
UCBSHAR  EQU   UCBSTAB                                                  11933000
UCBBSTR  EQU   UCBSTAB                                                  11934000
UCBBPUB  EQU   UCBSTAB                                                  11935000
UCBBPRV  EQU   UCBSTAB                                                  11936000
UCBBALB  EQU   UCBPRSRS                                                 11937000
UCBPGFL  EQU   UCBSTAB                                                  11938000
UCBDVSHR EQU   UCBBSVL                                                  11939000
UCBVTOC  EQU   UCBOBS01                                                 11940000
IOSPCIWA EQU   IOSPCISC+44                                              11941000
IOSPCIRS EQU   IOSPCISC+8                                               11942000
@NM00038 EQU   IOSPCISC+4                                               11943000
@NM00037 EQU   IOSPCISC                                                 11944000
IOSWRNDR EQU   IOSWTOWA+4                                               11945000
IOSWTOPT EQU   IOSWTOWA+3                                               11946000
IOSWTOCP EQU   IOSWTOWA+2                                               11947000
IOSWTOCH EQU   IOSWTOWA                                                 11948000
IOSATTWA EQU   IOSATTSC+40                                              11949000
@NM00036 EQU   IOSATTSC+24                                              11950000
IOSATTSN EQU   IOSATTSC                                                 11951000
QCMAD3Z1 EQU   QCPARM+28                                                11952000
QCMAD3Z0 EQU   QCPARM+24                                                11953000
QCMAD2Z1 EQU   QCPARM+20                                                11954000
QCMAD2Z0 EQU   QCPARM+16                                                11955000
QCMAD1Z1 EQU   QCPARM+12                                                11956000
QCMAD1Z0 EQU   QCPARM+8                                                 11957000
QCMAD0Z1 EQU   QCPARM+4                                                 11958000
QCMAD0Z0 EQU   QCPARM                                                   11959000
QLRES    EQU   QLPARM+2                                                 11960000
QLZYX    EQU   QLPARM                                                   11961000
QTRES    EQU   QTPARM+24                                                11962000
QTDASCHR EQU   QTPARM+20                                                11963000
QTDATA   EQU   QTPARM+2                                                 11964000
QTFLAG   EQU   QTPARM+1                                                 11965000
QTTABID  EQU   QTID                                                     11966000
QWRES2   EQU   QWPARM+3                                                 11967000
QWALTMSC EQU   QWFLAG                                                   11968000
@NM00029 EQU   QWFLAG                                                   11969000
QWMEM    EQU   QWFLAG                                                   11970000
QWSSID   EQU   QWRES1                                                   11971000
PSARSAV  EQU   PSARSVTE+60                                              11972000
PSARSTK  EQU   PSARSVTE+56                                              11973000
PSAESAV3 EQU   PSARSVTE+52                                              11974000
PSAESTK3 EQU   PSARSVTE+48                                              11975000
PSAESAV2 EQU   PSARSVTE+44                                              11976000
PSAESTK2 EQU   PSARSVTE+40                                              11977000
PSAESAV1 EQU   PSARSVTE+36                                              11978000
PSAESTK1 EQU   PSARSVTE+32                                              11979000
PSAPSAV  EQU   PSARSVTE+28                                              11980000
PSAPSTK  EQU   PSARSVTE+24                                              11981000
PSAMSAV  EQU   PSARSVTE+20                                              11982000
PSAMSTK  EQU   PSARSVTE+16                                              11983000
PSASSAV  EQU   PSARSVTE+12                                              11984000
PSASSTK  EQU   PSARSVTE+8                                               11985000
PSANSTK  EQU   PSARSVTE+4                                               11986000
PSACSTK  EQU   PSARSVTE                                                 11987000
CVTRV628 EQU   CVTS01+728                                               11988000
CVTRV627 EQU   CVTS01+724                                               11989000
CVTRV626 EQU   CVTS01+720                                               11990000
CVTRV625 EQU   CVTS01+716                                               11991000
CVTRV624 EQU   CVTS01+712                                               11992000
CVTRV623 EQU   CVTS01+708                                               11993000
CVTRV622 EQU   CVTS01+704                                               11994000
CVTRV621 EQU   CVTS01+700                                               11995000
CVTIHASU EQU   CVTS01+696                                               11996000
CVTSUSP  EQU   CVTS01+692                                               11997000
CVTT6SVC EQU   CVTS01+688                                               11998000
CVTCDAL  EQU   CVTS01+684                                               11999000
CVTTCTL  EQU   CVTS01+680                                               12000000
CVTRSUME EQU   CVTS01+676                                               12001000
CVTJTERM EQU   CVTS01+672                                               12002000
CVTASMRM EQU   CVTS01+668                                               12003000
CVTTCASP EQU   CVTS01+664                                               12004000
CVT0PT03 EQU   CVTS01+660                                               12005000
CVT0PT0E EQU   CVTS01+656                                               12006000
CVTRV609 EQU   CVTS01+652                                               12007000
CVTCGK   EQU   CVTS01+648                                               12008000
CVTRAC   EQU   CVTS01+644                                               12009000
CVTHSM   EQU   CVTS01+640                                               12010000
CVTRV605 EQU   CVTS01+636                                               12011000
CVTRV604 EQU   CVTS01+632                                               12012000
CVTEFF02 EQU   CVTS01+628                                               12013000
CVTCBBR  EQU   CVTS01+624                                               12014000
CVTSSCR  EQU   CVTS01+620                                               12015000
CVTEVENT EQU   CVTS01+616                                               12016000
CVTCRCA  EQU   CVTS01+612                                               12017000
CVTTPIO  EQU   CVTS01+608                                               12018000
CVTADV   EQU   CVTS01+604                                               12019000
CVTGSDAB EQU   CVTGSDA                                                  12020000
CVTQV3   EQU   CVTS01+596                                               12021000
CVTQV2   EQU   CVTS01+592                                               12022000
CVTQV1   EQU   CVTS01+588                                               12023000
CVTRPT   EQU   CVTS01+584                                               12024000
CVTSSRB  EQU   CVTS01+580                                               12025000
CVTCSDRL EQU   CVTS01+576                                               12026000
CVTEXP1  EQU   CVTS01+572                                               12027000
CVTRMPMT EQU   CVTS01+568                                               12028000
CVTRMPTT EQU   CVTS01+564                                               12029000
CVTVPSA  EQU   CVTS01+560                                               12030000
CVTVSTOP EQU   CVTS01+556                                               12031000
CVTGTFR8 EQU   CVTS01+552                                               12032000
CVTQUIT  EQU   CVTS01+548                                               12033000
CVTVACR  EQU   CVTS01+544                                               12034000
CVTWTCB  EQU   CVTS01+540                                               12035000
CVTSTPRS EQU   CVTS01+536                                               12036000
CVT0PT02 EQU   CVTS01+532                                               12037000
CVTDARCM EQU   CVTS01+528                                               12038000
CVTIRECM EQU   CVTS01+524                                               12039000
CVTJRECM EQU   CVTS01+520                                               12040000
CVTVEMS0 EQU   CVTS01+516                                               12041000
CVTSPFRR EQU   CVTS01+512                                               12042000
CVTRLSTG EQU   CVTS01+508                                               12043000
CVT0TC0A EQU   CVTS01+504                                               12044000
CVTGMBR  EQU   CVTS01+500                                               12045000
CVTLFRM  EQU   CVTS01+496                                               12046000
CVTRMBR  EQU   CVTS01+492                                               12047000
CVTVIOP  EQU   CVTS01+488                                               12048000
CVTRV307 EQU   CVTS01+486                                               12049000
CVTRV306 EQU   CVTS01+484                                               12050000
CVTRV305 EQU   CVTS01+482                                               12051000
CVTRV304 EQU   CVTS01+480                                               12052000
CVTRV303 EQU   CVTS01+478                                               12053000
CVTRV302 EQU   CVTS01+476                                               12054000
CVTTRCA  EQU   CVTS01+472                                               12055000
CVTRV297 EQU   CVTRV289                                                 12056000
CVTRV296 EQU   CVTRV289                                                 12057000
CVTRV295 EQU   CVTRV289                                                 12058000
CVTRV294 EQU   CVTRV289                                                 12059000
CVTRV293 EQU   CVTRV289                                                 12060000
CVTRV292 EQU   CVTRV289                                                 12061000
CVTRV291 EQU   CVTRV289                                                 12062000
CVTRV290 EQU   CVTRV289                                                 12063000
CVTRV288 EQU   CVTRV280                                                 12064000
CVTRV287 EQU   CVTRV280                                                 12065000
CVTRV286 EQU   CVTRV280                                                 12066000
CVTRV285 EQU   CVTRV280                                                 12067000
CVTRV284 EQU   CVTRV280                                                 12068000
CVTRV283 EQU   CVTRV280                                                 12069000
CVTRV282 EQU   CVTRV280                                                 12070000
CVTRV281 EQU   CVTRV280                                                 12071000
CVTRV279 EQU   CVTRV271                                                 12072000
CVTRV278 EQU   CVTRV271                                                 12073000
CVTRV277 EQU   CVTRV271                                                 12074000
CVTRV276 EQU   CVTRV271                                                 12075000
CVTRV275 EQU   CVTRV271                                                 12076000
CVTRV274 EQU   CVTRV271                                                 12077000
CVTRV273 EQU   CVTRV271                                                 12078000
CVTRV272 EQU   CVTRV271                                                 12079000
CVTRV270 EQU   CVTRV262                                                 12080000
CVTRV269 EQU   CVTRV262                                                 12081000
CVTRV268 EQU   CVTRV262                                                 12082000
CVTRV267 EQU   CVTRV262                                                 12083000
CVTRV266 EQU   CVTRV262                                                 12084000
CVTRV265 EQU   CVTRV262                                                 12085000
CVTRV264 EQU   CVTRV262                                                 12086000
CVTRV263 EQU   CVTRV262                                                 12087000
CVTVFP   EQU   CVTS01+464                                               12088000
CVTVSI   EQU   CVTS01+460                                               12089000
CVTVPSIB EQU   CVTS01+456                                               12090000
CVTMFACT EQU   CVTMFRTR                                                 12091000
CVTMFCTL EQU   CVTS01+448                                               12092000
CVTPVBP  EQU   CVTS01+444                                               12093000
CVTPWI   EQU   CVTS01+440                                               12094000
CVTRV254 EQU   CVTS01+438                                               12095000
CVTRV253 EQU   CVTS01+436                                               12096000
CVTRV252 EQU   CVTS01+434                                               12097000
CVTRV251 EQU   CVTS01+433                                               12098000
CVTRV250 EQU   CVTS01+432                                               12099000
CVTRV249 EQU   CVTS01+431                                               12100000
CVTRV248 EQU   CVTS01+430                                               12101000
CVTRV247 EQU   CVTS01+429                                               12102000
CVTRV246 EQU   CVTS01+428                                               12103000
CVTRV245 EQU   CVTRV237                                                 12104000
CVTRV244 EQU   CVTRV237                                                 12105000
CVTRV243 EQU   CVTRV237                                                 12106000
CVTRV242 EQU   CVTRV237                                                 12107000
CVTRV241 EQU   CVTRV237                                                 12108000
CVTRV240 EQU   CVTRV237                                                 12109000
CVTRV239 EQU   CVTRV237                                                 12110000
CVTRV238 EQU   CVTRV237                                                 12111000
CVTRV236 EQU   CVTRV228                                                 12112000
CVTRV235 EQU   CVTRV228                                                 12113000
CVTRV234 EQU   CVTRV228                                                 12114000
CVTRV233 EQU   CVTRV228                                                 12115000
CVTRV232 EQU   CVTRV228                                                 12116000
CVTRV231 EQU   CVTRV228                                                 12117000
CVTRV230 EQU   CVTRV228                                                 12118000
CVTRV229 EQU   CVTRV228                                                 12119000
CVTRV227 EQU   CVTRV219                                                 12120000
CVTRV226 EQU   CVTRV219                                                 12121000
CVTRV225 EQU   CVTRV219                                                 12122000
CVTRV224 EQU   CVTRV219                                                 12123000
CVTRV223 EQU   CVTRV219                                                 12124000
CVTRV222 EQU   CVTRV219                                                 12125000
CVTRV221 EQU   CVTRV219                                                 12126000
CVTRV220 EQU   CVTRV219                                                 12127000
CVTRV218 EQU   CVTRV210                                                 12128000
CVTRV217 EQU   CVTRV210                                                 12129000
CVTRV216 EQU   CVTRV210                                                 12130000
CVTRV215 EQU   CVTRV210                                                 12131000
CVTRV214 EQU   CVTRV210                                                 12132000
CVTRV213 EQU   CVTRV210                                                 12133000
CVTRV212 EQU   CVTRV210                                                 12134000
CVTRV211 EQU   CVTRV210                                                 12135000
CVTLCCAT EQU   CVTS01+420                                               12136000
CVTPCCAT EQU   CVTS01+416                                               12137000
CVTIPCRP EQU   CVTS01+412                                               12138000
CVTIPCRI EQU   CVTS01+408                                               12139000
CVTIPCDS EQU   CVTS01+404                                               12140000
CVTAIDVT EQU   CVTS01+400                                               12141000
CVTSSAP  EQU   CVTS01+396                                               12142000
CVTEHCIR EQU   CVTS01+392                                               12143000
CVTEHDEF EQU   CVTS01+388                                               12144000
CVTDAIR  EQU   CVTS01+384                                               12145000
CVTPERFM EQU   CVTS01+380                                               12146000
CVT044R2 EQU   CVTS01+376                                               12147000
CVTFETCH EQU   CVTS01+372                                               12148000
CVTRSTWD EQU   CVTS01+368                                               12149000
CVTSPOST EQU   CVTS01+364                                               12150000
CVTIOBP  EQU   CVTS01+360                                               12151000
CVTASMVT EQU   CVTS01+356                                               12152000
CVTRECRQ EQU   CVTS01+352                                               12153000
CVTWSAC  EQU   CVTS01+348                                               12154000
CVTRV149 EQU   CVTS01+344                                               12155000
CVTWSAL  EQU   CVTS01+340                                               12156000
CVTSPSA  EQU   CVTS01+336                                               12157000
CVTGLMN  EQU   CVTS01+332                                               12158000
CVTVEAC0 EQU   CVTS01+328                                               12159000
CVT062R1 EQU   CVTS01+324                                               12160000
CVTRPOST EQU   CVTS01+320                                               12161000
CVTDQIQE EQU   CVTS01+316                                               12162000
CVTCSD   EQU   CVTS01+312                                               12163000
CVTLKRMA EQU   CVTS01+308                                               12164000
CVTRSPIE EQU   CVTS01+304                                               12165000
CVTRENQ  EQU   CVTS01+300                                               12166000
CVTLQCB  EQU   CVTS01+296                                               12167000
CVTFQCB  EQU   CVTS01+292                                               12168000
CVTQCS01 EQU   CVTS01+288                                               12169000
CVTAPFT  EQU   CVTS01+284                                               12170000
CVTPARRL EQU   CVTS01+280                                               12171000
CVTVWAIT EQU   CVTS01+276                                               12172000
CVTGSPL  EQU   CVTS01+272                                               12173000
CVTLSMQ  EQU   CVTS01+268                                               12174000
CVTGSMQ  EQU   CVTS01+264                                               12175000
CVTEXPRO EQU   CVTS01+260                                               12176000
CVTOPCTP EQU   CVTS01+256                                               12177000
CVTSIC   EQU   CVTS01+252                                               12178000
CVTTPIOS EQU   CVTS01+248                                               12179000
CVTRTMS  EQU   CVTS01+244                                               12180000
CVTSDBF  EQU   CVTS01+240                                               12181000
CVTSCBP  EQU   CVTS01+236                                               12182000
CVTSDMP  EQU   CVTS01+232                                               12183000
CVTSV60  EQU   CVTS01+228                                               12184000
CVTRTMCT EQU   CVTS01+224                                               12185000
CVTASCBL EQU   CVTS01+220                                               12186000
CVTASCBH EQU   CVTS01+216                                               12187000
CVTGDA   EQU   CVTS01+212                                               12188000
CVTVVMDI EQU   CVTS01+204                                               12189000
CVTAQTOP EQU   CVTS01+200                                               12190000
CVTIOSCS EQU   CVTS01+196                                               12191000
CVTSDRM  EQU   CVTS01+192                                               12192000
CVTOPTE  EQU   CVTS01+188                                               12193000
CVTSTXU  EQU   CVTS01+184                                               12194000
CVTQUIS  EQU   CVTS01+180                                               12195000
CVTPARS  EQU   CVTS01+176                                               12196000
CVTS1EE  EQU   CVTS01+172                                               12197000
CVTFRAS  EQU   CVTS01+168                                               12198000
CVTQSAS  EQU   CVTS01+164                                               12199000
CVTCRAS  EQU   CVTS01+160                                               12200000
CVTCRMN  EQU   CVTS01+156                                               12201000
CVTDELCP EQU   CVTS01+152                                               12202000
CVTFRECL EQU   CVTS01+148                                               12203000
CVTGETCL EQU   CVTS01+144                                               12204000
CVTBLDCP EQU   CVTS01+140                                               12205000
CVTAUTHL EQU   CVTS01+136                                               12206000
CVTSCAN  EQU   CVTS01+132                                               12207000
CVTRV144 EQU   CVTS01+130                                               12208000
CVTMAXMP EQU   CVTS01+128                                               12209000
CVTSTCK  EQU   CVTS01+124                                               12210000
CVTRV139 EQU   CVTS01+123                                               12211000
CVTDSSAC EQU   CVTS01+122                                               12212000
CVTRV513 EQU   CVTS01+121                                               12213000
CVTIOSPL EQU   CVTS01+120                                               12214000
CVTPTGT  EQU   CVTS01+116                                               12215000
CVTCSPIE EQU   CVTS01+112                                               12216000
CVTSMFEX EQU   CVTS01+108                                               12217000
CVTOLT0A EQU   CVTS01+104                                               12218000
CVTSRBRT EQU   CVTS01+100                                               12219000
CVTPUTL  EQU   CVTS01+96                                                12220000
CVTASCRL EQU   CVTS01+92                                                12221000
CVTASCRF EQU   CVTS01+88                                                12222000
CVTRV326 EQU   CVTS01+84                                                12223000
CVTRV325 EQU   CVTS01+80                                                12224000
CVTRV324 EQU   CVTS01+76                                                12225000
CVT0VL01 EQU   CVTS01+72                                                12226000
CVTRV332 EQU   CVTS01+64                                                12227000
CVTTAS   EQU   CVTS01+60                                                12228000
CVTRSCN  EQU   CVTS01+56                                                12229000
CVTTRAC2 EQU   CVTS01+54                                                12230000
CVTTRACE EQU   CVTS01+52                                                12231000
CVTAPG   EQU   CVTS01+51                                                12232000
CVTSDTRC EQU   CVTCTLFG                                                 12233000
CVTGTRCE EQU   CVTCTLFG                                                 12234000
CVTNOMP  EQU   CVTCTLFG                                                 12235000
CVTRSV79 EQU   CVTCTLFG                                                 12236000
CVTDSTAT EQU   CVTCTLFG                                                 12237000
CVTRSV78 EQU   CVTCTLFG                                                 12238000
CVTRV333 EQU   CVTCTLFG                                                 12239000
CVTRV323 EQU   CVTCTLFG                                                 12240000
CVTSPVLK EQU   CVTS01+49                                                12241000
CVTRSV77 EQU   CVTS01+48                                                12242000
CVTRV331 EQU   CVTS01+44                                                12243000
CVTRV330 EQU   CVTS01+40                                                12244000
CVTRV329 EQU   CVTS01+36                                                12245000
CVTRV328 EQU   CVTS01+32                                                12246000
CVTRV322 EQU   CVTS01+28                                                12247000
CVTSLID  EQU   CVTSLIDA+1                                               12248000
CVTSYLK  EQU   CVTSLIDA                                                 12249000
CVTRV321 EQU   CVTS01+20                                                12250000
CVTRV320 EQU   CVTS01+16                                                12251000
CVTLPDIR EQU   CVTLPDIA+1                                               12252000
CVTRSV69 EQU   CVTDIRST                                                 12253000
CVTRSV68 EQU   CVTDIRST                                                 12254000
CVTRSV67 EQU   CVTDIRST                                                 12255000
CVTRSV66 EQU   CVTDIRST                                                 12256000
CVTRSV65 EQU   CVTDIRST                                                 12257000
CVTRSV64 EQU   CVTDIRST                                                 12258000
CVTRSV63 EQU   CVTDIRST                                                 12259000
CVTDICOM EQU   CVTDIRST                                                 12260000
CVTPVTP  EQU   CVTS01+8                                                 12261000
CVTLPDSR EQU   CVTS01+4                                                 12262000
CVTGETL  EQU   CVTS01                                                   12263000
MESGTXT  EQU   MESGS+10                                                 12264000
MESGID   EQU   MESGS                                                    12265000
MESGLEN  EQU   MSGS+3                                                   12266000
MESGLINE EQU   MCDE+1                                                   12267000
MESGCODE EQU   MCDE                                                     12268000
@NM00060 EQU   MSGS                                                     12269000
JESSASTA EQU   JESCT+48                                                 12270000
JESNUCBS EQU   JESCT+44                                                 12271000
JESSSCT  EQU   JESCT+24                                                 12272000
JESRESQM EQU   JESCT+16                                                 12273000
JESQMGR  EQU   JESCT+12                                                 12274000
JESUNITS EQU   JESCT+4                                                  12275000
@NM00102 EQU   JESCT                                                    12276000
SSIBSUSE EQU   SSIB+32                                                  12277000
SSIBRSV1 EQU   SSIB+28                                                  12278000
SSIBDEST EQU   SSIB+20                                                  12279000
SSIBJBID EQU   SSIB+12                                                  12280000
SSIBRESV EQU   SSIB+7                                                   12281000
@NM00101 EQU   SSIBFLG1                                                 12282000
SSIBPJES EQU   SSIBFLG1                                                 12283000
SSMSRV0  EQU   SSMS+2                                                   12284000
SSOBRETN EQU   SSOB+12                                                  12285000
ACTFIL   EQU   ACTWKBUF+112                                             12286000
@NM00100 EQU   ACTENT1                                                  12287000
@NM00091 EQU   STATBYTE                                                 12288000
MSGFX    EQU   MSGCX                                                    12289000
USERX5   EQU   USERCB+16                                                12290000
USERX2   EQU   USERCB+4                                                 12291000
USERX1   EQU   USERCB                                                   12292000
@NM00089 EQU   TCBWDS                                                   12293000
AVAIL    EQU   CONFIG+84                                                12294000
@NM00085 EQU   CONFIG+2                                                 12295000
LNGTH    EQU   CONFIG                                                   12296000
SECSSID  EQU   TPAKS+1                                                  12297000
PRISSID  EQU   TPAKS                                                    12298000
CWBLA    EQU   CWB+140                                                  12299000
CWBLCC   EQU   CWB+139                                                  12300000
CWBFLGTH EQU   CWBFREE+1                                                12301000
SMF22FSI EQU   SMF22VOF+3                                               12302000
SMF22RVB EQU   SMF22VOF+2                                               12303000
SMF22FID EQU   SMF22VOF+1                                               12304000
SMF22RV6 EQU   SMF22VOF                                                 12305000
SMF22NSI EQU   SMF22VON+3                                               12306000
SMF22RVA EQU   SMF22VON+2                                               12307000
SMF22NID EQU   SMF22VON+1                                               12308000
SMF22RV5 EQU   SMF22VON                                                 12309000
SMF22RV4 EQU   SMF22IPL                                                 12310000
SMF22NPG EQU   SMF22STR+4                                               12311000
SMF22PGL EQU   SMF22STR+2                                               12312000
SMF22TID EQU   SMF22STR+1                                               12313000
SMF22RV3 EQU   SMF22STR                                                 12314000
SMF22CPD EQU   SMF22CHL+5                                               12315000
SMF22CHA EQU   SMF22CHL+4                                               12316000
SMF22CHN EQU   SMF22CHL+2                                               12317000
SMF22CID EQU   SMF22CHL+1                                               12318000
SMF22RV2 EQU   SMF22CHL                                                 12319000
SMF22CPA EQU   SMF22CPU+5                                               12320000
SMF22RV1 EQU   SMF22CPU+4                                               12321000
SMF22CPN EQU   SMF22CPU+2                                               12322000
SMF22PID EQU   SMF22CPU+1                                               12323000
SMF22RV0 EQU   SMF22CPU                                                 12324000
SMF22SID EQU   SMFRCD22+14                                              12325000
SMF22DTE EQU   SMFRCD22+10                                              12326000
SMF22TME EQU   SMFRCD22+6                                               12327000
SMF22FLG EQU   SMFRCD22+4                                               12328000
SMF22SEG EQU   SMFRCD22+2                                               12329000
SMF11VDV EQU   SMF11CUA                                                 12330000
SMF11SID EQU   SMFRCD11+14                                              12331000
SMF11DTE EQU   SMFRCD11+10                                              12332000
SMF11TME EQU   SMFRCD11+6                                               12333000
SMF11FLG EQU   SMFRCD11+4                                               12334000
SMF11SEG EQU   SMFRCD11+2                                               12335000
SMF9VDV  EQU   SMF9CUA                                                  12336000
SMF9SID  EQU   SMFRCD09+14                                              12337000
SMF9DTE  EQU   SMFRCD09+10                                              12338000
SMF9TME  EQU   SMFRCD09+6                                               12339000
SMF9FLG  EQU   SMFRCD09+4                                               12340000
SMF9SEG  EQU   SMFRCD09+2                                               12341000
@NM00071 EQU   RESPQEL+18                                               12342000
PRGASID  EQU   QELASID                                                  12343000
CHNBACK  EQU   QELBACK                                                  12344000
SVCINVAL EQU   QELFLG3                                                  12345000
CHNHEAD  EQU   QELAHEAD                                                 12346000
FLAG1    EQU   QELFLG2                                                  12347000
QELFLG1  EQU   QELECB                                                   12348000
QELTCBPR EQU   RESPQEL+1                                                12349000
QELSP    EQU   RESPQEL                                                  12350000
TCBWAIT  EQU   RQBLK+32                                                 12351000
@NM00070 EQU   RQBLK+24                                                 12352000
OPINADDR EQU   OLDPSW+5                                                 12353000
@NM00069 EQU   OLDPSW+1                                                 12354000
OPMASK   EQU   OLDPSW                                                   12355000
@NM00068 EQU   RQBLK+12                                                 12356000
@NM00067 EQU   TCBORRB                                                  12357000
TCBTEST  EQU   TCBORRB                                                  12358000
@NM00066 EQU   RQBLK                                                    12359000
@NM00065 EQU   MESCODE+1                                                12360000
@NM00064 EQU   INITVVI+16                                               12361000
INIUCAT  EQU   INITVVI+8                                                12362000
INIVCODE EQU   INITVVI+7                                                12363000
@NM00063 EQU   INIFLAGB                                                 12364000
INIRESTR EQU   INIFLAGB                                                 12365000
INIVERFY EQU   INIFLAGB                                                 12366000
@NM00062 EQU   INIFLAGA                                                 12367000
INIENABL EQU   INIFLAGA                                                 12368000
ININIT   EQU   INIFLAGA                                                 12369000
@NM00059 EQU   MSG94+11                                                 12370000
@NM00058 EQU   MSG94+3                                                  12371000
@NM00057 EQU   MSG94                                                    12372000
@NM00056 EQU   MSG2+9                                                   12373000
@NM00055 EQU   MSG2                                                     12374000
@NM00054 EQU   MSGDATA+2                                                12375000
@NM00053 EQU   MSGDATA                                                  12376000
ECBYTE1  EQU   ECBWORD                                                  12377000
UCBERADR EQU   UCBUCS+12                                                12378000
UCBFCBID EQU   UCBUCS+8                                                 12379000
UCBERCNT EQU   UCBUCS+7                                                 12380000
UCBRSV51 EQU   UCBUCS+6                                                 12381000
UCBRSV50 EQU   UCBFCBOP                                                 12382000
UCBRSV49 EQU   UCBFCBOP                                                 12383000
UCBRSV48 EQU   UCBFCBOP                                                 12384000
UCBRSV47 EQU   UCBFCBOP                                                 12385000
UCBRSV46 EQU   UCBFCBOP                                                 12386000
UCBRSV45 EQU   UCBFCBOP                                                 12387000
UCBRSV44 EQU   UCBFCBOP                                                 12388000
UCBFCBO1 EQU   UCBFCBOP                                                 12389000
UCBUCSPE EQU   UCBUCSOP                                                 12390000
UCBRSV43 EQU   UCBUCSOP                                                 12391000
UCBRSV42 EQU   UCBUCSOP                                                 12392000
UCBRSV41 EQU   UCBUCSOP                                                 12393000
UCBRSV40 EQU   UCBUCSOP                                                 12394000
UCBRSV39 EQU   UCBUCSOP                                                 12395000
UCBUCSO2 EQU   UCBUCSOP                                                 12396000
UCBUCSO1 EQU   UCBUCSOP                                                 12397000
UCBUCSID EQU   UCBUCS                                                   12398000
UCBRV073 EQU   UCB3540X+7                                               12399000
UCBRV072 EQU   UCBDKBYT                                                 12400000
UCBRV071 EQU   UCBDKBYT                                                 12401000
UCBRV070 EQU   UCBDKBYT                                                 12402000
UCBRV069 EQU   UCBDKBYT                                                 12403000
UCBRV068 EQU   UCBDKBYT                                                 12404000
UCBRV067 EQU   UCBDKBYT                                                 12405000
UCBVLVER EQU   UCBDKBYT                                                 12406000
UCBDKAMX EQU   UCBDKBYT                                                 12407000
UCBVLSER EQU   UCB3540X                                                 12408000
UCBRDATA EQU   UCBOCR+4                                                 12409000
UCBFRID  EQU   UCBOCR                                                   12410000
UCBCLN   EQU   UCBMT+14                                                 12411000
UCBERG   EQU   UCBMT+12                                                 12412000
UCBMS    EQU   UCBMT+11                                                 12413000
UCBNB    EQU   UCBMT+10                                                 12414000
UCBPW    EQU   UCBMT+9                                                  12415000
UCBPR    EQU   UCBMT+8                                                  12416000
UCBSIO   EQU   UCBMT+6                                                  12417000
UCBTW    EQU   UCBMT+5                                                  12418000
UCBTR    EQU   UCBMT+4                                                  12419000
UCBTWT   EQU   UCBMT+3                                                  12420000
UCBTRT   EQU   UCBMT+2                                                  12421000
UCBCTD   EQU   UCBMT                                                    12422000
UCBWTOID EQU   UCBCMEXT+17                                              12423000
UCBRV043 EQU   UCBCMEXT+16                                              12424000
UCBASID  EQU   UCBCMEXT+14                                              12425000
UCBMFCNT EQU   UCBCMEXT+12                                              12426000
UCBPMSK  EQU   UCBCMEXT+10                                              12427000
UCBCCWOF EQU   UCBCMEXT+8                                               12428000
UCBRV041 EQU   UCBCMEXT+6                                               12429000
UCBRV036 EQU   UCBFLP1                                                  12430000
UCBRV035 EQU   UCBFLP1                                                  12431000
UCBRV034 EQU   UCBFLP1                                                  12432000
UCBRV033 EQU   UCBFLP1                                                  12433000
UCBRV032 EQU   UCBFLP1                                                  12434000
UCBRV031 EQU   UCBFLP1                                                  12435000
UCBSHRUP EQU   UCBFLP1                                                  12436000
UCBNSRCH EQU   UCBFLP1                                                  12437000
UCBSNSCT EQU   UCBCMEXT+4                                               12438000
UCBHPDV  EQU   @NM00045                                                 12439000
UCBHALI  EQU   @NM00045                                                 12440000
UCBRSV09 EQU   @NM00045                                                 12441000
UCBRSV08 EQU   @NM00045                                                 12442000
UCBRSV07 EQU   @NM00045                                                 12443000
UCBRSV06 EQU   @NM00045                                                 12444000
UCBRSV05 EQU   @NM00045                                                 12445000
UCBRSV04 EQU   @NM00045                                                 12446000
UCBDTI   EQU   UCBCMEXT+2                                               12447000
UCBSTI   EQU   UCBCMEXT+1                                               12448000
UCBETI   EQU   UCBCMEXT                                                 12449000
UCBEXTP  EQU   UCBEXTPT+1                                               12450000
UCBDDRSW EQU   UCBFLC                                                   12451000
UCBTICBT EQU   UCBFLC                                                   12452000
UCBIVRR  EQU   UCBFLC                                                   12453000
UCBIVRS  EQU   UCBFLC                                                   12454000
UCBITF   EQU   UCBFLC                                                   12455000
UCBUDE   EQU   UCBFLC                                                   12456000
UCBWAA   EQU   UCBFLC                                                   12457000
UCBATTP  EQU   UCBFLC                                                   12458000
UCBRSV11 EQU   UCBDVCLS                                                 12459000
UCBRSV10 EQU   UCBDVCLS                                                 12460000
UCB3CHAR EQU   UCBDVCLS                                                 12461000
UCB3UREC EQU   UCBDVCLS                                                 12462000
UCB3DISP EQU   UCBDVCLS                                                 12463000
UCB3COMM EQU   UCBDVCLS                                                 12464000
UCB3TAPE EQU   UCBDVCLS                                                 12465000
UCBDVPWR EQU   UCB2OPT7                                                 12466000
UCBVLPWR EQU   UCB2OPT6                                                 12467000
UCB2OPT5 EQU   UCBTBYT2                                                 12468000
UCBRPS   EQU   UCBDUDN2                                                 12469000
UCBRR    EQU   UCBDUDN1                                                 12470000
UCB2OPT1 EQU   UCBTBYT2                                                 12471000
UCB2OPT0 EQU   UCBTBYT2                                                 12472000
UCB1FEA7 EQU   UCBTBYT1                                                 12473000
UCBD6250 EQU   UCB1FEA6                                                 12474000
UCBD1600 EQU   UCB1FEA5                                                 12475000
UCB1FEA4 EQU   UCBTBYT1                                                 12476000
UCB1FEA3 EQU   UCBTBYT1                                                 12477000
UCB1FEA2 EQU   UCBTBYT1                                                 12478000
UCB1FEA1 EQU   UCBTBYT1                                                 12479000
UCB1FEA0 EQU   UCBTBYT1                                                 12480000
UCBRV029 EQU   UCBWGT                                                   12481000
UCBVHRSN EQU   UCBWGT                                                   12482000
UCBVORSN EQU   UCBWGT                                                   12483000
UCBMTPXP EQU   UCBWGT                                                   12484000
UCBREW   EQU   UCBWGT                                                   12485000
UCBPUB   EQU   UCBWGT                                                   12486000
UCBOUT   EQU   UCBWGT                                                   12487000
UCBIN    EQU   UCBWGT                                                   12488000
UCBCPU   EQU   UCBOB+11                                                 12489000
UCBLCI   EQU   UCBOB+10                                                 12490000
UCBCNT   EQU   UCBOB+9                                                  12491000
UCBRV017 EQU   UCBCHM1                                                  12492000
UCBRV016 EQU   UCBCHM1                                                  12493000
UCBRV015 EQU   UCBCHM1                                                  12494000
UCBRV014 EQU   UCBCHM1                                                  12495000
UCBSPB   EQU   UCBPTH1                                                  12496000
UCBPPB   EQU   UCBPTH1                                                  12497000
UCBSPA   EQU   UCBPTH0                                                  12498000
UCBPPA   EQU   UCBPTH0                                                  12499000
UCBFLB7  EQU   UCBFLB                                                   12500000
UCBVALPH EQU   UCBFLB                                                   12501000
UCBCRHSN EQU   UCBFLB                                                   12502000
UCBCRHRV EQU   UCBFLB                                                   12503000
UCBRESVH EQU   UCBFLB                                                   12504000
UCBSPST  EQU   UCBFLB                                                   12505000
UCBASNS  EQU   UCBFLB                                                   12506000
UCBIORST EQU   UCBFLB                                                   12507000
UCBACTV  EQU   UCBFL1                                                   12508000
UCBSAP   EQU   UCBFL1                                                   12509000
UCBNOTRC EQU   UCBCUB                                                   12510000
UCBPSNS  EQU   UCBFL1                                                   12511000
UCBUSING EQU   UCBPST                                                   12512000
UCBBUSYD EQU   UCBBSY                                                   12513000
UCBUA    EQU   UCBCHAN+1                                                12514000
UCBCHA   EQU   UCBCHAN                                                  12515000
UCBDADI  EQU   UCBSTAT                                                  12516000
UCBSYSR  EQU   UCBSTAT                                                  12517000
UCBPRES  EQU   UCBSTAT                                                  12518000
UCBALOC  EQU   UCBSTAT                                                  12519000
UCBUNLD  EQU   UCBSTAT                                                  12520000
UCBRESV  EQU   UCBSTAT                                                  12521000
UCBCHGS  EQU   UCBSTAT                                                  12522000
UCBID    EQU   UCBOB+2                                                  12523000
UCBALTPH EQU   UCBFL5                                                   12524000
UCBALTCU EQU   UCBFL5                                                   12525000
UCBNALOC EQU   UCBFL5                                                   12526000
UCBENVRD EQU   UCBFL5                                                   12527000
UCBVSDR  EQU   UCBFL5                                                   12528000
UCBSASK  EQU   UCBFL5                                                   12529000
UCBAMV   EQU   UCBAF                                                    12530000
UCBDCC   EQU   UCBFL5                                                   12531000
UCBMONT  EQU   UCBJBNR                                                  12532000
UCBRV011 EQU   UCBJBNR                                                  12533000
UCBRSV02 EQU   UCBJBNR                                                  12534000
UCBOLDSM EQU   UCBJBNR                                                  12535000
UCBRV003 EQU   UCBJBNR                                                  12536000
UCBRV002 EQU   UCBJBNR                                                  12537000
UCBJES3  EQU   UCBJBNR                                                  12538000
UCBVRDEV EQU   UCBJBNR                                                  12539000
UCBCMSEG EQU   UCBOB                                                    12540000
UCBPFXND EQU   UCB+512                                                  12541000
UCBIOQ   EQU   UCB+508                                                  12542000
UCBLOCK  EQU   UCB+504                                                  12543000
UCBPXST  EQU   UCB+504                                                  12544000
@NM00042 EQU   UCB                                                      12545000
ICBLORD  EQU   ICBTRACE+256                                             12546000
ICBOTRC  EQU   ICBTRACE                                                 12547000
ICBRESV  EQU   ICB2SSCB+128                                             12548000
ICBVOLST EQU   ICB2SSCB+124                                             12549000
ICBVSCRA EQU   ICB2SSCB+120                                             12550000
ICBRESVD EQU   ICB2SSCB+117                                             12551000
ICBCPUID EQU   ICB2SSCB+112                                             12552000
ICBFAB   EQU   ICB2SSCB+108                                             12553000
ICBRSVP  EQU   ICB2SSCB+100                                             12554000
ICBAEAP  EQU   ICB2SSCB+96                                              12555000
ICBSIOBP EQU   ICB2SSCB+92                                              12556000
ICBIATNA EQU   ICB2SSCB+88                                              12557000
ICBIPRGA EQU   ICB2SSCB+84                                              12558000
ICBSRBP  EQU   ICB2SSCB+80                                              12559000
ICBVVICB EQU   ICB2SSCB+76                                              12560000
ICBMEP   EQU   ICB2SSCB+64                                              12561000
ICBIORCI EQU   ICB2SSCB+60                                              12562000
ICBFG3   EQU   ICBFLG+2                                                 12563000
ICBFG2   EQU   ICBFLG+1                                                 12564000
@NM00041 EQU   ICBFG1                                                   12565000
ICBMSCMP EQU   ICBFG1                                                   12566000
ICBNVT   EQU   ICBOPT                                                   12567000
ICBSSNAM EQU   ICB2SSCB                                                 12568000
@NM00040 EQU   SRB+40                                                   12569000
@NM00039 EQU   SRB+38                                                   12570000
SRBPRIOR EQU   SRB+37                                                   12571000
SRBPKF   EQU   SRB+36                                                   12572000
SRBSAVE  EQU   SRB+32                                                   12573000
SRBRMTR  EQU   SRB+24                                                   12574000
SRBEP    EQU   SRB+20                                                   12575000
SRBPTCB  EQU   SRBFLC+4                                                 12576000
SRBPASID EQU   SRBFLC+2                                                 12577000
SRBCPAFF EQU   SRBFLC                                                   12578000
SRBFLNK  EQU   SRB+4                                                    12579000
IOSEND   EQU   IOSB+108                                                 12580000
IOSSKR   EQU   IOSEEKA+7                                                12581000
IOSSKH2  EQU   IOSSKHH+1                                                12582000
IOSSKH1  EQU   IOSSKHH                                                  12583000
IOSSKCC  EQU   IOSCCHH                                                  12584000
IOSSKBB  EQU   IOSEEKA+1                                                12585000
IOSSKM   EQU   IOSEEKA                                                  12586000
IOSEEK   EQU   IOSB+92                                                  12587000
IOSMDM   EQU   IOSB+91                                                  12588000
IOSMDB   EQU   IOSB+90                                                  12589000
IOSCKEY7 EQU   IOSCKEY                                                  12590000
IOSCKEY6 EQU   IOSCKEY                                                  12591000
IOSCKEY5 EQU   IOSCKEY                                                  12592000
IOSCKEY4 EQU   IOSCKEY                                                  12593000
@NM00035 EQU   IOSCKEY                                                  12594000
IOSFMSK  EQU   IOSB+88                                                  12595000
IOSCUDEV EQU   IOSPATH+1                                                12596000
@NM00034 EQU   IOSCHN                                                   12597000
IOSPATH3 EQU   IOSCHN                                                   12598000
IOSPATH2 EQU   IOSCHN                                                   12599000
IOSEXP   EQU   IOSCHN                                                   12600000
IOSGDP   EQU   IOSCHN                                                   12601000
IOSAFF   EQU   IOSB+85                                                  12602000
IOSRSS1B EQU   IOSB+84                                                  12603000
IOSDSID  EQU   IOSB+80                                                  12604000
IOSRST   EQU   IOSB+72                                                  12605000
IOSDIE   EQU   IOSB+68                                                  12606000
IOSABN   EQU   IOSB+64                                                  12607000
IOSNRM   EQU   IOSB+60                                                  12608000
IOSPCI   EQU   IOSB+56                                                  12609000
IOSERP   EQU   IOSB+52                                                  12610000
IOSPCHN  EQU   IOSB+48                                                  12611000
IOSSNS   EQU   IOSB+42                                                  12612000
IOSAPMSK EQU   IOSB+40                                                  12613000
IOSRES4A EQU   IOSB+36                                                  12614000
IOSCSWRC EQU   IOSCSW+5                                                 12615000
IOSTSB   EQU   IOSTATUS+1                                               12616000
IOSTSA   EQU   IOSTATUS                                                 12617000
IOSCSWCA EQU   IOSCSW                                                   12618000
IOSCC    EQU   @NM00033                                                 12619000
IOSUCB   EQU   IOSB+16                                                  12620000
IOSOPT2X EQU   IOSOPT2                                                  12621000
IOSIGP   EQU   IOSOPT2                                                  12622000
IOSHTP   EQU   IOSOPT2                                                  12623000
IOSRELSE EQU   IOSOPT                                                   12624000
IOSAPR   EQU   IOSOPT                                                   12625000
IOSTSLL  EQU   IOSOPT                                                   12626000
IOSNERP  EQU   IOSOPT                                                   12627000
IOSPSLL  EQU   IOSOPT                                                   12628000
IOSQISCE EQU   IOSOPT                                                   12629000
IOSDEP   EQU   IOSOPT                                                   12630000
IOSBYP   EQU   IOSOPT                                                   12631000
IOSCOD   EQU   IOSB+13                                                  12632000
IOSPKY7  EQU   IOSPKEY                                                  12633000
IOSPGDPX EQU   IOSPKEY                                                  12634000
IOSIDR   EQU   IOSPKEY                                                  12635000
IOSLCL   EQU   IOSPKEY                                                  12636000
@NM00032 EQU   IOSPKEY                                                  12637000
IOSPGAD  EQU   IOSB+8                                                   12638000
IOSPRLVL EQU   IOSB+5                                                   12639000
IOSDVRID EQU   IOSB+4                                                   12640000
IOSPROC  EQU   IOSB+3                                                   12641000
IOSFLC7  EQU   IOSFLC                                                   12642000
IOSCTCNR EQU   IOSFLC                                                   12643000
IOSRWAIT EQU   IOSFLC                                                   12644000
IOSTP    EQU   IOSFLC                                                   12645000
IOSCC3WE EQU   IOSFLC                                                   12646000
IOSVERIF EQU   IOSDVALT                                                 12647000
IOSDVMNT EQU   IOSFLC                                                   12648000
IOSLOG   EQU   IOSFLB                                                   12649000
IOSBDCST EQU   IOSFLB                                                   12650000
IOSMSG   EQU   IOSFLB                                                   12651000
IOSFLB4  EQU   IOSFLB                                                   12652000
IOSFLB3  EQU   IOSFLB                                                   12653000
IOSNOTRS EQU   IOSFLB                                                   12654000
IOSSDR   EQU   IOSFLB                                                   12655000
IOSDIESE EQU   IOSFLB                                                   12656000
IOSIOSB  EQU   IOSFLA                                                   12657000
IOSDOM   EQU   IOSFLA                                                   12658000
IOSEX    EQU   IOSFLA                                                   12659000
IOSSMDB  EQU   IOSFLA                                                   12660000
IOSSMDA  EQU   IOSFLA                                                   12661000
IOSERR   EQU   IOSFLA                                                   12662000
IOSDCHN  EQU   IOSACHN                                                  12663000
DMTVOL   EQU   SSCDATA+78                                               12664000
DMTID    EQU   SSCDATA+76                                               12665000
APPSAV   EQU   APGAREA                                                  12666000
@NM00031 EQU   APPSW                                                    12667000
ATTNSW   EQU   APPSW                                                    12668000
POSTSW   EQU   APPSW                                                    12669000
ERPSW    EQU   APPSW                                                    12670000
SSCDERR  EQU   IOERRCD                                                  12671000
TCBPTR   EQU   TCBADDR                                                  12672000
@NM00030 EQU   BUFFER                                                   12673000
ASCBEND  EQU   ASCB+208                                                 12674000
ASCBSRBT EQU   ASCB+200                                                 12675000
ASCBSWTL EQU   ASCB+196                                                 12676000
ASCBRS14 EQU   ASCB+195                                                 12677000
ASCBSMCT EQU   ASCB+194                                                 12678000
ASCBRS12 EQU   ASCB+192                                                 12679000
ASCBPCTT EQU   ASCB+188                                                 12680000
ASCBVGTT EQU   ASCB+184                                                 12681000
ASCBRV43 EQU   ASCBSRQ4                                                 12682000
ASCBRV42 EQU   ASCBSRQ4                                                 12683000
ASCBRV41 EQU   ASCBSRQ4                                                 12684000
ASCBRV40 EQU   ASCBSRQ4                                                 12685000
ASCBRV39 EQU   ASCBSRQ4                                                 12686000
ASCBRV38 EQU   ASCBSRQ4                                                 12687000
ASCBRV37 EQU   ASCBSRQ4                                                 12688000
ASCBRV36 EQU   ASCBSRQ4                                                 12689000
ASCBRV35 EQU   ASCBSRQ3                                                 12690000
ASCBRV34 EQU   ASCBSRQ3                                                 12691000
ASCBRV33 EQU   ASCBSRQ3                                                 12692000
ASCBRV32 EQU   ASCBSRQ3                                                 12693000
ASCBRV31 EQU   ASCBSRQ3                                                 12694000
ASCBRV30 EQU   ASCBSRQ3                                                 12695000
ASCBRV29 EQU   ASCBSRQ3                                                 12696000
ASCBRV28 EQU   ASCBSRQ3                                                 12697000
ASCBRV27 EQU   ASCBSRQ2                                                 12698000
ASCBRV26 EQU   ASCBSRQ2                                                 12699000
ASCBRV25 EQU   ASCBSRQ2                                                 12700000
ASCBRV24 EQU   ASCBSRQ2                                                 12701000
ASCBRV23 EQU   ASCBSRQ2                                                 12702000
ASCBRV22 EQU   ASCBSRQ2                                                 12703000
ASCBRV21 EQU   ASCBSRQ2                                                 12704000
ASCBRV20 EQU   ASCBSRQ2                                                 12705000
ASCBRV19 EQU   ASCBSRQ1                                                 12706000
ASCBRV18 EQU   ASCBSRQ1                                                 12707000
ASCBRV17 EQU   ASCBSRQ1                                                 12708000
ASCBRV16 EQU   ASCBSRQ1                                                 12709000
ASCBRV15 EQU   ASCBSRQ1                                                 12710000
ASCBRV14 EQU   ASCBSRQ1                                                 12711000
ASCBRV13 EQU   ASCBSRQ1                                                 12712000
ASCBSTA  EQU   ASCBSRQ1                                                 12713000
ASCBJBNS EQU   ASCB+176                                                 12714000
ASCBJBNI EQU   ASCB+172                                                 12715000
ASCBMCC  EQU   ASCB+168                                                 12716000
ASCBRTWA EQU   ASCB+164                                                 12717000
ASCBIQEA EQU   ASCB+160                                                 12718000
ASCBXMPQ EQU   ASCB+156                                                 12719000
ASCBRS01 EQU   ASCB+154                                                 12720000
ASCBFMCT EQU   ASCB+152                                                 12721000
ASCBOUXB EQU   ASCB+148                                                 12722000
ASCBOUCB EQU   ASCB+144                                                 12723000
ASCBMECB EQU   ASCB+140                                                 12724000
ASCBQECB EQU   ASCB+136                                                 12725000
ASCBLSQH EQU   ASCBLKGP+4                                               12726000
ASCBLOCK EQU   ASCBLKGP                                                 12727000
ASCBTCBS EQU   ASCB+124                                                 12728000
ASCBNVSC EQU   ASCB+122                                                 12729000
ASCBVSC  EQU   ASCB+120                                                 12730000
ASCBSRBS EQU   ASCB+118                                                 12731000
ASCBSSRB EQU   ASCB+116                                                 12732000
ASCBRV06 EQU   ASCBFLG2                                                 12733000
ASCBRV05 EQU   ASCBFLG2                                                 12734000
ASCBRV04 EQU   ASCBFLG2                                                 12735000
ASCBSNQS EQU   ASCBFLG2                                                 12736000
ASCBS2S  EQU   ASCBFLG2                                                 12737000
ASCBCEXT EQU   ASCBFLG2                                                 12738000
ASCBPXMT EQU   ASCBFLG2                                                 12739000
ASCBXMPT EQU   ASCBFLG2                                                 12740000
ASCBRF07 EQU   ASCBDSP1                                                 12741000
ASCBRF06 EQU   ASCBDSP1                                                 12742000
ASCBRF05 EQU   ASCBDSP1                                                 12743000
ASCBRF04 EQU   ASCBDSP1                                                 12744000
ASCBRF03 EQU   ASCBDSP1                                                 12745000
ASCBRF02 EQU   ASCBDSP1                                                 12746000
ASCBFAIL EQU   ASCBDSP1                                                 12747000
ASCBNOQ  EQU   ASCBDSP1                                                 12748000
ASCBSWCT EQU   ASCB+112                                                 12749000
ASCBASXB EQU   ASCB+108                                                 12750000
ASCBTMCH EQU   ASCB+104                                                 12751000
ASCBNSWP EQU   ASCBFLG1                                                 12752000
ASCBTYP1 EQU   ASCBFLG1                                                 12753000
ASCBSTND EQU   ASCBFLG1                                                 12754000
ASCBABNT EQU   ASCBFLG1                                                 12755000
ASCBTERM EQU   ASCBFLG1                                                 12756000
ASCBS3S  EQU   ASCBFLG1                                                 12757000
ASCBCMSH EQU   ASCBFLG1                                                 12758000
ASCBTOFF EQU   ASCBFLG1                                                 12759000
ASCBRF01 EQU   ASCBRCTF                                                 12760000
ASCBTMLW EQU   ASCBRCTF                                                 12761000
ASCBOUT  EQU   ASCBRCTF                                                 12762000
ASCBWAIT EQU   ASCBRCTF                                                 12763000
ASCBRV08 EQU   ASCBRCTF                                                 12764000
ASCBFQU  EQU   ASCBRCTF                                                 12765000
ASCBFRS  EQU   ASCBRCTF                                                 12766000
ASCBTMNO EQU   ASCBRCTF                                                 12767000
ASCBAFFN EQU   ASCBFW1                                                  12768000
ASCBDUMP EQU   ASCB+96                                                  12769000
ASCBRV44 EQU   ASCB+92                                                  12770000
ASCBUBET EQU   ASCB+88                                                  12771000
ASCBECB  EQU   ASCB+84                                                  12772000
ASCBJSTL EQU   ASCB+80                                                  12773000
ASCBEWST EQU   ASCB+72                                                  12774000
ASCBEJST EQU   ASCB+64                                                  12775000
ASCBTSB  EQU   ASCB+60                                                  12776000
ASCBCSCB EQU   ASCB+56                                                  12777000
ASCBRSMA EQU   ASCBRSM+1                                                12778000
ASCBRV54 EQU   ASCBRSMF                                                 12779000
ASCBRV53 EQU   ASCBRSMF                                                 12780000
ASCBRV52 EQU   ASCBRSMF                                                 12781000
ASCBRV51 EQU   ASCBRSMF                                                 12782000
ASCBVEQR EQU   ASCBRSMF                                                 12783000
ASCBN2LP EQU   ASCBRSMF                                                 12784000
ASCB1LPU EQU   ASCBRSMF                                                 12785000
ASCB2LPU EQU   ASCBRSMF                                                 12786000
ASCBLDA  EQU   ASCB+48                                                  12787000
ASCBSTOR EQU   ASCB+44                                                  12788000
ASCBDP   EQU   ASCB+43                                                  12789000
ASCBRV07 EQU   ASCB+42                                                  12790000
ASCBIOSM EQU   ASCB+40                                                  12791000
ASCBSEQN EQU   ASCB+38                                                  12792000
ASCBASID EQU   ASCB+36                                                  12793000
ASCBCPUS EQU   ASCB+32                                                  12794000
ASCBSPL  EQU   ASCB+28                                                  12795000
ASCBIOSP EQU   ASCB+24                                                  12796000
ASCBSYNC EQU   ASCBSUPC+4                                               12797000
ASCBSVRB EQU   ASCBSUPC                                                 12798000
ASCBCMSF EQU   ASCB+12                                                  12799000
ASCBBWDP EQU   ASCB+8                                                   12800000
ASCBFWDP EQU   ASCB+4                                                   12801000
ASCBASCB EQU   ASCB                                                     12802000
ASCBEGIN EQU   ASCB                                                     12803000
ASVTEND  EQU   ASVT+528                                                 12804000
ASVTAVAL EQU   ASVTENTY                                                 12805000
ASVTAVAI EQU   ASVTFRST                                                 12806000
ASVTRS00 EQU   ASVT+520                                                 12807000
ASVTMAXU EQU   ASVT+516                                                 12808000
ASVTASVT EQU   ASVT+512                                                 12809000
ASVTBEGN EQU   ASVT+512                                                 12810000
@NM00004 EQU   ASVT                                                     12811000
@NM00003 EQU   TCBASCB+4                                                12812000
CVTLEVL  EQU   CVTRELNO+2                                               12813000
CVTNUMB  EQU   CVTRELNO                                                 12814000
CVTMDL   EQU   CVTFIX+250                                               12815000
@NM00002 EQU   CVTFIX+248                                               12816000
@NM00001 EQU   CVTFIX                                                   12817000
CVTRV482 EQU   CVTXTNT2+128                                             12818000
CVTRV481 EQU   CVTXTNT2+124                                             12819000
CVTRV480 EQU   CVTXTNT2+120                                             12820000
CVTRV479 EQU   CVTXTNT2+118                                             12821000
CVTRV478 EQU   CVTXTNT2+117                                             12822000
CVTRV477 EQU   CVTXTNT2+116                                             12823000
CVTRV476 EQU   CVTXTNT2+115                                             12824000
CVTRV475 EQU   CVTXTNT2+114                                             12825000
CVTRV474 EQU   CVTRV466                                                 12826000
CVTRV473 EQU   CVTRV466                                                 12827000
CVTRV472 EQU   CVTRV466                                                 12828000
CVTRV471 EQU   CVTRV466                                                 12829000
CVTRV470 EQU   CVTRV466                                                 12830000
CVTRV469 EQU   CVTRV466                                                 12831000
CVTRV468 EQU   CVTRV466                                                 12832000
CVTRV467 EQU   CVTRV466                                                 12833000
CVTRV465 EQU   CVTRV457                                                 12834000
CVTRV464 EQU   CVTRV457                                                 12835000
CVTRV463 EQU   CVTRV457                                                 12836000
CVTRV462 EQU   CVTRV457                                                 12837000
CVTRV461 EQU   CVTRV457                                                 12838000
CVTRV460 EQU   CVTRV457                                                 12839000
CVTRV459 EQU   CVTRV457                                                 12840000
CVTRV458 EQU   CVTRV457                                                 12841000
CVTRV456 EQU   CVTXTNT2+108                                             12842000
CVTRV455 EQU   CVTXTNT2+104                                             12843000
CVTRV454 EQU   CVTXTNT2+100                                             12844000
CVTRV453 EQU   CVTXTNT2+96                                              12845000
CVTRV452 EQU   CVTXTNT2+94                                              12846000
CVTRV451 EQU   CVTXTNT2+92                                              12847000
CVTRV450 EQU   CVTXTNT2+90                                              12848000
CVTRV449 EQU   CVTXTNT2+88                                              12849000
CVTRV448 EQU   CVTXTNT2+87                                              12850000
CVTRV447 EQU   CVTXTNT2+86                                              12851000
CVTRV446 EQU   CVTRV438                                                 12852000
CVTRV445 EQU   CVTRV438                                                 12853000
CVTRV444 EQU   CVTRV438                                                 12854000
CVTRV443 EQU   CVTRV438                                                 12855000
CVTRV442 EQU   CVTRV438                                                 12856000
CVTRV441 EQU   CVTRV438                                                 12857000
CVTRV440 EQU   CVTRV438                                                 12858000
CVTRV439 EQU   CVTRV438                                                 12859000
CVTRV437 EQU   CVTRV429                                                 12860000
CVTRV436 EQU   CVTRV429                                                 12861000
CVTRV435 EQU   CVTRV429                                                 12862000
CVTRV434 EQU   CVTRV429                                                 12863000
CVTRV433 EQU   CVTRV429                                                 12864000
CVTRV432 EQU   CVTRV429                                                 12865000
CVTRV431 EQU   CVTRV429                                                 12866000
CVTRV430 EQU   CVTRV429                                                 12867000
CVTRV428 EQU   CVTXTNT2+80                                              12868000
CVTRV427 EQU   CVTXTNT2+76                                              12869000
CVTRV426 EQU   CVTXTNT2+72                                              12870000
CVTRV425 EQU   CVTXTNT2+68                                              12871000
CVTATACT EQU   CVTATCVT                                                 12872000
CVTRV423 EQU   CVTXTNT2+62                                              12873000
CVTRV422 EQU   CVTXTNT2+60                                              12874000
CVTRV421 EQU   CVTXTNT2+58                                              12875000
CVTRV420 EQU   CVTXTNT2+56                                              12876000
CVTRV419 EQU   CVTXTNT2+55                                              12877000
CVTRV418 EQU   CVTXTNT2+54                                              12878000
CVTRV417 EQU   CVTRV409                                                 12879000
CVTRV416 EQU   CVTRV409                                                 12880000
CVTRV415 EQU   CVTRV409                                                 12881000
CVTRV414 EQU   CVTRV409                                                 12882000
CVTRV413 EQU   CVTRV409                                                 12883000
CVTRV412 EQU   CVTRV409                                                 12884000
CVTRV411 EQU   CVTRV409                                                 12885000
CVTRV410 EQU   CVTRV409                                                 12886000
CVTRV408 EQU   CVTRV400                                                 12887000
CVTRV407 EQU   CVTRV400                                                 12888000
CVTRV406 EQU   CVTRV400                                                 12889000
CVTRV405 EQU   CVTRV400                                                 12890000
CVTRV404 EQU   CVTRV400                                                 12891000
CVTRV403 EQU   CVTRV400                                                 12892000
CVTRV402 EQU   CVTRV400                                                 12893000
CVTRV401 EQU   CVTRV400                                                 12894000
CVTSKTA  EQU   CVTXTNT2+44                                              12895000
CVTCCVT  EQU   CVTXTNT2+40                                              12896000
CVTRSV98 EQU   CVTXTNT2+36                                              12897000
CVTRSV97 EQU   CVTXTNT2+34                                              12898000
CVTRSV96 EQU   CVTXTNT2+32                                              12899000
CVTOLTEP EQU   CVTXTNT2+28                                              12900000
CVTQIDA  EQU   CVTQID+1                                                 12901000
CVTRSV95 EQU   CVTQID                                                   12902000
CVTRSV94 EQU   CVTXTNT2+20                                              12903000
CVTRSV93 EQU   CVTXTNT2+16                                              12904000
CVTRSV92 EQU   CVTXTNT2+12                                              12905000
CVTDEBVR EQU   CVTXTNT2+8                                               12906000
CVTRSV91 EQU   CVTXTNT2+6                                               12907000
CVTRSV9H EQU   CVTFLGBT                                                 12908000
CVTRSV9G EQU   CVTFLGBT                                                 12909000
CVTRSV9F EQU   CVTFLGBT                                                 12910000
CVTRSV9E EQU   CVTFLGBT                                                 12911000
CVTRSV9D EQU   CVTFLGBT                                                 12912000
CVTRSV9C EQU   CVTFLGBT                                                 12913000
CVTVME   EQU   CVTFLGBT                                                 12914000
CVTNPE   EQU   CVTFLGBT                                                 12915000
CVTNUCLS EQU   CVTXTNT2+4                                               12916000
CVTDSSVA EQU   CVTDSSV+1                                                12917000
CVTRSV89 EQU   CVTDSSV                                                  12918000
CVTRSV88 EQU   CVTXTNT1+8                                               12919000
CVTRSV87 EQU   CVTXTNT1+4                                               12920000
CVTFACHN EQU   CVTXTNT1                                                 12921000
CVTRV488 EQU   CVTMAP+412                                               12922000
CVTRV487 EQU   CVTMAP+408                                               12923000
CVTRV486 EQU   CVTMAP+404                                               12924000
CVTRV485 EQU   CVTMAP+400                                               12925000
CVTACTAP EQU   CVTMAP+396                                               12926000
CVTAUTH  EQU   CVTMAP+392                                               12927000
CVTATMCA EQU   CVTATMCT+1                                               12928000
CVTATMST EQU   CVTATMCT                                                 12929000
CVTRSV61 EQU   CVTMAP+384                                               12930000
CVTVOLT1 EQU   CVTVOLM1+1                                               12931000
CVTVOLI1 EQU   CVTVOLF1                                                 12932000
CVTSTOA  EQU   CVTMAP+376                                               12933000
CVTRSV58 EQU   CVTMAP+374                                               12934000
CVTRSV57 EQU   CVTMAP+372                                               12935000
CVTDDCE  EQU   CVTMAP+368                                               12936000
CVTPNWFR EQU   CVTMAP+364                                               12937000
CVTSMF   EQU   CVTMAP+360                                               12938000
CVTSULK  EQU   CVTMAP+358                                               12939000
CVTSLKO  EQU   CVTSYSK                                                  12940000
CVTSLKP  EQU   CVTSYSK                                                  12941000
CVTSLKQ  EQU   CVTSYSK                                                  12942000
CVTSLKR  EQU   CVTSYSK                                                  12943000
CVTRSV56 EQU   CVTSYSK                                                  12944000
CVTRSV55 EQU   CVTSYSK                                                  12945000
CVTRSV54 EQU   CVTSYSK                                                  12946000
CVTRSV53 EQU   CVTSYSK                                                  12947000
CVTRSV52 EQU   CVTA1F1                                                  12948000
CVTRSV51 EQU   CVTA1F1                                                  12949000
CVTRSV50 EQU   CVTA1F1                                                  12950000
CVTRSV49 EQU   CVTA1F1                                                  12951000
CVTRSV48 EQU   CVTA1F1                                                  12952000
CVTRSV47 EQU   CVTA1F1                                                  12953000
CVTSRSW  EQU   CVTA1F1                                                  12954000
CVTPFSW  EQU   CVTA1F1                                                  12955000
CVTPCVT  EQU   CVTMAP+352                                               12956000
CVTRSV46 EQU   CVTMAP+344                                               12957000
CVTRSV45 EQU   CVTMAP+340                                               12958000
CVTRSV44 EQU   CVTMAP+338                                               12959000
CVTRSV43 EQU   CVTMAP+336                                               12960000
CVTHJESA EQU   CVTHJES+1                                                12961000
CVTRSV42 EQU   CVTHJES                                                  12962000
CVTEXT2A EQU   CVTEXT2+1                                                12963000
CVTRSV41 EQU   CVTEXT2                                                  12964000
CVTAPFA  EQU   CVTAPF+1                                                 12965000
CVTRSV40 EQU   CVTAPF                                                   12966000
CVTRV518 EQU   CVTINTLA                                                 12967000
CVTRV517 EQU   CVTERPV                                                  12968000
CVTEORM  EQU   CVTMAP+312                                               12969000
CVTMCHPR EQU   CVTMAP+308                                               12970000
CVTTZ    EQU   CVTMAP+304                                               12971000
CVTJEPS  EQU   CVTMAP+300                                               12972000
CVTMODE  EQU   CVTMAP+292                                               12973000
CVTPTRV  EQU   CVTMAP+288                                               12974000
CVTREAL  EQU   CVTMAP+284                                               12975000
CVTRSV39 EQU   CVTMAP+280                                               12976000
CVTRSV38 EQU   CVTMAP+276                                               12977000
CVTDMSRA EQU   CVTDMSR+1                                                12978000
CVTRV634 EQU   CVTDMSRF                                                 12979000
CVTRV633 EQU   CVTDMSRF                                                 12980000
CVTRV632 EQU   CVTDMSRF                                                 12981000
CVTRV631 EQU   CVTDMSRF                                                 12982000
CVTRV630 EQU   CVTDMSRF                                                 12983000
CVTRV629 EQU   CVTDMSRF                                                 12984000
CVTUDUMP EQU   CVTDMSRF                                                 12985000
CVTSDUMP EQU   CVTDMSRF                                                 12986000
CVTQMSGA EQU   CVTQMSG+1                                                12987000
CVTRSV36 EQU   CVTQMSG                                                  12988000
CVTAMFF  EQU   CVTMAP+264                                               12989000
CVTPURGA EQU   CVTPURG+1                                                12990000
CVTRSV35 EQU   CVTPURG                                                  12991000
CVTCBSP  EQU   CVTMAP+256                                               12992000
CVTATERA EQU   CVTATER+1                                                12993000
CVTSYST  EQU   CVTATER                                                  12994000
CVTVOLT2 EQU   CVTTAT                                                   12995000
CVTVOLI2 EQU   CVTVOLF2                                                 12996000
CVTAQAVB EQU   CVTAQAVT+1                                               12997000
CVTRSV34 EQU   CVTTCMFG                                                 12998000
CVTRSV33 EQU   CVTTCMFG                                                 12999000
CVTRSV32 EQU   CVTTCMFG                                                 13000000
CVTRSV31 EQU   CVTTCMFG                                                 13001000
CVTRSV30 EQU   CVTTCMFG                                                 13002000
CVTRSV29 EQU   CVTTCMFG                                                 13003000
CVTLDEV  EQU   CVTTCMFG                                                 13004000
CVTTCRDY EQU   CVTTCMFG                                                 13005000
CVTGTFA  EQU   CVTGTF+1                                                 13006000
CVTRSV27 EQU   CVTGTFST                                                 13007000
CVTRNIO  EQU   CVTGTFST                                                 13008000
CVTUSR   EQU   CVTGTFST                                                 13009000
CVTRV318 EQU   CVTFORM                                                  13010000
CVTRV317 EQU   CVTTMODE                                                 13011000
CVTRV316 EQU   CVTSTATE                                                 13012000
CVTRV315 EQU   CVTGTFS                                                  13013000
CVTGTFAV EQU   CVTGTFS                                                  13014000
CVT0SCR1 EQU   CVTMAP+232                                               13015000
CVTRV515 EQU   CVTMAP+228                                               13016000
CVTRMS   EQU   CVTMAP+224                                               13017000
CVTPATCH EQU   CVTMAP+220                                               13018000
CVTTSCE  EQU   CVTMAP+216                                               13019000
CVTLNKSC EQU   CVTMAP+214                                               13020000
CVTQABST EQU   CVTMAP+212                                               13021000
CVTMDLDS EQU   CVTMAP+208                                               13022000
CVTUSER  EQU   CVTMAP+204                                               13023000
CVTABEND EQU   CVTMAP+200                                               13024000
CVTRSV18 EQU   CVTMAP+192                                               13025000
CVTQLPAQ EQU   CVTMAP+188                                               13026000
CVTQCDSR EQU   CVTMAP+184                                               13027000
CVTRSV17 EQU   CVTOPTB                                                  13028000
CVTRSV16 EQU   CVTOPTB                                                  13029000
CVTFP    EQU   CVTOPTB                                                  13030000
CVTAPTHR EQU   CVTOPTB                                                  13031000
CVTNLOG  EQU   CVTOPTB                                                  13032000
CVTTOD   EQU   CVTOPTB                                                  13033000
CVTCTIMS EQU   CVTOPTB                                                  13034000
CVTPROT  EQU   CVTOPTB                                                  13035000
CVTXPFP  EQU   CVTOPTA                                                  13036000
CVTASCII EQU   CVTOPTA                                                  13037000
CVTRSV13 EQU   CVTOPTA                                                  13038000
CVTRSV12 EQU   CVTOPTA                                                  13039000
CVTNIP   EQU   CVTOPTA                                                  13040000
CVTDDR   EQU   CVTOPTA                                                  13041000
CVTAPR   EQU   CVTOPTA                                                  13042000
CVTCCH   EQU   CVTOPTA                                                  13043000
CVTSNCTR EQU   CVTMAP+180                                               13044000
CVTQMWR  EQU   CVTMAP+176                                               13045000
CVTQOCR  EQU   CVTMAP+172                                               13046000
CVT1EF00 EQU   CVTMAP+168                                               13047000
CVTSV76Q EQU   CVTSV76C                                                 13048000
CVTRSV11 EQU   CVTMAP+156                                               13049000
CVTMSER  EQU   CVTMAP+148                                               13050000
CVTRV516 EQU   CVTIERLC                                                 13051000
CVTILCH  EQU   CVTMAP+140                                               13052000
CVT0DS   EQU   CVTMAP+136                                               13053000
CVTFBOSV EQU   CVTMAP+132                                               13054000
CVTNUCB  EQU   CVTMAP+128                                               13055000
CVTIXAVL EQU   CVTMAP+124                                               13056000
CVTSV76M EQU   CVTIOQET                                                 13057000
CVTDCBA  EQU   CVTMAP+117                                               13058000
CVTMVS2  EQU   CVTDCB                                                   13059000
CVT6DAT  EQU   CVTDCB                                                   13060000
CVT4MPS  EQU   CVTDCB                                                   13061000
CVTRSV09 EQU   CVTDCB                                                   13062000
CVT4MS1  EQU   CVTDCB                                                   13063000
CVT2SPS  EQU   CVTDCB                                                   13064000
CVT1SSS  EQU   CVTDCB                                                   13065000
CVTRSV08 EQU   CVTDCB                                                   13066000
CVTSTB   EQU   CVTMAP+112                                               13067000
CVTQTD00 EQU   CVTMAP+108                                               13068000
CVTQTE00 EQU   CVTMAP+104                                               13069000
CVTCUCB  EQU   CVTMAP+100                                               13070000
CVTSJQ   EQU   CVTMAP+96                                                13071000
CVTPBLDL EQU   CVTMAP+92                                                13072000
CVTTPC   EQU   CVTMAP+88                                                13073000
CVTSVDCB EQU   CVTMAP+84                                                13074000
CVTEXIT  EQU   CVTMAP+80                                                13075000
CVT0FN00 EQU   CVTMAP+76                                                13076000
CVTDARA  EQU   CVTDAR+1                                                 13077000
CVTRSV07 EQU   CVTFLGS1                                                 13078000
CVTRSV06 EQU   CVTFLGS1                                                 13079000
CVTRSV05 EQU   CVTFLGS1                                                 13080000
CVTRSV04 EQU   CVTFLGS1                                                 13081000
CVTRSV03 EQU   CVTFLGS1                                                 13082000
CVTRSV02 EQU   CVTFLGS1                                                 13083000
CVTRSV01 EQU   CVTFLGS1                                                 13084000
CVTDMPLK EQU   CVTFLGS1                                                 13085000
CVTXITP  EQU   CVTMAP+68                                                13086000
CVTZDTAB EQU   CVTMAP+64                                                13087000
CVTMSLT  EQU   CVTMAP+60                                                13088000
CVTDATE  EQU   CVTMAP+56                                                13089000
CVTBTERM EQU   CVTMAP+52                                                13090000
CVTSYSAD EQU   CVTMAP+48                                                13091000
CVTXTLER EQU   CVTMAP+44                                                13092000
CVTILK1  EQU   CVTMAP+36                                                13093000
CVTPRLTV EQU   CVTMAP+32                                                13094000
CVTPCNVT EQU   CVTMAP+28                                                13095000
CVT0VL00 EQU   CVTMAP+24                                                13096000
CVTXAPG  EQU   CVTMAP+20                                                13097000
CVTBUF   EQU   CVTMAP+16                                                13098000
CVTJOB   EQU   CVTMAP+12                                                13099000
CVTLINK  EQU   CVTMAP+8                                                 13100000
CVT0EF00 EQU   CVTMAP+4                                                 13101000
CVT      EQU   CVTMAP                                                   13102000
@NM00028 EQU   PSA+3668                                                 13103000
PSASTAK  EQU   PSA+3072                                                 13104000
@NM00027 EQU   PSA+1048                                                 13105000
PSAUSEND EQU   PSA+1048                                                 13106000
PSARV062 EQU   PSA+1044                                                 13107000
PSACDAL  EQU   PSA+1040                                                 13108000
PSAWTCOD EQU   PSA+1036                                                 13109000
PSAATCVT EQU   PSA+1032                                                 13110000
PSAPCPSW EQU   PSA+1024                                                 13111000
PSAPIR2  EQU   PSA+1020                                                 13112000
PSARV059 EQU   PSA+1018                                                 13113000
PSASVC13 EQU   PSA+1016                                                 13114000
PSALSFCC EQU   PSA+1012                                                 13115000
PSASFACC EQU   PSA+1008                                                 13116000
PSASTOP  EQU   PSA+992                                                  13117000
PSASTART EQU   PSA+976                                                  13118000
PSARSPSW EQU   PSA+968                                                  13119000
PSASRPSW EQU   PSA+960                                                  13120000
PSARV045 EQU   PSA+892                                                  13121000
PSARV044 EQU   PSA+888                                                  13122000
PSARV043 EQU   PSA+884                                                  13123000
PSARV042 EQU   PSA+880                                                  13124000
PSARV041 EQU   PSA+876                                                  13125000
PSARV040 EQU   PSA+872                                                  13126000
PSARV025 EQU   PSA+868                                                  13127000
PSADSSED EQU   PSA+868                                                  13128000
PSADSSPR EQU   PSA+864                                                  13129000
PSADSSFW EQU   PSA+860                                                  13130000
PSADSS14 EQU   PSA+856                                                  13131000
PSADSSPP EQU   PSA+848                                                  13132000
PSADSSRP EQU   PSA+840                                                  13133000
PSADSS05 EQU   PSADSSF4                                                 13134000
PSADSS10 EQU   PSADSSF4                                                 13135000
PSADSSVE EQU   PSADSSF4                                                 13136000
PSADSSDE EQU   PSADSSF4                                                 13137000
PSADSSC0 EQU   PSADSSF4                                                 13138000
PSADSSIE EQU   PSADSSF4                                                 13139000
PSADSS12 EQU   PSADSSF4                                                 13140000
PSADSSRC EQU   PSADSSF4                                                 13141000
PSARV057 EQU   PSADSSF3                                                 13142000
PSARV056 EQU   PSADSSF3                                                 13143000
PSARV055 EQU   PSADSSF3                                                 13144000
PSADSSMC EQU   PSADSSF3                                                 13145000
PSADSSRW EQU   PSADSSF3                                                 13146000
PSADSSNM EQU   PSADSSF3                                                 13147000
PSADSSES EQU   PSADSSF3                                                 13148000
PSADSSGP EQU   PSADSSF3                                                 13149000
PSADSSF2 EQU   PSADSSFL+1                                               13150000
PSADSSPI EQU   PSADSSF1                                                 13151000
PSADSSOI EQU   PSADSSF1                                                 13152000
PSADSSSP EQU   PSADSSF1                                                 13153000
PSADSSTP EQU   PSADSSF1                                                 13154000
PSADSSDW EQU   PSADSSF1                                                 13155000
PSADSSDD EQU   PSADSSF1                                                 13156000
PSADSSDM EQU   PSADSSF1                                                 13157000
PSADSSMV EQU   PSADSSF1                                                 13158000
PSADSSTS EQU   PSA+816                                                  13159000
PSADSSWK EQU   PSA+812                                                  13160000
PSADSSR3 EQU   PSA+808                                                  13161000
PSADSSR2 EQU   PSA+804                                                  13162000
PSADSSRS EQU   PSA+800                                                  13163000
PSASTOR  EQU   PSA+796                                                  13164000
PSACPUSA EQU   PSA+794                                                  13165000
PSAVSTAP EQU   PSA+792                                                  13166000
PSAWKVAP EQU   PSA+788                                                  13167000
PSAWKRAP EQU   PSA+784                                                  13168000
PSAMCHIC EQU   PSA+783                                                  13169000
PSARV061 EQU   PSA+782                                                  13170000
PSASYMSK EQU   PSA+781                                                  13171000
PSAMCHFL EQU   PSA+780                                                  13172000
PSACR0   EQU   PSA+776                                                  13173000
PSAPSWSV EQU   PSA+768                                                  13174000
PSALITA  EQU   PSA+764                                                  13175000
PSACLHS  EQU   PSAHLHI                                                  13176000
PSALKR15 EQU   PSALKSA+60                                               13177000
PSALKR14 EQU   PSALKSA+56                                               13178000
PSALKR13 EQU   PSALKSA+52                                               13179000
PSALKR12 EQU   PSALKSA+48                                               13180000
PSALKR11 EQU   PSALKSA+44                                               13181000
PSALKR10 EQU   PSALKSA+40                                               13182000
PSALKR9  EQU   PSALKSA+36                                               13183000
PSALKR8  EQU   PSALKSA+32                                               13184000
PSALKR7  EQU   PSALKSA+28                                               13185000
PSALKR6  EQU   PSALKSA+24                                               13186000
PSALKR5  EQU   PSALKSA+20                                               13187000
PSALKR4  EQU   PSALKSA+16                                               13188000
PSALKR3  EQU   PSALKSA+12                                               13189000
PSALKR2  EQU   PSALKSA+8                                                13190000
PSALKR1  EQU   PSALKSA+4                                                13191000
PSALKR0  EQU   PSALKSA                                                  13192000
PSARV023 EQU   PSACLHT+52                                               13193000
PSALOCAL EQU   PSACLHT+48                                               13194000
PSACMSL  EQU   PSACLHT+44                                               13195000
PSAOPTL  EQU   PSACLHT+40                                               13196000
PSATPACL EQU   PSACLHT+36                                               13197000
PSATPDNL EQU   PSACLHT+32                                               13198000
PSATPNCL EQU   PSACLHT+28                                               13199000
PSAIOSLL EQU   PSACLHT+24                                               13200000
PSAIOSUL EQU   PSACLHT+20                                               13201000
PSAIOSCL EQU   PSACLHT+16                                               13202000
PSAIOSSL EQU   PSACLHT+12                                               13203000
PSASALCL EQU   PSACLHT+8                                                13204000
PSAASML  EQU   PSACLHT+4                                                13205000
PSADISPL EQU   PSACLHT                                                  13206000
PSASRSA  EQU   PSA+636                                                  13207000
PSARV050 EQU   PSA+634                                                  13208000
PSADSSGO EQU   PSA+633                                                  13209000
PSARECUR EQU   PSA+632                                                  13210000
PSAHLHIS EQU   PSA+628                                                  13211000
PSAIPCSA EQU   PSA+624                                                  13212000
@NM00026 EQU   PSA+621                                                  13213000
PSAIPCDM EQU   PSA+620                                                  13214000
PSAIPCD  EQU   PSA+616                                                  13215000
@NM00025 EQU   PSA+613                                                  13216000
PSAIPCRM EQU   PSA+612                                                  13217000
PSAIPCR  EQU   PSA+608                                                  13218000
PSAMCHEX EQU   PSA+600                                                  13219000
PSAMPSW  EQU   PSA+592                                                  13220000
PSAEXPS2 EQU   PSA+584                                                  13221000
PSAEXPS1 EQU   PSA+576                                                  13222000
PSAPIREG EQU   PSA+572                                                  13223000
PSARSREG EQU   PSA+568                                                  13224000
PSAGPREG EQU   PSA+556                                                  13225000
PSARV022 EQU   PSASUP4                                                  13226000
PSARV021 EQU   PSASUP4                                                  13227000
PSARV020 EQU   PSASUP4                                                  13228000
PSARV019 EQU   PSASUP4                                                  13229000
PSARV018 EQU   PSASUP4                                                  13230000
PSARV017 EQU   PSASUP4                                                  13231000
PSARV016 EQU   PSASUP4                                                  13232000
PSARV015 EQU   PSASUP4                                                  13233000
PSARV014 EQU   PSASUP3                                                  13234000
PSAULCMS EQU   PSASUP3                                                  13235000
PSARV012 EQU   PSASUP3                                                  13236000
PSAESTA  EQU   PSASUP3                                                  13237000
PSASPR   EQU   PSASUP3                                                  13238000
PSAPSREG EQU   PSASUP3                                                  13239000
PSAPI2   EQU   PSASUP3                                                  13240000
PSAIOSUP EQU   PSASUP3                                                  13241000
PSALCR   EQU   PSASUP2                                                  13242000
PSARTM   EQU   PSASUP2                                                  13243000
PSAACR   EQU   PSASUP2                                                  13244000
PSAIPCE2 EQU   PSASUP2                                                  13245000
PSAIPCES EQU   PSASUP2                                                  13246000
PSAIPCEC EQU   PSASUP2                                                  13247000
PSAGTF   EQU   PSASUP2                                                  13248000
PSAIPCRI EQU   PSASUP2                                                  13249000
PSATYPE6 EQU   PSASUP1                                                  13250000
PSATCTL  EQU   PSASUP1                                                  13251000
PSADISP  EQU   PSASUP1                                                  13252000
PSALOCK  EQU   PSASUP1                                                  13253000
PSAPI    EQU   PSASUP1                                                  13254000
PSAEXT   EQU   PSASUP1                                                  13255000
PSASVC   EQU   PSASUP1                                                  13256000
PSAIO    EQU   PSASUP1                                                  13257000
PSAAOLD  EQU   PSA+548                                                  13258000
PSAANEW  EQU   PSA+544                                                  13259000
PSATOLD  EQU   PSA+540                                                  13260000
PSATNEW  EQU   PSA+536                                                  13261000
PSALCCAR EQU   PSA+532                                                  13262000
PSALCCAV EQU   PSA+528                                                  13263000
PSAPCCAR EQU   PSA+524                                                  13264000
PSAPCCAV EQU   PSA+520                                                  13265000
PSACPULA EQU   PSA+518                                                  13266000
PSACPUPA EQU   PSA+516                                                  13267000
PSAPSA   EQU   PSA+512                                                  13268000
FLCHDEND EQU   PSA+512                                                  13269000
FLCCRSAV EQU   FLCMCLA+280                                              13270000
FLCGRSAV EQU   FLCMCLA+216                                              13271000
FLCFPSAV EQU   FLCMCLA+184                                              13272000
FLCFLA   EQU   FLCMCLA+88                                               13273000
FLCRGNCD EQU   FLCMCLA+84                                               13274000
FLCFSAA  EQU   FLCFSA+1                                                 13275000
@NM00024 EQU   FLCFSA                                                   13276000
@NM00023 EQU   FLCMCLA+72                                               13277000
FLCMCIC  EQU   FLCMCLA+64                                               13278000
@NM00022 EQU   FLCMCLA+20                                               13279000
FLCIOAA  EQU   FLCIOA+1                                                 13280000
@NM00021 EQU   FLCIOA                                                   13281000
@NM00020 EQU   FLCMCLA+15                                               13282000
@NM00019 EQU   FLCMCLA+14                                               13283000
@NM00018 EQU   FLCMCLA+12                                               13284000
FLCLCL   EQU   FLCMCLA+8                                                13285000
FLCIOELA EQU   FLCIOEL+1                                                13286000
@NM00017 EQU   FLCIOEL                                                  13287000
FLCCHNID EQU   FLCMCLA                                                  13288000
@NM00016 EQU   PSA+160                                                  13289000
FLCMTRCD EQU   PSA+157                                                  13290000
@NM00015 EQU   PSA+156                                                  13291000
FLCPERA  EQU   FLCPER+1                                                 13292000
@NM00014 EQU   FLCPER                                                   13293000
@NM00013 EQU   PSA+151                                                  13294000
FLCPERCD EQU   PSA+150                                                  13295000
FLCMCNUM EQU   PSA+149                                                  13296000
@NM00012 EQU   PSA+148                                                  13297000
FLCTEAA  EQU   FLCTEA+1                                                 13298000
@NM00011 EQU   FLCTEA                                                   13299000
PSAPIPC  EQU   PSAPICOD                                                 13300000
PSAPIMC  EQU   PSAPICOD                                                 13301000
PSAPIPER EQU   PSAPICOD                                                 13302000
PSARV049 EQU   FLCPICOD                                                 13303000
FLCPILCB EQU   FLCPIILC                                                 13304000
@NM00010 EQU   FLCPIILC                                                 13305000
@NM00009 EQU   PSAEPPSW                                                 13306000
FLCSVCN  EQU   PSAESPSW+2                                               13307000
FLCSILCB EQU   FLCSVILC                                                 13308000
@NM00008 EQU   FLCSVILC                                                 13309000
@NM00007 EQU   PSAESPSW                                                 13310000
FLCEICOD EQU   PSAEEPSW+2                                               13311000
PSASPAD  EQU   PSAEEPSW                                                 13312000
@NM00006 EQU   PSA+128                                                  13313000
FLCINPSW EQU   PSA+120                                                  13314000
FLCMNPSW EQU   PSA+112                                                  13315000
FLCPNPSW EQU   PSA+104                                                  13316000
FLCSNPSW EQU   PSA+96                                                   13317000
FLCENPSW EQU   PSA+88                                                   13318000
FLCTRACE EQU   PSA+84                                                   13319000
FLCTIMER EQU   PSA+80                                                   13320000
FLCCVT2  EQU   PSA+76                                                   13321000
FLCCAW   EQU   PSA+72                                                   13322000
FLCCSW   EQU   PSA+64                                                   13323000
FLCIOPSW EQU   PSA+56                                                   13324000
FLCMOPSW EQU   PSA+48                                                   13325000
FLCPOPSW EQU   PSA+40                                                   13326000
FLCSOPSW EQU   PSA+32                                                   13327000
FLCEOPSW EQU   PSA+24                                                   13328000
@NM00005 EQU   FLCICCW2+4                                               13329000
FLCCVT   EQU   FLCICCW2                                                 13330000
FLCICCW1 EQU   FLCROPSW                                                 13331000
FLCIPPSW EQU   FLCRNPSW                                                 13332000
*                                      END UNREFERENCED COMPONENTS      13333000
EXITX    EQU   WAIT                                                     13334000
@RF00492 EQU   NOMSSC                                                   13335000
@RT00511 EQU   CKCWB                                                    13336000
@RT00528 EQU   CKCWB                                                    13337000
@RC00657 EQU   @RC00634                                                 13338000
@RT01158 EQU   @RC01157                                                 13339000
@RC01207 EQU   @RC01205                                                 13340000
@RC01265 EQU   @RC01263                                                 13341000
@RC01277 EQU   @RC01275                                                 13342000
@RF01304 EQU   DQELT                                                    13343000
@RC01306 EQU   DQELT                                                    13344000
@RF01322 EQU   DQELT                                                    13345000
@RT01330 EQU   DQELT                                                    13346000
@RT01333 EQU   DQELT                                                    13347000
@RT01335 EQU   DQELT                                                    13348000
@RT01337 EQU   DQELT                                                    13349000
@RF01509 EQU   SYNERROR                                                 13350000
@RT01513 EQU   SYNERROR                                                 13351000
@RT01521 EQU   SYNERROR                                                 13352000
@RF01529 EQU   SYNERROR                                                 13353000
@RF01654 EQU   @RC01608                                                 13354000
@RC01637 EQU   @RC01608                                                 13355000
@RC01684 EQU   @RC01662                                                 13356000
@RC01755 EQU   @RC01749                                                 13357000
@RC01887 EQU   @EL00018                                                 13358000
@RC02015 EQU   @RC02011                                                 13359000
@RF02391 EQU   @RC02387                                                 13360000
@RF02401 EQU   @RC02397                                                 13361000
@RC02610 EQU   @RC02608                                                 13362000
@RF02644 EQU   @EL00032                                                 13363000
@RF01308 EQU   @RC01306                                                 13364000
@RC02612 EQU   @RC02610                                                 13365000
@RC02614 EQU   @RC02612                                                 13366000
@RF02616 EQU   @RC02614                                                 13367000
@ENDDATA EQU   *                                                        13368000
         END   ICB2MSG,(C'PLS0927',0701,78180)                          13369000
