* %/*  START OF SPECIFICATIONS****                             @Y30LB02 00050003
.*                                                             @Y30LB02 00100003
.*01   MODULE-NAME = ICBCOVC                                   @Y30LB02 00150003
.*                                                             @Y30LB02 00200003
.*01   DESCRIPTIVE-NAME = COPY VOLUME/CARTRIDGE MACRO          @Y30LB02 00250003
.*                                                             @Y30LB02 00300003
.*01   COPYRIGHT = NONE                                        @Y30LB02 00350003
.*                                                             @Y30LB02 00400003
.*01   STATUS = OS/VS1 RELEASE 4, OS/VS2 RELEASE 3             @Y30LB02 00450003
.*                                                             @Y30LB02 00500003
.*01   FUNCTION = REQUEST COPY VOLUME/CART OF MSS DATA         @Y30LB02 00550003
.*                                                             @Y30LB02 00600003
.*01   NOTES = AS FOLLOWS:                                     @Y30LB02 00650003
.*                                                             @Y30LB02 00700003
.*02     CODE = MACRO IS BILINGUALLY CODED                     @Y30LB02 00750003
.*                                                             @Y30LB02 00800003
.*02     RESTRICTIONS = THE FOLLOWING PREFIXES SHOULD BE       @Y30LB02 00850003
.*                      AVOIDED IN THE USER'S INVOCATION:      @Y30LB02 00900003
.*                      ICB, CVO, AND CCRT.                    @Y30LB02 00950003
.*                                                             @Y30LB02 01000003
.*02  REGISTER-CONVENTIONS = FOLLOWS NORMAL USE OF REGISTERS   @Y30LB02 01050003
.*                              BY MACROS: R0,R1,R14, AND R15  @Y30LB02 01100003
.*                                                             @Y30LB02 01150003
.*01   MODULE-TYPE = MACRO                                     @Y30LB02 01200003
.*                                                             @Y30LB02 01250003
.*02     PROCESSOR = PLS AND ASSEMBLER                         @Y30LB02 01300003
.*                                                             @Y30LB02 01400003
.*02     ATTRIBUTES = REUSABLE                                 @Y30LB02 01450003
.*                                                             @Y30LB02 01500003
.*02     ENTRY-POINT = ICBCOVC                                 @Y30LB02 01550003
.*                                                             @Y30LB02 01600003
.*02     PURPOSE = THE ICBCOVC MACRO SERVES AS A COMMUNI-      @Y30LB02 01650003
.*       CATIONS LINK BETWEEN THE MSSC CALLER AND THE          @Y30LB02 01700003
.*       MSSC SVC ROUTINE.                                     @Y30LB02 01750003
.*                                                             @Y30LB02 01800003
.*02     LINKAGE =  SVC 126                                    @Y30LB02 01850003
.*                                                             @Y30LB02 01900003
.*01  INPUT = PARAMETERS SPECIFIED ON THE PLS/BAL MACRO        @Y30LB02 01950003
.*            INVOCATION                                       @Y30LB02 02000003
.*                                                             @Y30LB02 02050003
.*   THE ICBCOVC MACRO REQUEST IS ISSUED TO SATISFY COPY       @Y30LB02 02100003
.*                                                             @Y30LB02 02150003
.*   VOLUME AND COPY CARTRIDGE REQUESTS.                       @Y30LB02 02200003
.*                                                             @Y30LB02 02250003
.*   THE COPY VOLUME (CVOL) REQUEST IS ISSUED IF THE CALLER    @Y30LB02 02300003
.*   WISHES TO:                                                @Y30LB02 02350003
.*                                                             @Y30LB02 02400003
.*   (1)  CAUSE REAL 3330I DASD TO BE COPIED TO A SUBSYSTEM    @Y30LB02 02450003
.*        VOLUME.                                              @Y30LB02 02500003
.*                                                             @Y30LB02 02550003
.*   (2)  CAUSE A SUBSYSTEM VOLUME TO BE COPIED TO REAL        @Y30LB02 02600003
.*        3330I DASD.                                          @Y30LB02 02650003
.*                                                             @Y30LB02 02700003
.*   (3)  CAUSE A VIRTUAL VOLUME TO BE COPIED TO A VIRTUAL     @Y30LB02 02750003
.*        VOLUME HAVING THE SAME VOLID BUT NOT ACTIVE.         @Y30LB02 02800003
.*                                                             @Y30LB02 02850003
.*   (4)  CAUSE A VIRTUAL VOLUME SPECIFIED BY CSN1 TO BE       @Y30LB02 02900003
.*        COPIED TO A VIRTUAL VOLUME HAVING THE SAME VOLID     @Y30LB02 02950003
.*        AND ACTIVE.                                          @Y30LB02 03000003
.*                                                             @Y30LB02 03050003
.*   THE COPY CARTRIDGE (CCRT) REQUEST IS ISSUED IF THE        @Y30LB02 03100003
.*   CALLER WISHES TO CAUSE A CARTRIDGE TO BE COPIED TO A      @Y30LB02 03150003
.*   DIFFERENT CARTRIDGE.                                      @Y30LB02 03200003
.*                                                             @Y30LB02 03250003
.*   MACRO SYNTAX                                              @Y30LB02 03300003
.*                                                             @Y30LB02 03350003
.*   LIST FORM                                                 @Y30LB02 03400003
.*                                                             @Y30LB02 03450003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 03500003
.*                                                             @Y30LB02 03550003
.*ICBCOVC  MF=L - (BAL)          MF=(L,MAP) - BAL              @Y30LB02 03600003
.*         MF(L,NAME/(R))-PLS    MF(L,NAME/(R),ATTR)-PLS       @Y30LB02 03650003
.*         TYPE=CCRT/CVOL                                      @Y30LB02 03700003
.*                                                             @Y30LB02 03750003
.*   STANDARD FORM                                             @Y30LB02 03800003
.*                                                             @Y30LB02 03850003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 03900003
.*                                                             @Y30LB02 03950003
.*ICBCOVC  TYPE=CCRT/CVOL        VOLID=ADDR/(R)                @Y30LB02 04000003
.*         FLAGS=ADDR/(R)        CSN=ADDR/(R)                  @Y30LB02 04050003
.*         ECB=ADDR/(R)          RUA=ADDR/(R)                  @Y30LB02 04100003
.*                                                             @Y30LB02 04150003
.* EXECUTE FORM                                                @Y30LB02 04200003
.*                                                             @Y30LB02 04250003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 04300003
.*                                                             @Y30LB02 04350003
.*ICBCOVC  MF(E,NAME/(R))       MF(E,NAME/(R),COMPLETE)-PLS    @Y30LB02 04400003
.*         TYPE=CCRT/CVOL       VOLID=ADDR/(R)                 @Y30LB02 04450003
.*                              ECB=ADDR/(R)                   @Y30LB02 04500003
.*                              CSN=ADDR/(R)                   @Y30LB02 04550003
.*                              RUA=ADDR/(R)                   @Y30LB02 04600003
.*                              FLAGS=ADDR/(R)                 @Y30LB02 04650003
.*                              VVICEXT=ADDR/(R)               @Y30LB02 04700003
.*                                                             @Y30LB02 04750003
.*   KEYWORD PARAMETERS:                                       @Y30LB02 04800003
.*                                                             @Y30LB02 04850003
.*                                                             @Y30LB02 04900003
.*  TYPE -  TYPE:  INDICATES WHETHER THE REQUEST FOR THE       @Y30LB02 04950003
.*          THE COPY VOLUME(CVOL) OR THE COPY CARTRIDGE        @Y30LB02 05000003
.*          (CCRT) FUNCTION.  IF CVOL IS SPECIFIED, HEX        @Y30LB02 05050003
.*          '2A' IS PLACED IN THE OPCODE FIELD.  FOR           @Y30LB02 05100003
.*          TYPE=CCRT, HEX '28' IS PLACED IN THE OPCODE        @Y30LB02 05150003
.*          FIELD.                                             @Y30LB02 05200003
.*                                                             @Y30LB02 05250003
.*   MF  -  MACRO FORMAT: THIS PARAMETER DESCRIBES THE         @Y30LB02 05300003
.*          MACRO FORMAT AND MAY GIVE THE ADDRESS OR           @Y30LB02 05350003
.*          ADDRESS IN A REGISTER WHERE THE REQUEST BLOCK      @Y30LB02 05400003
.*          IS STORED.                                         @Y30LB02 05450003
.*                                                             @Y30LB02 05500003
.*          L - LIST FORM: THE EXPANSION OF THE L-FORM         @Y30LB02 05550003
.*              MACRO WILL RESULT IN A REQUEST BLOCK WITH      @Y30LB02 05600003
.*              THE ONLY NON-ZERO FIELDS BEING THE OPCODE      @Y30LB02 05650003
.*              AND LENGTH FIELDS.                             @Y30LB02 05700003
.*                                                             @Y30LB02 05750003
.*          (1) 'MAP' - IF MAP IS SPECIFIED WITH THE           @Y30LB02 05800003
.*              ASSEMBLER MACRO CALL A DSECT EQUIVALENT TO     @Y30LB02 05850003
.*              A MAPPING MACRO IS PRODUCED.                   @Y30LB02 05900003
.*                                                             @Y30LB02 05950003
.*          (2) NAME - THE MACRO INVOKER MUST SPECIFY A        @Y30LB02 06000003
.*              NAME FOR HIS STRUCTURE WHEN INVOKING THE       @Y30LB02 06050003
.*              PLS LIST FORM.                                 @Y30LB02 06100003
.*                                                             @Y30LB02 06150003
.*          (3) ATTRIBUTE - THE MACRO WILL PLACE ANY PLS       @Y30LB02 06200003
.*              ATTRIBUTE SPECIFIED IN THE MACRO INVOCATION    @Y30LB02 06250003
.*              IN AN UNINITIALIZED REQUEST BLOCK.  ATTRI-     @Y30LB02 06300003
.*              BUTE EXAMPLE:                                  @Y30LB02 06350003
.*                                                             @Y30LB02 06400003
.*              CHAR, FIXED, STATIC LOCAL, NONLOCAL,           @Y30LB02 06450003
.*              BASED(*), ETC.                                 @Y30LB02 06500003
.*                                                             @Y30LB02 06550003
.*       NULL - STANDARD FORM: THE EXPANSION OF THIS FORM      @Y30LB02 06600003
.*              CONSISTS OF A REQUEST BLOCK, A LINKAGE         @Y30LB02 06650003
.*              INSTRUCTION, AND, POSSIBLY, PARAMETER          @Y30LB02 06700003
.*              BINDING INSTRUCTIONS.                          @Y30LB02 06750003
.*                                                             @Y30LB02 06800003
.*          E - EXECUTABLE FORM: THE EXPANSION OF THIS FORM    @Y30LB02 06850003
.*              CONSISTS OF A LINKAGE INSTRUCTION AND          @Y30LB02 06900003
.*              POSSIBLY, PARAMETER BINDING INSTRUCTIONS.      @Y30LB02 06950003
.*                                                             @Y30LB02 07000003
.*              SUB-PARAMETERS                                 @Y30LB02 07050003
.*                                                             @Y30LB02 07100003
.*              (1)  AN E MUST BE SPECIFIED IN THE FIRST       @Y30LB02 07150003
.*                   SUB-PARAMETER POSITION.  THIS INDICATES   @Y30LB02 07200003
.*                   THAT THE MACRO IS IN EXECUTABLE FORM.     @Y30LB02 07250003
.*                                                             @Y30LB02 07300003
.*              (2)  A NAME OR A REGISTER MUST BE SPECIFIED    @Y30LB02 07350003
.*                   IN THE SECOND SUB-PARAMETER.              @Y30LB02 07400003
.*                                                             @Y30LB02 07450003
.*              (3)  'COMPLETE' - COMPLETE WILL CAUSE THE      @Y30LB02 07500003
.*                   MACRO TO ZERO OUT THE REQUEST BLOCK.      @Y30LB02 07550003
.*                   AFTER ZEROING THE REQUEST BLOCK THE       @Y30LB02 07600003
.*                   FUNCTION OPCODE AND LENGTH ARE PLACED     @Y30LB02 07650003
.*                   IN THE REQUEST BLOCK.                     @Y30LB02 07700003
.*                                                             @Y30LB02 07750003
.*   FLAGS - FLAGS: THE FIELD WHICH INDICATES THE FUNCTION(S)  @Y30LB02 07800003
.*   TO BE PERFORMED.  THE FORMAT OF THE FLAGS FIELD IS        @Y30LB02 07850003
.*   SHOWN BELOW:                                              @Y30LB02 07900003
.*                                                             @Y30LB02 07950003
.*   --------------------------------------------              @Y30LB02 08000003
.*   | X | X | X | X |BITS 4-15 UNUSED AND ZERO |              @Y30LB02 08050003
.*   --------------------------------------------              @Y30LB02 08100003
.*   IF CVOL (COPY VOLUME) IS SPECIFIED FOR THE TYPE           @Y30LB02 08150003
.*   PARAMETER:                                                @Y30LB02 08200003
.*                                                             @Y30LB02 08250003
.*   BIT 0-------'1'B   TRANSFER DATA FROM DASD TO             @Y30LB02 08300003
.*                      CARTRIDGE(S)                           @Y30LB02 08350003
.*               '0'B   NOT DASD TO CARTRIDGE                  @Y30LB02 08400003
.*                                                             @Y30LB02 08450003
.*   BIT 1-------'1'B   TRANSFER DATA FROM                     @Y30LB02 08500003
.*                      CARTRIDGE(S) TO DASD                   @Y30LB02 08550003
.*               '0'B   NOT CARTRIDGE TO DASD                  @Y30LB02 08600003
.*                                                             @Y30LB02 08650003
.*   BIT 2-------'1'B   TRANSFER DATA FROM CARTRIDGE           @Y30LB02 08700003
.*                      TO CARTRIDGE (TRANSIENT)               @Y30LB02 08750003
.*               '0'B   NOT CARTRIDGE TO CARTRIDGE             @Y30LB02 08800003
.*                                                             @Y30LB02 08850003
.*   BIT 3-------'1'B   TRANSFER DATA FROM CARTRIDGE           @Y30LB02 08900003
.*                      TO CARTRIDGE (INVENTORY)               @Y30LB02 08950003
.*               '0'B   NOT CARTRIDGE TO CARTRIDGE             @Y30LB02 09000003
.*                                                             @Y30LB02 09050003
.*   BITS 4-15---       NOT USED AND MUST BE ZERO              @Y30LB02 09100003
.*                                                             @Y30LB02 09150003
.*   NOTE:  BITS 0-3 ARE MUTUALLY EXCLUSIVE.                   @Y30LB02 09200003
.*                                                             @Y30LB02 09250003
.*   PACK TO CARTRIDGE                                         @Y30LB02 09300003
.*                                                             @Y30LB02 09350003
.*          IF THIS ATTRIBUTE IS SPECIFIED, THEN, DATA         @Y30LB02 09400003
.*          FROM A REAL 3330I DASD PACK (SPECIFIED BY RUA)     @Y30LB02 09450003
.*          WILL BE COPIED TO A SUBSYSTEM VOLUME (SPECIFIED    @Y30LB02 09500003
.*          BY VOLID).                                         @Y30LB02 09550003
.*                                                             @Y30LB02 09600003
.*          PACK TO CARTRIDGE REQUIRED PARAMETERS: TYPE,       @Y30LB02 09650003
.*          FLAGS, ECB, VOLID, AND RUA.                        @Y30LB02 09700003
.*          OPTIONAL PARAMETER:  VVICEXT                       @Y30LB02 09750003
.*                                                             @Y30LB02 09800003
.*   CARTRIDGE TO PACK                                         @Y30LB02 09850003
.*                                                             @Y30LB02 09900003
.*          IF THIS ATTRIBUTE IS SPECIFIED, THEN, DATA         @Y30LB02 09950003
.*          FROM A SUBSYSTEM VOLUME (SPECIFIED BY VOLID)       @Y30LB02 10000003
.*          IS COPIED TO A REAL 3330I DASD PACK (SPECIFIED     @Y30LB02 10050003
.*          BY RUA).                                           @Y30LB02 10100003
.*                                                             @Y30LB02 10150003
.*          CARTRIDGE TO PACK REQUIRED PARAMETERS: TYPE,       @Y30LB02 10200003
.*          FLAGS, ECB, VOLID, AND RUA.                        @Y30LB02 10250003
.*          OPTIONAL PARAMETER:  VVICEXT                       @Y30LB02 10300003
.*                                                             @Y30LB02 10350003
.*   CARTRIDGE TO CARTRIDGE(INVENTORY TO TRANSIENT)            @Y30LB02 10400003
.*                                                             @Y30LB02 10450003
.*          IF THIS ATTRIBUTE IS SPECIFIED, THEN, DATA         @Y30LB02 10500003
.*          FROM A SUBSYSTEM VOLUME SPECIFIED BY VOLID         @Y30LB02 10550003
.*          WILL BE COPIED TO ANOTHER SUBSYSTEM VOLUME         @Y30LB02 10600003
.*          SPECIFIED BY CARTRIDGE SERIAL NUMBER (CSN).        @Y30LB02 10650003
.*                                                             @Y30LB02 10700003
.*          CARTRIDGE TO CARTRIDGE REQUIRED PARAMETERS:        @Y30LB02 10750003
.*          TYPE, FLAGS, ECB, VOLID, AND CSN.                  @Y30LB02 10800003
.*          OPTIONAL PARAMETER:  VVICEXT                       @Y30LB02 10850003
.*                                                             @Y30LB02 10900003
.*   CARTRIDGE TO CARTRIDGE(TRANSIENT TO INVENTORY)            @Y30LB02 10950003
.*                                                             @Y30LB02 11000003
.*          IF THIS ATTRIBUTE IS SPECIFIED, THEN, DATA         @Y30LB02 11050003
.*          FROM A SUBSYSTEM VOLUME SPECIFIED BY CSN1 WILL     @Y30LB02 11100003
.*          BE COPIED TO ANOTHER SUBSYSTEM VOLUME SPECIFIED    @Y30LB02 11150003
.*          BY VOLID.                                          @Y30LB02 11200003
.*                                                             @Y30LB02 11250003
.*          CARTRIDGE TO CARTRIDGE REQUIRED PARAMETERS:        @Y30LB02 11300003
.*          TYPE, FLAGS, ECB, VOLID, AND CSN.                  @Y30LB02 11350003
.*          OPTIONAL PARAMETER:  VVICEXT                       @Y30LB02 11400003
.*                                                             @Y30LB02 11450003
.*   IF CCRT (COPY CARTRIDGE) IS SPECIFIED FOR THE TYPE        @Y30LB02 11500003
.*   PARAMETER:                                                @Y30LB02 11550003
.*                                                             @Y30LB02 11600003
.*   BIT 0-------'1'B   CARTRIDGE 1 OF 2 IS BEING COPIED       @Y30LB02 11650003
.*               '0'B   NOT CARTRIDGE ONE                      @Y30LB02 11700003
.*                                                             @Y30LB02 11750003
.*   BIT 1-------'1'B   CARTRIDGE 2 OF 2 IS BEING COPIED       @Y30LB02 11800003
.*               '0'B   NOT CARTRIDGE TWO                      @Y30LB02 11850003
.*                                                             @Y30LB02 11900003
.*   BITS 2-15---       NOT USED AND MUST BE ZERO              @Y30LB02 11950003
.*                                                             @Y30LB02 12000003
.*   NOTE:  BITS 0-1 ARE MUTUALLY EXCLUSIVE.                   @Y30LB02 12050003
.*                                                             @Y30LB02 12100003
.*   CARTRIDGE 1 OF 2:                                         @Y30LB02 12150003
.*                                                             @Y30LB02 12200003
.*          IF THIS ATTRIBUTE IS SPECIFIED, THEN THE FIRST     @Y30LB02 12250003
.*          CARTRIDGE OF A 2 CARTRIDGE VOLUME(SPECIFIED BY     @Y30LB02 12300003
.*          VOLID) IS COPIED TO A DIFFERENT CARTRIDGE WHICH    @Y30LB02 12350003
.*          IS SPECIFIED BY CSN.                               @Y30LB02 12400003
.*                                                             @Y30LB02 12450003
.*          CARTRIDGE 1 OF 2 REQUIRED PARAMETERS:              @Y30LB02 12500003
.*          TYPE, FLAGS, ECB, VOLID, AND CSN.                  @Y30LB02 12550003
.*                                                             @Y30LB02 12600003
.*   CARTRIDGE 2 OF 2:                                         @Y30LB02 12650003
.*                                                             @Y30LB02 12700003
.*          IF THIS ATTRIBUTE IS SPECIFIED, THEN, THE          @Y30LB02 12750003
.*          SECOND CARTRIDGE OF A 2 CARTRIDGE VOLUME(SPECI-    @Y30LB02 12800003
.*          FIED BY VOLID) IS COPIED TO A DIFFERENT            @Y30LB02 12850003
.*          CARTRIDGE WHICH IS SPECIFIED BY CSN.               @Y30LB02 12900003
.*                                                             @Y30LB02 12950003
.*          CARTRIDGE 2 OF 2 REQUIRED PARAMETERS:              @Y30LB02 13000003
.*          TYPE, FLAGS, ECB, VOLID, AND CSN.                  @Y30LB02 13050003
.*                                                             @Y30LB02 13100003
.*   VOLID - VOLUME IDENTIFIER: THE VOLUME IDENTIFIER OF THE   @Y30LB02 13150003
.*           VOLUME TO BE COPIED.                              @Y30LB02 13200003
.*                                                             @Y30LB02 13250003
.*   CSN   - CARTRIDGE SERIAL NUMBER: A 12 BYTE AREA WHICH     @Y30LB02 13300003
.*           CONTAINS THE CARTRIDGE SERIAL NUMBER.             @Y30LB02 13350003
.*                                                             @Y30LB02 13400003
.*   ECB   - THE NAME OF THE EVENT CONTROL BLOCK (ECB) TO BE   @Y30LB02 13450003
.*           POSTED WHEN THE REQUEST IS COMPLETE.  THE USER    @Y30LB02 13500003
.*           MUST ALSO DECLARE A MINIMUM 50 BYTE CONTIGUOUS    @Y30LB02 13550003
.*           AREA TO CONTAIN THE MESSAGE GENERATED BY THE      @Y30LB02 13600003
.*           MESSAGE TASK.  (THE ECB AND APPENDED DATA AREA    @Y30LB02 13650003
.*           MUST BE IN COMMON CORE IN VS/2).  THE ECB IS      @Y30LB02 13700003
.*           POSTED WITH '7F'X FOR SUCCESSFUL (IN LOW-ORDER    @Y30LB02 13750003
.*           BYTE OF ECB).  THE MSC DATA WILL BE MOVED         @Y30LB02 13800003
.*           TO CORE LOCATION ADDRESS(ECB)+4.  ECB             @Y30LB02 13850003
.*           MUST BE SPECIFIED AND THE ECB AREA MUST BE        @Y30LB02 13900003
.*           CLEARED (SET TO BINARY 0) BEFORE INVOKING         @Y30LB02 13950003
.*           THE MACRO.                                        @Y30LB02 14000003
.*                                                             @Y30LB02 14050003
.*   RUA   - REAL UNIT ADDRESS: THE REAL UNIT DESIGNATED TO    @Y30LB02 14100003
.*           RECEIVE THE SUBSYSTEM DATA.  MUST BE SPECIFIED    @Y30LB02 14150003
.*           WITH EACH STANDARD FORM COPY VOLUME REQUEST       @Y30LB02 14200003
.*           WHICH SPECIFIES PACK TO CARTRIDGE OR CARTRIDGE    @Y30LB02 14250003
.*           TO PACK.                                          @Y30LB02 14300003
.*                                                             @Y30LB02 14350003
.*                                                             @Y30LB02 14400003
.* VVICEXT - THE NAME OF AN AREA WHICH CONTAINS THE MSVC       @Y30LB02 14450003
.*           EXTENSION (VVICEXT) MAPPING.  IF THIS PARAMETER   @Y30LB02 14500003
.*           IS NOT SPECIFIED, THE CORRESPONDING POSITION IN   @Y30LB02 14550003
.*           THE REQUEST BLOCK MUST BE SET TO ZERO.  THE       @Y30LB02 14600003
.*           MAPPING MACRO FOR THE MSVC EXTENSION TO COPY      @Y30LB02 14650003
.*           VOLUME IS IEZCOVCE (VVICEXT IS NOT A VALID        @Y30LB02 14700003
.*           PARAMETER FOR THE COPY CARTRIDGE REQUEST).        @Y30LB02 14750003
.*                                                             @Y30LB02 14800003
.*01  EXIT-NORMAL = VALID INVOCATION                           @Y30LB02 14850003
.*                                                             @Y30LB02 14900003
.*02     CONDITION = RETURN CODE = 0                           @Y30LB02 14950003
.*                                                             @Y30LB02 15000003
.*02     OUTPUT = IN-LINE PLS/BAL STATEMENTS THAT PERFORM      @Y30LB02 15050003
.*                THE REQUESTED FUNCTION                       @Y30LB02 15100003
.*                                                             @Y30LB02 15150003
.*01  EXIT-ERROR = INVALID INVOCATION                          @Y30LB02 15200003
.*                                                             @Y30LB02 15250003
.*02     CONDITION = RETURN CODE = 12                          @Y30LB02 15300003
.*                                                             @Y30LB02 15350003
.*02     OUTPUT = ERROR MESSAGE AS A COMMENT AT POINT OF       @Y30LB02 15400003
.*                INVOCATION                                   @Y30LB02 15450003
.*                                                             @Y30LB02 15500003
.*01  EXTERNAL REFERENCES = NONE                               @Y30LB02 15550003
.*                                                             @Y30LB02 15600003
.*01  TABLES = NONE                                            @Y30LB02 15650003
.*                                                             @Y30LB02 15700003
.*01  MESSAGES = AS FOLLOWS:                                   @Y30LB02 15750003
.*     ICB600I:  TYPE MUST BE SPECIFIED                        @Y30LB02 15800003
.*     ICB601I:  TYPE IS INCORRECTLY SPECIFIED                 @Y30LB02 15850003
.*     ICB602I:  A NAME FOR THE REQUEST BLOCK MUST BE          @Y30LB02 15900003
.*               SPECIFIED IN MF(2)                            @Y30LB02 15950003
.*     ICB603I:  WARNING-ONLY MF AND TYPE PARAMETERS ARE       @Y30LB02 16000003
.*               VALID FOR LIST FORM                           @Y30LB02 16050003
.*     ICB605I:  ECB MUST BE SPECIFIED FOR STANDARD            @Y30LB02 16100003
.*               FORM MACRO                                    @Y30LB02 16150003
.*     ICB607I:  FLAGS MUST BE SPECIFIED FOR STANDARD          @Y30LB02 16200003
.*               FORM MACRO                                    @Y30LB02 16250003
.*     ICB610I:  VOLID MUST BE SPECIFIED FOR STANDARD          @Y30LB02 16300003
.*               FORM MACRO                                    @Y30LB02 16350003
.*     ICB616I:  RUA MUST BE SPECIFIED FOR STANDARD            @Y30LB02 16400003
.*               FORM MACRO                                    @Y30LB02 16450003
.*     ICB612I:  MF(2) MUST CONTAIN REQ BLK NAME               @Y30LB02 16500003
.*               IF EXEC MACRO FORM REQUESTED                  @Y30LB02 16550003
.*     ICB613I:  MISSING REQ BLK NAME OR MORE                  @Y30LB02 16600003
.*               THAN 2 SUBPARAMETERS FOR MF                   @Y30LB02 16650003
.*     ICB615I:  INVALID MF PARAMETER SPECIFIED, MUST          @Y30LB02 16700003
.*                BE E, L, OR NULL                             @Y30LB02 16750003
.*01  CONTROL-BLOCKS = NONE                                    @Y30LB02 16800003
.*                                                             @Y30LB02 16850003
.*01  INNER MACROS = NONE                                      @Y30LB02 16900003
.*                                                             @Y30LB02 16950003
.*01  SYSTEM MACRO = NONE                                      @Y30LB02 17000003
.*                                                             @Y30LB02 17050003
.*01  CHANGE-ACTIVITY = S/D X04AC02 AND Y30LB02                @Y30LB02 17100003
.*                                                             @Y30LB02 17150003
.**** END OF SPECIFICATIONS ***                                @Y30LB02 17200003
         MACRO                                                          17250003
&SYMBOL  ICBCOVC &MF=,&TYPE=,&FLAGS=,&ECB=,&RUA=,&VOLID=,              *17300003
               &CSN=,&VVICEXT=                                          17350003
         LCLC  &LBL                DEFINE MACRO INSTR INDX     @Y30LB02 17400003
         LCLB  &ERSW               DEFINE ERROR SWITCH         @Y30LB02 17450003
&LBL     SETC  'CVC'.'&SYSNDX'     ASSIGN CHARACTER VALUE      @Y30LB02 17500003
.*                                                             @Y30LB02 17550003
.*       CHECK FOR VALID TYPE SPECIFICATION                    @Y30LB02 17600003
.TYPE    AIF   ('&TYPE' EQ '').NUL                             @Y30LB02 17650003
         AIF   ('&TYPE' EQ 'CVOL' OR '&TYPE' EQ 'CCRT').START  @Y30LB02 17700003
         MNOTE 12,'  ICB601I - TYPE IS INCORRECTLY SPECIFIED'  @Y30LB02 17750003
         MEXIT                                                 @Y30LB02 17800003
.*                                                             @Y30LB02 17850003
.NUL     ANOP                                                  @Y30LB02 17900003
         MNOTE 12,'  ICB600I - TYPE MUST BE SPECIFIED '        @Y30LB02 17950003
         MEXIT                                                 @Y30LB02 18000003
.*                                                             @Y30LB02 18050003
.*       DETERMINATION OF DESIRED MACRO FORM                   @Y30LB02 18100003
.*                                                             @Y30LB02 18150003
.START   AIF   ('&MF(1)' EQ 'L').LFORM      LIST FORM?         @Y30LB02 18200003
         AIF   ('&MF(1)' EQ 'E').EFORM      EXECUTE FORM?      @Y30LB02 18250003
         AIF   ('&MF(1)' EQ '').SFORM       STANDARD FORM?     @Y30LB02 18300003
         MNOTE 12,'  ICB615I - INVALID MF PARAMETER '          @Y30LB02 18350003
         MNOTE 12,'  SPECIFIED, MUST BE L, E, OR NULL '        @Y30LB02 18400003
&ERSW    SETB  1                                               @Y30LB02 18450003
         AGO   .PROCES                                         @Y30LB02 18500003
.*                                                             @Y30LB02 18550003
.*       PROCESSING OF 'LIST' MACRO FORM                       @Y30LB02 18600003
.*       THE FOLLOWING CODE CHECKS FOR ILLEGAL PARAMETERS ON   @Y30LB02 18650003
.*       THE LIST FORM MACRO AND GIVES WARNING IF FOUND        @Y30LB02 18700003
.*                                                             @Y30LB02 18750003
.LFORM   ANOP                                                  @Y30LB02 18800003
         AIF   ('&FLAGS' NE '' OR '&ECB' NE '' OR '&RUA' NE            *18850003
               '' OR '&VOLID' NE '' OR '&CSN' NE ''                    *18900003
               OR '&VVICEXT' NE '').WARN                       @Y30LB02 18950003
         AGO   .LIST1                                          @Y30LB02 19000003
.*                                                             @Y30LB02 19050003
.WARN    MNOTE 4,'  ICB603I - WARNING-ONLY MF AND TYPE '       @Y30LB02 19100003
         MNOTE 4,'  PARAMETERS ARE VALID FOR LIST FORM '       @Y30LB02 19150003
.*                                                             @Y30LB02 19200003
.LIST1   AIF   ('&TYPE' EQ 'CVOL').COPYV    COPY VOL REQ?      @Y30LB02 19250003
         AIF   ('&MF(2)' EQ 'MAP').LISTDS   DSECT REQUESTED?   @Y30LB02 19300003
*  MACMEAN  MSSC COPY CARTRIDGE MACRO--INITIALIZED LIST FORM   @Y30LB02 19350003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 19400003
&SYMBOL  DS    0F                                              @Y30LB02 19450003
CCRTLEN  DC    F'32'               LENGTH OF CCRT REQ BLK      @Y30LB02 19500003
CCRTOPC  DC    XL1'28'             COPY CARTRIDGE OPCODE       @Y30LB02 19550003
CCRTRES1 DC    XL1'00'             1-BYTE RESERVED AREA        @Y30LB02 19600003
CCRTFLG  DC    XL2'0000'           2-BYTE FLAGS AREA           @Y30LB02 19650003
CCRTVOL  DC    XL6'0000'           6-BYTE VOLID AREA           @Y30LB02 19700003
CCRTASID DC    XL2'0000'           2-BYTE ASID AREA            @Y30LB02 19750003
CCRTECB  DC    XL4'00000000'       4-BYTE AREA FOR ECB         @Y30LB02 19800003
CCRTCSN  DC    XL12'0000000000'    12-BYTE CSN AREA            @Y30LB02 19850003
         MEXIT                                                 @Y30LB02 19900003
.*                                                             @Y30LB02 19950003
.LISTDS  ANOP                                                  @Y30LB02 20000003
*  MACMEAN  MSSC COPY CARTRIDGE MACRO-UNINITIALIZED LIST FORM  @Y30LB02 20050003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 20100003
ICBCOVC  DSECT                                                 @Y30LB02 20150003
CCRTLEN  DS    F                   LEN OF CCRT REQ 20 HEX      @Y30LB02 20200003
CCRTOPC  DS    XL1                 COPY CART OPCODE 28 HEX     @Y30LB02 20250003
CCRTRES1 DS    XL1                 1-BYTE RESERVED FIELD       @Y30LB02 20300003
CCRTFLG  DS    XL2                 2-BYTE FLAGS FIELD          @Y30LB02 20350003
CCRTVOL  DS    CL6                 6-BYTE VOLID FIELD          @Y30LB02 20400003
CCRTASID DS    XL2                 2-BYTE ASID FIELD           @Y30LB02 20450003
CCRTECB  DS    A                   4-BYTE ECB FIELD            @Y30LB02 20500003
CCRTCSN  DS    CL12                12-BYTE CSN FIELD           @Y30LB02 20550003
         MEXIT                                                 @Y30LB02 20600003
.*                                                             @Y30LB02 20650003
.COPYV   ANOP                                                  @Y30LB02 20700003
         AIF   ('&MF(2)' EQ 'MAP').LISTDS2  DSECT REQUESTED?   @Y30LB02 20750003
*  MACMEAN  MSSC COPY VOLUME MACRO--INITIALIZED LIST FORM      @Y30LB02 20800003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 20850003
&SYMBOL  DS    0F                                              @Y30LB02 20900003
CVOLLEN  DC    F'40'               LENGTH OF CVOL REQ BLK      @Y30LB02 20950003
CVOLOPC  DC    XL1'2A'             COPY VOLUME OPCODE          @Y30LB02 21000003
CVOLRES1 DC    XL1'00'             1-BYTE RESERVED AREA        @Y30LB02 21050003
CVOLFLG  DC    XL2'0000'           2-BYTE FLAGS AREA-ZERO      @Y30LB02 21100003
CVOLVOL  DC    XL6'0000'           6 BYTE VOLID AREA           @Y30LB02 21150003
CVOLASID DC    XL2'0000'           2-BYTE ASID AREA            @Y30LB02 21200003
CVOLECB  DC    XL4'00000000'       4-BYTE ECB AREA             @Y30LB02 21250003
CVOLCSN  DC    XL12'000000'        12-BYTE CSN AREA            @Y30LB02 21300003
CVOLRUA  DC    XL2'0000'           2-BYTE RUA AREA             @Y30LB02 21350003
CVOLRES2 DC    XL2'0000'           2-BYTE RESERVED AREA        @Y30LB02 21400003
CVOLVEXT DC    XL4'00000000'       4-BYTE VVICEXT AREA         @Y30LB02 21450003
         MEXIT                                                 @Y30LB02 21500003
.*                                                             @Y30LB02 21550003
.LISTDS2 ANOP                                                  @Y30LB02 21600003
*  MACMEAN  MSSC COPY VOLUME MACRO--UNINITIALIZED LIST FORM    @Y30LB02 21650003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 21700003
ICBCOVC1 DSECT                                                 @Y30LB02 21750003
CVOLLEN  DS    F                   LEN CVOL REQ BLK 28 HEX     @Y30LB02 21800003
CVOLOPC  DS    XL1                 COPY VOL OPCODE 2A HEX      @Y30LB02 21850003
CVOLRES1 DS    XL1                 1-BYTE RESERVED FIELD       @Y30LB02 21900003
CVOLFLG  DS    XL2                 2-BYTE FLAGS FIELD-ZERO     @Y30LB02 21950003
CVOLVOL  DS    CL6                 6 BYTE VOLID FIELD          @Y30LB02 22000003
CVOLASID DS    XL2                 2-BYTE ASID FIELD           @Y30LB02 22050003
CVOLECB  DS    A                   4-BYTE ECB ADDR             @Y30LB02 22100003
CVOLCSN  DS    CL12                12-BYTE CSN FIELD           @Y30LB02 22150003
CVOLRUA  DS    XL2                 2-BYTE RUA FIELD            @Y30LB02 22200003
CVOLRES2 DS    XL2                 2-BYTE RESERVED FIELD       @Y30LB02 22250003
CVOLVEXT DS    A                   4-BYTE VVICEXT FIELD        @Y30LB02 22300003
         MEXIT                                                 @Y30LB02 22350003
.*       PROCESSING OF THE 'EXECUTE' MACRO FORM                @Y30LB02 22400003
.*                                                             @Y30LB02 22450003
.EFORM   ANOP                                                  @Y30LB02 22500003
         AIF   (N'&MF EQ 2).PARMOK  LIST NAME MUST BE SPEC-    @Y30LB02 22550003
.*                                 FIED, OTHERWISE ERROR.      @Y30LB02 22600003
         MNOTE 12,'  ICB613I - MISSING REQ BLK NAME OR MORE '  @Y30LB02 22650003
         MNOTE 12,'  THAN 2 SUBPARAMETERS FOR MF '             @Y30LB02 22700003
&ERSW    SETB  1                                               @Y30LB02 22750003
         AGO   .PROCES                                         @Y30LB02 22800003
.*                                                             @Y30LB02 22850003
.PARMOK  ANOP                                                  @Y30LB02 22900003
*  MACMEAN  MSSC COPY VOLUME/CARTRIDGE MACRO--EXECUTE FORM     @Y30LB02 22950003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 23000003
&SYMBOL  IHBINNRA &MF(2)           LD ADDR OF REQUEST BLK      @Y30LB02 23050003
.*                                 USING IHBINNRA MACRO        @Y30LB02 23100003
         AIF   ('&TYPE' EQ 'CVOL').CVOL1     TYPE COPYV?       @Y30LB02 23150003
         LA    0,32                   LD LENGTH OF CCRT        @Y30LB02 23200003
         ST    0,0(1)                 STORE LENGTH             @Y30LB02 23250003
         MVI   0,X'28'                LOAD CCRT OPCODE         @Y30LB02 23300003
         AGO   .PROCES                                         @Y30LB02 23350003
.*                                                             @Y30LB02 23400003
.CVOL1   ANOP                                                  @Y30LB02 23450003
         LA    0,40                   LD LENG OF CVOL REQ      @Y30LB02 23500003
         ST    0,0(1)                 STORE LENGTH             @Y30LB02 23550003
         MVI   0,X'2A'                LOAD CVOL OPCODE         @Y30LB02 23600003
         AGO   .PROCES                                         @Y30LB02 23650003
.*                                                             @Y30LB02 23700003
.*       PROCESSING OF 'STANDARD' MACRO FORM                   @Y30LB02 23750003
.*                                                             @Y30LB02 23800003
.*                                                             @Y30LB02 23850003
.SFORM   AIF   ('&FLAGS' NE '').CKECB       FLAGS SPECIFIED?   @Y30LB02 23900003
         MNOTE 12,'  ICB607I - FLAGS MUST BE SPECIFIED '       @Y30LB02 23950003
         MNOTE 12,'  FOR STANDARD FORM MACRO '                 @Y30LB02 24000003
         AGO   .FINISH                                         @Y30LB02 24050003
.CKECB   AIF   ('&ECB' NE '').CKRUA        ECB SPECIFIED?      @Y30LB02 24100003
         MNOTE 12,'  ICB605I - ECB MUST BE SPECIFIED '         @Y30LB02 24150003
         MNOTE 12,'  FOR STANDARD FORM MACRO '                 @Y30LB02 24200003
         AGO   .FINISH                                         @Y30LB02 24250003
.CKRUA   AIF   ('&TYPE' EQ 'CCRT').CKVOLD   BRCH IF CCRT       @Y30LB02 24300003
         AIF   ('&RUA' NE '').SFORM1        RUA SPECIFIED?     @Y30LB02 24350003
         MNOTE 12,'  ICB616I - RUA MUST BE SPECIFIED FOR '     @Y30LB02 24400003
         MNOTE 12,'  STANDARD FORM MACRO '                     @Y30LB02 24450003
         AGO   .FINISH                                         @Y30LB02 24500003
.CKVOLD  AIF   ('&VOLID' NE '').SFORM1     VOLID SPECIFIED?    @Y30LB02 24550003
         MNOTE 12,'  ICB610I - VOLID MUST BE SPECIFIED FOR '   @Y30LB02 24600003
         MNOTE 12,'  STANDARD FORM MACRO '                     @Y30LB02 24650003
         AGO   .FINISH                                         @Y30LB02 24700003
.SFORM1  ANOP                                                  @Y30LB02 24750003
*  MACMEAN  MSSC COPY VOLUME/CARTRIDGE MACRO--STANDARD FORM    @Y30LB02 24800003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 24850003
         CNOP  0,4                                             @Y30LB02 24900003
&SYMBOL  BAL   1,&LBL              BRCH AROUND REQ BLK         @Y30LB02 24950003
         AIF   ('&TYPE' EQ 'CVOL').CVOL2           COPYVOL?    @Y30LB02 25000003
CCRTLEN  DC    A(&LBL-*)           CCRT LENGTH FIELD           @Y30LB02 25050003
CCRTOPC  DC    XL1'28'             COPY CARTRIDGE OPCODE       @Y30LB02 25100003
CCRTRES1 DC    XL1'00'             1-BYTE RESERVED AREA        @Y30LB02 25150003
CCRTFLG  DC    XL2'0000'           2-BYTE FLAGS AREA           @Y30LB02 25200003
CCRTVOL  DC    XL6'0000'           6-BYTE VOLID AREA           @Y30LB02 25250003
CCRTASID DC    XL2'0000'           2-BYTE ASID AREA            @Y30LB02 25300003
CCRTECB  DC    XL4'00000000'       4-BYTE AREA FOR ECB         @Y30LB02 25350003
CCRTCSN  DC    XL12'0000000000'    12-BYTE CSN AREA            @Y30LB02 25400003
&LBL     EQU   *                                               @Y30LB02 25450003
         AGO   .PROCES                                         @Y30LB02 25500003
.*                                                             @Y30LB02 25550003
.CVOL2   ANOP                                                  @Y30LB02 25600003
CVOLLEN  DC    A(&LBL-*)           CVOL LENGTH FIELD           @Y30LB02 25650003
CVOLOPC  DC    XL1'2A'             COPY VOLUME OPCODE          @Y30LB02 25700003
CVOLRES1 DC    XL1'00'             1-BYTE RESERVED AREA        @Y30LB02 25750003
CVOLFLG  DC    XL2'0000'           2-BYTE FLAGS AREA-ZERO      @Y30LB02 25800003
CVOLVOL  DC    XL6'0000'           6 BYTE VOLID AREA           @Y30LB02 25850003
CVOLASID DC    XL2'0000'           2-BYTE ASID AREA            @Y30LB02 25900003
CVOLECB  DC    XL4'00000000'       4-BYTE ECB AREA             @Y30LB02 25950003
CVOLCSN  DC    XL12'000000'        12-BYTE CSN AREA            @Y30LB02 26000003
CVOLRUA  DC    XL2'0000'           2-BYTE RUA AREA             @Y30LB02 26050003
CVOLRES2 DC    XL2'0000'           2-BYTE RESERVED AREA        @Y30LB02 26100003
CVOLVEXT DC    XL4'0000'           2-BYTE VVICEXT AREA         @Y30LB02 26150003
&LBL     EQU   *                                               @Y30LB02 26200003
.*                                                             @Y30LB02 26250003
.*       PROCESS REQUEST BLOCK FOR STANDARD & EXECUTE FORMS    @Y30LB02 26300003
.*                                                             @Y30LB02 26350003
.PROCES  AIF   (&ERSW).FINISH                                  @Y30LB02 26400003
         AIF   ('&FLAGS' EQ '').VOLID       FLAGS SPECIFIED?   @Y30LB02 26450003
         AIF   ('&FLAGS'(1,1) EQ '(').REGF FLAGS IN REGFORM?   @Y30LB02 26500003
         MVC   6(2,1),&FLAGS          MOVE FLAGS TO REQ BLK    @Y30LB02 26550003
         AGO   .VOLID                 BR TO CHECK FOR VOLID    @Y30LB02 26600003
.*                                                             @Y30LB02 26650003
.REGF    ANOP                                                  @Y30LB02 26700003
         MVC   6(2,1),0(&FLAGS(1))    REG-FORM-STORE FLAGS     @Y30LB02 26750003
.*                                                             @Y30LB02 26800003
.VOLID   AIF   ('&VOLID' EQ '').ECB          VOLID SPECIFIED?  @Y30LB02 26850003
         AIF   ('&VOLID'(1,1) EQ '(').SREG   REG-FORM?         @Y30LB02 26900003
         MVC   8(6,1),&VOLID          MOVE VOLID TO REQBLK     @Y30LB02 26950003
         AGO   .ECB                                            @Y30LB02 27000003
.*                                                             @Y30LB02 27050003
.SREG    ANOP                                                  @Y30LB02 27100003
         MVC   8(6,1),0(&VOLID(1))    REG-FORM--STORE VOLID    @Y30LB02 27150003
.*                                                             @Y30LB02 27200003
.ECB     AIF   ('&ECB' EQ '').CSN          ECB SPECIFIED?      @Y30LB02 27250003
         AIF   ('&ECB'(1,1) EQ '(').EREG   REG-FORM?           @Y30LB02 27300003
         LA    15,&ECB                LOAD R15 WITH ADDR       @Y30LB02 27350003
         ST    15,16(1)               ST ADDR IN ECB FIELD     @Y30LB02 27400003
         AGO   .CSN                                            @Y30LB02 27450003
.*                                                             @Y30LB02 27500003
.EREG    ANOP                                                  @Y30LB02 27550003
         ST    &ECB,16(1)             REG-FORM--STORE ECB      @Y30LB02 27600003
.CSN     AIF   ('&CSN' EQ '').RUA  IS CSN SPECIFIED            @Y30LB02 27650003
         AIF   ('&CSN'(1,1) EQ '(').CREG    REG-FORM           @Y30LB02 27700003
         MVC   20(12,1),&CSN          MOVE CSN TO REQBLK       @Y30LB02 27750003
         AIF   ('&TYPE' EQ 'CVOL').RUA     BRCH TO CHECK RUA   @Y30LB02 27800003
         AGO   .INVOKE                                         @Y30LB02 27850003
.*                                                             @Y30LB02 27900003
.CREG    ANOP                                                  @Y30LB02 27950003
         MVC   20(12,1),0(&CSN(1))    REG-FORM--STORE CSN      @Y30LB02 28000003
         AIF   ('&TYPE' EQ 'CVOL').RUA     BRCH TO CHECK RUA   @Y30LB02 28050003
         AGO   .INVOKE                                         @Y30LB02 28100003
.*                                                             @Y30LB02 28150003
.*                                                             @Y30LB02 28200003
.RUA     AIF   ('&TYPE' EQ 'CCRT').INVOKE    BR TO SVC IF CCRT @Y30LB02 28250003
         AIF   ('&RUA' EQ '').VEXT           BRCH IF RUA NULL  @Y30LB02 28300003
         AIF   ('&RUA'(1,1) EQ '(').UREG     REGISTER FORM?    @Y30LB02 28350003
         MVC   32(2,1),&RUA           MOVE RUA TO REQ BLK      @Y30LB02 28400003
         AGO   .VEXT                                           @Y30LB02 28450003
.*                                                             @Y30LB02 28500003
.UREG    ANOP                                                  @Y30LB02 28550003
         MVC   32(2,1),0(&RUA(1))     REG-FORM, STORE RUA      @Y30LB02 28600003
.*                                                             @Y30LB02 28650003
.VEXT    AIF   ('&VVICEXT' EQ '').INVOKE   VVICEXT SPECIFIED?  @Y30LB02 28700003
         AIF   ('&VVICEXT'(1,1) EQ '(').VEREG    REG FORM?     @Y30LB02 28750003
         LA    15,&VVICEXT            LOAD ADDRESS IN R15      @Y30LB02 28800003
         ST    15,36(1)               STORE ADDRESS            @Y30LB02 28850003
         AGO   .INVOKE                                         @Y30LB02 28900003
.*                                                             @Y30LB02 28950003
.VEREG   ANOP                                                  @Y30LB02 29000003
         ST    &VVICEXT,36(1)         REG-FORM, STORE VVICEXT  @Y30LB02 29050003
.*                                                             @Y30LB02 29100003
.INVOKE  ANOP                                                  @Y30LB02 29150003
         SVC   126                    INVOKE SVC               @Y30LB02 29200003
.FINISH  MEND                                                  @Y30LB02 29250003
**/                                                                     29300003
*   ICBCOVC:  MACRO KEYS(MF,TYPE,FLAGS,VOLID,RUA,ECB,CSN,               29350003
*                     VVICEXT);                            /*@Y30LB02*/ 29400003
*/*                                                          @Y30LB02*/ 29450003
*/*            EXTERNAL DECLARES                             @Y30LB02*/ 29500003
*        DCL CVTESTR FIXED EXT;  /*INVOCATION COUNTER        @Y30LB02*/ 29550003
*        DCL CVOLTEST FIXED EXT; /*CTR FOR STANDARD FORM     @Y30LB02*/ 29600003
*        DCL CCRTTEST FIXED EXT;  /*CTR FOR  CCRT S-FORM     @Y30LB02*/ 29650003
*/*                                                          @Y30LB02*/ 29700003
*/*                                                          @Y30LB02*/ 29750003
*/*            INTERNAL DECLARES                             @Y30LB02*/ 29800003
*/*                                                          @Y30LB02*/ 29850003
*   DCL CTR        FIXED;        /*CTR FOR LIST PARAMETERS   @Y30LB02*/ 29900003
*   DCL ERSW       FIXED;        /*ERROR COND SWITCH         @Y30LB02*/ 29950003
*   DCL CVOLCOD    CHAR;         /*COPYV OPCODE              @Y30LB02*/ 30000003
*   DCL CCRTCOD    CHAR;         /*COPYC OPCODE              @Y30LB02*/ 30050003
*   DCL RETCODE    FIXED;        /*RETURN CODE AREA          @Y30LB02*/ 30100003
*   DCL CVLEN      CHAR;         /*LENGTH OF CVOL REQ BLOCK  @Y30LB02*/ 30150003
*   DCL CCLEN      CHAR;         /*LENGTH OF CCRT REQ BLOCK  @Y30LB02*/ 30200003
*        CVOLCOD='2A';           /*COPY VOLUME OPCODE        @Y30LB02*/ 30250003
*        CCRTCOD='28';           /*COPY CARTRIDGE OPCODE     @Y30LB02*/ 30300003
*        RETCODE=0;              /*INITIALIZE RETURN CODE    @Y30LB02*/ 30350003
*        CCLEN='20';             /*COPY CARTRIDGE LENGTH     @Y30LB02*/ 30400003
*        ERSW = 0;               /*INITIALIZE ERROR SWITCH   @Y30LB02*/ 30450003
*        CVLEN='28';             /*COPY VOLUME LENGTH        @Y30LB02*/ 30500003
*        CTR = 0;                /*INITIALIZE PARM COUNTER   @Y30LB02*/ 30550003
*/*                                                          @Y30LB02*/ 30600003
*/*            CHECK FOR VALID TYPE SPECIFICATION            @Y30LB02*/ 30650003
*/*                                                          @Y30LB02*/ 30700003
*   IF TYPE='' THEN              /*TYPE SPECIFIED?           @Y30LB02*/ 30750003
*     DO;                        /*NO,PRINT ERROR MESSAGE    @Y30LB02*/ 30800003
*        ERSW=1;                 /*SET ERROR SWITCH          @Y30LB02*/ 30850003
*        ANS MSG('  ICB600I - TYPE MUST BE SPECIFIED')SKIP;/*@Y30LB02*/ 30900003
*        RETCODE=12;             /*SET RETURN CODE           @Y30LB02*/ 30950003
*        GO TO FINISH;           /*BRANCH,END PROCESSING     @Y30LB02*/ 31000003
*     END;                       /*                          @Y30LB02*/ 31050003
*   IF ERSW=1 THEN               /*IS ERROR SWITCH SET       @Y30LB02*/ 31100003
*        GO TO FINISH;           /*YES,BRCH,END PROCESSING   @Y30LB02*/ 31150003
*   IF TYPE(1)='CVOL' THEN       /*TYPE COPY VOL?            @Y30LB02*/ 31200003
*        GO TO START;            /*VALID TYPE,BRANCH         @Y30LB02*/ 31250003
*   IF TYPE(1) = 'CCRT' THEN     /*TYPE COPY CART?           @Y30LB02*/ 31300003
*        GO TO START;            /*VALID TYPE,CONTINUE       @Y30LB02*/ 31350003
*/*                                                          @Y30LB02*/ 31400003
*/*      INVALID 'TYPE' WILL CREATE THE FOLLOWING ERR MSGS   @Y30LB02*/ 31450003
*/*                                                          @Y30LB02*/ 31500003
*   ERSW=1;                       /*SET ERROR SWITCH         @Y30LB02*/ 31550003
*   ANS MSG('  ICB601I - TYPE IS INCORRECTLY'||                         31600003
*           ' SPECIFIED')SKIP;                             /*@Y30LB02*/ 31650003
*   RETCODE=12;               /*SET RETURN CODE TO 12        @Y30LB02*/ 31700003
*   IF ERSW=1 THEN            /*CHECK ERROR SWITCH           @Y30LB02*/ 31750003
*   GO TO FINISH;             /*IF SET,BRCH TO END           @Y30LB02*/ 31800003
*/*                                                          @Y30LB02*/ 31850003
*START:                                                                 31900003
*     IF CVTESTR = 0 THEN    /*REG 1 DECLARED?               @Y30LB02*/ 31950003
*      DO;                   /*NO,DECLARE IT                 @Y30LB02*/ 32000003
*        ANS('DCL CVOLR1 REG(1) PTR;/*DECLARE R1 - '||                  32050003
*        'ADDRESS OF REQUEST BLOCK @Y30LB02*/')SKIP;                    32100003
*        CVTESTR=1;          /*INCREM REG COUNTER            @Y30LB02*/ 32150003
*      END;                  /*                              @Y30LB02*/ 32200003
*   IF MF(1) ^= 'L' THEN     /*LIST FORM REQUEST?            @Y30LB02*/ 32250003
*        GO TO CKFORM;       /*NO,BRCH,CK FOR OTHER FORM     @Y30LB02*/ 32300003
*   IF MF(2) ^= '' THEN      /*LIST NAME SPECIFIED?          @Y30LB02*/ 32350003
*        GO TO LISTFORM;     /*YES,BRCH,PROCESS REQUEST      @Y30LB02*/ 32400003
*   ERSW=1;                  /*NO,SET ERROR SWITCH           @Y30LB02*/ 32450003
*   ANS MSG('  ICB602I - A NAME FOR THE '||                             32500003
*     'REQUEST BLOCK MUST BE SPECIFIED IN MF(2)')SKIP;     /*@Y30LB02*/ 32550003
*   RETCODE=12;             /*SET RETURN CODE TO 12          @Y30LB02*/ 32600003
*   IF ERSW=1 THEN          /*ERROR SWITCH SET?              @Y30LB02*/ 32650003
*   GO TO FINISH;           /*YES,BRCH,END PROCESSING        @Y30LB02*/ 32700003
*/*                                                          @Y30LB02*/ 32750003
*LISTFORM:                                                              32800003
*/********************************************************   @Y30LB02*/ 32850003
*/*  CHECK FOR ILLEGAL PARAMETERS AND PRINT OUT DECLARES     @Y30LB02*/ 32900003
*/********************************************************   @Y30LB02*/ 32950003
*   IF FLAGS ^= '' THEN     /*FLAGS PARAMETER SPECIFIED?     @Y30LB02*/ 33000003
*        CTR = CTR + 1;     /*YES,INCREMENT COUNTER          @Y30LB02*/ 33050003
*   IF VOLID ^= '' THEN     /*VOLID PARAMETER SPECIFIED?     @Y30LB02*/ 33100003
*        CTR = CTR + 1;     /*YES,INCREMENT COUNTER          @Y30LB02*/ 33150003
*   IF RUA ^= '' THEN       /*RUA SPECIFIED?                 @Y30LB02*/ 33200003
*        CTR = CTR + 1;     /*YES,INCREMENT COUNTER          @Y30LB02*/ 33250003
*   IF ECB ^= '' THEN       /*ECB PARAMETER SPECIFIED?       @Y30LB02*/ 33300003
*        CTR = CTR + 1;     /*YES,INCREMENT COUNTER          @Y30LB02*/ 33350003
*   IF CSN ^= '' THEN       /*CSN PARAMETER SPECIFIED?       @Y30LB02*/ 33400003
*        CTR = CTR + 1;     /*YES INCREMENT COUNTER          @Y30LB02*/ 33450003
*   IF VVICEXT ^= '' THEN   /*VVICEXT SPECIFIED?             @Y30LB02*/ 33500003
*        CTR = CTR + 1;     /*YES,INCREMENT COUNTER          @Y30LB02*/ 33550003
*   IF CTR > 0 THEN         /*IS COUNTER GT ZERO?            @Y30LB02*/ 33600003
*     DO;                   /*YES,PRINT WARNING MSG          @Y30LB02*/ 33650003
*        RETCODE=4;         /*SET RETURN CODE TO 4           @Y30LB02*/ 33700003
*        ANS MSG('  ICB603I - WARNING-ONLY MF AND '||                   33750003
*             'TYPE PARAMETERS ARE VALID FOR LIST '||                   33800003
*             'FORM ')SKIP;                                /*@Y30LB02*/ 33850003
*     END;                  /*                               @Y30LB02*/ 33900003
*/*                                                          @Y30LB02*/ 33950003
*    IF MF(3) ^= '' THEN    /*PLS ATTRIBUTE SPECIFIED?       @Y30LB02*/ 34000003
*       GO TO ATTRLST;      /*YES,BRANCH                     @Y30LB02*/ 34050003
*/*                                                          @Y30LB02*/ 34100003
*   IF TYPE(1)='CVOL' THEN   /*TYPE CVOL?                    @Y30LB02*/ 34150003
*     DO;                    /*PRINT CVOL LIST FORM          @Y30LB02*/ 34200003
*        ANS('/*******************************************'||           34250003
*            '************** @Y30LB02*/')SKIP;                          34300003
*        ANS('/*    MACMEAN  MSSC COPY VOLUME MACRO       '||           34350003
*            '               @Y30LB02*/')SKIP;                          34400003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           34450003
*            '               @Y30LB02*/')SKIP;                          34500003
*        ANS('/*THIS IS THE INITIALIZED LIST FORM         '||           34550003
*            '               @Y30LB02*/')SKIP;                          34600003
*        ANS('/*******************************************'||           34650003
*            '************** @Y30LB02*/')SKIP;                          34700003
*        ANS('DCL 1 ' ||MF(2)|| '  STATIC LOCAL,'||                     34750003
*        ' /*COPY VOLUME REQUEST BLOCK @Y30LB02*/')SKIP;                34800003
*        ANS('    2  CVOLLEN  FIXED(31)INIT('||QUOTE                    34850003
*        ('28')||'X),/*LENGTH OF REQBLK @Y30LB02*/')SKIP;               34900003
*        ANS('    2  CVOLOPCD CHAR(1)INIT('||QUOTE('2A')||              34950003
*        'X),/*COPY VOLUME OPCODE @Y30LB02*/')SKIP;                     35000003
*        ANS('    2  CVOLRES1 CHAR(1)INIT('||QUOTE('00')||              35050003
*        'X), /*ONE BYTE OF ZERO @Y30LB02*/')SKIP;                      35100003
*        ANS('    2  CVOLFLG BIT(16)INIT('||QUOTE                       35150003
*        ('0000000000000000')||'B), /*FLAGS AREA @Y30LB02*/')SKIP;      35200003
*        ANS('     3  CVODASCR  BIT(1), /*DASD TO '||                   35250003
*        'CARTRIDGE ATTRIBUTE @Y30LB02*/')SKIP;                         35300003
*        ANS('     3  CVOCRDAS  BIT(1),/*CARTRIDGE '||                  35350003
*        'TO DASD ATTRIBUTE @Y30LB02*/')SKIP;                           35400003
*        ANS('     3  CVOCRCR  BIT(1),/*CARTRIDGE '||                   35450003
*        'TO CARTRIDGE ATTRIBUTE TRANS VOL @Y30LB02*/')SKIP;            35500003
*        ANS('     3  CVOCRCRV BIT(1),/*CARTRIDGE '||                   35550003
*        'TO CARTRIDGE ATTRIBUTE VOL INV LIST @Y30LB02*/')SKIP;         35600003
*        ANS('     3  *      BIT(12),'||                                35650003
*        ' /*TWELVE BITS RESERVED @Y30LB02*/')SKIP;                     35700003
*        ANS('    2  CVOLID  CHAR(6) INIT('||QUOTE                      35750003
*        ('000000000000')||'X), /*VOLUME ID  @Y30LB02*/')SKIP;          35800003
*        ANS('    2  CVOLASID CHAR(2) INIT('||QUOTE                     35850003
*        ('0000')||'X),/*ASID AREA @Y30LB02*/')SKIP;                    35900003
*        ANS('    2  CVOLECB  FIXED(31) INIT(0),'||                     35950003
*        ' /*EVENT CONTROL BLOCK  @Y30LB02*/')SKIP;                     36000003
*        ANS('    2  CVOLCSN CHAR(12),/*CSN AREA @Y30LB02*/')SKIP;      36050003
*        ANS('       3  *(12) CHAR(1)INIT((12)'||QUOTE                  36100003
*        ('00')||'X),/*INIT CSN AREA @Y30LB02*/')SKIP;                  36150003
*        ANS('    2  CVOLRUA  FIXED(15) INIT(0),'||                     36200003
*        ' /*REAL UNIT ADDRESS  @Y30LB02*/')SKIP;                       36250003
*        ANS('    2  CVOLRES2 CHAR(2) INIT('||QUOTE                     36300003
*        ('0000')||'X),/*RESERVED AREA @Y30LB02*/')SKIP;                36350003
*        ANS('    2  CVOLVEXT FIXED(31) INIT(0);'||                     36400003
*        '/*MSVC EXTENSION AREA @Y30LB02*/')SKIP;                       36450003
*        GO TO FINISH;        /*BRANCH TO END                @Y30LB02*/ 36500003
*     END;                    /*                             @Y30LB02*/ 36550003
*/*                                                          @Y30LB02*/ 36600003
*  ELSE                       /*COPY CART REQUEST            @Y30LB02*/ 36650003
*     DO;                     /*PRINT COPY CART REQBLK       @Y30LB02*/ 36700003
*        ANS('/*******************************************'||           36750003
*            '************** @Y30LB02*/')SKIP;                          36800003
*        ANS('/*    MACMEAN  MSSC COPY CARTRIDGE MACRO    '||           36850003
*            '               @Y30LB02*/')SKIP;                          36900003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           36950003
*            '               @Y30LB02*/')SKIP;                          37000003
*        ANS('/*THIS IS THE INITIALIZED LIST FORM         '||           37050003
*            '               @Y30LB02*/')SKIP;                          37100003
*        ANS('/*******************************************'||           37150003
*           '************** @Y30LB02*/')SKIP;                           37200003
*        ANS('DCL 1 ' ||MF(2)|| '  STATIC LOCAL,'||                     37250003
*        ' /*COPY CARTRIDGE REQUEST BLOCK @Y30LB02*/')SKIP;             37300003
*        ANS('    2  CCRTLEN  FIXED(31)INIT('||QUOTE('20')||            37350003
*        'X),/*LENGTH OF REQUEST BLOCK @Y30LB02*/')SKIP;                37400003
*        ANS('    2  CCRTOPCD CHAR(1)INIT('||QUOTE('28')||              37450003
*        'X),/*COPY CARTRIDGE OPCODE @Y30LB02*/')SKIP;                  37500003
*        ANS('    2  CCRTRES1 CHAR(1)INIT('||QUOTE('00')||              37550003
*        'X), /*ONE BYTE OF ZERO @Y30LB02*/')SKIP;                      37600003
*        ANS('    2  CCRTFLG BIT(16)INIT('||QUOTE                       37650003
*        ('0000000000000000')||'B), /*FLAGS AREA @Y30LB02*/')SKIP;      37700003
*        ANS('     3  CCRTCRT1  BIT(1), /*CART 1 OF 2 '||               37750003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   37800003
*        ANS('     3  CCRTCRT2  BIT(1), /*CART 2 OF 2 '||               37850003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   37900003
*        ANS('     3  *      BIT(14),'||                                37950003
*        ' /*FOURTEEN BITS RESERVED @Y30LB02*/')SKIP;                   38000003
*        ANS('    2  CCRTVOL  CHAR(6) INIT('||QUOTE                     38050003
*        ('000000000000')||'X),/*VOLID AREA @Y30LB02*/')SKIP;           38100003
*        ANS('    2  CCRTASID CHAR(2) INIT('||QUOTE                     38150003
*        ('0000')||'X),/*ASID AREA @Y30LB02*/')SKIP;                    38200003
*        ANS('    2  CCRTECB  FIXED(31) INIT(0),'||                     38250003
*        ' /*EVENT CONTROL BLOCK  @Y30LB02*/')SKIP;                     38300003
*        ANS('    2  CCRTCSN CHAR(12),/*CSN AREA @Y30LB02*/')SKIP;      38350003
*        ANS('       3  *(12) CHAR(1)INIT((12)'||QUOTE                  38400003
*        ('00')||'X);/*INIT CSN AREA @Y30LB02*/')SKIP;                  38450003
*        GO TO FINISH;        /*BRANCH TO END                @Y30LB02*/ 38500003
*     END;                    /*                             @Y30LB02*/ 38550003
*ATTRLST:                                                               38600003
*/*                                                          @Y30LB02*/ 38650003
*   IF TYPE(1)='CVOL' THEN    /*COPY VOL REQUEST?            @Y30LB02*/ 38700003
*     DO;                     /*CVOL UNINIT REQUEST BLOCK    @Y30LB02*/ 38750003
*        ANS('/*******************************************'||           38800003
*            '************* @Y30LB02*/')SKIP;                           38850003
*        ANS('/*     MACMEAN  MSSC COPY VOLUME MACRO      '||           38900003
*            '              @Y30LB02*/')SKIP;                           38950003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           39000003
*            '              @Y30LB02*/')SKIP;                           39050003
*        ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '||           39100003
*            '              @Y30LB02*/')SKIP;                           39150003
*        ANS('/*******************************************'||           39200003
*            '************* @Y30LB02*/')SKIP;                           39250003
*        ANS('DCL 1 ' ||MF(2)||' '||MF(3)||','||                        39300003
*        ' /*COPY VOLUME REQUEST BLOCK @Y30LB02*/')SKIP;                39350003
*        ANS('    2  CVOLLEN  FIXED(31),/*LENGTH'||                     39400003
*        ' OF REQ BLOCK = 28 BYTES HEX @Y30LB02*/')SKIP;                39450003
*        ANS('    2  CVOLOPCD CHAR(1),'||                               39500003
*        '/*COPY VOLUME OPCODE = 2A HEX @Y30LB02*/')SKIP;               39550003
*        ANS('    2  CVOLRES1 CHAR(1),'||                               39600003
*        ' /*ONE BYTE OF ZERO @Y30LB02*/')SKIP;                         39650003
*        ANS('    2  CVOLFLG BIT(16),'||                                39700003
*        ' /*FLAGS AREA @Y30LB02*/')SKIP;                               39750003
*        ANS('     3  CVODASCR  BIT(1), /*DASD TO '||                   39800003
*        'CARTRIDGE ATTRIBUTE @Y30LB02*/')SKIP;                         39850003
*        ANS('     3  CVOCRDAS  BIT(1),/*CARTRIDGE '||                  39900003
*        'TO DASD ATTRIBUTE @Y30LB02*/')SKIP;                           39950003
*        ANS('     3  CVOCRCR  BIT(1),/*CARTRIDGE '||                   40000003
*        'TO CARTRIDGE ATTRIBUTE TRANS VOL @Y30LB02*/')SKIP;            40050003
*        ANS('     3  CVOCRCRV BIT(1),/*CARTRIDGE '||                   40100003
*        'TO CARTRIDGE ATTRIBUTE VOL INV LIST @Y30LB02*/')SKIP;         40150003
*        ANS('     3  *      BIT(12),'||                                40200003
*        ' /*THIRTEEN BITS RESERVED @Y30LB02*/')SKIP;                   40250003
*        ANS('    2  CVOLID  CHAR(6),'||                                40300003
*        ' /*VOLUME ID  @Y30LB02*/')SKIP;                               40350003
*        ANS('    2  CVOLASID CHAR(2) ,'||                              40400003
*        '/*ASID AREA @Y30LB02*/')SKIP;                                 40450003
*        ANS('    2  CVOLECB  FIXED(31) ,'||                            40500003
*        ' /*EVENT CONTROL BLOCK  @Y30LB02*/')SKIP;                     40550003
*        ANS('    2  CVOLCSN CHAR(12),/*CSN AREA @Y30LB02*/')SKIP;      40600003
*        ANS('    2  CVOLRUA  FIXED(15),'||                             40650003
*        ' /*REAL UNIT ADDRESS  @Y30LB02*/')SKIP;                       40700003
*        ANS('    2  CVOLRES2 CHAR(2) ,'||                              40750003
*        '/*RESERVED AREA @Y30LB02*/')SKIP;                             40800003
*        ANS('    2  CVOLVEXT  FIXED(31) ;'||                           40850003
*        ' /*MSVC EXTENTION AREA  @Y30LB02*/')SKIP;                     40900003
*        GO TO FINISH;        /*BRANCH TO END                @Y30LB02*/ 40950003
*     END;                    /*                             @Y30LB02*/ 41000003
*/*                                                          @Y30LB02*/ 41050003
*  ELSE                       /*COPY CARTRIDGE REQUEST       @Y30LB02*/ 41100003
*     DO;                     /*COPY CART REQ BLOCK          @Y30LB02*/ 41150003
*        ANS('/*******************************************'||           41200003
*            '************* @Y30LB02*/')SKIP;                           41250003
*        ANS('/*   MACMEAN  MSSC COPY CARTRIDGE MACRO     '||           41300003
*            '              @Y30LB02*/')SKIP;                           41350003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           41400003
*            '              @Y30LB02*/')SKIP;                           41450003
*        ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '||           41500003
*            '              @Y30LB02*/')SKIP;                           41550003
*        ANS('/*******************************************'||           41600003
*            '************* @Y30LB02*/')SKIP;                           41650003
*        ANS('DCL 1 ' ||MF(2)||' '||MF(3)||','||                        41700003
*        ' /*COPY CARTRIDGE REQUEST BLOCK @Y30LB02*/')SKIP;             41750003
*        ANS('    2  CCRTLEN  FIXED(31),/*LENGTH OF'||                  41800003
*        ' REQUEST BLOCK = 20 HEX @Y30LB02*/')SKIP;                     41850003
*        ANS('    2  CCRTOPCD CHAR(1),'||                               41900003
*        '/*COPY CARTRIDGE OPCODE = 28 HEX @Y30LB02*/')SKIP;            41950003
*        ANS('    2  CCRTRES1 CHAR(1),'||                               42000003
*        ' /*ONE BYTE OF ZERO @Y30LB02*/')SKIP;                         42050003
*        ANS('    2  CCRTFLG BIT(16),/*FLAGS AREA @Y30LB02*/')SKIP;     42100003
*        ANS('     3  CCRTCRT1  BIT(1), /*CART 1 OF 2 '||               42150003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   42200003
*        ANS('     3  CCRTCRT2  BIT(1), /*CART 2 OF 2 '||               42250003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   42300003
*        ANS('     3  *      BIT(14),'||                                42350003
*        ' /*FOURTEEN BITS RESERVED @Y30LB02*/')SKIP;                   42400003
*        ANS('    2  CCRTVOL  CHAR(6),'||                               42450003
*        '/*VOLID AREA @Y30LB02*/')SKIP;                                42500003
*        ANS('    2  CCRTASID CHAR(2),/*ASID AREA @Y30LB02*/')SKIP;     42550003
*        ANS('    2  CCRTECB  FIXED(31),'||                             42600003
*        ' /*EVENT CONTROL BLOCK  @Y30LB02*/')SKIP;                     42650003
*        ANS('    2  CCRTCSN CHAR(12);/*CSN AREA @Y30LB02*/')SKIP;      42700003
*        GO TO FINISH;        /*BRANCH TO END                @Y30LB02*/ 42750003
*     END;                    /*                             @Y30LB02*/ 42800003
*/*                                                        /*@Y30LB02*/ 42850003
*/*      CHECK FOR EXECUTE FORM SPECIFICATION              /*@Y30LB02*/ 42900003
*/*                                                          @Y30LB02*/ 42950003
*CKFORM:                                                                43000003
*   IF MF(1) ^= 'E' THEN       /*EXECUTE FORM SPECIFIED?     @Y30LB02*/ 43050003
*        GO TO SFORM;          /*NO,CK FOR STANDARD          @Y30LB02*/ 43100003
*   IF MF(2)='' THEN           /*2ND SUB-PARM SPECIFIED?     @Y30LB02*/ 43150003
*     DO;                      /*PRINT ERROR MESSAGE         @Y30LB02*/ 43200003
*        ANS MSG('  ICB612I - MF(2) MUST '||                            43250003
*             'CONTAIN REQ BLK NAME IF '||                              43300003
*             'EXEC MACRO FORM REQUESTED')SKIP;            /*@Y30LB02*/ 43350003
*        RETCODE=12;           /*SET ERROR RETURN CODE       @Y30LB02*/ 43400003
*        ERSW = 1;             /*SET ERROR SWITCH            @Y30LB02*/ 43450003
*        GO TO COMPROC;        /*BRANCH TO CK ERROR SWITCH   @Y30LB02*/ 43500003
*     END;                     /*                            @Y30LB02*/ 43550003
*/*                                                        /*@Y30LB02*/ 43600003
*   ANS('/*******************************************'||                43650003
*       '************* @Y30LB02*/')SKIP;                                43700003
*   ANS('/*MACMEAN  MSSC COPY VOLUME/CARTRIDGE MACRO '||                43750003
*       '              @Y30LB02*/')SKIP;                                43800003
*   ANS('/*VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00   '||                43850003
*       '              @Y30LB02*/')SKIP;                                43900003
*   ANS('/*THIS IS THE OUTPUT FOR THE EXECUTE FORM.  '||                43950003
*       '              @Y30LB02*/')SKIP;                                44000003
*   ANS('/*THE LIST FORM OF THIS MACRO SHOULD BE     '||                44050003
*       '              @Y30LB02*/')SKIP;                                44100003
*   ANS('/*INVOKED FIRST IN ORDER TO SET UP NECESSARY'||                44150003
*       '              @Y30LB02*/')SKIP;                                44200003
*   ANS('/*DECLARES.  IF THE COMPLETE ARGUMENT IS    '||                44250003
*       '              @Y30LB02*/')SKIP;                                44300003
*   ANS('/*SPECIFIED THE REQ BLOCK WILL BE ZEROED.   '||                44350003
*       '              @Y30LB02*/')SKIP;                                44400003
*   ANS('/*******************************************'||                44450003
*       '************* @Y30LB02*/')SKIP;                                44500003
*    IF MF(3) = 'COMPLETE' THEN   /*REQUEST TO ZERO BLOCK?   @Y30LB02*/ 44550003
*      DO;                     /*                            @Y30LB02*/ 44600003
*        ANS(' '||MF(2)||'='||MF(2)||'&&'||MF(2)||';'||                 44650003
*        '/*ZERO OUT REQUEST BLOCK @Y30LB02*/')SKIP;                    44700003
*      END;                    /*                            @Y30LB02*/ 44750003
*/*                                                          @Y30LB02*/ 44800003
*        ANS('RFY(CVOLR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;        44850003
*        ANS('CVOLR1=ADDR('||MF(2)||'); /*R1 PTR'||                     44900003
*        ' TO LIST  @Y30LB02*/')SKIP;                                   44950003
*        GO TO COMPROC;       /*BRANCH TO CK PARAMETERS      @Y30LB02*/ 45000003
*/*                                                          @Y30LB02*/ 45050003
*SFORM:                                                                 45100003
*   IF MF(1) ^= '' THEN       /* FORM STANDARD?              @Y30LB02*/ 45150003
*     DO;                     /*NO,PRINT ERROR MESSAGE       @Y30LB02*/ 45200003
*        ERSW = 1;            /*SET ERROR SWITCH             @Y30LB02*/ 45250003
*        RETCODE=12;          /*SET RETURN CODE              @Y30LB02*/ 45300003
*        ANS MSG('  ICB615I - INVALID MF PARAMETER '||                  45350003
*             'SPECIFIED, MUST BE L, E, OR NULL')SKIP;     /*@Y30LB02*/ 45400003
*        GO TO COMPROC;       /*BRANCH,CK ERROR SWITCH       @Y30LB02*/ 45450003
*     END;                    /*                             @Y30LB02*/ 45500003
*/*                                                          @Y30LB02*/ 45550003
*   IF FLAGS = '' THEN        /*FLAGS SPECIFIED?             @Y30LB02*/ 45600003
*     DO;                     /*NO,PROCESS ERROR MESSAGE     @Y30LB02*/ 45650003
*        ERSW=1;              /*SET THE ERROR SWITCH         @Y30LB02*/ 45700003
*        RETCODE=12;          /*SET RETURN CODE TO 12        @Y30LB02*/ 45750003
*        ANS MSG('  ICB607I - FLAGS MUST BE SPECIFIED '||               45800003
*        'FOR STANDARD FORM MACRO')SKIP;                   /*@Y30LB02*/ 45850003
*        GO TO COMPROC;       /*BRANCH TO CK ERROR SWITCH    @Y30LB02*/ 45900003
*     END;                    /*                             @Y30LB02*/ 45950003
*/*                                                          @Y30LB02*/ 46000003
*   IF VOLID = '' THEN        /*VOLID SPECIFIED?             @Y30LB02*/ 46050003
*    IF TYPE(1) = 'CCRT' THEN /*TYPE CCRT?                   @Y30LB02*/ 46100003
*     DO;                     /*NO,PRINT ERROR MESSAGE       @Y30LB02*/ 46150003
*        ERSW=1;              /*SET ERROR SWITCH             @Y30LB02*/ 46200003
*        RETCODE=12;          /*SET RETURN CODE              @Y30LB02*/ 46250003
*        ANS MSG('  ICB610I - VOLID MUST BE SPECIFIED '||               46300003
*        'FOR STANDARD FORM MACRO')SKIP;                   /*@Y30LB02*/ 46350003
*        GO TO COMPROC;       /*BRANCH TO CK ERROR SWITCH    @Y30LB02*/ 46400003
*     END;                    /*                             @Y30LB02*/ 46450003
*/*                                                          @Y30LB02*/ 46500003
*   IF RUA = '' THEN        /*VOLID SPECIFIED?               @Y30LB02*/ 46550003
*    IF TYPE(1) = 'CVOL' THEN  /*NO,COPY VOLUME?             @Y30LB02*/ 46600003
*     DO;                     /*YES,PRINT ERROR MESSAGE      @Y30LB02*/ 46650003
*        ERSW=1;              /*SET ERROR SWITCH             @Y30LB02*/ 46700003
*        RETCODE=12;          /*SET RETURN CODE              @Y30LB02*/ 46750003
*        ANS MSG('  ICB616I - RUA MUST BE SPECIFIED '||                 46800003
*        'FOR STANDARD FORM MACRO ')SKIP;                  /*@Y30LB02*/ 46850003
*        GO TO COMPROC;       /*BRANCH TO CK ERROR SWITCH    @Y30LB02*/ 46900003
*     END;                    /*                             @Y30LB02*/ 46950003
*   IF ECB = '' THEN          /*ECB SPECIFIED                @Y30LB02*/ 47000003
*     DO;                     /*NO,PRINT ERROR MESSAGE       @Y30LB02*/ 47050003
*        ERSW=1;              /*SET ERROR SWITCH             @Y30LB02*/ 47100003
*        RETCODE=12;          /*SET RETURN CODE              @Y30LB02*/ 47150003
*        ANS MSG('  ICB605I - ECB MUST BE SPECIFIED '||                 47200003
*        'FOR STANDARD FORM MACRO')SKIP;                   /*@Y30LB02*/ 47250003
*        GO TO COMPROC;        /*BRANCH TO CK ERROR SWITCH   @Y30LB02*/ 47300003
*     END;                     /*                            @Y30LB02*/ 47350003
*/*                                                          @Y30LB02*/ 47400003
*   IF TYPE(1)='CVOL' THEN     /*TYPE COPY VOLUME?           @Y30LB02*/ 47450003
*     IF CVOLTEST => 1 THEN    /*STD FORM INVOKED BEFORE?    @Y30LB02*/ 47500003
*      DO;                     /*YES,DON'T PRINT DECLARES    @Y30LB02*/ 47550003
*        ANS('/*******************************************'||           47600003
*            '************* @Y30LB02*/')SKIP;                           47650003
*        ANS('/*   MACMEAN  MSSC COPY VOLUME MACRO        '||           47700003
*            '              @Y30LB02*/')SKIP;                           47750003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           47800003
*            '              @Y30LB02*/')SKIP;                           47850003
*        ANS('/*THIS IS THE OUTPUT FOR A SECONDARY        '||           47900003
*            '              @Y30LB02*/')SKIP;                           47950003
*        ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '||           48000003
*            '              @Y30LB02*/')SKIP;                           48050003
*        ANS('/*******************************************'||           48100003
*            '************* @Y30LB02*/')SKIP;                           48150003
*        ANS('RFY(CVOLR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;        48200003
*        ANS('CVOLR1=ADDR(CVOLLEN);/*PTR TO REQBLK    @Y30LB02*/')SKIP; 48250003
*        GO TO COMPROC;       /*BRANCH TO CK PARAMETERS      @Y30LB02*/ 48300003
*      END;                   /*                             @Y30LB02*/ 48350003
*/*                                                        /*@Y30LB02*/ 48400003
*     IF TYPE(1) = 'CVOL' THEN  /*COPY VOLUME                @Y30LB02*/ 48450003
*      DO;                   /*PRINT DECLARES                @Y30LB02*/ 48500003
*        ANS('/*******************************************'||           48550003
*            '************** @Y30LB02*/')SKIP;                          48600003
*        ANS('/*    MACMEAN  MSSC COPY VOLUME MACRO       '||           48650003
*            '               @Y30LB02*/')SKIP;                          48700003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           48750003
*            '               @Y30LB02*/')SKIP;                          48800003
*        ANS('/*OUTPUT FOR THE STANDARD FORM MACRO        '||           48850003
*            '               @Y30LB02*/')SKIP;                          48900003
*        ANS('/*******************************************'||           48950003
*            '************** @Y30LB02*/')SKIP;                          49000003
*        ANS('RFY(CVOLR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;        49050003
*        ANS('CVOLR1=ADDR(CVOLLEN);/*PTR REQUEST BLK  @Y30LB02*/')SKIP; 49100003
*        ANS('DCL 1  CVOLLST  STATIC LOCAL,'||                          49150003
*        ' /*COPY VOLUME REQUEST BLOCK @Y30LB02*/')SKIP;                49200003
*        ANS('    2  CVOLLEN  FIXED(31)INIT('||QUOTE('28')||            49250003
*        'X),/*LENGTH OF REQUEST BLOCK @Y30LB02*/')SKIP;                49300003
*        ANS('    2  CVOLOPCD CHAR(1)INIT('||QUOTE('2A')||              49350003
*        'X),/*COPY VOLUME OPCODE @Y30LB02*/')SKIP;                     49400003
*        ANS('    2  CVOLRES1 CHAR(1)INIT('||QUOTE('00')||              49450003
*        'X), /*ONE BYTE OF ZERO @Y30LB02*/')SKIP;                      49500003
*        ANS('    2  CVOLFLG BIT(16)INIT('||QUOTE                       49550003
*        ('0000000000000000')||'B), /*FLAGS AREA @Y30LB02*/')SKIP;      49600003
*        ANS('     3  CVODASCR  BIT(1), /*DASD TO '||                   49650003
*        'CARTRIDGE ATTRIBUTE @Y30LB02*/')SKIP;                         49700003
*        ANS('     3  CVOCRDAS  BIT(1),/*CARTRIDGE '||                  49750003
*        'TO DASD ATTRIBUTE @Y30LB02*/')SKIP;                           49800003
*        ANS('     3  CVOCRCR  BIT(1),/*CARTRIDGE '||                   49850003
*        'TO CARTRIDGE ATTRIBUTE TRAN VOL @Y30LB02*/')SKIP;             49900003
*        ANS('     3  CVOCRCRV BIT(1),/*CARTRIDGE '||                   49950003
*        'TO CARTRIDGE ATTRIBUTE VOL INVL @Y30LB02*/')SKIP;             50000003
*        ANS('     3  *      BIT(12),'||                                50050003
*        ' /*TWELVE BITS RESERVED @Y30LB02*/')SKIP;                     50100003
*        ANS('    2  CVOLID  CHAR(6) INIT('||QUOTE                      50150003
*        ('000000000000')||'X), /*VOLUME ID  @Y30LB02*/')SKIP;          50200003
*        ANS('    2  CVOLASID CHAR(2) INIT('||QUOTE                     50250003
*        ('0000')||'X),/*ASID AREA @Y30LB02*/')SKIP;                    50300003
*        ANS('    2  CVOLECB  FIXED(31) INIT(0),'||                     50350003
*        ' /*EVENT CONTROL BLOCK  @Y30LB02*/')SKIP;                     50400003
*        ANS('    2  CVOLCSN CHAR(12),/*CSN AREA @Y30LB02*/')SKIP;      50450003
*        ANS('       3  *(12) CHAR(1)INIT((12)'||QUOTE                  50500003
*        ('00')||'X),/*INIT CSN AREA @Y30LB02*/')SKIP;                  50550003
*        ANS('    2  CVOLRUA  FIXED(15) INIT(0),'||                     50600003
*        ' /*REAL UNIT ADDRESS  @Y30LB02*/')SKIP;                       50650003
*        ANS('    2  CVOLRES2 CHAR(2) INIT('||QUOTE                     50700003
*        ('0000')||'X),/*RESERVED AREA @Y30LB02*/')SKIP;                50750003
*        ANS('    2  CVOLVEXT  FIXED(31) INIT(0);'||                    50800003
*        ' /*MSVC EXTENSION AREA  @Y30LB02*/')SKIP;                     50850003
*        CVOLTEST=CVOLTEST+1; /*INCREM COUNTER               @Y30LB02*/ 50900003
*        GO TO COMPROC;    /*BRANCH TO CK PARAMETERS         @Y30LB02*/ 50950003
*     END;                /*                                 @Y30LB02*/ 51000003
*/*                                                          @Y30LB02*/ 51050003
*   ELSE                     /*PROCESS COPY CARTRIDGE        @Y30LB02*/ 51100003
*     IF CCRTTEST => 1 THEN  /*STD FM INVOKED BEFORE?        @Y30LB02*/ 51150003
*      DO;                   /*YES,DON'T PRINT DCLS          @Y30LB02*/ 51200003
*        ANS('/*******************************************'||           51250003
*            '************** @Y30LB02*/')SKIP;                          51300003
*        ANS('/*   MACMEAN  MSSC COPY CARTRIDGE MACRO     '||           51350003
*            '               @Y30LB02*/')SKIP;                          51400003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           51450003
*            '               @Y30LB02*/')SKIP;                          51500003
*        ANS('/*THIS IS THE OUTPUT FOR A SECONDARY        '||           51550003
*            '               @Y30LB02*/')SKIP;                          51600003
*        ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '||           51650003
*            '               @Y30LB02*/')SKIP;                          51700003
*        ANS('/*******************************************'||           51750003
*            '************** @Y30LB02*/')SKIP;                          51800003
*        ANS('RFY(CVOLR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;        51850003
*        ANS('CVOLR1=ADDR(CCRTLEN);/*PTR TO BLOCK @Y30LB02*/')SKIP;     51900003
*        GO TO COMPROC;                                    /*@Y30LB02*/ 51950003
*      END;                                                /*@Y30LB02*/ 52000003
*     IF CCRTTEST=0 THEN      /*                             @Y30LB02*/ 52050003
*     DO;                                                  /*@Y30LB02*/ 52100003
*        ANS('/*******************************************'||           52150003
*            '************** @Y30LB02*/')SKIP;                          52200003
*        ANS('/*   MACMEAN  MSSC COPY CARTRIDGE MACRO     '||           52250003
*            '               @Y30LB02*/')SKIP;                          52300003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           52350003
*            '               @Y30LB02*/')SKIP;                          52400003
*        ANS('/*THIS IS THE OUTPUT FOR THE STANDARD FORM  '||           52450003
*            '               @Y30LB02*/')SKIP;                          52500003
*        ANS('/*******************************************'||           52550003
*            '************** @Y30LB02*/')SKIP;                          52600003
*        ANS('RFY(CVOLR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;        52650003
*        ANS('CVOLR1=ADDR(CCRTLEN);/*R1 PTR TO BLOCK @Y30LB02*/')SKIP;  52700003
*        ANS('DCL 1 CCRTLST  STATIC LOCAL,'||                           52750003
*        ' /*COPY CARTRIDGE REQUEST BLOCK @Y30LB02*/')SKIP;             52800003
*        ANS('    2  CCRTLEN  FIXED(31)INIT('||QUOTE                    52850003
*        ('20')||'X),/*LENGTH OF REQ BLOCK @Y30LB02*/')SKIP;            52900003
*        ANS('    2  CCRTOPCD CHAR(1)INIT('||QUOTE('28')||              52950003
*        'X),/*COPY CARTRIDGE OPCODE @Y30LB02*/')SKIP;                  53000003
*        ANS('    2  CCRTRES1 CHAR(1)INIT('||QUOTE('00')||              53050003
*        'X), /*ONE BYTE OF ZERO @Y30LB02*/')SKIP;                      53100003
*        ANS('    2  CCRTFLG BIT(16)INIT('||QUOTE                       53150003
*        ('0000000000000000')||'B), /*FLAGS AREA @Y30LB02*/')SKIP;      53200003
*        ANS('     3  CCRTCRT1  BIT(1), /*CART 1 OF 2 '||               53250003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   53300003
*        ANS('     3  CCRTCRT2  BIT(1), /*CART 2 OF 2 '||               53350003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   53400003
*        ANS('     3  *      BIT(14),'||                                53450003
*        ' /*FOURTEEN BITS RESERVED @Y30LB02*/')SKIP;                   53500003
*        ANS('    2  CCRTVOL  CHAR(6) INIT('||QUOTE                     53550003
*        ('000000000000')||'X),/*VOLID AREA @Y30LB02*/')SKIP;           53600003
*        ANS('    2  CCRTASID CHAR(2) INIT('||QUOTE                     53650003
*        ('0000')||'X),/*ASID AREA @Y30LB02*/')SKIP;                    53700003
*        ANS('    2  CCRTECB  FIXED(31) INIT(0),'||                     53750003
*        ' /*EVENT CONTROL BLOCK  @Y30LB02*/')SKIP;                     53800003
*        ANS('    2  CCRTCSN CHAR(12),/*CSN AREA @Y30LB02*/')SKIP;      53850003
*        ANS('       3  *(12) CHAR(1)INIT((12)'||QUOTE                  53900003
*        ('00')||'X);/*INIT CSN AREA @Y30LB02*/')SKIP;                  53950003
*        CCRTTEST=CCRTTEST+1; /*INCREMENT CTR                @Y30LB02*/ 54000003
*     END;                    /*                             @Y30LB02*/ 54050003
*/*                                                          @Y30LB02*/ 54100003
*COMPROC:                                                               54150003
*   IF ERSW =1 THEN          /*ERROR SWITCH SET?             @Y30LB02*/ 54200003
*     GO TO FINISH;          /*YES,BRANCH TO END             @Y30LB02*/ 54250003
*   IF TYPE(1)='CVOL' THEN  /*TYPE CVOL?                     @Y30LB02*/ 54300003
*    DO;                    /*OUTPUT LEN AND OPC             @Y30LB02*/ 54350003
*     ANS('CVOLLEN=' ||QUOTE(CVLEN)|| 'X; /*LENGTH OF '||               54400003
*      'COPY VOLUME REQUEST BLOCK @Y30LB02*/')SKIP;                     54450003
*     ANS('CVOLOPCD=' ||QUOTE(CVOLCOD)|| 'X;/*COPYVL '||                54500003
*     ' OPCODE @Y30LB02*/')SKIP;                                        54550003
*    END;                 /*                                 @Y30LB02*/ 54600003
*/*                                                          @Y30LB02*/ 54650003
*   ELSE                 /*CCRT LEN AND OPC                  @Y30LB02*/ 54700003
*    DO;                 /*                                  @Y30LB02*/ 54750003
*     ANS('CCRTLEN=' ||QUOTE(CCLEN)|| 'X; /*LENGTH'||                   54800003
*    ' COPY CARTRIDGE REQUEST BLOCK @Y30LB02*/')SKIP;                   54850003
*     ANS('CCRTOPCD=' ||QUOTE(CCRTCOD)|| 'X;/*OPCODE FOR'||             54900003
*    ' COPY CARTRIDGE LIST @Y30LB02*/')SKIP;                            54950003
*    END;                /*                                  @Y30LB02*/ 55000003
*/*                                                          @Y30LB02*/ 55050003
*   IF TYPE(1)='CVOL' THEN  /*TYPE COPY VOL?                 @Y30LB02*/ 55100003
*    IF FLAGS ^= '' THEN    /*FLAGS PARAMETER SPECIFIED      @Y30LB02*/ 55150003
*     ANS('CVOLFLG=' ||FLAGS|| '; /*VALUE OF FLAGS    @Y30LB02*/')SKIP; 55200003
*/*                                                          @Y30LB02*/ 55250003
*   IF TYPE(1)='CCRT' THEN    /*COPY CARTRIDGE?              @Y30LB02*/ 55300003
*    IF FLAGS ^= '' THEN      /*FLAGS SPECIFIED?             @Y30LB02*/ 55350003
*     ANS('CCRTFLG=' ||FLAGS|| '; /*VALUE OF FLAGS    @Y30LB02*/')SKIP; 55400003
*/*                                                          @Y30LB02*/ 55450003
*   IF VOLID ^= '' THEN      /*VOLID SPECIFIED?              @Y30LB02*/ 55500003
*    IF TYPE(1) = 'CVOL' THEN    /*COPY VOLUME?              @Y30LB02*/ 55550003
*     ANS('CVOLID=' ||VOLID|| '; /*VALUE OF VOLID @Y30LB02*/')SKIP;     55600003
*/*                                                          @Y30LB02*/ 55650003
*   IF VOLID ^= '' THEN     /*VOLID SPECIFIED?               @Y30LB02*/ 55700003
*    IF TYPE(1) = 'CCRT' THEN  /*COPY CARTRIDGE?             @Y30LB02*/ 55750003
*     ANS('CCRTVOL= ' ||VOLID|| ';/*VALUE OF VOLID    @Y30LB02*/')SKIP; 55800003
*/*                                                          @Y30LB02*/ 55850003
*   IF CSN ^= '' THEN    /*CSN SPECIFIED?                    @Y30LB02*/ 55900003
*    IF TYPE(1) = 'CVOL' THEN   /*TYPE COPY VOLUME?          @Y30LB02*/ 55950003
*     ANS('CVOLCSN=' ||CSN|| '; /*VALUE OF CSN @Y30LB02*/')SKIP;        56000003
*/*                                                          @Y30LB02*/ 56050003
*   IF CSN ^= '' THEN                                                   56100003
*    IF TYPE(1) = 'CCRT' THEN  /*COPY CARTRIDGE?             @Y30LB02*/ 56150003
*     ANS('CCRTCSN= ' ||CSN|| ';/*VALUE OF CSN @Y30LB02*/')SKIP;        56200003
*/*                                                          @Y30LB02*/ 56250003
*   IF ECB ^= ''  THEN      /*ECB PARAMETER SPECIFIED        @Y30LB02*/ 56300003
*     IF TYPE(1) = 'CCRT' THEN                                          56350003
*        ANS('CCRTECB=ADDR' ||ECB||';/*ADDRESS OF ECB'||                56400003
*        ' @Y30LB02*/')SKIP;                                            56450003
*/*                                                          @Y30LB02*/ 56500003
*   IF ECB ^= ''  THEN                                                  56550003
*     IF TYPE(1) = 'CVOL' THEN                                          56600003
*        ANS('CVOLECB=ADDR' ||ECB||';/*ADDRESS OF ECB'||                56650003
*        ' @Y30LB02*/')SKIP;                                            56700003
*/*                                                          @Y30LB02*/ 56750003
*   IF RUA ^= '' THEN      /*RUA PARAMETER SPECIFIED?        @Y30LB02*/ 56800003
*    IF TYPE(1) = 'CVOL' THEN                                           56850003
*     ANS('CVOLRUA=' ||RUA|| '; /*VALUE OF RUA @Y30LB02*/')SKIP;        56900003
*/*                                                          @Y30LB02*/ 56950003
*   IF VVICEXT ^= ''  THEN  /*MSVC EXTENSION?                @Y30LB02*/ 57000003
*     IF TYPE(1) = 'CVOL' THEN                                          57050003
*        ANS('CVOLVEXT=ADDR'||VVICEXT||';/*ADDRESS OF '||               57100003
*        'VVICEXT @Y30LB02*/')SKIP;                                     57150003
*/*                                                          @Y30LB02*/ 57200003
*     ANS('SVC (126);/*INVOKE THE SVC @Y30LB02*/')SKIP;                 57250003
*     ANS('RFY  CVOLR1 UNRSTD;/*UNRESTRICT REG 1 @Y30LB02*/')SKIP;      57300003
*/*                                                          @Y30LB02*/ 57350003
*FINISH:  RETURN CODE(RETCODE);                            /*@Y30LB02*/ 57400003
*         %END;                                            /*@Y30LB02*/ 57450003
