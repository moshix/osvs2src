* %/*  START OF SPECIFICATIONS****                             @Y30LB02 00050003
.*                                                             @Y30LB02 00100003
.*01   MODULE-NAME = ICBMCRT                                   @Y30LB02 00150003
.*                                                             @Y30LB02 00200003
.*01   DESCRIPTIVE-NAME = MOVE CARTRIDGE MACRO                 @Y30LB02 00250003
.*                                                             @Y30LB02 00300003
.*01   COPYRIGHT = NONE                                        @Y30LB02 00350003
.*                                                             @Y30LB02 00400003
.*01   STATUS = OS/VS1 RELEASE 4, OS/VS2 RELEASE 3             @Y30LB02 00450003
.*                                                             @Y30LB02 00500003
.*01   FUNCTION = REQUEST VIRTUAL VOLUMES BE MOVED FROM        @Y30LB02 00550003
.*                THE MSF                                      @Y30LB02 00600003
.*                                                             @Y30LB02 00650003
.*01   NOTES = AS FOLLOWS:                                     @Y30LB02 00700003
.*                                                             @Y30LB02 00750003
.*02     CODE = MACRO IS BILINGUALLY CODED                     @Y30LB02 00800003
.*                                                             @Y30LB02 00850003
.*02     RESTRICTIONS = THE FOLLOWING PREFIXES SHOULD BE       @Y30LB02 00900003
.*                      AVOIDED IN THE USER'S INVOCATION:      @Y30LB02 00950003
.*                      ICB AND MC                             @Y30LB02 01000003
.*                                                             @Y30LB02 01050003
.*02     REGISTER-CONVENTIONS = FOLLOWS NORMAL USE OF REGISTERS@Y30LB02 01100003
.*                              BY MACROS: R0,R1,R14, AND R15  @Y30LB02 01150003
.*                                                             @Y30LB02 01200003
.*01   MODULE-TYPE = MACRO                                     @Y30LB02 01250003
.*                                                             @Y30LB02 01300003
.*02     PROCESSOR = PLS2 AND ASSEMBLER                        @Y30LB02 01350003
.*                                                             @Y30LB02 01450003
.*02     ATTRIBUTES = REUSABLE                                 @Y30LB02 01500003
.*                                                             @Y30LB02 01550003
.*02     ENTRY-POINT = ICBMCRT                                 @Y30LB02 01600003
.*                                                             @Y30LB02 01650003
.*02     PURPOSE = A MOVE CARTRIDGE REQUEST WILL BE            @Y30LB02 01700003
.*       ISSUED WHENEVER THE CALLER WANTS TO REMOVE A          @Y30LB02 01750003
.*       CARTRIDGE OR A VIRTUAL VOLUME FROM THE MSF.           @Y30LB02 01800003
.*                                                             @Y30LB02 01850003
.*02     LINKAGE = SVC 126                                     @Y30LB02 01900003
.*                                                             @Y30LB02 01950003
.*01  INPUT                                                    @Y30LB02 02000003
.*                                                             @Y30LB02 02050003
.* MACRO SYNTAX                                                @Y30LB02 02100003
.*                                                             @Y30LB02 02150003
.*   LIST FORM                                                 @Y30LB02 02200003
.*                                                             @Y30LB02 02250003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 02300003
.*                                                             @Y30LB02 02350003
.*ICBMCRT  MF=L - (BAL)          MF=(L,MAP) - BAL              @Y30LB02 02400003
.*         MF(L,NAME/(R))-PLS    MF(L,NAME/(R),ATTR)-PLS       @Y30LB02 02450003
.*                                                             @Y30LB02 02500003
.*                                                             @Y30LB02 02550003
.*   STANDARD FORM                                             @Y30LB02 02600003
.*                                                             @Y30LB02 02650003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 02700003
.*                                                             @Y30LB02 02750003
.*ICBMCRT  FLAGS=ADDR/(R)        LIBID=ADDR/(R)                @Y30LB02 02800003
.*         ECB=ADDR/(R)          CSN=ADDR/(R)                  @Y30LB02 02850003
.*                               VVICEXT=ADDR/(R)              @Y30LB02 02900003
.*                                                             @Y30LB02 02950003
.* EXECUTE FORM                                                @Y30LB02 03000003
.*                                                             @Y30LB02 03050003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 03100003
.*                                                             @Y30LB02 03150003
.*ICBMCRT  MF(E,NAME/(R))       MF(E,NAME/(R),COMPLETE)-PLS    @Y30LB02 03200003
.*                              ECB=ADDR/(R)                   @Y30LB02 03250003
.*                              CSN=ADDR/(R)                   @Y30LB02 03300003
.*                              FLAGS=ADDR/(R)                 @Y30LB02 03350003
.*                              LIBID=ADDR/(R)                 @Y30LB02 03400003
.*                              VVICEXT=ADDR/(R)               @Y30LB02 03450003
.*                                                             @Y30LB02 03500003
.*   KEYWORD PARAMETERS:                                       @Y30LB02 03550003
.*                                                             @Y30LB02 03600003
.*   MF  -  MACRO FORMAT: THIS PARAMETER DESCRIBES THE         @Y30LB02 03650003
.*          MACRO FORMAT AND MAY GIVE THE ADDRESS OR           @Y30LB02 03700003
.*          ADDRESS IN A REGISTER WHERE THE REQUEST BLOCK      @Y30LB02 03750003
.*          IS STORED.                                         @Y30LB02 03800003
.*                                                             @Y30LB02 03850003
.*          L - LIST FORM: THE EXPANSION OF THE L-FORM         @Y30LB02 03900003
.*              MACRO WILL RESULT IN A REQUEST BLOCK WITH      @Y30LB02 03950003
.*              THE ONLY NON-ZERO FIELDS BEING THE OPCODE      @Y30LB02 04000003
.*              AND LENGTH FIELDS.                             @Y30LB02 04050003
.*                                                             @Y30LB02 04100003
.*          (1) 'MAP' - IF MAP IS SPECIFIED WITH THE           @Y30LB02 04150003
.*              ASSEMBLER MACRO CALL A DSECT EQUIVALENT TO     @Y30LB02 04200003
.*              A MAPPING MACRO IS PRODUCED.                   @Y30LB02 04250003
.*                                                             @Y30LB02 04300003
.*          (2) NAME - THE MACRO INVOKER MUST SPECIFY A        @Y30LB02 04350003
.*              NAME FOR HIS STRUCTURE WHEN INVOKING THE       @Y30LB02 04400003
.*              PLS LIST FORM.                                 @Y30LB02 04450003
.*                                                             @Y30LB02 04500003
.*          (3) ATTRIBUTE - THE MACRO WILL PLACE ANY PLS       @Y30LB02 04550003
.*              ATTRIBUTE SPECIFIED IN THE MACRO INVOCATION    @Y30LB02 04600003
.*              IN AN UNINITIALIZED REQUEST BLOCK.  ATTRI-     @Y30LB02 04650003
.*              BUTE EXAMPLE:                                  @Y30LB02 04700003
.*                                                             @Y30LB02 04750003
.*              CHAR, FIXED, STATIC LOCAL, NONLOCAL,           @Y30LB02 04800003
.*              BASED(*), ETC.                                 @Y30LB02 04850003
.*                                                             @Y30LB02 04900003
.*       NULL - STANDARD FORM: THE EXPANSION OF THIS FORM      @Y30LB02 04950003
.*              CONSISTS OF A REQUEST BLOCK, A LINKAGE         @Y30LB02 05000003
.*              INSTRUCTION, AND, POSSIBLY, PARAMETER          @Y30LB02 05050003
.*              BINDING INSTRUCTION.                           @Y30LB02 05100003
.*                                                             @Y30LB02 05150003
.*          E - EXECUTABLE FORM: THE EXPANSION OF THIS FORM    @Y30LB02 05200003
.*              CONSISTS OF A LINKAGE INSTRUCTION AND          @Y30LB02 05250003
.*              POSSIBLY, PARAMETER BINDING INSTRUCTIONS.      @Y30LB02 05300003
.*                                                             @Y30LB02 05350003
.*              SUB-PARAMETERS                                 @Y30LB02 05400003
.*                                                             @Y30LB02 05450003
.*              (1)  AN E MUST BE SPECIFIED IN THE FIRST       @Y30LB02 05500003
.*                   SUB-PARAMETER POSITION.  THIS INDICATES   @Y30LB02 05550003
.*                   THAT THE MACRO IS IN EXECUTABLE FORM.     @Y30LB02 05600003
.*                                                             @Y30LB02 05650003
.*              (2)  A NAME OR A REGISTER MUST BE SPECIFIED    @Y30LB02 05700003
.*                   IN THE SECOND SUB-PARAMETER.              @Y30LB02 05750003
.*                                                             @Y30LB02 05800003
.*              (3)  'COMPLETE' - COMPLETE WILL CAUSE THE      @Y30LB02 05850003
.*                   MACRO TO ZERO OUT THE REQUEST BLOCK.      @Y30LB02 05900003
.*                   AFTER ZEROING THE REQUEST BLOCK THE       @Y30LB02 05950003
.*                   FUNCTION OPCODE AND LENGTH ARE PLACED     @Y30LB02 06000003
.*                   IN THE REQUEST BLOCK.                     @Y30LB02 06050003
.*                                                             @Y30LB02 06100003
.*                                                             @Y30LB02 06150003
.*   FLAGS - FLAGS:  THE FIELD WHICH INDICATES THE FUNC-       @Y30LB02 06200003
.*           TION(S) TO BE PERFORMED.  THE FORMAT OF THE       @Y30LB02 06250003
.*           FLAGS FIELD IS SHOWN BELOW:                       @Y30LB02 06300003
.*                                                             @Y30LB02 06350003
.*   ---------------------------------                         @Y30LB02 06400003
.*   | 0 | 0 | X | X | 0 | 0 | 0 | 0 |                         @Y30LB02 06450003
.*   ---------------------------------                         @Y30LB02 06500003
.*   BITS 0-1-------       |RESERVED - MUST BE SET TO ZERO|    @Y30LB02 06550003
.*                                                             @Y30LB02 06600003
.*   BIT 2----------'1'B   MOVE TRANSIENT VOLUME               @Y30LB02 06650003
.*                  '0'B   NO FUNCTION REQUESTED (DEFAULT)     @Y30LB02 06700003
.*                                                             @Y30LB02 06750003
.*   BIT 3----------'1'B   MOVE SCRATCH                        @Y30LB02 06800003
.*                  '0'B   NO FUNCTION REQUESTED (DEFAULT)     @Y30LB02 06850003
.*                                                             @Y30LB02 06900003
.*   BITS 4-5 -------      |UNUSED AND MUST BE SET TO ZERO|    @Y30LB02 06950003
.*                                                             @Y30LB02 07000003
.*   BITS 6-7 -------      |RESERVED - MUST BE SET TO ZERO|    @Y30LB02 07050003
.*                                                             @Y30LB02 07100003
.*   NOTE:   BITS 0-7 ARE 'MUTUALLY EXCLUSIVE'                 @Y30LB02 07150003
.*                                                             @Y30LB02 07200003
.*     TRANSIENT VOLUME:                                       @Y30LB02 07250003
.*         THE SOURCE VOLUME (MAY BE 2 CARTRIDGES) IS          @Y30LB02 07300003
.*         SPECIFIED BY SEQUENCE 1 CSN.                        @Y30LB02 07350003
.*         THE KEYWORD PARAMETER CSN MUST BE SPECIFIED.        @Y30LB02 07400003
.*                                                             @Y30LB02 07450003
.*         MOVE TRANSIENT VOLUME REQUIRED PARMS:  FLAGS,       @Y30LB02 07500003
.*         ECB AND CSN (CSN1).                                 @Y30LB02 07550003
.*                                                             @Y30LB02 07600003
.*     MOVE SCRATCH:                                           @Y30LB02 07650003
.*         MOVE ANY AVAILABLE SCRATCH CARTRIDGE WITHIN A       @Y30LB02 07700003
.*         SPECIFIED MSF.  USE OF THE CARTRIDGE SERIAL         @Y30LB02 07750003
.*         NUMBER IS OPTIONAL.  IF CARTRIDGE SERIAL NUMBER     @Y30LB02 07800003
.*         IS SPECIFIED WITH THE MOVE SCRATCH OPTION, CART-    @Y30LB02 07850003
.*         RIDGE SPECIFIED WITH 'CSN' IS MOVED PROVIDED IT     @Y30LB02 07900003
.*         IS AVAILABLE.  THE LIBID PARAMETER MUST BE          @Y30LB02 07950003
.*         SPECIFIED.                                          @Y30LB02 08000003
.*                                                             @Y30LB02 08050003
.*         MOVE SCRATCH REQUIRED PARMS:  FLAGS, ECB AND        @Y30LB02 08100003
.*         LIBID.  OPTIONAL PARMS: CSN                         @Y30LB02 08150003
.*                                                             @Y30LB02 08200003
.*   LIBID - THE FIELD WHICH IDENTIFIES THE MSF SUB-           @Y30LB02 08250003
.*         SYSTEM FROM WHICH TO REMOVE A SCRATCH CART-         @Y30LB02 08300003
.*         RIDGE.  THE FORMAT OF THE LIBID FIELD IS SHOWN      @Y30LB02 08350003
.*         BELOW:                                              @Y30LB02 08400003
.*                                                             @Y30LB02 08450003
.*   ----------------------------------                        @Y30LB02 08500003
.*   | 0 | 0 | 0 | 0 | 0 | 0 | X | X |                         @Y30LB02 08550003
.*   ----------------------------------                        @Y30LB02 08600003
.*   BITS 0-5 --------     |IGNORED - MUST BE SET TO ZERO|     @Y30LB02 08650003
.*                                                             @Y30LB02 08700003
.*   BITS 6-7 --------     MAY BE SET TO BINARY 0,1,2, OR 3    @Y30LB02 08750003
.*                                                             @Y30LB02 08800003
.*   CSN - IDENTIFIES A SPECIFIC CARTRIDGE, BY SERIAL          @Y30LB02 08850003
.*   NUMBER, TO BE REMOVED FROM THE MSF.  FOR MOVE             @Y30LB02 08900003
.*   TRANSIENT VOLUME, CSN IDENTIFIES THE SEQUENCE 1 CART-     @Y30LB02 08950003
.*   RIDGE OF THE VOLUME; THE ENTIRE VOLUME WILL BE MOVED      @Y30LB02 09000003
.*   FROM THE MSF.                                             @Y30LB02 09050003
.*                                                             @Y30LB02 09100003
.*   ECB - THE NAME OF THE EVENT CONTROL BLOCK (ECB) TO BE     @Y30LB02 09150003
.*   POSTED WHEN THE REQUEST IS COMPLETE. THE USER MUST ALSO   @Y30LB02 09200003
.*   DECLARE A MINIMUM 50 BYTE CONTIGUOUS AREA TO CONTAIN      @Y30LB02 09250003
.*   THE MESSAGE GENERATED BY THE MESSAGE TASK.  (THE ECB      @Y30LB02 09300003
.*   AND APPENDED DATA AREA MUST BE IN COMMON CORE IN VS/2).   @Y30LB02 09350003
.*   THE ECB IS POSTED WITH ONE OF THE FOLLOWING POST CODES:   @Y30LB02 09400003
.*   70, 71, 72, 73, 74, ETC..  THE POST CODE WILL BE PLACED   @Y30LB02 09450003
.*   IN THE LOW-ORDER BYTE OF THE ECB - '7F'X INDICATES        @Y30LB02 09500003
.*   SUCCESSFUL COMPLETION.  THE MSC DATA WILL BE MOVED TO     @Y30LB02 09550003
.*   CORE LOCATION ADDRESS(ECB)+4.  THE ECB PARAMETER MUST BE  @Y30LB02 09600003
.*   SPECIFIED AND THE ECB AREA MUST BE CLEARED (SET TO        @Y30LB02 09650003
.*   BINARY 0) BEFORE INVOKING THE MACRO.                      @Y30LB02 09700003
.*                                                             @Y30LB02 09750003
.*   VVICEXT - THE NAME OF AN AREA WHICH CONTAINS THE MSVC     @Y30LB02 09800003
.*   EXTENSION (VVICEXT) MAPPING.  IF THIS PARAMETER IS NOT    @Y30LB02 09850003
.*   SPECIFIED, THE CORRESPONDING POSITION IN THE REQUEST      @Y30LB02 09900003
.*   BLOCK MUST BE SET TO ZERO.  THE MAPPING MACRO FOR THE     @Y30LB02 09950003
.*   MSVC EXTENSION TO MOVE CARTRIDGE IS IEZMCRTE.             @Y30LB02 10000003
.*                                                             @Y30LB02 10050003
.*01  EXIT-NORMAL = VALID INVOCATION                           @Y30LB02 10100003
.*                                                             @Y30LB02 10150003
.*02     CONDITION = RETURN CODE = 0                           @Y30LB02 10200003
.*                                                             @Y30LB02 10250003
.*02     OUTPUT = IN-LINE PLS/BAL STATEMENTS THAT PERFORM      @Y30LB02 10300003
.*                THE REQUESTED FUNCTION                       @Y30LB02 10350003
.*                                                             @Y30LB02 10400003
.*01  EXIT-ERROR = INVALID INVOCATION                          @Y30LB02 10450003
.*02     CONDITION = RETURN CODE = 12                          @Y30LB02 10500003
.*                                                             @Y30LB02 10550003
.*02     OUTPUT = ERROR MESSAGE AS A COMMENT AT POINT OF       @Y30LB02 10600003
.*                INVOCATION                                   @Y30LB02 10650003
.*                                                             @Y30LB02 10700003
.*01  EXTERNAL REFERENCES = NONE                               @Y30LB02 10750003
.*                                                             @Y30LB02 10800003
.*01  TABLES = NONE                                            @Y30LB02 10850003
.*                                                             @Y30LB02 10900003
.*01  MESSAGES = AS FOLLOWS:                                   @Y30LB02 10950003
.*      ICB602I:  A NAME FOR THE REQUEST BLOCK MUST BE         @Y30LB02 11000003
.*                SPECIFIED IN MF(2)                           @Y30LB02 11050003
.*      ICB604I:  WARNING-ONLY THE MF PARAMETER IS VALID       @Y30LB02 11100003
.*                FOR LIST FORM                                @Y30LB02 11150003
.*      ICB605I:  ECB MUST BE SPECIFIED FOR STANDARD           @Y30LB02 11200003
.*                FORM MACRO                                   @Y30LB02 11250003
.*      ICB607I:  FLAGS MUST BE SPECIFIED FOR STANDARD         @Y30LB02 11300003
.*                FORM MACRO                                   @Y30LB02 11350003
.*      ICB612I:  MF(2) MUST CONTAIN REQ BLK NAME              @Y30LB02 11400003
.*                IF EXEC MACRO FORM REQUESTED                 @Y30LB02 11450003
.*      ICB615I:  INVALID MF PARAMETER SPECIFIED,              @Y30LB02 11500003
.*                MUST BE L, E, OR NULL                        @Y30LB02 11550003
.*                                                             @Y30LB02 11600003
.*01  CONTROL-BLOCKS = NONE                                    @Y30LB02 11650003
.*                                                             @Y30LB02 11700003
.*01  INNER MACROS = NONE                                      @Y30LB02 11750003
.*                                                             @Y30LB02 11800003
.*01  SYSTEM MACRO =IHBINNRA                                   @Y30LB02 11850003
.*                                                             @Y30LB02 11900003
.*01  CHANGE-ACTIVITY = S/D X04AC02 AND Y30LB02                @Y30LB02 11950003
.*                                                             @Y30LB02 12000003
.**** END OF SPECIFICATIONS ***                                @Y30LB02 12050003
         MACRO                                                 @Y30LB02 12100003
&SYMBOL  ICBMCRT &MF=,&FLAGS=,&LIBID=,&CSN=,&ECB=,                     *12150003
               &VVICEXT=                                       @Y30LB02 12200003
         LCLB  &ERSW               CONDITION SWITCHES          @Y30LB02 12250003
         LCLC  &MCRT               MOVE MACRO INSTR INDX       @Y30LB02 12300003
&MCRT    SETC  'M'.'&SYSNDX'       ASSIGN CHARACTER VALUE      @Y30LB02 12350003
.*                                                             @Y30LB02 12400003
.*       DETERMINATION OF DESIRED MACRO FORM                   @Y30LB02 12450003
.*                                                             @Y30LB02 12500003
         AIF   ('&MF(1)' NE 'L').EFORM      LIST FORM?         @Y30LB02 12550003
.*                                                             @Y30LB02 12600003
.*       PROCESSING OF LIST MACRO FORM                         @Y30LB02 12650003
.*                                                             @Y30LB02 12700003
.*       THE FOLLOWING CODE CHECKS FOR ILLEGAL PARAMETERS      @Y30LB02 12750003
.*       SPECIFIED FOR THE LIST FORM AND PUTS OUT MOVE         @Y30LB02 12800003
.*       CARTRIDGE REQUEST BLOCK.                              @Y30LB02 12850003
.*                                                             @Y30LB02 12900003
         AIF   ('&FLAGS' NE '' OR  '&LIBID'                            *12950003
               NE '' OR '&CSN' NE '' OR '&ECB' NE '').WARN     @Y30LB02 13000003
         AGO   .LIST                                           @Y30LB02 13050003
.WARN    MNOTE 4,'  ICB604I - WARNING-ONLY THE MF PARAMETER '  @Y30LB02 13100003
         MNOTE 4,'  IS VALID FOR LIST FORM '                   @Y30LB02 13150003
.*                                                             @Y30LB02 13200003
.LIST    ANOP                                                  @Y30LB02 13250003
         AIF   ('&MF(2)' EQ 'MAP').LISTDS   DSECT REQUESTED?   @Y30LB02 13300003
*  MACMEAN  MSSC MOVE CARTRIDGE MACRO--INITIALIZED LIST FORM   @Y30LB02 13350003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 13400003
&SYMBOL  DS    0F                                              @Y30LB02 13450003
MCRTLEN  DC    F'48'               LENGTH OF MOVE REQ          @Y30LB02 13500003
MCRTOPCD DC    XL1'0E'             MOVE CARTRIDGE OPCODE       @Y30LB02 13550003
MCRTRES1 DC    XL1'00'             1-BYTE RESERVED AREA        @Y30LB02 13600003
MCRTFLAG DC    XL1'00'             1-BYTE FLAGS AREA           @Y30LB02 13650003
MCRTLIBR DC    XL1'00'             1-BYTE LIBID AREA           @Y30LB02 13700003
MCRTRES2 DC    XL8'000000000000'   8-BYTE RESERVED AREA        @Y30LB02 13750003
MCRTRES3 DC    XL8'000000000000'   8-BYTE RESERVE AREA         @Y30LB02 13800003
MCRTCSN  DC    XL12'000000000000'  12-BYTE AREA FOR CSN        @Y30LB02 13850003
MCRTRES4 DC    XL2'0000'           2-BYTE RESERVED AREA        @Y30LB02 13900003
MCRTASID DC    XL2'0000'           2-BYTE ASID AREA            @Y30LB02 13950003
MCRTECB  DC    XL4'00000000'       4-BYTE AREA FOR ECB         @Y30LB02 14000003
MCRTVEXT DC    XL4'00000000'       4-BYTE VVICEXT AREA         @Y30LB02 14050003
         AGO   .FINISH                                         @Y30LB02 14100003
.*                                                             @Y30LB02 14150003
.*                                                             @Y30LB02 14200003
.LISTDS  ANOP                                                  @Y30LB02 14250003
*  MACMEAN MSSC MOVE CARTRIDGE MACRO--UNINITIALIZED LIST FORM  @Y30LB02 14300003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 14350003
ICBMCRT  DSECT                                                 @Y30LB02 14400003
MCRTLEN  DS    F                   LENGTH OF REQ 30 HEX        @Y30LB02 14450003
MCRTOPCD DS    XL1                 MOVE OPCODE 0E HEX          @Y30LB02 14500003
MCRTRES1 DS    XL1                 1-BYTE RESERVED AREA        @Y30LB02 14550003
MCRTFLAG DS    XL1                 1-BYTE FLAGS AREA           @Y30LB02 14600003
MCRTLIBR DS    XL1                 1-BYTE LIBID AREA           @Y30LB02 14650003
MCRTRES2 DS    XL8                 8-BYTE RESERVED AREA        @Y30LB02 14700003
MCRTRES3 DS    XL8                 8-BYTE RESERVE AREA         @Y30LB02 14750003
MCRTCSN  DS    CL12                12-BYTE AREA FOR CSN        @Y30LB02 14800003
MCRTRES4 DS    XL2                 2-BYTE RESERVED AREA        @Y30LB02 14850003
MCRTASID DS    XL2                 2-BYTE ASID AREA            @Y30LB02 14900003
MCRTECB  DS    A                   4-BYTES FOR ECB ADDR        @Y30LB02 14950003
MCRTVEXT DS    A                   4-BYTE VVICEXT ADDR         @Y30LB02 15000003
         AGO   .FINISH                                         @Y30LB02 15050003
.*       PROCESSING FOR THE EXECUTE MACRO FORM                 @Y30LB02 15100003
.*                                                             @Y30LB02 15150003
.EFORM   AIF   ('&MF(1)' NE 'E').SFORM      IS IT EFORM?       @Y30LB02 15200003
         AIF   ('&MF(2)' EQ '').EFOUT       IS 2ND PARM NULL?  @Y30LB02 15250003
.*                                                             @Y30LB02 15300003
*  MACMEAN  MSSC MOVE CARTRIDGE MACRO--EXECUTE FORM            @Y30LB02 15350003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 15400003
&SYMBOL  IHBINNRA &MF(2)           LD ADDR OF REQUEST BLK      @Y30LB02 15450003
.*                                 USING IHBINNRA MACRO        @Y30LB02 15500003
         LA    0,48                LENGTH OF MOVE REQ          @Y30LB02 15550003
         ST    0,0(1)              STORE LENGTH                @Y30LB02 15600003
         MVI   4(1),X'0E'          STORE MOVE OPCODE           @Y30LB02 15650003
         AGO   .CKSW2                                          @Y30LB02 15700003
.*                                                             @Y30LB02 15750003
.EFOUT   ANOP                                                  @Y30LB02 15800003
         MNOTE 12,'  ICB612I - MF(2) MUST CONTAIN REQ BLK '    @Y30LB02 15850003
         MNOTE 12,'  NAME IF EXEC MACRO FORM REQUESTED '       @Y30LB02 15900003
&ERSW    SETB  1              SET CONDITION SWITCH TO 1        @Y30LB02 15950003
.*                                                             @Y30LB02 16000003
.CKSW2   AIF   (&ERSW).FINISH      IF ERROR - END PROCESSING   @Y30LB02 16050003
         AGO   .CPROC     NAME OK - CONTINUE PROCESS           @Y30LB02 16100003
.*                                                             @Y30LB02 16150003
.*       PROCESSING OF 'STANDARD' MACRO FORM                   @Y30LB02 16200003
.*                                                             @Y30LB02 16250003
.SFORM   AIF   ('&MF(1)' NE '').INCFM       STANDARD FORM?     @Y30LB02 16300003
         AIF   ('&FLAGS' NE '').CKECB       FLAGS SPECIFIED?   @Y30LB02 16350003
&ERSW    SETB  1                   ERROR CONDITION NOTED       @Y30LB02 16400003
         MNOTE 12,'  ICB607I - FLAGS MUST BE SPECIFIED'        @Y30LB02 16450003
         MNOTE 12,'  FOR STANDARD FORM MACRO '                 @Y30LB02 16500003
         AGO   .CKSW4                                          @Y30LB02 16550003
.CKECB   AIF   ('&ECB' NE '').CKSW4     ECB SPECIFIED?         @Y30LB02 16600003
&ERSW    SETB  1                  ERROR CONDITION NOTED        @Y30LB02 16650003
         MNOTE 12,'  ICB605I - ECB MUST BE SPECIFIED FOR'      @Y30LB02 16700003
         MNOTE 12,'  STANDARD FORM MACRO '                     @Y30LB02 16750003
         AGO   .CKSW4                                          @Y30LB02 16800003
.*                                                             @Y30LB02 16850003
.INCFM   ANOP                                                  @Y30LB02 16900003
&ERSW    SETB  1                   ERROR CONDITION NOTED       @Y30LB02 16950003
         MNOTE 12,'  ICB615I - INVALID MF PARAMETER '          @Y30LB02 17000003
         MNOTE 12,'  SPECIFIED, MUST BE L, E, OR NULL'         @Y30LB02 17050003
.*                                                             @Y30LB02 17100003
.CKSW4   AIF   (&ERSW).FINISH      IF ERROR-END PROCESSING     @Y30LB02 17150003
*  MACMEAN  MSSC MOVE CARTRIDGE MACRO--STANDARD FORM           @Y30LB02 17200003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 17250003
         CNOP 0,4                                              @Y30LB02 17300003
&SYMBOL  BAL   1,&MCRT             BRANCH AROUND REQ BLK       @Y30LB02 17350003
MCRTLEN  DC    A(&MCRT-*)          LENGTH OF MOVE REQ          @Y30LB02 17400003
MCRTOPCD DC    XL1'0E'             MOVE CARTRIDGE OPCODE       @Y30LB02 17450003
MCRTRES1 DC    XL1'00'             1-BYTE RESERVED AREA        @Y30LB02 17500003
MCRTFLAG DC    XL1'00'             1-BYTE FLAGS AREA           @Y30LB02 17550003
MCRTLIBR DC    XL1'00'             1-BYTE LIBID AREA           @Y30LB02 17600003
MCRTRES2 DC    XL8'000000000000'   8-BYTE RESERVED AREA        @Y30LB02 17650003
MCRTRES3 DC    XL8'000000000000'   8-BYTE RESERVED AREA        @Y30LB02 17700003
MCRTCSN  DC    XL12'000000000000'  12-BYTE AREA FOR CSN        @Y30LB02 17750003
MCRTRES4 DC    XL2'0000'           2-BYTE RESERVED AREA        @Y30LB02 17800003
MCRTASID DC    XL2'0000'           2-BYTE ASID AREA            @Y30LB02 17850003
MCRTECB  DC    XL4'00000000'       4-BYTE AREA FOR ECB         @Y30LB02 17900003
MCRTVEXT DC    XL4'00000000'       4-BYTE VVICEXT AREA         @Y30LB02 17950003
&MCRT    EQU   *                                               @Y30LB02 18000003
.*                                                             @Y30LB02 18050003
.*       PROCESS REQUEST BLOCK FOR STANDARD AND EXECUTE FORMS  @Y30LB02 18100003
.*                                                             @Y30LB02 18150003
.CPROC   AIF   ('&FLAGS' EQ '').LIBID       FLAGS SPECIFIED?   @Y30LB02 18200003
         AIF   ('&FLAGS'(1,1) EQ '(').FLREG FLAGS IN REG-FORM? @Y30LB02 18250003
         MVC   6(1,1),&FLAGS       PUT FLAGS IN REQUEST BLK    @Y30LB02 18300003
         AGO   .LIBID              BRANCH                      @Y30LB02 18350003
.*                                                             @Y30LB02 18400003
.FLREG   ANOP                                                  @Y30LB02 18450003
         MVC   6(1,1),0(&FLAGS(1)) REG-FORM -PLACE FLAGS REQBLK@Y30LB02 18500003
.*                                                             @Y30LB02 18550003
.LIBID   AIF   ('&LIBID' EQ '').CSN       LIBID SPECIFIED?     @Y30LB02 18600003
         AIF   ('&LIBID'(1,1) EQ '(').LIBREG  REG-FORM?        @Y30LB02 18650003
         MVC   7(1,1),&LIBID       ADDR-FM, PUT LIBID IN REQBLK@Y30LB02 18700003
         AGO   .CSN                BRANCH                      @Y30LB02 18750003
.*                                                             @Y30LB02 18800003
.LIBREG  ANOP                                                  @Y30LB02 18850003
         MVC   7(1,1),0(&LIBID(1)) REG-FORM-PUT LIBID IN REQBLK@Y30LB02 18900003
.*                                                             @Y30LB02 18950003
.CSN     AIF   ('&CSN' EQ '').CKECB2         CSN SPECIFIED?    @Y30LB02 19000003
         AIF   ('&CSN'(1,1) EQ '(').CSNREG   CSN REG-FORM?     @Y30LB02 19050003
         MVC   24(12,1),&CSN       PUT CSN IN REQ BLOCK        @Y30LB02 19100003
         AGO   .CKECB2             BRANCH                      @Y30LB02 19150003
.*                                                             @Y30LB02 19200003
.CSNREG  ANOP                                                  @Y30LB02 19250003
         MVC   24(12,1),0(&CSN(1)) REG FORM-CSN IN BLOCK       @Y30LB02 19300003
.*                                                             @Y30LB02 19350003
.CKECB2  AIF   ('&ECB' EQ '').CKVEXT   ECB SPECIFIED           @Y30LB02 19400003
         AIF   ('&ECB'(1,1) EQ '(').ECBREG  ECB REG-FORM?      @Y30LB02 19450003
         LA    15,&ECB             ADDR-FORM                   @Y30LB02 19500003
         ST    15,40(1)            STORE ADDR IN REQBLK        @Y30LB02 19550003
         AGO   .CKVEXT                                         @Y30LB02 19600003
.ECBREG  ANOP                                                  @Y30LB02 19650003
         ST    &ECB,40(1)          REG-FORM,STORE ECB          @Y30LB02 19700003
.CKVEXT  AIF   ('&VVICEXT' EQ '').INVOKE  VVICEXT SPECIFIED    @Y30LB02 19750003
         AIF   ('&VVICEXT'(1,1) EQ '(').VVIREG   REG-FORM?     @Y30LB02 19800003
         LA    15,&VVICEXT         ADDR-FORM                   @Y30LB02 19850003
         ST    15,44(1)            STORE ADDR IN REQBLK        @Y30LB02 19900003
         AGO   .INVOKE                                         @Y30LB02 19950003
.VVIREG  ANOP                                                  @Y30LB02 20000003
         ST    &VVICEXT,44(1)      REG-FORM                    @Y30LB02 20050003
.INVOKE  ANOP                                                  @Y30LB02 20100003
         SVC   126                 INVOKE THE SVC              @Y30LB02 20150003
.FINISH  MEND                                                           20200003
**/                                                                     20250003
*   ICBMCRT:  MACRO KEYS(MF,FLAGS,LIBID,CSN,ECB,                        20300003
*                    VVICEXT);                             /*@Y30LB02*/ 20350003
*/*                                                          @Y30LB02*/ 20400003
*/*                          EXTERNAL DECLARES               @Y30LB02*/ 20450003
*/*                                                          @Y30LB02*/ 20500003
*   DCL  TESTMCRT  FIXED EXT;    /*CTR FOR S-FORM INVOC      @Y30LB02*/ 20550003
*   DCL  MCTESTR1  FIXED EXT;    /*TEST FOR REG1 INVOC       @Y30LB02*/ 20600003
*/*                                                          @Y30LB02*/ 20650003
*/*                          INTERNAL DECLARES               @Y30LB02*/ 20700003
*/*                                                          @Y30LB02*/ 20750003
*   DCL  ERSW     FIXED;     /*ERROR CONDITION SWITCH        @Y30LB02*/ 20800003
*   DCL  MCRTCD   CHAR;      /*MOVE CARTRIDGE OPCODE         @Y30LB02*/ 20850003
*   DCL  RETCODE  FIXED;     /*RETURN CODE                   @Y30LB02*/ 20900003
*   DCL  MCRTLN   CHAR;      /*LENGTH OF MOVE CART REQBLK    @Y30LB02*/ 20950003
*   DCL  CTR      FIXED;     /*CTR FOR LIST PARAMETERS       @Y30LB02*/ 21000003
*        CTR = 0;            /*INITIALIZE PARMAMETER CTR     @Y30LB02*/ 21050003
*        MCRTCD = '0E';      /*INITIALIZE OPCODE             @Y30LB02*/ 21100003
*        MCRTLN = '30';      /*INITIALIZE LENGTH             @Y30LB02*/ 21150003
*        RETCODE = 0;        /*INITIALIZE RETURN CODE        @Y30LB02*/ 21200003
*        ERSW = 0;           /*INITIALIZE ERROR SWITCH       @Y30LB02*/ 21250003
*/*                                                          @Y30LB02*/ 21300003
*/*      CHECK FOR VALID MACRO FORMAT - E, L, OR NULL        @Y30LB02*/ 21350003
*/*********************************************************  @Y30LB02*/ 21400003
*/*                                                          @Y30LB02*/ 21450003
*     IF MCTESTR1=0 THEN     /*REG 1 DECLARED?               @Y30LB02*/ 21500003
*        DO;                 /*NO,DECLARE IT                 @Y30LB02*/ 21550003
*             ANS('DCL MCR1 REG(1) PTR ;/*ADDRESS OF '||                21600003
*             'REQUEST BLOCK @Y30LB02*/')SKIP;                          21650003
*             MCTESTR1=MCTESTR1+1; /*INCREM REG DCLD CTR     @Y30LB02*/ 21700003
*        END;                      /*                        @Y30LB02*/ 21750003
*/*                                                          @Y30LB02*/ 21800003
*   IF MF(1) ^= 'L' THEN           /*LIST FORM?              @Y30LB02*/ 21850003
*     GO TO EFORM;                 /*NO,CK FOR EXECUTE FM    @Y30LB02*/ 21900003
*   IF MF(2) = '' THEN             /*LIST NAME SPECIFIED?    @Y30LB02*/ 21950003
*     DO;                          /*PRINT ERROR MESSAGE     @Y30LB02*/ 22000003
*        ERSW = 1;                 /*SET ERROR SWITCH        @Y30LB02*/ 22050003
*        RETCODE = 12;             /*SET ERROR RETURN TO 12  @Y30LB02*/ 22100003
*        ANS MSG('  ICB602I - A NAME FOR THE '||                        22150003
*        'REQUEST BLOCK MUST BE SPECIFIED IN MF(2)')SKIP;  /*@Y30LB02*/ 22200003
*        GO TO FINISH;             /*BRANCH TO END PROCES    @Y30LB02*/ 22250003
*     END;                         /*                        @Y30LB02*/ 22300003
*/*********************************************************  @Y30LB02*/ 22350003
*/*      THE FOLLOWING CODE WILL CHECK FOR ILLEGAL           @Y30LB02*/ 22400003
*/*      PARAMETERS SPECIFIED WITH LIST FORM AND             @Y30LB02*/ 22450003
*/*      PUT OUT MOVE CARTRIDGE REQUEST BLOCK                @Y30LB02*/ 22500003
*/*********************************************************  @Y30LB02*/ 22550003
*   ELSE                           /*                        @Y30LB02*/ 22600003
*     DO;                          /*CHECK LIST PARAMETERS   @Y30LB02*/ 22650003
*/*                                                          @Y30LB02*/ 22700003
*        IF FLAGS ^= '' THEN    /*FLAGS SPECIFIED?           @Y30LB02*/ 22750003
*             CTR = CTR + 1;    /*YES,INCREMENT COUNTER      @Y30LB02*/ 22800003
*        IF LIBID ^= '' THEN    /*MSF IDENTIFICATION?        @Y30LB02*/ 22850003
*             CTR = CTR + 1;    /*YES,INCREMENT COUNTER      @Y30LB02*/ 22900003
*        IF CSN ^= ''  THEN     /*CART SERIAL SPECIFIED?     @Y30LB02*/ 22950003
*             CTR = CTR +1;     /*YES,INCREMENT COUNTER      @Y30LB02*/ 23000003
*        IF ECB ^= '' THEN      /*ECB SPECIFIED?             @Y30LB02*/ 23050003
*             CTR = CTR +1;     /*YES,INCREMENT COUNTER      @Y30LB02*/ 23100003
*        IF VVICEXT ^= '' THEN  /*MSVC EXTENSION SPECD?      @Y30LB02*/ 23150003
*             CTR = CTR +1;     /*YES,INCREMENT COUNTER      @Y30LB02*/ 23200003
*        IF CTR  > 0  THEN      /*COUNTER GREATER THAN 0?    @Y30LB02*/ 23250003
*          DO;                  /*YES,WARN USER              @Y30LB02*/ 23300003
*             RETCODE = 4;      /*SET RETURN CODE TO 4       @Y30LB02*/ 23350003
*             ANS MSG('  ICB604I - WARNING-ONLY'||                      23400003
*                 ' THE MF PARAMETER IS VALID FOR'||                    23450003
*                 ' LIST FORM ')SKIP;                      /*@Y30LB02*/ 23500003
*          END;                 /*                           @Y30LB02*/ 23550003
*     END;                      /*                           @Y30LB02*/ 23600003
*     IF MF(3) ^= '' THEN       /*PLS ATTRIBUTE SPECIFIED    @Y30LB02*/ 23650003
*        GO TO ATTRLST;         /*BRCH,PROCESS ATTRIBUTE     @Y30LB02*/ 23700003
*     ELSE                      /*PUT OUT INITIALIZED LIST   @Y30LB02*/ 23750003
*       DO;                     /*OUTPUT DECLARES            @Y30LB02*/ 23800003
*        ANS('/*******************************************'||           23850003
*            '************** @Y30LB02*/')SKIP;                          23900003
*        ANS('/*   MACMEAN  MSSC MOVE CARTRIDGE MACRO     '||           23950003
*            '               @Y30LB02*/')SKIP;                          24000003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           24050003
*            '               @Y30LB02*/')SKIP;                          24100003
*        ANS('/*THIS IS THE INITIALIZED LIST FORM         '||           24150003
*            '               @Y30LB02*/')SKIP;                          24200003
*        ANS('/*******************************************'||           24250003
*            '************** @Y30LB02*/')SKIP;                          24300003
*        ANS('DCL 1 '||MF(2)||' STATIC LOCAL,'||                        24350003
*        '/*MOVE CARTRIDGE REQUEST BLOCK @Y30LB02*/')SKIP;              24400003
*        ANS('    2  MCRTLEN  FIXED(31)INIT('||QUOTE('30')||            24450003
*        'X),/*LENG OF MOVE CARTRIDGE REQUEST BLK @Y30LB02*/')SKIP;     24500003
*        ANS('    2  MCRTOPCD  FIXED(8)INIT('||QUOTE('0E')||            24550003
*        'X), /*MOVE CARTRIDGE OPCODE @Y30LB02*/')SKIP;                 24600003
*        ANS('    2  MCRTRES1 CHAR(1)INIT('||QUOTE                      24650003
*        ('00')||'X),/*RESERVED AND ZERO @Y30LB02*/')SKIP;              24700003
*        ANS('    2  MCRTFLG   BIT(8)INIT('||QUOTE                      24750003
*        ('00000000')||'B),/*ONE BYTE FLAGS AREA @Y30LB02*/')SKIP;      24800003
*        ANS('       3  *      BIT(2),/*RESERVED AND'||                 24850003
*        ' MUST BE ZERO @Y30LB02*/')SKIP;                               24900003
*        ANS('       3  MCRTTRAN  BIT(1),/*SOURCE WITH'||               24950003
*        ' TRANSIENT CSN1 SPECD @Y30LB02*/')SKIP;                       25000003
*        ANS('       3  MCRTSCT  BIT(1),/*SOURCE WITH'||                25050003
*        ' SCRATCH ATTRIBUTE @Y30LB02*/')SKIP;                          25100003
*        ANS('       3  *       BIT(4),/*RESERVED AND'||                25150003
*        ' MUST BE ZERO @Y30LB02*/')SKIP;                               25200003
*        ANS('    2  MCRTLIB  BIT(8)INIT('||QUOTE                       25250003
*        ('00000000')||'B), /*ONE BYTE-LIBID @Y30LB02*/')SKIP;          25300003
*        ANS('       3  *       BIT(5),/*RESERVED AND'||                25350003
*        ' MUST BE ZERO @Y30LB02*/')SKIP;                               25400003
*        ANS('       3  MCRTLD    BIT(2),/*BINARY NUMBER'||             25450003
*        ' ZERO TO THREE @Y30LB02*/')SKIP;                              25500003
*        ANS('    2  MCRTRES2 CHAR(8) ,/*RESERVED @Y30LB02*/')SKIP;     25550003
*        ANS('     3  *(8) CHAR(1)INIT((8)'||QUOTE                      25600003
*        ('00')||'X),/*INIT RESERVED AREA TO ZERO @Y30LB02*/')SKIP;     25650003
*        ANS('    2  MCRTRES3 CHAR(8) ,/*RESERVED @Y30LB02*/')SKIP;     25700003
*        ANS('     3  *(8) CHAR(1)INIT((8)'||QUOTE                      25750003
*        ('00')||'X),/*INIT RES AREA TO ZERO @Y30LB02*/')SKIP;          25800003
*        ANS('    2  MCRTCSN  CHAR(12) ,/*CART SER NO @Y30LB02*/')SKIP; 25850003
*        ANS('     3  *(12) CHAR(1)INIT((12)'||QUOTE                    25900003
*        ('00')||'X),/*INIT CSN AREA TO ZERO @Y30LB02*/')SKIP;          25950003
*        ANS('     2  MCRTRES4 CHAR(2) INIT('||                         26000003
*        QUOTE('0000')||'X),/*RESERVED @Y30LB02*/')SKIP;                26050003
*        ANS('     2  MCRTASID CHAR(2) INIT('||                         26100003
*        QUOTE('0000')||'X),/*ASID FIELD @Y30LB02*/')SKIP;              26150003
*        ANS('     2  MCRTECB  FIXED(31)INIT(0),/*EVENT '||             26200003
*        'CONTROL BLOCK ADDRESS @Y30LB02*/')SKIP;                       26250003
*        ANS('     2  MCRTVEXT  FIXED(31)INIT(0);/*MSVC '||             26300003
*        'EXTENSION AREA @Y30LB02*/')SKIP;                              26350003
*        GO TO FINISH;   /*BRANCH TO END                     @Y30LB02*/ 26400003
*      END;              /*                                  @Y30LB02*/ 26450003
*/*                                                          @Y30LB02*/ 26500003
*ATTRLST:                                                               26550003
*        ANS('/*******************************************'||           26600003
*            '************** @Y30LB02*/')SKIP;                          26650003
*        ANS('/*   MACMEAN  MSSC MOVE CARTRIDGE MACRO     '||           26700003
*            '               @Y30LB02*/')SKIP;                          26750003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           26800003
*            '               @Y30LB02*/')SKIP;                          26850003
*        ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '||           26900003
*            '               @Y30LB02*/')SKIP;                          26950003
*        ANS('/*******************************************'||           27000003
*            '************** @Y30LB02*/')SKIP;                          27050003
*        ANS('DCL 1 '||MF(2)||' '||MF(3)||','||                         27100003
*        ' /*MOVE CARTRIDGE REQUEST BLOCK @Y30LB02*/')SKIP;             27150003
*        ANS('    2  MCRTLEN  FIXED(31),/*LENGTH OF'||                  27200003
*        ' MOVE CARTRIDGE REQUEST BLK = 30 HEX @Y30LB02*/')SKIP;        27250003
*        ANS('    2  MCRTOPCD  FIXED(8)'||                              27300003
*        ' , /*MOVE CARTRIDGE OPCODE = 0E HEX @Y30LB02*/')SKIP;         27350003
*        ANS('    2  MCRTRES1  CHAR(1),/*RESERVED'||                    27400003
*        ' AND ZERO @Y30LB02*/')SKIP;                                   27450003
*        ANS('    2  MCRTFLG   BIT(8),'||                               27500003
*        '/*ONE BYTE FLAGS AREA @Y30LB02*/')SKIP;                       27550003
*        ANS('       3  *      BIT(2),/*RESERVED AND'||                 27600003
*        ' MUST BE ZERO @Y30LB02*/')SKIP;                               27650003
*        ANS('       3  MCRTTRAN  BIT(1),/*SOURCE WITH'||               27700003
*        ' TRANSIENT CSN1 SPECD @Y30LB02*/')SKIP;                       27750003
*        ANS('       3  MCRTSCT  BIT(1),/*SOURCE WITH'||                27800003
*        ' SCRATCH ATTRIBUTE @Y30LB02*/')SKIP;                          27850003
*        ANS('       3  *       BIT(4),/*RESERVED AND'||                27900003
*        ' MUST BE ZERO @Y30LB02*/')SKIP;                               27950003
*        ANS('    2  MCRTLIB  BIT(8) ,/*BYTE-LIBID @Y30LB02*/')SKIP;    28000003
*        ANS('       3  *       BIT(6),/*RESERVED AND'||                28050003
*        ' MUST BE ZERO @Y30LB02*/')SKIP;                               28100003
*        ANS('       3  MCRTLD    BIT(2),/*BINARY NUMBER'||             28150003
*        ' ZERO TO THREE @Y30LB02*/')SKIP;                              28200003
*        ANS('    2  MCRTRES2 CHAR(8) ,/*8-BYTE RES  @Y30LB02*/')SKIP;  28250003
*        ANS('    2  MCRTRES3 CHAR(8) ,/*8-BYTE RES @Y30LB02*/')SKIP;   28300003
*        ANS('    2  MCRTCSN  CHAR(12) ,/*CART SER NO @Y30LB02*/')SKIP; 28350003
*        ANS('    2  MCRTRES4 CHAR(2) ,/*RESERVED @Y30LB02*/')SKIP;     28400003
*        ANS('    2  MCRTASID CHAR(2) ,/*ASID AREA @Y30LB02*/')SKIP;    28450003
*        ANS('    2  MCRTECB  FIXED(31),/*EVENT '||                     28500003
*        'CONTROL BLOCK ADDRESS @Y30LB02*/')SKIP;                       28550003
*        ANS('    2  MCRTVEXT  FIXED(31);/*MSVC '||                     28600003
*        'EXTENSION AREA @Y30LB02*/')SKIP;                              28650003
*        GO TO FINISH;    /*BRANCH TO END                    @Y30LB02*/ 28700003
*/*                                                          @Y30LB02*/ 28750003
*/*   PROCESSING THE EXECUTE MACRO FORM                      @Y30LB02*/ 28800003
*/*                                                          @Y30LB02*/ 28850003
*EFORM:                                                                 28900003
*   IF MF(1) ^= 'E' THEN     /*EXECUTE FORM SPECIFIED?       @Y30LB02*/ 28950003
*     GO TO SFORM;           /*BRANCH TO CK FOR STAND        @Y30LB02*/ 29000003
*   IF MF(2) = '' THEN       /*IS LIST NAME SPECIFIED?       @Y30LB02*/ 29050003
*     DO;                    /*PRINT ERROR MESSAGE           @Y30LB02*/ 29100003
*        ERSW = 1;           /*SET SET ERROR SWITCH TO 1     @Y30LB02*/ 29150003
*        RETCODE = 12;       /*SET RETURN CODE TO 12         @Y30LB02*/ 29200003
*        ANS MSG('  ICB612I - MF(2) MUST CONTAIN '||                    29250003
*        'REQ BLK NAME IF EXEC MACRO FORM REQUESTED')SKIP; /*@Y30LB02*/ 29300003
*        GO TO CKSW;         /*BRANCH                        @Y30LB02*/ 29350003
*     END;                   /*                              @Y30LB02*/ 29400003
*/*                                                          @Y30LB02*/ 29450003
*   ELSE                    /*PROCESS EXECUTE FORM           @Y30LB02*/ 29500003
*        ANS('/*******************************************'||           29550003
*            '************* @Y30LB02*/')SKIP;                           29600003
*        ANS('/*    MACMEAN  MSSC MOVE CARTRIDGE MACRO    '||           29650003
*            '              @Y30LB02*/')SKIP;                           29700003
*        ANS('/*VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00   '||           29750003
*            '              @Y30LB02*/')SKIP;                           29800003
*        ANS('/*THIS IS THE OUTPUT FOR THE EXECUTE FORM.  '||           29850003
*            '              @Y30LB02*/')SKIP;                           29900003
*        ANS('/*THE LIST FORM OF THIS MACRO SHOULD BE     '||           29950003
*            '              @Y30LB02*/')SKIP;                           30000003
*        ANS('/*INVOKED FIRST IN ORDER TO SET UP NECESSARY'||           30050003
*            '              @Y30LB02*/')SKIP;                           30100003
*        ANS('/*DECLARES.  IF THE COMPLETE ARGUMENT IS    '||           30150003
*            '              @Y30LB02*/')SKIP;                           30200003
*        ANS('/*SPECIFIED THE REQ BLOCK WILL BE ZEROED.   '||           30250003
*            '              @Y30LB02*/')SKIP;                           30300003
*        ANS('/*******************************************'||           30350003
*            '************* @Y30LB02*/')SKIP;                           30400003
*    IF MF(3) = 'COMPLETE' THEN  /*COMPLETE SPECIFIED?       @Y30LB02*/ 30450003
*      DO;                       /*                          @Y30LB02*/ 30500003
*          ANS(' '||MF(2)||'='||MF(2)||'&&'||MF(2)||';'||  /*@Y30LB02*/ 30550003
*          '/*ZERO OUT REQUEST BLOCK @Y30LB02*/')SKIP;                  30600003
*      END;                      /*                          @Y30LB02*/ 30650003
*/*                                                          @Y30LB02*/ 30700003
*        ANS('RFY(MCR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;          30750003
*        ANS('MCR1= ADDR('||MF(2)||'); /*R1 PTR'||                      30800003
*        '  TO REQUEST BLOCK @Y30LB02*/')SKIP;                          30850003
*        ANS('MCRTLEN= '||QUOTE(MCRTLN)||'X; '||           /*@Y30LB02*/ 30900003
*        '/*LENGTH-MOVE REQUEST @Y30LB02*/')SKIP;                       30950003
*        ANS('MCRTOPCD= '||QUOTE(MCRTCD)||'X;'||           /*@Y30LB02*/ 31000003
*        '/*MOVE CARTRIDGE OPCODE @Y30LB02*/')SKIP;                     31050003
*/*                                                          @Y30LB02*/ 31100003
*CKSW:                                                                  31150003
*   IF ERSW = 1 THEN           /*ERROR SWITCH SET?           @Y30LB02*/ 31200003
*     GO TO FINISH;            /*YES,END PROCESSING          @Y30LB02*/ 31250003
*   ELSE                       /*BRCH,CHECK PARAMETERS       @Y30LB02*/ 31300003
*     GO TO COMPROC;           /*BRANCH                      @Y30LB02*/ 31350003
*/*                                                          @Y30LB02*/ 31400003
*SFORM:                                                                 31450003
*   IF MF(1) ^= '' THEN        /*STANDARD FORM SPECIFIED?    @Y30LB02*/ 31500003
*     DO;                      /*NO,PROCESS ERROR            @Y30LB02*/ 31550003
*        ERSW = 1;             /*SET ERROR SWITCH TO 1       @Y30LB02*/ 31600003
*        RETCODE = 12;         /*SET RETURN CODE TO 12       @Y30LB02*/ 31650003
*        ANS MSG('  ICB615I - INVALID MF PARAMETER '||                  31700003
*             'SPECIFIED, MUST BE L, E, OR NULL')SKIP;     /*@Y30LB02*/ 31750003
*        GO TO CKSW2;         /*BRANCH,CHECK ERROR SWITCH    @Y30LB02*/ 31800003
*     END;                    /*                             @Y30LB02*/ 31850003
*/*                                                          @Y30LB02*/ 31900003
*   IF FLAGS = '' THEN        /*FLAGS SPECIFIED?             @Y30LB02*/ 31950003
*     DO;                     /*NO,PRINT ERROR MESSAGE       @Y30LB02*/ 32000003
*        ERSW = 1;            /*SET ERROR SWITCH             @Y30LB02*/ 32050003
*        RETCODE = 12;        /*SET RETURN CODE TO 12        @Y30LB02*/ 32100003
*        ANS MSG('  ICB607I - FLAGS MUST BE SPECIFIED '||               32150003
*        'FOR STANDARD FORM MACRO')SKIP;                   /*@Y30LB02*/ 32200003
*        GO TO CKSW2;         /*BRANCH TO CK ERROR SWITCH    @Y30LB02*/ 32250003
*     END;                    /*                             @Y30LB02*/ 32300003
*   IF ECB = '' THEN          /*ECB SPECIFIED?               @Y30LB02*/ 32350003
*     DO;                     /*PRINT OUT ERROR MSG          @Y30LB02*/ 32400003
*        ERSW = 1;            /*SET ERROR SWITCH             @Y30LB02*/ 32450003
*        RETCODE = 12;        /*SET RETURN CODE              @Y30LB02*/ 32500003
*        ANS MSG('  ICB605I - ECB MUST BE SPECIFIED '||                 32550003
*        'FOR STANDARD FORM MACRO')SKIP;                   /*@Y30LB02*/ 32600003
*     END;                                                 /*@Y30LB02*/ 32650003
*/*                                                          @Y30LB02*/ 32700003
*CKSW2:                                                                 32750003
*   IF ERSW = 1 THEN         /*ERROR SWITCH SET?             @Y30LB02*/ 32800003
*     GO TO FINISH;          /*YES,BRANCH TO END             @Y30LB02*/ 32850003
*   IF TESTMCRT = 1 THEN     /*STD FORM INVOKED BEFORE?      @Y30LB02*/ 32900003
*     DO;                    /*YES,NO DECLARES               @Y30LB02*/ 32950003
*        ANS('/*******************************************'||           33000003
*           '************** @Y30LB02*/')SKIP;                           33050003
*        ANS('/*    MACMEAN  MSSC MOVE CARTRIDGE MACRO    '||           33100003
*            '               @Y30LB02*/')SKIP;                          33150003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           33200003
*            '               @Y30LB02*/')SKIP;                          33250003
*        ANS('/*THIS IS THE OUTPUT FOR A SECONDARY        '||           33300003
*            '               @Y30LB02*/')SKIP;                          33350003
*        ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '||           33400003
*            '               @Y30LB02*/')SKIP;                          33450003
*        ANS('/*******************************************'||           33500003
*            '************** @Y30LB02*/')SKIP;                          33550003
*        ANS('RFY(MCR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;          33600003
*        ANS('MCR1=ADDR(MCRTLEN); /*R1 PTR TO REQ @Y30LB02*/')SKIP;     33650003
*        ANS('MCRTLEN= '||QUOTE(MCRTLN)||'X; '||           /*@Y30LB02*/ 33700003
*        '/*LENGTH-MOVE REQUEST @Y30LB02*/')SKIP;                       33750003
*        ANS('MCRTOPCD= '||QUOTE(MCRTCD)||'X;'||           /*@Y30LB02*/ 33800003
*        '/*MOVE CARTRIDGE OPCODE @Y30LB02*/')SKIP;                     33850003
*        GO TO COMPROC;      /*BRCH,CK PARAMETERS            @Y30LB02*/ 33900003
*     END;                   /*                              @Y30LB02*/ 33950003
*/*                                                          @Y30LB02*/ 34000003
*   ELSE                     /*1ST INVOC STD FORM            @Y30LB02*/ 34050003
*     DO;                    /*PUT OUT DECLARES              @Y30LB02*/ 34100003
*        ANS('/*******************************************'||           34150003
*            '************** @Y30LB02*/')SKIP;                          34200003
*        ANS('/*   MACMEAN  MSSC MOVE CARTRIDGE MACRO     '||           34250003
*            '               @Y30LB02*/')SKIP;                          34300003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           34350003
*            '               @Y30LB02*/')SKIP;                          34400003
*        ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '||           34450003
*            '               @Y30LB02*/')SKIP;                          34500003
*        ANS('/*******************************************'||           34550003
*            '************** @Y30LB02*/')SKIP;                          34600003
*        ANS('RFY(MCR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;          34650003
*        ANS('MCR1=ADDR(MCRTLEN);/*R1 PTR TO REQBLK @Y30LB02*/')SKIP;   34700003
*        ANS('DCL 1  MCRTSF01  STATIC LOCAL,'||                         34750003
*        '/*MOVE CART REQUEST BLOCK @Y30LB02*/')SKIP;                   34800003
*        ANS('    2  MCRTLEN  FIXED(31)INIT('||QUOTE('30')||            34850003
*        'X),/*LENG OF MOVE CARTRIDGE REQUEST BLK @Y30LB02*/')SKIP;     34900003
*        ANS('    2  MCRTOPCD  FIXED(8)INIT('||QUOTE('0E')||            34950003
*        'X), /*MOVE CARTRIDGE OPCODE @Y30LB02*/')SKIP;                 35000003
*        ANS('    2  MCRTRES1 CHAR(1)INIT('||QUOTE                      35050003
*        ('00')||'X),/*RESERVED AND ZERO @Y30LB02*/')SKIP;              35100003
*        ANS('    2  MCRTFLG   BIT(8)INIT('||QUOTE                      35150003
*        ('00000000')||'B),/*ONE BYTE FLAGS AREA @Y30LB02*/')SKIP;      35200003
*        ANS('       3  *      BIT(2),/*RESERVED AND'||                 35250003
*        ' MUST BE ZERO @Y30LB02*/')SKIP;                               35300003
*        ANS('       3  MCRTTRAN  BIT(1),/*SOURCE WITH'||               35350003
*        ' TRANSIENT CSN1 SPECD @Y30LB02*/')SKIP;                       35400003
*        ANS('       3  MCRTSCT  BIT(1),/*SOURCE WITH'||                35450003
*        ' SCRATCH ATTRIBUTE @Y30LB02*/')SKIP;                          35500003
*        ANS('       3  *       BIT(4),/*RESERVED AND'||                35550003
*        ' MUST BE ZERO @Y30LB02*/')SKIP;                               35600003
*        ANS('    2  MCRTLIB  BIT(8)INIT('||QUOTE                       35650003
*        ('00000000')||'B), /*ONE BYTE-LIBID @Y30LB02*/')SKIP;          35700003
*        ANS('       3  *       BIT(5),/*RESERVED AND'||                35750003
*        ' MUST BE ZERO @Y30LB02*/')SKIP;                               35800003
*        ANS('       3  MCRTLD    BIT(2),/*BINARY NUMBER'||             35850003
*        ' ZERO TO THREE @Y30LB02*/')SKIP;                              35900003
*        ANS('    2  MCRTRES2 CHAR(8) ,/*RESERVED @Y30LB02*/')SKIP;     35950003
*        ANS('     3  *(8) CHAR(1)INIT((8)'||QUOTE                      36000003
*        ('00')||'X),/*INIT RESERVED AREA TO ZERO @Y30LB02*/')SKIP;     36050003
*        ANS('    2  MCRTRES3 CHAR(8) ,/*RESERVED @Y30LB02*/')SKIP;     36100003
*        ANS('     3  *(8) CHAR(1)INIT((8)'||QUOTE                      36150003
*        ('00')||'X),/*INIT RES AREA TO ZERO @Y30LB02*/')SKIP;          36200003
*        ANS('    2  MCRTCSN  CHAR(12) ,/*CART SER NO @Y30LB02*/')SKIP; 36250003
*        ANS('     3  *(12) CHAR(1)INIT((12)'||QUOTE                    36300003
*        ('00')||'X),/*INIT CSN AREA TO ZERO @Y30LB02*/')SKIP;          36350003
*        ANS('    2  MCRTRES4 CHAR(2) INIT('||                          36400003
*        QUOTE('0000')||'X),/*RESERVED @Y30LB02*/')SKIP;                36450003
*        ANS('    2  MCRTASID CHAR(2) INIT('||                          36500003
*        QUOTE('0000')||'X),/*ASID AREA @Y30LB02*/')SKIP;               36550003
*        ANS('    2  MCRTECB  FIXED(31)INIT(0),/*EVENT '||              36600003
*        'CONTROL BLOCK ADDRESS @Y30LB02*/')SKIP;                       36650003
*        ANS('    2  MCRTVEXT  FIXED(31)INIT(0);/*MSVC '||              36700003
*        'EXTENSION AREA @Y30LB02*/')SKIP;                              36750003
*        TESTMCRT = TESTMCRT + 1; /*INCREM STD FORM CTR      @Y30LB02*/ 36800003
*     END;                        /*                         @Y30LB02*/ 36850003
*/*                                                          @Y30LB02*/ 36900003
*/*   COMMON PROCESSING FOR EXECUTE AND STANDARDS FORMS      @Y30LB02*/ 36950003
*/*                                                          @Y30LB02*/ 37000003
*COMPROC:                                                               37050003
*   IF FLAGS ^= '' THEN       /*FLAGS SPECIFIED?             @Y30LB02*/ 37100003
*/*                                                          @Y30LB02*/ 37150003
*        ANS('MCRTFLG= ' ||FLAGS||';/*VALUE OF FLAGS'||                 37200003
*        ' @Y30LB02*/')SKIP;                                            37250003
*/*                                                          @Y30LB02*/ 37300003
*   IF LIBID ^= '' THEN      /*MSF ID SPECIFIED?             @Y30LB02*/ 37350003
*        ANS('MCRTLIB= '||LIBID||';/*VALUE OF LIBID @Y30LB02*/')SKIP;   37400003
*/*                                                          @Y30LB02*/ 37450003
*   IF CSN ^= '' THEN        /*CART SERIAL NUMBER SPCD?      @Y30LB02*/ 37500003
*        ANS('MCRTCSN= '||CSN||';/*CARTRIDGE SERIAL'||                  37550003
*        ' NUMBER @Y30LB02*/')SKIP;                                     37600003
*/*                                                          @Y30LB02*/ 37650003
*   IF ECB ^= '' THEN        /*ECB SPECIFIED?                @Y30LB02*/ 37700003
*        ANS('MCRTECB=ADDR' ||ECB|| ';/*ADDRESS OF EVENT '||            37750003
*        'CONTROL BLOCK @Y30LB02*/')SKIP;                               37800003
*/*                                                          @Y30LB02*/ 37850003
*   IF VVICEXT ^= '' THEN    /*MSVC EXTENSION SPECIFIED?     @Y30LB02*/ 37900003
*        ANS('MCRTVEXT=ADDR'||VVICEXT|| ';/*MSVC '||                    37950003
*        'EXTENSION AREA @Y30LB02*/')SKIP;                              38000003
*/*      INVOKE THE SVC AND END PROCESSING                   @Y30LB02*/ 38050003
*/*                                                          @Y30LB02*/ 38100003
*        ANS('SVC (126);/*INVOKE THE SVC @Y30LB02*/')SKIP;              38150003
*        ANS('RFY  MCR1 UNRSTD;/*UNRESTRICT REG 1 @Y30LB02*/')SKIP;     38200003
*/*                                                          @Y30LB02*/ 38250003
*FINISH:                                                                38300003
*        RETURN CODE(RETCODE);                             /*@Y30LB02*/ 38350003
*        %END;                                             /*@Y30LB02*/ 38400003
