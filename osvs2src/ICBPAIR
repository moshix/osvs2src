* %/* START OF SPECIFICATIONS  ***                             @Y30LB02 00050003
.*                                                             @Y30LB02 00100003
.*01  MODULE-NAME = ICBPAIR                                    @Y30LB02 00150003
.*                                                             @Y30LB02 00200003
.*01  DESCRIPTIVE-NAME = PURGE/ASSIGN PRIMARY HOST/            @Y30LB02 00250003
.*                       INITIALIZE/HOST READY                 @Y30LB02 00300003
.*                                                             @Y30LB02 00350003
.*01  COPYRIGHT = NONE                                         @Y30LB02 00400003
.*                                                             @Y30LB02 00450003
.*01  STATUS = OS/VS1 RELEASE 4.0,                             @Y30LB02 00500003
.*             OS/VS2 RELEASE 3.0                              @Y30LB02 00550003
.*                                                             @Y30LB02 00600003
.*01  FUNCTION = BUILDS A REQUEST BLOCK FOR A PURGE/           @Y30LB02 00650003
.*               ASSIGN PRIMARY HOST/INITIALIZE/               @Y30LB02 00700003
.*               HOST READY REQUEST.  THE MACRO IS A           @Y30LB02 00750003
.*               COMMUNICATION LINK BETWEEN THE CALLER         @Y30LB02 00800003
.*               AND THE MSSC SVC MODULE.                      @Y30LB02 00850003
.*                                                             @Y30LB02 00900003
.*01  NOTES = ICBPAIR IS A BILINQUAL MACRO.                    @Y30LB02 00950003
.*                                                             @Y30LB02 01000003
.*02    DEPENDENCIES = NONE                                    @Y30LB02 01050003
.*                                                             @Y30LB02 01100003
.*02    RESTRICTIONS = THE CALLER SHOULD AVOID USING THE       @Y30LB02 01150003
.*        THE FOLLOWING PREFIXES: ICB, AIR, PAIR, AND PURG.    @Y30LB02 01200003
.*                                                             @Y30LB02 01250003
.*02    REGISTER-CONVENTIONS = FOLLOWS NORMAL USE OF           @Y30LB02 01300003
.*                             REGISTERS BY MACROS:            @Y30LB02 01350003
.*                             R0,R1,R14, AND R15.             @Y30LB02 01400003
.*                                                             @Y30LB02 01450003
.*01  MODULE-TYPE = MACRO                                      @Y30LB02 01500003
.*                                                             @Y30LB02 01550003
.*02    PROCESSOR = PLS2 AND ASSEM                             @Y30LB02 01600003
.*                                                             @Y30LB02 01650003
.*01  INPUT                                                    @Y30LB02 01700003
.*                                                             @Y30LB02 01750003
.*     THE PURGE REQUEST IS ISSUED WHEN THE CALLER WANTS ALL   @Y30LB02 01800003
.*     VOLUMES MOUNTED FOR THE HOST (OPTIONALLY SPECIFIED BY   @Y30LB02 01850003
.*     THE HOST ID) TO BE DEMOUNTED.  IF THE FLAGS FIELD IS    @Y30LB02 01900003
.*     SPECIFIED, THEN THE PURGE IS FOR THE OTHER PROCESSOR    @Y30LB02 01950003
.*     OF THE MP PAIR.                                         @Y30LB02 02000003
.*                                                             @Y30LB02 02050003
.*     THE ASSIGN PRIMARY HOST REQUREST IS ISSUED WHEN THE     @Y30LB02 02100003
.*     CALLER WISHES TO ESTABLISH THE HOST TO RECEIVE UN-      @Y30LB02 02150003
.*     TAGGED MESSAGES; THAT IS, MESSAGES FROM THE SUBSYSTEM   @Y30LB02 02200003
.*     NOT ASSOCIATED WITH A PARTICULAR ORDER OR REQUEST.      @Y30LB02 02250003
.*                                                             @Y30LB02 02300003
.*     THE INITIALIZE REQUEST IS ISSUED WHEN THE CALLER        @Y30LB02 02350003
.*     WISHES TO ESTABLISH COMMUNICATION WITH THE MSC, OR TO   @Y30LB02 02400003
.*     INITIALIZE BOTH CPUS OF A TIGHTLY COUPLED MP PAIR.      @Y30LB02 02450003
.*     (IF THE FLAGS FIELD IS SPECIFIED, THEN, INITIALIZE      @Y30LB02 02500003
.*     BOTH CPUS OF A TIGHTLY COUPLED MP ENVIRONMENT).         @Y30LB02 02550003
.*                                                             @Y30LB02 02600003
.*     THE HOST READY REQUEST IS ISSUED WHEN THE CALLER        @Y30LB02 02650003
.*     WANTS TO INDICATE TO THE MSC THAT THE HOST IS READY     @Y30LB02 02700003
.*     TO ACCEPT ATTENTION INTERRUPTS.                         @Y30LB02 02750003
.*                                                             @Y30LB02 02800003
.*   MACRO SYNTAX                                              @Y30LB02 02850003
.*                                                             @Y30LB02 02900003
.*   LIST FORM                                                 @Y30LB02 02950003
.*                                                             @Y30LB02 03000003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 03050003
.*                                                             @Y30LB02 03100003
.*ICBPAIR  MF=L - (BAL)          MF=(L,MAP) - BAL              @Y30LB02 03150003
.*         MF(L,NAME/(R))-PLS    MF(L,NAME/(R),ATTR)-PLS       @Y30LB02 03200003
.*         TYPE=PURG/APH/INITL/RDY                             @Y30LB02 03250003
.*                                                             @Y30LB02 03300003
.*   STANDARD FORM                                             @Y30LB02 03350003
.*                                                             @Y30LB02 03400003
.* VERB    REQUIRED PARMS            OPTIONAL PARMS            @Y30LB02 03450003
.*                                                             @Y30LB02 03500003
.*ICBPAIR  TYPE=PURG/APH/INITL/RDY  FLAGS=ADDR/(R)             @Y30LB02 03550003
.*                                  HOSTID=ADDR/(R)            @Y30LB02 03600003
.*                                                             @Y30LB02 03650003
.* EXECUTE FORM                                                @Y30LB02 03700003
.*                                                             @Y30LB02 03750003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 03800003
.*                                                             @Y30LB02 03850003
.*ICBPAIR  MF(E,NAME/(R))       MF(E,NAME/(R),COMPLETE)-PLS    @Y30LB02 03900003
.*      TYPE=PURG/APH/INITL/RDY FLAGS=ADDR/(R)                 @Y30LB02 03950003
.*                              HOSTID=ADDR/(R)                @Y30LB02 04000003
.*                                                             @Y30LB02 04050003
.*   KEYWORD PARAMETERS:                                       @Y30LB02 04100003
.*                                                             @Y30LB02 04150003
.*                                                             @Y30LB02 04200003
.*   MF  -  MACRO FORMAT: THIS PARAMETER DESCRIBES THE         @Y30LB02 04250003
.*          MACRO FORMAT AND MAY GIVE THE ADDRESS OR           @Y30LB02 04300003
.*          ADDRESS IN A REGISTER WHERE THE REQUEST BLOCK      @Y30LB02 04350003
.*          IS STORED.                                         @Y30LB02 04400003
.*                                                             @Y30LB02 04450003
.*          L - LIST FORM: THE EXPANSION OF THE L-FORM         @Y30LB02 04500003
.*              MACRO WILL RESULT IN A REQUEST BLOCK WITH      @Y30LB02 04550003
.*              THE ONLY NON-ZERO FIELDS BEING THE OPCODE      @Y30LB02 04600003
.*              AND LENGTH FIELDS.                             @Y30LB02 04650003
.*                                                             @Y30LB02 04700003
.*          (1) 'MAP' - IF MAP IS SPECIFIED WITH THE           @Y30LB02 04750003
.*              ASSEMBLER MACRO CALL A DSECT EQUIVALENT TO     @Y30LB02 04800003
.*              A MAPPING MACRO IS PRODUCED.                   @Y30LB02 04850003
.*                                                             @Y30LB02 04900003
.*          (2) NAME - THE MACRO INVOKER MUST SPECIFY A        @Y30LB02 04950003
.*              NAME FOR HIS STRUCTURE WHEN INVOKING THE       @Y30LB02 05000003
.*              PLS LIST FORM.                                 @Y30LB02 05050003
.*                                                             @Y30LB02 05100003
.*          (3) ATTRIBUTE - THE MACRO WILL PLACE ANY PLS       @Y30LB02 05150003
.*              ATTRIBUTE SPECIFIED IN THE MACRO INVOCATION    @Y30LB02 05200003
.*              IN AN UNINITIALIZED REQUEST BLOCK.  ATTRI-     @Y30LB02 05250003
.*              BUTE EXAMPLE:                                  @Y30LB02 05300003
.*                                                             @Y30LB02 05350003
.*              CHAR, FIXED, STATIC LOCAL, NONLOCAL,           @Y30LB02 05400003
.*              BASED(*), ETC.                                 @Y30LB02 05450003
.*                                                             @Y30LB02 05500003
.*       NULL - STANDARD FORM: THE EXPANSION OF THIS FORM      @Y30LB02 05550003
.*              CONSISTS OF A REQUEST BLOCK, A LINKAGE         @Y30LB02 05600003
.*              INSTRUCTION, AND, POSSIBLY, PARAMETER          @Y30LB02 05650003
.*              BINDING INSTRUCTIONS.                          @Y30LB02 05700003
.*                                                             @Y30LB02 05750003
.*          E - EXECUTABLE FORM: THE EXPANSION OF THIS FORM    @Y30LB02 05800003
.*              CONSISTS OF A LINKAGE INSTRUCTION AND          @Y30LB02 05850003
.*              POSSIBLY, PARAMETER BINDING INSTRUCTIONS.      @Y30LB02 05900003
.*                                                             @Y30LB02 05950003
.*              SUB-PARAMETERS                                 @Y30LB02 06000003
.*                                                             @Y30LB02 06050003
.*              (1)  AN E MUST BE SPECIFIED IN THE FIRST       @Y30LB02 06100003
.*                   SUB-PARAMETER POSITION.  THIS INDICATES   @Y30LB02 06150003
.*                   THAT THE MACRO IS IN EXECUTABLE FORM.     @Y30LB02 06200003
.*                                                             @Y30LB02 06250003
.*              (2)  A NAME OR A REGISTER MUST BE SPECIFIED    @Y30LB02 06300003
.*                   IN THE SECOND SUB-PARAMETER.              @Y30LB02 06350003
.*                                                             @Y30LB02 06400003
.*              (3)  'COMPLETE' - COMPLETE WILL CAUSE THE      @Y30LB02 06450003
.*                   MACRO TO ZERO OUT THE REQUEST BLOCK.      @Y30LB02 06500003
.*                   AFTER ZEROING THE REQUEST BLOCK THE       @Y30LB02 06550003
.*                   FUNCTION OPCODE AND LENGTH ARE PLACED     @Y30LB02 06600003
.*                   IN THE REQUEST BLOCK.                     @Y30LB02 06650003
.*                                                             @Y30LB02 06700003
.*   TYPE - INDICATES WHETHER THE REQUEST IS FOR PURGE         @Y30LB02 06750003
.*          (PURG), ASSIGN PRIMARY HOST(APH), INITIALIZE       @Y30LB02 06800003
.*          (INTL) OR HOST READY(RDY) COMMAND. THE OPCODE      @Y30LB02 06850003
.*          FIELD OF THE REQUEST BLOCK IS FILLED IN BY         @Y30LB02 06900003
.*          THE MACRO.  THE FOLLOWING TABLE GIVES THE          @Y30LB02 06950003
.*          OPCODES FOR EACH REQUEST.                          @Y30LB02 07000003
.*                                                             @Y30LB02 07050003
.*               REQUEST               | OPCODE                @Y30LB02 07100003
.*               -----------------------------------           @Y30LB02 07150003
.*               PURGE                 | HEX'14'               @Y30LB02 07200003
.*               ASSIGN PRIMARY HOST   | HEX'12'               @Y30LB02 07250003
.*               INITIALIZE            | HEX'10'               @Y30LB02 07300003
.*               HOST READY            | HEX'20'               @Y30LB02 07350003
.*                                                             @Y30LB02 07400003
.*   HOSTID-OPTIONALLY INDICATES THE HOST (OTHER THAN THE      @Y30LB02 07450003
.*          ISSUING HOST) FOR WHICH THE REQUEST IS BEING       @Y30LB02 07500003
.*          ISSUED.  SPECIFIED FOR PURGE REQUESTS ONLY.        @Y30LB02 07550003
.*                                                             @Y30LB02 07600003
.*   FLAGS -THE FIELD WHICH INDICATES THE FUNCTION(S) TO BE    @Y30LB02 07650003
.*          PERFORMED.  THIS PARAMETER IS SPECIFIED ONLY IF    @Y30LB02 07700003
.*          TYPE IS SPECIFIED AS INITL OR PURG.  THE FORMAT    @Y30LB02 07750003
.*          OF THE FIELD IS SHOWN BELOW.                       @Y30LB02 07800003
.*                                                             @Y30LB02 07850003
.*   FLAGS:  2 BYTES                                           @Y30LB02 07900003
.*    _________________________________                        @Y30LB02 07950003
.*    | | |0|0|0|0|0|0|0|0|0|0|0|0|0|0|                        @Y30LB02 08000003
.*    _________________________________                        @Y30LB02 08050003
.*                                                             @Y30LB02 08100003
.*                                                             @Y30LB02 08150003
.* IF TYPE IS SPECIFIED AS INITL, THEN:                        @Y30LB02 08200003
.*                                                             @Y30LB02 08250003
.*   BIT 0-------  ALWAYS ZEROES                               @Y30LB02 08300003
.*                                                             @Y30LB02 08350003
.*   BIT 1--'1'B,  INITIALIZE BOTH CPU'S OF A TIGHTLY          @Y30LB02 08400003
.*                 COUPLED MP ENVIRONMENT                      @Y30LB02 08450003
.*          '0'B,  NO FUNCTION REQUESTED                       @Y30LB02 08500003
.*                                                             @Y30LB02 08550003
.*   BITS 2-15--   ALWAYS ZEROES.                              @Y30LB02 08600003
.*                                                             @Y30LB02 08650003
.* IF TYPE IS  SPECIFIED AS PURG, THEN:                        @Y30LB02 08700003
.*                                                             @Y30LB02 08750003
.*   BIT 0--'1'B,  PURGE FOR THE OTHER PROCESSOR OF THIS       @Y30LB02 08800003
.*                  MP PAIR.                                   @Y30LB02 08850003
.*          '0'B, PURGE IS FOR REQUESTING HOST.                @Y30LB02 08900003
.*                                                             @Y30LB02 08950003
.*   BITS 1-15--ALWAYS ZEROES.                                 @Y30LB02 09000003
.*                                                             @Y30LB02 09050003
.*                                                             @Y30LB02 09100003
.*01  EXIT-NORMAL = VALID INVOCATION                           @Y30LB02 09150003
.*                                                             @Y30LB02 09200003
.*02    CONDITION = RETURN CODE = 0.                           @Y30LB02 09250003
.*                                                             @Y30LB02 09300003
.*02    OUTPUT = IN-LINE PLS/BAL STATEMENTS THAT PERFORM       @Y30LB02 09350003
.*               THE REQUESTED FUNCTION.                       @Y30LB02 09400003
.*                                                             @Y30LB02 09450003
.*01  EXIT-ERROR = INVALID INVOCATION                          @Y30LB02 09500003
.*                                                             @Y30LB02 09550003
.*02    CONDITION = RETURN CODE = 12.                          @Y30LB02 09600003
.*                                                             @Y30LB02 09650003
.*02    OUTPUT = ERROR MESSAGE                                 @Y30LB02 09700003
.*                                                             @Y30LB02 09750003
.*01  EXTERNAL-REFERENCES = NONE                               @Y30LB02 09800003
.*                                                             @Y30LB02 09850003
.*01  TABLES = NONE                                            @Y30LB02 09900003
.*                                                             @Y30LB02 09950003
.*01 MESAGES = AS FOLLOWS:                                     @Y30LB02 10000003
.*           ICB600I: TYPE MUST BE SPECIFIED                   @Y30LB02 10050003
.*           ICB601I: TYPE IS INCORRECTLY SPECIFIED            @Y30LB02 10100003
.*           ICB602I: A NAME FOR THE REQUEST BLOCK MUST        @Y30LB02 10150003
.*                    BE SPECIFIED IN MF(2)                    @Y30LB02 10200003
.*           ICB612I: MF(2) MUST CONTAIN REQ BLK NAME          @Y30LB02 10250003
.*                    IF EXEC MACRO FORM REQUESTED             @Y30LB02 10300003
.*           ICB613I: MISSING REQ BLK NAME OR MORE             @Y30LB02 10350003
.*                    THAN 2 SUBPARAMETERS FOR MF              @Y30LB02 10400003
.*           ICB615I: INVALID MF PARAMETER SPECIFIED,          @Y30LB02 10450003
.*                    MUST BE L, E, OR NULL                    @Y30LB02 10500003
.*                                                             @Y30LB02 10550003
.*01  INNER-MACRO = NONE                                       @Y30LB02 10600003
.*                                                             @Y30LB02 10650003
.*01  SYSTEM-MACROS = IHBINNRA                                 @Y30LB02 10700003
.*                                                             @Y30LB02 10750003
.*01  CHANGE-ACTIVITY = S/D = X04AC02 AND Y30LB02              @Y30LB02 10800003
.*                                                             @Y30LB02 10850003
.**** END OF SPECIFICATIONS ***                                @Y30LB02 10900003
         MACRO                                                 @Y30LB02 10950003
&SYMBOL  ICBPAIR &MF=,&TYPE=,&HOSTID=,&FLAGS=                  @Y30LB02 11000003
         LCLB  &ESW                    EXIT-SWITCH             @Y30LB02 11050003
         LCLB  &BSW                    BRCH-SWITCH             @Y30LB02 11100003
         LCLB  &LSW                    LINK-SWITCH             @Y30LB02 11150003
         LCLC  &PARMAC                 SETC SYMBOL             @Y30LB02 11200003
         LCLC  &PURMAC                 SETC SYMBOL             @Y30LB02 11250003
&PARMAC  SETC  'P'.'&SYSNDX'                                   @Y30LB02 11300003
&PURMAC  SETC  'PU'.'&SYSNDX'                                  @Y30LB02 11350003
         AIF   ('&TYPE' EQ 'PURG' OR '&TYPE' EQ 'APH' OR               *11400003
               '&TYPE' EQ 'INITL' OR '&TYPE' EQ 'RDY').TEST1   @Y30LB02 11450003
&ESW     SETB  1                       SET EXIT-SWITCH TO 1    @Y30LB02 11500003
         AIF   ('&TYPE' EQ '').NOT     IF TYPE NULL, BRCH      @Y30LB02 11550003
         MNOTE 12,'  ICB601I - TYPE IS INCORRECTLY SPECIFIED'  @Y30LB02 11600003
         AGO   .TEST1                  BRANCH                  @Y30LB02 11650003
.NOT     ANOP                                                  @Y30LB02 11700003
         MNOTE 12,'  ICB600I - TYPE MUST BE SPECIFIED '        @Y30LB02 11750003
.TEST1   AIF   (&ESW).EXIT             IF EXIT-SWITCH ON,BRCH  @Y30LB02 11800003
         AIF   ('&MF(1)' NE 'L').NLIST BRCH IF NOT LIST FORM   @Y30LB02 11850003
*  MACMEAN  PURGE/ASSIGN/INITIALIZE/READY MACRO                @Y30LB02 11900003
*    INITIALIZED/UNINITIALIZED LIST FORM                       @Y30LB02 11950003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 12000003
         AIF   ('&TYPE' EQ 'PURG').LPURG BRCH IF PURG REQUEST  @Y30LB02 12050003
         AIF   ('&MF(2)' EQ 'MAP').LISTDS   DESECT REQUESTED   @Y30LB02 12100003
&SYMBOL  DS    0F                                              @Y30LB02 12150003
AIRLEN   DC    F'8'                    REQUEST BLOCK LENGTH    @Y30LB02 12200003
         AIF   ('&TYPE' EQ 'APH').LAPH BRCH IF APH REQUEST     @Y30LB02 12250003
         AIF   ('&TYPE' EQ 'INITL').LINITL BRCH IF INITL REQ.  @Y30LB02 12300003
AIROP    DC    XL1'20'                 RDY OPCODE              @Y30LB02 12350003
         AGO   .ZEROES                 BRANCH                  @Y30LB02 12400003
.LAPH    ANOP                                                  @Y30LB02 12450003
AIROP    DC    XL1'12'                 APH OPCODE              @Y30LB02 12500003
         AGO   .ZEROES                 BRANCH                  @Y30LB02 12550003
.LINITL  ANOP                                                  @Y30LB02 12600003
AIROP    DC    XL1'10'                 INITL OPCODE            @Y30LB02 12650003
.ZEROES  ANOP                                                  @Y30LB02 12700003
AIRRES0  DC    XL1'00'                 ZERO RESERVED FIELD     @Y30LB02 12750003
AIRFLAG  DC    XL2'0000'               ZERO FLAGS FIELD        @Y30LB02 12800003
         AGO   .EXIT                   BRANCH                  @Y30LB02 12850003
.*                                                             @Y30LB02 12900003
.LISTDS  ANOP                                                  @Y30LB02 12950003
ICBPAIR  DSECT                                                 @Y30LB02 13000003
AIRLEN   DS    F                       REQUEST BLK 8 BYTES     @Y30LB02 13050003
         AIF   ('&TYPE' EQ 'APH').LAPH1 BRCH IF APH REQUEST    @Y30LB02 13100003
         AIF   ('&TYPE' EQ 'INITL').LINITL1 BRCH IF INITL REQ. @Y30LB02 13150003
AIROP    DS    XL1                     RDY OPCODE 20 HEX       @Y30LB02 13200003
         AGO   .ZEROE1                 BRANCH                  @Y30LB02 13250003
.LAPH1   ANOP                                                  @Y30LB02 13300003
AIROP    DS    XL1                     APH OPCODE 12 HEX       @Y30LB02 13350003
         AGO   .ZEROE1                 BRANCH                  @Y30LB02 13400003
.LINITL1 ANOP                                                  @Y30LB02 13450003
AIROP    DS    XL1                     INITL OPCODE 10 HEX     @Y30LB02 13500003
.ZEROE1  ANOP                                                  @Y30LB02 13550003
AIRRES0  DS    XL1                     ZERO RESERVED FIELD     @Y30LB02 13600003
AIRFLAG  DS    XL2                     ZERO FLAGS FIELD        @Y30LB02 13650003
         AGO   .EXIT                   BRANCH                  @Y30LB02 13700003
.*                                                             @Y30LB02 13750003
.LPURG   ANOP                                                  @Y30LB02 13800003
         AIF   ('&MF(2)' EQ 'MAP').LPURGDS  PURGE DSECT        @Y30LB02 13850003
&SYMBOL  DS    0F                                              @Y30LB02 13900003
PURGLEN  DC    F'13'                   PURGE BLOCK LENGTH      @Y30LB02 13950003
PURGOP   DC    XL1'14'                 PURG OPCODE             @Y30LB02 14000003
PURGRES0 DC    XL1'00'                 ZERO RESERVED FIELD     @Y30LB02 14050003
PURGFLG  DC    XL2'0000'               ZERO FLAGS FIELD        @Y30LB02 14100003
PURGHOST DC    XL5'0000000000'         ZERO HOSTID FIELD       @Y30LB02 14150003
         AGO   .EXIT                   BRCH TO EXIT            @Y30LB02 14200003
.*                                                             @Y30LB02 14250003
.LPURGDS ANOP                                                  @Y30LB02 14300003
ICBPAIR  DSECT                                                 @Y30LB02 14350003
PURGLEN  DS    F                       PURGE BLK 13 BYTES      @Y30LB02 14400003
PURGOP   DS    XL1                     PURG OPCODE 14 HEX      @Y30LB02 14450003
PURGRES0 DS    XL1                     ZERO RESERVED FIELD     @Y30LB02 14500003
PURGFLG  DS    XL2                     FLAGS FIELD             @Y30LB02 14550003
PURGHOST DS    CL5                     HOSTID FIELD            @Y30LB02 14600003
         AGO   .EXIT                   BRCH TO EXIT            @Y30LB02 14650003
.*                                                             @Y30LB02 14700003
.NLIST   AIF   ('&MF(1)' NE '').EXCK   IF NOT STD FORM,BRCH    @Y30LB02 14750003
*  MACMEAN  PURGE/ASSIGN/INITIALIZE/READY MACRO                @Y30LB02 14800003
*              STANDARD FORM                                   @Y30LB02 14850003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 14900003
         CNOP  0,4                                             @Y30LB02 14950003
         AIF   ('&TYPE' EQ 'PURG').SPURG BRCH IF PURG REQUEST  @Y30LB02 15000003
&SYMBOL  BAL   1,&PARMAC               BRCH AROUND BLOCK       @Y30LB02 15050003
AIRLEN   DC    A(&PARMAC-*)            REQUEST BLOCK LENGTH    @Y30LB02 15100003
         AIF   ('&TYPE' EQ 'APH').SAPH BRCH IF APH REQUEST     @Y30LB02 15150003
         AIF   ('&TYPE' EQ 'INITL').SINITL BRCH IF INITL REQ.  @Y30LB02 15200003
AIROP    DC    XL1'20'                 RDY OPCODE              @Y30LB02 15250003
         AGO   .REST                   BRCH TO REST OF DC'S    @Y30LB02 15300003
.SAPH    ANOP                                                  @Y30LB02 15350003
AIROP    DC    XL1'12'                 APH OPCODE              @Y30LB02 15400003
         AGO   .REST                   BRCH TO REST OF DC'S    @Y30LB02 15450003
.SINITL  ANOP                                                  @Y30LB02 15500003
AIROP    DC    XL1'10'                 INITL OPCODE            @Y30LB02 15550003
.REST    ANOP                                                  @Y30LB02 15600003
AIRRES0  DC    XL1'00'                 ZERO RESERVED FIELD     @Y30LB02 15650003
AIRFLAG  DC    XL2'0000'               ZERO FLAGS FIELD        @Y30LB02 15700003
&PARMAC  EQU   *                                               @Y30LB02 15750003
         AGO   .CONT0                  BRCH IF NOT PURGE       @Y30LB02 15800003
.SPURG   ANOP                                                  @Y30LB02 15850003
&SYMBOL  BAL   1,&PURMAC               BRCH AROUND BLOCK       @Y30LB02 15900003
PURGLEN  DC    A(&PARMAC-*)            REQUEST BLOCK LENGTH    @Y30LB02 15950003
PURGOP   DC    XL1'14'                 PURG OPCODE             @Y30LB02 16000003
PURGRES0 DC    XL1'00'                 ZERO RESERVED FIELD     @Y30LB02 16050003
PURGFLG  DC    XL2'0000'               ZERO FLAGS FIELD        @Y30LB02 16100003
PURGHOST DC    XL5'0000000000'         ZERO HOSTID FIELD       @Y30LB02 16150003
&PARMAC  EQU   *                                               @Y30LB02 16200003
&PURMAC  DS    0F                                              @Y30LB02 16250003
.CONT0   ANOP                                                  @Y30LB02 16300003
&BSW     SETB  1                       SET BRCH-SWITCH TO 1    @Y30LB02 16350003
         AGO   .TEST2                  BRANCH                  @Y30LB02 16400003
.EXCK    AIF   ('&MF(1)' EQ 'E').EXEC  IF EXECUTABLE FORM,BRCH @Y30LB02 16450003
&ESW     SETB  1                       SET EXIT-SWITCH TO 1    @Y30LB02 16500003
         MNOTE 12,'  ICB615I - INVALID MF PARAMETER '          @Y30LB02 16550003
         MNOTE 12,'  SPECIFIED, MUST BE, L, E, OR NULL'        @Y30LB02 16600003
         AGO   .TEST2                  BRANCH                  @Y30LB02 16650003
.EXEC    AIF   (N'&MF EQ 2).CONT1      IF 2 SUBPARAMETERS,BRH  @Y30LB02 16700003
&ESW     SETB  1                       SET EXIT-SWITCH TO 1    @Y30LB02 16750003
         MNOTE 12,'  ICB613I - MISSING REQ BLK NAME OR MORE '           16800003
         MNOTE 12,'  THAN 2 SUBPARAMETERS FOR MF '                      16850003
         AGO   .TEST2                  BRANCH                  @Y30LB02 16900003
.CONT1   ANOP                                                  @Y30LB02 16950003
*  MACMEAN  PURGE/ASSIGN/INITIALIZE/READY MACRO                @Y30LB02 17000003
*              EXECUTE FORM                                    @Y30LB02 17050003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 17100003
&SYMBOL  IHBINNRA &MF(2)               LOAD THE ADDR INTO R1   @Y30LB02 17150003
.*                                     BY USING IHBINNRA MAC   @Y30LB02 17200003
         AIF   ('&TYPE' EQ 'PURG').CONT2 BRCH IF PURGE         @Y30LB02 17250003
         LA    15,8                    PUT LENGTH(8) INTO R15  @Y30LB02 17300003
         AGO   .CONT3                                          @Y30LB02 17350003
.CONT2   ANOP                                                  @Y30LB02 17400003
         LA    15,13                   PUT LENGTH(13) INTO R15 @Y30LB02 17450003
.CONT3   ANOP                                                  @Y30LB02 17500003
         ST    15,0(1)                 R15 INTO LENGTH FIELD   @Y30LB02 17550003
.TEST2   AIF   (&ESW).EXIT             BRCH IF EXIT-SWITCH ON  @Y30LB02 17600003
         AIF   (&BSW).TYPECK           BRCH IF BRCH-SWITCH ON  @Y30LB02 17650003
         AIF   ('&TYPE' EQ 'PURG').EPURG BRCH IF PURG REQUEST  @Y30LB02 17700003
         AIF   ('&TYPE' EQ 'APH').EAPH BRCH IF APH REQUEST     @Y30LB02 17750003
         AIF   ('&TYPE' EQ 'INITL').EINITL BRCH IF INITL REQ.  @Y30LB02 17800003
         MVI   4(1),X'20'              PUT RDY OPCODE IN BLK   @Y30LB02 17850003
         AGO   .TYPECK                 BRANCH                  @Y30LB02 17900003
.EPURG   ANOP                                                  @Y30LB02 17950003
         MVI   4(1),X'14'              PUT PURG OPCODE IN BLK  @Y30LB02 18000003
         AGO   .TYPECK                 BRANCH                  @Y30LB02 18050003
.EAPH    ANOP                                                  @Y30LB02 18100003
         MVI   4(1),X'12'              PUT APH OPCODE IN BLK   @Y30LB02 18150003
         AGO   .TYPECK                 BRANCH                  @Y30LB02 18200003
.EINITL  ANOP                                                  @Y30LB02 18250003
         MVI   4(1),X'10'              PUT INITL OPCODE IN BLK @Y30LB02 18300003
.*      THE FOLLOWING CODE CHECKS FOR PURG BECAUSE HOSTID      @Y30LB02 18350003
.*      IS A VALID PARAMETER FOR THAT REQUEST ONLY.            @Y30LB02 18400003
.*      IF PURG IS NOT SPECIFIED THE SECTION OF CODE(AT TEST3) @Y30LB02 18450003
.*      THAT CHECKS FOR HOSTID IS BY-PASSED.                   @Y30LB02 18500003
.TYPECK  AIF   ('&TYPE' EQ 'PURG').CKFLG                       @Y30LB02 18550003
         AIF   ('&TYPE' NE 'INITL').SETLSW IF NOT INITL        @Y30LB02 18600003
.*                                     REQUEST,BRANCH          @Y30LB02 18650003
.*      THIS SECTION OF CODE IS FOR INITL REQUESTS.            @Y30LB02 18700003
.*      IT CHECKS FOR THE FLAGS PARAMETER.                     @Y30LB02 18750003
.CKFLG   AIF   ('&FLAGS' EQ '').SETLSW BRCH IF FLAGS ARE NULL  @Y30LB02 18800003
         AIF   ('&FLAGS'(1,1) EQ '(').RFLAGS BRCH IF IN REG.   @Y30LB02 18850003
         MVC   6(2,1),&FLAGS           MOVE FLAGS INFO INTO    @Y30LB02 18900003
*                                      FLAGS FIELD             @Y30LB02 18950003
         AIF   ('&TYPE' EQ 'PURG').TEST3 IF PURG-BRCH          @Y30LB02 19000003
         AIF   ('&TYPE' EQ 'PURG').TEST3 IF PURG-BRCH          @Y30LB02 19050003
         AGO   .SETLSW                 BRCH TO SET LSW         @Y30LB02 19100003
.RFLAGS  ANOP                                                  @Y30LB02 19150003
         MVC   6(2,1),0(&FLAGS(1))     MOVE FLAGS INFO INTO    @Y30LB02 19200003
*                                      FLAGS FIELD             @Y30LB02 19250003
         AIF   ('&TYPE' EQ 'PURG').TEST3 IF PURG-BRCH          @Y30LB02 19300003
         AIF   ('&TYPE' EQ 'PURG').TEST3 IF PURG-BRCH          @Y30LB02 19350003
.SETLSW  ANOP                                                  @Y30LB02 19400003
         AIF   ('&TYPE' EQ 'PURG').TEST3 IF PURG-BRCH          @Y30LB02 19450003
         AIF   ('&TYPE' EQ 'PURG').TEST3 IF PURG-BRCH          @Y30LB02 19500003
&LSW     SETB  1                       SET LINK SWITCH TO 1    @Y30LB02 19550003
.TEST3   AIF   (&LSW).LINK             BRCH IF LINK-SWITCH ON  @Y30LB02 19600003
         AIF   ('&HOSTID' NE '').TEST4 BRCH IF NOT NULL        @Y30LB02 19650003
&LSW     SETB  1                       SET LINK-SWITCH TO 1    @Y30LB02 19700003
.TEST4   AIF   (&ESW).EXIT             BRCH IF EXIT-SWITCH ON  @Y30LB02 19750003
         AIF   (&LSW).LINK             BRCH IF LINK-SWITCH ON  @Y30LB02 19800003
         AIF   ('&HOSTID'(1,1) EQ '(').RHOSTID BRCH IF IN REG  @Y30LB02 19850003
         MVC   8(5,1),&HOSTID          MV HOSTID TO HOSTID FLD @Y30LB02 19900003
         AGO   .LINK                   BRANCH                  @Y30LB02 19950003
.RHOSTID ANOP                                                  @Y30LB02 20000003
         MVC   8(5,1),0(&HOSTID(1))    MV HOSTID TO HOSTID FLD @Y30LB02 20050003
.LINK    ANOP                                                  @Y30LB02 20100003
         SVC   126                     ISSUE SVC INSTRUCITON   @Y30LB02 20150003
.EXIT    MEND                          MACRO ENDS              @Y30LB02 20200003
**/                                                                     20250003
* ICBPAIR: MACRO KEYS(MF,TYPE,HOSTID,FLAGS);               /*@Y30LB02*/ 20300003
*/*                                                          @Y30LB02*/ 20350003
*/*                                                          @Y30LB02*/ 20400003
*/* EXTERNAL DECLARES                                        @Y30LB02*/ 20450003
*   DCL  AIRTEST FIXED EXT;            /*USED IN TESTS TO    @Y30LB02*/ 20500003
*   DCL PURGTEST FIXED EXT;            /*SEE IF STD FORMS    @Y30LB02*/ 20550003
*                                      /*HAVE ALREADY BEEN   @Y30LB02*/ 20600003
*                                      /*INVOKED             @Y30LB02*/ 20650003
*   DCL PAIRTSTR FIXED EXT;            /*USED AS A TEST TO   @Y30LB02*/ 20700003
*                                      /*SEE IF R1 ALREADY   @Y30LB02*/ 20750003
*                                      /*DECLARED            @Y30LB02*/ 20800003
*/* INTERNAL DECLARES                                        @Y30LB02*/ 20850003
*   DCL RETCODE FIXED;                 /*RETURN CODE         @Y30LB02*/ 20900003
*   DCL POPCODE CHAR;                  /*PURG OPCODE         @Y30LB02*/ 20950003
*   DCL AOPCODE CHAR;                  /*APH OPCODE          @Y30LB02*/ 21000003
*   DCL IOPCODE CHAR;                  /*INITL OPCODE        @Y30LB02*/ 21050003
*   DCL ROPCODE CHAR;                  /*RDY OPCODE          @Y30LB02*/ 21100003
*   DCL LENGTH CHAR;                   /*LENGTH OF LIST      @Y30LB02*/ 21150003
*   DCL PLENGTH CHAR;                  /*LEN OF PURG LIST    @Y30LB02*/ 21200003
*   DCL ESW FIXED;                     /*EXIT SWITCH         @Y30LB02*/ 21250003
*   DCL BSW FIXED;                     /*BRANCH SWITCH       @Y30LB02*/ 21300003
*   DCL LSW FIXED;                     /*LINK SWITCH         @Y30LB02*/ 21350003
*   POPCODE='14';                      /*PURG OPCODE         @Y30LB02*/ 21400003
*   AOPCODE='12';                      /*APH OPCODE          @Y30LB02*/ 21450003
*   IOPCODE='10';                      /*INITL OPCODE        @Y30LB02*/ 21500003
*   ROPCODE='20';                      /*RDY OPCODE          @Y30LB02*/ 21550003
*   LENGTH='08';                       /*DEFINE LENGTH       @Y30LB02*/ 21600003
*   PLENGTH='0D';                      /*DEF PURGE LENGTH    @Y30LB02*/ 21650003
*/* INITIALIZE SWITCHES TO ZERO                              @Y30LB02*/ 21700003
*   ESW=0;                                                 /*@Y30LB02*/ 21750003
*   BSW=0;                                                 /*@Y30LB02*/ 21800003
*   LSW=0;                                                 /*@Y30LB02*/ 21850003
*/* END OF DECLARES AND INITIALIZATION                       @Y30LB02*/ 21900003
*   IF TYPE(1)='PURG' THEN             /*PURG REQUEST?       @Y30LB02*/ 21950003
*        GO TO TEST1;                  /*YES, BRANCH         @Y30LB02*/ 22000003
*   IF TYPE(1)='APH'  THEN             /*APH  REQUEST?       @Y30LB02*/ 22050003
*        GO TO TEST1;                  /*YES, BRANCH         @Y30LB02*/ 22100003
*   IF TYPE(1)='INITL' THEN            /*INITL REQUEST?      @Y30LB02*/ 22150003
*        GO TO TEST1;                  /*YES, BRANCH         @Y30LB02*/ 22200003
*   IF TYPE(1)='RDY' THEN              /*RDY  REQUEST?       @Y30LB02*/ 22250003
*        GO TO TEST1;                  /*YES, BRANCH         @Y30LB02*/ 22300003
*   ESW=1;                             /*TURN ON ESW         @Y30LB02*/ 22350003
*   IF TYPE='' THEN                    /*IS TYPE NULL?       @Y30LB02*/ 22400003
*        DO;                           /*YES,PRT ERROR MSG   @Y30LB02*/ 22450003
*             ANS MSG('  ICB600I - TYPE'||                              22500003
*                  ' MUST BE SPECIFIED') SKIP(5);          /*@Y30LB02*/ 22550003
*        END;                                              /*@Y30LB02*/ 22600003
*   ELSE                               /*PRINT ERROR MSG     @Y30LB02*/ 22650003
*        DO;                                               /*@Y30LB02*/ 22700003
*             ANS MSG('  ICB601I - TYPE'||                              22750003
*                  ' IS INCORRECTLY SPECIFIED') SKIP(5);   /*@Y30LB02*/ 22800003
*        END;                                              /*@Y30LB02*/ 22850003
*   RETCODE=12;                                            /*@Y30LB02*/ 22900003
*TEST1: IF ESW=1 THEN                  /*ESW ON?             @Y30LB02*/ 22950003
*        GO TO EXIT;                   /*YES, GO TO EXIT     @Y30LB02*/ 23000003
*   IF PAIRTSTR=0 THEN                 /*WAS R1 ALREADY      @Y30LB02*/ 23050003
*                                      /*DECLARED?           @Y30LB02*/ 23100003
*        DO;                           /*NO,PRT DCL FOR R1   @Y30LB02*/ 23150003
*             ANS('DCL PAIRR1  REG(1) PTR; '||             /*@Y30LB02*/ 23200003
*                  '/* WILL CONTAIN BLK ADDRESS @Y30LB02*/') SKIP(1);   23250003
*             PAIRTSTR=1;              /*TURN SWITCH ON      @Y30LB02*/ 23300003
*        END;                                              /*@Y30LB02*/ 23350003
*   IF MF(1)^='L' THEN                 /*IF NOT LIST FORM    @Y30LB02*/ 23400003
*        GO TO NOTLIST;                /*BRANCH              @Y30LB02*/ 23450003
*   IF MF(2)='' THEN                   /*WAS A NAME GIVEN?   @Y30LB02*/ 23500003
*        DO;                           /*IF NOT, THEN        @Y30LB02*/ 23550003
*             ESW=1;                   /*TURN ON ESW         @Y30LB02*/ 23600003
*                                      /*AND,PRT ERROR MSG   @Y30LB02*/ 23650003
*             ANS MSG('  ICB602I - A NAME FOR THE '||                   23700003
*                  'REQUEST BLOCK MUST BE SPECIFIED '||                 23750003
*                  'IN MF(2)')SKIP(5);                     /*@Y30LB02*/ 23800003
*             RETCODE=12;                                  /*@Y30LB02*/ 23850003
*        END;                                              /*@Y30LB02*/ 23900003
*   IF ESW=1 THEN                      /*ESW ON?             @Y30LB02*/ 23950003
*        GO TO EXIT;                   /*YES,BRANCH TO EXIT  @Y30LB02*/ 24000003
*/*                                                          @Y30LB02*/ 24050003
*   IF MF(3) ^= '' THEN                                                 24100003
*        GO TO ATTRLST;                                    /*@Y30LB02*/ 24150003
*/*********************************************************  @Y30LB02*/ 24200003
*/* START TO PRINT OUT DECLARES FOR LIST FORM                @Y30LB02*/ 24250003
*/*********************************************************  @Y30LB02*/ 24300003
*/*                                                          @Y30LB02*/ 24350003
*   ANS('/*******************************************'||                24400003
*       '************** @Y30LB02*/')SKIP;                               24450003
*   ANS('/*MACMEAN  MSSC PURG/ASSIGN/INITL/READY MACRO'||               24500003
*       '              @Y30LB02*/')SKIP;                                24550003
*   ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||                24600003
*       '               @Y30LB02*/')SKIP;                               24650003
*   ANS('/*THIS IS THE INITIALIZED LIST FORM         '||                24700003
*       '               @Y30LB02*/')SKIP;                               24750003
*   ANS('/*******************************************'||                24800003
*       '************** @Y30LB02*/')SKIP;                               24850003
*   ANS('DCL 1   '||MF(2)||'  STATIC LOCAL,') SKIP(1);     /*@Y30LB02*/ 24900003
*   IF TYPE(1)^='PURG' THEN             /*NOT A PURG REQ?    @Y30LB02*/ 24950003
*        DO;                                               /*@Y30LB02*/ 25000003
*             ANS('      2  AIRLL FIXED(31) INIT('||QUOTE('08')||       25050003
*                  'X), /*LENGTH @Y30LB02*/')  SKIP(1);                 25100003
*             IF TYPE(1)='APH' THEN    /*APH REQUEST?        @Y30LB02*/ 25150003
*                  DO;                 /*PUT IN APH  OPCODE  @Y30LB02*/ 25200003
*                       ANS('      2  AIROP FIXED(8) INIT('             25250003
*                            ||QUOTE(AOPCODE)||                         25300003
*                            'X), /*OPCODE @Y30LB02*/') SKIP(1);        25350003
*                  END;                                    /*@Y30LB02*/ 25400003
*             ELSE                                                      25450003
*                  IF TYPE(1)='INITL' THEN /*INITL REQUEST?  @Y30LB02*/ 25500003
*                     DO;              /*PUT IN INITL  OPCD  @Y30LB02*/ 25550003
*                       ANS('      2  AIROP FIXED(8) INIT('             25600003
*                            ||QUOTE(IOPCODE)||                         25650003
*                            'X),/*OPCODE @Y30LB02*/') SKIP(1);         25700003
*                     END;                                 /*@Y30LB02*/ 25750003
*                  ELSE                                                 25800003
*                     DO;              /*PUT IN RDY OPCODE   @Y30LB02*/ 25850003
*                       ANS('      2  AIROP FIXED(8) INIT('             25900003
*                            ||QUOTE(ROPCODE)||                         25950003
*                            'X),/*OPCODE @Y30LB02*/') SKIP(1);         26000003
*                     END;                                 /*@Y30LB02*/ 26050003
*             ANS ('      2  * CHAR(1) INIT('||                         26100003
*                  QUOTE('00')||'X), /*ZEROES   @Y30LB02*/') SKIP(1);   26150003
*             ANS ('      2  AIRFLAG BIT(16) INIT('||                   26200003
*                 QUOTE('0000000000000000')||                           26250003
*                 'B),/*FLAGS/ZEROES @Y30LB02*/') SKIP(1);              26300003
*             ANS ('        3  AIRRESV BIT(1),'||                       26350003
*                  '/*RESERVED BIT  @Y30LB02*/') SKIP(1);               26400003
*             ANS ('        3  AIRCPUS BIT(1),'||                       26450003
*                  '/*INITIALIZE BOTH CPUS  @Y30LB02*/') SKIP(1);       26500003
*             ANS ('        3  *      BIT(14);'||          /*@Y30LB02*/ 26550003
*                  '/*RESERVED BITS  @Y30LB02*/') SKIP(1);              26600003
*        END;                                              /*@Y30LB02*/ 26650003
*   ELSE                               /*PURG REQUEST        @Y30LB02*/ 26700003
*        DO;                           /*DCL PURGE LIST      @Y30LB02*/ 26750003
*             ANS('      2  PURGLL FIXED(31) INIT('||QUOTE('0D')||      26800003
*                  'X), /*LENGTH @Y30LB02*/')  SKIP(1);                 26850003
*             ANS('      2  PURGOP FIXED(8) INIT('||                    26900003
*                  QUOTE(POPCODE)||'X), /*OPCODE @Y30LB02*/') SKIP(1);  26950003
*             ANS ('      2  * CHAR(1) INIT('||                         27000003
*                  QUOTE('00')||'X), /*ZEROES   @Y30LB02*/')            27050003
*                  SKIP(1);                                /*@Y30LB02*/ 27100003
*             ANS ('      2  PURGFLG BIT(16) INIT('||                   27150003
*                  QUOTE('0000000000000000')||'B),'||                   27200003
*                  '/*ZEROES   @Y30LB02*/') SKIP(1);                    27250003
*             ANS ('        3  PURGMPP BIT(1),'||                       27300003
*                  '/*PURGE OTHER PROCESSOR  @Y30LB02*/') SKIP(1);      27350003
*             ANS ('        3  *      BIT(15),'||                       27400003
*                  '/*RESERVED BITS  @Y30LB02*/') SKIP(1);              27450003
*             ANS('      2  PURGHOST CHAR(5) INIT('||                   27500003
*                  QUOTE('0000000000')||'X); /*HOSTID @Y30LB02*/')      27550003
*                  SKIP(1);                                /*@Y30LB02*/ 27600003
*        END;                                              /*@Y30LB02*/ 27650003
*   GO TO EXIT;                        /*BRANCH TO EXIT      @Y30LB02*/ 27700003
*/*                                                          @Y30LB02*/ 27750003
*/*********************************************************  @Y30LB02*/ 27800003
*/* THAT IS ALL THAT IS DONE FOR LIST FORM                   @Y30LB02*/ 27850003
*/*********************************************************  @Y30LB02*/ 27900003
*/*                                                          @Y30LB02*/ 27950003
*ATTRLST:                                                               28000003
*   ANS('/*******************************************'||                28050003
*       '************* @Y30LB02*/')SKIP;                                28100003
*   ANS('/*MACMEAN  MSSC PURG/ASSIGN/INITL/READY MACRO'||               28150003
*       '             @Y30LB02*/')SKIP;                                 28200003
*   ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||                28250003
*       '              @Y30LB02*/')SKIP;                                28300003
*   ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '||                28350003
*       '              @Y30LB02*/')SKIP;                                28400003
*   ANS('/*******************************************'||                28450003
*       '************* @Y30LB02*/')SKIP;                                28500003
*   ANS('DCL 1   '||MF(2)||' '||MF(3)||','||                            28550003
*              '/*REQUEST BLOCK @Y30LB02*/') SKIP(1);                   28600003
*   IF TYPE(1)^='PURG' THEN             /*NOT A PURG REQ?    @Y30LB02*/ 28650003
*        DO;                                               /*@Y30LB02*/ 28700003
*             ANS('      2  AIRLL FIXED(31) ,  '||                      28750003
*                  ' /*LENGTH  = 8 BYTES @Y30LB02*/')  SKIP(1);         28800003
*             IF TYPE(1)='APH' THEN    /*APH REQUEST?        @Y30LB02*/ 28850003
*                  DO;                 /*PUT IN APH  OPCODE  @Y30LB02*/ 28900003
*                       ANS('      2  AIROP FIXED(8),'||                28950003
*                            ' /*OPCODE=12 HEX @Y30LB02*/') SKIP(1);    29000003
*                  END;                                    /*@Y30LB02*/ 29050003
*             ELSE                                                      29100003
*                  IF TYPE(1)='INITL' THEN /*INITL REQUEST?  @Y30LB02*/ 29150003
*                     DO;              /*PUT IN INITL  OPCD  @Y30LB02*/ 29200003
*                       ANS('      2  AIROP FIXED(8),'||                29250003
*                            '/*OPCODE=10 HEX @Y30LB02*/') SKIP(1);     29300003
*                     END;                                 /*@Y30LB02*/ 29350003
*                  ELSE                                                 29400003
*                     DO;              /*PUT IN RDY OPCODE   @Y30LB02*/ 29450003
*                       ANS('      2  AIROP FIXED(8),'||                29500003
*                            '/*OPCODE=20 HEX @Y30LB02*/') SKIP(1);     29550003
*                     END;                                 /*@Y30LB02*/ 29600003
*             ANS ('      2  * CHAR(1),/*ZEROES   @Y30LB02*/') SKIP(1); 29650003
*             ANS ('      2  AIRFLAG BIT(16),'||                        29700003
*                 '/*FLAGS/ZEROES @Y30LB02*/') SKIP(1);                 29750003
*             ANS ('        3  AIRRESV BIT(1),'||                       29800003
*                  '/*RESERVED BIT  @Y30LB02*/') SKIP(1);               29850003
*             ANS ('        3  AIRCPUS BIT(1),'||                       29900003
*                  '/*INITIALIZE BOTH CPUS  @Y30LB02*/') SKIP(1);       29950003
*             ANS ('        3  *      BIT(14);'||          /*@Y30LB02*/ 30000003
*                  '/*RESERVED BITS  @Y30LB02*/') SKIP(1);              30050003
*        END;                                              /*@Y30LB02*/ 30100003
*   ELSE                               /*PURG REQUEST        @Y30LB02*/ 30150003
*        DO;                           /*DCL PURGE LIST      @Y30LB02*/ 30200003
*             ANS('      2  PURGLL FIXED(31),  '||                      30250003
*                  ' /*LENGTH=13 BYTES @Y30LB02*/')  SKIP(1);           30300003
*             ANS('      2  PURGOP FIXED(8),'||                         30350003
*                  ' /*OPCODE=14 HEX @Y30LB02*/') SKIP(1);              30400003
*             ANS ('      2  * CHAR(1),'||                              30450003
*                 '/*RESERVED/ZEROES @Y30LB02*/') SKIP(1);              30500003
*             ANS ('      2  PURGFLG BIT(16),'||                        30550003
*                  '/*FLAGS FIELD   @Y30LB02*/') SKIP(1);               30600003
*             ANS ('        3  PURGMPP BIT(1),'||                       30650003
*                  '/*PURGE OTHER PROCESSOR  @Y30LB02*/') SKIP(1);      30700003
*             ANS ('        3  *      BIT(15),'||                       30750003
*                  '/*RESERVED BITS  @Y30LB02*/') SKIP(1);              30800003
*             ANS('      2  PURGHOST CHAR(5);'||                        30850003
*                  ' /*HOSTID @Y30LB02*/') SKIP(1);                     30900003
*        END;                                              /*@Y30LB02*/ 30950003
*   GO TO EXIT;                        /*BRANCH TO EXIT      @Y30LB02*/ 31000003
*NOTLIST:                                                               31050003
*   IF MF(1)^='' THEN                  /*IF NOT STD FORM     @Y30LB02*/ 31100003
*        GO TO EXCHECK;                /*BRANCH              @Y30LB02*/ 31150003
*/*                                                          @Y30LB02*/ 31200003
*/*********************************************************  @Y30LB02*/ 31250003
*/* THIS PART OF THE MACRO IS FOR STD FORM (MF(1)='')        @Y30LB02*/ 31300003
*/*********************************************************  @Y30LB02*/ 31350003
*/*                                                          @Y30LB02*/ 31400003
*   IF TYPE(1)='PURG' THEN             /*PURG REQUEST?       @Y30LB02*/ 31450003
*        IF PURGTEST=1 THEN            /*IF STD FORM HAS     @Y30LB02*/ 31500003
*                                      /*BEEN INVOKED ALRDY  @Y30LB02*/ 31550003
*             DO;                      /*SET UP REG1 TO PT   @Y30LB02*/ 31600003
*                                      /*TO PURG LIST        @Y30LB02*/ 31650003
*   ANS('/*******************************************'||                31700003
*       '************* @Y30LB02*/')SKIP;                                31750003
*   ANS('/*MACMEAN  MSSC PURGE MACRO                 '||                31800003
*       '              @Y30LB02*/')SKIP;                                31850003
*   ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||                31900003
*       '              @Y30LB02*/')SKIP;                                31950003
*   ANS('/*THIS IS THE OUTPUT FOR A SECONDARY        '||                32000003
*       '              @Y30LB02*/')SKIP;                                32050003
*   ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '||                32100003
*       '              @Y30LB02*/')SKIP;                                32150003
*   ANS('/*******************************************'||                32200003
*       '************* @Y30LB02*/')SKIP;                                32250003
*                  ANS ('RFY(PAIRR1)RSTD;/*RESTRICT '||                 32300003
*                       'R1 @Y30LB02*/')SKIP;                           32350003
*                  ANS ('PAIRR1=ADDR(PURGLL);'||           /*@Y30LB02*/ 32400003
*                    '/*PAIRR1 SET TO ADDR OF PURG LIST @Y30LB02*/')    32450003
*                     SKIP(1);                             /*@Y30LB02*/ 32500003
*                  GO TO TEST2;        /*BRANCH              @Y30LB02*/ 32550003
*             END;                                         /*@Y30LB02*/ 32600003
*   IF TYPE(1)^='PURG' THEN             /*NOT PURG REQUEST?  @Y30LB02*/ 32650003
*        IF  AIRTEST=1 THEN            /*IF STD FORM HAS     @Y30LB02*/ 32700003
*                                      /*BEEN INVOKED ALRDY  @Y30LB02*/ 32750003
*             DO;                      /*SET UP REG1 TO PT   @Y30LB02*/ 32800003
*                                      /*TO REQUEST BLOCK   @Y30LB02*/  32850003
*   ANS('/*******************************************'||                32900003
*       '************* @Y30LB02*/')SKIP;                                32950003
*   ANS('/*MACMEAN  MSSC ASSIGN/INITIALIZE/READY MACRO'||               33000003
*       '              @Y30LB02*/')SKIP;                                33050003
*   ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||                33100003
*       '              @Y30LB02*/')SKIP;                                33150003
*   ANS('/*THIS IS THE OUTPUT FOR A SECONDARY        '||                33200003
*       '              @Y30LB02*/')SKIP;                                33250003
*   ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '||                33300003
*       '              @Y30LB02*/')SKIP;                                33350003
*   ANS('/*******************************************'||                33400003
*       '************* @Y30LB02*/')SKIP;                                33450003
*                  ANS ('RFY(PAIRR1)RSTD;/*RESTRICT '||                 33500003
*                       'R1 @Y30LB02*/')SKIP;                           33550003
*                  ANS ('PAIRR1=ADDR(AIRLL);'||            /*@Y30LB02*/ 33600003
*                    '/*PAIRR1 SET TO ADDR OF AIR LIST @Y30LB02*/')     33650003
*                     SKIP(1);                             /*@Y30LB02*/ 33700003
*                  GO TO TEST2;        /*BRANCH              @Y30LB02*/ 33750003
*             END;                                         /*@Y30LB02*/ 33800003
*/*                                                          @Y30LB02*/ 33850003
*/*********************************************************  @Y30LB02*/ 33900003
*/* OTHERWISE PRINT OUT THE DECLARE STATEMENTS FOR STD FORM  @Y30LB02*/ 33950003
*/*********************************************************  @Y30LB02*/ 34000003
*/*                                                          @Y30LB02*/ 34050003
*   IF TYPE(1)^='PURG' THEN             /*NOT A PURG REQ?    @Y30LB02*/ 34100003
*        DO;                                               /*@Y30LB02*/ 34150003
*             ANS('/*******************************************'||      34200003
*                 '************* @Y30LB02*/')SKIP;                      34250003
*             ANS('/*MACMEAN  MSSC ASSIGN/INITIALIZE/READY MACRO'||     34300003
*                 '             @Y30LB02*/')SKIP;                       34350003
*             ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||      34400003
*                 '              @Y30LB02*/')SKIP;                      34450003
*             ANS('/*THIS IS THE STANDARD FORM - ICBPAIR MACRO '||      34500003
*                 '              @Y30LB02*/')SKIP;                      34550003
*             ANS('/*******************************************'||      34600003
*                 '************* @Y30LB02*/')SKIP;                      34650003
*             ANS('DCL  1   AIRLIST  STATIC LOCAL,') SKIP(1);           34700003
*             ANS('      2  AIRLL FIXED(31) INIT('||QUOTE('08')||       34750003
*                  'X), /*LENGTH @Y30LB02*/')  SKIP(1);                 34800003
*             IF TYPE(1)='APH' THEN    /*APH REQUEST?        @Y30LB02*/ 34850003
*                  DO;                 /*PUT IN APH  OPCODE  @Y30LB02*/ 34900003
*                       ANS('      2  AIROP FIXED(8) INIT('             34950003
*                            ||QUOTE(AOPCODE)||                         35000003
*                            'X), /*OPCODE @Y30LB02*/') SKIP(1);        35050003
*                  END;                                    /*@Y30LB02*/ 35100003
*             ELSE                                                      35150003
*                  IF TYPE(1)='INITL' THEN /*INITL REQUEST?  @Y30LB02*/ 35200003
*                     DO;              /*PUT IN INITL  OPCD  @Y30LB02*/ 35250003
*                       ANS('      2  AIROP FIXED(8) INIT('             35300003
*                            ||QUOTE(IOPCODE)||                         35350003
*                            'X),/*OPCODE @Y30LB02*/') SKIP(1);         35400003
*                     END;                                 /*@Y30LB02*/ 35450003
*                  ELSE                                                 35500003
*                     DO;              /*PUT IN RDY OPCODE   @Y30LB02*/ 35550003
*                       ANS('      2  AIROP FIXED(8) INIT('             35600003
*                            ||QUOTE(ROPCODE)||                         35650003
*                            'X),/*OPCODE @Y30LB02*/') SKIP(1);         35700003
*                     END;                                 /*@Y30LB02*/ 35750003
*             ANS ('      2  * CHAR(1) INIT('||                         35800003
*                  QUOTE('00')||'X), /*ZEROES   @Y30LB02*/') SKIP(1);   35850003
*             ANS ('      2  AIRFLAG BIT(16) INIT('||                   35900003
*                 QUOTE('0000000000000000')||                           35950003
*                 'B),/*FLAGS/ZEROES @Y30LB02*/') SKIP(1);              36000003
*             ANS ('        3  AIRRESV BIT(1),'||                       36050003
*                  '/*RESERVED BIT  @Y30LB02*/') SKIP(1);               36100003
*             ANS ('        3  AIRCPUS BIT(1),'||                       36150003
*                  '/*INITIALIZE BOTH CPUS  @Y30LB02*/') SKIP(1);       36200003
*             ANS ('        3  *      BIT(14);'||                       36250003
*                  '/*RESERVED BITS  @Y30LB02*/') SKIP(1);              36300003
*             ANS ('RFY(PAIRR1)RSTD;/*RESTRICT '||                      36350003
*                  'R1 @Y30LB02*/')SKIP;                                36400003
*             ANS('PAIRR1=ADDR(AIRLL); '||                 /*@Y30LB02*/ 36450003
*                '/*PAIRR1 SET TO ADDR OF BLK @Y30LB02*/') SKIP(1);     36500003
*             AIRTEST=1;               /*SET SO KNOW STD     @Y30LB02*/ 36550003
*                                      /*HAS BEEN INVOKED    @Y30LB02*/ 36600003
*        END;                                              /*@Y30LB02*/ 36650003
*   ELSE                               /*PURG REQUEST        @Y30LB02*/ 36700003
*        DO;                           /*DCL PURGE LIST      @Y30LB02*/ 36750003
*             ANS('/*******************************************'||      36800003
*                 '************* @Y30LB02*/')SKIP;                      36850003
*             ANS('/*MACMEAN  MSSC PURGE MACRO                 '||      36900003
*                 '              @Y30LB02*/')SKIP;                      36950003
*             ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||      37000003
*                 '              @Y30LB02*/')SKIP;                      37050003
*             ANS('/*THIS IS THE STANDARD FORM - ICBPAIR MACRO '||      37100003
*                 '              @Y30LB02*/')SKIP;                      37150003
*             ANS('/*******************************************'||      37200003
*                 '************* @Y30LB02*/')SKIP;                      37250003
*             ANS('DCL  1   PURGLIST  STATIC LOCAL,') SKIP;/*@Y30LB02*/ 37300003
*             ANS('      2  PURGLL FIXED(31) INIT('||QUOTE('0D')||      37350003
*                  'X), /*LENGTH @Y30LB02*/')  SKIP(1);                 37400003
*             ANS('      2  PURGOP FIXED(8) INIT('||                    37450003
*                  QUOTE(POPCODE)||'X), /*OPCODE @Y30LB02*/') SKIP(1);  37500003
*             ANS ('      2  * CHAR(1) INIT('||                         37550003
*                  QUOTE('00')||'X), /*ZEROES   @Y30LB02*/')            37600003
*                  SKIP(1);                                /*@Y30LB02*/ 37650003
*             ANS ('      2  PURGFLG BIT(16) INIT('||                   37700003
*                  QUOTE('0000000000000000')||'B),'||                   37750003
*                  '/*ZEROES   @Y30LB02*/') SKIP(1);                    37800003
*             ANS ('        3  PURGMPP BIT(1),'||                       37850003
*                  '/*PURGE OTHER PROCESSOR  @Y30LB02*/') SKIP(1);      37900003
*             ANS ('        3  *      BIT(15),'||                       37950003
*                  '/*RESERVED BITS  @Y30LB02*/') SKIP(1);              38000003
*             ANS('      2  PURGHOST CHAR(5) INIT('||                   38050003
*                  QUOTE('0000000000')||'X); /*HOSTID @Y30LB02*/')      38100003
*                  SKIP(1);                                /*@Y30LB02*/ 38150003
*             ANS ('RFY(PAIRR1)RSTD;/*RESTRICT'||                       38200003
*                  ' R1 @Y30LB02*/')SKIP;                               38250003
*             ANS('PAIRR1=ADDR(PURGLL); '||                /*@Y30LB02*/ 38300003
*                 '/*PAIRR1 SET TO ADDR OF LIST @Y30LB02*/') SKIP(1);   38350003
*             PURGTEST=1;              /*SET SO KNOW STD     @Y30LB02*/ 38400003
*                                      /*HAS BEEN INVOKED    @Y30LB02*/ 38450003
*        END;                                              /*@Y30LB02*/ 38500003
*/*                                                          @Y30LB02*/ 38550003
*/*********************************************************  @Y30LB02*/ 38600003
*/* END OF DCLS TO BE PRINTED OUT FOR REQUEST BLOCK          @Y30LB02*/ 38650003
*/*********************************************************  @Y30LB02*/ 38700003
*/*                                                          @Y30LB02*/ 38750003
*   BSW=1;                             /*TURN BSW SWITCH     @Y30LB02*/ 38800003
*   GO TO TEST2;                       /*BRANCH              @Y30LB02*/ 38850003
*/*                                                          @Y30LB02*/ 38900003
*/*********************************************************  @Y30LB02*/ 38950003
*/* THE MACRO BRANCHES HERE IF EXECUTABLE FORM WAS REQUESTD  @Y30LB02*/ 39000003
*/*********************************************************  @Y30LB02*/ 39050003
*/*                                                          @Y30LB02*/ 39100003
*EXCHECK: IF MF(1)='E' THEN            /*EXEC FORM SPECD?    @Y30LB02*/ 39150003
*             GO TO EXFORM;            /*YES, BRANCH         @Y30LB02*/ 39200003
*   ESW=1;                             /*TURN ON ESW         @Y30LB02*/ 39250003
*   DO;                                /*PRINT ERROR MSG     @Y30LB02*/ 39300003
*        ANS MSG('  ICB615I - INVALID MF PARAMETER SPECIFIED,'||        39350003
*             ' MUST BE L, E, OR NULL ') SKIP(1);          /*@Y30LB02*/ 39400003
*   END;                                /*                   @Y30LB02*/ 39450003
*   RETCODE=12;                        /*SET RETURN CODE     @Y30LB02*/ 39500003
*   GO TO TEST2;                       /*BRANCH              @Y30LB02*/ 39550003
*EXFORM: IF MF(2)='' THEN              /*ADDRESS GIVEN?      @Y30LB02*/ 39600003
*             DO;                      /*NO,TURN ON ESW AND  @Y30LB02*/ 39650003
*                  ESW=1;              /*PRINT ERROR MSG     @Y30LB02*/ 39700003
*                  ANS MSG('  ICB612I - MF(2) MUST CONTAIN'||           39750003
*                       ' REQ BLK NAME IF EXEC MACRO '||                39800003
*                       'FORM REQUESTED')SKIP(5);          /*@Y30LB02*/ 39850003
*                  RETCODE=12;         /*SET RETURN CODE     @Y30LB02*/ 39900003
*                  GO TO TEST2;        /*BRANCH              @Y30LB02*/ 39950003
*             END;                                         /*@Y30LB02*/ 40000003
*   ANS('/*******************************************'||                40050003
*       '************* @Y30LB02*/')SKIP;                                40100003
*   ANS('/*MACMEAN  PURGE/ASSIGN/INITIALIZE/READY    '||                40150003
*       'MACRO         @Y30LB02*/')SKIP;                                40200003
*   ANS('/*VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00   '||                40250003
*       '              @Y30LB02*/')SKIP;                                40300003
*   ANS('/*THIS IS THE OUTPUT FOR THE EXECUTE FORM.  '||                40350003
*       '              @Y30LB02*/')SKIP;                                40400003
*   ANS('/*THE LIST FORM OF THIS MACRO SHOULD BE     '||                40450003
*       '              @Y30LB02*/')SKIP;                                40500003
*   ANS('/*INVOKED FIRST IN ORDER TO SET UP NECESSARY'||                40550003
*       '              @Y30LB02*/')SKIP;                                40600003
*   ANS('/*DECLARES.  IF THE COMPLETE ARGUMENT IS    '||                40650003
*       '              @Y30LB02*/')SKIP;                                40700003
*   ANS('/*SPECIFIED THE REQ BLOCK WILL BE ZEROED.   '||                40750003
*       '              @Y30LB02*/')SKIP;                                40800003
*   ANS('/*******************************************'||                40850003
*       '************* @Y30LB02*/')SKIP;                                40900003
*   ANS ('RFY(PAIRR1)RSTD;/*RESTRICT  R1 @Y30LB02*/')SKIP;              40950003
*   ANS('PAIRR1=ADDR('||MF(2)||                                         41000003
*        '); /*SET PAIRR1 TO REQ BLOCK @Y30LB02*/')  SKIP(1);           41050003
*   IF MF(3) = 'COMPLETE' THEN                                          41100003
*      DO;                                                 /*@Y30LB02*/ 41150003
*        ANS(' '||MF(2)||'='||MF(2)||'&&'||MF(2)||';'||    /*@Y30LB02*/ 41200003
*           '/*ZERO REQUEST BLOCK @Y30LB02*/')SKIP;                     41250003
*      END;                                                /*@Y30LB02*/ 41300003
*   IF TYPE(1)='PURG' THEN             /*SET LENGTH FLD=13   @Y30LB02*/ 41350003
*        ANS('PURGLL='||QUOTE(PLENGTH)||'X; /*SET LENGTH '||            41400003
*            'FIELD @Y30LB02*/')SKIP(1);                                41450003
*   ELSE                               /*SET LENGTH FLD=8    @Y30LB02*/ 41500003
*        ANS('AIRLL='||QUOTE(LENGTH)||'X; /*SET LENGTH '||              41550003
*            'FIELD @Y30LB02*/')SKIP(1);                                41600003
*TEST2: IF ESW=1 THEN                  /*IS ESW ON?          @Y30LB02*/ 41650003
*        GO TO EXIT;                   /*YES, BRANCH         @Y30LB02*/ 41700003
*   IF BSW=1 THEN                      /*IS BSW ON?          @Y30LB02*/ 41750003
*        GO TO TYPECK;                 /*YES, BRANCH         @Y30LB02*/ 41800003
*   IF TYPE(1)='PURG' THEN             /*PURG REQUEST?       @Y30LB02*/ 41850003
*        DO;                           /*YES,PUT IN PURG     @Y30LB02*/ 41900003
*                                      /*OPCODE              @Y30LB02*/ 41950003
*             ANS('PURGOP='||QUOTE(POPCODE)||'X;'||                     42000003
*                  '/*PURG  OPCODE @Y30LB02*/') SKIP(1);                42050003
*        END;                                              /*@Y30LB02*/ 42100003
*   ELSE                                                                42150003
*        IF TYPE(1)='APH' THEN         /*APH  REQUEST?       @Y30LB02*/ 42200003
*             DO;                      /*YES,PUT IN APH      @Y30LB02*/ 42250003
*                                      /*OPCODE              @Y30LB02*/ 42300003
*                  ANS('AIROP='||QUOTE(AOPCODE)||'X;'||                 42350003
*                       '/*APH  OPCODE @Y30LB02*/') SKIP(1);            42400003
*             END;                                         /*@Y30LB02*/ 42450003
*        ELSE                                                           42500003
*             IF TYPE(1)='INITL' THEN  /*INITL REQUEST?      @Y30LB02*/ 42550003
*                  DO;                 /*YES,PUT IN INITL    @Y30LB02*/ 42600003
*                                      /*OPCODE              @Y30LB02*/ 42650003
*                       ANS('AIROP='||QUOTE(IOPCODE)||'X;'||            42700003
*                            '/*INITL OPCODE @Y30LB02*/') SKIP(1);      42750003
*                  END;                                    /*@Y30LB02*/ 42800003
*             ELSE                                                      42850003
*                  DO;                 /*PUT IN RDY OPCODE   @Y30LB02*/ 42900003
*                       ANS('AIROP='||QUOTE(ROPCODE)||'X;'||            42950003
*                            '/*RDY OPCODE @Y30LB02*/') SKIP(1);        43000003
*                  END;                                    /*@Y30LB02*/ 43050003
*TYPECK: IF TYPE(1)='PURG' THEN                                         43100003
*             GO TO TEST3;             /*BRCH IF PURG REQ.   @Y30LB02*/ 43150003
*   IF TYPE(1)='INITL' THEN            /*INITL REQUEST?      @Y30LB02*/ 43200003
*        DO;                           /*YES,CHECK FLAGS     @Y30LB02*/ 43250003
*             IF FLAGS^='' THEN        /*IS FLAGS NULL?      @Y30LB02*/ 43300003
*                  DO;                 /*NO,FILL IN FLAGS    @Y30LB02*/ 43350003
*                                      /*FIELD               @Y30LB02*/ 43400003
*                       ANS('AIRFLAG='||FLAGS||                         43450003
*                            ';/*FILL IN FLAGS FIELD @Y30LB02*/')       43500003
*                            SKIP(1);                      /*@Y30LB02*/ 43550003
*                  END;                                    /*@Y30LB02*/ 43600003
*        END;                                              /*@Y30LB02*/ 43650003
*   LSW=1;                             /*TURN ON LSW         @Y30LB02*/ 43700003
*TEST3: IF LSW=1 THEN                  /*IS LSW ON?          @Y30LB02*/ 43750003
*        GO TO LINK;                   /*YES, BRANCH         @Y30LB02*/ 43800003
*             IF FLAGS^='' THEN        /*IS FLAGS NULL?      @Y30LB02*/ 43850003
*                  DO;                 /*NO,FILL IN FLAGS    @Y30LB02*/ 43900003
*                                      /*FIELD               @Y30LB02*/ 43950003
*                       ANS('PURGFLG='||FLAGS||                         44000003
*                            ';/*FILL IN FLAGS FIELD @Y30LB02*/')       44050003
*                            SKIP(1);                      /*@Y30LB02*/ 44100003
*                  END;                                    /*@Y30LB02*/ 44150003
*   IF HOSTID='' THEN                  /*HOSTID NULL?        @Y30LB02*/ 44200003
*                  LSW=1;              /*TURN LSW ON         @Y30LB02*/ 44250003
*   IF ESW=1 THEN                      /*ESW ON?             @Y30LB02*/ 44300003
*        GO TO EXIT;                   /*YES, BRANCH         @Y30LB02*/ 44350003
*   IF LSW=1 THEN                      /*LSW ON?             @Y30LB02*/ 44400003
*        GO TO LINK;                   /*YES, BRANCH         @Y30LB02*/ 44450003
*/* OTHERWISE PUT HOSTID IN HOSTID FIELD & INVOKE SVC INST   @Y30LB02*/ 44500003
*   ANS ('PURGHOST='||HOSTID||'; /*FILL IN HOSTID FIELD @Y30LB02*/')    44550003
*        SKIP(1);                                          /*@Y30LB02*/ 44600003
*LINK: ANS('SVC  (126); /*ISSUE SVC INST.  @Y30LB02*/') SKIP(1);        44650003
*      ANS ('RFY(PAIRR1)UNRSTD;/*UNRESTRICT'||                          44700003
*           ' R1 @Y30LB02*/')SKIP;                                      44750003
*EXIT: RETURN CODE(RETCODE);                               /*@Y30LB02*/ 44800003
*   %END;                                                  /*@Y30LB02*/ 44850003
