* %/* START OF SPECIFICATIONS  ***                           @Z40LB22   00150003
*                                                            @Z40LB22   00244403
*01*  MODULE-NAME = ICBQUERY                                 @Z40LB22   00250003
*                                                            @Z40LB22   00300003
*01*  DESCRIPTIVE-NAME = READ SA WCS, READ MCS WCS, READ MSC @Z40LB22   00350003
*                        TABLES, LABEL READ, AND CELL AUDIT  @Z40LB22   00400003
*                                                            @Z40LB22   00450003
*01*  COPYRIGHT = NONE                                       @Z40LB22   00500003
*                                                            @Z40LB22   00550003
*01*  STATUS =  OS/VS2                                       @Z40LB22   00600003
*                                                            @Z40LB22   00700003
*01*  FUNCTION = BUILDS A REQUEST BLOCK FOR A REQUEST.       @Z40LB22   00750003
*                THE MACRO IS A COMMUNICATION LINK BETWEEN   @Z40LB22   00800003
*                THE CALLER AND THE MSSC SVC MODULE.         @Z40LB22   00850003
*                                                            @Z40LB22   00900003
*01*  NOTES = ICBQUERY IS CODED IN PLS ONLY.                 @Z40LB22   00950003
*                                                            @Z40LB22   01000003
*02*    DEPENDENCIES = NONE                                  @Z40LB22   01050003
*                                                            @Z40LB22   01100003
*02*    RESTRICTIONS = THE PREFIXES ICB AND QUERY SHOULD BE  @Z40LB22   01150003
*                      AVOIDED WHEN INVOKING THIS MACRO.     @Z40LB22   01200003
*                                                            @Z40LB22   01250003
*02*    REGISTER-CONVENTIONS = FOLLOWS NORMAL USE OF         @Z40LB22   01300003
*                              REGISTERS BY MACROS:          @Z40LB22   01350003
*                              R0,R1,R14, AND R15.           @Z40LB22   01400003
*                                                            @Z40LB22   01450003
*01*  MODULE-TYPE = MACRO                                    @Z40LB22   01500003
*                                                            @Z40LB22   01550003
*02*    PROCESSOR = PLS2                                     @Z40LB22   01600003
*                                                            @Z40LB22   01650003
*01*  INPUT = PARAMETERS SPECIFIED ON THE PLS MACRO          @Z40LB22   01700003
*             INVOCATION.                                    @Z40LB22   01750003
*                                                            @Z40LB22   01800003
*     THE READ SA WCS REQUEST IS ISSUED WHEN THE CALLER      @Z40LB22   01850003
*     WANTS TO MOVE ONE SECTOR (256 BYTES) OF SA STORAGE     @Z40LB22   01900003
*     INTO MSC DIAGNOSTIC BUFFER AT OFFSET 256 - 511.        @Z40LB22   01950003
*                                                            @Z40LB22   02000003
*     THE READ MSC WCS REQUEST IS ISSUED WHEN THE CALLER     @Z40LB22   02050003
*     WANTS TO MOVE ONE SECTOR (256 BYTES) INTO MSC          @Z40LB22   02100003
*     DIAGNOSTIC BUFFER AT OFFSET 256 - 511.                 @Z40LB22   02150003
*                                                            @Z40LB22   02200003
*     THE READ MSC TABLES REQUEST IS ISSUED WHEN THE CALLER  @Z40LB22   02250003
*     WANTS TO READ ONE RECORD (264 BYTES) INTO MSC          @Z40LB22   02300003
*     DIAGNOSTIC BUFFER AT OFFSET 248 - 511.                 @Z40LB22   02350003
*                                                            @Z40LB22   02400003
*     THE LABEL READ REQUEST IS ISSUED WHEN THE CALLER WANTS @Z40LB22   02450003
*     TO READ A CARTRIDGE LABEL (256 BYTES) INTO DIAGNOSTIC  @Z40LB22   02500003
*     BUFFER AT OFFSET 256 - 511.                            @Z40LB22   02550003
*                                                            @Z40LB22   02600003
*     THE CELL AUDIT REQUEST IS ISSUED WHEN THE CALLER WANTS @Z40LB22   02650003
*     TO TEST THE LIBRARY CELLS FOR FULL/EMPTY STATUS AND    @Z40LB22   02700003
*     LOAD THE RESULTS IN DIAGNOSTIC BUFFER AT OFFSET 0 - 31 @Z40LB22   02750003
*                                                            @Z40LB22   02800003
*     MACRO SYNTAX                                           @Z40LB22   02850003
*                                                            @Z40LB22   02900003
*     LIST FORM                                              @Z40LB22   02950003
*                                                            @Z40LB22   03000003
*     VERB        REQUIRED PARMS             OPTIONAL PARMS  @Z40LB22   03050003
*                                                            @Z40LB22   03100003
*     ICBQUERY    MF(L,NAME/(R)[,ATTRIBUTE])                 @Z40LB22   03150003
*                                                            @Z40LB22   03200003
*     EXECUTE FORM                                           @Z40LB22   03250003
*                                                            @Z40LB22   03300003
*     VERB        REQUIRED PARMS             OPTIONAL PARMS  @Z40LB22   03350003
*                                                            @Z40LB22   03400003
*     ICBQUERY    MF(E,NAME/(R))            MF(E,NAME/(R)    @Z40LB22   03450003
*                 TYPE(QSWCS/QLAB/QMWCS/      [,COMPLETE])   @Z40LB22   03500003
*                      QTAB/QCEL)           PARMS(ADDR/(R))  @Z40LB22   03550003
*                                           FLAGS(ADDR/(R))  @Z40LB22   03600003
*                                           SECT(ADDR/(R))   @Z40LB22   03650003
*                                           SSID(ADDR/(R))   @Z40LB22   03750003
*                                           MSFID(ADDR/(R))  @Z40LB22   03800003
*                                           CMAP(ADDR/(R))   @Z40LB22   03850003
*                                           LZYX(ADDR/(R))   @Z40LB22   03900003
*                                           LOC(ADDR/(R))    @Z40LB22   03950003
*                                          DASDCHR(ADDR/(R)) @Z40LB22   04000003
*                                          DATAPTR(NAME/(R)) @Z40LB22   04050003
*                                                            @Z40LB22   04100003
*     KEYWORD PARAMETERS:                                    @Z40LB22   04150003
*                                                            @Z40LB22   04200003
*     MF  -  MACRO FORMAT: THIS PARAMETER DESCRIBES THE      @Z40LB22   04250003
*            MACRO FORMAT AND MAY GIVE THE ADDRESS OR        @Z40LB22   04300003
*            ADDRESS IN A REGISTER WHERE THE REQUEST BLOCK   @Z40LB22   04350003
*            IS STORED.                                      @Z40LB22   04400003
*                                                            @Z40LB22   04450003
*            L - LIST FORM:  THE EXPANSION OF THE L-FORM     @Z40LB22   04500003
*                MACRO WILL RESULT IN AN UNINITIALIZED       @Z40LB22   04550003
*                REQUEST BLOCK.                              @Z40LB22   04600003
*                                                            @Z40LB22   04650003
*            (1) NAME - THE MACRO INVOKER MUST SPECIFY A     @Z40LB22   04700003
*                NAME FOR HIS STRUCTURE WHEN INVOKING THE    @Z40LB22   04750003
*                PLS LIST FORM.                              @Z40LB22   04800003
*                                                            @Z40LB22   04850003
*            (2) ATTRIBUTE - THE MACRO WILL PLACE ANY PLS    @Z40LB22   04900003
*                ATTRIBUTE SPECIFIED IN THE MACRO INVOCATION @Z40LB22   04950003
*                IN AN UNINITIALIZED REQUEST BLOCK.          @Z40LB22   05000003
*                ATTRIBUTE EXAMPLE:                          @Z40LB22   05050003
*                                                            @Z40LB22   05100003
*                CHAR, FIXED, STATIC LOCAL, NONLOCAL,        @Z40LB22   05150003
*                BASED(*), ETC.                              @Z40LB22   05200003
*                                                            @Z40LB22   05250003
*            E - EXECUTABLE FORM:  THE EXPANSION OF THIS     @Z40LB22   05300003
*                FORM CONSISTS OF A LINKAGE INSTRUCTION AND  @Z40LB22   05350003
*                POSSIBLY, PARAMETER BINDING INSTRUCTIONS.   @Z40LB22   05400003
*                                                            @Z40LB22   05450003
*                SUB-PARAMETERS                              @Z40LB22   05500003
*                (1)  AN E MUST BE SPECIFIED IN THE FIRST    @Z40LB22   05550003
*                     SUB-PARAMETER POSITION.  THIS          @Z40LB22   05600003
*                     INDICATES THAT THE MACRO IS IN         @Z40LB22   05650003
*                     EXECUTABLE FORM.                       @Z40LB22   05700003
*                                                            @Z40LB22   05750003
*                (2)  A NAME OR A REGISTER MUST BE SPECIFIED @Z40LB22   05800003
*                     IN THE SECOND SUB-PARAMETER.           @Z40LB22   05850003
*                                                            @Z40LB22   05900003
*                (3)  'COMPLETE' - COMPLETE WILL CAUSE THE   @Z40LB22   05950003
*                     MACRO TO ZERO OUT THE REQUEST BLOCK.   @Z40LB22   06000003
*                     AFTER ZEROING THE REQUEST BLOCK THE    @Z40LB22   06050003
*                     FUNCTION OPCODE, CODE AND LENGTH ARE   @Z40LB22   06100003
                                                                        06150003
*                     PLACED IN THE REQUEST BLOCK.           @Z40LB22   06200003
*                                                            @Z40LB22   06250003
*     TYPE - INDICATES WHETHER THE REQUEST IS FOR READ SA    @Z40LB22   06300003
*            WCS (QSWCS), READ MSC WCS (QMWCS), LABEL READ   @Z40LB22   06350003
*            (QLAB), READ MSC TABLES (QTAB), OR CELL AUDIT   @Z40LB22   06400003
*            (QCEL).  THE ORDER AND CODE FIELD OF THE        @Z40LB22   06450003
*            REQUEST BLOCK IS FILLED IN BY THE EXECUTE FORM  @Z40LB22   06500003
*            MARCO. THE FOLLOWING TABLE GIVES THE ORDERS     @Z40LB22   06550003
*            AND CODES FOR EACH REQUEST.                     @Z40LB22   06600003
*                                                            @Z40LB22   06650003
*                REQUEST          | ORDER    | CODE          @Z40LB22   06700003
*                --------------------------------------      @Z40LB22   06750003
*                READ MSC WCS     | HEX'0B'  | HEX'03'       @Z40LB22   06800003
*                READ MSC TABLES  | HEX'05'  | HEX'06'       @Z40LB22   06850003
*                LABEL READ       | HEX'05'  | HEX'08'       @Z40LB22   06900003
*                READ SA WCS      | HEX'05'  | HEX'10'       @Z40LB22   06950003
*                CELL AUDIT       | HEX'07'  | N/A           @Z40LB22   07000003
*                                                            @Z40LB22   07050003
*02*    INVOCATION PARAMETERS                                @Z40LB22   07100003
*       WITH THE SINGLE EXCEPTION OF THE RESERVED FIELDS,    @Z40LB22   07150003
*       ALL OF THE INVOCATION PARAMETERS ARE REQUIRED.       @Z40LB22   07200003
*                                                            @Z40LB22   07250003
*                                                            @Z40LB22   07300003
*       READ MSC WCS - (F,X,CODE,SECT,X,A,X)                 @Z40LB22   07350003
*                                                            @Z40LB22   07400003
*       (1)  ORDER (F) - 1 BYTE                              @Z40LB22   07450003
*            THIS BYTE IS ALWAYS X'0B' FOR THIS ORDER        @Z40LB22   07500003
*                                                            @Z40LB22   07550003
*       (2)  RESERVED (X) - 1 BYTE                           @Z40LB22   07600003
*                                                            @Z40LB22   07650003
*       (3)  OPCODE (CODE) - 1 BYTE                          @Z40LB22   07700003
*            THIS BYTE IS ALWAYS X'03' FOR THIS ORDER        @Z40LB22   07750003
*                                                            @Z40LB22   07800003
*       (4)  SECTOR (SECT) - 1 BYTE                          @Z40LB22   07850003
*            THIS BYTE REPRESENTS THE SECTOR OF WCS CODE     @Z40LB22   07900003
*            TO BE READ INTO THE MSC DIAGNOSTIC BUFFER.  A   @Z40LB22   07950003
*            VALID SECTOR RANGE IS FROM X'00' TO X'FF'.      @Z40LB22   08000003
*                                                            @Z40LB22   08050003
*       (5)  RESERVED (X) - 2 BYTES                          @Z40LB22   08100003
*                                                            @Z40LB22   08150003
*       (6)  FLAGS (A) - 1 BYTE                              @Z40LB22   08200003
*            BIT 0 = 0; READ FROM MAIN STORAGE               @Z40LB22   08250003
*            BIT 0 = 1; READ FROM EXTENDED STORAGE           @Z40LB22   08300003
*            BIT 1 - 6; UNUSED                               @ZA27590   08350000
*            BIT 7 = 0; DUMP PRIMARY MSC                     @ZA27590   08360000
*            BIT 7 = 1; DUMP ALTERNATE MSC                   @ZA27590   08370000
*                                                            @Z40LB22   08400003
*       (7)  RESERVED (X) - 29 BYTES                         @Z40LB22   08450003
*                                                            @Z40LB22   08500003
*                                                            @Z40LB22   08550003
*       READ MSC TABLES - (F,X,CODE,X,PARMS,X)               @Z40LB22   08600003
*                                                            @Z40LB22   08650003
*       (1)  ORDER (F) - 1 BYTE                              @Z40LB22   08700003
*            THIS BYTE IS ALWAYS X'05' FOR THIS ORDER        @Z40LB22   08750003
*                                                            @Z40LB22   08800003
*       (2)  RESERVED (X) - 1 BYTE                           @Z40LB22   08850003
*                                                            @Z40LB22   08900003
*       (3)  OPCODE (CODE) - 1 BYTE                          @Z40LB22   08950003
*            THIS BYTE IS ALWAYS X'06' FOR THIS ORDER        @Z40LB22   09000003
*                                                            @Z40LB22   09050003
*       (4)  RESERVED (X) - 1 BYTE                           @Z40LB22   09100003
*                                                            @Z40LB22   09150003
*       (5)  PARAMETERS (PARMS) - 20 BYTES                   @Z40LB22   09200003
*            THIS 20 BYTE AREA CONTAINS THE INPUT PARAMETERS @Z40LB22   09250003
*            TO THE TABLE MODULE, NORMALLY FOUND IN MSC      @Z40LB22   09300003
*            JOBLIST AT OFFSET X'0C' - X'1F'.  THE CHR OF    @Z40LB22   09350003
*            BLOCKS TO BE READ (OPTIONAL) AT OFFSET X'30' -  @Z40LB22   09400003
*            X'33'.                                          @Z40LB22   09450003
*                                                            @Z40LB22   09500003
*            (A)  PARAMETER PASS AREA IN MSC JOBLIST         @Z40LB22   09550003
*                 X'0C'  BIT 0 - 3  TABLE ID                 @Z40LB22   09600003
*                        BIT 4 - 7  SECTOR ID                @Z40LB22   09650003
*                 X'0D'  BIT 0 - 7  FLAG BYTE                @Z40LB22   09700003
*                        BIT 3 = 1  BLOCK CHR SUPPLIED       @Z40LB22   09750003
*                        BIT 7 = 1  READ                     @Z40LB22   09800003
*                 X'0E' - X'1F'     TABLE DEPENDENT DATA     @Z40LB22   09850003
*                 X'30' - X'33'     CHR                      @Z40LB22   09900003
*       (6)  RESERVED (X) - 8 BYTES                          @Z40LB22   09950003
*                                                            @Z40LB22   10000003
*                                                            @Z40LB22   10050003
*       LABEL READ - (F,X,CODE,A,LZYX,X)                     @Z40LB22   10100003
*                                                            @Z40LB22   10150003
*       (1)  ORDER (F) - 1 BYTE                              @Z40LB22   10200003
*            THIS BYTE WILL ALWAYS BE X'05' FOR THIS ORDER   @Z40LB22   10250003
*                                                            @Z40LB22   10300003
*       (2)  RESERVED (X) - 1 BYTE                           @Z40LB22   10350003
*                                                            @Z40LB22   10400003
*       (3)  OPCODE (CODE) - 1 BYTE                          @Z40LB22   10450003
*            THIS BYTE IS ALWAYS X'08' FOR THIS ORDER        @Z40LB22   10500003
*                                                            @Z40LB22   10550003
*       (4)  ATTRIBUTES (A) - 1 BYTE                         @Z40LB22   10600003
*            THIS BYTE IS ALWAYS X'10'.  THIS BYTE INDICATES @Z40LB22   10650003
*            THAT THE LZYX OF THE CARTRIDGE IS SUPPLIED.     @Z40LB22   10700003
*                                                            @Z40LB22   10750003
*       (5)  LOCATION (LZYX) - 2 BYTES                       @Z40LB22   10800003
*            THE MSF AND CELL ADDRESS OF CARTRIDGE TO BE     @Z40LB22   10850003
*            READ.                                           @Z40LB22   10900003
*                                                            @Z40LB22   10950003
*       (6)  RESERVED (X) - 30 BYTES                         @Z40LB22   11000003
*                                                            @Z40LB22   11050003
*                                                            @Z40LB22   11100003
*       READ SA WCS - (F,X,CODE,SECT,SSID,A,X)               @Z40LB22   11150003
*                                                            @Z40LB22   11200003
*       (1)  ORDER (F) - 1 BYTE                              @Z40LB22   11250003
*            THIS BYTE WILL ALWAYS BE X'05' FOR THIS ORDER   @Z40LB22   11300003
*                                                            @Z40LB22   11350003
*       (2)  RESERVED (X) - 1 BYTE                           @Z40LB22   11400003
*                                                            @Z40LB22   11450003
*       (3)  OPCODE (CODE) - 1 BYTE                          @Z40LB22   11500003
*            THIS BYTE IS ALWAYS X'10' FOR THIS ORDER        @Z40LB22   11550003
*                                                            @Z40LB22   11600003
*       (4)  SECTOR (SECT) - 1 BYTE                          @Z40LB22   11650003
*            THIS BYTE REPRESENTS THE SECTOR OF THE WCS      @Z40LB22   11700003
*            CODE TO BE READ INTO THE DIAGNOSTIC BUFFER.     @Z40LB22   11750003
*            A VALID SECTOR RANGE IS FROM X'00' TO X'FF'.    @Z40LB22   11800003
*                                                            @Z40LB22   11850003
*       (5)  SUB-SYSTEM ID (SSID) - 2 BYTES                  @Z40LB22   11900003
*            THESE 2 BYTES (ONLY 12 BITS ARE USED) ARE THE   @Z40LB22   11950003
*            SSID OF THE SA.                                 @Z40LB22   12000003
*                                                            @Z40LB22   12050003
*       (6)  FLAGS (A) - 1 BYTE                              @Z40LB22   12100003
*            BIT 0 = 0; READ FROM MAIN STORAGE               @Z40LB22   12150003
*            BIT 0 = 1; READ FROM EXTENDED STORAGE           @Z40LB22   12200003
*            BIT 1 - 6; UNUSED                               @ZA27590   12250000
*            BIT 7 = 0; DUMP PRIMARY MSC                     @ZA27590   12260000
*            BIT 7 = 1; DUMP ALTERNATE MSC                   @ZA27590   12270000
*                                                            @Z40LB22   12300003
*       (7)  RESERVED (X) - 29 BYTES                         @Z40LB22   12350003
*                                                            @Z40LB22   12400003
*                                                            @Z40LB22   12450003
*       CELL AUDIT - (F,X,MSF,ADDR,CMAP)                     @Z40LB22   12500003
*                                                            @Z40LB22   12550003
*       (1)  ORDER (F) - 1 BYTE                              @Z40LB22   12600003
*            THIS ONE BYTE FIELD WILL ALWAYS BE X'07'.       @Z40LB22   12650003
*                                                            @Z40LB22   12700003
*       (2)  RESERVED (X) - 1 BYTE                           @Z40LB22   12750003
*                                                            @Z40LB22   12800003
*       (3)  MSFID (MSF) - 1 BYTE                            @Z40LB22   12850003
*            THIS BYTE WILL CONTAIN THE IDENTIFICATION OF    @Z40LB22   12900003
*            THE MASS STORAGE FACILITY TO BE AUDITED.        @Z40LB22   12950003
*            (IE, 0,1).  THE ID WILL BE PLACED IN BITS       @Z40LB22   13000003
*            0 - 1.                                          @Z40LB22   13050003
*                                                            @Z40LB22   13100003
*       (4)  ADDRESS (ADDR) - 1 BYTE                         @Z40LB22   13150003
*            ONE BYTE WHICH GIVES THE START (X) ADDRESS OF   @Z40LB22   13200003
*            CELLS TO BE AUDITED IN A SPECIFIED MASS STORAGE @Z40LB22   13250003
*            FACILITY.                                       @Z40LB22   13300003
*                                                            @Z40LB22   13350003
*       (5)  CELL MAP (CMAP) -32 BYTES                       @Z40LB22   13400003
*            32 BYTES THAT CONTAIN THE BIT MAP OF CELL       @Z40LB22   13450003
*            ADDRESS TO BE TESTED (BIT = 1 MEANS TEST CELL). @Z40LB22   13500003
*            EACH WORD IS FOR ONE X ADDRESS, ONE Z ADDRESS,  @Z40LB22   13550003
*            AND Y ADDRESSES 0 -27 (THE LAST FOUR BITS WILL  @Z40LB22   13600003
*            ALWAYS BE ZERO IN EACH WORD).                   @Z40LB22   13650003
*            DIRECTION:                                      @Z40LB22   13700003
*              FOR Z = 0, 0 --> 27                           @Z40LB22   13750003
*              FOR Z = 1, 27 --> 0                           @Z40LB22   13800003
*                                                            @Z40LB22   13850003
*01*  EXIT-NORMAL = VALID INVOCATION                         @Z40LB22   13900003
*                                                            @Z40LB22   13950003
*02*    CONDITION = RETURN CODE = 0.                         @Z40LB22   14000003
*                 = RETURN CODE = 4.                         @Z40LB22   14050003
*                                                            @Z40LB22   14100003
*02*    OUTPUT = IN-LINE PLS STATEMENTS THAT PERFORM THE     @Z40LB22   14150003
*                REQUESTED FUNCTION.                         @Z40LB22   14200003
*              = A WARNING MESSAGE WILL BE PRINTED, AND      @Z40LB22   14250003
*                THE EXPANSION WILL CONTINUE.                @Z40LB22   14300003
*                                                            @Z40LB22   14350003
*01*  EXIT-ERROR = INVALID INVOCATION                        @Z40LB22   14400003
*                                                            @Z40LB22   14450003
*02*    CONDITION = RETURN CODE = 12.                        @Z40LB22   14500003
*                                                            @Z40LB22   14550003
*02*    OUTPUT = ERROR MESSAGE                               @Z40LB22   14600003
*                                                            @Z40LB22   14650003
*01*  EXTERNAL-REFERENCES = NONE                             @Z40LB22   14700003
*                                                            @Z40LB22   14750003
*01*  TABLES = NONE                                          @Z40LB22   14800003
*                                                            @Z40LB22   14850003
*01*  MESSAGES = AS FOLLOWS:                                 @Z40LB22   14900003
*                                                            @Z40LB22   14950003
*            ICB600I:  TYPE MUST BE SPECIFIED                @Z40LB22   15000003
*            ICB601I:  TYPE IS INCORRECTLY SPECIFIED         @Z40LB22   15050003
*            ICB602I:  A NAME FOR THE REQUEST BLOCK MUST     @Z40LB22   15100003
*                      BE SPECIFIED IN MF(2)                 @Z40LB22   15150003
*            ICB604I:  WARNING - ONLY MF PARAMETER IS        @Z40LB22   15160003
*                      VALID FOR LIST FORM                   @Z40LB22   15170003
*            ICB612I:  MF(2) MUST CONTAIN REQ BLK NAME       @Z40LB22   15200003
*                      IF EXEC MACRO FORM REQUESTED          @Z40LB22   15250003
*            ICB620I:  INVALID MF PARAMETER SPECIFIED,       @Z40LB22   15300003
*                      MUST BE L  OR E.                      @Z40LB22   15350003
*                                                            @Z40LB22   15400003
*01*  INNER-MACRO = NONE                                     @Z40LB22   15450003
*                                                            @Z40LB22   15500003
*01*  SYSTEM-MACRO = NONE                                    @Z40LB22   15550003
*                                                            @Z40LB22   15600003
*01*  CHANGE-ACTIVITY = ZA09556                              @ZA09556   15650003
*     CHANGE 01 07/21/77 - DUMP OF THE ALTERNATE MSC         @ZA27590   15700000
*                                                            @Z40LB22   15710000
**** END OF SPECIFICATIONS ***                               @Z40LB22*/ 15750003
*/*                                                          @Z40LB22*/ 15800003
*/*                                                          @Z40LB22*/ 15850003
* ICBQUERY: MACRO KEYS(MF,TYPE,PARMS,FLAGS,SECT,CODE,SSID,              36050003
*          MSFID,CMAP,LZYX,LOC,DASDCHR,DATAPTR);                        36060003
*/*                                                          @Z40LB22*/ 36100003
*/*                                                          @Z40LB22*/ 36150003
*/* EXTERNAL DECLARES                                        @Z40LB22*/ 36200003
*   DCL QUERYREG FIXED EXT;            /*USED AS A TEST TO   @Z40LB22*/ 36450003
*                                      /*SEE IF R1 ALREADY   @Z40LB22*/ 36500003
*                                      /*DECLARED            @Z40LB22*/ 36550003
*/* INTERNAL DECLARES                                        @Z40LB22*/ 36600003
*   DCL RETCODE FIXED;                 /*RETURN CODE         @Z40LB22*/ 36650003
*   DCL QMCODE CHAR;                  /*QMWCS OPCODE         @Z40LB22*/ 36700003
*   DCL QLCODE CHAR;                  /*QLAB OPCODE          @Z40LB22*/ 36750003
*   DCL QTCODE CHAR;                  /*QTAB OPCODE          @Z40LB22*/ 36800003
*   DCL QSCODE CHAR;                  /*QSWCS OPCODE         @Z40LB22*/ 36850003
*   DCL QCCODE CHAR;                  /*QCEL OPCODE          @Z40LB22*/ 36860003
*   DCL QMTYPE CHAR;                  /*QMWCS TYPE           @Z40LB22*/ 36870003
*   DCL QLTYPE CHAR;                  /*QLAB TYPE            @Z40LB22*/ 36880003
*   DCL QLFLAG CHAR;                  /*QLAB FLAG            @Z40LB22*/ 36882003
*   DCL QTTYPE CHAR;                  /*QTAB TYPE            @Z40LB22*/ 36890003
*   DCL QSTYPE CHAR;                  /*QSWCS TYPE           @Z40LB22*/ 36892003
*   DCL LENGTH CHAR;                  /*LENGTH OF LIST       @Z40LB22*/ 36900003
*   DCL CTR FIXED;                     /*CTR  SWITCH         @Z40LB22*/ 37000003
*   DCL ESW FIXED;                     /*EXIT SWITCH         @Z40LB22*/ 37010003
*   DCL BSW FIXED;                     /*BRANCH SWITCH       @Z40LB22*/ 37050003
*   DCL LSW FIXED;                     /*LINK SWITCH         @Z40LB22*/ 37100003
*   QMCODE='0B';                      /*QMWCS OPCODE         @Z40LB22*/ 37150003
*   QLCODE='05';                      /*QLAB OPCODE          @Z40LB22*/ 37200003
*   QTCODE='05';                      /*QTAB OPCODE          @Z40LB22*/ 37250003
*   QSCODE='05';                      /*QSWCS OPCODE         @Z40LB22*/ 37300003
*   QCCODE='07';                      /*QCEL OPCODE          @Z40LB22*/ 37310003
*   QMTYPE='03';                      /*QMWCS CODE TYPE      @Z40LB22*/ 37320003
*   QLTYPE='08';                      /*QLAB CODE TYPE       @Z40LB22*/ 37330003
*   QSTYPE='10';                      /*QSWCS CODE TYPE      @Z40LB22*/ 37332003
*   QTTYPE='06';                      /*QTAB CODE TYPE       @Z40LB22*/ 37340003
*   QLFLAG='10';                      /*QLAB CODE FLAG       @Z40LB22*/ 37344003
*   LENGTH='2C';                       /*DEFINE LENGTH       @Z40LB22*/ 37350003
*/*     INITIALIZE SWITCHES TO ZERO                          @Z40LB22*/ 37450003
*   CTR=0;                                                 /*@Z40LB22*/ 37500003
*   ESW=0;                                                 /*@Z40LB22*/ 37510003
*   BSW=0;                                                 /*@Z40LB22*/ 37550003
*   LSW=0;                                                 /*@Z40LB22*/ 37600003
*/* END OF DECLARES AND INITIALIZATION                       @Z40LB22*/ 37650003
*   IF QUERYREG=0 THEN                 /*WAS R1 ALREADY      @Z40LB22*/ 38800003
*                                      /*DECLARED?           @Z40LB22*/ 38850003
*        DO;                           /*NO,PRT DCL FOR R1   @Z40LB22*/ 38900003
*             ANS('DCL QUERR1  REG(1) PTR; '||             /*@Z40LB22*/ 38950003
*                  '/* WILL CONTAIN BLK ADDRESS @Z40LB22*/') SKIP(1);   39000003
*             QUERYREG=1;              /*TURN SWITCH ON      @Z40LB22*/ 39050003
*        END;                                              /*@Z40LB22*/ 39100003
*   IF MF(1)^='L' THEN                 /*IF NOT LIST FORM    @Z40LB22*/ 39150003
*        GO TO EXCHECK;                /*BRANCH              @Z40LB22*/ 39200003
*   IF MF(2)='' THEN                   /*WAS A NAME GIVEN?   @Z40LB22*/ 39250003
*        DO;                           /*IF NOT, THEN        @Z40LB22*/ 39300003
*             ESW=1;                   /*TURN ON ESW         @Z40LB22*/ 39350003
*                                      /*AND,PRT ERROR MSG   @Z40LB22*/ 39400003
*             ANS MSG('  ICB602I - A NAME FOR THE '||                   39450003
*                  'REQUEST BLOCK MUST BE SPECIFIED '||                 39500003
*                  'IN MF(2)')SKIP(5);                     /*@Z40LB22*/ 39550003
*             RETCODE=12;                                  /*@Z40LB22*/ 39600003
*        END;                                              /*@Z40LB22*/ 39650003
*   IF ESW=1 THEN                      /*ESW ON?             @Z40LB22*/ 39700003
*        GO TO EXIT;                   /*YES,BRANCH TO EXIT  @Z40LB22*/ 39750003
*/*********************************************************  @Z40LB22*/ 39810003
*/* CHECK FOR VALID PARAMETERS                               @Z40LB22*/ 39812003
*/*********************************************************  @Z40LB22*/ 39820003
*   IF TYPE ^= '' THEN              /*TYPE SPECIFIED?        @Z40LB22*/ 39830003
*       CTR = CTR + 1;              /*YES, INCREMENT CTR     @Z40LB22*/ 39840003
*   IF PARMS ^= '' THEN              /*PARMS SPECIFIED?      @Z40LB22*/ 39842003
*       CTR = CTR + 1;              /*YES, INCREMENT CTR     @Z40LB22*/ 39844003
*   IF FLAGS ^= '' THEN             /*FLAGS SPECIFIED?       @Z40LB22*/ 39846003
*       CTR = CTR + 1;              /*YES, INCREMENT CTR     @Z40LB22*/ 39848003
*   IF SECT ^= '' THEN              /*SECT SPECIFIED?        @Z40LB22*/ 39848403
*       CTR = CTR + 1;              /*YES, INCREMENT CTR     @Z40LB22*/ 39848803
*   IF CODE ^= '' THEN              /*CODE SPECIFIED?        @Z40LB22*/ 39849203
*       CTR = CTR + 1;              /*YES, INCREMENT CTR     @Z40LB22*/ 39849603
*   IF SSID ^= '' THEN              /*SSID SPECIFIED?        @Z40LB22*/ 39849703
*       CTR = CTR + 1;              /*YES, INCREMENT CTR     @Z40LB22*/ 39849803
*   IF MSFID ^= '' THEN             /*MSFID SPECIFIED?       @Z40LB22*/ 39849903
*       CTR = CTR + 1;              /*YES, INCREMENT CTR     @Z40LB22*/ 39866603
*   IF CMAP ^= '' THEN              /*CMAP SPECIFIED?        @Z40LB22*/ 39876603
*       CTR = CTR + 1;              /*YES, INCREMENT CTR     @Z40LB22*/ 39878603
*   IF LZYX ^= '' THEN              /*LZYX SPECIFIED?        @Z40LB22*/ 39880603
*       CTR = CTR + 1;              /*YES, INCREMENT CTR     @Z40LB22*/ 39882603
*   IF LOC ^= '' THEN               /*LOC SPECIFIED?         @Z40LB22*/ 39883003
*       CTR = CTR + 1;              /*YES, INCREMENT CTR     @Z40LB22*/ 39883103
*   IF DASDCHR ^= '' THEN           /*DASDCHR SPECIFIED?     @Z40LB22*/ 39883203
*       CTR = CTR + 1;              /*YES, INCREMENT CTR     @Z40LB22*/ 39888803
*   IF DATAPTR ^= '' THEN           /*DATAPTR SPECIFIED?     @Z40LB22*/ 39890803
*       CTR = CTR + 1;              /*YES, INCREMENT CTR     @Z40LB22*/ 39892803
*   IF CTR > 0 THEN                 /*CTR GT ZERO?           @Z40LB22*/ 39893203
*      DO;                          /*YES, PRINT WARNING MSG @Z40LB22*/ 39893603
*        RETCODE = 4;               /*SET RETURN CODE TO 4   @Z40LB22*/ 39894003
*        ANS MSG('  ICB604I - WARNING-ONLY'||                           39894103
*            ' THE MF PARAMETER IS VALID FOR THE'||                     39894203
*            ' LIST FORM  ')SKIP;                                       39894303
*      END;                                                /*@Z40LB22*/ 39908203
*   IF MF(3) ^= '' THEN                /*ATTRIBUTE GIVEN?    @Z40LB22*/ 39922203
*        GO TO ATTRLST;                                    /*@Z40LB22*/ 39936103
*/*********************************************************  @Z40LB22*/ 39950003
*/*********************************************************  @Z40LB22*/ 43650003
*/*                                                          @Z40LB22*/ 43700003
*ATTRLST:                                                               43750003
*   ANS('/*******************************************'||                43800003
*       '************* @Z40LB22*/')SKIP;                                43850003
*   ANS('/*MSSC QMWCS/QLAB/QTAB/QSWCS/QCEL MACRO'||                     43900003
*       '             @Z40LB22*/')SKIP;                                 43950003
*   ANS('/*OS/VS2 VERSION--03/21/75 LEVEL 00    '||                     44000003
*       '              @Z40LB22*/')SKIP;                                44050003
*   ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '||                44100003
*       '              @Z40LB22*/')SKIP;                                44150003
*   ANS('/*GENERAL AREA TO BE OVERLAID BY SPECIFIC '||                  44160003
*       'ORDERS        @Z40LB22*/')SKIP;                                44170003
*   ANS('/*******************************************'||                44200003
*       '************* @Z40LB22*/')SKIP;                                44250003
*   ANS('DCL 1   '||MF(2)||' '||MF(3)||','||                            44300003
*              '/*REQUEST BLOCK @Z40LB22*/') SKIP(1);                   44350003
*            ANS('       2  QULEN  FIXED(31),  '||                      44360003
*                  ' /*LENGTH = 44 BYTES @Z40LB22*/')  SKIP(1);         44370003
*            ANS('       2  QUORD  CHAR(1),    '||                      44380003
*                  ' /*ORDER - COULD BE FOR QMWCS '||                   44390003
*                  ' (0B), QLAB (05), QTAB (05), '||                    44392003
*                  ' QSWCS (05), OR QCEL (07) '||                       44394003
*                  ' @Z40LB22*/')  SKIP(1);                             44396003
*            ANS('       2  QURES  CHAR(1),    '||                      44398003
*                  ' /*RESERVED BITS @Z40LB22*/')  SKIP(1);             44398403
*            ANS('       2  QUCODE BIT(8),     '||                      44398803
*                  ' /*CODE - COULD BE FOR QMWCS '||                    44399203
*                  ' (03), QLAB (08), QTAB (06), '||                    44399603
*                  ' OR QSWCS (10) @Z40LB22*/') SKIP(1);                44399703
*            ANS('        3  QULIB BIT(8),     '||                      44399803
*                  ' /*QCEL ONLY - ID OF THE MSF '||                    44399903
*                  ' TO BE AUDITED @Z40LB22*/')  SKIP(1);               44416603
*            ANS('       2  QUSECT  BIT(8),    '||                      44426603
*                  ' /*QMWCS AND QSWCS ONLY - THE '||                   44428603
*                  ' SECTOR OF CODE TO BE READ '||                      44430603
*                  ' @Z40LB22*/') SKIP(1);                              44432603
*            ANS('        3  QUXADDR BIT(8),   '||                      44433003
*                  ' /*QCEL ONLY - THE START X '||                      44433103
*                  ' ADDR OF CELLS TO BE AUDITED '||                    44433203
*                  ' @Z40LB22*/') SKIP (1);                             44438803
*            ANS('         4  QUFLAG  BIT(8),  '||                      44440803
*                  ' /*QLAB ONLY - SET TO HEX 10, '||                   44442803
*                  ' THE LZYX OF CART IS SUPPLIED'||                    44443203
*                  ' @Z40LB22*/') SKIP(1);                              44443603
*            ANS('          5  QURES1  CHAR(1), '||                     44444003
*                 ' /*QTAB ONLY - RESERVED BITS '||                     44444103
*                 ' @Z40LB22*/')  SKIP (1);                             44444203
*             ANS('      2  QUPARM  CHAR(32),  '||                      44444303
*                  ' /*PARM AREA FOR ANY SPECIFIED '||                  44458203
*                  ' @Z40LB22*/')  SKIP(1);                             44458603
*             ANS('      2  QUPTR  FIXED(31);  '||                      44460203
*                  ' /*ADDR OF A 512 BYTE DATA AREA'||                  44462203
*                  ' @Z40LB22*/')  SKIP(1);                             44464203
 /*  READ MSC WCS (QMWCS) AND READ SA WCS (QSWCS) QUPARM AREA */        44466203
*             ANS('DCL  1  QWPARM  DEFINED(QUPARM),'||                  44466603
*                  '/*MSC AND SA WCS READ @Z40LB22*/') SKIP (1);        44467003
*             ANS('      2  QWRES1  CHAR(2),   '||                      44467403
*                  '/*MSC WCS ONLY - RESERVED BITS'||                   44467803
*                  ' @Z40LB22*/')  SKIP(1);                             44467903
*             ANS('       3  QWSSID  CHAR(2),  '||                      44468003
*                  '/*SA WCS ONLY - SUBSYSTEM  '||                      44468103
*                  ' ID OF THE SA @Z40LB22*/')  SKIP(1);                44472603
*             ANS('      2  QWFLAG  BIT(8),    '||                      44474603
*                  ' /*READ INDICATOR @Z40LB22*/') SKIP(1);             44476603
*             ANS('       3  QWMEM  BIT(1),    '||                      44477003
*                  ' /*BIT 0=0 READ FROM MAIN STORAGE '||               44481603
*                  ' BIT 0=1 READ FROM EXTENDED STORAGE '||             44483603
*                  ' @Z40LB22*/')  SKIP(1);                             44485603
*             ANS('       3  *      BIT(6), /*UNUSED '||                44486000
*                  ' @ZA27590*/')  SKIP(1);                             44486100
*             ANS('       3  QWALTMSC BIT(1), '||                       44496100
*                  ' /*BIT 7=0 DUMP PRIMARY MSC '||                     44496200
*                  ' BIT 7=1 DUMP ALTERNATE MSC '||                     44496300
*                  ' @ZA27590*/')  SKIP(1);                             44496500
*             ANS('      2  QWRES2  CHAR(29);   '||                     44496703
*                  ' /*RESERVED BITS @Z40LB22*/') SKIP(1);              44506703
 /*  SPECIFIC QUPARM AREA FOR READ MSC TABLES (QTAB) @Z40LB22*/         44512103
*             ANS('DCL  1  QTPARM  DEFINED(QUPARM), '||                 44513203
*                  '/*QTAB REQUEST BLOCK @Z40LB22*/') SKIP(1);          44514303
*             ANS('      2  QTID  BIT(8),  '||                          44515403
*                  '/*@Z40LB22*/')  SKIP(1);                            44516503
*             ANS('       3  QTTABID  BIT(4),       '||                 44517603
*                  '/*TABLE ID @Z40LB22*/')  SKIP(1);                   44518703
*             ANS('      2  QTFLAG  BIT(8), /* READ CHR '||             44519803
*                  ' BIT 3=1 BLOCK CHR SUPPLIED '||                     44520903
*                  ' BIT 7=1 READ REQUEST @Z40LB22*/') SKIP(1);         44522003
*             ANS('      2  QTDATA CHAR(18), /* TABLE '||               44523103
*                  ' DEPENDENT DATA @Z40LB22*/') SKIP(1);               44524203
*             ANS('      2  QTDASCHR BIT(32), /* THE '||                44525303
*                  ' CHR OF RECORD TO BE READ '||                       44526403
*                  ' ORDER @Z40LB22*/')  SKIP (1);                      44527503
*             ANS('      2  QTRES CHAR(8); /* '||                       44528603
*                  ' RESERVED @Z40LB22*/') SKIP(1);                     44529703
 /*  SPECIFIC QUPARM AREA FOR READ LABEL (QLAB) @Z40LB22*/              44530803
*             ANS('DCL  1  QLPARM  DEFINED(QUPARM), '||                 44531903
*                  '/*QLAB REQUEST BLOCK @Z40LB22*/') SKIP(1);          44533003
*             ANS('      2  QLZYX  FIXED(15), /*THE MSF '||             44534103
*                  ' AND CELL ADDR OF CART. TO BE READ '||              44535203
*                  ' @Z40LB22*/')  SKIP(1);                             44536303
*             ANS('      2  QLRES  CHAR(30); /*RESERVED '||             44537403
*                  ' @Z40LB22*/')  SKIP(1);                             44538503
 /*  SPECIFIC QUPARM AREA FOR CELL AUDIT (QCEL) @Z40LB22*/              44539603
*             ANS('DCL  1  QCPARM  DEFINED(QUPARM), '||                 44540703
*                  '/*QCEL 8 WORD BIT MAP @Z40LB22*/') SKIP(1);         44541803
*             ANS('      2  QCMAD0Z0 BIT(32), /*WORD 1 '||              44542903
*                  ' OF CELL ADDR TO BE TESTED '||                      44544003
*                  ' @Z40LB22*/')  SKIP(1);                             44545103
*             ANS('      2  QCMAD0Z1 BIT(32), /*WORD 2 '||              44546203
*                  ' OF CELL ADDR TO BE TESTED '||                      44547303
*                  ' @Z40LB22*/')  SKIP(1);                             44548403
*             ANS('      2  QCMAD1Z0 BIT(32), /*WORD 3 '||              44549503
*                  ' OF CELL ADDR TO BE TESTED '||                      44559503
*                  ' @Z40LB22*/')  SKIP(1);                             44562903
*             ANS('      2  QCMAD1Z1 BIT(32), /*WORD 4 '||              44564903
*                  ' OF CELL ADDR TO BE TESTED '||                      44565303
*                  ' @Z40LB22*/')  SKIP(1);                             44565703
*             ANS('      2  QCMAD2Z0 BIT(32), /*WORD 5 '||              44566103
*                  ' OF CELL ADDR TO BE TESTED '||                      44566203
*                  ' @Z40LB22*/')  SKIP(1);                             44569603
*             ANS('      2  QCMAD2Z1 BIT(32), /*WORD 6 '||              44571603
*                  ' OF CELL ADDR TO BE TESTED '||                      44572003
*                  ' @Z40LB22*/')  SKIP(1);                             44572403
*             ANS('      2  QCMAD3Z0 BIT(32), /*WORD 7 '||              44572803
*                  ' OF CELL ADDR TO BE TESTED '||                      44572903
*                  ' @Z40LB22*/')  SKIP(1);                             44576303
*             ANS('      2  QCMAD3Z1 BIT(32); /*WORD 8 '||              44578303
*                  ' OF CELL ADDR TO BE TESTED '||                      44578703
*                  ' @Z40LB22*/')  SKIP(1);                             44579103
*   GO TO EXIT;                                                         44579603
*/*                                                          @Z40LB22*/ 46950003
*   ANS('/*******************************************'||                46960003
*       '************* @Z40LB22*/')SKIP;                                46970003
*   ANS('/*END OF DCLS TO BE PRINTED OUT FOR REQUEST '||                46980003
*       'BLOCK         @Z40LB22*/')SKIP;                                46990003
*   ANS('/*******************************************'||                47040003
*       '************* @Z40LB22*/')SKIP;                                47090003
*/*                                                          @Z40LB22*/ 54500003
*/*                                                          @Z40LB22*/ 54650003
*   ANS('/*******************************************'||                54660003
*       '************* @Z40LB22*/')SKIP;                                54670003
*   ANS('/*THE MACRO BRANCHES HERE IF EXECUTABLE FORM '||               54680003
*       'WAS REQUESTED @Z40LB22*/')SKIP;                                54690003
*   ANS('/*******************************************'||                54692003
*       '************* @Z40LB22*/')SKIP;                                54694003
*/*                                                          @Z40LB22*/ 54850003
*EXCHECK:                                                  /*@Z40LB22*/ 54870003
*   IF TYPE(1)='QMWCS'  THEN           /*QMWCS  REQUEST?     @Z40LB22*/ 54880003
*        GO TO TEST1;                  /*YES, BRANCH         @Z40LB22*/ 54890003
*   IF TYPE(1)='QLAB'  THEN             /*QLAB  REQUEST?     @Z40LB22*/ 54890403
*        GO TO TEST1;                  /*YES, BRANCH         @Z40LB22*/ 54890803
*   IF TYPE(1)='QTAB' THEN              /*QTAB REQUEST?      @Z40LB22*/ 54892003
*        GO TO TEST1;                  /*YES, BRANCH         @Z40LB22*/ 54894003
*   IF TYPE(1)='QSWCS' THEN              /*QSWCS  REQUEST?   @Z40LB22*/ 54896003
*        GO TO TEST1;                  /*YES, BRANCH         @Z40LB22*/ 54898003
*   IF TYPE(1)='QCEL' THEN              /*CELL  REQUEST?     @Z40LB22*/ 54898403
*        GO TO TEST1;                  /*YES, BRANCH         @Z40LB22*/ 54898803
*   ESW=1;                             /*TURN ON ESW         @Z40LB22*/ 54899203
*   IF TYPE(1)='' THEN                 /*IS TYPE NULL?       @Z40LB22*/ 54899603
*        DO;                           /*YES,PRT ERROR MSG   @Z40LB22*/ 54899703
*             ANS MSG('  ICB600I - TYPE'||                              54899803
*                  ' MUST BE SPECIFIED') SKIP(5);          /*@Z40LB22*/ 54899903
*        END;                                              /*@Z40LB22*/ 54916603
*   ELSE                               /*PRINT ERROR MSG     @Z40LB22*/ 54926603
*        DO;                                               /*@Z40LB22*/ 54928603
*             ANS MSG('  ICB601I - TYPE'||                              54930603
*                  ' IS INCORRECTLY SPECIFIED') SKIP(5);   /*@Z40LB22*/ 54932603
*        END;                                              /*@Z40LB22*/ 54933003
*   RETCODE=12;                                            /*@Z40LB22*/ 54933103
*TEST1: IF ESW=1 THEN                  /*ESW ON?             @Z40LB22*/ 54933203
*             GO TO EXIT;              /*YES, GO TO EXIT     @Z40LB22*/ 54938803
*       IF MF(1)='E' THEN              /*EXEC FORM SPECD?    @Z40LB22*/ 54944403
*             GO TO EXFORM;            /*YES, BRANCH         @Z40LB22*/ 54950003
*   ESW=1;                             /*TURN ON ESW         @Z40LB22*/ 55000003
*   DO;                                /*PRINT ERROR MSG     @Z40LB22*/ 55050003
*        ANS MSG('  ICB620I - INVALID MF PARAMETER SPECIFIED,'||        55100003
*             ' MUST BE L OR E ') SKIP(1);                 /*@Z40LB22*/ 55150003
*   END;                                /*                   @Z40LB22*/ 55200003
*   RETCODE=12;                        /*SET RETURN CODE     @Z40LB22*/ 55250003
*   GO TO EXIT;                       /*BRANCH              @Z40LB22*/  55300003
*EXFORM: IF MF(2)='' THEN              /*ADDRESS GIVEN?      @Z40LB22*/ 55350003
*             DO;                      /*NO,TURN ON ESW AND  @Z40LB22*/ 55400003
*                  ESW=1;              /*PRINT ERROR MSG     @Z40LB22*/ 55450003
*                  ANS MSG('  ICB612I - MF(2) MUST CONTAIN'||           55500003
*                       ' REQ BLK NAME IF EXEC MACRO '||                55550003
*                       'FORM REQUESTED')SKIP(5);          /*@Z40LB22*/ 55600003
*                  RETCODE=12;         /*SET RETURN CODE     @Z40LB22*/ 55650003
*                  GO TO EXIT;        /*BRANCH              @Z40LB22*/  55700003
*             END;                                         /*@Z40LB22*/ 55750003
*   ANS('/*******************************************'||                55800003
*       '************* @Z40LB22*/')SKIP;                                55850003
*   ANS('/*MSSC ICBQUERY QSWCS/QLAB/QTAB/QSWCS QCEL  '||                55900003
*       'MACRO         @Z40LB22*/')SKIP;                                55950003
*   ANS('/*OS/VS2 VERSION-- 03/21/75 LEVEL 00        '||                56000003
*       '              @Z40LB22*/')SKIP;                                56050003
*   ANS('/*THIS IS THE OUTPUT FOR THE EXECUTE FORM.  '||                56100003
*       '              @Z40LB22*/')SKIP;                                56150003
*   ANS('/*THE LIST FORM OF THIS MACRO SHOULD BE     '||                56200003
*       '              @Z40LB22*/')SKIP;                                56250003
*   ANS('/*INVOKED FIRST IN ORDER TO SET UP NECESSARY'||                56300003
*       '              @Z40LB22*/')SKIP;                                56350003
*   ANS('/*DECLARES.  IF THE COMPLETE ARGUMENT IS    '||                56400003
*       '              @Z40LB22*/')SKIP;                                56450003
*   ANS('/*SPECIFIED THE REQ BLOCK WILL BE ZEROED.   '||                56500003
*       '              @Z40LB22*/')SKIP;                                56550003
*   ANS('/*******************************************'||                56600003
*       '************* @Z40LB22*/')SKIP;                                56650003
*   ANS ('RFY(QUERR1)RSTD;/*RESTRICT  R1 @Z40LB22*/')SKIP;              56700003
*   ANS('QUERR1=ADDR('||MF(2)||                                         56750003
*        '); /*SET QUERR1 TO REQ BLOCK @Z40LB22*/')  SKIP(1);           56800003
*   IF MF(3) = 'COMPLETE' THEN                                          56850003
*      DO;                                                 /*@Z40LB22*/ 56900003
*        ANS(' '||MF(2)||'='||MF(2)||'&&'||MF(2)||';'||    /*@Z40LB22*/ 56950003
*           '/*ZERO REQUEST BLOCK @Z40LB22*/')SKIP;                     57000003
*      END;                                                /*@Z40LB22*/ 57050003
*   IF TYPE(1)='QMWCS' THEN             /*SET LENGTH FLD=44  @Z40LB22*/ 57100003
*      DO;                                                              57110003
*        ANS('QULEN='||QUOTE(LENGTH)||'X; /*SET LENGTH '||              57150003
*            'FIELD @Z40LB22*/')SKIP(1);                                57200003
*        ANS('QUORD='||QUOTE(QMCODE)||'X; /*SET OPCODE '||              57210003
*            'FIELD @Z40LB22*/') SKIP(1);                               57220003
*        ANS('QUCODE='||QUOTE(QMTYPE)||'X; /*SET CODE '||               57230003
*            'TYPE @Z40LB22*/') SKIP(1);                                57240003
*      END;                                                             57242003
*   ELSE                                                                57250003
*         GO TO CKTAB;                                                  57260003
*   IF SECT ^='' THEN                  /*SECT SPECIFIED?     @Z40LB22*/ 57290003
*      DO;                                                 /*@Z40LB22*/ 57340003
*   ANS('QUSECT='||SECT||';          /*FILL IN SECTOR ID   @Z40LB22*/') 57390003
*      SKIP(1);                                            /*@Z40LB22*/ 57390403
*      END;                                                /*@Z40LB22*/ 57390803
*   IF FLAGS ^='' THEN                /*FLAGS SPECIFIED?     @Z40LB22*/ 57392003
*      DO;                                                 /*@Z40LB22*/ 57394003
*   ANS('QWFLAG='||FLAGS||';       /*FILL IN FLAGS FIELD   @ZA09556*/') 57396003
*      SKIP(1);                                            /*@Z40LB22*/ 57398003
*      END;                                                /*@Z40LB22*/ 57398403
*   IF DATAPTR ^='' THEN           /*DATAPTR SPECIFIED?     @Z40LB22*/  57398803
*      DO;                                                 /*@Z40LB22*/ 57399203
*   ANS('QUPTR=ADDR'||DATAPTR||';  /*ADDR OF DATAPTR FIELD @Z40LB22*/') 57399603
*      SKIP(1);                                            /*@Z40LB22*/ 57407203
*      END;                                                /*@Z40LB22*/ 57410903
*    GO TO LINK;                                                        57414603
*CKTAB:                                                                 57418303
*   IF TYPE(1)='QTAB' THEN             /*SET LENGTH FLD=44  @Z40LB22*/  57422003
*      DO;                                                              57425703
*        ANS('QULEN='||QUOTE(LENGTH)||'X; /*SET LENGTH '||              57429403
*            'FIELD @Z40LB22*/')SKIP(1);                                57433103
*        ANS('QUORD='||QUOTE(QTCODE)||'X; /*SET OPCODE '||              57436803
*            'FIELD @Z40LB22*/') SKIP(1);                               57440503
*        ANS('QUCODE='||QUOTE(QTTYPE)||'X; /*SET CODE '||               57444203
*            'TYPE @Z40LB22*/') SKIP(1);                                57447903
*      END;                                                             57451603
*   ELSE                                                                57455303
*         GO TO CKLAB;                                                  57459003
*   IF PARMS ^='' THEN               /*PARMS SPECIFIED?      @Z40LB22*/ 57462703
*      DO;                                                 /*@Z40LB22*/ 57466403
*   ANS('QUPARM='||PARMS||';       /*FILL IN PARAMETERS    @Z40LB22*/') 57470103
*      SKIP(1);                                            /*@Z40LB22*/ 57473803
*      END;                                                /*@Z40LB22*/ 57477803
*   IF DASDCHR ^='' THEN               /*CHR SPECIFIED?      @Z40LB22*/ 57481203
*      DO;                                                 /*@Z40LB22*/ 57484903
*   ANS('QTDASCHR='||DASDCHR||';     /*FILL IN CHR         @Z40LB22*/') 57488603
*      SKIP(1);                                            /*@Z40LB22*/ 57503203
*      END;                                                /*@Z40LB22*/ 57511003
*   IF DATAPTR ^='' THEN           /*DATAPTR SPECIFIED?     @Z40LB22*/  57513003
*      DO;                                                 /*@Z40LB22*/ 57515003
*   ANS('QUPTR=ADDR'||DATAPTR||';  /*ADDR OF DATAPTR FIELD @Z40LB22*/') 57515403
*      SKIP(1);                                            /*@Z40LB22*/ 57517403
*      END;                                                /*@Z40LB22*/ 57517803
*    GO TO LINK;                                                        57518203
*CKLAB:                                                                 57518803
*   IF TYPE(1)='QLAB' THEN             /*INITIALIZE FIELDS  @Z40LB22*/  57520803
*      DO;                                                              57522803
*        ANS('QULEN='||QUOTE(LENGTH)||'X; /*SET LENGTH '||              57524803
*            'FIELD @Z40LB22*/')SKIP(1);                                57525203
*        ANS('QUORD='||QUOTE(QLCODE)||'X; /*SET OPCODE '||              57525603
*            'FIELD @Z40LB22*/') SKIP(1);                               57526003
*        ANS('QUCODE='||QUOTE(QLTYPE)||'X; /*SET CODE '||               57526403
*            'TYPE @Z40LB22*/') SKIP(1);                                57526503
*        ANS('QUFLAG='||QUOTE(QLFLAG)||'X; /*SET CODE '||               57536403
*            'FLAG @Z40LB22*/') SKIP(1);                                57538403
*      END;                                                             57538703
*   ELSE                                                                57548703
*         GO TO CKQSWCS;                                                57550403
*   IF LZYX ^='' THEN               /*CELL ADDR SPECIFIED?   @Z40LB22*/ 57550803
*      DO;                                                 /*@Z40LB22*/ 57550903
*   ANS('QLZYX='||LZYX||';         /*FILL IN LZYX          @Z40LB22*/') 57551003
*      SKIP(1);                                            /*@Z40LB22*/ 57551103
*      END;                                                /*@Z40LB22*/ 57555203
*   IF DATAPTR ^='' THEN           /*DATAPTR SPECIFIED?     @Z40LB22*/  57571403
*      DO;                                                 /*@Z40LB22*/ 57573403
*   ANS('QUPTR=ADDR'||DATAPTR||';  /*ADDR OF DATAPTR FIELD @Z40LB22*/') 57577803
*      SKIP(1);                                            /*@Z40LB22*/ 57581203
*      END;                                                /*@Z40LB22*/ 57583603
*    GO TO LINK;                                                        57586003
*CKQSWCS:                                                               57588403
*   IF TYPE(1)='QSWCS' THEN             /*INITIALIZE FIELDS  @Z40LB22*/ 57590803
*      DO;                                                              57593203
*        ANS('QULEN='||QUOTE(LENGTH)||'X; /*SET LENGTH '||              57595603
*            'FIELD @Z40LB22*/')SKIP(1);                                57598003
*        ANS('QUORD='||QUOTE(QSCODE)||'X; /*SET OPCODE '||              57600403
*            'FIELD @Z40LB22*/') SKIP(1);                               57602803
*        ANS('QUCODE='||QUOTE(QSTYPE)||'X; /*SET CODE '||               57605203
*            'TYPE @Z40LB22*/') SKIP(1);                                57607603
*      END;                                                             57610003
*   ELSE                                                                57612403
*         GO TO CKCEL;                                                  57614803
*   IF SECT ^='' THEN                /*SECTOR ID SPECIFIED?  @Z40LB22*/ 57617203
*      DO;                                                 /*@Z40LB22*/ 57627203
*   ANS('QUSECT='||SECT||';       /*FILL IN SECTOR ID      @Z40LB22*/') 57627603
*      SKIP(1);                                            /*@Z40LB22*/ 57628003
*      END;                                                /*@Z40LB22*/ 57628403
*   IF SSID ^='' THEN               /*SUBSYSTEM ID?          @Z40LB22*/ 57628803
*      DO;                                                 /*@Z40LB22*/ 57629003
*   ANS('QWSSID='||SSID||';        /*FILL SUBSYSTEM ID     @Z40LB22*/') 57629103
*      SKIP(1);                                            /*@Z40LB22*/ 57629203
*      END;                                                /*@Z40LB22*/ 57630103
*   IF FLAGS ^='' THEN               /*READ INDICATOR?       @Z40LB22*/ 57630503
*      DO;                                                 /*@Z40LB22*/ 57630903
*   ANS('QWFLAG='||FLAGS||';        /*FILL IN FLAG FIELD   @ZA09556*/') 57631303
*      SKIP(1);                                            /*@Z40LB22*/ 57631703
*      END;                                                /*@Z40LB22*/ 57631803
*   IF DATAPTR ^='' THEN           /*DATAPTR SPECIFIED?     @Z40LB22*/  57632103
*      DO;                                                 /*@Z40LB22*/ 57634303
*   ANS('QUPTR=ADDR'||DATAPTR||';  /*ADDR OF DATAPTR FIELD @Z40LB22*/') 57636703
*      SKIP(1);                                            /*@Z40LB22*/ 57638303
*      END;                                                /*@Z40LB22*/ 57638703
*    GO TO LINK;                                                        57688703
*CKCEL:                                                                 57738703
*   IF TYPE(1)='QCEL' THEN              /*INITIALIZE FIELDS  @Z40LB22*/ 57788703
*      DO;                                                              57838703
*        ANS('QULEN='||QUOTE(LENGTH)||'X; /*SET LENGTH '||              57888703
*            'FIELD @Z40LB22*/')SKIP(1);                                57938703
*        ANS('QUORD='||QUOTE(QCCODE)||'X; /*SET OPCODE '||              57988703
*            'FIELD @Z40LB22*/') SKIP(1);                               58038703
*      END;                                                             58088703
*   ELSE                                                                58138703
*         GO TO EXIT;                                                   58188703
*   IF MSFID ^='' THEN                /*MSF ID SPECIFIED?    @Z40LB22*/ 58238703
*      DO;                                                 /*@Z40LB22*/ 58288703
*   ANS('QULIB='||MSFID||';       /*MSF TO BE AUDITED ID   @Z40LB22*/') 58338703
*      SKIP(1);                                            /*@Z40LB22*/ 58388703
*      END;                                                /*@Z40LB22*/ 58438703
*   IF LOC ^='' THEN                /*START X ADDR?          @Z40LB22*/ 58488703
*      DO;                                                 /*@Z40LB22*/ 58538703
*   ANS('QUXADDR='||LOC||';        /*FILL IN X ADDR        @Z40LB22*/') 58588703
*      SKIP(1);                                            /*@Z40LB22*/ 58638703
*      END;                                                /*@Z40LB22*/ 58688703
*   IF CMAP ^='' THEN               /*CELL MAP SPECIFIED?    @Z40LB22*/ 58738703
*      DO;                                                 /*@Z40LB22*/ 58788703
*   ANS('QUPARM='||CMAP||';        /*FILL IN CELL BIT MAP  @Z40LB22*/') 58838703
*      SKIP(1);                                            /*@Z40LB22*/ 58888703
*      END;                                                /*@Z40LB22*/ 58938703
*   IF DATAPTR ^='' THEN           /*DATAPTR SPECIFIED?     @Z40LB22*/  58988703
*      DO;                                                 /*@Z40LB22*/ 59038703
*   ANS('QUPTR=ADDR'||DATAPTR||';  /*ADDR OF DATAPTR FIELD @Z40LB22*/') 59048703
*      SKIP(1);                                            /*@Z40LB22*/ 59138703
*      END;                                                /*@Z40LB22*/ 59188703
*   IF ESW=1 THEN                      /*ESW ON?             @Z40LB22*/ 60050003
*        GO TO EXIT;                   /*YES, BRANCH         @Z40LB22*/ 60100003
*LINK: ANS('SVC  (126); /*ISSUE SVC INST.  @Z40LB22*/') SKIP(1);        60400003
*      ANS ('RFY(QUERR1)UNRSTD;/*UNRESTRICT'||                          60450003
*           ' R1 @Z40LB22*/')SKIP;                                      60500003
*EXIT: RETURN CODE(RETCODE);                               /*@Z40LB22*/ 60550003
*   %END;                                                  /*@Z40LB22*/ 60600003
