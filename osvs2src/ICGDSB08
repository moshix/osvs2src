         TITLE 'ICGDSB08 MSC TABLE CREATE BUILD CONFIGURATION TABLE    *00001000
                        '                                               00002000
ICGDSB08 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'ICGDSB08  76.339'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         L     @00,@SIZDATD                                        0001 00014000
         GETMAIN  R,LV=(0)                                              00015000
         LR    @11,@01                                             0001 00016000
         USING @DATD,@11                                           0001 00017000
         ST    @13,@SA00001+4                                      0001 00018000
         LM    @00,@01,20(@13)                                     0001 00019000
         ST    @11,8(,@13)                                         0001 00020000
         LR    @13,@11                                             0001 00021000
         XC    @ZTEMPS(@ZLEN),@ZTEMPS                                   00022000
*                                                            @XD00153*/ 00023000
*                                                                  0024 00024000
*/********************************************************** @XD00153*/ 00025000
*/*                                                          @XD00153*/ 00026000
*/*      ICGDSB08 (MAINLINE)                                 @XD00153*/ 00027000
*/*                                                          @XD00153*/ 00028000
*/*      INITIALIZE AREAS, THEN CALL PROCEDURES TO SET UP    @XD00153*/ 00029000
*/*      THE 1ST, 5TH, 9TH, AND SA BLOCKS AND CALL PROC      @XD00153*/ 00030000
*/*      'WRITETRK' TO PUT PREFIX INFO IN THE BLOCKS.        @XD00153*/ 00031000
*/*                                                          @XD00153*/ 00032000
*/********************************************************** @XD00153*/ 00033000
*                                                                  0024 00034000
*   OUTCYL(1)=UT2VCYL;              /* STARTING CYLINDER NUMBER    0024 00035000
*                                                            @Y30LB14*/ 00036000
         L     @10,BUILDPTR(,R4)                                   0024 00037000
         LH    @05,@CH00469                                        0024 00038000
         ALR   @05,@10                                             0024 00039000
         MVC   OUTCYL(1,@05),UT2VCYL(@10)                          0024 00040000
*   OUTHEAD(1)=UT2VHEAD;            /* STARTING HEAD NUMBER  @Y30LB14*/ 00041000
         MVC   OUTHEAD(1,@05),UT2VHEAD(@10)                        0025 00042000
*   OUTREC(1)=UT2VREC;              /* STARTING RECORD NUMBER      0026 00043000
*                                                            @Y30LB14*/ 00044000
         MVC   OUTREC(1,@05),UT2VREC(@10)                          0026 00045000
*   B06DCBPT=ADDR(UT2DCB);          /*                       @Y30LB14*/ 00046000
         LA    @05,UT2DCB(,@10)                                    0027 00047000
         ST    @05,B06DCBPT(,@10)                                  0027 00048000
*   B06BUFPT=ADDR(UT2BUFER);        /* ADDRESS OF WRITE      @Y30LB14   00049000
*                                      BUFFER                @Y30LB14*/ 00050000
         LR    @05,@10                                             0028 00051000
         AL    @05,@CF00469                                        0028 00052000
         ST    @05,B06BUFPT(,@10)                                  0028 00053000
*   ZEROS=''B;                      /* SET BLOCK TO 0'S      @Y30LB14*/ 00054000
         XC    ZEROS(256),ZEROS                                    0029 00055000
*   TWO4=0;                         /*                       @Y30LB14*/ 00056000
         SLR   @10,@10                                             0030 00057000
         LR    TWO4,@10                                            0030 00058000
*   RSGBYTE=0;                      /*                       @Y30LB14*/ 00059000
         LR    RSGBYTE,@10                                         0031 00060000
*   CALL RSVDBLOC;                  /* ZERO CERTAIN BLOCKS   @Y30LB14*/ 00061000
         BAL   @14,RSVDBLOC                                        0032 00062000
*   CALL FIRSTBLK;                  /* SET UP 1ST BLOCK      @Y30LB14*/ 00063000
         BAL   @14,FIRSTBLK                                        0033 00064000
*   CALL FIFTHBLK;                  /* SET UP FIFTH BLOCK    @Y30LB14*/ 00065000
         BAL   @14,FIFTHBLK                                        0034 00066000
*   CALL NINTHBLK;                  /* SET UP NINTH BLOCK    @Y30LB14*/ 00067000
         BAL   @14,NINTHBLK                                        0035 00068000
*   CALL DSBLOCKS;                  /* SET UP THE DS BLOCKS  @Y30LB14*/ 00069000
         BAL   @14,DSBLOCKS                                        0036 00070000
*   CALL WRITETRK;                  /* PUT IN PREFIX INFO IN BLOCKS     00071000
*                                                            @Y30LB14*/ 00072000
         BAL   @14,WRITETRK                                        0037 00073000
*   TWO4=24;                        /*                       @Y30LB14*/ 00074000
         LA    TWO4,24                                             0038 00075000
*   CALL RSVDBLOC;                  /* ZERO CERTAIN BLOCKS   @Y30LB14*/ 00076000
         BAL   @14,RSVDBLOC                                        0039 00077000
*   CALL DSBLOCKS;                  /* SET UP THE DS BLOCKS  @Y30LB14*/ 00078000
         BAL   @14,DSBLOCKS                                        0040 00079000
*   CALL WRITETRK;                  /* PUT IN PREFIX INFO IN BLOCKS     00080000
*                                                            @Y30LB14*/ 00081000
         BAL   @14,WRITETRK                                        0041 00082000
*   RETURN;                         /* RETURN TO CALLER - ICGDSBLD 0042 00083000
*                                                            @Y30LB14*/ 00084000
@EL00001 L     @13,4(,@13)                                         0042 00085000
@EF00001 L     @00,@SIZDATD                                        0042 00086000
         LR    @01,@11                                             0042 00087000
         FREEMAIN R,LV=(0),A=(1)                                        00088000
@ER00001 LM    @14,@12,12(@13)                                     0042 00089000
         BR    @14                                                 0042 00090000
*                                                                  0043 00091000
*/*********************************************************  @XD00153*/ 00092000
*/*                                                          @XD00153*/ 00093000
*/* PROCEDURE NAME - FIRSTBLK                                @XD00153*/ 00094000
*/*                                                          @XD00153*/ 00095000
*/* FUNCTION - THIS ROUTINE BUILDS THE FIRST BLOCK OF THE    @XD00153*/ 00096000
*/*            CONFIGURATION TABLE.                          @XD00153*/ 00097000
*/*                                                          @XD00153*/ 00098000
*/*********************************************************  @XD00153*/ 00099000
*                                                                  0043 00100000
*FIRSTBLK:                                                         0043 00101000
*   PROCEDURE;                      /*                       @Y30LB14*/ 00102000
FIRSTBLK STM   @14,@12,12(@13)                                     0043 00103000
*   ZEROS=''B;                      /* ZERO THE BLOCK IMAGE  @Y30LB14*/ 00104000
*                                                                  0044 00105000
         XC    ZEROS(256),ZEROS                                    0044 00106000
*   /*****************************************************************/ 00107000
*   /*                                                               */ 00108000
*   /* ***********************************************       @XD00153*/ 00109000
*   /* IF A CHANNEL INTERFACE IS SPECIFIED, THEN THE         @XD00153*/ 00110000
*   /* CPU REFERENCE NUMBER IS PLACED IN ITS PROPER          @Y30LB14*/ 00111000
*   /* BYTE LOCATION. THE BYTE LOCATION SEQUENCE IS          @Y30LB14*/ 00112000
*   /* 3,5,7,11,13,15,19,21,23,27,29,31, - - -,127.          @Y30LB14*/ 00113000
*   /* ALSO, THE TWO LOW ORDER BITS OF THE CHANNEL           @Y30LB14*/ 00114000
*   /* UNIT ADDRESS ARE SHIFTED TO THE TWO HIGH ORDER        @Y30LB14*/ 00115000
*   /* POSITIONS AND THE CHANNEL NUMBER OCCUPIES THE         @Y30LB14*/ 00116000
*   /* 6 LOW ORDER POSITIONS OF THE BYTE WHICH IS            @Y30LB14*/ 00117000
*   /* PLACED IN THE BYTE LOCATION BY THE FOLLOWING          @Y30LB14*/ 00118000
*   /* SEQUENCE. 4,6,8,12,14,16,20,22,24, - - ,128.          @Y30LB14*/ 00119000
*   /* ***********************************************       @XD00153*/ 00120000
*   /*                                                               */ 00121000
*   /*****************************************************************/ 00122000
*                                                                  0045 00123000
*   DO I=1 TO 48;                   /*                       @Y30LB14*/ 00124000
         LA    I,1                                                 0045 00125000
@DL00045 DS    0H                                                  0046 00126000
*     IF CISPEC(I)='1'B THEN                                       0046 00127000
         LR    @10,I                                               0046 00128000
         MH    @10,@CH00112                                        0046 00129000
         L     @05,COMPTR2(,R4)                                    0046 00130000
         ST    @10,@TF00001                                        0046 00131000
         ALR   @10,@05                                             0046 00132000
         TM    CISPEC-9(@10),B'10000000'                           0046 00133000
         BNO   @RF00046                                            0046 00134000
*       DO;                         /*                       @Y30LB14*/ 00135000
*         BYTES(3*I-(I-1)/3-(I-1)//3)=CPUREFNO(I);/*         @Y30LB14*/ 00136000
         LA    @10,3                                               0048 00137000
         LR    @01,I                                               0048 00138000
         MR    @00,@10                                             0048 00139000
         LR    @03,I                                               0048 00140000
         BCTR  @03,0                                               0048 00141000
         LR    @06,@03                                             0048 00142000
         SRDA  @06,32                                              0048 00143000
         DR    @06,@10                                             0048 00144000
         LCR   @07,@07                                             0048 00145000
         ALR   @07,@01                                             0048 00146000
         LR    @08,@03                                             0048 00147000
         SRDA  @08,32                                              0048 00148000
         DR    @08,@10                                             0048 00149000
         SLR   @07,@08                                             0048 00150000
         L     @06,@TF00001                                        0048 00151000
         SLR   @00,@00                                             0048 00152000
         IC    @00,CPUREFNO-9(@06,@05)                             0048 00153000
         STC   @00,BYTES-1(@07)                                    0048 00154000
*         BYTES(3*I+1-(I-1)/3-(I-1)//3)=RSGCHAN(I)+RSGCUA(I)*64;/* 0049 00155000
*                                                            @Y30LB14*/ 00156000
         AH    @01,@CH00042                                        0049 00157000
         LR    @06,@03                                             0049 00158000
         SRDA  @06,32                                              0049 00159000
         DR    @06,@10                                             0049 00160000
         SLR   @01,@07                                             0049 00161000
         LR    @06,@03                                             0049 00162000
         SRDA  @06,32                                              0049 00163000
         DR    @06,@10                                             0049 00164000
         SLR   @01,@06                                             0049 00165000
         L     @10,@TF00001                                        0049 00166000
         SLR   @03,@03                                             0049 00167000
         IC    @03,RSGCUA-9(@10,@05)                               0049 00168000
         SLA   @03,6                                               0049 00169000
         AL    @05,@TF00001                                        0049 00170000
         MVC   @ZT00003+3(1),RSGCHAN-9(@05)                        0049 00171000
         AL    @03,@ZT00003                                        0049 00172000
         STC   @03,BYTES-1(@01)                                    0049 00173000
*       END;                        /*                       @Y30LB14*/ 00174000
*   END;                            /*                       @Y30LB14*/ 00175000
*                                                                  0051 00176000
@RF00046 AH    I,@CH00042                                          0051 00177000
         CH    I,@CH00235                                          0051 00178000
         BNH   @DL00045                                            0051 00179000
*   /*****************************************************************/ 00180000
*   /*                                                               */ 00181000
*   /* ***********************************************       @XD00153*/ 00182000
*   /* SET THE 4 LOW ORDER BITS OF THE FLAG BYTE OF          @Y30LB14*/ 00183000
*   /* CONFIGURATION INDEX. BYTE LOCATION SEQUENCE           @Y30LB14*/ 00184000
*   /* IS 1,9,17,25,33, - - - ,121.                          @Y30LB14*/ 00185000
*   /* ***********************************************       @XD00153*/ 00186000
*   /*                                                               */ 00187000
*   /*****************************************************************/ 00188000
*                                                                  0052 00189000
*   DO I=1 TO 16;                   /*                       @Y30LB14*/ 00190000
         LA    I,1                                                 0052 00191000
@DL00052 DS    0H                                                  0053 00192000
*     FLAGS=0;                      /*                       @Y30LB14*/ 00193000
         MVI   FLAGS,X'00'                                         0053 00194000
*     DO J=1 TO 4;                  /*                       @Y30LB14*/ 00195000
         LA    J,1                                                 0054 00196000
@DL00054 DS    0H                                                  0055 00197000
*       IF LOWSPEC(I,J)='1'B THEN                                  0055 00198000
         LR    @10,I                                               0055 00199000
         SLA   @10,2                                               0055 00200000
         ALR   @10,J                                               0055 00201000
         ALR   @10,@10                                             0055 00202000
         ST    @10,@TF00001                                        0055 00203000
         ALR   @10,R4                                              0055 00204000
         TM    LOWSPEC-10(@10),B'10000000'                         0055 00205000
         BNO   @RF00055                                            0055 00206000
*         DO;                       /*                       @Y30LB14*/ 00207000
*           IF LOWLIB(I,J)='F0'X THEN                              0057 00208000
         LR    @10,R4                                              0057 00209000
         AL    @10,@TF00001                                        0057 00210000
         CLI   LOWLIB-10(@10),X'F0'                                0057 00211000
         BNE   @RF00057                                            0057 00212000
*             BIT4='1'B;            /*                       @Y30LB14*/ 00213000
         OI    BIT4,B'00001000'                                    0058 00214000
*           IF LOWLIB(I,J)='F1'X THEN                              0059 00215000
@RF00057 LR    @10,I                                               0059 00216000
         SLA   @10,2                                               0059 00217000
         ALR   @10,J                                               0059 00218000
         ALR   @10,@10                                             0059 00219000
         ALR   @10,R4                                              0059 00220000
         CLI   LOWLIB-10(@10),X'F1'                                0059 00221000
         BNE   @RF00059                                            0059 00222000
*             BIT5='1'B;            /*                       @Y30LB14*/ 00223000
         OI    BIT5,B'00000100'                                    0060 00224000
*           IF LOWLIB(I,J)='F2'X THEN                              0061 00225000
@RF00059 LR    @10,I                                               0061 00226000
         SLA   @10,2                                               0061 00227000
         ALR   @10,J                                               0061 00228000
         ALR   @10,@10                                             0061 00229000
         ALR   @10,R4                                              0061 00230000
         CLI   LOWLIB-10(@10),X'F2'                                0061 00231000
         BNE   @RF00061                                            0061 00232000
*             BIT6='1'B;            /*                       @Y30LB14*/ 00233000
         OI    BIT6,B'00000010'                                    0062 00234000
*           IF LOWLIB(I,J)='F3'X THEN                              0063 00235000
@RF00061 LR    @10,I                                               0063 00236000
         SLA   @10,2                                               0063 00237000
         ALR   @10,J                                               0063 00238000
         ALR   @10,@10                                             0063 00239000
         ALR   @10,R4                                              0063 00240000
         CLI   LOWLIB-10(@10),X'F3'                                0063 00241000
         BNE   @RF00063                                            0063 00242000
*             BIT7='1'B;            /*                       @Y30LB14*/ 00243000
         OI    BIT7,B'00000001'                                    0064 00244000
*         END;                      /*                       @Y30LB14*/ 00245000
@RF00063 DS    0H                                                  0066 00246000
*     END;                          /*                       @Y30LB14*/ 00247000
@RF00055 AH    J,@CH00042                                          0066 00248000
         CH    J,@CH00068                                          0066 00249000
         BNH   @DL00054                                            0066 00250000
*     BYTES(I*8-7)=FLAGS;           /*                       @Y30LB14*/ 00251000
         LR    @10,I                                               0067 00252000
         SLA   @10,3                                               0067 00253000
         SLR   @05,@05                                             0067 00254000
         IC    @05,FLAGS                                           0067 00255000
         STC   @05,BYTES-8(@10)                                    0067 00256000
*   END;                            /*                       @Y30LB14*/ 00257000
*                                                                  0068 00258000
         AH    I,@CH00042                                          0068 00259000
         CH    I,@CH00162                                          0068 00260000
         BNH   @DL00052                                            0068 00261000
*   /*****************************************************************/ 00262000
*   /*                                                               */ 00263000
*   /* ***********************************************       @XD00153*/ 00264000
*   /* SET HIGH ORDER BIT OF FLAGS                           @Y30LB14*/ 00265000
*   /* ***********************************************       @XD00153*/ 00266000
*   /*                                                               */ 00267000
*   /*****************************************************************/ 00268000
*                                                                  0069 00269000
*   DO I=1 TO 4;                    /*                       @Y30LB14*/ 00270000
         LA    I,1                                                 0069 00271000
@DL00069 DS    0H                                                  0070 00272000
*     IF LIBSPEC(I)='1'B THEN                                      0070 00273000
         LR    @10,I                                               0070 00274000
         MH    @10,@CH00128                                        0070 00275000
         ST    @10,@TF00001                                        0070 00276000
         ALR   @10,R4                                              0070 00277000
         TM    LIBSPEC-12(@10),B'10000000'                         0070 00278000
         BNO   @RF00070                                            0070 00279000
*       BYTES(LIBDSMID(I)*8+1)=BYTES(LIBDSMID(I)*8+1)+128;/* @Y30LB14*/ 00280000
         L     @10,@TF00001                                        0071 00281000
         SLR   @05,@05                                             0071 00282000
         IC    @05,LIBDSMID-12(@10,R4)                             0071 00283000
         SLA   @05,3                                               0071 00284000
         LA    @10,128                                             0071 00285000
         LA    @03,BYTES(@05)                                      0071 00286000
         MVC   @ZT00003+3(1),0(@03)                                0071 00287000
         AL    @10,@ZT00003                                        0071 00288000
         STC   @10,BYTES(@05)                                      0071 00289000
*   END;                            /*                       @Y30LB14*/ 00290000
*                                                                  0072 00291000
@RF00070 AH    I,@CH00042                                          0072 00292000
         CH    I,@CH00068                                          0072 00293000
         BNH   @DL00069                                            0072 00294000
*   /*****************************************************************/ 00295000
*   /*                                                               */ 00296000
*   /* ***********************************************       @XD00153*/ 00297000
*   /* MOVE ASSOCIATION TABLE TO LAST HALF OF THE            @Y30LB14*/ 00298000
*   /* BLOCK IMAGE.                                          @Y30LB14*/ 00299000
*   /* CLEAR OUT OPSYS BITS FROM TABLE.                      @ZD02028*/ 00300000
*   /* ***********************************************       @XD00153*/ 00301000
*   /*                                                               */ 00302000
*   /*****************************************************************/ 00303000
*                                                                  0073 00304000
*   DO I=1 TO 16;                   /*                       @Y30LB14*/ 00305000
         LA    I,1                                                 0073 00306000
@DL00073 DS    0H                                                  0074 00307000
*     CPUASSN(16+I)=CPU(I);         /*                       @Y30LB14*/ 00308000
         LR    @10,I                                               0074 00309000
         SLA   @10,3                                               0074 00310000
         LA    @05,CPUASSN+120(@10)                                0074 00311000
         ST    @10,@TF00001                                        0074 00312000
         ALR   @10,R4                                              0074 00313000
         MVC   0(8,@05),CPU-8(@10)                                 0074 00314000
*     VS1(16+I)='0'B;               /*                       @ZD02028*/ 00315000
*     VS2(16+I)='0'B;               /*                       @ZD02028*/ 00316000
*     JES(16+I)='0'B;               /*                       @Z40LB73*/ 00317000
         L     @10,@TF00001                                        0077 00318000
         LA    @05,JES+120(@10)                                    0077 00319000
         NI    0(@05),B'11100011'                                  0077 00320000
*   END;                            /*                       @Y30LB14*/ 00321000
*                                                                  0078 00322000
         AH    I,@CH00042                                          0078 00323000
         CH    I,@CH00162                                          0078 00324000
         BNH   @DL00073                                            0078 00325000
*   /*****************************************************************/ 00326000
*   /*                                                               */ 00327000
*   /* ***********************************************       @XD00153*/ 00328000
*   /* PUT FIRST BLOCK IN THE TRACK IMAGE AND                @Y30LB14*/ 00329000
*   /* RETURN TO CALLER.                                     @Y30LB14*/ 00330000
*   /* ***********************************************       @XD00153*/ 00331000
*   /*                                                               */ 00332000
*   /*****************************************************************/ 00333000
*                                                                  0079 00334000
*   OBLOCK(1)=BLOCK;                /*                       @Y30LB14*/ 00335000
         L     @10,BUILDPTR(,R4)                                   0079 00336000
         AL    @10,@CF00469                                        0079 00337000
         MVC   OBLOCK(256,@10),BLOCK                               0079 00338000
*   RETURN;                         /*                       @Y30LB14*/ 00339000
@EL00002 DS    0H                                                  0080 00340000
@EF00002 DS    0H                                                  0080 00341000
@ER00002 LM    @14,@12,12(@13)                                     0080 00342000
         BR    @14                                                 0080 00343000
*   END FIRSTBLK;                   /*                       @Y30LB14*/ 00344000
*                                                                  0082 00345000
*/*********************************************************  @XD00153*/ 00346000
*/*                                                          @XD00153*/ 00347000
*/* PROCEDURE NAME - NINTHBLK                                @XD00153*/ 00348000
*/*                                                          @XD00153*/ 00349000
*/* FUNCTION - THIS ROUTINE BUILDS THE NINTH BLOCK OF THE    @XD00153*/ 00350000
*/*            CONFIGURATION TABLE.                          @XD00153*/ 00351000
*/*                                                          @XD00153*/ 00352000
*/*********************************************************  @XD00153*/ 00353000
*                                                                  0082 00354000
*NINTHBLK:                                                         0082 00355000
*   PROCEDURE;                      /*                       @Y30LB14*/ 00356000
NINTHBLK STM   @14,@12,12(@13)                                     0082 00357000
*   ZEROS=''B;                      /* ZERO THE BLOCK IMAGE  @Y30LB14*/ 00358000
*                                                                  0083 00359000
         XC    ZEROS(256),ZEROS                                    0083 00360000
*   /*****************************************************************/ 00361000
*   /*                                                               */ 00362000
*   /* ***********************************************       @XD00153*/ 00363000
*   /* PLACE THE 'PHYSDS2' DATA IN THE BLOCK IN THE          @Y30LB14*/ 00364000
*   /* FOLLOWING BYTE SEQUENCE.                              @Y30LB14*/ 00365000
*   /* 1,2,3,4,17,18,19,20,33,34,35,36, - - - -              @Y30LB14*/ 00366000
*   /* ,241,242,243,244.                                     @Y30LB14*/ 00367000
*   /* ***********************************************       @XD00153*/ 00368000
*   /*                                                               */ 00369000
*   /*****************************************************************/ 00370000
*                                                                  0084 00371000
*   DO I=1 TO 16;                   /*                       @Y30LB14*/ 00372000
         LA    I,1                                                 0084 00373000
@DL00084 DS    0H                                                  0085 00374000
*     DO J=1 TO 4;                  /*                       @Y30LB14*/ 00375000
         LA    J,1                                                 0085 00376000
@DL00085 DS    0H                                                  0086 00377000
*       BYTES((I-1)*16+J)=PHYSDS2(I,J);/*                    @Y30LB14*/ 00378000
         LR    @10,I                                               0086 00379000
         BCTR  @10,0                                               0086 00380000
         SLA   @10,4                                               0086 00381000
         ALR   @10,J                                               0086 00382000
         LR    @03,I                                               0086 00383000
         SLA   @03,2                                               0086 00384000
         ALR   @03,J                                               0086 00385000
         SLR   @15,@15                                             0086 00386000
         IC    @15,PHYSDS2-5(@03,R4)                               0086 00387000
         STC   @15,BYTES-1(@10)                                    0086 00388000
*     END;                          /*                       @Y30LB14*/ 00389000
         AH    J,@CH00042                                          0087 00390000
         CH    J,@CH00068                                          0087 00391000
         BNH   @DL00085                                            0087 00392000
*   END;                            /*                       @Y30LB14*/ 00393000
*                                                                  0088 00394000
         AH    I,@CH00042                                          0088 00395000
         CH    I,@CH00162                                          0088 00396000
         BNH   @DL00084                                            0088 00397000
*   /*****************************************************************/ 00398000
*   /*                                                               */ 00399000
*   /* ***********************************************       @XD00153*/ 00400000
*   /* SET UP REAL SPINDLES BIT PATTERN IN A BIT             @Y30LB14*/ 00401000
*   /* STRING 32 BITS LONG. THEN PLACE THE 32 BIT            @Y30LB14*/ 00402000
*   /* LONG STRING IN 4 BYTE BLOCKS WITH THE STARTING        @Y30LB14*/ 00403000
*   /* BLOCKS HAVING THE FOLLOWING SEQUENCE.                 @Y30LB14*/ 00404000
*   /* 5,9,13,21,25,29,37,41,45,- - - - ,253.                @Y30LB14*/ 00405000
*   /* ***********************************************       @XD00153*/ 00406000
*   /*                                                               */ 00407000
*   /*****************************************************************/ 00408000
*                                                                  0089 00409000
*   DO I=1 TO 48;                   /*                       @Y30LB14*/ 00410000
         LA    I,1                                                 0089 00411000
@DL00089 DS    0H                                                  0090 00412000
*     BITPOSN=1073741824;           /*                       @Y30LB14*/ 00413000
         L     BITPOSN,@CF00431                                    0090 00414000
*     BITPATRN=BLOCK(((4*I)+((I-1)/3)*4+1):((4*I)+((I-1)/3)*4+4));/*    00415000
*                                                            @OZ09548*/ 00416000
         LR    @10,I                                               0091 00417000
         SLA   @10,2                                               0091 00418000
         LA    @07,3                                               0091 00419000
         LR    @00,I                                               0091 00420000
         BCTR  @00,0                                               0091 00421000
         SRDA  @00,32                                              0091 00422000
         DR    @00,@07                                             0091 00423000
         SLA   @01,2                                               0091 00424000
         ALR   @10,@01                                             0091 00425000
         LA    @05,BLOCK(@10)                                      0091 00426000
         MVC   BITPATRN(4),0(@05)                                  0091 00427000
*     IF USEREAL(I,1)='1'B THEN     /* SET HIGH ORDER BIT OF @Y30LB14*/ 00428000
         LR    @10,I                                               0092 00429000
         MH    @10,@CH00472                                        0092 00430000
         L     @05,COMPTR2(,R4)                                    0092 00431000
         ST    @10,@TF00001                                        0092 00432000
         ALR   @10,@05                                             0092 00433000
         AL    @10,@CF00485                                        0092 00434000
         TM    USEREAL-464(@10),B'00010000'                        0092 00435000
         BNO   @RF00092                                            0092 00436000
*       DO;                         /*                       @OZ09548*/ 00437000
*         FIRST8=FIRST8|'80'X;      /* 32 BIT LONG STRING    @OZ09548*/ 00438000
         OI    FIRST8,X'80'                                        0094 00439000
*         IF ALTCI1(I,1)^='00'X     /*                       @OZ09548*/ 00440000
*           THEN                    /*                       @OZ09548*/ 00441000
         LR    @10,@05                                             0095 00442000
         AL    @10,@TF00001                                        0095 00443000
         AL    @10,@CF00486                                        0095 00444000
         CLI   ALTCI1-467(@10),X'00'                               0095 00445000
         BE    @RF00095                                            0095 00446000
*           DO;                     /*                       @OZ09548*/ 00447000
*             M=(((ALTDS1(I,1))*3)+(ALTCI1(I,1)));                 0097 00448000
         L     @10,@TF00001                                        0097 00449000
         AL    @10,@CF00487                                        0097 00450000
         SLR   @01,@01                                             0097 00451000
         IC    @01,ALTDS1-466(@10,@05)                             0097 00452000
         MR    @00,@07                                             0097 00453000
         AL    @05,@TF00001                                        0097 00454000
         AL    @05,@CF00486                                        0097 00455000
         MVC   @ZT00003+3(1),ALTCI1-467(@05)                       0097 00456000
         AL    @01,@ZT00003                                        0097 00457000
         LR    M,@01                                               0097 00458000
*             ALTPATRN=BLOCK(((4*M)+((M-1)/3)*4+1):((4*M)+((M-1)/3)*4+4 00459000
*                 ));               /*                       @OZ09548*/ 00460000
         LR    @10,M                                               0098 00461000
         SLA   @10,2                                               0098 00462000
         LR    @00,M                                               0098 00463000
         BCTR  @00,0                                               0098 00464000
         SRDA  @00,32                                              0098 00465000
         DR    @00,@07                                             0098 00466000
         SLA   @01,2                                               0098 00467000
         ALR   @10,@01                                             0098 00468000
         LA    @07,BLOCK(@10)                                      0098 00469000
         MVC   ALTPATRN(4),0(@07)                                  0098 00470000
*             ALT8=ALT8|'80'X;      /*                       @OZ09548*/ 00471000
         OI    ALT8,X'80'                                          0099 00472000
*             BLOCK(((4*M)+((M-1)/3)*4+1):((4*M)+((M-1)/3)*4+4))=  0100 00473000
*                 ALTPATRN;                                        0100 00474000
         LA    @07,BLOCK(@10)                                      0100 00475000
         MVC   0(4,@07),ALTPATRN                                   0100 00476000
*           END;                    /*                       @OZ09548*/ 00477000
*         IF ALTCI2(I,1)^='00'X     /*                       @OZ09548*/ 00478000
*           THEN                    /*                       @OZ09548*/ 00479000
@RF00095 LR    @10,I                                               0102 00480000
         MH    @10,@CH00472                                        0102 00481000
         L     @07,COMPTR2(,R4)                                    0102 00482000
         ST    @10,@TF00001                                        0102 00483000
         ALR   @10,@07                                             0102 00484000
         AL    @10,@CF00488                                        0102 00485000
         CLI   ALTCI2-470(@10),X'00'                               0102 00486000
         BE    @RF00102                                            0102 00487000
*           DO;                     /*                       @OZ09548*/ 00488000
*             M=(((ALTDS2(I,1))*3)+(ALTCI2(I,1)));                 0104 00489000
         LA    @10,3                                               0104 00490000
         L     @05,@TF00001                                        0104 00491000
         AL    @05,@CF00489                                        0104 00492000
         SLR   @01,@01                                             0104 00493000
         IC    @01,ALTDS2-469(@05,@07)                             0104 00494000
         MR    @00,@10                                             0104 00495000
         AL    @07,@TF00001                                        0104 00496000
         AL    @07,@CF00488                                        0104 00497000
         MVC   @ZT00003+3(1),ALTCI2-470(@07)                       0104 00498000
         AL    @01,@ZT00003                                        0104 00499000
         LR    M,@01                                               0104 00500000
*             ALTPATRN=BLOCK(((4*M)+((M-1)/3)*4+1):((4*M)+((M-1)/3)*4+4 00501000
*                 ));               /*                       @OZ09548*/ 00502000
         LR    @07,M                                               0105 00503000
         SLA   @07,2                                               0105 00504000
         LR    @00,M                                               0105 00505000
         BCTR  @00,0                                               0105 00506000
         SRDA  @00,32                                              0105 00507000
         DR    @00,@10                                             0105 00508000
         SLA   @01,2                                               0105 00509000
         ALR   @07,@01                                             0105 00510000
         LA    @10,BLOCK(@07)                                      0105 00511000
         MVC   ALTPATRN(4),0(@10)                                  0105 00512000
*             ALT8=ALT8|'80'X;      /*                       @OZ09548*/ 00513000
         OI    ALT8,X'80'                                          0106 00514000
*             BLOCK(((4*M)+((M-1)/3)*4+1):((4*M)+((M-1)/3)*4+4))=  0107 00515000
*                 ALTPATRN;                                        0107 00516000
         LA    @10,BLOCK(@07)                                      0107 00517000
         MVC   0(4,@10),ALTPATRN                                   0107 00518000
*           END;                    /*                       @OZ09548*/ 00519000
*         IF ALTCI3(I,1)^='00'X     /*                       @OZ09548*/ 00520000
*           THEN                    /*                       @OZ09548*/ 00521000
@RF00102 LR    @10,I                                               0109 00522000
         MH    @10,@CH00472                                        0109 00523000
         L     @07,COMPTR2(,R4)                                    0109 00524000
         ST    @10,@TF00001                                        0109 00525000
         ALR   @10,@07                                             0109 00526000
         AL    @10,@CF00490                                        0109 00527000
         CLI   ALTCI3-473(@10),X'00'                               0109 00528000
         BE    @RF00109                                            0109 00529000
*           DO;                     /*                       @OZ09548*/ 00530000
*             M=(((ALTDS3(I,1))*3)+(ALTCI3(I,1)));                 0111 00531000
         LA    @10,3                                               0111 00532000
         L     @05,@TF00001                                        0111 00533000
         AL    @05,@CF00491                                        0111 00534000
         SLR   @01,@01                                             0111 00535000
         IC    @01,ALTDS3-472(@05,@07)                             0111 00536000
         MR    @00,@10                                             0111 00537000
         AL    @07,@TF00001                                        0111 00538000
         AL    @07,@CF00490                                        0111 00539000
         MVC   @ZT00003+3(1),ALTCI3-473(@07)                       0111 00540000
         AL    @01,@ZT00003                                        0111 00541000
         LR    M,@01                                               0111 00542000
*             ALTPATRN=BLOCK(((4*M)+((M-1)/3)*4+1):((4*M)+((M-1)/3)*4+4 00543000
*                 ));               /*                       @OZ09548*/ 00544000
         LR    @07,M                                               0112 00545000
         SLA   @07,2                                               0112 00546000
         LR    @00,M                                               0112 00547000
         BCTR  @00,0                                               0112 00548000
         SRDA  @00,32                                              0112 00549000
         DR    @00,@10                                             0112 00550000
         SLA   @01,2                                               0112 00551000
         ALR   @07,@01                                             0112 00552000
         LA    @10,BLOCK(@07)                                      0112 00553000
         MVC   ALTPATRN(4),0(@10)                                  0112 00554000
*             ALT8=ALT8|'80'X;      /*                       @OZ09548*/ 00555000
         OI    ALT8,X'80'                                          0113 00556000
*             BLOCK(((4*M)+((M-1)/3)*4+1):((4*M)+((M-1)/3)*4+4))=  0114 00557000
*                 ALTPATRN;                                        0114 00558000
         LA    @10,BLOCK(@07)                                      0114 00559000
         MVC   0(4,@10),ALTPATRN                                   0114 00560000
*           END;                    /*                       @OZ09548*/ 00561000
*       END;                        /*                       @OZ09548*/ 00562000
@RF00109 DS    0H                                                  0117 00563000
*     DO J=2 TO 32;                 /* SET BITS 2 THRU 32    @Y30LB14*/ 00564000
@RF00092 LA    J,2                                                 0117 00565000
@DL00117 DS    0H                                                  0118 00566000
*       IF USEREAL(I,J)='1'B THEN                                  0118 00567000
         LR    @10,I                                               0118 00568000
         SLA   @10,6                                               0118 00569000
         ALR   @10,J                                               0118 00570000
         MH    @10,@CH00246                                        0118 00571000
         L     @07,COMPTR2(,R4)                                    0118 00572000
         ST    @10,@TF00001                                        0118 00573000
         ALR   @10,@07                                             0118 00574000
         AL    @10,@CF00492                                        0118 00575000
         TM    USEREAL-464(@10),B'00010000'                        0118 00576000
         BNO   @RF00118                                            0118 00577000
*         DO;                       /*                       @OZ09548*/ 00578000
*           BITPAT=BITPAT|BITPOSN;  /*                       @Y30LB14*/ 00579000
         L     @10,BITPAT                                          0120 00580000
         OR    @10,BITPOSN                                         0120 00581000
         ST    @10,BITPAT                                          0120 00582000
*           IF ALTCI1(I,J)^='00'X   /*                       @OZ09548*/ 00583000
*             THEN                  /*                       @OZ09548*/ 00584000
         LR    @10,@07                                             0121 00585000
         AL    @10,@TF00001                                        0121 00586000
         AL    @10,@CF00493                                        0121 00587000
         CLI   ALTCI1-467(@10),X'00'                               0121 00588000
         BE    @RF00121                                            0121 00589000
*             DO;                   /*                       @OZ09548*/ 00590000
*               M=(((ALTDS1(I,J))*3)+(ALTCI1(I,J)));               0123 00591000
         LA    @10,3                                               0123 00592000
         L     @01,@TF00001                                        0123 00593000
         AL    @01,@CF00494                                        0123 00594000
         SLR   @09,@09                                             0123 00595000
         IC    @09,ALTDS1-466(@01,@07)                             0123 00596000
         MR    @08,@10                                             0123 00597000
         AL    @07,@TF00001                                        0123 00598000
         AL    @07,@CF00493                                        0123 00599000
         MVC   @ZT00003+3(1),ALTCI1-467(@07)                       0123 00600000
         AL    @09,@ZT00003                                        0123 00601000
         LR    M,@09                                               0123 00602000
*               ALTPATRN=BLOCK(((4*M)+((M-1)/3)*4+1):((4*M)+((M-1)/3)*4 00603000
*                   +4));           /*                       @OZ09548*/ 00604000
         LR    @07,M                                               0124 00605000
         SLA   @07,2                                               0124 00606000
         LR    @00,M                                               0124 00607000
         BCTR  @00,0                                               0124 00608000
         SRDA  @00,32                                              0124 00609000
         DR    @00,@10                                             0124 00610000
         SLA   @01,2                                               0124 00611000
         ALR   @07,@01                                             0124 00612000
         LA    @10,BLOCK(@07)                                      0124 00613000
         MVC   ALTPATRN(4),0(@10)                                  0124 00614000
*               ALTPAT=ALTPAT|BITPOSN;/*                     @OZ09548*/ 00615000
         L     @10,ALTPAT                                          0125 00616000
         OR    @10,BITPOSN                                         0125 00617000
         ST    @10,ALTPAT                                          0125 00618000
*               BLOCK(((4*M)+((M-1)/3)*4+1):((4*M)+((M-1)/3)*4+4))=     00619000
*                   ALTPATRN;                                      0126 00620000
         LA    @10,BLOCK(@07)                                      0126 00621000
         MVC   0(4,@10),ALTPATRN                                   0126 00622000
*             END;                  /*                       @OZ09548*/ 00623000
*           IF ALTCI2(I,J)^='00'X   /*                       @OZ09548*/ 00624000
*             THEN                  /*                       @OZ09548*/ 00625000
@RF00121 LR    @10,I                                               0128 00626000
         SLA   @10,6                                               0128 00627000
         ALR   @10,J                                               0128 00628000
         MH    @10,@CH00246                                        0128 00629000
         L     @07,COMPTR2(,R4)                                    0128 00630000
         ST    @10,@TF00001                                        0128 00631000
         ALR   @10,@07                                             0128 00632000
         AL    @10,@CF00495                                        0128 00633000
         CLI   ALTCI2-470(@10),X'00'                               0128 00634000
         BE    @RF00128                                            0128 00635000
*             DO;                   /*                       @OZ09548*/ 00636000
*               M=(((ALTDS2(I,J))*3)+(ALTCI2(I,J)));               0130 00637000
         LA    @10,3                                               0130 00638000
         L     @01,@TF00001                                        0130 00639000
         AL    @01,@CF00496                                        0130 00640000
         SLR   @09,@09                                             0130 00641000
         IC    @09,ALTDS2-469(@01,@07)                             0130 00642000
         MR    @08,@10                                             0130 00643000
         AL    @07,@TF00001                                        0130 00644000
         AL    @07,@CF00495                                        0130 00645000
         MVC   @ZT00003+3(1),ALTCI2-470(@07)                       0130 00646000
         AL    @09,@ZT00003                                        0130 00647000
         LR    M,@09                                               0130 00648000
*               ALTPATRN=BLOCK(((4*M)+((M-1)/3)*4+1):((4*M)+((M-1)/3)*4 00649000
*                   +4));           /*                       @OZ09548*/ 00650000
         LR    @07,M                                               0131 00651000
         SLA   @07,2                                               0131 00652000
         LR    @00,M                                               0131 00653000
         BCTR  @00,0                                               0131 00654000
         SRDA  @00,32                                              0131 00655000
         DR    @00,@10                                             0131 00656000
         SLA   @01,2                                               0131 00657000
         ALR   @07,@01                                             0131 00658000
         LA    @10,BLOCK(@07)                                      0131 00659000
         MVC   ALTPATRN(4),0(@10)                                  0131 00660000
*               ALTPAT=ALTPAT|BITPOSN;/*                     @OZ09548*/ 00661000
         L     @10,ALTPAT                                          0132 00662000
         OR    @10,BITPOSN                                         0132 00663000
         ST    @10,ALTPAT                                          0132 00664000
*               BLOCK(((4*M)+((M-1)/3)*4+1):((4*M)+((M-1)/3)*4+4))=     00665000
*                   ALTPATRN;                                      0133 00666000
         LA    @10,BLOCK(@07)                                      0133 00667000
         MVC   0(4,@10),ALTPATRN                                   0133 00668000
*             END;                  /*                       @OZ09548*/ 00669000
*           IF ALTCI3(I,J)^='00'X   /*                       @OZ09548*/ 00670000
*             THEN                  /*                       @OZ09548*/ 00671000
@RF00128 LR    @10,I                                               0135 00672000
         SLA   @10,6                                               0135 00673000
         ALR   @10,J                                               0135 00674000
         MH    @10,@CH00246                                        0135 00675000
         L     @07,COMPTR2(,R4)                                    0135 00676000
         ST    @10,@TF00001                                        0135 00677000
         ALR   @10,@07                                             0135 00678000
         AL    @10,@CF00497                                        0135 00679000
         CLI   ALTCI3-473(@10),X'00'                               0135 00680000
         BE    @RF00135                                            0135 00681000
*             DO;                   /*                       @OZ09548*/ 00682000
*               M=(((ALTDS3(I,J))*3)+(ALTCI3(I,J)));               0137 00683000
         LA    @10,3                                               0137 00684000
         L     @01,@TF00001                                        0137 00685000
         AL    @01,@CF00498                                        0137 00686000
         SLR   @09,@09                                             0137 00687000
         IC    @09,ALTDS3-472(@01,@07)                             0137 00688000
         MR    @08,@10                                             0137 00689000
         AL    @07,@TF00001                                        0137 00690000
         AL    @07,@CF00497                                        0137 00691000
         MVC   @ZT00003+3(1),ALTCI3-473(@07)                       0137 00692000
         AL    @09,@ZT00003                                        0137 00693000
         LR    M,@09                                               0137 00694000
*               ALTPATRN=BLOCK(((4*M)+((M-1)/3)*4+1):((4*M)+((M-1)/3)*4 00695000
*                   +4));           /*                       @OZ09548*/ 00696000
         LR    @07,M                                               0138 00697000
         SLA   @07,2                                               0138 00698000
         LR    @00,M                                               0138 00699000
         BCTR  @00,0                                               0138 00700000
         SRDA  @00,32                                              0138 00701000
         DR    @00,@10                                             0138 00702000
         SLA   @01,2                                               0138 00703000
         ALR   @07,@01                                             0138 00704000
         LA    @10,BLOCK(@07)                                      0138 00705000
         MVC   ALTPATRN(4),0(@10)                                  0138 00706000
*               ALTPAT=ALTPAT|BITPOSN;/*                     @OZ09548*/ 00707000
         L     @10,ALTPAT                                          0139 00708000
         OR    @10,BITPOSN                                         0139 00709000
         ST    @10,ALTPAT                                          0139 00710000
*               BLOCK(((4*M)+((M-1)/3)*4+1):((4*M)+((M-1)/3)*4+4))=     00711000
*                   ALTPATRN;                                      0140 00712000
         LA    @10,BLOCK(@07)                                      0140 00713000
         MVC   0(4,@10),ALTPATRN                                   0140 00714000
*             END;                  /*                       @OZ09548*/ 00715000
*         END;                      /*                       @OZ09548*/ 00716000
@RF00135 DS    0H                                                  0143 00717000
*       BITPOSN=BITPOSN/2;          /*                       @Y30LB14*/ 00718000
@RF00118 SRL   BITPOSN,1                                           0143 00719000
*     END;                          /*                       @Y30LB14*/ 00720000
         AH    J,@CH00042                                          0144 00721000
         CH    J,@CH00309                                          0144 00722000
         BNH   @DL00117                                            0144 00723000
*     BLOCK(((4*I)+((I-1)/3)*4+1):((4*I)+((I-1)/3)*4+4))=BITPATRN;/*    00724000
*                                                            @Y30LB14*/ 00725000
         LR    @10,I                                               0145 00726000
         SLA   @10,2                                               0145 00727000
         LR    @00,I                                               0145 00728000
         BCTR  @00,0                                               0145 00729000
         SRDA  @00,32                                              0145 00730000
         D     @00,@CF00048                                        0145 00731000
         SLA   @01,2                                               0145 00732000
         ALR   @10,@01                                             0145 00733000
         LA    @05,BLOCK(@10)                                      0145 00734000
         MVC   0(4,@05),BITPATRN                                   0145 00735000
*   END;                            /*                       @Y30LB14*/ 00736000
*                                                                  0146 00737000
         AH    I,@CH00042                                          0146 00738000
         CH    I,@CH00235                                          0146 00739000
         BNH   @DL00089                                            0146 00740000
*   /*****************************************************************/ 00741000
*   /*                                                               */ 00742000
*   /* ***********************************************       @XD00153*/ 00743000
*   /* PLACE BLOCK IMAGE IN 9TH BLOCK POSITION IN            @Y30LB14*/ 00744000
*   /* THE TRACK IMAGE AND RETURN TO CALLER.                 @Y30LB14*/ 00745000
*   /* ***********************************************       @XD00153*/ 00746000
*   /*                                                               */ 00747000
*   /*****************************************************************/ 00748000
*                                                                  0147 00749000
*   OBLOCK(9)=BLOCK;                /*                       @Y30LB14*/ 00750000
         L     @10,BUILDPTR(,R4)                                   0147 00751000
         AL    @10,@CF00499                                        0147 00752000
         MVC   OBLOCK(256,@10),BLOCK                               0147 00753000
*   RETURN;                         /*                       @Y30LB14*/ 00754000
@EL00003 DS    0H                                                  0148 00755000
@EF00003 DS    0H                                                  0148 00756000
@ER00003 LM    @14,@12,12(@13)                                     0148 00757000
         BR    @14                                                 0148 00758000
*   END NINTHBLK;                   /*                       @Y30LB14*/ 00759000
*                                                                  0150 00760000
*/*********************************************************  @XD00153*/ 00761000
*/*                                                          @XD00153*/ 00762000
*/* PROCEDURE NAME - FIFTHBLK                                @XD00153*/ 00763000
*/*                                                          @XD00153*/ 00764000
*/* FUNCTION - THIS ROUTINE BUILDS THE FIFTH BLOCK (VIRGIN   @XD00153*/ 00765000
*/*            CARTRIDGE IMAGE) OF THE CONFIGURATION TABLE   @XD00153*/ 00766000
*/*                                                          @XD00153*/ 00767000
*/*********************************************************  @XD00153*/ 00768000
*                                                                  0150 00769000
*FIFTHBLK:                                                         0150 00770000
*   PROCEDURE;                      /*                       @Y30LB14*/ 00771000
FIFTHBLK STM   @14,@12,12(@13)                                     0150 00772000
*   ZEROS=''B;                      /* ZERO BLOCK IMAGE      @Y30LB14*/ 00773000
         XC    ZEROS(256),ZEROS                                    0151 00774000
*   BLOCK(1:4)='VOL1';              /* 'VOL1' IN BYTES 1-4   @Y30LB14*/ 00775000
*                                                                  0152 00776000
         MVC   BLOCK(4),@CC00437                                   0152 00777000
*   /*****************************************************************/ 00778000
*   /*                                                               */ 00779000
*   /* ***********************************************       @XD00153*/ 00780000
*   /* PUT BLANKS ('40'X) IN BYTES 5 THROUGH 79              @OZ13047*/ 00781000
*   /* ENTER STRING CONSTANTS IN BYTES 80 THRU 86,           @OZ13047*/ 00782000
*   /* AND 93 THRU 96.                                       @XD00153*/ 00783000
*   /* ***********************************************       @XD00153*/ 00784000
*   /*                                                               */ 00785000
*   /*****************************************************************/ 00786000
*                                                                  0153 00787000
*   DO I=5 TO 79;                   /*                       @OZ13047*/ 00788000
         LA    I,5                                                 0153 00789000
@DL00153 DS    0H                                                  0154 00790000
*     BLK(I)=' ';                   /*                       @Y30LB14*/ 00791000
         LA    @10,BLK-1(I)                                        0154 00792000
         MVI   0(@10),C' '                                         0154 00793000
*   END;                            /*                       @Y30LB14*/ 00794000
         AH    I,@CH00042                                          0155 00795000
         CH    I,@CH00438                                          0155 00796000
         BNH   @DL00153                                            0155 00797000
*   BLOCK(80:86)='E30194001332E6'X; /* CONSTANT              @OZ13047*/ 00798000
         MVC   BLOCK+79(7),@CB00441                                0156 00799000
*   BLOCK(93:96)='080000F1'X;       /* CONSTANT              @Y30LB14*/ 00800000
*                                                                  0157 00801000
         MVC   BLOCK+92(4),@CB00444                                0157 00802000
*   /*****************************************************************/ 00803000
*   /*                                                               */ 00804000
*   /* ***********************************************       @XD00153*/ 00805000
*   /* PUT BLOCK IMAGE IN 5TH BLOCK POSITION IN THE          @Y30LB14*/ 00806000
*   /* TRACK AND RETURN.                                     @Y30LB14*/ 00807000
*   /* ***********************************************       @XD00153*/ 00808000
*   /*                                                               */ 00809000
*   /*****************************************************************/ 00810000
*                                                                  0158 00811000
*   OBLOCK(5)=BLOCK;                /*                       @Y30LB14*/ 00812000
         L     @10,BUILDPTR(,R4)                                   0158 00813000
         AL    @10,@CF00500                                        0158 00814000
         MVC   OBLOCK(256,@10),BLOCK                               0158 00815000
*   RETURN;                         /*                       @Y30LB14*/ 00816000
@EL00004 DS    0H                                                  0159 00817000
@EF00004 DS    0H                                                  0159 00818000
@ER00004 LM    @14,@12,12(@13)                                     0159 00819000
         BR    @14                                                 0159 00820000
*   END FIFTHBLK;                   /*                       @Y30LB14*/ 00821000
*                                                                  0161 00822000
*/*********************************************************  @XD00153*/ 00823000
*/*                                                          @XD00153*/ 00824000
*/* PROCEDURE NAME - RSVDBLOC                                @XD00153*/ 00825000
*/*                                                          @XD00153*/ 00826000
*/* FUNCTION - THIS ROUTINE ZEROS BLOCKS 1,5,9,13,17,21,25,  @XD00153*/ 00827000
*/*            AND 29 OF THE TRACK IMAGE.                    @XD00153*/ 00828000
*/*                                                          @XD00153*/ 00829000
*/*********************************************************  @XD00153*/ 00830000
*                                                                  0161 00831000
*RSVDBLOC:                                                         0161 00832000
*   PROCEDURE;                      /*                       @Y30LB14*/ 00833000
RSVDBLOC STM   @14,@12,12(@13)                                     0161 00834000
*   ZEROS=''B;                      /*                       @Y30LB14*/ 00835000
         XC    ZEROS(256),ZEROS                                    0162 00836000
*   DO I=0 TO 7;                    /*                       @Y30LB14*/ 00837000
         SLR   I,I                                                 0163 00838000
@DL00163 DS    0H                                                  0164 00839000
*     OBLOCK(4*I+1)=BLOCK;          /*                       @Y30LB14*/ 00840000
         LR    @10,I                                               0164 00841000
         MH    @10,@CH00476                                        0164 00842000
         L     @05,BUILDPTR(,R4)                                   0164 00843000
         ALR   @05,@10                                             0164 00844000
         AL    @05,@CF00469                                        0164 00845000
         MVC   OBLOCK(256,@05),BLOCK                               0164 00846000
*   END;                            /*                       @Y30LB14*/ 00847000
         AH    I,@CH00042                                          0165 00848000
         CH    I,@CH00133                                          0165 00849000
         BNH   @DL00163                                            0165 00850000
*   RETURN;                         /*                       @Y30LB14*/ 00851000
@EL00005 DS    0H                                                  0166 00852000
@EF00005 DS    0H                                                  0166 00853000
@ER00005 LM    @14,@12,12(@13)                                     0166 00854000
         BR    @14                                                 0166 00855000
*   END RSVDBLOC;                   /*                       @Y30LB14*/ 00856000
*                                                                  0168 00857000
*/*********************************************************  @XD00153*/ 00858000
*/*                                                          @XD00153*/ 00859000
*/* PROCEDURE NAME - DSBLOCKS                                @XD00153*/ 00860000
*/*                                                          @XD00153*/ 00861000
*/* FUNCTION - THIS ROUTINE SETS UP THE 'DSBLOCKS'           @XD00153*/ 00862000
*/*            THESE BLOCKS ARE THE 2,3,4, 6,7,8, 10,11,12,  @XD00153*/ 00863000
*/*            - - - 30,31,32 BLOCKS.                        @XD00153*/ 00864000
*/*                                                          @XD00153*/ 00865000
*/*********************************************************  @XD00153*/ 00866000
*                                                                  0168 00867000
*DSBLOCKS:                                                         0168 00868000
*   PROCEDURE;                      /*                       @Y30LB14*/ 00869000
DSBLOCKS STM   @14,@12,@SA00006                                    0168 00870000
*   DO I=1 TO 24;                   /*                       @Y30LB14*/ 00871000
         LA    I,1                                                 0169 00872000
@DL00169 DS    0H                                                  0170 00873000
*     K=TWO4+I;                     /*                       @Y30LB14*/ 00874000
         LR    K,TWO4                                              0170 00875000
         ALR   K,I                                                 0170 00876000
*     DO J=1 TO 64;                 /*                       @Y30LB14*/ 00877000
         LA    J,1                                                 0171 00878000
@DL00171 DS    0H                                                  0172 00879000
*       IF USEV(K,J)='1'B|USEVS(K,J)='1'B THEN                     0172 00880000
         LR    @10,K                                               0172 00881000
         SLA   @10,6                                               0172 00882000
         ALR   @10,J                                               0172 00883000
         MH    @10,@CH00246                                        0172 00884000
         L     @06,COMPTR2(,R4)                                    0172 00885000
         ST    @10,@TF00001                                        0172 00886000
         ALR   @10,@06                                             0172 00887000
         AL    @10,@CF00492                                        0172 00888000
         TM    USEV-464(@10),B'01100000'                           0172 00889000
         BZ    @RF00172                                            0172 00890000
*         DO;                       /*                       @Y30LB14*/ 00891000
*           RSGBYTE=INDEXRSG(K,J);  /*                       @Y30LB14*/ 00892000
         L     @10,COMPTR2(,R4)                                    0174 00893000
         L     @01,@TF00001                                        0174 00894000
         AL    @10,@CF00501                                        0174 00895000
         SLR   RSGBYTE,RSGBYTE                                     0174 00896000
         IC    RSGBYTE,INDEXRSG-465(@01,@10)                       0174 00897000
*           IF RSGABOX1(RSGBYTE+1)='1'B THEN                       0175 00898000
         LR    @10,RSGBYTE                                         0175 00899000
         MH    @10,@CH00112                                        0175 00900000
         ALR   @10,R4                                              0175 00901000
         TM    RSGABOX1(@10),B'00100000'                           0175 00902000
         BNO   @RF00175                                            0175 00903000
*             RSGBYTE=RSGBYTE+32;   /*                       @Y30LB14*/ 00904000
         AH    RSGBYTE,@CH00309                                    0176 00905000
*           IF USEV(K,J)='1'B THEN                                 0177 00906000
@RF00175 LR    @10,K                                               0177 00907000
         SLA   @10,6                                               0177 00908000
         ALR   @10,J                                               0177 00909000
         MH    @10,@CH00246                                        0177 00910000
         L     @01,COMPTR2(,R4)                                    0177 00911000
         ALR   @01,@10                                             0177 00912000
         AL    @01,@CF00492                                        0177 00913000
         TM    USEV-464(@01),B'01000000'                           0177 00914000
         BNO   @RF00177                                            0177 00915000
*             RSGBYTE=RSGBYTE+128;  /*                       @Y30LB14*/ 00916000
         AH    RSGBYTE,@CH00426                                    0178 00917000
*           BYTES(4*J-3)=RSGBYTE;   /*                       @Y30LB14*/ 00918000
@RF00177 LR    @10,J                                               0179 00919000
         SLA   @10,2                                               0179 00920000
         STC   RSGBYTE,BYTES-4(@10)                                0179 00921000
*           ALTPATHS='00'X;         /*                       @OZ11012*/ 00922000
         MVI   ALTPATHS,X'00'                                      0180 00923000
*           CALL DOPATHS;           /*                       @OZ11012*/ 00924000
         BAL   @14,DOPATHS                                         0181 00925000
*           BYTES(4*J-2)=ALTPATHS;  /*                       @OZ11012*/ 00926000
         LR    @10,J                                               0182 00927000
         SLA   @10,2                                               0182 00928000
         SLR   @06,@06                                             0182 00929000
         IC    @06,ALTPATHS                                        0182 00930000
         STC   @06,BYTES-3(@10)                                    0182 00931000
*           BYTES(4*J-1)='00'X;     /*                       @OZ11012*/ 00932000
         SLR   @06,@06                                             0183 00933000
         STC   @06,BYTES-2(@10)                                    0183 00934000
*           BYTES(4*J)='00'X;       /*                       @OZ11012*/ 00935000
         STC   @06,BYTES-1(@10)                                    0184 00936000
*         END;                      /*                       @Y30LB14*/ 00937000
*       ELSE                                                       0186 00938000
*         DO;                       /*                       @Y30LB14*/ 00939000
         B     @RC00172                                            0186 00940000
@RF00172 DS    0H                                                  0187 00941000
*           BYTES(4*J-3)='FF'X;     /*                       @Y30LB14*/ 00942000
         LR    @10,J                                               0187 00943000
         SLA   @10,2                                               0187 00944000
         LA    @06,255                                             0187 00945000
         STC   @06,BYTES-4(@10)                                    0187 00946000
*           DO L=-2 TO 0;           /*                       @Y30LB14*/ 00947000
         LH    L,@CH00453                                          0188 00948000
@DL00188 DS    0H                                                  0189 00949000
*             BYTES(4*J+L)='00'X;   /*                       @Y30LB14*/ 00950000
         LR    @10,J                                               0189 00951000
         SLA   @10,2                                               0189 00952000
         ALR   @10,L                                               0189 00953000
         SLR   @15,@15                                             0189 00954000
         STC   @15,BYTES-1(@10)                                    0189 00955000
*           END;                    /*                       @Y30LB14*/ 00956000
         AH    L,@CH00042                                          0190 00957000
         LTR   L,L                                                 0190 00958000
         BNP   @DL00188                                            0190 00959000
*         END;                      /*                       @Y30LB14*/ 00960000
*     END;                          /* END OF DO J LOOP      @Y30LB14*/ 00961000
@RC00172 AH    J,@CH00042                                          0192 00962000
         CH    J,@CH00245                                          0192 00963000
         BNH   @DL00171                                            0192 00964000
*     OBLOCK(I+1+(I-1)/3)=BLOCK;    /*                       @Y30LB14*/ 00965000
         LA    @10,1                                               0193 00966000
         ALR   @10,I                                               0193 00967000
         LR    @00,I                                               0193 00968000
         BCTR  @00,0                                               0193 00969000
         SRDA  @00,32                                              0193 00970000
         D     @00,@CF00048                                        0193 00971000
         ALR   @10,@01                                             0193 00972000
         MH    @10,@CH00477                                        0193 00973000
         L     @06,BUILDPTR(,R4)                                   0193 00974000
         ALR   @06,@10                                             0193 00975000
         AL    @06,@CF00502                                        0193 00976000
         MVC   OBLOCK(256,@06),BLOCK                               0193 00977000
*   END;                            /* END OF DO I LOOP      @Y30LB14*/ 00978000
         AH    I,@CH00042                                          0194 00979000
         CH    I,@CH00259                                          0194 00980000
         BNH   @DL00169                                            0194 00981000
*   RETURN;                                                        0195 00982000
@EL00006 DS    0H                                                  0195 00983000
@EF00006 DS    0H                                                  0195 00984000
@ER00006 LM    @14,@12,@SA00006                                    0195 00985000
         BR    @14                                                 0195 00986000
*   END DSBLOCKS;                   /*                       @Y30LB14*/ 00987000
*                                                                  0197 00988000
*/********************************************************** @XD00153*/ 00989000
*/*                                                          @XD00153*/ 00990000
*/* PROCEDURE NAME - WRITETRK                                @XD00153*/ 00991000
*/*                                                          @XD00153*/ 00992000
*/* FUNCTION - THIS ROUTINE PUTS THE PREFIX INFORMATION FOR  @XD00153*/ 00993000
*/*            A TRACK (32 BLOCKS WORTH) AND CALLS 'WRITE'   @XD00153*/ 00994000
*/*            TO WRITE THE TRACK.                           @XD00153*/ 00995000
*/*                                                          @XD00153*/ 00996000
*/********************************************************** @XD00153*/ 00997000
*                                                                  0197 00998000
*WRITETRK:                                                         0197 00999000
*   PROCEDURE;                      /*                       @Y30LB14*/ 01000000
WRITETRK STM   @14,@12,@SA00007                                    0197 01001000
*   DO K=1 TO 32;                   /*                       @Y30LB14*/ 01002000
         LA    K,1                                                 0198 01003000
@DL00198 DS    0H                                                  0199 01004000
*     OUTREC(K)=K;                  /* SET PREFIX RECORD NUM @XD00153*/ 01005000
         LR    @10,K                                               0199 01006000
         MH    @10,@CH00477                                        0199 01007000
         LH    @05,@CH00469                                        0199 01008000
         AL    @05,BUILDPTR(,R4)                                   0199 01009000
         LA    @02,0(@10,@05)                                      0199 01010000
         AL    @02,@CF00503                                        0199 01011000
         STC   K,OUTREC-11(,@02)                                   0199 01012000
*     OUTHEAD(K)=OUTHEAD(1);        /* SET THE HEAD NUMBER   @Y30LB14*/ 01013000
         SLR   @02,@02                                             0200 01014000
         IC    @02,OUTHEAD(,@05)                                   0200 01015000
         LA    @01,0(@10,@05)                                      0200 01016000
         AL    @01,@CF00504                                        0200 01017000
         STC   @02,OUTHEAD-10(,@01)                                0200 01018000
*     OUTCYL(K)=OUTCYL(1);          /* SET THE CYL NUMBER    @Y30LB14*/ 01019000
         SLR   @02,@02                                             0201 01020000
         IC    @02,OUTCYL(,@05)                                    0201 01021000
         LA    @01,0(@10,@05)                                      0201 01022000
         AL    @01,@CF00505                                        0201 01023000
         STC   @02,OUTCYL-9(,@01)                                  0201 01024000
*     OUTABLID(K)='70'X;            /* TABLE ID IN PREFIX    @Y30LB14*/ 01025000
         ST    @10,@TF00001                                        0202 01026000
         ALR   @10,@05                                             0202 01027000
         AL    @10,@CF00506                                        0202 01028000
         MVI   OUTABLID-8(@10),X'70'                               0202 01029000
*     OUTFLR(K)=''B;                /* SET FILLER TO ZERO    @Y30LB14*/ 01030000
         AL    @05,@TF00001                                        0203 01031000
         AL    @05,@CF00507                                        0203 01032000
         XC    OUTFLR-12(4,@05),OUTFLR-12(@05)                     0203 01033000
*   END;                            /*                       @Y30LB14*/ 01034000
         AH    K,@CH00042                                          0204 01035000
         CH    K,@CH00309                                          0204 01036000
         BNH   @DL00198                                            0204 01037000
*   CALL WRITE;                     /* WRITE OUT THE TRACK   @Y30LB14   01038000
*                                                            @Y30LB14*/ 01039000
         BAL   @14,WRITE                                           0205 01040000
*   RETURN;                         /* RETURN TO CALLER      @Y30LB14   01041000
*                                                            @Y30LB14*/ 01042000
@EL00007 DS    0H                                                  0206 01043000
@EF00007 DS    0H                                                  0206 01044000
@ER00007 LM    @14,@12,@SA00007                                    0206 01045000
         BR    @14                                                 0206 01046000
*   END WRITETRK;                   /*                       @Y30LB14*/ 01047000
*                                                                  0208 01048000
*/********************************************************** @XD00153*/ 01049000
*/*                                                          @XD00153*/ 01050000
*/* PROCEDURE NAME - WRITE                                   @XD00153*/ 01051000
*/*                                                          @XD00153*/ 01052000
*/* FUNCTION - THIS ROUTINE WRITES THE TRACK VIA ICGDSB06    @XD00153*/ 01053000
*/*            THEN SETS THE CYLINDER, TRACK AND RECORD      @XD00153*/ 01054000
*/*            (CCHHR) TO THE NEXT SEQUENTIAL LOCATION.      @XD00153*/ 01055000
*/*                                                          @XD00153*/ 01056000
*/********************************************************** @XD00153*/ 01057000
*                                                                  0208 01058000
*WRITE:                                                            0208 01059000
*   PROCEDURE;                      /*                       @Y30LB14*/ 01060000
WRITE    STM   @14,@12,@SA00008                                    0208 01061000
*   B06ADDR=OUTADDR;                /* OUTPUT ADDR FOR B06   @XD00153*/ 01062000
         L     @10,BUILDPTR(,R4)                                   0209 01063000
         MVC   B06ADDR(3,@10),OUTADDR(@10)                         0209 01064000
*   GEN(LINK EP=ICGDSB06);          /* WRITE OUT TRACK       @Y30LB14*/ 01065000
         LINK EP=ICGDSB06                                               01066000
*   UT2VHEAD=UT2VHEAD+1;            /* INCR TO NEXT TRACK    @Y30LB14*/ 01067000
         L     @10,BUILDPTR(,R4)                                   0211 01068000
         LA    @05,1                                               0211 01069000
         SLR   @15,@15                                             0211 01070000
         IC    @15,UT2VHEAD(,@10)                                  0211 01071000
         ALR   @15,@05                                             0211 01072000
         STC   @15,UT2VHEAD(,@10)                                  0211 01073000
*   IF UT2VHEAD>18                  /*                       @Y30LB14*/ 01074000
*     THEN                          /*                       @Y30LB14*/ 01075000
         CLI   UT2VHEAD(@10),18                                    0212 01076000
         BNH   @RF00212                                            0212 01077000
*     DO;                           /*                       @Y30LB14*/ 01078000
*       UT2VHEAD=0;                 /* SET TRACK TO ZERO     @Y30LB14*/ 01079000
         MVI   UT2VHEAD(@10),X'00'                                 0214 01080000
*       UT2VCYL=UT2VCYL+1;          /* INCR TO NEXT CYL      @Y30LB14*/ 01081000
         MVC   @ZT00003+3(1),UT2VCYL(@10)                          0215 01082000
         AL    @05,@ZT00003                                        0215 01083000
         STC   @05,UT2VCYL(,@10)                                   0215 01084000
*     END;                          /*                       @Y30LB14*/ 01085000
*   OUTCYL(1)=UT2VCYL;              /* SET NEXT AVAIL CYL    @XD00153*/ 01086000
@RF00212 L     @10,BUILDPTR(,R4)                                   0217 01087000
         LH    @05,@CH00469                                        0217 01088000
         ALR   @05,@10                                             0217 01089000
         MVC   OUTCYL(1,@05),UT2VCYL(@10)                          0217 01090000
*   OUTHEAD(1)=UT2VHEAD;            /* SET NEXT AVAIL HEAD   @XD00153*/ 01091000
         MVC   OUTHEAD(1,@05),UT2VHEAD(@10)                        0218 01092000
*   RETURN;                         /* RETURN TO CALLER      @Y30LB14*/ 01093000
@EL00008 DS    0H                                                  0219 01094000
@EF00008 DS    0H                                                  0219 01095000
@ER00008 LM    @14,@12,@SA00008                                    0219 01096000
         BR    @14                                                 0219 01097000
*   END WRITE;                      /*                       @Y30LB14*/ 01098000
*                                                                  0221 01099000
*/********************************************************** @OZ11012*/ 01100000
*/*                                                          @OZ11012*/ 01101000
*/* PROCEDURE NAME - DOPATHS                                 @OZ11012*/ 01102000
*/*                                                          @OZ11012*/ 01103000
*/* FUNCTION - THIS PROCEDURE SETS UP ALTERNATE PATH BITS    @OZ11012*/ 01104000
*/*            FOR THE CONFIGURATION DATA BLOCK.  BITS 1     @OZ11012*/ 01105000
*/*            AND 5 ARE UNUSED.  BITS 2, 3, AND 4 ARE FOR   @OZ11012*/ 01106000
*/*            INTERFACES B, C, AND D OF SA1 RESPECTIVELY.   @OZ11012*/ 01107000
*/*            BITS 6, 7, AND 8 ARE FOR INTERFACES B, C,     @OZ11012*/ 01108000
*/*            AND D OF SA2 RESPECTIVELY.  SA1 IS THE FIRST  @OZ11012*/ 01109000
*/*            (AND LOWER) STAGING ADAPTER INDICATED IN THE  @OZ11012*/ 01110000
*/*            PAB OF THE SDG TABLE.  SA2 IS THE SECOND AND  @OZ11012*/ 01111000
*/*            HIGHER STAGING ADAPTER IN THE PAB FOR THIS    @OZ11012*/ 01112000
*/*            STAGING DRIVE GROUP.                          @OZ11012*/ 01113000
*/*                                                          @OZ11012*/ 01114000
*/********************************************************** @OZ11012*/ 01115000
*                                                                  0221 01116000
*DOPATHS:                                                          0221 01117000
*   PROCEDURE;                      /*                       @OZ11012*/ 01118000
DOPATHS  STM   @14,@12,12(@13)                                     0221 01119000
*   IF ALTCI1(K,J)^='00'X           /* PATH DEFINED          @OZ11012*/ 01120000
*     THEN                          /*                       @OZ11012*/ 01121000
         LR    @10,K                                               0222 01122000
         SLA   @10,6                                               0222 01123000
         ALR   @10,J                                               0222 01124000
         MH    @10,@CH00246                                        0222 01125000
         L     @02,COMPTR2(,R4)                                    0222 01126000
         ST    @10,@TF00001                                        0222 01127000
         ALR   @10,@02                                             0222 01128000
         AL    @10,@CF00493                                        0222 01129000
         CLI   ALTCI1-467(@10),X'00'                               0222 01130000
         BE    @RF00222                                            0222 01131000
*     DO;                           /*                       @OZ11012*/ 01132000
*       IF ALTDS1(K,J)=TODS1(INDEXRSG(K,J)+1)/*              @B200009*/ 01133000
*         THEN                      /*                       @OZ11012*/ 01134000
         L     @10,@TF00001                                        0224 01135000
         AL    @10,@CF00501                                        0224 01136000
         SLR   @15,@15                                             0224 01137000
         IC    @15,INDEXRSG-465(@10,@02)                           0224 01138000
         MH    @15,@CH00112                                        0224 01139000
         LR    @10,@02                                             0224 01140000
         AL    @10,@TF00001                                        0224 01141000
         AL    @10,@CF00494                                        0224 01142000
         ALR   @15,R4                                              0224 01143000
         CLC   ALTDS1-466(1,@10),TODS1(@15)                        0224 01144000
         BNE   @RF00224                                            0224 01145000
*         DO;                       /*                       @OZ11012*/ 01146000
*           IF ALTCI1(K,J)='01'X    /*                       @OZ11012*/ 01147000
*             THEN                  /*                       @OZ11012*/ 01148000
         AL    @02,@TF00001                                        0226 01149000
         AL    @02,@CF00493                                        0226 01150000
         CLI   ALTCI1-467(@02),X'01'                               0226 01151000
         BNE   @RF00226                                            0226 01152000
*             ALTPATHS(2)='1'B;     /*                       @OZ11012*/ 01153000
         OI    ALTPATHS,B'01000000'                                0227 01154000
*           IF ALTCI1(K,J)='02'X    /*                       @OZ11012*/ 01155000
*             THEN                  /*                       @OZ11012*/ 01156000
@RF00226 LR    @10,K                                               0228 01157000
         SLA   @10,6                                               0228 01158000
         ALR   @10,J                                               0228 01159000
         MH    @10,@CH00246                                        0228 01160000
         L     @02,COMPTR2(,R4)                                    0228 01161000
         ALR   @02,@10                                             0228 01162000
         AL    @02,@CF00493                                        0228 01163000
         CLI   ALTCI1-467(@02),X'02'                               0228 01164000
         BNE   @RF00228                                            0228 01165000
*             ALTPATHS(3)='1'B;     /*                       @OZ11012*/ 01166000
         OI    ALTPATHS,B'00100000'                                0229 01167000
*           IF ALTCI1(K,J)='03'X    /*                       @OZ11012*/ 01168000
*             THEN                  /*                       @OZ11012*/ 01169000
@RF00228 LR    @10,K                                               0230 01170000
         SLA   @10,6                                               0230 01171000
         ALR   @10,J                                               0230 01172000
         MH    @10,@CH00246                                        0230 01173000
         L     @02,COMPTR2(,R4)                                    0230 01174000
         ALR   @02,@10                                             0230 01175000
         AL    @02,@CF00493                                        0230 01176000
         CLI   ALTCI1-467(@02),X'03'                               0230 01177000
         BNE   @RF00230                                            0230 01178000
*             ALTPATHS(4)='1'B;     /*                       @OZ11012*/ 01179000
         OI    ALTPATHS,B'00010000'                                0231 01180000
*         END;                      /*                       @OZ11012*/ 01181000
*       ELSE                        /*                       @OZ11012*/ 01182000
*         DO;                       /*                       @OZ11012*/ 01183000
         B     @RC00224                                            0233 01184000
@RF00224 DS    0H                                                  0234 01185000
*           IF ALTCI1(K,J)='01'X    /*                       @OZ11012*/ 01186000
*             THEN                  /*                       @OZ11012*/ 01187000
         LR    @10,K                                               0234 01188000
         SLA   @10,6                                               0234 01189000
         ALR   @10,J                                               0234 01190000
         MH    @10,@CH00246                                        0234 01191000
         L     @02,COMPTR2(,R4)                                    0234 01192000
         ALR   @02,@10                                             0234 01193000
         AL    @02,@CF00493                                        0234 01194000
         CLI   ALTCI1-467(@02),X'01'                               0234 01195000
         BNE   @RF00234                                            0234 01196000
*             ALTPATHS(6)='1'B;     /*                       @OZ11012*/ 01197000
         OI    ALTPATHS,B'00000100'                                0235 01198000
*           IF ALTCI1(K,J)='02'X    /*                       @OZ11012*/ 01199000
*             THEN                  /*                       @OZ11012*/ 01200000
@RF00234 LR    @10,K                                               0236 01201000
         SLA   @10,6                                               0236 01202000
         ALR   @10,J                                               0236 01203000
         MH    @10,@CH00246                                        0236 01204000
         L     @02,COMPTR2(,R4)                                    0236 01205000
         ALR   @02,@10                                             0236 01206000
         AL    @02,@CF00493                                        0236 01207000
         CLI   ALTCI1-467(@02),X'02'                               0236 01208000
         BNE   @RF00236                                            0236 01209000
*             ALTPATHS(7)='1'B;     /*                       @OZ11012*/ 01210000
         OI    ALTPATHS,B'00000010'                                0237 01211000
*           IF ALTCI1(K,J)='03'X    /*                       @OZ11012*/ 01212000
*             THEN                  /*                       @OZ11012*/ 01213000
@RF00236 LR    @10,K                                               0238 01214000
         SLA   @10,6                                               0238 01215000
         ALR   @10,J                                               0238 01216000
         MH    @10,@CH00246                                        0238 01217000
         L     @02,COMPTR2(,R4)                                    0238 01218000
         ALR   @02,@10                                             0238 01219000
         AL    @02,@CF00493                                        0238 01220000
         CLI   ALTCI1-467(@02),X'03'                               0238 01221000
         BNE   @RF00238                                            0238 01222000
*             ALTPATHS(8)='1'B;     /*                       @OZ11012*/ 01223000
         OI    ALTPATHS,B'00000001'                                0239 01224000
*         END;                      /*                       @OZ11012*/ 01225000
*     END;                          /*                       @OZ11012*/ 01226000
*   ELSE                            /*                       @OZ11012*/ 01227000
*     RETURN;                       /* NO ALTERNATE PATHS    @OZ11012*/ 01228000
*   IF ALTCI2(K,J)^='00'X           /* PATH DEFINED          @OZ11012*/ 01229000
*     THEN                          /*                       @OZ11012*/ 01230000
@RC00222 LR    @10,K                                               0243 01231000
         SLA   @10,6                                               0243 01232000
         ALR   @10,J                                               0243 01233000
         MH    @10,@CH00246                                        0243 01234000
         L     @02,COMPTR2(,R4)                                    0243 01235000
         ST    @10,@TF00001                                        0243 01236000
         ALR   @10,@02                                             0243 01237000
         AL    @10,@CF00495                                        0243 01238000
         CLI   ALTCI2-470(@10),X'00'                               0243 01239000
         BE    @RF00243                                            0243 01240000
*     DO;                           /*                       @OZ11012*/ 01241000
*       IF ALTDS2(K,J)=TODS1(INDEXRSG(K,J)+1)/*              @B200009*/ 01242000
*         THEN                      /*                       @OZ11012*/ 01243000
         L     @10,@TF00001                                        0245 01244000
         AL    @10,@CF00501                                        0245 01245000
         SLR   @15,@15                                             0245 01246000
         IC    @15,INDEXRSG-465(@10,@02)                           0245 01247000
         MH    @15,@CH00112                                        0245 01248000
         LR    @10,@02                                             0245 01249000
         AL    @10,@TF00001                                        0245 01250000
         AL    @10,@CF00496                                        0245 01251000
         ALR   @15,R4                                              0245 01252000
         CLC   ALTDS2-469(1,@10),TODS1(@15)                        0245 01253000
         BNE   @RF00245                                            0245 01254000
*         DO;                       /*                       @OZ11012*/ 01255000
*           IF ALTCI2(K,J)='01'X    /*                       @OZ11012*/ 01256000
*             THEN                  /*                       @OZ11012*/ 01257000
         AL    @02,@TF00001                                        0247 01258000
         AL    @02,@CF00495                                        0247 01259000
         CLI   ALTCI2-470(@02),X'01'                               0247 01260000
         BNE   @RF00247                                            0247 01261000
*             ALTPATHS(2)='1'B;     /*                       @OZ11012*/ 01262000
         OI    ALTPATHS,B'01000000'                                0248 01263000
*           IF ALTCI2(K,J)='02'X    /*                       @OZ11012*/ 01264000
*             THEN                  /*                       @OZ11012*/ 01265000
@RF00247 LR    @10,K                                               0249 01266000
         SLA   @10,6                                               0249 01267000
         ALR   @10,J                                               0249 01268000
         MH    @10,@CH00246                                        0249 01269000
         L     @02,COMPTR2(,R4)                                    0249 01270000
         ALR   @02,@10                                             0249 01271000
         AL    @02,@CF00495                                        0249 01272000
         CLI   ALTCI2-470(@02),X'02'                               0249 01273000
         BNE   @RF00249                                            0249 01274000
*             ALTPATHS(3)='1'B;     /*                       @OZ11012*/ 01275000
         OI    ALTPATHS,B'00100000'                                0250 01276000
*           IF ALTCI2(K,J)='03'X    /*                       @OZ11012*/ 01277000
*             THEN                  /*                       @OZ11012*/ 01278000
@RF00249 LR    @10,K                                               0251 01279000
         SLA   @10,6                                               0251 01280000
         ALR   @10,J                                               0251 01281000
         MH    @10,@CH00246                                        0251 01282000
         L     @02,COMPTR2(,R4)                                    0251 01283000
         ALR   @02,@10                                             0251 01284000
         AL    @02,@CF00495                                        0251 01285000
         CLI   ALTCI2-470(@02),X'03'                               0251 01286000
         BNE   @RF00251                                            0251 01287000
*             ALTPATHS(4)='1'B;     /*                       @OZ11012*/ 01288000
         OI    ALTPATHS,B'00010000'                                0252 01289000
*         END;                      /*                       @OZ11012*/ 01290000
*       ELSE                        /*                       @OZ11012*/ 01291000
*         DO;                       /*                       @OZ11012*/ 01292000
         B     @RC00245                                            0254 01293000
@RF00245 DS    0H                                                  0255 01294000
*           IF ALTCI2(K,J)='01'X    /*                       @OZ11012*/ 01295000
*             THEN                  /*                       @OZ11012*/ 01296000
         LR    @10,K                                               0255 01297000
         SLA   @10,6                                               0255 01298000
         ALR   @10,J                                               0255 01299000
         MH    @10,@CH00246                                        0255 01300000
         L     @02,COMPTR2(,R4)                                    0255 01301000
         ALR   @02,@10                                             0255 01302000
         AL    @02,@CF00495                                        0255 01303000
         CLI   ALTCI2-470(@02),X'01'                               0255 01304000
         BNE   @RF00255                                            0255 01305000
*             ALTPATHS(6)='1'B;     /*                       @OZ11012*/ 01306000
         OI    ALTPATHS,B'00000100'                                0256 01307000
*           IF ALTCI2(K,J)='02'X    /*                       @OZ11012*/ 01308000
*             THEN                  /*                       @OZ11012*/ 01309000
@RF00255 LR    @10,K                                               0257 01310000
         SLA   @10,6                                               0257 01311000
         ALR   @10,J                                               0257 01312000
         MH    @10,@CH00246                                        0257 01313000
         L     @02,COMPTR2(,R4)                                    0257 01314000
         ALR   @02,@10                                             0257 01315000
         AL    @02,@CF00495                                        0257 01316000
         CLI   ALTCI2-470(@02),X'02'                               0257 01317000
         BNE   @RF00257                                            0257 01318000
*             ALTPATHS(7)='1'B;     /*                       @OZ11012*/ 01319000
         OI    ALTPATHS,B'00000010'                                0258 01320000
*           IF ALTCI2(K,J)='03'X    /*                       @OZ11012*/ 01321000
*             THEN                  /*                       @OZ11012*/ 01322000
@RF00257 LR    @10,K                                               0259 01323000
         SLA   @10,6                                               0259 01324000
         ALR   @10,J                                               0259 01325000
         MH    @10,@CH00246                                        0259 01326000
         L     @02,COMPTR2(,R4)                                    0259 01327000
         ALR   @02,@10                                             0259 01328000
         AL    @02,@CF00495                                        0259 01329000
         CLI   ALTCI2-470(@02),X'03'                               0259 01330000
         BNE   @RF00259                                            0259 01331000
*             ALTPATHS(8)='1'B;     /*                       @OZ11012*/ 01332000
         OI    ALTPATHS,B'00000001'                                0260 01333000
*         END;                      /*                       @OZ11012*/ 01334000
*     END;                          /*                       @OZ11012*/ 01335000
*   ELSE                            /*                       @OZ11012*/ 01336000
*     RETURN;                       /* NO SECOND ALT PATH    @OZ11012*/ 01337000
*   IF ALTCI3(K,J)^='00'X           /* PATH DEFINED          @OZ11012*/ 01338000
*     THEN                          /*                       @OZ11012*/ 01339000
@RC00243 LR    @10,K                                               0264 01340000
         SLA   @10,6                                               0264 01341000
         ALR   @10,J                                               0264 01342000
         MH    @10,@CH00246                                        0264 01343000
         L     @02,COMPTR2(,R4)                                    0264 01344000
         ST    @10,@TF00001                                        0264 01345000
         ALR   @10,@02                                             0264 01346000
         AL    @10,@CF00497                                        0264 01347000
         CLI   ALTCI3-473(@10),X'00'                               0264 01348000
         BE    @RF00264                                            0264 01349000
*     DO;                           /*                       @OZ11012*/ 01350000
*       IF ALTDS3(K,J)=TODS1(INDEXRSG(K,J)+1)/*              @B200009*/ 01351000
*         THEN                      /*                       @OZ11012*/ 01352000
         L     @10,@TF00001                                        0266 01353000
         AL    @10,@CF00501                                        0266 01354000
         SLR   @15,@15                                             0266 01355000
         IC    @15,INDEXRSG-465(@10,@02)                           0266 01356000
         MH    @15,@CH00112                                        0266 01357000
         LR    @10,@02                                             0266 01358000
         AL    @10,@TF00001                                        0266 01359000
         AL    @10,@CF00498                                        0266 01360000
         ALR   @15,R4                                              0266 01361000
         CLC   ALTDS3-472(1,@10),TODS1(@15)                        0266 01362000
         BNE   @RF00266                                            0266 01363000
*         DO;                       /*                       @OZ11012*/ 01364000
*           IF ALTCI3(K,J)='01'X    /*                       @OZ11012*/ 01365000
*             THEN                  /*                       @OZ11012*/ 01366000
         AL    @02,@TF00001                                        0268 01367000
         AL    @02,@CF00497                                        0268 01368000
         CLI   ALTCI3-473(@02),X'01'                               0268 01369000
         BNE   @RF00268                                            0268 01370000
*             ALTPATHS(2)='1'B;     /*                       @OZ11012*/ 01371000
         OI    ALTPATHS,B'01000000'                                0269 01372000
*           IF ALTCI3(K,J)='02'X    /*                       @OZ11012*/ 01373000
*             THEN                  /*                       @OZ11012*/ 01374000
@RF00268 LR    @10,K                                               0270 01375000
         SLA   @10,6                                               0270 01376000
         ALR   @10,J                                               0270 01377000
         MH    @10,@CH00246                                        0270 01378000
         L     @02,COMPTR2(,R4)                                    0270 01379000
         ALR   @02,@10                                             0270 01380000
         AL    @02,@CF00497                                        0270 01381000
         CLI   ALTCI3-473(@02),X'02'                               0270 01382000
         BNE   @RF00270                                            0270 01383000
*             ALTPATHS(3)='1'B;     /*                       @OZ11012*/ 01384000
         OI    ALTPATHS,B'00100000'                                0271 01385000
*           IF ALTCI3(K,J)='03'X    /*                       @OZ11012*/ 01386000
*             THEN                  /*                       @OZ11012*/ 01387000
@RF00270 LR    @10,K                                               0272 01388000
         SLA   @10,6                                               0272 01389000
         ALR   @10,J                                               0272 01390000
         MH    @10,@CH00246                                        0272 01391000
         L     @02,COMPTR2(,R4)                                    0272 01392000
         ALR   @02,@10                                             0272 01393000
         AL    @02,@CF00497                                        0272 01394000
         CLI   ALTCI3-473(@02),X'03'                               0272 01395000
         BNE   @RF00272                                            0272 01396000
*             ALTPATHS(4)='1'B;     /*                       @OZ11012*/ 01397000
         OI    ALTPATHS,B'00010000'                                0273 01398000
*         END;                      /*                       @OZ11012*/ 01399000
*       ELSE                        /*                       @OZ11012*/ 01400000
*         DO;                       /*                       @OZ11012*/ 01401000
         B     @RC00266                                            0275 01402000
@RF00266 DS    0H                                                  0276 01403000
*           IF ALTCI3(K,J)='01'X    /*                       @OZ11012*/ 01404000
*             THEN                  /*                       @OZ11012*/ 01405000
         LR    @10,K                                               0276 01406000
         SLA   @10,6                                               0276 01407000
         ALR   @10,J                                               0276 01408000
         MH    @10,@CH00246                                        0276 01409000
         L     @02,COMPTR2(,R4)                                    0276 01410000
         ALR   @02,@10                                             0276 01411000
         AL    @02,@CF00497                                        0276 01412000
         CLI   ALTCI3-473(@02),X'01'                               0276 01413000
         BNE   @RF00276                                            0276 01414000
*             ALTPATHS(6)='1'B;     /*                       @OZ11012*/ 01415000
         OI    ALTPATHS,B'00000100'                                0277 01416000
*           IF ALTCI3(K,J)='02'X    /*                       @OZ11012*/ 01417000
*             THEN                  /*                       @OZ11012*/ 01418000
@RF00276 LR    @10,K                                               0278 01419000
         SLA   @10,6                                               0278 01420000
         ALR   @10,J                                               0278 01421000
         MH    @10,@CH00246                                        0278 01422000
         L     @02,COMPTR2(,R4)                                    0278 01423000
         ALR   @02,@10                                             0278 01424000
         AL    @02,@CF00497                                        0278 01425000
         CLI   ALTCI3-473(@02),X'02'                               0278 01426000
         BNE   @RF00278                                            0278 01427000
*             ALTPATHS(7)='1'B;     /*                       @OZ11012*/ 01428000
         OI    ALTPATHS,B'00000010'                                0279 01429000
*           IF ALTCI3(K,J)='03'X    /*                       @OZ11012*/ 01430000
*             THEN                  /*                       @OZ11012*/ 01431000
@RF00278 LR    @10,K                                               0280 01432000
         SLA   @10,6                                               0280 01433000
         ALR   @10,J                                               0280 01434000
         MH    @10,@CH00246                                        0280 01435000
         L     @02,COMPTR2(,R4)                                    0280 01436000
         ALR   @02,@10                                             0280 01437000
         AL    @02,@CF00497                                        0280 01438000
         CLI   ALTCI3-473(@02),X'03'                               0280 01439000
         BNE   @RF00280                                            0280 01440000
*             ALTPATHS(8)='1'B;     /*                       @OZ11012*/ 01441000
         OI    ALTPATHS,B'00000001'                                0281 01442000
*         END;                      /*                       @OZ11012*/ 01443000
*     END;                          /*                       @OZ11012*/ 01444000
*   END DOPATHS;                    /*                       @OZ11012*/ 01445000
@EL00009 DS    0H                                                  0284 01446000
@EF00009 DS    0H                                                  0284 01447000
@ER00009 LM    @14,@12,12(@13)                                     0284 01448000
         BR    @14                                                 0284 01449000
*                                                                  0285 01450000
*/********************************************************** @XD00153*/ 01451000
*/*                  P A T C H   A R E A                     @XD00153*/ 01452000
*/********************************************************** @XD00153*/ 01453000
*                                                                  0285 01454000
*   GENERATE;                                                      0285 01455000
*                                                         /*@XD00153*/  01456000
PATCHB08 DC    32C'PATCHB08'                              /*@XD00153*/  01457000
*   END ICGDSB08                    /*                       @Y30LB14*/ 01458000
*                                                                  0286 01459000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 01460000
*/*%INCLUDE SYSLIB  (ICGDSMAC)                                       */ 01461000
*/*%INCLUDE SYSLIB  (ICGDSMA5)                                       */ 01462000
*                                                                  0286 01463000
*       ;                                                          0286 01464000
         B     @EL00001                                            0286 01465000
@DATA    DS    0H                                                       01466000
@CH00042 DC    H'1'                                                     01467000
@CH00068 DC    H'4'                                                     01468000
@CH00133 DC    H'7'                                                     01469000
@CH00112 DC    H'9'                                                     01470000
@CH00246 DC    H'11'                                                    01471000
@CH00128 DC    H'12'                                                    01472000
@CH00162 DC    H'16'                                                    01473000
@CH00259 DC    H'24'                                                    01474000
@CH00309 DC    H'32'                                                    01475000
@CH00235 DC    H'48'                                                    01476000
@CH00245 DC    H'64'                                                    01477000
@CH00438 DC    H'79'                                                    01478000
@CH00426 DC    H'128'                                                   01479000
@CH00477 DC    H'272'                                                   01480000
@CH00472 DC    H'704'                                                   01481000
@CH00476 DC    H'1088'                                                  01482000
@CH00453 DC    H'-2'                                                    01483000
@DATD    DSECT                                                          01484000
         DS    0F                                                       01485000
@SA00001 DS    18F                                                      01486000
@SA00006 DS    15F                                                      01487000
@SA00007 DS    15F                                                      01488000
@SA00008 DS    15F                                                      01489000
@TF00001 DS    F                                                        01490000
@ZTEMPS  DS    0F                                                       01491000
@ZT00003 DC    F'0'                                                     01492000
@ZTEMPND EQU   *                                                        01493000
@ZLEN    EQU   @ZTEMPND-@ZTEMPS                                         01494000
ICGDSB08 CSECT                                                          01495000
         DS    0F                                                       01496000
@CF00048 DC    F'3'                                                     01497000
@CF00502 DC    F'13260'                                                 01498000
@CF00469 DC    F'13532'                                                 01499000
@CH00469 EQU   @CF00469+2                                               01500000
@CF00500 DC    F'14620'                                                 01501000
@CF00499 DC    F'15708'                                                 01502000
@CF00431 DC    F'1073741824'                                            01503000
@CF00506 DC    F'-264'                                                  01504000
@CF00505 DC    F'-263'                                                  01505000
@CF00504 DC    F'-262'                                                  01506000
@CF00503 DC    F'-261'                                                  01507000
@CF00507 DC    F'-260'                                                  01508000
@CF00492 DC    F'-251'                                                  01509000
@CF00501 DC    F'-250'                                                  01510000
@CF00494 DC    F'-249'                                                  01511000
@CF00493 DC    F'-248'                                                  01512000
@CF00496 DC    F'-246'                                                  01513000
@CF00495 DC    F'-245'                                                  01514000
@CF00498 DC    F'-243'                                                  01515000
@CF00497 DC    F'-242'                                                  01516000
@CF00485 DC    F'-240'                                                  01517000
@CF00487 DC    F'-238'                                                  01518000
@CF00486 DC    F'-237'                                                  01519000
@CF00489 DC    F'-235'                                                  01520000
@CF00488 DC    F'-234'                                                  01521000
@CF00491 DC    F'-232'                                                  01522000
@CF00490 DC    F'-231'                                                  01523000
@DATD    DSECT                                                          01524000
         DS    0D                                                       01525000
FLAGS    DS    FL1                                                      01526000
         ORG   FLAGS                                                    01527000
BIT0     DS    BL1                                                      01528000
@NM00029 EQU   FLAGS+0                                                  01529000
BIT4     EQU   FLAGS+0                                                  01530000
BIT5     EQU   FLAGS+0                                                  01531000
BIT6     EQU   FLAGS+0                                                  01532000
BIT7     EQU   FLAGS+0                                                  01533000
         ORG   FLAGS+1                                                  01534000
BLOCK    DS    CL256                                                    01535000
         ORG   BLOCK                                                    01536000
ZEROS    DS    BL256                                                    01537000
         ORG   BLOCK+256                                                01538000
         DS    CL7                                                      01539000
BITPATRN DS    CL4                                                      01540000
         ORG   BITPATRN                                                 01541000
BITPAT   DS    FL4                                                      01542000
         ORG   BITPAT                                                   01543000
FIRST8   DS    BL1                                                      01544000
@NM00030 DS    BL3                                                      01545000
         ORG   BITPATRN+4                                               01546000
         DS    CL4                                                      01547000
ALTPATRN DS    CL4                                                      01548000
         ORG   ALTPATRN                                                 01549000
ALTPAT   DS    FL4                                                      01550000
         ORG   ALTPAT                                                   01551000
ALT8     DS    BL1                                                      01552000
@NM00031 DS    BL3                                                      01553000
         ORG   ALTPATRN+4                                               01554000
ALTPATHS DS    BL1                                                      01555000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01556000
@ENDDATD EQU   *                                                        01557000
ICGDSB08 CSECT                                                          01558000
         DS    0F                                                       01559000
@SIZDATD DC    AL1(0)                                                   01560000
         DC    AL3(@ENDDATD-@DATD)                                      01561000
         DS    0D                                                       01562000
@CC00437 DC    C'VOL1'                                                  01563000
@CB00441 DC    X'E30194001332E6'                                        01564000
@CB00444 DC    X'080000F1'                                              01565000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01566000
@01      EQU   01                                                       01567000
@02      EQU   02                                                       01568000
@03      EQU   03                                                       01569000
@04      EQU   04                                                       01570000
@05      EQU   05                                                       01571000
@06      EQU   06                                                       01572000
@07      EQU   07                                                       01573000
@08      EQU   08                                                       01574000
@09      EQU   09                                                       01575000
@10      EQU   10                                                       01576000
@11      EQU   11                                                       01577000
@12      EQU   12                                                       01578000
@13      EQU   13                                                       01579000
@14      EQU   14                                                       01580000
@15      EQU   15                                                       01581000
BITPOSN  EQU   @06                                                      01582000
RSGBYTE  EQU   @06                                                      01583000
TWO4     EQU   @07                                                      01584000
M        EQU   @03                                                      01585000
L        EQU   @06                                                      01586000
K        EQU   @03                                                      01587000
J        EQU   @05                                                      01588000
I        EQU   @02                                                      01589000
R4       EQU   @04                                                      01590000
COMTAB   EQU   0                                                        01591000
READER   EQU   COMTAB+256                                               01592000
READFLAG EQU   READER+96                                                01593000
PCHBF    EQU   READER+99                                                01594000
STARTCOL EQU   READER+180                                               01595000
NEXTCOL  EQU   READER+184                                               01596000
PRINTER  EQU   COMTAB+464                                               01597000
MESSAGES EQU   COMTAB+810                                               01598000
SPECLMSG EQU   MESSAGES+18                                              01599000
GENIO    EQU   COMTAB+832                                               01600000
DCBPTR   EQU   GENIO+4                                                  01601000
COMPTR2  EQU   GENIO+16                                                 01602000
BUILDPTR EQU   GENIO+20                                                 01603000
INVOKED  EQU   COMTAB+856                                               01604000
SAVEDDS  EQU   INVOKED+4                                                01605000
BUILDRSG EQU   COMTAB+900                                               01606000
RSGS     EQU   BUILDRSG                                                 01607000
RSG      EQU   RSGS                                                     01608000
RSGABOX  EQU   RSG                                                      01609000
RSGABOX1 EQU   RSGABOX                                                  01610000
RSGTODS  EQU   RSG+7                                                    01611000
TODS1    EQU   RSGTODS                                                  01612000
LIBRARY  EQU   COMTAB+1170                                              01613000
LIBS     EQU   LIBRARY                                                  01614000
LIB      EQU   LIBS                                                     01615000
LIBBITS  EQU   LIB                                                      01616000
LIBSPEC  EQU   LIBBITS                                                  01617000
LIBDSMID EQU   LIB+2                                                    01618000
PABTABLE EQU   COMTAB+1218                                              01619000
PABDEV   EQU   PABTABLE                                                 01620000
PABFLAGS EQU   PABDEV                                                   01621000
PABREAL  EQU   PABDEV+1                                                 01622000
PABAADDD EQU   PABDEV+2                                                 01623000
DSPAIRS  EQU   COMTAB+1938                                              01624000
PHYSDS2  EQU   DSPAIRS                                                  01625000
PHYSTYPE EQU   COMTAB+2002                                              01626000
PHYSFLGS EQU   PHYSTYPE                                                 01627000
MERLICEB EQU   PHYSFLGS                                                 01628000
CPUASSOC EQU   COMTAB+3026                                              01629000
CPUS     EQU   CPUASSOC+2                                               01630000
CPU      EQU   CPUS                                                     01631000
CPUFLAG1 EQU   CPU+6                                                    01632000
OPSYSTYP EQU   CPUFLAG1                                                 01633000
CPUFLAG2 EQU   CPU+7                                                    01634000
LOWERCON EQU   COMTAB+3156                                              01635000
LOWDSS   EQU   LOWERCON                                                 01636000
LOWFLGS  EQU   LOWDSS                                                   01637000
LOWSPEC  EQU   LOWFLGS                                                  01638000
LOWLIB   EQU   LOWDSS+1                                                 01639000
LIBCTL   EQU   COMTAB+3284                                              01640000
LIBCTLS  EQU   LIBCTL                                                   01641000
CREATE   EQU   COMTAB+3288                                              01642000
@NM00017 EQU   CREATE                                                   01643000
COMTAB2  EQU   0                                                        01644000
DSTORSG  EQU   COMTAB2                                                  01645000
DSENTRY  EQU   DSTORSG                                                  01646000
CONFGCON EQU   COMTAB2+32                                               01647000
RSGUCB   EQU   CONFGCON                                                 01648000
RSGFLAGS EQU   RSGUCB                                                   01649000
CISPEC   EQU   RSGFLAGS                                                 01650000
CPUREFNO EQU   RSGUCB+6                                                 01651000
RSGCHAN  EQU   RSGUCB+7                                                 01652000
RSGCUA   EQU   RSGUCB+8                                                 01653000
CONFGUCB EQU   COMTAB2+464                                              01654000
CONFGDEV EQU   CONFGUCB                                                 01655000
USEFLAGS EQU   CONFGDEV                                                 01656000
USEV     EQU   USEFLAGS                                                 01657000
USEVS    EQU   USEFLAGS                                                 01658000
USEREAL  EQU   USEFLAGS                                                 01659000
INDEXRSG EQU   CONFGDEV+1                                               01660000
ALTPATH1 EQU   CONFGDEV+2                                               01661000
ALTDS1   EQU   ALTPATH1                                                 01662000
ALTCI1   EQU   ALTPATH1+1                                               01663000
ALTPATH2 EQU   CONFGDEV+5                                               01664000
ALTDS2   EQU   ALTPATH2                                                 01665000
ALTCI2   EQU   ALTPATH2+1                                               01666000
ALTPATH3 EQU   CONFGDEV+8                                               01667000
ALTDS3   EQU   ALTPATH3                                                 01668000
ALTCI3   EQU   ALTPATH3+1                                               01669000
BUILDTAB EQU   0                                                        01670000
COMB06   EQU   BUILDTAB                                                 01671000
B06DCBPT EQU   COMB06                                                   01672000
B06BUFPT EQU   COMB06+4                                                 01673000
B06ADDR  EQU   COMB06+9                                                 01674000
COMB05   EQU   BUILDTAB+12                                              01675000
B05ADDR  EQU   COMB05+9                                                 01676000
BUILDGEN EQU   BUILDTAB+24                                              01677000
UT2VCHR  EQU   BUILDGEN+8                                               01678000
OUTADDR  EQU   UT2VCHR+1                                                01679000
UT2VCYL  EQU   OUTADDR                                                  01680000
UT2VHEAD EQU   OUTADDR+1                                                01681000
UT2VREC  EQU   OUTADDR+2                                                01682000
UT1VCHR  EQU   BUILDGEN+12                                              01683000
INADDR   EQU   UT1VCHR+1                                                01684000
UT1STUFF EQU   BUILDTAB+40                                              01685000
UT1FLAG  EQU   UT1STUFF+96                                              01686000
UT2STUFF EQU   BUILDTAB+664                                             01687000
UT2DCB   EQU   UT2STUFF                                                 01688000
UT2FLAG  EQU   UT2STUFF+96                                              01689000
UT3STUFF EQU   BUILDTAB+1288                                            01690000
UT3FLAG  EQU   UT3STUFF+96                                              01691000
UT2BUFER EQU   BUILDTAB+13532                                           01692000
OUTBUFFR EQU   0                                                        01693000
OUTBLOCK EQU   OUTBUFFR                                                 01694000
OBLKPRFX EQU   OUTBLOCK+8                                               01695000
OUTABLID EQU   OBLKPRFX                                                 01696000
OUTCYL   EQU   OBLKPRFX+1                                               01697000
OUTHEAD  EQU   OBLKPRFX+2                                               01698000
OUTREC   EQU   OBLKPRFX+3                                               01699000
OUTFLR   EQU   OBLKPRFX+4                                               01700000
OBLOCK   EQU   OUTBLOCK+16                                              01701000
SCANBUF  EQU   0                                                        01702000
SCANDATA EQU   0                                                        01703000
BLK      EQU   BLOCK                                                    01704000
BYTES    EQU   BLK                                                      01705000
CPUASSN  EQU   BLOCK                                                    01706000
FLAG1    EQU   CPUASSN+6                                                01707000
OPSYSBIT EQU   FLAG1                                                    01708000
VS1      EQU   OPSYSBIT                                                 01709000
VS2      EQU   OPSYSBIT                                                 01710000
JES      EQU   OPSYSBIT                                                 01711000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01712000
@NM00028 EQU   CPUASSN+7                                                01713000
@NM00027 EQU   FLAG1                                                    01714000
@NM00026 EQU   FLAG1                                                    01715000
@NM00025 EQU   CPUASSN                                                  01716000
@NM00024 EQU   OUTBLOCK                                                 01717000
TEMPEND  EQU   BUILDTAB+22396                                           01718000
LTRTRANI EQU   BUILDTAB+22316                                           01719000
LTRTRANO EQU   BUILDTAB+22236                                           01720000
UT1BUFER EQU   BUILDTAB+5084                                            01721000
NVERIFY  EQU   BUILDTAB+3500                                            01722000
CVERIFY  EQU   BUILDTAB+1916                                            01723000
@NM00023 EQU   UT3STUFF+624                                             01724000
UT3DDN   EQU   UT3STUFF+616                                             01725000
UT3CCWS  EQU   UT3STUFF+320                                             01726000
UT3IOB   EQU   UT3STUFF+280                                             01727000
UT3ECB   EQU   UT3STUFF+276                                             01728000
UT3JFCB  EQU   UT3STUFF+100                                             01729000
@NM00022 EQU   UT3FLAG                                                  01730000
UT3VWERR EQU   UT3FLAG                                                  01731000
UT3VOERR EQU   UT3FLAG                                                  01732000
UT3VUPDT EQU   UT3FLAG                                                  01733000
UT3DCB   EQU   UT3STUFF                                                 01734000
UT2DDN   EQU   UT2STUFF+616                                             01735000
UT2CCWS  EQU   UT2STUFF+320                                             01736000
UT2IOB   EQU   UT2STUFF+280                                             01737000
UT2ECB   EQU   UT2STUFF+276                                             01738000
UT2JFCB  EQU   UT2STUFF+100                                             01739000
@NM00021 EQU   UT2FLAG                                                  01740000
UT2VCERR EQU   UT2FLAG                                                  01741000
UT2VWERR EQU   UT2FLAG                                                  01742000
UT2VOERR EQU   UT2FLAG                                                  01743000
UT2VUPDT EQU   UT2FLAG                                                  01744000
UT1DDN   EQU   UT1STUFF+616                                             01745000
UT1CCWS  EQU   UT1STUFF+320                                             01746000
UT1IOB   EQU   UT1STUFF+280                                             01747000
UT1ECB   EQU   UT1STUFF+276                                             01748000
UT1JFCB  EQU   UT1STUFF+100                                             01749000
@NM00020 EQU   UT1FLAG                                                  01750000
UT1VWERR EQU   UT1FLAG                                                  01751000
UT1VOERR EQU   UT1FLAG                                                  01752000
UT1VUPDT EQU   UT1FLAG                                                  01753000
UT1DCB   EQU   UT1STUFF                                                 01754000
UT1VREC  EQU   INADDR+2                                                 01755000
UT1VHEAD EQU   INADDR+1                                                 01756000
UT1VCYL  EQU   INADDR                                                   01757000
UT1TABID EQU   UT1VCHR                                                  01758000
UT2TABID EQU   UT2VCHR                                                  01759000
ADDRBUF2 EQU   BUILDGEN+4                                               01760000
ADDRBUF1 EQU   BUILDGEN                                                 01761000
B05REC   EQU   B05ADDR+2                                                01762000
B05HEAD  EQU   B05ADDR+1                                                01763000
B05CYL   EQU   B05ADDR                                                  01764000
B05TBLID EQU   COMB05+8                                                 01765000
B05BUFPT EQU   COMB05+4                                                 01766000
B05DCBPT EQU   COMB05                                                   01767000
B06REC   EQU   B06ADDR+2                                                01768000
B06HEAD  EQU   B06ADDR+1                                                01769000
B06CYL   EQU   B06ADDR                                                  01770000
B06TBLID EQU   COMB06+8                                                 01771000
ALTCH3   EQU   ALTPATH3+2                                               01772000
ALTCH2   EQU   ALTPATH2+2                                               01773000
ALTCH1   EQU   ALTPATH1+2                                               01774000
ICEBERG  EQU   USEFLAGS                                                 01775000
ITISALTP EQU   USEFLAGS                                                 01776000
USECONVR EQU   USEFLAGS                                                 01777000
SUPPUNCH EQU   USEFLAGS                                                 01778000
USESPEC  EQU   USEFLAGS                                                 01779000
RSGCPUID EQU   RSGUCB+1                                                 01780000
@NM00019 EQU   RSGFLAGS                                                 01781000
TORSG2   EQU   DSENTRY+1                                                01782000
TORSG1   EQU   DSENTRY                                                  01783000
COM2BASE EQU   COMTAB+3304                                              01784000
LRUCLOCK EQU   CREATE+11                                                01785000
VOLSER   EQU   CREATE+5                                                 01786000
VPAGES   EQU   CREATE+1                                                 01787000
@NM00018 EQU   @NM00017                                                 01788000
PRNTONLY EQU   @NM00017                                                 01789000
UPDCREAT EQU   @NM00017                                                 01790000
NEWCREAT EQU   @NM00017                                                 01791000
CMDCREAT EQU   @NM00017                                                 01792000
RW67RGHT EQU   LIBCTLS                                                  01793000
RW67LEFT EQU   LIBCTLS                                                  01794000
RW45RGHT EQU   LIBCTLS                                                  01795000
RW45LEFT EQU   LIBCTLS                                                  01796000
RW23RGHT EQU   LIBCTLS                                                  01797000
RW23LEFT EQU   LIBCTLS                                                  01798000
RW01RGHT EQU   LIBCTLS                                                  01799000
RW01LEFT EQU   LIBCTLS                                                  01800000
@NM00016 EQU   LOWFLGS                                                  01801000
LOWRGHT  EQU   LOWFLGS                                                  01802000
LOWLEFT  EQU   LOWFLGS                                                  01803000
LOWRW67  EQU   LOWFLGS                                                  01804000
LOWRW45  EQU   LOWFLGS                                                  01805000
LOWRW23  EQU   LOWFLGS                                                  01806000
LOWRW01  EQU   LOWFLGS                                                  01807000
ALTMSCIN EQU   CPUFLAG2                                                 01808000
@NM00015 EQU   CPUFLAG2                                                 01809000
ALTMSGBF EQU   CPUFLAG2                                                 01810000
@NM00014 EQU   CPUFLAG2                                                 01811000
CPUSPEC  EQU   CPUFLAG2                                                 01812000
CPUMSCIN EQU   CPUFLAG1                                                 01813000
OPJES3   EQU   OPSYSTYP                                                 01814000
OPVS2    EQU   OPSYSTYP                                                 01815000
OPVS1    EQU   OPSYSTYP                                                 01816000
CPUALTFL EQU   CPUFLAG1                                                 01817000
CPUTIGHT EQU   CPUFLAG1                                                 01818000
@NM00013 EQU   CPUFLAG1                                                 01819000
TOMPCPU  EQU   CPU+5                                                    01820000
CPUID    EQU   CPU                                                      01821000
CPUNUM   EQU   CPUASSOC                                                 01822000
SPNRSGNO EQU   PHYSTYPE+1                                               01823000
LGDEVICE EQU   PHYSFLGS                                                 01824000
LOGABOX1 EQU   PHYSFLGS                                                 01825000
PHYSSSID EQU   PHYSFLGS                                                 01826000
PHYSREAL EQU   PHYSFLGS                                                 01827000
PHYSICEB EQU   MERLICEB                                                 01828000
PHYSMERL EQU   MERLICEB                                                 01829000
PABDDD   EQU   PABAADDD                                                 01830000
PABAA    EQU   PABAADDD                                                 01831000
PABZEROS EQU   PABAADDD                                                 01832000
PAB2D    EQU   PABREAL                                                  01833000
PAB2C    EQU   PABREAL                                                  01834000
PAB2B    EQU   PABREAL                                                  01835000
@NM00012 EQU   PABREAL                                                  01836000
PAB1D    EQU   PABREAL                                                  01837000
PAB1C    EQU   PABREAL                                                  01838000
PAB1B    EQU   PABREAL                                                  01839000
PABIMPLR EQU   PABREAL                                                  01840000
PABBERG2 EQU   PABFLAGS                                                 01841000
@NM00011 EQU   PABFLAGS                                                 01842000
PABDSMTL EQU   PABFLAGS                                                 01843000
PABIBERG EQU   PABFLAGS                                                 01844000
@NM00010 EQU   PABFLAGS                                                 01845000
PABVOVIR EQU   PABFLAGS                                                 01846000
PABEXIST EQU   PABFLAGS                                                 01847000
MAPEXIT  EQU   LIB+4                                                    01848000
LIBMAP   EQU   LIB+3                                                    01849000
LIBSIZE  EQU   LIB+1                                                    01850000
@NM00009 EQU   LIBBITS                                                  01851000
TODS2    EQU   RSGTODS+1                                                01852000
RSGSLICE EQU   RSG+3                                                    01853000
RSGUDEL  EQU   RSG+2                                                    01854000
RSGLDEL  EQU   RSG+1                                                    01855000
@NM00008 EQU   RSG                                                      01856000
RSGABOX0 EQU   RSGABOX                                                  01857000
RSGSPEC  EQU   RSG                                                      01858000
SVSYSUT3 EQU   SAVEDDS+32                                               01859000
SVSYSUT2 EQU   SAVEDDS+24                                               01860000
SVSYSUT1 EQU   SAVEDDS+16                                               01861000
SVSYSPCH EQU   SAVEDDS+8                                                01862000
SVSYSIN  EQU   SAVEDDS                                                  01863000
PARMPTR  EQU   INVOKED                                                  01864000
SAVE14   EQU   GENIO+12                                                 01865000
EXLST    EQU   GENIO+8                                                  01866000
@NM00007 EQU   DCBPTR+1                                                 01867000
DCBFLAG  EQU   DCBPTR                                                   01868000
OPENLIST EQU   GENIO                                                    01869000
@NM00006 EQU   MESSAGES+19                                              01870000
PRNTBUF2 EQU   SPECLMSG                                                 01871000
NEEDEOJ  EQU   SPECLMSG                                                 01872000
ENDPHASE EQU   SPECLMSG                                                 01873000
@NM00005 EQU   SPECLMSG                                                 01874000
PRNTCARD EQU   SPECLMSG                                                 01875000
@NM00004 EQU   SPECLMSG                                                 01876000
NEED102  EQU   SPECLMSG                                                 01877000
NEED101  EQU   SPECLMSG                                                 01878000
PRINTRC  EQU   MESSAGES+16                                              01879000
TERM     EQU   MESSAGES+12                                              01880000
WARN     EQU   MESSAGES+8                                               01881000
TERMINAT EQU   MESSAGES+6                                               01882000
WARNING  EQU   MESSAGES+4                                               01883000
MSGNO    EQU   MESSAGES+2                                               01884000
RETCODE  EQU   MESSAGES                                                 01885000
OUTBUF2  EQU   PRINTER+225                                              01886000
OUTBUF   EQU   PRINTER+104                                              01887000
LINECT   EQU   PRINTER+102                                              01888000
LINECTR  EQU   PRINTER+100                                              01889000
PAGENO   EQU   PRINTER+96                                               01890000
DCBPRINT EQU   PRINTER                                                  01891000
@NM00003 EQU   READER+206                                               01892000
SCANLEN  EQU   READER+204                                               01893000
SVEODAD  EQU   READER+200                                               01894000
SVSYNAD2 EQU   READER+196                                               01895000
SAVENCOL EQU   READER+192                                               01896000
SAVESCOL EQU   READER+188                                               01897000
INBUF    EQU   READER+100                                               01898000
SSELECT  EQU   PCHBF                                                    01899000
@NM00002 EQU   READER+97                                                01900000
@NM00001 EQU   READFLAG                                                 01901000
LASTPARM EQU   READFLAG                                                 01902000
ENDSCAN  EQU   READFLAG                                                 01903000
PARMBIT  EQU   READFLAG                                                 01904000
KEYBIT   EQU   READFLAG                                                 01905000
READTERM EQU   READFLAG                                                 01906000
READDCB  EQU   READER                                                   01907000
PATCH    EQU   COMTAB                                                   01908000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01909000
@RC00224 EQU   @RC00222                                                 01910000
@RF00238 EQU   @RC00222                                                 01911000
@RF00222 EQU   @EL00009                                                 01912000
@RC00245 EQU   @RC00243                                                 01913000
@RF00259 EQU   @RC00243                                                 01914000
@RF00243 EQU   @EL00009                                                 01915000
@RF00264 EQU   @EL00009                                                 01916000
@RC00266 EQU   @EL00009                                                 01917000
@RF00280 EQU   @EL00009                                                 01918000
@RF00230 EQU   @RC00224                                                 01919000
@RF00251 EQU   @RC00245                                                 01920000
@RF00272 EQU   @RC00266                                                 01921000
@ENDDATA EQU   *                                                        01922000
         END   ICGDSB08,(C'PLS0822',0603,76339)                         01923000
