         TITLE 'ICGDSB09 MSC TABLE CREATE BUILD LIBRARY CELL MAP       *00001000
                        '                                               00002000
ICGDSB09 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'ICGDSB09  76.337'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @11,0                                               0001 00011000
@PSTART  LA    @12,4095(,@11)                                      0001 00012000
         USING @PSTART,@11                                         0001 00013000
         USING @PSTART+4095,@12                                    0001 00014000
         L     @00,@SIZDATD                                        0001 00015000
         GETMAIN  R,LV=(0)                                              00016000
         LR    @10,@01                                             0001 00017000
         USING @DATD,@10                                           0001 00018000
         ST    @13,@SA00001+4                                      0001 00019000
         LM    @00,@01,20(@13)                                     0001 00020000
         ST    @10,8(,@13)                                         0001 00021000
         LR    @13,@10                                             0001 00022000
         XC    @ZTEMPS(@ZLEN),@ZTEMPS                                   00023000
*                                                            @Y30LB15*/ 00024000
*                                                                  0057 00025000
*/********************************************************** @Y30LB15*/ 00026000
*/*                                                          @Y30LB15*/ 00027000
*/* ICGDSB09 (MAINLINE)                                      @XD00153*/ 00028000
*/*                                                          @XD00153*/ 00029000
*/*      DETERMINE HOW MANY CELL MAPS ARE NEEDED AND THE     @XD00153*/ 00030000
*/* SIZE OF LIBRARY FOR WHICH IT SHOULD BE BUILT.  CALL      @XD00153*/ 00031000
*/* THE PROPER ROUTINES TO PERFORM THIS TASK FOR 'CREATE =   @XD00153*/ 00032000
*/* YES'.                                                    @XD00153*/ 00033000
*/* FOR A RECONFIGURATION FOR EACH LIBRARY, DETERMINE WHAT   @XD00153*/ 00034000
*/* PART OF THE OLD CELL MAP MUST BE COPIED AND HOW MUCH OF  @XD00153*/ 00035000
*/* THE CELL MAP MUST BE BUILT.  CALL THE NECESSARY ROUTINES @XD00153*/ 00036000
*/* TO ACCOMPLISH THESE TASKS.                               @XD00153*/ 00037000
*/*                                                          @XD00153*/ 00038000
*/*      CHECK FOR A VALID LIBRARY SIZE:  1, 2, 3, OR 4.     @XD00153*/ 00039000
*/* IF THE LIBRARY IS DEFINED AND THE SIZE IS INCORRECT,     @Y30LB15*/ 00040000
*/* WRITE TERMINATING MESSAGE ICGDS414 AND RETURN. IF THE    @Y30LB15*/ 00041000
*/* SIZE IS CORRECT AND IF THE NEWCREAT BIT IS A 1, CALL     @Y30LB15*/ 00042000
*/* CREATPRC. IF THE BIT IS 0 CALL RECNFPRC. IF NO           @Y30LB15*/ 00043000
*/* TERMINATING ERRORS, CALL ZEROBLK 12 TIMES TO ZERO        @Y30LB15*/ 00044000
*/* REMAINING BLOCKS IN THE TRACK. SET UP PARAMETERS AND     @Y30LB15*/ 00045000
*/* LINK TO ICGDSBLD TO WRITE THE TRACK. RETURN TO ICGDSBLD  @Y30LB15*/ 00046000
*/*                                                          @Y30LB15*/ 00047000
*/*             INITIALIZATION                               @Y30LB15*/ 00048000
*/*                                                          @Y30LB15*/ 00049000
*/********************************************************** @Y30LB15*/ 00050000
*                                                                  0057 00051000
*   OUTPTR=ADDR(UT2BUFER);          /* START BEG OUT BUFFER  @Y30LB15*/ 00052000
         L     @09,BUILDPTR(,R4)                                   0057 00053000
         LR    OUTPTR,@09                                          0057 00054000
         AL    OUTPTR,@CF00810                                     0057 00055000
*   RECCNT=UT2VREC;                 /* GET START RECORD NUM  @Y30LB15*/ 00056000
         SLR   RECCNT,RECCNT                                       0058 00057000
         IC    RECCNT,UT2VREC(,@09)                                0058 00058000
*   LIBCNT=1;                       /* INIT CNT OF LIBRARIES @Y30LB15*/ 00059000
         LA    LIBCNT,1                                            0059 00060000
*   TABLID=UT2TABID;                /* GET TABLE ID          @Y30LB15*/ 00061000
         MVC   TABLID(1),UT2TABID(@09)                             0060 00062000
*   BITSWTS=0;                      /* INITIALIZE SWITCHES   @Y30LB15*/ 00063000
         MVI   BITSWTS,X'00'                                       0061 00064000
*/********************************************************** @Y30LB15*/ 00065000
*/*                                                          @Y30LB15*/ 00066000
*/*  CHECK THE SIZE OF EACH LIBRARY. IF ANY ARE INVALID,     @Y30LB15*/ 00067000
*/*  WRITE ERROR MESSAGE AND RETURN.                         @Y30LB15*/ 00068000
*/*                                                          @Y30LB15*/ 00069000
*/********************************************************** @Y30LB15*/ 00070000
*                                                                  0062 00071000
*DO001:                                                            0062 00072000
*   DO I=1 TO 4;                    /*                       @Y30LB15*/ 00073000
DO001    LA    I,1                                                 0062 00074000
@DL00062 DS    0H                                                  0063 00075000
*     IF LIBSIZE(I)='1'|LIBSIZE(I)='2'|LIBSIZE(I)='3'/*      @Y30LB15*/ 00076000
*         |LIBSIZE(I)='4'           /* VALID LIB SIZE?       @Y30LB15*/ 00077000
*       THEN                                                       0063 00078000
         LR    @05,I                                               0063 00079000
         MH    @05,@CH00033                                        0063 00080000
         ST    @05,@TF00001                                        0063 00081000
         ALR   @05,R4                                              0063 00082000
         CLI   LIBSIZE-12(@05),C'1'                                0063 00083000
         BE    @RT00063                                            0063 00084000
         LR    @05,R4                                              0063 00085000
         AL    @05,@TF00001                                        0063 00086000
         CLI   LIBSIZE-12(@05),C'2'                                0063 00087000
         BE    @RT00063                                            0063 00088000
         LR    @05,R4                                              0063 00089000
         AL    @05,@TF00001                                        0063 00090000
         CLI   LIBSIZE-12(@05),C'3'                                0063 00091000
         BE    @RT00063                                            0063 00092000
         LR    @05,R4                                              0063 00093000
         AL    @05,@TF00001                                        0063 00094000
         CLI   LIBSIZE-12(@05),C'4'                                0063 00095000
         BE    @RT00063                                            0063 00096000
*       ;                           /* YES-CONTINUE          @Y30LB15*/ 00097000
*     ELSE                          /* NO                    @Y30LB15*/ 00098000
*       IF LIBSPEC(I)='0'B          /* WAS LIB DEFINED?      @Y30LB15*/ 00099000
*         THEN                                                     0065 00100000
         LR    @05,I                                               0065 00101000
         MH    @05,@CH00033                                        0065 00102000
         ALR   @05,R4                                              0065 00103000
         TM    LIBSPEC-12(@05),B'10000000'                         0065 00104000
         BZ    @RT00065                                            0065 00105000
*         ;                         /* NO-CONTINUE           @Y30LB15*/ 00106000
*       ELSE                                                       0067 00107000
*         DO;                       /* YES INVALID SIZE LIB  @Y30LB15*/ 00108000
*           I=4;                    /* FORCE EXIT FROM LOOP  @Y30LB15*/ 00109000
         LA    I,4                                                 0068 00110000
*           OUTBUF2(1:45)=B09MSG2;  /* PRNT INVLD PARM MSG   @Y30LB15*/ 00111000
         MVC   OUTBUF2(45,R4),B09MSG2                              0069 00112000
*           CALL PUTIT1;            /*                       @Y30LB15*/ 00113000
         BAL   @14,PUTIT1                                          0070 00114000
*         END;                      /*                       @Y30LB15*/ 00115000
*   END DO001;                      /*                       @Y30LB15*/ 00116000
@RT00065 DS    0H                                                  0072 00117000
@RT00063 AH    I,@CH00044                                          0072 00118000
         CH    I,@CH00070                                          0072 00119000
         BNH   @DL00062                                            0072 00120000
*   IF STOPSCAN='0'B                /* LIBRARY SIZES OK?     @Y30LB15*/ 00121000
*     THEN                          /* YES-CONTINUE          @Y30LB15*/ 00122000
         TM    STOPSCAN,B'10000000'                                0073 00123000
         BNZ   @RF00073                                            0073 00124000
*DO002:                                                            0074 00125000
*     DO;                           /*                       @Y30LB15*/ 00126000
DO002    DS    0H                                                  0075 00127000
*/********************************************************** @Y30LB15*/ 00128000
*/*                                                          @Y30LB15*/ 00129000
*/*   DETERMINE IF A CREATE OR RECONFIGURE                   @Y30LB15*/ 00130000
*/*                                                          @Y30LB15*/ 00131000
*/********************************************************** @Y30LB15*/ 00132000
*                                                                  0075 00133000
*       IF NEWCREAT='1'B            /* IS THIS A CREATE?     @Y30LB15*/ 00134000
*         THEN                      /* YES                   @Y30LB15*/ 00135000
         TM    NEWCREAT(R4),B'01000000'                            0075 00136000
         BNO   @RF00075                                            0075 00137000
*         CALL CREATPRC;            /*                       @Y30LB15*/ 00138000
         BAL   @14,CREATPRC                                        0076 00139000
*       ELSE                        /* NO                    @Y30LB15*/ 00140000
*         IF UPDCREAT='1'B          /* IS IT RECONFIGURE?    @Y30LB15*/ 00141000
*           THEN                    /* YES                   @Y30LB15*/ 00142000
         B     @RC00075                                            0077 00143000
@RF00075 TM    UPDCREAT(R4),B'00100000'                            0077 00144000
         BNO   @RF00077                                            0077 00145000
*           CALL RECNFPRC;          /*                       @Y30LB15*/ 00146000
         BAL   @14,RECNFPRC                                        0078 00147000
*         ELSE                      /* ERROR                 @Y30LB15*/ 00148000
*           DO;                     /*                       @Y30LB15*/ 00149000
         B     @RC00077                                            0079 00150000
@RF00077 DS    0H                                                  0080 00151000
*             OUTBUF2(1:45)=B09MSG2;/* INTERNAL ERROR MSG    @Y30LB15*/ 00152000
         MVC   OUTBUF2(45,R4),B09MSG2                              0080 00153000
*             CALL PUTIT1;          /* WRITE TERM MSG        @Y30LB15*/ 00154000
         BAL   @14,PUTIT1                                          0081 00155000
*           END;                    /*                       @Y30LB15*/ 00156000
*       IF STOPSCAN='0'B            /* TERM ERROR FOUND?     @XD00153*/ 00157000
*         THEN                                                     0083 00158000
@RC00077 DS    0H                                                  0083 00159000
@RC00075 TM    STOPSCAN,B'10000000'                                0083 00160000
         BNZ   @RF00083                                            0083 00161000
*         DO;                       /* NO-PROCEED            @Y30LB15*/ 00162000
*                                                                  0084 00163000
*           /*********************************************************/ 00164000
*           /*                                                       */ 00165000
*           /* ***********************************************       */ 00166000
*           /*                                               @ZD00187*/ 00167000
*           /* COPY IMAGE OF EMPTY A4/B4 TO RECORDS 21-24    @ZD00187*/ 00168000
*           /* ***********************************************       */ 00169000
*           /*                                               @ZD00187*/ 00170000
*           /*                                                       */ 00171000
*           /*********************************************************/ 00172000
*                                                                  0085 00173000
*           OUTPTR=ADDR(UT2BUFER)+5440;/* ADDR OF REC 21     @ZD00187*/ 00174000
         L     OUTPTR,BUILDPTR(,R4)                                0085 00175000
         AL    OUTPTR,@CF00810                                     0085 00176000
         AH    OUTPTR,@CH00638                                     0085 00177000
*           CALL WRITPRFX;          /* ID/CHR OF REC 21      @ZD00187*/ 00178000
         BAL   @14,WRITPRFX                                        0086 00179000
*           OBLOCK(1:256)=BLOCK0(1:256);/* DATA FOR REC 21   @ZD00187*/ 00180000
         MVC   OBLOCK(256,OUTPTR),BLOCK0                           0087 00181000
*           OUTPTR=OUTPTR+272;      /* ADDR OF REC 22        @ZD00187*/ 00182000
         AH    OUTPTR,@CH00393                                     0088 00183000
*           CALL WRITPRFX;          /* ID/CHR OF REC 22      @ZD00187*/ 00184000
         BAL   @14,WRITPRFX                                        0089 00185000
*           OBLOCK(1:256)=BLOCK1(1:256);/* DATA FOR REC 22   @ZD00187*/ 00186000
         MVC   OBLOCK(256,OUTPTR),BLOCK1                           0090 00187000
*           OUTPTR=OUTPTR+272;      /* ADDR OF REC 23        @ZD00187*/ 00188000
         AH    OUTPTR,@CH00393                                     0091 00189000
*           CALL WRITPRFX;          /* ID/CHR OF REC 23      @ZD00187*/ 00190000
         BAL   @14,WRITPRFX                                        0092 00191000
*           OBLOCK(1:256)=BLOCK2(1:256);/* DATA FOR REC 23   @ZD00187*/ 00192000
         MVC   OBLOCK(256,OUTPTR),BLOCK2                           0093 00193000
*           OUTPTR=OUTPTR+272;      /* ADDR OF REC 24        @ZD00187*/ 00194000
         AH    OUTPTR,@CH00393                                     0094 00195000
*           CALL WRITPRFX;          /* ID/CHR OF REC 24      @ZD00187*/ 00196000
         BAL   @14,WRITPRFX                                        0095 00197000
*           OBLOCK(1:32)=BLOCK3(1:32);/* DATA FOR REC 24     @ZD00187*/ 00198000
         MVC   OBLOCK(32,OUTPTR),BLOCK3                            0096 00199000
*           OBLOCK(33:256)=OBLOCK(33:256)&&OBLOCK(33:256);/* @ZD00187*/ 00200000
         XC    OBLOCK+32(224,OUTPTR),OBLOCK+32(OUTPTR)             0097 00201000
*/********************************************************** @Y30LB15*/ 00202000
*/*                                                          @Y30LB15*/ 00203000
*/* INITIALIZE REMAINING BLOCKS IN TRACKS TO ZEROS WITH      @Y30LB15*/ 00204000
*/* TABLE ID OF ZERO                                         @Y30LB15*/ 00205000
*/*                                                          @Y30LB15*/ 00206000
*/********************************************************** @Y30LB15*/ 00207000
*                                                                  0098 00208000
*           OUTPTR=ADDR(UT2BUFER)+6528;/* PT PAST 1ST 24 BLKS      0098 00209000
*                                                            @ZD00187*/ 00210000
         L     OUTPTR,BUILDPTR(,R4)                                0098 00211000
         AL    OUTPTR,@CF00810                                     0098 00212000
         AH    OUTPTR,@CH00641                                     0098 00213000
*           TABLID=0;               /* TABLE ID FOR FILL BLK @Y30LB15*/ 00214000
         MVI   TABLID,X'00'                                        0099 00215000
*           DO I=1 TO 8;            /* 0 REMAIN BLKS IN TRAK @ZD00187*/ 00216000
         LA    I,1                                                 0100 00217000
@DL00100 DS    0H                                                  0101 00218000
*             CALL ZEROBLK;         /* WRIT PREFIX & 0 BLK   @Y30LB15*/ 00219000
         BAL   @14,ZEROBLK                                         0101 00220000
*           END;                    /*                       @Y30LB15*/ 00221000
         AH    I,@CH00044                                          0102 00222000
         CH    I,@CH00042                                          0102 00223000
         BNH   @DL00100                                            0102 00224000
*/********************************************************** @Y30LB15*/ 00225000
*/*                                                          @Y30LB15*/ 00226000
*/* SET UP CALL AREA AND LINK TO WRITE MODULE TO WRITE THE   @Y30LB15*/ 00227000
*/* ONE TRACK WHICH IS THE CELL MAP.                         @Y30LB15*/ 00228000
*/*                                                          @Y30LB15*/ 00229000
*/********************************************************** @Y30LB15*/ 00230000
*                                                                  0103 00231000
*           B06DCBPT=ADDR(UT2DCB);  /* SET DCB ADDR          @Y30LB15*/ 00232000
         L     @05,BUILDPTR(,R4)                                   0103 00233000
         LA    @15,UT2DCB(,@05)                                    0103 00234000
         ST    @15,B06DCBPT(,@05)                                  0103 00235000
*           B06BUFPT=ADDR(UT2BUFER);/* SET BUFFER ADDR       @Y30LB15*/ 00236000
         LR    @01,@05                                             0104 00237000
         AL    @01,@CF00810                                        0104 00238000
         ST    @01,B06BUFPT(,@05)                                  0104 00239000
*           B06TBLID=UT2TABID;      /* SPECIFY TABLE         @Y30LB15*/ 00240000
         MVC   B06TBLID(1,@05),UT2TABID(@05)                       0105 00241000
*           B06ADDR=OUTADDR;        /* SET CYL,HEAD,REC      @Y30LB15*/ 00242000
         MVC   B06ADDR(3,@05),OUTADDR(@05)                         0106 00243000
*           GEN(LINK EP=ICGDSB06);  /* WRITE NEW CELL MAP    @Y30LB15*/ 00244000
         LINK EP=ICGDSB06                                               00245000
*         END;                      /*                       @Y30LB15*/ 00246000
*       ELSE                                                       0109 00247000
*         ;                         /* ERROR FOUND RETURN    @Y30LB15*/ 00248000
@RF00083 DS    0H                                                  0110 00249000
*     END DO002;                    /*                       @Y30LB15*/ 00250000
*   ELSE                                                           0111 00251000
*     ;                             /* ERROR FOUND RETURN    @Y30LB15*/ 00252000
@RF00073 DS    0H                                                  0112 00253000
*   RETURN;                         /*                       @Y30LB15*/ 00254000
@EL00001 L     @13,4(,@13)                                         0112 00255000
@EF00001 L     @00,@SIZDATD                                        0112 00256000
         LR    @01,@10                                             0112 00257000
         FREEMAIN R,LV=(0),A=(1)                                        00258000
@ER00001 LM    @14,@12,12(@13)                                     0112 00259000
         BR    @14                                                 0112 00260000
*                                                                  0113 00261000
*/********************************************************** @Y30LB15*/ 00262000
*/*                                                          @Y30LB15*/ 00263000
*/*  PROCEDURE NAME - CREATPRC                               @Y30LB15*/ 00264000
*/*                                                          @Y30LB15*/ 00265000
*/*  FUNCTION - NEW TABLES ARE BEING BUILT. DETERMINE FOR    @Y30LB15*/ 00266000
*/*             EACH OF THE 4 POSSIBLE LIBRARIES WHETHER IT  @XD00153*/ 00267000
*/*             SHOULD BE ZEROED.  CALL THE PROPER ROUTINE   @XD00153*/ 00268000
*/*             TO HANDLE EACH CASE.                         @XD00153*/ 00269000
*/*                                                          @Y30LB15*/ 00270000
*/********************************************************** @Y30LB15*/ 00271000
*                                                                  0113 00272000
*CREATPRC:                                                         0113 00273000
*   PROCEDURE;                      /*                       @Y30LB15*/ 00274000
CREATPRC STM   @14,@05,@SA00002                                    0113 00275000
         STM   @07,@12,@SA00002+32                                 0113 00276000
*   DO LIBCNT=1 TO 4;               /*                       @Y30LB15*/ 00277000
         LA    LIBCNT,1                                            0114 00278000
@DL00114 DS    0H                                                  0115 00279000
*     IF LIBSPEC(LIBCNT)='1'B       /* IS THIS LIB DEFINED?  @Y30LB15*/ 00280000
*       THEN                        /* YES- BUILD IT         @Y30LB15*/ 00281000
         LR    @09,LIBCNT                                          0115 00282000
         MH    @09,@CH00033                                        0115 00283000
         ALR   @09,R4                                              0115 00284000
         TM    LIBSPEC-12(@09),B'10000000'                         0115 00285000
         BNO   @RF00115                                            0115 00286000
*       CALL NLIBBLD;               /*                       @Y30LB15*/ 00287000
         BAL   @14,NLIBBLD                                         0116 00288000
*     ELSE                          /* NO- ZERO 5 BLOCKS     @Y30LB15*/ 00289000
*       CALL ZEROLIB;               /*                       @Y30LB15*/ 00290000
         B     @RC00115                                            0117 00291000
@RF00115 BAL   @14,ZEROLIB                                         0117 00292000
*     IF STOPSCAN='1'B              /* ERROR FOUND?          @Y30LB15*/ 00293000
*       THEN                        /* YES                   @Y30LB15*/ 00294000
@RC00115 TM    STOPSCAN,B'10000000'                                0118 00295000
         BNO   @RF00118                                            0118 00296000
*       LIBCNT=4;                   /* FORCE EXIT FRM LOOP   @Y30LB15*/ 00297000
         LA    LIBCNT,4                                            0119 00298000
*     ELSE                                                         0120 00299000
*       ;                           /*                       @Y30LB15*/ 00300000
@RF00118 DS    0H                                                  0121 00301000
*   END;                            /*                       @Y30LB15*/ 00302000
         AH    LIBCNT,@CH00044                                     0121 00303000
         CH    LIBCNT,@CH00070                                     0121 00304000
         BNH   @DL00114                                            0121 00305000
*   RETURN;                         /*                       @Y30LB15*/ 00306000
@EL00002 DS    0H                                                  0122 00307000
@EF00002 DS    0H                                                  0122 00308000
@ER00002 LM    @14,@05,@SA00002                                    0122 00309000
         LM    @07,@12,@SA00002+32                                 0122 00310000
         BR    @14                                                 0122 00311000
*   END CREATPRC;                   /*                       @Y30LB15*/ 00312000
*                                                                  0124 00313000
*/********************************************************** @Y30LB15*/ 00314000
*/*                                                          @Y30LB15*/ 00315000
*/*  PROCEDURE NAME - RECNFPRC                               @Y30LB15*/ 00316000
*/*                                                          @Y30LB15*/ 00317000
*/*  FUNCTION - ON A RECONFIGURE FOR EACH OF THE 4 POSSIBLE  @Y30LB15*/ 00318000
*/*             LIBRARIES, DETERMINE IF THERE IS A NEW       @XD00153*/ 00319000
*/*             LIBRARY BEING ADDED.  IF NOT, TEST FOR NO    @XD00153*/ 00320000
*/*             LIBRARY DEFINED.                             @XD00153*/ 00321000
*/*             IF A LIBRARY WAS PRESENT, DETERMINE IF NEW   @XD00153*/ 00322000
*/*             LIBRARY IS SAME SIZE OR NOT.  IF NEW         @XD00153*/ 00323000
*/*             LIBRARY IS SAME SIZE, CALL 'COPYLIB', IF NOT @XD00153*/ 00324000
*/*             CALL 'DIFFLIB'.                              @XD00153*/ 00325000
*/*                                                          @Y30LB15*/ 00326000
*/********************************************************** @Y30LB15*/ 00327000
*                                                                  0124 00328000
*RECNFPRC:                                                         0124 00329000
*   PROCEDURE;                      /*                       @Y30LB15*/ 00330000
RECNFPRC STM   @14,@05,@SA00003                                    0124 00331000
         STM   @07,@12,@SA00003+32                                 0124 00332000
*   CALL READUT1;                   /* READ IN OLD CELL MAP  @Y30LB15*/ 00333000
         BAL   @14,READUT1                                         0125 00334000
*   IF STOPSCAN='0'B                /* ERROR FOUND?          @Y30LB15*/ 00335000
*     THEN                          /* NO-CONTINUE           @Y30LB15*/ 00336000
         TM    STOPSCAN,B'10000000'                                0126 00337000
         BNZ   @RF00126                                            0126 00338000
*     DO LIBCNT=1 TO 4;             /* LOOP FOR 4 LOGICL LIB @Y30LB15*/ 00339000
         LA    LIBCNT,1                                            0127 00340000
@DL00127 DS    0H                                                  0128 00341000
*/*********************************************************  @Y30LB15*/ 00342000
*/*                                                          @Y30LB15*/ 00343000
*/*   SET POINTERS TO BEGINNING OF NEXT LIBRARY IN INPUT     @Y30LB15*/ 00344000
*/*   AND OUTPUT BUFFERS                                     @Y30LB15*/ 00345000
*/*                                                          @Y30LB15*/ 00346000
*/*********************************************************  @Y30LB15*/ 00347000
*                                                                  0128 00348000
*       OUTPTR=ADDR(UT2BUFER)+(LIBCNT-1)*1360;/*             @Y30LB15*/ 00349000
         L     @09,BUILDPTR(,R4)                                   0128 00350000
         LR    OUTPTR,@09                                          0128 00351000
         AL    OUTPTR,@CF00810                                     0128 00352000
         LR    @07,LIBCNT                                          0128 00353000
         BCTR  @07,0                                               0128 00354000
         LR    @05,@07                                             0128 00355000
         MH    @05,@CH00652                                        0128 00356000
         ALR   OUTPTR,@05                                          0128 00357000
*       INPTR=ADDR(UT1BUFER)+(LIBCNT-1)*1320;/*              @Y30LB15*/ 00358000
         AL    @09,@CF00811                                        0129 00359000
         MH    @07,@CH00653                                        0129 00360000
         ALR   @09,@07                                             0129 00361000
         ST    @09,INPTR                                           0129 00362000
*       CALL OLDLIBSZ;              /* DETERMINE SIZ OLDLIB  @Y30LB15*/ 00363000
         BAL   @14,OLDLIBSZ                                        0130 00364000
*       IF LIBSPEC(LIBCNT)='0'B     /* IS NEWLIB UNDEFINED?  @Y30LB15*/ 00365000
*         THEN                      /* YES                   @Y30LB15*/ 00366000
         LR    @09,LIBCNT                                          0131 00367000
         MH    @09,@CH00033                                        0131 00368000
         ALR   @09,R4                                              0131 00369000
         TM    LIBSPEC-12(@09),B'10000000'                         0131 00370000
         BNZ   @RF00131                                            0131 00371000
*         CALL ZEROLIB;             /* ZERO 5 BLOCKS         @Y30LB15*/ 00372000
         BAL   @14,ZEROLIB                                         0132 00373000
*       ELSE                        /* LIB WAS DEFINED       @Y30LB15*/ 00374000
*         IF OLIBSIZ='0'            /* WAS LIB DEFINED?      @Y30LB15*/ 00375000
*           THEN                    /* YES                   @Y30LB15*/ 00376000
         B     @RC00131                                            0133 00377000
@RF00131 CLI   OLIBSIZ,C'0'                                        0133 00378000
         BNE   @RF00133                                            0133 00379000
*           CALL NLIBBLD;           /* BUILD NEWLIB CELL MAP @Y30LB15*/ 00380000
         BAL   @14,NLIBBLD                                         0134 00381000
*         ELSE                      /* YES                   @Y30LB15*/ 00382000
*           IF OLIBSIZ=LIBSIZE(LIBCNT)/* OLD & NEWLIB SAM SIZ?     0135 00383000
*                                                            @Y30LB15*/ 00384000
*             THEN                  /* YES                   @Y30LB15*/ 00385000
         B     @RC00133                                            0135 00386000
@RF00133 LR    @09,LIBCNT                                          0135 00387000
         MH    @09,@CH00033                                        0135 00388000
         ALR   @09,R4                                              0135 00389000
         CLC   OLIBSIZ(1),LIBSIZE-12(@09)                          0135 00390000
         BNE   @RF00135                                            0135 00391000
*             CALL COPYLIB;         /* COPY OLD CELL MAP OVR @Y30LB15*/ 00392000
         BAL   @14,COPYLIB                                         0136 00393000
*           ELSE                    /* NO                    @Y30LB15*/ 00394000
*             CALL DIFFLIB;         /* LIB SIZE DIFFERENT    @Y30LB15*/ 00395000
         B     @RC00135                                            0137 00396000
@RF00135 BAL   @14,DIFFLIB                                         0137 00397000
*       IF STOPSCAN='1'B            /* ERROR FOUND?          @Y30LB15*/ 00398000
*         THEN                      /* YES                   @Y30LB15*/ 00399000
@RC00135 DS    0H                                                  0138 00400000
@RC00133 DS    0H                                                  0138 00401000
@RC00131 TM    STOPSCAN,B'10000000'                                0138 00402000
         BNO   @RF00138                                            0138 00403000
*         LIBCNT=4;                 /* FORCE EXIT FRM LOOP   @Y30LB15*/ 00404000
         LA    LIBCNT,4                                            0139 00405000
*       ELSE                                                       0140 00406000
*         ;                         /*                       @Y30LB15*/ 00407000
@RF00138 DS    0H                                                  0141 00408000
*     END;                          /*                       @Y30LB15*/ 00409000
         AH    LIBCNT,@CH00044                                     0141 00410000
         CH    LIBCNT,@CH00070                                     0141 00411000
         BNH   @DL00127                                            0141 00412000
*   ELSE                                                           0142 00413000
*     ;                             /* YES-ERROR,RETURN      @Y30LB15*/ 00414000
@RF00126 DS    0H                                                  0143 00415000
*   RETURN;                         /*                       @Y30LB15*/ 00416000
@EL00003 DS    0H                                                  0143 00417000
@EF00003 DS    0H                                                  0143 00418000
@ER00003 LM    @14,@05,@SA00003                                    0143 00419000
         LM    @07,@12,@SA00003+32                                 0143 00420000
         BR    @14                                                 0143 00421000
*   END RECNFPRC;                   /*                       @Y30LB15*/ 00422000
*                                                                  0145 00423000
*/********************************************************** @Y30LB15*/ 00424000
*/*                                                          @Y30LB15*/ 00425000
*/*  PROCEDURE NAME - NLIBBLD                                @Y30LB15*/ 00426000
*/*                                                          @Y30LB15*/ 00427000
*/*  FUNCTION - A NEW CELL MAP IS BEING BUILT. CALL THE      @Y30LB15*/ 00428000
*/*             ROUTINE (BUILDA1, BUILDA2, BUILDA3, OR       @XD00153*/ 00429000
*/*             BUILDA4) TO BUILD THE CORRECT CELL MAP       @XD00153*/ 00430000
*/*             ACCORDING TO THE SIZE OF THE LIBRARY.        @XD00153*/ 00431000
*/*                                                          @Y30LB15*/ 00432000
*/********************************************************** @Y30LB15*/ 00433000
*                                                                  0145 00434000
*NLIBBLD:                                                          0145 00435000
*   PROCEDURE;                      /*                       @Y30LB15*/ 00436000
NLIBBLD  STM   @14,@02,@SA00004                                    0145 00437000
         STM   @04,@05,@SA00004+20                                 0145 00438000
         STM   @07,@12,@SA00004+28                                 0145 00439000
*   IF LIBSIZE(LIBCNT)='1'          /* IF AN A1 CALL ROUTINE @Y30LB15*/ 00440000
*     THEN                          /*                       @Y30LB15*/ 00441000
         LR    @09,LIBCNT                                          0146 00442000
         MH    @09,@CH00033                                        0146 00443000
         ALR   @09,R4                                              0146 00444000
         CLI   LIBSIZE-12(@09),C'1'                                0146 00445000
         BNE   @RF00146                                            0146 00446000
*     CALL BUILDA1;                 /*                       @Y30LB15*/ 00447000
         BAL   @14,BUILDA1                                         0147 00448000
*   ELSE                            /*                       @Y30LB15*/ 00449000
*     IF LIBSIZE(LIBCNT)='2'        /* IF AN A2 CALL ROUTINE @Y30LB15*/ 00450000
*       THEN                        /*                       @Y30LB15*/ 00451000
         B     @RC00146                                            0148 00452000
@RF00146 LR    @09,LIBCNT                                          0148 00453000
         MH    @09,@CH00033                                        0148 00454000
         ALR   @09,R4                                              0148 00455000
         CLI   LIBSIZE-12(@09),C'2'                                0148 00456000
         BNE   @RF00148                                            0148 00457000
*       CALL BUILDA2;               /*                       @Y30LB15*/ 00458000
         BAL   @14,BUILDA2                                         0149 00459000
*     ELSE                          /*                       @Y30LB15*/ 00460000
*       IF LIBSIZE(LIBCNT)='3'      /* IF AN A3 CALL ROUTINE @Y30LB15*/ 00461000
*         THEN                      /*                       @Y30LB15*/ 00462000
         B     @RC00148                                            0150 00463000
@RF00148 LR    @09,LIBCNT                                          0150 00464000
         MH    @09,@CH00033                                        0150 00465000
         ALR   @09,R4                                              0150 00466000
         CLI   LIBSIZE-12(@09),C'3'                                0150 00467000
         BNE   @RF00150                                            0150 00468000
*         CALL BUILDA3;             /*                       @Y30LB15*/ 00469000
         BAL   @14,BUILDA3                                         0151 00470000
*       ELSE                        /* MUST BE AN A4 LIBRARY @Y30LB15*/ 00471000
*         CALL BUILDA4;             /*                       @Y30LB15*/ 00472000
         B     @RC00150                                            0152 00473000
@RF00150 BAL   @14,BUILDA4                                         0152 00474000
*   RETURN;                         /*                       @Y30LB15*/ 00475000
@EL00004 DS    0H                                                  0153 00476000
@EF00004 DS    0H                                                  0153 00477000
@ER00004 LM    @14,@02,@SA00004                                    0153 00478000
         LM    @04,@05,@SA00004+20                                 0153 00479000
         LM    @07,@12,@SA00004+28                                 0153 00480000
         BR    @14                                                 0153 00481000
*   END NLIBBLD;                    /*                       @Y30LB15*/ 00482000
         B     @EL00004                                            0154 00483000
*                                                                  0155 00484000
*/********************************************************** @Y30LB15*/ 00485000
*/*                                                          @Y30LB15*/ 00486000
*/*  PROCEDURE NAME - ZEROLIB                                @Y30LB15*/ 00487000
*/*                                                          @Y30LB15*/ 00488000
*/*  FUNCTION - THE LIBRARY IS NOT DEFINED AND MUST BE       @Y30LB15*/ 00489000
*/*             ZEROED.  A PREFIX IS WRITTEN FOR EACH OF THE @XD00153*/ 00490000
*/*             5 BLOCKS, INCLUDING THE TABLE ID.            @XD00153*/ 00491000
*/*                                                          @Y30LB15*/ 00492000
*/********************************************************** @Y30LB15*/ 00493000
*                                                                  0155 00494000
*ZEROLIB:                                                          0155 00495000
*   PROCEDURE;                      /*                       @Y30LB15*/ 00496000
ZEROLIB  STM   @14,@02,@SA00005                                    0155 00497000
         STM   @04,@05,@SA00005+20                                 0155 00498000
         STM   @07,@12,@SA00005+28                                 0155 00499000
*   DO I=1 TO 5;                    /*                       @Y30LB15*/ 00500000
         LA    I,1                                                 0156 00501000
@DL00156 DS    0H                                                  0157 00502000
*     CALL ZEROBLK;                 /*                       @Y30LB15*/ 00503000
         BAL   @14,ZEROBLK                                         0157 00504000
*   END;                            /*                       @Y30LB15*/ 00505000
         AH    I,@CH00044                                          0158 00506000
         CH    I,@CH00121                                          0158 00507000
         BNH   @DL00156                                            0158 00508000
*   RETURN;                         /*                       @Y30LB15*/ 00509000
@EL00005 DS    0H                                                  0159 00510000
@EF00005 DS    0H                                                  0159 00511000
@ER00005 LM    @14,@02,@SA00005                                    0159 00512000
         LM    @04,@05,@SA00005+20                                 0159 00513000
         LM    @07,@12,@SA00005+28                                 0159 00514000
         BR    @14                                                 0159 00515000
*   END ZEROLIB;                    /*                       @Y30LB15*/ 00516000
*                                                                  0161 00517000
*/********************************************************** @Y30LB15*/ 00518000
*/*                                                          @Y30LB15*/ 00519000
*/*  PROCEDURE NAME - ZEROBLK                                @Y30LB15*/ 00520000
*/*                                                          @Y30LB15*/ 00521000
*/*  FUNCTION - WRITE A PREFIX FOR A BLOCK AND ZERO THE 256  @Y30LB15*/ 00522000
*/*             BYTES IN THE BLOCK.                          @XD00153*/ 00523000
*/*                                                          @Y30LB15*/ 00524000
*/********************************************************** @Y30LB15*/ 00525000
*                                                                  0161 00526000
*ZEROBLK:                                                          0161 00527000
*   PROCEDURE;                      /*                       @Y30LB15*/ 00528000
ZEROBLK  STM   @14,@02,@SA00006                                    0161 00529000
         STM   @04,@05,@SA00006+20                                 0161 00530000
         STM   @07,@12,@SA00006+28                                 0161 00531000
*   CALL WRITPRFX;                  /* WRITE RECORD PREFIX   @Y30LB15*/ 00532000
         BAL   @14,WRITPRFX                                        0162 00533000
*   OBLOCK=OBLOCK&&OBLOCK;          /* ZERO DATA PART OF BLK @Y30LB15*/ 00534000
         XC    OBLOCK(256,OUTPTR),OBLOCK(OUTPTR)                   0163 00535000
*   OUTPTR=OUTPTR+272;              /* UPDAT PTR TO NEXT BLK @Y30LB15*/ 00536000
         AH    OUTPTR,@CH00393                                     0164 00537000
*   RETURN;                         /*                       @Y30LB15*/ 00538000
@EL00006 DS    0H                                                  0165 00539000
@EF00006 DS    0H                                                  0165 00540000
@ER00006 LM    @14,@02,@SA00006                                    0165 00541000
         LM    @04,@05,@SA00006+20                                 0165 00542000
         LM    @07,@12,@SA00006+28                                 0165 00543000
         BR    @14                                                 0165 00544000
*   END ZEROBLK;                    /*                       @Y30LB15*/ 00545000
*                                                                  0167 00546000
*/********************************************************** @Y30LB15*/ 00547000
*/*                                                          @Y30LB15*/ 00548000
*/*  PROCEDURE NAME - WRITPRFX                               @Y30LB15*/ 00549000
*/*                                                          @Y30LB15*/ 00550000
*/*  FUNCTION - FILL IN THE PREFIX OF A BLOCK WITH THE TABLE @Y30LB15*/ 00551000
*/*             ID, CYLINDER, HEAD, AND RECORD ADDRESS.      @XD00153*/ 00552000
*/*             ZERO THE FILLER AREA.  UPDATE THE RECORD     @XD00153*/ 00553000
*/*             NUMBER FOR THE NEXT BLOCK AND SET THE DATA   @XD00153*/ 00554000
*/*             POINTER PAST THE PREFIX.                     @XD00153*/ 00555000
*/*                                                          @Y30LB15*/ 00556000
*/********************************************************** @Y30LB15*/ 00557000
*                                                                  0167 00558000
*WRITPRFX:                                                         0167 00559000
*   PROCEDURE;                      /*                       @Y30LB15*/ 00560000
WRITPRFX STM   @14,@04,12(@13)                                     0167 00561000
         STM   @07,@12,48(@13)                                     0167 00562000
*   OTABLID=TABLID;                 /* GET TABLE ID          @Y30LB15*/ 00563000
         MVC   OTABLID(1,OUTPTR),TABLID                            0168 00564000
*   OCYL=UT2VCYL;                   /* GET CY OF TABLE       @Y30LB15*/ 00565000
         L     @07,BUILDPTR(,R4)                                   0169 00566000
         MVC   OCYL(1,OUTPTR),UT2VCYL(@07)                         0169 00567000
*   OHEAD=UT2VHEAD;                 /* GET TRACK OF TABLE    @Y30LB15*/ 00568000
         MVC   OHEAD(1,OUTPTR),UT2VHEAD(@07)                       0170 00569000
*   OREC=RECCNT;                    /* GET RECORD NUMBER     @Y30LB15*/ 00570000
         STC   RECCNT,OREC(,OUTPTR)                                0171 00571000
*   OFILL=0;                        /* ZERO FILL AREA        @Y30LB15*/ 00572000
         SLR   @07,@07                                             0172 00573000
         ST    @07,OFILL(,OUTPTR)                                  0172 00574000
*   RECCNT=RECCNT+1;                /* UPDATE FOR NEXT CALL  @Y30LB15*/ 00575000
         AH    RECCNT,@CH00044                                     0173 00576000
*   BLKPTR=OUTPTR+16;               /* SET PTR STRT NEWBLK   @Y30LB15*/ 00577000
         LA    BLKPTR,16                                           0174 00578000
         ALR   BLKPTR,OUTPTR                                       0174 00579000
*   RETURN;                         /*                       @Y30LB15*/ 00580000
@EL00007 DS    0H                                                  0175 00581000
@EF00007 DS    0H                                                  0175 00582000
@ER00007 LM    @14,@04,12(@13)                                     0175 00583000
         LM    @07,@12,48(@13)                                     0175 00584000
         BR    @14                                                 0175 00585000
*   END WRITPRFX;                   /*                       @Y30LB15*/ 00586000
*                                                                  0177 00587000
*/********************************************************** @Y30LB15*/ 00588000
*/*                                                          @Y30LB15*/ 00589000
*/*  PROCEDURE NAME - BUILDA1                                @Y30LB15*/ 00590000
*/*                                                          @Y30LB15*/ 00591000
*/*  FUNCTION - THE LIBRARY HAS JUST ONE FRAME. THE CUBE     @Y30LB15*/ 00592000
*/*             POINTER LIST ONLY HAS POINTERS TO CUBES IN   @XD00153*/ 00593000
*/*             THE ONE FRAME AND ONLY THE CELLS IN THAT     @XD00153*/ 00594000
*/*             FRAME ARE MADE AVAILABLE.                    @XD00153*/ 00595000
*/*                                                          @Y30LB15*/ 00596000
*/********************************************************** @Y30LB15*/ 00597000
*                                                                  0177 00598000
*BUILDA1:                                                          0177 00599000
*   PROCEDURE;                      /*                       @Y30LB15*/ 00600000
BUILDA1  STM   @14,@02,@SA00008                                    0177 00601000
         STM   @04,@05,@SA00008+20                                 0177 00602000
         STM   @07,@12,@SA00008+28                                 0177 00603000
*   CALL WRITPRFX;                  /* WRIT PREFIX FOR HDR   @Y30LB15*/ 00604000
         BAL   @14,WRITPRFX                                        0178 00605000
*   OBLOCK=A1HDR;                   /* WRITE A1 HEADER BLK   @Y30LB15*/ 00606000
         MVC   OBLOCK(256,OUTPTR),A1HDR                            0179 00607000
*   IF LIBMAP(LIBCNT)='U'           /* WAS USER EXIT PRESNT? @Y30LB15*/ 00608000
*     THEN                          /* YES                   @Y30LB15*/ 00609000
         LR    @09,LIBCNT                                          0180 00610000
         MH    @09,@CH00033                                        0180 00611000
         ALR   @09,R4                                              0180 00612000
         CLI   LIBMAP-12(@09),C'U'                                 0180 00613000
         BNE   @RF00180                                            0180 00614000
*     CALL USEREXIT;                /*                       @Y30LB15*/ 00615000
         BAL   @14,USEREXIT                                        0181 00616000
*   ELSE                                                           0182 00617000
*     ;                             /* NO-CONTINUE USE STAND @Y30LB15*/ 00618000
@RF00180 DS    0H                                                  0183 00619000
*   OUTPTR=OUTPTR+272;              /* INCRMNT PTR TO BLK0   @Y30LB15*/ 00620000
         AH    OUTPTR,@CH00393                                     0183 00621000
*/********************************************************** @Y30LB15*/ 00622000
*/*                                                          @Y30LB15*/ 00623000
*/*   WRITE PREFIX AND ZERO BLOCK FOR DATA BLOCKS 0 AND 1    @Y30LB15*/ 00624000
*/*                                                          @Y30LB15*/ 00625000
*/********************************************************** @Y30LB15*/ 00626000
*                                                                  0184 00627000
*   DO I=1 TO 2;                    /*                       @Y30LB15*/ 00628000
         LA    I,1                                                 0184 00629000
@DL00184 DS    0H                                                  0185 00630000
*     CALL ZEROBLK;                 /* WRITE PREFIX AND 0BLK @Y30LB15*/ 00631000
         BAL   @14,ZEROBLK                                         0185 00632000
*   END;                            /*                       @Y30LB15*/ 00633000
         AH    I,@CH00044                                          0186 00634000
         CH    I,@CH00052                                          0186 00635000
         BNH   @DL00184                                            0186 00636000
*   CALL WRITPRFX;                  /* WRIT PREFIX DATA BLK2 @Y30LB15*/ 00637000
         BAL   @14,WRITPRFX                                        0187 00638000
*   DO I=1 TO 5;                    /* ZERO 5 CHUNKS OF BLK  @Y30LB15*/ 00639000
         LA    I,1                                                 0188 00640000
@DL00188 DS    0H                                                  0189 00641000
*     CHUNK=ZEROCHNK;               /*                       @Y30LB15*/ 00642000
         MVC   CHUNK(32,BLKPTR),ZEROCHNK                           0189 00643000
*     BLKPTR=BLKPTR+32;             /* UPDATE PTR NEXT CHUNK @Y30LB15*/ 00644000
         AH    BLKPTR,@CH00309                                     0190 00645000
*   END;                            /*                       @Y30LB15*/ 00646000
         AH    I,@CH00044                                          0191 00647000
         CH    I,@CH00121                                          0191 00648000
         BNH   @DL00188                                            0191 00649000
*/********************************************************** @Y30LB15*/ 00650000
*/*                                                          @Y30LB15*/ 00651000
*/* PUT A1 LIB CELL MAP IN PLACE IN END OF BLOCK 2 AND       @Y30LB15*/ 00652000
*/* BEGINNING OF BLOCK 3.                                    @Y30LB15*/ 00653000
*/*                                                          @Y30LB15*/ 00654000
*/********************************************************** @Y30LB15*/ 00655000
*                                                                  0192 00656000
*   CHUNK=SUBBLK2(6);               /* COPY 1ST CHUNK        @Y30LB15*/ 00657000
         MVC   CHUNK(32,BLKPTR),SUBBLK2+160                        0192 00658000
*   CHUNK(1:1)=CHUNK(1:1)&CUBEOR1(1);/* CE CELL UNAVAILABLE  @Y30LB15*/ 00659000
         SLR   @09,@09                                             0193 00660000
         IC    @09,CHUNK(,BLKPTR)                                  0193 00661000
         MVC   @ZT00003+3(1),CUBEOR1                               0193 00662000
         N     @09,@ZT00003                                        0193 00663000
         STC   @09,CHUNK(,BLKPTR)                                  0193 00664000
*   BLKPTR=BLKPTR+32;               /* POINT TO NEXT CHUNK   @Y30LB15*/ 00665000
         AH    BLKPTR,@CH00309                                     0194 00666000
*   DO I=7 TO 8;                    /*                       @Y30LB15*/ 00667000
         LA    I,7                                                 0195 00668000
@DL00195 DS    0H                                                  0196 00669000
*     CHUNK=SUBBLK2(I);             /*                       @Y30LB15*/ 00670000
         LR    @09,I                                               0196 00671000
         SLA   @09,5                                               0196 00672000
         LA    @02,SUBBLK2-32(@09)                                 0196 00673000
         MVC   CHUNK(32,BLKPTR),0(@02)                             0196 00674000
*     BLKPTR=BLKPTR+32;             /*                       @Y30LB15*/ 00675000
         AH    BLKPTR,@CH00309                                     0197 00676000
*   END;                            /*                       @Y30LB15*/ 00677000
         AH    I,@CH00044                                          0198 00678000
         CH    I,@CH00042                                          0198 00679000
         BNH   @DL00195                                            0198 00680000
*   CALL WRITBLK3;                  /* WRIT FINAL BLK OF LIB @Y30LB15*/ 00681000
         BAL   @14,WRITBLK3                                        0199 00682000
*   RETURN;                         /*                       @Y30LB15*/ 00683000
@EL00008 DS    0H                                                  0200 00684000
@EF00008 DS    0H                                                  0200 00685000
@ER00008 LM    @14,@02,@SA00008                                    0200 00686000
         LM    @04,@05,@SA00008+20                                 0200 00687000
         LM    @07,@12,@SA00008+28                                 0200 00688000
         BR    @14                                                 0200 00689000
*   END BUILDA1;                    /*                       @Y30LB15*/ 00690000
*                                                                  0202 00691000
*/********************************************************** @Y30LB15*/ 00692000
*/*                                                          @Y30LB15*/ 00693000
*/*  PROCEDURE NAME - BUILDA2                                @Y30LB15*/ 00694000
*/*                                                          @Y30LB15*/ 00695000
*/*  FUNCTION - THE LIBRARY HAS TWO FRAMES. THE CUBE         @Y30LB15*/ 00696000
*/*             POINTER LIST HAS POINTERS TO CUBES IN THE    @XD00153*/ 00697000
*/*             TWO FRAMES AND ONLY CELLS IN THE TWO FRAMES  @XD00153*/ 00698000
*/*             ARE MADE AVAILABLE.                          @XD00153*/ 00699000
*/*                                                          @Y30LB15*/ 00700000
*/********************************************************** @Y30LB15*/ 00701000
*                                                                  0202 00702000
*BUILDA2:                                                          0202 00703000
*   PROCEDURE;                      /*                       @Y30LB15*/ 00704000
BUILDA2  STM   @14,@02,@SA00009                                    0202 00705000
         STM   @04,@05,@SA00009+20                                 0202 00706000
         STM   @07,@12,@SA00009+28                                 0202 00707000
*   CALL WRITPRFX;                  /* WRIT PREFIX FOR HDR   @Y30LB15*/ 00708000
         BAL   @14,WRITPRFX                                        0203 00709000
*   OBLOCK=A2HDR;                   /* WRITE A2 HEADER BLK   @Y30LB15*/ 00710000
         MVC   OBLOCK(256,OUTPTR),A2HDR                            0204 00711000
*   IF LIBMAP(LIBCNT)='U'           /* WAS USER EXIT PRESNT? @Y30LB15*/ 00712000
*     THEN                          /* YES                   @Y30LB15*/ 00713000
         LR    @09,LIBCNT                                          0205 00714000
         MH    @09,@CH00033                                        0205 00715000
         ALR   @09,R4                                              0205 00716000
         CLI   LIBMAP-12(@09),C'U'                                 0205 00717000
         BNE   @RF00205                                            0205 00718000
*     CALL USEREXIT;                /*                       @Y30LB15*/ 00719000
         BAL   @14,USEREXIT                                        0206 00720000
*   ELSE                                                           0207 00721000
*     ;                             /* NO-CONTINUE USE STAND @Y30LB15*/ 00722000
@RF00205 DS    0H                                                  0208 00723000
*   OUTPTR=OUTPTR+272;              /* INCRMNT PTR TO BLK0   @Y30LB15*/ 00724000
         AH    OUTPTR,@CH00393                                     0208 00725000
*/********************************************************** @Y30LB15*/ 00726000
*/*                                                          @Y30LB15*/ 00727000
*/*   WRITE PREFIX AND ZERO DATA BLOCK 0                     @Y30LB15*/ 00728000
*/*   WRITE PREFIX AND ZERO 192 BYTES OF DATA BLOCK 1        @Y30LB15*/ 00729000
*/*                                                          @Y30LB15*/ 00730000
*/********************************************************** @Y30LB15*/ 00731000
*                                                                  0209 00732000
*   CALL ZEROBLK;                   /*                       @Y30LB15*/ 00733000
         BAL   @14,ZEROBLK                                         0209 00734000
*   CALL WRITPRFX;                  /*                       @Y30LB15*/ 00735000
         BAL   @14,WRITPRFX                                        0210 00736000
*   DO I=1 TO 6;                    /* 1ST 6 CHUNKS 192 BYTS @Y30LB15*/ 00737000
         LA    I,1                                                 0211 00738000
@DL00211 DS    0H                                                  0212 00739000
*     CHUNK=ZEROCHNK;               /*                       @Y30LB15*/ 00740000
         MVC   CHUNK(32,BLKPTR),ZEROCHNK                           0212 00741000
*     BLKPTR=BLKPTR+32;             /* PTR TO NEXT CHUNK     @Y30LB15*/ 00742000
         AH    BLKPTR,@CH00309                                     0213 00743000
*   END;                            /*                       @Y30LB15*/ 00744000
         AH    I,@CH00044                                          0214 00745000
         CH    I,@CH00227                                          0214 00746000
         BNH   @DL00211                                            0214 00747000
*/********************************************************** @Y30LB15*/ 00748000
*/*                                                          @Y30LB15*/ 00749000
*/*   WRITE CELL MAP FOR A2 LIBRARY                          @Y30LB15*/ 00750000
*/*                                                          @Y30LB15*/ 00751000
*/********************************************************** @Y30LB15*/ 00752000
*                                                                  0215 00753000
*   CHUNK=SUBBLK1(7);               /*                       @Y30LB15*/ 00754000
         MVC   CHUNK(32,BLKPTR),SUBBLK1+192                        0215 00755000
*   CHUNK(1:1)=CHUNK(1:1)&CUBEOR1(1);/* CE CELL UNAVAILABLE  @Y30LB15*/ 00756000
         SLR   @09,@09                                             0216 00757000
         IC    @09,CHUNK(,BLKPTR)                                  0216 00758000
         MVC   @ZT00003+3(1),CUBEOR1                               0216 00759000
         N     @09,@ZT00003                                        0216 00760000
         STC   @09,CHUNK(,BLKPTR)                                  0216 00761000
*   BLKPTR=BLKPTR+32;               /*                       @Y30LB15*/ 00762000
         AH    BLKPTR,@CH00309                                     0217 00763000
*   CHUNK=SUBBLK1(8);               /*                       @Y30LB15*/ 00764000
         MVC   CHUNK(32,BLKPTR),SUBBLK1+224                        0218 00765000
*   OUTPTR=OUTPTR+272;              /* UPDATE PTR TO NEXTBLK @Y30LB15*/ 00766000
         AH    OUTPTR,@CH00393                                     0219 00767000
*   CALL WRITPRFX;                  /* WRIT PREFIX DATA BLK2 @Y30LB15*/ 00768000
         BAL   @14,WRITPRFX                                        0220 00769000
*   OBLOCK=BLOCK2;                  /* COPY IN ENTIRE BLK    @Y30LB15*/ 00770000
         MVC   OBLOCK(256,OUTPTR),BLOCK2                           0221 00771000
*   CALL WRITBLK3;                  /* WRIT FINAL BLK OF LIB @Y30LB15*/ 00772000
         BAL   @14,WRITBLK3                                        0222 00773000
*   RETURN;                         /*                       @Y30LB15*/ 00774000
@EL00009 DS    0H                                                  0223 00775000
@EF00009 DS    0H                                                  0223 00776000
@ER00009 LM    @14,@02,@SA00009                                    0223 00777000
         LM    @04,@05,@SA00009+20                                 0223 00778000
         LM    @07,@12,@SA00009+28                                 0223 00779000
         BR    @14                                                 0223 00780000
*   END BUILDA2;                    /*                       @Y30LB15*/ 00781000
*                                                                  0225 00782000
*/********************************************************** @Y30LB15*/ 00783000
*/*                                                          @Y30LB15*/ 00784000
*/*  PROCEDURE NAME - BUILDA3                                @Y30LB15*/ 00785000
*/*                                                          @Y30LB15*/ 00786000
*/*  FUNCTION - THE LIBRARY HAS THREE FRAMES. THE CUBE       @Y30LB15*/ 00787000
*/*             POINTER LIST HAS POINTERS TO CUBES IN THE    @XD00153*/ 00788000
*/*             THREE FRAMES AND ONLY CELLS IN THE THREE     @XD00153*/ 00789000
*/*             FRAMES ARE MADE AVAILABLE.                   @XD00153*/ 00790000
*/*                                                          @Y30LB15*/ 00791000
*/********************************************************** @Y30LB15*/ 00792000
*                                                                  0225 00793000
*BUILDA3:                                                          0225 00794000
*   PROCEDURE;                      /*                       @Y30LB15*/ 00795000
BUILDA3  STM   @14,@02,@SA00010                                    0225 00796000
         STM   @04,@05,@SA00010+20                                 0225 00797000
         STM   @07,@12,@SA00010+28                                 0225 00798000
*   CALL WRITPRFX;                  /* WRIT PREFIX FOR HDR   @Y30LB15*/ 00799000
         BAL   @14,WRITPRFX                                        0226 00800000
*   OBLOCK=A3HDR;                   /* WRITE A3 HEADER BLK   @Y30LB15*/ 00801000
         MVC   OBLOCK(256,OUTPTR),A3HDR                            0227 00802000
*   IF LIBMAP(LIBCNT)='U'           /* WAS USER EXIT PRESNT? @Y30LB15*/ 00803000
*     THEN                          /* YES                   @Y30LB15*/ 00804000
         LR    @09,LIBCNT                                          0228 00805000
         MH    @09,@CH00033                                        0228 00806000
         ALR   @09,R4                                              0228 00807000
         CLI   LIBMAP-12(@09),C'U'                                 0228 00808000
         BNE   @RF00228                                            0228 00809000
*     CALL USEREXIT;                /*                       @Y30LB15*/ 00810000
         BAL   @14,USEREXIT                                        0229 00811000
*   ELSE                                                           0230 00812000
*     ;                             /* NO-CONTINUE USE STAND @Y30LB15*/ 00813000
@RF00228 DS    0H                                                  0231 00814000
*   OUTPTR=OUTPTR+272;              /* INCRMNT PTR TO BLK0   @Y30LB15*/ 00815000
         AH    OUTPTR,@CH00393                                     0231 00816000
*/********************************************************** @Y30LB15*/ 00817000
*/*                                                          @Y30LB15*/ 00818000
*/*   WRITE PREFIX AND ZERO 224 BYTES OF DATA BLOCK 0        @Y30LB15*/ 00819000
*/*                                                          @Y30LB15*/ 00820000
*/********************************************************** @Y30LB15*/ 00821000
*                                                                  0232 00822000
*   CALL WRITPRFX;                  /*                       @Y30LB15*/ 00823000
         BAL   @14,WRITPRFX                                        0232 00824000
*   DO I=1 TO 7;                    /* 1ST 7 CHUNKS 242 BYTS @Y30LB15*/ 00825000
         LA    I,1                                                 0233 00826000
@DL00233 DS    0H                                                  0234 00827000
*     CHUNK=ZEROCHNK;               /*                       @Y30LB15*/ 00828000
         MVC   CHUNK(32,BLKPTR),ZEROCHNK                           0234 00829000
*     BLKPTR=BLKPTR+32;             /* PTR TO NEXT CHUNK     @Y30LB15*/ 00830000
         AH    BLKPTR,@CH00309                                     0235 00831000
*   END;                            /*                       @Y30LB15*/ 00832000
         AH    I,@CH00044                                          0236 00833000
         CH    I,@CH00134                                          0236 00834000
         BNH   @DL00233                                            0236 00835000
*/********************************************************** @Y30LB15*/ 00836000
*/*                                                          @Y30LB15*/ 00837000
*/*   WRITE CELL MAP FOR A3 LIBRARY                          @Y30LB15*/ 00838000
*/*                                                          @Y30LB15*/ 00839000
*/********************************************************** @Y30LB15*/ 00840000
*                                                                  0237 00841000
*   CHUNK=SUBBLK0(8);               /* WRITE LAST CHNK BLK 0 @Y30LB15*/ 00842000
         MVC   CHUNK(32,BLKPTR),SUBBLK0+224                        0237 00843000
*   CHUNK(1:1)=CHUNK(1:1)&CUBEOR1(1);/* CE CELL UNAVAILABLE  @Y30LB15*/ 00844000
         SLR   @09,@09                                             0238 00845000
         IC    @09,CHUNK(,BLKPTR)                                  0238 00846000
         MVC   @ZT00003+3(1),CUBEOR1                               0238 00847000
         N     @09,@ZT00003                                        0238 00848000
         STC   @09,CHUNK(,BLKPTR)                                  0238 00849000
*   OUTPTR=OUTPTR+272;              /* UPDATE PTR TO NEXTBLK @Y30LB15*/ 00850000
         AH    OUTPTR,@CH00393                                     0239 00851000
*   CALL WRITPRFX;                  /* WRIT PREFIX DATA BLK1 @Y30LB15*/ 00852000
         BAL   @14,WRITPRFX                                        0240 00853000
*   OBLOCK=BLOCK1;                  /* COPY IN ENTIRE BLK    @Y30LB15*/ 00854000
         MVC   OBLOCK(256,OUTPTR),BLOCK1                           0241 00855000
*   OUTPTR=OUTPTR+272;              /* UPDATE PTR TO NEXTBLK @Y30LB15*/ 00856000
         AH    OUTPTR,@CH00393                                     0242 00857000
*   CALL WRITPRFX;                  /* WRIT PREFIX DATA BLK2 @Y30LB15*/ 00858000
         BAL   @14,WRITPRFX                                        0243 00859000
*   OBLOCK=BLOCK2;                  /* COPY IN ENTIRE BLK    @Y30LB15*/ 00860000
         MVC   OBLOCK(256,OUTPTR),BLOCK2                           0244 00861000
*   CALL WRITBLK3;                  /* WRIT FINAL BLK OF LIB @Y30LB15*/ 00862000
         BAL   @14,WRITBLK3                                        0245 00863000
*   RETURN;                         /*                       @Y30LB15*/ 00864000
@EL00010 DS    0H                                                  0246 00865000
@EF00010 DS    0H                                                  0246 00866000
@ER00010 LM    @14,@02,@SA00010                                    0246 00867000
         LM    @04,@05,@SA00010+20                                 0246 00868000
         LM    @07,@12,@SA00010+28                                 0246 00869000
         BR    @14                                                 0246 00870000
*   END BUILDA3;                    /*                       @Y30LB15*/ 00871000
*                                                                  0248 00872000
*/********************************************************** @Y30LB15*/ 00873000
*/*                                                          @Y30LB15*/ 00874000
*/*  PROCEDURE NAME - BUILDA4                                @Y30LB15*/ 00875000
*/*                                                          @Y30LB15*/ 00876000
*/*  FUNCTION - THE LIBRARY HAS FOUR FRAMES. THE CUBE        @XD00153*/ 00877000
*/*             POINTER LIST IS COMPLETE AND ALL CELLS ARE   @XD00153*/ 00878000
*/*             MARKED AVAILABLE.                            @XD00153*/ 00879000
*/*                                                          @Y30LB15*/ 00880000
*/********************************************************** @Y30LB15*/ 00881000
*                                                                  0248 00882000
*BUILDA4:                                                          0248 00883000
*   PROCEDURE;                      /*                       @Y30LB15*/ 00884000
BUILDA4  STM   @14,@02,@SA00011                                    0248 00885000
         STM   @04,@05,@SA00011+20                                 0248 00886000
         STM   @07,@12,@SA00011+28                                 0248 00887000
*   CALL WRITPRFX;                  /* WRIT PREFIX FOR HDR   @Y30LB15*/ 00888000
         BAL   @14,WRITPRFX                                        0249 00889000
*   OBLOCK=A4HDR;                   /* WRITE A4 HEADER BLK   @Y30LB15*/ 00890000
         MVC   OBLOCK(256,OUTPTR),A4HDR                            0250 00891000
*   IF LIBMAP(LIBCNT)='U'           /* WAS USER EXIT PRESNT? @Y30LB15*/ 00892000
*     THEN                          /* YES                   @Y30LB15*/ 00893000
         LR    @09,LIBCNT                                          0251 00894000
         MH    @09,@CH00033                                        0251 00895000
         ALR   @09,R4                                              0251 00896000
         CLI   LIBMAP-12(@09),C'U'                                 0251 00897000
         BNE   @RF00251                                            0251 00898000
*     CALL USEREXIT;                /*                       @Y30LB15*/ 00899000
         BAL   @14,USEREXIT                                        0252 00900000
*   ELSE                                                           0253 00901000
*     ;                             /* NO-CONTINUE USE STAND @Y30LB15*/ 00902000
@RF00251 DS    0H                                                  0254 00903000
*/********************************************************** @Y30LB15*/ 00904000
*/*                                                          @Y30LB15*/ 00905000
*/*   WRITE PREFIX AND COPY IN ALL BLOCKS FROM CONSTANT AREA @Y30LB15*/ 00906000
*/*                                                          @Y30LB15*/ 00907000
*/********************************************************** @Y30LB15*/ 00908000
*                                                                  0254 00909000
*   DO I=1 TO 3;                    /*                       @Y30LB15*/ 00910000
         LA    I,1                                                 0254 00911000
@DL00254 DS    0H                                                  0255 00912000
*     OUTPTR=OUTPTR+272;            /* INCRMNT PTR TO NXTBLK @Y30LB15*/ 00913000
         AH    OUTPTR,@CH00393                                     0255 00914000
*     CALL WRITPRFX;                /*                       @Y30LB15*/ 00915000
         BAL   @14,WRITPRFX                                        0256 00916000
*     IF I=1                        /* FIRST TIME THRU?      @Y30LB15*/ 00917000
*       THEN                        /* YES WRITE DATA BLK 0  @Y30LB15*/ 00918000
         CH    I,@CH00044                                          0257 00919000
         BNE   @RF00257                                            0257 00920000
*       OBLOCK=BLOCK0;              /*                       @Y30LB15*/ 00921000
         MVC   OBLOCK(256,OUTPTR),BLOCK0                           0258 00922000
*     ELSE                                                         0259 00923000
*       IF I=2                      /* SECOND TIME?          @Y30LB15*/ 00924000
*         THEN                      /* YES WRIT DATA BLK 1   @Y30LB15*/ 00925000
         B     @RC00257                                            0259 00926000
@RF00257 CH    I,@CH00052                                          0259 00927000
         BNE   @RF00259                                            0259 00928000
*         OBLOCK=BLOCK1;            /*                       @Y30LB15*/ 00929000
         MVC   OBLOCK(256,OUTPTR),BLOCK1                           0260 00930000
*       ELSE                        /* NO WRIT DATA BLK 2    @Y30LB15*/ 00931000
*         OBLOCK=BLOCK2;            /*                       @Y30LB15*/ 00932000
         B     @RC00259                                            0261 00933000
@RF00259 MVC   OBLOCK(256,OUTPTR),BLOCK2                           0261 00934000
*   END;                            /*                       @Y30LB15*/ 00935000
@RC00259 DS    0H                                                  0262 00936000
@RC00257 AH    I,@CH00044                                          0262 00937000
         CH    I,@CH00050                                          0262 00938000
         BNH   @DL00254                                            0262 00939000
*   CALL WRITBLK3;                  /* WRIT FINAL BLK OF LIB @Y30LB15*/ 00940000
         BAL   @14,WRITBLK3                                        0263 00941000
*   RETURN;                         /*                       @Y30LB15*/ 00942000
@EL00011 DS    0H                                                  0264 00943000
@EF00011 DS    0H                                                  0264 00944000
@ER00011 LM    @14,@02,@SA00011                                    0264 00945000
         LM    @04,@05,@SA00011+20                                 0264 00946000
         LM    @07,@12,@SA00011+28                                 0264 00947000
         BR    @14                                                 0264 00948000
*   END BUILDA4;                    /*                       @Y30LB15*/ 00949000
*                                                                  0266 00950000
*/********************************************************** @Y30LB15*/ 00951000
*/*                                                          @Y30LB15*/ 00952000
*/*  PROCEDURE NAME - WRITBLK3                               @Y30LB15*/ 00953000
*/*                                                          @Y30LB15*/ 00954000
*/*  FUNCTION - THE FIFTH BLOCK FOR A DEFINED LIBRARY HAS    @Y30LB15*/ 00955000
*/*             ONLY 28 BYTES OF CELLS.  THE REST OF THE     @XD00153*/ 00956000
*/*             BLOCK IS ZEROS.  THE BLOCK IS WRITTEN THE    @XD00153*/ 00957000
*/*             SAME WAY FOR ANY SIZE LIBRARY.               @XD00153*/ 00958000
*/*                                                          @Y30LB15*/ 00959000
*/********************************************************** @Y30LB15*/ 00960000
*                                                                  0266 00961000
*WRITBLK3:                                                         0266 00962000
*   PROCEDURE;                      /*                       @Y30LB15*/ 00963000
WRITBLK3 STM   @14,@02,@SA00012                                    0266 00964000
         STM   @04,@05,@SA00012+20                                 0266 00965000
         STM   @07,@12,@SA00012+28                                 0266 00966000
*   OUTPTR=OUTPTR+272;              /* UPDATE PTR TO NEXTBLK @Y30LB15*/ 00967000
         AH    OUTPTR,@CH00393                                     0267 00968000
*   CALL WRITPRFX;                  /* WRITE PREFIX BLK3     @Y30LB15*/ 00969000
         BAL   @14,WRITPRFX                                        0268 00970000
*   CHUNK=BLOCK3;                   /* WRIT ONLY CHUNK INBLK @Y30LB15*/ 00971000
         MVC   CHUNK(32,BLKPTR),BLOCK3                             0269 00972000
*   DO I=1 TO 7;                    /* ZERO REST OF BLOCK 3  @Y30LB15*/ 00973000
         LA    I,1                                                 0270 00974000
@DL00270 DS    0H                                                  0271 00975000
*     BLKPTR=BLKPTR+32;             /* UPDATE PTR NEXT CHUNK @Y30LB15*/ 00976000
         AH    BLKPTR,@CH00309                                     0271 00977000
*     CHUNK=ZEROCHNK;               /*                       @Y30LB15*/ 00978000
         MVC   CHUNK(32,BLKPTR),ZEROCHNK                           0272 00979000
*   END;                            /*                       @Y30LB15*/ 00980000
         AH    I,@CH00044                                          0273 00981000
         CH    I,@CH00134                                          0273 00982000
         BNH   @DL00270                                            0273 00983000
*   OUTPTR=OUTPTR+272;              /* UPDATE PTR TO NEXTBLK @Y30LB15*/ 00984000
         AH    OUTPTR,@CH00393                                     0274 00985000
*   RETURN;                         /*                       @Y30LB15*/ 00986000
@EL00012 DS    0H                                                  0275 00987000
@EF00012 DS    0H                                                  0275 00988000
@ER00012 LM    @14,@02,@SA00012                                    0275 00989000
         LM    @04,@05,@SA00012+20                                 0275 00990000
         LM    @07,@12,@SA00012+28                                 0275 00991000
         BR    @14                                                 0275 00992000
*   END WRITBLK3;                   /*                       @Y30LB15*/ 00993000
*                                                                  0277 00994000
*/********************************************************** @Y30LB15*/ 00995000
*/*                                                          @Y30LB15*/ 00996000
*/*  PROCEDURE NAME - OLDLIBSZ                               @Y30LB15*/ 00997000
*/*                                                          @Y30LB15*/ 00998000
*/*  FUNCTION - PROCESS THE HEADER BLOCK OF THE INPUT CELL   @Y30LB15*/ 00999000
*/*             MAP TO DETERMINE THE SIZE OF THE OLD LIBRARY @XD00153*/ 01000000
*/*             SET PARAMETER OLIBSIZ TO 0 IF THE LIBRARY    @XD00153*/ 01001000
*/*             WAS NOT DEFINED, OR TO 1,2,3, OR 4 IF THE    @XD00153*/ 01002000
*/*             LIBRARY WAS DEFINED.                         @XD00153*/ 01003000
*/*                                                          @Y30LB15*/ 01004000
*/********************************************************** @Y30LB15*/ 01005000
*                                                                  0277 01006000
*OLDLIBSZ:                                                         0277 01007000
*   PROCEDURE;                      /*                       @Y30LB15*/ 01008000
OLDLIBSZ STM   @14,@12,12(@13)                                     0277 01009000
*   IF A1PTR='0000'X                /* FIRST 2 PTRS ZERO?    @Y30LB15*/ 01010000
*     THEN                          /* YES-LIB NOT DEFINED   @Y30LB15*/ 01011000
         L     @05,INPTR                                           0278 01012000
         LH    @05,A1PTR(,@05)                                     0278 01013000
         LTR   @05,@05                                             0278 01014000
         BNZ   @RF00278                                            0278 01015000
*     OLIBSIZ='0';                  /* SET SIZE TO ZERO      @Y30LB15*/ 01016000
         MVI   OLIBSIZ,C'0'                                        0279 01017000
*   ELSE                            /* NO                    @Y30LB15*/ 01018000
*     IF A2PTR='FF'X                /* 1ST PTR FOR A2 DEFND? @Y30LB15*/ 01019000
*       THEN                        /* NO-A1 LIBRARY         @Y30LB15*/ 01020000
         B     @RC00278                                            0280 01021000
@RF00278 L     @05,INPTR                                           0280 01022000
         CLI   A2PTR(@05),255                                      0280 01023000
         BNE   @RF00280                                            0280 01024000
*       OLIBSIZ='1';                /* SET SIZE              @Y30LB15*/ 01025000
         MVI   OLIBSIZ,C'1'                                        0281 01026000
*     ELSE                          /* BIGGER THAN A1        @Y30LB15*/ 01027000
*       IF A3PTR='FF'X              /* 1ST PTR FOR A3 DEFND? @Y30LB15*/ 01028000
*         THEN                      /* NO-A2 LIBRARY         @Y30LB15*/ 01029000
         B     @RC00280                                            0282 01030000
@RF00280 L     @05,INPTR                                           0282 01031000
         CLI   A3PTR(@05),255                                      0282 01032000
         BNE   @RF00282                                            0282 01033000
*         OLIBSIZ='2';              /* SET SIZE              @Y30LB15*/ 01034000
         MVI   OLIBSIZ,C'2'                                        0283 01035000
*       ELSE                        /* BIGGER THAN A2        @Y30LB15*/ 01036000
*         IF A4PTR='FF'X            /* 1ST PTR FOR A4 DEFND? @Y30LB15*/ 01037000
*           THEN                    /* NO-A3 LIBRARY         @Y30LB15*/ 01038000
         B     @RC00282                                            0284 01039000
@RF00282 L     @05,INPTR                                           0284 01040000
         CLI   A4PTR(@05),255                                      0284 01041000
         BNE   @RF00284                                            0284 01042000
*           OLIBSIZ='3';            /* SET SIZE              @Y30LB15*/ 01043000
         MVI   OLIBSIZ,C'3'                                        0285 01044000
*         ELSE                      /* YES-A4 LIBRARY        @Y30LB15*/ 01045000
*           OLIBSIZ='4';            /* SET SIZE              @Y30LB15*/ 01046000
         B     @RC00284                                            0286 01047000
@RF00284 MVI   OLIBSIZ,C'4'                                        0286 01048000
*   RETURN;                         /*                       @Y30LB15*/ 01049000
@EL00013 DS    0H                                                  0287 01050000
@EF00013 DS    0H                                                  0287 01051000
@ER00013 LM    @14,@12,12(@13)                                     0287 01052000
         BR    @14                                                 0287 01053000
*   END OLDLIBSZ;                   /*                       @Y30LB15*/ 01054000
         B     @EL00013                                            0288 01055000
*                                                                  0289 01056000
*/********************************************************** @Y30LB15*/ 01057000
*/*                                                          @Y30LB15*/ 01058000
*/*  PROCEDURE NAME - COPYLIB                                @Y30LB15*/ 01059000
*/*                                                          @Y30LB15*/ 01060000
*/*  FUNCTION - WRITE PREFIX FOR EACH NEW BLOCK AND COPY     @Y30LB15*/ 01061000
*/*             THE FIVE BLOCK OLD CELL MAP TO FIVE BLOCKS   @XD00153*/ 01062000
*/*             OF THE NEW LIBRARY CELL MAP.                 @XD00153*/ 01063000
*/*                                                          @Y30LB15*/ 01064000
*/********************************************************** @Y30LB15*/ 01065000
*                                                                  0289 01066000
*COPYLIB:                                                          0289 01067000
*   PROCEDURE;                      /*                       @Y30LB15*/ 01068000
COPYLIB  STM   @14,@05,@SA00014                                    0289 01069000
         STM   @07,@12,@SA00014+32                                 0289 01070000
*   CALL WRITPRFX;                  /* WRITE NEW PREFIX      @Y30LB15*/ 01071000
         BAL   @14,WRITPRFX                                        0290 01072000
*   OBLOCK=IBLOCK;                  /* COPY HEADER BLOCK     @Y30LB15*/ 01073000
         L     @09,INPTR                                           0291 01074000
         MVC   OBLOCK(256,OUTPTR),IBLOCK(@09)                      0291 01075000
*   IF LIBMAP(LIBCNT)='U'           /* WAS USER EXIT PRESNT? @Y30LB15*/ 01076000
*     THEN                          /* YES                   @Y30LB15*/ 01077000
         LR    @09,LIBCNT                                          0292 01078000
         MH    @09,@CH00033                                        0292 01079000
         ALR   @09,R4                                              0292 01080000
         CLI   LIBMAP-12(@09),C'U'                                 0292 01081000
         BNE   @RF00292                                            0292 01082000
*     DO;                           /*                       @Y30LB15*/ 01083000
*                                                                  0293 01084000
*       /*************************************************************/ 01085000
*       /*                                                           */ 01086000
*       /* ************************************************* @Y30LB15*/ 01087000
*       /*                                                   @Y30LB15*/ 01088000
*       /* INITIALIZE CUBE BIT MAP DEPENDING ON LIBRARY SIZ  @Y30LB15*/ 01089000
*       /*                                                   @Y30LB15*/ 01090000
*       /* ************************************************* @Y30LB15*/ 01091000
*       /*                                                           */ 01092000
*       /*************************************************************/ 01093000
*                                                                  0294 01094000
*       IF OLIBSIZ='1'              /*                       @Y30LB15*/ 01095000
*         THEN                      /*                       @Y30LB15*/ 01096000
         CLI   OLIBSIZ,C'1'                                        0294 01097000
         BNE   @RF00294                                            0294 01098000
*         OBLOCK(1:22)=A1HDR(1:22); /*                       @Y30LB15*/ 01099000
         MVC   OBLOCK(22,OUTPTR),A1HDR                             0295 01100000
*       ELSE                        /*                       @Y30LB15*/ 01101000
*         IF OLIBSIZ='2'            /*                       @Y30LB15*/ 01102000
*           THEN                    /*                       @Y30LB15*/ 01103000
         B     @RC00294                                            0296 01104000
@RF00294 CLI   OLIBSIZ,C'2'                                        0296 01105000
         BNE   @RF00296                                            0296 01106000
*           OBLOCK(1:22)=A2HDR(1:22);/*                      @Y30LB15*/ 01107000
         MVC   OBLOCK(22,OUTPTR),A2HDR                             0297 01108000
*         ELSE                      /*                       @Y30LB15*/ 01109000
*           IF OLIBSIZ='3'          /*                       @Y30LB15*/ 01110000
*             THEN                  /*                       @Y30LB15*/ 01111000
         B     @RC00296                                            0298 01112000
@RF00296 CLI   OLIBSIZ,C'3'                                        0298 01113000
         BNE   @RF00298                                            0298 01114000
*             OBLOCK(1:22)=A3HDR(1:22);/*                    @Y30LB15*/ 01115000
         MVC   OBLOCK(22,OUTPTR),A3HDR                             0299 01116000
*           ELSE                    /*                       @Y30LB15*/ 01117000
*             OBLOCK(1:22)=A4HDR(1:22);/*                    @Y30LB15*/ 01118000
         B     @RC00298                                            0300 01119000
@RF00298 MVC   OBLOCK(22,OUTPTR),A4HDR                             0300 01120000
*       SAVOPTR=OUTPTR;             /* SAV BEG LIB ADDR      @Y30LB15*/ 01121000
@RC00298 DS    0H                                                  0301 01122000
@RC00296 DS    0H                                                  0301 01123000
@RC00294 ST    OUTPTR,SAVOPTR                                      0301 01124000
*       CALL USEREXIT;              /*                       @Y30LB15*/ 01125000
         BAL   @14,USEREXIT                                        0302 01126000
*     END;                          /*                       @Y30LB15*/ 01127000
*   ELSE                                                           0304 01128000
*     ;                             /* NO-CONTINUE USE STAND @Y30LB15*/ 01129000
@RF00292 DS    0H                                                  0305 01130000
*   OUTPTR=OUTPTR+272;              /* UPDATE PTR TO NEXTBLK @Y30LB15*/ 01131000
         AH    OUTPTR,@CH00393                                     0305 01132000
*   INPTR=INPTR+264;                /* UPDATE PTR TO NEXTBLK @Y30LB15*/ 01133000
         LA    @09,264                                             0306 01134000
         AL    @09,INPTR                                           0306 01135000
         ST    @09,INPTR                                           0306 01136000
*   DO I=1 TO 4;                    /*                       @Y30LB15*/ 01137000
         LA    I,1                                                 0307 01138000
@DL00307 DS    0H                                                  0308 01139000
*     CALL WRITPRFX;                /* WRITE NEW PREFIX      @Y30LB15*/ 01140000
         BAL   @14,WRITPRFX                                        0308 01141000
*     OBLOCK=IBLOCK;                /* COPY 1 BLOCK DATA     @Y30LB15*/ 01142000
         L     @09,INPTR                                           0309 01143000
         MVC   OBLOCK(256,OUTPTR),IBLOCK(@09)                      0309 01144000
*     OUTPTR=OUTPTR+272;            /* UPDATE PTR TO NEXTBLK @Y30LB15*/ 01145000
         AH    OUTPTR,@CH00393                                     0310 01146000
*     INPTR=INPTR+264;              /* UPDATE PTR TO NEXTBLK @Y30LB15*/ 01147000
         AH    @09,@CH00403                                        0311 01148000
         ST    @09,INPTR                                           0311 01149000
*   END;                            /*                       @Y30LB15*/ 01150000
         AH    I,@CH00044                                          0312 01151000
         CH    I,@CH00070                                          0312 01152000
         BNH   @DL00307                                            0312 01153000
*   IF LIBMAP(LIBCNT)='U'           /* WAS USER EXIT CALLED  @Y30LB15*/ 01154000
*     THEN                          /* YES                   @Y30LB15*/ 01155000
         LR    @09,LIBCNT                                          0313 01156000
         MH    @09,@CH00033                                        0313 01157000
         ALR   @09,R4                                              0313 01158000
         CLI   LIBMAP-12(@09),C'U'                                 0313 01159000
         BNE   @RF00313                                            0313 01160000
*     DO;                           /*                       @Y30LB15*/ 01161000
*       OUTPTR=SAVOPTR;             /* PT BEGIN LIB IN BUF   @Y30LB15*/ 01162000
         L     OUTPTR,SAVOPTR                                      0315 01163000
*       CALL CUBECHK;               /* CHK FOR FULL CUBES    @Y30LB15*/ 01164000
         BAL   @14,CUBECHK                                         0316 01165000
*     END;                          /*                       @Y30LB15*/ 01166000
*   RETURN;                         /*                       @Y30LB15*/ 01167000
@EL00014 DS    0H                                                  0318 01168000
@EF00014 DS    0H                                                  0318 01169000
@ER00014 LM    @14,@05,@SA00014                                    0318 01170000
         LM    @07,@12,@SA00014+32                                 0318 01171000
         BR    @14                                                 0318 01172000
*   END COPYLIB;                    /*                       @Y30LB15*/ 01173000
         B     @EL00014                                            0319 01174000
*                                                                  0320 01175000
*/********************************************************** @Y30LB15*/ 01176000
*/*                                                          @Y30LB15*/ 01177000
*/*  PROCEDURE NAME - READUT1                                @Y30LB15*/ 01178000
*/*                                                          @Y30LB15*/ 01179000
*/*  FUNCTION - SET UP CALL AREA WITH INFORMATION NEEDED     @Y30LB15*/ 01180000
*/*             BY THE READ MODULE(ICGDSB05).  LINK TO THE   @XD00153*/ 01181000
*/*             READ MODULE WHICH WILL READ THE ONE TRACK    @XD00153*/ 01182000
*/*             WHERE THE CELL MAP IS.  SET UP POINTER TO    @XD00153*/ 01183000
*/*             THE BUFFER HOLDING THE RECORD.               @XD00153*/ 01184000
*/*                                                          @Y30LB15*/ 01185000
*/********************************************************** @Y30LB15*/ 01186000
*                                                                  0320 01187000
*READUT1:                                                          0320 01188000
*   PROCEDURE;                      /*                       @Y30LB15*/ 01189000
READUT1  STM   @14,@12,@SA00015                                    0320 01190000
*   B05DCBPT=ADDR(UT1DCB);          /* SET DCB ADDR          @Y30LB15*/ 01191000
         L     @05,BUILDPTR(,R4)                                   0321 01192000
         LA    @15,UT1DCB(,@05)                                    0321 01193000
         ST    @15,B05DCBPT(,@05)                                  0321 01194000
*   B05BUFPT=ADDR(UT1BUFER);        /* SET BUFFER ADDR       @Y30LB15*/ 01195000
         LR    @01,@05                                             0322 01196000
         AL    @01,@CF00811                                        0322 01197000
         ST    @01,B05BUFPT(,@05)                                  0322 01198000
*   B05TBLID=UT1TABID;              /* SPECIFY TABLE         @Y30LB15*/ 01199000
         MVC   B05TBLID(1,@05),UT1TABID(@05)                       0323 01200000
*   B05ADDR=INADDR;                 /* SET CYL,HEAD,REC      @Y30LB15*/ 01201000
         MVC   B05ADDR(3,@05),INADDR(@05)                          0324 01202000
*   GEN(LINK EP=ICGDSB05);          /* READ OLD CELL MAP     @Y30LB15*/ 01203000
         LINK EP=ICGDSB05                                               01204000
*   INPTR=ADDR(UT1BUFER);           /*                       @Y30LB15*/ 01205000
         L     @05,BUILDPTR(,R4)                                   0326 01206000
         LR    @01,@05                                             0326 01207000
         AL    @01,@CF00811                                        0326 01208000
         ST    @01,INPTR                                           0326 01209000
*   IF UT2TABID^=ITABLID            /* TABLE ID CORRECT?     @Y30LB15*/ 01210000
*     THEN                                                         0327 01211000
         CLC   UT2TABID(1,@05),ITABLID(@01)                        0327 01212000
         BE    @RF00327                                            0327 01213000
*     DO;                           /* NO                    @Y30LB15*/ 01214000
*       OUTBUF2(1:49)=B09MSG1;      /* WRITE MSG             @Y30LB15*/ 01215000
         MVC   OUTBUF2(49,R4),B09MSG1                              0329 01216000
*       CALL PUTIT1;                /*                       @Y30LB15*/ 01217000
         BAL   @14,PUTIT1                                          0330 01218000
*     END;                          /*                       @Y30LB15*/ 01219000
*   ELSE                                                           0332 01220000
*     ;                             /*                       @Y30LB15*/ 01221000
@RF00327 DS    0H                                                  0333 01222000
*   RETURN;                         /*                       @Y30LB15*/ 01223000
@EL00015 DS    0H                                                  0333 01224000
@EF00015 DS    0H                                                  0333 01225000
@ER00015 LM    @14,@12,@SA00015                                    0333 01226000
         BR    @14                                                 0333 01227000
*   END READUT1;                    /*                       @Y30LB15*/ 01228000
*                                                                  0335 01229000
*/********************************************************** @Y30LB15*/ 01230000
*/*                                                          @Y30LB15*/ 01231000
*/*  PROCEDURE NAME - DIFFLIB                                @Y30LB15*/ 01232000
*/*                                                          @Y30LB15*/ 01233000
*/*  FUNCTION - THE OLD AND NEW LIBRARIES ARE NOT THE SAME   @Y30LB15*/ 01234000
*/*             SIZE ON AN UPDATE.  CALL ROUTINES NECESSARY  @XD00153*/ 01235000
*/*             DEPENDING ON WHETHER THE NEW LIBRARY IS      @XD00153*/ 01236000
*/*             LARGER OR SMALLER THAN THE OLD LIBRARY.      @XD00153*/ 01237000
*/*                                                          @Y30LB15*/ 01238000
*/********************************************************** @Y30LB15*/ 01239000
*                                                                  0335 01240000
*DIFFLIB:                                                          0335 01241000
*   PROCEDURE;                      /*                       @Y30LB15*/ 01242000
DIFFLIB  STM   @14,@05,@SA00016                                    0335 01243000
         STM   @07,@12,@SA00016+32                                 0335 01244000
*   IF OLIBSIZ<LIBSIZE(LIBCNT)      /* NEWLIB BIGGER?        @Y30LB15*/ 01245000
*     THEN                                                         0336 01246000
         LR    @09,LIBCNT                                          0336 01247000
         MH    @09,@CH00033                                        0336 01248000
         ALR   @09,R4                                              0336 01249000
         CLC   OLIBSIZ(1),LIBSIZE-12(@09)                          0336 01250000
         BNL   @RF00336                                            0336 01251000
*     DO;                           /* YES                   @Y30LB15*/ 01252000
*       CALL NLIBBLD;               /* 1ST BUILD AS NEWLIB   @Y30LB15*/ 01253000
         BAL   @14,NLIBBLD                                         0338 01254000
*       OUTPTR=ADDR(UT2BUFER)+(LIBCNT-1)*1360;/* PTR CORRECT @Y30LB15*/ 01255000
         L     OUTPTR,BUILDPTR(,R4)                                0339 01256000
         AL    OUTPTR,@CF00810                                     0339 01257000
         LR    @09,LIBCNT                                          0339 01258000
         BCTR  @09,0                                               0339 01259000
         MH    @09,@CH00652                                        0339 01260000
         ALR   OUTPTR,@09                                          0339 01261000
*       CECELL='A';                 /* CE CELL BIT TURN ON   @Y30LB15*/ 01262000
         MVI   CECELL,C'A'                                         0340 01263000
*       CALL COPYPART;              /* COPY CELL MAP OLDLIB  @Y30LB15*/ 01264000
         BAL   @14,COPYPART                                        0341 01265000
*       CALL CUBECHK;               /* FILL IN CUBE BITS     @Y30LB15*/ 01266000
         BAL   @14,CUBECHK                                         0342 01267000
*     END;                          /*                       @Y30LB15*/ 01268000
*   ELSE                                                           0344 01269000
*     DO;                           /* NEWLIB SMALLER        @Y30LB15*/ 01270000
         B     @RC00336                                            0344 01271000
@RF00336 DS    0H                                                  0345 01272000
*       CALL NLIBBLD;               /* 1ST BUILD NEWLIB      @Y30LB15*/ 01273000
         BAL   @14,NLIBBLD                                         0345 01274000
*       OUTPTR=ADDR(UT2BUFER)+(LIBCNT-1)*1360;/* PTR CORRECT @Y30LB15*/ 01275000
         L     OUTPTR,BUILDPTR(,R4)                                0346 01276000
         AL    OUTPTR,@CF00810                                     0346 01277000
         LR    @09,LIBCNT                                          0346 01278000
         BCTR  @09,0                                               0346 01279000
         MH    @09,@CH00652                                        0346 01280000
         ALR   OUTPTR,@09                                          0346 01281000
*       CALL LIBCOMP;               /* CHK FOR FULL CELLS IN @Y30LB15   01282000
*                                      DELETED PORTION       @Y30LB15*/ 01283000
         BAL   @14,LIBCOMP                                         0347 01284000
*       IF STOPSCAN='0'B            /* DELETED CELLS EMPTY?  @Y30LB15*/ 01285000
*         THEN                                                     0348 01286000
         TM    STOPSCAN,B'10000000'                                0348 01287000
         BNZ   @RF00348                                            0348 01288000
*         DO;                       /* YES-CONTINUE          @Y30LB15*/ 01289000
*           OLIBSIZ=LIBSIZE(LIBCNT);/* ONLY NEWSIZ PART COPY @Y30LB15*/ 01290000
         LR    @09,LIBCNT                                          0350 01291000
         MH    @09,@CH00033                                        0350 01292000
         ALR   @09,R4                                              0350 01293000
         MVC   OLIBSIZ(1),LIBSIZE-12(@09)                          0350 01294000
*           CECELL='U';             /* CE CELL TURN OFF      @Y30LB15*/ 01295000
         MVI   CECELL,C'U'                                         0351 01296000
*           CALL COPYPART;          /*                       @Y30LB15*/ 01297000
         BAL   @14,COPYPART                                        0352 01298000
*           CALL CUBECHK;           /* FILL IN CUBE BITS     @Y30LB15*/ 01299000
         BAL   @14,CUBECHK                                         0353 01300000
*         END;                      /*                       @Y30LB15*/ 01301000
*       ELSE                                                       0355 01302000
*         ;                         /* NO-ERROR              @Y30LB15*/ 01303000
@RF00348 DS    0H                                                  0356 01304000
*     END;                          /*                       @Y30LB15*/ 01305000
*   RETURN;                         /*                       @Y30LB15*/ 01306000
@EL00016 DS    0H                                                  0357 01307000
@EF00016 DS    0H                                                  0357 01308000
@ER00016 LM    @14,@05,@SA00016                                    0357 01309000
         LM    @07,@12,@SA00016+32                                 0357 01310000
         BR    @14                                                 0357 01311000
*   END DIFFLIB;                    /*                       @Y30LB15*/ 01312000
         B     @EL00016                                            0358 01313000
*                                                                  0359 01314000
*/********************************************************** @Y30LB15*/ 01315000
*/*                                                          @Y30LB15*/ 01316000
*/*  PROCEDURE NAME - COPYPART                               @Y30LB15*/ 01317000
*/*                                                          @Y30LB15*/ 01318000
*/*  FUNCTION - DETERMINE HOW MUCH OF THE CELL BIT MAP       @Y30LB15*/ 01319000
*/*             SHOULD BE COPIED AND CALL THE ROUTINE TO DO  @XD00153*/ 01320000
*/*             THE COPY.                                    @XD00153*/ 01321000
*/*                                                          @Y30LB15*/ 01322000
*/********************************************************** @Y30LB15*/ 01323000
*                                                                  0359 01324000
*COPYPART:                                                         0359 01325000
*   PROCEDURE;                      /*                       @Y30LB15*/ 01326000
COPYPART STM   @14,@12,@SA00017                                    0359 01327000
*   BLKPTR=OUTPTR+272;              /* INCRMNT PTR PAST HDR  @Y30LB15*/ 01328000
         LA    BLKPTR,272                                          0360 01329000
         ALR   BLKPTR,OUTPTR                                       0360 01330000
*   INBLKPTR=INPTR+264;             /* INCRMNT PTR PAST HDR  @Y30LB15*/ 01331000
         LA    INBLKPTR,264                                        0361 01332000
         AL    INBLKPTR,INPTR                                      0361 01333000
*   IF OLIBSIZ='3'                  /* A3 LIBRARY?           @Y30LB15*/ 01334000
*     THEN                                                         0362 01335000
         CLI   OLIBSIZ,C'3'                                        0362 01336000
         BNE   @RF00362                                            0362 01337000
*     DO;                           /* YES                   @Y30LB15*/ 01338000
*       CALL A3PART;                /* COPY A3 CELLS ONLY    @Y30LB15*/ 01339000
         BAL   @14,A3PART                                          0364 01340000
*       BLKPTR=OUTPTR+272+16+(7*32);/* PT BEGIN A3 BIT MAP   @Y30LB15*/ 01341000
         LA    BLKPTR,512                                          0365 01342000
         ALR   BLKPTR,OUTPTR                                       0365 01343000
*       IF CECELL='A'               /* CE CELL BIT HERE?     @Y30LB15*/ 01344000
*         THEN                      /* NO                    @Y30LB15*/ 01345000
         CLI   CECELL,C'A'                                         0366 01346000
         BNE   @RF00366                                            0366 01347000
*         CHUNK(1:1)=CHUNK(1:1)|CELEMPTY;/* MARK CELL FREE   @Y30LB15*/ 01348000
         OC    CHUNK(1,BLKPTR),CELEMPTY                            0367 01349000
*       ELSE                        /* YES - CE CELL HERE    @Y30LB15*/ 01350000
*         CHUNK(1:1)=CHUNK(1:1)&CUBEOR1(1);/* MARK CELL FULL @Y30LB15*/ 01351000
         B     @RC00366                                            0368 01352000
@RF00366 SLR   @02,@02                                             0368 01353000
         IC    @02,CHUNK(,BLKPTR)                                  0368 01354000
         MVC   @ZT00003+3(1),CUBEOR1                               0368 01355000
         N     @02,@ZT00003                                        0368 01356000
         STC   @02,CHUNK(,BLKPTR)                                  0368 01357000
*     END;                          /*                       @Y30LB15*/ 01358000
*   ELSE                            /* NO                    @Y30LB15*/ 01359000
*     IF OLIBSIZ='2'                /* A2 LIBRARY?           @Y30LB15*/ 01360000
*       THEN                                                       0370 01361000
         B     @RC00362                                            0370 01362000
@RF00362 CLI   OLIBSIZ,C'2'                                        0370 01363000
         BNE   @RF00370                                            0370 01364000
*       DO;                         /* YES                   @Y30LB15*/ 01365000
*         BLKPTR=BLKPTR+272+16+(6*32);/*                     @Y30LB15*/ 01366000
         AH    BLKPTR,@CH00794                                     0372 01367000
*         INBLKPTR=INBLKPTR+264+8+(6*32);/*                  @Y30LB15*/ 01368000
         AH    INBLKPTR,@CH00795                                   0373 01369000
*         CALL A2PART;              /*                       @Y30LB15*/ 01370000
         BAL   @14,A2PART                                          0374 01371000
*         BLKPTR=OUTPTR+(2*272)+16+(6*32);/* BEGIN A2 BITMAP @Y30LB15*/ 01372000
         LA    BLKPTR,752                                          0375 01373000
         ALR   BLKPTR,OUTPTR                                       0375 01374000
*         IF CECELL='A'             /* CE CELL BIT HERE?     @Y30LB15*/ 01375000
*           THEN                    /* NO                    @Y30LB15*/ 01376000
         CLI   CECELL,C'A'                                         0376 01377000
         BNE   @RF00376                                            0376 01378000
*           CHUNK(1:1)=CHUNK(1:1)|CELEMPTY;/* MRK CELL FREE  @Y30LB15*/ 01379000
         OC    CHUNK(1,BLKPTR),CELEMPTY                            0377 01380000
*         ELSE                      /* YES - CE CELL HERE    @Y30LB15*/ 01381000
*           CHUNK(1:1)=CHUNK(1:1)&CUBEOR1(1);/* MRK CELL FULL      0378 01382000
*                                                            @Y30LB15*/ 01383000
         B     @RC00376                                            0378 01384000
@RF00376 SLR   @02,@02                                             0378 01385000
         IC    @02,CHUNK(,BLKPTR)                                  0378 01386000
         MVC   @ZT00003+3(1),CUBEOR1                               0378 01387000
         N     @02,@ZT00003                                        0378 01388000
         STC   @02,CHUNK(,BLKPTR)                                  0378 01389000
*       END;                        /*                       @Y30LB15*/ 01390000
*     ELSE                                                         0380 01391000
*       DO;                         /*                       @Y30LB15*/ 01392000
         B     @RC00370                                            0380 01393000
@RF00370 DS    0H                                                  0381 01394000
*         BLKPTR=BLKPTR+544+16+(5*32);/*                     @Y30LB15*/ 01395000
         AH    BLKPTR,@CH00798                                     0381 01396000
*         INBLKPTR=INBLKPTR+528+8+(5*32);/*                  @Y30LB15*/ 01397000
         AH    INBLKPTR,@CH00800                                   0382 01398000
*         CALL A1PART;              /*                       @Y30LB15*/ 01399000
         BAL   @14,A1PART                                          0383 01400000
*         BLKPTR=OUTPTR+(3*272)+16+(5*32);/* BEGIN A1 BITMAP @Y30LB15*/ 01401000
         LA    BLKPTR,992                                          0384 01402000
         ALR   BLKPTR,OUTPTR                                       0384 01403000
*         IF CECELL='A'             /* CE CELL BIT HERE?     @Y30LB15*/ 01404000
*           THEN                    /* NO                    @Y30LB15*/ 01405000
         CLI   CECELL,C'A'                                         0385 01406000
         BNE   @RF00385                                            0385 01407000
*           CHUNK(1:1)=CHUNK(1:1)|CELEMPTY;/* MRK CELL FREE  @Y30LB15*/ 01408000
         OC    CHUNK(1,BLKPTR),CELEMPTY                            0386 01409000
*         ELSE                      /* YES - CE CELL HERE    @Y30LB15*/ 01410000
*           CHUNK(1:1)=CHUNK(1:1)&CUBEOR1(1);/* MRK CELL FULL      0387 01411000
*                                                            @Y30LB15*/ 01412000
         B     @RC00385                                            0387 01413000
@RF00385 SLR   @02,@02                                             0387 01414000
         IC    @02,CHUNK(,BLKPTR)                                  0387 01415000
         MVC   @ZT00003+3(1),CUBEOR1                               0387 01416000
         N     @02,@ZT00003                                        0387 01417000
         STC   @02,CHUNK(,BLKPTR)                                  0387 01418000
*       END;                        /*                       @Y30LB15*/ 01419000
*   RETURN;                         /*                       @Y30LB15*/ 01420000
@EL00017 DS    0H                                                  0389 01421000
@EF00017 DS    0H                                                  0389 01422000
@ER00017 LM    @14,@12,@SA00017                                    0389 01423000
         BR    @14                                                 0389 01424000
*   END COPYPART;                   /*                       @Y30LB15*/ 01425000
         B     @EL00017                                            0390 01426000
*                                                                  0391 01427000
*/********************************************************** @Y30LB15*/ 01428000
*/*                                                          @Y30LB15*/ 01429000
*/*  PROCEDURE NAME - A3PART                                 @Y30LB15*/ 01430000
*/*                                                          @Y30LB15*/ 01431000
*/*  FUNCTION - COPY THE PORTION OF THE CELL BIT MAP FOR     @Y30LB15*/ 01432000
*/*             EACH OF THE FRAMES OF THE OLD LIBRARY THAT   @XD00153*/ 01433000
*/*             WILL BE IN THE NEW LIBRARY.  THE ROUTINE IS  @XD00153*/ 01434000
*/*             ENTERED AT ONE OF THREE PLACES DEPENDING ON  @XD00153*/ 01435000
*/*             THE AMOUNT TO BE COPIED.                     @XD00153*/ 01436000
*/*                                                          @Y30LB15*/ 01437000
*/********************************************************** @Y30LB15*/ 01438000
*                                                                  0391 01439000
*A3PART:                                                           0391 01440000
*   PROCEDURE;                      /*                       @Y30LB15*/ 01441000
A3PART   STM   @14,@12,@SA00018                                    0391 01442000
*   BLKPTR=BLKPTR+16+(7*32);        /* PTR LAST CHUNK BLK    @Y30LB15*/ 01443000
         AH    BLKPTR,@CH00804                                     0392 01444000
*   INBLKPTR=INBLKPTR+8+(7*32);     /* PTR LAST CHUNK BLK    @Y30LB15*/ 01445000
         AH    INBLKPTR,@CH00805                                   0393 01446000
*   CHUNK=INCHUNK;                  /* COPY 32 BYTES         @Y30LB15*/ 01447000
         MVC   CHUNK(32,BLKPTR),INCHUNK(INBLKPTR)                  0394 01448000
*   BLKPTR=BLKPTR+32+16;            /* PT PAST PREFIX NXTBLK @Y30LB15*/ 01449000
         AH    BLKPTR,@CH00236                                     0395 01450000
*   INBLKPTR=INBLKPTR+32+8;         /* PT PAST PREFIX NXTBLK @Y30LB15*/ 01451000
         AH    INBLKPTR,@CH00319                                   0396 01452000
*   J=6;                            /* NUM CHUNKS TO BE COPY @Y30LB15*/ 01453000
         MVC   J(2),@CH00227                                       0397 01454000
*   CALL CHNKCOPY;                  /* COPY 32 BYTES AT TIME @Y30LB15*/ 01455000
         BAL   @14,CHNKCOPY                                        0398 01456000
*A2PART:                                                           0399 01457000
*   ENTRY;                          /*                       @Y30LB15*/ 01458000
         B     @EC00399                                            0399 01459000
A2PART   STM   @14,@12,@SA00018                                    0399 01460000
@EC00399 DS    0H                                                  0400 01461000
*   J=2;                            /* REMAIN OF BLK         @Y30LB15*/ 01462000
         MVC   J(2),@CH00052                                       0400 01463000
*   CALL CHNKCOPY;                  /* COPY 32 BYTES AT TIME @Y30LB15*/ 01464000
         BAL   @14,CHNKCOPY                                        0401 01465000
*   BLKPTR=BLKPTR+16;               /* PT PAST PREFIX NXTBLK @Y30LB15*/ 01466000
         AH    BLKPTR,@CH00163                                     0402 01467000
*   INBLKPTR=INBLKPTR+8;            /* PT PAST PREFIX NXTBLK @Y30LB15*/ 01468000
         AH    INBLKPTR,@CH00042                                   0403 01469000
*   J=5;                            /* CHNKS LEFT A2         @Y30LB15*/ 01470000
         MVC   J(2),@CH00121                                       0404 01471000
*   CALL CHNKCOPY;                  /* COPY 32 BYTES AT TIME @Y30LB15*/ 01472000
         BAL   @14,CHNKCOPY                                        0405 01473000
*A1PART:                                                           0406 01474000
*   ENTRY;                          /*                       @Y30LB15*/ 01475000
         B     @EC00406                                            0406 01476000
A1PART   STM   @14,@12,@SA00018                                    0406 01477000
@EC00406 DS    0H                                                  0407 01478000
*   J=3;                            /* REMAIN OF BLK         @Y30LB15*/ 01479000
         MVC   J(2),@CH00050                                       0407 01480000
*   CALL CHNKCOPY;                  /* COPY 32 BYTES AT TIME @Y30LB15*/ 01481000
         BAL   @14,CHNKCOPY                                        0408 01482000
*   BLKPTR=BLKPTR+16;               /* PT PAST PREFIX NXTBLK @Y30LB15*/ 01483000
         AH    BLKPTR,@CH00163                                     0409 01484000
*   INBLKPTR=INBLKPTR+8;            /* PT PAST PREFIX NXTBLK @Y30LB15*/ 01485000
         AH    INBLKPTR,@CH00042                                   0410 01486000
*   CHUNK=INCHUNK;                  /* ONLY VALID 32 BYTES   @Y30LB15   01487000
*                                      IN LAST BLOCK         @Y30LB15*/ 01488000
         MVC   CHUNK(32,BLKPTR),INCHUNK(INBLKPTR)                  0411 01489000
*   RETURN;                         /*                       @Y30LB15*/ 01490000
@EL00018 DS    0H                                                  0412 01491000
@EF00018 DS    0H                                                  0412 01492000
@ER00018 LM    @14,@12,@SA00018                                    0412 01493000
         BR    @14                                                 0412 01494000
*   END A3PART;                     /*                       @Y30LB15*/ 01495000
*                                                                  0414 01496000
*/********************************************************** @Y30LB15*/ 01497000
*/*                                                          @Y30LB15*/ 01498000
*/*  PROCEDURE NAME - CHNKCOPY                               @Y30LB15*/ 01499000
*/*                                                          @Y30LB15*/ 01500000
*/*  FUNCTION - COPY ONE 32 BYTE SECTION OF A DATA BLOCK     @Y30LB15*/ 01501000
*/*             AND UPDATE THE POINTERS IN THE INPUT BUFFER  @XD00153*/ 01502000
*/*             AND OUT BUFFER TO THE NEXT 32 BYTE CHUNK.    @XD00153*/ 01503000
*/*                                                          @Y30LB15*/ 01504000
*/********************************************************** @Y30LB15*/ 01505000
*                                                                  0414 01506000
*CHNKCOPY:                                                         0414 01507000
*   PROCEDURE;                      /*                       @Y30LB15*/ 01508000
CHNKCOPY STM   @14,@04,12(@13)                                     0414 01509000
         STM   @07,@12,48(@13)                                     0414 01510000
*   DO I=1 TO J;                    /*                       @Y30LB15*/ 01511000
         LA    I,1                                                 0415 01512000
         B     @DE00415                                            0415 01513000
@DL00415 DS    0H                                                  0416 01514000
*     CHUNK=INCHUNK;                /*                       @Y30LB15*/ 01515000
         MVC   CHUNK(32,BLKPTR),INCHUNK(INBLKPTR)                  0416 01516000
*     BLKPTR=BLKPTR+32;             /*                       @Y30LB15*/ 01517000
         LA    @15,32                                              0417 01518000
         ALR   BLKPTR,@15                                          0417 01519000
*     INBLKPTR=INBLKPTR+32;         /*                       @Y30LB15*/ 01520000
         ALR   INBLKPTR,@15                                        0418 01521000
*   END;                            /*                       @Y30LB15*/ 01522000
         AH    I,@CH00044                                          0419 01523000
@DE00415 CH    I,J                                                 0419 01524000
         BNH   @DL00415                                            0419 01525000
*   RETURN;                         /*                       @Y30LB15*/ 01526000
@EL00019 DS    0H                                                  0420 01527000
@EF00019 DS    0H                                                  0420 01528000
@ER00019 LM    @14,@04,12(@13)                                     0420 01529000
         LM    @07,@12,48(@13)                                     0420 01530000
         BR    @14                                                 0420 01531000
*   END CHNKCOPY;                   /*                       @Y30LB15*/ 01532000
*                                                                  0422 01533000
*/********************************************************** @Y30LB15*/ 01534000
*/*                                                          @Y30LB15*/ 01535000
*/*  PROCEDURE NAME - LIBCOMP                                @Y30LB15*/ 01536000
*/*                                                          @Y30LB15*/ 01537000
*/*  FUNCTION - ACCORDING TO THE SIZE OF THE OLD LIBRARY     @Y30LB15*/ 01538000
*/*             WHICH WAS LARGER THAN THE NEW LIBRARY, BE    @XD00153*/ 01539000
*/*             SURE THAT THE DELETED FRAMES TO NOT CONTAIN  @XD00153*/ 01540000
*/*             CARTRIDGES.  IF THEY DO, PRINT AN ERROR      @XD00153*/ 01541000
*/*             MESSAGE AND STOP PROCESSING.                 @XD00153*/ 01542000
*/*                                                          @Y30LB15*/ 01543000
*/********************************************************** @Y30LB15*/ 01544000
*                                                                  0422 01545000
*LIBCOMP:                                                          0422 01546000
*   PROCEDURE;                      /*                       @Y30LB15*/ 01547000
LIBCOMP  STM   @14,@12,@SA00020                                    0422 01548000
*   IF OLIBSIZ='4'                  /* WAS OLD LIB AN A4?    @Y30LB15*/ 01549000
*     THEN                          /* YES                   @Y30LB15*/ 01550000
         CLI   OLIBSIZ,C'4'                                        0423 01551000
         BNE   @RF00423                                            0423 01552000
*     CALL A4COMP;                  /* START COMP AT 1ST BLK @Y30LB15*/ 01553000
         BAL   @14,A4COMP                                          0424 01554000
*   ELSE                            /* NOT A4                @Y30LB15*/ 01555000
*     IF OLIBSIZ='3'                /* WAS OLD LIB AN A3?    @Y30LB15*/ 01556000
*       THEN                                                       0425 01557000
         B     @RC00423                                            0425 01558000
@RF00423 CLI   OLIBSIZ,C'3'                                        0425 01559000
         BNE   @RF00425                                            0425 01560000
*       DO;                         /* YES                   @Y30LB15*/ 01561000
*         INBLKPTR=INPTR+264+8+(7*32);/* BEGIN A3 BIT MAP    @Y30LB15*/ 01562000
         LA    INBLKPTR,496                                        0427 01563000
         AL    INBLKPTR,INPTR                                      0427 01564000
*         IF INCHUNK^=SUBBLK0(1)    /* CECELL FULL REST EMPT @Y30LB15*/ 01565000
*           THEN                    /* NO-ERROR              @Y30LB15*/ 01566000
         CLC   INCHUNK(32,INBLKPTR),SUBBLK0                        0428 01567000
         BE    @RF00428                                            0428 01568000
*           INVLDCHK='1'B;          /* SET ERROR SWITCH      @Y30LB15*/ 01569000
         OI    INVLDCHK,B'01000000'                                0429 01570000
*         ELSE                      /* ALL CELLS EMPTY       @Y30LB15*/ 01571000
*           CALL A3COMP;            /* CHECK REST FRAME 3    @Y30LB15*/ 01572000
         B     @RC00428                                            0430 01573000
@RF00428 BAL   @14,A3COMP                                          0430 01574000
*       END;                        /*                       @Y30LB15*/ 01575000
*     ELSE                                                         0432 01576000
*       DO;                         /* NOT AN A3             @Y30LB15*/ 01577000
         B     @RC00425                                            0432 01578000
@RF00425 DS    0H                                                  0433 01579000
*         INBLKPTR=INPTR+(2*264)+8+(6*32);/* BEGIN A2 BIT MAP      0433 01580000
*                                                            @Y30LB15*/ 01581000
         LA    INBLKPTR,728                                        0433 01582000
         AL    INBLKPTR,INPTR                                      0433 01583000
*         IF INCHUNK^=SUBBLK0(1)    /* CECELL FULL REST EMPT @Y30LB15*/ 01584000
*           THEN                    /* NO-ERROR              @Y30LB15*/ 01585000
         CLC   INCHUNK(32,INBLKPTR),SUBBLK0                        0434 01586000
         BE    @RF00434                                            0434 01587000
*           INVLDCHK='1'B;          /* SET ERROR SWITCH      @Y30LB15*/ 01588000
         OI    INVLDCHK,B'01000000'                                0435 01589000
*         ELSE                      /* ALL CELLS EMPTY       @Y30LB15*/ 01590000
*           CALL A2COMP;            /* CHECK REST FRAME 2    @Y30LB15*/ 01591000
         B     @RC00434                                            0436 01592000
@RF00434 BAL   @14,A2COMP                                          0436 01593000
*       END;                        /*                       @Y30LB15*/ 01594000
@RC00434 DS    0H                                                  0438 01595000
*   IF INVLDCHK='1'B                /* ALL DELETED CELLS EMP @Y30LB15*/ 01596000
*     THEN                                                         0438 01597000
@RC00425 DS    0H                                                  0438 01598000
@RC00423 TM    INVLDCHK,B'01000000'                                0438 01599000
         BNO   @RF00438                                            0438 01600000
*     DO;                           /* NO                    @Y30LB15*/ 01601000
*       OUTBUF2(1:46)=B09MSG4;      /* PUT MSG IN BUFFER     @Y30LB15*/ 01602000
         MVC   OUTBUF2(46,R4),B09MSG4                              0440 01603000
*       LIBCHAR=(LIBCNT-1);         /* TRANSLATE LIB#TO CHAR @Y30LB15*/ 01604000
         LR    @09,LIBCNT                                          0441 01605000
         BCTR  @09,0                                               0441 01606000
         STC   @09,LIBCHAR                                         0441 01607000
*       HCHAR='1111'B;              /*                       @Y30LB15*/ 01608000
         OI    HCHAR,B'11110000'                                   0442 01609000
*       OUTBUF2(46)=LIBCHAR;        /* PUT LIBNUM IN MSG     @Y30LB15*/ 01610000
         MVC   OUTBUF2+45(1,R4),LIBCHAR                            0443 01611000
*       CALL PUTIT1;                /*                       @Y30LB15*/ 01612000
         BAL   @14,PUTIT1                                          0444 01613000
*     END;                          /*                       @Y30LB15*/ 01614000
*   RETURN;                         /*                       @Y30LB15*/ 01615000
@EL00020 DS    0H                                                  0446 01616000
@EF00020 DS    0H                                                  0446 01617000
@ER00020 LM    @14,@12,@SA00020                                    0446 01618000
         BR    @14                                                 0446 01619000
*   END LIBCOMP;                    /*                       @Y30LB15*/ 01620000
         B     @EL00020                                            0447 01621000
*                                                                  0448 01622000
*/********************************************************** @Y30LB15*/ 01623000
*/*                                                          @Y30LB15*/ 01624000
*/*  PROCEDURE NAME - A4COMP                                 @Y30LB15*/ 01625000
*/*                                                          @Y30LB15*/ 01626000
*/*  FUNCTION - COMPARE CHUNKS OF THE OLD LIBRARY WHICH WAS  @Y30LB15*/ 01627000
*/*             AN A4 WITH THE LIBRARY EMPTY PATTERN FOR A   @XD00153*/ 01628000
*/*             NEW LIBRARY FOR THE 4TH FRAME PORTION.       @XD00153*/ 01629000
*/*             ALL AVAILABLE CELLS SHOULD BE EMPTY.         @XD00153*/ 01630000
*/*                                                          @Y30LB15*/ 01631000
*/********************************************************** @Y30LB15*/ 01632000
*                                                                  0448 01633000
*A4COMP:                                                           0448 01634000
*   PROCEDURE;                      /*                       @Y30LB15*/ 01635000
A4COMP   STM   @14,@12,@SA00021                                    0448 01636000
*   INBLKPTR=INPTR+264+8;           /* PT PAST PREFIX BLK0   @Y30LB15*/ 01637000
         LA    INBLKPTR,272                                        0449 01638000
         AL    INBLKPTR,INPTR                                      0449 01639000
*   DO I=1 TO 7;                    /* COMP OLD TO EMPTY MAP @Y30LB15*/ 01640000
         LA    I,1                                                 0450 01641000
@DL00450 DS    0H                                                  0451 01642000
*     IF INCHUNK^=SUBBLK0(I)        /* ALL CELLS EMPTY?      @Y30LB15*/ 01643000
*       THEN                                                       0451 01644000
         LR    @09,I                                               0451 01645000
         SLA   @09,5                                               0451 01646000
         LA    @05,SUBBLK0-32(@09)                                 0451 01647000
         CLC   INCHUNK(32,INBLKPTR),0(@05)                         0451 01648000
         BE    @RF00451                                            0451 01649000
*       DO;                         /* NO-ERROR              @Y30LB15*/ 01650000
*         INVLDCHK='1'B;            /* SET ERROR SWITCH      @Y30LB15*/ 01651000
         OI    INVLDCHK,B'01000000'                                0453 01652000
*         I=7;                      /* GET OUT OF LOOP       @Y30LB15*/ 01653000
         LA    I,7                                                 0454 01654000
*       END;                        /*                       @Y30LB15*/ 01655000
*     ELSE                          /* YES-CELLS EMPTY       @Y30LB15*/ 01656000
*       INBLKPTR=INBLKPTR+32;       /* PT NEXT CHUNK         @Y30LB15*/ 01657000
         B     @RC00451                                            0456 01658000
@RF00451 AH    INBLKPTR,@CH00309                                   0456 01659000
*   END;                            /*                       @Y30LB15*/ 01660000
@RC00451 AH    I,@CH00044                                          0457 01661000
         CH    I,@CH00134                                          0457 01662000
         BNH   @DL00450                                            0457 01663000
*   IF INVLDCHK='0'B                /* FRAME 4 MAP EMPTY?    @Y30LB15*/ 01664000
*     THEN                          /* YES                   @Y30LB15*/ 01665000
         TM    INVLDCHK,B'01000000'                                0458 01666000
         BNZ   @RF00458                                            0458 01667000
*     IF LIBSIZE(LIBCNT)^='3'       /* NEW LIB SMALLER A3?   @Y30LB15*/ 01668000
*       THEN                        /* YES                   @Y30LB15*/ 01669000
         LR    @09,LIBCNT                                          0459 01670000
         MH    @09,@CH00033                                        0459 01671000
         ALR   @09,R4                                              0459 01672000
         CLI   LIBSIZE-12(@09),C'3'                                0459 01673000
         BE    @RF00459                                            0459 01674000
*       IF INCHUNK^=SUBBLK0(8)      /* 1ST CHUNK A3 EMPTY?   @Y30LB15*/ 01675000
*         THEN                      /* NO-ERROR              @Y30LB15*/ 01676000
         CLC   INCHUNK(32,INBLKPTR),SUBBLK0+224                    0460 01677000
         BE    @RF00460                                            0460 01678000
*         INVLDCHK='1'B;            /* SET ERROR SWITCH      @Y30LB15*/ 01679000
         OI    INVLDCHK,B'01000000'                                0461 01680000
*       ELSE                        /* CELLS EMPTY           @Y30LB15*/ 01681000
*         CALL A3COMP;              /* CHECK REST FRAME 3    @Y30LB15*/ 01682000
         B     @RC00460                                            0462 01683000
@RF00460 BAL   @14,A3COMP                                          0462 01684000
*     ELSE                                                         0463 01685000
*       ;                           /* A3 LIB STOP COMPARE   @Y30LB15*/ 01686000
@RF00459 DS    0H                                                  0464 01687000
*   ELSE                                                           0464 01688000
*     ;                             /* ERROR OCCURRED        @Y30LB15*/ 01689000
@RF00458 DS    0H                                                  0465 01690000
*   END A4COMP;                     /*                       @Y30LB15*/ 01691000
@EL00021 DS    0H                                                  0465 01692000
@EF00021 DS    0H                                                  0465 01693000
@ER00021 LM    @14,@12,@SA00021                                    0465 01694000
         BR    @14                                                 0465 01695000
*                                                                  0466 01696000
*/********************************************************** @Y30LB15*/ 01697000
*/*                                                          @Y30LB15*/ 01698000
*/*  PROCEDURE NAME - A3COMP                                 @Y30LB15*/ 01699000
*/*                                                          @Y30LB15*/ 01700000
*/*  FUNCTION - COMPARE CHUNKS OF THE OLD LIBRARY WHICH WAS  @Y30LB15*/ 01701000
*/*             AN A3 OR A4 WITH THE LIBRARY EMPTY PATTERN   @XD00153*/ 01702000
*/*             FOR A NEW LIBRARY FOR THE 3RD FRAME PORTION. @XD00153*/ 01703000
*/*             ALL AVAILABLE CELLS SHOULD BE EMPTY.         @XD00153*/ 01704000
*/*                                                          @Y30LB15*/ 01705000
*/********************************************************** @Y30LB15*/ 01706000
*                                                                  0466 01707000
*A3COMP:                                                           0466 01708000
*   PROCEDURE;                      /*                       @Y30LB15*/ 01709000
A3COMP   STM   @14,@12,@SA00022                                    0466 01710000
*   INBLKPTR=INBLKPTR+32+8;         /* PT TO NXT BLK         @Y30LB15*/ 01711000
         AH    INBLKPTR,@CH00319                                   0467 01712000
*   DO I=1 TO 6;                    /* COMP FRAM3 TO OLD MAP @Y30LB15*/ 01713000
         LA    I,1                                                 0468 01714000
@DL00468 DS    0H                                                  0469 01715000
*     IF INCHUNK^=SUBBLK1(I)        /* ALL CELLS EMPTY?      @Y30LB15*/ 01716000
*       THEN                                                       0469 01717000
         LR    @09,I                                               0469 01718000
         SLA   @09,5                                               0469 01719000
         LA    @05,SUBBLK1-32(@09)                                 0469 01720000
         CLC   INCHUNK(32,INBLKPTR),0(@05)                         0469 01721000
         BE    @RF00469                                            0469 01722000
*       DO;                         /* NO-ERROR              @Y30LB15*/ 01723000
*         INVLDCHK='1'B;            /* SET ERROR SWITCH      @Y30LB15*/ 01724000
         OI    INVLDCHK,B'01000000'                                0471 01725000
*         I=6;                      /* GET OUT OF LOOP       @Y30LB15*/ 01726000
         LA    I,6                                                 0472 01727000
*       END;                        /*                       @Y30LB15*/ 01728000
*     ELSE                          /* CELLS EMPTY-CONTINUE  @Y30LB15*/ 01729000
*       INBLKPTR=INBLKPTR+32;       /* POINT TO NEXT CHUNK   @Y30LB15*/ 01730000
         B     @RC00469                                            0474 01731000
@RF00469 AH    INBLKPTR,@CH00309                                   0474 01732000
*   END;                            /* END DO LOOP           @Y30LB15*/ 01733000
@RC00469 AH    I,@CH00044                                          0475 01734000
         CH    I,@CH00227                                          0475 01735000
         BNH   @DL00468                                            0475 01736000
*   IF INVLDCHK='0'B                /* FRAME 3 EMPTY?        @Y30LB15*/ 01737000
*     THEN                          /* YES                   @Y30LB15*/ 01738000
         TM    INVLDCHK,B'01000000'                                0476 01739000
         BNZ   @RF00476                                            0476 01740000
*     IF LIBSIZE(LIBCNT)^='2'       /* NEWLIB SMALLER A2?    @Y30LB15*/ 01741000
*       THEN                        /* YES                   @Y30LB15*/ 01742000
         LR    @09,LIBCNT                                          0477 01743000
         MH    @09,@CH00033                                        0477 01744000
         ALR   @09,R4                                              0477 01745000
         CLI   LIBSIZE-12(@09),C'2'                                0477 01746000
         BE    @RF00477                                            0477 01747000
*       IF INCHUNK^=SUBBLK1(7)      /* 1ST CHUNK A2 EMPTY?   @Y30LB15*/ 01748000
*         THEN                      /* NO-ERROR              @Y30LB15*/ 01749000
         CLC   INCHUNK(32,INBLKPTR),SUBBLK1+192                    0478 01750000
         BE    @RF00478                                            0478 01751000
*         INVLDCHK='1'B;            /* SET ERROR SWITCH      @Y30LB15*/ 01752000
         OI    INVLDCHK,B'01000000'                                0479 01753000
*       ELSE                        /* CELLS EMPTY           @Y30LB15*/ 01754000
*         CALL A2COMP;              /* CHECK REST FRAME 2    @Y30LB15*/ 01755000
         B     @RC00478                                            0480 01756000
@RF00478 BAL   @14,A2COMP                                          0480 01757000
*     ELSE                                                         0481 01758000
*       ;                           /* A2 LIB STOP COMPARE   @Y30LB15*/ 01759000
@RF00477 DS    0H                                                  0482 01760000
*   ELSE                                                           0482 01761000
*     ;                             /* ERROR OCCURRED        @Y30LB15*/ 01762000
@RF00476 DS    0H                                                  0483 01763000
*   END A3COMP;                     /*                       @Y30LB15*/ 01764000
@EL00022 DS    0H                                                  0483 01765000
@EF00022 DS    0H                                                  0483 01766000
@ER00022 LM    @14,@12,@SA00022                                    0483 01767000
         BR    @14                                                 0483 01768000
*                                                                  0484 01769000
*/********************************************************** @Y30LB15*/ 01770000
*/*                                                          @Y30LB15*/ 01771000
*/*  PROCEDURE NAME - A2COMP                                 @Y30LB15*/ 01772000
*/*                                                          @Y30LB15*/ 01773000
*/*  FUNCTION - COMPARE CHUNKS OF THE OLD LIBRARY WHICH WAS  @Y30LB15*/ 01774000
*/*             AN A2 OR LARGER WITH THE LIBRARY EMPTY       @XD00153*/ 01775000
*/*             PATTERN FOR A NEW LIBRARY FOR THE 2ND FRAME  @XD00153*/ 01776000
*/*             PORTION.  ALL AVAILABLE CELLS SHOULD BE      @XD00153*/ 01777000
*/*             EMPTY.                                       @XD00153*/ 01778000
*/*                                                          @Y30LB15*/ 01779000
*/********************************************************** @Y30LB15*/ 01780000
*                                                                  0484 01781000
*A2COMP:                                                           0484 01782000
*   PROCEDURE;                      /*                       @Y30LB15*/ 01783000
A2COMP   STM   @14,@12,12(@13)                                     0484 01784000
*   INBLKPTR=INBLKPTR+32;           /* PT 2ND CHUNK A2 FRAME @Y30LB15*/ 01785000
         AH    INBLKPTR,@CH00309                                   0485 01786000
*   IF INCHUNK^=SUBBLK1(8)          /* ALL CELLS EMPTY?      @Y30LB15*/ 01787000
*     THEN                          /* NO-ERROR              @Y30LB15*/ 01788000
         CLC   INCHUNK(32,INBLKPTR),SUBBLK1+224                    0486 01789000
         BE    @RF00486                                            0486 01790000
*     INVLDCHK='1'B;                /* SET ERROR SWITCH      @Y30LB15*/ 01791000
         OI    INVLDCHK,B'01000000'                                0487 01792000
*   ELSE                                                           0488 01793000
*     DO;                           /* CELLS EMPTY-CONTINUE  @Y30LB15*/ 01794000
         B     @RC00486                                            0488 01795000
@RF00486 DS    0H                                                  0489 01796000
*       INBLKPTR=INBLKPTR+32+8;     /* PT TO NEXT BLOCK      @Y30LB15*/ 01797000
         AH    INBLKPTR,@CH00319                                   0489 01798000
*       DO I=1 TO 5;                /*                       @Y30LB15*/ 01799000
         LA    I,1                                                 0490 01800000
@DL00490 DS    0H                                                  0491 01801000
*         IF INCHUNK^=SUBBLK2(I)    /* FRAME2 CELLS EMPTY?   @Y30LB15*/ 01802000
*           THEN                                                   0491 01803000
         LR    @05,I                                               0491 01804000
         SLA   @05,5                                               0491 01805000
         LA    @01,SUBBLK2-32(@05)                                 0491 01806000
         CLC   INCHUNK(32,INBLKPTR),0(@01)                         0491 01807000
         BE    @RF00491                                            0491 01808000
*           DO;                     /* NO-ERROR              @Y30LB15*/ 01809000
*             INVLDCHK='1'B;        /* SET ERROR SWITCH      @Y30LB15*/ 01810000
         OI    INVLDCHK,B'01000000'                                0493 01811000
*             I=5;                  /* GET OUT OF LOOP       @Y30LB15*/ 01812000
         LA    I,5                                                 0494 01813000
*           END;                    /*                       @Y30LB15*/ 01814000
*         ELSE                      /* CELLS EMPTY-CHECK MOR @Y30LB15*/ 01815000
*           INBLKPTR=INBLKPTR+32;   /* PT TO NEXT CHUNK      @Y30LB15*/ 01816000
         B     @RC00491                                            0496 01817000
@RF00491 AH    INBLKPTR,@CH00309                                   0496 01818000
*       END;                        /*                       @Y30LB15*/ 01819000
@RC00491 AH    I,@CH00044                                          0497 01820000
         CH    I,@CH00121                                          0497 01821000
         BNH   @DL00490                                            0497 01822000
*     END;                          /* END ELSE DO           @Y30LB15*/ 01823000
*   END A2COMP;                     /*                       @Y30LB15*/ 01824000
@EL00023 DS    0H                                                  0499 01825000
@EF00023 DS    0H                                                  0499 01826000
@ER00023 LM    @14,@12,12(@13)                                     0499 01827000
         BR    @14                                                 0499 01828000
*                                                                  0500 01829000
*/********************************************************** @Y30LB15*/ 01830000
*/*                                                          @Y30LB15*/ 01831000
*/*  PROCEDURE NAME - CUBECHK                                @Y30LB15*/ 01832000
*/*                                                          @Y30LB15*/ 01833000
*/*  FUNCTION - THE CELL BIT MAP HAS BEEN COPIED TO THE NEW  @Y30LB15*/ 01834000
*/*             CELL MAP.  THIS ROUTINE READS EACH CUBE      @XD00153*/ 01835000
*/*             POINTER AND GOES TO THE CORRESPONDING CUBE.  @XD00153*/ 01836000
*/*             IF THE 32 CELLS OF THE CUBE ARE FULL, THE    @XD00153*/ 01837000
*/*             CUBE BIT IN THE HEADER BLOCK IS SET TO 0.    @XD00153*/ 01838000
*/*                                                          @Y30LB15*/ 01839000
*/********************************************************** @Y30LB15*/ 01840000
*                                                                  0500 01841000
*CUBECHK:                                                          0500 01842000
*   PROCEDURE;                      /*                       @Y30LB15*/ 01843000
CUBECHK  STM   @14,@12,12(@13)                                     0500 01844000
*   CUBEAPTR=OUTPTR+16;             /* BEGIN CUBE BIT MAP    @Y30LB15*/ 01845000
         LA    CUBEAPTR,16                                         0501 01846000
         ALR   CUBEAPTR,OUTPTR                                     0501 01847000
*   BLKPTR=CUBEAPTR+22;             /* BEGIN CUBE PTR LIST   @Y30LB15*/ 01848000
         LA    BLKPTR,22                                           0502 01849000
         ALR   BLKPTR,CUBEAPTR                                     0502 01850000
*   OUTPTR=OUTPTR+272;              /* BEGIN CELL BIT MAP    @Y30LB15*/ 01851000
         AH    OUTPTR,@CH00393                                     0503 01852000
*DO01:                                                             0504 01853000
*   DO WHILE CBPTR^='FF'X;          /* STOP WHEN NO MOREPTRS @Y30LB15*/ 01854000
DO01     B     @DE00504                                            0504 01855000
@DL00504 DS    0H                                                  0505 01856000
*DO02:                                                             0505 01857000
*     DO I=1 TO 8;                  /* ONE BYTE OF CUBE BITS @Y30LB15*/ 01858000
DO02     LA    I,1                                                 0505 01859000
@DL00505 DS    0H                                                  0506 01860000
*/********************************************************** @Y30LB15*/ 01861000
*/*                                                          @Y30LB15*/ 01862000
*/*  FIND CUBE POINTED TO BY CUBE POINTER IN HEADER BLOCK.   @Y30LB15*/ 01863000
*/*                                                          @Y30LB15*/ 01864000
*/********************************************************** @Y30LB15*/ 01865000
*                                                                  0506 01866000
*       IF CBBLK='00'B              /* DATA BLOCK ZERO?      @Y30LB15*/ 01867000
*         THEN                      /* YES                   @Y30LB15*/ 01868000
         TM    CBBLK(BLKPTR),B'11000000'                           0506 01869000
         BNZ   @RF00506                                            0506 01870000
*         OFSTPTR=OUTPTR+16;        /* POINT PAST PREFIX     @Y30LB15*/ 01871000
         LA    OFSTPTR,16                                          0507 01872000
         ALR   OFSTPTR,OUTPTR                                      0507 01873000
*       ELSE                                                       0508 01874000
*         IF CBBLK='01'B            /* DATA BLOCK ONE?       @Y30LB15*/ 01875000
*           THEN                    /* YES                   @Y30LB15*/ 01876000
         B     @RC00506                                            0508 01877000
@RF00506 TM    CBBLK(BLKPTR),B'01000000'                           0508 01878000
         BNO   @RF00508                                            0508 01879000
         TM    CBBLK(BLKPTR),B'10000000'                           0508 01880000
         BNZ   @RF00508                                            0508 01881000
*           OFSTPTR=OUTPTR+272+16;  /* PT PAST PREFIX NXTBLK @Y30LB15*/ 01882000
         LA    OFSTPTR,288                                         0509 01883000
         ALR   OFSTPTR,OUTPTR                                      0509 01884000
*         ELSE                                                     0510 01885000
*           IF CBBLK='10'B          /* DATA BLOCK TWO?       @Y30LB15*/ 01886000
*             THEN                  /* YES                   @Y30LB15*/ 01887000
         B     @RC00508                                            0510 01888000
@RF00508 TM    CBBLK(BLKPTR),B'10000000'                           0510 01889000
         BNO   @RF00510                                            0510 01890000
         TM    CBBLK(BLKPTR),B'01000000'                           0510 01891000
         BNZ   @RF00510                                            0510 01892000
*             OFSTPTR=OUTPTR+(2*272)+16;/* PT PAST PREFIX BLK2     0511 01893000
*                                                            @Y30LB15*/ 01894000
         LA    OFSTPTR,560                                         0511 01895000
         ALR   OFSTPTR,OUTPTR                                      0511 01896000
*           ELSE                    /* NO-MUST BE BLOCK 3    @Y30LB15*/ 01897000
*             OFSTPTR=OUTPTR+(3*272)+16;/* PT PAST PREFIX BLK3     0512 01898000
*                                                            @Y30LB15*/ 01899000
         B     @RC00510                                            0512 01900000
@RF00510 LA    OFSTPTR,832                                         0512 01901000
         ALR   OFSTPTR,OUTPTR                                      0512 01902000
*       OFFSET=CBPTR;               /* PTR TO SHIFT AREA     @Y30LB15*/ 01903000
@RC00510 DS    0H                                                  0513 01904000
@RC00508 DS    0H                                                  0513 01905000
@RC00506 MVC   OFFSET(1),CBPTR(BLKPTR)                             0513 01906000
*       SLL(OFFSET,2);              /* SHIFT PT ELIM BLKBITS @Y30LB15*/ 01907000
         SLR   @09,@09                                             0514 01908000
         IC    @09,OFFSET                                          0514 01909000
         SLL   @09,2                                               0514 01910000
         STC   @09,OFFSET                                          0514 01911000
*       OFSTPTR=OFSTPTR+OFFSET;     /* POINT TO CUBE         @Y30LB15*/ 01912000
         MVC   @ZT00003+3(1),OFFSET                                0515 01913000
         AL    OFSTPTR,@ZT00003                                    0515 01914000
*/********************************************************** @Y30LB15*/ 01915000
*/*                                                          @Y30LB15*/ 01916000
*/*  DETERMINE IF CUBE IS FULL                               @Y30LB15*/ 01917000
*/*                                                          @Y30LB15*/ 01918000
*/********************************************************** @Y30LB15*/ 01919000
*                                                                  0516 01920000
*       IF CUBE='00000000'X         /* ARE ALL CELLS FULL?   @Y30LB15*/ 01921000
*         THEN                      /* YES                   @Y30LB15*/ 01922000
         L     @09,CUBE(,OFSTPTR)                                  0516 01923000
         LTR   @09,@09                                             0516 01924000
         BNZ   @RF00516                                            0516 01925000
*         CUBEBYTE=CUBEBYTE&CUBEOR1(I);/* ZERO APPRP CUBE BIT      0517 01926000
*                                                            @Y30LB15*/ 01927000
         SLR   @09,@09                                             0517 01928000
         IC    @09,CUBEBYTE(,CUBEAPTR)                             0517 01929000
         LA    @06,CUBEOR1-1(I)                                    0517 01930000
         MVC   @ZT00003+3(1),0(@06)                                0517 01931000
         N     @09,@ZT00003                                        0517 01932000
         STC   @09,CUBEBYTE(,CUBEAPTR)                             0517 01933000
*       ELSE                                                       0518 01934000
*         ;                         /*                       @Y30LB15*/ 01935000
@RF00516 DS    0H                                                  0519 01936000
*       BLKPTR=BLKPTR+1;            /* POINT TO NEXT CUBEPTR @Y30LB15*/ 01937000
         AH    BLKPTR,@CH00044                                     0519 01938000
*     END DO02;                     /*                       @Y30LB15*/ 01939000
         AH    I,@CH00044                                          0520 01940000
         CH    I,@CH00042                                          0520 01941000
         BNH   @DL00505                                            0520 01942000
*     CUBEAPTR=CUBEAPTR+1;          /* PT NXT BYTE CUBEBITMP @Y30LB15*/ 01943000
         AH    CUBEAPTR,@CH00044                                   0521 01944000
*   END DO01;                       /*                       @Y30LB15*/ 01945000
@DE00504 CLI   CBPTR(BLKPTR),X'FF'                                 0522 01946000
         BNE   @DL00504                                            0522 01947000
*   RETURN;                         /*                       @Y30LB15*/ 01948000
@EL00024 DS    0H                                                  0523 01949000
@EF00024 DS    0H                                                  0523 01950000
@ER00024 LM    @14,@12,12(@13)                                     0523 01951000
         BR    @14                                                 0523 01952000
*   END CUBECHK;                    /*                       @Y30LB15*/ 01953000
*                                                                  0525 01954000
*/********************************************************** @Y30LB15*/ 01955000
*/*                                                          @Y30LB15*/ 01956000
*/*  PROCEDURE NAME - USEREXIT                               @Y30LB15*/ 01957000
*/*                                                          @Y30LB15*/ 01958000
*/*  FUNCTION - CALL USER PROGRAM WHICH WILL SUPPLY THE CUBE @Y30LB15*/ 01959000
*/*             POINTER LIST THAT IS THE LOADING PATTERN     @XD00153*/ 01960000
*/*             FOR THE LIBRARY.                             @XD00153*/ 01961000
*/*                                                          @Y30LB15*/ 01962000
*/********************************************************** @Y30LB15*/ 01963000
*                                                                  0525 01964000
*USEREXIT:                                                         0525 01965000
*   PROCEDURE;                      /*                       @Y30LB15*/ 01966000
USEREXIT STM   @14,@12,@SA00025                                    0525 01967000
*/********************************************************** @Y30LB15*/ 01968000
*/*                                                          @Y30LB15*/ 01969000
*/* SET LENGTH OF PARMFIELD DEPENDING ON THE SIZE OF THE LIB @Y30LB15*/ 01970000
*/*                                                          @Y30LB15*/ 01971000
*/********************************************************** @Y30LB15*/ 01972000
*                                                                  0526 01973000
*   IF LIBSIZE(LIBCNT)='1'          /* A1 LIBRARY?           @Y30LB15*/ 01974000
*     THEN                          /* YES                   @Y30LB15*/ 01975000
         LR    @09,LIBCNT                                          0526 01976000
         MH    @09,@CH00033                                        0526 01977000
         ALR   @09,R4                                              0526 01978000
         CLI   LIBSIZE-12(@09),C'1'                                0526 01979000
         BNE   @RF00526                                            0526 01980000
*     PRMLEN=LENGTH(A1LIST)+2;      /*                       @Y30LB15*/ 01981000
         MVC   PRMLEN(2),@CH00113                                  0527 01982000
*   ELSE                            /* NO                    @Y30LB15*/ 01983000
*     IF LIBSIZE(LIBCNT)='2'        /* A2 LIBRARY?           @Y30LB15*/ 01984000
*       THEN                        /* YES                   @Y30LB15*/ 01985000
         B     @RC00526                                            0528 01986000
@RF00526 LR    @09,LIBCNT                                          0528 01987000
         MH    @09,@CH00033                                        0528 01988000
         ALR   @09,R4                                              0528 01989000
         CLI   LIBSIZE-12(@09),C'2'                                0528 01990000
         BNE   @RF00528                                            0528 01991000
*       PRMLEN=LENGTH(A2LIST)+2;    /*                       @Y30LB15*/ 01992000
         MVC   PRMLEN(2),@CH00808                                  0529 01993000
*     ELSE                          /* NO                    @Y30LB15*/ 01994000
*       IF LIBSIZE(LIBCNT)='3'      /* A3 LIBRARY?           @Y30LB15*/ 01995000
*         THEN                      /* YES                   @Y30LB15*/ 01996000
         B     @RC00528                                            0530 01997000
@RF00528 LR    @09,LIBCNT                                          0530 01998000
         MH    @09,@CH00033                                        0530 01999000
         ALR   @09,R4                                              0530 02000000
         CLI   LIBSIZE-12(@09),C'3'                                0530 02001000
         BNE   @RF00530                                            0530 02002000
*         PRMLEN=LENGTH(A3LIST)+2;  /*                       @Y30LB15*/ 02003000
         MVC   PRMLEN(2),@CH00809                                  0531 02004000
*       ELSE                        /* NO-A4 LIB             @Y30LB15*/ 02005000
*         PRMLEN=LENGTH(A4LIST)+2;  /*                       @Y30LB15*/ 02006000
         B     @RC00530                                            0532 02007000
@RF00530 MVC   PRMLEN(2),@CH00426                                  0532 02008000
*/********************************************************** @Y30LB15*/ 02009000
*/*                                                          @Y30LB15*/ 02010000
*/* SET UP SAVE AREA AND CALL USER EXIT ROUTINE THEN         @Y30LB15*/ 02011000
*/* RESTORE REGS AND CALL ROUTINES TO CHECK LOAD LIST        @Y30LB15*/ 02012000
*/* PROVIDED BY THE USER.                                    @Y30LB15*/ 02013000
*/*                                                          @Y30LB15*/ 02014000
*/********************************************************** @Y30LB15*/ 02015000
*                                                                  0533 02016000
*   R1=ADDR(USERLIST);              /*                       @Y30LB15*/ 02017000
@RC00530 DS    0H                                                  0533 02018000
@RC00528 DS    0H                                                  0533 02019000
@RC00526 LA    R1,USERLIST                                         0533 02020000
*   RESPECIFY                                                      0534 02021000
*     R2 RSTD;                      /* RESTRICT R2 DURNGCALL @Y30LB15*/ 02022000
*   R2=ADDR(MAPEXIT(LIBCNT));       /*                       @Y30LB15*/ 02023000
         LR    @09,LIBCNT                                          0535 02024000
         MH    @09,@CH00033                                        0535 02025000
         LA    R2,MAPEXIT-12(@09,R4)                               0535 02026000
*   GEN(LINK EPLOC=(R2),MF=(E,(1)));/*                       @Y30LB15*/ 02027000
         LINK EPLOC=(R2),MF=(E,(1))                                     02028000
*   RESPECIFY                                                      0537 02029000
*     R2 UNRSTD;                    /* UNRESTRICT REG 2      @Y30LB15*/ 02030000
*   IF R15=0                        /* WAS ROUTINE SUCCESFUL @Y30LB15*/ 02031000
*     THEN                          /*                       @Y30LB15*/ 02032000
         LTR   R15,R15                                             0538 02033000
         BNZ   @RF00538                                            0538 02034000
*     CALL CHKLIST;                 /*                       @Y30LB15*/ 02035000
         BAL   @14,CHKLIST                                         0539 02036000
*   ELSE                                                           0540 02037000
*     DO;                           /*                       @Y30LB15*/ 02038000
         B     @RC00538                                            0540 02039000
@RF00538 DS    0H                                                  0541 02040000
*       OUTBUF2(1:77)=B09MSG3;      /* WARN MSG IN BUFFER    @Y30LB15*/ 02041000
         MVC   OUTBUF2(77,R4),B09MSG3                              0541 02042000
*       LIBCHAR=(LIBCNT-1);         /* TRANSLATE NUM TO CHAR @Y30LB15*/ 02043000
         LR    @09,LIBCNT                                          0542 02044000
         BCTR  @09,0                                               0542 02045000
         STC   @09,LIBCHAR                                         0542 02046000
*       HCHAR='1111'B;              /*                       @Y30LB15*/ 02047000
         OI    HCHAR,B'11110000'                                   0543 02048000
*       OUTBUF2(51)=LIBCHAR;        /* PUT LIBNUM IN MSGBUF  @Y30LB15*/ 02049000
         MVC   OUTBUF2+50(1,R4),LIBCHAR                            0544 02050000
*       CALL PUTIT3;                /* WRITE WARNING MSG     @Y30LB15*/ 02051000
         BAL   @14,PUTIT3                                          0545 02052000
*     END;                          /*                       @Y30LB15*/ 02053000
*   END USEREXIT;                   /*                       @Y30LB15*/ 02054000
@EL00025 DS    0H                                                  0547 02055000
@EF00025 DS    0H                                                  0547 02056000
@ER00025 LM    @14,@12,@SA00025                                    0547 02057000
         BR    @14                                                 0547 02058000
*                                                                  0548 02059000
*/********************************************************** @Y30LB15*/ 02060000
*/*                                                          @Y30LB15*/ 02061000
*/*  PROCEDURE NAME - CHKLIST                                @Y30LB15*/ 02062000
*/*                                                          @Y30LB15*/ 02063000
*/*  FUNCTION - CHECK THE NUMBER OF CUBE POINTERS THAT       @XD00153*/ 02064000
*/*             SHOULD BE PRESENT FOR VALIDITY DEPENDING ON  @XD00153*/ 02065000
*/*             ON THE SIZE OF THE LIBRARY.                  @XD00153*/ 02066000
*/*                                                          @Y30LB15*/ 02067000
*/********************************************************** @Y30LB15*/ 02068000
*                                                                  0548 02069000
*CHKLIST:                                                          0548 02070000
*   PROCEDURE;                      /*                       @Y30LB15*/ 02071000
CHKLIST  STM   @14,@12,@SA00026                                    0548 02072000
*   INVLDPTR='0'B;                  /* INIT SWT GOOD LIST    @Y30LB15*/ 02073000
         NI    INVLDPTR,B'11011111'                                0549 02074000
*   IF LIBSIZE(LIBCNT)='1'          /* A1 LIBRARY?           @Y30LB15*/ 02075000
*     THEN                                                         0550 02076000
         LR    @09,LIBCNT                                          0550 02077000
         MH    @09,@CH00033                                        0550 02078000
         ALR   @09,R4                                              0550 02079000
         CLI   LIBSIZE-12(@09),C'1'                                0550 02080000
         BNE   @RF00550                                            0550 02081000
*     DO;                           /* YES                   @Y30LB15*/ 02082000
*       J=28;                       /* SHOULD BE 28 PTRS     @Y30LB15*/ 02083000
         MVC   J(2),@CH00331                                       0552 02084000
*       LWLIM='A8'X;                /* NOT LESS THAN VAL     @Y30LB15*/ 02085000
         LA    LWLIM,168                                           0553 02086000
*       CALL CHKPTR;                /*                       @Y30LB15*/ 02087000
         BAL   @14,CHKPTR                                          0554 02088000
*       IF INVLDPTR='0'B            /* PTR OK?               @Y30LB15*/ 02089000
*         THEN                      /* YES                   @Y30LB15*/ 02090000
         TM    INVLDPTR,B'00100000'                                0555 02091000
         BNZ   @RF00555                                            0555 02092000
*         OBLOCK(23:50)=A1LIST;     /* PUT USRLST IN OUTBUF  @Y30LB15*/ 02093000
         MVC   OBLOCK+22(28,OUTPTR),A1LIST                         0556 02094000
*       ELSE                                                       0557 02095000
*         ;                         /*                       @Y30LB15*/ 02096000
@RF00555 DS    0H                                                  0558 02097000
*     END;                          /*                       @Y30LB15*/ 02098000
*   ELSE                            /* NOT A1                @Y30LB15*/ 02099000
*     IF LIBSIZE(LIBCNT)='2'        /* A2 LIB?               @Y30LB15*/ 02100000
*       THEN                                                       0559 02101000
         B     @RC00550                                            0559 02102000
@RF00550 LR    @09,LIBCNT                                          0559 02103000
         MH    @09,@CH00033                                        0559 02104000
         ALR   @09,R4                                              0559 02105000
         CLI   LIBSIZE-12(@09),C'2'                                0559 02106000
         BNE   @RF00559                                            0559 02107000
*       DO;                         /* YES                   @Y30LB15*/ 02108000
*         J=77;                     /* SHOULD BE 77 PTRS     @Y30LB15*/ 02109000
         MVC   J(2),@CH00433                                       0561 02110000
*         LWLIM='70'X;              /* NOT LESS THAN VAL     @Y30LB15*/ 02111000
         LA    LWLIM,112                                           0562 02112000
*         CALL CHKPTR;              /*                       @Y30LB15*/ 02113000
         BAL   @14,CHKPTR                                          0563 02114000
*         IF INVLDPTR='0'B          /* PTR OK?               @Y30LB15*/ 02115000
*           THEN                    /* YES                   @Y30LB15*/ 02116000
         TM    INVLDPTR,B'00100000'                                0564 02117000
         BNZ   @RF00564                                            0564 02118000
*           OBLOCK(23:99)=A2LIST;   /* PUT USRLST IN OUTBUF  @Y30LB15*/ 02119000
         MVC   OBLOCK+22(77,OUTPTR),A2LIST                         0565 02120000
*         ELSE                                                     0566 02121000
*           ;                       /*                       @Y30LB15*/ 02122000
@RF00564 DS    0H                                                  0567 02123000
*       END;                        /*                       @Y30LB15*/ 02124000
*     ELSE                          /* NOT A2                @Y30LB15*/ 02125000
*       IF LIBSIZE(LIBCNT)='3'      /* A3 LIB?               @Y30LB15*/ 02126000
*         THEN                                                     0568 02127000
         B     @RC00559                                            0568 02128000
@RF00559 LR    @09,LIBCNT                                          0568 02129000
         MH    @09,@CH00033                                        0568 02130000
         ALR   @09,R4                                              0568 02131000
         CLI   LIBSIZE-12(@09),C'3'                                0568 02132000
         BNE   @RF00568                                            0568 02133000
*         DO;                       /* YES                   @Y30LB15*/ 02134000
*           J=126;                  /* SHOULD BE 126 PTRS    @Y30LB15*/ 02135000
         MVC   J(2),@CH00431                                       0570 02136000
*           LWLIM='38'X;            /* NOT LESS THAN VAL     @Y30LB15*/ 02137000
         LA    LWLIM,56                                            0571 02138000
*           CALL CHKPTR;            /*                       @Y30LB15*/ 02139000
         BAL   @14,CHKPTR                                          0572 02140000
*           IF INVLDPTR='0'B        /* PTR OK?               @Y30LB15*/ 02141000
*             THEN                  /* YES                   @Y30LB15*/ 02142000
         TM    INVLDPTR,B'00100000'                                0573 02143000
         BNZ   @RF00573                                            0573 02144000
*             OBLOCK(23:148)=A3LIST;/* PUT USRLST IN OUTBUF  @Y30LB15*/ 02145000
         MVC   OBLOCK+22(126,OUTPTR),A3LIST                        0574 02146000
*           ELSE                                                   0575 02147000
*             ;                     /*                       @Y30LB15*/ 02148000
@RF00573 DS    0H                                                  0576 02149000
*         END;                      /*                       @Y30LB15*/ 02150000
*       ELSE                                                       0577 02151000
*         DO;                       /* A4 LIB                @Y30LB15*/ 02152000
         B     @RC00568                                            0577 02153000
@RF00568 DS    0H                                                  0578 02154000
*           J=175;                  /* SHOULD BE 175 PTRS    @Y30LB15*/ 02155000
         MVC   J(2),@CH00429                                       0578 02156000
*           LWLIM='00'X;            /* VAL MUST BE > 0       @Y30LB15*/ 02157000
         SLR   LWLIM,LWLIM                                         0579 02158000
*           CALL CHKPTR;            /*                       @Y30LB15*/ 02159000
         BAL   @14,CHKPTR                                          0580 02160000
*           IF INVLDPTR='0'B        /* PTRS OK?              @Y30LB15*/ 02161000
*             THEN                  /* YES                   @Y30LB15*/ 02162000
         TM    INVLDPTR,B'00100000'                                0581 02163000
         BNZ   @RF00581                                            0581 02164000
*             OBLOCK(23:197)=A4LIST;/* PUT USRLST IN OUTBUF  @Y30LB15*/ 02165000
         MVC   OBLOCK+22(175,OUTPTR),A4LIST                        0582 02166000
*           ELSE                                                   0583 02167000
*             ;                     /*                       @Y30LB15*/ 02168000
@RF00581 DS    0H                                                  0584 02169000
*         END;                      /*                       @Y30LB15*/ 02170000
*   IF INVLDPTR='1'B                /* WAS ERROR FOUND?      @Y30LB15*/ 02171000
*     THEN                                                         0585 02172000
@RC00568 DS    0H                                                  0585 02173000
@RC00559 DS    0H                                                  0585 02174000
@RC00550 TM    INVLDPTR,B'00100000'                                0585 02175000
         BNO   @RF00585                                            0585 02176000
*     DO;                           /* YES                   @Y30LB15*/ 02177000
*       OUTBUF2(1:77)=B09MSG3;      /* WARN MSG IN BUFFER    @Y30LB15*/ 02178000
         MVC   OUTBUF2(77,R4),B09MSG3                              0587 02179000
*       LIBCHAR=(LIBCNT-1);         /* TRANSLATE NUM TO CHAR @Y30LB15*/ 02180000
         LR    @09,LIBCNT                                          0588 02181000
         BCTR  @09,0                                               0588 02182000
         STC   @09,LIBCHAR                                         0588 02183000
*       HCHAR='1111'B;              /*                       @Y30LB15*/ 02184000
         OI    HCHAR,B'11110000'                                   0589 02185000
*       OUTBUF2(51)=LIBCHAR;        /* PUT LIBNUM IN MSGBUF  @Y30LB15*/ 02186000
         MVC   OUTBUF2+50(1,R4),LIBCHAR                            0590 02187000
*       CALL PUTIT3;                /* WRITE WARNING MSG     @Y30LB15*/ 02188000
         BAL   @14,PUTIT3                                          0591 02189000
*     END;                          /*                       @Y30LB15*/ 02190000
*   ELSE                                                           0593 02191000
*     ;                             /*                       @Y30LB15*/ 02192000
@RF00585 DS    0H                                                  0594 02193000
*   END CHKLIST;                    /*                       @Y30LB15*/ 02194000
@EL00026 DS    0H                                                  0594 02195000
@EF00026 DS    0H                                                  0594 02196000
@ER00026 LM    @14,@12,@SA00026                                    0594 02197000
         BR    @14                                                 0594 02198000
*                                                                  0595 02199000
*/********************************************************** @Y30LB15*/ 02200000
*/*                                                          @Y30LB15*/ 02201000
*/*  PROCEDURE NAME - CHKPTR                                 @Y30LB15*/ 02202000
*/*                                                          @Y30LB15*/ 02203000
*/*  FUNCTION - A POINTER MUST BE INSIDE THE AREA FOR A      @Y30LB15*/ 02204000
*/*             SPECIFIC LIBRARY SIZE.  OF EVERY 8 WORDS,    @XD00153*/ 02205000
*/*             THE 8TH WORD IS NOT A VALID CUBE AND THERE   @XD00153*/ 02206000
*/*             SHOULD NOT BE A POINTER TO IT.               @XD00153*/ 02207000
*/*                                                          @Y30LB15*/ 02208000
*/********************************************************** @Y30LB15*/ 02209000
*                                                                  0595 02210000
*CHKPTR:                                                           0595 02211000
*   PROCEDURE;                      /*                       @Y30LB15*/ 02212000
CHKPTR   STM   @14,@12,12(@13)                                     0595 02213000
*   USERPTR=ADDR(A4LIST);           /* BEGIN USER LOAD LIST  @Y30LB15*/ 02214000
         LA    USERPTR,A4LIST                                      0596 02215000
*   DO I=1 TO J;                    /*                       @Y30LB15*/ 02216000
         LA    I,1                                                 0597 02217000
         B     @DE00597                                            0597 02218000
@DL00597 DS    0H                                                  0598 02219000
*     IF USRCBPTR>=LWLIM&USRCBPTR<='C6'X&USRCB^='0111'B&USRCB^='1111'B  02220000
*       THEN                        /* PTR OK-CONTINUE CHK   @Y30LB15*/ 02221000
         MVC   @ZT00003+3(1),USRCBPTR(USERPTR)                     0598 02222000
         C     LWLIM,@ZT00003                                      0598 02223000
         BH    @RF00598                                            0598 02224000
         CLI   USRCBPTR(USERPTR),X'C6'                             0598 02225000
         BH    @RF00598                                            0598 02226000
         TM    USRCB(USERPTR),B'00000111'                          0598 02227000
         BNO   @GL00004                                            0598 02228000
         TM    USRCB(USERPTR),B'00001000'                          0598 02229000
         BZ    @RF00598                                            0598 02230000
@GL00004 TM    USRCB(USERPTR),B'00001111'                          0598 02231000
         BO    @RF00598                                            0598 02232000
*       USERPTR=USERPTR+1;          /* PT NEXT CUBE POINTER  @Y30LB15*/ 02233000
         AH    USERPTR,@CH00044                                    0599 02234000
*     ELSE                                                         0600 02235000
*       DO;                         /* INVALID PTR           @Y30LB15*/ 02236000
         B     @RC00598                                            0600 02237000
@RF00598 DS    0H                                                  0601 02238000
*         INVLDPTR='1'B;            /* SET INVALID SWT       @Y30LB15*/ 02239000
         OI    INVLDPTR,B'00100000'                                0601 02240000
*         I=J;                      /* GET OUT OF LOOP       @Y30LB15*/ 02241000
         LH    I,J                                                 0602 02242000
*       END;                        /*                       @Y30LB15*/ 02243000
*   END;                            /*                       @Y30LB15*/ 02244000
@RC00598 AH    I,@CH00044                                          0604 02245000
@DE00597 CH    I,J                                                 0604 02246000
         BNH   @DL00597                                            0604 02247000
*   END CHKPTR;                     /*                       @Y30LB15*/ 02248000
@EL00027 DS    0H                                                  0605 02249000
@EF00027 DS    0H                                                  0605 02250000
@ER00027 LM    @14,@12,12(@13)                                     0605 02251000
         BR    @14                                                 0605 02252000
*                                                                  0606 02253000
*/***********************************************************@Y30LB12*/ 02254000
*/*                                                          @Y30LB12*/ 02255000
*/* PROCEDURE NAME - PUTIT1                                  @Y30LB12*/ 02256000
*/*                                                          @Y30LB12*/ 02257000
*/* FUNCTION - CALL ICGDSMSG, MESSAGE PRINT SUBROUTINE, TO   @Y30LB12*/ 02258000
*/*            PUT TERMINATING MESSAGE FOR WHICH TEXT IS NOT @Y30LB12*/ 02259000
*/*            IN ICGDSMSG BUT ALREADY BUILT IN 'OUTBUF2'    @Y30LB12*/ 02260000
*/*                                                          @Y30LB12*/ 02261000
*/***********************************************************@Y30LB12*/ 02262000
*                                                                  0606 02263000
*PUTIT1:                                                           0606 02264000
*   PROCEDURE;                      /*                       @Y30LB12*/ 02265000
PUTIT1   STM   @14,@12,@SA00028                                    0606 02266000
*   STOPSCAN='1'B;                  /*                       @Y30LB12*/ 02267000
         OI    STOPSCAN,B'10000000'                                0607 02268000
*   PRNTBUF2='1'B;                  /*                       @Y30LB12*/ 02269000
         OI    PRNTBUF2(R4),B'00000001'                            0608 02270000
*   TERMINAT=TERMINAT+1;            /*                       @Y30LB12*/ 02271000
         LA    @05,1                                               0609 02272000
         AH    @05,TERMINAT(,R4)                                   0609 02273000
         STH   @05,TERMINAT(,R4)                                   0609 02274000
*   GEN(LINK  EP=ICGDSMSG);         /*                       @Y30LB12*/ 02275000
         LINK  EP=ICGDSMSG                                              02276000
*   PRNTBUF2='0'B;                  /*                       @Y30LB12*/ 02277000
         NI    PRNTBUF2(R4),B'11111110'                            0611 02278000
*   END PUTIT1;                     /*                       @Y30LB12*/ 02279000
@EL00028 DS    0H                                                  0612 02280000
@EF00028 DS    0H                                                  0612 02281000
@ER00028 LM    @14,@12,@SA00028                                    0612 02282000
         BR    @14                                                 0612 02283000
*                                                                  0613 02284000
*/***********************************************************@Y30LB12*/ 02285000
*/*                                                          @Y30LB12*/ 02286000
*/* PROCEDURE NAME - PUTIT3                                  @Y30LB12*/ 02287000
*/*                                                          @Y30LB12*/ 02288000
*/* FUNCTION - CALL ICGDSMSG, MESSAGE PRINT SUBROUTINE, TO   @Y30LB12*/ 02289000
*/*            PUT WARNING MESSAGE FOR WHICH MESSAGE TEXT    @Y30LB12*/ 02290000
*/*            IS NOT IN ICGDSMSG, BUT WHICH IS BUILT AND    @Y30LB12*/ 02291000
*/*            PASSED IN 'OUTBUF2'.                          @Y30LB12*/ 02292000
*/*                                                          @Y30LB12*/ 02293000
*/***********************************************************@Y30LB12*/ 02294000
*                                                                  0613 02295000
*PUTIT3:                                                           0613 02296000
*   PROCEDURE;                      /*                       @Y30LB12*/ 02297000
PUTIT3   STM   @14,@12,@SA00029                                    0613 02298000
*   PRNTBUF2='1'B;                  /*                       @Y30LB12*/ 02299000
         OI    PRNTBUF2(R4),B'00000001'                            0614 02300000
*   WARNING=WARNING+1;              /*                       @Y30LB12*/ 02301000
         LA    @05,1                                               0615 02302000
         AH    @05,WARNING(,R4)                                    0615 02303000
         STH   @05,WARNING(,R4)                                    0615 02304000
*   GEN(LINK  EP=ICGDSMSG);         /*                       @Y30LB12*/ 02305000
         LINK  EP=ICGDSMSG                                              02306000
*   PRNTBUF2='0'B;                  /*                       @Y30LB12*/ 02307000
         NI    PRNTBUF2(R4),B'11111110'                            0617 02308000
*   END PUTIT3;                     /*                       @Y30LB12*/ 02309000
@EL00029 DS    0H                                                  0618 02310000
@EF00029 DS    0H                                                  0618 02311000
@ER00029 LM    @14,@12,@SA00029                                    0618 02312000
         BR    @14                                                 0618 02313000
*   GENERATE;                                                      0619 02314000
*                                                         /*@Y30LB15*/  02315000
PATCHB09 DC    32C'PATCHB09'                                            02316000
*   END ICGDSB09                    /*                       @Y30LB15*/ 02317000
*                                                                  0620 02318000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 02319000
*/*%INCLUDE SYSLIB  (ICGDSMAC)                                       */ 02320000
*/*%INCLUDE SYSLIB  (ICGDSMA5)                                       */ 02321000
*/*%INCLUDE SYSLIB  (ICGDSMA2)                                       */ 02322000
*/*%INCLUDE SYSLIB  (ICGDSMA4)                                       */ 02323000
*                                                                  0620 02324000
*       ;                                                          0620 02325000
         B     @EL00001                                            0620 02326000
@DATA    DS    0H                                                       02327000
@CH00044 DC    H'1'                                                     02328000
@CH00052 DC    H'2'                                                     02329000
@CH00050 DC    H'3'                                                     02330000
@CH00070 DC    H'4'                                                     02331000
@CH00121 DC    H'5'                                                     02332000
@CH00227 DC    H'6'                                                     02333000
@CH00134 DC    H'7'                                                     02334000
@CH00042 DC    H'8'                                                     02335000
@CH00033 DC    H'12'                                                    02336000
@CH00163 DC    H'16'                                                    02337000
@CH00331 DC    H'28'                                                    02338000
@CH00113 DC    H'30'                                                    02339000
@CH00309 DC    H'32'                                                    02340000
@CH00319 DC    H'40'                                                    02341000
@CH00236 DC    H'48'                                                    02342000
@CH00433 DC    H'77'                                                    02343000
@CH00808 DC    H'79'                                                    02344000
@CH00431 DC    H'126'                                                   02345000
@CH00809 DC    H'128'                                                   02346000
@CH00429 DC    H'175'                                                   02347000
@CH00426 DC    H'177'                                                   02348000
@CH00805 DC    H'232'                                                   02349000
@CH00804 DC    H'240'                                                   02350000
@CH00403 DC    H'264'                                                   02351000
@CH00393 DC    H'272'                                                   02352000
@CH00795 DC    H'464'                                                   02353000
@CH00794 DC    H'480'                                                   02354000
@CH00800 DC    H'696'                                                   02355000
@CH00798 DC    H'720'                                                   02356000
@CH00653 DC    H'1320'                                                  02357000
@CH00652 DC    H'1360'                                                  02358000
@CH00638 DC    H'5440'                                                  02359000
@CH00641 DC    H'6528'                                                  02360000
@DATD    DSECT                                                          02361000
         DS    0F                                                       02362000
@SA00001 DS    18F                                                      02363000
@SA00028 DS    15F                                                      02364000
@SA00002 DS    14F                                                      02365000
@SA00003 DS    14F                                                      02366000
@SA00006 DS    13F                                                      02367000
@SA00004 DS    13F                                                      02368000
@SA00005 DS    13F                                                      02369000
@SA00015 DS    15F                                                      02370000
@SA00014 DS    14F                                                      02371000
@SA00016 DS    14F                                                      02372000
@SA00008 DS    13F                                                      02373000
@SA00009 DS    13F                                                      02374000
@SA00010 DS    13F                                                      02375000
@SA00011 DS    13F                                                      02376000
@SA00025 DS    15F                                                      02377000
@SA00012 DS    13F                                                      02378000
@SA00017 DS    15F                                                      02379000
@SA00020 DS    15F                                                      02380000
@SA00018 DS    15F                                                      02381000
@SA00021 DS    15F                                                      02382000
@SA00022 DS    15F                                                      02383000
@SA00026 DS    15F                                                      02384000
@SA00029 DS    15F                                                      02385000
@TF00001 DS    F                                                        02386000
@ZTEMPS  DS    0F                                                       02387000
@ZT00003 DC    F'0'                                                     02388000
@ZTEMPND EQU   *                                                        02389000
@ZLEN    EQU   @ZTEMPND-@ZTEMPS                                         02390000
ICGDSB09 CSECT                                                          02391000
         DS    0F                                                       02392000
@CF00811 DC    F'5084'                                                  02393000
@CF00810 DC    F'13532'                                                 02394000
@DATD    DSECT                                                          02395000
         DS    0D                                                       02396000
SAVOPTR  DS    A                                                        02397000
INPTR    DS    A                                                        02398000
J        DS    H                                                        02399000
TABLID   DS    FL1                                                      02400000
LIBCHAR  DS    BL1                                                      02401000
         ORG   LIBCHAR                                                  02402000
HCHAR    DS    BL1                                                      02403000
         ORG   LIBCHAR+1                                                02404000
BITSWTS  DS    BL1                                                      02405000
         ORG   BITSWTS                                                  02406000
STOPSCAN DS    BL1                                                      02407000
INVLDCHK EQU   BITSWTS+0                                                02408000
INVLDPTR EQU   BITSWTS+0                                                02409000
         ORG   BITSWTS+1                                                02410000
OLIBSIZ  DS    CL1                                                      02411000
OFFSET   DS    BL1                                                      02412000
CECELL   DS    CL1                                                      02413000
USERLIST DS    CL177                                                    02414000
         ORG   USERLIST                                                 02415000
PRMLEN   DS    FL2                                                      02416000
A4LIST   DS    CL175                                                    02417000
         ORG   A4LIST                                                   02418000
A3LIST   DS    CL126                                                    02419000
         ORG   A3LIST                                                   02420000
A2LIST   DS    CL77                                                     02421000
         ORG   A2LIST                                                   02422000
A1LIST   DS    CL28                                                     02423000
         ORG   USERLIST+177                                             02424000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                02425000
@ENDDATD EQU   *                                                        02426000
ICGDSB09 CSECT                                                          02427000
         DS    0F                                                       02428000
@SIZDATD DC    AL1(0)                                                   02429000
         DC    AL3(@ENDDATD-@DATD)                                      02430000
         DS    0D                                                       02431000
CELEMPTY DC    B'10000000'                                              02432000
CUBEOR8  DC    X'7FBFDFEFF7FBFDFE'                                      02433000
         ORG   CUBEOR8                                                  02434000
CUBEOR1  DS    8AL1                                                     02435000
         ORG   CUBEOR8+8                                                02436000
ZEROCHNK DC    X'00'                                                    02437000
         DC    XL31'0'                                                  02438000
BLOCK0   DS    CL256                                                    02439000
         ORG   BLOCK0                                                   02440000
SUBBLK0  DC    X'7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC02441000
               FF00000000'                                              02442000
         DC    X'FFFFFFFFFFFFFDF5FCFCFEFEFCFCFCFCFCFCFCF4FDFDFFFFFDFDFDC02443000
               FD00000000'                                              02444000
         DC    X'FFFFFFFFFFFF5F5F0A0AAAAA020A020A020A020A5F5FFFFF575F57C02445000
               5F00000000'                                              02446000
         DC    X'FFFFFFFFFFFFFFFFAAAAAAAAAAAAAAAAAAAAAAAAFFFFFFFFFFFFFFC02447000
               FF00000000'                                              02448000
         DC    X'FFFFFFFFFFFFFFFFAAAAAAAAAAAAAAAAAAAAAAAAFFFFFFFFFFFFFFC02449000
               FF00000000'                                              02450000
         DC    X'FFFFFFFFFFFFFFFFBFBFBFBFBFBFBFBFBFBFBFBFFFFFFFFFFFFFFFC02451000
               FF00000000'                                              02452000
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC02453000
               FF00000000'                                              02454000
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC02455000
               FF00000000'                                              02456000
         ORG   BLOCK0+256                                               02457000
BLOCK1   DS    CL256                                                    02458000
         ORG   BLOCK1                                                   02459000
SUBBLK1  DC    X'FFFFFFFFFFFFFDF5FCFCFEFEFCFCFCFCFCFCFCF4FDFDFFFFFDFDFDC02460000
               FD00000000'                                              02461000
         DC    X'FFFFFFFFFFFF5F5F0A0AAAAA020A020A020A020A5F5FFFFF575F57C02462000
               5F00000000'                                              02463000
         DC    X'FFFFFFFFFFFFFFFFAAAAAAAAAAAAAAAAAAAAAAAAFFFFFFFFFFFFFFC02464000
               FF00000000'                                              02465000
         DC    X'FFFFFFFFFFFFFFFFAAAAAAAAAAAAAAAAAAAAAAAAFFFFFFFFFFFFFFC02466000
               FF00000000'                                              02467000
         DC    X'FFFFFFFFFFFFFFFFBFBFBFBFBFBFBFBFBFBFBFBFFFFFFFFFFFFFFFC02468000
               FF00000000'                                              02469000
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC02470000
               FF00000000'                                              02471000
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC02472000
               FF00000000'                                              02473000
         DC    X'FFFFFFFFFFFFFDF5FCFCFEFEFCFCFCFCFCFCFCF4FDFDFFFFFDFDFDC02474000
               FD00000000'                                              02475000
         ORG   BLOCK1+256                                               02476000
BLOCK2   DS    CL256                                                    02477000
         ORG   BLOCK2                                                   02478000
SUBBLK2  DC    X'FFFFFFFFFFFF5F5F0A0AAAAA020A020A020A020A5F5FFFFF575F57C02479000
               5F00000000'                                              02480000
         DC    X'FFFFFFFFFFFFFFFFAAAAAAAAAAAAAAAAAAAAAAAAFFFFFFFFFFFFFFC02481000
               FF00000000'                                              02482000
         DC    X'FFFFFFFFFFFFFFFFAAAAAAAAAAAAAAAAAAAAAAAAFFFFFFFFFFFFFFC02483000
               FF00000000'                                              02484000
         DC    X'FFFFFFFFFFFFFFFFBFBFBFBFBFBFBFBFBFBFBFBFFFFFFFFFFFFFFFC02485000
               FF00000000'                                              02486000
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC02487000
               FF00000000'                                              02488000
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC02489000
               FF00000000'                                              02490000
         DC    X'FFFFFFFFFFFFFDF5FDFDFFFFFDFDFDFDFDFDFDF5FDFDFFFFFDFDFDC02491000
               FD00000000'                                              02492000
         DC    X'FFFFFFFFFFFF5F5F5F5FFFFF575F575F575F575F5F5FFFFF575F57C02493000
               5F00000000'                                              02494000
         ORG   BLOCK2+256                                               02495000
BLOCK3   DC    X'D0D0D0D0D0D0D0D0F0F0F0F0A0A0A0A0A0A0A0A0F0F0F0F0F0F0F0C02496000
               F000000000'                                              02497000
A1HDR    DS    CL256                                                    02498000
         ORG   A1HDR                                                    02499000
SUBA1    DC    X'FFFFFFF0000000000000000000000000000000000000BCB4C4ACBBC02500000
               B3C3ABBDB5'                                              02501000
         DC    X'C5ADBAB2C2AABEB6C6AEB9B1C1A9B8B0C0A8FFFFFFFFFFFFFFFFFFC02502000
               FFFFFFFFFF'                                              02503000
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC02504000
               FFFFFFFFFF'                                              02505000
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC02506000
               FFFFFFFFFF'                                              02507000
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC02508000
               FFFFFFFFFF'                                              02509000
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC02510000
               FFFFFFFFFF'                                              02511000
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC02512000
               FFFFFFFFFF'                                              02513000
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC02514000
               FFFFFFFFFF'                                              02515000
         ORG   A1HDR+256                                                02516000
A2HDR    DS    CL256                                                    02517000
         ORG   A2HDR                                                    02518000
SUBA2    DC    X'FFFFFFFFFFFFFFFFFFF80000000000000000000000009C9B9D9A9EC02519000
               99A4A3A5A2'                                              02520000
         DC    X'A6A1949395929691ACABADAAAEA98C8B8D8A8E89B4B3B5B2B6B184C02521000
               8385828681'                                              02522000
         DC    X'BCBBBDBABEB97C7B7D7A7E79C4C3C5C2C6C174737572767198A090C02523000
               A888B080B8'                                              02524000
         DC    X'78C070FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC02525000
               FFFFFFFFFF'                                              02526000
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC02527000
               FFFFFFFFFF'                                              02528000
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC02529000
               FFFFFFFFFF'                                              02530000
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC02531000
               FFFFFFFFFF'                                              02532000
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC02533000
               FFFFFFFFFF'                                              02534000
         ORG   A2HDR+256                                                02535000
A3HDR    DS    CL256                                                    02536000
         ORG   A3HDR                                                    02537000
SUBA3    DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC0000000000008483858286C02538000
               81808C8B8D'                                              02539000
         DC    X'8A8E89887C7B7D7A7E797894939592969190747375727671709C9BC02540000
               9D9A9E9998'                                              02541000
         DC    X'6C6B6D6A6E6968A4A3A5A2A6A1A064636562666160ACABADAAAEA9C02542000
               A85C5B5D5A'                                              02543000
         DC    X'5E5958B4B3B5B2B6B1B054535552565150BCBBBDBABEB9B84C4B4DC02544000
               4A4E4948C4'                                              02545000
         DC    X'C3C5C2C6C1C0444345424641403C3B3D3A3E3938FFFFFFFFFFFFFFC02546000
               FFFFFFFFFF'                                              02547000
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC02548000
               FFFFFFFFFF'                                              02549000
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC02550000
               FFFFFFFFFF'                                              02551000
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC02552000
               FFFFFFFFFF'                                              02553000
         ORG   A3HDR+256                                                02554000
A4HDR    DS    CL256                                                    02555000
         ORG   A4HDR                                                    02556000
SUBA4    DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE6C6B6D6A6EC02557000
               6968646365'                                              02558000
         DC    X'62666160747375727671705C5B5D5A5E59587C7B7D7A7E79785453C02559000
               5552565150'                                              02560000
         DC    X'848385828681804C4B4D4A4E49488C8B8D8A8E8988444345424641C02561000
               4094939592'                                              02562000
         DC    X'9691903C3B3D3A3E39389C9B9D9A9E999834333532363130A4A3A5C02563000
               A2A6A1A02C'                                              02564000
         DC    X'2B2D2A2E2928ACABADAAAEA9A824232522262120B4B3B5B2B6B1B0C02565000
               1C1B1D1A1E'                                              02566000
         DC    X'1918BCBBBDBABEB9B814131512161110C4C3C5C2C6C1C00C0B0D0AC02567000
               0E09080403'                                              02568000
         DC    X'0502060100FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC02569000
               FFFFFFFFFF'                                              02570000
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC02571000
               FFFFFFFFFF'                                              02572000
         ORG   A4HDR+256                                                02573000
B09MSG1  DC    CL49' ICG410I NON-MATCH ON INPUT TABLE ID FOR CELL MAP'  02574000
B09MSG2  DC    CL45' ICG414I INVALID PARAMETER PASSED TO ICGDSB09'      02575000
B09MSG3  DC    CL77' ICG413I INVALID LOADMAP SUPPLIED BY USER FOR MSF  C02576000
               . STANDARD LOADMAP IS USED'                              02577000
B09MSG4  DC    CL46' ICG412I FULL CELLS IN DELETED FRAME FOR MSF  '     02578000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02579000
@01      EQU   01                                                       02580000
@02      EQU   02                                                       02581000
@03      EQU   03                                                       02582000
@04      EQU   04                                                       02583000
@05      EQU   05                                                       02584000
@06      EQU   06                                                       02585000
@07      EQU   07                                                       02586000
@08      EQU   08                                                       02587000
@09      EQU   09                                                       02588000
@10      EQU   10                                                       02589000
@11      EQU   11                                                       02590000
@12      EQU   12                                                       02591000
@13      EQU   13                                                       02592000
@14      EQU   14                                                       02593000
@15      EQU   15                                                       02594000
RECCNT   EQU   @06                                                      02595000
LIBCNT   EQU   @08                                                      02596000
LWLIM    EQU   @05                                                      02597000
CUBEAPTR EQU   @08                                                      02598000
OFSTPTR  EQU   @06                                                      02599000
INBLKPTR EQU   @06                                                      02600000
BLKPTR   EQU   @05                                                      02601000
OUTPTR   EQU   @03                                                      02602000
USERPTR  EQU   @03                                                      02603000
I        EQU   @07                                                      02604000
R4       EQU   @04                                                      02605000
R1       EQU   @01                                                      02606000
R2       EQU   @02                                                      02607000
R15      EQU   @15                                                      02608000
R12      EQU   @12                                                      02609000
R13      EQU   @13                                                      02610000
R14      EQU   @14                                                      02611000
COMTAB   EQU   0                                                        02612000
READER   EQU   COMTAB+256                                               02613000
READFLAG EQU   READER+96                                                02614000
PCHBF    EQU   READER+99                                                02615000
STARTCOL EQU   READER+180                                               02616000
NEXTCOL  EQU   READER+184                                               02617000
PRINTER  EQU   COMTAB+464                                               02618000
OUTBUF2  EQU   PRINTER+225                                              02619000
MESSAGES EQU   COMTAB+810                                               02620000
WARNING  EQU   MESSAGES+4                                               02621000
TERMINAT EQU   MESSAGES+6                                               02622000
SPECLMSG EQU   MESSAGES+18                                              02623000
PRNTBUF2 EQU   SPECLMSG                                                 02624000
GENIO    EQU   COMTAB+832                                               02625000
DCBPTR   EQU   GENIO+4                                                  02626000
COMPTR2  EQU   GENIO+16                                                 02627000
BUILDPTR EQU   GENIO+20                                                 02628000
INVOKED  EQU   COMTAB+856                                               02629000
SAVEDDS  EQU   INVOKED+4                                                02630000
BUILDRSG EQU   COMTAB+900                                               02631000
RSGS     EQU   BUILDRSG                                                 02632000
RSG      EQU   RSGS                                                     02633000
RSGABOX  EQU   RSG                                                      02634000
RSGTODS  EQU   RSG+7                                                    02635000
LIBRARY  EQU   COMTAB+1170                                              02636000
LIBS     EQU   LIBRARY                                                  02637000
LIB      EQU   LIBS                                                     02638000
LIBBITS  EQU   LIB                                                      02639000
LIBSPEC  EQU   LIBBITS                                                  02640000
LIBSIZE  EQU   LIB+1                                                    02641000
LIBMAP   EQU   LIB+3                                                    02642000
MAPEXIT  EQU   LIB+4                                                    02643000
PABTABLE EQU   COMTAB+1218                                              02644000
PABDEV   EQU   PABTABLE                                                 02645000
PABFLAGS EQU   PABDEV                                                   02646000
PABREAL  EQU   PABDEV+1                                                 02647000
PABAADDD EQU   PABDEV+2                                                 02648000
DSPAIRS  EQU   COMTAB+1938                                              02649000
PHYSTYPE EQU   COMTAB+2002                                              02650000
PHYSFLGS EQU   PHYSTYPE                                                 02651000
MERLICEB EQU   PHYSFLGS                                                 02652000
CPUASSOC EQU   COMTAB+3026                                              02653000
CPUS     EQU   CPUASSOC+2                                               02654000
CPU      EQU   CPUS                                                     02655000
CPUFLAG1 EQU   CPU+6                                                    02656000
OPSYSTYP EQU   CPUFLAG1                                                 02657000
CPUFLAG2 EQU   CPU+7                                                    02658000
LOWERCON EQU   COMTAB+3156                                              02659000
LOWDSS   EQU   LOWERCON                                                 02660000
LOWFLGS  EQU   LOWDSS                                                   02661000
LIBCTL   EQU   COMTAB+3284                                              02662000
LIBCTLS  EQU   LIBCTL                                                   02663000
CREATE   EQU   COMTAB+3288                                              02664000
@NM00017 EQU   CREATE                                                   02665000
NEWCREAT EQU   @NM00017                                                 02666000
UPDCREAT EQU   @NM00017                                                 02667000
COMTAB2  EQU   0                                                        02668000
DSTORSG  EQU   COMTAB2                                                  02669000
DSENTRY  EQU   DSTORSG                                                  02670000
CONFGCON EQU   COMTAB2+32                                               02671000
RSGUCB   EQU   CONFGCON                                                 02672000
RSGFLAGS EQU   RSGUCB                                                   02673000
CONFGUCB EQU   COMTAB2+464                                              02674000
CONFGDEV EQU   CONFGUCB                                                 02675000
USEFLAGS EQU   CONFGDEV                                                 02676000
ALTPATH1 EQU   CONFGDEV+2                                               02677000
ALTPATH2 EQU   CONFGDEV+5                                               02678000
ALTPATH3 EQU   CONFGDEV+8                                               02679000
BUILDTAB EQU   0                                                        02680000
COMB06   EQU   BUILDTAB                                                 02681000
B06DCBPT EQU   COMB06                                                   02682000
B06BUFPT EQU   COMB06+4                                                 02683000
B06TBLID EQU   COMB06+8                                                 02684000
B06ADDR  EQU   COMB06+9                                                 02685000
COMB05   EQU   BUILDTAB+12                                              02686000
B05DCBPT EQU   COMB05                                                   02687000
B05BUFPT EQU   COMB05+4                                                 02688000
B05TBLID EQU   COMB05+8                                                 02689000
B05ADDR  EQU   COMB05+9                                                 02690000
BUILDGEN EQU   BUILDTAB+24                                              02691000
UT2VCHR  EQU   BUILDGEN+8                                               02692000
UT2TABID EQU   UT2VCHR                                                  02693000
OUTADDR  EQU   UT2VCHR+1                                                02694000
UT2VCYL  EQU   OUTADDR                                                  02695000
UT2VHEAD EQU   OUTADDR+1                                                02696000
UT2VREC  EQU   OUTADDR+2                                                02697000
UT1VCHR  EQU   BUILDGEN+12                                              02698000
UT1TABID EQU   UT1VCHR                                                  02699000
INADDR   EQU   UT1VCHR+1                                                02700000
UT1STUFF EQU   BUILDTAB+40                                              02701000
UT1DCB   EQU   UT1STUFF                                                 02702000
UT1FLAG  EQU   UT1STUFF+96                                              02703000
UT2STUFF EQU   BUILDTAB+664                                             02704000
UT2DCB   EQU   UT2STUFF                                                 02705000
UT2FLAG  EQU   UT2STUFF+96                                              02706000
UT3STUFF EQU   BUILDTAB+1288                                            02707000
UT3FLAG  EQU   UT3STUFF+96                                              02708000
UT1BUFER EQU   BUILDTAB+5084                                            02709000
UT2BUFER EQU   BUILDTAB+13532                                           02710000
USRCBPTR EQU   0                                                        02711000
USRCB    EQU   USRCBPTR                                                 02712000
OUTBLOCK EQU   0                                                        02713000
OBLKPRFX EQU   OUTBLOCK+8                                               02714000
OTABLID  EQU   OBLKPRFX                                                 02715000
OCYL     EQU   OBLKPRFX+1                                               02716000
OHEAD    EQU   OBLKPRFX+2                                               02717000
OREC     EQU   OBLKPRFX+3                                               02718000
OFILL    EQU   OBLKPRFX+4                                               02719000
OBLOCK   EQU   OUTBLOCK+16                                              02720000
INBLOCK  EQU   0                                                        02721000
IBLKPRFX EQU   INBLOCK                                                  02722000
ITABLID  EQU   IBLKPRFX                                                 02723000
IBLOCK   EQU   INBLOCK+8                                                02724000
A1PTR    EQU   IBLOCK+22                                                02725000
A2PTR    EQU   IBLOCK+50                                                02726000
A3PTR    EQU   IBLOCK+99                                                02727000
A4PTR    EQU   IBLOCK+148                                               02728000
CHUNK    EQU   0                                                        02729000
INCHUNK  EQU   0                                                        02730000
CBPTR    EQU   0                                                        02731000
CBBLK    EQU   CBPTR                                                    02732000
CUBEBYTE EQU   0                                                        02733000
CUBE     EQU   0                                                        02734000
SCANBUF  EQU   0                                                        02735000
SCANDATA EQU   0                                                        02736000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02737000
@NM00031 EQU   CBPTR                                                    02738000
@NM00030 EQU   IBLOCK+100                                               02739000
@NM00029 EQU   IBLOCK+51                                                02740000
@NM00028 EQU   IBLOCK+24                                                02741000
@NM00027 EQU   IBLOCK                                                   02742000
@NM00026 EQU   IBLKPRFX+1                                               02743000
@NM00025 EQU   OUTBLOCK                                                 02744000
@NM00024 EQU   USRCBPTR                                                 02745000
TEMPEND  EQU   BUILDTAB+22396                                           02746000
LTRTRANI EQU   BUILDTAB+22316                                           02747000
LTRTRANO EQU   BUILDTAB+22236                                           02748000
NVERIFY  EQU   BUILDTAB+3500                                            02749000
CVERIFY  EQU   BUILDTAB+1916                                            02750000
@NM00023 EQU   UT3STUFF+624                                             02751000
UT3DDN   EQU   UT3STUFF+616                                             02752000
UT3CCWS  EQU   UT3STUFF+320                                             02753000
UT3IOB   EQU   UT3STUFF+280                                             02754000
UT3ECB   EQU   UT3STUFF+276                                             02755000
UT3JFCB  EQU   UT3STUFF+100                                             02756000
@NM00022 EQU   UT3FLAG                                                  02757000
UT3VWERR EQU   UT3FLAG                                                  02758000
UT3VOERR EQU   UT3FLAG                                                  02759000
UT3VUPDT EQU   UT3FLAG                                                  02760000
UT3DCB   EQU   UT3STUFF                                                 02761000
UT2DDN   EQU   UT2STUFF+616                                             02762000
UT2CCWS  EQU   UT2STUFF+320                                             02763000
UT2IOB   EQU   UT2STUFF+280                                             02764000
UT2ECB   EQU   UT2STUFF+276                                             02765000
UT2JFCB  EQU   UT2STUFF+100                                             02766000
@NM00021 EQU   UT2FLAG                                                  02767000
UT2VCERR EQU   UT2FLAG                                                  02768000
UT2VWERR EQU   UT2FLAG                                                  02769000
UT2VOERR EQU   UT2FLAG                                                  02770000
UT2VUPDT EQU   UT2FLAG                                                  02771000
UT1DDN   EQU   UT1STUFF+616                                             02772000
UT1CCWS  EQU   UT1STUFF+320                                             02773000
UT1IOB   EQU   UT1STUFF+280                                             02774000
UT1ECB   EQU   UT1STUFF+276                                             02775000
UT1JFCB  EQU   UT1STUFF+100                                             02776000
@NM00020 EQU   UT1FLAG                                                  02777000
UT1VWERR EQU   UT1FLAG                                                  02778000
UT1VOERR EQU   UT1FLAG                                                  02779000
UT1VUPDT EQU   UT1FLAG                                                  02780000
UT1VREC  EQU   INADDR+2                                                 02781000
UT1VHEAD EQU   INADDR+1                                                 02782000
UT1VCYL  EQU   INADDR                                                   02783000
ADDRBUF2 EQU   BUILDGEN+4                                               02784000
ADDRBUF1 EQU   BUILDGEN                                                 02785000
B05REC   EQU   B05ADDR+2                                                02786000
B05HEAD  EQU   B05ADDR+1                                                02787000
B05CYL   EQU   B05ADDR                                                  02788000
B06REC   EQU   B06ADDR+2                                                02789000
B06HEAD  EQU   B06ADDR+1                                                02790000
B06CYL   EQU   B06ADDR                                                  02791000
ALTCH3   EQU   ALTPATH3+2                                               02792000
ALTCI3   EQU   ALTPATH3+1                                               02793000
ALTDS3   EQU   ALTPATH3                                                 02794000
ALTCH2   EQU   ALTPATH2+2                                               02795000
ALTCI2   EQU   ALTPATH2+1                                               02796000
ALTDS2   EQU   ALTPATH2                                                 02797000
ALTCH1   EQU   ALTPATH1+2                                               02798000
ALTCI1   EQU   ALTPATH1+1                                               02799000
ALTDS1   EQU   ALTPATH1                                                 02800000
INDEXRSG EQU   CONFGDEV+1                                               02801000
ICEBERG  EQU   USEFLAGS                                                 02802000
ITISALTP EQU   USEFLAGS                                                 02803000
USECONVR EQU   USEFLAGS                                                 02804000
SUPPUNCH EQU   USEFLAGS                                                 02805000
USEREAL  EQU   USEFLAGS                                                 02806000
USEVS    EQU   USEFLAGS                                                 02807000
USEV     EQU   USEFLAGS                                                 02808000
USESPEC  EQU   USEFLAGS                                                 02809000
RSGCUA   EQU   RSGUCB+8                                                 02810000
RSGCHAN  EQU   RSGUCB+7                                                 02811000
CPUREFNO EQU   RSGUCB+6                                                 02812000
RSGCPUID EQU   RSGUCB+1                                                 02813000
@NM00019 EQU   RSGFLAGS                                                 02814000
CISPEC   EQU   RSGFLAGS                                                 02815000
TORSG2   EQU   DSENTRY+1                                                02816000
TORSG1   EQU   DSENTRY                                                  02817000
COM2BASE EQU   COMTAB+3304                                              02818000
LRUCLOCK EQU   CREATE+11                                                02819000
VOLSER   EQU   CREATE+5                                                 02820000
VPAGES   EQU   CREATE+1                                                 02821000
@NM00018 EQU   @NM00017                                                 02822000
PRNTONLY EQU   @NM00017                                                 02823000
CMDCREAT EQU   @NM00017                                                 02824000
RW67RGHT EQU   LIBCTLS                                                  02825000
RW67LEFT EQU   LIBCTLS                                                  02826000
RW45RGHT EQU   LIBCTLS                                                  02827000
RW45LEFT EQU   LIBCTLS                                                  02828000
RW23RGHT EQU   LIBCTLS                                                  02829000
RW23LEFT EQU   LIBCTLS                                                  02830000
RW01RGHT EQU   LIBCTLS                                                  02831000
RW01LEFT EQU   LIBCTLS                                                  02832000
LOWLIB   EQU   LOWDSS+1                                                 02833000
@NM00016 EQU   LOWFLGS                                                  02834000
LOWRGHT  EQU   LOWFLGS                                                  02835000
LOWLEFT  EQU   LOWFLGS                                                  02836000
LOWRW67  EQU   LOWFLGS                                                  02837000
LOWRW45  EQU   LOWFLGS                                                  02838000
LOWRW23  EQU   LOWFLGS                                                  02839000
LOWRW01  EQU   LOWFLGS                                                  02840000
LOWSPEC  EQU   LOWFLGS                                                  02841000
ALTMSCIN EQU   CPUFLAG2                                                 02842000
@NM00015 EQU   CPUFLAG2                                                 02843000
ALTMSGBF EQU   CPUFLAG2                                                 02844000
@NM00014 EQU   CPUFLAG2                                                 02845000
CPUSPEC  EQU   CPUFLAG2                                                 02846000
CPUMSCIN EQU   CPUFLAG1                                                 02847000
OPJES3   EQU   OPSYSTYP                                                 02848000
OPVS2    EQU   OPSYSTYP                                                 02849000
OPVS1    EQU   OPSYSTYP                                                 02850000
CPUALTFL EQU   CPUFLAG1                                                 02851000
CPUTIGHT EQU   CPUFLAG1                                                 02852000
@NM00013 EQU   CPUFLAG1                                                 02853000
TOMPCPU  EQU   CPU+5                                                    02854000
CPUID    EQU   CPU                                                      02855000
CPUNUM   EQU   CPUASSOC                                                 02856000
SPNRSGNO EQU   PHYSTYPE+1                                               02857000
LGDEVICE EQU   PHYSFLGS                                                 02858000
LOGABOX1 EQU   PHYSFLGS                                                 02859000
PHYSSSID EQU   PHYSFLGS                                                 02860000
PHYSREAL EQU   PHYSFLGS                                                 02861000
PHYSICEB EQU   MERLICEB                                                 02862000
PHYSMERL EQU   MERLICEB                                                 02863000
PHYSDS2  EQU   DSPAIRS                                                  02864000
PABDDD   EQU   PABAADDD                                                 02865000
PABAA    EQU   PABAADDD                                                 02866000
PABZEROS EQU   PABAADDD                                                 02867000
PAB2D    EQU   PABREAL                                                  02868000
PAB2C    EQU   PABREAL                                                  02869000
PAB2B    EQU   PABREAL                                                  02870000
@NM00012 EQU   PABREAL                                                  02871000
PAB1D    EQU   PABREAL                                                  02872000
PAB1C    EQU   PABREAL                                                  02873000
PAB1B    EQU   PABREAL                                                  02874000
PABIMPLR EQU   PABREAL                                                  02875000
PABBERG2 EQU   PABFLAGS                                                 02876000
@NM00011 EQU   PABFLAGS                                                 02877000
PABDSMTL EQU   PABFLAGS                                                 02878000
PABIBERG EQU   PABFLAGS                                                 02879000
@NM00010 EQU   PABFLAGS                                                 02880000
PABVOVIR EQU   PABFLAGS                                                 02881000
PABEXIST EQU   PABFLAGS                                                 02882000
LIBDSMID EQU   LIB+2                                                    02883000
@NM00009 EQU   LIBBITS                                                  02884000
TODS2    EQU   RSGTODS+1                                                02885000
TODS1    EQU   RSGTODS                                                  02886000
RSGSLICE EQU   RSG+3                                                    02887000
RSGUDEL  EQU   RSG+2                                                    02888000
RSGLDEL  EQU   RSG+1                                                    02889000
@NM00008 EQU   RSG                                                      02890000
RSGABOX1 EQU   RSGABOX                                                  02891000
RSGABOX0 EQU   RSGABOX                                                  02892000
RSGSPEC  EQU   RSG                                                      02893000
SVSYSUT3 EQU   SAVEDDS+32                                               02894000
SVSYSUT2 EQU   SAVEDDS+24                                               02895000
SVSYSUT1 EQU   SAVEDDS+16                                               02896000
SVSYSPCH EQU   SAVEDDS+8                                                02897000
SVSYSIN  EQU   SAVEDDS                                                  02898000
PARMPTR  EQU   INVOKED                                                  02899000
SAVE14   EQU   GENIO+12                                                 02900000
EXLST    EQU   GENIO+8                                                  02901000
@NM00007 EQU   DCBPTR+1                                                 02902000
DCBFLAG  EQU   DCBPTR                                                   02903000
OPENLIST EQU   GENIO                                                    02904000
@NM00006 EQU   MESSAGES+19                                              02905000
NEEDEOJ  EQU   SPECLMSG                                                 02906000
ENDPHASE EQU   SPECLMSG                                                 02907000
@NM00005 EQU   SPECLMSG                                                 02908000
PRNTCARD EQU   SPECLMSG                                                 02909000
@NM00004 EQU   SPECLMSG                                                 02910000
NEED102  EQU   SPECLMSG                                                 02911000
NEED101  EQU   SPECLMSG                                                 02912000
PRINTRC  EQU   MESSAGES+16                                              02913000
TERM     EQU   MESSAGES+12                                              02914000
WARN     EQU   MESSAGES+8                                               02915000
MSGNO    EQU   MESSAGES+2                                               02916000
RETCODE  EQU   MESSAGES                                                 02917000
OUTBUF   EQU   PRINTER+104                                              02918000
LINECT   EQU   PRINTER+102                                              02919000
LINECTR  EQU   PRINTER+100                                              02920000
PAGENO   EQU   PRINTER+96                                               02921000
DCBPRINT EQU   PRINTER                                                  02922000
@NM00003 EQU   READER+206                                               02923000
SCANLEN  EQU   READER+204                                               02924000
SVEODAD  EQU   READER+200                                               02925000
SVSYNAD2 EQU   READER+196                                               02926000
SAVENCOL EQU   READER+192                                               02927000
SAVESCOL EQU   READER+188                                               02928000
INBUF    EQU   READER+100                                               02929000
SSELECT  EQU   PCHBF                                                    02930000
@NM00002 EQU   READER+97                                                02931000
@NM00001 EQU   READFLAG                                                 02932000
LASTPARM EQU   READFLAG                                                 02933000
ENDSCAN  EQU   READFLAG                                                 02934000
PARMBIT  EQU   READFLAG                                                 02935000
KEYBIT   EQU   READFLAG                                                 02936000
READTERM EQU   READFLAG                                                 02937000
READDCB  EQU   READER                                                   02938000
PATCH    EQU   COMTAB                                                   02939000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02940000
@RC00150 EQU   @EL00004                                                 02941000
@RC00148 EQU   @EL00004                                                 02942000
@RC00146 EQU   @EL00004                                                 02943000
@RC00284 EQU   @EL00013                                                 02944000
@RC00282 EQU   @EL00013                                                 02945000
@RC00280 EQU   @EL00013                                                 02946000
@RC00278 EQU   @EL00013                                                 02947000
@RF00313 EQU   @EL00014                                                 02948000
@RC00336 EQU   @EL00016                                                 02949000
@RC00370 EQU   @EL00017                                                 02950000
@RC00362 EQU   @EL00017                                                 02951000
@RC00385 EQU   @EL00017                                                 02952000
@RC00428 EQU   @RC00425                                                 02953000
@RF00438 EQU   @EL00020                                                 02954000
@RC00458 EQU   @EL00021                                                 02955000
@RC00476 EQU   @EL00022                                                 02956000
@RC00486 EQU   @EL00023                                                 02957000
@RC00538 EQU   @EL00025                                                 02958000
@RC00366 EQU   @RC00362                                                 02959000
@RC00376 EQU   @RC00370                                                 02960000
@RC00459 EQU   @RC00458                                                 02961000
@RC00477 EQU   @RC00476                                                 02962000
@RC00460 EQU   @RC00459                                                 02963000
@RC00478 EQU   @RC00477                                                 02964000
@ENDDATA EQU   *                                                        02965000
         END   ICGDSB09,(C'PLS2009',0603,76337)                         02966000
