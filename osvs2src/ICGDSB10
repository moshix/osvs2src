         TITLE 'ICGDSB10 MSC TABLE CREATE, BLD ASSORTED NULL TABLES    *00001000
                        '                                               00002000
ICGDSB10 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'ICGDSB10  76.337'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         L     @00,@SIZDATD                                        0001 00014000
         GETMAIN  R,LV=(0)                                              00015000
         LR    @11,@01                                             0001 00016000
         USING @DATD,@11                                           0001 00017000
         ST    @13,@SA00001+4                                      0001 00018000
         LM    @00,@01,20(@13)                                     0001 00019000
         ST    @11,8(,@13)                                         0001 00020000
         LR    @13,@11                                             0001 00021000
         XC    @ZTEMPS(@ZLEN),@ZTEMPS                                   00022000
*                                                                  0019 00023000
*/********************************************************** @YD00113*/ 00024000
*/*                                                          @Y30LB14*/ 00025000
*/*            ICGDSB10 (MAINLINE)                           @X0DD153*/ 00026000
*/*                                                          @Y30LB14*/ 00027000
*/*            DETERMINE WHICH TABLE IS TO BE BUILT AND      @XD00153*/ 00028000
*/*            CALL THE PROPER TABLE-BUILDER                 @Y30LB14*/ 00029000
*/*                                                          @Y30LB14*/ 00030000
*/********************************************************** @YD00113*/ 00031000
*                                                                  0019 00032000
*   OUTCYL(1)=UT2VCYL;              /* STARTING CYLINDER NUMBER    0019 00033000
*                                                            @Y30LB14*/ 00034000
         L     @10,BUILDPTR(,R4)                                   0019 00035000
         LH    @06,@CH00436                                        0019 00036000
         ALR   @06,@10                                             0019 00037000
         MVC   OUTCYL(1,@06),UT2VCYL(@10)                          0019 00038000
*   OUTHEAD(1)=UT2VHEAD;            /* STARTING HEAD NUMBER  @Y30LB14*/ 00039000
         MVC   OUTHEAD(1,@06),UT2VHEAD(@10)                        0020 00040000
*   OUTREC(1)=UT2VREC;              /* STARTING RECORD NUMBER      0021 00041000
*                                                            @Y30LB14*/ 00042000
         MVC   OUTREC(1,@06),UT2VREC(@10)                          0021 00043000
*   B06DCBPT=ADDR(UT2DCB);          /*                       @Y30LB14*/ 00044000
         LA    @06,UT2DCB(,@10)                                    0022 00045000
         ST    @06,B06DCBPT(,@10)                                  0022 00046000
*   B06BUFPT=ADDR(UT2BUFER);        /* ADR OF WRITE BUFFER   @Y30LB14*/ 00047000
         LR    @06,@10                                             0023 00048000
         AL    @06,@CF00436                                        0023 00049000
         ST    @06,B06BUFPT(,@10)                                  0023 00050000
*   K=0;                            /* SET BLOCK CNT = 0     @Y30LB14*/ 00051000
         SLR   @06,@06                                             0024 00052000
         LR    K,@06                                               0024 00053000
*   I=0;                            /* INCREMENT SET TO 0    @Y30LB14*/ 00054000
         LR    I,@06                                               0025 00055000
*   ZEROS=''B;                      /* SET BLOCK TO 0'S      @Y30LB14*/ 00056000
         XC    ZEROS(256),ZEROS                                    0026 00057000
*   TABLEID=UT2TABID;               /* SAVE TABLE ID         @Y30LB14*/ 00058000
         SLR   TABLEID,TABLEID                                     0027 00059000
         IC    TABLEID,UT2TABID(,@10)                              0027 00060000
*   STOPSCAN='0'B;                  /*                       @Y30LB14*/ 00061000
*                                                                  0028 00062000
         NI    STOPSCAN,B'01111111'                                0028 00063000
*   /*****************************************************************/ 00064000
*   /*                                                               */ 00065000
*   /* ***********************************************       @YD00113*/ 00066000
*   /* DETERMINE WHICH LIBRARY IS TO BE WRITTEN              @Y30LB14*/ 00067000
*   /* ***********************************************       @YD00113*/ 00068000
*   /*                                                               */ 00069000
*   /*****************************************************************/ 00070000
*                                                                  0029 00071000
*   IF UT2TABID='60'X               /* VVA/VOLID XREF TABLE  @Y30LB14*/ 00072000
*     THEN                          /*                       @Y30LB14*/ 00073000
         CLI   UT2TABID(@10),96                                    0029 00074000
         BNE   @RF00029                                            0029 00075000
*     DO;                           /*                       @Y30LB14*/ 00076000
*       CALL B10ID60X;              /* BUILD VVA/VOLID XREF TBL    0031 00077000
*                                                            @Y30LB14*/ 00078000
         BAL   @14,B10ID60X                                        0031 00079000
*       RETURN;                     /* RETURN TO ICGDSBLD    @Y30LB14*/ 00080000
@EL00001 L     @13,4(,@13)                                         0032 00081000
@EF00001 L     @00,@SIZDATD                                        0032 00082000
         LR    @01,@11                                             0032 00083000
         FREEMAIN R,LV=(0),A=(1)                                        00084000
@ER00001 LM    @14,@12,12(@13)                                     0032 00085000
         BR    @14                                                 0032 00086000
*     END;                          /*                       @Y30LB14*/ 00087000
*   IF UT2TABID='80'X               /* PST TABLE             @Y30LB14*/ 00088000
*     THEN                          /*                       @Y30LB14*/ 00089000
@RF00029 L     @10,BUILDPTR(,R4)                                   0034 00090000
         CLI   UT2TABID(@10),128                                   0034 00091000
         BNE   @RF00034                                            0034 00092000
*     DO;                           /*                       @Y30LB14*/ 00093000
*       CALL B10ID80X;              /* BUILD PST TABLE       @Y30LB14*/ 00094000
         BAL   @14,B10ID80X                                        0036 00095000
*       RETURN;                     /* RETURN TO ICGDSBLD    @Y30LB14*/ 00096000
         B     @EL00001                                            0037 00097000
*     END;                          /*                       @Y30LB14*/ 00098000
*   IF UT2TABID='A0'X               /* VVA TABLE             @Y30LB14*/ 00099000
*     THEN                          /*                       @Y30LB14*/ 00100000
@RF00034 L     @10,BUILDPTR(,R4)                                   0039 00101000
         CLI   UT2TABID(@10),160                                   0039 00102000
         BNE   @RF00039                                            0039 00103000
*     DO;                           /*                       @Y30LB14*/ 00104000
*       CALL B10IDA0X;              /* BUILD VVA TABLE       @Y30LB14*/ 00105000
         BAL   @14,B10IDA0X                                        0041 00106000
*       RETURN;                     /* RETURN TO ICGDSBLD    @Y30LB14*/ 00107000
         B     @EL00001                                            0042 00108000
*     END;                          /*                       @Y30LB14*/ 00109000
*   IF UT2TABID='B0'X               /* RECOVERY JOURNAL      @Y30LB14*/ 00110000
*     THEN                          /*                       @Y30LB14*/ 00111000
@RF00039 L     @10,BUILDPTR(,R4)                                   0044 00112000
         CLI   UT2TABID(@10),176                                   0044 00113000
         BNE   @RF00044                                            0044 00114000
*     DO;                           /*                       @Y30LB14*/ 00115000
*       CALL B10IDB0X;              /* BUILD RECOVERY JOURNAL      0046 00116000
*                                                            @Y30LB14*/ 00117000
         BAL   @14,B10IDB0X                                        0046 00118000
*       RETURN;                     /* RETURN TO ICGDSBLD    @Y30LB14*/ 00119000
         B     @EL00001                                            0047 00120000
*     END;                          /*                       @Y30LB14*/ 00121000
*   IF UT2TABID='C0'X               /* SCHEDULE QUEUE        @Y30LB14*/ 00122000
*     THEN                          /*                       @Y30LB14*/ 00123000
@RF00044 L     @10,BUILDPTR(,R4)                                   0049 00124000
         CLI   UT2TABID(@10),192                                   0049 00125000
         BNE   @RF00049                                            0049 00126000
*     DO;                           /*                       @Y30LB14*/ 00127000
*       CALL B10IDC0X;              /* BUILD SCHEDULE QUEUE  @Y30LB14*/ 00128000
         BAL   @14,B10IDC0X                                        0051 00129000
*       RETURN;                     /* RETURN TO ICGDSBLD    @Y30LB14*/ 00130000
         B     @EL00001                                            0052 00131000
*     END;                          /*                       @Y30LB14*/ 00132000
*                                                                  0053 00133000
*   /*****************************************************************/ 00134000
*   /*                                                               */ 00135000
*   /* ***********************************************       @YD00139*/ 00136000
*   /* BUILD THE MESSAGE BUFFER AREA                         @YD00139*/ 00137000
*   /* ***********************************************       @YD00139*/ 00138000
*   /*                                                               */ 00139000
*   /*****************************************************************/ 00140000
*                                                                  0054 00141000
*   IF UT2TABID='E0'X               /* MESSAGE BUFFER ID     @YD00139*/ 00142000
*     THEN                          /*                       @YD00139*/ 00143000
@RF00049 L     @10,BUILDPTR(,R4)                                   0054 00144000
         CLI   UT2TABID(@10),224                                   0054 00145000
         BNE   @RF00054                                            0054 00146000
*     DO;                           /*                       @YD00139*/ 00147000
*       CALL B10IDE0X;              /* BUILD MSG BUFFER      @YD00139*/ 00148000
         BAL   @14,B10IDE0X                                        0056 00149000
*       RETURN;                     /* RETURN TO ICGDSBLD    @YD00139*/ 00150000
         B     @EL00001                                            0057 00151000
*     END;                          /*                       @YD00139*/ 00152000
*                                                                  0058 00153000
*   /*****************************************************************/ 00154000
*   /*                                                               */ 00155000
*   /* ***********************************************       @YD00113*/ 00156000
*   /* IF NO MATCH ON TABLE ID FIELD, WRITE MESSAGE          @YD00113*/ 00157000
*   /* ICG411I TABLE ID DOES NOT MATCH A TABLE               @YD00113*/ 00158000
*   /* PRODUCED BY ICGDSB10.                                 @YD00113*/ 00159000
*   /* ***********************************************       @YD00113*/ 00160000
*   /*                                                               */ 00161000
*   /*****************************************************************/ 00162000
*                                                                  0059 00163000
*   MSGNO=ICG411I;                  /*                       @YD00113*/ 00164000
@RF00054 MVC   MSGNO(2,R4),ICG411I                                 0059 00165000
*   RETCODE=RETCODEC;               /* SET RETURN CODE = 12  @YD00113*/ 00166000
         MVC   RETCODE(2,R4),@CH00128                              0060 00167000
*   CALL PUTIT2;                    /* PUT OUT THE MESSAGE   @Y30LB14*/ 00168000
         BAL   @14,PUTIT2                                          0061 00169000
*   RETURN;                         /* RETURN TO ICGDSBLD    @Y30LB14   00170000
*                                                            @Y30LB14*/ 00171000
         B     @EL00001                                            0062 00172000
*                                                                  0063 00173000
*/********************************************************** @YD00113*/ 00174000
*/*                                                          @Y30LB14*/ 00175000
*/* PROCEDURE NAME - B10ID60X                                @Y30LB14*/ 00176000
*/*                                                          @Y30LB14*/ 00177000
*/* FUNCTION - BUILD THE VIRTUAL DEVICE ADDRESS/VOLID        @Y30LB14*/ 00178000
*/*            CROSS-REFERENCE LIST.                         @Y30LB14*/ 00179000
*/*                                                          @Y30LB14*/ 00180000
*/*            A MAXIMUM OF 64 VIRTUAL DEVICE ADDRESSES      @Y30LB14*/ 00181000
*/*            CAN BE SPECIFIED THROUGH EACH CHANNEL         @Y30LB14*/ 00182000
*/*            INTERFACE OF EACH DATA STAGER.  ALTHOUGH      @Y30LB14*/ 00183000
*/*            THE MAXIMUM NUMBER OF DATA STAGERS            @Y30LB14*/ 00184000
*/*            SUPPORTED BY THE STORAGE SUBSYSTEM IS 14,     @Y30LB14*/ 00185000
*/*            THE HIGHEST ADDRESS IS 'F' (STARTING FROM 0). @Y30LB14*/ 00186000
*/*                                                          @Y30LB14*/ 00187000
*/*            FOR EACH VIRTUAL DEVICE ADDRESS, A 4-BYTE     @Y30LB14*/ 00188000
*/*            ENTRY IS RESERVED.  THEREFORE ALL 64 ENTRIES  @Y30LB14*/ 00189000
*/*            FOR A DATA STAGER/CHANNEL INTERFACE ARE       @Y30LB14*/ 00190000
*/*            CONTAINED IN ONE BLOCK (8-BYTE BLOCK HEADER   @Y30LB14*/ 00191000
*/*            PLUS 256 DATA BYTES).  THERE ARE 48 POSSIBLE  @Y30LB14*/ 00192000
*/*            DATA STAGER/CHANNEL INTERFACE ADDRESS (OF     @Y30LB14*/ 00193000
*/*            WHICH 42 CAN BE USED).  THEREFORE, THE SIZE   @Y30LB14*/ 00194000
*/*            OF THE VDA/VOLID XREF TABLE IS 48 BLOCKS.     @Y30LB14*/ 00195000
*/*            THE REMAINING 16 BLOCKS NEEDED TO FILL OUT    @Y30LB14*/ 00196000
*/*            THE TRACK CONTAIN 'CHR' BUT DO NOT CONTAIN    @Y30LB14*/ 00197000
*/*            TABLE ID ('60'X).                             @Y30LB14*/ 00198000
*/*                                                          @Y30LB14*/ 00199000
*/*            THE DATA BYTES CONTAIN 256 BYTES OF BINARY    @Y30LB14*/ 00200000
*/*            ZEROS.                                        @Y30LB14*/ 00201000
*/*                                                          @Y30LB14*/ 00202000
*/********************************************************** @YD00113*/ 00203000
*                                                                  0063 00204000
*B10ID60X:                                                         0063 00205000
*   PROCEDURE;                      /*                       @Y30LB14*/ 00206000
B10ID60X STM   @14,@12,@SA00002                                    0063 00207000
*   L=48;                           /* LENGTH OF TABLE IN BLOCKS   0064 00208000
*                                                            @Y30LB14*/ 00209000
         LA    L,48                                                0064 00210000
*   CALL WRITELIB;                  /* PUT OUT THE TABLE     @Y30LB14*/ 00211000
         BAL   @14,WRITELIB                                        0065 00212000
*   TABLEID=0;                      /* SET ID=0 FOR REST     @Y30LB14*/ 00213000
         SLR   TABLEID,TABLEID                                     0066 00214000
*   L=16;                           /* REMAINDER OF TRACK    @Y30LB14*/ 00215000
         LA    L,16                                                0067 00216000
*   CALL WRITELIB;                  /* FILL REMAINDER OF TRK W/O ID     00217000
*                                                            @Y30LB14*/ 00218000
         BAL   @14,WRITELIB                                        0068 00219000
*   RETURN;                         /* RETURN TO CALLER      @Y30LB14*/ 00220000
@EL00002 DS    0H                                                  0069 00221000
@EF00002 DS    0H                                                  0069 00222000
@ER00002 LM    @14,@12,@SA00002                                    0069 00223000
         BR    @14                                                 0069 00224000
*   END B10ID60X;                   /*                       @Y30LB14*/ 00225000
*                                                                  0071 00226000
*/********************************************************** @YD00113*/ 00227000
*/*                                                          @Y30LB14*/ 00228000
*/* PROCEDURE NAME - B10ID80X                                @Y30LB14*/ 00229000
*/*                                                          @Y30LB14*/ 00230000
*/* FUNCTION - BUILD THE DATA STAGER PAGE STATUS TABLE       @Y30LB14*/ 00231000
*/*            IMAGE AREA.                                   @Y30LB14*/ 00232000
*/*                                                          @Y30LB14*/ 00233000
*/*            THE DS PST IMAGE AREA IS A WORK AREA USED     @Y30LB14*/ 00234000
*/*            BY THE DSM TO READ THE PAGE STATUS TABLE      @Y30LB14*/ 00235000
*/*            FROM THE DATA STAGER.                         @Y30LB14*/ 00236000
*/*                                                          @Y30LB14*/ 00237000
*/*            THE TABLE IS 8 TRACKS (256 BLOCKS) IN LENGTH. @Y30LB14*/ 00238000
*/*            THE FIRST 8 BYTES OF EACH BLOCK CONTAIN THE   @Y30LB14*/ 00239000
*/*            BLOCK HEADER.  THE 256 DATA BYTES OF EACH     @Y30LB14*/ 00240000
*/*            BLOCK CONTAIN BINARY ZEROS WHEN THE TABLE     @Y30LB14*/ 00241000
*/*            IS CREATED OR REBUILT.                        @Y30LB14*/ 00242000
*/*                                                          @Y30LB14*/ 00243000
*/********************************************************** @YD00113*/ 00244000
*                                                                  0071 00245000
*B10ID80X:                                                         0071 00246000
*   PROCEDURE;                      /*                       @Y30LB14*/ 00247000
B10ID80X STM   @14,@12,@SA00003                                    0071 00248000
*   L=256;                          /* SET FOR 256 BLOCKS    @Y30LB14*/ 00249000
         LA    L,256                                               0072 00250000
*   CALL WRITELIB;                  /* PUT OUT THE TABLE     @Y30LB14*/ 00251000
         BAL   @14,WRITELIB                                        0073 00252000
*   RETURN;                         /* RETURN TO CALLER      @Y30LB14*/ 00253000
@EL00003 DS    0H                                                  0074 00254000
@EF00003 DS    0H                                                  0074 00255000
@ER00003 LM    @14,@12,@SA00003                                    0074 00256000
         BR    @14                                                 0074 00257000
*   END B10ID80X;                   /*                       @Y30LB14*/ 00258000
*                                                                  0076 00259000
*/********************************************************** @YD00113*/ 00260000
*/*                                                          @Y30LB14*/ 00261000
*/* PROCEDURE NAME - B10IDA0X                                @Y30LB14*/ 00262000
*/*                                                          @Y30LB14*/ 00263000
*/* FUNCTION - BUILD THE VIRTUAL DEVICE ADDRESS TABLE.       @Y30LB14*/ 00264000
*/*                                                          @Y30LB14*/ 00265000
*/*            THE VVA TABLE IS 16 BLOCKS IN LENGTH WITH ALL @Y30LB14*/ 00266000
*/*            256 BYTES IN THE BLOCK SET TO BINARY ZEROS.   @Y30LB14*/ 00267000
*/*            THE 16 BLOCKS ALL HAVE A TABLE ID.  THE RE-   @Y30LB14*/ 00268000
*/*            MAINING 16 BLOCKS OF THE TRACK ARE SET TO 0'S @Y30LB14*/ 00269000
*/*            WITH THE BLOCK HEADER CONTAINING THE CHR BUT  @XD00153*/ 00270000
*/*            THERE IS NO TABLD ID.                         @Y30LB14*/ 00271000
*/*                                                          @Y30LB14*/ 00272000
*/********************************************************** @YD00113*/ 00273000
*                                                                  0076 00274000
*B10IDA0X:                                                         0076 00275000
*   PROCEDURE;                      /*                       @Y30LB14*/ 00276000
B10IDA0X STM   @14,@12,@SA00004                                    0076 00277000
*   L=16;                           /* LENGTH OF TABLE IN BLOCKS   0077 00278000
*                                                            @Y30LB14*/ 00279000
         LA    L,16                                                0077 00280000
*   CALL WRITELIB;                  /* PUT OUT THE TABLE     @Y30LB14*/ 00281000
         BAL   @14,WRITELIB                                        0078 00282000
*   TABLEID=0;                      /* SET ID=0 FOR REST     @Y30LB14*/ 00283000
         SLR   TABLEID,TABLEID                                     0079 00284000
*   L=16;                           /* REMAINDER OF TRACK    @Y30LB14*/ 00285000
         LA    L,16                                                0080 00286000
*   CALL WRITELIB;                  /* FILL REMAINDER OF TRK W/O ID     00287000
*                                                            @Y30LB14*/ 00288000
         BAL   @14,WRITELIB                                        0081 00289000
*   RETURN;                         /* RETURN TO CALLER      @Y30LB14*/ 00290000
@EL00004 DS    0H                                                  0082 00291000
@EF00004 DS    0H                                                  0082 00292000
@ER00004 LM    @14,@12,@SA00004                                    0082 00293000
         BR    @14                                                 0082 00294000
*   END B10IDA0X;                   /*                       @Y30LB14*/ 00295000
*                                                                  0084 00296000
*/********************************************************** @YD00113*/ 00297000
*/*                                                          @Y30LB14*/ 00298000
*/* PROCEDURE NAME - B10IDB0X                                @Y30LB14*/ 00299000
*/*                                                          @Y30LB14*/ 00300000
*/* FUNCTION - BUILD THE RECOVERY JOURNAL                    @Y30LB14*/ 00301000
*/*                                                          @Y30LB14*/ 00302000
*/*            THE RECOVERY JOURNAL IS 8 TRACKS (256 BLOCKS) @Y30LB14*/ 00303000
*/*            IN LENGTH.  EVERYTHING IS WRITTEN TO ZEROS    @Y30LB14*/ 00304000
*/*            INCLUDING THE TABLE ID AND CHR IN THE HEADER  @Y30LB14*/ 00305000
*/*            BLOCK.                                        @Y30LB14*/ 00306000
*/*                                                          @Y30LB14*/ 00307000
*/********************************************************** @YD00113*/ 00308000
*                                                                  0084 00309000
*B10IDB0X:                                                         0084 00310000
*   PROCEDURE;                      /*                       @Y30LB14*/ 00311000
B10IDB0X STM   @14,@12,@SA00005                                    0084 00312000
*   DO J=1 TO 256;                  /* DO ALL 256 BLOCKS     @Y30LB14*/ 00313000
         LA    J,1                                                 0085 00314000
@DL00085 DS    0H                                                  0086 00315000
*     K=K+1;                        /* INCR BLOCK COUNT      @Y30LB14*/ 00316000
         AH    K,@CH00042                                          0086 00317000
*     OBLOCK(K)=BLOCK;              /* PUT BLOCK IN OUTPUT BUFR    0087 00318000
*                                                            @Y30LB14*/ 00319000
         LR    @10,K                                               0087 00320000
         MH    @10,@CH00437                                        0087 00321000
         LH    @07,@CH00436                                        0087 00322000
         AL    @07,BUILDPTR(,R4)                                   0087 00323000
         ST    @10,@TF00001                                        0087 00324000
         ALR   @10,@07                                             0087 00325000
         AL    @10,@CF00439                                        0087 00326000
         MVC   OBLOCK-16(256,@10),BLOCK                            0087 00327000
*     OBLKPRFX(K)=''B;              /* ZERO THE BLOCK HEADER @Y30LB14*/ 00328000
         AL    @07,@TF00001                                        0088 00329000
         AL    @07,@CF00440                                        0088 00330000
         XC    OBLKPRFX-8(8,@07),OBLKPRFX-8(@07)                   0088 00331000
*     IF K=32                       /* TRACK BUFFER FULL     @Y30LB14*/ 00332000
*       THEN                        /*                       @Y30LB14*/ 00333000
         CH    K,@CH00309                                          0089 00334000
         BNE   @RF00089                                            0089 00335000
*       DO;                         /*                       @Y30LB14*/ 00336000
*         CALL WRITE;               /* PUT OUT THE TRACK     @Y30LB14*/ 00337000
         BAL   @14,WRITE                                           0091 00338000
*         K=0;                      /* SET BLOCK COUNT TO 0  @Y30LB14*/ 00339000
         SLR   K,K                                                 0092 00340000
*       END;                        /*                       @Y30LB14*/ 00341000
*   END;                            /*                       @Y30LB14*/ 00342000
@RF00089 AH    J,@CH00042                                          0094 00343000
         CH    J,@CH00035                                          0094 00344000
         BNH   @DL00085                                            0094 00345000
*   END B10IDB0X;                   /*                       @Y30LB14*/ 00346000
@EL00005 DS    0H                                                  0095 00347000
@EF00005 DS    0H                                                  0095 00348000
@ER00005 LM    @14,@12,@SA00005                                    0095 00349000
         BR    @14                                                 0095 00350000
*                                                                  0096 00351000
*/********************************************************** @YD00113*/ 00352000
*/*                                                          @Y30LB14*/ 00353000
*/* PROCEDURE NAME - B10IDC0X                                @Y30LB14*/ 00354000
*/*                                                          @Y30LB14*/ 00355000
*/* FUNCTION - DASD SCHEDULE QUEUE                           @Y30LB14*/ 00356000
*/*                                                          @Y30LB14*/ 00357000
*/*            THE TABLE IS 8 TRACKS (256 BLOCKS) IN LENGTH. @Y30LB14*/ 00358000
*/*            THE FIRST 8 BYTES OF EACH BLOCK CONTAIN THE   @Y30LB14*/ 00359000
*/*            BLOCK HEADER.  THE 256 DATA BYTES ARE INIT-   @Y30LB14*/ 00360000
*/*            IALIZED TO '00'X EXCEPT FOR THE QCB POINTER   @XD00153*/ 00361000
*/*            BYTE (BYTE '0F'X IN EACH BLOCK).  THIS BYTE   @Y30LB14*/ 00362000
*/*            IS '00'X IN THE 1ST BLOCK AND IS INCREMENTED  @Y30LB14*/ 00363000
*/*            BY 1 IN EACH SUBSEQUENT BLOCK.                @Y30LB14*/ 00364000
*/********************************************************** @YD00113*/ 00365000
*                                                                  0096 00366000
*B10IDC0X:                                                         0096 00367000
*   PROCEDURE;                      /*                       @Y30LB14*/ 00368000
*                                                                  0096 00369000
B10IDC0X STM   @14,@12,@SA00006                                    0096 00370000
*   /*****************************************************************/ 00371000
*   /*                                                               */ 00372000
*   /* ***********************************************       @YD00113*/ 00373000
*   /* PUT OUT THE 256 SCHEDULE QUEUE BLOCKS                 @Y30LB14*/ 00374000
*   /* ***********************************************       @YD00113*/ 00375000
*   /*                                                               */ 00376000
*   /*****************************************************************/ 00377000
*                                                                  0097 00378000
*   L=256;                          /* SET FOR 256 BLOCKS    @Y30LB14*/ 00379000
         LA    L,256                                               0097 00380000
*   I=1;                            /* SET BYTE INCREMENT    @Y30LB14*/ 00381000
         LA    I,1                                                 0098 00382000
*   CALL WRITELIB;                  /* SET UP OUTPUT BUFR    @Y30LB14*/ 00383000
         BAL   @14,WRITELIB                                        0099 00384000
*   RETURN;                         /* RETURN TO CALLER      @Y30LB14*/ 00385000
@EL00006 DS    0H                                                  0100 00386000
@EF00006 DS    0H                                                  0100 00387000
@ER00006 LM    @14,@12,@SA00006                                    0100 00388000
         BR    @14                                                 0100 00389000
*   END B10IDC0X;                   /*                       @Y30LB14*/ 00390000
*                                                                  0102 00391000
*/********************************************************** @YD00139*/ 00392000
*/*                                                          @YD00139*/ 00393000
*/* PROCEDURE NAME - B10IDE0X                                @YD00139*/ 00394000
*/*                                                          @YD00139*/ 00395000
*/* FUNCTION - BUILD THE MESSAGE BUFFER TABLE.  THE TABLE    @YD00139*/ 00396000
*/*            IS 48 BLOCKS IN LENGTH AND IS INITIALIZED     @YD00139*/ 00397000
*/*            WITH TABLE ID ('E0'X) IN THE FIRST BYTE OF    @YD00139*/ 00398000
*/*            PREFIX FOLLOWED BY VIRTUAL CYLINDER/HEAD/     @YD00139*/ 00399000
*/*            RECORD.  THE UNUSED 16 BLOCKS ARE INITIALIZED @YD00139*/ 00400000
*/*            WITH VIRTUAL CYLINDER/HEAD/RECORD ONLY.       @YD00139*/ 00401000
*/*                                                          @YD00139*/ 00402000
*/********************************************************** @YD00139*/ 00403000
*                                                                  0102 00404000
*B10IDE0X:                                                         0102 00405000
*   PROCEDURE;                      /*                       @YD00139*/ 00406000
B10IDE0X STM   @14,@12,@SA00007                                    0102 00407000
*   L=80;                           /* LENGTH OF TABLE IN BLOCKS   0103 00408000
*                                                            @YD00139*/ 00409000
         LA    L,80                                                0103 00410000
*   CALL WRITELIB;                  /* PUT OUT THE TABLE     @YD00139*/ 00411000
         BAL   @14,WRITELIB                                        0104 00412000
*   TABLEID=0;                      /* SET ID=0 FOR REST     @YD00139*/ 00413000
         SLR   TABLEID,TABLEID                                     0105 00414000
*   L=16;                           /* REMAINDER OF TRACK    @YD00139*/ 00415000
         LA    L,16                                                0106 00416000
*   CALL WRITELIB;                  /* FILL REMAINDER OF TRK W/O ID     00417000
*                                                            @YD00139*/ 00418000
         BAL   @14,WRITELIB                                        0107 00419000
*   RETURN;                         /* RETURN TO CALLER      @YD00139*/ 00420000
@EL00007 DS    0H                                                  0108 00421000
@EF00007 DS    0H                                                  0108 00422000
@ER00007 LM    @14,@12,@SA00007                                    0108 00423000
         BR    @14                                                 0108 00424000
*   END B10IDE0X;                   /*                       @YD00139*/ 00425000
*                                                                  0110 00426000
*/********************************************************** @YD00113*/ 00427000
*/*                                                          @YD00113*/ 00428000
*/* PROCEDURE NAME - WRITELIB                                @YD00113*/ 00429000
*/*                                                          @YD00113*/ 00430000
*/* FUNCTION - THIS ROUTINE PLACES THE IMAGE OF THE          @YD00113*/ 00431000
*/*            INITIALIZED BLOCK IN THE OUTPUT BUFFER.       @YD00113*/ 00432000
*/*            WHEN 32 BLOCKS HAVE BEEN PLACED IN THE        @YD00113*/ 00433000
*/*            OUTPUT BUFFER, THE PROCEDURE 'WRITETRK' IS    @YD00113*/ 00434000
*/*            CALLED TO PLACE THE VIRTUAL CHR IN EACH       @YD00113*/ 00435000
*/*            RECORD AND TO WRITE THE TRACK.                @YD00113*/ 00436000
*/*                                                          @YD00113*/ 00437000
*/********************************************************** @YD00113*/ 00438000
*                                                                  0110 00439000
*WRITELIB:                                                         0110 00440000
*   PROCEDURE;                      /*                       @Y30LB14*/ 00441000
*                                                                  0110 00442000
WRITELIB STM   @14,@01,@SA00008                                    0110 00443000
         STM   @03,@12,@SA00008+16                                 0110 00444000
*   /*****************************************************************/ 00445000
*   /*                                                               */ 00446000
*   /* ***********************************************       @YD00113*/ 00447000
*   /* PUT OUT 'L' BLOCKS                                    @YD00113*/ 00448000
*   /* ***********************************************       @YD00113*/ 00449000
*   /*                                                               */ 00450000
*   /*****************************************************************/ 00451000
*                                                                  0111 00452000
*   DO J=1 TO L;                    /* DO FOR EACH BLOCK     @YD00113*/ 00453000
         LA    J,1                                                 0111 00454000
         B     @DE00111                                            0111 00455000
@DL00111 DS    0H                                                  0112 00456000
*     K=K+1;                        /*                       @Y30LB14*/ 00457000
         AH    K,@CH00042                                          0112 00458000
*     OBLOCK(K)=BLOCK;              /* PUT BLOCK IN BUFFER   @YD00113*/ 00459000
         LR    @10,K                                               0113 00460000
         MH    @10,@CH00437                                        0113 00461000
         LH    @15,@CH00436                                        0113 00462000
         AL    @15,BUILDPTR(,R4)                                   0113 00463000
         ST    @10,@TF00001                                        0113 00464000
         ALR   @10,@15                                             0113 00465000
         AL    @10,@CF00439                                        0113 00466000
         MVC   OBLOCK-16(256,@10),BLOCK                            0113 00467000
*     OUTABLID(K)=TABLEID;          /* PUT IN TABLE ID       @Y30LB14*/ 00468000
         L     @10,@TF00001                                        0114 00469000
         AL    @15,@CF00440                                        0114 00470000
         STC   TABLEID,OUTABLID-8(@10,@15)                         0114 00471000
*     BYTES(16)=BYTES(16)+I;        /* SIGNIFICANT ONLY      @Y30LB14   00472000
*                                      FOR SCHEDULE QUEUE    @Y30LB14*/ 00473000
         SLR   @10,@10                                             0115 00474000
         IC    @10,BYTES+15                                        0115 00475000
         ALR   @10,I                                               0115 00476000
         STC   @10,BYTES+15                                        0115 00477000
*     IF K=32                       /* TRACK IS FULL         @Y30LB14*/ 00478000
*       THEN                        /*                       @Y30LB14*/ 00479000
         CH    K,@CH00309                                          0116 00480000
         BNE   @RF00116                                            0116 00481000
*       DO;                         /*                       @Y30LB14*/ 00482000
*         CALL WRITETRK;            /* WRITE OUT THE TRACK   @Y30LB14*/ 00483000
         BAL   @14,WRITETRK                                        0118 00484000
*         K=0;                      /* SET FOR START OF NEXT TRACK 0119 00485000
*                                                            @Y30LB14*/ 00486000
         SLR   K,K                                                 0119 00487000
*       END;                        /*                       @Y30LB14*/ 00488000
*   END;                            /*                       @Y30LB14   00489000
*                                                            @Y30LB14*/ 00490000
@RF00116 AH    J,@CH00042                                          0121 00491000
@DE00111 CR    J,L                                                 0121 00492000
         BNH   @DL00111                                            0121 00493000
*   RETURN;                         /* RETURN TO CALLER      @Y30LB14*/ 00494000
@EL00008 DS    0H                                                  0122 00495000
@EF00008 DS    0H                                                  0122 00496000
@ER00008 LM    @14,@01,@SA00008                                    0122 00497000
         LM    @03,@12,@SA00008+16                                 0122 00498000
         BR    @14                                                 0122 00499000
*   END WRITELIB;                   /*                       @Y30LB14*/ 00500000
*                                                                  0124 00501000
*/********************************************************** @YD00113*/ 00502000
*/*                                                          @YD00113*/ 00503000
*/* PROCEDURE NAME - WRITETRK                                @YD00113*/ 00504000
*/*                                                          @YD00113*/ 00505000
*/* FUNCTION - WRITE THE VIRTUAL CHR IN EACH RECORD FOR      @YD00113*/ 00506000
*/*            THIS TRACK AND CALL THE PROCEDURE 'WRITE'     @YD00113*/ 00507000
*/*            TO WRITE THE 32 RECORDS.                      @YD00113*/ 00508000
*/*                                                          @YD00113*/ 00509000
*/********************************************************** @YD00113*/ 00510000
*                                                                  0124 00511000
*WRITETRK:                                                         0124 00512000
*   PROCEDURE;                      /*                       @Y30LB14*/ 00513000
WRITETRK STM   @14,@12,@SA00009                                    0124 00514000
*   DO K=1 TO 32;                   /*                       @Y30LB14*/ 00515000
         LA    K,1                                                 0125 00516000
@DL00125 DS    0H                                                  0126 00517000
*     OUTREC(K)=K;                  /* SET THE PREFIX RECORD NUM   0126 00518000
*                                                            @Y30LB14*/ 00519000
         LR    @10,K                                               0126 00520000
         MH    @10,@CH00437                                        0126 00521000
         LH    @05,@CH00436                                        0126 00522000
         AL    @05,BUILDPTR(,R4)                                   0126 00523000
         LA    @03,0(@10,@05)                                      0126 00524000
         AL    @03,@CF00441                                        0126 00525000
         STC   K,OUTREC-11(,@03)                                   0126 00526000
*     OUTHEAD(K)=OUTHEAD(1);        /* SET THE HEAD NUMBER   @Y30LB14*/ 00527000
         SLR   @03,@03                                             0127 00528000
         IC    @03,OUTHEAD(,@05)                                   0127 00529000
         LA    @01,0(@10,@05)                                      0127 00530000
         AL    @01,@CF00442                                        0127 00531000
         STC   @03,OUTHEAD-10(,@01)                                0127 00532000
*     OUTCYL(K)=OUTCYL(1);          /* SET THE CYL NUMBER    @Y30LB14*/ 00533000
         SLR   @03,@03                                             0128 00534000
         IC    @03,OUTCYL(,@05)                                    0128 00535000
         LA    @01,0(@10,@05)                                      0128 00536000
         AL    @01,@CF00443                                        0128 00537000
         STC   @03,OUTCYL-9(,@01)                                  0128 00538000
*     OUTFLR(K)=''B;                /* SET FILLER TO ZERO    @Y30LB14*/ 00539000
         ALR   @05,@10                                             0129 00540000
         AL    @05,@CF00444                                        0129 00541000
         XC    OUTFLR-12(4,@05),OUTFLR-12(@05)                     0129 00542000
*   END;                            /*                       @Y30LB14*/ 00543000
         AH    K,@CH00042                                          0130 00544000
         CH    K,@CH00309                                          0130 00545000
         BNH   @DL00125                                            0130 00546000
*   CALL WRITE;                     /* WRITE OUT THE TRACK   @Y30LB14*/ 00547000
         BAL   @14,WRITE                                           0131 00548000
*   RETURN;                         /* RETURN TO CALLER      @Y30LB14*/ 00549000
@EL00009 DS    0H                                                  0132 00550000
@EF00009 DS    0H                                                  0132 00551000
@ER00009 LM    @14,@12,@SA00009                                    0132 00552000
         BR    @14                                                 0132 00553000
*   END WRITETRK;                   /*                       @Y30LB14*/ 00554000
*                                                                  0134 00555000
*/********************************************************** @YD00113*/ 00556000
*/*                                                          @YD00113*/ 00557000
*/* PROCEDURE NAME - WRITE                                   @YD00113*/ 00558000
*/*                                                          @YD00113*/ 00559000
*/* FUNCTION - WRITE THE 32 RECORDS ON THIS TRACK AND        @YD00113*/ 00560000
*/*            CALCULATE THE ADDRESS OF THE NEXT TRACK TO BE @YD00113*/ 00561000
*/*            WRITTEN.                                      @YD00113*/ 00562000
*/*                                                          @YD00113*/ 00563000
*/********************************************************** @YD00113*/ 00564000
*                                                                  0134 00565000
*WRITE:                                                            0134 00566000
*   PROCEDURE;                      /*                       @Y30LB14*/ 00567000
WRITE    STM   @14,@12,@SA00010                                    0134 00568000
*   B06ADDR=OUTADDR;                /* ADDRESS OF BUFFER     @YD00113*/ 00569000
         L     @10,BUILDPTR(,R4)                                   0135 00570000
         MVC   B06ADDR(3,@10),OUTADDR(@10)                         0135 00571000
*   GEN(LINK EP=ICGDSB06);          /* WRITE OUT TRACK       @Y30LB14*/ 00572000
         LINK EP=ICGDSB06                                               00573000
*   UT2VHEAD=UT2VHEAD+1;            /* INCR TO NEXT TRACK    @Y30LB14*/ 00574000
         L     @10,BUILDPTR(,R4)                                   0137 00575000
         LA    @05,1                                               0137 00576000
         SLR   @15,@15                                             0137 00577000
         IC    @15,UT2VHEAD(,@10)                                  0137 00578000
         ALR   @15,@05                                             0137 00579000
         STC   @15,UT2VHEAD(,@10)                                  0137 00580000
*   IF UT2VHEAD>18                  /*                       @Y30LB14*/ 00581000
*     THEN                          /*                       @Y30LB14*/ 00582000
         CLI   UT2VHEAD(@10),18                                    0138 00583000
         BNH   @RF00138                                            0138 00584000
*     DO;                           /*                       @Y30LB14*/ 00585000
*       UT2VHEAD=0;                 /* SET TRACK TO ZERO     @Y30LB14*/ 00586000
         MVI   UT2VHEAD(@10),X'00'                                 0140 00587000
*       UT2VCYL=UT2VCYL+1;          /* INCR TO NEXT CYL      @Y30LB14*/ 00588000
         MVC   @ZT00003+3(1),UT2VCYL(@10)                          0141 00589000
         AL    @05,@ZT00003                                        0141 00590000
         STC   @05,UT2VCYL(,@10)                                   0141 00591000
*     END;                          /*                       @Y30LB14*/ 00592000
*   OUTCYL(1)=UT2VCYL;              /* SET FOR NEXT AVAIL CYL      0143 00593000
*                                                            @Y30LB14*/ 00594000
@RF00138 L     @10,BUILDPTR(,R4)                                   0143 00595000
         LH    @05,@CH00436                                        0143 00596000
         ALR   @05,@10                                             0143 00597000
         MVC   OUTCYL(1,@05),UT2VCYL(@10)                          0143 00598000
*   OUTHEAD(1)=UT2VHEAD;            /* SET FOR NEXT AVAIL HEAD     0144 00599000
*                                                            @Y30LB14*/ 00600000
         MVC   OUTHEAD(1,@05),UT2VHEAD(@10)                        0144 00601000
*   RETURN;                         /* RETURN TO CALLER      @Y30LB14*/ 00602000
@EL00010 DS    0H                                                  0145 00603000
@EF00010 DS    0H                                                  0145 00604000
@ER00010 LM    @14,@12,@SA00010                                    0145 00605000
         BR    @14                                                 0145 00606000
*   END WRITE;                      /*                       @Y30LB14*/ 00607000
*                                                                  0147 00608000
*/***********************************************************@Y30LB12*/ 00609000
*/*                                                          @Y30LB12*/ 00610000
*/* PROCEDURE NAME - PUTIT2                                  @Y30LB12*/ 00611000
*/*                                                          @Y30LB12*/ 00612000
*/* FUNCTION - CALL ICGDSMSG, MESSAGE PRINT SUBROUTINE, TO   @Y30LB12*/ 00613000
*/*            PUT TERMINATING MESSAGE FOR WHICH MESSAGE     @Y30LB12*/ 00614000
*/*            TEXT IS IN ICGDSMSG.  'MSGNO' INDICATES THE   @Y30LB12*/ 00615000
*/*            OFFSET OF THE MESSAGE TEXT.                   @Y30LB12*/ 00616000
*/*                                                          @Y30LB12*/ 00617000
*/***********************************************************@Y30LB12*/ 00618000
*                                                                  0147 00619000
*PUTIT2:                                                           0147 00620000
*   PROCEDURE;                      /*                       @Y30LB12*/ 00621000
PUTIT2   STM   @14,@12,@SA00011                                    0147 00622000
*   STOPSCAN='1'B;                  /*                       @Y30LB12*/ 00623000
         OI    STOPSCAN,B'10000000'                                0148 00624000
*   TERMINAT=TERMINAT+1;            /*                       @Y30LB12*/ 00625000
         LA    @10,1                                               0149 00626000
         AH    @10,TERMINAT(,R4)                                   0149 00627000
         STH   @10,TERMINAT(,R4)                                   0149 00628000
*   GEN(LINK  EP=ICGDSMSG);         /*                       @Y30LB12*/ 00629000
         LINK  EP=ICGDSMSG                                              00630000
*   END PUTIT2;                     /*                       @Y30LB12*/ 00631000
@EL00011 DS    0H                                                  0151 00632000
@EF00011 DS    0H                                                  0151 00633000
@ER00011 LM    @14,@12,@SA00011                                    0151 00634000
         BR    @14                                                 0151 00635000
*                                                                  0152 00636000
*/********************************************************** @YD00113*/ 00637000
*/*                    P A T C H   A R E A                   @YD00113*/ 00638000
*/********************************************************** @YD00113*/ 00639000
*                                                                  0152 00640000
*   GENERATE;                                                      0152 00641000
*                                                         /*@YD00113*/  00642000
PATCHB10 DC    32C'PATCHB10'                              /*@YD00113*/  00643000
*   END ICGDSB10                    /*                       @Y30LB14*/ 00644000
*                                                                  0153 00645000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 00646000
*/*%INCLUDE SYSLIB  (ICGDSMAC)                                       */ 00647000
*/*%INCLUDE SYSLIB  (ICGDSMA5)                                       */ 00648000
*/*%INCLUDE SYSLIB  (ICGDSMA3)                                       */ 00649000
*                                                                  0153 00650000
*       ;                                                          0153 00651000
         B     @EL00001                                            0153 00652000
@DATA    DS    0H                                                       00653000
@CH00042 DC    H'1'                                                     00654000
@CH00128 DC    H'12'                                                    00655000
@CH00309 DC    H'32'                                                    00656000
@CH00035 DC    H'256'                                                   00657000
@CH00437 DC    H'272'                                                   00658000
@DATD    DSECT                                                          00659000
         DS    0F                                                       00660000
@SA00001 DS    18F                                                      00661000
@SA00002 DS    15F                                                      00662000
@SA00003 DS    15F                                                      00663000
@SA00004 DS    15F                                                      00664000
@SA00005 DS    15F                                                      00665000
@SA00006 DS    15F                                                      00666000
@SA00007 DS    15F                                                      00667000
@SA00011 DS    15F                                                      00668000
@SA00008 DS    14F                                                      00669000
@SA00010 DS    15F                                                      00670000
@SA00009 DS    15F                                                      00671000
@TF00001 DS    F                                                        00672000
@ZTEMPS  DS    0F                                                       00673000
@ZT00003 DC    F'0'                                                     00674000
@ZTEMPND EQU   *                                                        00675000
@ZLEN    EQU   @ZTEMPND-@ZTEMPS                                         00676000
ICGDSB10 CSECT                                                          00677000
         DS    0F                                                       00678000
@CF00436 DC    F'13532'                                                 00679000
@CH00436 EQU   @CF00436+2                                               00680000
@CF00440 DC    F'-264'                                                  00681000
@CF00443 DC    F'-263'                                                  00682000
@CF00442 DC    F'-262'                                                  00683000
@CF00441 DC    F'-261'                                                  00684000
@CF00444 DC    F'-260'                                                  00685000
@CF00439 DC    F'-256'                                                  00686000
@DATD    DSECT                                                          00687000
         DS    0D                                                       00688000
BLOCK    DS    CL256                                                    00689000
         ORG   BLOCK                                                    00690000
ZEROS    DS    BL256                                                    00691000
         ORG   BLOCK+256                                                00692000
STOPSCAN DS    BL1                                                      00693000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                00694000
@ENDDATD EQU   *                                                        00695000
ICGDSB10 CSECT                                                          00696000
         DS    0F                                                       00697000
@SIZDATD DC    AL1(0)                                                   00698000
         DC    AL3(@ENDDATD-@DATD)                                      00699000
         DS    0D                                                       00700000
ICG411I  DC    H'411'                                                   00701000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00702000
@01      EQU   01                                                       00703000
@02      EQU   02                                                       00704000
@03      EQU   03                                                       00705000
@04      EQU   04                                                       00706000
@05      EQU   05                                                       00707000
@06      EQU   06                                                       00708000
@07      EQU   07                                                       00709000
@08      EQU   08                                                       00710000
@09      EQU   09                                                       00711000
@10      EQU   10                                                       00712000
@11      EQU   11                                                       00713000
@12      EQU   12                                                       00714000
@13      EQU   13                                                       00715000
@14      EQU   14                                                       00716000
@15      EQU   15                                                       00717000
TABLEID  EQU   @05                                                      00718000
L        EQU   @03                                                      00719000
K        EQU   @02                                                      00720000
J        EQU   @06                                                      00721000
I        EQU   @07                                                      00722000
R4       EQU   @04                                                      00723000
COMTAB   EQU   0                                                        00724000
READER   EQU   COMTAB+256                                               00725000
READFLAG EQU   READER+96                                                00726000
PCHBF    EQU   READER+99                                                00727000
STARTCOL EQU   READER+180                                               00728000
NEXTCOL  EQU   READER+184                                               00729000
PRINTER  EQU   COMTAB+464                                               00730000
MESSAGES EQU   COMTAB+810                                               00731000
RETCODE  EQU   MESSAGES                                                 00732000
MSGNO    EQU   MESSAGES+2                                               00733000
TERMINAT EQU   MESSAGES+6                                               00734000
SPECLMSG EQU   MESSAGES+18                                              00735000
GENIO    EQU   COMTAB+832                                               00736000
DCBPTR   EQU   GENIO+4                                                  00737000
COMPTR2  EQU   GENIO+16                                                 00738000
BUILDPTR EQU   GENIO+20                                                 00739000
INVOKED  EQU   COMTAB+856                                               00740000
SAVEDDS  EQU   INVOKED+4                                                00741000
BUILDRSG EQU   COMTAB+900                                               00742000
RSGS     EQU   BUILDRSG                                                 00743000
RSG      EQU   RSGS                                                     00744000
RSGABOX  EQU   RSG                                                      00745000
RSGTODS  EQU   RSG+7                                                    00746000
LIBRARY  EQU   COMTAB+1170                                              00747000
LIBS     EQU   LIBRARY                                                  00748000
LIB      EQU   LIBS                                                     00749000
LIBBITS  EQU   LIB                                                      00750000
PABTABLE EQU   COMTAB+1218                                              00751000
PABDEV   EQU   PABTABLE                                                 00752000
PABFLAGS EQU   PABDEV                                                   00753000
PABREAL  EQU   PABDEV+1                                                 00754000
PABAADDD EQU   PABDEV+2                                                 00755000
DSPAIRS  EQU   COMTAB+1938                                              00756000
PHYSTYPE EQU   COMTAB+2002                                              00757000
PHYSFLGS EQU   PHYSTYPE                                                 00758000
MERLICEB EQU   PHYSFLGS                                                 00759000
CPUASSOC EQU   COMTAB+3026                                              00760000
CPUS     EQU   CPUASSOC+2                                               00761000
CPU      EQU   CPUS                                                     00762000
CPUFLAG1 EQU   CPU+6                                                    00763000
OPSYSTYP EQU   CPUFLAG1                                                 00764000
CPUFLAG2 EQU   CPU+7                                                    00765000
LOWERCON EQU   COMTAB+3156                                              00766000
LOWDSS   EQU   LOWERCON                                                 00767000
LOWFLGS  EQU   LOWDSS                                                   00768000
LIBCTL   EQU   COMTAB+3284                                              00769000
LIBCTLS  EQU   LIBCTL                                                   00770000
CREATE   EQU   COMTAB+3288                                              00771000
@NM00017 EQU   CREATE                                                   00772000
COMTAB2  EQU   0                                                        00773000
DSTORSG  EQU   COMTAB2                                                  00774000
DSENTRY  EQU   DSTORSG                                                  00775000
CONFGCON EQU   COMTAB2+32                                               00776000
RSGUCB   EQU   CONFGCON                                                 00777000
RSGFLAGS EQU   RSGUCB                                                   00778000
CONFGUCB EQU   COMTAB2+464                                              00779000
CONFGDEV EQU   CONFGUCB                                                 00780000
USEFLAGS EQU   CONFGDEV                                                 00781000
ALTPATH1 EQU   CONFGDEV+2                                               00782000
ALTPATH2 EQU   CONFGDEV+5                                               00783000
ALTPATH3 EQU   CONFGDEV+8                                               00784000
BUILDTAB EQU   0                                                        00785000
COMB06   EQU   BUILDTAB                                                 00786000
B06DCBPT EQU   COMB06                                                   00787000
B06BUFPT EQU   COMB06+4                                                 00788000
B06ADDR  EQU   COMB06+9                                                 00789000
COMB05   EQU   BUILDTAB+12                                              00790000
B05ADDR  EQU   COMB05+9                                                 00791000
BUILDGEN EQU   BUILDTAB+24                                              00792000
UT2VCHR  EQU   BUILDGEN+8                                               00793000
UT2TABID EQU   UT2VCHR                                                  00794000
OUTADDR  EQU   UT2VCHR+1                                                00795000
UT2VCYL  EQU   OUTADDR                                                  00796000
UT2VHEAD EQU   OUTADDR+1                                                00797000
UT2VREC  EQU   OUTADDR+2                                                00798000
UT1VCHR  EQU   BUILDGEN+12                                              00799000
INADDR   EQU   UT1VCHR+1                                                00800000
UT1STUFF EQU   BUILDTAB+40                                              00801000
UT1FLAG  EQU   UT1STUFF+96                                              00802000
UT2STUFF EQU   BUILDTAB+664                                             00803000
UT2DCB   EQU   UT2STUFF                                                 00804000
UT2FLAG  EQU   UT2STUFF+96                                              00805000
UT3STUFF EQU   BUILDTAB+1288                                            00806000
UT3FLAG  EQU   UT3STUFF+96                                              00807000
UT2BUFER EQU   BUILDTAB+13532                                           00808000
OUTBUFFR EQU   0                                                        00809000
OUTBLOCK EQU   OUTBUFFR                                                 00810000
OBLKPRFX EQU   OUTBLOCK+8                                               00811000
OUTABLID EQU   OBLKPRFX                                                 00812000
OUTCYL   EQU   OBLKPRFX+1                                               00813000
OUTHEAD  EQU   OBLKPRFX+2                                               00814000
OUTREC   EQU   OBLKPRFX+3                                               00815000
OUTFLR   EQU   OBLKPRFX+4                                               00816000
OBLOCK   EQU   OUTBLOCK+16                                              00817000
SCANBUF  EQU   0                                                        00818000
SCANDATA EQU   0                                                        00819000
BLK      EQU   BLOCK                                                    00820000
BYTES    EQU   BLK                                                      00821000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    00822000
@NM00024 EQU   OUTBLOCK                                                 00823000
TEMPEND  EQU   BUILDTAB+22396                                           00824000
LTRTRANI EQU   BUILDTAB+22316                                           00825000
LTRTRANO EQU   BUILDTAB+22236                                           00826000
UT1BUFER EQU   BUILDTAB+5084                                            00827000
NVERIFY  EQU   BUILDTAB+3500                                            00828000
CVERIFY  EQU   BUILDTAB+1916                                            00829000
@NM00023 EQU   UT3STUFF+624                                             00830000
UT3DDN   EQU   UT3STUFF+616                                             00831000
UT3CCWS  EQU   UT3STUFF+320                                             00832000
UT3IOB   EQU   UT3STUFF+280                                             00833000
UT3ECB   EQU   UT3STUFF+276                                             00834000
UT3JFCB  EQU   UT3STUFF+100                                             00835000
@NM00022 EQU   UT3FLAG                                                  00836000
UT3VWERR EQU   UT3FLAG                                                  00837000
UT3VOERR EQU   UT3FLAG                                                  00838000
UT3VUPDT EQU   UT3FLAG                                                  00839000
UT3DCB   EQU   UT3STUFF                                                 00840000
UT2DDN   EQU   UT2STUFF+616                                             00841000
UT2CCWS  EQU   UT2STUFF+320                                             00842000
UT2IOB   EQU   UT2STUFF+280                                             00843000
UT2ECB   EQU   UT2STUFF+276                                             00844000
UT2JFCB  EQU   UT2STUFF+100                                             00845000
@NM00021 EQU   UT2FLAG                                                  00846000
UT2VCERR EQU   UT2FLAG                                                  00847000
UT2VWERR EQU   UT2FLAG                                                  00848000
UT2VOERR EQU   UT2FLAG                                                  00849000
UT2VUPDT EQU   UT2FLAG                                                  00850000
UT1DDN   EQU   UT1STUFF+616                                             00851000
UT1CCWS  EQU   UT1STUFF+320                                             00852000
UT1IOB   EQU   UT1STUFF+280                                             00853000
UT1ECB   EQU   UT1STUFF+276                                             00854000
UT1JFCB  EQU   UT1STUFF+100                                             00855000
@NM00020 EQU   UT1FLAG                                                  00856000
UT1VWERR EQU   UT1FLAG                                                  00857000
UT1VOERR EQU   UT1FLAG                                                  00858000
UT1VUPDT EQU   UT1FLAG                                                  00859000
UT1DCB   EQU   UT1STUFF                                                 00860000
UT1VREC  EQU   INADDR+2                                                 00861000
UT1VHEAD EQU   INADDR+1                                                 00862000
UT1VCYL  EQU   INADDR                                                   00863000
UT1TABID EQU   UT1VCHR                                                  00864000
ADDRBUF2 EQU   BUILDGEN+4                                               00865000
ADDRBUF1 EQU   BUILDGEN                                                 00866000
B05REC   EQU   B05ADDR+2                                                00867000
B05HEAD  EQU   B05ADDR+1                                                00868000
B05CYL   EQU   B05ADDR                                                  00869000
B05TBLID EQU   COMB05+8                                                 00870000
B05BUFPT EQU   COMB05+4                                                 00871000
B05DCBPT EQU   COMB05                                                   00872000
B06REC   EQU   B06ADDR+2                                                00873000
B06HEAD  EQU   B06ADDR+1                                                00874000
B06CYL   EQU   B06ADDR                                                  00875000
B06TBLID EQU   COMB06+8                                                 00876000
ALTCH3   EQU   ALTPATH3+2                                               00877000
ALTCI3   EQU   ALTPATH3+1                                               00878000
ALTDS3   EQU   ALTPATH3                                                 00879000
ALTCH2   EQU   ALTPATH2+2                                               00880000
ALTCI2   EQU   ALTPATH2+1                                               00881000
ALTDS2   EQU   ALTPATH2                                                 00882000
ALTCH1   EQU   ALTPATH1+2                                               00883000
ALTCI1   EQU   ALTPATH1+1                                               00884000
ALTDS1   EQU   ALTPATH1                                                 00885000
INDEXRSG EQU   CONFGDEV+1                                               00886000
ICEBERG  EQU   USEFLAGS                                                 00887000
ITISALTP EQU   USEFLAGS                                                 00888000
USECONVR EQU   USEFLAGS                                                 00889000
SUPPUNCH EQU   USEFLAGS                                                 00890000
USEREAL  EQU   USEFLAGS                                                 00891000
USEVS    EQU   USEFLAGS                                                 00892000
USEV     EQU   USEFLAGS                                                 00893000
USESPEC  EQU   USEFLAGS                                                 00894000
RSGCUA   EQU   RSGUCB+8                                                 00895000
RSGCHAN  EQU   RSGUCB+7                                                 00896000
CPUREFNO EQU   RSGUCB+6                                                 00897000
RSGCPUID EQU   RSGUCB+1                                                 00898000
@NM00019 EQU   RSGFLAGS                                                 00899000
CISPEC   EQU   RSGFLAGS                                                 00900000
TORSG2   EQU   DSENTRY+1                                                00901000
TORSG1   EQU   DSENTRY                                                  00902000
COM2BASE EQU   COMTAB+3304                                              00903000
LRUCLOCK EQU   CREATE+11                                                00904000
VOLSER   EQU   CREATE+5                                                 00905000
VPAGES   EQU   CREATE+1                                                 00906000
@NM00018 EQU   @NM00017                                                 00907000
PRNTONLY EQU   @NM00017                                                 00908000
UPDCREAT EQU   @NM00017                                                 00909000
NEWCREAT EQU   @NM00017                                                 00910000
CMDCREAT EQU   @NM00017                                                 00911000
RW67RGHT EQU   LIBCTLS                                                  00912000
RW67LEFT EQU   LIBCTLS                                                  00913000
RW45RGHT EQU   LIBCTLS                                                  00914000
RW45LEFT EQU   LIBCTLS                                                  00915000
RW23RGHT EQU   LIBCTLS                                                  00916000
RW23LEFT EQU   LIBCTLS                                                  00917000
RW01RGHT EQU   LIBCTLS                                                  00918000
RW01LEFT EQU   LIBCTLS                                                  00919000
LOWLIB   EQU   LOWDSS+1                                                 00920000
@NM00016 EQU   LOWFLGS                                                  00921000
LOWRGHT  EQU   LOWFLGS                                                  00922000
LOWLEFT  EQU   LOWFLGS                                                  00923000
LOWRW67  EQU   LOWFLGS                                                  00924000
LOWRW45  EQU   LOWFLGS                                                  00925000
LOWRW23  EQU   LOWFLGS                                                  00926000
LOWRW01  EQU   LOWFLGS                                                  00927000
LOWSPEC  EQU   LOWFLGS                                                  00928000
ALTMSCIN EQU   CPUFLAG2                                                 00929000
@NM00015 EQU   CPUFLAG2                                                 00930000
ALTMSGBF EQU   CPUFLAG2                                                 00931000
@NM00014 EQU   CPUFLAG2                                                 00932000
CPUSPEC  EQU   CPUFLAG2                                                 00933000
CPUMSCIN EQU   CPUFLAG1                                                 00934000
OPJES3   EQU   OPSYSTYP                                                 00935000
OPVS2    EQU   OPSYSTYP                                                 00936000
OPVS1    EQU   OPSYSTYP                                                 00937000
CPUALTFL EQU   CPUFLAG1                                                 00938000
CPUTIGHT EQU   CPUFLAG1                                                 00939000
@NM00013 EQU   CPUFLAG1                                                 00940000
TOMPCPU  EQU   CPU+5                                                    00941000
CPUID    EQU   CPU                                                      00942000
CPUNUM   EQU   CPUASSOC                                                 00943000
SPNRSGNO EQU   PHYSTYPE+1                                               00944000
LGDEVICE EQU   PHYSFLGS                                                 00945000
LOGABOX1 EQU   PHYSFLGS                                                 00946000
PHYSSSID EQU   PHYSFLGS                                                 00947000
PHYSREAL EQU   PHYSFLGS                                                 00948000
PHYSICEB EQU   MERLICEB                                                 00949000
PHYSMERL EQU   MERLICEB                                                 00950000
PHYSDS2  EQU   DSPAIRS                                                  00951000
PABDDD   EQU   PABAADDD                                                 00952000
PABAA    EQU   PABAADDD                                                 00953000
PABZEROS EQU   PABAADDD                                                 00954000
PAB2D    EQU   PABREAL                                                  00955000
PAB2C    EQU   PABREAL                                                  00956000
PAB2B    EQU   PABREAL                                                  00957000
@NM00012 EQU   PABREAL                                                  00958000
PAB1D    EQU   PABREAL                                                  00959000
PAB1C    EQU   PABREAL                                                  00960000
PAB1B    EQU   PABREAL                                                  00961000
PABIMPLR EQU   PABREAL                                                  00962000
PABBERG2 EQU   PABFLAGS                                                 00963000
@NM00011 EQU   PABFLAGS                                                 00964000
PABDSMTL EQU   PABFLAGS                                                 00965000
PABIBERG EQU   PABFLAGS                                                 00966000
@NM00010 EQU   PABFLAGS                                                 00967000
PABVOVIR EQU   PABFLAGS                                                 00968000
PABEXIST EQU   PABFLAGS                                                 00969000
MAPEXIT  EQU   LIB+4                                                    00970000
LIBMAP   EQU   LIB+3                                                    00971000
LIBDSMID EQU   LIB+2                                                    00972000
LIBSIZE  EQU   LIB+1                                                    00973000
@NM00009 EQU   LIBBITS                                                  00974000
LIBSPEC  EQU   LIBBITS                                                  00975000
TODS2    EQU   RSGTODS+1                                                00976000
TODS1    EQU   RSGTODS                                                  00977000
RSGSLICE EQU   RSG+3                                                    00978000
RSGUDEL  EQU   RSG+2                                                    00979000
RSGLDEL  EQU   RSG+1                                                    00980000
@NM00008 EQU   RSG                                                      00981000
RSGABOX1 EQU   RSGABOX                                                  00982000
RSGABOX0 EQU   RSGABOX                                                  00983000
RSGSPEC  EQU   RSG                                                      00984000
SVSYSUT3 EQU   SAVEDDS+32                                               00985000
SVSYSUT2 EQU   SAVEDDS+24                                               00986000
SVSYSUT1 EQU   SAVEDDS+16                                               00987000
SVSYSPCH EQU   SAVEDDS+8                                                00988000
SVSYSIN  EQU   SAVEDDS                                                  00989000
PARMPTR  EQU   INVOKED                                                  00990000
SAVE14   EQU   GENIO+12                                                 00991000
EXLST    EQU   GENIO+8                                                  00992000
@NM00007 EQU   DCBPTR+1                                                 00993000
DCBFLAG  EQU   DCBPTR                                                   00994000
OPENLIST EQU   GENIO                                                    00995000
@NM00006 EQU   MESSAGES+19                                              00996000
PRNTBUF2 EQU   SPECLMSG                                                 00997000
NEEDEOJ  EQU   SPECLMSG                                                 00998000
ENDPHASE EQU   SPECLMSG                                                 00999000
@NM00005 EQU   SPECLMSG                                                 01000000
PRNTCARD EQU   SPECLMSG                                                 01001000
@NM00004 EQU   SPECLMSG                                                 01002000
NEED102  EQU   SPECLMSG                                                 01003000
NEED101  EQU   SPECLMSG                                                 01004000
PRINTRC  EQU   MESSAGES+16                                              01005000
TERM     EQU   MESSAGES+12                                              01006000
WARN     EQU   MESSAGES+8                                               01007000
WARNING  EQU   MESSAGES+4                                               01008000
OUTBUF2  EQU   PRINTER+225                                              01009000
OUTBUF   EQU   PRINTER+104                                              01010000
LINECT   EQU   PRINTER+102                                              01011000
LINECTR  EQU   PRINTER+100                                              01012000
PAGENO   EQU   PRINTER+96                                               01013000
DCBPRINT EQU   PRINTER                                                  01014000
@NM00003 EQU   READER+206                                               01015000
SCANLEN  EQU   READER+204                                               01016000
SVEODAD  EQU   READER+200                                               01017000
SVSYNAD2 EQU   READER+196                                               01018000
SAVENCOL EQU   READER+192                                               01019000
SAVESCOL EQU   READER+188                                               01020000
INBUF    EQU   READER+100                                               01021000
SSELECT  EQU   PCHBF                                                    01022000
@NM00002 EQU   READER+97                                                01023000
@NM00001 EQU   READFLAG                                                 01024000
LASTPARM EQU   READFLAG                                                 01025000
ENDSCAN  EQU   READFLAG                                                 01026000
PARMBIT  EQU   READFLAG                                                 01027000
KEYBIT   EQU   READFLAG                                                 01028000
READTERM EQU   READFLAG                                                 01029000
READDCB  EQU   READER                                                   01030000
PATCH    EQU   COMTAB                                                   01031000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01032000
@ENDDATA EQU   *                                                        01033000
         END   ICGDSB10,(C'PLS1225',0603,76337)                         01034000
