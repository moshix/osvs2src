         TITLE 'ICGDSB11 MSC TABLE CREATE, VOLUME INVENTORY TABLE      *00001000
                        '                                               00002000
ICGDSB11 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'ICGDSB11  76.337'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         L     @00,@SIZDATD                                        0001 00014000
         GETMAIN  R,LV=(0)                                              00015000
         LR    @11,@01                                             0001 00016000
         USING @DATD,@11                                           0001 00017000
         ST    @13,@SA00001+4                                      0001 00018000
         LM    @00,@01,20(@13)                                     0001 00019000
         ST    @11,8(,@13)                                         0001 00020000
         LR    @13,@11                                             0001 00021000
         XC    @ZTEMPS(@ZLEN),@ZTEMPS                                   00022000
*                                                                  0017 00023000
*/********************************************************** @Y30LB14*/ 00024000
*/* INITIALIZATION                                           @Y30LB14*/ 00025000
*/********************************************************** @Y30LB14*/ 00026000
*                                                                  0017 00027000
*   OUTCYL(1)=UT2VCYL;              /* STARTING CYLINDER     @YD00113*/ 00028000
         L     @10,BUILDPTR(,R4)                                   0017 00029000
         LH    @05,@CH00484                                        0017 00030000
         ALR   @05,@10                                             0017 00031000
         MVC   OUTCYL(1,@05),UT2VCYL(@10)                          0017 00032000
*   OUTHEAD(1)=UT2VHEAD;            /* STARTING HEAD         @YD00113*/ 00033000
         MVC   OUTHEAD(1,@05),UT2VHEAD(@10)                        0018 00034000
*   OUTREC(1)=UT2VREC;              /* STARTING RECORD       @YD00113*/ 00035000
         MVC   OUTREC(1,@05),UT2VREC(@10)                          0019 00036000
*   B05DCBPT=ADDR(UT1DCB);          /* SYSUT1 DCB            @YD00113*/ 00037000
         LA    @05,UT1DCB(,@10)                                    0020 00038000
         ST    @05,B05DCBPT(,@10)                                  0020 00039000
*   B06DCBPT=ADDR(UT2DCB);          /* SYSUT2 DCB            @YD00113*/ 00040000
         LA    @05,UT2DCB(,@10)                                    0021 00041000
         ST    @05,B06DCBPT(,@10)                                  0021 00042000
*   B06BUFPT=ADDR(UT2BUFER);        /* WRITE BUFFER ADDR     @YD00113*/ 00043000
         LR    @05,@10                                             0022 00044000
         AL    @05,@CF00484                                        0022 00045000
         ST    @05,B06BUFPT(,@10)                                  0022 00046000
*   B05BUFPT=ADDR(UT1BUFER);        /* READ BUFFER ADDR      @YD00113*/ 00047000
         LR    @05,@10                                             0023 00048000
         AL    @05,@CF00486                                        0023 00049000
         ST    @05,B05BUFPT(,@10)                                  0023 00050000
*   STOPSCAN='0'B;                  /* TERMINATING ERROR     @YD00113*/ 00051000
         NI    STOPSCAN,B'01111111'                                0024 00052000
*   MAX=57;                         /* SET FOR 57 TRACKS     @YD00113*/ 00053000
*                                                                  0025 00054000
         LA    MAX,57                                              0025 00055000
*   /*****************************************************************/ 00056000
*   /*                                                               */ 00057000
*   /* ***********************************************       @Y30LB14*/ 00058000
*   /* IF A COMPLETELY NEW LIBRARY IS TO BE BUILT            @Y30LB14*/ 00059000
*   /* FROM SCRATCH, THEN 'EMPTYLIB' IS CALLED.              @Y30LB14*/ 00060000
*   /* IF A LIBRARY IS BEING UPDATED THEN THE CON-           @Y30LB14*/ 00061000
*   /* TENTS OF THE OLD LIBRARY IS COPIED INTO THE           @Y30LB14*/ 00062000
*   /* NEW LIBRARY.                                          @Y30LB14*/ 00063000
*   /* ***********************************************       @Y30LB14*/ 00064000
*   /*                                                               */ 00065000
*   /*****************************************************************/ 00066000
*                                                                  0026 00067000
*   IF NEWCREAT='1'B                /*                       @Y30LB14*/ 00068000
*     THEN                          /*                       @Y30LB14*/ 00069000
         TM    NEWCREAT(R4),B'01000000'                            0026 00070000
         BNO   @RF00026                                            0026 00071000
*     CALL EMPTYLIB;                /* COMPLETELY NEW LIB    @YD00113*/ 00072000
         BAL   @14,EMPTYLIB                                        0027 00073000
*   IF UPDCREAT='1'B                /*                       @Y30LB14*/ 00074000
*     THEN                          /*                       @Y30LB14*/ 00075000
@RF00026 TM    UPDCREAT(R4),B'00100000'                            0028 00076000
         BNO   @RF00028                                            0028 00077000
*     CALL COPYLIB;                 /* COPY CURRENT LIB      @YD00113   00078000
*                                                            @Y30LB14*/ 00079000
*                                                                  0029 00080000
         BAL   @14,COPYLIB                                         0029 00081000
*   /*****************************************************************/ 00082000
*   /*                                                               */ 00083000
*   /* ***********************************************       @Y30LB14*/ 00084000
*   /* RETURN TO THE BUILD MODULE - ICGDSBLD                 @Y30LB14*/ 00085000
*   /* ***********************************************       @Y30LB14*/ 00086000
*   /*                                                               */ 00087000
*   /*****************************************************************/ 00088000
*                                                                  0030 00089000
*   RETURN;                         /* RETURN TO BUILD       @Y30LB14*/ 00090000
@EL00001 L     @13,4(,@13)                                         0030 00091000
@EF00001 L     @00,@SIZDATD                                        0030 00092000
         LR    @01,@11                                             0030 00093000
         FREEMAIN R,LV=(0),A=(1)                                        00094000
@ER00001 LM    @14,@12,12(@13)                                     0030 00095000
         BR    @14                                                 0030 00096000
*                                                                  0031 00097000
*/********************************************************** @Y30LB14*/ 00098000
*/*                                                          @YD00113*/ 00099000
*/* PROCEDURE NAME - COPYLIB                                 @YD00113*/ 00100000
*/*                                                          @YD00113*/ 00101000
*/* FUNCTION - THIS PROCEDURE READS THE CURRENT VOLUME       @YD00113*/ 00102000
*/*            TABLE ONE TRACK AT A TIME AND COPIES THE DATA @YD00113*/ 00103000
*/*            PORTION TO THE OUTPUT BUFFER.  THE CONTROL    @YD00113*/ 00104000
*/*            PORTION IS ALSO COPIED - THE POINTER TO THE   @YD00113*/ 00105000
*/*            NEXT OVERFLOW TRACK IS RECALCULATED.          @YD00113*/ 00106000
*/*            THE PREFIX PORTION IS RECALCULATED IN THE     @YD00113*/ 00107000
*/*            SUB-PROCEDURE 'WRITETRK'.                     @YD00113*/ 00108000
*/*                                                          @YD00113*/ 00109000
*/********************************************************** @Y30LB14*/ 00110000
*                                                                  0031 00111000
*COPYLIB:                                                          0031 00112000
*   PROCEDURE;                      /*                       @Y30LB14*/ 00113000
COPYLIB  STM   @14,@12,@SA00002                                    0031 00114000
*   DO I=1 TO MAX;                  /*                       @Y30LB14*/ 00115000
*                                                                  0032 00116000
         LA    I,1                                                 0032 00117000
         B     @DE00032                                            0032 00118000
@DL00032 DS    0H                                                  0033 00119000
*     /***************************************************************/ 00120000
*     /*                                                             */ 00121000
*     /* *********************************************       @Y30LB14*/ 00122000
*     /* READ IN A COMPLETE TRACK FROM THE OLD               @Y30LB14*/ 00123000
*     /* LIBRARY AND CHECK IF IT IS A VOLUME                 @Y30LB14*/ 00124000
*     /* INVENTORY LIST TRACK.                               @Y30LB14*/ 00125000
*     /* *********************************************       @Y30LB14*/ 00126000
*     /*                                                             */ 00127000
*     /***************************************************************/ 00128000
*                                                                  0033 00129000
*     B05ADDR=INADDR;               /* SET READ ADDRESS      @Y30LB14*/ 00130000
         L     @10,BUILDPTR(,R4)                                   0033 00131000
         MVC   B05ADDR(3,@10),INADDR(@10)                          0033 00132000
*     GEN(LINK EP=ICGDSB05);        /* READ IN A TRACK       @Y30LB14*/ 00133000
         LINK EP=ICGDSB05                                               00134000
*     CALL IDCHECK;                 /* CHECK TRACK ID        @Y30LB14*/ 00135000
         BAL   @14,IDCHECK                                         0035 00136000
*     IF STOPSCAN='1'B              /*                       @Y30LB14*/ 00137000
*       THEN                        /*                       @Y30LB14*/ 00138000
         TM    STOPSCAN,B'10000000'                                0036 00139000
         BO    @RT00036                                            0036 00140000
*       RETURN;                     /* RETURN TO CALLER      @Y30LB14*/ 00141000
*                                                                  0037 00142000
*     /***************************************************************/ 00143000
*     /*                                                             */ 00144000
*     /* *********************************************       @Y30LB14*/ 00145000
*     /* SET TO NEXT TRACK OF OLD TABLE                      @Y30LB14*/ 00146000
*     /* *********************************************       @Y30LB14*/ 00147000
*     /*                                                             */ 00148000
*     /***************************************************************/ 00149000
*                                                                  0038 00150000
*     UT1VHEAD=UT1VHEAD+1;          /* INCREMENT CNT +1      @Y30LB14*/ 00151000
         L     @10,BUILDPTR(,R4)                                   0038 00152000
         LA    @02,1                                               0038 00153000
         SLR   @15,@15                                             0038 00154000
         IC    @15,UT1VHEAD(,@10)                                  0038 00155000
         ALR   @15,@02                                             0038 00156000
         STC   @15,UT1VHEAD(,@10)                                  0038 00157000
*     IF UT1VHEAD>18                /* ON NEXT CYLINDER      @Y30LB14*/ 00158000
*       THEN                        /*                       @Y30LB14*/ 00159000
         CLI   UT1VHEAD(@10),18                                    0039 00160000
         BNH   @RF00039                                            0039 00161000
*       DO;                         /*                       @Y30LB14*/ 00162000
*         UT1VHEAD=0;               /* SET TO TRACK 0        @Y30LB14*/ 00163000
         MVI   UT1VHEAD(@10),X'00'                                 0041 00164000
*         UT1VCYL=UT1VCYL+1;        /* INCR TO NEXT CYL      @Y30LB14*/ 00165000
         MVC   @ZT00003+3(1),UT1VCYL(@10)                          0042 00166000
         AL    @02,@ZT00003                                        0042 00167000
         STC   @02,UT1VCYL(,@10)                                   0042 00168000
*       END;                        /*                       @Y30LB14*/ 00169000
*                                                                  0043 00170000
*     /***************************************************************/ 00171000
*     /*                                                             */ 00172000
*     /* *********************************************       @Y30LB14*/ 00173000
*     /* COPY INFORMATION FROM INPUT BUFFER TO OUTPUT        @Y30LB14*/ 00174000
*     /* BUFFER                                              @Y30LB14*/ 00175000
*     /* *********************************************       @Y30LB14*/ 00176000
*     /*                                                             */ 00177000
*     /***************************************************************/ 00178000
*                                                                  0044 00179000
*     DO J=1 TO 32;                 /*                       @Y30LB14*/ 00180000
@RF00039 LA    J,1                                                 0044 00181000
@DL00044 DS    0H                                                  0045 00182000
*       OBLKPRFX(J)=INBLKPFX(J);    /* MOVE INPUT TRK        @Y30LB14*/ 00183000
         LR    @10,J                                               0045 00184000
         MH    @10,@CH00485                                        0045 00185000
         L     @15,BUILDPTR(,R4)                                   0045 00186000
         LH    @14,@CH00484                                        0045 00187000
         ALR   @14,@15                                             0045 00188000
         ST    @10,@TF00001                                        0045 00189000
         ALR   @10,@14                                             0045 00190000
         AL    @10,@CF00495                                        0045 00191000
         LR    @09,J                                               0045 00192000
         MH    @09,@CH00487                                        0045 00193000
         LH    @08,@CH00486                                        0045 00194000
         ALR   @08,@15                                             0045 00195000
         ST    @09,@TF00002                                        0045 00196000
         ALR   @09,@08                                             0045 00197000
         AL    @09,@CF00495                                        0045 00198000
         MVC   OBLKPRFX-8(8,@10),INBLKPFX(@09)                     0045 00199000
*       OBLOCK(J)=IBLOCK(J);        /*                       @Y30LB14   00200000
*                                                            @Y30LB14*/ 00201000
*                                                                  0046 00202000
         LR    @10,@14                                             0046 00203000
         AL    @10,@TF00001                                        0046 00204000
         AL    @10,@CF00496                                        0046 00205000
         AL    @08,@TF00002                                        0046 00206000
         AL    @08,@CF00496                                        0046 00207000
         MVC   OBLOCK-16(256,@10),IBLOCK-8(@08)                    0046 00208000
*       /*************************************************************/ 00209000
*       /*                                                           */ 00210000
*       /* *******************************************       @Y30LB14*/ 00211000
*       /* CHECK IF THIS BLOCK IS AN OVERFLOW BLOCK.         @Y30LB14*/ 00212000
*       /* IF IT IS, THEN PUT IN POINTER TO NEXT             @Y30LB14*/ 00213000
*       /* TRACK IN THE NEW TABLE.                           @Y30LB14*/ 00214000
*       /* *******************************************       @Y30LB14*/ 00215000
*       /*                                                           */ 00216000
*       /*************************************************************/ 00217000
*                                                                  0047 00218000
*       IF OVERFLOW(J)='1'B         /* OVERFLOW BLOCK?       @Y30LB14*/ 00219000
*         THEN                      /*                       @Y30LB14*/ 00220000
         LR    @10,@14                                             0047 00221000
         AL    @10,@TF00001                                        0047 00222000
         AL    @10,@CF00496                                        0047 00223000
         TM    OVERFLOW-16(@10),B'00000001'                        0047 00224000
         BNO   @RF00047                                            0047 00225000
*         DO;                       /*                       @Y30LB14*/ 00226000
*           ORECORD(J)=1;           /* SET FOR RECORD 1      @Y30LB14*/ 00227000
         LA    @10,1                                               0049 00228000
         L     @01,@TF00001                                        0049 00229000
         AL    @01,@CF00497                                        0049 00230000
         STC   @10,ORECORD-23(@01,@14)                             0049 00231000
*           OHEAD(J)=UT2VHEAD+1;    /*                       @Y30LB14*/ 00232000
         SLR   @09,@09                                             0050 00233000
         IC    @09,UT2VHEAD(,@15)                                  0050 00234000
         ALR   @09,@10                                             0050 00235000
         L     @08,@TF00001                                        0050 00236000
         AL    @08,@CF00498                                        0050 00237000
         STC   @09,OHEAD-22(@08,@14)                               0050 00238000
*           IF OHEAD(J)>18          /*                       @Y30LB14*/ 00239000
*             THEN                  /*                       @Y30LB14*/ 00240000
         CH    @09,@CH00454                                        0051 00241000
         BNH   @RF00051                                            0051 00242000
*             DO;                   /*                       @Y30LB14*/ 00243000
*               OHEAD(J)=0;         /*                       @Y30LB14*/ 00244000
         SLR   @09,@09                                             0053 00245000
         L     @08,@TF00001                                        0053 00246000
         AL    @08,@CF00498                                        0053 00247000
         STC   @09,OHEAD-22(@08,@14)                               0053 00248000
*               OCYL(J)=UT2VCYL+1;  /*                       @Y30LB14*/ 00249000
         MVC   @ZT00003+3(1),UT2VCYL(@15)                          0054 00250000
         AL    @10,@ZT00003                                        0054 00251000
         L     @15,@TF00001                                        0054 00252000
         AL    @14,@CF00499                                        0054 00253000
         STC   @10,OCYL-21(@15,@14)                                0054 00254000
*             END;                  /*                       @Y30LB14*/ 00255000
*           ELSE                    /*                       @Y30LB14*/ 00256000
*             OCYL(J)=UT2VCYL;      /*                       @Y30LB14*/ 00257000
         B     @RC00051                                            0056 00258000
@RF00051 LR    @10,J                                               0056 00259000
         MH    @10,@CH00485                                        0056 00260000
         L     @15,BUILDPTR(,R4)                                   0056 00261000
         SLR   @14,@14                                             0056 00262000
         IC    @14,UT2VCYL(,@15)                                   0056 00263000
         AL    @15,@CF00500                                        0056 00264000
         STC   @14,OCYL(@10,@15)                                   0056 00265000
*         END;                      /*                       @Y30LB14*/ 00266000
@RC00051 DS    0H                                                  0058 00267000
*     END;                          /* END DO J LOOP         @Y30LB14*/ 00268000
*                                                                  0058 00269000
@RF00047 AH    J,@CH00042                                          0058 00270000
         CH    J,@CH00309                                          0058 00271000
         BNH   @DL00044                                            0058 00272000
*     /***************************************************************/ 00273000
*     /*                                                             */ 00274000
*     /* *********************************************       @Y30LB14*/ 00275000
*     /* IF IT IS THE LAST TRACK IN THE LIBRARY, THEN        @Y30LB14*/ 00276000
*     /* PUT OUT ZEROS IN THE POINTER TO THE NEXT            @Y30LB14*/ 00277000
*     /* TRACK.                                              @Y30LB14*/ 00278000
*     /* *********************************************       @Y30LB14*/ 00279000
*     /*                                                             */ 00280000
*     /***************************************************************/ 00281000
*                                                                  0059 00282000
*     IF I=MAX                      /* PUT OUT LAST TRACK    @Y30LB14*/ 00283000
*       THEN                        /* IN THE TABLE          @Y30LB14*/ 00284000
         CR    I,MAX                                               0059 00285000
         BNE   @RF00059                                            0059 00286000
*       DO J=1 TO 32;               /*                       @Y30LB14*/ 00287000
         LA    J,1                                                 0060 00288000
@DL00060 DS    0H                                                  0061 00289000
*         OHEAD(J)=0;               /*                       @Y30LB14*/ 00290000
         SLR   @10,@10                                             0061 00291000
         LR    @15,J                                               0061 00292000
         MH    @15,@CH00485                                        0061 00293000
         LH    @14,@CH00484                                        0061 00294000
         AL    @14,BUILDPTR(,R4)                                   0061 00295000
         LA    @01,0(@15,@14)                                      0061 00296000
         AL    @01,@CF00498                                        0061 00297000
         STC   @10,OHEAD-22(,@01)                                  0061 00298000
*         OCYL(J)=0;                /*                       @Y30LB14*/ 00299000
         LA    @01,0(@15,@14)                                      0062 00300000
         AL    @01,@CF00499                                        0062 00301000
         STC   @10,OCYL-21(,@01)                                   0062 00302000
*         ORECORD(J)=0;             /*                       @Y30LB14*/ 00303000
         AL    @14,@CF00497                                        0063 00304000
         STC   @10,ORECORD-23(@15,@14)                             0063 00305000
*       END;                        /*                       @Y30LB14*/ 00306000
*                                                                  0064 00307000
         AH    J,@CH00042                                          0064 00308000
         CH    J,@CH00309                                          0064 00309000
         BNH   @DL00060                                            0064 00310000
*     /***************************************************************/ 00311000
*     /*                                                             */ 00312000
*     /* *********************************************       @Y30LB14*/ 00313000
*     /* PUT IN THE TRACK AND CYLINDER ADDRESS IN THE        @Y30LB14*/ 00314000
*     /* PREFIX OF THE BLOCK IN ALL 32 BLOCKS OF THE         @Y30LB14*/ 00315000
*     /* TRACK.                                              @Y30LB14*/ 00316000
*     /* *********************************************       @Y30LB14*/ 00317000
*     /*                                                             */ 00318000
*     /***************************************************************/ 00319000
*                                                                  0065 00320000
*     DO J=1 TO 32;                 /* SET ADDR FOR ACTUAL   @Y30LB14*/ 00321000
@RF00059 LA    J,1                                                 0065 00322000
@DL00065 DS    0H                                                  0066 00323000
*       OUTREC(J)=J;                /* VCHR FOR EACH BLOCK   @Y30LB14*/ 00324000
         LR    @10,J                                               0066 00325000
         MH    @10,@CH00485                                        0066 00326000
         L     @15,BUILDPTR(,R4)                                   0066 00327000
         LH    @14,@CH00484                                        0066 00328000
         ALR   @14,@15                                             0066 00329000
         LA    @01,0(@10,@14)                                      0066 00330000
         AL    @01,@CF00501                                        0066 00331000
         STC   J,OUTREC-11(,@01)                                   0066 00332000
*       OUTHEAD(J)=UT2VHEAD;        /* IN THIS TRK           @Y30LB14*/ 00333000
         SLR   @09,@09                                             0067 00334000
         IC    @09,UT2VHEAD(,@15)                                  0067 00335000
         LA    @08,0(@10,@14)                                      0067 00336000
         AL    @08,@CF00502                                        0067 00337000
         STC   @09,OUTHEAD-10(,@08)                                0067 00338000
*       OUTCYL(J)=UT2VCYL;          /*                       @Y30LB14*/ 00339000
         SLR   @09,@09                                             0068 00340000
         IC    @09,UT2VCYL(,@15)                                   0068 00341000
         AL    @14,@CF00503                                        0068 00342000
         STC   @09,OUTCYL-9(@10,@14)                               0068 00343000
*     END;                          /*                       @Y30LB14*/ 00344000
*                                                                  0069 00345000
         AH    J,@CH00042                                          0069 00346000
         CH    J,@CH00309                                          0069 00347000
         BNH   @DL00065                                            0069 00348000
*     /***************************************************************/ 00349000
*     /*                                                             */ 00350000
*     /* *********************************************       @Y30LB14*/ 00351000
*     /* WRITE OUT THE TRACK AND UPDATE THE TRACK AND        @Y30LB14*/ 00352000
*     /* CYLINDER TO THE NEXT AVAILABLE.                     @Y30LB14*/ 00353000
*     /* *********************************************       @Y30LB14*/ 00354000
*     /*                                                             */ 00355000
*     /***************************************************************/ 00356000
*                                                                  0070 00357000
*     CALL WRITE;                   /* WRITE OUT THE TRACK   @Y30LB14*/ 00358000
         BAL   @14,WRITE                                           0070 00359000
*   END;                            /* END DO I LOOP         @Y30LB14*/ 00360000
         AH    I,@CH00042                                          0071 00361000
@DE00032 CR    I,MAX                                               0071 00362000
         BNH   @DL00032                                            0071 00363000
*   RETURN;                         /* RETURN TO CALLER      @Y30LB14*/ 00364000
@EL00002 DS    0H                                                  0072 00365000
@EF00002 DS    0H                                                  0072 00366000
@ER00002 LM    @14,@12,@SA00002                                    0072 00367000
         BR    @14                                                 0072 00368000
*   END COPYLIB;                    /*                       @Y30LB14*/ 00369000
         B     @EL00002                                            0073 00370000
*                                                                  0074 00371000
*/********************************************************** @Y30LB14*/ 00372000
*/*                                                          @YD00113*/ 00373000
*/* PROCEDURE NAME - EMPTYLIB                                @YD00113*/ 00374000
*/*                                                          @YD00113*/ 00375000
*/* FUNCTION - THIS PROCEDURE FIRST INITIALIZES 'BLOCK' IN   @YD00113*/ 00376000
*/*            LOCAL STORAGE FOR THIS MODULE TO INDICATE     @YD00113*/ 00377000
*/*            A COMPLETELY UNUSED VOLUME INVENTORY RECORD.  @YD00113*/ 00378000
*/*            THEN, THIS BLOCK IMAGE IS COPIED 442 TIMES    @YD00113*/ 00379000
*/*            FOR EACH HASH AREA TO THE OUTPUT BUFFER.      @YD00113*/ 00380000
*/*            DURING THIS COPY, THE HASH AREA FLAGS ARE     @YD00113*/ 00381000
*/*            MODIFIED TO INDICATE WHICH HASH AREA IS       @YD00113*/ 00382000
*/*            BEING CONSTRUCTED.  FINALLY THE HASH AREA     @YD00113*/ 00383000
*/*            FLAGS ARE SET OFF AND THE OVERFLOW AREA FLAG  @YD00113*/ 00384000
*/*            IS SET ON AND THE IMAGE IS COPIED AN          @YD00113*/ 00385000
*/*            ADDITIONAL 498 TIMES TO BUILD THE OVERFLOW    @YD00113*/ 00386000
*/*            BLOCKS.  THE OVERFLOW BLOCKS CONTAIN A CHR    @YD00113*/ 00387000
*/*            POINTER TO THE NEXT OVERFLOW TRACK            @YD00113*/ 00388000
*/*                                                          @YD00113*/ 00389000
*/********************************************************** @Y30LB14*/ 00390000
*                                                                  0074 00391000
*EMPTYLIB:                                                         0074 00392000
*   PROCEDURE;                      /*                       @Y30LB14*/ 00393000
*                                                                  0074 00394000
EMPTYLIB STM   @14,@12,@SA00003                                    0074 00395000
*   /*****************************************************************/ 00396000
*   /*                                                               */ 00397000
*   /* ***********************************************       @YD00113*/ 00398000
*   /* BUILD THE IMAGE OF A VOLUME INVENTORY RECORD          @YD00113*/ 00399000
*   /* IN 'BLOCK'                                            @YD00113*/ 00400000
*   /* ***********************************************       @YD00113*/ 00401000
*   /*                                                               */ 00402000
*   /*****************************************************************/ 00403000
*                                                                  0075 00404000
*   LTB='0'B;                       /* LAST TABLE BLOCK      @Y30LB14*/ 00405000
*   LAB='1'B;                       /* LAST ACTIVE BLOCK     @Y30LB14*/ 00406000
*   EOTB='0'B;                      /* END OF TRACK BLOCK    @Y30LB14*/ 00407000
*   LTIT='1'B;                      /* LAST TRACK IN TABLE   @Y30LB14*/ 00408000
*   BLKUSE='0'B;                    /* BLOCK USE BIT         @Y30LB14*/ 00409000
         OI    LAB,B'01010000'                                     0079 00410000
         NI    LTB,B'01010111'                                     0079 00411000
*   HASH='00'B;                     /* HASH AREA IDENTIFIER  @Y30LB14*/ 00412000
         NI    HASH,B'11111001'                                    0080 00413000
*   VERFLOW='0'B;                   /* OVERFLOW INDICATOR    @YD00113*/ 00414000
         NI    VERFLOW,B'11111110'                                 0081 00415000
*   ENTRYLEN=12;                    /* LENGTH OF EACH ENTRY  @YD00113*/ 00416000
         MVI   ENTRYLEN,X'0C'                                      0082 00417000
*   MAXENTPB=20;                    /* MAX ENTRIES PER BLOCK @YD00113*/ 00418000
         MVI   MAXENTPB,X'14'                                      0083 00419000
*   USECNT=0;                       /* USE COUNT             @Y30LB14*/ 00420000
         MVI   USECNT,X'00'                                        0084 00421000
*   ZCHR=''B;                       /* VOL, CHR SET TO ZERO  @YD00113*/ 00422000
         XC    ZCHR(4),ZCHR                                        0085 00423000
*   REMAINDR=''B;                   /* ZERO ENTRY PORTION    @YD00113*/ 00424000
*                                                                  0086 00425000
         XC    REMAINDR(248),REMAINDR                              0086 00426000
*   /*****************************************************************/ 00427000
*   /*                                                               */ 00428000
*   /* ***********************************************       @YD00113*/ 00429000
*   /* INITIALIZE THE THREE HASH AREAS (442 BLOCKS           @YD00113*/ 00430000
*   /* EACH)                                                 @YD00113*/ 00431000
*   /* ***********************************************       @YD00113*/ 00432000
*   /*                                                               */ 00433000
*   /*****************************************************************/ 00434000
*                                                                  0087 00435000
*   K=0;                            /*                       @Y30LB14*/ 00436000
         SLR   K,K                                                 0087 00437000
*   DO I=1 TO 3;                    /* DO FOR THE THREE HASH AREAS 0088 00438000
*                                                            @Y30LB14*/ 00439000
*                                                                  0088 00440000
         LA    I,1                                                 0088 00441000
@DL00088 DS    0H                                                  0089 00442000
*     /***************************************************************/ 00443000
*     /*                                                             */ 00444000
*     /* *********************************************       @Y30LB14*/ 00445000
*     /* ADDING 2 THE THE FLAGS FIELD INCREMENTS THE         @Y30LB14*/ 00446000
*     /* HASH AREA INDICATOR BY 1                            @Y30LB14*/ 00447000
*     /* *********************************************       @Y30LB14*/ 00448000
*     /*                                                             */ 00449000
*     /***************************************************************/ 00450000
*                                                                  0089 00451000
*     FLAGS=FLAGS+2;                /* SET PROPER HASH AREA  @Y30LB14*/ 00452000
         LA    @10,2                                               0089 00453000
         MVC   @ZT00003+3(1),FLAGS                                 0089 00454000
         AL    @10,@ZT00003                                        0089 00455000
         STC   @10,FLAGS                                           0089 00456000
*     DO J=1 TO 442;                /* FOR EACH BLOCK IN AREA      0090 00457000
*                                                            @YD00113*/ 00458000
         LA    J,1                                                 0090 00459000
@DL00090 DS    0H                                                  0091 00460000
*       K=K+1;                      /*                       @Y30LB14*/ 00461000
         AH    K,@CH00042                                          0091 00462000
*       OBLOCK(K)=BLOCK;            /* BLOCK TO UT2BUFER     @YD00113*/ 00463000
         LR    @10,K                                               0092 00464000
         MH    @10,@CH00485                                        0092 00465000
         L     @01,BUILDPTR(,R4)                                   0092 00466000
         ALR   @01,@10                                             0092 00467000
         AL    @01,@CF00500                                        0092 00468000
         MVC   OBLOCK(256,@01),BLOCK                               0092 00469000
*       IF K=32                     /* TRACK IS FULL         @Y30LB14*/ 00470000
*         THEN                      /*                       @Y30LB14*/ 00471000
         CH    K,@CH00309                                          0093 00472000
         BNE   @RF00093                                            0093 00473000
*         DO;                       /*                       @Y30LB14*/ 00474000
*           CALL WRITETRK;          /* WRITE OUT THE TRACK   @Y30LB14*/ 00475000
         BAL   @14,WRITETRK                                        0095 00476000
*           K=0;                    /* SET FOR NEXT TRACK    @YD00113*/ 00477000
         SLR   K,K                                                 0096 00478000
*         END;                      /*                       @Y30LB14*/ 00479000
*     END;                          /*                       @Y30LB14*/ 00480000
@RF00093 AH    J,@CH00042                                          0098 00481000
         CH    J,@CH00463                                          0098 00482000
         BNH   @DL00090                                            0098 00483000
*   END;                            /*                       @Y30LB14*/ 00484000
*                                                                  0099 00485000
         AH    I,@CH00042                                          0099 00486000
         CH    I,@CH00048                                          0099 00487000
         BNH   @DL00088                                            0099 00488000
*   /*****************************************************************/ 00489000
*   /*                                                               */ 00490000
*   /* ***********************************************       @YD00113*/ 00491000
*   /* MODIFY THE IMAGE IN 'BLOCK' TO INDICATE DATA          @YD00113*/ 00492000
*   /* APPROPRIATE TO OVERFLOW BLOCKS.                       @YD00113*/ 00493000
*   /* ***********************************************       @YD00113*/ 00494000
*   /*                                                               */ 00495000
*   /*****************************************************************/ 00496000
*                                                                  0100 00497000
*   HASH='00'B;                     /* HASH INDICATORS OFF   @YD00113*/ 00498000
         NI    HASH,B'11111001'                                    0100 00499000
*   VERFLOW='1'B;                   /* TURN ON OVERFLOW BIT  @Y30LB14*/ 00500000
*   LTIT='0'B;                      /* LAST TRK IN TABLE OFF @YD00113*/ 00501000
         OI    VERFLOW,B'00000001'                                 0102 00502000
         NI    LTIT,B'11101111'                                    0102 00503000
*   ZERO=0;                         /* SET TO ZERO           @Y30LB14*/ 00504000
         MVI   ZERO,X'00'                                          0103 00505000
*   CYLINDER=UT2VCYL;               /* SET CURRENT CYLINDER  @Y30LB14*/ 00506000
         L     @10,BUILDPTR(,R4)                                   0104 00507000
         MVC   CYLINDER(1),UT2VCYL(@10)                            0104 00508000
*   CALL SETTRACK;                  /* SET TO NEXT TRACK     @Y30LB14*/ 00509000
         BAL   @14,SETTRACK                                        0105 00510000
*   RECORD=1;                       /* FIRST RECORD ON TRK   @Y30LB14*/ 00511000
*                                                                  0106 00512000
         MVI   RECORD,X'01'                                        0106 00513000
*   /*****************************************************************/ 00514000
*   /*                                                               */ 00515000
*   /* ***********************************************       @Y30LB14*/ 00516000
*   /* CAUTION - - THE SIZE OF THE OVERFLOW AREA IS          @Y30LB14*/ 00517000
*   /* 498 BLOCKS. THIS CAUSES THE TABLE TO END ON A         @Y30LB14*/ 00518000
*   /* TRACK BOUNDRY. IF THE SIZE SHOULD BE CHANGED,         @Y30LB14*/ 00519000
*   /* SUCH THAT IT DOES NOT END ON A TRACK BOUNDRY,         @Y30LB14*/ 00520000
*   /* THE THE FOLLOWING CODE WILL NOT WORK.                 @Y30LB14*/ 00521000
*   /* ***********************************************       @Y30LB14*/ 00522000
*   /*                                                               */ 00523000
*   /*****************************************************************/ 00524000
*                                                                  0107 00525000
*   DO J=1 TO 498;                  /* FOR THE OVERFLOW AREA @YD00113*/ 00526000
         LA    J,1                                                 0107 00527000
@DL00107 DS    0H                                                  0108 00528000
*     K=K+1;                        /* INCREMENT TO NEXT BLK @YD00113*/ 00529000
         LA    @10,1                                               0108 00530000
         ALR   K,@10                                               0108 00531000
*     OBLOCK(K)=BLOCK;              /* PUT BLOCK IN UT2BUFER @YD00113*/ 00532000
         LR    @05,K                                               0109 00533000
         MH    @05,@CH00485                                        0109 00534000
         LH    @15,@CH00484                                        0109 00535000
         AL    @15,BUILDPTR(,R4)                                   0109 00536000
         ALR   @05,@15                                             0109 00537000
         AL    @05,@CF00496                                        0109 00538000
         MVC   OBLOCK-16(256,@05),BLOCK                            0109 00539000
*     IF K=32                       /* TRACK FULL            @Y30LB14*/ 00540000
*       THEN                        /*                       @Y30LB14*/ 00541000
         CH    K,@CH00309                                          0110 00542000
         BNE   @RF00110                                            0110 00543000
*       DO;                         /*                       @Y30LB14*/ 00544000
*         OEOTB(32)='1'B;           /* SET END OF TRK BLOCK  @YD00113*/ 00545000
         AL    @15,@CF00488                                        0112 00546000
         OI    OEOTB(@15),B'00100000'                              0112 00547000
*         IF J=498                  /* LAST TRACK IN TABLE   @YD00113*/ 00548000
*           THEN                    /*                       @Y30LB14*/ 00549000
         CH    J,@CH00466                                          0113 00550000
         BNE   @RF00113                                            0113 00551000
*           DO;                     /*                       @Y30LB14*/ 00552000
*             DO K=1 TO 32;         /* FOR ALL 32 BLOCKS     @Y30LB14*/ 00553000
         LR    K,@10                                               0115 00554000
@DL00115 DS    0H                                                  0116 00555000
*               OLTIT(K)='1'B;      /* LAST TRK IN TBL       @Y30LB14*/ 00556000
         LR    @10,K                                               0116 00557000
         MH    @10,@CH00485                                        0116 00558000
         LH    @05,@CH00484                                        0116 00559000
         AL    @05,BUILDPTR(,R4)                                   0116 00560000
         ST    @10,@TF00001                                        0116 00561000
         ALR   @10,@05                                             0116 00562000
         AL    @10,@CF00496                                        0116 00563000
         OI    OLTIT-16(@10),B'00010000'                           0116 00564000
*               NEXTVCHR(K)=''B;    /* 0 NEXT TRK PTR        @Y30LB14*/ 00565000
         AL    @05,@TF00001                                        0117 00566000
         AL    @05,@CF00508                                        0117 00567000
         XC    NEXTVCHR-20(4,@05),NEXTVCHR-20(@05)                 0117 00568000
*             END;                  /*                       @Y30LB14*/ 00569000
         AH    K,@CH00042                                          0118 00570000
         CH    K,@CH00309                                          0118 00571000
         BNH   @DL00115                                            0118 00572000
*             OLTB(32)='1'B;        /* LAST TABLE BLOCK      @Y30LB14*/ 00573000
         L     @10,BUILDPTR(,R4)                                   0119 00574000
         AL    @10,@CF00509                                        0119 00575000
         OI    OLTB(@10),B'10000000'                               0119 00576000
*           END;                    /*                       @Y30LB14*/ 00577000
*         CALL WRITETRK;            /* WRITE OUT THE TRACK   @Y30LB14*/ 00578000
@RF00113 BAL   @14,WRITETRK                                        0121 00579000
*         K=0;                      /* START OF NEXT TRACK   @YD00113*/ 00580000
         SLR   K,K                                                 0122 00581000
*         CALL SETTRACK;            /* SET FOR NEXT TRACK    @Y30LB14*/ 00582000
         BAL   @14,SETTRACK                                        0123 00583000
*       END;                        /*                       @Y30LB14*/ 00584000
*   END;                            /* END DO J LOOP         @Y30LB14*/ 00585000
@RF00110 AH    J,@CH00042                                          0125 00586000
         CH    J,@CH00466                                          0125 00587000
         BNH   @DL00107                                            0125 00588000
*   RETURN;                         /* RETURN TO CALLER      @Y30LB14*/ 00589000
@EL00003 DS    0H                                                  0126 00590000
@EF00003 DS    0H                                                  0126 00591000
@ER00003 LM    @14,@12,@SA00003                                    0126 00592000
         BR    @14                                                 0126 00593000
*   END EMPTYLIB;                   /*                       @Y30LB14*/ 00594000
*                                                                  0128 00595000
*/********************************************************** @Y30LB14*/ 00596000
*/*                                                          @YD00113*/ 00597000
*/* PROCEDURE NAME - SETTRACK                                @YD00113*/ 00598000
*/*                                                          @YD00113*/ 00599000
*/* FUNCTION - THIS PROCEDURE CALCULATE THE CHR OF THE NEXT  @YD00113*/ 00600000
*/*            SEQUENTIAL OVERFLAW TRACK.                    @YD00113*/ 00601000
*/*                                                          @YD00113*/ 00602000
*/********************************************************** @Y30LB14*/ 00603000
*                                                                  0128 00604000
*SETTRACK:                                                         0128 00605000
*   PROCEDURE;                      /*                       @Y30LB14*/ 00606000
SETTRACK STM   @14,@12,12(@13)                                     0128 00607000
*   TRACK=UT2VHEAD+1;               /* SET FOR NEXT TRACK    @Y30LB14*/ 00608000
         LA    @10,1                                               0129 00609000
         L     @05,BUILDPTR(,R4)                                   0129 00610000
         SLR   @15,@15                                             0129 00611000
         IC    @15,UT2VHEAD(,@05)                                  0129 00612000
         ALR   @15,@10                                             0129 00613000
         STC   @15,TRACK                                           0129 00614000
*   IF TRACK>18                     /* CYLINDER OVERFLOWED   @Y30LB14*/ 00615000
*     THEN                          /*                       @Y30LB14*/ 00616000
         CLI   TRACK,18                                            0130 00617000
         BNH   @RF00130                                            0130 00618000
*     DO;                           /*                       @Y30LB14*/ 00619000
*       TRACK=0;                    /* SET TRACK TO ZERO     @Y30LB14*/ 00620000
         MVI   TRACK,X'00'                                         0132 00621000
*       CYLINDER=UT2VCYL+1;         /* SET TO NEXT CYL       @Y30LB14*/ 00622000
         MVC   @ZT00003+3(1),UT2VCYL(@05)                          0133 00623000
         AL    @10,@ZT00003                                        0133 00624000
         STC   @10,CYLINDER                                        0133 00625000
*     END;                          /*                       @Y30LB14*/ 00626000
*   END SETTRACK;                   /*                       @Y30LB14*/ 00627000
@EL00004 DS    0H                                                  0135 00628000
@EF00004 DS    0H                                                  0135 00629000
@ER00004 LM    @14,@12,12(@13)                                     0135 00630000
         BR    @14                                                 0135 00631000
*                                                                  0136 00632000
*/********************************************************** @Y30LB14*/ 00633000
*/*                                                          @YD00113*/ 00634000
*/* PROCEDURE NAME - IDCHECK                                 @YD00113*/ 00635000
*/*                                                          @YD00113*/ 00636000
*/* FUNCTION - THIS PROCEDURE CHECKS THE TABLE ID OF THE     @YD00113*/ 00637000
*/*            INPUT TRACK JUST READ TO INSURE THAT THE      @YD00113*/ 00638000
*/*            TRACK IS A TRACK OF THE TRANSIENT VOLUME      @YD00113*/ 00639000
*/*            TABLE.  IF THE TRACK IS NOT A TRACK OF THE    @YD00113*/ 00640000
*/*            TRANSIENT VOLUME TABLE, MESSAGE ICG410I IS    @YD00113*/ 00641000
*/*            WRITTEN                                       @YD00113*/ 00642000
*/*                                                          @YD00113*/ 00643000
*/********************************************************** @Y30LB14*/ 00644000
*                                                                  0136 00645000
*IDCHECK:                                                          0136 00646000
*   PROCEDURE;                      /*                       @Y30LB14*/ 00647000
*                                                                  0136 00648000
IDCHECK  STM   @14,@12,@SA00005                                    0136 00649000
*   /*****************************************************************/ 00650000
*   /*                                                               */ 00651000
*   /* ***********************************************       @YD00113*/ 00652000
*   /* IF THE TABLE ID OF THE INPUT TRACK JUST READ          @YD00113*/ 00653000
*   /* IS NOT '40'X, WRITE MESSAGE 'ICG410I                  @YD00113*/ 00654000
*   /* NON-MATCH ON INPUT TABLE ID FOR ICGDSB11'             @YD00113*/ 00655000
*   /* AND SET RETURN CODE TO 12.                            @YD00113*/ 00656000
*   /* ***********************************************       @YD00113*/ 00657000
*   /*                                                               */ 00658000
*   /*****************************************************************/ 00659000
*                                                                  0137 00660000
*   IF INTABLID(1)^='01000000'B     /*                       @Y30LB14*/ 00661000
*     THEN                          /*                       @Y30LB14*/ 00662000
         L     @10,BUILDPTR(,R4)                                   0137 00663000
         AL    @10,@CF00486                                        0137 00664000
         CLI   INTABLID(@10),B'01000000'                           0137 00665000
         BE    @RF00137                                            0137 00666000
*     DO;                           /*                       @Y30LB14*/ 00667000
*       OUTBUF2(1:49)=MSG410I;      /*                       @Y30LB14*/ 00668000
         MVC   OUTBUF2(49,R4),MSG410I                              0139 00669000
*       RETCODE=12;                 /*                       @Y30LB14*/ 00670000
         MVC   RETCODE(2,R4),@CH00128                              0140 00671000
*       CALL PUTIT1;                /* PUT OUT MESSAGE       @Y30LB14*/ 00672000
         BAL   @14,PUTIT1                                          0141 00673000
*     END;                          /*                       @Y30LB14*/ 00674000
*   RETURN;                         /*                       @Y30LB14*/ 00675000
@EL00005 DS    0H                                                  0143 00676000
@EF00005 DS    0H                                                  0143 00677000
@ER00005 LM    @14,@12,@SA00005                                    0143 00678000
         BR    @14                                                 0143 00679000
*   END IDCHECK;                    /*                       @Y30LB14*/ 00680000
         B     @EL00005                                            0144 00681000
*                                                                  0145 00682000
*/********************************************************** @Y30LB14*/ 00683000
*/*                                                          @YD00113*/ 00684000
*/* PROCEDURE NAME - WRITETRK                                @YD00113*/ 00685000
*/*                                                          @YD00113*/ 00686000
*/* FUNCTION - THIS PROCEDURE PLACES THE 8 BYTES OF PREFIX   @YD00113*/ 00687000
*/*            INFORMATION IN THE PREFIX AREA OF EACH OF     @YD00113*/ 00688000
*/*            THE 32 RECORDS THAT WILL BE WRITTEN TO THE    @YD00113*/ 00689000
*/*            OUTPUT DATA SETS.  THE PREFIX INFORMATION     @YD00113*/ 00690000
*/*            CONSISTS OF TABLE IDENTIFICATION ('40'X),     @YD00113*/ 00691000
*/*            VIRTUAL ADDRESS TO WHICH THE RECORD IS TO BE  @YD00113*/ 00692000
*/*            WRITTEN (CYLINDER AND HEAD ARE CONSTANT FOR   @YD00113*/ 00693000
*/*            TRACK AND RECORD INDICATES RELATIVE RECORD    @YD00113*/ 00694000
*/*            POSITION) FOLLOWED BY 4 BYTES OF BINARY       @YD00113*/ 00695000
*/*            ZEROS.  THE PROCEDURE THEN CALLS THE          @YD00113*/ 00696000
*/*            PROCEDURE 'WRITE' TO PERFORM THE ACTUAL WRITE @YD00113*/ 00697000
*/*            OPERATION.                                    @YD00113*/ 00698000
*/*                                                          @YD00113*/ 00699000
*/********************************************************** @Y30LB14*/ 00700000
*                                                                  0145 00701000
*WRITETRK:                                                         0145 00702000
*   PROCEDURE;                      /*                       @Y30LB14*/ 00703000
WRITETRK STM   @14,@12,@SA00006                                    0145 00704000
*   DO K=1 TO 32;                   /*                       @Y30LB14*/ 00705000
         LA    K,1                                                 0146 00706000
@DL00146 DS    0H                                                  0147 00707000
*     OUTREC(K)=K;                  /* SET PREFIX RECORD NUM @YD00113*/ 00708000
         LR    @10,K                                               0147 00709000
         MH    @10,@CH00485                                        0147 00710000
         LH    @05,@CH00484                                        0147 00711000
         AL    @05,BUILDPTR(,R4)                                   0147 00712000
         LA    @02,0(@10,@05)                                      0147 00713000
         AL    @02,@CF00501                                        0147 00714000
         STC   K,OUTREC-11(,@02)                                   0147 00715000
*     OUTHEAD(K)=OUTHEAD(1);        /* SET THE HEAD NUMBER   @Y30LB14*/ 00716000
         SLR   @02,@02                                             0148 00717000
         IC    @02,OUTHEAD(,@05)                                   0148 00718000
         LA    @01,0(@10,@05)                                      0148 00719000
         AL    @01,@CF00502                                        0148 00720000
         STC   @02,OUTHEAD-10(,@01)                                0148 00721000
*     OUTCYL(K)=OUTCYL(1);          /* SET THE CYL NUMBER    @Y30LB14*/ 00722000
         SLR   @02,@02                                             0149 00723000
         IC    @02,OUTCYL(,@05)                                    0149 00724000
         LA    @01,0(@10,@05)                                      0149 00725000
         AL    @01,@CF00503                                        0149 00726000
         STC   @02,OUTCYL-9(,@01)                                  0149 00727000
*     OUTFLR(K)=''B;                /* SET FILLER TO ZERO    @Y30LB14*/ 00728000
         ST    @10,@TF00001                                        0150 00729000
         ALR   @10,@05                                             0150 00730000
         AL    @10,@CF00511                                        0150 00731000
         XC    OUTFLR-12(4,@10),OUTFLR-12(@10)                     0150 00732000
*     OUTABLID(K)='01000000'B;      /* SET TABLE ID          @Y30LB14*/ 00733000
         AL    @05,@TF00001                                        0151 00734000
         AL    @05,@CF00495                                        0151 00735000
         MVI   OUTABLID-8(@05),B'01000000'                         0151 00736000
*   END;                            /*                       @Y30LB14*/ 00737000
         AH    K,@CH00042                                          0152 00738000
         CH    K,@CH00309                                          0152 00739000
         BNH   @DL00146                                            0152 00740000
*   CALL WRITE;                     /* WRITE OUT THE TRACK   @Y30LB14   00741000
*                                                            @Y30LB14*/ 00742000
         BAL   @14,WRITE                                           0153 00743000
*   RETURN;                         /* RETURN TO CALLER      @Y30LB14   00744000
*                                                            @Y30LB14*/ 00745000
@EL00006 DS    0H                                                  0154 00746000
@EF00006 DS    0H                                                  0154 00747000
@ER00006 LM    @14,@12,@SA00006                                    0154 00748000
         BR    @14                                                 0154 00749000
*   END WRITETRK;                   /*                       @Y30LB14*/ 00750000
*                                                                  0156 00751000
*/********************************************************** @Y30LB14*/ 00752000
*/*                                                          @YD00113*/ 00753000
*/* PROCEDURE NAME - WRITE                                   @YD00113*/ 00754000
*/*                                                          @YD00113*/ 00755000
*/* FUNCTION - THIS PROCEDURE INITAILIZES THE POINTER TO     @YD00113*/ 00756000
*/*            THE DATA TO BE WRITTEN AND CALLS ICGDSB06 TO  @YD00113*/ 00757000
*/*            PERFORM THE ACTUAL WRITE.  IT THEN CALCULATES @YD00113*/ 00758000
*/*            THE CYLINDER AND TRACK ADDRESS OF THE NEXT    @YD00113*/ 00759000
*/*            TRACK TO BE WRITTEN.                          @YD00113*/ 00760000
*/*                                                          @YD00113*/ 00761000
*/********************************************************** @Y30LB14*/ 00762000
*                                                                  0156 00763000
*WRITE:                                                            0156 00764000
*   PROCEDURE;                      /*                       @Y30LB14*/ 00765000
WRITE    STM   @14,@12,@SA00007                                    0156 00766000
*   B06ADDR=OUTADDR;                /* OUTPUT ADDRESS FOR B06      0157 00767000
*                                                            @YD00113*/ 00768000
         L     @10,BUILDPTR(,R4)                                   0157 00769000
         MVC   B06ADDR(3,@10),OUTADDR(@10)                         0157 00770000
*   GEN(LINK EP=ICGDSB06);          /* WRITE OUT TRACK       @Y30LB14*/ 00771000
         LINK EP=ICGDSB06                                               00772000
*   UT2VHEAD=UT2VHEAD+1;            /* INCR TO NEXT TRACK    @Y30LB14*/ 00773000
         L     @10,BUILDPTR(,R4)                                   0159 00774000
         LA    @05,1                                               0159 00775000
         SLR   @15,@15                                             0159 00776000
         IC    @15,UT2VHEAD(,@10)                                  0159 00777000
         ALR   @15,@05                                             0159 00778000
         STC   @15,UT2VHEAD(,@10)                                  0159 00779000
*   IF UT2VHEAD>18                  /*                       @Y30LB14*/ 00780000
*     THEN                          /*                       @Y30LB14*/ 00781000
         CLI   UT2VHEAD(@10),18                                    0160 00782000
         BNH   @RF00160                                            0160 00783000
*     DO;                           /*                       @Y30LB14*/ 00784000
*       UT2VHEAD=0;                 /* SET TRACK TO ZERO     @Y30LB14*/ 00785000
         MVI   UT2VHEAD(@10),X'00'                                 0162 00786000
*       UT2VCYL=UT2VCYL+1;          /* INCR TO NEXT CYL      @Y30LB14*/ 00787000
         MVC   @ZT00003+3(1),UT2VCYL(@10)                          0163 00788000
         AL    @05,@ZT00003                                        0163 00789000
         STC   @05,UT2VCYL(,@10)                                   0163 00790000
*     END;                          /*                       @Y30LB14*/ 00791000
*   OUTCYL(1)=UT2VCYL;              /* SET NEXT AVAIL CYL    @YD00113*/ 00792000
@RF00160 L     @10,BUILDPTR(,R4)                                   0165 00793000
         LH    @05,@CH00484                                        0165 00794000
         ALR   @05,@10                                             0165 00795000
         MVC   OUTCYL(1,@05),UT2VCYL(@10)                          0165 00796000
*   OUTHEAD(1)=UT2VHEAD;            /* SET NEXT AVAIL HEAD   @YD00113*/ 00797000
         MVC   OUTHEAD(1,@05),UT2VHEAD(@10)                        0166 00798000
*   RETURN;                         /* RETURN TO CALLER      @Y30LB14*/ 00799000
@EL00007 DS    0H                                                  0167 00800000
@EF00007 DS    0H                                                  0167 00801000
@ER00007 LM    @14,@12,@SA00007                                    0167 00802000
         BR    @14                                                 0167 00803000
*   END WRITE;                      /*                       @Y30LB14*/ 00804000
*                                                                  0169 00805000
*/***********************************************************@Y30LB12*/ 00806000
*/*                                                          @Y30LB12*/ 00807000
*/* PROCEDURE NAME - PUTIT1                                  @Y30LB12*/ 00808000
*/*                                                          @Y30LB12*/ 00809000
*/* FUNCTION - CALL ICGDSMSG, MESSAGE PRINT SUBROUTINE, TO   @Y30LB12*/ 00810000
*/*            PUT TERMINATING MESSAGE FOR WHICH TEXT IS NOT @Y30LB12*/ 00811000
*/*            IN ICGDSMSG BUT ALREADY BUILT IN 'OUTBUF2'    @Y30LB12*/ 00812000
*/*                                                          @Y30LB12*/ 00813000
*/***********************************************************@Y30LB12*/ 00814000
*                                                                  0169 00815000
*PUTIT1:                                                           0169 00816000
*   PROCEDURE;                      /*                       @Y30LB12*/ 00817000
PUTIT1   STM   @14,@12,@SA00008                                    0169 00818000
*   STOPSCAN='1'B;                  /*                       @Y30LB12*/ 00819000
         OI    STOPSCAN,B'10000000'                                0170 00820000
*   PRNTBUF2='1'B;                  /*                       @Y30LB12*/ 00821000
         OI    PRNTBUF2(R4),B'00000001'                            0171 00822000
*   TERMINAT=TERMINAT+1;            /*                       @Y30LB12*/ 00823000
         LA    @10,1                                               0172 00824000
         AH    @10,TERMINAT(,R4)                                   0172 00825000
         STH   @10,TERMINAT(,R4)                                   0172 00826000
*   GEN(LINK  EP=ICGDSMSG);         /*                       @Y30LB12*/ 00827000
         LINK  EP=ICGDSMSG                                              00828000
*   PRNTBUF2='0'B;                  /*                       @Y30LB12*/ 00829000
         NI    PRNTBUF2(R4),B'11111110'                            0174 00830000
*   END PUTIT1;                     /*                       @Y30LB12*/ 00831000
@EL00008 DS    0H                                                  0175 00832000
@EF00008 DS    0H                                                  0175 00833000
@ER00008 LM    @14,@12,@SA00008                                    0175 00834000
         BR    @14                                                 0175 00835000
*                                                                  0176 00836000
*/********************************************************** @YD00113*/ 00837000
*/*                                                          @YD00113*/ 00838000
*/*                 P A T C H   A R E A                      @YD00113*/ 00839000
*/*                                                          @YD00113*/ 00840000
*/********************************************************** @YD00113*/ 00841000
*                                                                  0176 00842000
*   GENERATE;                                                      0176 00843000
*                                                         /*@YD00113*/  00844000
PATCHB11 DC    32C'PATCHB11'                              /*@YD00113*/  00845000
*   END ICGDSB11                    /*                       @Y30LB14*/ 00846000
*                                                                  0177 00847000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 00848000
*/*%INCLUDE SYSLIB  (ICGDSMAC)                                       */ 00849000
*/*%INCLUDE SYSLIB  (ICGDSMA5)                                       */ 00850000
*/*%INCLUDE SYSLIB  (ICGDSMA2)                                       */ 00851000
*                                                                  0177 00852000
*       ;                                                          0177 00853000
         B     @EL00001                                            0177 00854000
@DATA    DS    0H                                                       00855000
@CH00042 DC    H'1'                                                     00856000
@CH00048 DC    H'3'                                                     00857000
@CH00128 DC    H'12'                                                    00858000
@CH00454 DC    H'18'                                                    00859000
@CH00309 DC    H'32'                                                    00860000
@CH00487 DC    H'264'                                                   00861000
@CH00485 DC    H'272'                                                   00862000
@CH00463 DC    H'442'                                                   00863000
@CH00466 DC    H'498'                                                   00864000
@DATD    DSECT                                                          00865000
         DS    0F                                                       00866000
@SA00001 DS    18F                                                      00867000
@SA00003 DS    15F                                                      00868000
@SA00002 DS    15F                                                      00869000
@SA00005 DS    15F                                                      00870000
@SA00007 DS    15F                                                      00871000
@SA00006 DS    15F                                                      00872000
@SA00008 DS    15F                                                      00873000
@TF00001 DS    F                                                        00874000
@TF00002 DS    F                                                        00875000
@ZTEMPS  DS    0F                                                       00876000
@ZT00003 DC    F'0'                                                     00877000
@ZTEMPND EQU   *                                                        00878000
@ZLEN    EQU   @ZTEMPND-@ZTEMPS                                         00879000
ICGDSB11 CSECT                                                          00880000
         DS    0F                                                       00881000
@CF00486 DC    F'5084'                                                  00882000
@CH00486 EQU   @CF00486+2                                               00883000
@CF00488 DC    F'8432'                                                  00884000
@CF00500 DC    F'13260'                                                 00885000
@CF00484 DC    F'13532'                                                 00886000
@CH00484 EQU   @CF00484+2                                               00887000
@CF00509 DC    F'21964'                                                 00888000
@CF00495 DC    F'-264'                                                  00889000
@CF00503 DC    F'-263'                                                  00890000
@CF00502 DC    F'-262'                                                  00891000
@CF00501 DC    F'-261'                                                  00892000
@CF00511 DC    F'-260'                                                  00893000
@CF00496 DC    F'-256'                                                  00894000
@CF00508 DC    F'-252'                                                  00895000
@CF00499 DC    F'-251'                                                  00896000
@CF00498 DC    F'-250'                                                  00897000
@CF00497 DC    F'-249'                                                  00898000
@DATD    DSECT                                                          00899000
         DS    0D                                                       00900000
STOPSCAN DS    BL1                                                      00901000
BLOCK    DS    CL256                                                    00902000
         ORG   BLOCK                                                    00903000
FLAGS    DS    FL1                                                      00904000
         ORG   FLAGS                                                    00905000
LTB      DS    BL1                                                      00906000
LAB      EQU   FLAGS+0                                                  00907000
EOTB     EQU   FLAGS+0                                                  00908000
LTIT     EQU   FLAGS+0                                                  00909000
BLKUSE   EQU   FLAGS+0                                                  00910000
HASH     EQU   FLAGS+0                                                  00911000
VERFLOW  EQU   FLAGS+0                                                  00912000
         ORG   BLOCK+1                                                  00913000
ENTRYLEN DS    FL1                                                      00914000
MAXENTPB DS    FL1                                                      00915000
USECNT   DS    FL1                                                      00916000
ZCHR     DS    BL4                                                      00917000
         ORG   ZCHR                                                     00918000
ZERO     DS    FL1                                                      00919000
CYLINDER DS    FL1                                                      00920000
TRACK    DS    FL1                                                      00921000
RECORD   DS    FL1                                                      00922000
         ORG   BLOCK+8                                                  00923000
REMAINDR DS    BL248                                                    00924000
         ORG   BLOCK+256                                                00925000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                00926000
@ENDDATD EQU   *                                                        00927000
ICGDSB11 CSECT                                                          00928000
         DS    0F                                                       00929000
@SIZDATD DC    AL1(0)                                                   00930000
         DC    AL3(@ENDDATD-@DATD)                                      00931000
         DS    0D                                                       00932000
MSG410I  DC    CL49' ICG410I NON-MATCH ON INPUT TABLE ID FOR ICGDSB11'  00933000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00934000
@01      EQU   01                                                       00935000
@02      EQU   02                                                       00936000
@03      EQU   03                                                       00937000
@04      EQU   04                                                       00938000
@05      EQU   05                                                       00939000
@06      EQU   06                                                       00940000
@07      EQU   07                                                       00941000
@08      EQU   08                                                       00942000
@09      EQU   09                                                       00943000
@10      EQU   10                                                       00944000
@11      EQU   11                                                       00945000
@12      EQU   12                                                       00946000
@13      EQU   13                                                       00947000
@14      EQU   14                                                       00948000
@15      EQU   15                                                       00949000
MAX      EQU   @03                                                      00950000
K        EQU   @03                                                      00951000
J        EQU   @02                                                      00952000
I        EQU   @05                                                      00953000
R4       EQU   @04                                                      00954000
COMTAB   EQU   0                                                        00955000
READER   EQU   COMTAB+256                                               00956000
READFLAG EQU   READER+96                                                00957000
PCHBF    EQU   READER+99                                                00958000
STARTCOL EQU   READER+180                                               00959000
NEXTCOL  EQU   READER+184                                               00960000
PRINTER  EQU   COMTAB+464                                               00961000
OUTBUF2  EQU   PRINTER+225                                              00962000
MESSAGES EQU   COMTAB+810                                               00963000
RETCODE  EQU   MESSAGES                                                 00964000
TERMINAT EQU   MESSAGES+6                                               00965000
SPECLMSG EQU   MESSAGES+18                                              00966000
PRNTBUF2 EQU   SPECLMSG                                                 00967000
GENIO    EQU   COMTAB+832                                               00968000
DCBPTR   EQU   GENIO+4                                                  00969000
COMPTR2  EQU   GENIO+16                                                 00970000
BUILDPTR EQU   GENIO+20                                                 00971000
INVOKED  EQU   COMTAB+856                                               00972000
SAVEDDS  EQU   INVOKED+4                                                00973000
BUILDRSG EQU   COMTAB+900                                               00974000
RSGS     EQU   BUILDRSG                                                 00975000
RSG      EQU   RSGS                                                     00976000
RSGABOX  EQU   RSG                                                      00977000
RSGTODS  EQU   RSG+7                                                    00978000
LIBRARY  EQU   COMTAB+1170                                              00979000
LIBS     EQU   LIBRARY                                                  00980000
LIB      EQU   LIBS                                                     00981000
LIBBITS  EQU   LIB                                                      00982000
PABTABLE EQU   COMTAB+1218                                              00983000
PABDEV   EQU   PABTABLE                                                 00984000
PABFLAGS EQU   PABDEV                                                   00985000
PABREAL  EQU   PABDEV+1                                                 00986000
PABAADDD EQU   PABDEV+2                                                 00987000
DSPAIRS  EQU   COMTAB+1938                                              00988000
PHYSTYPE EQU   COMTAB+2002                                              00989000
PHYSFLGS EQU   PHYSTYPE                                                 00990000
MERLICEB EQU   PHYSFLGS                                                 00991000
CPUASSOC EQU   COMTAB+3026                                              00992000
CPUS     EQU   CPUASSOC+2                                               00993000
CPU      EQU   CPUS                                                     00994000
CPUFLAG1 EQU   CPU+6                                                    00995000
OPSYSTYP EQU   CPUFLAG1                                                 00996000
CPUFLAG2 EQU   CPU+7                                                    00997000
LOWERCON EQU   COMTAB+3156                                              00998000
LOWDSS   EQU   LOWERCON                                                 00999000
LOWFLGS  EQU   LOWDSS                                                   01000000
LIBCTL   EQU   COMTAB+3284                                              01001000
LIBCTLS  EQU   LIBCTL                                                   01002000
CREATE   EQU   COMTAB+3288                                              01003000
@NM00017 EQU   CREATE                                                   01004000
NEWCREAT EQU   @NM00017                                                 01005000
UPDCREAT EQU   @NM00017                                                 01006000
COMTAB2  EQU   0                                                        01007000
DSTORSG  EQU   COMTAB2                                                  01008000
DSENTRY  EQU   DSTORSG                                                  01009000
CONFGCON EQU   COMTAB2+32                                               01010000
RSGUCB   EQU   CONFGCON                                                 01011000
RSGFLAGS EQU   RSGUCB                                                   01012000
CONFGUCB EQU   COMTAB2+464                                              01013000
CONFGDEV EQU   CONFGUCB                                                 01014000
USEFLAGS EQU   CONFGDEV                                                 01015000
ALTPATH1 EQU   CONFGDEV+2                                               01016000
ALTPATH2 EQU   CONFGDEV+5                                               01017000
ALTPATH3 EQU   CONFGDEV+8                                               01018000
BUILDTAB EQU   0                                                        01019000
COMB06   EQU   BUILDTAB                                                 01020000
B06DCBPT EQU   COMB06                                                   01021000
B06BUFPT EQU   COMB06+4                                                 01022000
B06ADDR  EQU   COMB06+9                                                 01023000
COMB05   EQU   BUILDTAB+12                                              01024000
B05DCBPT EQU   COMB05                                                   01025000
B05BUFPT EQU   COMB05+4                                                 01026000
B05ADDR  EQU   COMB05+9                                                 01027000
BUILDGEN EQU   BUILDTAB+24                                              01028000
UT2VCHR  EQU   BUILDGEN+8                                               01029000
OUTADDR  EQU   UT2VCHR+1                                                01030000
UT2VCYL  EQU   OUTADDR                                                  01031000
UT2VHEAD EQU   OUTADDR+1                                                01032000
UT2VREC  EQU   OUTADDR+2                                                01033000
UT1VCHR  EQU   BUILDGEN+12                                              01034000
INADDR   EQU   UT1VCHR+1                                                01035000
UT1VCYL  EQU   INADDR                                                   01036000
UT1VHEAD EQU   INADDR+1                                                 01037000
UT1STUFF EQU   BUILDTAB+40                                              01038000
UT1DCB   EQU   UT1STUFF                                                 01039000
UT1FLAG  EQU   UT1STUFF+96                                              01040000
UT2STUFF EQU   BUILDTAB+664                                             01041000
UT2DCB   EQU   UT2STUFF                                                 01042000
UT2FLAG  EQU   UT2STUFF+96                                              01043000
UT3STUFF EQU   BUILDTAB+1288                                            01044000
UT3FLAG  EQU   UT3STUFF+96                                              01045000
UT1BUFER EQU   BUILDTAB+5084                                            01046000
UT2BUFER EQU   BUILDTAB+13532                                           01047000
INBUFFER EQU   0                                                        01048000
INBLOCK  EQU   INBUFFER                                                 01049000
INBLKPFX EQU   INBLOCK                                                  01050000
INTABLID EQU   INBLKPFX                                                 01051000
IBLOCK   EQU   INBLOCK+8                                                01052000
INCONTRL EQU   IBLOCK                                                   01053000
OUTBUFFR EQU   0                                                        01054000
OUTBLOCK EQU   OUTBUFFR                                                 01055000
OBLKPRFX EQU   OUTBLOCK+8                                               01056000
OUTABLID EQU   OBLKPRFX                                                 01057000
OUTCYL   EQU   OBLKPRFX+1                                               01058000
OUTHEAD  EQU   OBLKPRFX+2                                               01059000
OUTREC   EQU   OBLKPRFX+3                                               01060000
OUTFLR   EQU   OBLKPRFX+4                                               01061000
OBLOCK   EQU   OUTBLOCK+16                                              01062000
OCONTROL EQU   OBLOCK                                                   01063000
OFLAGS   EQU   OCONTROL                                                 01064000
OLTB     EQU   OFLAGS                                                   01065000
OEOTB    EQU   OFLAGS                                                   01066000
OLTIT    EQU   OFLAGS                                                   01067000
OVERFLOW EQU   OFLAGS                                                   01068000
NEXTVCHR EQU   OCONTROL+4                                               01069000
OCYL     EQU   NEXTVCHR+1                                               01070000
OHEAD    EQU   NEXTVCHR+2                                               01071000
ORECORD  EQU   NEXTVCHR+3                                               01072000
SCANBUF  EQU   0                                                        01073000
SCANDATA EQU   0                                                        01074000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01075000
OFILLER  EQU   OBLOCK+248                                               01076000
OCARTBLK EQU   OBLOCK+8                                                 01077000
OVOLUME  EQU   NEXTVCHR                                                 01078000
OUSECNT  EQU   OCONTROL+3                                               01079000
OMAXEPB  EQU   OCONTROL+2                                               01080000
OENTRYLN EQU   OCONTROL+1                                               01081000
OHASH    EQU   OFLAGS                                                   01082000
OBLKUSE  EQU   OFLAGS                                                   01083000
OLAB     EQU   OFLAGS                                                   01084000
@NM00024 EQU   OUTBLOCK                                                 01085000
IFILLER  EQU   IBLOCK+248                                               01086000
ICRTBLK  EQU   IBLOCK+8                                                 01087000
IRECORD  EQU   INCONTRL+7                                               01088000
IHEAD    EQU   INCONTRL+6                                               01089000
ICYL     EQU   INCONTRL+5                                               01090000
IVOLUME  EQU   INCONTRL+4                                               01091000
IUSECNT  EQU   INCONTRL+3                                               01092000
IMAXEPB  EQU   INCONTRL+2                                               01093000
IENTYLN  EQU   INCONTRL+1                                               01094000
ICOMPLN  EQU   INCONTRL                                                 01095000
ILTIT    EQU   INCONTRL                                                 01096000
IEOTB    EQU   INCONTRL                                                 01097000
ILAB     EQU   INCONTRL                                                 01098000
ILTB     EQU   INCONTRL                                                 01099000
INFLR    EQU   INBLKPFX+4                                               01100000
INREC    EQU   INBLKPFX+3                                               01101000
INHEAD   EQU   INBLKPFX+2                                               01102000
INCYL    EQU   INBLKPFX+1                                               01103000
TEMPEND  EQU   BUILDTAB+22396                                           01104000
LTRTRANI EQU   BUILDTAB+22316                                           01105000
LTRTRANO EQU   BUILDTAB+22236                                           01106000
NVERIFY  EQU   BUILDTAB+3500                                            01107000
CVERIFY  EQU   BUILDTAB+1916                                            01108000
@NM00023 EQU   UT3STUFF+624                                             01109000
UT3DDN   EQU   UT3STUFF+616                                             01110000
UT3CCWS  EQU   UT3STUFF+320                                             01111000
UT3IOB   EQU   UT3STUFF+280                                             01112000
UT3ECB   EQU   UT3STUFF+276                                             01113000
UT3JFCB  EQU   UT3STUFF+100                                             01114000
@NM00022 EQU   UT3FLAG                                                  01115000
UT3VWERR EQU   UT3FLAG                                                  01116000
UT3VOERR EQU   UT3FLAG                                                  01117000
UT3VUPDT EQU   UT3FLAG                                                  01118000
UT3DCB   EQU   UT3STUFF                                                 01119000
UT2DDN   EQU   UT2STUFF+616                                             01120000
UT2CCWS  EQU   UT2STUFF+320                                             01121000
UT2IOB   EQU   UT2STUFF+280                                             01122000
UT2ECB   EQU   UT2STUFF+276                                             01123000
UT2JFCB  EQU   UT2STUFF+100                                             01124000
@NM00021 EQU   UT2FLAG                                                  01125000
UT2VCERR EQU   UT2FLAG                                                  01126000
UT2VWERR EQU   UT2FLAG                                                  01127000
UT2VOERR EQU   UT2FLAG                                                  01128000
UT2VUPDT EQU   UT2FLAG                                                  01129000
UT1DDN   EQU   UT1STUFF+616                                             01130000
UT1CCWS  EQU   UT1STUFF+320                                             01131000
UT1IOB   EQU   UT1STUFF+280                                             01132000
UT1ECB   EQU   UT1STUFF+276                                             01133000
UT1JFCB  EQU   UT1STUFF+100                                             01134000
@NM00020 EQU   UT1FLAG                                                  01135000
UT1VWERR EQU   UT1FLAG                                                  01136000
UT1VOERR EQU   UT1FLAG                                                  01137000
UT1VUPDT EQU   UT1FLAG                                                  01138000
UT1VREC  EQU   INADDR+2                                                 01139000
UT1TABID EQU   UT1VCHR                                                  01140000
UT2TABID EQU   UT2VCHR                                                  01141000
ADDRBUF2 EQU   BUILDGEN+4                                               01142000
ADDRBUF1 EQU   BUILDGEN                                                 01143000
B05REC   EQU   B05ADDR+2                                                01144000
B05HEAD  EQU   B05ADDR+1                                                01145000
B05CYL   EQU   B05ADDR                                                  01146000
B05TBLID EQU   COMB05+8                                                 01147000
B06REC   EQU   B06ADDR+2                                                01148000
B06HEAD  EQU   B06ADDR+1                                                01149000
B06CYL   EQU   B06ADDR                                                  01150000
B06TBLID EQU   COMB06+8                                                 01151000
ALTCH3   EQU   ALTPATH3+2                                               01152000
ALTCI3   EQU   ALTPATH3+1                                               01153000
ALTDS3   EQU   ALTPATH3                                                 01154000
ALTCH2   EQU   ALTPATH2+2                                               01155000
ALTCI2   EQU   ALTPATH2+1                                               01156000
ALTDS2   EQU   ALTPATH2                                                 01157000
ALTCH1   EQU   ALTPATH1+2                                               01158000
ALTCI1   EQU   ALTPATH1+1                                               01159000
ALTDS1   EQU   ALTPATH1                                                 01160000
INDEXRSG EQU   CONFGDEV+1                                               01161000
ICEBERG  EQU   USEFLAGS                                                 01162000
ITISALTP EQU   USEFLAGS                                                 01163000
USECONVR EQU   USEFLAGS                                                 01164000
SUPPUNCH EQU   USEFLAGS                                                 01165000
USEREAL  EQU   USEFLAGS                                                 01166000
USEVS    EQU   USEFLAGS                                                 01167000
USEV     EQU   USEFLAGS                                                 01168000
USESPEC  EQU   USEFLAGS                                                 01169000
RSGCUA   EQU   RSGUCB+8                                                 01170000
RSGCHAN  EQU   RSGUCB+7                                                 01171000
CPUREFNO EQU   RSGUCB+6                                                 01172000
RSGCPUID EQU   RSGUCB+1                                                 01173000
@NM00019 EQU   RSGFLAGS                                                 01174000
CISPEC   EQU   RSGFLAGS                                                 01175000
TORSG2   EQU   DSENTRY+1                                                01176000
TORSG1   EQU   DSENTRY                                                  01177000
COM2BASE EQU   COMTAB+3304                                              01178000
LRUCLOCK EQU   CREATE+11                                                01179000
VOLSER   EQU   CREATE+5                                                 01180000
VPAGES   EQU   CREATE+1                                                 01181000
@NM00018 EQU   @NM00017                                                 01182000
PRNTONLY EQU   @NM00017                                                 01183000
CMDCREAT EQU   @NM00017                                                 01184000
RW67RGHT EQU   LIBCTLS                                                  01185000
RW67LEFT EQU   LIBCTLS                                                  01186000
RW45RGHT EQU   LIBCTLS                                                  01187000
RW45LEFT EQU   LIBCTLS                                                  01188000
RW23RGHT EQU   LIBCTLS                                                  01189000
RW23LEFT EQU   LIBCTLS                                                  01190000
RW01RGHT EQU   LIBCTLS                                                  01191000
RW01LEFT EQU   LIBCTLS                                                  01192000
LOWLIB   EQU   LOWDSS+1                                                 01193000
@NM00016 EQU   LOWFLGS                                                  01194000
LOWRGHT  EQU   LOWFLGS                                                  01195000
LOWLEFT  EQU   LOWFLGS                                                  01196000
LOWRW67  EQU   LOWFLGS                                                  01197000
LOWRW45  EQU   LOWFLGS                                                  01198000
LOWRW23  EQU   LOWFLGS                                                  01199000
LOWRW01  EQU   LOWFLGS                                                  01200000
LOWSPEC  EQU   LOWFLGS                                                  01201000
ALTMSCIN EQU   CPUFLAG2                                                 01202000
@NM00015 EQU   CPUFLAG2                                                 01203000
ALTMSGBF EQU   CPUFLAG2                                                 01204000
@NM00014 EQU   CPUFLAG2                                                 01205000
CPUSPEC  EQU   CPUFLAG2                                                 01206000
CPUMSCIN EQU   CPUFLAG1                                                 01207000
OPJES3   EQU   OPSYSTYP                                                 01208000
OPVS2    EQU   OPSYSTYP                                                 01209000
OPVS1    EQU   OPSYSTYP                                                 01210000
CPUALTFL EQU   CPUFLAG1                                                 01211000
CPUTIGHT EQU   CPUFLAG1                                                 01212000
@NM00013 EQU   CPUFLAG1                                                 01213000
TOMPCPU  EQU   CPU+5                                                    01214000
CPUID    EQU   CPU                                                      01215000
CPUNUM   EQU   CPUASSOC                                                 01216000
SPNRSGNO EQU   PHYSTYPE+1                                               01217000
LGDEVICE EQU   PHYSFLGS                                                 01218000
LOGABOX1 EQU   PHYSFLGS                                                 01219000
PHYSSSID EQU   PHYSFLGS                                                 01220000
PHYSREAL EQU   PHYSFLGS                                                 01221000
PHYSICEB EQU   MERLICEB                                                 01222000
PHYSMERL EQU   MERLICEB                                                 01223000
PHYSDS2  EQU   DSPAIRS                                                  01224000
PABDDD   EQU   PABAADDD                                                 01225000
PABAA    EQU   PABAADDD                                                 01226000
PABZEROS EQU   PABAADDD                                                 01227000
PAB2D    EQU   PABREAL                                                  01228000
PAB2C    EQU   PABREAL                                                  01229000
PAB2B    EQU   PABREAL                                                  01230000
@NM00012 EQU   PABREAL                                                  01231000
PAB1D    EQU   PABREAL                                                  01232000
PAB1C    EQU   PABREAL                                                  01233000
PAB1B    EQU   PABREAL                                                  01234000
PABIMPLR EQU   PABREAL                                                  01235000
PABBERG2 EQU   PABFLAGS                                                 01236000
@NM00011 EQU   PABFLAGS                                                 01237000
PABDSMTL EQU   PABFLAGS                                                 01238000
PABIBERG EQU   PABFLAGS                                                 01239000
@NM00010 EQU   PABFLAGS                                                 01240000
PABVOVIR EQU   PABFLAGS                                                 01241000
PABEXIST EQU   PABFLAGS                                                 01242000
MAPEXIT  EQU   LIB+4                                                    01243000
LIBMAP   EQU   LIB+3                                                    01244000
LIBDSMID EQU   LIB+2                                                    01245000
LIBSIZE  EQU   LIB+1                                                    01246000
@NM00009 EQU   LIBBITS                                                  01247000
LIBSPEC  EQU   LIBBITS                                                  01248000
TODS2    EQU   RSGTODS+1                                                01249000
TODS1    EQU   RSGTODS                                                  01250000
RSGSLICE EQU   RSG+3                                                    01251000
RSGUDEL  EQU   RSG+2                                                    01252000
RSGLDEL  EQU   RSG+1                                                    01253000
@NM00008 EQU   RSG                                                      01254000
RSGABOX1 EQU   RSGABOX                                                  01255000
RSGABOX0 EQU   RSGABOX                                                  01256000
RSGSPEC  EQU   RSG                                                      01257000
SVSYSUT3 EQU   SAVEDDS+32                                               01258000
SVSYSUT2 EQU   SAVEDDS+24                                               01259000
SVSYSUT1 EQU   SAVEDDS+16                                               01260000
SVSYSPCH EQU   SAVEDDS+8                                                01261000
SVSYSIN  EQU   SAVEDDS                                                  01262000
PARMPTR  EQU   INVOKED                                                  01263000
SAVE14   EQU   GENIO+12                                                 01264000
EXLST    EQU   GENIO+8                                                  01265000
@NM00007 EQU   DCBPTR+1                                                 01266000
DCBFLAG  EQU   DCBPTR                                                   01267000
OPENLIST EQU   GENIO                                                    01268000
@NM00006 EQU   MESSAGES+19                                              01269000
NEEDEOJ  EQU   SPECLMSG                                                 01270000
ENDPHASE EQU   SPECLMSG                                                 01271000
@NM00005 EQU   SPECLMSG                                                 01272000
PRNTCARD EQU   SPECLMSG                                                 01273000
@NM00004 EQU   SPECLMSG                                                 01274000
NEED102  EQU   SPECLMSG                                                 01275000
NEED101  EQU   SPECLMSG                                                 01276000
PRINTRC  EQU   MESSAGES+16                                              01277000
TERM     EQU   MESSAGES+12                                              01278000
WARN     EQU   MESSAGES+8                                               01279000
WARNING  EQU   MESSAGES+4                                               01280000
MSGNO    EQU   MESSAGES+2                                               01281000
OUTBUF   EQU   PRINTER+104                                              01282000
LINECT   EQU   PRINTER+102                                              01283000
LINECTR  EQU   PRINTER+100                                              01284000
PAGENO   EQU   PRINTER+96                                               01285000
DCBPRINT EQU   PRINTER                                                  01286000
@NM00003 EQU   READER+206                                               01287000
SCANLEN  EQU   READER+204                                               01288000
SVEODAD  EQU   READER+200                                               01289000
SVSYNAD2 EQU   READER+196                                               01290000
SAVENCOL EQU   READER+192                                               01291000
SAVESCOL EQU   READER+188                                               01292000
INBUF    EQU   READER+100                                               01293000
SSELECT  EQU   PCHBF                                                    01294000
@NM00002 EQU   READER+97                                                01295000
@NM00001 EQU   READFLAG                                                 01296000
LASTPARM EQU   READFLAG                                                 01297000
ENDSCAN  EQU   READFLAG                                                 01298000
PARMBIT  EQU   READFLAG                                                 01299000
KEYBIT   EQU   READFLAG                                                 01300000
READTERM EQU   READFLAG                                                 01301000
READDCB  EQU   READER                                                   01302000
PATCH    EQU   COMTAB                                                   01303000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01304000
@RF00028 EQU   @EL00001                                                 01305000
@RT00036 EQU   @EL00002                                                 01306000
@RF00130 EQU   @EL00004                                                 01307000
@RF00137 EQU   @EL00005                                                 01308000
@ENDDATA EQU   *                                                        01309000
         END   ICGDSB11,(C'PLS1521',0603,76337)                         01310000
