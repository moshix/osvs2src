SWOV    TITLE 'IEWSWOVR - OVERLAY SUPERVISOR, NONRESIDENT MOD. FOR MVS' 00010037
IEWSWOVR CSECT                                                          00020000
*1128                                                            A34604 00023020
*2526091400                                                        I270 00026019
*    096600,097600-097800                                          6854 00032019
*1128096200,096600                                               A35794 00036020
*                                                                       00060000
*1128079400-080200                                               M0677  00070020
*1128091400                                                      M2860  00075020
*                                                                M0195  00077000
*                                                                M0184  00079000
*091120-091500                                                   YM3344 00079401
*D050600-050800,D101000-101200---043404,050900-051000,087620,    YM2817 00079801
*087840,091280-091288,091540,097600-097700,100800-101400,112940, YM2817 00090001
*112980                                                          YM2817 00092001
*107420,107744                                                   YM2976 00094001
*090200-090400,091800-092200                                     YM3839 00094401
*C107000-107800                                                  YM1021 00094502
*A107600                                                         YM1064 00094602
*A447610-447660                                                @ZA05601 00094737
*A050985-6                                                     @ZA14590 00094837
*D095000,A093860                                               @ZA16075 00094937
*A044761-044764,A112941                                        @ZA17987 00095037
*C079740,C0799802                                              @ZA26003 00096037
*044792,091285-091315,107000-108000,113000,113320              @ZA25977 00097037
*042000,043520,112486-112800,                                  @ZA25985 00097537
          EJECT                                                         00098037
*                                                                       00098537
*STATUS CHANGE LEVEL 002                                                00099037
*                                                                       00100000
*FUNCTION/OPERATION:  RECEIVES CONTROL FROM RESIDENT OVERLAY SUPERVISOR 00120000
*   MODULE. EXAMINES STATUS OF REQUESTED SEGMENT. IF NOT IN MAIN        00140000
*   STORAGE, REQUESTED SEGMENT AND SEGMENTS HIGHER IN ITS PATH ARE      00160000
*   LOADED INTO MAIN STORAGE. TABLES ARE MODIFIED TO REFLECT THE STATUS 00180000
*   OF SEGMENTS IN MAIN STORAGE AND SEGMENTS OVERWRITTEN.               00200000
*                                                                       00220000
*ENTRY POINT:  IEWSWOVR                                                 00240037
*              IT IS 'LINKED TO' UNDER THE NAME IEWSZOVR.               00260000
*                                                                       00280000
*INPUT: REGISTERS ARE INITIALIZED AS FOLLOWS:                           00300000
*                                                                       00320000
*        REG 1 - ADDRESS OF AN ENTAB ENTRY.                             00340000
*        REG 2 - POSITIVE VALUE INDICATES SEGWT.                        00360000
*              - ZERO     VALUE INDICATES SEGLD.                        00370037
*              - NEGATIVE VALUE INDICATES CALL OR BRANCH.               00380000
*        REG 6 - ADDRESS OF REGISTER SAVE AREA (EXTENDED SAVE AREA).    00400000
*        REG 8 - BASE OF COMMUNICATION VECTOR.                          00420000
*        REG 9 - NO. OF REQUESTED SEGMENT,RIGHT JUSTIFIED.              00440000
*        REG 10- ZERO                                                   00460000
*        REG 12- ADDRESS OF SEGTAB                                      00480000
*                                                                       00500000
*OUTPUT: N/A                                                            00520000
*                                                                       00540000
*EXTERNAL ROUTINES - IEWFETCH  - PROGRAM FETCH (BLOCK/SCATTER)          00560000
*                  - IEAVLDCK  - VALIDITY CHECK RTN.                    00580000
*                                                                       00640000
*EXITS:- NORMAL  UPON EXIT, REGISTER 15 IS SET TO A RETURN CODE. RETURN 00660000
*                IS TO THE RESIDENT MODULE WHICH INTERPRETS THE RETURN  00680000
*                CODE. REGISTER 15 IS USED TO CONTAIN THE RETURN CODE   00700000
*                ON NORMAL RETURNS, THE CODE IS ZERO.                   00720000
         EJECT                                                 @ZA25977 00730037
*      - ERRORS  THE ERROR RETURN CODES ARE PLACED IN THE LOW ORDER     00740000
*                BYTES OF REGISTER 15.                                  00760000
*                    CODES  - X'12D'    SEGMENT TABLE HAS BEEN CONTAMI- 00780037
*                                       NATED.                          00790037
*                           - X'22D'    VALIDITY TEST INDICATES AN AD-  00800037
*                                       DRESS IN ENTAB OR SEGTAB HAS    00840000
*                                       BEEN DESTROYED AND NOW ADDRESS- 00860000
*                                       ES A LOCATION OUTSIDE OF THE    00880000
*                                       PROBLEM PROGRAM.                00900000
*                           - X'32D'    AN I/O ERROR DETECTED BY        00906037
*                                       PROGRAM FETCH.                  00916037
*                           - X'E2D'    AN INVALID ADDRESS HAS BEEN     00926037
*                                       DETECTED BY PROGRAM FETCH.      00936037
*                           - X'D2D'    AN INVALID RECORD TYPE HAS      00946037
*                                       BEEN DETECTED BY PROGRAM FETCH. 00956037
*                           - X'425'    AN INVALID SEGWT REQUEST MADE   01040037
*                                       BY PROBLEM PROGRAM. INVALID     01060000
*                                       REQUESTS OF THIS TYPE ARE THOSE 01080000
*                                       IN WHICH THE VCON IS RESOLVED   01100000
*                                       TO AN ENTAB AND THE REQUESTED   01120000
*                                       SEGMENT IS EXCLUSIVE.           01140000
*                           - X'42D'    ERROR OCCURRED DURING SEGLD     01145037
*                                       PROCESSING.                     01148037
*                                                                       01155037
*                                                                       01160000
*                                                 *                     01180000
*                                                 *                     01200000
*                                                 *                     01220000
*                                               1 * V(JOE)              01240000
*                                                 *                     01260000
*                                                 *                     01280000
*                                         ******************            01300000
*                                         *                * JOE        01320000
*                                         *                *            01340000
*                                      2  * SEGWT JOE    3 *            01360000
*                                         *                *            01380000
*                                         *                *            01400000
*                                         *                *            01420000
*                                                                       01440000
*                                       IF V(JOE) HAD NOT APPEARED IN   01460000
*                                       THE COMMON SEGMENT, THE VCON    01480000
*                                       FOR JOE IN SEG 2 (GENERATED BY  01500000
*                                       THE SEGWT MACRO) WOULD BE RESO- 01520000
*                                       LVED DIRECTLY TO JOE, ITS HIGH  01540000
*                                       ORDER BYTE WOULD BE ZERO AND    01560000
*                                       IS TREATED AS A NOP. IT APPEARS 01580000
*                                       THE SAME AS A SEGWT TO A HIGHER 01600000
*                                       SEGMENT. THE REQUEST IS INVALID 01620000
*                                       BECAUSE IT ATTEMPTS TO OVERLAY  01640000
*                                       THE CALLING SEGMENT OR ONE      01660000
*                                       HIGHER IN ITS PATH.             01680000
*                                                                       01700000
         EJECT                                                          01720000
*TABLES/WORK AREAS:                                                     01740000
*                                                                       01760000
*  SEGTAB                                                               01780000
*                                                                       01800000
*    '***************'***************'***************'***************'  01820000
*    '               '1              '2              '3              '  01822002
*    '  BIT 0 MUST NOT BE USED. DENOTES ASYNCHRONOUS LOAD(NEGATIVE).    01830002
*    '  BIT 1-0 NOT  '1              '2              '3              '  01840002
*    '          IN   '                                               '  01860000
*    '          TEST '        DCB  ADDRESS                           '  01880000
*    '       -1 IN   '                                               '  01900000
*    '          TEST '                                               '  01920000
*    '  BIT 2-1 SEGLD IN PROCESS.                                       01930002
*    '        0 NO SEGLD IN PROCESS.                                    01932002
*    '  BIT 3-1 SEGLD CONTINUATION PROCESSING.                          01934002
*    '        0 REVERSE OF ABOVE.                                       01936002
*    '  BIT 4-1 SYSTEM DEB.                                             01938002
*    '        0 MAY NOT BE SYSTEM DEB.                                  01938402
*    '***************'***************'***************'***************'  01940000
*    '4              '5              '6              '7              '  01960000
*    '               '        NOTE LIST ADDRESS                      '  01980000
*    '               '                                               '  02000000
*    '***************'***************'***************'***************'  02020000
*    '8 HIGHEST SEG  '9  HIGHEST SEG '10 HIGHEST SEG '11 HIGHEST SEG '  02040000
*    'IN REGION 1    'OF REGION 1 IN 'IN REGION 2    'OF REGION 2 IN '  02060000
*    '               'MAIN STORAGE   '               'MAIN STORAGE   '  02080000
*    '***************'***************'***************'***************'  02100000
*    '12 HIGHEST SEG '13 HIGHEST SEG '14HIGHEST SEG  '15 HIGHEST SEG '  02120000
*    'IN REGION 3    'OF REGION 3 IN 'IN REGION 4    'OF REGION 4 IN '  02140000
*    '               'MAIN STORAGE   '               'MAIN STORAGE   '  02160000
*    '***************'***************'***************'***************'  02180000
*    '16             '17             '18             '19             '  02200000
*    ' IN SUBTASK, PTR TO 1ST SEG TO LOAD. HI BYTE=SEG# BEING LOADED '  02220037
*    '                                                                  02230037
*    '***************'***************'***************'***************'  02240037
*    '20             '21             '22             '23             '  02250037
*    ' ECB FOR MAIN TASK TO WAIT FOR SUBTASK START.                  '  02260037
*    '                                                               '  02320000
*    '***************'***************'***************'***************'  02340000
*ROOT'24             '25             '26             '27             '  02360000
* 1ST' PREVIOUS SEG- '        CALLER FIELD                           '  02380000
* SEG' MENT NUMBER   '                                               '  02400037
*    '               '                                               '  02420000
*    '***************'***************'***************'***************'  02440000
*    '28             '29             '30             '31             '  02460000
* 2ND' PREVIOUS SEG- '        CALLER FIELD                           '  02480000
* SEG' MENT NUMBER   '                                               '  02500037
*    '               '                                               '  02510037
*    '***************'***************'***************'***************'  02520037
* ETC.                                                                  02530037
*                                                                       02540037
*  NOTES ON SEGTAB                                                      02600000
*    1. THE TEST BIT IS SET BY PROGRAM FETCH IF THE PROGRAM ATTRIBUTES  02620000
*       INDICATE THAT THE PROGRAM IS IN TEST                            02640000
*    2. THE DCB ADDRESS POINTS TO THE DCB USED TO LOAD THE ROOT. IT IS  02660000
*       USED EACH TIME A SEGMENT IS LOADED. THE ADDRESS IS INITIALIZED  02680000
*       BY PROGRAM FETCH.                                               02700000
*    3. THE NOTE LIST IS READ BY PROGRAM FETCH AND THE ADDRESS IN       02720000
*       SEGTAB IS INITIALIZED BY PROGRAM FETCH.                         02740000
*    4. THE PREVIOUS SEGMENT FIELD CONTAINS THE NUMBER OF THE SEGMENT   02760000
*       IMMEDIATELY ABOVE THIS SEGMENT IN THE OVERLAY TREE.             02780000
*    5. THE CALLER FIELD IS USED TO RECORD THE CURRENT STATUS OF A      02800000
*       SEGMENT. THE LOW ORDER 2 BITS ARE USED.                         02820000
*                                                                       02840000
*                     00 - IN MAIN STORAGE DUE TO CALL/BRANCH           02860037
*                     10 - IN MAIN STORAGE, NO CALLER CHAIN             02870037
*                     01 - NOT IN MAIN STORAGE,BUT IS BEING LOADED      02900000
*                          OR MUST BE LOADED                            02920000
*                     11 - NOT IN MAIN STORAGE,NOT TO BE LOADED         02940000
*       THE 00 INDICATES THAT THE REMAINDER OF THE FIELD CONTAINS THE   02960000
*       ADDRESS OF AN ENTAB ENTRY WHICH WAS MODIFIED WHEN THIS SEGMENT  02980000
*       WAS BROUGHT INTO MAIN STORAGE.                                  03000000
*                                                                       03020000
*                                                                       03040000
*ENTAB                                                                  03060000
*                                                                       03080000
*                                                                       03100000
*  ALL ENTRIES BUT THE LAST                                             03120000
*                                                                       03140000
*  '********************'********************'********************'     03160000
*  '                    '                    ' SEG X              '     03180000
*  ' BC  15,DIS(15,0)   ' ADDRESS CONSTANT   ' NO  X PREVIOUS     '     03200000
*  '                    '                    ' OF  X CALLER       '     03220000
*  '                    ' LOCATION OF ENTRY  ' REQ.X FIELD        '     03240000
*  '                    ' POINT IN REQUESTED ' SEG X              '     03260000
*  '                    ' SEGMENT            '     X              '     03280000
*  '********************'********************'********************'     03300000
*  '     4 BYTES        '     4 BYTES        ' 1   '   3 BYTES    '     03320000
*                                             BYTE                      03340000
*                                                                       03360000
*                                                                       03380000
*   DIS  IS THE DISPLACEMENT BETWEEN THE BEGINNING OF THIS LINE AND THE 03400000
*   LAST LINE IN THE TABLE.                                             03420000
*                                                                       03440000
*                                                                       03460000
*  LAST ENTRY                                                           03480000
*                                                                       03500000
*  '********************'********************'*******************'      03520000
*  '         *          '         *          'SEG  *             '      03540000
*  '  SVC 45 *  L 15,4(0,15)      *BCR 15,15 'NO OF* ADDRESS OF  '      03560000
*  '         *                    *          'THIS *   SEGTAB    '      03580000
*  '         *                    *          'ENTAB*             '      03600000
*  '********************'********************'*******************'      03620000
*  '  2 BYTES'      4 BYTES       '  2 BYTES ' 1   '   3 BYTES   '      03640000
*                                             BYTE                      03660000
*ATTRIBUTES:   READ ONLY, REENTRANT, PRIVILEGED, ENABLED, KEY 0         03680037
*              ALSO USES USER (CALLER) KEY MOST OF THE TIME.   @ZA25977 03682037
         EJECT                                                          03684037
*  EQUATES FOR SVRB SAVE AREA                                  @ZA25977 03688037
*                                                                       03692037
SAVEAREA EQU   96                                                       03696037
SAVEWD1  EQU   SAVEAREA                                                 03700037
SAVEWD2  EQU   SAVEAREA+4                                               03704037
IEWSUK   EQU   SAVEAREA+44         USER KEY                    @ZA25977 03708037
IEWSNL   EQU   IEWSUK              NOTE LIST ADDRESS           @ZA25985 03712037
IEWSNLA  EQU   IEWSNL+1            NOTE LIST ADDRESS           @ZA25985 03715037
*                                                                       03718037
*  EQUATES FOR ENTENT LIST AND NOTE LIST                       @ZA25985 03721037
*                                                                       03724037
XTLNL    EQU   16                  NOTE LIST SEGMENT           @ZA25985 03727037
XTLRFA   EQU   17                  RELOCATION FACTOR           @ZA25985 03730037
*                                                                       03733037
*  REGISTER EQUATES                                                     03736037
*                                                                       03748037
OVRR0    EQU   0                                                        03780000
OVRR1    EQU   1                                                        03800000
OVRR2    EQU   2                                                        03820000
OVRR3    EQU   3                                                        03840000
OVRR4    EQU   4                                                        03860000
OVRR5    EQU   5                                                        03880000
OVRR6    EQU   6                                                        03900000
OVRR7    EQU   7                                                        03920000
OVRR8    EQU   8                                                        03940000
OVRR9    EQU   9                                                        03960000
OVRR10   EQU   10                                                       03980000
OVRBRG   EQU   11                                                       04000000
OVRR11   EQU   11                                                YM1021 04010002
OVRR12   EQU   12                                                       04020000
OVRR13   EQU   13                                                       04040000
OVRR14   EQU   14                                                       04060000
OVRR15   EQU   15                                                       04080000
*                                                                       04100037
*  EQUATES FOR SEGTAB                                                   04110037
*                                                                       04120037
DCBADD   EQU   0                   ADDR OF DCB FOR LOADING              04130037
FLAGBYTE EQU   0                   PROCESS FLAGS                        04140037
SEGFLG   EQU   X'20'               SUBTASK IS DOING SEGLD               04160037
CONTFLG  EQU   X'10'               CONTINUE AFTER SUBTASK CLEANUP       04170037
NOTEADD  EQU   4                   POINTER TO NOTE LIST        @ZA25985 04180037
OVRAPTR  EQU   16                  ADDR OF SEG FOR SUBTASK TO LOAD      04190037
OVRECB   EQU   20                  ECB FOR SUBTASK WATCHING             04200037
PRFXSIZ  EQU   20                  SEGTAB PREFIX SIZE                   04210037
*                                                                       04220037
*  EQUATES FOR ENTAB                                                    04230037
*                                                                       04236037
SEGNO    EQU   8                   NUMBER OF SEGMENT TO LOAD            04242037
PCALL    EQU   8                   NUM. OF SEGMENT CONTAINING ENTAB     04248037
         EJECT                                                 @ZA25977 04254037
*  EQUATES FOR FETCH WORK AREA                                          04270037
*                                                                       04280037
FWASTPSP EQU   234            STEP ORIENTED SP # OF FETCH W.A.   YM2817 04340401
FWASP    EQU   233            SUBPOOL NUMBER OF FETCH WORK AREA         04342000
FWALN    EQU   1500           SIZE OF FETCH WORK AREA                   04344000
ASYNCECB EQU   8              ECB TO POST FOR SUBTASK START      YM3839 04344401
SAVLN    EQU   64             SIZE OF SAVE AREA FOR ASYNC LOAD          04346000
LSTLN    EQU   60             SIZE OF PARM LIST FOR ASYNC LOAD   ZA0134 04348002
SAVEREGS EQU   FWALN          OFFSET TO SAVE AREA                       04350000
STARTECB EQU   FWALN+SAVLN+LSTLN    OFFSET TO START ECB          YM3839 04352401
ATTLIST  EQU   FWALN+SAVLN    OFFSET TO PARM LIST AREA                  04354000
*                                                                       04354437
ZERO     EQU   0              OFFSET OF ZERO                     ZA1407 04354537
XZERO    EQU   X'00'          BYTE OF ZEROES                     ZA1407 04354637
ADDR     EQU   B'0111'        MASK FOR CLM, STM INSTS          @ZA25985 04354737
         EJECT                                                          04355202
CVT      DSECT                                                          04356002
         CVT   SYS=VMS                                                  04360000
         EJECT                                                          04380000
IEWSWOVR CSECT                                                          04400000
*                                                                       04420000
*  ENTERED IN KEY ZERO FROM RESIDENT ROUTINE                   @ZA25977 04425037
*  ENTERED IN USER KEY FOR SUBTASK                             @ZA25977 04430037
*                                                                       04435037
         BALR  OVRBRG,0      SET UP BASE REGISTER.                      04440000
         USING *,OVRBRG                                                 04460000
         SPACE                                                          04462002
         B     SWOVR001                 BR AROUND MODULE ID      Y02081 04464002
         DC    C'IEWSZOVR'              MODULE NAME              Y02081 04466037
         DC    C'OS/VS2'                SYSTEM NAME              Y02081 04466837
         DC    C'&SYSDATE'              DATE OF LAST UPDATE      Y02081 04467637
         SPACE                                                          04469237
*    TEST IF ENTRY IS FROM NON-RESIDENT OVERLAY SUPERVISOR OR FROM      04470037
*      ATTACH ISSUED BY THIS MODULE FOR ASYNCHRONOUS LOAD(SEGLD)        04470837
         DC    0H'0'                    PAD TO HALFWORD        @ZA25977 04471637
SWOVR001 CLI   0(1),X'47'               R1=0 IS ATTACH           YM3839 04474002
         BNE   IEWSEGLD                 GO IF ATTACH             YM3839 04476001
         L     OVRR7,4(OVRR1)           GET ENTAB POINTER      @ZA17987 04476837
         L     OVRR0,IEWSFM             LENGTH FOR FREEMAIN    @ZA17987 04477637
         FREEMAIN R,LV=(0),A=(1)        DO FREEMAIN            @ZA17987 04478437
         LR    OVRR1,OVRR7              ENTAB ADDRESS TO REG 1 @ZA17987 04479237
*                                                                       04480000
*  VALIDITY CHECK ENTAB ADDRESS IN REGISTER 7                  @ZA05601 04482037
*                                                                       04484037
         LA    OVRR7,0(OVRR7)    CLEAR HIGH BYTE               @ZA05601 04488037
         BAL   OVRR15,OVRL83     VAL CHK THE ADDRESS           @ZA05601 04490037
*                                VAL. RTN ENTERS USER KEY      @ZA25977 04491037
*                                                                       04492037
* DETERMINE THE REGION CONTAINING NSEG AND SAVE IT.                     04500000
*                                                                       04520000
         MODESET EXTKEY=SUPR                                   @ZA25977 04540037
         STC   OVRR9,SAVEWD2(OVRR6)     SAVE NSEG                       04580037
         BAL   OVRR15,OVRL88            GET REGION OF NSEG.             04620037
*                                       VAL RTN GETS USER KEY  @ZA25977 04630037
         MODESET EXTKEY=SUPR                                   @ZA25977 04634037
         ST    OVRR5,SAVEWD1(OVRR6)     SAVE REGION PTR                 04638037
         MODESET KEYADDR=IEWSUK(,OVRR6),WORKREG=4     USER KEY @ZA25977 04642037
         LR    OVRR4,OVRR5                                              04650037
         EJECT                                                 @ZA25985 04660037
*                                                                       04670037
*  VALIDATE NOTE LIST ADDRESS BY SEARCHING CDE CHAIN           @ZA25985 04680037
*                                                                       04690037
         USING CVT,OVRR15                                      @ZA25985 04700037
         L     OVRR15,CVTPTR(OVRR0) ADDRESS OF CVT             @ZA25985 04710037
         L     OVRR15,CVTTCBP      ADDR OF TCB PTRS            @ZA25985 04720037
         L     OVRR15,4(OVRR15)    ADDR OF CURRENT TCB         @ZA25985 04730037
         USING TCB,OVRR15                                      @ZA25985 04740037
         L     OVRR15,TCBJSTCB     STEP TO JOB STEP TCB        @ZA25985 04750037
         L     OVRR15,TCBJPQ       PICK UP CDE CHAIN           @ZA25985 04760037
         USING CDENTRY,OVRR15      TALKING TO CDE              @ZA25985 04770037
*  FIND OVERLAY MODULES                                        @ZA25985 04780037
OVRL03   TM    CDATTR,CDMIN        IF MINOR CDE, NO XL/NL      @ZA25985 04790037
         BO    OVRL04              SKIP IT                     @ZA25985 04800037
         TM    CDATTR2,CDOLY       IF NOT OVERLAY,             @ZA25985 04810037
         BNO   OVRL04              SKIP IT TOO                 @ZA25985 04820037
*  PICK EXTENT LIST ADDRESS, DEVELOP NOTE LIST ADDRESS         @ZA25985 04830037
         L     OVRR13,CDXLMJP      POINT TO XL/NL              @ZA25985 04840037
         LA    OVRR13,XTLNL(,OVRR13) POINT TO NL PART OF XL    @ZA25985 04850037
         C     OVRR13,NOTEADD(,OVRR12) IS THIS THE ONE WANTED  @ZA25985 04860037
         BE    OVRL05              YES, GO TEST CONSISTENCY    @ZA25985 04870037
*  NEXT  CDE                                                   @ZA25985 04880037
OVRL04   ICM   OVRR15,ADDR,CDCHAIN+1  STEP TO NEXT             @ZA25985 04890037
         BNZ   OVRL03              BACK IF ANOTHER EXISTS      @ZA25985 04900037
         B     ABND22D             END OF CHAIN, ABEND         @ZA25985 04910037
         DROP  OVRR15              NO MORE CDE                 @ZA25985 04920037
*  NOTE  LIST FOUND. IT MUST POINT BACK TO SEGTAB              @ZA25985 04930037
OVRL05   CLM   OVRR12,ADDR,XTLRFA-XTLNL(OVRR13) DOES IT?       @ZA25985 04940037
         BNE   ABND22D             NO, IT IS A FAKE NL ADDR    @ZA25985 04950037
*  SAVE  VERIFIED ADDRESS FOR FETCH CALLS                      @ZA25985 04960037
         MODESET EXTKEY=SUPR       TO KEY 0                    @ZA25977 04970037
         STCM  OVRR13,ADDR,IEWSNLA(OVRR6)  STUFF ADDRESS       @ZA25985 04980037
*                                                                       05034437
* DETERMINE ADDRESS OF SEGTAB LINE FOR NSEG                             05034537
*                                                                       05034637
         LR    OVRR13,OVRR9        MOVE SEGNO FOR ADDRESS COMPUTE  RTN. 05034737
         BAL   OVRR15,OVRL80  COMPUTE ADDRESS AND VALIDITY CHECK IT.    05034837
*                             VAL. RTN ENTERS USER KEY         @ZA25977 05034937
         EJECT                                                          05035037
* NOW DECIDE JUST HOW TO HANDLE THE REQUEST, DEPENDING                  05035137
* ON WHAT IS ALREADY LOADED AND WHAT KIND OF REQUEST WAS MADE.          05035237
*                                                                       05035337
*  IF REQUESTED SEGMENT IS ALREADY LOADED, GO EXIT                      05035437
*  IF REQUESTED SEGMENT IS BEING LOADED AND THIS IS SEGLD, GO EXIT      05035537
*  IF REQ. SEG. IS BEING LOADED AND THIS ISN'T SEGLD, WAIT, THEN EXIT   05035637
*  IF LOAD NOT IN PROGRESS, GO START SOMETHING                          05035737
*  IF LOAD IN PROGRESS, CLEAN IT UP, THEN START SOMETHING               05035837
*                                                                       05035937
         LR    OVRR0,OVRR5              SAVE SEGTAB ENT. ADDR FOR NSEG  05036037
         TM    3(OVRR5),X'01'           IS SEGMENT IN MAIN STORAGE.     05036137
         BZ    OVRL60                   BRANCH IF YES, GO EXIT          05036237
         TM    3(OVRR5),X'02'           IS IT BEING LOADED.             05037637
         BO    OVRL10                   BRANCH IF NO.                   05037737
         LTR   OVRR2,OVRR2              IS THIS A SEGLD REQUEST.        05037837
         BZ    OVRL68                   BRANCH IF YES, GO EXIT          05037937
         B     OVRL11                   NO, GO WAIT, THEN EXIT          05038037
OVRL10   TM    FLAGBYTE(OVRR12),SEGFLG  IS A SEGLD IN PROGRESS.         05038137
         BZ    OVRL15                   BRANCH ON NO.                   05038237
         OI    FLAGBYTE(OVRR12),CONTFLG TURN ON CONTINUE FLAG.          05038337
OVRL11   MODESET EXTKEY=SUPR            TO KEY 0               @ZA25977 05038437
         STM   OVRR0,OVRR1,SAVEWD2(OVRR6)                      @ZA25977 05038537
         MODESET KEYADDR=IEWSUK(,OVRR6),WORKREG=1     USER KEY @ZA25977 05038637
         LA    OVRR1,OVRECB(OVRR12)     ADDRESS OF ECB                  05038737
         WAIT  1,ECB=(1)                                                05038837
         MVI   OVRECB(OVRR12),X'00'     CLEAR ECB                       05038937
*                                                                YM2817 05039037
*  THE PREVIOUSLY ATTACHED SUB-TASK IS DETACHED AT THIS POINT.   YM2817 05039137
*                                                                YM2817 05039237
         USING CVT,OVRR15                                        YM2817 05039337
         L     OVRR15,CVTPTR(OVRR0)     ADDRESS OF CVT           YM2817 05039437
         L     OVRR15,CVTTCBP           ADDR OF NEW/OLD TCB PTRS YM2817 05039537
         L     OVRR15,4(OVRR15)         ADDR OF CURRENT TCB      YM2817 05039637
         USING TCB,OVRR15                                        YM2817 05039737
         MODESET EXTKEY=SUPR            NEEDED FOR DETACH      @ZA25977 05039837
         DETACH TCBLTC                  DETACH THE SUB-TASK TCB  YM2817 05048837
         DROP  OVRR15                                            YM2817 05057837
         MODESET KEYADDR=IEWSUK(,OVRR6),WORKREG=1     USER KEY @ZA25977 05066837
         LM    OVRR0,OVRR1,SAVEWD2(OVRR6)                               05075837
         L     OVRR7,OVRECB(OVRR12)     R7=AB CODE FROM SUBTASK  YM2817 05096001
         LTR   OVRR7,OVRR7              Q. RETURN CODE ZERO?     YM2817 05097001
         BZ    OVRL115                  IF ZERO CONTINUE         YM2817 05098437
         LA    OVRR7,4                  CHANGE ERROR CODE TO 4 @ZA14590 05098937
         B     OVRL71                   GO TO ABEND PROC       @ZA14590 05099437
OVRL115  XI    FLAGBYTE(OVRR12),SEGFLG  TURN SEGLD INDICATOR OFF        05100001
         L     OVRR3,OVRAPTR(OVRR12)    PTR TO LOWEST SEG LOADED.       05120000
OVRL12   MVI   3(OVRR3),X'02'           MARK IT IN MAIN STORAGE.        05140037
         IC    OVRR9,0(OVRR3)           GET ITS PSEG.                   05150037
         SLL   OVRR9,2                                                  05160037
         LA    OVRR3,PRFXSIZ(OVRR12,OVRR9)   ADDRESS OF SEGTAB LINE.    05170037
         TM    3(OVRR3),X'01'           WAS IT MARKED TO BE LOADED.     05180037
         BO    OVRL12                   BRANCH IF YES.                  05190037
*  SEE IF THERE IS ANY MORE WORK TO DO                                  05198037
         TM    FLAGBYTE(OVRR12),CONTFLG IS CONTINUE FLAG ON.            05205037
         BZ    OVRL58                   NO, GO DO EXIT PROCESS          05212037
         SR    OVRR9,OVRR9              CLEAR REGISTER           A34604 05219037
         IC    OVRR9,SEGNO(OVRR1)       GET SEGNO FROM ENTAB.           05226037
         XI    FLAGBYTE(OVRR12),CONTFLG TURN OFF CONTINUE FLAG.         05233037
         EJECT                                                 @ZA25977 05240037
*                                                                       05247037
*  SET UP TO LOAD NEW SEGMENT                                           05254037
*                                                                       05261037
*  SEGMENT NUMBERS ARE THE BASIS FOR THE FOLLOWING ANALYSIS.            05268037
*  THE FOLLOWING ABBREVIATIONS ARE USED:                                05269037
*     NSEG  NEW (TARGET) SEGMENT. GOTTEN FROM ENTAB ENTRY               05270037
*     OSEG  OLD SEGMENT, PREVIOUSLY LOADED. FROM SEGTAB REGION FIELDS   05271037
*     RSEG  REQUESTING SEGMENT = CALLER'S SEGMENT, FROM V-CON HI BYTE   05272037
*     PSEG  PARENT SEGMENT, GOTTEN FROM SEGTAB SEGMENT SLOT             05273037
*                                                                       05274037
OVRL15   LTR   OVRR2,OVRR2              IS REQUEST A CALL OR BRANCH.    05275037
         BM    OVRL25                   YES                             05276037
*  DETERMINE THAT CALLER (RSEG) IS NOT OVERLAID BY NSEG                 05282037
*  I. E., RSEG MUST BE IN PATH OF NSEG, OR IN DIFFENT REGIONS           05289037
         MODESET EXTKEY=SUPR            GO TO KEY 0            @ZA25977 05296037
         ST    OVRR1,SAVEAREA+4(OVRR6)  PUT RSEG IN SAVE AREA           05297037
         MODESET KEYADDR=IEWSUK(,OVRR6),WORKREG=3              @ZA25977 05298037
         LR    OVRR3,OVRR9              USE NSEG AS LOOP LIMIT.         05303037
OVRL18   NC    0(1,OVRR5),0(OVRR5)      IS PSEG ZERO.                   05310037
         BZ    OVRL20                   YES, POSSIBLY ERROR, CONTINUE   05317037
         CLC   0(1,OVRR5),SAVEAREA+4(OVRR6) IS RSEG IN NSEG'S CHAIN     05324037
         BE    OVRL25                   YES, CALL IS LEGAL, GO DO IT    05364037
         SR    OVRR13,OVRR13                                            05380037
         IC    OVRR13,0(OVRR5)          GET PSEG.                       05390037
         BAL   OVRR15,OVRL80            GET SEGTAB LINE ADDRESS.        05400037
*                                       VAL. RTN SETS USER KEY @ZA25977 05405037
         BCT   OVRR3,OVRL18             TRY AGAIN                       05410037
         B     OVRL90                   ERROR, BAD SEGTAB/ENTAB/VCON    05420037
*  ALLOW SEGLD/SEGWT IF DIFFERENT REGIONS                               05428037
OVRL20   BAL   OVRR15,OVRL88            GET REGION OF RSEG.             05438037
*                                       VAL. RTN SETS USER KEY @ZA25977 05441037
         CL    OVRR5,SAVEAREA(OVRR6)    ARE REGIONS THE SAME.           05448037
         BNE   OVRL25                   BRANCH IF NO, ACCEPT REQUEST    05458037
*  IGNORE SEGLD ERROR; WILL BE CAUGHT @ SEGWT IF STILL BAD.             05468037
         LTR   OVRR2,OVRR2              IS REQUEST A SEGLD.             05478037
         BZ    OVRL68                   YES, IGNORE ERROR, DON'T LOAD   05488037
         LA    OVRR15,1061              ERROR CODE X'425'               05498037
         BR    OVRR14                   RETURN WITH ERROR CODE.         05508037
*                                                                       05820000
*  DETERMINE SEGMENTS TO BE LOADED AND MARK THEM. DETERMINE SEGMENTS    05840000
*    BEING OVERWRITTEN AND RESET TABLES.                                05860000
*                                                                       05880000
OVRL25   IC    OVRR10,1(OVRR4)          GET OSEG FOR THIS REGION.       05900037
         STC   OVRR9,1(OVRR4)           STORE NEW OSEG.                 05910037
OVRL30   CLR   OVRR9,OVRR10             COMPARE NSEG TO OSEG.           05920037
         BL    OVRL40                   OSEG GT NSEG, GO MARK DELETES   05930037
         BE    OVRL50                   OSEG EQ NSEG, GO DO LOADING     05936037
*                                                                       05950037
*   THIS SECTION MARKS SEGMENTS TO BE LOADED.                           05960037
*                                                                       05970037
         LR    OVRR13,OVRR9             SET ENTRY FOR ADDR CHECK RTN.   05980037
         BAL   OVRR15,OVRL80            COMPUTE ADDRESS AND CHECK IT.   05990037
*                                       VAL. RTN SETS USER KEY @ZA25977 05995037
         MVI   3(OVRR5),X'01'           SET ON LOAD INDICATOR           06000037
*  NOW TAKE NSEG'S PARENT, LOAD IT IF NOT IN ALREADY.                   06010037
         IC    OVRR9,0(OVRR5)           SET NSEG EQ TO PSEG(NSEG).      06020037
         B     OVRL30                   GO TO NSEG/OSEG COMPARE         06030037
*                                                                       06120000
*   THIS SECTION RESETS TABLES FOR SEGMENTS BEING OVERWRITTEN.          06140000
*                                                                       06160000
OVRL40   LR    OVRR13,OVRR10  SET OSEG IN OVRR13 FOR ADDRESS COMPUTE.   06180000
         BAL   OVRR15,OVRL80  COMPUTE ADDRESS AND CHECK IT.             06200000
*                             VAL. RTN ENTERS USER KEY         @ZA25977 06210037
         L     OVRR7,0(OVRR5) SAVE CALLER FIELD.                        06220037
         LR    OVRR3,OVRR5    SAVE PTR TO CURRENT SEGTAB ENTRY.         06240037
*                                                                       06260037
** DONT PUT INSTRUCTIONS IN THIS BOX BELOW TM WHICH CHANGE THE CC ***** 06280037
         TM    3(OVRR5),X'03' DOES CALLER FIELD CONTAIN AN ADDRESS.   * 06300037
         MVI   3(OVRR5),X'03' SET NOT LOADED INDICATOR.               * 06320037
         BZ    OVRL43         BRANCH IF CALLER FIELD CONTAINED AN ADDR* 06340037
*********************************************************************** 06350037
*                                                                       06360037
*  NOW TAKE OSEG'S PARENT, TREAT AS WAS OSEG.                           06370037
OVRL41   IC    OVRR10,0(OVRR3)  SET OSEG EQ TO PSEG OF OSEG.            06420037
         B     OVRL30           GO BACK FOR NEXT NSEG-OSEG COMPARISON.  06440037
*                                                                       06460037
*  RESET ENTAB ENTRIES USING CHAIN WHICH STARTS IN SEGTAB CALLER FIELD. 06480037
*                                                                       06500037
OVRL43   LA    OVRR7,0(OVRR7)   CLEAR OUT HIGH ORDER BYTE.              06520037
         BAL   OVRR15,OVRL83    VALIDITY TEST THE ADDRESS.              06540037
*                               VAL. RTN ENTERS USER KEY       @ZA25977 06550037
         XI    3(OVRR5),X'02'   RESET THIS ENTAB ENTRY.                 06560037
         L     OVRR4,PCALL(OVRR5)  GET PCALLER FIELD OF THIS ENTAB LINE 06580037
         LA    OVRR4,0(OVRR4)   REMOVE THE SEGMENT NUMBER.              06600037
         LTR   OVRR4,OVRR4      TEST FOR ZERO = END OF CHAIN            06620037
         BZ    OVRL41           BRANCH IF PCALLER FIELD WAS ZERO.       06640037
         XC    PCALL+1(3,OVRR5),PCALL+1(OVRR5)    SET TO ZERO.          06660037
         LR    OVRR7,OVRR4                                              06680037
         B     OVRL43                                                   06700037
         EJECT                                                 @ZA25977 06710037
*                                                                       06720037
*   THIS SECTION RESCANS SEGTAB AND LOADS SEGMENTS MARKED TO BE LOADED. 06740037
*                                                                       06760037
OVRL50   LR    OVRR13,OVRR8        MOVE BASE ADDRESS OF COMM. VECTOR.   06780037
         LR    OVRR8,OVRR0         SAVE REGS 0,1 IN 8,10.               06800037
         LR    OVRR10,OVRR1        MOVE POINTER TO ENTAB                06820037
         LTR   OVRR15,OVRR2        TEST FOR SEGLD; SAVE R2     @ZA25985 06840037
         BZ    OVLALD01            YES, GO USE ASYNCHRONOUS SUBTASK     06850037
         L     OVRR0,OVRLMNST      MAIN STORAGE FOR FETCH (SP 233).     06880037
         GETMAIN R,LV=(0)                                               06900037
         LR    OVRR3,OVRR1         SHIFT TO FETCH'S REG.                06920037
         IC    OVRR9,SEGNO(OVRR10) PICK UP NSEG FROM ENTAB              06940037
         EJECT                                                 @ZA25977 06960037
*  START OF LOOP TO LOAD EACH SEGMENT                                   06980037
OVRL52   SLL   OVRR9,2             MULITPLY BY 4.                       07000037
         LA    OVRR1,PRFXSIZ(OVRR12,OVRR9)  PTR TO SEGMENT SLOT         07020037
         TM    3(OVRR1),X'01'      MUST SEG BE LOADED.                  07040037
         BNO   OVRL57              BRANCH ON NO.                        07060037
         L     OVRR7,DCBADD(,OVRR12) PTR TO DCB FOR LOAD       @ZA25985 07080037
         MODESET EXTKEY=SUPR       GO TO KEY 0 FOR STM         @ZA25977 07090037
         STM   OVRR8,OVRR1,SAVEWD2(OVRR6) SAVE REGS OVER FETCH @ZA25985 07100037
         L     OVRR8,IEWSNL(,OVRR6) LOAD VERIFIED NOTE LIST    @ZA25985 07110037
*                                                                       07200000
*  ENTER PROGRAM FETCH TO LOAD A SEGMENT. REGISTER SETTINGS -           07220000
*                                                                       07240000
*                        REG 3 - ADDRESS OF WORK AREA                   07260000
*                        REG 7 - ADDRESS OF DCB                         07280000
*                        REG 8 - ADDRESS OF NOTE LIST                   07300000
*                        REG 9 - SEGMENT NO. MULTIPLIED BY 4.           07320000
*  ALL REGISTERS ARE VOLATILE IN PROGRAM FETCH EXCEPT REGS 3 AND  6.    07340037
*  FETCH RETURN CODE IN REG 15: IF NON-ZERO, AN ERROR HAS OCCURED.      07370037
*                                                                       07400037
         USING CVT,OVRR13                                               07460037
         L     OVRR15,CVTFBOSV                                          07480037
         DROP  OVRR13                                                   07490037
         BALR  OVRR14,OVRR15       *** GO TO FETCH ***                  07500037
         EJECT                                                          07510037
         MODESET KEYADDR=IEWSUK(,OVRR6),WORKREG=7              @ZA25977 07540037
*                                                                       07580000
*** DONT PUT INSTRUCTIONS IN THIS BOX WHICH CHANGE THE CC ************* 07600000
*                                                                       07620000
         LTR   OVRR7,OVRR15        TEST RETURN CODE.                    07640000
         LM    OVRR8,OVRR1,SAVEWD2(OVRR6)    RESTORE REGS      @ZA25985 07660037
         BNZ   OVRL70              BRANCH IF ERROR IN LOADING.        * 07680037
*********************************************************************** 07690037
*                                                                       07700037
         MVI   3(OVRR1),X'02'      SET ON LOADED INDIC                  07710037
         SR    OVRR9,OVRR9         CLEAR                                07720037
         IC    OVRR9,0(OVRR1)      GET NEXT SEGMENT IN PATH.            07730037
         B     OVRL52                                                   07740037
*                                                                       07750037
*  ALL NEEDED SEGMENTS ARE NOW LOADED.                                  07752037
*                                                                       07754037
OVRL57   LR    OVRR1,OVRR3         SET UP FOR FREEMAIN.                 07760037
         L     OVRR0,OVRLMNST      MAIN STORAGE FOR FETCH.       YM1021 07770037
         FREEMAIN R,LV=(0),A=(1)                                        07780037
         LR    OVRR0,OVRR8         RESET REG 0.                         07790037
         LR    OVRR1,OVRR10        RESET  REG 1                         07860000
         LR    OVRR2,OVRR15        RESTORE SAVED REG 2         @ZA25985 07880037
         EJECT                                                          07887037
*                                                                       07894037
*   TERMINATION SECTION.                                                07901037
*                                                                       07908037
         USING CVT,OVRR13                                        M0677  07926020
OVRL58   L     OVRR13,CVTPTR(0)    LOAD CVT LOCATION             M0677  07932037
         L     OVRR13,CVTTCBP      GET LOC OF CURRENT TCB        M0677  07940037
         L     OVRR13,4(OVRR13)             *         *          M0677  07948037
         DROP  OVRR13                                            M0677  07956037
         USING TCB,OVRR13                                        YM2817 07964037
         TM    TCBABF,TCBTCP       BR IF -TEST- NOT RUNNING      YM2817 07972037
         DROP  OVRR13                                            YM2817 07980037
         BZ    OVRL60                       *         *          M0677  07988037
         LR    OVRR13,OVRR1        SAVE REG 1 CONTENTS         @ZA26003 07996037
         SR    OVRR1,OVRR1         ZERO REG1 FOR SVC ROUTINE     M0677  08004037
         SVC   61                  ISSUE SVC 61 -- TTSAV         M0677  08020037
         LR    OVRR1,OVRR13        RESTORE REG 1 CONTENTS      @ZA26003 08028037
*                                                                       08048000
*  IF REQUEST WAS A CALL OR BRANCH AND                                  08140000
*  IF THE 'FROM' AND 'TO' SEGMENT ARE IN THE SAME REGION OR IF THE      08160000
*     REQUEST IS THRU THE ENTAB IN THE ROOT SEGMENT                     08180000
*  THE ENTAB ENTRY IS MODIFIED SO THAT SUBSEQUENT BRANCHES TO THAT      08200000
*     ENTRY WILL BYPASS THE SVC 45 AND CONTROL WILL PASS DIRECTLY TO    08220000
*     THE CALLED SEGMENT.                                               08240000
*                                                                       08260000
OVRL60   LTR   OVRR2,OVRR2           IS THE REQUEST A SEGWT.            08280037
         BP    OVRL68                BRANCH IF YES, EXIT                08290037
         MODESET EXTKEY=SUPR         GET TO KEY 0              @ZA25977 08310037
         ST    OVRR12,SAVEWD2(OVRR6) SEGNO OF ENTAB                     08320037
         MODESET KEYADDR=IEWSUK(,OVRR6),WORKREG=5 GET USER KEY @ZA25977 08330037
         CLI   SAVEWD2(OVRR6),X'01'  IS REQUEST FROM ROOT ENTAB.        08340037
         BE    OVRL63                YES, GO SET ENTAB                  08350037
         BAL   OVRR15,OVRL88         GET REGION OF ENTAB.               08360037
*                                    VAL. RTN GETS USER KEY    @ZA25977 08365037
         CL    OVRR5,SAVEWD1(OVRR6)  COMPARE REGION PTRS.               08370037
         BNE   OVRL68                GO IF NOT EQUAL                    08380037
*                                                                       08440000
*   THIS SECTION RESETS ENTAB ENTRY FOR REQUESTED SEGMENT AND UPDATES   08460000
*    SEGTAB, SUCH THAT NEXT USE OF ENTAB BRANCHES DIRECT.               08480037
*                                                                       08500000
OVRL63   LR    OVRR5,OVRR0           GET ADDRESS OF SEGTAB ENTRY.       08520037
         TM    3(OVRR5),X'03'        DOES IT CONTAIN AN ADDRESS.        08530037
         BNZ   OVRL65                BRANCH IF NO.                      08540037
         MVC   9(3,OVRR1),1(OVRR5)   MOVE ADDR TO PCALLER FLD           08550037
OVRL65   IC    OVRR4,0(OVRR5)        SAVE NSEG FIELD.                   08560037
         ST    OVRR1,0(OVRR5) STORE ADDRESS OF ENTAB IN CALLER FIELD.   08567037
         STC   OVRR4,0(OVRR5)        RESTORE NSEG FIELD.                08574037
         XI    3(OVRR1),X'02'        INCREMENT ENTAB BRANCH.            08590037
         EJECT                                                          08595037
*                                                                       08600037
*        RETURN                                                         08610037
*                                                                       08620037
OVRL68   SR    OVRR15,OVRR15         SET ERROR CODE TO NORMAL RETURN.   08630037
         BR    OVRR14                RETURN...........                  08640037
         SPACE 10                                              @ZA25977 08650037
OVRL70   EQU   *                                                 YM2817 08660037
         LA    15,15                                               AAAA 08670037
         CR    OVRR7,15              CHECK FOR RETURN CODE OF F    AAAA 08680037
         BNE   OVRL71                                              AAAA 08690037
         LA    OVRR7,3               CHANGE CODE OF F TO 3         AAAA 08700037
OVRL71   SLL   OVRR7,8                                             AAAA 08710037
         LA    OVRR15,45(OVRR7)      MERGE ERROR CODES.                 08720037
         BR    OVRR14                RETURN WITH ERROR CODE.            08730037
         EJECT                                                          08840000
*                                                                       08860000
*     THIS ROUTINE WILL ATTACH IEWSZOVR (IEWSWOVR) FOR ASYNCRONOUS LOAD 08880001
*                                                                       08900000
OVLALD01 L     OVRR0,ASYNCMST      MAIN STORAGE FOR FETCH               08920037
         GETMAIN R,LV=(0)                                               08930037
         LR    OVRR3,OVRR1         ADDR OF WORK AREA                    08940037
         SR    OVRR0,OVRR0         RESET FOR INITIAL TEST        YM3839 08950037
         L     OVRR8,IEWSNL(,OVRR6) USER KEY & NOTE LIST ADDR  @ZA25985 08960037
         SR    OVRR9,OVRR9          RESET                      @ZA25977 08970037
         ST    OVRR9,OVRECB(OVRR12) RESET ECB                  @ZA25977 08972037
         MODESET EXTKEY=SUPR        GO TO KEY 0                @ZA25977 08974037
         STM   OVRR0,OVRR15,SAVEREGS(OVRR1) SAVE REGS FOR THE           08980037
*                                  ASYNC ROUTINE.                       08990037
         MVI   ZERO(OVRR1),XZERO   CLEAR 1ST BYTE                ZA1407 09000037
         SPACE                                                          09010037
         LR    OVRR2,OVRR14        SAVE RETURN REG              OY00351 09020037
         LR    OVRR1,OVRR3         SET UP REG FOR ATTACHED RT           09030037
         LA    OVRR15,ATTLIST(OVRR3)    ADDR OF PARM LIST               09100000
         XC    0(LSTLN,OVRR15),0(OVRR15) CLEAR LIST AREA                09110000
*   ADD DCB = LINKLIB  TO FORCE SEARCH OF LPALIB & STOP JOBLIB SCAN     09112001
         USING CVT,OVRR4                                         YM3344 09120001
         L     OVRR4,CVTPTR(0)          POINT TO CVT WITH 4      YM3344 09122001
         L     OVRR4,CVTLINK            R4=PTR TO LINKLIB DCB    YM3344 09124001
         DROP  OVRR4                                                    09126001
*    ADD ECB=(OVRR9) OPERAND TO ENSURE MOTHER TASK IS POSTED EVEN IF    09128001
*      SUB-TASK ABENDS                                           YM2817 09128401
         LA    OVRR9,OVRECB(OVRR12)     POINT TO SEGTAB ECB      YM2817 09134537
         ATTACH EP=IEWSZOVR,SM=SUPV,MF=(E,(1)),SF=(E,(15)),        I270X09137537
               KEY=PROP,JSTCB=NO,SZERO=NO,SVAREA=NO,GIVEJPQ=NO, ZA25977X09140537
               DCB=(OVRR4),                                      YM3344X09150001
               ECB=(OVRR9)                                       YM2817 09154001
         SPACE                                                          09160000
*    ISSUE WAIT FOR SUBTASK TO GET STARTED                              09210001
         LA    OVRR1,STARTECB(OVRR3)    POINT TO ECB             YM3839 09220001
         WAIT  1,ECB=(1)                WAIT FOR SUBTASK         YM3839 09230001
         LR    OVRR14,OVRR2             RETRIEVE RETURN ADDR    OY00351 09240037
         SR    OVRR15,OVRR15            RETURN CODE                     09250037
         RETURN                                                         09280000
         EJECT                                                          09300000
*********************************************************************** 09320037
*                                                                     * 09328037
*           ATTACHED ROUTINE TO PROCESS ASYNC LOAD REQUEST            * 09336037
*                                                                     * 09344037
*                ENTERED IN USER KEY, SUPERVISOR STATE        @ZA25977* 09352037
*********************************************************************** 09360037
IEWSEGLD LM    OVRR0,OVRR13,SAVEREGS(OVRR1) RESTORE REGS SAVED          09380037
*                                           BY ATTACHER.                09390037
         OI    FLAGBYTE(OVRR12),SEGFLG      TURN ON SEGLD FLAG @ZA16075 09400037
* POST ECB TO ALLOW MAIN TASK TO RESUME & GIVE CONTROL TO USER'S SEGLD  09410037
         LA    OVRR9,STARTECB(OVRR3)        POINT TO ECB         YM3839 09420037
         MODESET EXTKEY=SUPR                USE KEY OF ECB CORE@ZA25977 09430037
         POST  (9)                          POST WITH ECB=ZERO   YM3839 09432037
         LR    OVRR9,OVRR8                  GET USER KEY       @ZA25977 09434037
         SRL   OVRR9,24                     POSITION FOR USE   @ZA25977 09436037
         SPKA  0(OVRR9)                     ENTER USER KEY     @ZA25977 09438037
*                                                                       09440037
         IC    OVRR9,SEGNO(OVRR10)          PICK UP N SEG               09450037
         SLL   OVRR9,2                      MULT X 4                    09460037
         LA    OVRR1,PRFXSIZ(OVRR12,OVRR9)                              09470037
         TM    3(OVRR1),X'01'               TEST MUST SEG BE LOADED     09480037
         BNO   OVLALD04                     BRANCH NO LOAD              09490037
         ST    OVRR1,OVRAPTR(OVRR12)        LOCN OF LINE FOR 1ST SEG    09500037
         MVC   OVRAPTR(1,OVRR12),SEGNO(OVRR10)                          09540000
*                                                                       09560000
*        SET UP TO ENTER FETCH                                          09580000
*                                                                       09600000
OVLALD03 L     OVRR7,DCBADD(,OVRR12)        GET DCB ADDR       @ZA25985 09610037
*                                           REG 8 HAS NOTE LIST@ZA25985 09620037
         LNR   OVRR7,OVRR7                  SET ASYNC INDICATOR         09630037
         MODESET EXTKEY=SUPR                KEY 0              @ZA25977 09640037
         STM   OVRR8,OVRR15,SAVEREGS+4(OVRR3) SAVE REGS OVER FETCH CALL 09643037
*                                                                       09645037
*  ENTER PROGRAM FETCH TO LOAD A SEGMENT. REGISTER SETTINGS -           09647037
*                                                                       09649037
*                        REG 3 - ADDRESS OF WORK AREA                   09651037
*                        REG 7 - ADDRESS OF DCB                         09653037
*                        REG 8 - ADDRESS OF NOTE LIST                   09655037
*                        REG 9 - SEGMENT NO. MULTIPLIED BY 4.           09657037
*  ALL REGISTERS ARE VOLATILE IN PROGRAM FETCH EXCEPT REGS 3 AND  6.    09659037
*  FETCH RETURN CODE IN REG 15: IF NON-ZERO, AN ERROR HAS OCCURED.      09661037
*                                                                       09663037
         USING CVT,OVRR13                                               09670037
         L     OVRR15,CVTFBOSV                                          09680037
         DROP  OVRR13                                                   09690037
         BALR  OVRR14,OVRR15            ***  TO PROGRAM FETCH ***       09700037
         LM    OVRR8,OVRR14,SAVEREGS+4(OVRR3) RESTORE REGS       YM2817 09705037
         LR    OVRR9,OVRR8              COPY USER KEY          @ZA25977 09711037
         SRL   OVRR9,24                 POSITION FOR USE       @ZA25977 09717037
         SPKA  0(OVRR9)                 RESUME USER KEY        @ZA25977 09723037
         LTR   OVRR15,OVRR15            TEST FOR RETURN CODE     YM2817 09729037
         BNZ   OVRLPOST                 RETURN IF R15 NON-ZERO   YM2817 09735037
         IC    OVRR9,OVRAPTR(OVRR12)    SEG. NUM. JUST LOADED           09750037
         SLL   OVRR9,2                                                  09760037
         LA    OVRR10,PRFXSIZ(OVRR12,OVRR9)  SEGTAB LINE                09770037
         SR    OVRR9,OVRR9              CLEAR REGISTER           A34604 09780037
         IC    OVRR9,0(OVRR10)          GET PSEG                        09790037
         STC   OVRR9,OVRAPTR(OVRR12)    SAVE IN SEGTAB                  09800037
         SLL   OVRR9,2                                                  09810037
         LA    OVRR10,PRFXSIZ(OVRR12,OVRR9)  SEGTAB LINE                09820037
         TM    3(OVRR10),X'01'               TEST MUST SEG BE LOADED    09830037
         BO    OVLALD03                      BRANCH YES                 09840037
OVLALD04 L     OVRR0,ASYNCMST                SIZE OF CORE TO FREE       10020000
         LR    OVRR1,OVRR3                   ADDR OF CORE TO FREE       10040000
         FREEMAIN  R,LV=(0),A=(1)                                       10060000
         SR    OVRR15,OVRR15                                            10080001
OVRLPOST RETURN ,RC=(15)                                         YM2817 10140001
         EJECT                                                          10180000
*  AT ENTRY TO OVERL80, REG 13 CONTAINS A SEGMENT NUMBER. IT IS MULTI-  10200000
*  PLIED BY 4 AND ADDED TO THE SEGTAB ADDRESS PLUS PREFIX BYTES (24-4)  10220000
*  TO GET THE ADDRESS OF THE SEGTAB LINE FOR THE GIVEN SEGMENT. UPON    10240000
*  RETURN FROM THIS ROUTINE, THE RESULTING ADDRESS IS IN REG 5.         10260000
*                                                                       10280037
*  THIS SECTION COMPUTES THE ADDRESS OF A LINE IN SEGTAB AND VALIDITY   10400000
*    CHECKS IT.                                                         10420000
*                                                                       10440000
OVRL80   SLL   OVRR13,2       MULTIPLY BY 4.                            10460000
         LA    OVRR7,20(OVRR12,OVRR13)                                  10480000
*                                                                       10500037
*                                                                       10510037
*   REGISTER USAGE IS AS FOLLOWS                                        10520037
*        REG 7 CONTAINS ADDR TO CHECK; COPIED TO 5                      10530037
*        REG 15 RETURN ADDRESS TO ROUTINE'S CALLER                      10540037
*        REG 14 RETURN ADDRESS TO RESIDENT MODULE                       10550037
*                                                                       10560037
OVRL83   MODESET KEYADDR=IEWSUK(,OVRR6),WORKREG=5     USER KEY @ZA25977 10570037
         LR    OVRR5,OVRR7                                              10580037
         N     OVRR5,LOBITTST      KEEP ONLY LO 2 BITS         @ZA25977 10590037
         BNZ   ABND22D             BIF NOT MULT OF 4           @ZA25977 10600037
         LR    OVRR5,OVRR7         RESTORE REG 5               @ZA25977 10610037
         NI    0(OVRR5),X'FF'      TOUCH THE STORAGE           @ZA25977 10620037
*  IF NO ABEND, THE STORAGE IS USER'S                          @ZA25977 10630037
         BR    OVRR15              RETURN                      @ZA25977 10640037
LOBITTST DC    F'3'                                            @ZA25977 10650037
*                                                                       10660037
ABND22D  LA    OVRR15,557          ERROR CODE X'22D'                    10670037
         BR    OVRR14              TO RESIDENT ROUTINE W/ERROR CODE.    10680037
         EJECT                                                          10850002
*                                                                       10860000
*  THIS ROUTINE DETERMINES THE REGION FOR A GIVEN SEG.  IT MAKES A      10880000
*  LEFT TO RIGHT COMPARISON BETWEEN THE GIVEN SEGMENT AND BYTES 8,10,12 10900000
*  AND 14 OF SEGTAB WHICH CONTAIN THE NO. OF THE HIGHEST NO. SEGMENT    10920000
*  WHICH CAN BE LOADED IN A REGION (MAXSEG). WHEN THE GIVEN SEGMENT     10940000
*  NO. IS LESS THAN OR EQUAL TO A MAXSEG, THE GIVEN SEGMENT IS IN THAT  10960000
*  REGION. THE REGION POINTER IS OUTPUT IN REG 5.                       10980000
*  THE POINTER TO THE MAXSEG IS CONSIDERED TO GIVE THE REGION.          11000000
*                                                                       11020000
*                                                                       11040000
OVRL88   MODESET KEYADDR=IEWSUK(,OVRR6),WORKREG=3     USER KEY @ZA25977 11060037
         LA    OVRR3,4                   LOOP COUNT.                    11070037
         LA    OVRR5,6(OVRR12)           ADDRESS OF FIRST MAXSEG - 2    11080037
OVRL89   LA    OVRR5,2(OVRR5)                                           11090037
         CLC   SAVEWD2(1,OVRR6),0(OVRR5) COMP NSEG TO MAX SEG           11100037
         BNHR  OVRR15                    IF NSEG LESS OR EQ TO MAXSEG.  11110037
         BCT   OVRR3,OVRL89                                             11118037
OVRL90   LA    OVRR15,301                ERROR CODE X'12D'.             11126037
         BR    OVRR14                    RETURN WITH ERROR CODE.        11134037
         SPACE 10                                                       11142037
IEWSFM   DC    X'E9000008'                                     @ZA17987 11160037
*                                                                       11165037
OVRLMNST DS    0F                        MS REQUIREMENT (SYNCRONOUS)    11170037
         DC    AL1(FWASP)                -SUBPOOL NUMBER                11180037
         DC    AL3(FWALN)                -FETCH WORK AREA               11190037
*                                                                       11200037
ASYNCMST DS    0F                        MS REQ FOR ASYNC LOAD          11210037
         DC    AL1(FWASTPSP)            -SUBPOOL NUMBER                 11220037
         DC    AL3(FWALN+SAVLN+LSTLN+ASYNCECB)  FETCH WORK AREA  YM2817 11230037
*                              PLUS ECB/ REG SAVE / LIST AREAS.  YM3839 11240037
*                                                                       11243037
         DC    48XL1'00'                 PATCH AREA              YM2817 11250037
         EJECT                                                          11260037
         IKJTCB                                                         11270037
         EJECT                                                          11280037
         IHACDE                                                @ZA25985 11290037
         END                                                            11340000
*/*MVMOVRLY:     CHART (SEQ) M.NIKOLAI */                               12340037
*/*IEWSWOVR:     E ENTRY TO NON RES SUPERVISOR */                       13340037
*/*              P SET BASE REGISTER */                                 14340037
*/*              D (YES,,NO,IEWSEGLD) ENTRY FROM RES MODULE? */         15340037
*/*              P SAVE NUMBER OF REQUESTED SEGMENT IN SVRB */          16340037
*/*              S OVRL88: FIND OVERLAY REGION FOR SEGMENT */           17340037
*/*              P SAVE REGION POINTER IN SVRB */                       18340037
*/*              P VERIFY NOTE LIST ADDRESS */                          18390037
*/*              S OVRL80: VALIDITY CHECK SET UP ROUTINE */             19340037
*/*              D (YES,,NO,OVRL10) SEG BEING LOADED? */                20340037
*/*              D (NO,OVRL11,YES,OVRL68) SEGLD REQUEST? */             21340037
*/*OVRL10:       D (YES,,NO,OVRL15) SEGLD IN PROGRESS? */               22340037
*/*              P TURN ON CONTINUE FLAG IN SEGTAB */                   23340037
*/*OVRL11:       S WAIT: WAIT ON ECB IN SEGTAB */                       24340037
*/*              P CLEAR ECB IN SEGTAB */                               25340037
*/*              P DETACH SUB TASK TCB */                               26340037
*/*              D (YES,,NO,OVRL70) RETURN CODE = 0? */                 27340037
*/*OVRL115:      P TURN OFF SEGLD INDICATOR IN SEGTAB */                28340037
*/*              P GET POINTER TO LOWEST SEGMENT LOADED */              29340037
*/*OVRL12:       P MARK SEGMENT AS LOADED IN MAIN STORAGE */            30340037
*/*              P GET ITS PREVIOUS SEGMENT NUMBER */                   31340037
*/*              D (NO,,YES,OVRL12) MARKED TO BE LOADED? */             32340037
*/*              D (YES,,NO,OVRL58) CONTINUE FLAG ON? */                33340037
*/*              P TURN OFF CONTINUE FALG IN SEGTAB */                  34340037
*/*OVRL15:       D (NO,,YES,OVRL25) CALL OR BRANCH? */                  35340037
*/*              P SET LOOP COUNT = THE NUMBER OF REQUESTED SEGMENT */  36340037
*/*OVRL18:       D (NO,,YES,OVRL20) PREVIOUS SEG NUM ZERO? */           37340037
*/*              P DEFINE: RSEG=REQUESTING SEGMENT, NSEG=REQUESTED      38340037
*/*                SEGMENT */                                           39340037
*/*              P DEFINE: PSEG=PREVIOUS SEG NUM FOR NSEG */            40340037
*/*              D (NO,,YES,OVRL25) RSEG = PSEG? */                     42340037
*/*              S OVRL80: GET SEGTAB LINE ADDRESS FOR PSEG */          43340037
*/*              D (YES,OVRL90,NO,OVRL18) LOOP COUNT = ZERO? */         44340037
*/*OVRL20:       S OVRL88: GET REGION NUMBER OF RSEG */                 45340037
*/*              P COMPARE NSEG REGION NUMBER TO RSEG REGION NUMBER */  46340037
*/*              D (YES,,NO,OVRL25) EQUAL? */                           47340037
*/*              D (NO,,YES,OVRL68) THIS REQUEST SEGLD? */              48340037
*/*              P INSERT ERROR CODE X'425' */                          49340037
*/*              R RETURN TO RESIDENT SUPERVISOR */                     50340037
*/*OVRL25:       P OSEG = NSEG IN SEGTAB */                             51340037
*/*OVRL30:       D (NO,,YES,OVRL40) OSEG > NSEG? */                     52340037
*/*              D (NO,,YES,OVRL50) OSEG = NSEG? */                     53340037
*/*              S OVRL80: CHECK SEGTAB LINE ADDRESS */                 54340037
*/*              P SET LOAD INDICATOR X'01' IN SEGTAB ENTRY */          55140037
*/*              P (,OVRL30) GET SEG NUMBER OF NEXT HIGHER SEGEMENT */  55940037
*/*OVRL40:       P OBTAIN SEGTAB ADDRESS FOR THE SEGMENTS BEING         56840037
*/*                OVERLAID */                                          57340037
*/*              S OVRL80: VALIDITY CHECK THE ADDRESS */                57840037
*/*              P SET THE NOT LOADED INDICATOR X'03' IN SEGTAB */      58340037
*/*              D (NO,,YES,OVRL43) CALLER CHAIN EXIST? */              58840037
*/*OVRL41:       P (,OVRL30) CHECK IF NEXT HIGHER SEGMENT WILL BE       59340037
*/*                OVERLAID */                                          59840037
*/*OVRL43:       S OVRL83: VAL CHECK CALLER CHAIN */                    60840037
*/*              P RESET THE UNCONDITIONAL BRANCH IN ENTAB TO POINT     61340037
*/*                TO THE SVC 45 */                                     61840037
*/*              D (NO,,YES,OVRL41) PREV CALLER FLD = 0? */             62340037
*/*              P SET PREVIOUS CALLER FIELD TO ZERO */                 62840037
*/*              P (,OVRL43) POINT TO ENTAB ENTRY FOR PREV CALLER */    63340037
*/*OVRL50:       D (NO,,YES,OVLALD01) SEGLD? */                         64340037
*/*              S GETMAIN: SPACE FOR FETCH WORK AREA */                64840037
*/*OVRL52:       P POINT TO NSEG SEGTAB ENTRY */                        65340037
*/*              D (YES,,NO,OVRL57) IS SEG TO BE LOADED? */             65840037
*/*              P SAVE REGISTERS FOR ENTRY TO FETCH */                 66340037
*/*              P GET ADD OF DCB AND NOTELIST FOR FETCH */             66840037
*/*OVRL55:       S FETCH: GO TO PROG FETCH TO LOAD SEGMENT */           67340037
*/*              D (YESS,,NO,OVRL70) FETCH RETURN OK? */                67840037
*/*              P SET SEGMENT LOADED IN SEGTAB X'02' */                68340037
*/*              P (,OVRL52) GET NEXT SEGMENT IN PATH */                68840037
*/*OVRL57:       S FREEMAIN: FETCH WORK AREA */                         69340037
*/*OVRL58:       D (YES,,NO,OVRL60_) PROG IN TEST? *?                   69840037
*/*              P ISSUE SVC 61 */                                      70340037
*/*OVRL60:       D (NO,,YES,OVRL68) SEGWT? */                           70840037
*/*              D (NO,,YES,OVRL63) REQ FROM ROOT ENTAB? */             71340037
*/*              S OVRL88: GET REQUESTING ENTABS REGION */              71840037
*/*              P COMPARE NSEG REGION TO RSEG REGION */                72340037
*/*              D (YES,,NO,OVRL68) REGIONS EQUAL? */                   72840037
*/*OVRL63:       P POINT TO SEGTAB AND SEE IF CALLER CHAIN EXISTS */    73340037
*/*              D (YES,,NO,OVRL65) CHAIN EXIST? */                     73840037
*/*              P MOVE ADD IN SEGTAB TO PCALLER FLD IN ENTAB */        74340037
*/*OVRL65:       P STORE ENTAB ADDRESS TO CALLER FLD IN SEGTAB */       74840037
*/*OVRL66:       P SET BRANCH IN ENTAB TO BYPASS SVC 45 INSTRUCTION */  75340037
*/*OVRL68:       R RETURN TO RES SUPERVISOR */                          75840037
*/*OVRL70:       D (YES,,NO,OVRL71) FETCH RET CODE = 'F'? */            76340037
*/*              P CHANGE CODE FROM 'F' TO '3' */                       76840037
*/*OVRL71:       P MERGE ERROR CODE WITH 'X2D' */                       77340037
*/*              R RETURN TO RES SUPERVISOR */                          77840037
*/*OVLALD01:     S GETMAIN: SPACE FOR FETCH WORK AREA */                78340037
*/*              P FORCE LINKLIB SEARCH FOR CORRECT COPY OF IEWSZOVR */ 78840037
*/*              P CLEAR ECB IN SEGTAB */                               79340037
*/*              S ATTACH: ATTACH IEWSZOVR TO PROCESS SEGLD REQUEST */  79840037
*/*              S WAIT: WAIT FOR SUBTASK TO START */                   80340037
*/*              R RETURN TO RES SUPERVISOR */                          80840037
*/*IEWSEGLD:     S POST: POST MAIN TASK TO GIVE CONTROL TO USER */      81340037
*/*              P PICK UP SEGTAB ENTRY FOR NSEG */                     81840037
*/*              D (YES,,NO,OVLALD04) SEG TO BE LOADED? */              82340037
*/*              P TURN ON SEGLD FLAG IN SEGTAB */                      82840037
*/*OVLALD03:     S FETCH: LOAD THIS SEGMENT */                          83340037
*/*              D (YES,,NO,OVRLPOST) FETCH RETURN OK? */               83840037
*/*              P PICK UP NEXT HIGHER SEGMENT */                       84340037
*/*              D (NO,,YES,OVLALD03) SEG TO BE LOADED? */              84840037
*/*OVLALD04:     S FREEMAIN: FETCH WORK AREA */                         85340037
*/*OVRLPOST:     R RETURN */                                            85840037
*/*OVRL80:       E VALIDITY CHECK SET UP ROUTINE */                     86340037
*/*              P POINT TO SEGTAB ENTRY FOR SEGMENT */                 86840037
*/*OVRL83:       P SAVE REGISTERS ACCROSS VAL CHECK ROUTINE */          87340037
*/*              P OBTAIN ADDRESS OF VALIDITY CHECK ROUTINE */          87840037
*/*              P GET LOCAL LOCK */                                    88340037
*/*              S VAL CHECK: CHECK THE ADDRESS */                      88840037
*/*              P RESTORE THE BASE REGISTER */                         89340037
*/*              D (NO,,YES,OVRL85) VAL CHECK OK? */                    89840037
*/*              P INDICATE BAD RETURN FROM VAL CHK */                  90340037
*/*OVRL85:       P RELEASE THE LOCAL LOCK */                            90840037
*/*              P RESTORE THE REGISTERS */                             91340037
*/*              D (NO,,YES,%A002) ADD CHECK OK? */                     91840037
*/*              P LOAD ERROR CODE X'22D' */                            92340037
*/*              R RETURN TO RESIDENT MODULE */                         92840037
*/*%A002:        R RETURN TO CALLER */                                  93340037
*/*OVRL88:       E OVERLAY REGION SUBROUTINE */                         93840037
*/*              P INITIALIZE LOOP COUNT TO 4 */                        94340037
*/*              P POINT TO FIRST MAXSEG MINUS 2 (SEGTAB+6) */          94840037
*/*OVRL89:       P POINT TO NEXT MAXSEG (THIS MAXSEG+2) */              95340037
*/*              P DETERMINE IF THIS SEGMENT IS IN THIS REGION */       95840037
*/*              D (NO,,YES,%A001) SEGMENT IN REGION? */                96340037
*/*              P DECREMENT LOOP COUNT BY 1 */                         96840037
*/*              D (YES,,NO,OVRL89) LOOP COUNT = 0? */                  97340037
*/*OVRL90:       P LOAD ERROR CODE X'12D' */                            97840037
*/*              R RETURN TO RESIDENT MODULE */                         98340037
*/*%A001:        R RETURN TO CALLER */                                  98840037
*/*IEWSWOVR:     END */                                                 99340037
*/* DUMMY END CARD TO SATISFY H ASM WHEN IN BATCH MODE...      @ZA25977 99390037
                 END ,     */                                           99440037
