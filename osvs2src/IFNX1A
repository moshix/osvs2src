         JHEAD 'EDIT PHASE',                                           X00010001
               PHASEID=X1A,                                            X00040000
               LEVEL=10                                                 00060000
*                                                                       00080000
*FUNCTION/OPERATION-                                                    00100000
*   THIS PHASE TRANSLATES, SCANS AND EDITS SOURCE STATEMENTS, COPY      00120000
*   CODE, AND SYSTEM MACROS INTO EDITED TEXT.                           00140000
*                                                                       00160000
*   IT CALLS DIRECTORY ROUTINES, 'DRUTENT', TO BUILD MACRO NAME         00180000
*   DIRECTORY, VARIABLE SYMBOL DIRECTORIES, SEQUENCE SYMBOL DIRECTORIES 00200000
*   AND OPEN CODE ORDINARY SYMBOL DIRECTORY. ON ABNORMAL RETURN         00220000
*   FROM DIRECTORY ROUTINES, 'CONCODE' IS SET TO A NON-ZERO VALUE       00240000
*   SIGNIFYING THE TYPE OF ERROR DETECTED. THE VALUE IS THEN USED       00260000
*   TO BRANCH TO THE APPROPRIATE ERROR ROUTINE TO LOG THE ERROR.        00280000
*   (SEE DIRECTORY ROUTINE PROLOG FOR FURTHER EXPLANATION.)             00300000
*                                                                       00320000
*   INPUT CONTROL ROUTINE, 'RDSRC', IS CALLED AT APPROPRIATE TIME TO    00340000
*   BRING IN SOURCE RECORDS FROM SYSTEM INPUT, OR FROM MACRO LIBRARY    00360000
*   IF IN COPY CODE OR SYSTEM MACRO EDITING.                            00380000
*                                                                       00400000
*   'PROCNXT' ROUTINE EDITS NAME FIELD AND OPERATION FIELD, CLASSIFIES  00420000
*   THE TYPE OF THE INPUT RECORD, PREPARING TO PASS CONTROL TO THE      00440000
*   APPROPRIATE ROUTINES FOR FURTHER PROCESSING OF THE RECORD BASED     00460000
*   ON THE OPERATION CODE.                                              00480000
*                                                                       00500000
*   WHEN A MACRO PROTOTYPE RECORD IS ENCOUNTERED,  CONTROL IS           00520000
*   PASSED TO PROTOTYPE SCANNER, 'PROSCN', WHICH MAKES SYNTAX CHECKS    00540000
*   ON ALL SYMBOLIC PARAMETERS.                                         00560000
*                                                                       00580000
*   AS END OF OPERAND OR STATEMENT IS DETECTED,  'WRAPFLD' ROUTINE      00600000
*   IS CALLED TO WRAP UP THE BUILDING OF THE EDITED TEXT RECORD.        00620000
*   CONTROL IS THEN PASSED BACK TO THE CALLER IF END OF OPERAND,        00640000
*   OR IT EXITS TO 'READNEXT' IF END OF STATEMENT.                      00660000
*                                                                       00680000
*                                                                       00700000
*ENTRY POINT-                                                           00720000
*        EDITENT                                                        00740000
*                                                                       00760000
*                                                                       00780000
*INPUT-                                                                 00800000
*   SYSTEM INPUT - SOURCE STATEMENTS.                                   00820000
*                                                                       00840000
*   MACRO LIBRARY - COPY CODE AND SYSTEM MACRO DEFINITIONS.             00860000
*                                                                       00880000
*   INPUT RECORDS ARE OBTAINED THROUGH INPUT CONTROL ROUTINE IN         00900000
*   80-BYTE CARD FORMAT WITH REGISTER 'RETADR' POINTS TO THE FIRST      00920000
*   BYTE OF THE RECORD OBTAINED. THE RECORD IS THEN MOVED TO WORK       00940000
*   BUFFER FOR PROCESSING. THE ADDRESS OF THE WORK BUFFER IS SAVED      00960000
*   IN 'INPUT'.                                                         00980000
*                                                                       01000000
*                                                                       01020000
*OUTPUT-                                                                01040000
*   FILE 1 - SOURCE STATEMENT EDITED TEXT AND ASSOCIATED ERROR RECORDS, 01060000
*   AND MACRO DEFINITION EDITED TEXT AND ASSOCIATED ERROR RECORDS.      01080000
*                                                                       01100000
*   FILE 2 - TEXT SEGMENT DICTIONARY FILE FOR EACH MACRO DEFINITION.    01120000
*            TEXT SEGMENT DICTIONARY FILE FOR OPEN CODE                 01140000
*                                                                       01160000
*   FILE 3 - DEFINITION FILE AND MACRO DEFINITION DIRECTORY             01180000
*   (SEE DIRECTORY ROUTINE PROLOG FOR FURTHER DETAILS.)                 01200000
*                                                                       01220000
*                                                                       01240000
*EXTERNAL ROUTINES-                                                     01260000
*   DRUTENT - CALLED TO BUILD VARIOUS DIRECTORIES.                      01280000
*             AT ENTRY. 'DINDEX' (R9) HAS DIRECTORY ROUTINE INDEX.      01300000
*             IN THE CASE OF SYMBOL ENTRY.                              01320000
*                       'PARM' (R10) POINTS TO THE SYMBOL TO BE ENTERED 01340000
*                       OR SEARCHED, AND                                01360000
*                       'PARAM2' (R11) CONTAINS THE MOVE LENGTH OF THE  01380000
*                       SYMBOL TO BE ENTERED OR SEARCHED.               01400000
*                                                                       01420000
*              LINKAGE IS...                                            01440000
*              LA    DINDEX,XXX  WHERE XXX IS DIRECTORY ROUTINE INDEX   01460000
*              .     .     .     .                                      01480000
*              L     LINK,DENTRY                                        01500000
*              BAL   RETURN,D0(DINDEX,LINK)                             01520000
*                                                                       01540000
*   PFIXRI -  CALLED TO INITIALIZE POSTFIXER ROUTINE.                   01560000
*                                                                       01580000
*              LINKAGE IS...                                            01600000
*              L     PARAM2,ADPINIT                                     01620000
*              BALR  RETURN,PARAM2                                      01640000
*                                                                       01660000
*                                                                       01680000
*   PFIXRN -  CALLED TO PLACE ALL OPERATORS IN AN EXPRESSION INTO       01700000
*             APPROPRIATE ARRANGEMENT IN A META TEXT FIELD              01720000
*             AT ENTRY, 'PARM' (R10) CONTAINS THE OPERATOR TO BE        01740000
*                       ENTERED.                                        01760000
*                                                                       01780000
*              LINKAGE IS...                                            01800000
*              L     PARAM2,ADPSTR                                      01820000
*              BALR  RETURN,PARAM2                                      01840000
*                                                                       01860000
*                                                                       01880000
*EXITS, NORMAL-                                                         01900000
*   EXIT TO CONTROLLER WITH ZERO VALUE IN REGISTER 10.                  01920000
*                                                                       01940000
*EXITS, ERROR-                                                          01960000
*   EXIT TO CONTROLLER WITH NON-ZERO VALUE IN REGISTER 10.              01980000
*                                                                       02000000
*                                                                       02020000
*TABLE/WORK AREAS-                                                      02040000
*   INPUT/OUTPUT BUFFERS ARE DYNAMICALLY LOCATED ABOVE THE EXECUTABLE   02060000
*   CODE OF THE EDIT PHASE WITH REGISTER 'RETADR' POINTS TO THE NEXT    02080000
*   INPUT RECORD TO BE PROCESSED, OR TO THE NEXT AVAILABLE OUTPUT       02100000
*   BUFFER LOCATION AT RETURN FROM INPUT/OUTPUT CONTROL ROUTINE.        02120000
*                                                                       02140000
*   A 264-BYTE INPUT WORK BUFFER, POINTED TO BY ADDRESS CONSTANT        02160000
*   'INPUT', CONTAINS THE RECORD TO BE EDITED. THE WORK BUFFER MAY      02180000
*   CONTAIN UP TO TWO CONTINUATION CARDS WITH THEIR PRE-BEGIN(POST-END  02200000
*   STRINGS STRIPPED AND COLLECTED AT THE TAILEND PORTION OF THE WORK   02220000
*   BUFFER. ADDRESS CONSTANT 'DSTGBGN' POINTS TO THE BEGINNING OF THE   02240000
*   STRING COLLECTION AREA.                                             02260000
*                                                                       02280000
*                                                                       02300000
*ATTRIBUTES-                                                            02320000
*   REFRESHABLE                                                         02340000
*                                                                       02360000
*                                                                       02380000
*NOTES- N/A                                                             02400000
*                                                                       02420000
         SPACE 5                                                        02440000
         PRINT OFF                      DON'T PRINT JCOMMON COPY CODE   02460000
         COPY JCOMMON                                                   02480000
         PRINT OFF                      DON'T PRINT JERMSGCD COPY CODE  02500000
         COPY  JERMSGCD                                                 02520000
         PRINT ON                       WE'LL PRINT THE REST            02540000
         EJECT                                                          02560000
         COPY  EDSECT                                                   02580000
         EJECT                                                          02600000
*************************                                               02620000
*   INPUT WORK BUFFER   *                                               02640000
*************************                                               02660000
INPFMT   DSECT                          ADDRESSED BY REG. 'INPTR'       02680000
         USING INPFMT,INPTR                                             02700000
INPNAME  EQU   *                        NAME FIELD                      02720000
         ORG   INPNAME                                                  02740000
INPOP    EQU   *                        OPERATION FIELD                 02760000
         ORG   INPNAME                                                  02780000
INPOPR   EQU   *                        OPERAND FIELD                   02800000
         ORG   INPNAME                                                  02820000
INPCOMM  EQU   *                        COMMENTS FIELD                  02840000
         ORG   INPNAME                                                  02860000
INPCTFLG EQU   *                        CONTINUATION FLAG               02880000
POSTEND  EQU   INPCTFLG                 POST-END STRING                 02900000
         ORG   INPNAME                                                  02920000
PREBGN   EQU   *                        PRE-BEGIN STRING                02940000
         ORG   INPNAME                                                  02960000
INPCNT   EQU   *                        CONTINUATION FIELD              02980000
ENDIPT   EQU   PREBGN+79                                                03000000
******************************                                          03020000
*   STRING COLLECTION AREA   *                                          03040000
******************************                                          03060000
STGAREA  DSECT ,                        STRING COLLECTION AREA          03080000
         USING STGAREA,DSTGPTR                                          03100000
SCCNT    EQU   *                        STRING COUNT                    03120000
         ORG   SCCNT                                                    03140000
SOPTR    EQU   *                        STRING OUTPUT LOCATION          03160000
SOLEN    EQU   SOPTR+1                  STRING LENGTH                   03180000
SDATA    EQU   SOLEN+1                  STRING                          03200000
***********************************************                         03220000
*   RSTACK-RECURSIVE STACK USED BY SCANNERS   *                         03240000
***********************************************                         03260000
DRSTK    DSECT                                                          03280000
         USING DRSTK,R14                                                03300000
BDRSTK   EQU   *                        RSTACK BEGIN                    03320000
RSTKRTN  DS    CL2                      RETURN ADDRESS                  03340000
RSTKATR  DS    X                        ATTRSV SAVED                    03360000
RSTKFLG  DS    X                        MCALL SAVED                     03380000
RSTKSTP  DS    CL4                      MTBLNDX SAVED                   03400000
RSTKVST  EQU   RSTKSTP                  FLGBYT SAVED                    03420000
EDRSTK   EQU   *                                                        03440000
***********************************************                         03460000
*   CSTK-RECURSIVE STACK USED BY INNER COPY   *                         03480000
***********************************************                         03500000
DCSTK    DSECT                                                          03520000
         USING DCSTK,PARM                                               03540000
CSTKNOTE DS    CL(L'JNOTEVAL)           NOTED ADDRESS                   03560000
CSTKSW   DS    C                        SWITCH1 SAVE AREA               03580000
CSTKMEM  DS    CL8                      NOTED MEMBER                    03590001
EDCSTK   EQU   *                                                        03600000
***********************************                                     03620000
*   EDITED TEXT RECORD FORMAT 1   *                                     03640000
***********************************                                     03660000
         USING JTEXT,INDEXO                                             03680000
         USING JTEXTA,INDEXP                                            03700000
         PRINT OFF                      DON'T PRINT JTEXT COPY CODE     03720000
         COPY JTEXT                                                     03740000
         PRINT ON                       DON'T PRINT JTEXT COPY CODE     03760000
         SPACE 3                                                        03780000
******************************************                              03800000
*        PARAMETER RECORD FORMATS        *                              03820000
******************************************                              03840000
MPROTO   DSECT                                                          03860000
         USING MPROTO,INDEXP                                            03880000
HDF      DSW   MPSB,                    SUBOPERAND                     H03900000
               MPSBL,                   LAST SUBOPERAND                H03920000
               MPSBF,                   FIRST SUBOPERAND               H03940000
               OPNDPRM,                 PASSED PARAMETER               H03960000
               OPNDOMT,                 OMITTED OPERAND                H03980000
               OPNDORD,                 ORDINARY SYMBOL                H04000000
               OPNDTRM,                 SELF-DEFINING TERM             H04020000
               OPNDSTR                  CHARCTER STRING                 04040000
*   HEADER DATA AREA FORMAT                                             04060000
         ORG   HDF                      .                               04080000
MPHFLG   DS    C                        HEADER DATA FLAG                04100000
MPHP     DS    CL4                      VALUE/POINTER AREA              04120000
         ORG   MPHP                     .                               04140000
MPOSRP   DS    CL3                      ORDINARY SYMBOL REF POINTER     04160000
         ORG   MPHP                     .                               04180000
MPSDTV   DS    CL4                      SDT BINARY VALUE                04200000
         ORG                                                            04220000
MPHDL    EQU   *-MPHFLG                 *****                           04240000
         SPACE 3                                                        04260000
*   META TEXT FORMAT                                                    04280000
MPMT     DSECT                                                          04300000
         USING MPMT,R14                                                 04320000
MPMCFLG  DS    C                        CHAR STG FLAG (SEE JTMFLG)      04340000
MPMCLNG  DS    C                        CHAR STG LENGTH                 04360000
MPMCSTG  EQU   *                        CHAR STRING                     04380000
         ORG   MPMCFLG                  .                               04400000
MPVSRP   DS    CL6                      VARIABLE SYM REF PTR ETC        04420000
         ORG   MPMCFLG                  .                               04440000
MPKEYF   DS    C                        KEYWORD PARAM OPERATOR (=)      04460000
         ORG   MPMCFLG                  .                               04480000
MPEMT    DS    C                        STATEMENT TERMINATOR FLAG       04500000
         DROP  INDEXP,R14                                               04520000
         SPACE 3                                                        04540000
*******************************                                         04560000
*   META TEXT FIELD FORMATS   *                                         04580000
*******************************                                         04600000
         COPY  JTMTXT                                                   04620000
         EJECT                                                          04640000
         COPY  JERRCD                                                   04660000
JERRHL   EQU   JEDATA-JERECL                                            04680000
STACKREC DSECT                                                          04700000
LAST     DS    0H                       LAST STACK ENTRY                04720000
LASTOP   DS    C                        OPERATOR                        04740000
LASTBIND DS    C                        BINDING FACTOR                  04760000
         EJECT                                                          04780000
**********************                                                  04800000
*   SYMBOL EQUATES   *                                                  04820000
**********************                                                  04840000
*                                                                       04860000
BASE1    EQU   8                        PRIMARY BASE REGISTER           04880000
BASE2    EQU   7                        SECONDARY BASE REGISTER         04900000
BASE3    EQU   7                        THIRD BASE REGISTER             04920000
BASE4    EQU   7                                                        04930000
COMR     EQU   13                       COMMON AREA BASE REGISTER       04940000
MODCOMM  EQU   2                        MODULE COMMON AREA BASE         04960000
TRTN     EQU   0                        SCRATCH REGISTER                04980000
RCNT     EQU   0                                                        05000000
STGLOC   EQU   TRTN                     STRING LOCATION CONVEYER        05020000
TLINK    EQU   1                        LOCAL LINKAGE                   05040000
CGOTO    EQU   1                        GO-TO REGISTER                  05060000
WORK2    EQU   3                                                        05080000
GSPTR    EQU   3                                                        05100000
SLNREG   EQU   3                        SOURCE LENGTH REGISTER          05120000
BEGREG   EQU   4                        BEGIN COLUMN REGISTER           05140000
INDEXP   EQU   4                        VARIABLE PORTION O/P BUF INDEX  05160000
INDEXO   EQU   5                        FIXED PORTION O/P BUF INDEX     05180000
CNTREG   EQU   5                        CONTINUATION CHAR. COLUMN REG.  05200000
INPTR    EQU   6                        INPUT WORK BUFFER POINTER       05220000
RETURN   EQU   9                        RETURN LINKAGE REGISTER         05240000
DSTGPTR  EQU   9                        DESTINATION POINTER             05260000
SEQREG   EQU   9                        SEQ FIELD BEGIN REGISTER        05280000
DINDEX   EQU   9                        INDEX REG FOR D ENTRY ROUTINE   05300000
PARAM1   EQU   10                       PARAMETER REGISTER              05320000
PARM     EQU   PARAM1                   INDEX TO DIRECOTY ROUTINES      05340000
SQLREG   EQU   10                       SEQ FIELD LENGTH REGISTER       05360000
SRCPTR   EQU   10                       SOURCE RECORD POINTER           05380000
PARAM2   EQU   11                       PARAMETER REGISTER              05400000
RETADR   EQU   PARAM2                   TEMPORARY RETURN LINKAGE        05420000
LINK     EQU   12                       TARGET LINKAGE REGISTER         05440000
CBGREG   EQU   12                       CONT FIELD BEGIN REGISTER       05460000
SRCEND   EQU   12                       SOURCE RECORD END POS. CONVEYER 05480000
TWKREG1  EQU   14                                                       05500000
TWKREG2  EQU   15                                                       05520000
MTBLNDX  EQU   5                        MTABLE INDEX REGISTER           05540000
MTBLENT  EQU   12                       ABSOLUTE ROUTINE ADDRESS PTR    05560000
*                                                                       05580000
ALLOFF   EQU   X'00'                                                    05600000
LBITS    EQU   JF                       LENGTH BITS MASK                05620000
BNE      EQU   7                                                        05640000
BHI      EQU   2                                                        05660000
BLO      EQU   4                                                        05680000
BZ       EQU   8                                                        05700000
BEQ      EQU   8                                                        05720000
BMX      EQU   4                                                        05740000
BONE     EQU   1                                                        05760000
LICTL    EQU   66                                                       05780000
SEVENTY  EQU   70                                                       05800000
CRDLN    EQU   80                       SOURCE RECORD LENGTH            05820000
SLTLEN   EQU   3                                                        05840000
INVALV   EQU   31                                                       05860000
SPECHAR  EQU   JTBLTRT+JALFAMAX+1       SPECIAL CHARACTER START         05880000
JTBLALFA EQU   JTBLTRT+JA                                               05900000
HICHR    EQU   JPERIOD                  HIGHEST ASSEMBLER CHARACTER     05920000
XSDT     EQU   JTMSDT+0                 X TYPE SDT TYPE NUMBER          05940000
BSDT     EQU   JTMSDT+1                 B TYPE SDT TYPE NUMBER          05960000
CSDT     EQU   JTMSDT+2                 C TYPE SDT TYPE NUMBER          05980000
DSDT     EQU   JTMSDT+3                 D TYPE SDT TYPE NUMBER          06000000
DENTLNG  EQU   6                        MT TERM/POINTER LENGTH          06020000
STMASK   EQU   X'C0'                    MCALL STAUS MASK                06040000
DMCHIN   EQU   X'40'                    IOCID MASK FOR V.S.OP OCDE      06060000
XDMSLS   EQU   VTYP2+VSLS+VSNS          MASK FOR UNSUBSCRIPTED SYSLIST  06080000
RFLGLOC  EQU   (EDRSTK-BDRSTK)*2        INDEX TO 2ND LEVEL IN RSTACK    06100000
MISTGL   EQU   30                       MI STRING LENGTH  (STANDARD)    06120000
STSTGL   EQU   71                       ST STRING LENGTH  (STANDARD)    06140000
MISTGP   EQU   5+1                      MI STG POINTER LENGTH           06160000
STSTGP   EQU   5*3+1                    ST STG POINTER LENGTH           06180000
MAXCNTL  EQU   79                       1ST CARD MAX DATA AREA W/ CONT. 06200000
MAXCNT   EQU   255                                                      06220000
PRMLEN   EQU   3                        PARAMETER POINTER LENGTH        06240000
MTHDLEN  EQU   9                        MT HEADER DATA LENGTH           06260000
SZMI     EQU   562                      MI/PROTO SIZE **TEMP**          06280000
SZCNT    EQU   784                      STATEMENT W/ CONTIN    @AY11229 06300006
SZNORM   EQU   296                      STATEMENT W/O CONTINUATIONS     06320000
SZCMT    EQU   116                      COMMENTS STATEMENT SIZE         06340000
TSRCLN2  EQU   TSRCLN+2                 TRUE SSOURCE DATA LENGTH        06360000
TCNTLN2  EQU   TCNTLN+2                 TRUE CONTINUATION DATA LENGTH   06380000
RTNSV1   EQU   OCPTRSV                  RETURN POINTER SAVE AREA        06400000
RLAST    EQU   R15                                                      06420000
HIBIND   EQU   13                       UNLUCKY 13                      06440000
         EJECT                                                          06460000
*******************************                                         06480000
*   DIRECTORY ROUTINE INDEX   *                                         06500000
*******************************                                         06520000
PHASENT  EQU   0                                                        06540000
MACRENT  EQU   2                                                        06560000
MACREND  EQU   4                                                        06580000
OPENENT  EQU   6                                                        06600000
OPENEND  EQU   8                                                        06620000
VARBSYMR EQU   10                                                       06640000
SEQSYMBR EQU   12                                                       06660000
SEQSYMBD EQU   14                                                       06680000
ORDSYMBR EQU   16                                                       06700000
ORDSYMBD EQU   18                                                       06720000
VARBSYMD EQU   20                                                       06740000
OPERCODE EQU   22                                                       06760000
OPSYNBLD EQU   24                                                       06780000
         USING JTEXTA,INDEXP                                            06800000
         USING DRSTK,R14                                                06820000
         EJECT                                                          06840000
         JCSECT (X1A00=CS0)                                             06860000
* VS1 RELEASE 2 CHANGES                                                 06870002
*A883100-883120                                                 OX00217 06872001
* VS1 RELEASE 2.6 CHANGES                                               06876002
*C173100                                                        OX00224 06876401
*A457500                                                        OX00224 06876801
*A843900-843920                                                 OX00225 06878001
*C891200                                                        OX00225 06878401
*A301970-301994                                                 OX00403 06878801
*C302000                                                        OX00403 06879201
*C333400                                                        OX00404 06879601
*A674500                                                        OX00405 06879701
*A345900-345920,500100                                          OX00406 06879801
*D521600                                                        OX00406 06879901
*A847300                                                        OX00409 06880701
*C274800                                                        OX00410 06882701
*A457520-457540,459700-459740                                   OX00411 06884701
*D737600                                                        OX00081 06885102
*A741900                                                        OX00081 06885502
* VS1 RELEASE 3 CHANGES                                                 06887503
*A169700                                                        OX00095 06889503
*D170600                                                        OX00095 06889903
*C978500                                                        OX00095 06893203
*A978700-978760,979920                                          OX00095 06895203
* VS1 RELEASE 3.1 CHANGES                                               06895631
*D872600                                                        OX01771 06896002
*A835100,868900,872500-872700,875700-875760                     OX01771 06896402
*A644924                                                        OY01713 06896502
*D644960                                                        OY01713 06896602
*A131500-131560                                                 OX02266 06896731
*D847300                                                        OX02973 06896831
*A848300                                                        OX02973 06896931
*A334700-334740                                                 OX02957 06897031
*A142220-142260                                                 OX02976 06897131
*A128900-128980                                                 OX04102 06897231
*D131500-131560                                                 OX04102 06897331
*A866300,868500,868820,868920,876260-876796                     OX04106 06897431
*C876800                                                        OX04106 06897531
*D875800-876600                                                 OX04106 06897631
*C458400,558400,558600                                          OX05801 06897731
*A459620,558500,558520                                          OX05801 06897831
*A335100-335180                                                 OY04852 06897931
*C453800                                                        OY06129 06898031
*D335100-335180                                                 OY06129 06898131
*A453700,453720                                                 OY06129 06898231
* VS1 RELEASE 040 CHANGES                                               06898331
*A993620                                                       @XA04142 06898431
*A676925,676926                                                @XA05837 06898531
*A843300-843340,843820                                         @OZ01697 06898604
*A461920-461980,173150,173820-173996                           @OX06626 06898704
*C458800,460200,558400,558600                                  @OX06626 06898904
*D558500-558520                                                @OX06626 06903904
*A093700,174900                                                @OX07247 06904004
*A075700,076300,076900,077300,263900,266700,646100-646160      @OX07230 06904105
*A423100-423188                                                @OY04864 06904205
*A423700                                                       @OX07300 06904305
*C423800                                                       @OX07300 06904405
*A088500-088540                                                @OY08021 06904505
*A301954-301968                                                @OX08858 06904605
*D301970                                                       @OX08858 06904705
*A098500,299540                                                @OY08060 06904805
*A806500-806560                                                @OX07290 06904905
*A093620,093640,093720                                         @OX01364 06905005
*A829700,831900,826600,827300-827360,975685,975687             @OZ06551 06905106
*C827400,976586                                                @OZ06551 06905206
*A335100                                                       @OX10953 06905306
*D142000                                                       @AX11012 06905706
*A141820                                                       @AX11012 06906106
*C827300,975686,826050,827340,827360                           @AX12896 06906506
*A827220                                                       @AX12896 06906606
*D826700                                                       @AX12896 06906706
*C063000                                                       @AY11229 06906906
*A911620-911755,903900-903980                                  @AY11215 06907006
*C674600                                                       @AX12923 06917006
*A093660,093680                                                @AZ10910 06917106
*A071700                                                       @AY14007 06917200
*A122900                                                       @AX16038 06917300
*A559100-559140,558900,129220,879900                           @AZ13722 06917400
*C558400,558600                                                @AZ13722 06917500
*A826070,826104,826108,827240,827260                           @AY14037 06919500
*C827200,827220                                                @AY14037 06921500
*A421700,421720                                                @AX16943 06921600
*D088500-088520                                                @AY16252 06922600
*A173200                                                       @AY16256 06923300
*C173500                                                       @AY16256 06924000
*C826104                                                       @AZ19665 06924200
*A826110,826113                                                @AZ19665 06924900
*A301910                                                       @AY19080 06925600
*D838660,838720                                                @AZ24557 06926300
*C911620,911705                                                @AZ24557 06927000
*A911900-911930                                                @AZ24557 06927700
*C173820,173900,173960,173984                                  @AZ26008 06927800
*A173981                                                       @AZ26008 06927900
*C828600                                                       @AX19887 06928000
*A828700-828740                                                @AX19887 06928100
         JMODID                                                         06928400
         SPACE 3                                                        06929804
****************************                                            06934904
*   PHASE INITIALIZATION   *                                            06940000
****************************                                            06960000
EDITENT  JSAVE  BASE=NO                                                 06980000
         JENTRY (X1A01=EDITENT)                                         07000000
         BALR  BASE2,D0                 SET BASE VALUE                  07020000
         USING *,BASE2                                                  07040000
         LA    PARAM1,(ENDEDSCT-EDSCTGO+7)/8 GET EDSECT SIZE            07060000
         JGETCORE DBL=(R10)             GET CORE FOR MOD COMMON AREA    07080000
         LR    MODCOMM,PARAM1           SET UP MOD COMMON AREA BASE     07100000
         XC    VSFLG(SEQSVT+40-VSFLG),VSFLG  CLEAR EDSECT CONSTANTS     07120000
         XC    EDSCTGO(BITFF),EDSCTGO                                   07140000
         MVC   TBGLN(L'TBGLN*6),STDPARM                                 07160000
         XC    PARML,PARML              INITT AREA WITH ZEROS  @AY14007 07170000
         LA    TWKREG1,RSTACK-(EDRSTK-BDRSTK)                           07180000
         ST    TWKREG1,RAVSP            POINTER                         07200000
         LA    TWKREG1,CSTK             CSTK POINTERS INITIALIZATION    07220000
         ST    TWKREG1,NRSTK                                            07240000
         ST    TWKREG1,BCSTK                                            07260000
         ST    TWKREG1,CSTKADR                                          07280000
         LA    TWKREG1,CSTKX                                            07300000
         ST    TWKREG1,NCSTK                                            07320000
         XC    ERRCNT(D5),ERRCNT                                        07340000
         LA    TWKREG1,ERRSTK           INITIALIZE ERROR MSG            07360000
         ST    TWKREG1,AERRSTK          STACK ADDRESS AND               07380000
         ST    TWKREG1,ESTKNDX          INDEX                           07400000
         MVC   DNTERR(ENDDNTL),SEVERR   INIT DSECT TO LOG ERRORS        07420000
         MVI   DERRCD,D0                INITIALIZE ERROR CODE TO ZERO   07440000
*                                                                       07460000
         JGETCORE DBL=63                                                07480000
         ST    PARAM1,DSTGBGN           SET STRING AREA POINTER         07500000
         LA    TWKREG1,MISTGL(,PARAM1)  GET STRING AREA LENGTH          07520000
         ST    TWKREG1,MINPUT           COMPUTEMI DATA POINTER          07540000
         ST    TWKREG1,MINPSTD          AND SAVE                        07560000
         ST    TWKREG1,MINPADJ          SAVE FOR ICTL          @OX07230 07570005
         LA    TWKREG2,STSTGL(,PARAM1)  COMPUTE OTHER DATA POINTER      07580000
         ST    TWKREG2,INPUT            AND                             07600000
         ST    TWKREG2,STNPSTD              SAVE                        07620000
         ST    TWKREG2,STNPADJ          SAVE FOR ICTL          @OX07230 07630005
         SR    TWKREG2,TWKREG1          COMPUTE DIFFERENCE              07640000
         STH   TWKREG2,MINDIF           BETWEEN MINPUT AND INPUT        07660000
         STH   TWKREG2,SVMINDIF         SAVE STANDARD BUFF DIF          07680000
         STH   TWKREG2,MINDFADJ         SAVE FOR ICTL          @OX07230 07690005
         LA    PARAM2,D0(PARAM1,PARAM2)                                 07700000
         ST    PARAM2,SVENDWKA          SAVE STANDARD WORK AREA END     07720000
         ST    PARAM2,ENDWKADJ          SAVE FOR ICTL          @OX07230 07730005
         ST    PARAM2,ENDWKA            END OF DATA AREA PLUS 1         07740000
         XC    JTBLTRT(L'JTBLTRT),JTBLTRT ZERO OUT TRT TABLE            07760000
         LM    BASE2,BASE1,USEBAS                                       07780000
         USING SETBAS,BASE1                                             07800000
SETBAS   EQU   *                                                        07840000
         JEXTRN (X1J01=DRUTENT)                                         07860000
         LA    RLAST,STACK              GET ADDR OF OPERATOR STACK      07880000
         ST    RLAST,SVLAST             AND SAVE IN MOVEABLE POINTER    07900000
         ST    RLAST,ALAST              AND ALSO AS STOPPER             07920000
         USING STACKREC,RLAST                                           07940000
         MVI   LASTOP,JTMSTRM           PUT EXPRESSION TERMINATOR WITH  07960000
         MVI   LASTBIND,HIBIND          BINDING FACTOR INTO STACK       07980000
         DROP  RLAST                                                    08000000
         SET   SFSTCD,ON                INDICATE FIRST CARD             08020000
         SET   SPGRMD,ON                INDICATE PROC'G PRG'R MACRO     08040000
         B     READNEXT                 GO TO READ NEXT STATEMENT       08060000
         USING IFNX1A30,BASE4                                           08080000
SEVERR   EQU   *                        MOVED TO COMMON FOR X1J ERRORS  08086000
         BAL   TLINK,NSNAPERR           LOG ERROR WITH SNAP SHOT        08092000
         DC    AL2(2)                   PADDING TO CALCULATE RETURN     08100000
         DC    AL1(SEV0)                SEVERITY CODE                   08120000
         DC    AL1(ERR0)                ERROR CODE                      08140000
         BR    RETURN                   RETURN TO CALLER                08160000
         USING CS2,BASE2                                                08170000
USEBAS   DC    A(CS2,SETBAS)                                            08180000
STDPARM  DC    A(0,71,56,0-1,8)         STANDARD ICTL PARAMS            08200000
F70      DC    A(70)                    COLUMN 71 DISPLACEMENT          08220000
         EJECT                                                          08240000
*********************************************************************** 08260000
*   READNEXT ROUTINE IS ENTERED EACH TIME A NEW STATEMENT IS TO BE      08280000
*   READ. ITS FUNCTION IS TO PROVIDE A LINKAGE TO INPUT CONTROL         08300000
*   ROUTINE.                                                            08320000
*********************************************************************** 08340000
READNEXT L     LINK,ARDSRC              POINT TO RDSRC                  08360000
         BALR  RETURN,LINK              LINK TO READ SOURCE ROUTINE     08380000
         DC    AL2(RFSTCRD-RFSTCRD)     READ FIRST CARD OF STATEMENT    08400000
         SET  SMISCN,OFF     RESET NO V.T. OUTPUT SWITCH                08410000
         GOIF  SINEOF,OFF=PROCIN        PROCEED IF NOT END OF FILE      08420000
         GOIF  SFSTCD,OFF=EOFRTN                                        08440000
NODATA   EQU   *                                                        08460000
         MVI   DDNDX1,PHASENT           SET UP INDEX FOR BR TO DIR RTN  08480000
         BAL   R3,DIR10                 ISSUE MESSAGES                  08500000
         L     BASE4,CS4ADDR            CHANGE BASE FOR CSECT 4         08520000
         L     LINK,APGRMAC             GET ADDR OF PGRMAC              08522000
         BR    LINK                     BR TO CLOSE FILES               08524000
PROCIN0  XC    JTRLI,JTRLI              CANCEL REC W/NO V.T.            08530000
PROCIN   EQU   *                                                        08540000
         BAL   RETURN,PUTLSIZ           GET O/P BUFFER                  08560000
         BAL   RETURN,HDINIT            INITIALIZE HEADER               08580000
         GOIF SMISCN,ON=PNXT12         GO PUT OUT PR ONLY RECORD        08590000
         EJECT                                                          08600000
*********************************************************************** 08620000
*   PROCNXT ROUTINE IS ENTERED EACH TIME A NEW STATEMENT IN THE         08640000
*   INPUT WORK BUFFER IS TO BE EDITED. IT CALLS GSCAN TO EDIT NAME      08660000
*   AND OPERATION FIELDS INTO OUTPUT BUFFER. IT THEN FANS OUT TO        08680000
*   OPERAND PROCESSORS BASED ON THE TYPES OF OPERATION CODE.            08700000
*   (THERE ARE THREE DISTINCTIVE GROUPINGS OF OPERATION CODES. THEY     08720000
*   ARE PROTOTYPE, MACRO INSTRUCTIONS, AND MACHINE/ASSEMBLER OPERATION  08740000
*   CODES.) COMMENTS STATEMENTS ARE EDITED AS COMMENTS FIELD IN         08760000
*   ASSEMBLER OP STATEMENTS.                                            08780000
*********************************************************************** 08800000
         SPACE 3                                                        08820000
PROCNXT  EQU   *                                                        08840000
PROCN01  EQU   *                                               @OY08021 08854005
         CLI   INPNAME,JBLANK           TEST IF THERE IS NAME FIELD     08860000
         BNE   PROCN10                  YES, THERE IS A NAME            08880000
PROCN02  EQU   *                                                        08900000
         BAL   TLINK,SKPBLK             GO FIND OP CODE                 08906000
         GOIF  SFSTCD,OFF=PNXT299       BR IF NOT FIRST CARD            08912000
PROCN05  EQU   *                                                        08920000
         GOIF  SNOFND,ON=NOICTL         BR IF OP CODE NOT FOUND         08960000
         CLC   D0(L'ICTLX,INPTR),ICTLX  TEST IF ICTL STATEMENT          08980000
         BNE   NOICTL                   BRANCH IF NOT ICTL              09000000
         GOIF  SNMFND,OFF=PROCN07       PROC ICTL IF NO NAME            09020000
         BAL   RETURN,NAMERR            NAME DISALLOWED ON ICTL         09040000
         B     PROCN07                  CONT TO PROCESS ICTL OPERAND    09060000
NOICTL   GOIF  SNMFND,ON=PNXT299        BR IF OP CODE NOT ICTL ON 1ST   09080000
         B     PNXT29                   NO NAME ON FIRST CARD, NON-ICTL 09100000
PROCN07  EQU   *                                                        09120000
         LA    INPTR,L'ICTLX(,INPTR)    BUMP OVER ICTL                  09140000
         ST    INPTR,FPTRSV             DUMMY UP SCAN RESULTS           09160000
         ST    INDEXP,OFPTRSV                                           09180000
         MVI   IOCID,IOCTYP+BIT1                                        09200000
         MVI   OCSAVE,JTICTL                                            09220000
         SET   JPSOP,ON                                                 09240000
         SET   SICTL,ON                 INDICATE ICTL STATEMENT         09260000
         B     TBLOPS                   GO PROCESS OPERAND              09280000
ICTLX    DS    0CL5                                                     09300000
         DC    AL1(JI,JC,JT,JL,JBLANK)  INTERNAL ICTL OP                09320000
         DS    0H                                                       09340000
PROCN10  EQU   *                                                        09360000
         CLI   INPNAME,JASTER           COMMENTS QUERY         @OX10364 09362005
         BE    PROCN15                  BR IF COMMENT CARD     @OX10364 09364005
         CLC   DOTSTAR,INPNAME          HIDENT COMMENT QUERY   @AZ10910 09366006
         BE    PROCN15                  BR IF SO               @AZ10910 09368006
         GOIF  SXMCRO,ON=SSEQ46         BR IF ERR IFO085       @OX07247 09370004
PROCN15  EQU   *                                               @OX10364 09372005
         GOIF  SFSTCD,OFF=PROCN20                                       09380000
         MVI   DDNDX1,PHASENT           SET UP INDEX FOR BR TO DIR RTN  09400000
         BAL   R3,DIR10                 INITIALIZE DIRECTORIES          09420000
PROCN20  EQU   *                                                        09440000
         CLI   INPNAME,JASTER           COULD IT BE COMMENTS STMT       09460000
         BE    PNXT11                   BRANCH IF YES                   09480000
         CLC   INPNAME(L'DOTSTAR),DOTSTAR                               09500000
         BNE   PNXT20                   BRANCH IF NOT COMMENTS AT ALL   09520000
         EJECT                                                          09540000
*****************************************                               09560000
*        EDIT COMMENTS STATEMENT        *                               09580000
*****************************************                               09600000
PNXT10   EQU   *                                                        09620000
         MVI   OCSAVE,JTHCMNT           VIRTUAL TEXT SUPPRESSION CTRL   09640000
         SET   SDTCMT,ON                INDICATE '.*' TYPE COMMENTS     09680000
         B     PNXT13                   BYPASS NEXT                     09686000
PNXT12   SET   SMISCN,OFF               RESET NO V.T. OUTPUT SWITCH     09692000
PNXT11   SET   STRCMT,ON                INDICATE '*' TYPE COMMENTS      09700000
         MVI   OCSAVE,JTCMNT            VIRTUAL TEXT SUPPRESSION CTRL   09720000
PNXT13   EQU   *                                                        09740000
         L     INPTR,ENDATA                                             09760000
         L     LINK,ARDSRC05            POINT TO RDSRC05                09780000
         BALR  RETURN,LINK              READ ALL CONTINUATIONS          09800000
         DC    AL2(RALLCNT-RFSTCRD)     READ ALL VALID CONTINUATIONS    09820000
         L     INPTR,INPUT                                              09840000
PNXT15   EQU   *                                               @OY08060 09850005
         MVC   JTFLGA(D4),PUTFLG        INSERT COMMENTS FLAGS AND IOC   09860000
         GOIF  SXPRTO,ON=BADPRTO        LOG ERROR IF EXPECTING PROTO    09880000
         CLI   OCSAVE,JTHCMNT           TEST IF .* TYPE COMMENT         09900000
         BNE   WRAPFLD                  BRANCH IF NOT                   09920000
         MVI   JTIOP1,JTHCMNT           INDICATE HIDDEN COMMENTS        09940000
         SET   JPRONLY,OFF              .* TYPE CMNT, RESET PRINT ONLY  09950000
         GOIF  SMDEF,ON=WRAPFLD         .* TYPE MUST BE IN MACRO DEF    09960000
         BAL   TLINK,ABSERR             '.*'-TYPE COMMENTS ARE          09980000
         DC    AL1(6*16+SEV17)          DISALLOWED IN OPEN CODE         10000000
         DC    AL1(ERR17)               LOG ERR AND STOP EDIT ON STMT   10020000
         EJECT                                                          10040000
PNXT20   EQU   *                                                        10060000
         SET   SNMFND,ON                INDICATE NAME FOUND             10080000
         SET   SENAME,ON                                                10100000
         SET   SKPNAME,ON               INDICATE SKIPPING NAME FIELD    10120000
         BAL   RETURN,GSCAN             SKIP NAME FIELD                 10140000
         SET   SKPNAME,OFF                                              10160000
         SET   SENAME,OFF                                               10180000
         B     PROCN02                  1ST CD HAS NAME, CK IF ICTL     10200000
         SPACE 3                                                        10300000
PNXT29   EQU   *                                                        10320000
         MVI   DDNDX1,PHASENT           SET UP INDEX FOR BR TO DIR RTN  10340000
         BAL   R3,DIR10                 INITIALIZE DIRECTORIES          10360000
         SPACE 3                                                        10380000
PNXT299  EQU   *                                                        10382000
         CLI   INPOP,JAMPER             IS OP CODE FIELD A V. S.        10384000
         BNE   PNXT30                   BR IF NOT VARIABLE SYMBOL       10386000
         GOIF  SPGRMD,OFF=PNXT30        BR IF NOT IN PRGR MACS          10388000
         GOIF  SMDEF,ON=PNXT30          BR IF IN MACRO DEF              10390000
         MVI   DDNDX1,OPENENT           SET TO INITIALIZE OPEN CODE     10392000
         BAL   R3,DIR10                 GO DO IT                        10394000
         SET   (SPGRMD,SOPNCD),FLIP     OUT OF PRGMR MACS, NOW OPEN CD  10396000
         EJECT                                                          10400000
*****************************************                               10420000
*        PROCESS OPERATION FIELD        *                               10440000
*****************************************                               10460000
PNXT30   EQU   *                                                        10480000
         SET   SEOPCD,ON                INDICATE EDITING OP CODE        10500000
         GOIF  SNOFND,ON=NOPCD          OP FIELD NOT FOUND, LOG ERROR   10540000
         BAL   RETURN,GSCAN             SCAN OPERATION FIELD            10560000
         LCR   TWKREG1,INDEXO           GET OUTPUT ABSOLUTE ADDRESS     10580000
         A     TWKREG1,OFPTRSV          COMPUTE RELATIVE ADDRESS        10600000
         STH   TWKREG1,JTOCP            INSERT OP CODE FIELD REL ADDR   10620000
         ST    INPTR,OPNDPTR            REMEMBER WHERE TO COME BACK     10640000
         C     R1,ENDATA                OP CODE MUST BE FOLLOWED BY BLK 10646000
         BNL   INVOP                    BR FOR ERROR IF NOT             10652000
         GOIF  (ROSYM,RVSYM),NONE=INVOP LOG ERROR IF INVALID            10660000
         GOIF  RVSYM,ON=PUTOC10         BRANCH IF OP CODE A V.S.        10680000
         TM    DERRCD,BITFF             TEST IF ERROR FOUND IN D RTN    10700000
         BZ    PUTOC20                  BRANCH IF NOT                   10720000
         MVI   OCSAVE,INVALV            ELSE, DUMMY UP INTERNAL OP      10740000
         SET   JPRONLY,ON               AND INDICATE PRINTONLY          10760000
         B     PUTOC40                  EDIT AS MACHINE OP              10780000
PUTOC10  EQU   *                                                        10800000
         MVI   IOCID,DMCHIN             DUMMY UP OP CODE ID AND         10820000
         B     PUTOC40                  EDIT AS MACHINE OP              10840000
PUTOC20  EQU   *                                                        10860000
         TM    IOCID,BIT0+BIT1          TEST IF MACRO CALL/PROTO        10880000
         BNZ   PUTOC25                  BRANCH IF NOT                   10900000
         SET   PROTOCAL,ON              ELSE, SO INDICATE               10920000
         B     PUTOC40                  AND BRANCH                      10940000
PUTOC25  EQU   *                                                        10960000
         L     PARAM2,OCPTRSV           RESTORE IOC POINTER             10980000
         MVC   JTFLGA,D0(PARAM2)        INSERT FLAGA BYTE FOR OP CODE   11000000
         IC    PARM,D1(,PARAM2)         PICK UP OP CODE BYTE ONE        11020000
         SLL   PARM,D8                  SHIFT TO 3RD BYTE IN PARM       11040000
         BM    PUTOC30                  BRANCH IF 1 BYTE OPCODE         11060000
         IC    PARM,D2(,PARAM2)         PICK UP OP CODE BYTE TWO        11080000
PUTOC30  EQU   *                                                        11100000
PUTOC35  EQU   *                                                        11120000
         STH   PARM,JTIOP               INSERT INTO E.T.                11140000
         GOIF  SXPRTO,OFF=PUTOC40       CAN'T BE PROTOTYPE IF HERE      11160000
         L     INPTR,INPUT              BACK UP TO BEGINNING OF FIELD   11180000
         BAL   RETURN,RESETPTR          RESET TEXT POINTERS             11200000
         B     BDPTO                    NOW, GO LOG ERROR               11220000
PUTOC40  EQU   *                                                        11240000
         SET   SEOPCD,OFF                                               11260000
         GOIF  SNMFND,ON=PNAME          EDIT NAME IF FOUND ONE          11280000
         MVI   GSUMRY,D0                ZERO OUT OP CODE FLAGS          11300000
         B     TBLOPS                   ELSE, EDIT OPERAND              11320000
         EJECT                                                          11340000
************************************                                    11360000
*        PROCESS NAME FIELD        *                                    11380000
************************************                                    11400000
PNAME    EQU   *                                                        11420000
         L     INPTR,INPUT              BACK TO EDIT NAME FIELD         11440000
         GOIF  (SKPMND,SKPEND),ANY=PNAME1    BYPASS NAME PROC ON ABORT  11460000
         SET   SENAME,ON                INDICATE EDITING NAME FIELD     11480000
         BAL   RETURN,GSCAN             YES, SCAN NAME FIELD            11500000
         ST    R15,NAML1                SAVE NAME FIELD LENGTH          11520000
         MVC   VSTAT(L'FLGBYT),FLGBYT   SAVE NAME FIELD V.S. STATUS     11540000
         LCR   TWKREG1,INDEXO           COMPUTE NAME FIELD POINTER      11560000
         A     TWKREG1,OFPTRSV                                          11580000
         STH   TWKREG1,JTNMP            AND ENTER IT                    11600000
         MVC   NAMBYT,GSUMRY            SAVE NAME STATUS IN CASE SS     11620000
         L     INPTR,OPNDPTR            RESTORE OPERAND POINTER         11640000
PNAME1   EQU   *                                                        11660000
         ST    INPTR,FPTRSV             AND SAVE                        11680000
         SET   SENAME,OFF                                               11700000
         B     TBLOPS                   GO EDIT OPERAND FIELD           11720000
         EJECT                                                          11740000
*********************************************************************** 11760000
*   MACINST ROUTINE IS ENTERED WHEN A 'MACRO INSTRUCTION' OR A PROTO-   11780000
*   TYPE STATEMENT IS ENCOUNTERED. (ANY OP CODE THAT CAN NOT BE FOUND   11800000
*   IN THE OP CODE TABLE IS ASSUMED A 'MACRO INSTRUCTION'.) THIS        11820000
*   ROUTINE IS ALSO CALLED BY THE PROTOTYPE SCANNER TO PROCESS KEYWORD  11840000
*   PARAMETER WITH A NORMAL VALUE. IT MAKES SYNTACTICAL SCANNING OF     11860000
*   OPERAND FIELDS, BUILDS EDITED TEXT RECORDS, OBTAINS THE NOTE/POINT  11880000
*   DATA OF THE ASSOCIATED MACRO DEFINITION EDITED TEXT, MAKES MACRO    11900000
*   NAME ENTRIES INTO MACRO NAME TABLE IS NOT PREVIOUSLY ENTERED,       11920000
*   AND MAKES OPERAND ENTRIES INTO ORDINARY SYMBOL REFERENCE DIRECTORY. 11940000
*********************************************************************** 11960000
         SPACE 3                                                        11980000
MACINST  EQU   *                                                        12000000
         SET   SEOPCD,OFF                                               12020000
         SET   SEOPND,ON                                                12040000
         MVI   GSUMRY,D0                ZERO OUT OP CODE FLAGS          12060000
         BAL   RETURN,STMTDSQ           STATEMENT SEQUENCING            12080000
         SET   JPSOP,ON                 INDICATE ASSEMBLER OP           12100000
         LA    R0,D1                    SET COLCTR AND CRDCTR           12120000
         ST    R0,COLCTR                TO 0 AND 1 RESPECTIVELY         12140000
         MVC   DTLENG(L'DTLENG),TSRCLN2 SET DATA LENGTH                 12160000
         XC    PRNLVL,PRNLVL            RESET PAREN LEVEL COUNT TO ZERO 12180000
         MVI   SWITCH6,D0               RESET SWITCHES                  12200000
         L     LINK,AMIPRTO             GET LINKAGE                     12220000
         BALR  RETURN,LINK              EDIT PROTO/M CALL               12240000
         SET   SMI,OFF                  SET OFF MI SWITCH               12260000
         SET   SEOPND,OFF                                               12280000
         SET   SMISCN,OFF               RESET NO V.T. SW.      @AX16038 12290000
         NI    JHWORD2+1,BITFF-(DMIENT) RESET SECOND DMIENT SW @AZ13722 12292000
         B     WRAPCNT                  THEN EXIT                       12300000
AMIPRTO  DC    A(MIPRTOIN)              ADDRESS OF MIPRTOIN             12320000
H1       DC    H'1'                     .                               12340000
H2       DC    H'2'                     .                               12360000
H3       DC    H'3'                     .                               12380000
H6       DC    H'6'                     .                               12400000
         DS    0F                                                       12420000
F7       DC    H'0'                     .                               12440000
H7       DC    H'7'                     .                               12460000
H63      DC    H'63'                    STD DBLE-WORD SIZE OF WORK AREA 12480000
H8       DC    H'8'                     .                               12500000
H10      DC    H'10'                    .                               12520000
H255     DC    H'255'                   .                               12540000
         EJECT                                                          12560000
*********************************************************************** 12580000
*   WRAPFLD ROUTINE IS ENTERED TO WRAP UP THE EDITING OF A STATEMENT    12600000
*   OR OPERAND WHEN END OF STATEMENT OR OPERAND IS REACHED. IT EDITS    12620000
*   COMMENTS FIELD, COMPUTES EDITED TEXT RECORD LENGTH, AND, IF NOT     12640000
*   SUPPRESSED, MAKES THE REMAINING DIRECTORY ENTRIES.                  12660000
*   CARDS, WITHIN A STATEMENT THAT ARE TO BE FLUSHED ARE FLUSHED, AND   12680000
*   ERROR RECORD BUILT FOR THE STATEMENT IS OUTPUT.                     12700000
*********************************************************************** 12720000
         SPACE 3                                                        12740000
WPOPND   EQU   *                                                        12760000
         MVI   D0(INDEXP),JBLANK        INSERT A BLANK FOR ASS SCANNER  12780000
         LA    INDEXP,D1(,INDEXP)       WHICH IS NOT INCLUDED IN THE   X12800000
                                        LENGTH COUNT IN JTOCP           12820000
WRAPFLD  EQU   *                                                        12840000
         L     RCNT,INPUT               BEGIN OF FIELD                  12860000
WRAPF1   EQU   *                                                        12880000
         TM    SWITCH4,(SPGRMD+SOPNCD)  IF PGMMAC OR OPEN CODE  OX04102 12890031
         BZ    EDTSTG1                  IF NOT- BRANCH          OX04102 12892031
         GOIF  SINCPY,ON=EDTSTG1        FLAG IS OFF THEN CHK    OX04102 12894031
         SET   JPRGICTL,ON              FOR COPY. USE PGM ICTL  OX04102 12896031
EDTSTG1  EQU   *                                                OX04102 12898031
         BAL   TLINK,SKPBLK             GO FIND COMMENTS FIELD          12900000
         GOIF  SNOFND,ON=EDTSTG         NO COMMENTS                     12920000
         ST    INPTR,FPTRSV             SAVE INPTR                      12940000
EDTCMT   EQU   *                        COMMENTS FIELD FOUND            12960000
         L     TWKREG2,ENDATA           UPPER LIMIT OF SCAN             12980000
EDTCMT1  EQU   *                                                        13000000
         BCTR  TWKREG2,0                ELIMINATE BLANKS FROM LAST COL. 13020000
         CLI   D0(TWKREG2),JBLANK       TO FIND END OF COMMENTS FIELD   13040000
         BE    EDTCMT1                  LOOP TO END OF COMMENTS         13060000
         LA    INPTR,D1(,TWKREG2)       SIMULATE SCAN RESULTS           13080000
         LCR   TWKREG1,INDEXO           COMPUTE RELATIVE ADDRESS OF     13100000
         AR    TWKREG1,INDEXP           COMMENTS FIELD IN TEXT          13120000
         STH   TWKREG1,JTCPR            STORE IN COMMENTS POINTER       13140000
         ST    BASE2,JFWORD2            SAVE CS3 BASE                   13160000
         L     BASE2,USEBAS             LOAD CS2 BASE                   13180000
         BAL   R12,VTPUT                EDIT COMMENTS FIELD             13200000
         L     BASE2,JFWORD2            RESTORE PREVIOUS BASE           13220000
EDTSTG   EQU   *                                                        13240000
         L     GSPTR,DSTGBGN            POINT TO BEGIN OF STRING AREA   13260000
         CLI   D0(GSPTR),D0             TEST IF NO STRING               13280000
         BE    EDTLEN                   BRANCH IF NO STRING             13300000
         LCR   TWKREG1,INDEXO           COMPUTE RELATIVE ADDRESS OF     13320000
         AR    TWKREG1,INDEXP           STRING FIELD                    13340000
         STH   TWKREG1,JTSPR            AND ENTER IT IN E.T.            13360000
         L     DSTGPTR,DSTGNDX          POINT TO END OF STRING AREA     13380000
         MVI   SCCNT,D0                 INDICATE END OF STRING          13400000
         SR    DSTGPTR,GSPTR            COMPUTE STRING AREA MOVE LENGTH 13420000
         BCTR  INDEXP,0                 BACK UP JTEXTA PTR              13440000
         EX    DSTGPTR,ETMOV            MOVE STRING TO TEXT             13460000
         LA    INDEXP,D2(DSTGPTR,INDEXP) BUMP POINTER                   13480000
*                                                                       13500000
EDTLEN   EQU   *                                                        13520000
         LR    TWKREG1,INDEXP           COMPUTE O/P TEXT LENGTH         13540000
         SR    TWKREG1,INDEXO                                           13560000
         STH   TWKREG1,JTRLI            STORE TRUE LENGTH IN TEXT       13580000
*        TO MAKE DEFINITION DIRECTORY ENTRY                             13600000
         CLI   SDENTR,D0                TEST IF TO MAKE DIR ENTRY       13620000
         BE    EDTLEN3                  NO                              13640000
         GOIF SMISCN,OFF=EDTLEN2        GO PUT OUT DIR ENTRY            13644000
         CLI   ERRCNT1,D0               NO V.T. TO BE OUTPUTTED SO      13648000
         BNE   WRRTN                     IF ERRORS, THEN NO DIR ENTRY   13652000
EDTLEN2  EQU   *                                                        13656000
         MVC   DDNDX1(D1),SDENTR        EST INDEX FOR BR INTO DIR RTN   13660000
         LM    PARM,PARAM2,NAMP         GET POINTERS                    13690000
         BAL   R3,DIRENT                MAKE D ENTRY                    13710000
         MVI   SDENTR,D0                SET OFF DEFINITION D-ENTRY SW   13720000
EDTLEN3  CLI   SDENTR1,D0               CHECK IF WXTRN/EXTRN OPERAND    13722000
         BE    WRRTN                    NO, THEN NO DIR ENTRY REQ       13724000
         MVC   DDNDX1(D1),SDENTR1       GET DIR ENTRY INDEX             13726000
         L     PARM,NAMP1               GET PTR TO OPERAND              13728400
         BAL   R3,DIRENT                GO MAKE O/SYMBOL DEFINITION     13730400
         MVI   SDENTR1,D0               CLEAR DIR INDEX BYTE            13732000
*                                                                       13740000
WRRTN    EQU   *                                                        13760000
         GOIF  SCTLRTN,ON=WRETURN       RETURN IF SO INDICATED          13780000
*                                                                       13800000
*                                                                       13820000
WRAPCNT  EQU   *                                                        13840000
         BAL   RETURN,WRAPERR           WRITE ERROR RECORD              13860000
         GOIF  SPRVCT,OFF=WREXIT        EXIT IF NO MORE CONT'N CARDS    13880000
         GOIF  SINEOF,ON=UNXPEOF        LOG ERROR IF END OF FILE        13900000
         LA    R11,SZCMT                GET BUFFER SIZE                 13920000
         BAL   RETURN,OPUTL             GET O/P BUFFER                  13940000
         L     LINK,ARDSRC              POINT TO RDSRC                  13960000
         BALR  RETURN,LINK              BYPASS ALL CONTINUATION CARDS   13980000
         DC    AL2(RBYPCNT-RFSTCRD)     BYPASS ONE CONTINUATION CARD    14000000
         GOIF  SINEOF,ON=UNXPEOF        LOG ERROR IF END OF FILE        14020000
         MVC   JTRLI(L'FXDHD),FXDHD     MOVE IN FIXED HEAD              14040000
         LA    INDEXP,D2(,INDEXP)       AND POINT OVER DUMMY FIELD      14060000
         SET   JNOCNT,ON                DO NOT ASSIGN STATEMENT NUMBER  14080000
         B     WRAPFLD                  GO PROCESS CONTINUED STATEMENT  14100000
*                                                                       14120000
WRAPERR  EQU   *                                                        14140000
         CLI   ERRCNT1,D0               TEST IF THERE ARE ERRORS        14160000
         BCR   BEQ,RETURN               RETURN IF NO                    14180000
         L     INDEXO,OUTADR            SET BASE               @AX11012 14182006
         GOIF SMISCN,ON=PROCIN0         PR ONLY RECORD TO BE FORCED     14190000
         SET   JERR,ON                  ELSE, INDIACTE MSG FOLLOWS      14220000
         CLI   JTIOP,JTEND              CHECK FOR GEN END       OX02976 14222031
         BNE   WRAPERR1                                         OX02976 14224031
         SET   (JDEF,JREF),ON                                   OX02976 14226031
WRAPERR1 EQU   *                                                        14230000
         ST    RETURN,EDTSVZ                                            14240000
         L     R4,AERRSTK               SET ADDRESSABILITY              14260000
         ST    R4,ESTKNDX               RESET INDEX                     14280000
         USING ERRMESS,R4                                               14300000
         LH    R3,ERRCNT                                                14320000
WERRLP   SR    R5,R5                                                    14340000
         IC    R5,ENTRYLNG              PICK UP ENTRY LENGTH            14360000
         LA    R11,JERRHL(R5)           COMPUTE LENGTH                  14380000
         JPUTL FILE=FILE1,BUFREQ=(R11)  GET O/P BUFFER                  14400000
         USING JERRCD,R11                                               14420000
         MVC   JEFLGA(L'ERRHDR),ERRHDR  MOVE HEADER                     14440000
         LA    R10,JERRHL(,R5)          COMPUTE RECORD LENGTH           14460000
         STH   R10,JERECL                                               14480000
         LA    R5,EMSGHL(,R5)                                           14500000
         EX    R5,MVERR                 MOVE MSG ENTRIES                14520000
         LA    R4,ERMEND(,R4)           BUMP DSECT BASE TO NEXT ERR MSG 14540000
         BCT   R3,WERRLP                DUMP NEXT ERROR MSG             14560000
         STH   R3,ERRCNT                CLEAR ERROR COUNT               14580000
         MVI   ERRSTK+2,D0                                              14600000
         L     RETURN,EDTSVZ                                            14620000
         BR    RETURN                   RETURN TO CALLER                14640000
MVERR    MVC   JESEV(0),EMSGSVTY        OFF-THE-LINE MOVE               14660000
         DROP  R4,R11                                                   14680000
         USING JTEXTA,INDEXP                                            14700000
ERRHDR   DS    0CL6                     ERROR RECORD HEADER             14720000
         DC    AL1(JPSOP)               ASSEMBLER OP                    14740000
         DC    AL1(JNOCNT)              DON'T COUNT STMT NUMBER         14760000
         DC    AL1(JTERROR)             INTERNAL OP                     14780000
         DC    AL1(0,0,0)               .                               14800000
EERRHDR  EQU   *                                                        14820000
         DS    0H                                                       14840000
         SPACE                                                          14860000
WREXIT   SET   (SFSTCD,SUPDNT),OFF      RESET SWITCHES                  14880000
         SET   (SNMFND,SNOFND,SDTCMT,STRCMT),OFF                        14900000
         SET   (SBYCNT,SBYONE),OFF      RESET SWITCHES                  14920000
         GOIF  SNOPND,OFF=READNEXT      BRANCH IF NO RETURN             14940000
         SPACE                                                          14960000
WRETURN  SET   (SNOPND,SCTLRTN),OFF                                     14980000
         L     RETURN,RTNSV             RESTORE RETURN POINT            15000000
         BR    RETURN                   RETURN TO CALLER                15020000
         EJECT                                                          16800000
         USING DCSTK,PARM                                               16940000
NOPCD    EQU   *                                                        16960000
         GOIF  SXMCRO,ON=SSEQ46         CLOSE M DEF IF EXP MAC  OX00095 16970003
         L     INPTR,INPUT              BACK UP TO BEGIN OF FIELD       16980000
         BAL   TLINK,ABSERR             OP CODE NOT FOUND IN 1ST CARD   17000000
         DC    AL1(SEV53)               .                               17020000
         DC    AL1(ERR53)               OP CODE NOT FOUND IN 1ST CARD   17040000
         B     WRAPFLD                  WRAP UP STMT                    17080000
RENTFULL EQU   *                                                        17100000
         BAL   TLINK,ABSERR             RSTACK FULL                     17120000
         DC    AL1(5*16+SEV46)          CLEANUP                         17140000
         DC    AL1(ERR46)               STMT COMPLEXITY EXCEEDED        17160000
ILGVS    EQU   *                                                        17180000
         L     INPTR,TPSAVE             BACK TO BEGIN OF FIELD FOR SNAP 17190000
         LA    R15,D1(,R15)             INCREASE LENGTH FOR &           17192000
         LR    R0,R1                    SAVE LENGTH                     17200000
         BAL   TLINK,SNAPERR            TAKE A SNAP SHOT                17220000
         DC    AL2(2)                   .                               17240000
         DC    AL1(4*16+SEV39)          CLN0                            17260000
         DC    AL1(ERR39)               TRY TO CONTINUE EDITING         17280000
INVSUBS  EQU   *                                                        17300000
         L     INPTR,TPSAVE1            BACK TO BEG OF SNAPFIEL OX00224 17310001
         BCTR  INPTR,D0                 BEGIN SNAP WITH LEFT PAREN      17315000
         GOIF  DMIENT,ON=INVSUBS1       ERROR FROM MI          @OX06626 17317004
         LR    R0,R1                    SAVE R1                @OY16256 17320000
         BAL   TLINK,SNAPERRL           TAKE A SNAP SHOT                17330000
         DC    AL2(2)                   .                               17340000
         DC    AL1(4*16+SEV37)                                 @OY16256 17350000
         DC    AL1(ERR37)               SUBSCRIPT ERROR                 17354000
INVSUBS1 GOIF  SUBLST,ON=INVSUBS2       BR IF ERROR IN SUBLIST @OZ26008 17358000
         LR    R0,R1                    SAVE R1                @OZ26008 17362000
         BAL   TLINK,SNAPERRL           TAKE A SNAPSHOT...     @OX06626 17366000
         DC    AL2(2)                   AND RETURN TO CLN0...  @OX06626 17370000
         DC    AL1(4*16+SEV37)          AFTER LOGGING...       @OZ26008 17374000
         DC    AL1(ERR37)               SUBSCRIPT ERROR        @OX06626 17378000
INVSUBS2 L     BASE3,AMIPRTO            RESTORE BASE REG       @OZ26008 17382000
         BAL   TLINK,SNAPERRL             SUBSCRIPT ERROR      @OZ26008 17386000
         DC    AL2(2)                                          @OX06626 17398804
         DC    AL1(10*16+SEV37)                                @OX06626 17399204
         DC    AL1(ERR37)                                      @OX06626 17399604
BADPRTO  EQU   *                                                        17400000
         BAL   TLINK,ABSERR             COMMENTS STMT FOUND             17420000
         DC    AL1(6*16+SEV87)          WHILE                           17440000
         DC    AL1(ERR87)               EXPECTING PROTOTYPE             17460000
INVOP    EQU    *                                                       17480000
         GOIF  SXMCRO,ON=SSEQ46         BR IF ERR IFO085       @OX07247 17490004
         L     INPTR,INPUT              GET END OF SCAN POINT           17500000
         BAL   RETURN,RESETPTR          RESET POINTERS                  17520000
         GOIF  SXPRTO,ON=BDPTO          BRANCH IF EXPECTING PROTO       17540000
         BAL   TLINK,ABSERR             LOG HARD ERROR                  17560000
         DC    AL1(6*16+SEV54)          WRAPFLD                         17580000
         DC    AL1(ERR54)               OP OCDE NOT O-SYM OR V-SYM      17600000
CSTKFULL EQU   *                                                        17620000
         BAL   TLINK,ABSERR             MORE THAN 5 LEVELS OF COPY CODE 17640000
         DC    AL1(2*16+SEV61)          AOPPTR                          17660000
         DC    AL1(ERR61)               CURRENT LIMIT IS 5 LEVELS       17680000
GLXERRZ  ST    INPTR,OPNDPTR                                            17700000
GLXE1    LA    INPTR,D1(,INPTR)                                         17720000
GLXERR   CLI   D0(INPTR),JCOMMA                                         17740000
         BE    GLXE2                    LOG ERROR WHEN FIND A COMMA     17760000
         CLI   D0(INPTR),JBLANK         OR A BLANK                      17780000
         BNE   GLXE1                    ELSE, KEEP LOOKING              17800000
GLXE2    LR    R15,INPTR                                                17820000
         LR    R0,INPTR                                                 17840000
         L     INPTR,OPNDPTR                                            17860000
         SR    R15,INPTR                                                17880000
         BNP   GLXE3                    MAKE SURE YOU GET A POS. VALUE  17890000
         BCTR  R15,0                    BACK UP 1                       17900000
GLXE3    BAL   TLINK,SNAPERR            LOG ERROR NOW                   17920000
         DC    AL2(1)                   .                               17940000
         DC    AL1(SEV29)               BAD DECLARATION                 17960000
         DC    AL1(ERR29)               BAD DECLARATION                 17980000
         LR    INPTR,R0                                                 18000000
         B     GLX10                    CHECK NEXT SYMBOL               18020000
NOPNDER  BAL   TLINK,ABSERR             THIS STMT SHOULD HAVE OPERAND   18040000
         DC    AL1(7*16+SEV62)          BUT -                           18060000
         DC    AL1(ERR62)               MISSING                         18080000
BDPTO    BAL   TLINK,ABSERR             THIS PROTOTYPE STMT             18100000
         DC    AL1(6*16+SEV43)          HAS AN ILLEGAL OP CODE          18120000
         DC    AL1(ERR43)               FORMAT                          18140000
ILDIM    ST    INPTR,OPNDPTR            SAVE THE BEGIN POINT            18146000
ILDIM1   LA    INPTR,D1(,INPTR)         BUMP UP TO THE NEXT CHARACTER   18152000
         CLI   D0(INPTR),JCOMMA         IS IT A COMMA                   18158000
         BE    ILDIM2                   YES, GO LOG ERR FOR THIS OPND   18164000
         CLI   D0(INPTR),JBLANK         WHAT ABOUT A BLANK              18170000
         BNE   ILDIM1                   NO, LOOP UNTIL FIND TERMINATOR  18176000
ILDIM2   LR    R15,INPTR                GET THE END POINT               18182000
         LR    INPTR,TRTN               GET THE BEGIN POINT             18188000
         LR    TRTN,R15                 SAVE FOR CLEANUP ROUTINE        18194000
         SR    R15,INPTR                CALCULATE LENGTH OF THIS OPND   18200000
         BCTR  INPTR,D0                 BEGIN SNAP WITH LEFT PAREN      18206000
         BAL   TLINK,SNAPERR            TAKE A SNAP SHOT                18220000
         DC    AL2(2)                   .                               18240000
         DC    AL1(4*16+SEV30)          (CLN0)  OR                      18260000
         DC    AL1(ERR30)               EXCEEDS 10 DSDT DIGITS          18280000
HIDIM    XR    INPTR,TRTN               SAVE INPTR AND BACK UP          18300000
         XR    TRTN,INPTR               TO THE LOCATION AT TRTN         18320000
         XR    INPTR,TRTN                                               18340000
         LR    R3,PARM                  SAVE WHERE SYMBOL STARTS        18360000
         STH   PARAM2,JHWORD1           SAVE SYMBOL LENGTH              18362000
         BCTR  TWKREG2,D0               ADJUST MOVE LENGTH OF DIMENSION 18364000
         BAL   TLINK,SNAPERR            TAKE A SNAP OF DIMENSION        18366000
         DC    AL2(2)                   ERROR--                         18368000
         DC    AL1(SEV30)               DIMENSION                       18370000
         DC    AL1(ERR30)               TOO LARGE                       18372000
         LR    PARM,R3                  RESTORE -WHERE IT'S AT-         18380000
         LH    PARAM2,JHWORD1           RESTORE SYMBOL LENGTH           18400000
         MVC   JHWORD1(L'H32K),H32K                                     18420000
         LR    INPTR,TRTN                                               18440000
         B     VSDNDX                   CONTINUE EDITING                18460000
ILGLXP   EQU   *                                                        18480000
         BAL   TLINK,SNAPERR            TAKE A SNAP SHOT                18500000
         DC    AL2(1)                   .                               18520000
         DC    AL1(5*16+SEV33)          CLEANUP                         18540000
         DC    AL1(ERR33)               IN SET STATEMENT                18560000
ILSETA   BAL   TLINK,ABSERR             BOOLEAN EXPRESSION              18640000
         DC    AL1(5*16+SEV59)          NOT ALLOWED IN                  18660000
         DC    AL1(ERR59)               SETA EXPRESSION                 18680000
ILUNARY  EQU   *                                                        18700000
         BAL   TLINK,ABSERR             INVALID UNARY OPERATOR          18720000
         DC    AL1(5*16+SEV52)          CLEANUP                         18740000
         DC    AL1(ERR52)               UNARY OPERATOR NOT + OR -       18760000
INVDUP   EQU   *                                                        18780000
         BAL   TLINK,SNAPERRL           GO PUT OUT SNAP SHOT            18800000
         DC    AL2(1)                   PADDING TO CALCULATE RETURN     18820000
         DC    AL1(5*16+SEV57)          NOT TERMINATED BY               18840000
         DC    AL1(ERR57)               RIGHT PAREN                     18860000
INVSUB   BAL   TLINK,ABSERR             INVALID SUBSTRING NOTATION      18880000
         DC    AL1(5*16+SEV70)          CLEANUP                         18900000
         DC    AL1(ERR70)               NOT TERMINATED BY , AND )       18920000
NOQUOTE  BAL   TLINK,ABSERR             SETC EXPRESSION                 18940000
         DC    AL1(5*16+SEV58)          CLEANUP                         18960000
         DC    AL1(ERR58)               TERMINATED BY A QUOTE           18980000
INVFM    EQU   *                                                        19080000
         BAL   TLINK,SNAPERRL           TAKE 8 CHAR SNAP SHOT           19100000
         DC    AL2(1)                   .                               19120000
         DC    AL1(5*16+SEV32)          CLEANUP                         19140000
         DC    AL1(ERR32)               .                               19160000
ILATTR   L     INPTR,TPSAVE             BACK TO BEGIN PT FOR SNAP SHOT  19180000
         MVI   ATTRSV,D0                RESET ATTRIBUTE INDICATOR       19200000
         BAL   TLINK,SNAPERRL           TAKE A SNAP SHOT                19220000
         DC    AL2(1)                   TO CALCULATE BR TO ABSOLUTE ERR 19240000
         DC    AL1(5*16+SEV36)          CLEANUP                         19260000
         DC    AL1(ERR36)               .                               19280000
ILSETX   EQU   INVFM                                                    19300000
ILSETNM  BAL   TLINK,ABSERR             ILLEGAL NAME IN SET STMT        19320000
         DC    AL1(SEV31)               .                               19340000
         DC    AL1(ERR31)               NOT V-SYM OR V-SYM WRONG TYPE   19360000
         B     AOPXIT                   STOP EDIT ON THIS ERROR         19380000
NAMERR   EQU   *                                                        19400000
         BAL   TLINK,WRNERR             INVALID NAME DETECTED           19420000
         DC    AL1(SEV16)               GO LOG ERROR AND RETURN TO      19440000
         DC    AL1(ERR16)               CONTINUE PROC STATEMENT         19460000
         SET   JSUBNAME,OFF             SUB NOT REQ'D IF NAME WAS V.S.  19470000
         SET   JNMERR,ON                INDICATE NAME ERROR             19480000
         MVI   SDENTR,D0                INSURE NO DIR ENTRY ON NAME ERR 19500000
         BR    RETURN                   RETURN TO CALLER                19520000
ILBXP    BAL   TLINK,ABSERR             INVALID EXPRESSION IN SETB      19540000
         DC    AL1(5*16+SEV21)          STATEMENT                       19560000
         DC    AL1(ERR21)               .                               19580000
ILSDT    EQU   *                                                        19600000
         SR    R15,INPTR                SET LENGTH FOR SNAP             19610000
         L     INPTR,TPSAVE             BACK TO BEGIN PT FOR SNAP SHOT  19620000
         LR    R15,INPTR                GET TERMINATOR ADDR             19630000
         BAL   TLINK,SNAPERR            TAKE A SNAP SHOT                19640000
         DC    AL2(1)                   .                               19660000
         DC    AL1(5*16+SEV38)          CLEANUP                         19680000
         DC    AL1(ERR38)               .                               19700000
         EJECT                                                          19710000
*********************************************************************** 19720000
*                                                                       19730000
* CHANGE BASE REGISTER BEFORE ENTERING THE FOURTH CSECT                 19740000
*                                                                       19750000
*********************************************************************** 19760000
SNAPERRL LA    R15,D7                   SET UP TO DUMP 8 BYTES          19770000
SNAPERR  L     LINK,ASNAPERR            GET ROUTINE ADDR                19775000
         B     SAVOLD                   SAVE OLD FIRST                  19780000
*                                                                       19785000
ABSERR   L     LINK,AABSERR             GET ROUTINE ADDR                19790000
         B     SAVOLD                   SAVE OLD FIRST                  19795000
*                                                                       19800000
WRNERR   L     LINK,AWRNERR             GET ROUTINE ADDR                19805000
         B     SAVOLD                   SAVE OLD FIRST                  19810000
*                                                                       19815000
UNXPEOF  L     LINK,AUNXPEOF            GET ROUTINE ADDR                19820000
         B     GOCSECT4                 GO CHANGE BASE                  19825000
*                                                                       19830000
EOFRTN   L     LINK,AEOFRTN             GET ROUTINE ADDR                19835000
         B     GOCSECT4                 GO CHANGE BASE                  19840000
*                                                                       19845000
DIR10    L     LINK,ADIR10              GET ROUTINE ADDR                19850000
         B     SAVOLD                   SAVE OLD FIRST                  19855000
*                                                                       19860000
DIRENT   L     LINK,ADIRENT             GET ROUTINE ADDR                19865000
*                                                                       19870000
SAVOLD   ST    BASE2,REGSAVE3           SAVE OLD BASE                   19875000
GOCSECT4 L     BASE4,CS4ADDR            CHANGE BASE FOR CSECT4          19880000
         BR    LINK                     NOW ENTER ROUTINE               19885000
         SPACE 3                                                        19890000
***************                                                         19900000
         DS    0F                                                       19910000
CS2ADDR  DC    A(CS2)                   ADDR OF CSECT 2                 19920000
CS4ADDR  DC    A(CS4)                   ADDR OF CSECT 4                 19930000
ADIRENT  DC    A(NDIRENT)               ADDR OF DIRENT                  19940000
ADIR10   DC    A(NDIR10)                ADDR OF DIR10                   19950000
AUNXPEOF DC    A(NUNXPEOF)              ADDR OF UNXPEOF                 19960000
AEOFRTN  DC    A(NEOFRTN)               ADDR OF EOFRTN                  19970000
AESYSMAC DC    A(ESYSMAC)               ADDR OF ESYSMAC                 19980000
APGRMAC  DC    A(PGRMAC)                ADDR OF PGRMAC                  19990000
ASVCTLFM DC    A(SVCTLFM)               ADDR OF SVCTLFM                 20000000
ACSTKEXT DC    A(CSTKEXT)               ADDR OF CSTKEXT                 20010000
ASNAPERR DC    A(NSNAPERR)              ADDR OF SNAPERR                 20210000
AABSERR  DC    A(NABSERR)               ADDR OF ABSERR                  20410000
AWRNERR  DC    A(NWRNERR)               ADDR OF WRNERR                  20610000
         EJECT                                                          21040000
****************************************                                21060000
*   POSTFIXER ENTRY ROUTINE                                             21080000
*   AT ENTRY REG 10 (PARM) CONTAINS THE OPERATOR TO BE LOGGED           21100000
*   LINKAGE IS    BAL   R3,PFXRENT                                      21120000
*                 BAL   R3,PFXRE2                                       21140000
****************************************                                21160000
         SPACE 3                                                        21180000
         JEXTRN (X1S01=PFIXRN)                                          21200000
PFXRENT  EQU   *                                                        21220000
         LH    PARM,D0(,R3)             GET OPERATOR                    21240000
         AH    R3,H2                    ADJUST RETURN ADDRESS           21260000
PFXRE2   STM   R15,R3,EDTSVZ            SAVE REGISTERS                  21280000
         L     LINK,ADPSTR              LOCATE P-FXR ENTRY POINT        21300000
         BALR  RETURN,LINK              MAKE ENTRY                      21320000
         B     RENTFULL                 STACK OVERFLOW IF RETURN HERE   21340000
         LA    INPTR,D1(,INPTR)         UPDATE POINTER                  21360000
         LM    R15,R3,EDTSVZ            RESTORE REGISTERS               21380000
         BR    R3                       RETURN TO CALLER                21400000
ADPSTR   DC    A(PFIXRN)                POSTFIXER ENTRY POINT           21420000
         EJECT                                                          21440000
*   SYMSCN EDITS ORDINARY SYMBOLS INTO EDITED TEXT                      21460000
*   LINKAGE IS     BAL LINK,SYMSCN                                      21480000
*   NORMAL EXIT IS     B    D4(,LINK)                                   21500000
*   ERROR EXIT IS      BR   LINK                                        21520000
         SPACE 3                                                        21540000
SYMSCN   EQU   *                                                        21560000
         ST    LINK,EDTSVY              SAVE RETURN LINKAGE             21580000
         L     LINK,ATRTEST             PT TO TRTEST                    21600000
         BALR  RETURN,LINK              GO TRT SYMBOL                   21620000
         L     LINK,EDTSVY                                              21640000
         BCTR  R3,LINK                  ERROR IF NOT O-SYM              21660000
SYMSCN1  EQU   *                                                        21680000
         ST    LINK,EDTSVY              MAKE SURE RTN LNKAGE IS SAVED   21700000
         CH    R15,H7                   AND LENGTH MUST BE LE 8         21720000
         BCR   BHI,LINK                 RETURN IF GT 8 - ERROR          21740000
         TM    ATTRSV,ATK               N' OR K' FOLLOWED BY O-SYM      21760000
         BCR   BONE,LINK                IS ERROR                        21780000
         MVI   DDNDX1,ORDSYMBR          ORDINARY SYMBOL REF INDEX       21800000
         LR    PARM,INPTR               POINT TO SYMBOL                 21820000
         LR    PARAM2,TWKREG2           GET ITS LENGTH                  21850000
         BAL   R3,DIRENT                LOG ORDINARY SYMBOL             21870000
         L     LINK,EDTSVY              RESTORE RETURN LINKAGE          21880000
         LR    INPTR,R1                 BUMP POINTER                    21900000
         B     D4(,LINK)                RETURN TO CALLER                21920000
         EJECT                                                          21940000
****************************************                                21960000
*   PAREN COUNT - INCREMENTAL - MAX HALF WORD                           21980000
*   LINKAGE IS    BAL   R12,APARCT                                      22000000
****************************************                                22020000
APARCT   EQU   *                                                        22040000
         LH    RCNT,PRNLVL              GET CURRENT COUNT               22060000
         AH    RCNT,H1                  ADD ONE                         22080000
         STH   RCNT,PRNLVL              AND SAVE                        22100000
         BR    R12                      RETURN TO CALLER                22120000
         SPACE 3                                                        22140000
****************************************                                22160000
*   PAREN COUNT - DECREMENTAL -                                         22180000
*   LINKAGE IS    BAL   R12,DPARCT                                      22200000
****************************************                                22220000
DPARCT   EQU   *                                                        22240000
         LH    RCNT,PRNLVL              GET CURRENT COUNT               22260000
         SH    RCNT,H1                  SUBTRACT ONE                    22280000
         STH   RCNT,PRNLVL              AND SAVE                        22300000
         BR    R12                      RETURN TO CALLER                22320000
         EJECT                                                          22340000
*********************************************************************** 22360000
*   TBLOPS  ROUTINE IS ENTERED  WHEN A STATEMENT OTHER THAN MACRO       22380000
*   INSTRUCTION OR PROTOTYPE IS READ. THIS ROUTINE FURTHER CLASSIFIES   22400000
*   ASSEMBLER OP STATEMENTS FROM MACHINE OP STATEMENTS. ALL MACHINE     22420000
*   OP STATEMENTS ARE UNIQUELY EDITED BY ONE SUBROUTINE, WHILE          22440000
*   ASSEMBLER OP STATEMENTS ARE FANNED OUT TO THE APPROPRIATE           22460000
*   SUBROUTINES BASED ON OP CODES. EDITED TEXT RECORDS ARE PARTIALLY    22480000
*   BUILT, AND POSSIBLE DIRECTORY ENTRIES ARE MADE. IN MOST CASES,      22500000
*   PROCESS GOES TO 'WRAPFLD' ROUTINE WHERE THE BUILDING OF THE         22520000
*   EDITED TEXT RECORD IS COMPLETED. AT END OF EDITING A MACRO          22540000
*   DEFINITION, DIRECTORY ROUTINE, 'MACREND', IS CALLED TO CLOSE OUT    22560000
*   SOME DIRECTORIES. AT THE END OF EDITING OPEN CODE, DIRECTORY        22580000
*   ROUTINE, 'OPENEND', IS  CALLED TO CLOSE OUT SOME DIRECTORIES, AND   22600000
*   TO INITIALIZE THE PHASE FOR SYSTEM MACRO EDITING. WHEN ALL          22620000
*   SYSTEM MACROS ENCOUNTERED ARE EDITED. DIRECTORY ROUTINE, 'PHASEND', 22640000
*   IS CALLED. ALL DIRECTORIES THAT HAVE NOT BEEN CLOSED ARE CLOSED.    22660000
*   CONTROL RETURNS TO CONTROLLER.                                      22680000
*********************************************************************** 22700000
*        PROCESS OPERAND FIELD        *                                 22720000
***************************************                                 22740000
         SPACE 3                                                        22760000
TBLOPS   EQU   *                        EDIT OPERAND FIELD              22780000
         TM    IOCID,BIT0+BIT1          TEST IF MACRO CALL/PROTO        22800000
         BZ    MACINST                  EDIT PARAM IF YES               22820000
         SET   SEOPND,ON                                                22840000
         L     INPTR,ENDATA             GET END OF DATA FIELD           22860000
         L     LINK,ARDSRC05            PT TO RDSRC05                   22880000
         BALR  RETURN,LINK              READ ALL CONTINUATIONS          22900000
         DC    AL2(RALLCNT-RFSTCRD)     READ ALL VALID CONTINUATIONS    22920000
         L     INPTR,FPTRSV             BUMP POINTER                    22940000
         BAL   TLINK,SKPBLK             GO FIND OPERAND FIELD           22960000
         TM    IOCID,IOCTYP             TEST IF ASSEMBLER OP            22980000
         BNO   MCHINS                   BRANCH IF MACHINE OP            23000000
         SR    TWKREG1,TWKREG1                                          23020000
         IC    TWKREG1,OCSAVE           GET INTERNAL OP BEFORE YOU GO   23040000
         BAL   RETURN,STMTSEQ           STATEMENT SEQUENCING            23060000
         GOIF  JPRONLY,ON=INVALID       BRANCH IF SEQ'G ERROR FOUND     23080000
ASSMOP   EQU   *                                                        23100000
         SR    CGOTO,CGOTO                                              23120000
         IC    CGOTO,OCSAVE             GET OP CODE                     23140000
         AR    CGOTO,CGOTO              DOUBLE THE VALUE                23160000
         LH    CGOTO,AOPTBL(CGOTO)      COMPUTE BRANCH ADDRESS          23180000
         B     SETBAS(CGOTO)            GO TO PROCESS ASSEMBLER OP      23200000
AOPPTRS  ST    RETURN,RTNSV             SAVE RETURN LINKAGE             23220000
AOPPTR   LCR   R14,INDEXO               COMPUTE FIELD POINTER           23240000
         A     R14,OFPTRSV                                              23260000
         STH   R14,JTOPP                AND SAVE                        23280000
         SET   SEOPND,OFF                                               23300000
         B     WPOPND                   GO EDIT COMMENTS                23320000
SAVPTR   ST    RETURN,RTNSV             SAVE RETURN ADDRESS             23340000
AOPXIT   SET   SEOPND,OFF                                               23360000
         B     WRAPFLD                  GO EDIT COMMENTS                23380000
         EJECT                                                          23400000
*******************************************                             23420000
*        ASSEMBLER OP BRANCH TABLE        *                             23440000
*******************************************                             23460000
         TBLGEN (ICTL,                                                 X23480000
               ISEQ,                                                   X23500000
               COPY,                                                   X23520000
               OPSYN,                                                  X23540000
               ANOP,                                                   X23560000
               GBLA,                                                   X23580000
               GBLB,                                                   X23600000
               GBLC,                                                   X23620000
               LCLA,                                                   X23640000
               LCLB,                                                   X23660000
               LCLC,                                                   X23680000
               MACRO,                                                  X23700000
               ACTR,                                                   X23720000
               AGO,                                                    X23740000
               AIF,                                                    X23760000
               SETA,                                                   X23780000
               SETB,                                                   X23800000
               SETC,                                                   X23820000
               MEXIT,                                                  X23840000
               MEND,                                                   X23860000
               END,                                                    X23880000
               DXD,                                                    X23900000
               EQU,                                                    X23920000
               ORG,                                                    X23940000
               CNOP,                                                   X23960000
               CCW,                                                    X23980000
               DC,                                                     X24000000
               DS,                                                     X24020000
               START,                                                  X24040000
               CSECT,                                                  X24060000
               DSECT,                                                  X24080000
               COM,                                                    X24100000
               ENTRY,                                                  X24120000
               EXTRN,                                                  X24140000
               WXTRN,                                                  X24160000
               CXD,                                                    X24180000
               LTORG,                                                  X24200000
               PUNCH,                                                  X24220000
               REPRO,                                                  X24240000
               PUSH,                                                   X24260000
               POP,                                                    X24280000
               PRINT,                                                  X24300000
               USING,                                                  X24320000
               DROP,                                                   X24340000
               SPACE,                                                  X24360000
               EJECT,                                                  X24380000
               TITLE,                                                  X24400000
               MNOTE,                                                  X24420000
               INVALID),,                                              X24440000
               AOPTBL,,2,SETBAS                                         24460000
         EJECT                                                          24480000
ICTL     EQU   *                                                        24500000
****                                    OPERAND EDITED AS COMMENTS      24520000
         SET   SICTL,OFF                                                24540000
         SET   JPRONLY,ON               INDICATE PRINT ONLY             24560000
         ST    INPTR,OPNDPTR                                            24580000
         L     INPTR,INPUT              RESET POINTER                   24600000
         SET   SCTLRTN,ON               ELSE, INDICATE TO RETURN        24620000
         GOIF  SNOFND,ON=BADI           LOG ERROR IF NO OPERAND         24640000
         BAL   RETURN,SAVPTR            SAVE RET ADDR AND WRAP UP STMT  24660000
         L     INPTR,OPNDPTR            GET OPERAND POINTER             24680000
         SET   SFSTCD,OFF               ICTL NO LONGER ALLOWED          24700000
*                                                                       24720000
         BAL   RETURN,DSCAN             SCAN FIRST OPERAND              24740000
         B     BADICTL                  INVALID OPERAND FOUND           24760000
         LTR   TWKREG1,TWKREG1          TEST IF VALUE BETWEEN 1 AND 40  24780000
         BNH   BADICTL                  VALUE EQ 0 - ERROR              24800000
         CH    TWKREG1,H40                                              24820000
         BH    BADICTL                  VALUE GT 40 - ERROR             24840000
         BCTR  TWKREG1,0                BACK UP 1                       24860000
         ST    TWKREG1,TBGLN            SAVE NEW STRING LENGTH          24880000
         ST    TWKREG1,JBEGCL           SAVE NEW BEGIN COLUMN - 1       24900000
         BCTR  TWKREG1,0                BACK UP 1                       24920000
         ST    TWKREG1,PBGLEN           SAVE PRE-BEGIN LENGTH - 1       24940000
         CLI   D0(INPTR),JCOMMA         TEST IF MORE OPERAND            24960000
         BE    CTL10                    YES.                            24980000
         L     TWKREG1,CONTCHR          NO, INSERT STD END COLUMN       25000000
         B     CTL15                    CONTINUE                        25020000
CTL10    EQU   *                                                        25040000
         BAL   RETURN,DSCAN1            SCAN SECOND OPERAND             25060000
         B     BADICTL                  INVALID OPERAND FOUND           25080000
         CH    TWKREG1,H40              TEST VALUE BETEEEN 41 AND 80    25100000
         BNH   BADICTL                  VALUE LESS THEN 41. ERROR       25120000
         CH    TWKREG1,H80                                              25140000
         BH    BADICTL                  VALUE GREATER THAN 80. ERROR    25160000
         BL    CTL15                    BRANCH IF ALLOW CONT'N          25180000
         SET   SNOCNT,ON                ELSE, SAY NO CONT'N             25200000
CTL15    EQU   *                                                        25220000
         ST    TWKREG1,JCTCHR           SAVE CONT. CHR. COLUMN          25240000
         LA    WORK2,CRDLN-1            COMPUTE POSTEND STRING LENGTH-1 25260000
         SR    WORK2,TWKREG1                                            25280000
         ST    WORK2,PNDLEN                                             25300000
         BCTR  TWKREG1,0                BACK UP 1                       25320000
         ST    TWKREG1,ENDCOL           SAVE NEW END COLUMN             25340000
CTL20    S     TWKREG1,PBGLEN           COMPUTE SOURCE LENGTH WHICH     25360000
         CH    TWKREG1,H6               MUST BE GE 5 TO BE ABLE TO      25380000
         BL    BADICTL                  HOLD GENERATED ' END  '         25400000
         ST    TWKREG1,TSRCLN           STORE NEW SOURCE LENGTH         25420000
         LR    WORK2,TWKREG1            SAVE LENGTH                     25440000
         BCTR  TWKREG1,0                DECR BY 1                       25460000
         ST    TWKREG1,JSRCLN           STORE NEW SRC LENGTH MINUS 1    25480000
         CLI   D0(INPTR),JCOMMA         TEST IF MORE OPERAND            25500000
         BNE   CTL40                    BRANCH IF NO MORE OPERAND       25520000
         GOIF  SNOCNT,ON=BADICTL        BRANCH IF NO CONT'N ALLOWED     25540000
         BAL   RETURN,DSCAN1            SCAN THIRD OPERAND              25560000
         B     BADICTL                  INVALID OPERAND FOUND           25580000
         CH    TWKREG1,H40                                              25600000
         BH    BADICTL                  VALUE MUST BE                   25620000
         BCTR  TWKREG1,0                BETWEEN BEGCOL+1 AND 40         25640000
         C     TWKREG1,JBEGCL           ELSE ....                       25660000
         BNH   BADICTL                  ERROR                           25680000
CTL30    EQU   *                                                        25700000
         ST    TWKREG1,JCTBGN           SAVE CONTINUATION BEGIN         25720000
         BCTR  TWKREG1,0                BACK UP 1                       25740000
         LCR   TWKREG1,TWKREG1                                          25760000
         A     TWKREG1,ENDCOL                                           25780000
         ST    TWKREG1,TCNTLN           STORE CONTINUATION LENGTH       25800000
         BCTR  TWKREG1,0                DECR BY 1                       25820000
         ST    TWKREG1,JCTLN            STORE CONT. LENGTH MINUS 1      25840000
         CLI   D0(INPTR),JBLANK         BLANK IS GOOD TERMINATOR        25860000
          BE    CTLX                    IT IS.                          25880000
         C     INPTR,ENDATA             ELSE, ENDATA MUST TERMINATE     25900000
         BL    BADICTL                  BAD TERMINATOR                  25920000
CTLX     SR    PARAM1,PARAM1                                            25940000
         LA    PARAM2,MAXCNT                                            25960000
         DR    PARAM1,TWKREG1                                           25980000
         MR    PARAM1,TWKREG1                                           26000000
         LA    PARAM1,D1(WORK2,PARAM2)                                  26020000
         LA    TWKREG2,CRDLN                                            26040000
         SR    TWKREG2,TWKREG1                                          26060000
         LA    PARAM2,D6+D7(TWKREG2,PARAM1)                             26080000
         SR    PARAM1,PARAM1                                            26100000
         LA    TWKREG1,D8                                               26120000
         DR    PARAM1,TWKREG1                                           26140000
         L     PARAM1,DSTGBGN                                           26160000
         LR    INPTR,PARAM2                                             26180000
         CH    PARAM2,H63               ACTUAL DATA AREA SIZE W/STD     26200000
         BNL   FRECORE                  IF GE STD, ASSIGN ACTUAL DW VAL 26220000
         LH    INPTR,H63                ASSIGN STANDARD SIZE IF LOWER   26240000
FRECORE  EQU   *                                                        26260000
         JFRECORE  ADDR=(PARAM1)                                        26280000
GETCORE  EQU   *                                                        26300000
         JGETCORE DBL=(INPTR)                                           26320000
         ST    PARAM1,DSTGBGN                                           26340000
         LA    TWKREG1,D0(PARAM1,PARAM2)                                26360000
         ST    TWKREG1,ENDWKA           SAVE END OF BUFFER POINTER      26380000
         ST    TWKREG1,ENDWKADJ         SAVE 'ENDWKA'          @OX07230 26390005
         LA    PARAM2,CRDLN             CARD LENGTH MINUS               26400000
         S     PARAM2,TCNTLN            CONTINUATION DATA LENGTH        26420000
         LA    TWKREG1,MISTGP(PARAM1,PARAM2) ONE CARD STG AREA LENGTH   26440000
         ST    TWKREG1,MINPADJ                                          26460000
         ST    TWKREG1,MINPUT                                           26480000
         SLL   PARAM2,D1                COMPUTE NORMAL STRING AREA      26500000
         LA    TWKREG2,CRDLN            COMPUTE INPUT POINTER           26520000
         S     TWKREG2,TSRCLN                                           26540000
         LA    TWKREG2,STSTGP(TWKREG2,PARAM2)                           26560000
         LA    TWKREG2,D0(TWKREG2,PARAM1)                               26580000
         ST    TWKREG2,STNPADJ                                          26600000
         ST    TWKREG2,INPUT                                            26620000
         SR    TWKREG2,TWKREG1          COMPUTE DIF B/                  26640000
         STH   TWKREG2,MINDIF           MINPUT AND INPUT                26660000
         STH   TWKREG2,MINDFADJ         SAVE 'MINDIF'          @OX07230 26670005
ICTLOUT  EQU   *                                                        26680000
         MVI   DDNDX1,PHASENT           SET UP INDEX FOR BR TO DIR RTN  26700000
         BAL   R3,DIR10                 INITIALIZE DIRECTORIES          26720000
         B     WRAPCNT                  EDIT COMMENTS                   26740000
*                                                                       26760000
BADI     EQU   *                                                        26780000
         BAL   RETURN,SAVPTR            OUTPUT PRINT-ONLY RECORD        26800000
         BAL   TLINK,ABSERR             LOG ERROR                       26820000
         DC    AL1(SEV48)               .                               26840000
         DC    AL1(ERR48)               ICTL OPERAND NOT FOUND          26860000
BADIX    EQU   *                                                        26880000
         MVI   DDNDX1,PHASENT           SET UP INDEX FOR BR TO DIR RTN  26900000
         BAL   R3,DIR10                 INITIALIZE DIRECTORIES          26920000
         SET   (SPGRMD,SOPNCD,SKPEND),FLIP                              26940000
         MVI   DDNDX1,OPENENT           SET UP INDEX FOR BR TO DIR RTN  26960000
         BAL   R3,DIR10                 INITIALIZE OPEN CODE            26980000
         B     WRAPCNT                  THEN CLOSE                      27000000
*                                                                       27020000
CTL40    EQU   *                                                        27040000
         L     TWKREG1,F15              STD CONT'N COL                  27060000
         SET   SNOCNT,ON                CONTINUATION NOT ALLOWED        27080000
         B     CTL30                    WRAP UP ICTL STMT               27100000
BADICTL  EQU   *                                                        27120000
         LR    INPTR,TRTN               BACK UP                         27140000
         MVC   TBGLN(L'TBGLN*6),STDPARM RESTORE STANDARD ICTL PARAMS    27160000
         MVC   JSRCLN(L'JSRCLN*7),SRCLEN                                27180000
         BAL   TLINK,WRNERR             BAD ICTL STATEMENT              27200000
         DC    AL1(1*16+SEV19)          GO TO BADIX RTN THRU WRNERR     27220000
         DC    AL1(ERR19)               DEFAULT TO STD ICTL VALUES      27240000
         SPACE 3                                                        27260000
ISEQ     EQU   *                                                        27280000
****                                    OPERAND EDITED AS COMMENTS      27300000
         SET   SISEQ,OFF                ASSUME NO SEQUENCE CHECK        27320000
* PARAMETER ERROR IN ISEQ STATEMENT IS TREATED AS ISEQ WITHOUT OPERAND, 27340000
* WHICH CAUSES SEQUENCE CHECKING TO BE DISCONTINUED.                    27360000
         SET   JPRONLY,ON               INDICATE PRINT ONLY             27380000
         GOIF  SNMFND,OFF=ISEQ05        LOG ERROR IF THERE IS A NAME    27400000
         BAL   RETURN,NAMERR             LOG ERROR                      27420000
ISEQ05   EQU   *                                                        27440000
         GOIF  SNOFND,ON=AOPXIT         BRANCH IF NO OPERAND            27460000
         CLC   INPOPR(L'CMABLK+1),CMABLK  TEST OMIT OPER FIELD  OX00410 27480001
         BE    AOPXIT                   WRAP UP STMT                    27500000
         ST    INPTR,FPTRSV             SAVE INPTR                      27520000
         BAL   RETURN,DSCAN             SCAN FIRST OPERAND              27540000
         B     ISEQERR                  ERROR FOUND. LOG ERROR          27560000
         CLI   D0(INPTR),JCOMMA         TERMINATE MUST BE A COMMA       27580000
         BNE   ISEQERR                  NOT A COMMA, LOG ERROR          27600000
         LTR   TWKREG1,TWKREG1          VALUE MUST BE GREATER THAN ZERO 27620000
         BNH   ISEQERR                  GO LOG ERROR                    27640000
         BCTR  TWKREG1,0                DECR BY 1                       27660000
         ST    TWKREG1,JSEQCL           STORE BEGIN COLUMN              27680000
         BAL   RETURN,DSCAN1            SCAN SECON OPERAND              27700000
         B     ISEQERR                  ERROR FOUND. LOG ERROR          27720000
         CLI   D0(INPTR),JBLANK         TEST IF BLANK AS TERMINATOR     27740000
         BE    ISEQ10                   BRANCH IF YES                   27760000
         CR    INPTR,R12                TEST IF END COLUMN TERMINATES   27780000
         BL    ISEQERR                  NO, LOG ERROR                   27800000
ISEQ10   EQU   *                                                        27820000
         CH    TWKREG1,H80              VALUE MUST NOT BE GT 80         27840000
         BH    ISEQERR                  LOG ERROR                       27860000
         BCTR  TWKREG1,0                MINUS 1                         27880000
         CLC   JSEQCL(L'JSEQCL),JCTCHR  SEQUENCE FIELD MUST NOT BE      27900000
         BNL   ISEQ20                   BETWEEN BEGIN AND ENDING        27920000
         C     TWKREG1,JBEGCL           COLUMN, ELSE                    27940000
         BNL   ISEQERR                  ERROR                           27960000
ISEQ20   EQU   *                                                        27980000
         S     TWKREG1,JSEQCL           COMPUTE SEQUENCE FIELD LENGTH   28000000
         BM    ISEQERR                  RIGHTMOST COLUMN MUST BE EQ OR X28020000
                                        GT LEFTMOST COLUMN, ELSE ERROR  28040000
         ST    TWKREG1,JSEQLN           STORE MOVE LENGTH               28060000
         SET   SISEQ,ON                 INDICATE SEQUENCE CHECK         28080000
         XC    SEQSV(L'SEQSV),SEQSV     CLEAR SEQUENCE VALUE AREA       28100000
ISEQXIT  EQU   *                                                        28120000
         L     INPTR,FPTRSV             RESET POINTER                   28140000
         B     AOPXIT                   WRAP UP STATEMENT               28160000
ISEQERR  EQU   *                                                        28180000
         BAL   TLINK,ABSERR             LOG ERROR                       28200000
         DC    AL1(SEV19)               .                               28220000
         DC    AL1(ERR19)               ILLEGAL ISEQ STATEMENT          28240000
         B     ISEQXIT                  EXIT                            28260000
         SPACE 3                                                        28280000
*                                                                       28300000
*        ROUTINE TO SCAN A DECIMAL FIELD.                               28320000
*        IF FIELD IS VALID RETURN TO D4(,RETURN)                        28340000
*        OTHERWISE, RETURN TO RETURN                                    28360000
*                                                                       28380000
DSCAN1   EQU   *                                                        28400000
         LA    INPTR,D1(,INPTR)                                         28420000
DSCAN    EQU   *                                                        28440000
         LR    TRTN,INPTR               SAVE STARTING POINT             28460000
         L     R12,ENDATA                                               28480000
         SR    TWKREG1,TWKREG1                                          28500000
         SR    TWKREG2,TWKREG2                                          28520000
DSC10    EQU   *                                                        28540000
         CR    INPTR,R12                TEST IF END OF DATA             28560000
         BNL   DSC20                    BRANCH IF YES                   28580000
         CLI   D0(INPTR),J9             TEST IF A DIGIT                 28600000
         BH    DSC20                    NO, ASSUME END OF FIELD         28620000
         IC    TWKREG2,D0(,INPTR)                                       28640000
         MH    TWKREG1,H10              MULTIPLY PARTIAL SUM BY 10      28660000
         AR    TWKREG1,TWKREG2          ADD IN CURRENT DIGIT            28680000
         LA    INPTR,D1(,INPTR)         INCREMENT POINTER BY 1          28700000
         B     DSC10                    TEST NEXT DIGIT                 28720000
DSC20    EQU   *                                                        28740000
         LR    TWKREG2,INPTR            TEST FIELD LENGTH               28760000
         SR    TWKREG2,TRTN             WHICH MUST BE LESS THAN         28780000
         CH    TWKREG2,H10              OR EQUAL TO 10 DIGITS           28800000
         BCR   BHI,RETURN               IF HI, RETURN                   28820000
         CH    TWKREG2,H1               BUT NOT LESS THAN 1             28840000
         BCR   BLO,RETURN               ELSE, LOG ERROR                 28860000
         B     D4(,RETURN)              GOOD, WITHIN LIMITS             28880000
         SPACE 3                                                        28900000
COPY     EQU   *                                                        28920000
****                                    OPERAND EDITED AS COMMENTS      28940000
         BAL   TLINK,CHKNM              NAME MUST BE BLANK              28960000
COPY15   EQU   *                                                        28980000
         GOIF  SNOFND,OFF=COPY17        BRANCH IF THERE IS OPERAND      29000000
         BAL   TLINK,ABSERR             ELSE LOG ERROR                  29020000
         DC    AL1(8*16+SEV50)          GO TO INVALID RTN THRU ABSERR   29040000
         DC    AL1(ERR50)               COPY STMT NO OPERAND            29060000
COPY17   EQU   *                                                        29080000
         SET   SCOPY,ON                 EDITING COPY STMT               29100000
         BAL   RETURN,GSCAN             SCAN OPERAND FIELD              29120000
         GOIF  ROSYM,OFF=BADCPY         BRANCH IF COPY CODE NOT O-SYM   29140000
         SET   SCOPY,OFF                                                29160000
         BAL   R3,CSTKENT               RECURSIVE ENTRY                 29180000
         SET   SNOPND,ON                INDICATE TO RETURN              29200000
         BAL   RETURN,AOPPTRS           GO PUT OUT THIS STATEMENT       29220000
COPY20   EQU   *                                                        29240000
         LA    INPTR,COPYCODE           GET COPY CODE LOC               29260000
         JFIND ADDR=(INPTR)             GO FIND IT IN THE LIB.          29280000
         BP    COPY25                   GET MEMBER NAME                 29300001
         BAL   TLINK,SNAPERRL           TAKE A SNAP SHOT                29320000
         DC    AL2(1)                   OF COPY CODE NOT FOUND          29340000
         DC    AL1(SEV68)               IN MACRO LIBRARY                29360000
         DC    AL1(ERR68)               AND PREPARE TO EXIT             29380000
         BAL   R3,CSTKEXT               RECURSIVE EXIT                  29400000
         B     WRAPCNT                  READ NEXT STATEMENT             29420000
BADCPY   BAL   TLINK,ABSERR             BAD COPY CODE                   29440000
         DC    AL1(2*16+SEV49)          GO TO AOPPTR RTN THRU ABSERR    29460000
         DC    AL1(ERR49)               COPY CODE NOT O-SYM             29480000
COPY25   MVC   LASTFIND(L'LASTFIND),COPYCODE SAVE MEMBER NAME           29490001
         BP    READNEXT                 READ NEXT RECORD                29492001
         SPACE 3                                                        29500000
OPSYN    EQU   *                                                        29520000
         GOIF  SNMFND,OFF=ILOPSYN       ERROR IF NO NAME                29540000
         GOIF  ROSYM,OFF=ILOPSYN        OR NAME NOT ORDINARY SYMBOL     29560000
         MVI   SDENTR,OPSYNBLD          CHANGE ENTRY INDEX              29580000
         GOIF  SNOFND,ON=OPSYN1         EXIT IF NO OPERAND              29600000
         CLC   INPOPR(L'CMABLK),CMABLK  IS IT ',BLANK' IN OPERAND FIELD 29620000
         BE    OPSYN1                   IF YES,PROCESS AS VALID COMMENT 29640000
         BAL   RETURN,GSCAN             ELSE, EDIT OPERAND FIELD        29660000
         MVI   OCSAVE,D0                CLEAR OPSYN OP CODE             29670000
         GOIF  ROSYM,ON=AOPPTR          OK IF OPERAND AN ORD SYM        29680000
         LCR   R14,INDEXO               COMPUTE THE OPERAND             29685000
         A     R14,OFPTRSV              FIELD POINTER                   29690000
         STH   R14,JTOPP                AND SAVE                        29695000
ILOPSYN  EQU   *                                                        29700000
         BAL   TLINK,ABSERR             ERROR, SUPPRESS D ENTRY         29720000
         DC    AL1(SEV13)               OPSYN NAME NOT ORD SYMBOL       29740000
         DC    AL1(ERR13)               OPERAND NOT O-SYM/BLANK         29760000
         SET   JNMERR,ON                INDICATE NAME ERROR             29780000
         MVI   OCSAVE,D0                CLEAR OPSYN OP CODE             29790000
         MVI   SDENTR,D0                INSURE NO DIRECTORY ENTRY       29800000
         B     AOPXIT                   STOP EDIT ON THIS ERROR         29820000
OPSYN1   MVI   OCSAVE,D0                CLEAR OPSYN OP CODE             29826000
         B     AOPXIT                   GO WRAP UP STATEMENT            29832000
         SPACE 3                                                        29840000
MACRO    EQU   *                                                        29860000
         SET   (SMDEF,SXPRTO),ON        INDICATE IN MD, XPCT PROTOTYPE  29880000
         MVI   SDENTR,MACRENT           SAVE INDEX                      29900000
         SET   SDENT,ON                 POINT OF DEFINITION             29920000
         BAL   TLINK,CHKNM              NAME MUST BE BLANK              29940000
         GOIF  SPGRMD,OFF=AOPXIT        CHECK IF PROGRAMMER MACRO       29946000
         SET   JPRGMAC,ON               INDICATE PROGRAMMER MACRO       29952000
         GOIF  JNMERR,ON=PNXT15        NAME FIELD PRESENT,ERR  @OY08060 29954005
         B     AOPXIT                   WRAP UP STATEMENT               29960000
         SPACE 3                                                        29980000
MEND     EQU   *                                                        30000000
         BAL   TLINK,CHKSSNM            NAME MUST BE SS OR NOT USED     30020000
MENDZ    EQU   *                                                        30040000
         SET   SNOPND,ON                INDICATE TO RETURN              30060000
         BAL   RETURN,SAVPTR            WRAP UP STATEMENT               30080000
         B     MEND1                    CLOSE MACRO DEFINITION          30100000
MEND0    EQU   *                                                        30120000
         GOIF  SINCPY,OFF=MEND1         BRANCH IF NOT IN COPY CODE      30140000
         SET   SMAC,OFF                 CORRESPONDING MEND GENERATED    30150000
         BAL   R3,CSTKEXT               RECURSIVE EXIT                  30160000
         GOIF  SOPNCD,OFF=MEND1         BR IF GERERATED MEND IS OK HERE 30170000
         BAL   TLINK,ABSERR             LOG ERROR IF NOT                30172000
         DC    AL1(SEV23)               MEND CAN'T BE IN OPEN CODE      30174000
         DC    AL1(ERR23)                                               30176000
         BAL   RETURN,WRAPERR           WRITE THIS ERROR RECORD         30178000
         B     READNEXT                 CONTINUE READING SOURCE         30178400
MEND1    EQU   *                                                        30180000
         GOIF  SSYSMD,OFF=MEND2         BR IF NOT IN SYSMAC             30185000
         GOIF  SINCPY,ON=READNEXT       READ REST OF COPY BOOK          30190000
         GOIF  SMDEF,OFF=MEND25         BR IF NO MACRO DEFINIT @AY19080 30192000
MEND2    EQU   *                                                        30195000
         GOIF  SXPRTO,OFF=MEND3         FOUND MACRO JET        @OX08858 30195405
         GOIF  SINEOF,OFF=MEND25        ONLY MACRO FOUND       @OX08858 30195805
         BAL   TLINK,WRNERR             LOG ERROR              @OX08858 30196205
         DC    AL1(SEV43)               EOF OCCURS BEFORE-     @OX08858 30196605
         DC    AL1(ERR43)               PROTOTYPE STMT         @OX08858 30196705
MEND25   EQU   *                                               @OX08858 30196805
         SET   SNOSMCRO,ON              NO, SET FLG,NOMACRO STM OX00403 30199001
         SET   SKPMND,ON                SET FLG FOR SKIPTO MEND OX00403 30199401
MEND3    SET   (SMDEF),OFF              CLOSE MACRO DEFINITION  OX00403 30200001
         MVI   DDNDX1,MACREND           SET UP INDEX FOR BR TO DIR RTN  30220000
         BAL   R3,DIR10                 GO CLOSE MACRO DEFINITION       30240000
         SET   SKPMND,OFF               ELSE, RESET SWITCH              30260000
         SET   (SNOSMCRO,SBDPROTO),OFF                                  30280000
         GOIF  SPGRMD,ON=READNEXT       RD NEXT STMT IF IN PGR MACRO    30300000
         L     BASE4,CS4ADDR            CHANGE BASE FOR CSECT 4         30320000
         L     LINK,AESYSMAC            GET ROUTINE ADDR                30330000
         BR    LINK                     NOW ENTER ROUTINE               30332000
         SPACE 3                                                        30340000
REPRO    GOIF  SNMFND,OFF=REPRO10       BRANCH IF THERE IS NO NAME      30360000
         GOIF  RSSYM,ON=REPRO10         BRANCH IF NAME A S.S.           30380000
         BAL   RETURN,NAMERR            ELSE, LOG ERROR                 30400000
REPRO10  SET   JPRONLY,ON               INDICATE PRINT ONLY             30420000
         SET   SNOPND,ON                INDICATE TO RETURN              30440000
         BAL   RETURN,SAVPTR            DON'T FORGET TO COME BACK       30460000
         JINPUT  ,                      READ A CARD                     30480000
         BNP   UNXPEOF                  UNEXPECTED END OF FILE          30500000
         LR    INPTR,RETADR             SAVE CARD POINTER               30520000
         LA    R11,D10*D10              RECORD LENGTH                   30540000
         BAL   RETURN,OPUTL             GET BUFFER                      30560000
         MVC   JTRLI(L'REPRO30),REPRO30 RECORD HEADER                   30580000
         MVC   JTRLI+L'REPRO30(D10*D8),D0(INPTR)  CARD IMAGE AS COMMENT 30600000
         SET   SNOPND,OFF               INSURE NO RETURN TO HERE        30620000
         B     WREXIT                   GO RESET SW AND READ NEXT CARD  30640000
REPRO30  DC    0CL20' ',H'100'          RECORD HEADER                   30660000
         DC    AL1(JPSOP+JDEF,0,JTREPRO),3H'16',H'18,16',AL1(0,0,1,80)  30680000
         SPACE 3                                                        30700000
AGO      EQU   *                                                        30720000
         BAL   TLINK,CHKSSNM            NAME MUST BE SS OR NOT USED     30740000
         BAL   RETURN,GSCAN             SCAN OPERAND FIELD FOR SS       30760000
AGO1     EQU   *                                                        30780000
         GOIF  RSSYM,ON=AOPPTR          EDIT COMMENTS IF SS IN OPERAND  30800000
         BAL   TLINK,ABSERR             INVALID OPERAND FORMAT          30820000
         DC    AL1(2*16+SEV73)          GO TO AOPPTR VIA ABSERR         30840000
         DC    AL1(ERR73)               OPERAND NOT SEQUENCE SYMBOL     30860000
         SPACE 3                                                        30880000
*        NAME = SS OR BLANK                                             30900000
*        OPERAND = NOT USED                                             30920000
*                                                                       30940000
MEXIT    EQU   *                                                        30960000
EJECT    EQU   *                                                        30980000
         BAL   TLINK,CHKSSNM            NAME MUST BE SS OR NOT USED     31000000
         B     AOPXIT                   WRAP UP STATEMENT               31020000
*                                                                       31040000
*        NAME = SS ONLY                                                 31060000
*        OPERAND = NOT USED                                             31080000
*                                                                       31100000
ANOP     EQU   *                                                        31120000
         GOIF  RSSYM,ON=AOPXIT          BRANCH IF NAME A S.S.           31140000
         GOIF  SNMFND,OFF=AOPXIT        ALLOW BLANK NAME                31160000
         BAL   RETURN,NAMERR            LOG ERROR MESSAGE               31180000
         B     AOPXIT                   END PROCESSING OF THIS STMT     31200000
*                                                                       31220000
*        NAME = ANY SYMBOL OR NOT USED                                  31240000
*        OPERAND = NOT USED                                             31260000
*                                                                       31280000
COM      LA    TLINK,AOPXIT             GET RETURN POINT                31300000
         B     CKANYSYM                 CHECK NAME                      31320000
CSECT    EQU   COM                                                      31340000
CXD      EQU   COM                                                      31360000
LTORG    EQU   COM                                                      31380000
*                                                                       31400000
*        NAME = SS OR NOT USED                                          31420000
*        OPERAND = REL. EXP., OR BLANK                                  31440000
*                                                                       31460000
END      EQU   *                                                        31480000
         GOIF  SOPNCD,OFF=SPACE         BRANCH IF NOT IN OPEN CODE      31500000
         SET   SENDST,ON                ELSE, INDICATE END STMT READ    31520000
SPACE    EQU   *                                                        31540000
         BAL   TLINK,CHKSSNM            NAME MUST BE SS OR NOT USED     31560000
         B     MCHIN15                  EDIT AS MACHINE OP              31580000
*                                                                       31600000
*        NAME = SS OR NOT USED                                          31620000
*        OPERAND = EXP., SYMBOL, CHAR. STRING OR SDT                    31640000
*                                                                       31660000
MNOTE    EQU   SPACE                                                    31680000
ENTRY    EQU   MNOTE                                                    31700000
PUSH     EQU   MNOTE                                                    31720000
POP      EQU   MNOTE                                                    31740000
PUNCH    EQU   MNOTE                                                    31760000
PRINT    EQU   MNOTE                                                    31780000
USING    EQU   MNOTE                                                    31800000
DROP     EQU   MNOTE                                                    31820000
*                                                                       31840000
*        NAME = SS OR NOT USED                                          31860000
*        OPERAND = RELOCATABLE SYMBOLS SEPARATED BY COMMAS              31880000
*                                                                       31900000
EXTRN    EQU   *                                                        31920000
WXTRN    EQU   *                                                        31940000
         BAL   TLINK,CHKSSNM            NAME MUST BE SS OR NOT USED     31960000
         GOIF  SNOFND,ON=AOPXIT         BRANCH IF NO OPERAND            31980000
         BAL   RETURN,GSCAN             ELSE, SCAN IT                   32000000
         MVI   SDENTR1,ORDSYMBD         EST DIR ENTRY INDEX             32020000
         ST    INDEXO,NAMP1             SAVE PTR TO OPND FOR DIR ENTRY  32030000
         SET   SDENT,ON                 POINT OF DEFINITION             32060000
         B     AOPPTR                   LOG OPERAND POINTER             32080000
*                                                                       32100000
MCHINS   EQU   *                                                        32120000
         BAL   RETURN,STMTDSQ           STATEMENT SEQUENCING            32140000
MCHIN10  EQU   *                                                        32160000
         BAL   TLINK,CKANYSYM           CHECK NAME                      32180000
MCHIN15  EQU   *                                                        32200000
         GOIF  SNOFND,ON=AOPXIT         BRANCH IF NO OPERAND            32220000
         BAL   RETURN,GSCAN             ELSE SCAN IT                    32240000
         B     AOPPTR                   LOG OPERAND POINTER             32260000
*                                                                       32280000
*        NAME = ANY SYMBOL OR NOT USED                                  32300000
*        OPERAND = EXP., STRING, SYMBOL OR SDT                          32320000
*                                                                       32340000
START    EQU   MCHIN10                  EDIT AS MACHINE OP              32360000
CNOP     EQU   START                                                    32380000
ORG      EQU   START                                                    32400000
DXD      EQU   START                                                    32420000
CCW      EQU   START                                                    32440000
DC       EQU   START                                                    32460000
DS       EQU   START                                                    32480000
TITLE    EQU   MCHIN15                                                  32500000
*                                                                       32520000
*        NAME = OS OR VS                                                32540000
*        OPERAND = NOT USED                                             32560000
*   LET ASSEMBLY PHASE CATCH SS OR BLANK IN NAME FIELD                  32580000
*                                                                       32600000
DSECT    EQU   CSECT                                                    32620000
         SPACE 3                                                        32640000
GBLA     MVI   FLAGBT,GAFLG             INDICATE GBLA                   32660000
         B     GLX                      CHECK NAME FIELD                32680000
GBLB     MVI   FLAGBT,GBFLG             INDICATE GBLB                   32700000
         B     GLX                      CHECK NAME FIELD                32720000
GBLC     MVI   FLAGBT,GCFLG             INDICATE GBLC                   32740000
         B     GLX                      CHECK NAME FIELD                32760000
LCLA     MVI   FLAGBT,LAFLG             INDICATE LCLA                   32780000
         B     GLX                      CHECK NAME FIELD                32800000
LCLB     MVI   FLAGBT,LBFLG             INDICATE LCLB                   32820000
         B     GLX                      CHECK NAME FIELD                32840000
LCLC     MVI   FLAGBT,LCFLG             INDICATE LCLC                   32860000
GLX      EQU   *                                                        32880000
         ST    INDEXP,OFPTRSV                                           32900000
         BAL   TLINK,CHKNM              NAME MUST BE BLANK              32920000
         GOIF  SNOFND,ON=NOPNDER        LOG ERROR IF NO OPERAND FOUND   32940000
         SET   SGBLCL,ON                INDICATE EDITING DECLARATION    32960000
         ST    INPTR,FPTRSV             SAVE BEGIN OF OPERAND           32980000
GLX05    ST    INPTR,OPNDPTR            INCASE OF BACK UP               33000000
         CLI   D0(INPTR),JAMPER         TEST IF AMPERSAND               33020000
         BNE   GLXERR                   COULDN'T BE V-SYM. ERROR        33040000
         BAL   RETURN,VARSYM            POSSIBLY.                       33060000
         LR    INPTR,R1                 RESTORE POINTER                 33080000
         TM    DERRCD,BITFF             TEST IF ANY ERROR IN DICT RTN   33090000
         BZ    GLX10                    CONTINUE IF NO ERROR            33092000
         SET   JPRONLY,ON               SET TO PRINT THIS STMT          33094000
         CLI   DERRCD,ERR9              SEE IF ERR WAS DICT OVERLAP     33096000
         BE    GLX20                    STOP SCANNING STMT IF YES       33098000
GLX10    CLI   D0(INPTR),JCOMMA         TERMINATOR MUST BE A COMMA      33100000
         BNE   GLX15                    OR A BLANK                      33120000
         LA    INPTR,D1(,INPTR)         YES, A COMMA                    33140000
         B     GLX05                    EDIT NEXT DECLARATION           33160000
GLX15    CLI   D0(INPTR),JBLANK                                         33180000
         BNE   GLXERRZ                  LOG ERROR IF NEITHER            33200000
GLX20    BAL   R12,VTPUT0               A BLANK MEANS END OF STMT       33240000
         SET   SGBLCL,OFF                                               33260000
         GOIF  SKPEND,OFF=AOPPTR        BR IF NO DICT OVERLAP (NO ERR9) 33270000
         L     INDEXO,OUTADR            RESTORE AFTER ERR9 CLEANUP WORK 33272000
         B     AOPPTR                   LOG OPERAND POINTER             33280000
         SPACE 3                                                        33300000
ACTR     EQU   *                                                        33320000
         BAL   TLINK,CHKSSNM            SEQ SYM OR BLANK        OX00404 33340001
         MVI   MCALL,MCLA               PROCESS LIKE A SETA STMT        33360000
         B     SETX05                   GO PROCESS                      33380000
SETX     EQU   *                                                        33400000
SETA     EQU   SETX                                                     33420000
SETB     EQU   SETX                                                     33440000
SETC     EQU   SETX                                                     33460000
         L     R14,RAVSP               CLEAR                    OX02957 33470031
         LA    R14,RFLGLOC(,R14)        EXPRESSION              OX02957 33472031
         MVI   RSTKVST,X'00'            STATUS                  OX02957 33474031
         CLI   NAMBYT,RVSYM             TEST IF NAME A V. S.            33480000
         BNE   ILSETNM                  LOG ERROR IF NOT                33500000
         MVI   NAMBYT,J0                RESET FOR NEXT STMT    @OX10953 33510006
         SR    R14,R14                                                  33520000
         IC    R14,OCSAVE                                               33540000
         SR    R15,15                                                   33560000
         IC    R15,NAMABC-JTSETA(R14)   GET CORRESPONDING V.S.FLAG      33580000
         NI    VSTAT,X'13'                                              33600000
         CH    R15,VSFLG                TEST SET VAR FOR RIGHT TYPE     33620000
         BNE   ILSETNM                  LOG ERROR IF NOT                33640000
         IC    R14,SENTVAL-JTSETA(R14)  PICK UP METASCAN ENTRY CODE     33660000
         STC   R14,MCALL                AND SAVE IN MCALL               33680000
SETX05   EQU   *                                                        33700000
         GOIF  SNOFND,ON=NOPNDER        OPERAND IS REQUIRED             33720000
         ST    INPTR,FPTRSV                                             33740000
         ST    INDEXP,OFPTRSV                                           33760000
         TM    MCALL,MCLA+MCLC          TEST IF SETB STATEMENT          33780000
         BZ    SETB05                   BRANCH IF YES                   33800000
         BAL   RETURN,METASCAN          GO EDIT SETA/SETC OPERAND       33820000
         CLI   D0(INPTR),JBLANK         BLANK IS A GOOD TERMINATOR      33840000
         BE    SETX10                   IT IS                           33860000
         C     INPTR,ENDATA             IF NOT, ENDATA MUST.            33880000
         BL    ILSETX                   LOG ERROR IF IT DOESN'T         33900000
         BCTR  INPTR,0                  MINUS 1                         33920000
SETX10   EQU   *                                                        33940000
         BAL   R12,VTENT15              WRAP UP OPERAND                 33960000
         B     AOPPTR                   COMPUTE FIELD POINTER           33980000
SETB05   EQU   *                                                        34000000
         MVC   D0(L'SBDSDT,INDEXP),SBDSDT TREAT 0,1,(0),(1) AS DSDT     34020000
         CLI   D1(INPTR),JBLANK         IF 0 OR 1 DOES NOT STAND ALONE  34040000
         BNE   SETB20                   EVALUATE AS EXPR                34060000
         CLI   D0(INPTR),D1             TEST IF VALUE 0 OR 1            34080000
         BH    SETB20                   BR IF NOT                       34100000
         BL    SETB16                   ZERO                            34120000
SETB15   MVI   D4(INDEXP),D1            MAKE DSDT 1                     34140000
SETB16   LA    INPTR,D1(,INPTR)                                         34160000
         LA    INDEXP,L'SBDSDT(,INDEXP) BUMP POINTER                    34180000
         BAL   R12,VTPUT0               BUILD V.T.                      34200000
         B     AOPPTR                   LOG OPERAND POINTER             34220000
AIF      EQU   *                                                        34240000
         MVI   MCALL,D0                 INDICATE EDITING SETB           34260000
         BAL   TLINK,CHKSSNM            NAME MUST BE SS OR BLANK        34280000
         ST    INPTR,FPTRSV                                             34300000
         ST    INDEXP,OFPTRSV                                           34320000
         GOIF  SNOFND,ON=NOPNDER        GO LOG ERROR ON MISSING OPERAND 34340000
SETB20   EQU   *                                                        34360000
         CLI   D0(INPTR),JLPARN         EXPRESSION MUST BE W/N ( )      34380000
         BNE   ILGLXP1                  LOG ERR IF NOT                  34400000
         BAL   R3,PFXRENT               ENTER L-PAREN                   34420000
         DC    AL2(JTMLPAR)             INTO POSTER                     34440000
         BAL   RETURN,METASCAN          SCAN IT                         34460000
         CLI   D0(INPTR),JRPARN         TERMINATOR MUST BE A R-PAREN    34480000
         BNE   ILGLXP1                  GO TO LOG EITHER ERR24 OR ERR32 34500000
         LR    R0,R3                    SAVE EXIT CODE                  34520000
         BAL   R3,PFXRENT               ENTER R-PAREN                   34540000
         DC    AL2(JTMRPAR)             INTO POSTER                     34560000
         LR    R3,R0                    RESTORE EXIT CODE               34580000
         CH    R3,H2                    DO NOT ALLOW SETC STATS OX00406 34590001
         BE    SETX30                   ALLOW SETA EXPRESSION   OX00406 34592001
         CH    R3,H1                    EXPRESSION MUST BE COMPLEX OR   34600000
         BH    ILBXP                    SIMPLE. ELSE, ERROR             34620000
         BE    SETX30                   OK IF COMPLEX                   34640000
         L     R14,RAVSP                                                34660000
         LA    R14,RFLGLOC(,R14)        CHECK EXPRESSION STATUS         34680000
         TM    RSTKVST,VSLS             SIMPLE BOOLEAN  ...             34700000
         BO    ILBXP                    DOESN'T TOLERATE SYSLIST        34720000
SETX30   EQU   *                                                        34740000
         CLI   OCSAVE,JTAIF             TEST IF AIF STATEMENT           34760000
         BE    AIF1                     BR IF THIS IS AIF               34780000
         CLI   D0(INPTR),JBLANK         MUST HAVE BLANK TERMINATOR      34785000
         BE    SETX10                   SETB OPERAND TERMINATOR IS OK   34790000
         B     INVFM                    LOG ERR32, SNAP INVALID TEXT    34795000
         SPACE 3                                                        34800000
AIF1     EQU   *                                                        34820000
         BAL   R3,PFXRENT               LOG END STMT FLAG               34840000
         DC    AL2(JTMSTRM)             FLAG                            34860000
         BCTR  INPTR,D0                 DON'T GET CARRIED AWAY          34880000
         SET   GAIF,ON                  INDICATE AIF STATEMENT          34900000
         BAL   RETURN,GSCAN1            GO SCAN SEQ SYMBOL              34920000
         SET   GAIF,OFF                                                 34940000
         B     AGO1                     WRAP UP LIKE AGO STMT           34960000
         SPACE 3                                                        34980000
SBDSDT   DS    0CL9                     M.T. FORMAT FOR 0 OR (0) SDT    35000000
         DC    AL1(JTMSDT,0,0,0,0,0,JTMSTRM,0,7) M.T. INT'L FORMAT      35020000
SENTVAL  DC    AL1(MCLA,0,MCLC)         METASCAN ENTRY CODE FOR SETX    35040000
NAMABC   DC    AL1(0,1,3)               SET VARIABLE VALUE IN FLGBYT    35060000
         DS    0H                                                       35080000
         SPACE 3                                                        35100000
*                                                                       35120000
*        NAME = OS OR VS                                                35140000
*        OPERAND = EXPRESSION                                           35160000
*                                                                       35180000
*   LET ASSEMBLY PHASE CATCH SS OR BLANK IN NAME FIELD                  35200000
EQU      EQU   MCHIN10                                                  35220000
         SPACE 3                                                        35240000
INVALID  EQU   AOPXIT                                                   35260000
         EJECT                                                          35280000
*********************************************************************** 35300000
*        SKIP BLANKS BETWEEN FIELDS                                   * 35320000
*        AT ENTRY INPTR POINTS TO BEGIN OF FIELD                      * 35340000
*********************************************************************** 35360000
SKPBLK   EQU   *                                                        35380000
         L     TWKREG2,ENDATA           GET END OF DATA ADDRESS         35400000
SKPBLK0  EQU   *                                                        35420000
         SET   SNOFND,OFF                                               35440000
         LA    TWKREG1,1                THE INCREMENT IS ONE BYTE       35460000
         BCTR  TWKREG2,0                SET BXLE LOOP UPPER LIMIT       35480000
         BCT   INPTR,SKPBLK2            AND BEGIN ADDRESS - 1           35500000
SKPBLK1  EQU   *                                                        35520000
         CLI   D0(INPTR),JBLANK         TEST IF BLANK                   35540000
         BCR   7,TLINK                  EXIT IF NOT                     35560000
SKPBLK2  EQU   *                                                        35580000
         BXLE  INPTR,TWKREG1,SKPBLK1    ELSE, LOOK UP NEXT COLUMN       35600000
         SET   SNOFND,ON                UNTIL ENDATA                    35620000
         BR    TLINK                    RETURN TO CALLER                35640000
         EJECT                                                          35660000
*****************************************                               35680000
*        SET O/P BUFFER LOCATION        *                               35700000
*****************************************                               35720000
OPUTL    EQU   *                                                        35740000
         ST    RETURN,EDTSVX                                            35760000
         JPUTL FILE=FILE1,BUFREQ=(R11) GET NEXT OUTPUT BUFFER           35780000
         L     RETURN,EDTSVX                                            35800000
         ST    RETADR,OUTADR            SAVE BEGIN ADDRESS              35820000
         LR    INDEXO,RETADR            JTEXT BASE                      35840000
         LA    INDEXP,JTHDRLN(,INDEXO)  JTEXT BASE 2                    35860000
         BR    RETURN                   RETURN TO CALLER                35880000
         SPACE 3                                                        35900000
*********************************************                           35920000
*        EDITED TEXT INITIALIZATION         *                           35940000
*********************************************                           35960000
HDINIT   EQU   *                                                        35980000
         LCR   TWKREG1,INDEXO           LET ALL FIELD POINTERS          36000000
         AR    TWKREG1,INDEXP           POINT TO THE DUMMY FIELD        36020000
         XC    JTRLI(JTHDRLN+2),JTRLI   CLEAR HEADER                    36040000
         STH   TWKREG1,JTNMP                                            36060000
         LA    INDEXP,D2(,INDEXP)       BUMP OVER DUMMY FIELD           36080000
RESETPTR EQU   *                                                        36100000
         MVC   JTOCP(JTSYMCNT-JTOCP),JTNMP                              36120000
         BR    RETURN                   RETURN TO CALLER                36140000
         EJECT                                                          36160000
*******************************                                         36180000
******     CONSTANTS     ******                                         36200000
*******************************                                         36220000
         PRINT DATA                                                     36240000
ETMOV    MVC   D1(*-*,INDEXP),D0(GSPTR) OFF-THE-LINE MOVE               36260000
ARDSRC   DC    A(RDSRC)                 RDSRC ENTRY POINT               36280000
ARDSRC05 DC    A(RDSRC05)               RDSRC05 ENTRY POINT             36300000
ATRTEST  DC    A(TRTEST)                TRTEST ENTRY POINT              36320000
ATRT01   DC    A(TRT01)                 TRT01 ENTRY POINT               36340000
ATRT02   DC    A(TRT02)                 TRT02 ENTRY POINT               36360000
SRCLEN   DC    F'70'                    DATA PORTION MOVE LENGTH        36380000
BEGCOL   DC    F'0'                     BEGIN COLUMN MINUS 1            36400000
CONTCHR  DC    F'71'                    CONT CHR COLUMN MINUS 1         36420000
SEQCOL   DC    F'72'                    SEQ FLD BEGIN COL MINUS 1       36440000
SEQLEN   DC    F'7'                     SEQ FLD MOVE LENGTH             36460000
CONTBGN  DC    F'15'                    CONT COLUMN MINUS 1             36480000
CONLEN   DC    F'55'                    CONT FLD MOVE LENGTH            36500000
*                                                                       36520000
F15      DC    F'15'                    MASKING CONSTANTS               36540000
F31      DC    F'31'                    .                               36560000
RSTKLEN  DC    AL2(EDRSTK-BDRSTK)       RSTACK LENGTH                   36580000
CSTKLEN  DC    AL2(EDCSTK-CSTKNOTE)     CSTACK LENGTH                   36600000
HATT     DC    AL2(JTMTAT-2)            ATTR FLAG CONV BASE V           36620000
H32K     DC    H'32767'                 MAXIMUM DIMENSION ALLOWED       36640000
H80      DC    H'80'                    STANDARD CARD LENGTH            36660000
H40      DC    H'40'                    STANDARD DATA LENGTH            36680000
DOTSTAR  DS    0CL2                                                     36820000
         DC    AL1(JPERIOD,JASTER)      GENERATED COMMENT STMT          36840000
CMABLK   DC    AL1(JCOMMA,JBLANK)       FIELD TERMINATOR                36860000
         DS    0H                       HALF WORD ALIGNMENT             36880000
FXDHD    DS    0CL20                                                    36900000
         DC    AL2(0)                   RECORD LENGTH                   36920000
PUTFLG   DC    AL1(JPSOP,JPRONLY)       ASSEMBLER OP / PRINT ONLY       36940000
         DC    AL1(JTCMNT,J0)           INTERNAL OP CODE                36960000
         DC    5AL2(COMIT-FXDHD)        DUMMY POINTERS                  36980000
         DC    2X'00'                   TWO FIELDS                      37000000
COMIT    DC    2X'00'                   DUMMY FIELD                     37020000
COMDTA   EQU   *                        END OF FXDHD                    37040000
         DS    0H                                                       37160000
*********************************************************************** 37180000
*  STANDARD CATEGORIES AND TYPES CORRESPONDING TO SPECIAL CHARACTERS  * 37200000
*                                                                     * 37220000
*  INTERNAL CODE MINUS 39.  0 1 2 3 4 5 6 7 8 9 1011                  * 37240000
*  SPECIAL CHARACTER        = ( + - * / ) ,   ' & .                   * 37260000
QMDTBL   DC            XL12'000000000000000003050200'  QUOTE MODE ARG * 37280000
STDTBL   DC            XL12'030406060606030303050203'  STANDARD CATEG * 37300000
*TRTSRC  DC            XL12'00040A0B080905022F000003'  TYPE NUMBER    * 37320000
TRTSRC   DS    0CL12                                                  * 37340000
         DC    AL1(JEQUAL,JTMLPAR,JTMADD,JTMSUB,JTMMULT,JTMDIV)       * 37360000
         DC    AL1(JTMRPAR,JTMCOM,JBLANK,JTMSCM,JAMPER,JTMPER)        * 37380000
*********************************************************************** 37400000
         PRINT NODATA                                                   37420000
         SPACE 3                                                        37426000
         JPATCH  X1A00,FEE                                              37432000
         EJECT                                                          37440000
         JCSECT (X1A10=CS2)                                             37460000
**************************************                                  37480000
*        VIRTUAL TEXT BUILDER        *                                  37500000
**************************************                                  37520000
VTENT    EQU   *                                                        37540000
         GOIF  METSW,ON=VTENT10         BRANCH IF GOOD M.T. EXISTS      37560000
VTENT05  EQU   *                                                        37580000
         L     INDEXP,OFPTRSV           ELSE, WIPE OFF MT SO FAR BUILT  37600000
         B     VTPUT0                   BUILD V.T.                      37620000
VTENT10  EQU   *                                                        37640000
         GOIF  GAIF,ON=VTENT20          BRANCH IF AIF STATEMENT         37660000
         GOIF  GSUBS,OFF=VTENT20        BRANCH IF NO SUBSTITUTION       37680000
         BAL   RETURN,MTENT10          ELSE, WRAP UP MT                 37700000
         LR    INPTR,R1                 KEEP INPTR CURRENT              37720000
         OC    JTFLGB,SWITCH8           AND INDICATE SUBSTITUTION       37740000
VTENT15  EQU   *                                                        37760000
         LR    R0,R12                   SAVE RETURN POINT               37780000
         BAL   R3,PFXRENT               END OF M.T.                     37800000
         DC    AL2(JTMSTRM)             STATEMENT TERMINATOR            37820000
         BCTR  INPTR,D0                 BACK UP                         37840000
         LR    R12,R0                   RESTORE RETURN POINT            37860000
VTENT20  SET   (GSUBS,METSW),OFF                                        37880000
         LR    R14,INDEXP               COMPUTE MT LENGTH               37900000
         S     R14,OFPTRSV                                              37920000
         STH   R14,JHWORD1              ENTER MT LENGTH                 37940000
         MVC   D0(L'JHWORD1,INDEXP),JHWORD1                             37960000
         LA    INDEXP,D2(,INDEXP)                                       37980000
VTPUT0   EQU   *                                                        38000000
         L     RCNT,INPUT                                               38020000
VTPUT    EQU   *                                                        38040000
         ST    INDEXP,OFPTRSV           SAVE VT BEGIN LOC FOR PTR CALC  38060000
         GOIF  JPSOP,OFF=VTPUT02        SUPPRESS VT ON PSEUDO OPS       38080000
         CLI   OCSAVE,JTPEND            LOOK ONLY AT GENERATOR OPS,     38100000
         BH    VTPUT02                  THOSE BETWEEN ANOP AND PEND     38120000
         CLI   OCSAVE,JTANOP            IF NON-GENERATOR OP, PUT        38140000
         BL    VTPUT02                  OUT VIRTUAL TEXT EVERY TIME     38160000
         GOIF  SPGRMD,ON=VTPUT02        PUT V.T. FOR PRGMR MACRO DEF    38180000
         GOIF  SSYSMD,OFF=VTPUT40       BRANCH IF IN OPEN CODE          38200000
         GOIF  SXPRTO,OFF=VTPUT50       BRANCH IF INNER CALL STMT       38220000
         GOIF  (JMLOGIC,JSYSMAC),NONE=VTPUT60 PUT VT IF MACRO COND'T'NL 38240000
VTPUT02  EQU   *                        ASSEMBLY TO BE PRINTED          38260000
         L     GSPTR,FPTRSV             RESTORE INPUT FIELD BEGIN ADDR  38280000
VTPUT05  EQU   *                                                        38300000
         LM    R9,R11,TBGLN                                             38320000
         LA    R14,D1(,GSPTR)           COMPUTE RELATIVE FIELD LOCATION 38340000
         SR    R14,RCNT                 IN INPUT WORK BUFFER            38360000
         LH    TRTN,H1                  AND TAKE CARE OF CARD COUNTER   38380000
VTPUT10  CR    R14,R10                  ARE WE IN THE RIGHT CARD        38400000
         BNH   VTPUT20                  YES                             38420000
         SR    R14,R11                  NO. SUBTRACT COUNT LENGTH       38440000
         AH    TRTN,H1                  INCREMENT CARD COUNT BY 1       38460000
         B     VTPUT10                  CHECK NEXT CARD                 38480000
VTPUT20  AR    R14,R9                   ADD PRE-BEGIN STRING LENGTH     38500000
         CH    TRTN,H1                  DID WE STOP IN THE 1ST CARD     38520000
         BE    VTPUT30                  DON'T ENTER CARD POINTER IF YES 38540000
         STC   TRTN,D0(,INDEXP)         ELSE, A ONE-BYTE CARD POINTER   38560000
         OI    D0(INDEXP),BIT0          PRECEDING COLUMN POINTER        38580000
         LA    INDEXP,D1(,INDEXP)                                       38600000
VTPUT30  STC   R14,D0(,INDEXP)          ENTER COLUMN POINTER            38620000
         LA    INDEXP,D1(,INDEXP)                                       38640000
         LR    R15,INPTR                COMPUTE STRING LENGTH           38660000
         SR    R15,GSPTR                                                38680000
         STC   R15,D0(,INDEXP)          AND ENTER IT                    38700000
         BCTR  R15,0                    DECR LENGTH BY 1                38720000
         EX    R15,ETMOV                MOVE VT TO OUTPUT BUFFER        38740000
         LA    INDEXP,D2(R15,INDEXP)    BUMP TO NEXT AVAILABLE LOCATION 38760000
         BR    R12                      EXIT VT RTN                     38780000
VTPUT40  CLI   OCSAVE,JTMACRO           LOOK ONLY AT OPEN CODE SUBSET   38800000
         BE    VTPUT02                  OF GENERATOR OPS                38820000
         CLI   OCSAVE,JTSETC            IF NOT IN THAT RANGE, PUT       38840000
         BH    VTPUT02                  OUT VIRTUAL TEXT EVERY TIME     38860000
         GOIF  JALOGIC,ON=VTPUT02       ALWAYS PUT V.T. IF ASM LOGIC ON 38870000
         GOIF  JSYSMAC,OFF=VTPUT60      NO V.T. IF SYS MACS NOT PRINTED 38880000
         B     VTPUT02                  PUT V.T. INCASE GENERATED END   38900000
VTPUT50  GOIF  (JCALLS,JMLOGIC,JSYSMAC),ANY=VTPUT02 PUT VT IF INNERS TO 38920000
VTPUT60  SET   SMISCN,ON                INDICATE NO V.T. OUTPUT         38930000
         BR    R12                      BE PRINTED, ELSE, EXIT          38940000
         EJECT                                                          38950000
*********************************************************************** 38960000
*  GSCAN SCANS AND CLASSIFIES ALL INPUT SOURCE STATEMENTS EXCEPT      * 38980000
*  OPERANDS ON AIF, AGO, SETX, MACRO INSTRUCTION, AND PROTOTYPE       * 39000000
*  STATEMENTS. SCAN RESULTS ARE RETURNED IN LOCATION GSUMRY. THE      * 39020000
*  FIELD SCANNED IS EDITED INTO VIRTUAL TEXT AND, IF NECESSARY, META  * 39040000
*  TEXT FORMATS IN OUTPUT BUFFER.                                     * 39060000
*  AT ENTRY GQST IS SET TO ZERO TO START QUOTE STATUS CHECKING        * 39080000
*                0 = EVEN NUMBER OF QUOTE FOUND AT EXIT               * 39100000
*                1 = ODD NUMBER OF QUOTE FOUND AT EXIT                * 39120000
*  GMET IS SET ON WHEN A META TEXT IS BUILT FOR A FIELD               * 39140000
*  RESULTS RETURNED FROM TRT ARE                                      * 39160000
*                R1 = TERMINATING CHARACTER ADDRESS                   * 39180000
*                R3 = CATEGORY NUMBER OF THE TERMINATING CHARACTER    * 39200000
*                R10= TYPE FLAG NUMBER OF THE TERMINATING CHARACTER   * 39220000
*                R15= STRING/SYMBOL MOVE LENGTH                       * 39240000
*                                                                     * 39260000
*  LINKAGE IS  BAL  RETURN,GSCAN                                      * 39280000
*********************************************************************** 39300000
         SPACE 3                                                        39320000
GSCAN    EQU   *                                                        39340000
         ST    INPTR,FPTRSV             SAVE BEGIN ADDRESS FOR V.T.     39360000
         ST    INDEXP,OFPTRSV                                           39380000
GSCAN1   EQU   *                                                        39400000
         ST    INPTR,MEZZOPTR           SAVE MEZZO POINTER              39420000
         ST    RETURN,EDTSVX            SAVE RETURN POINT               39440000
         MVI   GSUMRY,D0                CLEAR SCAN RESULT BYTE          39460000
GSCNMOP  EQU   *                                                        39480000
         GOIF  GQST,ON=GSCQMD           BRANCH IF IN QUOTE MODE         39500000
         L     LINK,ATRTEST             POINT TO TRTEST                 39520000
         BALR  RETURN,LINK              GO TO TRTEST                    39540000
GSCFAN   AR    R3,R3                    DOUBLE THE CATEG NUMBER         39560000
         LH    R14,GSCTBL(R3)           PICK UP REL ENTRY               39580000
         B     GSCTBL(R14)              AND FAN OUT                     39600000
GSCQMD   MVC   SPECHAR(L'QMDTBL),QMDTBL STOP ON QT, &, BLANK, ENDATA    39620000
         LA    PARM,D2                  DON'T DO SYN STG SEARCH         39640000
         LA    RETURN,GSCFAN            GET RETURN POINT                39660000
         L     LINK,ATRT02              POINT TO TRT02                  39680000
         BR    LINK                     GO TRT                          39700000
         EJECT                                                          39720000
GSCTBL   EQU   *                        CATEGORIES                      39740000
         DC    AL2(GSADV-GSCTBL)        0 = DECIMAL                     39760000
         DC    AL2(GSALFA-GSCTBL)       1 = ALPHAMERIC                  39780000
         DC    AL2(GSAMPR-GSCTBL)       2 = AMPERSAND                   39800000
         DC    AL2(GBLK-GSCTBL)         3 = ,=.) OR BLANK               39820000
         DC    AL2(GSCIMP-GSCTBL)       4 = (                           39840000
         DC    AL2(GQOTS-GSCTBL)        5 = QUOTE                       39860000
         DC    AL2(GSCIMP-GSCTBL)       6 = +-*/                        39880000
         DC    AL2(LTRLQT-GSCTBL)       7 = L' I' S' K' N'              39900000
         DC    AL2(LTRQT-GSCTBL)        8 = X' B' C' SDT                39920000
         DC    AL2(LTRQTIN-GSCTBL)      9 = T'                          39940000
         DC    AL2(GSALFA-GSCTBL)       10 = BOOLEAN OPERATOR           39960000
         DC    AL2(GSALFA-GSCTBL)       11 = RELATIONAL OPERATOR        39980000
         DC    AL2(GENDT-GSCTBL)        12 = NON-ASSEMBLER              40000000
         EJECT                                                          40020000
         SPACE 3                                                        40040000
GENDT    EQU   *                                                        40060000
         C     INPTR,ENDATA             HAVE WE PAST ENDATA             40080000
         BNL   GSVTENT                  YES, WRAP UP VT                 40100000
GSCIMP   OI    GSUMRY,RMPURE            INDICATE IMPURITY               40120000
         LA    INPTR,D1(,INPTR)         BUMP POINTER                    40140000
         B     GSCNMOP                  AND PLOD ONWARD                 40160000
GSS10    LR    INPTR,R1                 PLOD ONWARD                     40180000
         B     GSCIMP                                                   40200000
*                                                                       40220000
GBLK     EQU   *                                                        40240000
         CLI   D0(INPTR),JBLANK         TEST IF BLANK TERMINATES        40260000
         BE    GBLK10                   YES                             40280000
         CLI   D0(INPTR),JPERIOD        DID PERIOD TERMINATE            40300000
         BNE   GSCIMP                   BRANCH IF NOT                   40320000
*                                       ELSE PRAY FOR A S.S.            40340000
GSSSYM   EQU   *                                                        40360000
         TM    GSUMRY,BITFF             HAS ANYTHING BEEN DONE          40380000
         BNZ   GSCIMP                   BRANCH IF YES                   40400000
         GOIF  SKPNAME,ON=GSCIMP        BRANCH IF SKIPPING TO OP CODE   40420000
         LA    INPTR,D1(,INPTR)         FORGET THE DOT FOR A WHILE      40440000
         LA    PARM,D2                  GO TRT THE TRAILING STRING      40460000
         L     LINK,ATRT02              POINT TO TRT02                  40480000
         BALR  RETURN,LINK              W/O SYNTACTIC STRING SEARCH     40500000
         BCT   R3,GSS10                 CONTINUE IF NOT AN STRING       40520000
         CLI   D0(INPTR),JA             AND DIGIT HEAD IS               40540000
         BL    GSS10                    UNDESIRABLE. EDIT AS C STRING   40560000
         CLI   D0(R1),JBLANK            AND TERMINATOR MUST BE A BLANK  40580000
         BNE   GSS10                    ELSE EDIT AS C STRING           40600000
         GOIF  SENAME,ON=GSS20          BRANCH IF EDITING NAME FIELD    40620000
         GOIF  SEOPND,OFF=GSS10         BRANCH IF NOT EDITING OPERAND   40640000
         CLI   OCSAVE,JTAGO                                             40660000
         BE    GSS20                    BRANCH IF AGO STATEMENT         40680000
         CLI   OCSAVE,JTAIF                                             40700000
         BNE   GSS10                    BRANCH IF NOT AIF STMT          40720000
GSS20    EQU   *                                                        40740000
         BCTR  INPTR,0                  REMEMBER THE FORGOTTEN DOT      40760000
         LA    R15,D1(,R15)             AND ITS LENGTH                  40780000
         CH    R15,H8                   TEST IF LENGTH LE 8             40800000
         BNL   GSS10                    EDIT AS C STRING IF GE 8        40820000
         MVI   GSUMRY,RSSYM             SET ON SS INDICATOR             40840000
         BAL   RETURN,MTENT             GO MAKE D ENTRY                 40860000
GSADV    AR    INPTR,R15                                                40880000
         B     GSCIMP                   ADVANCE POINTER                 40900000
GSALFA   EQU   *                                                        40920000
         CLI   D0(R1),JBLANK            TEST IF TERMINATOR A BLANK      40940000
         BNE   GSADV                    ADVANCE POINTER AND CONT SCAN   40960000
         GOIF  SKPNAME,ON=GSA05         BRANCH IF SKIPPING NAME FIELD   40980000
* CHARACTER STRING WILL NOT BE BUILT IN MT UNTILL ENCOUNTERED           41000000
* A TRAILING BLANK OR AMPERSAND                                         41020000
         TM    GSUMRY,BITFF             ANYTHING DONE YET               41040000
         BNE   GSA10                    BRANCH IF YES                   41060000
         CH    R15,H8                   IT'S AN OS. HOW ABOUT LENGTH    41080000
         BNL   GSA10                    LONGER THAN 8 IS EDITED AS STG  41100000
         MVI   GSUMRY,ROSYM             A GOOD OS                       41120000
         BAL   RETURN,MTENT             GO MAKE D ENTRY                 41140000
GSA05    LR    INPTR,R1                 BUMP TO THE TERMINATOR          41160000
         B     GBLK10                   WHICH IS A BLANK                41180000
GSA10    GOIF  METSW,OFF=GSA05          BRANCH IF THUS FAR NO MT BUILT  41200000
         GOIF  GQST,ON=GSADV            TOO EARLY TO BUILD MT IF IN QT  41220000
         BAL   RETURN,MTENT10           ELSE FINISH BUILDING MT         41240000
         B     GSA05                    GO TO FIELD TERMINATOR          41260000
GSAMPR   EQU   *                                                        41280000
         CLI   D1(INPTR),JAMPER         TEST IF DOUBLE AMPERSAND        41300000
         BNE   GSM10                    BRANCH IF NOT                   41320000
         LA    INPTR,D1(,INPTR)         ELSE, EDIT AS C STRING          41340000
         B     GSCIMP                   '&&' EDITED AS CHARACTER STRING 41360000
GSM10    EQU   *                                                        41380000
         GOIF  (SKPNAME,PROTOCAL),ANY=GSCIMP BR IF SKIPPING TO OP CODE  41400000
         CLI   OCSAVE,JTOPSYN           VAR SYM IN NAME/OPND OF OPSYN   41420000
         BNE   GSM15                    NO, GO TO DIR ROUTINE           41440000
         GOIF  SNMFND,OFF=ILOPSYN       VAR SYM IN OPND FIELD OF OPSYN  41460000
* VAR SYMBOL IN NAME FIELD OF OPSYN IS DISALLOWED--IT'S SCANNED AND     41480000
*  ENTERED INTO THE TEXT, BUT THE DIRECTORY ROUTINE IS BYPASSED--       41500000
*  THE ERROR ITSELF WILL BE DETECTED IN THE OPSYN ROUTINE               41520000
         SET   RVSYM,ON                 ERR-VAR SYM IN OPSYN NAME FIELD 41540000
         LA    INPTR,D1(,INPTR)         BUMP OVER '&' AND SCAN TO END   41560000
         LA    R10,D2                   OF VAR SYM, NO SYNTACTIC SCAN   41580000
         L     LINK,ATRT01              POINT TO TRT01                  41600000
         BALR  RETURN,LINK              SCAN THRU END OF SYM, ISOLATE   41620000
         B     GSA05                    NOW, GO PUT OUT THE ISOLATED SY 41640000
GSM15    EQU   *                                                        41660000
         BAL   RETURN,MTENT10           GO OUTPUT PRIOR MT              41680000
         LR    INPTR,R1                 UPDATE INPTR                    41700000
         BAL   RETURN,VARSYM            SCAN V.S. AND BUILD MT          41720000
* VARSYM ROUTINE SHOULD INDICATE RVSYM AND SET ON METSW, MAKE D ENTRY   41740000
* AND BUILD MT. AFTER RETURN, UPDATE INPTR TO NEXT SCAN LOCATION.     * 41760000
         LR    INPTR,R1                 POINT TO NEXT SCAN LOCATION     41780000
GSM20    EQU   *                                                        41800000
         MVI   ATTRSV,D0                RESET SYSLIST FLAGS             41820000
         CLI   D0(INPTR),JPERIOD        TEST IF TERMINATOR A DOT        41840000
         BNE   GSCNMOP                  BRANCH IF NOT                   41860000
         LA    INPTR,D1(,INPTR)         YES, IT IS A CONCATENATION      41880000
         ST    INPTR,MEZZOPTR           UPDATE POINTERS AND             41900000
         B     GSCNMOP                  CONTINUE SCANNING               41920000
GBLK10   EQU   *                                                        41940000
         GOIF  GQST,OFF=GSQXT           THAT'S END OF FLD IF NOT QT MD  41960000
         B     GQOTLP                   ELSE KEEP SCANNING              41980000
         SPACE                                                          42000000
LTRLQT   CLI   D0(INPTR),JL             TEST IF L' TYPE                 42020000
         BNE   LTRQTIN                  NOT WANTED IF NOT               42040000
         CLI   D2(INPTR),JA             LOOK AHEAD FOR ....             42060000
         BL    LTRQT                    POSSIBLE LONG FORM              42080000
         CLI   D2(INPTR),JAT            IF FOLLOWED BY ALPHA            42100000
         BNH   GSS10                    FORGET IT                       42120000
         CLI   D2(INPTR),JASTER                                         42140000
         BE    GSS10                    INCLUDING L'*                   42160000
         CLI   D2(INPTR),JAMPER         IF FOLLOWED BY AMPER   @AX16943 42170000
         BE    GSS10                    PROCEED CHECKING       @AX16943 42172000
LTRQTIN  GOIF  (SKPNAME,PROTOCAL),ANY=GSS10                             42180000
         SPACE                                                          42200000
LTRQT    OI    GSUMRY,RMPURE            IMPURITY                        42220000
         LA    INPTR,D1(,INPTR)         BUMP POINTER                    42240000
         SPACE                                                          42260000
GQOTS    SET   GQST,FLIP                FLIP THE ODD QUOTE CHECKER      42280000
         OI    GSUMRY,RQTSTG            INDICATE IN QUOTE MODE          42300000
         GOIF  SEOPCD,OFF=GQOTLP        BR IF NOT OPCODE       @OY04864 42310005
         GOIF  GQST,OFF=GQOTLP          BR IF NOT ODD QOUTE MD @OY04864 42312005
         CLI   D1(INPTR),JAMPER         ONLY '& VALID FOR-     @OY04864 42314005
         BE    GQOTLP                   QOUTE IN OPCODE        @OY04864 42316005
         SET   GQST,OFF                 RESET ODD QOUTE CHK    @OY04864 42318005
         GOIF  SKPNAME,ON=GQOTERR       BR IF NO NAME FIELD    @OY04864 42318405
         BAL   R12,VTENT                ELSE, LOG VT           @OY04864 42318805
GQOTERR  B     INVOP                    LOG HARD ERROR         @OY04864 42319205
GQOTLP   LA    INPTR,D1(,INPTR)         BUMP POINTER                    42320000
         B     GSCNMOP                  KEEP SCANNING                   42340000
         SPACE                                                          42360000
GSVTENT  L     INPTR,ENDATA             BE SURE PNT TO END     @OX07300 42370005
         GOIF  GQST,ON=ODDQT            ERR IF NO ENDING QUOTE @OX07300 42380005
         SPACE                                                          42400000
GSQXT    GOIF  SKPNAME,ON=GSQXT1        BRANCH IF SKIPPING NAME FIELD   42420000
         BAL   R12,VTENT                ELSE, LOG VT                    42440000
         SPACE                                                          42460000
GSQXT1   ST    INPTR,FPTRSV             SAVE NEXT LOC TO BE EDITED      42480000
         L     RETURN,EDTSVX            RESTORE RETURN POINT            42500000
         BR    RETURN                   RETURN                          42520000
         SPACE                                                          42540000
ODDQT    LR    R0,R1                                                    42560000
         BAL   TLINK,ABSERR             LOG ERROR                       42580000
         DC    AL1(SEV35)               .                               42600000
         DC    AL1(ERR35)               NO TERMINATING QUOTE            42620000
         LR    R1,R0                                                    42640000
         SET   GQST,OFF                                                 42660000
         B     GSQXT                    GO LOG VT                       42680000
         EJECT                                                          42700000
*********************************************************************** 42720000
* MTENT ROUTINE ONLY ENTERS ORDINARY SYMBOLS, SEQUENCE SYMBOLS AND      42740000
* CHARACTER STRINGS. VARIABLE SYMBOLS ARE ENTERED IN VARSYM ROUTINE.    42760000
* ORDINARY SYMBOL DEFINITION AND SEQUENCE SYMBOL DEFINITION ARE ENTERED 42780000
* INTO DIRECTORY AFTER THE EDITED TEXT FOR THE STATEMENT HAS BEEN       42800000
* COMPLETELY BUILT. SWITCH SDENT IS DESIGNED FOR SUCH PURPOSE.          42820000
* THE REST OF THE SYMBOLS ARE ENTERED INTO DIRECTORY AS SOON AS A       42840000
* SYMBOL IS RECOGNIZED AND FOUND TO BE A VALID ONE.                     42860000
*********************************************************************** 42880000
         SPACE 3                                                        42900000
MTENT    ST    RETURN,EDTSVY                                            42920000
         TM    GSUMRY,ROSYM             TEST IF O.S.                    42940000
         BO    MTTOS                    BRANCH IF YES                   42960000
         TM    GSUMRY,RSSYM             TEST IF S.S.                    42980000
         BNO   MTCSTG                   ASSUME C STRING IF NOT S.S.     43000000
         SPACE                                                          43020000
MTTSS    GOIF  SENAME,OFF=SSRTEMP  ******** T ********                  43040000
         MVI   SDENTR,SEQSYMBD          SAVE SS DEFINITION INDEX        43060000
         ST    R15,NAML                 SAVE NAME FIELD MOVE LENGTH     43080000
         ST    INPTR,NAMP               AND POINTER FOR                 43100000
MTSVPTR  SET   SDENT,ON                 POINT OF DEFINITION             43120000
         SPACE                                                          43140000
MTSVRTN  L     RETURN,EDTSVY            RESTORE POINTER                 43160000
         BR    RETURN                   THEN RETURN                     43180000
*********************************************************************** 43200000
         SPACE                                                          43220000
SSRTEMP  GOIF  SEOPND,OFF=MTCSTG        BRANCH IF NOT IN OPERAND        43240000
         MVI   DDNDX1,SEQSYMBR          SET UP INDEX FOR BR TO DIR RTN  43260000
         LR    PARM,INPTR               POINT TO THE SYMBOL             43280000
         LR    PARAM2,TWKREG2           AND THE LENGTH                  43300000
         BAL   R3,DIRENT                LOG SS REFERENCE                43320000
         MVC   D0(D4,INDEXP),D0(R11)    BUILD MT                        43340000
         LA    INDEXP,DENTLNG(,INDEXP)  BUMP 2 EXTRA BYTES FOR GEN'TOR  43360000
         B     METON                    GO SET METSW ON                 43380000
*********************************************************************** 43400000
MTTOS    GOIF  SENAME,OFF=MTTOS10       BRANCH IF NOT NAME FIELD        43420000
         GOIF  SMDEF,ON=GSA05           NO D ENTRY IF IN MACRO DEF.     43440000
         MVI   SDENTR,ORDSYMBD          SAVE OS DEF INDEX               43460000
         ST    INDEXO,NAMP              AND BEGIN POINT OF ET           43480000
         B     MTSVPTR                  GO TO RETURN                    43500000
         SPACE                                                          43520000
MTTOS10  GOIF  SEOPCD,OFF=MTCPY         BRANCH IF IN OPERAND            43540000
* MAKE IOC AND FLAGA ENTRY AFTER RETURN TO MAINLINE LOGIC               43560000
         LR    PARM,INPTR               GET OP CODE FIELD ADDRESS       43580000
         LR    PARAM2,TWKREG2           AND ITS MOVE LENGTH             43600000
         MVI   DDNDX1,OPERCODE          INDICATE OP CODE SEARCH         43620000
         BAL   R3,DIR10                 GO                              43640000
         ST    PARAM2,OCPTRSV           SAVE IOC POINTER                43660000
         MVI   OCSAVE,D0                ZERO IN CASE OF MACRO CALL      43670000
         TM    IOCID,BIT0+BIT1          TEST IF MACRO CALL              43680000
         BZ    MTTOS11                  BRANCH IF MACRO CALL/NAME       43700000
         BO    MTSVRTN                  BRANCH IF TWO BYTE OP CODE      43720000
         MVC   OCSAVE,D1(PARAM2)        PRESERVE ASSEMBLER OP CODE      43740000
         B     MTSVRTN                  GO TO EXIT                      43760000
         SPACE                                                          43780000
MTTOS11  GOIF  SXPRTO,ON=MTSVRTN        PROTOTYPE IS NOT WANTED         43800000
         MVC   D0(D3,INDEXP),D0(PARAM2) MAKE MT ENTRY IF MACRO CALL     43820000
         LA    INDEXP,D3(,INDEXP)       AND ADVANCE POINTER             43840000
METON    SET   METSW,ON                 INDICATE META TEXT BUILT        43860000
         B     MTSVRTN                  GO TO RETURN                    43880000
         SPACE                                                          43900000
MTCPY    GOIF  SCOPY,OFF=MTCSTG         BRANCH IF NOT EDITING COPY STMT 43920000
         MVI   COPYCODE,JBLANK          YES. CLEAR COPY CODE SAVE AREA  43940000
         MVC   COPYCODE+1(L'COPYCODE-1),COPYCODE                        43960000
         EX    TWKREG2,MVCOPY           AND SAVE COPY CODE              43980000
         BR    RETURN                   DO NOT BUILD MT                 44000000
MTCSTG   EQU   *                        BUILD C STRING IN MT            44020000
MTENT10  L     INPTR,MEZZOPTR                                           44040000
         LR    R14,R1                                                   44060000
         SR    R14,INPTR                TEST IF ANYTHING TO BE PUT      44080000
         BCR   BZ,RETURN                BRANCH IF NO                    44100000
         MVI   D0(INDEXP),JTMCS         ENTER FLAG                      44120000
         STC   R14,D1(,INDEXP)          AND ENTER IT                    44140000
         LA    INDEXP,D2(,INDEXP)       BUMP POINTER                    44160000
         BCTR  R14,0                    MAKE IT MOVE LENGTH             44180000
         EX    R14,MTXTMV               MOVE STRING TO MT               44200000
MTEXIT   LA    INDEXP,D1(R14,INDEXP)    BUMP TO NEXT AVAILABLE LOCATION 44220000
         ST    R1,MEZZOPTR              UPDATE MEZZOPTR                 44240000
         BR    RETURN                   RETURN                          44260000
MTXTMV   MVC   D0(1,INDEXP),D0(INPTR)   OFF-THE-LINE MOVE               44280000
MVCOPY   MVC   COPYCODE(0),INPOPR       OFF-THE-LINE MOVE               44300000
         EJECT                                                          44320000
*********************************************************************** 44340000
*  RECURSIVE ROUTINE TO SCAN VARIABLE SYMBOLS                           44360000
*  THE LINKAGE IS BAL RETURN,VARSYM                                     44380000
*********************************************************************** 44400000
         SPACE 3                                                        44420000
VARSYM   BAL   R12,RENTSTK              MAKE RECURSION STACK ENTRY      44440000
*BUMP THE POINTER PAST THE '&' FOR THE DIRECTORY ROUTINE                44460000
         ST    INPTR,TPSAVE             SAVE BEGIN PT FOR SNAP          44470000
         LA    INPTR,D1(,INPTR)         BUMP POINTER                    44480000
         LA    R10,D2                   NO SYNTACTIC STRING SEARCH      44500000
         L     LINK,ATRT01              POINT TO TRT01                  44520000
         BALR  RETURN,LINK              GO ISOLATE V.S. TRAILER WHICH   44540000
         CH    R3,H1                    MUST BE A/N STRING              44560000
         BNE   ILGVS                    ELSE, LOG ERROR                 44580000
         CH    R15,H6                   AND LENGTH MUST BE LE 8         44600000
         BH    ILGVS                    ELSE, LOG ERROR                 44620000
* MAKE DIRECTORY ENTRY FOR VS - DISTINGUISH DEF FROM REF FIRST          44640000
* AT ENTRY R11 CONTAINS THE MOVE LENGTH (INCL. &) OF THE SYMBOL         44660000
*          R10 POINTS TO THE SYMBOL  /&NAME/(/D/)/ WHERE DIMENSION      44680000
*              IS OPTIONAL                                              44700000
* ON RETURN  XIJ TELLS X1A THROUGH FLGBYT WHETHER THE SYMBOL IS A       44720000
* SYSTEM VARIABL, DIMENSIONED AND WHETHER IT IS SYSLIST                 44740000
*          R11 POINTS TO A 6-BYTE LOCATION CONTAINING /F/PTR/DM/        44760000
* IF ERROR FOUND IN D ROUTINE ON THE V.S. ENTERED  CONCODE WILL TELL.   44780000
*                                                                       44800000
*          SYSECT/SYSNDX/SYSLIST IN OPEN CODE IS RETURNED WITH ERROR    44820000
*          CODE IN CONCODE (ERROR #6- VS NOT PREVIOUSLY DEFINED.)       44840000
         LR    PARAM2,TWKREG2           GET SYMBOL LENGTH               44860000
         LR    PARM,INPTR               POINT TO THE SYMBOL             44880000
         MVI   DDNDX1,VARBSYMR          SET UP INDEX FOR BR TO DIR RTN  44900000
         GOIF  SGBLCL,OFF=VSDENT        BRANCH IF YES                   44920000
         MVC   FLGBYT(L'FLGBYT),FLAGBT  REDEFINE FLGBYT                 44940000
         LR    INPTR,R1                 SKIP OVER V.S.                  44960000
         CLI   D0(INPTR),JLPARN         TEST IF LEFT PAREN FOLLOWS      44980000
         BNE   VSDNDX                   NO, UNDIMENSIONED               45000000
         BAL   RETURN,DSCAN1            YES, GO SCAN DSDT               45020000
         B     ILDIM                    ILLEGAL DIMENSION               45040000
         LTR   TWKREG1,TWKREG1          DIMENSION OF 0 IS NOT ALLOWED   45060000
         BNP   ILDIM                    ILLEGAL DIMENSION               45080000
         CLI   D0(INPTR),JRPARN         TEST DELIMITER FOR RIGHT PAREN  45100000
         BNE   ILDIM                    ERROR IF NOT                    45120000
         SET   VDIM,ON                  INDICATE DIMENSIONED            45140000
         LA    INPTR,D1(,INPTR)         BUMP OVER R-PAREN               45160000
         CH    TWKREG1,H32K             NOR CAN IT BE GT 32K            45180000
         BH    HIDIM                    ERROR, MAX DIMENSION EXCEEDED   45200000
         STH   TWKREG1,JHWORD1          TELL IT TO DIRECTORY ROUTINE    45220000
VSDNDX   EQU   *                                                        45240000
         LR    R1,INPTR                 UPDATE POINTER                  45260000
         L     INPTR,OPNDPTR            IN CASE OF BACK UP              45280000
         MVI   DDNDX1,VARBSYMD          INDICATE DEFINITION             45300000
VSDENT   BAL   R3,DIRENT                WHATEVER IT IS GO MAKE D ENTRY  45320000
         TM    DERRCD,BITFF             TEST IF ERROR FOUND             45340000
         BNZ   CLEANUP                  WRAP UP STATEMENT               45360000
         GOIF  SENAME,ON=VS10           BR IF EDIT NAME FIELD   OY06129 45370031
         MVI   GSUMRY,RVSYM             INDICATE V.S.           OY06129 45372031
VS10     OI    GSUMRY,RVSYM             INDICATE V.S.           OY06129 45380031
         GOIF  SGBLCL,ON=REXSTK         EXIT IF IT WAS DEFINITION       45400000
         L     R14,RAVSP                                                45420000
         MVC   RSTKVST(L'FLGBYT),FLGBYT SAVE FLGBYT                     45440000
         NI    ATTRSV,D0                CLEAN UP ATTRSV                 45460000
         MVC   D0(D6,INDEXP),D0(R11)    ENTER VS REF MT                 45480000
         CLI   FLGBYT,XDMSLS            TEST IF UNSUBSCRIPTED SYSLIST   45500000
         BNE   VS20                     BRANCH IF NOT                   45520000
         XC    D4(D2,INDEXP),D4(INDEXP) DUMMY UP DIMENSION BYTES        45540000
VS20     EQU   *                                                        45560000
         LA    INDEXP,DENTLNG(,INDEXP)  BUMP POINTER                    45580000
         GOIF  VDIM,OFF=VSXIT           EXIT IF NOT DIMENSIONED         45600000
         LA    INPTR,D0(R15,INPTR)      BUMP POINTER                    45620000
         BAL   R3,PFXRENT               TELL POSTFIXER                  45640000
         DC    AL2(JTMDIM)              IT IS DIMENSIONED               45660000
         BAL   R3,PFXRENT               LOG L-PAREN                     45680000
         DC    AL2(JTMLPAR)             LEFT PAREN                      45700000
         BAL   R12,APARCT               UP PAREN COUNT                  45720000
         MVI   MCALL,MCLA               INDICATE SCAN AS SETA           45740000
         ST    INPTR,TPSAVE1            SAVE FOR SNAP           OX00224 45750001
         MVC   JHWORD2(L'PARMSTAT),PARMSTAT SAVE DMIENT         OX00411 45752001
         SET   DMIENT,OFF               CLEAR DMIENT            OX00411 45754001
         BAL   RETURN,METASCAN          SCAN FIRST SUBSCRIPT            45760000
         L     R14,RAVSP                                                45780000
         OI    RSTKATR,AT1              ASSUME SINGLE SUBSCRIPT         45800000
         CLI   D0(INPTR),JCOMMA         IS TERMINATOR A COMMA           45820000
         BNE   VS25                     BRANCH IF NOT           OX05801 45840004
         TM    RSTKVST,VSLS             ONLY SYSLIST MAY HAVE DOUBLE    45860000
         BZ    VS32                     SUBSCRIPT, ELSE ERROR  @OX06626 45880004
         OI    RSTKATR,ATSUBS           OK, GOOD DOUBLE SUBSCRIPT       45900000
         BAL   R3,PFXRENT               PUT COMMA IN POSTFIXER STACK    45920000
         DC    AL2(JTMCOM)              COMMA                           45940000
         BAL   RETURN,METASCAN          SCAN SECOND SUBSCRIPT           45960000
VS25     EQU   *                                                OX05801 45962031
         TM    JHWORD2,DMIENT           ENTRY FROM MIPROTO      OX00411 45970001
         BZ    VS30                     BR IF NOT               OX00411 45972001
         SET   DMIENT,ON                SET DMIENT              OX00411 45974001
VS30     EQU   *                                                        45980000
         CLI   D0(INPTR),JRPARN         TEST IF RIGHT PAREN TERMINATES  46000000
         BNE   VS32                     LOG ERROR IF NOT       @0X06626 46020004
         BAL   R3,PFXRENT               LOG R-PAREN                     46040000
         DC    AL2(JTMRPAR)             RIGHT PAREN                     46060000
         BAL   R12,DPARCT               AND DECREMENT PAREN COUNT       46080000
         LR    R1,INPTR                 UPDATE POINTER                  46100000
VSXIT    EQU   *                                                        46120000
         SET   (METSW,GSUBS),ON         INDICATE SUBSTITUTION/MT BUILT  46140000
         ST    R1,MEZZOPTR              UPDATE MEZZO POINTER            46160000
         B     REXSTK                   GO TO RECURSIVE EXIT            46180000
VS32     EQU   *                                                        46190004
         TM    JHWORD2,DMIENT           ENTRY FROM MIPROTO     @OX06626 46192004
         BZ    INVSUBS                  SUBSCRIPT ERROR        @OX06626 46194004
         SET   DMIENT,ON                                       @OX06626 46196004
         B     INVSUBS                  ERROR FROM MI          @OX06626 46198004
         EJECT                                                          46200000
*   METASCAN DOES SYNTACTIC SCAN FOR SETA, SETB, SETC, AIF AND ACTR     46220000
*   OPERANDS.  ACTR OPERAND IS SCANNED AS SETA OPERAND, AND             46240000
*   AIF OPERAND IS SCANNED AS SETB OPERAND.                             46260000
*   AT ENTRY, REGISTERS 5,9,11,12,14 ARE AVAILABLE.                     46280000
*   REGISTER  5 IS USED AS MTABLE INDEX. TRANPARENT THROUGH ALL         46300000
*               RECURSIVE CALLS.                                        46320000
*   REGISTER 9 IS USED FOR RETURN LINKAGE ON EACH RECURSIVE CALL.       46340000
*   REGISTER 12 POINTS TO CURRENT ENTRY IN MTABLE.                      46360000
*   REGISTERS 11 AND 14 ARE SCRATCH REGISTERS.                          46380000
*   ENTRY CODE MCALL INDICATES THE TYPE OF SCAN TO BE MADE: SETA,       46400000
*               SECT, OR OTHERS.                                        46420000
*   EXIT CODE IN REG 3 AS FOLLOWS                                       46440000
*                0 = SIMPLE STATE                                       46460000
*                1 = COMPLEX STATE                                      46480000
*                2 = SETA EXPRESSION                                    46500000
*                3 = SETC EXPRESSION                                    46520000
*                                                                       46540000
*   LINKAGE IS BAL  RETURN,METASCAN                                     46560000
         SPACE 3                                                        46580000
METASCAN EQU   *                                                        46600000
         BAL   R12,RENTSTK              ENTER VIA RECURSIVE ENTRY       46620000
         SET   METSW,ON                 ASSUME THERE WILL BE M.T.       46640000
         SR    MTBLNDX,MTBLNDX          INIT. INDEX OF ZERO             46660000
         B     MSCVRT                   GO TEST FLAG                    46680000
*        TRANSITION TO NEW STATE                                        46700000
*        ***********************                                        46720000
MSADV    LA    MTBLNDX,D1(MTBLNDX)      ADVANCE INDEX                   46740000
MSCVRT   LA    MTBLENT,MTABLE(MTBLNDX)  CONVERT TO ABSOLUTE ADDRESS     46760000
         TM    D0(MTBLENT),EXNXNT       TEST TYPE OF FLAG IN MTABLE     46780000
         BO    MEXFR                    EXECUTE THE LIST THAT FOLLOWS   46800000
         BM    MCATEG                   MATCH TRT CATEG W/ THAT IN TBL  46820000
         L     LINK,ATRTEST             POINT TO TRTEST                 46840000
         BALR  RETURN,LINK              TRT STRING AT INPTR             46860000
         B     MSADV                    GO FIND OUT WHAT TO DO NEXT     46880000
*   MATCH TRT CATEG AGAINST CATEG IN MTABLE FOR RIGHT PATH              46900000
*   ******************************************************              46920000
MCATEG   IC    TWKREG1,D0(,MTBLENT)     OBTAIN CURRENT LIST CATEG ENTRY 46940000
         N     TWKREG1,F15              MASK OUT UNWANTED BITS          46960000
         CR    TWKREG1,R3               COMPARE AGAINST TRT CATEGORY    46980000
         BE    MEXFR                    TRANSFER INTO ACTION IF MATCH   47000000
         IC    TWKREG1,D0(,MTBLENT)     ELSE, TRY NEXT LIST             47020000
         SRL   TWKREG1,D4               ISOLATE LENGTH OF CURRENT LIST  47040000
         LA    MTBLNDX,D0(TWKREG1,MTBLNDX) COMPUTE NEXT LIST ADDRESS    47060000
         B     MSCVRT                   GO CONVERT INTO ABSOLUTE ADDR   47080000
*        EXECUTE CURRENT LIST AT MTBLNDX                                47100000
*        *******************************                                47120000
MEXFR    LA    MTBLNDX,D1(MTBLNDX)      ADVANCE POINTER                 47140000
MEXFR1   IC    TWKREG1,MTABLE(MTBLNDX)  PICK UP ROUTINE NUMBER FOR      47160000
         N     TWKREG1,F31              COMPUTED GO TO BY MASK OUT      47180000
         AR    TWKREG1,TWKREG1          UNWANTED BITS THEN DOUBLE IT    47200000
         LH    TWKREG1,MBRTBL-D2(TWKREG1) PICK UP REL ADDRESS           47220000
         B     MBRTBL(TWKREG1)          FAN OUT TO ABSOLUTE ROUTINE ADR 47240000
         EJECT                                                          47260000
*   METASCAN BRANCH TABLE                                               47280000
         SPACE 3                                                        47300000
MBRTBL   EQU   *                                                        47320000
MBTA     DC    AL2(ESETA-MBRTBL)        .                               47340000
MBTC     DC    AL2(ESETC-MBRTBL)        .                               47360000
MBTBLK   DC    AL2(EBLANK-MBRTBL)       .                               47380000
MBTBOP   DC    AL2(DBLOP-MBRTBL)        .                               47400000
MBTARE   DC    AL2(ARENT-MBRTBL)        .                               47420000
MBTARE1  DC    AL2(ARENT10-MBRTBL)      .                               47440000
MBTSTC   DC    AL2(DSETC-MBRTBL)        .                               47460000
MBTVBOP  DC    AL2(DVBLOP-MBRTBL)       .                               47480000
MBTAOP   DC    AL2(DAROP-MBRTBL)        .                               47500000
MBTROP   DC    AL2(DRELOP-MBRTBL)       .                               47520000
MBTATM   DC    AL2(ARTERM-MBRTBL)       .                               47540000
MBTDUP   DC    AL2(DUPC-MBRTBL)         .                               47560000
MBTATR   DC    AL2(DATTR-MBRTBL)        .                               47580000
MBTVSM   DC    AL2(EVSYM-MBRTBL)        .                               47600000
MBTXSA   DC    AL2(XSA-MBRTBL)          .                               47620000
MBTXSB   DC    AL2(XSB-MBRTBL)          .                               47640000
MBTXSC   DC    AL2(XSC-MBRTBL)          .                               47660000
MBTXSX   DC    AL2(XSX-MBRTBL)          .                               47680000
MBTINV   DC    AL2(ILGLXP1-MBRTBL)      .                               47700000
MBTILG   DC    AL2(ILGLXPBR-MBRTBL)       .                             47720000
MBTCPR   DC    AL2(DCPR-MBRTBL)         .                               47740000
MBTDSDT  DC    AL2(BDSDT-MBRTBL)        .                               47760000
DCPR     EQU   MSADV                                                    47780000
         SPACE 3                                                        47800000
*   BRANCH TABLE ENTRY SEQUENCE EQUATED                                 47820000
ETSETA   EQU   (MBTA-MBRTBL)/2+1        TEST SETA ENTRY                 47840000
ETSETC   EQU   (MBTC-MBRTBL)/2+1        TEST SETC ENTRY                 47860000
ETBLANK  EQU   (MBTBLK-MBRTBL)/2+1      TEST IF BLANK                   47880000
ETBOOL   EQU   (MBTBOP-MBRTBL)/2+1      TEST IF BOOLEAN OPERATOR        47900000
EPSETA   EQU   (MBTARE-MBRTBL)/2+1      L-PAREN RECURSIVE CALL          47920000
EPSETBE  EQU   (MBTARE1-MBRTBL)/2+1     L-PAREN RECURSIVE CALL          47940000
EPSETC   EQU   (MBTSTC-MBRTBL)/2+1      PROCESS SETC EXPR               47960000
EPMBOOL  EQU   (MBTVBOP-MBRTBL)/2+1     PROCESS BOOLEAN OPERATOR        47980000
EPAROP   EQU   (MBTAOP-MBRTBL)/2+1      PROCESS ARITHMETIC OPERATOR     48000000
EPRELOP  EQU   (MBTROP-MBRTBL)/2+1      PROCESS RELATIONAL OPE-ATOR     48020000
EPTRMA   EQU   (MBTATM-MBRTBL)/2+1      PROCESS ARITHMETIC TERM         48040000
EPDUPE   EQU   (MBTDUP-MBRTBL)/2+1      PROCESS DUPLICATION FACTOR-SETC 48060000
EPATTR   EQU   (MBTATR-MBRTBL)/2+1      PROCESS ATTRIBUTE NOTATION      48080000
EPVSYM   EQU   (MBTVSM-MBRTBL)/2+1      PROCESS VARIABLE SYMBOL         48100000
EXITA    EQU   (MBTXSA-MBRTBL)/2+1      ARITHMETIC EXIT                 48120000
EXITB    EQU   (MBTXSB-MBRTBL)/2+1      BOOLEAN(COMPLEX) EXIT           48140000
EXITC    EQU   (MBTXSC-MBRTBL)/2+1      SETC EXIT                       48160000
EXITX    EQU   (MBTXSX-MBRTBL)/2+1      UNCATEGORIZED EXIT              48180000
EPDSDT   EQU   (MBTDSDT-MBRTBL)/2+1     DSDT IN SETB OPND PAREN'D       48200000
EPINVLD  EQU   (MBTINV-MBRTBL)/2+1      INVALID OPERAND FORMAT          48220000
EPILXP   EQU   (MBTILG-MBRTBL)/2+1      ILEGAL LOGICAL OPERATOR         48240000
EXCPR    EQU   (MBTCPR-MBRTBL)/2+1      EXECUTE COMPARISON              48260000
*                                                                       48280000
EXTRT    EQU   0                        EXECUTE TRANSLATE&TEST          48300000
EXNXNT   EQU   255                      EXECUTE NEXT ENTRY              48320000
         EJECT                                                          48340000
*        TRANSITION TABLE WHICH DRIVES METASCAN                         48360000
         SPACE 3                                                        48380000
MTABLE   EQU   *                                                        48400000
STATE0   EQU   *                                                        48420000
         DC    AL1(EXTRT)               TRANSLATE&TEST                  48440000
         DC    AL1(EXNXNT)              EXECUTE NEXT ENTRY              48460000
         DC    AL1(ETSETA)            1 TEST IF SETA ENTRY              48480000
         DC    AL1(SSTXA)               BRANCH IF YES                   48500000
         DC    AL1(ETSETC)            2 TEST IF SETC ENTRY              48520000
         DC    AL1(SSTXC)               BRANCH IF YES                   48540000
         DC    AL1(ETBLANK)           3 TEST IF BLANK-SCAVENGE IF YES   48560000
         DC    AL1(SSTATE0)             THEN START ALL OVER             48580000
*             ... ELSE, ASSUME SETB ENTRY ...                           48600000
         DC    AL1(EXCPR)             4 CPR NEXT ENTRY VS TRT'D CATEG   48620000
         DC    AL1(3*16+10)             TEST IF BOOLEAN OPERATOR        48640000
         DC    AL1(128+ETBOOL)          YES-BUT HAS TO BE 'NOT'         48660000
         DC    AL1(SSTATE0)             YES. GO TRT NEXT TERM           48680000
         DC    AL1(5*16+0)              IS IT PAREN'D DSDT              48700000
         DC    AL1(EPDSDT)              POSSIBLY, LOOK INTO IT          48720000
         DC    AL1(SSTBOPY)             SURE IT IS                      48740000
         DC    AL1(SSTMOP)              NO, TRY ARITH EXPR              48760000
*   IF NOT 'NOT', LOG ERROR, NO RETURN, GIVE UP SCANNING.               48780000
STATE1   DC    AL1(EXTRT)               TRANSLATE&TEST                  48800000
*                                                                       48820000
STXA     EQU   *                        SETA EXPRESSION                 48840000
         DC    AL1(7*16+4)              TEST IF L-PAREN                 48860000
         DC    AL1(EPSETBE)             EDIT IF YES, THEN...            48880000
         DC    AL1(SSTOP)               RETURN HERE IF SIMPLE (V.S.)    48900000
         DC    AL1(SSTBOP)              RETURN HERE IF COMPLEX (BOOL)   48920000
         DC    AL1(SSTMOP)              RETURN HERE IF SETA EXPR        48940000
         DC    AL1(SSTERR1)             RETURN HERE IF SETC EXPR(ERROR) 48960000
         DC    AL1(SSTDUP)              RETURN HERE IF DUP FACTOR      X48980000
                                        FOUND IN COMPLEX EXPRESSION     49000000
*                                                                       49020000
         DC    AL1(EXNXNT)              EXEC NEXT ENTRY                 49040000
         DC    AL1(ETSETA)              TEST IF SETA ENTRY              49060000
         DC    AL1(SSTMA)               BRANCH IF SETA ENTRY            49080000
         DC    AL1(EXCPR)               ELSE, COMPARE NEXT ENTRY        49100000
         DC    AL1(3*16+2)              TEST IF AMPERSAND               49120000
         DC    AL1(EPVSYM)              BRANCH IF YES...                49140000
         DC    AL1(SSTOP)               THEN TRT NEXT OPERATOR          49160000
************************************************************            49180000
STXC     EQU   *                        SETC EXPRESSION                 49200000
         DC    AL1(3*16+9)              TEST IF T' NOTATION             49220000
         DC    AL1(EPATTR)              EDIT IT YES                     49240000
         DC    AL1(SSTIF)               THEN TRY TO GET OUT             49260000
*                                                                       49280000
         DC    AL1(4*16+4)              TEST IF L-PAREN (DUP FACTOR)    49300000
         DC    AL1(EPDUPE)              EDIT IF YES (LINK TO EPSETC)    49320000
         DC    AL1(SSTIF)               THEN TRY TO EXIT                49340000
*                                                                       49360000
STDUP    EQU   *                                                        49380000
         DC    AL1(EXTRT)               TRANSLATE&TEST                  49400000
         DC    AL1(3*16+5)              TEST IF QUOTE (C-EXPR)          49420000
         DC    AL1(EPSETC)              EDIT IF YES                     49440000
         DC    AL1(SSTIF)               THEN TRY TO EXIT                49460000
*                                                                       49480000
         DC    AL1(EXNXNT)              IF NONE OF THE ABOVE...         49500000
         DC    AL1(ETSETC)              TEST IF SETC ENTRY              49520000
         DC    AL1(SSTERR1)             LOG ERROR IF YES                49540000
         DC    AL1(EPTRMA)              NO. PROCESS AS ARITH TERM       49560000
         DC    AL1(SSTMOP)              THEN GET NEXT OPERATOR          49580000
*********************************************                           49600000
STOP     EQU   *                        OPERATOR EVALUATION             49620000
         DC    AL1(EXTRT)               TRANSLATE&TEST                  49640000
         DC    AL1(3*16+11)             TEST IF RELATIONAL OPERATOR     49660000
         DC    AL1(EPRELOP)             EDIT IF YES                     49680000
         DC    AL1(SSTMOP1)             THEN GO LOOK FOR NEXT TERM      49700000
*                                                                       49720000
         DC    AL1(3*16+10)             TEST IF BOOLEAN OPERATOR        49740000
         DC    AL1(64+EPMBOOL)          YES-BUT HAS TO BE AND/OR        49760000
         DC    AL1(SSTATE0)             CHECK. GO PROCESS NEXT TERM     49780000
*                                                                       49800000
         DC    AL1(3*16+6)              COULD IT BE ARITH OPERATOR      49820000
         DC    AL1(EPAROP)              EDIT IF YES                     49840000
         DC    AL1(SSTMA1)              THEN CHECK NEXT TERM            49860000
*                                                                       49880000
         DC    AL1(4*16+3)              TEST IF TERMINATING CHARACTER   49900000
         DC    AL1(ETBLANK)             YES, SCAVENGE IF BLANK(S)       49920000
         DC    AL1(SSTOPX)              NOW ONLY REL OP & BOOL OP      X49940000
                                        ALLOWED FOLLOWING BLANKS        49960000
         DC    AL1(EXITX)               NOT BLANK. CHECK CURRENT STATUS 49980000
*                                                                       50000000
STBOPY   EQU   *                                                OX00406 50010001
         DC    AL1(EXNXNT)              IF NONE OF THE ABOVE ...        50020000
         DC    AL1(EXITX)               GO CHECK CURRENT STATUS         50040000
*                                                                       50060000
STOPX    EQU   *                        WRAP UP THE MESS LEFT BY SST7   50080000
         DC    AL1(EXTRT)               TRANSLATE&TEST                  50100000
         DC    AL1(3*16+11)             TEST IF RELATIONAL OPERATOR     50120000
         DC    AL1(EPRELOP)             EDIT IF YES                     50140000
         DC    AL1(SSTMOP1)             THEN GO TO NEXT TERM            50160000
*                                                                       50180000
         DC    AL1(3*16+10)             TEST IF BOOLEAN OPERATOR        50200000
         DC    AL1(64+EPMBOOL)          YES, BUT HAS TO BE 'AND'/'OR'   50220000
         DC    AL1(SSTATE0)             CHECK. PROCESS NEXT TERM        50240000
*                                                                       50260000
         DC    AL1(EXNXNT)              IF NEITHER ...                  50280000
         DC    AL1(EXITX)               CHECK CURRENT STATUS            50300000
**********************************************                          50320000
STMA     EQU   *                        ARITH TERM SCAN                 50340000
         DC    AL1(EXNXNT)              EXEC NEXT ENTRY                 50360000
         DC    AL1(EPTRMA)              GO CLASSIFY ARITH TERM          50380000
         DC    AL1(SSTMOP)              THEN GO CHECK FOR ARITH OP      50400000
STUNE    EQU   *-1                      POST-UNARY RE-ENTRY BECAUSE OF  50420000
         DC    AL1(SSTMA1)              L-PAREN                         50440000
STMA1    EQU   *                   CHECK THE TERM FOLLOWING ARITH OP    50460000
         DC    AL1(EXTRT)               TRANSLATE&TEST                  50480000
         DC    AL1(7*16+4)              TEST IF L-PAREN                 50500000
         DC    AL1(EPSETA)              EDIT IF YES (ARITH EXPR),THEN.. 50520000
         DC    AL1(SSTMOP)              RETURN HERE IF SIMPLE           50540000
         DC    AL1(SSTERR2)             RETURN HERE IF COMPLEX (ERROR)  50560000
         DC    AL1(SSTMOP)              RETURN HERE IF SETA EXPR        50580000
         DC    AL1(SSTERR2)             RETURN HERE IF SETC EXPR(ERROR) 50600000
         DC    AL1(SSTERR2)             AND HERE IF DUP'D SETC (ERROR)  50620000
*                                                                       50640000
         DC    AL1(EXNXNT)              EXEC NEXT ENTRY                 50660000
         DC    AL1(EPTRMA)              MUST BE ARITMETIC TERM. PROCESS 50680000
         DC    AL1(SSTMOP)              THEN GO TO NEXT OPERATOR        50700000
*                                                                       50720000
STMOP    EQU   *                   CHK NEXT TERM/OP FOLLOWING ARITH TRM 50740000
         DC    AL1(EXTRT)               TRANSLATE&TEST                  50760000
         DC    AL1(3*16+6)              TEST IF ARITH OPERATOR          50780000
         DC    AL1(EPAROP)              EDIT IF YES                     50800000
         DC    AL1(SSTMA1)              THEN CHECK NEXT TERM            50820000
*                                                                       50840000
         DC    AL1(EXNXNT)              EXEC NEXT ENTRY                 50860000
         DC    AL1(ETSETA)              TEST IF SETA ENTRY              50880000
         DC    AL1(SSTXITA)             EXIT IF YES                     50900000
*                                                                       50920000
         DC    AL1(EXCPR)               ELSE, MAKE COMPARISON           50940000
         DC    AL1(3*16+11)             TEST IF RELATIONAL OPERATOR     50960000
         DC    AL1(EPRELOP)             EDIT IF YES, THEN               50980000
         DC    AL1(SSTMOP1)             LOOK FOR NEXT TERM              51000000
*                                                                       51020000
         DC    AL1(4*16+3)              TEST FOR TERMINATING CHAR       51040000
         DC    AL1(ETBLANK)             YES, SCAVENGE IF BLANK(S), THEN 51060000
         DC    AL1(SSTRO)               PRAY FOR REL OP TO FOLLOW.      51080000
         DC    AL1(EXITA)               NOT BLANK. LET'S GET OUT        51100000
*                                                                       51120000
STXITA   DC    AL1(EXNXNT)              NONE OF THE ABOVE...            51140000
         DC    AL1(EXITA)               LET'S GET OUT                   51160000
STRO     EQU   *                        EXPECTING REL OP TO FOLLOW      51180000
         DC    AL1(EXTRT)               TRANSLATE&TEST                  51200000
         DC    AL1(3*16+11)             IS IT RELATIONAL OPERATOR       51220000
         DC    AL1(EPRELOP)             EDIT IF YES                     51240000
         DC    AL1(SSTMOP1)             THEN GO ONE MORE STEP FURTHER   51260000
         DC    AL1(3*16+10)             TEST IF BOOLEAN OPERATOR        51265000
         DC    AL1(64+EPMBOOL)          YES-BUT HAS TO BE AND/OR        51270000
         DC    AL1(SSTATE0)             CHECK. GO PROCESS NEXT TERM     51275000
*                                                                       51280000
STERR1   DC    AL1(EXNXNT)              ELSE, EXEC NEXT ENTRY           51300000
         DC    AL1(EPINVLD)             INVALID OPERAND FIELD FORMAT    51320000
*                                                                       51340000
STMOP1   EQU   *                        TERM/OP FOLLOWING REL/ARITH OP  51360000
         DC    AL1(EXTRT)               TRANSLATE&TEST                  51380000
         DC    AL1(7*16+4)              TEST IF L-PAREN                 51400000
         DC    AL1(EPSETA)              EDIT IF YES (ARITH EXPR) THEN   51420000
         DC    AL1(SSTAOP)              RETURN HERE IF SUMPLE           51440000
         DC    AL1(SSTERR2)             RETURN HERE IF COMPLEX (ERROR)  51460000
         DC    AL1(SSTAOP)              RETURN HERE IF SETA EXPR        51480000
         DC    AL1(SSTERR2)             RETURN HERE IF SETC EXPR(ERROR) 51500000
         DC    AL1(SSTERR2)             AND HERE IF DUP'D SETC (ERROR)  51520000
*                                                                       51540000
         DC    AL1(EXNXNT)              ELSE, EXEC NEXT ENTRY..         51560000
         DC    AL1(EPTRMA)              HAS TO BE ARITH TERM. PROCESS   51580000
         DC    AL1(SSTAOP)              THEN LOOK FOR NEXT ARITH OP     51600000
*                                                                       51620000
STAOP    EQU   *                        ARITH OP FOLLOWING ARITH TERM   51640000
         DC    AL1(EXTRT)               TRANSLATE&TEST                  51660000
         DC    AL1(4*16+6)              TEST IF ARITH OP                51680000
         DC    AL1(EPAROP)              EDIT IF YES                     51700000
         DC    AL1(SSTMOP1)             CHECK NEXT TERM/OP              51720000
*        LINK TO STBOP                                                  51740000
STBOP    EQU   *                        BOOLEAN 'AND' OR 'OR'           51760000
         DC    AL1(EXTRT)               TRANSLATE&TEST                  51780000
         DC    AL1(3*16+10)             TEST IF BOOLEAN OPERATOR        51800000
         DC    AL1(64+ETBOOL)           YES, BUT HAS TO BE AND/OR       51820000
         DC    AL1(SSTATE0)             CHECK. PROCESS NEXT TERM        51840000
*                                                                       51860000
         DC    AL1(4*16+3)              TEST IF TERMINATING CHAR        51880000
         DC    AL1(ETBLANK)             YES, SCAVENGE IF BLANKS, THEN   51900000
         DC    AL1(SSTBOPX)             GO TEST BOOLEAN OPERATOR AGAIN  51920000
         DC    AL1(EXITB)               GET OUT IF NOT BLANK            51940000
*                                                                       51960000
         DC    AL1(EXNXNT)              IF NEITHER ABOVE...             51980000
         DC    AL1(EXITB)               GET OUT OF HERE                 52000000
*                                                                       52020000
STBOPX   EQU   *                        WRAP UP THE MESS LEFT BY STBOP  52040000
         DC    AL1(EXTRT)               TRANSLATE&TEST                  52060000
         DC    AL1(3*16+10)             TEST IF BOOLEAN OPERATOR        52080000
         DC    AL1(64+ETBOOL)           YES, BUT HAS TO BE AND/OR       52100000
         DC    AL1(SSTATE0)             CHECK. NEXT                     52120000
*                                                                       52140000
         DC    AL1(EXNXNT)              IF NOT BOOLEAN OP...            52180000
         DC    AL1(EXITB)               GET OUT OF HERE                 52200000
**********************************************                          52220000
STIF     EQU   *                                                        52240000
         DC    AL1(EXNXNT)              EXECUTE NEXT ENTRY              52260000
         DC    AL1(ETSETC)              TEST IF SETC ENTRY              52280000
         DC    AL1(SSTXITC)             TRY TO EXIT IF YES              52300000
         DC    AL1(EXCPR)               ELSE, MAKE COMPARISON           52320000
         DC    AL1(EXTRT)               BUT TRANSLATE&TEST FIRST        52340000
         DC    AL1(3*16+11)             TEST IF REL OP                  52360000
         DC    AL1(EPRELOP)             EDIT IF YES                     52380000
         DC    AL1(SSTMIF)              THEN CHECK NEXT TERM            52400000
*                                                                       52420000
         DC    AL1(4*16+3)              IF NOT REL OP, CHECK IF BLANKS  52440000
         DC    AL1(ETBLANK)             SCAVENGE IF YES                 52460000
         DC    AL1(SSTIFX)              THEN TEST IF REL OP AGAIN.      52480000
         DC    AL1(EXITC)               EXIT IF NOT BLANK               52500000
*                                                                       52520000
STXITC   DC    AL1(EXNXNT)              IF NEITHER ABOVE                52540000
         DC    AL1(EXITC)               CHECK CURRENT STATUS            52560000
*                                                                       52580000
STIFX    EQU   *                        WRAP UP THE MESS LEFT BY STIF   52600000
         DC    AL1(EXTRT)               TRANSLATE&TEST                  52620000
         DC    AL1(3*16+11)             TEST IF REL OP                  52640000
         DC    AL1(EPRELOP)             EDIT IF YES-THEN                52660000
         DC    AL1(SSTMIF)              CHECK NEXT TERM                 52680000
*                                                                       52700000
         DC    AL1(EXNXNT)              ELSE, LOG INVALID OPERAND FMT   52720000
         DC    AL1(EPINVLD)             (EXPECTING REL OP.)             52740000
*                                                                       52760000
STMIF    EQU   *                        TERM FOLLOWS REL OP IN AIF      52780000
         DC    AL1(EXTRT)               TRANSLATE&TEST                  52800000
         DC    AL1(3*16+9)              TEST IF TYPE ATTR NOTATION      52820000
         DC    AL1(EPATTR)              EDIT IF YES                     52840000
         DC    AL1(SSTBOP)              GO CHECK NEXT OP (BOOLEAN OP)   52860000
*                                                                       52880000
         DC    AL1(3*16+4)              TEST IF L-PAREN (DUP FACTOR)    52900000
         DC    AL1(EPDUPE)              EDIT IF YES (LINK TO EPSETC)    52920000
         DC    AL1(SSTBOP)              THEN CHECK NEXT OP (BOOL OP)    52940000
*                                                                       52960000
         DC    AL1(3*16+5)              TEST IF QUOTE (C-EXPR)          52980000
         DC    AL1(EPSETC)              EDIT IF YES                     53000000
         DC    AL1(SSTBOP)              THEN CHECK NEXT OP (BOOL OP)    53020000
*                                                                       53040000
         DC    AL1(EXNXNT)              EXEC NEXT ENTRY                 53045000
         DC    AL1(EPINVLD)             GO LOG ERR32                    53050000
*                                                                       53055000
STERR2   EQU   *                        LOG ILGL OPERAND FIELD FORMAT   53060000
         DC    AL1(EXNXNT)              EXEC NEXT ENTRY                 53080000
         DC    AL1(EPILXP)                                              53100000
         DS    0H                                                       53120000
         SPACE 3                                                        53140000
*   TRANSITION TABLE ROUTINE ENTRY RELATIVE ADDRESS EQUATED             53160000
         SPACE 3                                                        53180000
*                                                                       53200000
SSTATE0  EQU   STATE0-STATE0                                            53220000
SSTUNE   EQU   STUNE-STATE0                                             53240000
SSTATE1  EQU   STATE1-STATE0                                            53260000
SSTXA    EQU   STXA-STATE0                                              53280000
SSTXC    EQU   STXC-STATE0                                              53300000
SSTDUP   EQU   STDUP-STATE0                                             53320000
SSTMA    EQU   STMA-STATE0                                              53340000
SSTOP    EQU   STOP-STATE0                                              53360000
SSTOPX   EQU   STOPX-STATE0                                             53380000
SSTMA1   EQU   STMA1-STATE0                                             53400000
SSTMOP   EQU   STMOP-STATE0                                             53420000
SSTRO    EQU   STRO-STATE0                                              53440000
SSTERR1  EQU   STERR1-STATE0                                            53460000
SSTMOP1  EQU   STMOP1-STATE0                                            53480000
SSTAOP   EQU   STAOP-STATE0                                             53500000
SSTBOP   EQU   STBOP-STATE0                                             53520000
SSTBOPX  EQU   STBOPX-STATE0                                            53540000
SSTIF    EQU   STIF-STATE0                                              53560000
SSTXITA  EQU   STXITA-STATE0                                            53580000
SSTXITC  EQU   STXITC-STATE0                                            53600000
SSTIFX   EQU   STIFX-STATE0                                             53620000
SSTMIF   EQU   STMIF-STATE0                                             53640000
SSTBOPY  EQU   STBOPY-STATE0            .                               53660000
SSTERR2  EQU   STERR2-STATE0                                            53680000
         EJECT                                                          53700000
*   ENTRIES TO RESPECTIVE DETAIL PROCESSING ROUTINES                    53720000
         SPACE 3                                                        53780000
ILGLXPBR B     ILGLXP                   GO TO ILGLXP IN CS0             53800000
         SPACE 3                                                        53820000
ESETA    EQU   *                                                        53840000
         L     R14,RAVSP                                                53860000
         TM    D3(R14),MCLA             TEST IF SETA ENTRY              53880000
         B     BRIDGE1                  .....                           53900000
ESETC    EQU   *                                                        53920000
         L     R14,RAVSP                                                53940000
         TM    D3(R14),MCLC             TEST IF SETC ENTRY              53960000
BRIDGE1  BO    TRNSFER                  ..DO CURRENT STATE ENTRY IF YES 53980000
BRIDGE2  LA    MTBLNDX,D2(MTBLNDX)      ELSE, STEP ACROSS CURRENT ENTRY 54000000
         B     MEXFR1                   TO EXECUTE NEXT STATE ENTRY     54020000
EBLANK   EQU   *                        TEST IF BLANK AT INPTR          54040000
         CLI   D0(INPTR),JBLANK                                         54060000
         BNE   BRIDGE2                  BRANCH IF NOT BLANK             54080000
DBLANK   EQU   *                        ELSE GOBBLE UP BLANKS           54100000
         L     R14,RAVSP                                                54120000
         OI    RSTKFLG,MCMPLX           INDICATE COMPLEX STATE          54140000
         BAL   TLINK,SKPBLK             BUMP OVER BLANKS                54160000
         GOIF  SNOFND,ON=ILGLXP2        INVALID FORMAT                  54180000
TRNSFER  EQU   *                        TRANSITION TO NEW STATE         54200000
         IC    MTBLNDX,STATE0+D1(MTBLNDX) PICK UP NEW STATE REL ADDRESS 54220000
         B     MSCVRT                   BACK TO THE OLD GRINDER         54240000
         SPACE 3                                                        54260000
*   RECURSIVE CALL TO METASCAN FORCED BY LEFT PARENTHESIS WHILE         54280000
*   PROCESSING ARITHMETIC EXPRESSION OR BOOLEAN EXPRESSION              54300000
ARENT    EQU   *                                                        54320000
         MVI   MCALL,MCLA               RESET TO ARITHMETIC ENTRY CODE  54340000
         B     ARENT20                  UP PAREN COUNT AND PUT IN STACK 54360000
ARENT10  L     R14,RAVSP                SET ENTRY CODE SAME AS CURRENT  54380000
         MVC   MCALL(D1),RSTKFLG        STATE                           54400000
         NI    MCALL,STMASK             MASK OUT UNWANTED STATUS        54420000
ARENT20  BAL   R12,APARCT               INCREMENT PAREN COUNT           54440000
         BAL   R3,PFXRENT               LOG L-PAREN IN REGISTER PARM    54460000
         DC    AL2(JTMLPAR)             LOG L-PAREN                     54480000
         BAL   RETURN,METASCAN          SCAN                            54500000
         CLI   D0(INPTR),JRPARN         TERMINATOR MUST BE R-PAREN      54520000
         BNE   ILGLXP1                  ELSE, LOG ERROR                 54540000
         BAL   R12,DPARCT               DECREMENT PAREN COUNT           54560000
         LR    R0,R3                    SAVE EXIT CODE                  54580000
         BAL   R3,PFXRENT               LOG R-PAREN IN REGISTER PARM    54600000
         DC    AL2(JTMRPAR)             LOG R-PAREN                     54610000
         LR    R3,R0                    RESTORE EXIT CODE               54620000
         CLI   D0(INPTR),JQUOTE         TEST IF DUP FACTOR              54640000
         BNE   ARENT30                  BRANCH IF NOT                   54660000
         BAL   R3,PFXRENT               ASSUME DUP FACTOR               54680000
         DC    AL2(JTMDUP)              AND SO INDICATE                 54700000
         BCTR  INPTR,0                  BUT DON'T GET CARRIED AWAY      54720000
         LA    R3,D4                    EXIT CODE IS 4                  54740000
ARENT30  EQU   *                                                        54760000
         AR    MTBLNDX,R3               TRANSITION TO ANY OF THE FOUR   54780000
         B     TRNSFER                  STATES DEPENDING ON EXIT CODE   54800000
ILGLXP0  L     INPTR,TPSAVE             BACK UP FOR SNAP                54806000
ILGLXP1  C     INPTR,ENDATA             DID END DATA TERMINATE          54812000
         BNL   ILGLXP2                  IF SO LOG ERR24                 54813000
         CLI   D0(INPTR),JBLANK         IS THE TERMINATOR A BLANK       54814000
         BNE   INVFM                    FLAG ERR32, SNAP INVALID TEXT   54815000
ILGLXP2  BAL   TLINK,ABSERR             EITHER UNPAIRED PARENS          54816000
         DC    AL1(5*16+SEV24)          OR                              54817000
         DC    AL1(ERR24)               BLANK APPEARED INSIDE           54818000
         SPACE 3                                                        54820000
*   EXITS FROM RESPECTIVE DETAIL PROCESSING ROUTINES                    54840000
XSX      EQU   *                        CHECK CURRENT STATUS            54860000
         SR    R3,R3                    LET'S ASSUME SIMPLE STATE       54880000
         L     R14,RAVSP                WE'LL SOON FIND OUT             54900000
         TM    RSTKFLG,MCMPLX           TEST IF COMPLEX STATE           54920000
         BZ    XSB1                     EXIT IF SIMPLE STATE            54940000
XSB      EQU   *                                                        55000000
         LA    R3,1                     SET BOOLEAN COMPLEX EXIT CODE   55020000
XSB1     L     INDEXO,OUTADR            RESTORE OUTPUT BUFFER POINTER   55040000
         B     REXSTK                   GO TO RECURSIVE EXIT            55060000
XSA      EQU   *                                                        55080000
         LA    R3,2                     SET SETA TYPE EXIT CODE         55100000
         B     REXSTKL                  GO GET STACK BASE               55120000
XSC      EQU   *                                                        55140000
         LA    R3,3                     SET SETC TYPE EXIT CODE         55160000
REXSTKL  EQU   *                                                        55180000
         L     R14,RAVSP                GET STACK-BASE                  55200000
         TM    RSTKFLG,MCMPLX           TEST IF COMPLEX STATE           55220000
         BO    ILSETA                   LOG ERROR                       55240000
         L     INDEXO,OUTADR            RESTORE OUTPUT BUFFER POINTER   55260000
         B     REXSTK1                  GO TO RECURSIVE EXIT            55280000
         SPACE 3                                                        55300000
*   CLEANUP ROUTINE CLEAN UP THE STATEMENT OR THE OPERAND WHERE ERROR   55320000
*   IS FOUND. IT THEN RETURN TO CALLER IF PROCESSING MULTI-OPERAND      55340000
*   STATEMENTS. ELSE, GO TO READ NEXT STATEMENT.                        55360000
*   STATEMENTS THAT HAVE MULTI-OPERAND ARE:                             55380000
*        MACRO CALL,                                                    55400000
*        PROTOTYPE WITH KEYWORD PARAMETER,                              55420000
*        GBLX/LCLX, AND                                                 55440000
*        EQU                                                            55460000
*                                                                       55480000
CLN0     LR    R1,R0                                                    55500000
CLEANUP  EQU   *                                                        55520000
         LA    TWKREG1,STACK            CLEAN UP WHAT'S LEFT IN         55540000
         ST    TWKREG1,SVLAST           POSTFIXER STACK                 55560000
         L     INPTR,FPTRSV             BACK UP TO BEGIN OF FIELD       55580000
         L     INDEXP,OFPTRSV           ON BOTH I/O BUFFERS             55600000
         L     INDEXO,OUTADR            RESTORE POINTER                 55620000
         GOIF  SEOPCD,ON=REXSTK         RETURN IF EDITING OP CODE       55630000
         GOIF  SENAME,OFF=CLN1                                          55640000
         BAL   RETURN,RESETPTR          INSURE NO OVERLAP               55660000
CLN1     MVI   SWITCH8,D0               RESET SWITCH                    55680000
         SET   (METSW,GSUBS),OFF                                        55700000
         LA    TWKREG1,RSTACK-(EDRSTK-BDRSTK)                           55720000
         ST    TWKREG1,RAVSP            AND RSTACK                      55740000
         L     INDEXO,OUTADR            RESTORE POINTER                 55760000
         SET   JPRONLY,ON                                               55780000
         GOIF  SGBLCL,ON=CLN2                                           55800000
         SET GQST,OFF                                                   55820000
         GOIF  DMIENT,OFF=CLN3                                 @AZ13722 55840000
         SET   DMIENT,OFF                                      @AZ13722 55860000
CLN2     LA    R14,EDRSTK-BDRSTK(,R14)                                  55880000
         NI    JHWORD2+1,BITFF-(DMIENT) RESET SECOND DMIENT SW @AZ13722 55890000
         B     REXSTK1                  WRAP UP STATEMENT               55900000
CLN3     TM    JHWORD2+1,DMIENT         TEST FOR PREV PROC-    @AZ13722 55910000
         BZ    WRAPFLD                  ESS IN MIPROTO         @AZ13722 55912000
         B     CLN2                     RETURN OVER REX        @AZ13722 55914000
         EJECT                                                          55920000
*   PROCESS ARITHMETIC OPERATOR                                         55940000
DAROP    EQU   *                                                        55960000
         BAL   R3,PFXRE2                MAKE POSTER ENTRY               55980000
         B     TRNSFER                  GO FOR TRANSITION               56000000
         SPACE 3                                                        56020000
*   PROCESS VARIABLE SYMBOL                                             56040000
EVSYM    EQU   *                                                        56060000
         BAL   RETURN,VARSYM            SCAN V.S. AND BUILD MT          56080000
         LR    INPTR,R1                 BUMP TO NEXT SCAN LOCATION      56100000
         B     TRNSFER                  NEXT TERM/OPERATOR              56120000
         SPACE 3                                                        56140000
*   PROCESS BOOLEAN (LOGICAL) OPERATOR                                  56160000
DVBLOP   EQU   *                        SCREEN SYSLIST                  56180000
         L     R14,RAVSP                                                56200000
         TM    FLGBYT,VSLS              TEST IF SYSLIST PROCESSED       56220000
         BO    ILBXP                    LOG ERROR IF YES                56240000
         OI    RSTKFLG,MCMPLX           ELSE INDICATE IN COMPLEX STATE  56260000
DBLOP    EQU   *                                                        56280000
         IC    TWKREG1,BOP10-JTMNOT(R10) PICK UP ACCEPTANCE MASKS       56300000
         LA    R1,MTABLE(MTBLNDX)       AND TEST IF CORRESPOND TO       56320000
         EX    TWKREG1,BOPTM            CALLING SEQUENCE                56340000
         BNO   ILGLXP                   ILLEGAL EXPRESSION              56360000
*   ENTER RELATIONAL OPERATOR                                           56380000
DRELOP   EQU   *                                                        56400000
         BAL   R3,PFXRE2                MAKE POSTER ENTRY               56420000
         LA    INPTR,D0(R15,INPTR)      BUMP INPTR                      56440000
         B     DBLANK                   GO TAKE CARE OF BLANKS          56460000
BOPTM    TM    D0(R1),0                                                 56480000
BOP10    DC    X'804040'                NOT/AND/OR ACCEPTANCE MASKS     56500000
         DS    0H                                                       56520000
         SPACE 3                                                        56540000
DATTR    EQU   *                                                        56560000
         ST    INPTR,TPSAVE                                             56580000
         LA    INPTR,D1(R15,INPTR)      UPDATE POINTER                  56600000
         LR    TWKREG1,PARM             CONVERT ATTR FLAG               56620000
         SH    TWKREG1,HATT                                             56640000
         STC   TWKREG1,ATTRSV           AND SAVE                        56660000
         BAL   R3,PFXRE2                LOG ATTR FLAG                   56680000
         CLI   D0(INPTR),JAMPER         TEST IF FOLLOWED BY A V.S.      56700000
         BNE   ATTROS                   BRANCH IF NOT                   56720000
         BAL   RETURN,VARSYM            GO PROCESS VS                   56740000
         LR    INPTR,R1                 UPDATE POINTER                  56760000
         GOIF  RMPURE,ON=ILATTR         EXIT IF BAD V.S.                56780000
         TM    FLGBYT,VTYP1+VSLS        TEST IF A PARAM OR A SYSLIST    56800000
         BM    ATTRSYP                  BRANCH IF EITHER                56820000
         TM    ATTRSV,ATT               ELSE, MUST BE SET SYM PRECEDED  56840000
         BNO   ILATTR                   BY ...                          56860000
         TM    ATTRSV,AT7               K' OR T'                        56880000
         BO    ILATTR                   ELSE, ERROR                     56900000
         B     ATTX1                    EXIT IF ALL'S WELL              56920000
ATTRSYP  EQU   *                                                        56940000
         GOIF  SMDEF,OFF=ILATTR         LOG ERROR IF NOT IN MACRO       56960000
         TM    ATTRSV,ATN               TEST IF N'                      56980000
         BNO   ATTX1                    EXIT IF NOT N'                  57000000
         TM    ATTRSV,ATSUBS                                            57020000
         BO    ILATTR                   ERROR IF DOUBLY SUBS'D SYSLIST  57040000
         BZ    ATTX1                    OK IF NON-SUBSCRIPTED V.S.      57060000
          TM    FLGBYT,VSLS             ELSE, TEST IF SYSLIST AT ALL    57080000
         BO    ATTX1                    OK IF YES                       57100000
         B     ILATTR                   ELSE, ERROR                     57120000
ATTROS   EQU   *                                                        57140000
         BAL   LINK,SYMSCN              TEST IF ORDINARY SYMBOL         57160000
         B     ILATTR                   ERROR IF RETURN TO HERE         57180000
         MVC   D0(D4,INDEXP),D0(R11)    ENTER O-SYM POINTER             57200000
         LA    INDEXP,DENTLNG(,INDEXP)  BUMP 2 EXTRA BYTES FOR GEN'R    57220000
ATTX1    EQU   *                                                        57240000
         MVI   ATTRSV,D0                RESET ATTRIBUTE FLAGS           57260000
         B     TRNSFER                  MAKE TRANSITION                 57280000
ATTX2    EQU   *                                                        57300000
         MVI   ATTRSV,D0                RESET ATTRIBUTE FLAGS           57320000
         B     REXSTK                   POP UP                          57340000
         SPACE 3                                                        57360000
*   PROCESS SETC CHARACTER EXPRESSION                                   57380000
*   STARTING WITH A QUOTE (DUPLICATION FACTOR IS CHECKED BY TRANSE      57400000
*   OR AN EXTRA TABLE ENTRY PRECEEDING CSETC ENTRY                      57420000
*                                                                       57440000
DUPC     EQU   *                                                        57460000
         ST    INPTR,TPSAVE             SAVE FOR POSSIBLE ERROR SNAP    57470000
         BAL   R3,PFXRENT               TELL POSTER                     57480000
         DC    AL2(JTMLPAR)             IT IS A LEFT PAREN              57500000
         BAL   R12,APARCT               UP PAREN COUNT                  57520000
         MVI   MCALL,MCLA               SCAN DUP FACTOR AS SETA EXPR.   57540000
         BAL   RETURN,METASCAN          SCAN                            57560000
         CLI   D0(INPTR),JRPARN         TERMINATOR MUST BE R-PAREN      57580000
         BNE   INVDUP                   ELSE LOG ERROR                  57600000
         BAL   R3,PFXRENT               LOG RIGHT PAREN                 57620000
         DC    AL2(JTMRPAR)             RIGHT PAREN                     57640000
         BAL   R12,DPARCT               DECR PAREN COUNT                57660000
         CLI   D0(INPTR),JQUOTE         QUOTE MUST FOLLOW DUP FACTOR    57680000
         BNE   ILGLXP0                  GO FLAG ERROR 32                57700000
         BAL   R3,PFXRENT               MAKE DUP FACTOR ENTRY           57720000
         DC    AL2(JTMDUP)              DUPLICATION OPERATOR            57740000
         BCTR  INPTR,0                  DON'T GET CARRIED AWAY          57760000
         L     R14,RAVSP                                                57780000
         MVC   MCALL(L'MCALL),RSTKFLG   BACK TO CURRENT STATE           57800000
DSETC    EQU   *                                                        57820000
         BAL   R3,PFXRENT               INDICATE START CHAR MODE        57840000
         DC    AL2(JTMSCM)              START CHARACTER MODE            57860000
CSC05    L     TWKREG2,ENDATA           SET END OF DATA AREA            57880000
         BCTR  TWKREG2,D0               SET END OF DATA AREA            57900000
         LA    TWKREG1,D1               SET INCREMENT FACTOR            57920000
         LR    R1,INDEXP                REMEMBER WHERE M.T. STARTS      57940000
         SR    R0,R0                    CLEAR STRING COUNT              57960000
         LA    INDEXP,D2(,INDEXP)       BUMP POINTER                    57980000
CSC10    LA    R3,D2                                                    58000000
         CLI   D0(INPTR),JQUOTE         TEST IF QUOTE                   58020000
         BNE   CSC20                    BRANCH IF NOT                   58040000
         CLI   D1(INPTR),JQUOTE                                         58060000
         BNE   CSC50                    SINGLE - END OF C-STRING        58080000
         BCT   R3,CSC30                 DOUBLE QT - SQUASH TO SINGLE    58100000
CSC20    CLI   D0(INPTR),JAMPER         TEST IF AMPERSAND               58120000
         BNE   CSC40                    NO. C-STRING                    58140000
         CLI   D1(INPTR),JAMPER                                         58160000
         BNE   CSCVSYM                  SINGLE & - ASSUME V.S.          58180000
CSC30    EQU   *                                                        58200000
         AR    INPTR,TWKREG1            ADVANCE POINTER                 58220000
CSC35    EQU   *                                                        58240000
         MVC   D0(D1,INDEXP),D0(INPTR)  MOVE 1 CHAR TO O/P              58260000
         AR    INDEXP,TWKREG1           BUMP O/P POINTER                58280000
         AR    R0,TWKREG1               INCREMENT STRING COUNT BY 1     58300000
CSC40    BCT   R3,CSC35                 ITERATE ON COUNT                58320000
         BXLE  INPTR,TWKREG1,CSC10      PROCESS NEXT CHAR               58340000
         B     NOQUOTE                  ERR, UNBALANCED QUOTES IN SETC  58360000
CSCVSYM  EQU   *                                                        58380000
         BAL   R3,CSTGCHK               CHECK IF STRING COLLECTED       58400000
         BAL   RETURN,VARSYM            EDIT VS INTO MT                 58420000
         LR    INPTR,R1                 UPDATE POINTER                  58440000
         CLI   D0(INPTR),JPERIOD        IGNORE THE DOT                  58460000
         BNE   CSC05                    (BRANCH IF NOT A DOT)           58480000
         LA    INPTR,D1(,INPTR)         IF THERE IS ONE                 58500000
         B     CSC05                    THEN CONTINUE C-EXPR PROCESSING 58520000
CSC50    EQU   *                                                        58540000
         BAL   R3,CSTGCHK               CHECK IF STRING COLLECTED       58560000
         BAL   R3,PFXRENT               INDICATE END CHARACTER MODE     58580000
         DC    AL2(JTMECM)                                              58600000
         CLI   D0(INPTR),JLPARN         ANY SUBSTRING NOTATION          58620000
         BNE   CSC60                    BRANCH IF NOT                   58640000
         BAL   R12,APARCT               ADVANCE PAREN COUNT             58660000
         BAL   R3,PFXRENT               ENTER SUBSTRING OPERATOR        58680000
         DC    AL2(JTMSTR)              STRING OPERATOR                 58700000
         BCTR  INPTR,0                  DON'T GET CARRIED AWAY          58720000
         BAL   R3,PFXRENT               LOG L-PAREN                     58740000
         DC    AL2(JTMLPAR)             LEFT PAREN                      58760000
         MVI   MCALL,MCLA               INDICATE TO SCAN AS SETA EXPR.  58780000
         BAL   RETURN,METASCAN          SCAN SUBSCRIPT 1                58800000
         CLI   D0(INPTR),JCOMMA         TERMINATOR MUST BE A COMMA      58820000
         BNE   INVSUB                   ELSE, LOG ERROR                 58840000
         BAL   R3,PFXRENT               A COMMA                         58860000
         DC    AL2(JTMCOM)              STACK IT IN                     58880000
         BAL   RETURN,METASCAN          SCAN SUBSCRIPT 2                58900000
         CLI   D0(INPTR),JRPARN         TERMINATOR MUST BE R-PAREN      58920000
         BNE   INVSUB                   ELSE, LOG ERROR                 58940000
         BAL   R3,PFXRENT               LOG R-PAREN                     58960000
         DC    AL2(JTMRPAR)             RIGHT PAREN                     58980000
         BAL   R12,DPARCT               DECREMENT PAREN COUNT           59000000
         L     R14,RAVSP                                                59020000
         MVC   MCALL(L'MCALL),RSTKFLG   BACK TO CURRENT STATE           59040000
         CLI   D0(INPTR),JLPARN         TEST IF IMPLIED CONCATENATION   59060000
         BNE   CSC55                    BRANCH IF NOT FOLLOWED BY (     59080000
         BAL   R3,PFXRENT               YES, DUP FACTOR FOLLOWS         59100000
         DC    AL2(JTMPER)              INDICATE CONCATENATION FIRST    59120000
         BCT   INPTR,DUPC               THEN RE-ENTER DUPC              59140000
CSC55    EQU   *                                                        59160000
         CLI   D0(INPTR),JQUOTE         TEST IF IMPLIED CONCATENATION   59180000
         BNE   CSC60                    BRANCH IF NOT                   59200000
         BAL   R3,PFXRENT               ENTER CONCATENATION OPERATOR    59220000
         DC    AL2(JTMPER)              PERIOD                          59240000
         BCT   INPTR,DSETC              RE-ENTER CSETC                  59260000
CSC60    CLI   D0(INPTR),JPERIOD        TEST IF EXPLICIT CONCATENATION  59280000
         BNE   TRNSFER                  NO - END OF C-EXPRESSION        59300000
         BAL   R3,PFXRENT               TELL IT TO POSTER               59320000
         DC    AL2(JTMPER)              PERIOD                          59340000
         CLI   D0(INPTR),JLPARN         TEST IF DUPLICATION FACTOR      59360000
         BE    DUPC                     YES, RE-ENTER DSECT             59380000
         CLI   D0(INPTR),JQUOTE         TEST IF DOT FOLLOWED BY QUOTE   59400000
         BE    DSETC                    RE-ENTER DSETC                  59420000
         B     TRNSFER                  GO TO NEXT TABLE ENTRY          59440000
CSTGCHK  EQU   *                                                        59460000
         LTR   R0,R0                    TEST IF ANY STRING COLLECTED    59480000
         BNZ   CSTGC10                  BRANCH IF YES                   59500000
         SH    INDEXP,H2                ELSE, BACK UP                   59520000
         BR    R3                       AND RETURN                      59540000
CSTGC10  EQU   *                                                        59560000
         MVI   D0(R1),JTMCS             ELSE, FILL IN FLAG              59580000
         STC   R0,D1(,R1)               AND STRING LENGTH               59600000
         BR    R3                       RETURN                          59620000
         EJECT                                                          59640000
*   PROCESS UNARY OPERATOR - LINK TO ARITHMETIC TERM PROCESSOR OR       59660000
*   MAKE RECURSIVE ENTRY BECAUSE OF LEFT PAREN                          59680000
*                                                                       59700000
*   UNARY OPERATOR FOLLOWS                                              59720000
*                  L-PAREN,                                             59740000
*                  ARITH OPERATOR,                                      59760000
*                  UNARY OPERATOR,                                      59780000
*                  OR BLANK.                                            59800000
*                                                                       59820000
CUNARY   EQU   *                                                        59840000
         IC    PARM,UNARYOP-JTMMULT(PARM) PICK UP UNARY OPERATOR        59860000
         LTR   PARM,PARM                TEST IF PLUS OR MINUS           59880000
         BZ    ILUNARY                  UNARY OPERATOR ERROR            59900000
         BAL   R3,PFXRE2                LOG UNARY OPERATOR              59920000
         CLI   D0(INPTR),JLPARN         TEST IF L-PAREN FOLLOWS         59940000
         BNE   ARTERMX                  CLASSIFY ARITH TERM IF NOT      59960000
         LA    MTBLNDX,SSTUNE           ELSE, MAKE RECURSIVE ENTRY      59980000
         B     TRNSFER                  TO METASCAN                     60000000
UNARYOP  DC    AL1(0,0,JTMPLUS,JTMMIN)  UNARY OP INTERNAL VALUE         60020000
         SPACE 3                                                        60040000
*   PROCESS ARITHMETIC TERM WHICH MAY BE IN THE FOLLOWING FORMATS.      60060000
*   1) V.S.                                                             60080000
*   2) ATTRIBUTE NOTATION                                               60100000
*   3) SELF DEFINING TERM (B, C, D, X)                                  60120000
*                                                                       60140000
ARTERMX  L     LINK,ATRTEST             POINT TO TRTEST                 60160000
         BALR  RETURN,LINK              FIND OUT NEXT TERM/OPERATOR     60180000
ARTERM   EQU   *                                                        60200000
         ST    INPTR,TPSAVE             SAVE BEGIN PT FOR SNAP          60210000
         BAL   RETURN,AEXPR             GO PROCESS THE TERM             60220000
         B     ILSDT                    RETURN HERE IF ERROR FOUND      60240000
         B     TRNSFER                  NORMAL RETURN                   60260000
         SPACE 3                                                        60280000
*   ENTRY TO APPROPRIATE ROUTINES                                       60300000
AEXPR    EQU   *                        TEST TRT RESULT                 60320000
         CH    R3,H2                                                    60340000
         BE    EVSYM                    BRANCH IF VARIABLE SYMBOL       60360000
         CH    R3,H6                    TEST POSSIBLE UNARY OPERATOR    60380000
         BE    CUNARY                   BRANCH IF ARITH OPERATOR        60400000
         CH    R3,H7                                                    60420000
         BE    DATTR                    ATTRIBUTE NOTATION              60440000
         CH    R3,H8                                                    60460000
         BE    XBCSDT                   X-, B-, C-TYPE SDT              60480000
         CH    R3,H3                    OPERAND TERMINATOR              60486000
         BE    ILGLXP2                  LOG ERROR IF NOTHING FOUND      60492000
         LTR   R3,R3                                                    60500000
         BNZ   ILSDT                    LOG ERROR IF NOT DSDT           60520000
         SPACE 3                                                        60540000
*   SELF DEFINING TERM PROCESSING ROUTINES.                             60560000
*   CALLED BY METASCAN ARITHMETIC TERM PROCESSING ROUTINE, BY           60580000
*   PROTOTYPE PARAMETER PROCESSING ROUTINE, AND BY MACRO INSTRUCTION    60600000
*   KEYWORD PROCESSING ROUTINE.                                         60620000
*                                                                       60640000
DSDTIN   EQU   *                                                        60660000
         ST    INPTR,TPSAVE                                             60680000
         LR    SCNLREG,R1               SCAN UP TO TRT TERMINATING CHAR 60700000
         LA    PARM,DSDT                GWT DSDT TYPE NUMBER            60720000
         BCT   SCNLREG,SDTLMT           AND GO                          60740000
*                                                                       60760000
XBCSDT   EQU   *                        X-, B-, C-TYPE SDT ENTRY        60780000
         ST    INPTR,TPSAVE                                             60800000
         LA    INPTR,D2(,INPTR)         BUMP OVER SDT HEAD              60820000
         L     SCNLREG,ENDATA           SET SCAN LIMIT                  60840000
*                                                                       60860000
SDTLMT   EQU   *                                                        60880000
         IC    R3,SDTMAXC-JTMSDT(PARM) SET SDT CHAR MAX COUNT           60900000
         STH   R3,HICCNT                                                60920000
         IC    R3,SDTCVAL-JTMSDT(PARM) SET SDT HIGH CHAR VALUE          60940000
         STH   R3,HICVAL                                                60960000
         IC    R1,SDTSHFT-JTMSDT(PARM)  SET CONVERSION SHIFT VALUE      60980000
*                                                                       61000000
         LA    INCREG,D1                BXLE INCREMENT IS 1             61020000
         SR    KNTREG,KNTREG            SET COUNT REG = 0               61040000
         LR    MAXVREG,KNTREG           SET RESULT REGISTER             61060000
*                                                                       61080000
SDTPR    EQU   *                                                        61100000
         SR    R14,R14                                                  61120000
         IC    R14,D0(,INPTR)           SET ONE BYTE AT INPTR           61140000
         CLI   D0(INPTR),JQUOTE         TEST IF QUOTE                   61160000
         BNE   SDTPR05                  GO TEST CHAR VALUE              61180000
         LA    INPTR,D1(,INPTR)         BUMP POINTER                    61200000
         CLI   HICVAL1,CHARV            TEST IF CHARACTER SDT           61220000
         BNE   SDTEND                   TERMINATE IF NOT                61240000
         CLI   D0(INPTR),JQUOTE         IS IT DOUBLE QUOTE              61260000
         BNE   SDTEND                   NO. TERMINATE                   61280000
SDTPR05  CH    R14,HICVAL               TEST IF CHAR VALUE IN RANGE     61300000
         BCR   BHI,RETURN               ERROR IF HIGH                   61320000
         CLI   D0(INPTR),JAMPER         IS THE CHAR AN AMPERSAND        61340000
         BNE   SDTPR15                  BRANCH IF NOT                   61360000
         LA    INPTR,D1(,INPTR)         BUMP POINTER                    61380000
         CLI   D0(INPTR),JAMPER         IT BETTER BE DOUBLE             61400000
         BCR   BNE,RETURN               ELSE, LOG ERROR                 61420000
SDTPR15  CLI   HICVAL1,J9               TEST IF DSDT                    61440000
         BNE   SDTPR25                  BRANCH IF NOT                   61460000
         ALR   R14,MAXVREG              INITIALIZE CONVERSION TO BINARY 61480000
         ALR   R14,MAXVREG                                              61500000
SDTPR25  EQU   *                                                        61520000
         SLL   MAXVREG,D0(R1)           SHIFT PARTIAL RESULT            61540000
         ALR   MAXVREG,R14              ADD IN THE ADJUSTED BYTE        61560000
         AR    KNTREG,INCREG            ADD 1 TO CHARACTER COUNT        61580000
         BXLE  INPTR,INCREG,SDTPR       GET NEXT BYTE                   61600000
         CLI   HICVAL1,J9               WOOPS, FALL THRU                61620000
         BE    SDTPR35                  BETTER BE DSDT,  YES, GREAT     61640000
         BR    RETURN                   ELSE, ERROR - RETURN            61660000
*                                                                       61680000
SDTPR35  EQU   *                                                        61700000
         CL    MAXVREG,SDTMAXV          HAS DSDT HIT MAX VALUE          61720000
         BCR   BHI,RETURN               TOO HIGH. LOG ERROR             61740000
SDTEND   LTR   KNTREG,KNTREG            CHAR COUNT MUST WITHIN RANGE    61760000
         BCR   BZ,RETURN                TOO LOW                         61780000
         CH    KNTREG,HICCNT                                            61800000
         BCR   BHI,RETURN               TOO HIGH                        61820000
         ST    MAXVREG,JFWORD2          OK. SAVE IT                     61840000
         CLI   HICVAL1,CHARV            TEST IF CSDT                    61860000
         BNE   SDTOUT                   BRANCH IF NOT                   61880000
         LCR   R14,KNTREG               NEGATE CHAR COUNT               61900000
         LA    TRBASE,JFWORD2+D4(R14)   ADJUST OFF-THE-LINE TR BASE REG 61920000
         LR    TRLENG,KNTREG                                            61940000
         BCTR  TRLENG,0                 ADJUST TR LENGTH                61960000
         EX    TRLENG,CSDTTR            TR TO EXTERNAL CHAR VALUE       61980000
SDTOUT   EQU   *                                                        62000000
         MVC   D1(L'JFWORD2,INDEXP),JFWORD2 ENTER VALUE INTO TEXT       62020000
         LA    R12,D1                   VALID SDT EXIT CODE FOR DMIENT  62040000
         GOIF  DMIENT,OFF=SDTOUT1       DID WE ENTER FROM MIPROTIN      62060000
         GOIF  VDIM,OFF=D4(,RETURN)     RETURN IF DIMENSIONED           62080000
SDTOUT1  EQU   *                                                        62100000
         MVI   D0(INDEXP),JTMSDT        NO                              62120000
         LA    INDEXP,SDTLENG(,INDEXP)  BUMP OVER ONE EXTRA BYTE       X62140000
                                        FOR GENERATOR'S CONVENIENCE     62160000
         B     D4(,RETURN)              AND RETURN                      62180000
CSDTTR   TR    D0(0,TRBASE),JTRTABLE    OFF-THE-LINE TRANSLATE          62200000
         SPACE 3                                                        62220000
         DS    0F                                                       62240000
* SDT TYPE ----> X B C D                                                62260000
SDTMAXC  DC    X'0820040A'              MAX CHAR COUNT ALLOWED IN SDT   62280000
SDTCVAL  DC    X'0F01FF09'              MAX CHAR VALUE ALLOWED IN SDT   62300000
SDTSHFT  DC    X'04010803'              SHIFT VALUE IN BITS             62320000
*                                                                       62340000
SDTMAXV  DC    X'7FFFFFFF'              MAX DSDT VALUE (2**32)-1        62360000
*                                                                       62380000
KNTREG   EQU   0                        CHAR COUNT REG                  62400000
MAXVREG  EQU   3                        MAX VALUE REG                   62420000
INCREG   EQU   10                       BXLE INCREMENT REG              62440000
SCNLREG  EQU   11                       SDT SCAN LIMIT REG              62460000
TRLENG   EQU   12                       OFF-THE-LINE TR LENGTH REG      62480000
TRBASE   EQU   14                       OFF-THE-LINE TR BASE REG        62500000
CHARV    EQU   255                      CHAR VALUE                      62520000
SDTLENG  EQU   L'JFWORD2+2              SDT ENTRY LENGTH (ONE EXTRA    X62540000
                                        BYTE FOR GEN'TOR'S CONVENIENCE  62560000
         DS    0H                                                       62580000
         SPACE 3                                                        62600000
BDSDT    BAL   RETURN,DSDTIN            EDIT AS DSDT                    62620000
         B     ILSDT                    INV SDT IF RETURN TO HERE       62640000
         CLI   D0(INPTR),JRPARN         DSDT MUST BE PARENTHESIZED      62660000
         BE    TRNSFER                  YES                             62680000
         AR    MTBLNDX,R12              NOT DSDT                        62700000
         B     TRNSFER                  TRY ARITH EXPR                  62720000
         EJECT                                                          62740000
*********************************************************************** 62760000
* RECURSIVE ENTRY FOR SCANNERS                                          62780000
* FORMAT = VMMMRRAF      WHERE                                          62800000
*          V  = FLGBYT SAVED                                            62820000
*          MMM = MTABLE INDEX (MTBLNDX)                                 62840000
*          RR = RETURN ADDRESS (RELATIVE TO BASE1)                      62860000
*          A  = ATTRSV SAVED                                            62880000
*          F  = MCALL SAVED                                             62900000
* RAVSP MUST BE INITIALIZED TO A(RSTACK) AT PHASE ENTRY                 62920000
* LINKAGE      BAL  R12,RENTSTK                                         62940000
*********************************************************************** 62960000
         SPACE 3                                                        62980000
RENTSTK  EQU   *                                                        63000000
         ST    INDEXP,INTERMET          SAVE INTERMEDIATE MT POINTER    63020000
         L     R14,RAVSP                GET AVAILABLE LOCATION IN RSTAC 63040000
         LA    R14,EDRSTK-BDRSTK(,R14)  COMPUTE NEXT AVAILABLE LOCATION 63060000
         C     R14,NRSTK                TEST IF END OF STACK            63080000
         BNL   RENTFULL                 LOG ERROR IF END OF STACK       63100000
         ST    MTBLNDX,RSTKSTP          SAVE                            63120000
         LA    RETURN,D0(,RETURN)       CLEAN UP BAL MESS               63140000
         SR    RETURN,BASE1             MAKE RETURN ADDRESS RELATIVE    63160000
         STH   RETURN,RSTKRTN           AND SAVE                        63180000
         MVC   RSTKATR(L'ATTRSV+L'MCALL+L'FLGBYT),ATTRSV SAVE FLAGS     63200000
         ST    R14,RAVSP                AND SAVE IT                     63220000
         BR    R12                      RETURN TO CALLER                63240000
         SPACE 3                                                        63260000
*********************************************************************** 63280000
* RECURSIVE EXIT FOR SCANNERS                                           63300000
* LINKAGE      B    REXSTK                                              63320000
*********************************************************************** 63340000
         SPACE 3                                                        63360000
REXSTKP  EQU   *                        ERROR-CONDITION EXIT            63380000
         L     INDEXP,INTERMET          WIPE OFF BAD META TEXT ENTRY    63400000
REXSTK   EQU   *                        NORMAL EXIT                     63420000
         L     R14,RAVSP                                                63440000
REXSTK1  EQU   *                                                        63460000
         LH    RETURN,RSTKRTN           RESTORE RETURN ADDRESS          63480000
         AR    RETURN,BASE1             AND MAKE IT ABSOLUTE            63500000
         MVC   ATTRSV(L'ATTRSV+L'MCALL+L'FLGBYT),RSTKATR RESTORE FLAGS  63520000
         L     MTBLNDX,RSTKSTP          RESTORE                         63540000
         SH    R14,RSTKLEN              BACK UP ENTRY POINT             63560000
         ST    R14,RAVSP                RESET AVAILABLE LOCATION POINTR 63580000
         BR    RETURN                   RETURN                          63600000
         EJECT                                                          63620000
*********************************************************************** 63640000
*   CSTK IS A RECURSIVE STACK FOR NESTED COPY CODE. A COPY CODE MAY   * 63660000
*   BE IMBEDDED IN A COPY CODE UP TO MAXIMUM OF FIVE LEVELS INCLUSIVE.* 63680000
*   A COPY CODE MAY COPY ITSELF. IT MAY COPY A MACRO DEFINITION AS A  * 63700000
*   PROGRAMMER MACRO. THUS, A COPY STATEMENT IS ALLOWED TO BE BETWEEN * 63720000
*   PROGRAMMER MACROS.                                                * 63740000
*                                                                     * 63760000
*   FORMAT OF CSTK IS NNNNS     WHERE                                 * 63780000
*                     NNNN = NOTED VALUE OF THE DISCONTINUED          * 63800000
*                            SOURCE STREAM.                           * 63820000
*                     S = SWITCH1 SAVED FOR CURRENT LEVEL OF COPY     * 63840000
*                           STREAM.                                   * 63860000
*                                                                     * 63880000
*   LINKAGE IS  BAL   R3,CSTKENT - FOR ENTRY                          * 63900000
*               BAL   R3,CSTKEXT - FOR EXIT                           * 63920000
*                                                                     * 63940000
*********************************************************************** 63960000
CSTKENT  EQU   *                                                        63980000
         L     PARM,CSTKADR             GET NEXT AVAILABLE LOCATION     64000000
         C     PARM,NCSTK               TEST IF THE STACK FULL          64020000
         BNL   CSTKFULL                 BRANCH IF YES                   64040000
         XC    CSTKMEM(L'CSTKMEM),CSTKMEM CLEAR MEMBER NAME             64050001
         GOIF  JINLIB,OFF=CSTK20        BRANCH IF NOT IN LIBRARY MODE   64060000
         JNOTELB                                                        64080000
         L     PARM,CSTKADR             RESTORE NEXT AVAILABLE LOCATION 64100000
         MVC   CSTKNOTE(L'CSTKNOTE),JNOTEVAL AND SAVE NOTED ADDRESS     64120000
         MVC   CSTKMEM(L'CSTKMEM),LASTFIND SAVE MEMBER NAME IN STACK    64130001
CSTK10   EQU   *                                                        64140000
         MVC   CSTKSW(L'SWITCH9),SWITCH9 SAVE SWITCH9 STATUS            64160000
         MVI   SWITCH9,J0               CLEAR SWITCH AT OLD LEVEL       64170000
         SET   SINCPY,ON                INDICATE IN COPY CODE           64180000
         LA    PARM,EDCSTK-CSTKNOTE(,PARM) COMPUTE NEXT SLOT ADDRESS    64200000
         ST    PARM,CSTKADR             AND SAVE                        64220000
         BR    R3                       RETURN                          64240000
         SPACE                                                          64260000
CSTK20   L     LINK,ASVCTLFM            GET ROUTINE ADDR                64280000
         BALR  TLINK,LINK               GO RESTORE STD I/P CTL FORMATS  64290000
         L     BASE2,CS2ADDR            RESTORE BASE FOR SECOND CSECT   64292000
         B     CSTK10                                                   64300000
*                                                                       64320000
CSTKEXT  EQU   *                                                        64340000
         L     PARM,CSTKADR             POP UP TO NEXT HIGHER LEVEL     64360000
         SH    PARM,CSTKLEN                                             64380000
         ST    PARM,CSTKADR                                             64400000
         MVC   SWITCH9(L'SWITCH9),CSTKSW RESTORE SWITCH9 STATUS         64420000
         C     PARM,BCSTK               TEST IF UP ON HIGHEST LEVEL     64440000
         BNH   CSTKEX2                  BRANCH IF YES                   64460000
CSTKEX1  EQU   *                                                        64480000
         LA    PARM,CSTKMEM             GET MEMBER NAME ADDRESS         64490001
         JFIND ADDR=(PARM)              FIND DISCONTINUED MEMBER        64492001
         L     PARM,CSTKADR             GET STACK ADDRESS       OY01713 64492402
         MVC   LASTFIND(L'LASTFIND),CSTKMEM MOVE MEMBER NAME            64494001
         JPOINTLB ADDR=(PARM)           POINT TO DISCONTINUED STREAM    64500000
         BR    R3                       RETURN                          64520000
CSTKEX2  EQU   *                                                        64540000
         GOIF  SSYSMD,ON=CSTKEX1        BRANCH IF EDITING SYS MACRO     64560000
         MVC   JSRCLN(L'JSRCLN*7),COPYSV3 RESTORE I/P CTL FORMATS       64580000
         MVC   TBGLN(L'TBGLN*6),COPYSV4                                 64600000
         MVC   INPUT,STNPADJ            RESTORE OLD STD-       @OX07230 64610005
         MVC   MINPUT,MINPADJ           OR ICTL I/P-CTL FORMS- @OX07230 64612005
         MVC   MINDIF,MINDFADJ          WHEN NOT IN-           @OX07230 64614005
         MVC   ENDWKA,ENDWKADJ          COPY ANYMORE.          @OX07230 64616005
         SET   JINLIB,OFF               INDICATE OUT OF LIBRARY MODE    64620000
         BR    R3                       RETURN                          64640000
         EJECT                                                          66940000
*********************************************************************** 66960000
*   STMTSEQ ROUTINE IS CALLED EACH TIME A NEW STATEMENT IS BEING        66980000
*   EDITED. ITS FUNCTION IS TO CHECK THE SEQUENCE OF A STATEMENT        67000000
*   RELATIVE TO ITS ENVIRONMENT IN THE INPUT SOURCE STREAM.             67020000
*   (IT HAS NO CONCERN WITH THE SEQUENCE CHECK ACTIVATED BY A           67040000
*   'ISEQ' STATEMENT PROCESSED.)                                        67060000
*        LINKAGES ARE                                                   67080000
*        BAL   RETURN,STMTDSQ                                           67100000
*        BAL   RETURN,STMTSEQ                                           67120000
*********************************************************************** 67140000
         SPACE 3                                                        67160000
STMTDSQ  EQU   *                                                        67180000
         LA    TWKREG1,DMMY-AOTSEQ      DUMMY UP SWITCH BYTE            67200000
STMTSEQ  EQU   *                                                        67220000
         IC    TRTN,AOTSEQ(TWKREG1)     INIT. SEQUENCING SWITCH         67240000
         STC   TRTN,AOTSW                                               67260000
         GOIF  (SKPMND,SKPEND),NONE=SSEQ20 IF NOT SKIP TO MEND/END      67280000
         L     INPTR,INPUT              RESET POINTER                   67300000
         GOIF  SKPMND,ON=SSEQ10         BRANCH IF SKIP TO MEND          67320000
         TM    AOTSW,AOEND              TEST IF END STATEMENT           67340000
         BNO   ABTRTN                   CONTINUE TO FLUSH TO END        67360000
         L     INPTR,FPTRSV             RESET POINTER                   67380000
         B     END                      GO PROCESS THE END STMT         67399600
SSEQ10   EQU   *                                                        67400000
         TM    AOTSW,AOMEND             TEST IF MEND STATEMENT          67420000
         BNO   ABTRTN                   CONTINUE FLUSH TO MEND STMT     67440000
         BAL   RETURN,RESETPTR          REINIT E/T REC FOR PRNT OX00405 67450001
         L     INPTR,INPUT              RESET POINTER          @AX12923 67460006
         SET   SMAC,OFF                 CORRESPONDING MEND FOUND        67470000
         B     MENDZ                    GO PROCESS MEND STATEMENT       67480000
SSEQ20   EQU   *                                                        67500000
         GOIF  AOPSYN,OFF=SSEQ22        BRANCH IF NOT OPSYN STATEMENT   67550000
         GOIF  SNOPSYN,OFF=(RETURN)     RETURN IF OPSYN ALLOWED         67600000
         MVI   OCSAVE,D0                CLEAR OPSYN OP CODE             67650000
         BAL   TLINK,ABSERR             ELSE, LOG ERROR                 67660000
         DC    AL1(8*16+SEV12)          GO TO INVALID RTN THRU ABSERR   67670000
         DC    AL1(ERR12)               SUPPRESS D ENTRY                67680000
SSEQ22   EQU   *                                                        67690000
         CLI   OCSAVE,JTCOPY            DOES THIS STMT INHIBIT OPSYS    67692000
         BNH   SSEQ25                   BR IF ICTL/ISEQ/OPSYN/COPY STMT 67692400
         CLI   OCSAVE,JTPRINT           CHECK IF PRINT STMT    @XA05837 67692531
         BE    SSEQ25                   OPSYN STILL OK         @XA05837 67692631
         CLI   OCSAVE,JTSPACE           CHECK IF IN COPY-SPACE RANGE    67692800
         BL    SSEQ24                   THESE INHIBIT FURTHER OPSYN     67693200
         CLI   OCSAVE,JTTITLE           CHECK IF IN RANGE ABOVE TITLE   67693600
         BNH   SSEQ25                   OPSYN STILL OK,SPACE/EJECT/TITL 67693700
SSEQ24   SET   SNOPSYN,ON               OPSYN NO LONGER ALLOWED         67694000
SSEQ25   EQU   *                                                        67696000
         GOIF  SINCPY,OFF=SSEQ30        BRANCH IF NOT IN COPY CODE      67700000
         TM    AOTSW,AOMEND             TEST IF MEND STMT               67710000
         BO    SSEQ29                   GO TO SET SMAC OFF              67712000
         CLI   OCSAVE,JTMACRO           CHECK IF MACRO STMT             67714000
         BNE   SSEQ27                   BRANCH IF NOT                   67716000
         SET   SMAC,ON                  MACRO STMT COPIED AT THIS LEVEL 67718000
SSEQ27   EQU   *                                                        67718400
         GOIF  AOCOPYX,OFF=SSEQ30       BRANCH IF LEGAL IN COPY CODE    67720000
         BAL   TLINK,ABSERR             THIS STMT ILLEGAL IN COPY CODE  67740000
         DC    AL1(8*16+SEV22)          GO TO INVALID RTN THRU ABSERR   67760000
         DC    AL1(ERR22)               SUBROUTINE                      67780000
SSEQ29   EQU   *                                                        67790000
         SET   SMAC,OFF                 CORRESPONDING MEND FOUND        67792000
SSEQ30   EQU   *                                                        67800000
         GOIF  SMDEF,OFF=SSEQ40         BRANCH IF NOT IN MACRO DEF.     67820000
         GOIF  SXPRTO,OFF=SSEQ35        BRANCH IF NOT EXPECTING PROTO   67840000
         TM    IOCID,BIT0+BIT1                                          67860000
         BNZ   BDPTO                    BRANCH IF ILLEGAL PROTO OP CODE 67880000
SSEQ35   EQU   *                                                        67900000
         TM    AOTSW,AOMACROX           TEST IF LEGAL IN MACRO DEF      67920000
         BCR   BZ,RETURN                BRANCH IF LEGAL                 67940000
         BAL   TLINK,ABSERR             ELSE, LOG ERROR                 67960000
         DC    AL1(8*16+SEV27)          GO TO INVALID RTN THRU ABSERR   67980000
         DC    AL1(ERR27)               THIS STMT ILLEGAL IN MACRO      68000000
SSEQ40   EQU   *                                                        68020000
         GOIF  SPGRMD,OFF=SSEQ45        BRANCH IF NOT EDIT'G PRG'R MAC  68040000
         GOIF  AOKBTNPM,OFF=SSEQ50      BRANCH IF ILLEGAL B/ PGR M DEF  68060000
         BR    RETURN                   RETURN                          68080000
SSEQ45   EQU   *                                                        68100000
         GOIF  SXMCRO,OFF=SSEQ47        BR IF NOT EXP'G MACRO STMT      68120000
         SET   SXMCRO,OFF                                               68140000
         CLI   OCSAVE,JTMACRO           YES, MUST BE SYSTEM MACRO DEF   68160000
         BCR   BEQ,RETURN               BRANCH IF THIS IS MACRO DEF     68180000
*        FIRST CARD IN THIS SYSTEM MACRO DEFINITION IS NOT A 'MACRO'.   68200000
*        LET GENERATOR LOG THE ERROR IN LINE. DEFINITION DISCARRED.     68220000
SSEQ46   EQU   *                                                        68240000
         SET   SKPMND,ON               DUMMY SKIP                       68260000
         SET   SNOSMCRO,ON              1ST STMT IN SYS M DEF NOT MACRO 68280000
         B     MEND1                    GET NEXT SYSTEM MACRO DEF       68300000
SSEQ47   EQU   *                        WE ARE IN OPEN CODE             68320000
         TM    AOTSW,AOPENCDX           TEST IF ALLOWED IN OPEN CODE    68340000
         BCR   BZ,RETURN                BRANCH IF YES                   68360000
         TM    AOTSW,AICOPY             IS THIS AN ICTL STMT            68370000
         BZ    SSEQ48                   BR IF MACRO,MEXIT,MEND          68372000
         BAL   TLINK,ABSERR             LOG ERROR FOR ICTL              68374000
         DC    AL1(8*16+SEV12)          GO TO INVALID RTN VIA ABSERR    68376000
         DC    AL1(ERR12)               ICTL OCCURS AFTER FIRST STMT    68378000
SSEQ48   BAL   TLINK,ABSERR             LOG ERR FOR MACRO,MEXIT,MEND    68380000
         DC    AL1(8*16+SEV23)          GO TO INVALID RTN THRU ABSERR   68400000
         DC    AL1(ERR23)               STMT ILLEGAL IN OPEN CODE       68420000
*        OPEN CODE INITIALIZATION                                       68440000
SSEQ50   EQU   *                                                        68460000
         GOIF  SICTL,ON=(RETURN)        OK IF VALID ICTL                68480000
         SET   (SPGRMD,SOPNCD),FLIP     OUT OF PRGMR MACS, NOW OPEN CD  68500000
         ST    RETURN,EDTSVX            SAVE RETURN POINT               68540000
         MVI   DDNDX1,OPENENT           SET UP INDEX FOR BR TO DIR RTN  68560000
         BAL   R3,DIR10                 INITIALIZE OPEN CODE            68580000
         L     RETURN,EDTSVX            RESTORE RETURN POINT            68600000
         B     SSEQ45                   CHECK SEQ OF FIRST CARD         68620000
         EJECT                                                          68640000
********************************************                            68660000
*        STATEMENT SEQUENCING TABLE        *                            68680000
********************************************                            68700000
         TBLGEN (ICTL,                                                 X68720000
               ISEQ,                                                   X68740000
               OPSYN,                                                  X68760000
               COPY,                                                   X68780000
               ANOP,                                                   X68800000
               GBLA,                                                   X68820000
               GBLB,                                                   X68840000
               GBLC,                                                   X68860000
               LCLA,                                                   X68880000
               LCLB,                                                   X68900000
               LCLC,                                                   X68920000
               MACRO,                                                  X68940000
               ACTR,                                                   X68960000
               AGO,                                                    X68980000
               AIF,                                                    X69000000
               SETA,                                                   X69020000
               SETB,                                                   X69040000
               SETC,                                                   X69060000
               MEXIT,                                                  X69080000
               MEND,                                                   X69100000
               END,                                                    X69120000
               DXD,                                                    X69140000
               EQU,                                                    X69160000
               ORG,                                                    X69180000
               CNOP,                                                   X69200000
               CCW,                                                    X69220000
               DC,                                                     X69240000
               DS,                                                     X69260000
               START,                                                  X69280000
               CSECT,                                                  X69300000
               DSECT,                                                  X69320000
               COM,                                                    X69340000
               ENTRY,                                                  X69360000
               EXTRN,                                                  X69380000
               WXTRN,                                                  X69400000
               CXD,                                                    X69420000
               LTORG,                                                  X69440000
               PUNCH,                                                  X69460000
               REPRO,                                                  X69480000
               PUSH,                                                   X69500000
               POP,                                                    X69520000
               PRINT,                                                  X69540000
               USING,                                                  X69560000
               DROP,                                                   X69580000
               SPACE,                                                  X69600000
               EJECT,                                                  X69620000
               TITLE,                                                  X69640000
               MNOTE,                                                  X69660000
               INVALID),                                               X69680000
               (46,                     ICTL                           X69700000
               5,                       ISEQ                           X69720000
               22,                      OPSYN                          X69740000
               33,                      COPY                           X69760000
               0,                       ANOP                           X69780000
               0,                       GBLA                           X69800000
               0,                       GBLB                           X69820000
               0,                       GBLC                           X69840000
               0,                       LCLA                           X69860000
               0,                       LCLB                           X69880000
               0,                       LCLC                           X69900000
               7,                       MACRO                          X69920000
               0,                       ACTR                           X69940000
               0,                       AGO                            X69960000
               0,                       AIF                            X69980000
               0,                       SETA                           X70000000
               0,                       SETB                           X70020000
               0,                       SETC                           X70040000
               2,                       MEXIT                          X70060000
               66,                      MEND                           X70080000
               128,                     END                            X70100000
               0,                       DXD                            X70120000
               0,                       EQU                            X70140000
               0,                       ORG                            X70160000
               0,                       CNOP                           X70180000
               0,                       CCW                            X70200000
               0,                       DC                             X70220000
               0,                       DS                             X70240000
               0,                       START                          X70260000
               0,                       CSECT                          X70280000
               0,                       DSECT                          X70300000
               0,                       COM                            X70320000
               0,                       ENTRY                          X70340000
               0,                       EXTRN                          X70360000
               0,                       WXTRN                          X70380000
               0,                       CXD                            X70400000
               0,                       LTORG                          X70420000
               0,                       PUNCH                          X70440000
               0,                       REPRO                          X70460000
               0,                       PUSH                           X70480000
               0,                       POP                            X70500000
               1,                       PRINT                          X70520000
               0,                       USING                          X70540000
               0,                       DROP                           X70560000
               1,                       SPACE                          X70580000
               1,                       EJECT                          X70600000
               1,                       TITLE                          X70620000
               0,                       MNOTE                          X70640000
               0),                      INVALID                        X70660000
               AOTSEQ,SEQT,1                                            70680000
         EJECT                                                          70700000
*********************************************************************** 70720000
*   PUTLSIZ ROUTINE IS CALLED EACH TIME BEFORE JPUTL IS ISSUED TO       70740000
*   DETERMINE THE LOGICAL OUTPUT BUFFER SIZE NEEDED FOR A PARTICULAR    70760000
*   STATEMENT.                                                          70780000
*   (AN EDITED TEXT RECORD IS BUILT DIRECTLY INTO BUFFER, SO AS TO      70800000
*   SAVE A MOVE OF THE EDITED TEXT RECORD FROM A WORK AREA TO OUTPUT    70820000
*   BUFFER, AND TO SAVE 1/2K CORE THAT, OTHERWISE, WOULD HAVE TO BE     70840000
*   PROVIDED TO THE WORK BUFFER.) THE RESULT FROM THE CALCULATION IS    70860000
*   RETURNED IN REGISTER R11.                                           70880000
*        BAL   TLINK,PUTLSIZ                                            70900000
*********************************************************************** 70920000
         SPACE 3                                                        70940000
*****************************************                               70960000
*        COMPUTE O/P BUFFER SIZE        *                               70980000
*****************************************                               71000000
PUTLSIZ  EQU   *                                                        71020000
         GOIF  (SDTCMT,STRCMT),MIX=CMTSIZ COMMENTS STATEMENT SIZE       71040000
*        GOIF  SMIPRTO,ON=MISIZ         MACRO INSTR. OR PROTOTYPE       71060000
         GOIF  SPRVCT,ON=CNTSIZ         WITH CONTINUATION CARDS         71080000
         LA    R11,SZNORM               ELSE, MUST BE NORMAL SIZE       71100000
         B     OPUTL                    GO GET BUFFER ADDRESS           71120000
CMTSIZ   EQU   *                                                        71140000
         LA    R11,SZCMT                GET BUFFER SIZE                 71160000
         B     OPUTL                    GO GET BUFFER ADDRESS           71180000
MISIZ    EQU   *                                                        71200000
         LA    R11,SZMI                 LOAD MI/PROTO SIZE              71220000
         B     OPUTL                    GO GET BUFFER ADDRESS           71240000
CNTSIZ   EQU   *                                                        71260000
         LA    R11,SZCNT                LOAD CONTINUATION SIZE          71280000
         B     OPUTL                    GO GET BUFFER ADDRESS           71300000
         EJECT                                                          71320000
*********************************************************************** 71340000
*   ABTRTN IS CALLED WHEN A MACRO DEFINITION IS TO BE FLUSHED.          71360000
*********************************************************************** 71380000
ABTRTN   EQU   *                                                        71400000
         BAL   RETURN,RESETPTR          REINIT E/T REC FOR PRINT ONLY   71420000
         LA    INDEXP,JTHDRLN+2(,INDEXO)  RESET TEXT POINTER            71440000
         SET   SNOPND,ON                INDICATE TO RETURN              71460000
         SET JPRONLY,ON                                                 71480000
         BAL   RETURN,SAVPTR            EDIT AS COMMENTS FIELD          71500000
         L     LINK,ARDSRC              POINT TO RDSRC                  71520000
         BALR  RETURN,LINK              READ ONE CARD                   71540000
         DC    AL2(RBYPONE-RFSTCRD)     BYPASS ONE CARD                 71560000
         GOIF  SINEOF,ON=EOFRTN         BRANCH IF END OF FILE           71580000
         LA    R11,SZCNT                NO, SO....                      71600000
         BAL   RETURN,OPUTL             GET O/P BUFFER                  71620000
         BAL   RETURN,HDINIT            INITIALIZE HEADER               71640000
         SET   SUPDNT,ON                SUPPRESS DIRECTORY ENTRY        71660000
         B     PROCNXT                  GO PROCESS AS NORMAL            71680000
         EJECT                                                          71700000
*********************************************************************** 72020000
*        CHECK NAME FOR SEQUENCE SYMBOL OR BLANK                      * 72040000
CKANYSYM EQU   *                                                        72060000
         GOIF  (ROSYM,RVSYM)            RETURN IF NAME A                72080000
         BCR   7,TLINK                  VS OR OS                        72100000
CHKSSNM  EQU   *                                                        72120000
         GOIF  RSSYM,ON=(TLINK)         RETURN IF NAME A S.S.           72140000
CHKNM    EQU   *                                                        72160000
         GOIF  SNMFND,OFF=(TLINK)       RETURN IF NO NAME               72180000
         ST    TLINK,EDTSVX             SAVE RETURN POINT               72200000
         BAL   RETURN,NAMERR            ELSE, LOG ERROR                 72220000
         L     TLINK,EDTSVX             RESTORE RETURN POINT            72240000
         BR    TLINK                    RETURN TO CALLER                72260000
         SPACE 3                                                        72266000
         JPATCH  X1A10,E70                                              72272000
         EJECT                                                          72280000
         JCSECT (X1A20=CS3)                                             72300000
*********************************************************************** 72320000
*                                                                     * 72340000
* RDSRC - THIS ROUTINE IS CALLED WHEN A NEW STATEMENT OR A CONTINUATION 72360000
*   RECORD IS TO BE READ. IT CALLS 'JINPUT' MACRO TO READ A RECORD      72380000
*   FROM SYSTEM INPUT, OR FROM MACRO LIBRARY IF 'JINLIB' BIT IN         72400000
*   'JINFLAG' BYTE IS ON.  IT SEQUENCE CHECKS THE RECORD WHEN ISEQ      72420000
*   SWITCH (SWITCH1 BIT 0) IS ON. FINALLY, IT MOVES THE RECORD TO       72440000
*   INPUT WORK BUFFER.                                                  72460000
*        BAL   RETURN,RDSRC                                             72480000
*        BAL   RETURN,RDSRC05                                           72500000
*                                                                       72520000
*********************************************************************** 72540000
*                                                                     * 72560000
*   RFSTCRD = READ FIRST CARD OF A STATEMENT - ALWAYS FROM READNEXT   * 72580000
*   RALLCNT = READ ALL CONTINUATIONS - FOR MACHINE/ASSEMBLER OPS      * 72600000
*   RONECNT = READ ONE CONTINUATION - FOR MACRO CALLS/PROTOTYPE STMTS * 72620000
*   RBYPCNT = BYPASS ALL CONTINUATIONS - FOR STMTS WITH HARD ERRORS   * 72640000
*   RONECRD = READ ONE CARD - FOR REPRO STATEMENT                     * 72660000
*   RBYPONE = BYPASS ONE CARD IN EDITED FORMAT - FOR DATA FLUSHING    * 72680000
*                                                                     * 72700000
*********************************************************************** 72720000
RDSRC    EQU   *                                                        72740000
         L     INPTR,INPUT              UPDATE INPTR                    72760000
RDSRC05  EQU   *                                                        72780000
         STM   R12,R9,SAVMALL           SAVE REGISTERS                  72800000
         BALR  BASE3,0                  REDEFINE BASE REGISTER          72820000
         USING *,BASE3                                                  72840000
         LH    TWKREG1,D0(,RETURN)      GET BRANCH POINT                72860000
         B     RFSTCRD(TWKREG1)         AND FAN OUT                     72880000
RFSTCRD  EQU   *                        READ FIRST CARD                 72900000
         SET   (SNXTCT,SPRVCT),OFF      RESET SWITCHES                  72920000
RDSRC10  EQU   *                                                        72940000
         NI    CNTCTR,ALLOFF                                            72960000
RDSRC20  EQU   *                                                        72980000
         L     TWKREG1,DSTGBGN          INITIALIZE STRING AREA POINTER  73000000
         ST    TWKREG1,DSTGADJ          TO ORIGINAL POINT               73020000
         ST    TWKREG1,DSTGNDX                                          73040000
         MVI   D0(TWKREG1),D0           RESET STRING COUNT              73060000
         B     RCONT                    READ CONTINUATIONS IF ANY       73080000
RONECRD  EQU   *                        READ ONE CARD                   73100000
         SET   SONECD,ON                                                73120000
         B     RFSTCRD                  GO                              73140000
RBYPONE  EQU   *                        BYPASS ONE CARD IN EDITED FORM  73160000
         SET   SBYONE,ON                INDICATE READ ONE CARD          73180000
         B     RFSTCRD                  GO                              73200000
RBYPCNT  EQU   *                        BYPASS ALL CONTINUATIONS        73220000
         SET   SBYCNT,ON                                                73240000
         B     RDSRC10                  FLUSH THROUGH CONTINUATION      73260000
RONECNT  EQU   *                        READ ONE CONTINUATION CARD      73280000
         SET   SONECT,ON                                                73300000
         B     RDSRC20                  GO GET ONE CARD                 73320000
RALLCNT  EQU   *                                                        73340000
         SET   SALLCT,ON                                                73360000
RCONT    EQU   *                                                        73380000
         GOIF  (SBYCNT,SONECT,SALLCT),NONE=RINPT BR IF NO CONTINUATION  73400000
RCNTLP   EQU   *                                                        73420000
         GOIF  SPRVCT,OFF=REXIT         RETURN IF NOT TO BE CONT'D      73440000
RINPT    EQU   *                                                        73460000
         JINPUT                         GET INPUT BUFFER POINTER        73480000
         BNP   REOFX                    GO TO END OF FILE ROUTINE       73500000
         ST    RETADR,IPTRSV            SAVE INPUT POINTER              73520000
RINIT    EQU   *                                                        73540000
         LM    R3,R5,JSRCLN             REGISTER INITIALIZATION         73560000
         IC    TWKREG1,CNTCTR           INCREMENT CARD COUNT            73580000
         LA    TWKREG1,D1(,TWKREG1)                                     73600000
         STC   TWKREG1,CNTCTR                                           73620000
         BAL   RETURN,MVSRC             MOVE RECORD TO INPUT WK BUF     73640000
*                                       SEPARATE STRINGS FROM DATA      73660000
         ST    INPTR,ENDATA                                             73680000
         MVI   D0(INPTR),JBLANK         PATCH A BLANK FOR SCANNER       73700000
         GOIF  SONECD,ON=REXIT          RETURN TO CALLER IF RONECD      73720000
         LM    SEQREG,SQLREG,JSEQCL                                     73740000
*                                                                       73780000
         GOIF  SNOCNT,ON=RSEQCHK        BRANCH IF CONT'N NOT ALLOWED    73800000
         LA    TWKREG1,D0(CNTREG,RETADR)                                73820000
         CLI   D0(TWKREG1),JBLANK       TEST IF ANY CONTINUATION        73840000
         BE    RSEQCHK                  NO, GO CHECK SEQUENCE           73860000
         SET   SNXTCT,ON                INDICATE TO BE CONTINUED        73880000
RSEQCHK  EQU   *                                                        73900000
         GOIF  SISEQ,OFF=RFCCHK         BRANCH IF NOT TO SEQ CHK        73920000
         LA    TWKREG1,D0(SEQREG,RETADR)                                73940000
         EX    SQLREG,SEQMV             MOVE SEQ FIELD TO TR AREA       73960000
         EX    SQLREG,SEQTR             TRANSLATE                       73980000
         EX    SQLREG,SEQCPR            SEQUENCE CHECK                  74000000
         EX    SQLREG,SEQSAVE           SAVE NEW SEQ VALUE              74020000
         BH    RFCCHK                   SEQUENCE OK                     74040000
         BAL   TLINK,WRNERR             GO LOG SEQUENCE ERROR           74060000
         DC    AL1(SEV25)               .                               74080000
         DC    AL1(ERR25)               INPUT SEQUENCE ERROR            74100000
*                                                                       74120000
RFCCHK   EQU   *                                                        74140000
         GOIF  (SONECD,SBYCNT,SONECT,SALLCT),NONE=RMORCNT IF RFSTCRD    74160000
         GOIF  SPRVCT,OFF=REXCS         IF THIS CD NOT CONT OF PREV CD  74180000
         L     CBGREG,JCTBGN                                    OX00081 74190002
         LA    INPTR,D0(BEGREG,RETADR)  PREPARE TO GO CHECK BLANKS      74200000
         LA    TWKREG2,D0(CBGREG,RETADR)                                74220000
         BAL   TLINK,SKPBLK0            SKIP BLANKS                     74240000
         L     INPTR,ENDATA             RESTORE INPTR                   74260000
         GOIF  SNOFND,ON=REXCS          O.K. IF BLANK                   74280000
         BAL   TLINK,WRNERR             GO LOG CONTINUATION ERROR       74300000
         DC    AL1(SEV26)               CONTINUATION CARD STARTS        74320000
         DC    AL1(ERR26)               BEFORE CONTINUATION COLUMN      74340000
*                                                                       74360000
REXCS    EQU   *                                                        74380000
         GOIF  SALLCT,OFF=RMORCNT       BRANCH IF NOT RALLCNT           74400000
         CLI   CNTCTR,J3                CHECK CARD COUNT                74420000
         BL    RMORCNT                  GO GET CONTINUATIONS            74440000
         BH    REXCS10                  TOO MANY CONTINUATIONS, ERROR   74460000
         GOIF  SNXTCT,ON=REXCS10        MORE CONT'NS IS ERROR           74480000
         SET   SPRVCT,OFF               RESET CONTINUATION BIT          74500000
         B     RAXIT                    EXIT                            74520000
REXCS10  EQU   *                                                        74540000
         BAL   TLINK,WRNERR             GO LOG CONTINUATION ERROR       74560000
         DC    AL1(SEV69)               MORE THAN 2 CONTINUATION        74580000
         DC    AL1(ERR69)               CARDS IN THIS STMT              74600000
         SET   SBYCNT,ON                BYPASS ALL CONTINUATIONS        74620000
         SET   SALLCT,OFF                                               74640000
*                                                                       74660000
RMORCNT  EQU   *                                                        74680000
         SET   SPRVCT,OFF               RESET CONTINUATION SWITCH       74700000
         GOIF  SNXTCT,OFF=RAXIT         BRANCH IF NO MORE CONT'NS       74720000
         SET   SPRVCT,ON                INDICATE TO BE CONTINUED        74740000
         SET   SNXTCT,OFF               PREPARE FOR NEXT CARD           74760000
*                                                                       74780000
RAXIT    EQU   *                                                        74800000
         GOIF  SALLCT,ON=RCNTLP         READ NEXT CARD IF RALLCNT       74820000
REXIT    EQU   *                        RETURN TO CALLER                74840000
         SET   (SONECD,SONECT,SALLCT),OFF                               74860000
*        RBYPCNT BIT WILL BE SET OFF AT WRAPFLD WHEN ALL CARDS TO BE    74880000
*        BYPASSED ARE READ.                                             74900000
*                                                                       74920000
         LM    R12,R9,SAVMALL           RESTORE REGISTERS               74940000
         B     D2(,RETURN)              RETURN TO CALLER                74960000
REOFX    EQU   *                                                        74980000
         SET   SINEOF,ON                INDICATE END OF FILE            75000000
         B     REXIT                    RETURN TO CALLER                75020000
*                                                                       75040000
MVSRC    EQU   *                                                        75060000
         ST    RETURN,EDTSVX            SAVE RETURN POINTER             75080000
         LR    SRCPTR,RETADR            SET SOURCE RECORD POINTER       75100000
         LA    SRCEND,CRDLN(,SRCPTR)    END RECORD POSITION PLUS 1      75120000
         L     DSTGPTR,DSTGNDX          RESERVE SPACE FOR STRING COUNT  75140000
         LA    DSTGPTR,D1(,DSTGPTR)                                     75160000
         ST    DSTGPTR,DSTGNDX                                          75180000
         NI    STGCNT,ALLOFF            ZERO OUT STRING COUNT           75200000
         LA    STGLOC,D1                GET STRING LOCATION             75220000
         GOIF  SBYCNT,ON=MVSRC1         EDIT AS NON-CONT'N IF TO BYPASS 75240000
         GOIF  SPRVCT,ON=MVPBSTG        BRANCH IF A CONT'N CARD         75260000
MVSRC1   EQU   *                                                        75280000
         LTR   BEGREG,BEGREG            IF NO PRE-BEGIN STRING          75300000
         BZ    MVDATA                   GO MOVE DATA                    75320000
         L     TWKREG2,PBGLEN           GET PRE-BEGIN STRING LENGTH -1  75340000
MVSTRING EQU   *                                                        75360000
         LA    R1,D1(TWKREG2,SRCPTR)    GET UPPER LIMIT OF SCAN         75380000
         LR    TWKREG1,SRCPTR           GET BEGIN ADDRESS TO BE SCANNED 75400000
         B     MVSTR20                  GO TEST FOR END OF STRING       75420000
MVSTR10  EQU   *                                                        75440000
         LA    TWKREG1,D1(,TWKREG1)     STEP TO NEXT COLUMN             75460000
MVSTR20  EQU   *                                                        75480000
         CR    TWKREG1,R1               TEST IF END OF STRING           75500000
         BE    MVNONE                   YES, BLANK STRING               75520000
         CLI   D0(TWKREG1),JBLANK       IS IT A BLANK                   75540000
         BE    MVSTR10                  YES, GO CHECK NEXT COLUMN       75560000
         STC   STGLOC,SOPTR             MOVE IN STRING OUTPUT POINTER   75580000
         EX    TWKREG2,MVSTRG           MOVE STRING                     75600000
         LA    TWKREG2,D1(,TWKREG2)     MAKE IT TRUE LENGTH             75620000
         STC   TWKREG2,SOLEN            MOVE IN STRING TRUE LENGTH      75640000
         LA    SRCPTR,D0(TWKREG2,SRCPTR) POINT TO NEXT FIELD            75660000
         IC    TWKREG1,STGCNT           UPDATE STRING COUNT             75680000
         LA    TWKREG1,D1(,TWKREG1)     BY ONE                          75700000
         STC   TWKREG1,STGCNT                                           75720000
         LA    TWKREG1,D2(TWKREG2,DSTGPTR) UPDATE STRING INDEX          75740000
         ST    TWKREG1,DSTGNDX                                          75760000
MVSTR30  EQU   *                                                        75780000
         CR    SRCPTR,SRCEND            TEST IF END OF RECORD           75800000
         BL    MVDATA                   NO, GO MOVE DATA                75820000
MVRTN    EQU   *                                                        75840000
         L     DSTGPTR,DSTGADJ          BACK UP TO STRING POINTER TO    75860000
         IC    TLINK,STGCNT             INSERT STRING COUNT INTO        75880000
         STC   TLINK,SCCNT              EDITED TEXT                     75900000
         L     TLINK,DSTGNDX            UPDATE ADJUSTED POINTER         75920000
         ST    TLINK,DSTGADJ                                            75940000
         L     RETURN,EDTSVX            YES, RETURN TO CALLER           75960000
         BR    RETURN                   RETURN                          75980000
MVNONE   EQU   *                                                        76000000
         LR    SRCPTR,TWKREG1           POINT TO NEXT FIELD             76020000
         B     MVSTR30                  GO TEST FOR END OF RECORD       76040000
MVPBSTG  EQU   *                                                        76060000
         L     TWKREG2,JCTBGN           PREPARE TO SCAN TO CONT'N BEG.  76080000
         BCTR  TWKREG2,0                BACK UP 1                       76100000
         B     MVSTRING                 GO SCAN TO END OF STRING        76120000
*                                                                       76140000
MVDATA   EQU   *                                                        76160000
         LR    TWKREG2,SLNREG           GET SOURCE LENGTH               76180000
         GOIF  SPRVCT,OFF=MVDEX         BRANCH IF NOT CONT'D            76200000
         GOIF  SBYCNT,ON=MVDEX          BRANCH IF TO BYPASS ONE CARD    76220000
         L     TWKREG2,JCTLN            ELSE, GET CONT'N LENGTH         76240000
MVDEX    EQU   *                                                        76260000
         LR    DSTGPTR,INPTR            SET UP DESTINATION  POINTER     76280000
         EX    TWKREG2,MVSEGT                                           76300000
         LA    INPTR,D1(TWKREG2,INPTR)  BUMP WORK AREA POINTER          76320000
         LA    SRCPTR,D1(TWKREG2,SRCPTR) POINT TO NEXT FIELD            76340000
         CR    SRCPTR,SRCEND            TEST IF END OF DATA             76360000
         BNL   MVRTN                    YES, EXIT                       76380000
         L     TWKREG2,PNDLEN           LOAD POST-END STRING LENGTH     76400000
         LA    STGLOC,D1(,CNTREG)       SET UP POST-END STRING LOCATION 76420000
         L     DSTGPTR,DSTGNDX          SET UP DESTINATION POINTER      76440000
         B     MVSTRING                 GO SCAN TO END OF STRING        76460000
MVSEGT   MVC   D0(0,DSTGPTR),D0(SRCPTR) OFF-THE-LINE MOVE               76480000
MVSTRG   MVC   SDATA(0),D0(SRCPTR)      OFF-THE-LINE MOVE               76500000
SEQMV    MVC   SEQSVT(0),D0(TWKREG1)    MOVE SEQ FIELD TO TR AREA       76520000
SEQTR    TR    SEQSVT(0),JTRTABLE       TRANSLATE                       76540000
SEQCPR   CLC   SEQSVT(0),SEQSV          COMPARE SEQ FIELD               76560000
SEQSAVE  MVC   SEQSV(0),SEQSVT          SAVE NEW SEQ VALUE              76580000
         DROP  INDEXP,R14                                               76600000
         EJECT                                                          76620000
*********************************************************               76640000
*        PROTOTYPE STATEMENT PARAMETER PROCESSOR        *               76660000
*********************************************************               76680000
         USING MPROTO,INDEXP                                            76700000
         USING MPMT,R14                                                 76720000
MIPRTOIN JSAVE BASE=NO                                                  76740000
         LR    BASE3,LINK               REDEFINE BASE REGISTER          76760000
         USING MIPRTOIN,BASE3                                           76780000
         GOIF  SXPRTO,OFF=MCALLIN       BRANCH IF MCARO CALL            76800000
PROTOIN  EQU   *                        PROTOTYPE PROCESSOR             76820000
         SET   SDENT,OFF                INSURE SS DEF IS NOT ENTERED    76840000
         SET   JTPROTO                  INDICATE PROTO                  76860000
         BAL   RETURN,DTADJ             MAKE DATA ADJUSTMENT            76880000
         B     STEND                    END STATEMENT IF RETURN HERE    76900000
         GOIF  SNMFND,ON=PRTX           BRANCH IF THERE IS A NAME       76920000
* IF NO NAME, INDICATE THAT A NULL PARAMETER EXISTS FOR MACRO EXPANSION 76940000
         L     R3,GTPVALOC              GET POS PARM COUNTER INDICATOR  76960000
         LA    R3,D3(,R3)               BUMP POS PARM CTR BY 3 BYTES    76980000
         ST    R3,GTPVALOC              SAVE FOR MACRO GENERATOR        77000000
PRTX     EQU   *                                                        77020000
         LA    R11,SZMI                                                 77040000
         BAL   RETURN,OPUTL             GET O/P BUFFER                  77060000
         BAL   RETURN,HDINIT            INITIALIZE HEADER               77080000
         ST    INPTR,FPTRSV             SAVE POINTERS                   77100000
         ST    INDEXP,OFPTRSV                                           77120000
         SET   JTPPKEY                  ASSUME KEYWORD PARAMETER        77140000
         SET   JPSOP,ON                                                 77160000
PRTX10   EQU   *                                                        77180000
         CLI   D0(INPTR),JAMPER         TEST IF AMPERSAND               77200000
         BNE   PRTCMA                   BRANCH IF NOT                   77220000
*BUMP THE POINTER PAST THE '&' FOR THE DIRECTORY ROUTINE                77240000
         LA    INPTR,D1(,INPTR)         BUMP OVER V SYM HEAD            77260000
         BAL   RETURN,TRT01             TRT V SYMBOL                    77280000
         BCT   R3,BADPARM               ERROR IF NOT A/N STRING         77300000
         MVI   FLGBYT,PARMFLG           ASSUME POSITIONAL PARAMETER     77320000
         GOIF  SNMFND,OFF=PRTX40        MUST BE OPERAND IF NOT NAME     77340000
         CLI   D0(R1),JBLANK            TERMINATOR MUST BE A BLANK      77360000
         BNE   BADPARM                  ELSE,ERROR                      77380000
PRTX15   CH    R15,H7                   LENGTH MUST BE RIGHT            77400000
         BNL   BADPARM                  ELSE, LOG ERROR                 77420000
         LR    PARAM2,TWKREG2           GET MOVE LENGTH OF SYMBOL       77440000
         LR    PARM,INPTR               GET THE POINTER                 77460000
         MVI   DDNDX1,VARBSYMD          INDICATE VAR SYM DEFINITION     77480000
         BAL   R3,DIRENT                MAKE DIRECTORY ENTRY            77500000
         GOIF  SNMFND,OFF=PRTX20        GO FIND NEXT OPERAND            77520000
PRTX16   BAL   RETURN,ADJ20             MAKE DATA ADJUSTMENT            77540000
         B     STEND                    END STATEMENT IF RETURN HERE    77560000
         B     PRTX                     EDIT OPERAND                    77580000
PRTX20   EQU   *                                                        77600000
         TM    DERRCD,BITFF             SEE IF ERROR RETURNED FROM DIR  77620000
         BNZ   SKMNDST                  FLUSH MACRO IF ERROR FOUND      77640000
         LR    INPTR,R1                 UPDATE POINTER                  77660000
         CLI   D0(INPTR),JEQUAL         TEST IF KWD PARAM               77680000
         BNE   PRTX30                   BRANCH IF NOT                   77700000
         MVC   VECPTR,D1(R11)           SAVE VECTOR POINTER             77720000
         LA    R14,MPHDL(,INDEXP)       GET HDR RECORD LENGTH           77740000
PRTX25   ST    R14,MTXTP                SAVE MT POINTER                 77760000
         LR    R15,R14                  SAVE HDF BASE REGISTER          77780000
         SR    R15,INDEXO               COMPUTE OPERAND POINTER         77800000
         STH   R15,JTOPP                                                77820000
         BAL   RETURN,BLDPMT            BUILD PARAM MT                  77840000
         BAL   RETURN,NEXTPM            EDIT KWD OPERAND                77860000
         SET   (DSDTX,DECMA,DEEQL,DLPRN),OFF RESET INDICATORS           77880000
         BAL   RETURN,WRAPOPND          WRAP UP OPERAND                 77900000
PRTX30   EQU   *                                                        77920000
         CLI   D0(INPTR),JRPARN         TEST IF END OF SUBLIST          77940000
         BNE   PRTX35                   BRANCH IF NOT                   77960000
         LA    INPTR,D1(,INPTR)         YES, BUMP OVER R PAREN          77980000
         BAL   R12,DPARCT               DECREMENT PAREN COUNT           78000000
         BL    UNBAL                    LOG ERROR IF UNBAL PARENS       78020000
PRTX35   EQU   *                                                        78040000
         CLI   D0(INPTR),JCOMMA         OR IS IT A COMMA                78060000
         BE    PRTX50                   BRANCH IF YES                   78080000
         CLI   D0(INPTR),JBLANK         OR IS IT A BLANK                78100000
         BE    STEND                    END STATEMENT                   78120000
         B     BADPARM1                 BAD PARAMETER                   78140000
PRTX40   EQU   *                                                        78160000
         CLI   D0(R1),JEQUAL            IS IT KEYWORD                   78180000
         BNE   PRTX15                   BRANCH IF NOT                   78200000
         MVI   FLGBYT,PARMFLG+VPTYP     ELSE, SO INDICATE               78220000
         SET   SKWPRM,ON                INDICATE PROCESSING KWD         78240000
         B     PRTX15                   CONTINUE CHECKING               78260000
PRTX50   EQU   *                                                        78280000
         LA    INPTR,D1(,INPTR)                                         78300000
         L     PARAM1,MINPUT                                            78320000
         BAL   TLINK,SHFTDTA            SHUFFLE DATA A LITTLE           78340000
         CLI   D0(INPTR),JBLANK         IS COMMA FOLLOWED BY A BLANK    78360000
         BNE   PRTX                     EDIT NEXT PARAMETER             78380000
         GOIF  SNOCNT,ON=STEND          END STMT IF NO CONT'N ALLOWED   78400000
         BAL   RETURN,BUMPD             BUMP OVER COMMENTS              78420000
*                                                                       78440000
PRTX70   EQU   *                                                        78460000
         L     PARAM1,MINPUT                                            78480000
         BAL   TLINK,SHFTDTA            SHUFFLE, SHUFFLE                78500000
         B     PRTX                     EDIT NEXT PARAMETER             78520000
PRTCMA   EQU   *                                                        78540000
         CLI   D0(INPTR),JCOMMA         TEST IF AN OMITTED PARAMETER    78560000
         BNE   PRTBLK                   BRANCH IF NOT                   78580000
         GOIF  SNMFND,ON=BADPARM        BAD PARAMETER                   78600000
*NOW WE KNOW IT'S A NULL PARAMETER, UP THE PARM COUNTER FOR GENERATOR   78620000
         L     R3,GTPVALOC              GET POS PARM COUNTER INDICATOR  78640000
         LA    R3,D3(,R3)               BUMP POS PARM CTR BY 3 BYTES    78660000
         ST    R3,GTPVALOC              SAVE FOR MACRO GENERATOR        78680000
         B     PRTX50                   SHIFT DATA IF YES               78700000
PRTBLK   CLI   D0(INPTR),JBLANK         TEST IF END OF STATEMENT        78720000
         BNE   BADPARM                  LOG ERROR IF NOT                78740000
         B     STEND                    ELSE, WRAP UP STATEMENT         78760000
         SPACE 3                                                        78780000
*        LINKAGES ARE                                                   78800000
*              BAL   RETURN,DTADJ                                       78820000
*              BAL   RETURN,ADJ20                                       78840000
DTADJ    EQU   *                                                        78860000
         ST    RETURN,ADJSV             SAVE RETURN POINT               78880000
         L     RCNT,INPUT               BEGIN OF FIELD                  78900000
         BAL   RETURN,PRESUB1           OUTPUT PRE-SUBSTITUTION RECORD  78920000
         GOIF  SNMFND,OFF=ADJ25         BRANCH IF NO NAME               78940000
         L     INPTR,INPUT              POINT TO NAME                   78960000
         GOIF  SXPRTO,ON=ADJOUT         LET GO IF PROTO                 78980000
         GOIF  NSSYM,ON=ADJ25           IGNORE NAME IF SS               79000000
ADJOUT   EQU   *                                                        79020000
         L     RETURN,ADJSV             RESTORE POINTER                 79040000
         B     D4(,RETURN)              RETURN                          79060000
ADJ20    EQU   *                                                        79080000
         ST    RETURN,ADJSV             SAVE RETURN POINTER             79100000
ADJ25    EQU   *                                                        79120000
         SET   SNMFND,OFF               INDICATE IN OPERAND             79140000
         L     INPTR,OPNDPTR            BUMP TO OPERAND FIELD           79160000
ADJ30    BAL   TLINK,SKPBLK             GO FIND NEXT PARAMETER          79180000
         GOIF  SNOFND,ON=ADJ40          BRANCH IF NOT FOUND YET         79200000
         L     TWKREG1,ENDATA           MAKE ENDATA ADJUSTMENT          79220000
         SH    TWKREG1,MINDIF           FOR 1ST CARD IN STATEMENT       79240000
         ST    TWKREG1,ENDATA           BEFORE SHIFTING                 79260000
         L     PARAM1,INPUT                                             79280000
         BAL   TLINK,SHFTDTA            SHIFT DATA                      79300000
         B     ADJOUT                   RETURN                          79320000
ADJ40    EQU   *                                                        79340000
         MVC   DTLENG(L'DTLENG),TCNTLN2                                 79360000
ADJ45    EQU   *                                                        79380000
         GOIF  SPRVCT,OFF=ADJOUT2       ELSE,CHECK IF TO BE CONTINUED   79400000
         L     INPTR,MINPUT                                             79420000
         BAL   RETURN,READATA           READ NEXT CARD                  79440000
         L     INPTR,MINPUT                                             79460000
         BAL   TLINK,SKPBLK             CHECK IF PARAM STARTS HERE      79480000
         GOIF  SNOFND,ON=ADJ45          IF NOT, NEXT CARD               79500000
         L     INPTR,ENDATA                                             79520000
         BAL   TLINK,GETDNT            YES, READ IN BUFFER FULL         79540000
         B     ADJOUT                   GO EDIT THEM                    79560000
ADJOUT2  EQU   *                                                        79580000
         L     RETURN,ADJSV             RESTORE POINTER                 79600000
         BR    RETURN                   RETURN TO CALLER                79620000
BUMPD    EQU   *                                                        79640000
         LH    RCNT,DTLENG              GET DATA LENGTH                 79660000
         SH    RCNT,COLCTR              MINUS CURRENT LENGTH            79680000
         AR    INPTR,RCNT               ADD INTO INPTR                  79700000
         BR    RETURN                   RETURN TO CALLER                79720000
SHFTDTA  EQU   *                                                        79740000
         L     TWKREG1,MINPUT           GET BEGIN OF BUFFER             79760000
         L     TWKREG2,ENDWKA           COMPUTE DATA MOVE LENGTH        79780000
         SR    TWKREG2,INPTR                                            79800000
         LR    PARAM2,INPTR                                             79820000
         CH    TWKREG2,H255             DO WE SHIFT MORE THAN 255       79840000
         BNH   SHIFT                    MOVE IF NOT OVER 255 CHAR       79860000
         MVC   D0(MAXCNT,TWKREG1),D0(PARAM2) ELSE, MOVE 255 FIRST       79880000
         SH    TWKREG2,H255             MAKE ADJUSTMENT                 79900000
         AH    TWKREG1,H255             TO MOVE THE REMAINING           79920000
         AH    PARAM2,H255              NUMBER OF BYTES                 79940000
         BCTR  TWKREG2,0                REDUCE MOVE LENGTH BY 1         79960000
SHIFT    EX    TWKREG2,SHMOVE           GO SHIFT DATA INTO WORK AREA    79980000
         SR    INPTR,PARAM1             NUMBER OF BYTES SHIFTED         80000000
         LH    RCNT,CRDCTR              GET CARD NUMBER                 80020000
         LH    TWKREG2,COLCTR           GET ACCUMULATED NUM OF COL      80040000
         AR    TWKREG2,INPTR            ADD ADDITIONAL NUM OF COLUMNS   80060000
COUNT    CH    TWKREG2,DTLENG           STILL IN THE SAME CARD OR NOT   80080000
         BL    COUNTX                   YES.                            80100000
         SH    TWKREG2,DTLENG                                           80120000
         AH    RCNT,H1                                                  80140000
         MVC   DTLENG(L'DTLENG),TCNTLN2 SET DATA LENGTH                 80160000
         B     COUNT                    LOOP UNTIL END OF FIELD         80180000
COUNTX   EQU   *                                                        80200000
         STH   TWKREG2,COLCTR           SAVE COUNTERS                   80220000
         STH   RCNT,CRDCTR                                              80240000
         L     TWKREG1,ENDATA                                           80260000
         SR    TWKREG1,INPTR            FIND OUT ENDATA AFTER SHIFTING  80280000
         ST    TWKREG1,ENDATA           WHICH IS NEXT AVAILABLE LOC     80300000
         LR    INPTR,TWKREG1            FOR NEXT CARD                   80320000
GETDNT   ST    TLINK,RTNSV1             SAVE RETURN POINT               80340000
GETDTA   EQU   *                                                        80360000
         GOIF  SPRVCT,OFF=GETDX         EXIT IF NOT CONTINUED           80380000
GETD10   L     TWKREG2,ENDWKA           ELSE, CHECK IF STILL HAVE ROOM  80400000
         SR    TWKREG2,INPTR            FOR ONE MORE CARD               80420000
         CH    TWKREG2,DTLENG                                           80440000
         BNH   GETDX                    NO MORE ROOM, EXIT.             80460000
         BAL   RETURN,READATA           GET ONE CARD                    80480000
         L     INPTR,ENDATA                                             80500000
         B     GETDTA                   GET NEXT CARD                   80520000
         SPACE                                                          80540000
R9SAVE   EQU   OPCDPTR                                                  80560000
READATA  ST    RETURN,R9SAVE                                            80580000
         L     RETURN,ARDSRC05          GET BRANCH ADDRESS              80600000
         BALR  RETURN,RETURN            READ IT IN                      80620000
         DC    AL2(RONECNT-RFSTCRD)     .                               80640000
         GOIF  SINEOF,OFF=READATA5      EOF NOT ALLOWED        @OX07290 80650005
         LA    R10,ERR263               LOAD ERR MSG NR        @OX07290 80652005
         B     JABORT                   GEN ERR MSG, TERMINATE @OX07290 80654005
READATA5 EQU   *                                               @OX07290 80656005
         LA    R11,SZCMT                                                80660000
         BAL   RETURN,OPUTL             GET O/P BUFFER                  80680000
         BAL   RETURN,HDINIT            INITIALIZE HEADER               80700000
         SET   JPSOP,ON                 INDICATE ASSEMBLER OP           80720000
         SET   JNOCNT,ON                PRINT-ONLY, NO STMT NUMBER      80740000
         SET   JTPROTO                  INDICATE PROTO                  80760000
         GOIF  SMI,OFF=GETD20           BRANCH IF NOT MI                80780000
         SET   JTCALL                   ELSE, RESET IOC                 80800000
GETD20   EQU   *                                                        80820000
         BAL   RETURN,PRESUB            OUTPUT PRE-SUB RECORD           80840000
         L     RETURN,R9SAVE                                            80860000
         BR    RETURN                   RETURN                          80880000
GETDX    EQU   *                                                        80900000
         L     INPTR,MINPUT             RESTORE INPTR                   80920000
         L     TLINK,RTNSV1             RESTORE RETURN POINT            80940000
         BR    TLINK                    RETURN TO CALLER                80960000
SHMOVE   MVC   D0(0,TWKREG1),D0(PARAM2) OFF-THE-LINE MOVE               80980000
PRESUB   EQU   *                                                        81000000
         L     TWKREG1,JCTBGN           COMPUTE DIF B/ BEGIN COL AND    81020000
         S     TWKREG1,JBEGCL           CONT'N COL TO DETERMINE PRE-SUB 81040000
         LR    RCNT,INPTR               RECORD BEGIN LOCATION           81060000
         SR    RCNT,TWKREG1                                             81080000
PRESUB1  EQU   *                                                        81100000
         ST    RETURN,RTNSV                                             81120000
         SET   SCTLRTN,ON                                               81140000
         B     WRAPF1                   OUTPUT PRE-SUB RECORD           81160000
RECLN    EQU   *                                                        81180000
         LR    TWKREG1,INDEXP                                           81200000
         SR    TWKREG1,INDEXO           CALCULATE AND                   81220000
         STH   TWKREG1,JTRLI            SAVE RECORD LENGTH              81240000
         BR    RETURN                   RETURN TO CALLER                81260000
*                                                                       81280000
SKMNDST  SET   SKPMND,ON                FLUSH MACRO DEFINITION          81300000
         SET   SBDPROTO,ON              BAD PROTO                       81320000
STEND    EQU   *                                                        81340000
         SET   SXPRTO,OFF                                               81360000
         MVI  PARMSTAT,D0                                               81380000
CNTFLSH  L     INPTR,INPUT                                              81400000
         BAL   TLINK,GETDNT             FLUSH A BUFFER FULL OF CONS     81420000
         GOIF  SPRVCT,ON=CNTFLSH        BRANCH IF STILL MORE TO FLUSH   81440000
         LA    R11,D8                   LESE, ...                       81460000
         BAL   RETURN,OPUTL             GET O/P BUFFER FOR              81480000
         MVC   JTRLI(L'PPHD),PPHD       END-OF-PARAM RECORD             81500000
PROTOUT  JRETURN                        RETURN TO CALLER                81520000
*                                                                       81540000
PPHD     DS    0CL8                     PARAM END RECORD                81560000
         DC    AL2(D8)                  RECORD LENGTH                   81580000
         DC    AL1(JPSOP,D0)            FLAGS                           81600000
         DC    AL1(JTPEND,D0)           OP CODE                         81620000
         DC    AL1(D0,D0)               NOT USED                        81640000
         DS    0F                                                       81660000
BLDPMT   EQU   *                                                        81680000
         BAL   R12,MTENTRY1             BUILD MT                        81700000
         LA    INPTR,D1(,INPTR)                                         81720000
         ST    INPTR,FPTRSV             UPDATE POINTER                  81740000
         SET   (DECMA,DEEQL),ON                                         81760000
         BR    RETURN                   RETURN TO CALLER                81780000
         SPACE 3                                                        81800000
         EJECT                                                          81820000
MCALLIN  EQU   *                                                        81840000
         SET   JTCALL                   INDICATE MACRO CALL             81860000
         SET   SMI,ON                                                   81880000
MACPRM   BAL   RETURN,DTADJ             MAKE DATA ADJUSTMENT            81900000
         B     PRESTEND                 END STMT IF RETURN HERE         81920000
         GOIF  SNMFND,OFF=MACPRM0       BRANCH IF NO NAME               81940000
         BAL   RETURN,MPOPND            EDIT THE NAME PARAMETER         81943000
         GOIF  JSUBOPND,ON=MACPRM2      NAME WAS VARIABLE SYMBOL        81946000
         GOIF  NMPURE,ON=BADNAME        BR IF NAME SCAN HAD IMPURITY    81949000
         B     MACPRM2                  GO ON TO DO OPERAND             81952000
MACPRM0  EQU   *                                                        81955000
         LA    R11,SZMI                 PREPARE TO OUTPUT               81960000
         BAL   RETURN,OPUTL             OMITTED OPERAND                 81980000
         MVC   D0(L'OMTNM,INDEXO),OMTNM FOR MACRO CALL NAME             82000000
MACPRM1  BAL   RETURN,MPOPND            EDIT NEXT OPERAND               82020000
MACPRM2  GOIF  SUBLST,ON=MACPRM1        NEXT PARAM IF IN SUBL           82040006
         GOIF  SNMFND,OFF=MACPRM1       OR IN OPERAND FIELD             82060000
         BAL   RETURN,ADJ20             ELSE ONE MORE DATA ADJUSTMENT   82080000
         B     STEND                    END STATEMENT IF RETURN TO HERE 82100000
         B     MACPRM1                  NEXT OPERAND IF RETURN TO HERE  82120000
PRESTEND LA    R11,SZMI                 PREPARE TO OUTPUT               82140000
         BAL   RETURN,OPUTL             OMMITTED OPERAND                82160000
         MVC   D0(L'OMTNM,INDEXO),OMTNM FOR MACRO CALL NAME             82180000
         B     STEND                    NOW FLUSH                       82200000
         SPACE 3                                                        82220000
MPOPND   EQU   *                                                        82240000
         ST    RETURN,MPOPSV            SAVE RETURN LINKAGE             82260000
MIX      LA    R11,SZMI                                                 82280000
         BAL   RETURN,OPUTL             GET O/P BUFFER                  82300000
         BAL   RETURN,HDINIT            INITIALIZE HEADER               82320000
         ST    INPTR,FPTRSV             SAVE INPTR                      82340000
         ST    INDEXP,OFPTRSV           SAVE HEADER DATA POINTER        82360000
         LA    R14,MPHDL(,INDEXP)       GET HDR RECORD LENGTH           82380000
         ST    R14,MTXTP                SAVE META TEXT POINTER          82400000
         SR    R14,INDEXO               COMPUTE OPERAND POINTER         82420000
         STH   R14,JTOPP                AND SAVE                        82440000
         SET   POSSUBL,OFF              INIT SUBLIST 1ST SCAN SWITCH    82460000
         SET   JTCPPOS                  ASSUME POSITIONAL CALL          82480000
         SET   JPSOP,ON                                                 82500000
*                                                                       82520000
         BAL   RETURN,NEXTPARM          EDIT ONE PARAMETER              82540000
MIX5     EQU   *                                                        82560000
         CLI   MSERR,D0                 TEST FOR ERRORS                 82580000
         BE    MIX7                     KEEP GOING IF NONE              82600000
         GOIF  MXRPRN,ON=UNBAL1         BR IF PAREN NOT PAIRED @AX12896 82605006
         CLI   JTIOP,JTCPKEY            KEYWORD CALL PARM?     @AY14037 82607000
         MVC   D0(L'OMTNM,INDEXO),OMTNM OMITTED PARM RECORD             82610000
         BNE   MIX6                     NOT KW DONT CH OPCODE  @AZ19665 82610400
         MVI   JTIOP,JTCPKEY            THIS WAS A KW OPERAND  @AY14037 82610700
MIX6     GOIF  SUBLST,OFF=MIX8          IN SUBLIST ?           @AZ19665 82611000
         SET   MPSB,ON                  YES MARK IT            @AZ19665 82611300
         B     MIX8                     THE RECORD IS PERFECT AS IS     82612000
MIX7     EQU   *                                                        82615000
         BAL   RETURN,WRAPOPND          ELSE WRAP UP OPERAND            82620000
MIX8     CLI   D0(INPTR),JRPARN         BRANCH IF ....                  82640000
         BNE   MPX10                    BRANCH IF NOT                   82660000
         BAL   R12,DPARCT               END OF SUBLIST                  82680006
         LA    INPTR,D1(,INPTR)         BUMP POINTER                    82700000
         BH    MPX10                    GO ON IF HIGH          @AY14037 82720000
         BL    UNBAL                    GO TEST DELIM          @AY14037 82722000
         SET   (MPSB,MPSBL),ON          MARK LAST SUBL REC     @AY14037 82724000
         B     MPX10                    GO ON MAY BEE MORE     @AY14037 82726000
UNBAL1   GOIF  (ALTERN),OFF=UNBAL       BR: NOT ALTERNATE      @OX12896 82730006
         SET   SUBLERR,ON               IND ERR IN SUBL        @OZ06551 82732006
         SET   (ALTERN),OFF             RESET SW               @AX12896 82734006
UNBAL    EQU   *                                               @AX12896 82736006
         BAL   TLINK,ABSERR             LOG ERROR ON UNP PARENS@OZ06551 82740006
         DC    AL1(10*16+SEV24)         GO TO SKMNDST RTN VIA ABSERR    82760000
         DC    AL1(ERR24)               UNBALANCED PAREN                82780000
MPX10    CLI   D0(INPTR),JCOMMA                                         82800000
         BE    MPCMA                    COMMA                           82820000
         CLI   D0(INPTR),JBLANK         OR BLANK                        82840000
         BE    MPBLK                    BLANK MEANS END OF STMT@OX19887 82860000
         LA    R11,SZCMT                ROOM FOR NEXT RECORD   @OX19887 82862000
         BAL   RETURN,OPUTL             PUT OUT PREVIOUS REC   @OX19887 82864000
         BAL   TLINK,ABSERR             LOG THE ERROR AND...   @OX19887 82866000
         DC    AL1(9*16+SEV24)          RETURN TO STEND AFTER..@OX19887 82868000
         DC    AL1(ERR24)               PARENTHESIS ERROR      @OX19887 82870000
MPBLK    EQU   *                                                        82880000
         GOIF  SNMFND,ON=MPOPOUT        EXIT IF EDITING NAME FIELD      82900000
         B     STEND                    ELSE, WRAP UP STATEMENT         82920000
         SPACE 3                                                        82940000
MPCMA    EQU   *                                                        82960000
         SET   (ALTERN,ENDSUBL),OFF     RESET SW               @OZ06551 82970006
         SET   DECMA,ON                 INDICATE END OPND COMMA PASSED  82980000
         LA    INPTR,D1(,INPTR)         BUMP OVER COMMA                 83000000
         GOIF  SNMFND,OFF=MPCMA1        GO ON IF NOT NAME FIELD         83020000
         GOIF  SUBLST,ON=MPOPOUT        OK IF IN SUBLIST                83040000
         BCT   INPTR,BADNAME            OR GO TO LOG ERROR              83060000
MPCMA1   EQU   *                                                        83080000
         L     PARAM1,MINPUT                                            83100000
         BAL   TLINK,SHFTDTA            SHIFT DATA                      83120000
         CLI   D0(INPTR),JBLANK         IS IT AN ALTERNATE FORMAT       83140000
         BNE   MPOPOUT                  BRANCH IF NOT                   83160000
         GOIF  SNOCNT,ON=MPOPOUT        OMITTED  IF NO CONT'N ALLOWED   83180000
         SET   ALTERN,ON                IND ALTENATE FORM      @OZ06551 83190006
         BAL   RETURN,BUMPD             BUMP OVER COMMENTS              83200000
         L     PARAM1,MINPUT                                            83220000
         BAL   TLINK,SHFTDTA            SHIFT DATA                      83240000
         SPACE 3                                                        83280000
MPOPOUT  EQU   *                                                        83300000
         SET   (DSDTX,DECMA,DEEQL,DLPRN),OFF RESET INDICATORS           83320000
         L     RETURN,MPOPSV                                            83340000
         BR    RETURN                   RETURN TO CALLER                83360000
         SPACE 3                                                        83380000
NEXTPARM EQU   *                        EDIT NEXT OPERAND               83400000
         MVI   FLGBYT,PARMFLG           ASSUME POSITIONAL PARAM         83420000
         SET   SKWPRM,OFF          RESET KWD INDICATOR                  83440000
NEXTPM   EQU   *                                                        83460000
         ST    RETURN,NEXPSV            SAVE RETURN LINKAGE             83480000
         ST    INPTR,FSTGL              SAVE BEGIN OF STRING            83500000
NEXTPM1  EQU   *                                                OX01771 83510002
         MVI   HDF,D0                   INIT. FLAG BYTE                 83520000
NEXTT    EQU   *                                                        83540000
         SET   SCNCAT,OFF               RESET INDICATOR                 83560000
         MVI   MSERR,D0                                                 83580000
         GOIF  SUBLST,ON=PTSUBL5        BRANCH IF EDITING SUBLIST       83600000
         CLI   D0(INPTR),JLPARN         TEST IF SUBLIST                 83620000
         BNE   NEXTP                    BRANCH IF NOT                   83640000
         LA    INPTR,D1(,INPTR)         BUMP POINTER                    83660000
         GOIF  POSSUBL,ON=PTSUBL        GO EDIT IF GOOD SUBLIST         83720000
         SET   POSSUBL,ON               INIDCATE POSS SUBL CANDIDATE    83740000
         BAL   R12,APARCT               UP PAREN COUNT FOR L-PAREN      83760000
         B     PCSTGIN                  PROC FIRST PASS AS C-STRING     83780000
NEXTP1   EQU   *                                                        83800000
         LA    INPTR,D1(,INPTR)         BUMP POINTER                    83820000
NEXTP    L     LINK,ATRTEST             POINT TO TRTEST                 83840000
         BALR  RETURN,LINK              TRT STRING                      83860000
         AR    R3,R3                                                    83880000
         LH    R14,PRMTBL(R3)           PREPARE TO BRANCH TO ITS        83900000
         B     D0(R14,BASE3)            CORRESPONDING ROUTINE           83920000
*                                                                       83940000
NEXRTN   L     RETURN,NEXPSV            RESTORE RETURN POINT            83960000
         BR    RETURN                   RETURN TO CALLER                83980000
         SPACE 3                                                        84000000
PRMTBL   EQU   *                        CATEGORIES                      84020000
         DC    AL2(PDSDT-MIPRTOIN)      0 = DECIMAL                     84040000
         DC    AL2(POSYM-MIPRTOIN)      1 = ALPHAMERIC                  84060000
         DC    AL2(PAMPR-MIPRTOIN)      2 = &                           84080000
         DC    AL2(PTERM-MIPRTOIN)      3 = ,=.) OR BLANK               84100000
         DC    AL2(PLPAR-MIPRTOIN)      4 = (                           84120000
         DC    AL2(PQTMD-MIPRTOIN)      5 = '                           84140000
         DC    AL2(PCSTG-MIPRTOIN)      6 = +-*/                        84160000
         DC    AL2(PLATR-MIPRTOIN)      7 = L' I' S' K' N'              84180000
         DC    AL2(PXBCT-MIPRTOIN)      8 = C' B' X'                    84200000
         DC    AL2(PTATR-MIPRTOIN)      9 = T'                          84220000
         DC    AL2(PDSYM-MIPRTOIN)      10= AND OR NOT                  84240000
         DC    AL2(PDSYM-MIPRTOIN)      11= EQ NE LT LE GT GE           84260000
         DC    AL2(PEDTA-MIPRTOIN)      12= NON ASSEMBLER               84280000
DQTMD    LA    INPTR,D1(,INPTR)                                         84300000
PQTMD    EQU   *                                                        84320000
         GOIF  POSSUBL,OFF=PQTMD3       ENDING ' ?             @OZ01697 84330004
         GOIF  DQUOT,ON=PQTMD7          BEEN HERE BEFORE       @OZ01697 84332004
PQTMD3   EQU   *                                               @OZ01697 84334004
         SET   DQUOT,ON                 ENTER QUOTE MODE                84340000
         SET   OPNDSTR,ON               SET C STG FLAG                  84360000
PQTMD5   LA    INPTR,D1(,INPTR)                                         84380001
PQTMD7   EQU   *                                               @OZ01697 84382004
         C     INPTR,ENDATA             SEE IF PAST END OF DATA OX00225 84390001
         BNL   PEDTA1                   BRANCH IF YES           OX00225 84392001
         CLI   D0(INPTR),JQUOTE         TEST IF ENDING QUOTE            84400000
         BNE   PQTMD15                  BRANCH IF NOT                   84420000
         CLI   D1(INPTR),JQUOTE         POSSIBLY, IF NOT DOUBLE QUOTE   84440000
         LA    INPTR,D1(,INPTR)                                         84460001
         BE    PQTMD5                   TOO BAD, DOUBLE QUOTE           84480000
         BCTR  INPTR,0                  BACK UP                         84500000
PQTMDEX  EQU   *                                                        84520000
         SET   DQUOT,OFF                PAIRED QUOTE                    84540000
PQTMD10  EQU   *                                                        84560000
         LA    INPTR,D1(,INPTR)         UPDATE POINTER                  84580000
         SET   DSDTX,ON                 INDICATE DISALLOW SDT           84600000
         BAL   RETURN,TENDOP            TEST END OF OPERAND             84620000
         B     NEXTP                    CONTINUE EDITING                84640000
         B     PXBCOUT                  WRAP UP OPERAND                 84660000
PQTMD15  EQU   *                                                        84680000
         CLI   D0(INPTR),JAMPER         LOOK FOR NEXT AMPERSAND         84700000
         BNE   PQTMD5                   BRANCH IF NOT                   84720000
         CLI   D1(INPTR),JAMPER         TEST IF DOUBLE AMPERSAND        84740000
         BNE   VSRTENT                  SINGLE AMPERSAND - ASSUME V SYM 84760000
         LA    INPTR,D1(,INPTR)         BUMP POINTER                    84780000
         B     PQTMD5                   EDIT AS C STG                   84800000
VSRTENT  EQU   *                        ASSUME VARIABLE SYMBOL          84820000
         GOIF  POSSUBL,ON=PCSTG         OMIT ON 1ST SUBL SCAN   OX02973 84830031
         ST    INPTR,MEZZOPTR           SAVE ENDING POINTER             84840000
         BAL   R12,MTENTRY              PUT OUT PREVIOUS TEXT           84860000
         BAL   RETURN,VSRTN             EDIT V SYM                      84880000
         BCT   INPTR,PQTMD5             CONTINUE CODE MODE              84900001
*                                                                       85100000
PXBCT    EQU   *                                                        85120000
         GOIF  DSDTX,ON=DQTMD           EDIT AS QT MODE IF DISALLOW SDT 85140000
         L     LINK,AXBCIN              GET LINK ADDRESS                85160000
PESDT    EQU   *                                                        85180000
         SET   DMIENT,ON                                                85200000
         BAL   RETURN,RTNXFR            BRANCH OUT                      85220000
         L     BASE3,AMIPRTO            NEED TWO FOR SAFTY              85240000
         L     BASE3,AMIPRTO            RESTORE BASE3                   85260000
         BCT   R12,INVSDTP              OR GO LOG ERROR                 85280000
PXBCT1   EQU   *                                                        85300000
         SET   OPNDTRM,ON               SDT FLAG                        85320000
         BAL   RETURN,TENDOP            TEST END OPERAND                85340000
         B     PXBCT2                   ON RETURN HERE, KEEP SCANNING   85360000
PXBCOUT  EQU   *                                                        85380000
         BAL   R12,MTENTRY              BUILD M.T.                      85400000
         B     NEXRTN                   RETURN TO POINT OF ORIGIN       85420000
PXBCT2   SET   OPNDSTR,ON                                               85440000
         SET   DSDTX,ON                 DISALLOW SDT                    85460000
         B     NEXTP                    CONTINUE TO SCAN FIELD          85480000
         SPACE 3                                                        85500000
MTENTRY  EQU   *                                                        85520000
         C     INPTR,FPTRSV                                             85540000
         BCR   BEQ,R12                  RETURN IF NOTHING TO PUT OUT    85560000
         SET   SCNCAT,ON                ELSE, MEANING CONCATENATION     85580000
MTENTRY1 EQU   *                                                        85600000
         L     R14,MTXTP                GET BUFFER LOCATION             85620000
         MVI   MPMCFLG,JTMCS            ENTER C STG FLAG                85640000
         L     GSPTR,FPTRSV                                             85660000
         LR    R15,INPTR                COMPUTE STRING LENGTH           85680000
         SR    R15,GSPTR                                                85700000
         STC   R15,MPMCLNG              AND SAVE                        85720000
         BCTR  R15,0                    MAKE IT MOVE LENGTH             85740000
         EX    R15,STGMV                MOVE STG TO BUFFER              85760000
         LA    R14,D3(R15,R14)          UPDATE POINTER AND              85780000
         ST    R14,MTXTP                SAVE                            85800000
         BR    R12                      RETURN TO CALLER                85820000
*                                                                       85840000
STGMV    MVC   MPMCSTG(0),D0(GSPTR)     OFF-THE-LINE MOVE               85860000
         SPACE 3                                                        85880000
TENDOP   EQU   *                                                        85900000
         GOIF  (SUBLST,POSSUBL),NONE=TENDOP0 BYPASS ON NO POSS SUBLIST  85920000
         CLI   D0(INPTR),JEQUAL         TERMINATOR EQUAL SIGN           85940000
         BNE   TENDOP0                  NO, GO CHECK FOR COMMA          85960000
         BR    RETURN                   PROC '=' IN ()'S AS CHAR STRING 85980000
TENDOP0  EQU   *                                                        86000000
         CLI   D0(INPTR),JCOMMA         RETURN TO HERE IF GOOD SDT BUT  86020000
         BE    TENDOP2                  TERMINATOR MUST BE A COMMA      86040000
         CLI   D0(INPTR),JBLANK         OR --                           86060000
         BE    TENDOP1                  A BLANK,                        86080000
         CLI   D0(INPTR),JRPARN         R PAREN IS GOOD TERMINATOR TOO  86100000
         BCR   BNE,RETURN               RETURN IF NOT                   86120000
TENDOP3  EQU   *                                                        86140000
         GOIF  POSSUBL,ON=VALSUBL       CHECK VALID SUBLIST TERMINATOR  86160000
         GOIF  SUBLST,OFF=(RETURN)      RETURN IF NOT EDITING SUBLIST   86180000
         CLI   PRNLVL1,D1               TEST IF END OF SUBOPERAND       86200000
         BCR   BHI,RETURN               NO, PART OF C STG               86220000
         BE    TENDOPZ                  BRANCH IF EQUAL                 86240000
         SET   MXRPRN,ON                ELSE, EXCESS RIGHT PARENS       86260000
TENDOPZ  EQU   *                                                        86280000
         MVC   MPOPSV(L'MPOPSV+L'NEXPSV),SUBSAVE RESTORE RTN LINKAGES   86300000
         SET   MPSBL,ON                 INDICATE LAST SUBOPND           86320000
         SET   SUBLST,OFF                                               86340000
         B     D4(,RETURN)              AND RETURN                      86360000
TENDOP1  CLI   PRNLVL1,D0               TEST IF BLANK AT ZERO LEVEL     86380000
         BE    D4(,RETURN)              YES, A TERMINATOR               86400000
         GOIF  POSSUBL,ON=GOODSUBL      ALTR FORMAT, ASSUME VALID SUBL  86420000
         B     BLKERR                   NO BLANK AT ANY PAREN LEVEL     86440000
TENDOP2  CLI   PRNLVL1,D1               AND COMMA MUST BE QUALIFIED     86460000
         BCR   BHI,RETURN               PART OF C-STG                   86480000
         BL    D4(,RETURN)              A TERMINATOR AT ZERO-PAREN LVL  86500000
         GOIF  SUBLST,OFF=(RETURN)      IN SUBLST IF AT ONE-PRN LVL     86520000
         B     D4(,RETURN)              IT IS                           86540000
         SPACE 3                                                        86560000
VALSUBL  CLI   PRNLVL1,D1               END OF LAST SUBOPERAND          86580000
         BCR   BHI,RETURN               NO, CONTINUE IN C-STRING MODE   86600000
         BE    VALSUBL1                 YES, TEST IF VALID SUBLIST      86620000
         SET   AMPER1,OFF               RESET FOR NEXT CHAR     OX04106 86630031
         B     UNBAL                    OTHERWISE, ERR ON UNBAL PARENS  86640000
VALSUBL1 CLI   D1(INPTR),JCOMMA         R-PAREN FOLL'D BY COMMA         86660000
         BE    GOODSUBL                 YES, PROC AS GOOD SUBL          86680000
         CLI   D1(INPTR),JBLANK         R-PAREN FOLL'D BY BLANK         86700000
         BNE   BADSUBL                  NO, PUT OUT BAD SUBL AS C-STG   86720000
GOODSUBL L     INPTR,FSTGL              BACK UP TO BEGIN POINT OF SUBL  86740000
         GOIF  SKWPRM,OFF=GOODSUB       CONTINUE ON NO KEYWORD          86760000
         L     INPTR,FPTRSV             BACK TO L-PAREN AFTER '=' SIGN  86780000
GOODSUB  SET   OPNDSTR,OFF              NO LONGER C-STRING              86800000
         SET   DSDTX,OFF                PREPARE TO START OVER           86820000
         MVI   PRNLVL1,D0               RESET PAREN COUNT TO ZERO       86840000
         SET   AMPER1,OFF               RESET FOR NEXT CHAR     OX04106 86850031
         B     NEXTT                    NOW, PROCESS GOOD SUBLIST       86860000
BADSUBL  SET   POSSUBL,OFF              RESET SUBLIST SCAN SWITCH       86880000
         GOIF  AMPER1,OFF=BADSUBL1      DO NOT USE AMPER SW     OX04106 86882031
         SET   AMPER,ON                 INDICATE VARSYM         OX01771 86890002
BADSUBL1 SET   AMPER1,OFF               RESET FOR NEXT CHAR     OX04106 86892031
         BR    RETURN                   PUT INVALID SUBL OUT AS C-STG   86900000
         SPACE 3                                                        86920000
PLPAR    EQU   *                                                        86940000
         BAL   R12,APARCT               UP PAREN COUNT                  86960000
         SET   DLPRN,ON                                                 86980000
         B     PCSTG                    PART OF C STG                   87000000
         SPACE 3                                                        87020000
PTERM    EQU   *                                                        87040000
         CLI   D0(INPTR),JCOMMA         TEST IF A COMMA                 87060000
         BE    PTERMC                   YES - TEST IF OMITTED OPERAND   87080000
         CLI   D0(INPTR),JBLANK         TEST IF A BLANK                 87100000
         BE    PTERMB                   YES - TEST IF OMITTED OPERAND   87120000
         CLI   D0(INPTR),JRPARN         TEST IF R PAREN                 87140000
         BNE   PCSTG                    EDIT AS C STG IF NONE ABOVE     87160000
         BAL   RETURN,TENDOP3           TEST IF END OF OPERAND          87180000
         B     PTERMP                   BRANCH IF NOT                   87200000
         B     OMITOP                   LOG OMITTED OPERAND             87220000
PTERMP   BAL   R12,DPARCT               TAKE CARE OF PAREN COUNT        87240002
         GOIF  AMPER,OFF=PCSTG          NO VARSYM               OX01771 87250002
         L     INPTR,FSTGL              POINT TO BEG OF STRING  OX01771 87260002
         B     NEXTPM1                  IT IS PART OF C STG     OX01771 87270002
PTERMC   EQU   *                                                        87280000
         CLI   PRNLVL1,D1               TEST PAREN STATUS               87300000
         BH    PCSTG                    PART OF C STG                   87320000
         BL    OMITOP                   OMITTED OPERAND                 87340000
         GOIF  SUBLST,OFF=PCSTG         PART OF C STG IF NOT IN SUBLIST 87360000
OMITOP   EQU   *                                                        87380000
         SET   OPNDOMT,ON               INDICATE OMITTED PARAM          87400000
         B     NEXRTN                   EXIT                            87420000
*                                                                       87440000
PTERMB   EQU   *                                                        87460000
         CLI   PRNLVL1,D0               BLANK MAY NOT APPEAR IN PAIRED  87480000
         BE    OMITOP                   MUST BE OMITTED OPERAND         87500000
         B     BLKERR                   BLANK DISALLOWED IN ()'S        87520000
         SPACE 3                                                        87540000
PAMPR    EQU   *                                                        87560000
         GOIF  AMPER,OFF=PAMPR05        NO BAD SUBL W VARSYM    OX01771 87570002
         SET   AMPER,OFF                RESET VARSYM FLAG       OX01771 87572002
         SET   POSSUBL,OFF              NO SUBL                 OX01771 87574002
PAMPR05  EQU   *                                                OX01771 87576002
         CLI   D1(INPTR),JAMPER         TEST FOR DOUBLE AMPERS  OX04106 87626031
         BE    PAMPR07                  GO BUMP POINTER         OX04106 87676031
         GOIF  POSSUBL,OFF=PAMPR08      CHAR STG ON 1 SUBL SCAN OX04106 87678031
         SET   AMPER1,ON                IND VARSYM IN POSSUBLST OXO4106 87678431
         B     PCSTG                    TREAT AS CHAR STG       OX04106 87678831
PAMPR07  LA    INPTR,D1(,INPTR)         BUMP POINTER            OX04106 87679231
         B     PCSTG                    TREAT AS CHAR STG       OX04106 87679631
PAMPR08  BAL   R12,MTENTRY              ELSE, PUT OUT C STG     OX04106 87680031
         ST    R1,FPTRSV                UPDATE STRING POINTER           87700000
         BAL   RETURN,VSRTN             EDIT VARIABLE SYMBOL            87720000
         BAL   RETURN,TENDOP            TRY TO WRAP UP OPND             87740000
         B     PAMPR1                   CANCEL PP FLAG                  87760000
         B     NEXRTN                   EXIT IF RETURN TO HERE          87780000
PAMPR1   SET   OPNDPRM,OFF              BAD PASSED PARAMETER            87800000
         B     NEXTP                    EDIT AS C STG                   87820000
*                                                                       87840000
VSRTN    EQU   *                                                        87860000
         ST    RETURN,VSRSV             SAVE REUTRN LINKAGE             87880000
         GOIF  SXPRTO,ON=ILPRTKY        PROTO KWD OPND MAY NOT BE V SYM 87900000
         SET   OPNDSTR,ON               ASSUME NOT PASSED PARAM         87920000
         ST    INDEXP,VSRSV1            SAVE HEADER DATA POINTER        87940000
         L     INDEXP,MTXTP             GET MT POINTER                  87960000
         SET   DMIENT,ON                                                87980000
         OI    JHWORD2+1,DMIENT         SET SECOND DMIENT SW   @AZ13722 87990000
         L     LINK,AVARSYM             GET VARSYM RTN ADDRESS          88000000
         BAL   RETURN,RTNXFR            TRANSFER                        88020000
         L     BASE3,AMIPRTO            RESTORE BASE REG                88040000
         GOIF  RMPURE,OFF=VSRTN3        CONTINUE IF NO ERROR            88060000
         SET   MXVS,ON                  FLAG TO OUTPUT OMITTED PARM     88066000
VSRTN3   EQU   *                                                        88072000
         BAL   R3,PFXRENT               FORCE OUT ALL OPERATORS STILL   88080000
         DC    AL2(JTMSTRM)             IN POSTER STACK                 88100000
         LR    INPTR,R1                 UPDATE POINTER                  88120000
         MVI   GSUMRY,D0                MASK OFF SWITCHES SET BY        88140000
         SET   (METSW,GSUBS),OFF        VARSYM ROUTINE BUT NOT WANTED   88160000
         SET   JSUBOPND,ON              OPERAND NEED SUBSTITUTION       88180000
         BCTR  INDEXP,0                 WIPE OFF END-STMT OPERATOR      88200000
         ST    INDEXP,MTXTP             SAVE MT POINTER                 88220000
         L     INDEXP,VSRSV1            RESET HEADER DATA POINTER       88240000
         L     RETURN,VSRSV             RESET RETURN LINKAGE            88260000
         GOIF  SCNCAT,ON=VSRTN5         BRANCH IF CONCATENATION         88280000
         SET   SCNCAT,ON                                                88300000
         TM    FLGBYT,VSLS                                      OX00217X88310002
               CONSIDER SYSLIST PASSED PARAM                    OX00217 88310402
         BO    VSRTN4                   BRANCH IF SYSLIST       OX00217 88312002
         TM    FLGBYT,PARMFLG           PASSED PARAM MAY NOT BE         88320000
         BNO   VSRTN5                   CONCATENATED. ANYTHING OTHER    88340000
VSRTN4   SET   (OPNDSTR,OPNDPRM),FLIP   GOOD PASSED PARAM               88360000
VSRTN5   EQU   *                                                        88380000
         CLI   D0(INPTR),JPERIOD        TEST IF CONCATENATED            88400000
         BNE   VSRTN20                  BRANCH IF NOT                   88420000
VSRTN10  EQU   *                                                        88440000
         SET   DSDTX,ON                 DISALLOW SDT                    88460000
         LA    INPTR,D1(,INPTR)         WITH C STG FLAG                 88480000
VSRTN20  EQU   *                                                        88500000
         ST    INPTR,FPTRSV             RESET POINTER, PREPARE TO       88520000
         BR    RETURN                   EDIT NEXT TERM                  88540000
*                                                                       88560000
PTATR    EQU   DQTMD                                                    88580000
*                                                                       88600000
PLATR    EQU   *                                                        88620000
         CLI   D0(INPTR),JL             TEST IF L'                      88640000
         LR    INPTR,R1                                                 88660000
         BNE   PQTMD                    BRANCH IF NOT                   88680000
         CLI   D1(INPTR),JA             TEST IF FOLLOWED BY ALPHA       88700000
         BL    PQTMD                    NO - EDIT AS QUOTED STG         88720000
         CLI   D1(INPTR),JAT                                            88740000
         BH    PQTMD                    EDIT AS QUOTED STG              88760000
*                                                                       88780000
         SPACE 3                                                        88800000
DCSTG    LR    INPTR,R1                 UPDATE POINTER                  88820000
PCSTG    EQU   *                                                        88840000
         LA    INPTR,D1(,INPTR)         BUMP OVER TERMINATOR            88860000
PCSTGIN  EQU   *                                                        88880000
         SET   OPNDSTR,ON               SET C STG FLAG                  88900000
         SET   DSDTX,ON                 DISALLOW SDT                    88920000
         BAL   RETURN,TENDOP            TEST IF END OF OPERAND          88940000
         B     NEXTP                    BRANCH IF NOT                   88960000
         B     PXBCOUT                  ELSE, BUILD MT THEN EXIT        88980000
         SPACE 3                                                        89000000
PEDTA    EQU   *                                                        89020000
         CLI   D0(INPTR),JBLANK         IF IT IS A BLANK, IT IS AN      89040000
         BE    PTERMB                   OMITTED OPERAND ENDING THE STMT 89060000
         C     INPTR,ENDATA             ELSE, TEST IF END DATA          89080000
         BL    PCSTG                    NO, IS A PART OF C STG          89100000
PEDTA1   BAL   TLINK,ABSERR             QUOTE MODE AND NO END   OX00225 89120001
         DC    AL1(9*16+SEV35)          QUOTE FOUND FOR AN ATTRIBUTE    89140000
         DC    AL1(ERR35)               END STMT VIA STEND RTN          89160000
*        LOG ERROR - OPERAND EXCEEDS 255 CHAR                           89180000
CSTGLERR BAL   TLINK,WRNERR             GO TO                           89200000
         DC    AL1(SEV42)               LOG WARNING MSG                 89220000
         DC    AL1(ERR42)               EXCEEDS 255 CHARACTERS          89240000
         AH    INPTR,H255               CHOP OFF FIRST 255 CHARACTERS   89260000
         ST    INPTR,FPTRSV             RESET STRING POINTER            89266000
         B     NEXTP                    CONTINUE WITH THIS MUCH         89272000
         SPACE 3                                                        89280000
SYMSDTCK EQU   *                                                        89300000
         GOIF  SCNCAT,ON=D4(,RETURN)    DSDT/SYM MUST STAND ALONE       89320000
         GOIF  DSDTX,OFF=(RETURN)       IF SDT ALLOWED O-SYM ALLOWED    89340000
         GOIF  DLPRN,ON=(RETURN)        DISALLOW SDT COULD STILL ALLOW  89360000
         C     INPTR,FPTRSV             O-SYM PROVIDED IT IS            89380000
         BR    RETURN                   FIRST ACTION                    89400000
         SPACE 3                                                        89420000
PDSDT    EQU   *                                                        89440000
         BAL   RETURN,SYMSDTCK          SYM/SDT MUST BE LEGITIMATE      89460000
         BE    PDSDT1                   YES, IT IS                      89480000
PDSDTX   LR    INPTR,R1                                                 89500000
         B     PCSTGIN                  EDIT AS C STG                   89520000
PDSDT1   CLI   D0(R1),JLPARN            ELIMINATE INVALID TERMINATORS   89540000
         BL    PDSDTX                   ZERO THRU EQUAL SIGN TERMINATE  89560000
         BE    PDSDTC1                  L-PAREN TERMINATES              89580000
         CLI   D0(R1),JRPARN            R-PAREN THRU SLASH              89600000
         BL    PDSDTC1                  PUT OUT SYM REF FOR + - * OR /  89620000
         BE    PDSDTC                   R-PAREN TERMINATES              89640000
         CLI   D0(R1),JBLANK            WHAT ABOUT COMMA OR BLANK       89660000
         BL    PDSDTC                   COMMA, CHECK PAREN LEVEL        89680000
         BE    PDSDTB                   BLANK, DELIMITS DSDT OR SYMBOL  89700000
         B     PDSDTX                   ANY OTHER TERMINATOR, C-STRING  89720000
PDSDTC   EQU   *                                                        89740000
         CLI   PRNLVL1,D1               COMMA IS INSIGNIFICANT IF       89760000
         BH    PQTMD10                  PAREN DON'T BALANCE             89780000
PDSDTC1  EQU   *                                                        89800000
         CH    R3,H2                    TEST IF O-SYM                   89820000
         BE    POSOSYM                  YES, POSITIONAL O-SYM           89840000
         L     LINK,ADSDTIN             GET DSDTIN ADDRESS              89860000
         B     PESDT                    GO EDIT DSDT                    89880000
         SPACE 3                                                        89900000
PDSDTB   EQU   *                        DSDT FOLLOWED BY BLANK          89920000
         CLI   PRNLVL1,D0               BLANK TERMINATOR MUST           89940000
         BE    PDSDTC1                  NOT APPEAR INSIDE PAIRED PAREN  89960000
         B     BLKERR                   ELSE ERROR, BLANK DISALLOWED    89980000
         SPACE 3                                                        90000000
POSOSYM  EQU   *                                                        90020000
         BAL   LINK,SYMSCN1             EDIT O-SYM                      90040000
         B     PCSTG                    BAD O-SYM EDIT AS C STG         90060000
         SET   OPNDORD,ON               ORDINARY SYM FLAG               90080000
         MVC   MPOSRP,D1(R11)           AND POINTER                     90100000
         BAL   RETURN,TENDOP            TRY TO WRAP UP OPERAND          90120000
         B     PCSTGIN                  CONTINUE EDIT IF NOT END OPND   90140000
         B     PXBCOUT                  ELSE, EXIT                      90160000
         SPACE 3                                                        90180000
PDSYM    LA    R3,D2                    DUMMY UP CATEGORY NUMBER        90200000
POSYM    EQU   *                                                        90220000
         CLI   D0(R1),JEQUAL            TEST IF MI KWD PARAM            90240000
         BNE   PDSDT                    EDIT AS DSDT IF NOT             90260000
         GOIF  (SUBLST,POSSUBL),ANY=DCSTG NO KWD PARM ALLOWED IN SUBL   90280000
         GOIF  OPNDSTR,ON=DCSTG         MUST BE O/SYM PRIOR TO '=' SIGN 90300000
         GOIF  SKWPRM,ON=DCSTG          BRANCH IF NOT KWD SIGN          90320000
         SET   VPTYP,ON                 INDICATE KEYWORD                90340000
         SET   JTCPKEY                  INDICATE KWD CALL               90360000
         SET   SKWPRM,ON                                                90380000
         LR    R12,R1                   DO NOT USE REG 1       @AY11215 90390006
         S     R12,FSTGL                COMPUTE KEW LEN        @AY11215 90392006
         LA    R12,D1(R12)              ADD 1 FOR EQUAL SIGN   @AY11215 90394006
         LNR   R12,R12                  MAKE IT NEGATIVE       @AY11215 90396006
         STH   R12,PARML                SAVE TOTAL LEN         @AY11215 90398006
         LR    INPTR,R1                 UPDATE POINTER                  90400000
         BAL   R12,MTENTRY1             BUILD MT                        90420000
         SET   (DECMA,DEEQL),ON                                         90440000
         LA    INPTR,D1(,INPTR)         BUMP OVER EQUAL SIGN            90460000
         ST    INPTR,FPTRSV             UPDATE POINTER                  90480000
         B     NEXTT                    EDIT KWD OPERAND                90500000
         SPACE 3                                                        90520000
PTSUBL   EQU   *                                                        90540000
         SET   POSSUBL,OFF              NOW IN SUBL,RESET SCAN SWITCH   90560000
         GOIF  SUBLST,ON=NEXTP          BEEN HERE BEFORE- PART OF C STG 90580000
         ST    INPTR,FPTRSV             THROW AWAY SUBLIST HEAD         90600000
         BAL   R12,APARCT               UP PAREN COUNT                  90620000
         SET   SUBLST,ON                INDICATE SUBLIST                90640000
         MVC   SUBSAVE(L'MPOPSV+L'NEXPSV),MPOPSV SAVE RETURN LINKAGES   90660000
         MVC   MPOPSV(L'MPOPSV+L'NEXPSV),AMIX5 ALTER RETURN LINKAGES    90680000
         MVC   OCSAVE(D1),JTIOP1        SAVE OP OCDE STATUS             90700000
         GOIF  SMI,OFF=PTSUBL1          BRANCH IF NOT FROM MI           90720000
         GOIF  SKWPRM,OFF=PTSUBL1       BRANCH IF M CALL POS SUBOPND    90740000
         MVC   JTIOP1(D1),OCSAVE        RESET OPCODE FOR SUBOPND        90760000
PTSUBL1  SET   (MPSB,MPSBF),ON          INDICATE FIRST SUBOPND          90780000
         B     NEXTP                    CONTINUE PROCESSING             90800000
PTSUBL5  EQU   *                                                        90820000
         GOIF  SXPRTO,OFF=PTSUBL6       BRANCH IF NOT PROTOTYPE         90840000
         LA    R14,MPHDL(,INDEXP)       GET HDR RECORD LENGTH           90860000
         ST    R14,MTXTP                AND SAVE                        90880000
         SR    R14,INDEXO               RESET OPERAND POINTER           90900000
         STH   R14,JTOPP                                                90920000
         MVI   HDF,D0                   INIT. FLAG BYTE                 90940000
PTSUBL6  EQU   *                                                        90960000
         MVC   JTIOP1(D1),OCSAVE        RESET OP CODE FOR SUBOPERAND    90980000
         SET   MPSB,ON                  INDICATE SUBLIST                91000000
         B     NEXTP                    EDIT SUBOPERAND                 91020000
         SPACE 3                                                        91040000
WRAPOPND EQU   *                                                        91060000
         L     R14,MTXTP                GET BASE                        91080000
         MVI   MPEMT,JTMSTRM            INSERT END STATEMENT FLAG       91100000
         LA    R14,D1(,R14)                                             91120000
         SR    R14,INDEXO               COMPUTE RECORD LENGTH           91140000
         STH   R14,JTRLI                ENTER TEXT LENGTH               91160000
         GOIF  (MPSBF,MPSB,MPSBL),OFF=TST255A B IF NOT SUB PARA@AZ24557 91162000
ADD255   LR    R14,INPTR                DO NOT USE REG 6       @AY11215 91168406
         S     R14,FSTGL                COMPUTE PARM LEN       @AY11215 91168806
         LA    R14,D1(R14)              ADD 1 FOR DELIMITER    @AY11215 91169206
         AH    R14,PARML                ADD TO PREV LEN        @AY11215 91169606
         STH   R14,PARML                SAVE TOTAL RESULT      @AY11215 91169706
         GOIF  MPSBL,OFF=END255         BR IFNOT LAST SUB PARM @AY11215 91170106
TST255   SH    R14,=H'255'              0 = 255 CHAR IN PARAM  @AZ24557 91170500
         BNP   END255A                  BR IF NOT EXEEDS 255 CH@AY11215 91170906
         BAL   TLINK,WRNERR             GEN ERR MSG 42: OPERA- @AY11215 91171306
         DC    AL1(SEV42)               ND EXEEDS 255 CHAR.    @AY11215 91171406
         DC    AL1(ERR42)                                      @AY11215 91171506
END255A  XC    PARML,PARML              CLEAR FOR MORE TESTS   @AY11215 91173506
END255   EQU   *                        END OF TEST            @AY11215 91175506
         BR    RETURN                   RETURN TO CALLER                91180000
TST255A  LR    R14,INPTR                DO NOT USE REG 6       @AZ24557 91184000
         S     R14,FSTGL                COMPUTE PARM LENGTH    @AZ24557 91188000
         AH    R14,PARML                ADD TO PREV LENGTH     @AZ24557 91192000
         B     TST255                   BR AND TEST FOR 255 CH @AZ24557 91196000
         SPACE 3                                                        91200000
         SPACE 3                                                        91220000
RTNXFR   EQU   *                                                        91240000
         L     BASE2,USEBAS             RESET BASE2 VALUE               91260000
         BR    LINK                     MAKE TRANSFER                   91280000
*                                                                       91300000
AVARSYM  DC    A(VARSYM)                VARSYM ADDRESS                  91320000
AXBCIN   DC    A(XBCSDT)                XBCSDT ADDRESS                  91340000
ADSDTIN  DC    A(DSDTIN)                DSDTIN ADDRESS                  91360000
AMIX5    DC    A(MACPRM2,MIX5)          ALTERNATE RETURN LINKAGES       91380000
         EJECT                                                          91400000
BADPARM  L     INPTR,FPTRSV             POINT BACK TO FIELD BEGIN       91420000
BADPARM1 BAL   TLINK,SNAPERRL           GO LOG ERROR- MOVE 8 CHARS      91433300
         DC    AL2(1)                   ABSOLUTE ERROR                  91440000
         DC    AL1(9*16+SEV39)          BAD PARAMETER                   91460000
         DC    AL1(ERR39)               GIVE UP STMT, NO RETURN         91480000
*                                                                       91500000
         SPACE 3                                                        91520000
BLKERR   EQU   *                                                        91540000
         GOIF  SUBLST,OFF=BLKERR1       BR IF NOT IN SUBLIST            91542000
         SET   (MPSB,MPSBL,OPNDOMT),ON  FLAG AS LAST SUBOP/OMITTED PARM 91544000
         BAL   RETURN,WRAPOPND          WRAP UP THIS PARM RECORD        91546000
         LA    R11,D8                   SIZE OF END-OF -PARM            91548000
         BAL   RETURN,OPUTL             FORCE LAST PARM RECORD          91550000
BLKERR1  EQU   *                                                        91552000
         BAL   TLINK,ABSERR             BLANK DELIMITS BUT PARENS UNBAL 91554000
         DC    AL1(9*16+SEV24)          OR BLANK DETECTED WITHIN PARENS 91560000
         DC    AL1(ERR24)               NO RETURN, TO STEND RTN         91580000
BADNAME  MVC   D0(L'OMTNM,INDEXO),OMTNM OMITTED PARM RECORD             91600000
         BAL   TLINK,WRNERR             GO LOG THE ERROR                91610000
         DC    AL1(SEV16)               INVALID CHARACTER DETECTED IN   91620000
         DC    AL1(ERR16)               THE NAME FIELD OF A MACRO INST  91640000
         B     MACPRM2                  CONTINUE WITH OPERAND           91660000
         SPACE 3                                                        91680000
ILPRTKY  EQU   *                                                        91700000
         BAL   TLINK,ABSERR             KW PARAMETER ERROR              91720000
         DC    AL1(9*16+SEV28)          NO RETURN, GO TO STEND RTN      91740000
         DC    AL1(ERR28)               VIA ABSERR                      91760000
INVSDTP  CLI   HICVAL1,J9               NOT A VALID SDT, SO ....        91780000
         BE    PCSTGIN                  C STG IF DSDT                   91800000
         L     INPTR,TPSAVE             ELSE, .....                     91820000
         B     DQTMD                    QUOTE MODE                      91840000
MPTCHA   DS    20C                      TEMPORARY PATCH AREA            91860000
         SPACE 3                                                        91880000
OMTNM    DS    0CL26                    MACRO CALL OMITTED NAME RECORD  91900000
         DC    AL2(L'OMTNM)             LENGTH                          91920000
         DC    AL1(X'80',0)             FLAG                            91940000
         DC    AL1(JTCPPOS,0)           IOC                             91960000
         DC    AL2(18,18,25,18,18)      POINTERS                        91980000
         DC    AL1(0,0,0,0,8)           HEADER DATA FLAG                92000000
         DC    AL1(0,0,0,0)             PADDING                         92020000
OMTMT    DC    AL1(JTMSTRM)             M.T. END STMT FLAG              92040000
         EJECT                                                          92060000
*********************************************************************** 92080000
*  TRANSLATE AND TEST RESULTS                                         * 92100000
*  R1 = TERMINATING CHARACTER ADDRESS                                 * 92120000
*  R3 = CATEGORY NUMBER                                               * 92140000
*       VALUE 0 = DECIMAL (1ST CHARACTER NUMERIC)                     * 92160000
*             1 = ALPH-NUMERIC (1ST CHARACTER ALPHA)                  * 92180000
*             2 = &                                                   * 92200000
*             3 = , = . ) BLANK (OPERAND TERMINATOR)                  * 92220000
*             4 = (                                                   * 92240000
*             5 = '                                                   * 92260000
*             6 = + - * /                                             * 92280000
*             7 = L' S' I' N' K'                                      * 92300000
*             8 = C' X' B'                                            * 92320000
*             9 = T'                                                  * 92340000
*            10 = AND OR NOT                                          * 92360000
*            11 = EQ NE LT LE GT GE                                   * 92380000
*            12 = NON-ASSEMBLER (1ST CHARACTER NON-ASSEMBLER)         * 92400000
*  R10 = TYPE NUMBER                                                  * 92420000
*  R15 = STRING LENGTH (MOVE LENGTH)                                  * 92440000
*********************************************************************** 92460000
*  AT ENTRY R10 HAS INDEX OF 1 OR 2                                   * 92480000
*        1 = DO SYNTACTIC STRING SEARCH                               * 92500000
*        2 = NO SYNTACTIC STRING SEARCH                               * 92520000
*                                                                     * 92540000
*  REGISTERS 1,2,3,10,11,12,14,15 MUST BE MADE AVAILABLE              * 92560000
*                                                                     * 92580000
*        LINKAGE IS ANY OF THE FOLLOWINGS                             * 92600000
*        BAL   RETURN,TRTEST                                          * 92620000
*        BAL   RETURN,TRT01                                           * 92640000
*        BAL   RETURN,TRT02                                           * 92660000
*                                                                     * 92680000
* STRING TO BE TRT'ED IS LIMITED TO 255 CHARACTERS  ******************* 92700000
*********************************************************************** 92720000
TRTEST   LA    PARM,1                   DO SYNTACTIC STRING SEARCH      92740000
TRT01    MVC   SPECHAR(L'STDTBL),STDTBL LOAD STANDARD TRT TABLE         92760000
TRT02    ST    BASE3,JFWORD2            SAVE BASE 3                     92780000
         BALR  BASE3,0                  REDEFINE BASE                   92800000
         USING *,BASE3                      REGISTER                    92820000
         SR    TWKREG2,TWKREG2          IN CASE PAST END                92830000
         L     TWKREG1,ENDATA           COMPUTE STRING LENGTH           92840000
         SR    TWKREG1,INPTR                                            92860000
         BNP   TRTOUT1                  EXIT IF PASSED END COLUMN       92880000
         BCTR  TWKREG1,0                MAKE IT MOVE LENGTH             92900000
         CH    TWKREG1,H255             ALLOW MAXIMUM OF 256 BYTES      92920000
         BNH   TRT10                    LENGTH OK                       92940000
         LH    TWKREG1,H255                                             92960000
         SPACE                                                          92980000
TRT10    ST    R2,JFWORD1               SAVE EDSECT BASE REG            93000000
         SR    R1,R1                    CLEAR REGISTERS FOR TRT RESULT  93020000
         LR    R2,R1                                                    93040000
         EX    TWKREG1,TRT00            TRT STRING INDICATED IN INPTR   93060000
         LR    R3,R2                    TRANSFER RESULT TO R3 SINCE     93080000
         L     R2,JFWORD1               R2 IS EDSECT BASE REGISTER      93100000
         BNE   MATCH                    BRANCH IF AN ENTRY MATCHES      93120000
*  NO HIT - SIMULATE ONE                                                93140000
         L     R1,ENDATA                                                93160000
         CLI   D0(INPTR),JA             SEPARATE AN STRING FROM N STG.  93180000
         BL    MATCH                    BRANCH IF NUMERIC               93200000
         LA    R3,1                     ELSE INDICATE AN STRING         93220000
*                                                                       93240000
MATCH    LR    TWKREG2,R1               COMPUTE STRING TRUE LENGTH      93260000
         SR    TWKREG2,INPTR                                            93280000
         BZ    TRTOUT                   EXIT IF 1ST CHAR TERMINATES     93300000
         BCT   TWKREG2,TRT20            BRANCH IF LENGTH GT ONE         93320000
         CLI   D1(INPTR),JQUOTE         ELSE, TEST IF ATTR. NOTATION    93340000
         BNE   TRTSTG                   BRANCH IF NOT                   93360000
*                                                                       93380000
TRT20    CH    TWKREG2,H2               BRANCH IF LENGTH GT 3           93400000
         BH    TRTSTG                                                   93420000
*  LENGTH LE 3 - COULD BE BOOLEAN, RELATIONAL OPS OR ATTR. NOTATION     93440000
         BCT   PARM,TRTSTG              BRANCH IF NOT TRTEST ENTRY      93460000
*  DO SYNTACTIC STRING SEARCH - PARM CONTAINS BXLE INCREMENT FACTOR     93480000
         LA    PARM,D3(,TWKREG2)                                        93500000
         SR    PARAM2,PARAM2                                            93520000
*  R12 POINTS TO TRTTYPE,TRTREL OR TRTOPTR FOR L OF 1, 2, OR 3          93540000
         IC    PARAM2,TRTNDX1(TWKREG2)                                  93560000
         LA    R12,TRTTYPE(PARAM2)      GET TO THE RIGHT TABLE          93580000
* PARAM2 POINTS TO UPPER LIMIT OF BXLE LOOP                             93600000
         IC    PARAM2,TRTNDX2(TWKREG2)                                  93620000
         AR    PARAM2,R12                                               93640000
         SPACE                                                          93660000
* NOW LOOK FOR A MATCH IN THE TABLE POINTED TO IN R12                   93680000
TRTLKUP  EX    TWKREG2,TRTCPR           COMPARE SYMBOL VS TABLE         93700000
         BE    TRTFND                   BRANCH IF FOUND IN TABLE        93720000
         BXLE  R12,PARM,TRTLKUP         ELSE KEEP LOOKING               93740000
         SPACE                                                          93760000
* STRING IS NOT IN THE TABLE POINTED TO IN R12 - ASSUME AN STRING       93780000
TRTSTG   LA    R3,D1                    INDICATE AN STRING              93800000
         CLI   D0(INPTR),J9                                             93820000
         BH    TRTRTN                   EXIT IF AN STRING               93840000
         BCTR  R3,0                     ELSE, INDICATE NUMERIC STRING   93860000
         B     TRTRTN                   THEN EXIT                       93880000
         SPACE                                                          93900000
* SYMBOL FOUND IN TABLE - PICK UP TYPE NUMBER AND RETURN                93920000
TRTFND   IC    PARM,D2(TWKREG2,R12)     GET TYPE NUMBER AND             93940000
         IC    R3,D1(TWKREG2,R12)       CATEGORY NUMBER FROM TABLE      93960000
         B     TRTRTN                   RETURN TO CALLER                93980000
         SPACE                                                          94000000
TRTOUT   CLI   D0(INPTR),HICHR          TEST 1ST CHARACTER              94020000
         BNH   TRTXIT                   BRANCH IF NOT NON-ASSEMBLER CHR 94040000
TRTOUT1  LA    R3,12                    INDICATE NON-ASSEMBLER          94060000
         LR    R1,INPTR                 INSURANCE, INSURANCE.           94080000
         B     TRTRTN                   RETURN TO CALLER                94100000
         SPACE                                                          94120000
TRTXIT   IC    PARM,D0(,INPTR)          GET TERMINATING CHARACTER       94140000
         IC    PARM,TRTSRC-(SPECHAR-JTBLTRT)(PARM) PICK UP TYPE NUMBER  94160000
TRTRTN   L     BASE3,JFWORD2            RESTORE BASE 3 VALUE            94180000
         BR    RETURN                   NOW RETURN TO CALLER            94200000
TRT00    TRT   D0(1,INPTR),JTBLTRT      OFF-THE-LINE TRT                94220000
TRTCPR   CLC   D0(1,INPTR),D0(R12)      OFF-THE-LINE COMPARE            94240000
*********************************************************************** 94260000
*  SYNTACTIC STRING TABLES                                            * 94280000
*        TRTTYPE USED IF TERMINATOR IS ' AND LENGTH = 1. FORMAT = SCT * 94300000
*        TRTREL USED IF LENG = 2 (ANY TERMINATOR)   FORMAT = SSCT     * 94320000
*        TRTOPTR USED IF LENGTH = 3 (ANY TERMINATOR) FORMAT = SSSCT   * 94340000
*        S = CHARACTER STRING (1, 2, OR 3 BYTES)                      * 94360000
*        C = CATEGORY NUMBER (1 BYTE)                                 * 94380000
*        T = TYPE NUMBER (1 BYTE)                                     * 94400000
*********************************************************************** 94420000
TRTTYPE  EQU   *                        ATTRIBUTE TABLE                 94440000
         DC    AL1(JT)                  T'                              94460000
         DC    AL1(09)                                                  94480000
         DC    AL1(JTMTAT)                                              94500000
         DC    AL1(JX)                  X'                              94520000
         DC    AL1(08)                                                  94540000
         DC    AL1(XSDT)                                                94560000
         DC    AL1(JB)                  B'                              94580000
         DC    AL1(08)                                                  94600000
         DC    AL1(BSDT)                                                94620000
         DC    AL1(JC)                  C'                              94640000
         DC    AL1(08)                                                  94660000
         DC    AL1(CSDT)                                                94680000
         DC    AL1(JL)                  L'                              94700000
         DC    AL1(07)                                                  94720000
         DC    AL1(JTMLAT)                                              94740000
         DC    AL1(JI)                  I'                              94760000
         DC    AL1(07)                                                  94780000
         DC    AL1(JTMIAT)                                              94800000
         DC    AL1(JS)                  S'                              94820000
         DC    AL1(07)                                                  94840000
         DC    AL1(JTMSAT)                                              94860000
         DC    AL1(JN)                  N'                              94880000
         DC    AL1(07)                                                  94900000
         DC    AL1(JTMNAT)                                              94920000
         DC    AL1(JK)                  K'                              94940000
         DC    AL1(07)                                                  94960000
         DC    AL1(JTMKAT)                                              94980000
*                                                                       95000000
TRTREL   EQU   *                        RELATIONAL OPERATOR TABLE 2 BYT 95020000
         DC    AL1(JE,JQ)               EQ                              95040000
         DC    AL1(11)                                                  95060000
         DC    AL1(JTMEQ)                                               95080000
         DC    AL1(JO,JR)               OR                              95100000
         DC    AL1(10)                                                  95120000
         DC    AL1(JTMOR)                                               95140000
         DC    AL1(JN,JE)               NE                              95160000
         DC    AL1(11)                                                  95180000
         DC    AL1(JTMNE)                                               95200000
         DC    AL1(JL,JT)               LT                              95220000
         DC    AL1(11)                                                  95240000
         DC    AL1(JTMLT)               LT                              95260000
         DC    AL1(JG,JT)               GT                              95280000
         DC    AL1(11)                                                  95300000
         DC    AL1(JTMGT)                                               95320000
         DC    AL1(JL,JE)               LE                              95340000
         DC    AL1(11)                                                  95360000
         DC    AL1(JTMLE)                                               95380000
         DC    AL1(JG,JE)               GE                              95400000
         DC    AL1(11)                                                  95420000
         DC    AL1(JTMGE)                                               95440000
*                                                                       95460000
TRTOPTR  EQU   *                        RELATIONAL OPERATOR TABLE 3 BYT 95480000
         DC    AL1(JA,JN,JD)            AND                             95500000
         DC    AL1(10)                                                  95520000
         DC    AL1(JTMAND)                                              95540000
         DC    AL1(JN,JO,JT)            NOT                             95560000
         DC    AL1(10)                                                  95580000
         DC    AL1(JTMNOT)                                              95600000
NSYNTBL  EQU   *                                                        95620000
*                                                                       95640000
TRTNDX1  EQU   *                                                        95660000
         DC    AL1(TRTTYPE-TRTTYPE)     INDEX FOR LENGTH = 1            95680000
         DC    AL1(TRTREL-TRTTYPE)      INDEX FOR LENGTH = 2            95700000
         DC    AL1(TRTOPTR-TRTTYPE)     INDEX FOR LENGTH = 3            95720000
TRTNDX2  EQU   *                                                        95740000
         DC    AL1(TRTREL-TRTTYPE-3)    END INDEX FOR LENGTH = 1        95760000
         DC    AL1(TRTOPTR-TRTREL-4)    END INDEX FOR LENGTH = 2        95780000
         DC    AL1(NSYNTBL-TRTOPTR-5)   END INDEX FOR LENGTH = 3        95800000
TRTNNDX  EQU   *                                                        95820000
         DS    0H                                                       95840000
*                                                                       95860000
         EJECT                                                          95880000
         JPATCH X1A20,DD4                                               95890000
         EJECT                                                          95900000
         JCSECT (X1A30=CS4)                                             95910000
         USING *,BASE4                                                  95920000
         USING JTEXTA,INDEXP                                            95930000
*                                                                       95940000
*********************************************************************** 95960000
* DIRECTORY ENTRY ROUTINE                                             * 95980000
* AT ENTRY R9  CONTAINS D ENTRY INDEX VALUE                             96000000
*          R10 POINTS TO THE SYMBOL TO BE ENTERED/SEARCHED              96020000
*          R11 CONTAINS THE MOVE LENGTH OF THE SYMBOL TO BE ENTERED     96040000
*              OR SEARCHED                                              96060000
* ON RETURN R11 POINTS TO A LOCATION CONTAINING THE VECTOR POINTER,     96080000
*              THE POINTER TO THE LOCATION IN GENERATION TIME DICT,     96100000
*              OR THE FLAGA, OF THE SYMBOL ENTERED.                     96120000
* LINKAGE IS BAL R3,DIRENT                                              96140000
*         OR BAL R3,DIR10                                               96160000
*********************************************************************** 96180000
         SPACE 3                                                        96200000
NDIRENT  GOIF  SUPDNT,OFF=NDIR10        GO IF ENTRY NOT SUPPRESSED      96220000
         SET   SUPDNT,OFF               ELSE SET OFF THE INDICATOR      96240000
         B     DIROUT                   AND RETURN                      96260000
NDIR10   MVI   DERRCD,D0                RESET ERROR CODE TO ZERO        96280000
         STM   R15,R1,EDTSVZ            SAVE LENGTH & TERMINATOR        96300000
         L     LINK,DENTRY              COMPUTE D ENTRY POINT           96320000
         BALR  RETURN,LINK              MAKE D ENTRY                    96340000
         TM    DERRCD,BITFF             TEST IF ANY ERROR               96360000
         BZ    DIR20                    RETURN IF NO                    96380000
         L     R15,EDTSVZ               GET SYMBOL LENGTH               96400000
         CLI   DERRCD,ERR11             TEST IF CALL MISMATCHES DEF     96420000
         BE    DIR30                    YES, BUT LET X3 FLAG IT IN LINE 96440000
         CLI   DERRCD,ERR10             PREV DEFINED PRGMR MACRO        96460000
         BE    DIR18                    LOG ERROR MESSAGE 10            96480000
         CLI   DERRCD,ERR7              TEST IF INCONSISTENT USAGE      96500000
         BNE   DIR15                    LOG ERROR                       96520000
         TM    FLGBYT,VDIM              YES, TEST IF DIMENSIONED        96540000
         BO    DIR15                    LOG ERROR IF YES                96560000
         TM    ATTRSV,ATN               TEST IF PRECEDED BY N'          96580000
         BNO   DIR15                    ERROR IF NOT                    96600000
         MVI   DERRCD,D0                ELSE, NOT ERROR                 96620000
         B     DIR20                    EXIT                            96640000
DIR15    LA    R15,1(,R15)              INCR LENGTH TO INCLUDE '&'      96660000
         GOIF  SGBLCL,OFF=DIR16         BACK UP IF ---                  96680000
         L     INPTR,OPNDPTR            FROM DECLARATION                96700000
         TM    FLGBYT,VDIM              TEST IF DIMENSIONED             96710000
         BNO   DIR18                    BRANCH IF NOT- MOVE LENGTH OK   96712000
         AR    R15,TRTN                 ADJUST MOVE LENGTH              96714000
         SR    R15,INPTR                FOR NO. OF CHARS IN V. S.       96716000
         BCTR  R15,D0                   MAKE INTO MOVE LENGTH           96718000
         B     DIR18                    GO LOG ERROR                    96720000
DIR16    EQU   *                        ELSE, DON'T                     96740000
         BCTR  INPTR,0                  BACK UP TO '&' FOR SNAP         96760000
DIR18    EQU   *                                                        96780000
         BAL   RETURN,DNTERR            LOG ERROR                       96800000
         L     BASE4,CS4ADDR            GET BACK TO THIS CSECT          96810000
         SET   RMPURE,ON               INDICATE IMPURITY                96820000
         L     R1,OUTADR                                                96840000
         OI    D3(R1),JPRONLY           PRINT ONLY                      96860000
DIR20    EQU   *                                                        96880000
         LM    R15,R1,EDTSVZ            RESTORE LENGTH AND TERMINATOR   96900000
         CLI   DERRCD,ERR14                                             96920000
         BE    DIROUT                   RETURN IF ERROR 14              96940000
         CLI   DERRCD,ERR9              TEST IF PREVIOUSLY DEFINED      96960000
         BL    DIROUT                   RETURN IF BELOW ERROR 9         96980000
         BH    DIR31                    BR IF ABOVE ERROR 9             97000000
         GOIF  SMDEF,ON=DIR31           BR- DICTIONARY OVERLAP IN MACRO 97020000
         SET   SKPEND,ON                FLUSH WHOLE SOURCE STREAM       97040000
DIROUT   L     BASE2,REGSAVE3           RESTORE OLD BASE                97060000
         BR    R3                       AND RETURN                      97080000
DIR30    EQU   *                                                        97100000
         L     R15,EDTSVZ               GET THE LENGTH                  97120000
DIR31    SET   SKPMND,ON                FLUSH MACRO                     97140000
         SET   SXPRTO,OFF                                               97160000
         L     INDEXP,OFPTRSV           RESTORE JTEXTA POINTER          97180000
         L     INPTR,FPTRSV             RESTORE FIELD POINTER           97200000
         L     BASE2,REGSAVE3           RESTORE OLD BASE                97220000
         B     WRAPFLD                  THROW AWAY THIS STATEMENT       97240000
         SPACE 3                                                        97260000
***************                                                         97280000
         DS    0F                                                       97300000
DENTRY   DC    A(DRUTENT)               DIRECTORY ROUTINE ENTRY POINT   97320000
*                                                                       97340000
SVCTLFM  EQU   *                                                        97360000
         MVC   COPYSV3(L'JSRCLN*7),JSRCLN SAVE CURRENT CTL FORMATS      97380000
         MVC   JSRCLN(L'JSRCLN*7),SRCLEN                                97400000
         MVC   COPYSV4(L'TBGLN*6),TBGLN                                 97420000
         MVC   TBGLN(L'TBGLN*6),STDPARM                                 97440000
         SET   JINLIB,ON                INDICATE IN LIBRARY MODE        97460000
         MVC   INPUT,STNPSTD            GET STD ICTL INPUT WORK BUF PTR 97480000
         MVC   MINPUT,MINPSTD           GET STD ICTL MINPUT WORK BUF PT 97500000
         MVC   MINDIF,SVMINDIF          RESTORE STD BUFF DIFFERENCE     97520000
         MVC   ENDWKA,SVENDWKA          RESTORE STD WORK BUFF END       97540000
         BR    TLINK                    RETURN TO CALLER                97560000
         EJECT                                                          97560200
****************************************                                97560400
*   SNAPERR - LINKAGE TO THIS ROUTINE IS                                97560600
*        DC    AL2(BR CODE)             IF BR CD=1, FINISH WITH ABSERR- 97560800
*        DC    AL1(X*16+SEVERITY CODE)  ELSE FINISH WITH WRNERR         97560900
*        DC    AL1(ERROR CODE)                                          97561000
****************************************                                97561100
         SPACE 3                                                        97561200
NSNAPERR EQU   *                                                        97561400
         LH    R11,D0(,TLINK)           SET UP BRANCH CODE              97561600
         LA    TLINK,D2(,TLINK)         ADJ RETURN POINT                97561800
         USING ERRMESS,R10                                              97562000
         L     R10,ESTKNDX              SET ADDRESSABILITY              97562200
         MVI   EMSGNTRY,JBLANK                                          97562400
         MVC   EMSGNTRY+1(L'EMSGNTRY-1),EMSGNTRY                        97562600
         CH    R15,H7                   DON'T DUMP MORE THAN 8 CHARS    97562800
         BNH   SNAPMOV                  SEVEN OR LESS IS OK             97563000
         LH    R15,H7                   DEFAULT TO 8 CHARS              97563200
SNAPMOV  EX    R15,MVSYM                MOVE DATA ITEM                  97563400
         LA    R14,D8                                                   97563600
         STC   R14,ENTRYLNG                                             97563800
         BCT   R11,NWRNERR              LOG ERROR CODE                  97564000
*                                                                       97564200
*********************************************************************** 97564400
*   ABSERR                                                              97564600
*   WRNERR -                                                            97564800
*   IT IS CALLER'S RESPONSIBILITY TO PLACE THE LENGTH AND ITS           97565000
*   ASSOCIATED DATA ITEM(S) IN THE ERROR MESSAGE STACK AT ESTKNDX       97565200
*   BEFORE ENTER INTO THIS ROUTINE.                                     97565400
*                                                                       97565600
*   CALLING SEQUENCE IS                                                 97565800
*        BAL   TLINK,ABSERR             LOG ERROR                       97566000
*        DC    AL1(X*16 + SEVERITY CODE)                                97566200
*        DC    AL1(ERROR CODE)                                          97566400
*        (RETURN TO HERE IF X=0, ELSE EXIT VIA ERTNTBL AT ENTRY X)      97566600
*********************************************************************** 97566800
         SPACE 3                                                        97567000
NABSERR  EQU   *                                                        97567200
         L     INDEXO,OUTADR            INSURE OUTPUT POINTER           97567400
         GOIF  SXPRTO,OFF=ABSE10        BRANCH IF NOT EXPECTING PROTO   97567600
         SET   SKPMND,ON                                                97567800
         SET   SBDPROTO,ON                                              97568000
         SET   SUBLST,OFF                                               97568200
         SET   SXPRTO,OFF                                               97568400
ABSE10   GOIF  SUBLERR,ON=ABSE11        NO PRONLY BIT IN REC   @OZ06551 97568506
         SET   JPRONLY,ON               PRINT ONLY STATEMENT   @OX12896 97568606
ABSE11   SET   SUBLERR,OFF              RESET SW               @OZ06551 97568706
         SET   SUPDNT,ON                AND SUPPRESS DIRECTORY ENTRY    97568800
NWRNERR  SET   RMPURE,ON                                                97569000
         L     R10,ESTKNDX              SET ADDRESSABILITY              97569200
         USING ERRMESS,R10                                              97569400
         MVC   EMSGSVTY(D2),D0(TLINK)                                   97569600
         NI    EMSGSVTY,X'0F'           MASK OFF RTN CODE               97569800
         CLC   EMSGSVTY(D1),JMSGL       TEST SEV CODE                   97570000
         BL    ERREXIT                  NO ERROR LOGGING SINCE LOW      97570200
         CLI   ERRCNT1,D5               TEST IF MSG STACK FULL          97570400
         BL    BMPNDX                   OK, REGISTER THIS ERROR         97570600
         MVC   EMSGSVTY(L'EROERS),EROERS MSG - MORE THAN 5 ERRORS       97570800
         BH    ERREXIT                  LOOP THRU AFTER 6TH ENTRY       97571000
         B     BMPCNT                   GO GUMP ERROR COUNT             97571200
BMPNDX   LA    R10,ERMEND(,R10)         BUMP INDEX                      97571400
         ST    R10,ESTKNDX              UP ERROR STACK INDEX            97571600
         MVI   ENTRYLNG,D0                                              97571800
BMPCNT   EQU   *                                                        97572000
         IC    R14,ERRCNT1                                              97572100
         LA    R14,D1(,R14)             BUMP ERROR COUNT                97572200
         STC   R14,ERRCNT1                                              97572300
ERREXIT  SR    R15,R15                                                  97572400
         CLC   EMSGSVTY(D1),JSEVER      IS THIS HIGHER                  97572500
         BNH   ERREXIT1                 BRANCH IF NOT                   97572600
         MVC   JSEVER(D1),EMSGSVTY      ENTER HIGH                      97572700
ERREXIT1 IC    R15,D0(,TLINK)           GET RETURN CODE                 97572800
         SRA   R15,D4                   MASK OFF SEVERITY CODE          97573200
         BNZ   ERROUT                   BR IF ERR RETURN SPECIFIED      97573400
         L     BASE2,REGSAVE3           RESTORE BASE ADDR               97573600
         B     D2(,TLINK)               RETURN TO PLACE OF CALL         97573800
ERROUT   SLA   R15,D2                   MULTIPLY BY 4                   97574000
         L     R1,ERTNTBL-D4(R15)       GET RETURN ADDRESS              97574200
         L     BASE2,REGSAVE3           RESTORE BASE ADDR               97574400
         BR    R1                       RETURN                          97574600
MVSYM    MVC   EMSGNTRY(0),D0(INPTR)    OFF-THE-LINE MOVE               97574800
         DS    0F                       ALIGNMENT INSURANCE             97575000
EROERS   DS    0CL3                                                     97575200
         DC    AL1(SEV18)               NO MORE ERROR LOGGING           97575400
         DC    AL1(ERR18)               MAX NUMBER OF 5 ERRORS ALLOWED  97575600
         DC    AL1(0)                   .                               97575800
EEROERS  DS    0H                                                       97576000
         SPACE 3                                                        97576200
ERTNTBL  DS    0CL40                    MAY NOT EXCEED 15 ENTRIES       97576400
         DC    A(BADIX)        1 FLUSH SOURCE                           97576600
         DC    A(AOPPTR)       2 WRAP UP STATEMENT                      97576800
         DC    A(NAMERR)       3 NAME IN ERROR                          97577000
         DC    A(CLN0)         4 CLEAN UP STATEMENT                     97577200
         DC    A(CLEANUP)      5 DITTO                                  97577400
         DC    A(WRAPFLD)      6 END OF OPND 'CAUSE OF ERROR            97577600
         DC    A(EDTSTG)       7 WRAP UP STRING FIELD                   97577800
         DC    A(INVALID)      8 INPUT SEQ ERROR                        97578000
         DC    A(STEND)        9 PARAMETER ERROR                        97578200
         DC    A(SKMNDST)      10 SKIP TO MEND STATEMENT                97578400
EERTNTBL EQU   *                        END OF TABLE                    97578600
         EJECT                                                          97580000
**************************************                                  97600000
*        END OF FILE ROUTINE         *                                  97620000
**************************************                                  97640000
NUNXPEOF EQU   *                                                        97660000
         GOIF  SOPNCD,OFF=NEOFRTN       LOG ERR LATER IF IN PROG MACRO  97666000
         BAL   TLINK,NABSERR            ERROR UNEXPECTED EOF            97672000
         DC    AL1(SEV47)               SEVERITY CODE                   97680000
         DC    AL1(ERR47)               ERROR CODE                      97700000
         L     BASE4,CS4ADDR            GET BACK TO CSECT 4             97710000
         SPACE 3                                                        97720000
NEOFRTN  SET   SINEOF,OFF               RESTORE EOF SWITCH              97740000
         GOIF  JINLIB,ON=EODLIB         BRANCH IF EOD ON SYS LIBRARY    97760000
         SET   SLSTCD,ON                INDICATE LAST CARD READ         97780000
         GOIF  SOPNCD,OFF=PGRMAC        BRANCH IF IN PROGRAMMER MACRO   97800000
         SET   SKPEND,OFF                                               97820000
GENEND   EQU   *                                                        97830003
         GOIF  SENDST,OFF=GENEND1       BRANCH IF NO ENDSTMT    OX00095 97840003
         CLI   ERRCNT1,D0               IS THERE AN ERROR       OX00095 97870003
         BE    EOPNCD                   BRANCH IF NO            OX00095 97872003
         B     GENEND2                  GO WRITE OUT ERR REC    OX00095 97874003
GENEND1  EQU   *                                                OX00095 97876003
         BAL   R3,GENMEND               GO GENERATE RECORD              97880000
         MVI   JTIOP,JTEND              INDICATE END STATEMENT          97900000
         MVC   JTOPCD(L'GEND),GEND      MOVE IN MNEMONIC                97920000
         BAL   TLINK,NWRNERR            LOG ERROR                       97940000
         DC    AL1(SEV60)               AND THEN GO TO                  97960000
         DC    AL1(ERR60)               GENERATE AN END STATEMENT       97980000
         L     BASE4,CS4ADDR            GET BACK TO CSECT 4             97990000
GENEND2  EQU   *                                                OX00095 97992003
         L     BASE2,CS2ADDR            TEMPORILY RESTORE BASE 2        98000000
         BAL   RETURN,WRAPERR           GO WRITE OUT ERROR RECORD       98005000
         L     BASE4,CS4ADDR            GET BACK TO CSECT 4             98010000
         SET   (SFSTCD,SUPDNT),OFF      RESET SWITCHES                  98020000
         SET   (SNMFND,SNOFND,SDTCMT,STRCMT),OFF                        98040000
         SET   (SBYCNT,SBYONE),OFF      RESET SWITCHES                  98060000
         SPACE                                                          98080000
EOPNCD   LA    R11,D8                   LENGTH                          98100000
         BAL   RETURN,OPUTL             GET BUFFER                      98120000
         MVC   JTRLI(L'EOFHD),EOFHD     EOF HEADER                      98140000
         MVI   JTIOP,JTEEOF             IOC                             98160000
         MVI   DDNDX1,OPENEND           SET UP INDEX FOR BR TO DIR RTN  98180000
         BAL   R3,NDIR10                CLOSE OPEN CODE                 98190000
         L     BASE4,CS4ADDR            GET BACK TO CSECT 4             98200000
         SET   SOPNCD,OFF               INDICATE OUT OF OPEN CODE       98220000
         SET   SSYSMD,ON                INDICATE EDITIONG SYSTEM MACRO  98240000
         BAL   TLINK,SVCTLFM            RESTORE STANDARD ICTL FORMATS   98260000
         SET   (SISEQ,SNOCNT),OFF                                       98280000
         B     ESYSMAC                  GO EDIT SYSTEM MACROS           98300000
*                                                                       98320000
EODLIB   EQU   *                                                        98340000
         GOIF  SINCPY,OFF=ELIB05        BRANCH IF NOT IN COPY CODE      98360000
         GOIF  SMAC,ON=ELIB05           GENERATE MEND IF MACRO COPIED   98370000
         L     BASE2,CS2ADDR            RESTORE BASE FOR SECOND CSECT   98380000
         L     LINK,ACSTKEXT            GET ROUTINE ADDR                98400000
         BALR  R3,LINK                 RECURSIVE EXIT                   98420000
         B     WREXIT                   ERROR EXIT                      98440000
ELIB05   EQU   *                                                        98460000
         BAL   TLINK,NWRNERR            GO LOG ERROR ON UNEXPECTED      98480000
         DC    AL1(SEV51)               EOD WHEN READING FROM THE       98500000
         DC    AL1(ERR51)               SYSTEM LIBRARY                  98520000
         L     BASE4,CS4ADDR            GET BACK TO CSECT 4             98530000
         L     BASE2,CS2ADDR            TEMPORILY RESTORE BASE 2        98540000
         BAL   RETURN,WRAPERR1          OUTPUT ERR REC- DON'T SET JERR  98545000
         L     BASE4,CS4ADDR            GET BACK TO CSECT 4             98550000
         BAL   R3,GENMEND               GENERATE RECORD                 98560000
         MVI   JTIOP,JTMEND             INDICATE MEND STMT              98580000
         MVC   JTOPCD(L'GMEND),GMEND    MOVE IN MNEMONIC                98600000
         L     BASE2,CS2ADDR            RESTORE BASE FOR SECOND CSECT   98620000
         B     MEND0                    GO CLOSE MACRO DEFINITION       98640000
*                                                                       98660000
PGRMAC   EQU   *                                                        98680000
         BAL   TLINK,NWRNERR            LOG ERROR                       98700000
         DC    AL1(SEV47)               .                               98720000
         DC    AL1(ERR47)               UNEXPECTED EOD ON SYS INPUT     98740000
         L     BASE4,CS4ADDR            GET BACK TO CSECT 4             98750000
         GOIF  SMDEF,OFF=OPOPEN         BRANCH IF NOT IN MACRO          98760000
         SET   SKPMND,ON                SIMULATE SKIP-TO-MEND CONDITION 98780000
         BAL   R3,GENMEND               GENERATE RECORD                 98800000
         MVI   JTIOP,JTMEND             INDICATE A MEND STATEMENT       98820000
         MVC   JTOPCD(L'GMEND),GMEND    MOVE IN MNEMONIC                98840000
         SET   (SMDEF),OFF              SIMULATE MEND CONDITION         98860000
         MVI   DDNDX1,MACREND           SET UP INDEX FOR BR TO DIR RTN  98880000
         BAL   R3,NDIR10                GO TO DIRECTORY ROUTINE         98890000
         L     BASE2,CS2ADDR            CHANGE TO CSECT 2               98892000
         BAL   RETURN,WRAPERR           GO WRITE OUT ERROR RECORD       98900000
         L     BASE4,CS4ADDR            GET BACK TO CSECT 4             98940000
         BAL   TLINK,NWRNERR            GO LOG ERROR FOR GEN MEND       98950000
         DC    AL1(SEV55)               ERROR PARAMETER                 98960000
         DC    AL1(ERR55)               ERROR PARAMETER                 98980000
         L     BASE2,CS2ADDR            CHANGE TO CSECT 2               98990000
         BAL   RETURN,WRAPERR           GO WRITE OUT ERROR RECORD       99000000
         L     BASE4,CS4ADDR            GET BACK TO CSECT 4             99005000
         SET   SKPMND,OFF                                               99020000
         SPACE                                                          99040000
OPOPEN   SET   (SPGRMD,SOPNCD),FLIP     OUT OF PRGMR MACS, NOW OPEN CD  99060000
         MVI   DDNDX1,OPENENT           SET UP INDEX FOR BR TO DIR RTN  99100000
         BAL   R3,NDIR10                OPEN UP OPEN CODE BEFORE        99110000
         L     BASE4,CS4ADDR                                            99120000
         B     GENEND                   GENERATE END STATEMENT          99140000
         SPACE 3                                                        99160000
ESYSMAC  GOIF  LSTSYSMS,ON=PHSEND       BRANCH IF SYS MACROS ALL EDITED 99180000
         SET   SNOSYSMD,OFF                                             99200000
* REGISTER 10 POINTER IS SUPPLIED BY DIRECTORY ROUTINE                  99220000
         ST    R10,JFWORD1              SAVE POINTER TO NAME            99230001
         JFIND ADDR=(R10)               GO FIND IT IN LIBRARY           99240000
         BP    ESMGO                    BRANCH IF MACRO FOUND           99260000
         SET   SKPMND,ON                ELSE, SIMULATE FLUSH CONDITION  99280000
         SET   SNOSYSMD,ON              SYSTEM M DEF NOT FOUND          99300000
         L     BASE2,CS2ADDR            RESTORE BASE FOR SECOND CSECT   99320000
         B     MEND1                    CLOSE MACRO STMT                99340000
ESMGO    SET   SXMCRO,ON                EXPECTING MACRO STMT            99360000
         SET   SXPRTO,OFF                                      @XA04142 99362031
         L     R9,JFWORD1               RESTORE POINTER TO NAME         99370001
         MVC   LASTFIND(L'LASTFIND),D0(R9) GET NAME OF MEMBER FOUND     99372001
         L     BASE2,CS2ADDR            RESTORE BASE FOR SECOND CSECT   99380000
         B     READNEXT                                                 99400000
SMNAMOV  MVC   SMACNAM(0),D1(R11)       OFF-THE-LINE MOVE               99500000
         SPACE                                                          99520000
PHSEND   MVC   JSRCLN(L'JSRCLN*7),COPYSV3 RESTORE ICTL FORMATS          99540000
         LA    R11,D8                   EOF RECORD SIZE                 99560000
         BAL   RETURN,OPUTL             GET O/P BUFFER                  99580000
         MVC   JTRLI(L'EOFHD),EOFHD     MOVE IN EOF RECORD              99600000
*                                                                       99620000
         JTRUNC FILE=FILE1             TRUNCATE LAST BUFFER             99640000
*                                                                       99660000
         L     PARAM1,DSTGBGN                                           99680000
         JFRECORE ADDR=(R10)            FREE WORK BUFFER                99700000
         LR    PARAM1,MODCOMM                                           99720000
         JFRECORE ADDR=(R10)            FREE MODULE COMMON AREA         99740000
*                                                                       99760000
EDITXIT  JRETURN                        RETURN TO CONTROLLER            99780000
         SPACE 3                                                        99800000
*********************************************                           99810000
*        GENERATE MEND/END STATEMENT        *                           99820000
*********************************************                           99830000
GENMEND  EQU   *                                                        99840000
         LA    R11,L'FXDHD+L'GMEND      GET OUTPUT BUFFER               99850000
         BAL   RETURN,OPUTL             GET O/P BUFFER                  99860000
         MVC   JTRLI(L'FXDHD),FXDHD     MOVE IN HEADER                  99870000
         SET   JPRONLY,OFF              REMOVE PRINT ONLY SWITCH        99872000
         LA    TWKREG1,D2(,INDEXP)      COMPUTE FIELD POINTER           99880000
         SR    TWKREG1,INDEXO                                           99890000
         STH   TWKREG1,JTOCP            AND SAVE IN ET                  99900000
         LA    TWKREG1,D8(,INDEXP)      COMPUTE RECORD LENGTH           99910000
         SR    TWKREG1,INDEXO                                           99920000
         STH   TWKREG1,JTRLI            AND SAVE IN ET                  99930000
         BR    R3                       RETURN                          99940000
         SPACE 3                                                        99950000
GEND     DS    0CL5                     GENERATED END STATEMENT         99955000
         DC    AL1(JA,D3,JE,JN,JD)      GEN EDITED TEXT FOR END STMT    99960000
GMEND    DS    0CL6                     GENERATED MEND STATEMENT        99965000
         DC    AL1(JA,D4,JM,JE,JN,JD)   GEN EDITED TEXT FOR MEND STMT   99970000
EOFHD    DS    0CL8                                                     99970800
         DC    AL2(D8)                  RECORD LENGTH                   99971600
         DC    AL1(JPSOP,D0)            EOF FLAG                        99972400
         DC    AL1(JTEOF)               EOF INDICATOR                   99973200
         DC    AL1(X'EE',X'00',X'FF')   EOF                             99974000
         SPACE 3                                                        99974300
         JPATCH  X1A30,410                                              99974600
         SPACE 3                                                        99975000
         END   EDITENT                                                  99980000
