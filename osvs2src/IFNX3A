         MACRO                                                          00030000
&NAME    DICTCALL &ENTRY,&POINTER=DICTBASE                              00060000
&NAME    L     R12,&POINTER             SET UP DICT RTN ENTRY ADDR      00090000
         MVI   NDXVAL,&ENTRY            INDICATE ENTRY BEING MADE       00120000
         BALR  R9,R12                   LINK TO DICTIONARY ROUTINE      00150000
         MEND                                                           00180000
         SPACE 3                                                        00210000
         MACRO                                                          00240000
         GENOPS &OP                                                     00270000
         ORG   MOPTABLE+2*JT&OP         ORIGIN TO OP CODES SLOT IN TBL  00300000
         AIF   (K'&SYSLIST(2) EQ 0).STEP2                               00330000
         DC    Y(&SYSLIST(2)-MOPRTNS)   DUMMY ENTRY                     00360000
         MEXIT                                                          00390000
.STEP2   AIF   ('&OP'(1,1) EQ 'M').M                                    00420000
         DC    Y(M&OP-MOPRTNS)          OP CODES ENTRY IN BRANCH TABLE  00450000
         MEXIT                                                          00480000
.M       DC    Y(&OP-MOPRTNS)           OP CODE'S ENTRY IN BRANCH TABLE 00510000
         MEND                                                           00540000
         SPACE 3                                                        00570000
         MACRO                                                          00600000
         OPS   &OP                                                      00630000
         ORG   OPTAB+2*JTM&OP           ORIGIN TO OPERATOR SLOT IN TBL  00660000
         DC    Y(EVAL&OP-EVALOPS)        OPERATOR ENTRY IN BRANCH TABLE 00690000
         SPACE                                                          00720000
         MEND                                                           00750000
         EJECT                                                          00780000
         JHEAD 'XKE MACRO GENERATOR',                                  X00810000
               PHASEID=X3A,                                            X00840000
               LEVEL=10                                                 00870000
*                                                                     * 00900000
*FUNCTION/OPERATION-                                                  * 00930000
*   READS EDITED TEXT FOR MAINLINE CODE AND MACRO DEFINITIONS, WITH   * 00960000
*   THEIR DICTIONARIES, INTERPRETIVELY EXECUTES MACRO LANGUAGE PSEUDO-* 00990000
*   OPS TO PRODUCE LOGICAL SOURCE LANGUAGE FOR INPUT TO THE ASSEMBLY  * 01020000
*   PROCESS.  PERFORMS MACRO EXPANSION AND VARIABLE SYMBOL SUBSTITU-  * 01050000
*   TION.  MAPS TEXT INTO INTERNAL EVALUATION NOTATION FOR ASSEMBLY   * 01080000
*   PROCESS.  OUTPUTS TEXT AND SYMBOL RESOLUTION INFORMATION FOR ASSEM* 01110000
*   BLY PROCESSING.                                                   * 01140000
*                                                                     * 01170000
*ENTRY POINTS-                                                        * 01200000
*        MENTRY--ONLY ENTRY POINT                                     * 01230000
*                                                                     * 01260000
*INPUT-                                                               * 01290000
*        FILE1--EDITED TEXT FOR MAINLINE AND MACRO DEFINITIONS, WITH  * 01320000
*   CORRESPONDING DICTIONARIES.                                       * 01350000
*                                                                     * 01380000
*OUTPUT-                                                              * 01410000
*        FILE2--TEXT POST GENERATION                                  * 01440000
*        FILE3--SYMBOL DEFINITION AND SYMBOL REFERENCE INFORMATION    * 01470000
*                                                                     * 01500000
*EXTERNAL ROUTINES-                                                   * 01530000
*   USES ASSEMBLER SERVICES IN ROOT MODULE.                           * 01560000
*                                                                     * 01590000
*EXITS-                                                               * 01620000
*   NORMAL--JRETURN TO CONTROLLER WITH COMPLETION CODE OF X'00' IN    * 01650000
*   PARAMETER REGISTER R10.                                           * 01680000
*   ERROR--JRETURN TO CONTROLLER WITH COMPLETION CODE OF X'04' IN     * 01710000
*   PARAMETER REGISTER R10.                                           * 01740000
***********ALSO PROVIDE FOR NO TEXT AND NO SYMBOL CONDITIONS*********** 01770000
*                                                                     * 01800000
*TABLES/WORK AREAS-                                                   * 01830000
*        *********************** TO BE DOCUMENTED WHEN DEFINED********* 01860000
*                                                                     * 01890000
*        MOPTABLE--BRANCH TABLE FOR GENERATOR OPERATIONS              * 01920000
         EJECT                                                          01950000
         COPY  JCOMMON                  INCLUDES USING FOR COMMON       01980000
         EJECT                                                          02010000
         COPY  JTEXT                                                    02040000
         EJECT                                                          02070000
MTEXT    DSECT ,                        COPY OF JTEXT FOR OUTPUT        02100000
         SPACE                                                          02130000
MTRLI    DS    H                        RECORD LENGTH                   02160000
MTFLGA   DSW   MPSOP                    FLAGA PSEUDO-OP FLAG            02190000
MTFLGB   DSW   MPRONLY,                 FLAGB PRINT ONLY SWITCH        X02220000
               MERR,                    DEAD STATEMENT                 X02250000
               MNOCNT,                  DON'T COUNT                    X02280000
               MGEN,                    GENERATED                      X02310000
               MNMERR                   INVALID NAME FIELD              02340000
MTIOP    DS    0H                       OP CODE                         02370000
MTIOP1   DS    1X                       1ST BYTE                        02400000
MTIOP2   DS    X                        2ND BYTE                        02460000
MTNMP    DS    H                        NAME POINTER                    02490000
MTOCP    DS    H                        MNEMONIC POINTER                02520000
MTOPP    DS    H                        OPERAND POINTER                 02550000
MTCPR    DS    H                        COMMENTS POINTER                02580000
MTSPR    DS    H                        STRING POINTER                  02610000
MTFLGC   DS    C                        FLAG C                  OX00407 02620001
MTSYMCNT DS    C                        NUMBER OF OPERAND SYMBOLS       02640000
MTHDREND EQU   *                        END OF HEADER                   02670000
MTHDRLN  EQU   MTHDREND-MTEXT           LENGTH OF HEADER                02700000
         SPACE                                                          02730000
MTEXTA   DSECT ,                        VARIABLE PORTION--OUTPUT        02760000
         SPACE                                                          02790000
MTNMO    DSW   ,                        NAME CARD POINTER               02820000
MTNML    DS    C                        NAME LENGTH                     02850000
MTNAME   EQU   *                        NAME                            02880000
         ORG   MTNMO                    BACK TO START FOR RE-MAP        02910000
MTOCO    DSW   ,                        MNEMONIC CARD POINTER           02940000
MTOCL    DS    C                        MNEMONIC LENGTH                 02970000
MTOPCD   EQU   *                        MNEMONIC                        03000000
         ORG   MTNMO                    BACK AGAIN FOR RE-MAP           03030000
MTOPO    DSW   ,                        OPERAND CARD POINTER            03060000
MTOPL    DS    C                        OPERAND LENGTH                  03090000
MTOPND   EQU   *                        OPERAND                         03120000
         ORG   MTNMO                    BACK FOR RE-MAP                 03150000
MTCOP    DS    C                        COMMENT OUTPUT POINTER          03180000
MTCML    DS    C                        COMMENT LENGTH                  03210000
MTCMM    EQU   *                        COMMENT                         03240000
         ORG   MTNMO                    BACK AGAIN                      03270000
MTSTC    DS    C                        STRING COUNT                    03300000
MTSTO    DS    C                        STRING1 POINTER                 03330000
MTSTL    DS    C                        STRING1 LENGTH                  03360000
MTSTR    EQU   *                        STRING1                         03390000
         ORG   MTNMO                    ORG BACK FOR NEXT STRING        03420000
MTSTO2   DS    C                        STRING2 POINTER                 03450000
MTSTL2   DS    C                        STRING2 LENGTH                  03480000
MTSTR2   EQU   *                        STRING2                         03510000
         SPACE 3                                                        03540000
PARMTAB  DSECT ,                        MAP OF PARAMETER TABLE ENTRIES  03570000
         SPACE                                                          03600000
PFLAG    DSW   PSUB,                    SUB-OPERAND (ALL)              X03630000
               PSUBL,                   SUB-OPERAND (LAST)             X03660000
               PSUBF,                   SUB-OPERAND (FIRST)            X03690000
               PPASS,                   PASSED PARAMETER               X03720000
               POMIT,                   OMITTED OPERAND                X03750000
               POS,                     ORDINARY SYMBOL                X03780000
               PSDT,                    SELF-DEFINING TERM             X03810000
               PCHAR                    CHARACTER STRING                03840000
         SPACE                                                          03870000
PCS      EQU   *                        PARAMETER--CHARACTER STRING     03900000
PTAT     DS    C                        TYPE ATTRIBUTE                  03930000
PPAD     DS    4C                       PAD                             03960000
         DS    C                        DEFAULT BITS                    03970000
PKAT     DS    C                        COUNT ATTRIBUTE (LENGTH)        03990000
PSTRING  EQU   *                        STRING START                    04020000
         ORG   PCS                      RE-SET FOR NEXT MAP             04050000
*PSDT    EQU   *                        SELF DEFINING TERM              04080000
         DS    C                        TYPE ATTRIBUTE                  04110000
PVAL     DS    4C                       VALUE                           04140000
         ORG   PCS                      NEXT MAP                        04170000
*POS     EQU   *                        ORDINARY SYMBOL REFERENCE       04200000
         DS    C                        TYPE                            04230000
PLAT     DS    2C                       LENGTH ATTRIBUTE                04260000
PSAT     DS    2C                       SCALE ATTRIBUTE                 04290000
ATTRIB   DSW   TDEFALT,                 TYPE ATTRIBUTE IS DEFAULT VALUEX04296000
               LDEFALT,                 SAME FOR LENGTH                X04302000
               SDEFALT,                 SAME FOR SCALE                 X04308000
               UDEFALT                  UNDEFINED SYMBOL                04314000
         ORG   PCS                      NEXT MAP                        04320000
*POM     EQU   *                        OMITTED--SAME AS PCS            04350000
*PSUB    EQU   *                        SUBLIST HEADER                  04380000
         DS    C                        TYPE                            04410000
PLATSUB  DS    2C                       LENGTH ATTRIBUTE                04440000
PSATSUB  DS    2C                       SCALE ATTRIBUTE                 04470000
         ORG   PLATSUB                  ORIGIN TWO                      04500000
PVALSUB  DS    4C                       VALUE                           04530000
PNAT     DS    2C                       NUMBER ATTRIBUTE--COUNT OF     X04560000
                                          SUBOPERANDS                   04590000
PKATSUB  DS    2C                       TOTAL COUNT OF ALL CHARACTERS  X04620000
                                          LESS DELIMITING COMMAS AND   X04650000
                                          PARENS.                       04680000
PLIST    DS    3C                       VECTOR LIST POINTER.            04710000
         EJECT                                                          04740000
RSYMRCD  DSECT                                                          04770000
         COPY  RSYMRCD                  SYMBOL PHASE RECORD DSECT HERE  04800000
         EJECT                                                          04830000
         COPY  GENCOM                                                   04860000
GENCOMLN EQU   (GENCOM99-GENCOM+7)/8    MODULE COMMON LENGTH IN        X04890000
                                                       DOUBLE WORDS     04920000
         EJECT                                                          04950000
         COPY  JTMTXT                                                   04980000
*                                                                       05010000
*        OP CODE TABLE ENTRY MAP                                        05040000
*                                                                       05070000
         SPACE                                                          05100000
OPNTRY   DSECT                                                          05130000
OCHAIN   DS    XL2                      CHAIN POINTER                   05160000
OFLAGS   DS    X                        FLAGS                           05190000
OMNEM    EQU   *                        MNEMONIC                        05220000
         ORG   OPNTRY                   DUMMY FOR POST VARIABLE FIELD   05250000
OFLAGA   DS    X                        FLAGA                           05280000
OINTCD   DS    X                        INTERNAL OP CODE                05310000
OINTCD2  DS    X                        OP CODE BYTE 2                  05340000
OMASK    EQU   OINTCD2                  ESTENDED MNEMONIC MASK          05370000
         COPY  JERRCD                                                   05400000
ERRMESS  DSECT                                                          05430000
EMSGSVTY DS    C                        ERROR SEVERITY CODE             05460000
EMSGCODE DS    C                        ERROR NUMBER                    05490000
EMSGHL   EQU   *-EMSGSVTY               LENGTH FOR SEVERITY NUMBER      05520000
ENTRYLNG DS    C                        SNAPSHOT/DATA LENGTH            05550000
EMSGNTRY DS    CL8                      SNAPSHOT/DATA                   05580000
*                                                                       05610000
* THIS DSECT MAPS THE OPSYN TABLE ENTRY                                 05640000
*                                                                       05670000
OPSYNTRY DSECT                                                          05700000
OPSYNFLG DSW   ,,,,                     SPACE FOR OPCODE FLAGS         X05720000
               OMAC,                    OPSYN MACRO (NOT USED HERE)    X05740000
               ODEL                     DELETED                         05760000
OPSYNATT DS    XL3                      ATTRIBUTES                      05780000
ONAMEL   DS    XL1                      NAME LENGTH                     05800000
ONAME    DS    XL8                      NAME                            05820000
OPSYND   EQU   *                                                        05850000
         EJECT                                                          05880000
X3000    DSECT                                                          05910000
         SPACE 3                                                        05940000
*EQUATES TO BE USED IN SHIFT-MULTIPLY OPERATIONS                        05970000
         SPACE                                                          06000000
TIMES1   EQU   0                                                        06030000
TIMES2   EQU   1                                                        06060000
TIMES4   EQU   2                                                        06090000
TIMES8   EQU   3                                                        06120000
TIMES16  EQU   4                                                        06150000
TIMES32  EQU   5                                                        06180000
TIMES64  EQU   6                                                        06210000
TIMES128 EQU   7                                                        06240000
TIMES256 EQU   8                                                        06270000
         SPACE 3                                                        06300000
*        REGISTERS                                                      06330000
         SPACE                                                          06360000
INDEX1   EQU   R14                      SCRATCH USED AS TEMPORARY INDEX 06390000
INDEX2   EQU   R15                                                      06420000
RETURN   EQU   R9                       RETURN REGISTER AFTER LINK      06450000
SYMPTR   EQU   R11                      FIXED SYMBOL RECORD BASE        06480000
SYMPTR2  EQU   R4                       VARIABLE SYMBOL RECORD BASE     06510000
FLDPTR   EQU   R2                       MOVEABLE TEXT POINTER--LOCTR    06540000
FLDLN    EQU   R2                       LENGTH REGISTER--EVAL           06570000
RMOVE    EQU   R3                       EXECUTED MOVE REGISTER--KEEP   X06600000
                                          CLEAR.                        06630000
EVEN     EQU   R2                         EVEN--                        06660000
ODD      EQU   R3                             ODD PAIR                  06690000
RCOMP0   EQU   R0                       SCRATCH AS NEEDED               06720000
RCOMPX   EQU   R2                       NON-VOLATILE COMP REG           06750000
STACKPTR EQU   R5                       CURRENT EVAL STACK LEVEL        06780000
INPTR    EQU   R5                       JTEXT INPUT POINTER             06810000
RCOMP1   EQU   R1                       SCRATCH COMPUTATION REGISTER    06840000
RLOCTR   EQU   R6                       LOCATION COUNTER SEGMENT        06870000
VTXTPTR  EQU   R6                       VARIABLE PORTION OF TEXT        06900000
FTXTPTR  EQU   INPTR                    FIXED PORTION OF TEXT           06930000
SYMLEN   EQU   R4                       SYMBOL LENGTH                   06960000
FTXTIN   EQU   R5                                                       06990000
VTXTIN   EQU   R6                                                       07020000
FTXTOUT  EQU   R11                                                      07050000
VTXTOUT  EQU   R4                                                       07080000
HEDRPTR  EQU   FLDPTR                   PARAMETER HEADER                07110000
METAPTR  EQU   VTXTIN                   PARAMETER META TEXT             07140000
         SPACE                                                          07170000
*        LANGUAGE DEPENDENT VALUES                                      07200000
         SPACE                                                          07230000
MAXDEC   EQU   10                       MAXIMUM DIGITS CONVERTIBLE     X07260000
                                          CHARACTER TO BINARY.          07290000
MAXNAME  EQU   8                        MAXIMUM SYMBOL LENGTH           07320000
HIALPHA  EQU   JAT                      LAST ALPHABETIC CHARACTER       07350000
LOALPHA  EQU   JA                       FIRST ALPHABETIC CHARACTER      07380000
HINUM    EQU   J9                                                       07410000
LONUM    EQU   J0                                                       07440000
HIALNUM  EQU   HIALPHA                                                  07470000
LOALNUM  EQU   LONUM                                                    07500000
         SPACE                                                          07530000
*        SYSTEM TO GENERATOR TEXT FILE EQUATES                          07560000
         SPACE                                                          07590000
GTFILE   EQU   FILE2                    GENERATED TEXT FILE             07620000
PMTFILE  EQU   FILE1                    PROGRAMMER MACRO TEXT           07650000
SMTFILE  EQU   FILE1                    SYSTEM MACRO TEXT FILE          07680000
DFILE    EQU   FILE1                    DICTIONARY FILE                 07710000
SDFILE   EQU   FILE3                    SYMBOL DEFINITION FILE          07740000
SRFILE   EQU   FILE3                    SYMBOL REFERENCE FILE           07770000
         SPACE                                                          07800000
*        GENERATOR LIMITING EQUATES--MAY BE CHANGED TO INCREASE NON    X07830000
                                        LANGUAGE DEPENDENT LIMITS.      07860000
         SPACE                                                          07890000
MAXREC   EQU   256                      MAXIMUM RECORD SIZE             07920000
MAXSTRNG EQU   17                       MAXIMUM PRE-BEGIN POST-END SIZE 07950000
MAXSYM   EQU   MAXNAME                  MAXIMUM SYMBOL LENGTH           07980000
MAXCHAR  EQU   255                      MAXIMUM CHARACTER STRING        08010000
MAXGENLN EQU   298                                                      08040000
D256     EQU   256                      MAXIMUM MOVE LENGTH             08050000
         SPACE                                                          08070000
*        DICTIONARY ROUTINE ENTRY PARAMETERS                            08100000
         SPACE                                                          08130000
PHASENTR EQU   0                                                        08160000
MACRCALL EQU   2                                                        08190000
CALLEND  EQU   4                                                        08220000
MACRKWRD EQU   6                                                        08250000
MACRPOST EQU   8                                                        08280000
PROTOKWD EQU   10                                                       08310000
PROTOEND EQU   12                                                       08340000
GBLDICTR EQU   14                                                       08370000
GBLDICTS EQU   16                                                       08400000
LCLDICTR EQU   18                                                       08430000
LCLDICTS EQU   20                                                       08460000
PARMTBLR EQU   22                                                       08490000
SEQSYMBR EQU   24                                                       08520000
ORDSYMBR EQU   26                                                       08550000
MACRFINI EQU   28                                                       08580000
         EJECT                                                          08610000
         COPY  JERMSGCD                                                 08640000
         EJECT                                                          08670000
         JCSECT (X3A00)                                                 08700000
* VS1 RELEASE 3 CHANGES                                                 08710001
*A026200,192400-192867                                         @OX00407 08720005
*D192600                                                       @OX00407 08722005
* VS1 RELEASE 3.1 CHANGES                                               08724031
*A532600                                                       @YA03863 08726031
*A531100-531280                                                @OY06599 08728005
*D532600                                                       @OY06599 08728405
*D531100-531280                                                @OX09721 08728505
*A710500                                                       @OX09721 08728605
*A640000-640140                                                @AZ10934 08728700
         JMODID                                                         08730000
         SPACE 3                                                        08760000
MENTRY   JSAVE BASE=YES                                                 08790000
         SPACE                                                          08820000
         JENTRY (X3A01=MENTRY)          ENTRY POINT AS EXTERNAL NAME    08850000
         SPACE 3                                                        08880000
*        INITIALIZE THE GENERATOR                                       08910000
         SPACE                                                          08940000
MINIT    EQU   *                                                        08970000
         SPACE                                                          09000000
         SPACE                                                          09150000
*        GET CORE FOR MODULE COMMON                                     09180000
         SPACE                                                          09210000
         JGETCORE DBL=GENCOMLN                                          09240000
         SPACE                                                          09270000
         LR    R7,R10                   BASE FOR MODULE COMMON SET UP   09300000
         XC    GENCOM(GENSPEND-GENCOM),GENCOM CLEAR TO ZEROS            09330000
         SPACE                                                          09360000
*        PASS CONTROL TO DICTIONARY INITIALIZATION                      09390000
         SPACE                                                          09420000
         DICTCALL   PHASENTR                                            09450000
         SPACE                                                          09480000
*        PERMANENTLY CLEAR A REGISTER                                   09510000
         SPACE                                                          09540000
         SR    RMOVE,RMOVE              LOW BYTE ONLY TO BE USED        09570000
         SPM   RMOVE                    NO INTERRUPTS, PLEASE           09600000
         SPACE                                                          09690000
*        PREPARE EVAL WORK SPACE                                        09720000
         SPACE                                                          09750000
         LA    RCOMP1,ENDSTACK          LOCATE END OF STACK             09780000
         ST    RCOMP1,STACKEND          AND SAVE IT                     09810000
         LA    RCOMP1,STRING1           STRING BUFFER 1                 09840000
         ST    RCOMP1,STRPTR1             AND SAVE IT                   09870000
         LA    RCOMP0,STRING2           MASK FOR                        09900000
         XR    RCOMP0,RCOMP1              FLIPPING TO                   09930000
         ST    RCOMP0,STRPTR2           STRING BUFFER 2 AND BACK.       09960000
         LA    RCOMP0,ERRSTK            GET PTR TO START OF ERROR STK   09990000
         ST    RCOMP0,ESTKNDX           INITIALIZE MOVEABLE STACK PTR   10020000
         SPACE 3                                                        10050000
MINPUT   EQU   *                        INPUT SOURCE                    10080000
         SPACE                                                          10110000
         JGETL FILE=FILE1               GET NEXT INPUT TEXT RECORD      10140000
         SPACE                                                          10170000
         SPACE                                                          10950000
         LR    INPTR,R11                SET UP A BASE FOR               10980000
         USING JTEXT,INPTR                INPUT RECORD AND              11010000
         ST    INPTR,TXTIN              ALSO SAVE IT FOR LATER USE      11040000
         SR    RMOVE,RMOVE              CLEAR A REGISTER FOR LATER      11070000
         SPACE                                                          11100000
         GOIF  INMACRO,OFF=MINPUT12     NOT IN A MACRO, CONTINUE.       11130000
         SET   JGEN,ON                    ELSE INDICATE THAT THIS IS A X11160000
                                          GENERATED STATEMENT.          11190000
         SPACE                                                          11220000
MINPUT12 EQU   *                                                        11250000
         SPACE                                                          11280000
         GOIF  JPRONLY,ON=FLUSH90       ALREADY PRINT ONLY              11490000
         GOIF  INMACDEF,ON=MINPUT35     GO IF WITHIN MACRO DEFINITIONS  11550000
         GOIF  JPSOP,ON=MINPUT20        SEPARATE PSEUDO OPS             11560000
         GOIF  (FLUSH1,FLUSH2,FLUSH3),NONE=MFEVAL                       11565000
         GOIF  FLUSH3,ON=FLUSH05                                        11570000
         GOIF  FLUSH2,ON=FLUSH20                                        11575000
         GOIF  JSYSMAC,ON=FLUSH20       CONTINUE TO PRINT IF SYSMAC     11580000
         B     FLUSH25                  EXIT                            11590000
MINPUT20 GOIF  JTERROR,EQ=FLUSH84       ERROR RECORD                    11600000
         GOIF  JTEOF,EQ=MEXIT10         END OF FILE                     11610000
         GOIF  (FLUSH1,FLUSH2,FLUSH3),NONE=MINPUT22                     11620000
         GOIF  FLUSH1,ON=MINPUT25       BRANCH IF END FOUND             11622000
         GOIF  FLUSH3,ON=FLUSH05        BRANCH IF END TO BE GENERATED   11624000
         GOIF  JTEEOF,NE=FLUSH10                                        11626000
         GOIF  JSYSMAC,OFF=FLUSH25                                      11628000
         B     FLUSH30                                                  11630000
MINPUT22 GOIF  JTEEOF,NE=MINPUT50       BR IF NOT END OF SOURCE INPUT   11632000
FLUSH05  SET   FLUSH3,OFF               RESET                           11635000
         SET   FLUSH1,ON                INDICATE END CARD               11640000
         BAL   R3,DMYENDRT              GENERATE END CARD               11650000
         B     MINPUT12                 PROCESS AGAIN                   11660000
MINPUT25 GOIF  JSYSMAC,OFF=FLUSH25      EXIT IF NOSYSMAC                11670000
         GOIF  JTEEOF,EQ=FLUSH30        PRINT SYSTEM MACROS             11680000
         B     FLUSH10                  PRINT FROM SYSIN                11690000
MINPUT35 GOIF  JPSOP,OFF=FLUSH20        TEST IF PSEUDO OPS              11700000
         GOIF  JTERROR,EQ=FLUSH84       ERROR RECORD                    11710000
         GOIF  JTMEND,NE=FLUSH10        BRANCH IF NOT MEND              11720000
         SET   INMACDEF,OFF             INDICATE END OF DEFINITION      11730000
         B     FLUSH20                  PRINT MEND                      11740000
FLUSH10  GOIF  JTCPKEY,LO=FLUSH20       SIFT OUT THE PARAMETER          11750000
         GOIF  JTPEND,HI=FLUSH20,LO=FLUSH15   RECORDS                   11760000
         GOIF  JERR,OFF=MINPUT          CHECK PARAMETERS END RECORDS    11770000
         L     R1,TXTOUT                FOR ERROR FLAG TRANSFER         11780000
         USING MTEXT,R1                                                 11790000
         SET   MERR,ON                  ERROR FLAG TO LAST RECORD PUT   11800000
         DROP  R1                                                       11810000
         B     MINPUT                   NEXT RECORD                     11820000
FLUSH15  GOIF  JTPROTO,NE=MINPUT        DO NOT PASS THEM                11830000
FLUSH20  SET   JPRONLY,ON               SET PRINT ONLY                  11840000
         BAL   RETURN,PRINT90           PRINT THE RECORD                11850000
         SET   JPRONLY,OFF              CLEAN UP THE PRINT FLAGS        11860000
         B     MINPUT                   NEXT RECORD                     11870000
FLUSH25  LA    INPTR,=AL1(D0,D8,JPSOP,D0,JTEOF,D0) SET UP END OF FILE   11880000
         B     MEXIT10                  EXIT                            11890000
FLUSH30  JPUTM FILE=FILE2,ADDR==AL1(D0,D8,JPSOP,D0,JTSICTL,D0)         X11900000
               PUT OUT SPECIAL RCD FOR ICTL SWITCH FOR X51              11910000
         B     MINPUT                   READ NEXT RECORD                11920000
FLUSH84  EQU   *                                                        12660000
         L     R1,TXTOUT                PICK UP PTR TO LAST RCD PUT     12690000
         USING MTEXT,R1                                                 12720000
         GOIF  MTIOP,JTERROR,EQ=FLUSH85 CONT TOUCH AN ERROR RECORD      12750000
         SET   MERR,ON                  INDICATE ERROR TO BE FLAGGED    12780000
         GOIF  MPSOP,OFF=FLUSH85        BRANCH IF NOT PSEUDO-OP         12788000
         GOIF  MTIOP1,JTANOP,LO=FLUSH85 BRANCH IF NOT A GENERATOR-      12796000
         GOIF  MTIOP1,JTMEND,HI=FLUSH85 PROCESSED PSEUDO-OP             12804000
         L     R1,ACTRCNT               PICK UP CURRENT ACTR VALUE      12812000
         SRL   R1,D1                    HALVE IT ON EDITOR ERROR        12820000
         ST    R1,ACTRCNT               SAVE NEW ACTR VALUE             12828000
         DROP  R1                                                       12840000
FLUSH85  EQU   *                        PASS UNCHANGED                  12870000
         SPACE                                                          12900000
         BAL   RETURN,PRINT90           PRINT A COPY, PLEASE            12930000
         B     MINPUT                   GO BACK FOR ANOTHER ONE         12960000
FLUSH90  GOIF  FLUSH3,ON=FLUSH05        BRANCH IF END TO BE GENERATED   12960100
         GOIF  FLUSH1,OFF=FLUSH85       CHECK IF END STATEMENT FOUND    12960200
         GOIF  JSYSMAC,ON=FLUSH85       CHECK IF SYSMAC OPTION IS ON    12960300
         B     FLUSH25                                                  12960400
MEXIT10  LR    R2,INPTR                 PRESERVE EOF RCD POINTER        12961500
         JFRECORE ADDR=FREESTRT         FREE UP DICTIONARY SPACE        12962000
         JFRECORE ADDR=(R7)             RETURN MODULE COMMON TO SYSTEM  12962400
         SPACE                                                          12962800
         LA    R10,GTFILE               ELSE INDICATE GENERATED TEXT    12962900
         JPUTM FILE=(R10),ADDR=(R2)     AND MOVE EOF RECORD             12963000
         LA    R10,SDFILE               LIKEWISE SYMBOL FILE            12963400
         LA    R11,EOFSD                SYMBOL DEFINITION END-OF-FILE   12963800
         JPUTM FILE=(R10),ADDR=(R11)                                    12963900
         JPOINT FILE=FILE1,NEXT=START   REWIND FILE1                    12965700
         JPOINT FILE=FILE3,NEXT=START   REWIND FILE3                    12965800
         JTRUNC FILE=FILE2              TRUNCATE FILE2  TEXT FILE.  DO X12965900
                                        NOT REPOSITION BECAUSE NEXT    X12966000
                                        PHASE NEEDS END OF FILE.        12966400
MGET99   JRETURN ,                      AND EXIT FROM PHASE             12966800
         SPACE                                                          12968400
EOFSD    DC    H'8',AL1(0,0,JTEOFII,0)  SYMBOL DEFINITION END OF FILE   12970200
DMYENDRT JPUTM FILE=FILE2,ADDR=DUMYEND  PUT OUT DUMMY END STATEMENT     12970600
         ST    R3,GENREGS               PRESERVE RETURN REGISTER        12972000
         ST    R11,TXTOUT               PRESERVE TEXT RECORD POINTER    12973800
         L     R12,=A(X3B01)            SET UP TO CALL S.I. PREPROC.    12975600
         BALR  R9,R12                   CALL SYMBOL INTERLUDE PREPROC.  12977400
         L     INPTR,TXTIN              RESTORE PTR TO LAST TEXT RCD    12979200
         CLI   JMSGL,SEV60              CHECK MSGLEVEL                  12979400
         BH    DONTPUT                  DONT FLAG IF HIGH               12979600
         L     R3,TXTOUT                PUTPUT POINTER                  12979800
         USING MTEXT,R3                                                 12980000
         SET   MERR,ON                  FLAG ERROR                      12980200
         DROP  R3                                                       12980400
         JPUTM FILE=FILE2,ADDR==AL1(D0,D12,JPSOP,JNOCNT,JTERROR,D0,D0,DX12981000
               0,D0,SEV60,ERR60,D0) GENERATE GENERATED END DIAGNOSTIC   12982800
DONTPUT  L     R3,GENREGS               RESTORE RETURN REGISTER         12984600
         BR    R3                       RETURN TO CALLER                12986400
         SPACE                                                          12988200
         SPACE                                                          12990000
MINPUT50 EQU   *                                                        13020000
         SPACE                                                          13080000
         GOIF  HIGENOP,NOTLO=MFEVAL     TOO HIGH FOR GENERATOR OP, GO  X13110000
                                          PERFORM SUBSTITUTION.         13140000
         GOIF  LOGENOP,NOTLO=MLKUP      OK, LOOKUP GENERATOR OP AND    X13170000
                                          PROCESS IT.                   13200000
         GOIF  JTCOPY,LT=MFEVAL         LET ICTL,ISEQ,OPSYN GO THRU     13230000
*              ALL THAT REMAIN ARE ANOP,GBLX,LCLX,COPY                  13260000
         BAL   RETURN,PRINT10           PRINT IF OPTIONS ALLOW          13320000
         B     MINPUT                   GO BACK FOR NEXT RECORD         13350000
         SPACE                                                          13380000
         DROP  INPTR                                                    13410000
         SPACE 3                                                        13440000
MFEVAL   EQU   *                        SEND ALL MACHINE AND ASSEMBLER X13470000
                                        OPS OUT FOR FIELD EVALUATION.   13500000
         L     FTXTIN,TXTIN             GET INPUT TEXT POINTER          13530000
         USING JTEXT,FTXTIN               AND DECLARE AS BASE           13560000
         GOIF  JPSOP,OFF=FEVAL10        LOOK ONLY AT PSEUDO-OPS         13590000
         GOIF  JTHCMNT,NE=FEVAL10       ONLY LOOK AT HIDDEN COMMENTS    13620000
         BAL   RETURN,PRINT30           GO TO PRINT THEM IF REQ'D       13680000
         B     MINPUT                   GO BACK FOR NEXT STATEMENT      13710000
*        GET A WORK BUFFER AND SAVE THE POINTER TO IT                   13740000
         SPACE                                                          13770000
FEVAL10  EQU   *                                                        13800000
         SPACE                                                          13830000
         LA    R10,GTFILE               GENERATED TEXT FILE IS OUTPUT   13860000
         GOIF  (JSUBNAME,               ANY SUBSTITUTION,              X13890000
               JSUBOPCD,                                               X13920000
               JSUBOPND),                                              X13950000
               ANY=FEVAL22                GO PREPARE FOR FIELD EVAL.    13980000
         SPACE                                                          14010000
         BAL   RETURN,PRINT25           PUT OUT PRINT IMAGEIF REQD      14040000
         B     MLOCTR                   RETURN TO DRIVER                14070000
         SPACE                                                          14100000
MOVEOP   MVC   JFWORD1(D0),D0(R12)      EXECUTED MNEMONIC MOVE          14130000
         USING OPNTRY,R14               BASE FOR COMPARE                14160000
OPCOMP   CLC   JFWORD1(D0),OMNEM        REMOTE MNEMONIC COMPARE         14190000
         DROP  R14                                                      14220000
         SPACE 3                                                        14250000
         SPACE 3                                                        14280000
FEVAL22  EQU   *                        GET READY FOR SUBSTITUTION      14310000
         SPACE                                                          14340000
         SET   JPRONLY,ON               PUT PRINT ONLY COPY OF MODEL    14370000
         GOIF  JERR,OFF=NOERR           TEST IF ERROR STATEMENT         14400000
         SET   JERR,OFF                 DO NOT FLAG PRESUBST            14408000
         BAL   RETURN,PRINT10           PRINT IF OPTIONS ALLOW          14416000
         SET JERR,ON                    RESET MASTER COPY               14424000
         B     PRINTOFF                 GO ON                           14432000
NOERR    BAL   RETURN,PRINT10           PRINT PRE-SUBSTITUTION COPY     14440000
PRINTOFF SET   JPRONLY,OFF              CLEAN UP STMT MASTER COPY       14448000
         SPACE                                                          14460000
         SR    R11,R11                  SET UP BASE FOR CALC            14490000
         GOIF  JTCPR,HHDRLN,EQ=FEVAL23 BRANCH IF NO COMMENTS            14520000
         SH    R11,JTCPR                GET DISPL TO COMMENTS START     14550000
         B     FEVAL24                  GO CALC COMMENTS,STRNG LEN      14580000
FEVAL23  GOIF  JTSPR,HHDRLN,EQ=FEVAL25  BRANCH IF NO STRINGS            14610000
         SH    R11,JTSPR                GET DISPL TO STRINGS START      14640000
FEVAL24  AH    R11,JTRLI                CALC LENGTH OF COMMENTS,STRS    14670000
FEVAL25  LA    R11,MAXGENLN(,R11)       CALC LENGTH OF BUFFER NEEDED    14700000
         JPUTL FILE=(R10),BUFREQ=(R11)  REQUEST A BUFFER                14730000
         ST    R11,TXTOUT               AND SAVE ITS ADDRESS            14760000
         USING MTEXT,FTXTOUT              AND SET A BASE FOR IT.        14790000
         SPACE                                                          14820000
         MVC   MTEXT(MTHDRLN),JTEXT     MOVE RECORD HEADER TO OUTPUT    14850000
         SET   MGEN,ON                  INDICATE GENERATED STATEMENT    14860000
         SPACE                                                          14880000
*                             NAME FIELD                                14890000
         SPACE                                                          14900000
FEVAL30  EQU   *                                                        14910000
         LA    VTXTOUT,MTHDRLN          START OF VARIABLE OUTPUT FIELD  14940000
         STH   VTXTOUT,MTNMP            STORE NAME FIELD POINTER        14970000
         LH    VTXTIN,JTNMP             PICK UP NAME POINTER            15000000
         SPACE                                                          15030000
         GOIF  JSUBNAME                 SET CONDITION CODE              15060000
         SPACE                                                          15090000
         SPACE                                                          15120000
FEVAL32  BAL   RETURN,MOVEFLD           MOVE THE FIELD TO OUTPUT        15150000
         GOIF  JSUBNAME,OFF=FEVAL40     NO NAME SUBSTITUTION, SKIP      15180000
         L     R15,GENRTRN              PICK UP POINTER TO NAME LENGTH  15210000
         USING JTOPL,R15                DECLARE AS BASE                 15240000
         IC    RMOVE,JTOPL              PICK UP FIELD LENGTH            15260000
         GOIF  (RMOVE),ZERO=FEVAL40     ZERO LENGTH, SKIP AHEAD         15280000
FEVAL33  EQU   *                                                        15390000
         LR    R14,RMOVE                SET UP LOOP COUNT REGISTER      15420000
FEVAL34  LA    R1,D0(R14,R15)           GET PTR TO NEXT TRAILING CHAR   15450000
         CLI   D0(R1),JBLANK            LOOK FOR TRAILING BLANK         15480000
         BNE   FEVAL35                  BRANCH ON NON-BLANK             15510000
         BCT   R14,FEVAL34              LOOP THRU TRAILING BLANKS       15540000
FEVAL35  STC   R14,JTOPL                SAVE FINAL FIELD LENGTH         15570000
         GOIF  JTOPL,D8,LE=FEVAL40      SEE IF FIELD LENGTH ALRIGHT     15600000
         LA    R12,LOGERR01             GET BASE FOR ERROR LOGGING RTN  15630000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          15660000
         DC    AL1(SEV129,ERR129)       ERROR PARAMETERS                15690000
         SET   MNMERR,ON                INDICATE BOGUS NAME             15720000
         MVI   JTOPL,D8                 GIVE BACK ONLY FIRST 8 CHARS    15750000
         SR    VTXTOUT,RMOVE            ADJUST TEXT OUTPUT PTR TO       15780000
         LA    VTXTOUT,D8(,VTXTOUT)     REFLECT TRUNCATED NAME          15810000
         DROP  R15                                                      15840000
         SPACE                                                          15870000
*                             OP CODE FIELD                             15880000
         SPACE                                                          15890000
FEVAL40  EQU   *                                                        15900000
         SPACE                                                          15930000
         LH    VTXTIN,JTOCP             PICK UP INPUT DISPLACEMENT      15960000
         STH   VTXTOUT,MTOCP            STORE OUTPUT DISPLACEMENT       15990000
         SPACE                                                          16020000
         GOIF  JSUBOPCD                 SET CONDITION CODE              16050000
         SPACE                                                          16080000
         SPACE                                                          16110000
FEVAL42  BAL   RETURN,MOVEFLD           MOVE THE FIELD TO OUTPUT        16140000
         GOIF  JSUBOPCD,OFF=FEVAL50     NO OP CODE SUBSTITUTION, SKIP.  16170000
         L     R15,GENRTRN              POINT TO MNEMONIC LENGTH AND    16230000
         USING JTOPL,R15                DECLARE AS BASE.                16260000
         IC    RMOVE,JTOPL              PICK UP OP CODE LENGTH          16290000
         CH    RMOVE,=H'8'              CHECK FOR VALID FIELD LENGTH    16297000
         BH    LOGER128                 BRANCH IF TOO MANY CHARACTERS   16304000
         GOIF  (RMOVE),ZERO=LOGER102    BRANCH IF NULL SUBSTITUTION     16320000
         XC    JFWORD1(L'JFWORD1+L'JFWORD2),JFWORD1 CLEAR NAME BUFFER   16350000
         LA    R1,JTOPND                SET UP STRING START PTR         16380000
         AR    R15,RMOVE                SET UP STRING END PTR           16410000
         LA    R14,D1                   SET UP BXLE INCREMENT           16440000
FEVAL43  CLI   D0(R1),JBLANK            LOOK FOR LEADING BLANK          16470000
         LR    R12,R1                   SAVE PTR IN CASE NON-BLANK      16500000
         BNE   FEVAL45                  BRANCH IF NON-BLANK             16530000
         BXLE  R1,R14,FEVAL43           LOOP THRU LEADING BLANKS        16560000
LOGER102 LA    R12,LOGERR01             GET BASE FOR ERROR LOGGING RTN  16590000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          16620000
         DC    AL1(SEV102,ERR102)       ERROR PARAMETERS                16650000
         B     FEVAL49                  GO FLAG STMT AS BAD             16680000
LOGER128 EQU   *                                                        16710000
         LA    R12,LOGERR01             GET BASE FOR ERROR LOGGING RTN  16740000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          16770000
         DC    AL1(SEV128,ERR128)       ERROR PARAMETERS                16800000
         SET   MPRONLY,ON               INDICATE NO HOPE FOR THIS STMT  16830000
         L     R15,GENRTRN              RESTORE STARTING POINTER        16860000
         MVI   JTOPL,D8                 GIVE BACK ONLY FIRST 8 CHARS    16890000
         SR    VTXTOUT,RMOVE            ADJUST TEXT OUTPUT PTR TO       16920000
         LA    VTXTOUT,D8(,VTXTOUT)     REFLECT TRUNCATED OP CODE       16950000
         B     FEVAL50                  CONTINUE WITH OPERAND           16980000
         DROP  R15                                                      17010000
FEVAL46A CLI   D0(R1),JBLANK            LOOK FOR MORE TRAILING BLANKS   17040000
         BNE   LOGER101                 BRANCH IF NON-BLANK FOUND       17070000
FEVAL46B BXLE  R1,R14,FEVAL46A          LOOP THRU BLANK CHARACTERS      17100000
         LR    R1,R0                    RESTORE END POINTER             17130000
         B     FEVAL46                  GO HANDLE GOOD OP CODE          17160000
FEVAL44  CLI   D0(R1),JBLANK            LOOK FOR FIRST TRAILING BLANK   17190000
         LR    R0,R1                    PRESERVE END POINTER            17220000
         BE    FEVAL46B                 BRANCH IF FOUND                 17250000
FEVAL45  BXLE  R1,R14,FEVAL44           LOOP THRU NON-BLANK CHARS       17280000
FEVAL46  SR    R1,R12                   GET LENGTH OF NON-BLANK STRING  17310000
         STC   R1,JFWORD1-D1            SET UP LENGTH FOR OPSYN SCAN    17400000
         BCTR  R1,D0                    GET MOVE LENGTH OF OP CODE      17430000
         EX    R1,MOVEOP                INSERT OP CODE IN WORK AREA     17460000
         CLC   OPSNSTRT,=F'0'           SEE IF ANY OPSYN TABLE          17490000
         BZ    OPSC5                    BYPASS OPSYN LOOK UP IF NOT     17520000
OPSC1    L     R14,OPSNSTRT             POINT TO START OF TABLE         17560000
OPSC3    C     R14,GDSTRT               CHECK FOR END OF TABLE POINT    17600000
         BNL   OPSC5                    BRANCH IF ALL ENTRIES SCANNED   17640000
         USING OPSYNTRY,R14                                             17670000
         CLC   ONAMEL(L'ONAMEL+L'ONAME),JFWORD1-D1 LOOK FOR THE NAME    17700000
         BE    OPSC4                    BRANCH IF OPSYN FOUND           17730000
         LA    R14,OPSYND-OPSYNTRY(,R14) ADJUST PTR TO NEXT ENTRY       17760000
         B     OPSC3                    GO BACK FOR MORE SEARCHING      17790000
OPSC4    GOIF  ODEL,ON=LOGER102         DELETED OP CODE                 17830000
         LA    R14,OPSYNATT             POINT TO FLAGA AND INTERNAL OPS 17870000
         B     FEVAL46C                 SKIP AHEAD                      17910000
OPSC5    EQU   *                                                        17970000
         L     R15,JFWORD1              ADD TWO HALVES OF MNEMONIC      18000000
         AL    R15,JFWORD2              TO DEVELOP HASH VALUE           18030000
         SR    R14,R14                                                  18060000
         D     R14,=F'71'                 POINTER BY DIVIDING RESULT.   18090000
         AR    R14,R14                  DOUBLE REMAINDER AND            18120000
         A     R14,=A(OPBASE)             ADD IN OP CODE TABLE BASE.    18150000
         JEXTRN (X3K01=OPBASE)          DECLARE EXTERNAL                18180000
         USING OPNTRY,R14               R14 NOW IS BASE FOR OPTAB ENTRY 18210000
OPLOOP   CLC   OCHAIN,=F'0'             SEE IF SUBSTITUTED OP LEGAL     18240000
         BZ    LOGER101                 BRANCH IF NOT EVEN FOUND        18270000
         MVC   JHWORD1,OCHAIN           ALIGN CHAIN POINTER AND         18300000
         LH    R14,JHWORD1                                              18330000
         A     R14,=A(OPBASE)           ADD IN TABLE BASE (NEXT ENTRY)  18360000
         IC    RMOVE,OFLAGS             GET LENGTH OF MNEMONIC FROM     18390000
         N     RMOVE,=A(D7)             OP CODE TABLE ENTRY FLAGS       18420000
         GOIF  (R1),(RMOVE),NE=OPLOOP   NOT EQUAL TO INPUT, LOOP.       18450000
         EX    RMOVE,OPCOMP             ELSE COMPARE MNEMONIC ITSELF.   18480000
         BNE   OPLOOP                   NOT EQUAL, LOOP.                18510000
         LA    R14,D4(RMOVE,R14)        POINT TO FLAGA ENTRY            18540000
FEVAL46C EQU   *                                                        18550000
         MVC   MTFLGA,OFLAGA            FOUND IT--MOVE FLAGA            18570000
         MVC   MTIOP,OINTCD               AND INTERNAL OP TO TEXT.      18600000
         GOIF  MPSOP,ON=FEVAL47         BRANCH IF PSEUDO-OP             18630000
         TM    MTFLGA,BIT0+BIT1         CHECK TYPE OF MACHINE OP        18660000
         BNZ   FEVAL48                  BRANCH IF TWO BYTE OP CODE      18690000
FEVAL47  MVI   MTIOP2,J0                CLEAR 2ND BYTE FOR ALL OTHERS   18720000
FEVAL48  EQU   *                                                        18750000
         B     FEVAL50                  CONTINUE AT OPERAND             18780000
         DROP  R14                                                      18810000
         SPACE                                                          18840000
LOGER101 LA    R12,LOGERR01             GET BASE FOR ERROR LOGGING RTN  18870000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          18900000
         DC    AL1(SEV101,ERR101)       ERROR PARAMETERS                18930000
FEVAL49  SET   MPRONLY,ON               FLAG STMT AS BAD AND CONTINUE   18960000
         SPACE                                                          18990000
*                             OPERAND FIELD                             19000000
         SPACE                                                          19010000
FEVAL50  EQU   *                                                        19020000
         SPACE                                                          19050000
         LH    VTXTIN,JTOPP             OPERAND DISPLACEMENT INPUT      19080000
         STH   VTXTOUT,MTOPP            STORE OUTPUT                    19110000
         GOIF  JSUBOPND                 SET CONDITION CODE              19140000
         SPACE                                                          19170000
         SPACE                                                          19200000
FEVAL52  BAL   RETURN,MOVEFLD           MOVE THE FIELD TO OUTPUT        19230000
         L     R15,GENRTRN              POINT TO MNEM LENGTH    OX00407 19240001
         USING JTOPL,R15                AND DECLARE AS BASE     OX00407 19250001
         IC    RMOVE,JTOPL              PICK UP OPERAND LENGTH  OX00407 19252001
         LA    R1,JTOPND                SET UP START POINTER    OX00407 19254001
         AR    R15,RMOVE                SET UP END POINTER      OX00407 19256001
         SR    R3,R3                    CLEAR COUNTER           OX00407 19258001
         LA    R14,D1                   SET UP BXLE INCREMENT   OX00407 19258401
FEVAL53  CLI   D0(R1),JBLANK            LOOK FOR LEADING BLANK  OX00407 19258801
         BNE   FEVAL55                  BRANCH IF NON-BLANK     OX00407 19259201
         LA    R3,D1(R3)                COUNT BLANKS            OX00407 19259601
         BXLE  R1,R14,FEVAL53           LOOP THRU LEADING BLNKS OX00407 19259701
         B     FEVAL56                  ONLY BLANKS IN OPERAND  OX00407 19259801
FEVAL55  L     R15,GENRTRN              POINT TO CARD POINTER   OX00407 19259901
         BCTR  R15,R0                   FOR OPERAND             OX00407 19263201
         USING MTOCO,R15                AND USE AS BASE         OX00407 19265201
         IC    R1,MTOPO                 UPDATE OPERAND CARD     OX00407 19265601
         AR    R1,R3                    POINTER BY LEAVING OUT  OX00407 19266001
         STC   R1,MTOPO                 LEADING BLANKS          OX00407 19266401
         IC    R1,MTOPL                 UPDATE OPERAND LENGTH   OX00407 19266801
         SR    R1,R3                    BY DELETING             OX00407 19266901
         STC   R1,MTOPL                 LEADING BLANKS          OX00407 19267001
         L     R15,GENRTRN              POINT TO MNEMONIC AGAIN OX00407 19267201
         USING JTOPL,R15                AND DECLARE AS BASE     OX00407 19270501
         LA    R1,JTOPND                SET UP STRING POINTER   OX00407 19273801
         SR    R14,R14                  CLEAR REG FOR LENGTH    OX00407 19277101
         IC    R14,JTOPL                INSERT OPERAND LENGTH   OX00407 19280401
         SR    R14,R3                   CALC NEW OPERAND LENGTH OX00407 19283701
         SR    VTXTOUT,R3               STEP BACK IF BLANKS     OX00407 19287001
         LA    R3,D0(R1,R3)             SET UP STRING POINTER   OX00407 19290301
         EX    R14,MOVEOPND             GET RID OF BLANKS       OX00407 19293601
         SR    RMOVE,RMOVE              CLEAR FOR MOVEFLD       OX00407 19296901
         B     FEVAL56                  BRANCH OVER MOVE        OX00407 19300201
         DROP  R15                                              OX00407 19303501
MOVEOPND MVC   D0(D0,R1),D0(R3)         GET RID OF BLANKS       OX00407 19306801
         SPACE 2                                                OX00407 19310101
FEVAL56  AR    VTXTOUT,FTXTOUT          GET PTR TO OPERAND END  OX00407 19313401
         MVI   D0(VTXTOUT),JBLANK       SUPPLY TRAILING BLANK           19316701
         LA    VTXTOUT,D1(,VTXTOUT)     ADJUST OUTPUT POINTER           19320000
         SR    VTXTOUT,FTXTOUT          RE-CALC NEXT FIELD DISPLACEM'T  19350000
         SPACE                                                          19380000
*                             COMMENTS AND STRINGS                      19390000
         SPACE                                                          19400000
FEVAL60  EQU   *                                                        19410000
         SPACE                                                          19440000
         STH   VTXTOUT,MTCPR            COMMENT OUTPUT POINTER TO TEXT  19470000
         LH    VTXTIN,JTCPR             PICK UP COMMENT DISPLACEMENT    19500000
         BAL   RETURN,MOVEFLD           MVOE THE FIELD                  19530000
         SPACE                                                          19560000
*        STRINGS                                                        19590000
         SPACE                                                          19620000
         STH   VTXTOUT,MTSPR            STORE STRING POINTER--OUTPUT    19650000
         LH    VTXTIN,JTSPR             PICK UP POINTER--INPUT          19680000
         GOIF  JTSPR,HHDRLN,NE=FEVAL63  STRING POINTER POINTS TO END OFX19710000
                                          TEXT HEADER (NULL), BRANCH.   19740000
         LA    RCOMP1,L'JTSTC           JUST MOVE STRING COUNT          19770000
         B     FEVAL64                  AND SKIP AHEAD                  19800000
         SPACE                                                          19830000
FEVAL63  EQU   *                                                        19860000
         SPACE                                                          19890000
         LH    RCOMP1,JTRLI             LENGTH OF REMAINDER OF RECORD   19920000
         SR    RCOMP1,VTXTIN              IS LENGTH MINUS DISPLACEMENT  19950000
         BCTR  RCOMP1,D0                  OF STRINGS MINUS ONE          19980000
FEVAL64  AR    VTXTIN,FTXTIN            ABSOLUTE INPUT ADDRESS          20010000
         AR    VTXTOUT,FTXTOUT          ACTUAL OUTPUT ADDRESS           20040000
         EX    RCOMP1,MVCFLD10          MOVE THE REST OF THE RECORD     20070000
         SPACE                                                          20100000
FEVAL90  EQU   *                                                        20130000
         SPACE                                                          20160000
         LA    VTXTOUT,D1(RCOMP1,VTXTOUT) COMPUTE TOTAL RECORD LENGTH   20190000
         SR    VTXTOUT,FTXTOUT            AND STORE IN OUTPUT           20220000
         STH   VTXTOUT,MTRLI                                            20250000
         SPACE 3                                                        20310000
*        SYMBOL PROCESSING FOR ASSEMBLY PHASES                          20340000
         DROP  FTXTIN                                                   20370000
         SPACE                                                          20400000
MLOCTR   EQU   *                                                        20430000
         USING JTEXT,FTXTOUT                                            20460000
         GOIF  JPRONLY,ON=ERRDUMP       IGNORE ALL PRINT-ONLY STMTS     20490000
         GOIF  JPSOP,OFF=MLOCTR10       SKIP IF NOT PSEUDO-OP           20520000
         GOIF  JTIOP,JTCALL,EQ=MINPUT   GO NO FURTHER ON MACRO CALL     20530000
         GOIF  JTIOP,JTEND,NE=MLOCTR05  IF NOT SUBSTITUTED END, SKIP    20580000
         L     RCOMPX,MACROLVL          GET MACRO NEST COUNT            20610000
         GOIF  (RCOMPX),NOTPOS=MLOCTR02 BRANCH IF NO POP NECESSARY      20640000
         ST    FTXTOUT,GENREGS          PRESERVE OUTPUT TEXT POINTER    20670000
         SET   GENEND,ON                INDICATE END FROM INSIDE MACRO  20700000
MLOCTR01 EQU   *                                                        20730000
         DICTCALL MACRFINI              POP ONE LEVEL OF MACRO NEST     20760000
         BCT   RCOMPX,MLOCTR01          DECREMENT NEST COUNT            20790000
         L     FTXTOUT,GENREGS          RESTORE TEXT POINTER            20820000
MLOCTR02 EQU   *                                                        20850000
         SET   INMACRO,OFF              INDICATE OUT OF MACRO NEST      20880000
         SET   FLUSH1,ON                INDICATE TEXT TO BE FLUSHED     20910000
         B     MLOCTR10                 PROCEED                         20940000
MLOCTR05 EQU   *                                                        20970000
         GOIF  JTIOP,JTTITLE,NE=MLOCTR10 SEE IF PSEUDO-OP IS TITLE      21000000
         LH    EVEN,JTNMP               IF SO, GET NAME FIELD DISPL     21030000
         AR    EVEN,FTXTOUT             DEVELOP PTR TO NAME FIELD       21060000
         USING JTNMO,EVEN                                               21090000
         SR    ODD,ODD                  CLEAR LENGTH REGISTER           21120000
         IC    ODD,JTNML                PICK UP NAME LENGTH             21150000
         GOIF  (ODD),ZERO=ERRDUMP       SEE IF NAME IS PRESENT          21180000
         GOIF  JTNML,D8,HI=LOGER125     BRANCH IF NAME TOO LONG         21210000
         LA    R1,JTNAME(ODD)           GET PTR PAST END OF NAME FIELD  21240000
         BCTR  R1,D0                    POINT TO LAST CHARACTER         21260000
         BCT   ODD,TITLE200             CHECK IF LENGTH IS ONE          21280000
         B     TITLE300                 STRING IS ONE CHARACTER         21300000
TITLE100 BCTR  R1,D0                    NEXT CHARACTER                  21320000
TITLE200 CLI   D0(R1),JAT               CHECK IF ALPHANUMERIC           21340000
         BH    LOGER125                 ERROR IF NOT                    21360000
         BCT   ODD,TITLE100             CHECK NEXT                      21380000
         BCTR  R1,D0                    R1 NOW POINTS TO FIRST CHAR     21400000
         CLI   D0(R1),JPERIOD           CHECK IF SEQUENCE SYMBOL        21420000
         BE    TITLE400                 MAY BE SEQUENCE SYMBOL          21440000
TITLE300 CLI   D0(R1),JAT               MUST BE ALPHANUMERIC            21460000
         BH    LOGER125                 ERROR IF NOT                    21480000
         GOIF  FRSTTITL,ON=LOGER104     BRANCH IF NAMED TITLE NOT FIRST 21500000
         IC    ODD,JTNML                LENGTH OF NAME FIELD            21520000
         EX    ODD,TITLEMOV             MOVE DECK ID                    21540000
         SET   FRSTTITL,ON              INDICATE TITLE FOUND            21560000
         B     ERRDUMP                  GET NEXT RECORD                 21580000
TITLE400 CLI   D1(R1),JA                CHECK IF 2ND CHAR ALPHA         21600000
         BL    LOGER125                 ERROR IF NOT                    21620000
         B     MLOCTR11                 NAME FIELD IS SEQUENCE SYMBOL   21640000
LOGER104 LA    R12,LOGERR01             GET PTR TO ERROR ROUTINE        21690000
         BALR  R9,R12                   GO TO LOG THE ERROR             21720000
         DC    AL1(SEV104,ERR104)       ERROR PARAMETERS                21750000
         B     ERRDUMP                  GO TO FINISH UP STATEMENT       21780000
MLOCTR10 GOIF  JNMERR,ON=MLOCTR40       SKIP IF NAME ALREADY BAD        21810000
         LH    EVEN,JTNMP               IF NOT, GET NAME FIELD DISPL    21840000
         AR    EVEN,FTXTOUT             DEVELOP PTR TO NAME FIELD       21870000
         GOIF  JTNML,D0,EQ=MLOCTR30     BRANCH IF NAME NOT PRESENT      21900000
         GOIF  JTNAME,JPERIOD,NE=MLOCTR20 SEE IF NAME IS SEQ SYMBOL     21930000
MLOCTR11 EQU   *                                                        21960000
         GOIF  GENEND,ON=MLOCTR12       BRANCH IF END FROM MACRO        21990000
         GOIF  INMACRO,OFF=MLOCTR15     BRANCH IF IN OPEN CODE          22020000
MLOCTR12 EQU   *                                                        22050000
         GOIF  JMLOGIC,ON=MLOCTR40,     BRANCH IF SEQ SYMB NOT         X22080000
               ELSE=MLOCTR16            TO BE SUPPRESSED                22110000
MLOCTR15 GOIF  JALOGIC,ON=MLOCTR40      BRANCH IF SEQ SYMB NOT SUPRESD  22140000
MLOCTR16 EQU   *                                                        22170000
         MVI   JTNML,D0                 INDICATE NO NAME                22200000
         B     MLOCTR40                 PROCEED AS IF NO NAME           22230000
MLOCTR20 GOIF  JDEF,ON=MLOCTR25         CHECK IF NAME ALLOWED           22260000
         GOIF  JTIOP,JTOPSYN,EQ=MLOCTR25                                22262000
         LA    R12,LOGERR01             ILLEGAL NAME FIELD              22270000
         BALR  R9,R12                   LOG ERROR                       22280000
         DC    AL1(SEV16,ERR16)                                         22282000
         SET   JNMERR,ON                INDICATE INVALID NAME FIELD     22284000
MLOCTR25 GOIF  JTNML,D8,HI=LOGER125     BRANCH IF NAME TOO LONG         22286000
         SR    ODD,ODD                  CLEAR LENGTH REGISTER           22290000
         IC    ODD,JTNML                PICK UP NAME LENGTH             22320000
         LA    R1,JTNAME(ODD)           GET POINTER PAST NAME FIELD     22350000
MLOCTR27 BCTR  R1,D0                    BACK UP TO NEXT CHARACTER       22380000
         CLI   D0(R1),JAT               CHECK FOR NAME VALIDITY         22410000
         BH    LOGER125                 BRANCH IF OUT OF RANGE          22440000
         BCT   ODD,MLOCTR27             BRANCH UNTIL ALL CHARS CHECKED  22470000
         CLI   D0(R1),J9                CHECK FIRST CHAR FOR ALPHA ONLY 22500000
         BH    MLOCTR30                 BRANCH IF ALL CRITERIA MET      22530000
LOGER125 EQU   *                                                        22560000
         LA    R12,LOGERR01             GET BASE FOR ERROR LOGGING RTN  22590000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          22620000
         DC    AL1(SEV125,ERR125)       ERROR PARAMETERS                22650000
         SET   JNMERR,ON                INDICATE BAD NAME               22680000
         B     MLOCTR40                 GO ON                           22710000
TITLEMOV MVC   JDECKIDL(D0),JTNML       EXECUTED DECK ID MOVE           22740000
SYSMOVE  MVC   SYSECT(D0),JTNML         EXECUTED SYSECT MOVE            22770000
MLOCTR30 GOIF  JPSOP,OFF=MLOCTR40       LOOK AT PSEUDO-OPS ONLY         22800000
         GOIF  JTIOP,JTCOM,GT=MLOCTR40  LOOK FOR PSEUDO-OPS CSECT,      22830000
         GOIF  JTIOP,JTSTART,LT=MLOCTR40 DSECT, START, AND COM          22860000
         IC    ODD,JTNML                PICK UP NAME LENGTH             22890000
         EX    ODD,SYSMOVE              ASSIGN NAME TO SYSECT           22920000
MLOCTR40 EQU   *                                                        22950000
         DROP  EVEN                                                     22980000
MLOCTR60 L     R12,=A(X3B01)            GET PTR TO SYMBOL PROCESSOR     23010000
         JEXTRN (X3B01=X3B01)                                           23040000
         BALR  R9,R12                   LINK TO SYMBOL INTER PREPROCESS 23070000
         DROP  R11                                                      23100000
         SPACE                                                          23130000
* PUT OUT ANY ERROR MESSAGES LOGGED AGAINST THE RECORD JUST             23160000
*        PROCESSED                                                      23190000
         SPACE                                                          23220000
ERRDUMP  EQU   *                                                        23250000
         LH    R3,ERRCNT                PICK UP ERROR COUNT             23280000
         LTR   R3,R3                    SEE IF ANY MESSAGES LOGGED      23310000
         BZ    MINPUT                   GO GET NEXT RECORD IF NOT       23340000
         L     R2,TXTOUT                GET PTR TO OUTPUT RECORD        23370000
         USING JTEXT,R2                                                 23400000
         SET   JERR,ON                  INDICATE ERROR FLAG FOR THIS    23430000
         DROP  R2                                                       23490000
         LCR   R6,R3                    GET NUMBER OF ERRORS - NEG      23520000
         AH    R6,=H'5'                 ADD MAX LOGGED ERRORS           23550000
         LTR   R6,R6                    SEE IF NUMBER LT OR EQ MAX      23580000
         BNM   ERRDUMP1                 BRANCH IF SO                    23610000
         MVC   ERRCNT,=H'2'             INSURE OK ERROR COUNT           23620000
         LA    R12,LOGERR01             GET BASE FOR ERROR LOGGING RTN  23640000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          23670000
         DC    AL1(SEV126,ERR126)       ERROR PARAMETERS                23700000
         LA    R3,D6                    SET NUMBER OF ERROR LOGGED      23730000
ERRDUMP1 LA    R4,ERRSTK                GET PTR TO START OF ERROR STK   23760000
         ST    R4,ESTKNDX               REINPTIALIZE MOVEABLE STK PTR   23790000
ERRDUMP2 SR    R5,R5                    CLEAR LENGTH REGISTER           23820000
         USING ERRMESS,R4                                               23850000
         JPUTL FILE=FILE2,BUFREQ=D20   GET BUFFER FOR ERROR RECORD      23880000
         USING JERRCD,R11                                               23910000
         MVC   JERECL(D9),=AL1(D0,D20,JPSOP,JNOCNT,JTERROR,D0,D0,D0,D0)X23940000
                INSERT RECORD LENGTH, FLAGS, ETC. IN RECORD             23970000
         MVC   JESEV(D11),EMSGSVTY      INSERT SEVERITY, ERROR, DATA    24000000
         GOIF  ENTRYLNG,D0,EQ=ERRDUMP3  SKIP IF DATA LENGTH OF ZERO     24030000
         LA    R5,D8                    ALLOW FOR DATA ITEM             24060000
ERRDUMP3 LA    R4,D3(R5,R4)             BUMP TO NEXT ERROR STACK ITEM   24090000
         BCT   R3,ERRDUMP2              DECREMENT COUNT, BRANCH NON-0   24120000
         STH   R3,ERRCNT                REINITIALIZE ERROR COUNTER      24150000
         B     MINPUT                   READ NEXT STATEMENT             24202000
         DROP  R4                                                       24210000
         DROP  R11                                                      24240000
         EJECT                                                          24270000
*                                                                       24300000
* MOVERTN - THIS SUBROUTINE MOVES RECORDS BUFFER-TO-BUFFER.             24330000
*           IT ACCOMPLISHES THE FUNCTION OF A JPUTM, WHICH CANT         24360000
*           BE USED SINCE A POINTER TO THE OUTPUT RECORD MUST BE        24390000
*           GOTTEN AND SAVED.                                           24420000
*                                                                       24450000
MOVERTN1 MVC   D0(D256,INDEX1),D0(INDEX2) MOVE BLOCK OF 256 BYTES       24480000
         LA    INDEX1,D256(,INDEX1)     ADJUST DESTINATION POINTER      24510000
         LA    INDEX2,D256(,INDEX2)     ADJUST SOURCE POINTER           24540000
MOVERTN  SH    RCOMP1,=H'256'            SEE IF ONE MOVE WILL DO IT     24570000
         BP    MOVERTN1                  BRANCH IF NOT                  24600000
         AH    RCOMP1,=H'255'            GET MOVE LENGTH REMAINING      24630000
         EX    RCOMP1,MOVERTN2           MOVE REMAINING SEGMENT         24660000
         BR    RETURN                    RETURN                         24690000
MOVERTN2 MVC   D0(D0,INDEX1),D0(INDEX2) EXECUTED MOVE, 256 OR LESS      24720000
         EJECT                                                          24750000
MLKUP    EQU   *                        COMPUTE BRANCH ADDRESS FROM    X24780000
                                        TABLE                           24810000
*        BRANCH TABLE CONSISTS OF TWO BYTE ADDRESSES TO BE USED AS      24840000
*        INDICES FOR BRANCHES TO THE NAMED ROUTINES.  INTERNAL OP CODE  24870000
*        FROM TEXT IS MULTIPLIED BY TWO AND USED AS AN INDEX TO THE     24900000
*        TABLE.                                                         24930000
         SPACE 3                                                        24960000
         USING JTEXT,INPTR              BASE FOR INPUT TEXT             24990000
         SR    INDEX1,INDEX1            CLEAR A REGISTER                25050000
         IC    INDEX1,JTIOP             PICK UP INTERNAL OP CODE        25080000
         SLL   INDEX1,TIMES2            MULTIPLY BY 2                   25110000
         LH    INDEX1,MOPTABLE(INDEX1)  USE IT AS INDEX TO PICK UP     X25140000
                                        BRANCH DISPLACEMENT.            25170000
         B     MOPRTNS(INDEX1)          USE DISPLACEMENT AS INDEX       25200000
         DROP  INPTR                                                    25230000
         EJECT                                                          25260000
*TITLE-                                                               * 25290000
*   PRINT/PRINT LOGIC SELECTOR ROUTINE                                * 25320000
*                                                                     * 25350000
*FUNTION/OPERATION-                                                   * 25380000
*   DETERMINE IF OPTIONS REQUIRE A PRINTABLE RECORD OF A GENERATOR    * 25410000
*   LOGICAL STATEMENT TO BE PASSED FOR LISTING PURPOSES, AND PASS THE * 25440000
*   RECORD IF SO.                                                     * 25470000
*                                                                     * 25500000
*   AGO, AIF, MEXIT, ACTR, SETA, SETB, SETC, PROTO, PPARMS,MACRO, MEND* 25530000
*   ARE THE OPS HANDLED BY THIS ROUTINE.                              * 25560000
*                                                                     * 25590000
         SPACE                                                          25620000
PRINT10  EQU   *                        ENTRY FOR ALL BUT PROTO        X25650000
                                          MACRO, MEND.                  25680000
         SPACE                                                          25710000
         USING JTEXT,INPTR              INPUT TEXT BASE                 25740000
         GOIF  CALLING,OFF=PRINT20      PROCEED IF NOT MACRO CALL       25770000
PRINT15  GOIF  INMACRO,OFF=PRINT90      PRINT ALL OUTER MACRO CALLS     25800000
         GOIF  (JMLOGIC,JCALLS),NONE=MINPUT, PRINT INNER MACRO CALLS   X25830000
               ELSE=PRINT90             ONLY ON USERS OPTION            25860000
PRINT20  EQU   *                                                        25890000
         GOIF  INMACRO,ON=PRINT30       BRANCH IF EXPANDING A MACRO     25920000
         GOIF  JALOGIC,ON=PRINT90,      PRINT IF ALOGIC OPTION IS ON   X25950000
               ELSE=(RETURN)              OTHERWISE RETURN              25980000
PRINT25  EQU   *                                                        26010000
         GOIF  CALLING,OFF=PRINT90,ELSE=PRINT15 PRINT IF NOT CALL       26040000
PRINT30  EQU   *                        ENTRY FOR PROTO, MACRO, MEND    26070000
         GOIF  JERR,ON=PRINT90          PRINT ERRONEOUS STATEMENTS      26080000
         SPACE                                                          26100000
         GOIF  JMLOGIC,OFF=(RETURN)     EXIT IF MLOGIC OPTION IS NOT ON 26130000
         SPACE                                                          26160000
PRINT90  EQU   *                        ENTRY FOR UNCONDITIONAL PRINT   26190000
         SPACE                                                          26220000
         LR    FLDLN,RETURN             SAVE THE RETURN REGISTER        26250000
         LA    R10,GTFILE               OUTPUT TO GENERATED TEXT FILE   26280000
         LH    R11,JTRLI                PICK UP LENGTH OF INPUT RCD     26310000
         JPUTL FILE=(R10),BUFREQ=(R11)  GET OUTPUT BUFFER SPACE         26340000
         ST    R11,TXTOUT               SAVE PTR TO OUTPUT RECORD       26370000
         LH    RCOMP1,JTRLI             GET RCD LENGTH FOR MOVE         26400000
         LR    INDEX2,INPTR             SET UP SOURCE POINTER           26430000
         LR    INDEX1,FTXTOUT           SET UP DESTINATION PTR          26460000
         BAL   RETURN,MOVERTN           GO TO MOVE RCD BUF-TO-BUF       26490000
         BR    FLDLN                    RETURN VIA DUMMY RETURN         26520000
         DROP  INPTR                                                    26550000
         EJECT                                                          26580000
*                                                                       26610000
*        MOPTABLE                                                       26640000
*                                                                       26670000
*        THIS IS A BRANCH TABLE TO THE ROUTINES TO HANDLE GENERATOR     26700000
*        OP CODES.  EACH ENTRY IS A TWO BYTE INDEX TO THE ROUTINES      26730000
*        RELATIVE TO MOPRTNS, AND IS USED IN AN INDEXED BRANCH TO THAT  26760000
*        ROUTINE AFTER THE TABLE ENTRY IS SELECTED BY A COMPUTATION ON  26790000
*        THE INTERNAL OP CODE.                                          26820000
*                                                                       26850000
         SPACE 3                                                        26880000
         ORG   *-2*LOGENOP              SET TABLE START                 26910000
MOPTABLE EQU   *                        GIVE IT A NAME                  26940000
         ORG   ,                        AND RESET LOCATION COUNTER      26970000
         GENOPS MACRO,MACRO             MACRO HEADER                    27000000
         GENOPS ACTR .                  ACTR                            27030000
         GENOPS AGO,MBRANCH1 .          AGO                             27060000
         GENOPS AIF                     AIF                             27090000
         GENOPS SETA .                  SETA                            27120000
         GENOPS SETB .                  SETB                            27150000
         GENOPS SETC .                  SETC                            27180000
         GENOPS MEXIT,MEND1 .           MEXIT                           27210000
         GENOPS MEND,MEND1 .            MEND                            27240000
         GENOPS CALL                    MACRO CALL                      27270000
         GENOPS CPKEY                   CALL PARAMETER--KEYWORD         27300000
         GENOPS CPPOS                   CALL PARAMETER--POSITIONAL      27330000
         GENOPS PROTO                                                   27360000
         GENOPS PPKEY                   PROTOTYPE PARM--KEYWORD         27390000
         GENOPS PPPOS                   PROTOTYPE PARM--POSITIONAL      27420000
         GENOPS PEND                    PARAMETER LIST END--ALL         27450000
         ORG   ,                             END OF TABLE               27480000
         EJECT                                                          27510000
*TITLE-                                                               * 27540000
*        MOPRTNS/GENERATOR OPCODE ROUTINE BASE                        * 27570000
*                                                                     * 27600000
*FUNCTION/OPERATION-                                                  * 27630000
*        PROVIDE BASE FOR ALL GENERATOR OPCODE HANDLING ROUTINES.     * 27660000
*   THIS VALUE IS USED FOR COMPUTING INDEX FOR TABLE LOOKUP BY        * 27690000
*   STATEMENT TYPE TO SELECT THE APPROPRIATE ROUTINE.  ALSO INCLUDES  * 27720000
*   MERROR, WHICH IS THE EXIT FOR INVALID OPCODE TYPES (PROGRAM LOGIC * 27750000
*   ERROR).                                                           * 27780000
*                                                                     * 27810000
         SPACE 3                                                        27840000
MOPRTNS  EQU   *                        BASE ONLY--NOT AN ENTRY POINT   27870000
         EJECT                                                          27900000
*TITLE--                                                              * 27930000
*   MACRO/MACRO STATEMENT UTILITY ROUTINE                             * 27960000
*                                                                     * 27990000
*FUNCTION/OPERATION--                                                 * 28020000
*   A MACRO STATEMENT CAN OCCUR UNEXPECTEDLY, DENOTING THE BEGINNING  * 28050000
*   OF TEXT OF A PROGRAMMER MACRO DEFINITION, OR EXPECTED, DENOTING   * 28080000
*   THE FIRST TEXT RECORD OF A CALLED MACRO. THIS ROUTINE CONTROLS THE* 28110000
*   SWITCHES THAT KEEP THE TWO MODES STRAIGHT.                        * 28140000
*                                                                     * 28170000
*   IF OPEN CODE, THE ROUTINE TURNS ON SWITCH 'INMACDEF', WHICH STAYS * 28200000
*   ON UNTIL A MEND STATEMENT IS FOUND.  WHILE THIS SWITCH IS ON, ALL * 28230000
*   RECORDS ARE PASSED THROUGH AS PRINT ONLY, FOR LISTING PURPOSES    * 28260000
*   ONLY.                                                             * 28290000
*                                                                     * 28320000
*   WHEN A MACRO IS CALLED, MCALL TURNS ON SWITCH 'CALLING' INDICATING* 28350000
*   THAT A CALL IS IN PROGRESS.  IF THIS SWITCH IS ON, MACRO JUST     * 28380000
*   TURNS IT OFF, BYPASSING REFERENCE TO 'INMACDEF' SWITCH.           * 28410000
*                                                                     * 28440000
*INPUT--NONE                                                          * 28470000
*OUTPUT--NONE                                                         * 28500000
*ENTRY POINTS--MACRO                                                  * 28530000
*EXTERNAL ROUTINES--NONE                                              * 28560000
*EXITS--BR RETURN                                                     * 28590000
*TABLES/WORK AREAS--                                                  * 28620000
*   SWITCHES INMACDEF AND CALLING, LOCATED IN GENCOM.                 * 28650000
*                                                                     * 28680000
*ATTRIBUTES--REFRESHABLE                                              * 28710000
*NOTES--                                                                28740000
*   IF NESTED DEFINITIONS ARE EVER ALLOWED, SWITCH 'INMACDEF' WILL BE * 28770000
*   REPLACED WITH A COUNTER WHICH WILL BE DECREMENTED BY MEND STATE-  * 28800000
*   MENTS.                                                            * 28830000
         SPACE                                                          28860000
MACRO    EQU   *                                                        28890000
         SPACE                                                          28920000
         GOIF  CALLING,ON=MACRO20       IF ON, THIS IS PART OF A CALL   28950000
         SET   INMACDEF,ON              ELSE IT MUST BE LISTING ONLY    28980000
         USING JTEXT,INPTR                                              29010000
         DROP  INPTR                                                    29070000
         BAL   RETURN,PRINT90           PRINT A COPY                    29100000
         B     MINPUT                   GO BACK FOR NEXT STATEMENT      29130000
         SPACE 3                                                        29160000
MACRO20  EQU   *                                                        29190000
         SPACE                                                          29220000
         BAL   RETURN,PRINT30           PRINT IF MLOGIC OPTION IS ON    29250000
         SET   CALLING,OFF                                              29280000
         B     MINPUT                   GO BACK FOR NEXT STATEMENT      29310000
         EJECT                                                          29340000
*TITLE--                                                              * 29370000
*   MPROTO/MACRO PROTOTYPE HANDLER                                    * 29400000
*                                                                     * 29430000
*FUNCTION/OPERATION--                                                 * 29460000
*   UNDEFINED--MAY BE DICTIONARY                                      * 29490000
         SPACE                                                          29520000
MPROTO   EQU   *                                                        29550000
         BAL   RETURN,PRINT30           PRINT IF MLOGIC OPTION IS ON    29580000
         B     MINPUT                   GO BACK FOR NEXT STATEMENT      29610000
         EJECT                                                          29640000
*TITLE--                                                              * 29670000
*   MPARM/MACRO CALL AND PARAMETER ROUTINE                            * 29700000
         SPACE                                                          29730000
*FUNCTION/OPERATION--                                                 * 29760000
*   POINTS REG10 TO THE LENGTH PORTION OF THE OPERAND OF A PARAMETER  * 29790000
*   RECORD, AND CALLS THE APPROPRIATE DICTIONARY ROUTINE TO PLACE THE * 29820000
*   PARAMETER IN THE PARAMETER TABLE.                                 * 29850000
         SPACE                                                          29880000
*ENTRY POINTS--                                                       * 29910000
*   MCPKEY     CALL KEYWORD PARAMETER                                 * 29940000
*   MCPPOS     CALL POSITIONAL PARAMETER                              * 29970000
*   MPPKEY     PROTOTYPE KEYWORD PARAMETER                            * 30000000
*   MPEND      END OF PARAMETER LIST                                  * 30030000
*   MCALL      BEGIN MACRO CALLING SEQUENCE                           * 30060000
         SPACE                                                          30090000
*INPUT--                                                              * 30120000
*   TEXT RECORD POINTED TO BY INPTR                                   * 30150000
         SPACE                                                          30180000
*OUTPUT--NONE                                                         * 30210000
         SPACE                                                          30240000
*EXTERNAL ROUTINES--                                                  * 30270000
*        MACRKWRD   CALL KEYWORD        DICTIONARY ACCESS INTERFACE   * 30300000
*        MACRPOST   CALL POSITIONAL        ''        ''      ''       * 30330000
*        PROTOKWD   PROTOTYPE KEYWORD      ''        ''      ''       * 30360000
*        MACRCALL   INITIATE CALL          ''         ''       ''     * 30390000
*        CALLEND    CALL END               ''         ''       ''     * 30420000
*        PROTOEND   PROTOTYPE END          ''         ''       ''     * 30450000
         SPACE                                                          30480000
*EXITS--                                                              * 30510000
*   NORMAL--BRANCH TO MINPUT                                          * 30540000
         SPACE                                                          30570000
*TABLES/WORK AREAS--N/A                                               * 30600000
         SPACE 3                                                        30630000
MPPKEY   LA    RMOVE,PROTOKWD           PROTOTYPE KEYWORD               30660000
         B     MPARM                    GO TO PIVOT                     30690000
MCPKEY   LA    RMOVE,MACRKWRD           CALL KEYWORD                    30720000
         B     MPARM                      AND TAKE PIVOT                30750000
MCPPOS   LA    RMOVE,MACRPOST           CALL POSITIONAL                 30780000
MPARM    EQU   *                        COMMON PARAMETER PIVOT          30810000
         USING JTEXT,INPTR              TEXT BASE                       30840000
         GOIF  NOCALL,ON=MINPUT         ABORTED CALL, DON'T PROCESS.    30870000
         LR    METAPTR,INPTR            PICK UP TEXT BASE AND           30900000
         AH    METAPTR,JTOPP            DEVELOP OPERAND POINTER AND     30930000
         USING JTMFLG,METAPTR             DECLARE AS META TEXT BASE.    30960000
         LR    R10,METAPTR              TEMPORARY                       30990000
         SH    R10,=H'5'                BACK UP TO HDR DATA START       31020000
         ST    R10,GENRTRN              PRESERVE PTR TO HDR FLAGS       31030000
         USING PFLAG,R10                                                31050000
         SPACE                                                          31080000
         GOIF  JTCPKEY,EQ=MPARM9        CALL KEYWORD, BRANCH            31110000
         GOIF  JTPPKEY,NE=MPARM10       NOT PROTOTYPE KEYWORD, BRANCH   31140000
         SPACE                                                          31170000
*        KEYWORD PROCESSING--SKIP KEYWORD ON FIRST SUBELEMENT ONLY      31200000
         SPACE                                                          31230000
MPARM9   EQU   *                        KEYWORD HANDLING                31260000
         GOIF  (PSUB,PSUBF),MIX=MPARM10                                X31290000
               BRANCH IF NOT A SUBLIST OR IF NOT FIRST SUB-OPERAND      31320000
         SR    R1,R1                    ZERO LENGTH REGISTER            31330000
         IC    R1,JTMLNG                PICK UP KEYWORD LENGTH          31350000
         LA    METAPTR,JTMSTRNG(R1)     AND BUMP STRING POINTER OVER   X31380000
                                          FLAG, LENGTH, AND KEYWORD.    31410000
MPARM10  EQU   *                        METAPTR NOW POINTS TO FIRST FLAG31440000
                                          IN META TEXT DESCRIBING      X31470000
                                          THE PARAMETER.                31500000
         GOIF  JSUBOPND,ON=MPARM11      SKIP AHEAD IF WE HAVE SUBSTITU- 31530000
         LA    METAPTR,JTMLNG             TION, ELSE JUST POINT TO      31560000
         LR    R11,METAPTR                                              31590000
         B     MPARM30                    LENGTH AND PUT IN DICTIONARY. 31620000
         DROP  METAPTR                                                  31650000
         SPACE                                                          31680000
MPARM11  EQU   *                        PARAMETER IS TO BE DEVELOPED   X31710000
                                          FROM META TEXT.               31740000
         SPACE                                                          31770000
         GOIF  PPASS,OFF=MPARM20        NOT PASSED PARM, SUBSTITUTE     31800000
         SPACE                                                          31830000
MPARM12  BAL   RETURN,EVALINIT          EVALUATE THE PARM REFERENCE     31860000
*        REFERENCE IS NOW AT BOTTOM OF EVAL STACK.                      31890000
         LA    R10,STACK                POINT TO TERM IN STACK          31920000
         SET   CHARMODE,ON              INDICATE CHAR STRINGS WANTED    31950000
         JCALL RESOLVE                  AND RESOLVE IT.                 31980000
         SET   CHARMODE,OFF             CLEAN UP CHAR STRING FLAG       32010000
*        NOW R14 POINTS TO REFERENCED PARAMETER, R11 POINTS TO STRING.  32040000
         USING PFLAG,R14                TEMPORARY BASE FOR PARM ENTRY   32130000
         GOIF  PSUB,OFF=MPARM15         BRANCH IF PARAM NOT SUBLIST     32140000
         L     R10,GENRTRN              RESTORE PTR TO HDR FLAGS        32150000
         TM    D0(R10),BIT0             SEE IF SUBLIST A SUBOPERAND     32160000
         BO    MPARM20                  MAKE STRING OF IT IF SO         32170000
         DROP  R14                                                      32220000
MPARM15  EQU   *                                                        32250000
         LR    R11,R14                  ELSE PUT PARM POINTER IN R11    32280000
         SET   PASSPARM,ON              INDICATE PARM PASSED AS PRM     32310000
*        DICTIONARY ENTRY                                               32340000
MPARM30  L     R12,DICTBASE             DICTIONARY BASE                 32370000
         LR    R10,INPTR                TEXT BASE FOR DICTIONARY ENTRY  32400000
         STC   RMOVE,NDXVAL             SET UP PROPER ENTRY INDEX       32430000
         BALR  R9,R12                   LINK TO DICTIONARY ROUTINE      32460000
         B     ERRDUMP                  RETURN FOR NEXT RECORD          32490000
         SPACE                                                          32520000
MPARM20  LA    VTXTOUT,STRING1          POINT TO A BUFFER               32550000
         LA    RCOMP1,STACK-STKENTRY    INITIALIZE                      32580000
         ST    RCOMP1,STACKLVL            EVAL STACK.                   32610000
         MVI   STRING1,D0               SET TO NULL STRING              32640000
         JCALL GENSTRNG                 AND GENERATE THE STRING.        32670000
         LR    R11,VTXTOUT              STRING POINTER FOR DICTIONARY   32700000
         B     MPARM30                  GO ENTER IN THE DICTIONARY      32760000
         SPACE                                                          32790000
MPEND    EQU   *                                                        32820000
         GOIF  JERR,OFF=MPEND05         BRANCH IF NO PARAM ERRORS       32850000
         L     R1,TXTOUT                GET PTR TO PROTOTYPE OR CALL    32880000
         USING MTEXT,R1                                                 32910000
         SET   MERR,ON                  TRANSFER ERROR FLAG TO TEXT     32940000
         DROP  R1                                                       33000000
         L     R1,ACTRCNT               PICK UP CURRENT ACTR VALUE      33007000
         SRL   R1,D1                    HALVE IT ON EDITOR ERROR        33014000
         ST    R1,ACTRCNT               SAVE NEW ACTR VALUE             33021000
MPEND05  EQU   *                                                        33030000
         SPACE                                                          33060000
         GOIF  NOCALL,OFF=MPEND10       NOT ABORTED CALL, PROCEED.      33090000
         SET   NOCALL,OFF               ELSE TURN OFF SWITCH,           33120000
         B     ERRDUMP                  AND EXIT                        33150000
MPEND10  GOIF  CALLING,ON=MCALLEND      BRANCH IF MACRO CALL SEQUENCE   33180000
         DICTCALL PROTOEND                ELSE ASSUME PROTOTYPE END     33210000
         SPACE                                                          33240000
         B     ERRDUMP                  RETURN FOR NEXT RECORD          33270000
         SPACE                                                          33300000
MCALLEND EQU   *                                                        33330000
         JGETL FILE=FILE1               FETCH NEXT TEXT RECORD          33360000
         USING JTEXT,R11                                                33390000
         GOIF  JTERROR,NE=MPEND15       PROCEED IF NOT ERROR RECORD     33420000
         JPUTM FILE=FILE2,ADDR=(R11)    FLUSH PAST ERROR RECORD(S)      33450000
         B     MCALLEND                 GO BACK FOR NEXT TEXT RECORD    33480000
         DROP  R11                                                      33510000
MPEND15  EQU   *                                                        33540000
         SPACE                                                          33570000
         SET   INMACRO,ON               INDICATE WE ARE NOW IN A MACRO  33600000
         DICTCALL CALLEND                                               33630000
         B     MINPUT                   RETURN FOR NEXT RECORD          33660000
         SPACE 3                                                        33690000
MCALL    EQU   *                        MACRO CALL                      33720000
         GOIF  (CALLING,NOCALL),ANY=MFEVAL RE-DIRECT CALL CONTINUATIONS 33750000
         SET   NOCALL,ON                ASSUME BAD INITIALLY            33780000
         SPACE                                                          33810000
         LA    R11,MACRCALL             SET ENTRY DISPLACEMENT          33930000
         LH    VTXTIN,JTOCP             GET OP CODE DISPLACEMENT        33960000
         AR    VTXTIN,INPTR             GET OP CODE POINTER             33990000
         BAL   RETURN,METAINIT          INITIALIZE META TEXT POINTER    34020000
         LR    R10,VTXTIN               SET UP FOR DICT ROUTINE         34050000
         SPACE                                                          34080000
         DICTCALL MACRCALL                                              34110000
         SPACE                                                          34140000
*        ON RETURN, R11 CONTAINS--                                      34170000
*              0    OK                                                * 34200000
*              4    MACRO NOT FOUND                    ERROR            34230000
*              8    INVALID PROTOTYPE                  ERROR          * 34260000
*              12   NO MACRO STATEMENT                 ERROR          * 34290000
*              16   BOOKNAME DOES NOT MATCH PROTOTYPE  ERROR          * 34320000
         SPACE                                                          34350000
*        SO WE'LL DO AN INDEXED BRANCH                                  34380000
         B     CALLTABL(R11)            DO INDEXED BRANCH               34410000
         SPACE                                                          34440000
CALLTABL EQU   *                        BRANCH TABLE ORIGIN             34470000
         SPACE                                                          34500000
         B     MCALL10                  WE MADE IT OK.                  34530000
         B     LOGERR78                 THAT'S                          34560000
         B     LOGERR87                   NOT                           34590000
         B     LOGERR85                    A                            34620000
         B     LOGERR88                    MACRO.                       34650000
         B     LOGER100                 NO DICTIONARY                   34680000
         SPACE                                                          34710000
MCALL10  SET   (CALLING,NOCALL),FLIP    CALLING ON, NOCALL OFF          34740000
         L     R1,MACROLVL              INCREMENT                       34770000
         LA    R1,D1(,R1)                    MACRO NEST DEPTH           34800000
         ST    R1,MACROLVL                        BY ONE                34830000
         L     RCOMP1,SYSNDX           PICK UP CURRENT SYSNDX           34837000
         LA    RCOMP1,D1(,RCOMP1)       INCREMENT IT BY 1 FOR CALL      34844000
         ST    RCOMP1,SYSNDX            PUT IT BACK, UPDATED            34851000
         B     MFEVAL                   LET FEVAL GENERATE IMAGES       34860000
         SPACE 10                                                       34866000
* DUMMY ROUTINE TO HANDLE PROTOTYPE PARAMETERS, POSITIONAL -            34872000
* SIMPLE RETURN FOR NEXT RECORD                                         34878000
MPPPOS   B     MINPUT                   RETURN FOR NEXT RECORD          34884000
         SPACE                                                          34890000
         EJECT                                                          34920000
LOGERR78 LA    R12,LOGERR01             GET BASE FOR ERROR LOGGING RTN  34950000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          34980000
         DC    AL1(SEV78,ERR78)         ERROR PARAMETERS                35010000
LOGCOMN  EQU   *                                                        35040000
         BAL   RETURN,PRINT90           PUT OUT COPY OF BOGUS MACRO     35070000
         B     ERRDUMP                  GO TERMINATE STATEMENT          35100000
LOGERR85 LA    R12,LOGERR01             GET BASE FOR ERROR LOGGING RTN  35130000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          35160000
         DC    AL1(SEV85,ERR85)         ERROR PARAMETERS                35190000
         B     LOGCOMN                  GO MAKE REAL ERROR ENTRY        35220000
LOGERR87 LA    R12,LOGERR01             GET BASE FOR ERROR LOGGING RTN  35250000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          35280000
         DC    AL1(SEV87,ERR87)         ERROR PARAMETERS                35310000
         B     LOGCOMN                  GO MAKE REAL ERROR ENTRY        35340000
LOGERR88 LA    R12,LOGERR01             GET BASE FOR ERROR LOGGING RTN  35370000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          35400000
         DC    AL1(SEV88,ERR88)         ERROR PARAMETERS                35430000
         B     LOGCOMN                  GO MAKE REAL ERROR ENTRY        35460000
LOGERR90 LA    R12,LOGERR01             GET BASE FOR ERROR LOGGING RTN  35490000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          35520000
         DC    AL1(SEV90,ERR90)         ERROR PARAMETERS                35550000
         B     ERRDUMP                  GO TERMINATE STATEMENT          35580000
LOGER100 LA    R12,LOGERR01             GET BASE FOR ERROR LOGGING RTN  35610000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          35640000
         DC    AL1(SEV100,ERR100)       ERROR PARAMETERS                35670000
         B     LOGCOMN                  GO MAKE REAL ERROR ENTRY        35700000
LOGER118 LA    R12,LOGERR01             GET BASE FOR ERROR LOGGING RTN  35730000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          35760000
         DC    AL1(SEV118,ERR118)       ERROR PARAMETERS                35790000
         B     MEND11                   PROCEED ON ACTR OVERRUN         35820000
         EJECT                                                          35850000
*TITLE-                                                               * 35880000
*        MBRANCH/GENERATOR TEXT BRANCH ROUTINE                        * 35910000
*                                                                     * 35940000
*FUNCTION/OPERATION-                                                  * 35970000
*        HANDLES CONDITIONAL ASSEMBLY BRANCHING.  FOR AIF STATEMENTS, * 36000000
*    CALLS BEVAL TO DETERMINE IF BRANCH IS TO BE TAKEN.  FOR AGO      * 36030000
*    STATEMENTS, AND AIF STATEMENTS IF CONDITION IS YES, CALLS MPOINTR* 36060000
*    TO EFFECT THE BRANCH.                                            * 36090000
*                                                                     * 36120000
         SPACE 3                                                        36150000
MBRANCH1 EQU   *                        AGO ENTRY POINT                 36180000
         SPACE                                                          36210000
         BAL   RETURN,PRINT10           PRINT IF OPTIONS ARE ON         36240000
         USING JTEXT,INPTR              BASE FOR TEXT                   36270000
         LH    VTXTIN,JTOPP             GET OPERAND POINYER             36300000
         AR    VTXTIN,INPTR             MAKE ABSOLUTE                   36330000
         BAL   RETURN,METAINIT          GET PTP TO META TEXT START      36360000
         SPACE                                                          36390000
MBRANCH2 EQU   *                                                        36420000
         SPACE                                                          36450000
         L     RCOMP1,ACTRCNT           PICK UP ACTR COUNT              36480000
         GOIF  (RCOMP1),NOTPOS=LOGER118 ACTR RAN OUT, LOG THE MESSAGE   36510000
         BCTR  RCOMP1,D0                ELSE DECREMENT ACTR             36540000
         ST    RCOMP1,ACTRCNT           AND REPLACE                     36570000
         LR    R10,VTXTIN               SET UP META TEXT PTR FOR DICT   36600000
         SPACE                                                          36630000
         DICTCALL SEQSYMBR              BRANCH TO THE SEQUENCE SYMBOL   36660000
         SPACE                                                          36690000
         SPACE                                                          36720000
         BNZ   ERRDUMP                  GO GET NEXT RCD IF ALL OK       36750000
         B     LOGERR90                 GO DIAGNOSE SITUATION           36780000
         DROP  INPTR                                                    36810000
         EJECT                                                          36840000
*TITLE-                                                               * 36870000
*        MEND/GENERATOR MEND MEXIT END ROUTINE                        * 36900000
*                                                                     * 36930000
*FUNCTION/OPERATION-                                                  * 36960000
*        HANDLES END OF FILE PROCESSING FOR EACH TEXT SEGMENT.  RE-   * 36990000
*    CEIVES CONTROL EITHER UPON ENCOUNTERING AN END, MEND, OR MEXIT   * 37020000
*    STATEMENT IN THE TEXT STREAM.  END CAUSES TERMINATION OF PHASE.  * 37050000
*    MEND OR MEXIT CAUSE TERMINATION OF THE CURRENT MACRO, CALLS FOR  * 37080000
*    RESETTING TEXT TO POINT AT WHICH THE MACRO WAS CALLED, AND RE-   * 37110000
*    SETS DICTIONARY POINTERS TO THE LOCAL DICTIONARY OF THE CALLING  * 37140000
*    TEXT SEGMENT.                                                    * 37170000
*                                                                     * 37200000
*ENTRY POINTS-                                                        * 37230000
*        MEND1--MEND/MEXIT PROCESSING                                 * 37260000
*        MEND2--END PROCESSING                                        * 37290000
*                                                                     * 37320000
         SPACE 3                                                        37350000
MEND1    EQU   *                                                        37380000
         SPACE                                                          37410000
         BAL   RETURN,PRINT30           PRINT IF OPTIONS ARE ON         37440000
MEND11   EQU   *                                                        37470000
         L     RCOMP1,MACROLVL          PICK UP CURRENT MACRO NEST LVL  37480000
         GOIF  (RCOMP1),POS=MEND12      CHEK IF ACTR OVFLO IN OPEN CD   37490000
         SET   FLUSH3,ON                GENERATE END CARD               37496000
         B     ERRDUMP                  GO TO DIAGNOSE AND EXIT         37510000
MEND12   EQU   *                                                        37520000
         BCT   RCOMP1,MEND1A            ADJUST BY ONE. IF ZERO,         37530000
         SET   INMACRO,OFF                THEN TURN OFF SWITCH INMACRO. 37590000
MEND1A   ST    RCOMP1,MACROLVL          IN EITHER CASE, SAVE THE COUNT. 37620000
         DICTCALL MACRFINI              POP THE DICTIONARY LEVEL ALSO   37630000
         B     ERRDUMP                  RETURN TO GET NEXT RECORD       37650000
         SPACE 3                                                        37680000
         EJECT                                                          37710000
*TITLE-                                                               * 37740000
*   MSET/MACRO GENERATOR SET STATEMENT PROCESSOR                      * 37770000
         SPACE                                                          37800000
*FUNCTION/OPERATION-                                                  * 37830000
*   CALLS EVAL TO CONVERT OPERAND META TEXT TO CHARACTER OR ARITHMETIC* 37860000
*   FORM, THEN PASSES VALUE THROUGH DICTIONARY LINKAGE FOR ENTRY.    *  37890000
         SPACE                                                          37920000
MSETA    EQU   *                        SETA ENTRY                      37950000
MSETB    EQU   *                        SETB ENTRY                      37980000
MSETC    EQU   *                        SETC ENTRY                      38010000
MAIF     EQU   *                        AIF ENTRY                       38040000
MACTR    EQU   *                        ACTR ENTRY                      38070000
         SPACE                                                          38100000
*                                       MERCY--THEY'RE ALL THE SAME.    38130000
         SPACE                                                          38160000
         BAL   RETURN,PRINT10           PRINT IF OPTIONS ARE ON         38190000
         USING JTEXT,FTXTIN             FIXED INPUT BASE                38220000
         LH    VTXTIN,JTOPP               OPERAND DISPLACEMENT          38250000
         AR    VTXTIN,FTXTIN              MAKE ABSOLUTE                 38280000
         LA    VTXTOUT,STRING1          OUTPUT POINTER--A BUFFER        38310000
         SPACE                                                          38340000
         BAL   RETURN,METAINIT          GO INITIALIZE META TEXT         38370000
         BAL   RETURN,EVALINIT          GO INITIALIZE EVAL STACKS       38400000
         SPACE                                                          38430000
         GOIF  JTSETB,GT=MSETC10        IF SETC, GO DO IT               38460000
         SPACE                                                          38490000
         LR    VTXTIN,R10               RESTORE THE REAL TEXT POINTER   38520000
*        LAST ELEMENT IN STACK MAY NOT BE SELF DEFINING TERM.           38550000
         LA    R10,STACK                SO POINT TO IT,                 38580000
         JCALL RESOLVE                      AND RESOLVE IT.             38610000
*        NOW R11 CONTAINS THE VALUE.                                    38640000
         SPACE                                                          38670000
         GOIF  JTACTR,EQ=ACTR           IF ACTR, GO DO IT               38700000
         GOIF  JTAIFB,LE=AIF,ELSE=MSET20                               X38730000
                                        GO DO AIF, ELSE SKIP TO SETAB   38760000
         SPACE                                                          38790000
MSETC10  EQU   *                        SETC--CHARACTER STRING          38820000
         SPACE                                                          38850000
         LA    R11,STRING1              GET POINTER TO STRING           38880000
         SPACE                                                          38910000
MSET20   EQU   *                        NOW GET READY FOR DICTIONARY DO 38940000
         SPACE                                                          38970000
SET20    LH    VTXTIN,JTNMP             GET NAME FIELD POINTER          39000000
         AR    VTXTIN,FTXTIN            MAKE ABSOLUTE                   39030000
         DROP  FTXTIN                                                   39060000
         ST    R11,STRRTRN              STORE VALUE IN R11              39090000
         BAL   RETURN,METAINIT          INITIALIZE NAME FIELD META      39120000
         LA    RCOMP1,STACK-STKENTRY    POINT TO START OF EVAL STACK    39150000
         ST    RCOMP1,STACKLVL            AND SAVE AS STACK POINTER     39180000
         L     R12,=A(EVAL)             GO EVALUATE THE                 39210000
         BALR  RETURN,R12                 SET TARGET                    39240000
         L     R11,STRRTRN              RESTORE R11 TO SET VALUE        39270000
         LA    R10,STACK                POINT TO TERM--NOW IN STACK     39300000
         SPACE                                                          39330000
         USING JTMFLG,R10               BASE FOR SET SYMBOL             39360000
         GOIF  JTMGBL,ON=SET32          GLOBAL, GO DO GLOBAL SET        39390000
         DROP  R10                                                      39420000
         SPACE                                                          39450000
SET30    DICTCALL LCLDICTS              LOCAL SET                       39480000
         B     ERRDUMP                  RETURN TO GET NEXT RECORD       39510000
         SPACE                                                          39540000
SET32    DICTCALL GBLDICTS              GLOBAL SET                      39570000
         B     ERRDUMP                  RETURN TO GET NEXT RECORD       39600000
         SPACE 3                                                        39630000
AIF      EQU   *                        AIF ENTRY                       39660000
         SPACE                                                          39690000
         LR    R10,VTXTIN               TEXT POINTER IN R10 AS A PARAM-X39720000
                                          ETER--POINTS TO SEQUENCE SYM. 39750000
         GOIF  (R11),ZERO=ERRDUMP,ELSE=MBRANCH2                        X39780000
                                        RETURN IF ZERO ELSE POINT TEXT  39820000
         SPACE 3                                                        39870000
ACTR     EQU   *                                                        39900000
         SPACE                                                          39930000
*        NEW ACTR VALUE IS IN REG R11                                   39960000
         SPACE                                                          39990000
         ST    R11,ACTRCNT              STORE AS NEW ACTR               40020000
         B     ERRDUMP                  RETURN TO GET NEXT RECORD       40050000
         EJECT                                                          40080000
EVALINIT EQU   *                        INITIALIZE EVAL ROUTINE         40110000
         SPACE                                                          40140000
         SET   CCOMP,OFF                ASSUME ARITHMETIC COMPARES      40170000
         LA    RCOMP1,STACK-STKENTRY    NOTHING IN THE STACK            40200000
         ST    RCOMP1,STACKLVL          POINT TO START OF EVAL STACK    40230000
         LA    RCOMP1,STRING1           FIRST STRING BUFFER             40260000
         ST    RCOMP1,STRPTR1             AND SAVE IT                   40290000
         MVI   STRING1,D0               NULL STRING                     40320000
         MVI   STRING2,D0               NULL STRING                     40350000
         L     R12,=A(EVAL)             POINT TO EVAL ROUTINE           40380000
         BR    R12                        AND GO.  RETURN VIA R9.       40410000
         EJECT                                                          40440000
METAINIT EQU   *                        POINT TO START OF META TEXT     40470000
         SPACE                                                          40500000
         SH    VTXTIN,=H'2'             GET PTR TO META TEXT LENGTH     40530000
         MVC   JHWORD1,D0(VTXTIN)       ALIGN 2-BYTE META TEXT LENGTH   40560000
        SH    VTXTIN,JHWORD1            DEVELOP PTR TO META TEXT START  40590000
         BR    RETURN                   RETURN TO CALLER                40620000
         EJECT                                                          40650000
         DS    0H                                                       40680000
MOVEFLD  EQU   *                                                        40710000
         SPACE                                                          40740000
         USING JTEXT,FTXTIN                                             40770000
         USING MTEXT,FTXTOUT                                            40800000
         USING MTOCO,VTXTOUT            VARIABLE TEXT OUTPUT            40830000
         USING JTOCO,VTXTIN               AND INPUT BASES.              40860000
         SPACE                                                          40890000
         AR    VTXTIN,FTXTIN            VTXTIN CONTAINS DISPLACEMENT-- X40920000
                                          ADD TEXT POINTER TO GET FIELDX40950000
                                          POINTER FOR INPUT.            40980000
         LR    R0,VTXTIN                SAVE INPUT POINTER              41010000
         AR    VTXTOUT,FTXTOUT          ADD RECORD BASE FOR OUTPUT      41040000
         SPACE                                                          41070000
MOVFLD5  GOIF  JTOCOCD,OFF=MOVFLD10     NO CARD POINTER, SKIP.          41100000
         MVC   MTOCO,JTOCO                ELSE MOVE IT                  41130000
         LA    VTXTIN,JTOCL               AND ADJUST INPUT POINTER      41160000
         LA    VTXTOUT,MTOCL              AND OUTPUT POINTER.           41190000
         SPACE                                                          41220000
MOVFLD10 EQU   *                        MOVE THE COLUMN POINTER         41250000
         SPACE                                                          41280000
         MVC   MTOCO,JTOCO              MOVE 1 BYTE                     41310000
         LA    VTXTIN,JTOCL             ADJUST INPUT                    41340000
         LA    VTXTOUT,MTOCL              AND OUTPUT POINTERS           41370000
         ST    VTXTOUT,GENRTRN          SAVE POINTER TO LENGTH.         41400000
         SPACE                                                          41430000
         USING JTOCL,VTXTIN             NEW BASE IN                     41460000
         USING MTOCL,VTXTOUT            NEW BASE OUT                    41490000
         SPACE                                                          41520000
         MVI   MTOCL,D0                 INITIALLY A ZERO LENGTH STRING  41550000
         SPM   RETURN                   RECOVER ENTRY CONDITION CODE    41580000
         BO    GENFLD                     GO TO GENFLD IF SUBSTITUTION  41610000
         SPACE                                                          41640000
         IC    RMOVE,JTOCL              PICK UP LENGTH                  41700000
MOVFLD20 EX    RMOVE,MVCFLD10             AND EXECUTE FIELD MOVE OF    X41730000
                                          FIELD PLUS LENGTH.            41760000
         LA    VTXTOUT,D1(RMOVE,VTXTOUT)     ADJUST OUTPUT POINTER      41790000
         SR    VTXTOUT,FTXTOUT            AND REDUCE TO DISPLACEMENT.   41820000
         BR    RETURN                   RETURN TO CALLER                41850000
         SPACE                                                          41880000
MVCFLD10 MVC   MTOCL(D0),JTOCL          REMOTE FIELD MOVE               41910000
         SPACE                                                          41940000
         DROP  VTXTIN,VTXTOUT,FTXTIN,FTXTOUT                            41970000
         EJECT                                                          42000000
*TITLE--                                                                42030000
*   GENFLD/GENERATE A FIELD                                             42060000
         SPACE                                                          42090000
         DS    0H                                                       42120000
GENFLD   EQU   *                                                        42150000
         SPACE                                                          42180000
*        ON ENTRY, VTXTIN POINTS TO REAL START OF VIRTUAL TEXT          42210000
         SPACE                                                          42240000
         LR    VTXTIN,R0                RECOVER INPUT POINTER           42270000
         LR    FLDLN,RETURN             SAVE THE RETURN ADDRESS         42300000
         BAL   RETURN,METAINIT          GET PTR TO META TEXT START      42330000
         SPACE                                                          42360000
*        NOW VTXTIN POINTS TO START OF META TEXT.                       42390000
         SPACE                                                          42420000
         ST    FTXTOUT,OUTPTR           SAVE THE REAL OUTPUT POINTER    42450000
         LA    RCOMP1,STACK-STKENTRY    START OF STACK BECOMES          42480000
         ST    RCOMP1,STACKLVL            INTIAL STACK POINTER          42510000
         JCALL GENSTRNG                 GENERATE A CHARACTER STRING     42540000
         SPACE                                                          42570000
GENFLD90 EQU   *                        GENFLD EXIT ROUTINE             42600000
         SPACE                                                          42630000
         LR    VTXTOUT,R10              PICK UP NEW FIELD POINTER       42660000
         L     FTXTOUT,OUTPTR           RESTORE THE OUTPUT POINTER      42690000
         SR    VTXTOUT,FTXTOUT          REDUCE OUTPUT POINTER TO       X42720000
                                        DISPLACEMENT.                   42750000
         BR    FLDLN                    RETURN ON THE SAVED RETURN REG  42780000
         EJECT                                                          42810000
*        CONSTANTS FOR X3A                                              42840000
         SPACE                                                          42870000
DICTBASE DC    A(DICTENTR)              DICTIONARY INTERFACE BASE       42900000
DUMYEND  DC    AL2(24),AL1(JPSOP+JDEF+JREF,0,JTEND,0),AL2(17,19,17,17,1X42910000
               7),AL1(0),AL2(0),AL1(10,3,JE,JN,JD)                      42920000
         JEXTRN (X3N01=DICTENTR)          DECLARE IT EXTERNAL           42930000
CHKSYMLN DC    Y(MAXSYM)                HALFWORD CONSTANT TO CHECK SYM-X42960000
                                          BOL LENGTH OVERFLOW           42990000
HHDRLN   DC    Y(JTHDRLN)               TEXT RECORD HEADER LENGTH       43020000
         SPACE                                                          43050000
         DS    0H                                                       43140000
         SPACE 3                                                        43170000
* LOGERR - THIS SUBROUTINE MAKES AN ENTRY FOR A SINGLE ERROR IN THE     43200000
*          ERROR STACK AND INCREMENTS THE ERROR COUNT BY 1.             43230000
*                                                                       43260000
LOGERR01 EQU   *                                                        43290000
         JENTRY (X3A02=LOGERR01)                                        43320000
         USING LOGERR01,R12                                             43350000
         STM   R14,R15,GENREGS          SAVE WORK REGISTERS             43360000
         CLI   D0(R9),D4                LOOK FOR SEVERITY 4 MESSAGE     43370000
         BNH   LOGERR03                 BRANCH IF NOT GT 4              43380000
         L     R14,ACTRCNT              PICK UP CURRENT ACTR VALUE      43390000
         SRL   R14,D1                   HALVE IT ON GENERATE ERROR      43400000
         ST    R14,ACTRCNT              SAVE NEW ACTR VALUE             43410000
LOGERR03 CLC   JMSGL,D0(R9)             SEE IF MESSAGE SHOULD BE PUT    43420000
         BH    LOGERR02                 RETURN IF NOT                   43430000
         CLC   D0(D1,R9),JSEVER         IS THIS HIGHER                  43470000
         BNH   LOGERR04                 BRANCH IF NOT                   43477000
         MVC   JSEVER(D1),D0(R9)        ENTER HIGH                      43484000
LOGERR04 LH    R14,ERRCNT               PICK UP CURRENT ERROR COUNT     43491000
         LA    R14,D1(,R14)             ADJUST FOR ERROR JUST ADDED     43500000
         STH   R14,ERRCNT               SAVE NEW ERROR COUNT            43530000
         L     R15,ESTKNDX               GET PTR TO NEXT ERROR SLOT     43560000
         MVC   D0(D2,R15),D0(R9)         INSERT SEV CODE ERR NUMBER     43590000
         MVI   D2(R15),J0                INSERT DATA LENGTH             43620000
         CH    R14,=H'6'                 SEE IF 7TH OR MORE MESSAGE     43650000
         BNL   LOGERR02                 BRANCH IF SO                    43680000
         LA    R15,D3(,R15)             ADJUST STACK PTR FOR NEW ENTRY  43710000
         ST    R15,ESTKNDX              SAVE FOR NEXT ERROR ENTRY       43740000
LOGERR02 EQU   *                                                        43770000
         LM    R14,R15,GENREGS          RESTORE SAVED REGIS0ERS         43800000
         B     D2(,R9)                  RETURN TO CALLING RTN           43830000
         DROP  R12                                                      43860000
         SPACE 3                                                        43870000
         JPATCH  X3A00,E44              PATCH AREA                      43880000
         EJECT                                                          43890000
         JCSECT (X3A03)                                                 43900000
         SPACE                                                          43910000
*TITLE--                                                              * 43920000
*                                                                     * 43950000
*   RESOLVE/RESOLVE TERMS ROUTINE                                     * 43980000
*                                                                     * 44010000
*FUNCTION/OPERATION--                                                 * 44040000
*                                                                     * 44070000
*   PROCESSES ALL TERMS, LOOKING UP THOSE THAT ARE VARIABLE.  ON ENTRY* 44100000
*   R10 POINTS TO TERM.  ON OUTPUT, R11 CONTAINS VALUE OF THE TERM IF * 44130000
*   ARITHMETIC MODE, OR A POINTER TO L FIELD OF STRING IF CHARACTER.  * 44160000
*                                                                     * 44190000
         SPACE                                                          44220000
RESOLVE  EQU   *                                                        44250000
         SPACE                                                          44280000
RESOLV00 STM   R2,R9,RESOLVST           SAVE CALLERS REGISTERS          44290000
         LR    R8,R12                   ESTABLISH BASE FOR RTN          44300000
         USING RESOLV00,R8                                              44310000
         SPACE                                                          44340000
         USING JTMFLG,R10               DUMMY BASE                      44370000
         SET   CTYPE,OFF                INITIALLY ASSUME ARITHMETIC IN  44400000
         GOIF  JTMGBL,ON=RESOLV08       IF GLOBAL, GO SET SWITCH,       44430000
         SET   GLOBAL,OFF               ELSE MAKE SURE IT IS OFF        44460000
         B     RESOLV09                 AND CONTINUE AT COMMON POINT    44490000
RESOLV08 SET   GLOBAL,ON                MUST DO GLOBAL LOOKUP           44520000
RESOLV09 SET   JTMCSW,OFF               MAKE SURE FLAG IS CLEAN         44550000
         SPACE                                                          44580000
         GOIF  JTMSDT,EQ=RESOLV30       SELF DEFINING TERM              44610000
         GOIF  JTMSVC,EQ=RESOLV10,LT=RESOLV12     SET SYMBOL            44640000
         GOIF  JTMOSA,LT=RESOLV10,      GLOBAL SETC                    X44670000
               EQ=RESOLV80,             ORDINARY SYMBOL                X44700000
               ELSE=RESOLV70            PARAMETER OR SYSLIST            44730000
         DROP  R10                                                      44760000
         SPACE                                                          44790000
RESOLV10 EQU   *                        SET SYMBOL--SETC                44820000
         SET   CTYPE,ON                 INDICATE CHARACTER TYPE         44850000
RESOLV12 EQU   *                        SETA, SETB ENTRY                44880000
         GOIF  GLOBAL,OFF=RESOLV14      NOT GLOBAL, DO LOCAL LOOKUP     44910000
RESOLV13 DICTCALL GBLDICTR,POINTER==A(DICTENTR)   GLOBAL REFERENCE      44940000
         B     RESOLV15                 GO TO EXIT SEQUENCE             44970000
RESOLV14 DICTCALL LCLDICTR,POINTER==A(DICTENTR)   LOCAL REFERENCE       45000000
RESOLV15 GOIF  CTYPE,OFF=RESOLV17       NOT CHARACTER TYPE IN, BRANCH   45030000
RESOLV16 GOIF  CHARMODE,ON=RESOLV90,    CHARACTER IN, SAME OUT, EXIT   X45060000
               ELSE=ARTHCONV              ELSE CONVERT TO ARITHMETIC    45090000
RESOLV17 GOIF  CHARMODE,OFF=RESOLV90,   ARITH IN, ARITH OUT, EXIT      X45120000
               ELSE=CHARCONV              ELSE CONVERT TO CHARACTER     45150000
         SPACE 3                                                        45180000
RESOLV30 EQU   *                        SELF DEFINING TERM              45210000
         SPACE                                                          45240000
         USING STACK,R10                BASE FOR TERM                   45270000
         L     R11,STACKVAL             PICK UP VALUE                   45300000
         DROP  R10                                                      45330000
         B     RESOLV90                   AND RETURN                    45360000
         SPACE 3                                                        45390000
         SPACE                                                          45420000
RESOLV70 EQU   *                        SYSLIST OR PARAMETER            45450000
         SPACE                                                          45480000
         DICTCALL PARMTBLR,POINTER==A(DICTENTR)  DICTIONARY CALL        45510000
*        R11 NOW POINTS TO PARAMETER ENTRY HEADER.                      45540000
         SPACE                                                          45570000
         LR    R14,R11                  SAVE PARAMETER POINTER          45600000
         USING PARMTAB,R14              BASE FOR PARAMETER              45630000
         GOIF  PSUB,ON=RESOLV71         SUBLIST, SKIP AHEAD             45660000
         LA    R11,PKAT                 ELSE POINT TO CHARACTER STRING  45690000
         SET   SUBLIST,OFF              TURN SUBLIST FLAG OFF           45700000
         B     RESOLV72                 LENGTH AND EXIT.                45720000
RESOLV71 MVC   JHWORD1,PNAT             SUBLIST, ALIGN N ATTRIBUTE      45750000
         SET   SUBLIST,ON               AND TURN ON SUBLIST FLAG        45780000
         XC    JFWORD1,JFWORD1          CLEAR HOLDING AREA              45820000
         MVC   JFWORD1+D1(D3),PLIST     ALIGN SUBLIST VECTOR POINTER.   45870000
         SPACE                                                          45900000
RESOLV72 EQU   *                       GET PARAMETER BINARY VALUE.      45930000
         SPACE                                                          45960000
         GOIF  CHARMODE,YES=RESOLV90    CHARACTERS, RETURN.             45990000
         GOIF  PSUB,ON=LOGER113         ILLEGAL SUBLIST REFERENCE       46020000
         GOIF  PSDT,OFF=ARTHCONV        NOT SDT, GO CONVERT TO BINARY   46050000
         MVC   JFWORD1,PVAL             ALIGN THE VALUE                 46080000
         DROP  R14                                                      46110000
         L     R11,JFWORD1              AND PICK IT UP.                 46140000
         B     RESOLV90                 EXIT.                           46170000
         SPACE 3                                                        46200000
RESOLV80 EQU   *                        ORDINARY SYMBOL REFERENCE       46230000
         SPACE                                                          46260000
         DICTCALL ORDSYMBR,POINTER==A(DICTENTR) ORDINARY SYMBOL REF     46290000
         LR    R14,R11                  SAVE THE POINTER.               46320000
         B     RESOLV90                   AND RETURN.                   46350000
         SPACE 3                                                        46380000
LOGER113 L     R12,=A(LOGERR01)         GET PTR TO ERROR LOGGING RTN    46410000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          46440000
         DC    AL1(SEV113,ERR113)       ERROR PARAMETERS                46470000
         SET   SUBLIST,OFF              CLEAN UP SUBLIST SWITCH         46480000
         SR    R11,R11                  SET UP DEFAULT VALUE TO RETURN  46500000
         B     RESOLV99                 PROCEED AS NORMAL               46530000
LOGER107 L     R12,=A(LOGERR01)         GET PTR TO ERROR LOGGING RTN    46560000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          46590000
         DC    AL1(SEV107,ERR107)       ERROR PARAMETERS                46620000
         B     RESOLV98                 CONTINUE AT COMMON POINT        46650000
LOGER108 L     R12,=A(LOGERR01)         GET PTR TO ERROR LOGGING RTN    46680000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          46710000
         DC    AL1(SEV108,ERR108)       ERROR PARAMETERS                46740000
         B     RESOLV98                 CONTINUE AT COMMON POINT        46770000
LOGER109 L     R12,=A(LOGERR01)         GET PTR TO ERROR LOGGING RTN    46800000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          46830000
         DC    AL1(SEV109,ERR109)       ERROR PARAMETERS                46860000
         B     RESOLV98                 CONTINUE AT COMMON POINT        46890000
LOGER127 L     R12,=A(LOGERR01)         GET PTR TO ERROR LOGGING RTN    46920000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          46950000
         DC    AL1(SEV127,ERR127)       ERROR PARAMETERS                46980000
RESOLV98 EQU   *                                                        47010000
         SR    R11,R11                  SET UP DEFAULT VALUE TO RETURN  47040000
RESOLV90 EQU   *                        EXIT FROM ROUTINE               47070000
         SPACE                                                          47100000
RESOLV99 LM    R2,R9,RESOLVST           RESTORE CALLERS REGISTERS       47120000
         BR    R9                       RETURN TO CALLER                47140000
         EJECT                                                          47160000
*TITLE--                                                              * 47190000
*   ARTHCONV/CONVERT CHARACTER STRING TO ARITHMETIC VALUE             * 47220000
*                                                                     * 47250000
         SPACE                                                          47280000
*        ON ENTRY R11 POINTS TO L FIELD OF CHARACTER STRING             47310000
         SPACE                                                          47340000
ARTHCONV EQU   *                                                        47370000
         SPACE                                                          47400000
         USING JTMLNG,R11               BASE                            47430000
         GOIF  JTMLNG,MAXDEC,GT=LOGER107 TOO LONG TO CONVERT, ERROR     47460000
         SR    R1,R1                    CLEAR                           47490000
         IC    R1,JTMLNG                PICK UP STRING LENGTH           47520000
         DROP  R11                                                      47550000
         SPACE                                                          47580000
*        MAKE SURE WE HAVE ALL NUMERICS                                 47610000
         SPACE                                                          47640000
         GOIF  (R1),ZERO=LOGER109       NULL STRING, ERROR              47670000
         AR    R1,R11                   POINT PAST END OF STRING        47700000
ACONV10  EQU   *                                                        47730000
         USING JTMSTRNG,R1              NEW BASE                        47760000
         GOIF  JTMSTRNG,JNUMMAX,GT=LOGER108 NOT NUMERIC, ERROR          47790000
         BCTR  R1,D0                    COUNT BACK DOWN TO START        47820000
         GOIF  (R1),(R11),HI=ACONV10    MORE, ITERATE                   47850000
         SPACE                                                          47880000
*        NOW WE CAN CONVERT                                             47910000
         SPACE                                                          47940000
         USING JTMLNG,R1                                                47970000
         IC    R11,JTMLNG               PICK UP LENGTH OF CONVERT STRNG 48000000
         BCTR  R11,D0                   MAKE LENGTH L-1 FOR EXECUTE     48030000
         EX    R11,STRNGTRL             TRANSLATE STRING TO ZONED       48060000
         EX    R11,STRNGPCK             PACK ZONED TO PACKED            48090000
         EX    R11,STRNGTRL             TRANSLATE ZONED TO STRING       48120000
         OI    JDWORD+L'JDWORD-D1,JC    OR IN A PLUS FOR SIGN           48150000
         CLC   JDWORD,=PL8'2147483647'  CHECK FOR MAXIMUM ARITH VALUE   48180000
         BH    LOGER127                 TOO HIGH, ERROR                 48210000
         CVB   R11,JDWORD               AND CONVERT TO BINARY           48240000
         SPACE                                                          48270000
*        R11 CONTAINS RESULTANT VALUE                                   48300000
         SPACE                                                          48330000
         B     RESOLV90                 RETURN TO CALLER                48360000
STRNGTRL TR    JTMSTRNG(D0),JTRTABLE    EXECUTED STRING TRANSLATE       48390000
STRNGPCK PACK  JDWORD,JTMSTRNG          EXECUTED STRING PACK            48420000
         DROP  R1                                                       48450000
         EJECT                                                          48480000
*TITLE                                                                * 48510000
*   CHARCONV/CONVERT ARITHMETIC TO CHARACTER STRING                   * 48540000
*                                                                     * 48570000
         SPACE                                                          48600000
*        ON ENTRY R11 CONTAINS VALUE                                    48630000
         SPACE                                                          48660000
CHARCONV EQU   *                                                        48690000
         SPACE                                                          48720000
         CVD   R11,JDWORD               CONVERT TO P&CKED DECIMAL       48750000
         UNPK  UNPKBUF,JDWORD             AND UNPACK                    48780000
         NC    UNPKBUF,ZONEMASK         TRANSLATE TO INTERNAL           48810000
         GOIF  INMACRO,OFF=CCONV05      SYSNDX NOT IN OPEN CODE         48840000
         USING JTMFLG,R10                                               48870000
         GOIF  JTMSVA,GT=CCONV05        BRANCH IF NOT LOCAL SETA        48900000
         LA    R1,UNPKBUF+D12           SET UP PTR TO LEFT OF SYSNDX    48930000
         CLC   JTMPTR,=F'0'             SEE BY PTR IF SYSNDX            48960000
         BZ    CCONV10                  LEAVE ZEROS IF SYSNDX VALUE     48990000
         DROP  R10                                                      49020000
CCONV05  EQU   *                                                        49050000
         TRT   UNPKBUF,ZONEMASK         FIND FIRST SIGNIFICANT DIGIT    49080000
         BNZ   CCONV10                  EXIT POINTING                   49110000
         LA    R1,UNPKLAST              FAKE ONE IF NONE                49140000
         SPACE                                                          49170000
CCONV10  EQU   *                                                        49200000
         SPACE                                                          49230000
*        R1 CONTAINS ADDRESS OF FIRST NON-ZERO CHARACTER                49260000
         SPACE                                                          49290000
         LA    RCOMP0,UNPKEND           POINT TO ONE PAST END OF STRING 49320000
         SR    RCOMP0,R1                  AND COMPUTE STRING LENGTH     49350000
         BCTR  R1,D0                    BACK UP TO SPACE BEFORE THE     49380000
         LR    R11,R1                     STRING, USE R11 TO POINT TO   49410000
         USING JTMLNG,R11                 IT, AND STORE THE STRING      49440000
         STC   RCOMP0,JTMLNG              LENGTH IN IT.                 49470000
         DROP  R11                                                      49500000
         SPACE                                                          49530000
*        ON RETURN, R11 MUST POINT TO THE LENGTH FIELD OF THE STRING    49560000
         SPACE                                                          49590000
         B     RESOLV90                 EXIT                            49620000
         EJECT                                                          49650000
*TITLE--                                                              * 49680000
*   EVAL/GENERAL EVALUATION OF ALL META TEXT                          * 49710000
*                                                                     * 49740000
*FUNCTION/OPERATION--                                                 * 49770000
*   CONVERTS META TEXT FROM THE EDITOR INTO APPROPRIATE CHARACTER     * 49800000
*   STRINGS OR ARITHMETIC VALUES.  META TEXT IS AN ORDERED SEQUENCE   * 49830000
*   OF META TERMS AND OPERATORS.  TERMS ARE ENTERED IMMEDIATELY INTO  * 49860000
*   A PUSH DOWN STACK.  OPERATORS REMOVE TERMS FROM THE TOP OF THE    * 49890000
*   STACK AND RETURN VALUES TO THE STACK.  CHARACTER STRINGS ARE NOT  * 49920000
*   KEPT IN THE STACK, BUT ARE BUILT IN BUFFERS OR DIRECTLY IN TEXT.  * 49950000
*   THE FINAL RESULT OF EVALUATION IS A SINGLE TERM IN THE STACK,     * 49980000
*   WHOSE LOCATION IS KNOWN TO ALL CALLING ROUTINES.                  * 50010000
         SPACE 3                                                        50040000
EVAL     EQU   *                                                        50070000
         SPACE                                                          50100000
EVAL00   STM   R2,R9,EVALST             SAVE CALLERS REGISTERS          50110000
         LR    R8,R12                   ESTABLISH BASE FOR RTN          50120000
         USING EVAL00,R8                                                50130000
         SPACE                                                          50160000
         USING JTMOP,VTXTIN                                             50190000
         SPACE                                                          50220000
         L     STACKPTR,STACKLVL        GET STACK POINTER               50250000
EVAL10   GOIF  JTMHIOP,GT=EVAL80        TERMS GET PROCESSED OVER THERE  50280000
         SPACE                                                          50310000
*        BRANCH TABLE FOR OPERATORS                                     50340000
         SPACE                                                          50370000
         SR    INDEX1,INDEX1            CLEAR A REGISTER                50400000
         IC    INDEX1,JTMOP             PICK UP AN OPERATOR             50430000
         AR    INDEX1,INDEX1            DOUBLE IT                       50460000
         LH    INDEX1,OPTAB(INDEX1)     GET BRANCH DISPLACEMENT         50490000
         LA    VTXTIN,JTMPTR            BUMP PAST FLAG                  50520000
         B     EVALOPS(INDEX1)          BRANCH TO OP ROUTINE            50550000
         DROP  VTXTIN                                                   50580000
         SPACE                                                          50610000
OPTAB    DS    0H                       OPERATOR BRANCH TABLE           50640000
         SPACE                                                          50670000
         OPS   SCM                      START CHARACTER MODE            50700000
         OPS   PER                      PERIOD--CONCATENATION OPERATOR  50730000
         OPS   PLUS                     UNARY PLUS                      50760000
         OPS   MIN                      UNARY MINUS                     50790000
         OPS   MULT                     BINARY MULTIPLY                 50820000
         OPS   DIV                      BINARY DIVIDE                   50850000
         OPS   ADD                      BINARY ADD                      50880000
         OPS   SUB                      BINARY SUBTRACT                 50910000
         OPS   GT                       GREATER THAN                    50940000
         OPS   GE                       GREATER/EQUAL                   50970000
         OPS   LT                       LESS THAN                       51000000
         OPS   LE                       LESS/EQUAL                      51030000
         OPS   EQ                       EQUAL                           51060000
         OPS   NE                       NOT EQUAL                       51090000
         OPS   NOT                      NOT                             51120000
         OPS   AND                      AND                             51150000
         OPS   OR                       OR                              51180000
         OPS   STR                      SUB STRING OPERATION            51210000
         OPS   DUP                      DUPLICATION OPERATION           51240000
         OPS   DIM                      DIMENSION                       51270000
         OPS   DIM2                     SYSLIST(N,M) FIRST DIMENSION    51300000
         OPS   DIM3                     SYSLIST(N,M) SECOND DIMENSION   51330000
         OPS   STRM                     STATEMENT TERMINATOR            51360000
         OPS   TAT                      TYPE ATTRIBUTE                  51390000
         OPS   LAT                      LENGTH ATTRIBUTE                51420000
         OPS   SAT                      SCALE ATTRIBUTE                 51450000
         OPS   IAT                      INTERGER ATTRIBUTE              51480000
         OPS   KAT                      COUNT ATTRIBUTE                 51510000
         OPS   NAT                      NUMBER ATTRIBUTE                51540000
         SPACE                                                          51570000
EVALOPS  EQU   *                        ROOT FOR EVALUATION OPERATORS   51600000
         EJECT                                                          51630000
EVALDIM3 EQU   *                        APPLY SYSLIST(N,M) M TERM       51660000
         SPACE                                                          51690000
         USING JTMFLG,STACKPTR          BASE FOR TERM IN STACK          51720000
         SET   SUBSCR2,ON               INDICATE SECOND SUBSCRIPT       51750000
         SPACE                                                          51780000
EVALDIM  EQU   *                        DIMENSION OPERATOR              51810000
         SPACE                                                          51840000
*        DIMENSION IS THE LAST OPERATOR IN EVAL STACK, AND NEEDS TO BE  51870000
*        INSERTED INTO THE PRECEEDING ENTRY IF WITHIN RANGE.            51900000
         SPACE                                                          51930000
         BAL   RETURN,PREFXRES          RESOLVE LAST TERM               51960000
*        VALUE IS RETURNED IN EVEN REG.  STACKPTR IS NOT DECREMENTED.   51990000
         SH    STACKPTR,=Y(STKENTRY)    SO DECREMENT IT.                52020000
         GOIF  (EVEN),NEG=LOGER111      BRANCH IF SUBSCRIPT INVALID     52050000
         GOIF  JTMLSTO,EQ=DIM09         ACCEPT ZERO SUBSCRIPT IN BOTH   52080000
         CLI   JTMFLG,JTMLSTO+JTMCSW    SYSLIST CASES --                52110000
         BNE   DIM10                    SYSLIST(N) AND SYSLIST(N,M)     52140000
DIM09    GOIF  SUBSCR2,OFF=DIM11        BUT NOT IN M TERM OF (N,M)      52170000
DIM10    EQU   *                                                        52200000
         GOIF  (EVEN),POS=DIM11         ACCEPT ONLY POSITIVE OTHERWISE  52230000
LOGER111 EQU   *                                                        52260000
         L     R12,=A(LOGERR01)         GET PTR TO ERROR LOGGING RTN    52290000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          52320000
         DC    AL1(SEV111,ERR111)       ERROR PARAMETERS                52350000
         OI    JTMD,BIT0                INDICATE DEAD TERM              52380000
         SR    EVEN,EVEN                MAKE SURE DIMEN IS LOW VALUE    52410000
DIM11    EQU   *                                                        52440000
         STH   EVEN,JHWORD1             PUT IN STORAGE FOR SS USAGE     52470000
         GOIF  JTMCSW,OFF=DIM15         SKIP AHEAD IF NOT CHARACTER     52500000
         SET   JTMCSW,OFF               ELSE TURN OFF SWITCH IN TERM    52530000
         SET   CHARMODE,ON                AND ON FOR CHARACTER MODE.    52560000
DIM15    EQU   *                                                        52590000
         GOIF  SUBSCR2,ON=DIM19         BRANCH IF M OF SYSLIST(N,M)     52620000
         GOIF  JTMLSTO,EQ=DIM40,        BRANCH IF N OF SYSLIST(N)      X52650000
               GT=DIM20                 OR N OF PARAMETER(N)            52680000
         GOIF  JHWORD1,JTMD,LE=DIM20    GO ON WITH VALID DIMENSION      52710000
         L     R12,=A(LOGERR01)         GET PTR TO ERROR LOGGING RTN    52740000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          52770000
         DC    AL1(SEV112,ERR112)       ERROR PARAMETERS                52800000
         OI    JTMD,BIT0                INDICATE DEAD TERM              52830000
         B     DIM22                    CONTINUE WITH MAXIMUM DIMEN     52860000
DIM19    SET   SUBSCR2,OFF              CLEAN UP SECOND SUBSCRIPT FLAG  52890000
         MVI   JTMFLG,JTMPPAR           CONVERT SYSLIST TO PARAM REFER  52900000
DIM20    TM    JTMD,BIT0                SEE IF DEAD TERM FLAG ALREADY   52920000
         BO    DIM22                    BRANCH IF ON. OTHERWISE,        52950000
         MVC   JTMD,JHWORD1             APPLY THE DIMENSION             52980000
DIM22    GOIF  CHARMODE,OFF=EVAL10      EXIT IF NOT CHARACTER MODE      53010000
         L     FLDLN,RESRTRN            RESTORE LENGTH COUNTER          53040000
         LR    R10,STACKPTR             RESOLVE WANTS POINTER IN R10    53070000
         JCALL RESOLVE                  GET A CHARACTER STRING          53100000
         DROP  STACKPTR                                                 53130000
         L     R8,=A(GENSTRNG)          BASE FOR GENSTRNG ROUTINE       53190000
         USING GENSTRNG,R8                DECLARE--                     53250000
         B     GENSTR1X                 PASS RESULT TO GENSTRNG         53280000
         USING EVAL,R8                  RECOVER ROUTINE BASE            53310000
DIM40    EQU   *                                                        53370000
         USING JTMFLG,STACKPTR                                          53400000
         TM    JTMD,BIT0                SEE IF DEAD TERM FLAG ALREADY   53430000
         BO    DIM22                    BRANCH IF ON. OTHERWISE,        53460000
         MH    EVEN,=H'3'               CALCULATE SYSLIST VECTOR PTR    53490000
         ST    EVEN,JFWORD1             TEMPORARILY SAVE AND            53520000
         MVI   JTMFLG,JTMPPAR           CONVERT SYSLIST TO PARAM REFER  53530000
         MVC   JTMLSTN,JFWORD1+D1       INSERT INTO PTR FIELD OF TERM   53550000
         MVC   JTMLSTM,=H'0'            RESET DIMEN FLAG IN TERM        53580000
         B     DIM22                    GO BACK TO RESOLVE TERM         53610000
         DROP STACKPTR                                                  53640000
EVALDIM2 EQU   *                        APPLY SPECIAL SYSLIST DIMENSION 53670000
         SPACE                                                          53700000
         USING JTMFLG,STACKPTR          BASE FOR TERM IN STACK          53730000
         BAL   RETURN,PREFXRES          RESOLVE THE DIMENSION           53760000
         SH    STACKPTR,=Y(STKENTRY)      AND UPDATE THE STACK POINTER  53790000
         GOIF  (EVEN),NOTNEG=EDIM2A     OK FOR SYSLIST IF ZERO OR POS   53820000
         L     R12,=A(LOGERR01)         GET PTR TO ERROR LOGGING RTN    53850000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          53880000
         DC    AL1(SEV130,ERR130)       ERROR PARAMETERS                53910000
         OI    JTMD,BIT0                INDICATE DEAD TERM              53940000
         B     EVAL10                   AND CONTINUE                    53970000
EDIM2A   EQU   *                                                        54000000
         MH    EVEN,=H'3'               MAKE INTO A POINTER,            54030000
         ST    EVEN,JFWORD1             ALIGN,                          54060000
         MVC   JTMLSTN,JFWORD1+D1       AND MOVE INTO PTR IN TERM       54090000
         B     EVAL10                     AND CONTINUE.                 54120000
         DROP  STACKPTR                                                 54150000
         SPACE 3                                                        54180000
EVALSTR  EQU   *                                                        54210000
         SPACE                                                          54240000
*        LAST TWO STACK ENTRIES REPRESENT VALUES OF EXPRESSION 1 AND 2  54270000
*              OF SUBSTRING EXPRESSION.                                 54300000
         SPACE                                                          54330000
         BAL   RETURN,INFIXRES          RESOLVE TWO TERMS               54360000
*        NOW EXPRESSION 1 VALUE IS IN EVEN REG AND EXPRESSION 2 IN      54390000
*              ODD REG.                                                 54420000
         SH    STACKPTR,=Y(STKENTRY)    DELETE XTRA TERM FROM STACK     54450000
         LA    R15,STRING2               POINT TO 2ND STRING            54480000
         GOIF  (R15),NEWSTRNG,LE=STR20  SKIP IF IN BUFFER 2             54510000
         LA    R15,STRING1              ELSE RESET TO FIRST STRING      54540000
         SPACE                                                          54570000
STR20    EQU   *                                                        54600000
         SPACE                                                          54630000
         USING JTMLNG,R15               BASE FOR STRING                 54660000
*        COMPUTE LENGTH OF CURRENT STRING--INITIAL STRING LENGTH MINUS  54690000
*              PREVIOUS STRING LENGTH.                                  54720000
         SPACE                                                          54750000
         SR    RCOMP1,RCOMP1            CLEAR A REGISTER                54780000
         IC    RCOMP1,JTMLNG            GET THE CURRENT LENGTH          54810000
         SH    RCOMP1,STRNGLN            SUBTRACT PREVIOUS LENGTH       54840000
         GOIF  (EVEN),POS=STR21         GO ON IF EXPRESSION 1 OK        54870000
         L     R12,=A(LOGERR01)         GET PTR TO ERROR LOGGING RTN    54900000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          54930000
         DC    AL1(SEV115,ERR115)       ERROR PARAMETERS                54960000
         SR    RCOMP1,RCOMP1            GIVE NULLSTRING                 54990000
         B     STR35                    FINISHED                        55000000
STR21    GOIF  (ODD),NOTNEG=STR22       GO ON IF EXPRESSION 2 OK        55020000
         L     R12,=A(LOGERR01)         GET PTR TO ERROR LOGGING RTN    55050000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          55080000
         DC    AL1(SEV116,ERR116)       ERROR PARAMETERS                55110000
         SR    RCOMP1,RCOMP1            GIVE NULLSTRING                 55140000
         B     STR35                    FINISHED                        55150000
STR22    GOIF  (RCOMP1),(EVEN),NOTLO=STR23 GO ON IF EXPR 1 OK WITH STR  55170000
         L     R12,=A(LOGERR01)         GET PTR TO ERROR LOGGING RTN    55200000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          55230000
         DC    AL1(SEV117,ERR117)       ERROR PARAMETERS                55260000
         SR    RCOMP1,RCOMP1            GIVE NULLSTRING                 55290000
         B     STR35                    FINISHED                        55300000
STR23    EQU   *                                                        55320000
         BCTR  EVEN,D0                  REDUCE TO ZERO ORIGIN           55350000
         SR    RCOMP1,EVEN              COMPUTE BALANCE OF STRING       55380000
         L     VTXTOUT,NEWSTRNG         START OF 'TO' FIELD             55410000
         A     EVEN,NEWSTRNG            START OF 'FROM' FIELD           55440000
         GOIF  (ODD),(RCOMP1),HIGH=STR30 ERROR IF EXPR 2 HIGH           55470000
         LR    RCOMP1,ODD               ELSE MOVE REQUESTED LENGTH      55500000
         B     STR32                    GO MOVE STRING                  55530000
         SPACE                                                          55540000
STR30    EQU   *                                                        55550000
         SPACE                                                          55580000
STR32    EX    RCOMP1,MOVESTR           REMOTE MOVE                     55590000
STR35    AH    RCOMP1,STRNGLN           ADD LENGTH OF REST OF TOTAL     55600000
         USING JTMLNG,R15               BASE FOR TOTAL STRING           55680000
         STC   RCOMP1,JTMLNG             STORE NEW LENGTH               55710000
         DROP  R15                                                      55740000
         B     EVAL10                   ITERATE                         55770000
MOVESTR  MVC   D0(D0,VTXTOUT),D0(EVEN)  REMOTE MOVE FOR STRING OPERATOR 55800000
         SPACE 3                                                        55830000
EVALDUP  EQU   *                        DUPLICATION FACTOR              55860000
         SPACE                                                          55890000
*        DUPLICATION FACTOR IS REPRESENTED BY LAST STACK ENTRY.         55920000
         SPACE                                                          55950000
         BAL   RETURN,PREFXRES          RESOLVE DUP FACTOR              55980000
         SPACE                                                          56010000
*        VALUE IS NOW IN EVEN REGISTER.                                 56040000
         SPACE                                                          56070000
         SH    STACKPTR,=Y(STKENTRY)    DELETE XTRA TERM FROM STACK     56100000
*        COMPUTE LENGTH OF CURRENT STRING AND GET POINTER TO STRING.    56130000
         SPACE                                                          56160000
         LA    R15,STRING2              POINT TO SECOND STRING          56190000
         GOIF  (R15),NEWSTRNG,LE=DUP20  SKIP IF IN BUFFER 2             56220000
         LA    R15,STRING1              ELSE POINT TO BUFFER 1          56250000
         SPACE                                                          56280000
DUP20    EQU   *                                                        56310000
         SPACE                                                          56340000
         LR    R0,R15                   SAVE STRING BUFFER POINTER      56370000
         USING JTMLNG,R15               BASE FOR STRING BUFFER          56400000
         SR    RCOMP1,RCOMP1            CLEAR A REGISTER                56430000
         IC    RCOMP1,JTMLNG            PICK UP THE STRING LENGTH       56460000
         DROP  R15                                                      56490000
         SH    RCOMP1,STRNGLN           SUBTRACT PRIOR STRING LENGTH    56520000
         LR    R14,RCOMP1               LENGTH OF STRING                56530000
         BCTR  R14,R0                   MACHINE LENGTH                  56540000
         USING STRING1,R15              DUMMY TEMPORARY BASE            56550000
         LA    R15,STRING2              COMPUTE A STOPPER               56580000
         SR    R15,RCOMP1                                               56610000
         DROP  R15                                                      56640000
         L     ODD,NEWSTRNG              START OF 'FROM' FIELD          56670000
         LR    VTXTOUT,ODD              START OF 'TO' FIELD             56700000
         SPACE                                                          56730000
*        START OF STRING IS IN 'ODD' AND LENGTH IS IN 'RCOMP1'          56760000
         SPACE                                                          56790000
         GOIF  (EVEN),ZERO=DUP90,POS=DUP30 PROCEED IF DUP FACTOR OK     56820000
         L     R12,=A(LOGERR01)         GET PTR TO ERROR LOGGING RTN    56850000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          56880000
         DC    AL1(SEV114,ERR114)       ERROR PARAMETERS                56910000
         B     DUP90                    GET OUT NOW WITH NULL           56940000
DUP30    EQU   *                        DUP LOOP (DOOP LUP)             56970000
         GOIF  (VTXTOUT),(R15),HIGH=DUP80    NOT ENOUGH ROOM, FAKE IT   57000000
DUP32    EX  R14,DUPMOVE                MOVE THE STRING                 57030000
DUP34    AR    VTXTOUT,RCOMP1           ADD LENGTH OF MOVED STRING      57060000
         BCT   EVEN,DUP30               LOOP CONTROL                    57090000
         SPACE                                                          57120000
*        DONE--BE SURE LENGTH IS UPDATED                                57150000
         SPACE                                                          57180000
DUP90    LR    R15,R0                   RESTORE STRING BUFFER BASE      57210000
         SR    VTXTOUT,R15              NEW LENGTH OF TOTAL STRING      57240000
         BCTR  VTXTOUT,D0               DONT COUNT LENGTH BYTE          57270000
         USING JTMSTRNG,R15                                             57300000
         STC   VTXTOUT,JTMSTRNG         STORE STRING LENGTH             57330000
         DROP  R15                                                      57360000
         B     EVAL10                   EXIT TO EVAL ITERATION POINT    57390000
DUPMOVE  MVC   D0(D0,VTXTOUT),D0(ODD)   REMOTE MOVE FOR DUP FACTOR      57420000
         SPACE 3                                                        57450000
DUP80    EQU   *                        MOVE A PARTIAL STRING           57480000
         SPACE                                                          57510000
         GOIF  ERR105SW,ON=DUP85        BYPASS IF ERROR ALREADY LOGGED  57540000
         L     R12,=A(LOGERR01)         GET PTR TO ERROR LOGGING RTN    57550000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          57560000
         DC    AL1(SEV105,ERR105)       ERROR PARAMETER                 57570000
         SET   ERR105SW,ON              INDICATE ERROR LOGGED ONCE      57580000
DUP85    AR    RCOMP1,R15               END OF BUFFER                   57590000
         SR    RCOMP1,VTXTOUT           REMAINING LENGTH                57600000
         LTR   R14,RCOMP1                                               57610000
         BZ    DUP90                    DONE IF NOTHING TO MOVE         57620000
         LA    EVEN,D1                  TO GET OUT OF LOOP              57630000
         B     DUP32                    GO MOVE                         57640000
         SPACE 3                                                        57690000
EVALSCM  EQU   *                        START CHARACTER MODE            57720000
         SPACE                                                          57750000
         SET   CCOMP,ON                 DO CHARACTER RELATIONALS        57780000
         L     VTXTOUT,STRPTR1            GET CURRENT CHARACTER BUFFER X57810000
                                          POINTER.                      57840000
         SPACE                                                          57870000
         ST    STACKPTR,STACKLVL        SAVE THE STACK POIN0ER          57900000
         L     R12,=A(GENSTRNG)         GENSTRING BASE                  57930000
         BALR  RETURN,R12                 AND LINK TO GENERATE A STRING 57960000
         LR    VTXTIN,R11               RECOVER META TEXT POINTER       57990000
EVALPER  EQU   *                                                        58000000
         SPACE                                                          58020000
         XC    STRPTR1,STRPTR2          FLIP BUFFERS                    58050000
         B     EVAL10                   DO SOME MORE.                   58080000
         SPACE 3                                                        58110000
         SPACE 3                                                        58260000
EVALSTRM EQU   *                        EXIT                            58290000
         SPACE                                                          58320000
         ST    STACKPTR,STACKLVL        SAVE THE STACK POINTER          58350000
         LR    R10,VTXTIN               META TEXT POINTER AS PARAMETER  58380000
EVAL99   LM    R2,R9,EVALST             RESTORE CALLERS REGISTERS       58400000
         BR    R9                       RETURN TO CALLER                58420000
         EJECT                                                          58440000
         USING STACK,STACKPTR           BASE FOR STACK OPERATIONS       58470000
         SPACE                                                          58500000
EVALADD  EQU   *                        ADD                             58530000
         SPACE                                                          58560000
         BAL   RETURN,INFIXRES          RESOLVE TWO TERMS               58590000
         SPACE                                                          58620000
         AR    EVEN,ODD                 ADD                             58650000
         BNO   ADD80                    GO ON IF NO OVERFLOW            58680000
LOGER110 L     R12,=A(LOGERR01)         GET PTR TO ERROR LOGGING RTN    58710000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          58740000
         DC    AL1(SEV110,ERR110)       ERROR PARAMETERS                58770000
         SR    EVEN,EVEN                SET UP DEFAULT VALUE            58800000
ADD80    ST    EVEN,STACKVAL            STORE THE VALUE                 58830000
         B     ARTHEXIT                   AND GO CLEAN UP               58860000
         SPACE 3                                                        58890000
EVALSUB  EQU   *                        SUBTRACT                        58920000
         SPACE                                                          58950000
         BAL   RETURN,INFIXRES          RESOLVE TWO TERMS               58980000
         SPACE                                                          59010000
         SR    EVEN,ODD                 SUBTRACT                        59040000
         BO    LOGER110                 DIAGNOSE THE OVERFLOW           59070000
         B     ADD80                    OTHERWISE, FINISH UP NORMALLY   59100000
         SPACE 3                                                        59130000
EVALDIV  EQU   *                        DIVIDE                          59160000
         SPACE                                                          59190000
         BAL   RETURN,INFIXRES          RESOLVE TWO TERMS               59220000
         GOIF  (ODD),ZERO=DIV80         SKIP DIVIDE ON ZERO DIVISOR     59250000
         LR    R0,ODD                   DIVISOR                         59280000
         SRDA  EVEN,D32                 SET UP DIVIDEND                 59310000
         DR    EVEN,R0                  DIVIDE                          59340000
DIV80    ST    ODD,STACKVAL             STORE DIVIDEND                  59370000
         B     ARTHEXIT                   AND GO CLEAN UP               59400000
         SPACE 3                                                        59430000
EVALMULT EQU   *                        MULTIPLY                        59460000
         SPACE                                                          59490000
         BAL   RETURN,INFIXRES          RESOLVE TWO TERMS               59520000
         SPACE                                                          59550000
         MR    EVEN,EVEN                MULTIPLY                        59580000
         LTR   EVEN,EVEN                CHECK FOR OVERFLOW              59610000
         BNM   MULT79                   BRANCH IF NOT NEGATIVE SIGN     59640000
         LCR   EVEN,EVEN                CONVERT NEGATIVE TO POSITIVE    59670000
         BCTR  EVEN,D0                  DECREMENT. IF 1, WILL BE ZERO   59700000
         LTR   EVEN,EVEN                TEST FOR ZERO. IF NOT,          59730000
MULT79   EQU   *                                                        59760000
         BNZ   LOGER110                 GO TO PUT ERROR, SET DEFAULT    59790000
         ST    ODD,STACKVAL             RESULT GOES TO THE STACK        59820000
         B     ARTHEXIT                 AND GO CLEAN UP                 59850000
         DROP  STACKPTR                                                 59880000
         SPACE 3                                                        59910000
INFIXRES EQU   *                        RESOLVE FOR INFIX OPERATIONS    59940000
         SPACE                                                          59970000
         ST    RETURN,INFIXRTN          SAVE THE RETURN REGISTER        60000000
         LR    R10,STACKPTR             REGISTER FOR RESOLVE            60030000
         JCALL RESOLVE                  RESOLVE TO ARITHMETIC           60060000
         LR    ODD,R11                  PLACE VALUE IN COMP REGISTER    60090000
         SH    STACKPTR,=Y(STKENTRY)    BACK UP ONE TERM IN STACK       60120000
         SPACE                                                          60150000
INFIX50  EQU   *                        ENTRY FOR SINGLE TERM RESOLVE   60180000
         SPACE                                                          60210000
         LR    R10,STACKPTR             RESOLVE NEEDS IT IN R10         60240000
         JCALL RESOLVE                  RESOLVE TO ARITHMETIC           60270000
         LR    EVEN,R11                 PLACE VALUE IN OTHER COMP REG   60300000
         L     RETURN,INFIXRTN          RESTORE RETURN REGISTER         60330000
         BR    RETURN                     AND RETURN TO CALLER          60360000
         SPACE 3                                                        60390000
PREFXRES EQU   *                        RESOLVE FOR PREFIX OPERATIONS   60420000
         SPACE                                                          60450000
         ST    RETURN,INFIXRTN          SAVE THE RETURN REGISTER        60480000
         B     INFIX50                  AND RESOLVE ONE TERM            60510000
         SPACE 3                                                        60540000
RELATE   EQU   *                        ENTER IN THE STACK              60570000
         SPACE                                                          60600000
         USING JTMOP,VTXTIN             BASE FOR OPERATOR               60630000
         LA    VTXTIN,JTMPTR            SKIP UP TO NEXT OPERATOR/TERM   60660000
         DROP  VTXTIN                                                   60690000
         SPACE                                                          60720000
         USING STACK,STACKPTR           BASE FOR STACK ENTRY            60750000
         ST    EVEN,STACKVAL            STACK THE RESULT                60780000
         DROP  STACKPTR                                                 60810000
         B     RELTEXIT                 GO TO FINISH UP RELATIONALLY    60840000
         SPACE 3                                                        60870000
EVAL80   EQU   *                        ENTER ALL TERMS IN STACK        60900000
         SPACE                                                          60930000
         USING STACK,STACKPTR           BASE FOR STACK ENTRY            60990000
         USING JTMFLG,VTXTIN            BASE FOR TERM INPUT             61020000
         MVC   STACKNXT(TERMLNTH),JTMFLG  MOVE TERM TO STACK            61050000
         SET   JTMCSW,OFF               BE SURE TEXT SWITCHES ARE CLEAN 61080000
         LA    VTXTIN,JTMFLG+TERMLNTH   BUMP TEXT OVER TERM             61110000
         LA    STACKPTR,STACKNXT          AND OVER TERM IN STACK        61140000
         B     EVAL10                   GO BACK FOR MORE                61170000
         DROP  STACKPTR,VTXTIN                                          61200000
         SPACE 3                                                        61230000
EVALGT   EQU   *                        GENERAL                         61260000
EVALGE   EQU   *                          ENTRY                         61290000
EVALLT   EQU   *                            FOR                         61320000
EVALLE   EQU   *                              RELATIONAL                61350000
EVALEQ   EQU   *                                OPERATIONS              61380000
EVALNE   EQU   *                                  IS HERE.              61410000
         SPACE                                                          61440000
         BCTR  VTXTIN,D0                BACK UP TO RELATIONAL OPERATOR  61470000
         GOIF  CCOMP,ON=CHARREL         SWITCH ON, DO CHARACTER COMPARE 61500000
         SPACE                                                          61530000
ARTHREL  EQU   *                        ARITHMETIC RELATIONAL           61560000
         SPACE                                                          61590000
         BAL   RETURN,INFIXRES          RESOLVE TWO TERMS               61620000
         GOIF  (EVEN),(ODD),MODE=A,HI=EVALHI,LO=EVALLO                 X61650000
                                        COMPARE AND BRANCH              61680000
         SPACE                                                          61710000
EVALEQU  EQU   *                        WE HAVE AN EQUAL COMPARE        61740000
         SPACE                                                          61770000
         USING JTMFLG,VTXTIN            BASE TO CHECK OPERATOR          61800000
         GOIF  JTMGE,LO=EVALNO          BRANCH IF OPERATOR IS GT        61830000
         GOIF  JTMLE,HI=EVALNO,         BRANCH IF OPERATOR IS LT, NE   X61860000
               ELSE=EVALYES             ELSE IT MUST BE GE, LE, EQ      61890000
         SPACE                                                          61920000
EVALHI   EQU   *                        HIGH COMPARE                    61950000
         SPACE                                                          61980000
         GOIF  JTMGE,LE=EVALYES         OPERATOR IS GE, GT              62010000
         GOIF  JTMNE,EQ=EVALYES,        OPERATOR IS NE                 X62040000
               ELSE=EVALNO              OPERATOR IS EQ, LE, LT          62070000
         SPACE                                                          62100000
EVALLO   EQU   *                        LOW COMPARE                     62130000
         SPACE                                                          62160000
         GOIF  JTMLE,GE=EVALYES,        OPERATOR IS LE, LT, NE         X62190000
               ELSE=EVALNO              OPERATOR IS GT, GE, EQ          62220000
         SPACE                                                          62250000
EVALYES  EQU   *                        YESS                            62280000
         SPACE                                                          62310000
         LA    EVEN,D1                  GIVE YES RESPONSE               62340000
         B     RELATE                     AND GO STORE IT               62370000
         SPACE                                                          62400000
EVALNO   EQU   *                        NO--                            62430000
         SPACE                                                          62460000
         SR    EVEN,EVEN                ZERO THE RESULT (NO)            62490000
         B     RELATE                     AND GO STORE IT               62520000
         DROP  VTXTIN                                                   62550000
         SPACE 3                                                        62580000
CHARREL  EQU   *                        CHARACTER RELATIONAL            62610000
         SPACE                                                          62640000
         SET   CCOMP,OFF                TURN OFF CHARACTER RELATIONAL  X62670000
                                          SWITCH.                       62700000
         USING STACK,STACKPTR           BASE FOR TERM STACK             62730000
         LA    STACKPTR,STACKNXT        A CHARACTER RELATIONAL CAUSES AX62760000
                                          NEW TERM TO BE ENTERED IN THEX62790000
                                          STACK--MAKE ROOM FOR IT.      62820000
         DROP  STACKPTR                                                 62880000
         CLC   STRING1(D1),STRING2      COMPARE STRING LENGTHS          62910000
         BH    EVALHI                   LONG                            62940000
         BL    EVALLO                   SHORT                           62970000
         IC    RMOVE,STRING1            ELSE COMPARE CHARACTERS--       63000000
         EX    RMOVE,TR1                BUFFER 1 TO EXTERNAL            63030000
         EX    RMOVE,TR2                BUFFER 2 TO EXTERNAL            63060000
         EX    RMOVE,COMP12             EXECUTED COMPARE                63090000
         EX    RMOVE,TR1                BUFFER 1 BACK AGAIN             63120000
         EX    RMOVE,TR2                BUFFER 2 BACK AGAIN             63150000
         BL    EVALLO                   LOW                             63180000
         BH    EVALHI                   HIGH                            63210000
         B     EVALEQU                  EQUAL                           63240000
         SPACE                                                          63270000
COMP12   CLC   STRING1(D0),STRING2      REMOTE COMPARE                  63300000
TR1      TR    STRING1(D0),JTRTABLE     REMOTE TRANSLATE STRING1        63330000
TR2      TR    STRING2(D0),JTRTABLE     LIKEWISE STRING2                63360000
         SPACE 3                                                        63390000
         USING STACK,STACKPTR           BASE FOR STACK OPERATIONS       63420000
         SPACE                                                          63450000
EVALOR   EQU   *                        OR                              63480000
         SPACE                                                          63510000
         BAL   RETURN,INFIXRES          RESOLVE TWO TERMS               63540000
         OR    EVEN,ODD                 DO THE OR                       63570000
         ST    EVEN,STACKVAL            STORE THE RESULT                63600000
         B     ARTHEXIT                   AND EXIT.                     63630000
         SPACE                                                          63660000
EVALAND  EQU   *                        AND                             63690000
         SPACE                                                          63720000
         BAL   RETURN,INFIXRES          RESOLVE TWO TERMS               63750000
         NR    EVEN,ODD                 DO THE AND                      63780000
         ST    EVEN,STACKVAL            STORE THE RESULT                63810000
         B     ARTHEXIT                   AND EXIT                      63840000
         SPACE                                                          63870000
EVALNOT  EQU   *                        NOT                             63900000
         SPACE                                                          63930000
         BAL RETURN,PREFXRES            RESOLVE ONE TERM                63960000
         X     EVEN,=F'1'               REVERSE THE BIT                 63990000
         CL    EVEN,=F'1'               GT THAN ONE ?          @AZ10934 64000000
         BNH   EVALNOT5                 BR IF NOT, ELSE SET-   @AZ10934 64010000
         SR    EVEN,EVEN                TO ZERO                @AZ10934 64012000
EVALNOT5 EQU   *                                               @AZ10934 64014000
         ST    EVEN,STACKVAL            STORE THE RESULT                64020000
         B     ARTHEXIT                   AND EXIT                      64050000
         SPACE                                                          64080000
EVALMIN  EQU   *                        MINUS--UNARY                    64110000
         SPACE                                                          64140000
         BAL   RETURN,PREFXRES          RESOLVE ONE TERM                64170000
         LCR   EVEN,EVEN                COMPLEMENT                      64200000
         ST    EVEN,STACKVAL            STORE THE RESULT                64230000
         B     ARTHEXIT                   AND EXIT                      64260000
         DROP  STACKPTR                                                 64290000
         SPACE                                                          64320000
EVALPLUS EQU   *                        PLUS--UNARY                     64350000
         SPACE                                                          64380000
         B     EVAL10                   A NO-OP, EFFECTIVELY            64410000
RELTEXIT EQU   *                                                        64440000
         MVI   STRING1,D0               DROP STRING IF ANY              64470000
         MVI   STRING2,D0               DROP STRING IF ANY              64500000
ARTHEXIT EQU   *                        EXIT ROUTINE TO FOLLOW ARITH-  X64530000
                                          METIC OPERATIONS.             64560000
         USING STACK,STACKPTR                                           64590000
         MVI   STACKFLG,JTMSDT          NOW IT'S A SELF DEFINING TERM   64620000
         B     EVAL10                   AND RETURN TO EVAL MAINLINE     64650000
         DROP  STACKPTR                                                 64680000
         SPACE 3                                                        64710000
EVALTAT  EQU   *                        TYPE ATTRIBUTE                  64740000
         L     VTXTOUT,STRPTR1          SET UP PTR TO STRING BUFFER     64770000
         SPACE                                                          64800000
         SET   CCOMP,ON                 INDICATE CHARACTER COMPARES     64830000
         USING JTMFLG,STACKPTR          BASE FOR TERM                   64860000
         GOIF  JTMSVC,LT=TAT22          A OR B TYPE VARIABLE            64890000
         GOIF  JTMOSA,LT=TAT24          C TYPE VARIABLE                 64920000
         DROP  STACKPTR                                                 64950000
         LR    R10,STACKPTR             POINT TO TERM                   64980000
         SET   CHARMODE,ON              NO ARITHMETIC CONVERSION        65010000
         JCALL RESOLVE                  RESOLVE IT                      65040000
         SET   CHARMODE,OFF                                             65070000
*        R14 POINTS TO HEADER                                           65130000
         USING PARMTAB,R14              BASE FOR ENTRY                  65160000
         GOIF  PTAT,JU,NE=TAT15         PICK UP TYPE IF NOT U           65190000
         GOIF  TDEFALT,ON=TAT23         DIAGNOSE IF U DEFAULTED         65200000
TAT15    IC    RMOVE,PTAT               PICK UP TYPE                    65210000
         DROP  R14                                                      65220000
         USING JTMLNG,VTXTOUT           BASE FOR OUTPUT                 65250000
TAT20    STC   RMOVE,JTMSTRNG           STORE TYPE                      65280000
         MVI   JTMLNG,D1                LENGTH OF 1                     65310000
         DROP  VTXTOUT                                                  65340000
         SH    STACKPTR,=Y(STKENTRY)    DELETE TERM FROM STACK          65350000
         XC    STRPTR1,STRPTR2          SWITCH BUFFERS.                 65370000
         B     EVAL10                   AND EXIT TO MAINLINE EVAL.      65400000
         SPACE                                                          65430000
TAT22    LA    RMOVE,JN                 TYPE N FOR A AND B VARIABLES    65460000
         B     TAT20                    CONTINUE                        65490000
TAT23    L     R12,=A(LOGERR01)         LOG ERROR 119                   65497000
         BALR  R9,R12                                                   65504000
         DC    AL1(SEV119,ERR119)                                       65511000
TAT24    LA    RMOVE,JU                 TYPE U FOR C VARIABLES          65520000
         B     TAT20                    CONTINUE                        65550000
         SPACE 3                                                        65580000
EVALSAT  EQU   *                        SCALE ATTRIBUTE                 65610000
         SPACE                                                          65640000
         USING JTMFLG,STACKPTR          BASE FOR TERM                   65670000
         GOIF  JTMLSTO,GT=SAT10         GO ON IF SCALE ATTR VALID       65700000
         GOIF  JTMOSA,EQ=SAT10          I.E., ORD SYMB OR PARAM         65730000
SAT05    L     R12,=A(LOGERR01)         ERROR ROUTINE                   65760000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          65790000
         DC    AL1(SEV123,ERR123)       ERROR PARAMETERS                65820000
         B     SAT07                    GET DEFAULT VALUE               65850000
SAT06    L     R12,=A(LOGERR01)         ERROR ROUTINE                   65856000
         BALR  R9,R12                                                   65862000
         DC    AL1(SEV80,ERR80)         UNDEFINED SYMBOL                65868000
SAT07    SR    EVEN,EVEN                SET UP DEFAULT VALUE            65874000
         B     SAT20                    GO TO ASSIGN IT NORMALLY        65880000
SAT10    EQU   *                                                        65910000
         LR    R10,STACKPTR             POINTER FOR DICTIONARY CALL     65940000
         SET   CHARMODE,ON              NO ARITHMETIC CONVERSION        65970000
         JCALL RESOLVE                  RESOLVE THE TERM                66000000
         SET   CHARMODE,OFF                                             66030000
         USING PARMTAB,R14              BASE FOR ATTRIBUTE REFERENCE    66060000
         GOIF  PTAT,JN,EQ=SAT05         LOOK FOR SELFDEFINING TERM      66066000
         GOIF  UDEFALT,ON=SAT06         REFERENCE TO UNDEFINED SYMBOL   66072000
         GOIF  SDEFALT,ON=SAT05         GOIF DEFAULTED VALUE            66078000
SAT15    EQU   *                                                        66084000
         XC    JFWORD1,JFWORD1          CLEAR                           66090000
         MVC   JFWORD1+D2(D2),PSAT      ALIGN                           66110000
         L     EVEN,JFWORD1             PICK UP                         66130000
         USING STACK,STACKPTR           BASE FOR NEW STACK ENTRY        66150000
SAT20    EQU   *                                                        66180000
         ST    EVEN,STACKVAL            AND STORE.                      66210000
         MVI   STACKFLG,JTMSDT          MAKE A SELF DEFINING TERM       66240000
         B     EVAL10                   BACK TO MAINLINE EVAL           66270000
         DROP  STACKPTR,R14                                             66300000
         SPACE 3                                                        66330000
EVALLAT  EQU   *                        LENGTH ATTRIBUTE                66360000
         SPACE                                                          66390000
         USING JTMFLG,STACKPTR          BASE FOR TERM                   66420000
         GOIF  JTMLSTO,GT=LAT10         GO ON IF LENGTH ATTR VALID      66450000
         GOIF  JTMOSA,EQ=LAT10          OR IF DIRECT ORD SYMB REFER     66480000
LAT05    L     R12,=A(LOGERR01)         ERROR ROUTINE                   66510000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          66540000
         DC    AL1(SEV120,ERR120)       ERROR PARAMETERS                66570000
         B     LAT07                    GET DEFAULT VALUE               66600000
LAT06    L     R12,=A(LOGERR01)         ERROR ROUTINE                   66606000
         BALR  R9,R12                                                   66612000
         DC    AL1(SEV80,ERR80)         UNDEFINED SYMBOL                66618000
LAT07    L     EVEN,=F'1'               SET UP DEFAULT VALUE            66624000
         B     LAT20                    GO TO ASSIGN IT NORMALLY        66630000
LAT10    EQU   *                                                        66660000
         LR    R10,STACKPTR             POINTER FOR RESOLVE CALL        66690000
         SET   CHARMODE,ON              NO ARITHMETIC CONVERSION        66720000
         JCALL RESOLVE                  RESOLVE THE TERM                66750000
         SET   CHARMODE,OFF                                             66780000
         USING PARMTAB,R14              BASE FOR REFERENCED ITEM        66810000
         GOIF  PTAT,JN,EQ=LAT05         CHECK IF SELFDEFINED TERM       66840000
         GOIF  UDEFALT,ON=LAT06         CHECK IF UNDEFINED SYMBOL       66850000
         GOIF  LDEFALT,ON=LAT05         CHECK IF DEFAULTED VALUE        66860000
         XC    JFWORD1,JFWORD1          CLEAR                           66870000
         MVC   JFWORD1+D2(D2),PLAT      ALIGN                           66880000
         L     EVEN,JFWORD1             PICK UP                         66890000
         USING STACK,STACKPTR           BASE FOR NEW STACK ENTRY        66900000
LAT20    EQU   *                                                        66930000
         ST    EVEN,STACKVAL            AND STORE.                      66960000
         MVI   STACKFLG,JTMSDT          MAKE INTO SELF DEFINING TERM    66990000
         B     EVAL10                   RETURN TO EVAL MAINLINE         67020000
         DROP  R14,STACKPTR                                             67050000
         SPACE 3                                                        67080000
EVALIAT  EQU   *                        INTEGER ATTRIBUTE               67110000
         SPACE                                                          67140000
         USING JTMFLG,STACKPTR          BASE FOR TERM                   67170000
         GOIF  JTMLSTO,GT=IAT10         GO ON IF INTEGER ATTR VALID     67230000
         GOIF  JTMOSA,NE=IAT15          I.E., ORD SYMB OR PARAM         67300000
IAT10    EQU   *                                                        67410000
         DROP  STACKPTR                                                 67440000
         LR    R10,STACKPTR             POINTER FOR RESOLVE             67470000
         SET   CHARMODE,ON              NO ARITHMETIC CONVERSION        67500000
         JCALL RESOLVE                  RESOLVE THE TERM                67530000
         SET   CHARMODE,OFF                                             67560000
         USING PARMTAB,R14              BASE FOR REFERENCED ITEM        67590000
         GOIF  PTAT,JN,EQ=IAT15         CHECK IF SELFDEFINED TERM       67620000
         GOIF  UDEFALT,ON=IAT16         CHECK IF UNDEFINED SYMBOL       67630000
         GOIF  LDEFALT,ON=IAT17         CHECK IF LENGTH DEFAULTED       67640000
         XC    JFWORD1,JFWORD1          CLEAR                           67650000
         MVC   JFWORD1+D2(D2),PLAT      ALIGN                           67660000
         L     EVEN,JFWORD1             PICK UP                         67670000
IAT12    GOIF  SDEFALT,ON=IAT18         CHECK IF SCALE DEFAULTED        67680000
         XC    JFWORD1,JFWORD1          CLEAR                           67690000
         MVC   JFWORD1+D2(D2),PSAT      ALIGN                           67700000
         L     ODD,JFWORD1              PICK UP                         67710000
IAT13    LA    RCOMP1,PTAT              POINT TO TYPE ATTRIBUTE         67720000
         USING PTAT,RCOMP1              BASE FOR TYPE ATTRIBUTE         67770000
         GOIF  PTAT,JD,EQ=FLPIN         D IS FLOATING POINT             67800000
         GOIF  PTAT,JE,EQ=FLPIN         E IS TOO                        67830000
         GOIF  PTAT,JL,EQ=FLPIN         L IS ALSO                       67860000
         GOIF  PTAT,JK,EQ=FLPIN         K IS FLOATING PT, EXPLICIT LEN  67890000
         GOIF  PTAT,JP,EQ=PDECIN        P IS PACKED DECIMAL             67920000
         GOIF  PTAT,JZ,EQ=ZDECIN        Z IS ZONED DECIMAL              67950000
         GOIF  PTAT,JG,EQ=FXPIN         G IS FIXED PT, EXPLICIT LENGTH  67980000
         GOIF  PTAT,JF,EQ=FXPIN         F IS FIXED POINT                68010000
         GOIF  PTAT,JH,EQ=FXPIN         H LIKEWISE                      68030000
IAT15    L     R12,=A(LOGERR01)         ERROR ROUTINE                   68050000
         BALR  R9,R12                                                   68055000
         DC    AL1(SEV124,ERR124)                                       68060000
         SR    EVEN,EVEN                DEFAULT VALUE                   68065000
         B     IAT20                    GO TO BUILD RESULTANT TERM      68070000
IAT16    L     R12,=A(LOGERR01)         ERROR ROUTINE                   68071000
         BALR  R9,R12                                                   68072000
         DC    AL1(SEV80,ERR80)         UNDEFINED SYMBOL                68073000
         SR    EVEN,EVEN                SET UP DEFAULT VALUE            68074000
         B     IAT20                    STORE VALUE                     68075000
IAT17    L     R12,=A(LOGERR01)         ERROR ROUTINE                   68076000
         BALR  R9,R12                                                   68077000
         DC    AL1(SEV120,ERR120)                                       68078000
         L     EVEN,=F'1'               DEFAULT VALUE                   68079000
         B     IAT12                    GET SCALE ATTRIBUTE             68080000
IAT18    L     R12,=A(LOGERR01)         ERROR ROUTINE                   68081000
         BALR  R9,R12                                                   68082000
         DC    AL1(SEV123,ERR123)                                       68083000
         SR    ODD,ODD                  DEFAULT SCALE ATTRIBUTE         68084000
         B     IAT13                    CALCULATE INTEGER ATTRIBUTE     68085000
         SPACE                                                          68100000
*INTEGER ATTRIBUTE IS COMPUTED AS FOLLOWS--                             68130000
*        FIXED POINT     I'=(L'*8)-1-S'                                 68160000
*        FLOATING POINT  I'=(L'-1)*2-S'      SHORT                      68190000
*                        I'=(L'-2)*2-S'      LONG                       68220000
*        PACKED DECIMAL  I'=(L'-2)-1-S'                                 68250000
*        ZONED DECIMAL   I'=L'-S'                                       68280000
         SPACE                                                          68310000
FXPIN    EQU   *                        FIXED POINT ENTRY               68340000
         SLL   EVEN,TIMES8              L' * 8                          68370000
         BCTR  EVEN,D0                  MINUS ONE                       68400000
         B     ZDECIN                   FIXED POINT CONTINUE            68430000
FLPIN    EQU   *                        FLOATING POINT ENTRY            68460000
         BCTR  EVEN,D0                  LENGTH ATTR MINUS ONE           68490000
         CH    EVEN,=H'7'               IF LENGTH IS M OR LESS,         68520000
         BNH   FLP2                     SKIP AROUND.                    68550000
         BCTR  EVEN,D0                  ELSE, MINUS ONE AGAIN           68580000
FLP2     AR    EVEN,EVEN                TIMES 2                         68610000
         B     ZDECIN                   FLOATING POINT CONTINUE         68640000
PDECIN   EQU   *                        PACKED DECIMAL ENTRY            68670000
         AR    EVEN,EVEN                L' * 2                          68700000
         BCTR  EVEN,D0                  MINUS ONE                       68730000
ZDECIN   EQU   *                        ZONED DECIMAL ENTRY             68760000
         SR    EVEN,ODD                 - S'                            68790000
         USING STACK,STACKPTR           STACK BASE                      68820000
IAT20    EQU   *                                                        68850000
         ST    EVEN,STACKVAL            STORE THE RESULT                68880000
         MVI   STACK,JTMSDT             AND MAKE IT A SELF DEFINING    X68910000
                                          TERM.                         68940000
         B     EVAL10                   BACK TO EVAL MAINLINE.          68970000
         DROP  STACKPTR,R14                                             69000000
         DROP  RCOMP1                                                   69030000
         SPACE 3                                                        69060000
EVALKAT  EQU   *                        COUNT ATTRIBUTE                 69090000
         SPACE                                                          69120000
         USING JTMFLG,STACKPTR          BASE FOR TERM                   69150000
         GOIF  JTMOSA,LT=KATT50         SET VARIABLE                    69180000
         GOIF  JTMLSTO,GT=KATT30        GO ON IF COUNT ATTR VALID       69210000
         L     R12,=A(LOGERR01)         GET PTR TO ERROR LOGGING RTN    69240000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          69270000
         DC    AL1(SEV121,ERR121)       ERROR PARAMETERS                69300000
         SR    EVEN,EVEN                SET UP DEFAULT VALUE            69330000
         B     KATT90                   GO TO ASSIGN IT NORMALLY        69360000
         SPACE                                                          69390000
KATT30   EQU   *                        PARAMETER COUNT ATTRIBUTE       69420000
         LR    R10,STACKPTR             TERM POINTER PASSED             69450000
         SET   CHARMODE,ON              NO ARITHMETIC CONVERSION        69480000
         JCALL RESOLVE                  AND RESOLVE THE TERM.           69510000
         SET   CHARMODE,OFF                                             69540000
         USING PARMTAB,R14                                              69570000
         GOIF  PSUB,ON=KATT34           SUBLIST REFERENCE               69600000
         SR    EVEN,EVEN                CLEAR A REGISTER                69630000
         IC    EVEN,PKAT                AND PICK UP K ATTRIBUTE         69660000
         USING STACK,STACKPTR           BASE FOR NEW STACK ENTRY        69690000
KATT90   ST    EVEN,STACKVAL            STORE IN THE STACK              69720000
         MVI   STACKFLG,JTMSDT            AND MAKE IT AN SDT.           69750000
         B     EVAL10                   RETURN                          69780000
         SPACE                                                          69810000
KATT34   MVC   JHWORD1,PKATSUB          ALIGN SUBOPERAND K ATTRIBUTE    69840000
KATT35   LH    EVEN,JHWORD1             PICK UP VALUE                   69870000
         MVC   JHWORD1,PNAT             ALIGN AND                       69900000
         AH    EVEN,JHWORD1             ADD N ATTRIBUTE                 69930000
         LA    EVEN,D1(EVEN)            ADD 1--ACCOUNTS FOR COMMAS AND X69960000
                                          PARENS ADDED ON OUTPUT.       69990000
         B     KATT90                     AND CONTINUE                  70020000
         SPACE                                                          70050000
KATT50   EQU   *                        SET VARIABLE K ATTRIBUTE        70080000
         LR    R10,STACKPTR             TERM POINTER                    70110000
         SET   CHARMODE,ON                WE WANT CHARACTERS BACK       70140000
         JCALL RESOLVE                  RESOLVE THE TERM TO A STRING    70170000
         SET   CHARMODE,OFF             (SWITCH BACK OFF)               70200000
         USING JTMLNG,R11               BASE FOR STRING                 70230000
         SR    EVEN,EVEN                CLEAR A REGISTER                70260000
         IC    EVEN,JTMLNG              PICK UP LENGTH AS K ATTRIBUTE   70290000
         DROP  R11                                                      70320000
         B     KATT90                   CONTINUE                        70350000
         DROP  R14,STACKPTR                                             70380000
         SPACE 3                                                        70410000
EVALNAT  EQU   *                        NUMBER ATTRIBUTE                70440000
         SPACE                                                          70470000
         USING JTMFLG,STACKPTR          BASE FOR TERM                   70500000
         GOIF  JTMLSTO,EQ=NAT40,        BRANCH IF SYSLIST REFERENCE    X70530000
               GT=NAT10                 BRANCH IF PARAMETER REFER       70560000
         L     R12,=A(LOGERR01)         GET PTR TO ERROR LOGGING RTN    70590000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          70620000
         DC    AL1(SEV122,ERR122)       ERROR PARAMETERS                70650000
         SR    EVEN,EVEN                SET UP DEFAULT VALUE            70680000
         B     KATT90                   GO TO ASSIGN IT NORMALLY        70710000
NAT10    LR    R10,STACKPTR             TERM POINTER                    70740000
         SET   CHARMODE,ON              NO ARITHMETIC CONVERSION        70770000
         JCALL RESOLVE                  RESOLVE THE TERM                70800000
         SET   CHARMODE,OFF                                             70830000
         USING PARMTAB,R14              BASE FOR PARAMETER              70860000
         GOIF  PSUB,ON=NAT20            SUBLIST, SKIP AHEAD             70890000
         GOIF  POMIT,ON=NAT50           CHECK FOR OMITTED OPERAND       70920000
         LA    EVEN,D1                  ELSE N ATTRIBUTE IS 1           70950000
         B     KATT90                   EVIT                            70980000
NAT20    MVC   JHWORD1,PNAT             ALIGN                           71010000
         LH    EVEN,JHWORD1             PICK UP VALUE                   71040000
         SET   SUBLIST,OFF              CLEAR SUBLIST SWITCH   @OX09721 71050005
         B     KATT90                   AND EXIT                        71070000
         SPACE                                                          71100000
NAT40    EQU   *                        SYSLIST                         71130000
         TM    JTMLSTM,BIT0             LOOK FOR DEAD TERM              71160000
         BO    NAT50                    GIVE DEFAULT IF FOUND           71190000
         SPACE                                                          71220000
         LH    EVEN,NOFSYSLS            ELSE LOAD N'SYSLIST             71280000
         B     KATT90                   AND EXIT.                       71310000
NAT50    SR    EVEN,EVEN                SET N ATTRIBUTE TO ZERO         71340000
         B     KATT90                   AND EXIT                        71370000
         DROP  STACKPTR,R14                                             71400000
         EJECT                                                          71940000
*TITLE                                                                * 71970000
*   GENSTRING/GENERATE A CHARACTER STRING                             * 72000000
         SPACE                                                          72030000
*NOTES-                                                               * 72060000
*   REGISTERS--                                                       * 72090000
*                                                                     * 72120000
*   ENTRY--                                                           * 72150000
*                                                                     * 72180000
*   VTXTOUT    LENGTH FIELD OF CURRENT STRING                         * 72210000
*   VTXTIN     META TEXT                                              * 72240000
*                                                                     * 72270000
*   EXIT--                                                            * 72300000
*                                                                     * 72330000
*   R10        NEXT AVAILABLE OUTPUT POSITION                         * 72360000
*   R11        NEXT META FLAG                                         * 72390000
*        STACKPTR   CURRENT EVALUATION STACK ENTRY                      72420000
         SPACE                                                          72450000
GENSTRNG EQU   *                                                        72480000
GENSTR00 STM   R2,R9,GENSTRST           SAVE CALLERS REGISTERS          72490000
         LR    R8,R12                   ESTABLISH BASE FOR RTN          72500000
         USING GENSTR00,R8                                              72510000
         SPACE                                                          72540000
         USING JTOPL,VTXTOUT            DUMMY OUTPUT BASE               72570000
         ST    VTXTOUT,GENPTR           SAVE POINTER TO LENGTH          72600000
         SR    FLDLN,FLDLN              CLEAR A REGISTER                72630000
         IC    FLDLN,JTOPL              PICK UP CURRENT STRING LENGTH   72660000
         LA    VTXTOUT,JTOPND(FLDLN)      AND STEP TO END OF STRING.    72690000
         ST    VTXTOUT,NEWSTRNG         SAVE THIS STRING START          72720000
         STH   FLDLN,STRNGLN            AND PREVIOUS LENGTH             72750000
         USING JTOPND,VTXTOUT           RESET BASE                      72780000
         SET   CHARMODE,ON              WE WANT CHARACTERS BACK         72810000
         SET   ERR105SW,OFF             CLEAR ERROR LOGGED SWITCH       72840000
         SET   SUBLIST,OFF              CLEAR SUBLIST SWITCH            72870000
         SPACE                                                          72900000
GENSTR10 EQU   *                        ITERATION POINT                 72930000
         SPACE                                                          72960000
         USING JTMOP,VTXTIN             VTXTIN POINTS TO META OPERATOR  72990000
         GOIF  SUBLIST,ON=GENSTR32      IF SUBLIST SWITCH IS ON, MUST  X73020000
                                          MOVE ENTIRE SUBLIST.  REENTERX73050000
                                          AT GENSTR14 AFTER PREPARATION 73080000
         GOIF  JTMSTRM,EQ=GENSTR90      EXIT IF STATEMENT TERMINATOR    73110000
         GOIF  JTMECM,EQ=GENSTR80         OR END CHARACTER MODE.        73140000
         SPACE                                                          73170000
         GOIF  JTMCS,NE=GENSTR12        NOT CHARACTER STRING, SKIP      73200000
         SR    RMOVE,RMOVE              HAS GARBAGE ON RECURSION        73230000
         IC    RMOVE,JTMLNG               BEFORE PROCEEDING,            73260000
         LA    R11,JTMLNG               POINT R11 TO L FIELD OF STRING  73290000
         LA    VTXTIN,JTMSTRNG(RMOVE)   AND UPDATE THE META TEXT PTR    73320000
         B     GENSTR16                 SKIP AHEAD                      73350000
         SPACE                                                          73380000
GENSTR12 EQU   *                        PREPARE TO RESOLVE TERM         73410000
         SPACE                                                          73440000
         GOIF  JTMLSTO,EQ=GENSTR15      SYSLIST, GO GET DIMENSION       73470000
         GOIF  JTMD,FZERO,EQ=GENSTR13   NO DIMENSION, PROCEED           73500000
GENSTR15 SET   JTMCSW,ON                ELSE SET TEMPORARY CHARACTER   X73590000
                                          FLAG.                         73620000
         SET   CHARMODE,OFF             NO LONGER IN CHARACTER MODE     73650000
         ST    FLDLN,RESRTRN            SAVE STRING LENGTH COUNTER      73680000
         L     STACKPTR,STACKLVL        PICK UP CURRENT STACK POINTER   73710000
         L     R8,=A(EVAL)              BASE FOR EVAL ROUTINE           73740000
         USING EVAL,R8                    DECLARED--                    73770000
         B     EVAL80                   GO EVALUATE DIMENSION           73800000
         USING GENSTRNG,R8              RE-DECLARE ROUTINE BASE         73830000
         SPACE                                                          73860000
GENSTR13 EQU   *                                                        73890000
         SPACE                                                          73920000
         LR    R10,VTXTIN               R10 WANTS TERM POINTER          73950000
         LA    VTXTIN,JTMNEXT             AND VTXTIN NEEDS UPDATE       73980000
         JCALL RESOLVE                  RESOLVE PRODUCES A STRING       74010000
         DROP  VTXTIN                                                   74040000
         USING JTMLNG,R11               BASE                            74070000
GENSTR1X EQU   *                                                        74080000
         GOIF  SUBLIST,ON=GENSTR30      SUBLIST SWITCH ON, BRANCH       74100000
GENSTR14 SR    RMOVE,RMOVE              CLEAR A REGISTER                74130000
         IC    RMOVE,JTMLNG             PICK UP STRING LENGTH           74160000
GENSTR16 EQU   *                                                        74190000
         GOIF  (RMOVE),ZERO=GENSTR10    NULL STRING IF L=0              74220000
         DROP  R11                                                      74250000
         AR    FLDLN,RMOVE              INCREMENT LENGTH COUNTER        74280000
         GOIF  (FLDLN),HMAXCHAR,GT=LOGER105  GENERATED STRING TOO LONG  74310000
GENSTR18 EQU   *                                                        74340000
         BCTR  RMOVE,D0                 DECREMENT TO MOVE LENGTH        74370000
         EX    RMOVE,GENMOVE            EXECUTED MOVE                   74400000
         LA    VTXTOUT,D1(RMOVE,VTXTOUT)     INCREMENT OUTPUT POINTER  X74430000
                                               TO END OF STRING         74460000
         B     GENSTR10                 ITERATE                         74490000
         SPACE                                                          74520000
         USING JTMLNG,R11                                               74550000
GENMOVE  MVC   JTOPND,JTMSTRNG          REMOTE MOVE CHARACTER STRING TOX74580000
                                          OUTPUT.                       74610000
         DROP  R11,VTXTOUT                                              74640000
GENSTR80 EQU   *                        END CHARACTER MODE              74670000
GENSTR90 EQU   *                        END OF STATEMENT                74700000
         SPACE                                                          74730000
         L     INDEX1,GENPTR            PICK UP LENGTH POINTER          74760000
         USING JTMLNG,INDEX1              AND USE AS BASE               74790000
         STC   FLDLN,JTMLNG             STORE FIELD LENGTH              74820000
         DROP  INDEX1                                                   74850000
         LR    R10,VTXTOUT              SAVE THE OUTPUT POINTER         74880000
         SET   CHARMODE,OFF             INACTIVATE CHARACTER MODE SW    74910000
         USING JTMFLG,VTXTIN            BASE FOR INPUT                  74940000
         LA    R11,JTMPTR               BUMP TO NEXT POTENTIAL FLAG     74970000
         DROP  VTXTIN                                                   75000000
GENSTR99 LM    R2,R9,GENSTRST           RESTORE CALLERS REGISTERS       75020000
         BR    R9                       RETURN TO CALLER                75040000
         SPACE                                                          75060000
GENSTR30 EQU   *                        STRING IS ENTIRE SUBLIST        75090000
         SPACE                                                          75120000
         LR    R10,R14                  COMPUTE SUBLIST                 75150000
         A     R10,JFWORD1              VECTOR POINTER.                 75180000
         LA    FLDLN,D1(,FLDLN)         INCREMENT STRING COUNT          75210000
         GOIF  (FLDLN),HMAXCHAR,GT=LOG105X   GENERATED STRING TOO LONG  75240000
         USING JTOPND,VTXTOUT           BASE FOR OUTPUT                 75270000
         MVI   JTOPND,JLPARN            OUTPUT A LEFT PAREN             75300000
         DROP  VTXTOUT                                                  75330000
         LA    VTXTOUT,D1(VTXTOUT)      UPDATE THE OUTPUT POINTER       75360000
         B     GENSTR35                 AND SKIP AHEAD                  75390000
         SPACE                                                          75420000
GENSTR32 LH    R15,JHWORD1              DECREMENT                       75450000
         GOIF  (R15),ZERO=GENSTR33      EXIT ON SUBOPERANDS EXHAUSTED   75460000
         BCT   R15,GENSTR34               PARAMETER COUNT AND CONTINUE. 75480000
         STH   R15,JHWORD1              PRESERVE SUBOPERAND COUNT (0)   75490000
         LA    FLDLN,D1(,FLDLN)         BUMP OUTPUT COUNT               75510000
         GOIF  (FLDLN),HMAXCHAR,GT=LOG105X GENERATED STRING TOO LONG    75540000
         USING JTOPND,VTXTOUT                                           75570000
         MVI   JTOPND,JRPARN            OUTPUT TERMINATING RIGHT PAREN  75600000
         DROP  VTXTOUT                                                  75630000
         LA    VTXTOUT,D1(,VTXTOUT)     UPDATE THE OUTPUT PTR           75660000
GENSTR33 EQU   *                                                        75670000
         SET   SUBLIST,OFF              TURN OFF THE SUBLIST FLAG AND   75690000
         B     GENSTR10                 GO BACK FOR MORE STRINGING      75720000
         SPACE                                                          75750000
GENSTR34 STH   R15,JHWORD1              ELSE SAVE THE COUNT.            75780000
         LA    FLDLN,D1(FLDLN)          BUMPT OUTPUT COUNT.             75810000
         GOIF  (FLDLN),HMAXCHAR,GT=LOG105X   GENERATED STRING TOO LONG  75840000
         USING JTOPND,VTXTOUT           BASE FOR OUTPUT TEXT            75870000
         MVI   JTOPND,JCOMMA            MOVE COMMA TO TEXT              75900000
         DROP  VTXTOUT                                                  75930000
         LA    VTXTOUT,D1(VTXTOUT)        AND UPDATE OUTPUT POINTER.    75960000
GENSTR35 SH    R10,=H'3'                BACK UP TO NEXT SUBLIST VECTOR  75990000
         MVC   JFWORD1+D1(D3),D0(R10)   ALIGN THE VECTOR                76020000
         L     R11,JFWORD1              PICK UP THE VECTOR              76050000
         USING PFLAG,R14                BASE FOR SUBOPERAND FETCH       76080000
         LA    R11,PKAT(R11)            POINT TO SUBOPERAND.            76110000
         B     GENSTR14                 AND CONCATENATE IT TO STRING    76140000
         SPACE                                                          76170000
LOG105X  LA    RMOVE,D1                 SET UP COUNT ON OVERFLO CHAR    76200000
LOGER105 GOIF  ERR105SW,ON=GENSTR50     BYPASS IF ERROR ALREADY LOGGED  76230000
         L     R12,=A(LOGERR01)         GET PTR TO ERROR LOGGING RTN    76260000
         BALR  R9,R12                   MAKE ERROR STACK ENTRY          76290000
         DC    AL1(SEV105,ERR105)       ERROR PARAMETERS                76320000
         SET   ERR105SW,ON              INDICATE ERROR LOGGED ONCE      76350000
GENSTR50 EQU   *                                                        76380000
         SR    FLDLN,RMOVE              GET BASE STRING LENGTH          76410000
         LH    RMOVE,HMAXCHAR           SET UP MAXIMUM STRING LENGTH    76440000
         SR    RMOVE,FLDLN              COMPUTE ALLOWABLE INCREMENT     76470000
         LTR   RMOVE,RMOVE              SEE IF INCREMENT ZERO           76500000
         BZ    GENSTR10                 IF SO, DON'T BOTHER, ELSE       76530000
         AR    FLDLN,RMOVE              ADJUST LENGTH FOR FRAGMENT      76560000
         B     GENSTR18                 GO BACK TO ADD MAXIMUM POSSIB   76590000
         EJECT                                                          76620000
ZONEMASK DC    X'00',15X'0F'            MASK TO DROP LEADING ZEROS OR  X76650000
                                          MASK OUT ZONES AFTER UNPACK   76680000
HMAXCHAR DC    Y(MAXCHAR)               MAXIMUM STRING LENGTH           76710000
FZERO    DC    F'0'                     ZEROS FOR COMPARES              76740000
         SPACE 3                                                        76770000
         SPACE 3                                                        76830000
         JPATCH  X3A03,B4A              PATCH AREA                      76860000
         END   MENTRY                                                   76890000
