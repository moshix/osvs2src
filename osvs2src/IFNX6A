         JHEAD 'POST PROCESSOR PHASE',                                 *00070000
               PHASEID=X6A,                                            *00140000
               LEVEL=10                                                 00210000
*FUNCTION/OPERATION-                                                  * 00280000
*   THE POST PROCESSOR PHASE SORTS, FORMATS, AND WRITES ON PUNCH/LINK * 00350000
*   FILE(S) THE RELOCATION DICTIONARY (RLD) TO THE DESIRED FORMAT     * 00420000
*   REQUIRED BY THE LINKAGE EDITOR.  THE PHASE ALSO SORTS, FORMATS,   * 00490000
*   AND WRITES OUT ON PRINT FILE THE SYMBOL CROSS REFERENCE, AND THE  * 00560000
*   LITERAL CROSS REFERENCE.                                          * 00630000
*                                                                     * 00700000
*ENTRY POINT-                                                         * 00770000
*        PPENT                                                        * 00840000
*                                                                     * 00910000
*INPUT-                                                               * 00980000
*   INPUT FROM 'JINFILE'.                                             * 01050000
*   RLD RECORDS FORMAT --                                             * 01120000
*   FIELD             BYTES                                           * 01190000
*   RECORD LENGTH     2                                               * 01260000
*   (NOT USED)        2                                               * 01330000
*   RECORD TYPE       2                                               * 01400000
*   POSITION ESD/ID   2                                               * 01470000
*   RELOCATION ESD/ID 2                                               * 01540000
*   SYMBOL ADDRESS    3                                               * 01610000
*   FLAG              1                                               * 01680000
*   BITS                                                              * 01750000
*   0-1  00                                                           * 01820000
*   2-3  00  A-, Y-, Q-TYPE ADDRESS CONSTANT                          * 01890000
*        01  V TYPE ADDRESS CONSTANT                                  * 01960000
*        11 CXD                                                       * 02030000
*   4-5      LENGTH OF ADDRESS CONSTANT MINUS ONE                     * 02100000
*   6        EXD SIGN 0=PLUS, 1=MINUS                                 * 02170000
*   7    1   NEXT ENTRY HAS SAME POSITION AND RELOCATION ID           * 02240000
*        0   NEXT ENTRY HAS DIFFERENT POSITION AND/OR RELOCATION ID   * 02310000
*                                                                     * 02380000
*   XREF RECORDS FORMAT --                                            * 02450000
*   FIELD             BYTES                                           * 02520000
*   RECORD LENGTH       2                                             * 02590000
*   (NOT USED)        2                                               * 02660000
*   RECORD TYPE         2                                             * 02730000
*   SYMBOL              8                                             * 02800000
*   FLAGS               1                                             * 02870000
*   STATEMENT NUMBER    2                                             * 02940000
*   LENGTH              2                                             * 03010000
*   ASSEMBLED ORIGIN    4                                             * 03080000
*                                                                     * 03150000
*   RECORD FORMAT FOR LITERAL PER SE                                  * 03220000
*   FIELD              BYTES                                          * 03290000
*   RECORD LENGTH       2                                             * 03360000
*   (NOT USED)        2                                               * 03430000
*   RECORD TYPE         2                                             * 03500000
*   LITERAL             VARIABLE                                      * 03570000
*                                                                     * 03640000
*   LITERAL CROSS REFERENCE FORMATS                                   * 03710000
*   FIELD              BYTES                                          * 03780000
*   RECORD LENGTH       2                                             * 03850000
*   (NOT USED)          2                                             * 03920000
*   RECORD TYPE         2                                             * 03990000
*   LITERAL POOL ID     8                                             * 04060000
*   FLAGS               1                                             * 04130000
*   STATEMENT NUMBER    2                                             * 04200000
*   ENTRIES AFTER THIS POINT ARE FOR LITERAL XREF DEFINITION          * 04270000
*   RECORD ONLY.                                                      * 04340000
*   ASSEMBLED ORIGIN    4                                             * 04410000
*   N/P VALUE           L'JNOTEVAL                                    * 04480000
*                                                                     * 04550000
*OUTPUT-                                                              * 04620000
*   RLD RECORDS ARE PUNCHED AND/OR LINKED INTO PUNCH/LINK FILE(S).    * 04690000
*   SYMBOL/LITERAL CROSS REFERENCE RECORDS ARE WRITTEN ONTO PRINT FILE. 04760000
*                                                                     * 04830000
*   JOUTFILE AND FILE 2 ARE USED AS SORT/MERGE FILES AT SORT/MERGE TIME 04900000
*                                                                     * 04970000
*EXTERNAL ROUTINE-                                                    * 05040000
*   N/A                                                               * 05110000
*                                                                     * 05180000
*EXIT, NORMAL-                                                        * 05250000
*        JRETURN                                                      * 05320000
*                                                                     * 05390000
*EXITS, ERROR-                                                        * 05460000
*   N/A                                                               * 05530000
*TABLES/WORK AREAS-                                                   * 05600000
*   SORT AREA SIZE VARIES FROM 'MINCNT' BYTES TO 'MAXCNT' BYTES WITH  * 05670000
*   REGISTER 'SORTPTR' POINTS TO POINTERS AREA AND REGISTER 'DATAPTR' * 05740000
*   POINTS TO DATA AREA.                                              * 05810000
*   INPUT/OUTPUT BUFFERS ARE DYNAMICALLY LOCATED ABOVE THE EXECUTABLE * 05880000
*   CODE OF THIS PHASE WITH REGISTER R5 POINTS TO INPUT RECORD,       * 05950000
*   REGISTER 'LOUTNDX' POINTS TO PRINT OUTPUT RECORD, AND REGISTER    * 06020000
*   'COUTNDX' POINTS TO CARD OUTPUT RECORD.                           * 06090000
*                                                                     * 06160000
*ATTRIBUTES-                                                          * 06230000
*   REFRESHABLE                                                       * 06300000
*                                                                     * 06370000
*NOTES-                                                               * 06440000
*   N/A                                                               * 06510000
         EJECT                                                          06580000
         COPY  JCOMMON                                                  06650000
         EJECT                                                          06720000
******************* COMMON AREA FOR POST PROCESSOR ******************** 06790000
X6ACOMM  DSECT                          COMMON FOR X6A                  06860000
         USING X6ACOMM,R7                                               06930000
STRTCOM  EQU   *                        START OF X6A COMMON             07000000
PPSW     DSW   RENT,                    RE-ENTRY TO SPILL ROUTINE      X07070000
               DRDCHK,                  CHECK DUMMY READ               X07140000
               FSW,                     FIRST TIME SWTICH              P07210000
               EOFSW,                   EOF                            P07280000
               HEADOUT,                 HEADER HAS JUST BEEN PRINTED   P07350000
               PROCRLD,                 PROCESSING RLD RECORDS         P07420000
               PROCXRF,                 PROCESSING XREF RECORDS        P07490000
               PROCLIT                  PROCESSING LITERAL XREF RECORDS 07560000
PPSWI    DSW   JINREAD,                 READ(ON)/WRITE(OFF) ON JINFILE X07630000
               LASTDEF,                 LAST XREF REC A DEF REC        X07660000
               LASTREC,                 LAST REC TO OUTPUT             X07670000
               ENDSTR1,                 END OF STRING ON 1             X07680000
               ENDSTR2,                 END OF STRING ON 2             X07690005
               FIRST,                   FIRST RLD PRINT        @OY06558X07692000
               HEADPEND,                IND XREF HEADER PENDING@AZ28946X07694000
               LINKSW                   ROUTER FOR PRINT RUTINE@AZ18946 07696000
CURFLE   DS    3D                       FILE 1                          07700000
GNBLK1   EQU   CURFLE+2                 JINFILE ID                      07770000
CFL1CC   EQU   GNBLK1+2                 STRING (GP) COUNT               07840000
CFL1VV   EQU   CFL1CC+2                 ARGUMENT                        07910000
CURFLE2  EQU   CFL1VV+2                 FILE 2                          07980000
GNBLK2   EQU   CURFLE2+2                JINFILE ID                      08050000
CFL2CC   EQU   GNBLK2+2                 COUNT                           08120000
CFL2VV   EQU   CFL2CC+2                 ARGUMENT                        08190000
CURFLE3  EQU   CFL2VV+2                 FILE 3                          08260000
GNBLK3   EQU   CURFLE3+2                JINFILE ID                      08330000
CFL3CC   EQU   GNBLK3+2                 COUNT                           08400000
CFL3VV   EQU   CFL3CC+2                 ARGUMENT                        08470000
CHKFILE  DS    H                        FILE YET TO BE CHECKED          08540000
RECNUM   DS    H                        NUMBER OF RECORDS               08610000
STMTNUM  DS    F                        XREF STATEMENT NUMBER           08680000
STMTN2   EQU   STMTNUM+2                                                08750000
RTNSV2   DS    F                                                        08820000
NEXTREC  DS    F                                                        08890000
RTNSV1   DS    F                                                        08960000
MRECSV   DS    F                        MERGE RECORD ADDRESS SAVED      09030000
RTNSV    DS    F                        RTN SAVE AREA                   09100000
RFSAVE   DS    2F                       REG SAVE AREA                   09170000
R15SAVE  DS    F                        R15 SAVE AREA                   09240000
SAVEALL  DS    16F                                                      09310000
BUFFER   DC    A(0)                     1                               09380000
         DC    A(0)                     2                               09450000
BUFEND1  DC    A(0)                     3                               09520000
BUFFER2  DC    A(0)                     4                               09590000
         DC    A(0)                     5                               09660000
BUFEND2  DC    A(0)                     6                               09730000
BUFFER3  DC    A(0)                     7                               09800000
         DC    A(0)                     8                               09870000
BUFEND3  DC    A(0)                     9                               09940000
BUFFER4  DC    A(0)                     10                              10010000
         DC    A(0)                     11                              10080000
BUFEND4  DC    A(0)                     12                              10150000
BUFFER5  DC    A(0)                     13                              10220000
         DC    A(0)                     14                              10290000
BUFEND5  DC    A(0)                     15                              10360000
BUFFER6  DC    A(0)                     16                              10430000
         DC    A(0)                     17.                             10500000
BUFEND6  DC    A(0)                     18                              10570000
BUFNDX   DS    F                        CURR REC IN CURR O/P BUFFER     10640000
JINFLP   DS    F                        JINFILE IN INDEX SAVED          10710000
SORTPTR  DS    F                        SORT AREA POINTER               10780000
DATAPTR  DS    F                        DATA AREA POINTER               10850000
R1SAVE   DS    F                        R1 SAVE                         10920000
LOUTSV   DS    2F                       LOUTNDX SAVED                   10990000
XRFPSV   EQU   LOUTSV+4                 XREF REF NEXT AVAIL LOC         11060000
LNCTRSV  DS    F                        LINE COUNTER SAVED              11130000
RTADDR2  DS    F                        RTN SAVED                       11200000
PCHSAVE  DS    F                        PUNCH BUFFER POINTER            11270000
FWORD    DS    F                        WORK AREAS                      11340000
SAVSYM   DS    D                        XREF SYMBOL SAVE AREA           11410000
UNDFSYM  DS    D                        XREF UNDEFINED SYMBOL SAVE AREA 11480000
NOTESV   DS    CL(L'JNOTEVAL)           N/P SAVE AREA                   11550000
DATAAND  DS    F                                                        11620000
LLOCTRSV DS    F                        LITERAL LOCTR SAVED             11690000
SAVE2B   DS CL2                         OVERLAP BYTES SAVED             11760000
         DS    0D                                                       11830000
UNPKAREA DS    CL15                     UNPACK AREA                     11900000
         ORG   UNPKAREA                 REDEFINE                        11970000
UPPOS    DS    CL4                      POSITIONAL ID                   12040000
UPREL    DS    CL4                      RELATIONAL ID                   12110000
UPVAL    DS    CL6                      ASSEMBLED ORIGIN                12180000
UPFLG    DS    CL2                      FLAGS                           12250000
UPFLGN   EQU   UPFLG+1                                                  12320000
         ORG   UNPKAREA                 REDEFINE                        12390000
CVDCML   DS    D                        CONVERT INTO DECIMAL            12460000
UPDCML   EQU   CVDCML+5                 UNPACK 3 BYTES                  12530000
UPXRL    EQU   *-UPDCML                 LENGTH OF 3                     12600000
         ORG   UPVAL+2                  REDEFINE                        12670000
UPX      DS    CL5                      INTO 5-BYTE AREA                12740000
         ORG   UNPKAREA                 REDEFINE                        12810000
UPXVAL   DS    CL9                      XREF VALUE UNPACK AREA          12880000
         ORG                                                            12950000
RTADDR   DS    3D                       SAVE AREA                       13020000
RLDHLD   DS    0CL8                     RLD HOLD AREA                   13090000
RELHLD   DS    CL2                      RELOCATION I.D.                 13160000
POSHLD   DS    CL2                      POSITION I.D.                   13230000
FLGHLD   DS    C                        FLAG                            13300000
ADDRHLD  DS    CL3                      SYMBOL ADDRESS                  13370000
ESDCOMP  DS    0CL4                     ESDID SAVE AREA                 13440000
RELTST   DS    CL2                      RELOCATION I.D.                 13510000
POSTST   DS    CL2                      POSITION I.D.                   13580000
XLDSV    DS    CL20                     LITERAL SAVE AREA               13650000
UPXSV    DS    CL5                      UNDEF SYM STMT NUMBER SAVED     13720000
RECSAVE  DS    CL(121)                  SAVE AREA FOR XREF REC @AZ28946 13750000
         EJECT                                                          13790000
*************************************** EQUATE TABLE ****************** 13860000
LBASE    EQU   2                        LOWER DATA ITEM REGISTER        13930000
SINDEX   EQU   2                        SORT AREA INDEX REG             14000000
COUTNDX  EQU   5                        CARD OUTPUT POINTER             14070000
XRFPTR   EQU   3                        XREF REF ENTRY POINT            14140000
HBASE    EQU   3                        UPPER DATA ITEM REGISTER        14210000
DINDEX   EQU   3                        DATA AREA INDEX REG             14280000
LOUTNDX  EQU   2                        LIST OUTPUT POINTER             14350000
RECCTR   EQU   4                        RECORD COUNTER                  14420000
SRTNTRY  EQU   4                        SORT AREA ENTRY LENGTH          14490000
LINCTR   EQU   RECCTR                   LINE COUNTER                    14560000
RLREG    EQU   5                        RECORD LENGTH REGISTER          14630000
RTN      EQU   6                        RETURN LINKAGE                  14700000
PARM1    EQU   10                       PARAMETER REG 1                 14770000
PARM2    EQU   11                       PARAMETER REG 2                 14840000
LINK     EQU   12                       LINKAGE                         14910000
RLDCNT   EQU   14                       RLD BYTE COUNT                  14980000
HPOINT   EQU   14                       ADDRESS OF UPPER DATA ITEM      15050000
LPOINT   EQU   15                       ADDRESS OF LOWER DATA ITEM      15120000
SAMEID   EQU   1                        XREF DEFINITION ID              15190000
MINCNT   EQU   127                      MINIMUM CORE IN DOUBLE WORDS    15260000
MAXCNT   EQU   4095                     MAXIMUM CORE IN DOUBLE WORDS    15330000
MASKLEN  EQU   4                        MASK LENGTH FOR PAGE COUNT      15400000
XBLANK   EQU   X'40'                    EXTERNAL BLANK                  15470000
JTEOF    EQU   X'FF'                    INTERNAL EOF OP CODE            15610000
JPSOP    EQU   X'80'                                                    15680000
MRGFLE1  EQU   JOUTFILE                 MERGE FILE 1                    15750000
MRGFLE2  EQU   FILE2                    MERGE FILE 2                    15820000
ENDCOMM  DS    0D                       END OF X6A COMMON               15890000
         EJECT                                                          15960000
*************************************** OUTPUT RECORD FORMATS ********* 16030000
RPRINT   DSECT                          RLD PRINT RECORD FORMAT         16100000
         USING RPRINT,LOUTNDX                                           16170000
RCNTRL   DS    C                        RLD PRINT CONTROL BYTE          16240000
         DS    CL1                                                      16310000
POSOUT   DS    CL4                      POSITION ESD/ID                 16380000
         DS    CL5                                                      16450000
RELOUT   DS    CL4                      RELOCATION ESD/ID               16520000
         DS    CL6                                                      16590000
FLGOUT   DS    CL2                      RLD FLAG                        16660000
         DS    CL5                                                      16730000
VALOUT   DS    CL6                      RLD SYMBOL ADDRESS              16800000
         DS    CL87                                                     16870000
         SPACE                                                          16940000
         ORG   RCNTRL                   XREF PRINT RECORD FORMAT        17010000
XCNTRL   DS    C                        XREF PRINT CONTROL BYTE         17080000
XSYMOUT  DS    CL8                      XREF SYMBOL                     17150000
         DS    C                                                        17220000
XLENOUT  DS    CL5                      LENGTH OF XREF                  17290000
         DS    C                                                        17360000
XVALOUT  DS    CL8                      VALUE OF XREF                   17430000
         DS    C                                                        17500000
XDEFOUT  DS    CL5                      ADDRESS WHERE XREF DEFINED      17570000
LITDL    EQU   *-XLENOUT                                                17640000
XDE      DS    CL2                                                      17710000
XDEFLN   EQU   *-XCNTRL                                                 17780000
XRFREF   DS    CL89                     REFERENCES TO SYMBOL            17850000
XPRTND   EQU   *                                                        17920000
         ORG   XRFREF                                                   17990000
XRFENT   DS    CL5                      XREF REFERENCE ENTRY            18060000
         DS    C                        SEPARATOR                       18130000
XRENTL   EQU   *-XRFENT                                                 18200000
         SPACE                                                          18270000
         ORG   XCNTRL                   LIT XREF DEF PRINT RECORD FMT   18340000
LCNTRL   DS    C                        LIT XREF CONTROL CHAR           18410000
LITSYM   EQU   *                        LITERAL XREF DEFINITION         18480000
LITSYM5  EQU   LITSYM+5                                                 18550000
         ORG                                                            18620000
XRL      EQU   *-XCNTRL                                                 18690000
         SPACE                                                          18760000
         ORG   RCNTRL                   LISTING HEADER FORMATS          18830000
CONTROL  DBV   ,                        LIST CONTROL CHARACTER VALUES  X18900000
               EJBYTE(0),               EJECT                          X18970000
               SPACE1(EJBYTE+1),        SINGLE SPACE                   X19040000
               SPACE2(SPACE1+1),        DOUBLE SPACE                   X19110000
               SPACE3(SPACE2+1)         TRIPPLE SPACE                   19180000
TITLE    DS    CL4                      TITLE                           19250000
         DS    CL38                     BLANKS                          19320000
LHDPTR   DS    CL8                      LIT XREF HEADING PTR            19390000
HDGPTR   DS    CL21                     RLD OR XREF PAGE IDENTIFIER     19460000
         DS    CL25                                                     19530000
DTEPTR   DS    CL15                     DATE                            19600000
PGEPTR   DS    CL4                      PAGE                            19670000
PGENUM   DS    CL5                      PAGE NUMBER                     19740000
         SPACE 3                                                        19810000
***************                                                         19880000
RCARD    DSECT                          RLD PUNCH RECORD FORMAT         19950000
         USING RCARD,COUTNDX                                            20020000
CARDID   DS    C                        RLD CARD LAYOUT                 20090000
RLDNAM   DS    CL3                      RLD NAME                        20160000
         DS    CL6                                                      20230000
RLDBYT   DS    CL2                      NUMBER OF BYTES IN DATA FIELD   20300000
         DS    CL4                                                      20370000
RLDFLD   DS    CL56                     RLD DATA FIELD (VARIABLE)       20440000
DECKID   DS    CL4                      ID AND                          20510000
SEQNUM   DS    CL4                      SEQUENCE FIELD                  20580000
RCARDL   EQU   *-CARDID                                                 20650000
         SPACE 3                                                        20720000
*************************************** INPUT RECORD FORMATS ********** 20790000
         COPY  RXLFMTS                                                  20860000
         EJECT                                                          20930000
************************************************************            21000000
*   ENTRY TO POST PROCESSOR                                             21070000
************************************************************            21140000
         JCSECT (X6A00)                                                 21210000
* VS1 RELEASE 2.6 CHANGES                                               21260031
*C381500-382000                                                 OX00413 21262005
*C280000                                                        OX00106 21264005
*A284700-284800                                                 OX00106 21266005
*A722064                                                        OX02645 21268005
*C722060                                                        OX02645 21268405
*C381500                                                        OX02955 21270805
*D382000                                                        OX02955 21271205
*D684400                                                       @OY06121 21271605
*A803400,803500                                                @OY07206 21272005
*A076920,789000,789300                                         @OY06558 21272105
*C789400                                                       @OY06558 21272205
*A613520-613540                                                @OY08038 21272605
*C975800                                                       @OY10363 21272705
*C284700                                                       @OY08064 21272805
*C722350                                                       @AX14198 21274800
*A613504-613516                                                @AX14816 21274900
*A613536-613599,613820-613849                                  @AZ11958 21275000
*D613520,613540                                                @AZ11958 21275100
*A076930,713000-713270,714800-715200,137300,751900             @AZ28946 21277100
*A750500-751030,613509-613516,076950,615850-615880             @AZ28946 21277800
*C613508                                                       @AZ28946 21278500
         JMODID                                                         21280000
PPENT    JSAVE                                                          21350000
         JENTRY (X6A01=PPENT)                                           21420000
         EJECT                                                          21490000
************************************************************            21560000
*   PHASE INITIALIZATION                                                21630000
************************************************************            21700000
         GOIF  (JRLDCHK,JXREFCHK),OFF=RETURN  RETURN TO CONTROLLER      21770000
         LA    R10,(ENDCOMM-STRTCOM+7)/8  SIZE OF X6ACOMM               21840000
         JGETCORE DBL=(R10)             GET CORE FOR COMMON AREA        21910000
         LR    R7,R10                   BASE FOR X6A COMMON AREA        21980000
         BCTR  PARM2,0                  MAKE IT MOVE LENGTH             22050000
         XC    STRTCOM(255),STRTCOM          CLEAR COMMON AREA          22120000
         S     PARM2,F255                                               22190000
         EX    PARM2,CLRCOM             CLEAR COMMON AREA               22260000
         LH    R3,MRGFLE1               INITIALIZE MERGE FILE SWITCHES  22330000
         LA    R4,MRGFLE2                                               22400000
         STH   R3,CURFLE                                                22470000
         STH   R4,CURFLE2                                               22540000
         LH    R3,JINFILE                                               22610000
         STH   R3,CURFLE3                                               22680000
         MVI   GNBLK3,X'80'             JINFILE ID                      22750000
************************************************************            22820000
*   BUFFER AND SORT AREA INITIALIZATION                                 22890000
************************************************************            22960000
X6AENT   EQU   *                                                        23030000
         GOIF  (JDECK,JLINK,JLIST),OFF=RETRN                            23100000
         LH    R3,JMAXRL                ASSURE MINIMUM CORE AVAILABLE   23170000
         LR    R4,R3                      IS JMAXRL*2 PLUS ITS SORTPTR  23240000
         AR    R3,R4                      AREA AND MAXIMUM OF 64K BYTES 23310000
         SR    R2,R2                      WHICH CAN STILL BE EXTENDED   23380000
         LA    R5,RLDND                                                 23450000
         DR    R2,R5                                                    23520000
         SLL   R3,D2                                                    23590000
         AR    R3,R4                    .                               23660000
         AR    R3,R4                    .                               23730000
         AR    R3,R4                    .                               23800000
         AR    R3,R4                    .                               23870000
         AR    R3,R4                    .                               23940000
         AR    R3,R4                    .                               24010000
         SRL   R3,D3                    MAKE IT DOUBLE WORD             24080000
         L     R11,K72D                                                 24150000
         JGETCORE MINDBL=(R3),MAXDBL=(R11)                              24220000
         LA    R5,BUFFER                                                24290000
         LA    R6,D6                    LOOP 6 TIMES                    24360000
INIT     ST    PARM1,D0(,R5)            BUFFER BEGIN                    24430000
         STH   R4,D4(,R5)               JMAXRL                          24500000
         SR    PARM2,R4                                                 24570000
         AR    PARM1,R4                                                 24640000
         ST    PARM1,D8(,R5)            BUFFER END                      24710000
         LA    R5,D12(,R5)                                              24780000
         BCT   R6,INIT                  ITERATE TILL DONE               24850000
         SR    PARM1,R4                 BACK UP                         24920000
         SR    PARM1,R4                 BACK UP                         24990000
         AR    PARM2,R4                 BACK UP                         25060000
         AR    PARM2,R4                 BACK UP                         25130000
         ST    PARM1,SORTPTR            SET START POINT OF SORT AREA    25200000
         LR    R3,PARM2                 GET AVAILABLE CORE SIZE         25270000
         SR    R2,R2                                                    25340000
         LA    R5,XRFND+SRTNTRY         COMPUTE SORT AREA SIZE          25410000
         LH    R14,JLITLNG                                              25480000
         LTR   R14,R14                                                  25550000
         BZ    INIT10                   NO LITERALS                     25620000
         LA    R5,SRTNTRY+LXEND+D3+D1(,R14) COMPUTE DIVISOR             25690000
         N     R5,=X'FFFFFFFC'          WITH FULL-WORD ALIGNMENT.       25760000
INIT10   EQU   *                                                        25830000
         DR    R2,R5                    FIND LENGTH OF                  25900000
         SLL   R3,D2                    SORT AREA AND                   25970000
         AR    R3,PARM1                 SET POINTER TO DATA AREA        26040000
         ST    R3,DATAPTR               AND SAVE                        26110000
         ST    R3,XRFPSV                CREATE DUMMY CONDITION          26180000
         LA    PARM2,D0(PARM2,PARM1)                                    26250000
         ST    PARM2,DATAAND            END OF SORT AREA                26320000
         L     R3,BUFFER3                                               26390000
         LA    R3,D6(,R3)               OVER HEADER                     26460000
         ST    R3,BUFNDX                AND SAVE IT                     26530000
         SET   FSW,ON                                                   26600000
X6AREAD  EQU   *                                                        26670000
         SR    RECCTR,RECCTR            INITIAL RECORD COUNT IS ZERO    26740000
         LM    SINDEX,DINDEX,SORTPTR    GET POINTERS                    26810000
         SPACE                                                          26880000
         USING PPIN,PARM2                                               26950000
         BAL   R6,RDPHYREC              READ PHYSICAL RECORD            27020000
         EJECT                                                          27090000
************************************************************            27160000
*   GTRGTR ROUTINE READS DATA FROM JINFILE AND SELECTIVELY MOVES        27230000
*   RECORDS INTO SORT AREA.                                             27300000
*   BUFFERS USED ARE BUFFER AND BUFFER2.                                27370000
************************************************************            27440000
GTRGTR   BAL   R12,BUFIN                READ RECORDS                    27510000
GTRGTR0  L     R9,DATAPTR               SET UP REGISTERS                27580000
         L     R10,BUFEND2                                              27650000
GTRGTR1  LH    R15,PPRLI                                                27720000
         CLI   PPIOC,XRFTYPE            SELECT THE FOLLOWING            27790000
         BE    GTRGTR15                   THREE TYPES OF RECORDS        27860000
         CLI   PPIOC,RLDTYPE              INTO SORT AREA, AND THROW     27930000
         BE    GTRGTR02                    AWAY OTHERWISE       OX00106 28000031
         CLI   PPIOC,LITTYPE                                            28070000
         BE    GTRGTR5                  LITERAL                         28140000
         CLI   PPIOC,JTEOF              DON'T LET EOF RECORD            28210000
         BNE   GTRGTR4                    SLIP THROUGH                  28280000
         SET   EOFSW,ON                                                 28350000
         B     GTRGTR3                  ITS AS GOOD AS SORT AREA FULL   28420000
GTRGTR02 NI    RELID,X'F3'                                     @OY08064 28470005
         B     GTRGTR2                                          OX00106 28480031
GTRGTR15 EQU   *                                                        28490000
*                                       DON'T PICK UP XREF RECORD IF    28540000
         GOIF  (JLIST,JXREF),NOTALL=GTRGTR4    NO LIST/XREF OPTIONS     28560000
         TR    XRFSYM,JTRTABLE                                          28630000
GTRGTR2  BCTR  R15,0                                                    28700000
         EX    R15,MOVREC               MOVE TO SORT AREA               28770000
         LA    R15,D1(,R15)               AND                           28840000
         ST    DINDEX,D0(,SINDEX)         SET UP ITS POINTER,           28910000
GTRGTR25 LA    SINDEX,SRTNTRY(,SINDEX)                                  28980000
         LA    RECCTR,D1(,RECCTR)       RECORD COUNT                    29050000
         AR    DINDEX,R15                                               29120000
         CR    SINDEX,R9                TEST IF SORT AREA FULL          29190000
         BL    GTRGTR4                  NO, CONTINUE                    29260000
         AR    PARM2,R15                YES                             29330000
         CR    PARM2,R10                TEST IF BUFFER FULL             29400000
         BL    GTRGTR3                  NOT YET                         29470000
         BAL   R12,BUFIN                GET NEXT BUFFER                 29540000
GTRGTR3  ST    PARM2,JINFLP             SAVE NEXT RECORD LOCATION       29610000
         STH   RECCTR,RECNUM                                            29680000
         CLI   PPIOC,JTEOF              END OF FILE                     29730000
         BNE   X6ARD                    GO TO SORT IF NOT EOF           29732000
         SET   EOFSW,ON                 IND END OF FILE                 29740000
         B     X6ARD                    GO TO SORT                      29750000
GTRGTR4  AR    PARM2,R15                TEST IF                         29820000
         CR    PARM2,R10                  BUFFER FULL                   29890000
         BL    GTRGTR1                  NOT YET                         29960000
         B     GTRGTR                   YES                             30030000
GTRGTR5  GOIF  (JLIST,JXREF),NOTALL=GTRGTR4                             30100000
         C     R15,F255                 LITERAL RECORD MIGHT GO         30170000
         BNH   GTRGTR2                    OVER 255 CHARACTERS. SO       30240000
         MVC   D0(255,DINDEX),PPRLI       WATCH OUT HOW YOU MOVE IT     30310000
         S     R15,F255                                                 30380000
         ST    DINDEX,D0(,SINDEX)                                       30450000
         A     DINDEX,F255                                              30520000
         A     PARM2,F255                                               30590000
         EX    R15,MOVREC                                               30660000
         B     GTRGTR25                 CONTINUE                        30730000
MOVREC   MVC   D0(0,DINDEX),PPRLI       OFF-THE-LINE MOVE               30800000
X6ARD    EQU   *                                                        30870000
         LTR   RECCTR,RECCTR            MUST BE EOF IF RECCTR = 0       30940000
         BP    X6ASRT                   NOT ZERO                        31010000
*                                              IF NOT 1ST TIME AND      31040000
         GOIF  (EOFSW,FSW),NOTALL=X6ARDX         EOF THEN FINISH SORT   31070000
         LH    PARM1,JINFILE            GET FILE ID                     31100000
         JCHECK FILE=(R10)              CHECK THE LAST INPUT READ       31130000
         B     RETRN                    NO RECORDS, SO WE'RE DONE       31160000
         EJECT                                                          31220000
X6ASRT   EQU   *                                                        31290000
************************************************************            31360000
*   THIS ROUTINE LINKS TO SORT ROUTINE, SELECTS AN OUTPUT FILE FOR      31430000
*   THE SORTED DATA ACCORDING TO THE PREDETERMINED NUMBER OF STRINGS    31500000
*   TO BE OUTPUT ON THE TWO OUTPUT FILES - CURFLE AND CURFLE2.          31570000
*   IT ALSO PADS THE OUTPUT FILES, IF NECESSARY, TO THE NUMBER OF       31640000
*   STRINGS THAT WILL SATISFY THE REQUIREMENT OF THE CASCADE MERGE.     31710000
************************************************************            31780000
         BAL   RTN,SORT                 SORT RECORDS IN BUFFER          31850000
         GOIF  EOFSW,ON=X6ARDX          DID WE HIT EOF SO FAR           31920000
         SR    RECCTR,RECCTR            NO                              31990000
         LM    SINDEX,DINDEX,SORTPTR    GO BACK TO READ IN              32060000
         L     PARM2,JINFLP               NEXT SORT AREA FULL           32130000
         B     GTRGTR0                    OF RECORDS                    32200000
X6ARDX   EQU   *                                                        32270000
*        END OF SORT. PAD BOTH FILES IF NECESSARY.                      32340000
         CLC   CFL1CC(D2),CFL1VV        HASH OUT HOW MANY STRINGS       32410000
         BNE   RDX10                      WE NEED ON EITHER OF          32480000
         CLC   CFL2CC(D2),CFL2VV          THE TWO FILES, AND HOW MANY   32550000
         BE    RDX40                      HAVE WE GOT ON EACH OF THEM   32620000
RDX10    CLC   CFL1CC(D2),CFL2CC        DICHOTOMY                       32690000
         BH    RDX20                    OK                              32760000
         XC    CURFLE(D8),CURFLE2       GET HIGHER ONE ON CURFLE        32830000
         XC    CURFLE2(D8),CURFLE                                       32900000
         XC    CURFLE(D8),CURFLE2                                       32970000
RDX20    TM    CFL1CC+1,X'01'           TEST ODD/EVEN # OF GPS          33040000
         BO    RDX30                    ODD                             33110000
         BAL   RTN,PADDING1             PAD ONE BLOCK                   33180000
RDX30    SR    R2,R2                                                    33250000
         LH    R3,CFL1CC                TEST IF DIVISIBLE BY 3          33320000
         LA    R1,D3                                                    33390000
         CR    R3,R1                    NO NEED TO TEST IF              33460000
         BL    RDX40                      DIVIDEND IS LESS THAN 3       33530000
         DR    R2,R1                                                    33600000
         LTR   R2,R2                                                    33670000
         BNZ   RDX40                    NOT DIVISIBLE BY 3              33740000
         LH    R3,CFL2CC                ELSE, TEST THE OTHER FILE       33810000
         CR    R3,R1                                                    33880000
         BL    RDX40                    LESS THAN 3 ON THIS ONE TOO     33950000
         DR    R2,R1                                                    34020000
         LTR   R2,R2                                                    34090000
         BNZ   RDX40                    NOT DIVISIBLE BY 3              34160000
         BAL   RTN,PADDING              PAD IT                          34230000
RDX40    SET   EOFSW,OFF                                                34300000
         LH    PARM1,CHKFILE                                            34370000
         JCHECK FILE=(R10)              CHK LAST OUTPUT FOR COMPLETION  34440000
         LH    R10,JINFILE                                              34510000
         JNOTE FILE=(R10)               NOTE LAST RECORD READ           34580000
         MVC   NOTESV(L'JNOTEVAL),JNOTEVAL  SAVE NOTED VALUE            34650000
         LH    R10,CURFLE                                               34720000
         JPOINT FILE=(R10),NEXT=START   REPOSITION ALL FILES            34790000
         LH    R10,CURFLE2                TO START EXCEPT               34860000
         JPOINT FILE=(R10),NEXT=START     JINFILE                       34930000
         LH    R0,CFL1CC                                                35000000
         LH    R1,CFL2CC                                                35070000
         B     MERGE                    ENTER MERGE STAGE               35140000
         SPACE                                                          35210000
PADDING  XC    CURFLE(D8),CURFLE2       THIS IS TO PAD ONE STRING ON    35280000
         XC    CURFLE2(D8),CURFLE         EITHER OF THE TWO FILES, BUT  35350000
         XC    CURFLE(D8),CURFLE2         CHECK LAST OUTPUT FOR         35420000
PADDING1 LH    PARM1,CHKFILE              COMPLETION FIRST              35490000
         JCHECK FILE=(R10)                                              35560000
         L     R2,BUFFER3                                               35630000
         MVC   D6(L'EOFREC,R2),EOFREC                                   35700000
         LH    R3,H1                                                    35770000
         STH   R3,D2(,R2)               LAST BLK IN GP                  35840000
         STH   R3,D4(,R2)               ONE RECORD IN BLK               35910000
         LA    R3,L'EOFREC+D6                                           35980000
         STH   R3,D0(,R2)               RECORD LENGTH                   36050000
         LH    PARM1,CURFLE                                             36120000
         LA    PARM2,BUFFER3                                            36190000
         JWRITE FILE=(R10),PARM=(R11)   PADDED BLK                      36260000
         STH   R10,CHKFILE                                              36330000
         LH    R9,CFL1CC                                                36400000
         LA    R9,D1(,R9)               UP ONE STRING (GP)              36470000
         STH   R9,CFL1CC                                                36540000
         BR    RTN                      RETURN                          36610000
CLRCOM   XC    STRTCOM+255(0),STRTCOM+255 OFF-THE-LINE ZAC              36680000
         EJECT                                                          36750000
*******************************************************************     36820000
*   THIS ROUTINE READS DATA FROM JINFILE.                               36890000
*   BUFFERS USED ARE BUFFER AND BUFFER2.                                36960000
*******************************************************************     37030000
BUFIN    ST    R12,RTNSV2                                               37100000
         LH    PARM1,JINFILE            CHECK JINFILE I/O               37170000
         JCHECK FILE=(R10)                COMPLETION HERE               37240000
         L     PARM2,BUFFER                                             37310000
         LH    R12,D0(,PARM2)                                           37380000
         AR    R12,PARM2                                                37450000
         ST    R12,BUFEND1                                              37520000
         XC    BUFFER(D12),BUFFER2      INTERCHANGE BUFFERS             37590000
         XC    BUFFER2(D12),BUFFER                                      37660000
         XC    BUFFER(D12),BUFFER2                                      37730000
         SH    R12,H8                                                   37800000
         CLC   D2(D3,R12),EOFREC+2      TEST IF LAST INPUT BLOCK        37870000
         BE    BUFIN40                  YES.                            37940000
         BAL   R6,RDPHYREC              NO, READ NEXT BLOCK             38010000
         L     PARM2,BUFFER2                                            38080000
BUFIN40  LA    PARM2,D2(,PARM2)         INCREMENT BY 2          OX02955 38150031
         L     R12,RTNSV2               PREPARE TO RETURN TO CALLER     38220000
         BR    R12                      RETURN TO CALLER                38290000
         SPACE 3                                                        38360000
RDPHYREC LH    PARM1,JINFILE            READ FROM JINFILE               38430000
         LA    PARM2,BUFFER                                             38500000
         JREAD FILE=(R10),PARM=(R11)                                    38570000
         BR    R6                       DON'T WAIT FOR I/O COMPLETION   38640000
         DROP  PARM2                                                    38710000
         EJECT                                                          38780000
************************************************************            38850000
*   SORT ROUTINE SORTS RLD'S, SYMBOL XREF'S, AND LITERAL XREF'S.        38920000
************************************************************            38990000
SORT     EQU   *                                                        39060000
         LA    RLREG,XRFLN-1            GET SORT CONTROL FIELD LENGTH-1 39130000
         LH    R1,RECNUM                NUMBER OF LOGICAL RECORDS IN    39200000
         BCTR  R1,0                          CORE MINUS ONE,            39270000
         SLL   R1,J2                              TIMES FOUR, BECAUSE   39340000
*                                         EACH RECORD CONTAINS 4 BYTES  39390000
         ST    R1,FWORD                                                 39410000
         L     R4,SORTPTR               POINTER TO DATA POINTERS        39480000
         CH    R1,H4                    TEST IF ONLY 2 ENTRIES          39550000
         BE    SORTZ                    YES                             39620000
SORT1    SRL   R1,J1                    MIDDLE OF DATA POINTERS         39690000
         N     R1,ALIGN                 FULL WORD ALIGNMENT             39760000
         BZ    SPILLENT                 END OF SORT                     39830000
SORTZ    EQU   *                                                        39900000
         SR    R0,R0                    INITIALIZE SUB SEQUENCE BASE    39970000
SORT4    LR    HPOINT,R0                                                40040000
SORT2    LR    LPOINT,HPOINT            STEP TO NEXT SUB SEQUENCE PAIR  40110000
SORT3    LA    HPOINT,D0(R1,LPOINT)     UPPER INDEX = LOWER + DELTA     40180000
         C     HPOINT,FWORD             UPPER INDEX = LOWER + DELTA     40250000
         BH    SORT5                    YES, STEP TO NEXT SUB SEQUENCE  40320000
         L     LBASE,D0(LPOINT,R4)      POINTER TO LOWER DATA ITEM      40390000
         L     HBASE,D0(HPOINT,R4)      POINTER TO UPPER DATA ITEM      40460000
         EX    RLREG,COMPARE            COMPARE DATA ITEMS              40530000
         BNH   SORT2                    BRANCH IF IN SEQUENCE           40600000
         ST    LBASE,D0(HPOINT,R4)      LET UPPER ITEM SINK             40670000
         ST    HBASE,D0(LPOINT,R4)      EXCHANGE DATA RECORDS           40740000
         SR    LPOINT,R1                                                40810000
         BNL   SORT3                    POSSIBLY ALL THE WAY            40880000
         B     SORT2                       TO THE BOTTOM.               40950000
SORT5    AH    R0,H4                    STEP TO NEXT SUB-SEQUENCE       41020000
         CR    R0,R1                    TEST FOR END OF PASS            41090000
         BL    SORT4                    NO, SORT NEXT SUB SEQUENCE      41160000
         B     SORT1                    YES, INITIALIZE NEW PASS        41230000
COMPARE  CLC   D4(0,LBASE),D4(HBASE)    COMPARE DATA ITEMS              41300000
         DS    0F                                                       41370000
ALIGN    DC    XL4'FFFFFFFC'            MASK FOR FULL WORD ALIGNMENT    41440000
         EJECT                                                          41510000
************************************************************            41580000
*   THIS ROUTINE HAS THE CONTROL OF THE OUTPUT OF DATA FROM SORT AREA.  41650000
*   IT CONTROLS THE DISTRIBUTION OF STRINGS ONTO THE TWO FILES THAT     41720000
*   ARE TO BECOME THE TWO INITIAL INPUT FILES TO THE CASCADE MERGE.     41790000
************************************************************            41860000
SPILLENT ST    RTN,RTADDR                                               41930000
         SET   RENT,ON                  RE ENTRY TO MERGE ROUTINE       42000000
         SR    R3,R3                                                    42070000
         L     R5,SORTPTR               GET BEGIN OF SORT AREA AND      42140000
*                                         RECORD COUNT                  42190000
         LH    R4,RECNUM                                                42210000
*                                       BRANCH IF ALL RECORDS ARE       42260000
         GOIF  (EOFSW,FSW),ALL=NOMREC     IN THE SORT AREA              42280000
         SPACE 3                                                        42350000
*        SPILL SORTED RECORDS INTO CURFLE AND CURFLE2                   42420000
SPILL    EQU   *                                                        42490000
         GOIF  FSW,OFF=SPILL10                                          42560000
*        FIRST TIME SPILLING            INITIATE STRING CONTROL NUMBER  42630000
         MVI   CFL1VV+1,D3                TO BOTH OUTPUT FILES AND      42700000
         MVI   CFL2VV+1,D1                SPILL STRINGS ONTO BOTH FILES 42770000
SPILL5   L     R2,BUFFER3                 ACCORDINGLY                   42840000
         XC    D2(D2,R2),D2(R2)                                         42910000
         LA    R2,D6(,R2)               BUMP PAST BUFFER HEADER         42980000
         L     R0,BUFEND3                                               43050000
SPILLING L     R1,D0(,R5)               GET THE NEXT DATA RECORD        43120000
         LH    R9,D0(,R1)               GET LENGTH OF DATA RECORD       43190000
SPLNG1   LR    R11,R9                   PUT DATA LENGTH IN REG          43260000
         AR    R11,R2                   ADD IN BEGINNING ADDR OF BUFFER 43330000
         CR    R11,R0                   ARE WE AT THE END OF BUFFER     43400000
         BH    SPILTH                   YES, END OF BUFFER              43470000
         C     R9,F255                  NO, MOVE IN                     43540000
         BNH   SPLNG2                                                   43610000
         MVC   D0(255,R2),D0(R1)        RCD >255, MOVE IN DEFAULT 255   43660000
         S     R9,F255                  ADJUST TO DEFAULT RECORD LENGTH 43750000
         A     R1,F255                  BUMP UP POINTERS                43820000
         A     R2,F255                                                  43890000
SPLNG2   BCTR  R9,0                     NO, MAKE IT MOVE LENGTH         43960000
         EX    R9,SPLMV                   AND MOVE                      44030000
         LR    R2,R11                   UP BUFFER POINTER               44100000
         LA    R3,D1(,R3)               UP RECORD COUNT BY 1            44170000
         LA    R5,SRTNTRY(,R5)          UP SORT AREA POINTER BY 4       44240000
         BCT   R4,SPILLING              GET NEXT RECORD                 44310000
*        WRITE LAST SHORT BLOCK                                         44380000
         SR    R9,R9                    NO MORE RECORD, SO              44450000
         L     R11,BUFFER3              GET START OF BUFF3 FOR WRITE OP 44520000
         OI    D3(R11),X'01'            LAST BLK IN THIS GP             44590000
         B     SPILTH1                  OUT ON FILE                     44660000
SPLMV    MVC   D0(0,R2),D0(R1)                                          44730000
SPILTH   L     R11,BUFFER3              GET ADDR OF BUFFER              44800000
SPILTH1  STM   R0,R9,SAVEALL            CONSTRUCT THE BLOCK             44870000
         SR    R2,R11                   HEADER                          44940000
         STH   R2,D0(,R11)              POINTER TO FIRST RCD IN BLOCK   45010000
         STH   R3,D4(,R11)              NUMBER OF RECORDS IN BLOCK      45080000
         TM    PPSW,FSW+RENT                                            45150000
         BO    SPLOUT                   FIRST TIME ENTRY                45220000
         TM    PPSW,RENT                                                45290000
         BO    CHKIT                    RE-ENTRY. MUST CHECK LAST       45360000
*                                         OUTPUT FILE                   45410000
         LH    PARM1,CURFLE                                             45430000
         JCHECK FILE=(R10)                                              45500000
         B     SPLOUT                                                   45570000
CHKIT    LH    PARM1,CHKFILE                                            45640000
         JCHECK FILE=(R10)              CHECK FOR COMPLETION            45710000
SPLOUT   SET   RENT,OFF                                                 45780000
         LH    PARM1,CURFLE                                             45850000
         LA    PARM2,BUFFER3                                            45920000
         JWRITE FILE=(R10),PARM=(R11)   WRITE ON CURFLE                 45990000
         LM    R0,R9,SAVEALL                                            46060000
         XC    BUFFER3(D12),BUFFER4     ALTER BUFFERS                   46130000
         XC    BUFFER4(D12),BUFFER3                                     46200000
         XC    BUFFER3(D12),BUFFER4                                     46270000
         L     R2,BUFFER3               INITIATE NEXT BUFFER            46340000
         XC    D2(D2,R2),D2(R2)           WHILE CURRENT BUFFER IS       46410000
         LA    R2,D6(,R2)                 BEING WRITTEN OUT             46480000
         L     R0,BUFEND3                                               46550000
         SR    R3,R3                                                    46620000
         LTR   R9,R9                    END OF GP TEST                  46690000
         BP    SPLNG1                   OVERFLOW, NOT END OF STRING     46760000
         STH   R10,CHKFILE                                              46830000
         LH    R11,CFL1CC               END OF GP (STRING)              46900000
         LA    R11,D1(,R11)             INCREMENT STRING COUNT          46970000
         STH   R11,CFL1CC                                               47040000
         L     RTN,RTADDR                                               47110000
         GOIF  FSW,OFF=(RTN)            RETURN IF NOT FIRST ACTION      47180000
         SET   FSW,OFF                  ELSE                            47250000
         XC    CURFLE(D8),CURFLE2       FLIP FIELD                      47320000
         XC    CURFLE2(D8),CURFLE                                       47390000
         XC    CURFLE(D8),CURFLE2                                       47460000
         BR    RTN                      THEN RETURN                     47530000
         SPACE                                                          47600000
SPILL10  EQU   *                                                        47670000
         CLC   CFL1CC(D2),CFL1VV                                        47740000
         BL    SPILL5                   OUTPUT ON SAME FILE             47810000
         XC    CURFLE(D8),CURFLE2       OUTPUT ON THE OTHER FILE        47880000
         XC    CURFLE2(D8),CURFLE                                       47950000
         XC    CURFLE(D8),CURFLE2                                       48020000
         LH    R11,CFL1VV               COMPUTE NEXT STRING CONTROL     48090000
         CH    R11,CFL2VV                 NUMBER ON THIS 'OTHER' FILE   48160000
         BL    SPILL20                    .                             48230000
         SH    R11,CFL2VV                 .                             48300000
         B     SPILL30                    THEN                          48370000
SPILL20  AH    R11,CFL2VV                 .                             48440000
SPILL30  STH   R11,CFL2VV                 .                             48510000
         B     SPILL5                   GO SPILL RECPRDS                48580000
EOFREC   DS    0CL18                    EOF RECORD                      48650000
         DC    AL2(L'EOFREC)            RL                              48720000
         DC    AL1(JPSOP,0)             FLAGS                           48790000
         DC    AL1(JTEOF)               IOC                             48860000
         DC    AL1(X'EE',X'00',X'FF')   SPECIAL ID                      48930000
         DC    2AL1(JASTER,X'EE',X'00',X'FF') PADDING                   49000000
         DC    AL2(0)                   PADDING                         49070000
EOFL     EQU   *-EOFREC                 LENGTH                          49140000
         EJECT                                                          49210000
************************************************************            49280000
*   THIS ROUTINE DOES THE CASCADE MERGE TILL THE NUMBER OF              49350000
*   STRINGS ON BOTH INPUT FILES DECREMENT TO ONE.                       49420000
************************************************************            49490000
*        READ FROM CURFLE AND CURFLE2                                   49560000
*        WRITE ON CURFLE3                                               49630000
*        ALL FILES REPOSITIONED TO GO                                   49700000
MERGE    EQU   *                                                        49770000
         BAL   RTN,READFL1              READ INTO BFRS 1 & 2 FROM FILE1 49840000
         BAL   RTN,READFL2              READ INTO BFRS 3 & 4 FROM FILE2 49910000
MERGE1   SR    R11,R11                                                  49980000
         L     R12,BUFFER5              WRITE BUFFER                    50050000
         XC    D2(D2,R12),D2(R12)                                       50120000
         LA    R12,D6(,R12)                                             50190000
MERGE2   SET   FSW,ON                                                   50260000
         CH    R0,H1                    DO NOT MERGE LAST PASS          50330000
         BH    CPRMRG                   IF                              50400000
         CH    R1,H1                    BOTH FILES HAVE DATA            50470000
         BH    CPRMRG                                                   50540000
         CLC   CFL3CC(D2),H1            IF THIRD FILE CONTAINS DATA     50590000
         BNL   CPRMRG                   CONTINUE MERGE                  50600000
         B     OUTPUTS                  MERGE AS THEY PRINT/PUNCH       50610000
         SPACE 3                                                        50680000
BUMPFL1  LR    R2,R14                                                   50750000
CPRMRG   CLC   D4(XRFLN,R2),D4(R3)                                      50820000
         BL    FL1LO                    FILE 1 LOW                      50890000
         BE    EEREC                    POSSIBLE END OF FILE/GROUP      50960000
FL2LO    LR    R14,R3                   RECORD POINTER                  51030000
         BAL   RTN,PUTREC               PUT ONE RECORD                  51100000
         BCT   R5,BUMPFL2               KEEP TRACK OF COUNT AND BR      51170000
         BCT   R10,CHKFL2               READ IF END OF BLOCK            51240000
         LA    R3,EOFREC                LAST BLK ON GROUP               51310000
         B     CPRMRG                   NEXT RECORD                     51380000
BUMPFL2  LR    R3,R14                   NEXT RECORD                     51450000
         B     CPRMRG                   GO                              51520000
CHKFL2   BAL   RTN,FL2CHECK             CHECK/READ                      51590000
         B     CPRMRG                   COMPARE                         51660000
         SPACE                                                          51730000
FL1LO    LR    R14,R2                                                   51800000
         BAL   RTN,PUTREC                                               51870000
         BCT   R4,BUMPFL1               COUNT/BRANCH                    51940000
         BCT   R9,CHKFL1                CHECK/READ                      52010000
         LA    R2,EOFREC                POINT TO EOFREC                 52080000
         B     CPRMRG                   NEXT REC                        52150000
CHKFL1   BAL   RTN,FL1CHECK             CHECK/READ                      52220000
         B     CPRMRG                   NEXT RECORD                     52290000
EEREC    CLI   D4(R2),JTEOF             TEST IF END OF GROUP            52360000
         BNE   FL1LO                    NO                              52430000
         BAL   RTN,PUTLBLK              OUTPUT LAST BLOCK               52500000
         STM   R0,R1,SAVEALL                                            52570000
         LH    R10,CURFLE3              TO CURFLE3                      52640000
         JCHECK FILE=(R10)              WAIT FOR COMPLETION             52710000
         LM    R0,R1,SAVEALL                                            52780000
         BCTR  R1,0                     MINUS 1 ON CURFLE2 STRING COUNT 52850000
         SH    R0,H1                    MINUS 1 ON CURFLE STRING COUNT  52920000
         STM   R0,R1,SAVEALL                                            52990000
         BP    GPCNT2                   CURFLE=0 STRING                 53060000
         STH   R0,CFL1CC                                                53130000
         XC    CURFLE(D8),CURFLE3       FLIP 1 AND 3                    53200000
         XC    CURFLE3(D8),CURFLE       .                               53270000
         XC    CURFLE(D8),CURFLE3       .                               53340000
         LH    R0,CFL1CC                                                53410000
         ST    R0,SAVEALL                                               53480000
         TM    GNBLK1,X'80'             TEST IF JINFILE                 53550000
         BZ    EEREC2                   NO                              53620000
         LH    R10,CURFLE               YES, POINT BACK TO NOTED LOC    53690000
         LA    R11,NOTESV                                               53760000
         JPOINT FILE=(R10),ADDR=(R11),NEXT=READ                         53830000
         LH    R10,CURFLE                                               53900000
         BAL   RTN,DUMMYRD              GET BY THE NOTED RECORD         53970000
         LH    R10,CURFLE3                                              54040000
         JPOINT FILE=(R10),NEXT=START   REPOSITION CURFLE3              54110000
         B     EERECXY                  NEXT STRING                     54180000
EEREC2   TM    GNBLK3,X'80'                                             54250000
         BZ    EEREC4                   BR IF NOT JINFILE               54320000
         LH    R10,CURFLE3              YES, POINT BACK TO NOTED LOC    54390000
         LA    R11,NOTESV                                               54460000
         JPOINT FILE=(R10),ADDR=(R11),NEXT=WRITE                        54530000
EEREC3   LH    R10,CURFLE                                               54580000
         JPOINT FILE=(R10),NEXT=START   REPOSITION CURFLE               54590000
EERECXY  LM    R0,R1,SAVEALL                                            54740000
         BAL   RTN,READFL1              READ FIRST BLOCK FROM CURFLE    54810000
EERECXZ  BAL   RTN,FL2CHECK             CONTINUE READING CURFLE2        54880000
         B     MERGE1                   CONTINUE PROCESSING             54950000
EEREC4   LH    R10,CURFLE3                                              55020000
         JPOINT FILE=(R10),NEXT=START   REPOSITION CURFLE3              55090000
         B     EEREC3                   .                               55160000
GPCNT2   CH    R1,H1                                                    55230000
         BL    GPCNT3                   CURFLE2=0 STRING                55300000
         BAL   RTN,FL1CHECK             NOT EXHAUSTED YET, READ         55370000
         B     EERECXZ                    NEXT BLOCK AND GO             55440000
GPCNT3   EQU   *                                                        55510000
         STH   R1,CFL2CC                                                55580000
         XC    CURFLE2(D8),CURFLE3      FLIP 2 AND 3                    55650000
         XC    CURFLE3(D8),CURFLE2                                      55720000
         XC    CURFLE2(D8),CURFLE3                                      55790000
         LH    R1,CFL2CC                                                55860000
         ST    R1,SAVEALL+4                                             55930000
         TM    GNBLK2,X'80'             TEST IF JINFILE                 56000000
         BZ    EEREC6                   NO                              56070000
         LH    R10,CURFLE2              YES, POINT TO THE NOTED LOC     56140000
         LA    R11,NOTESV                                               56210000
         JPOINT FILE=(R10),ADDR=(R11),NEXT=READ                         56280000
         LH    R10,CURFLE2                                              56350000
         BAL   RTN,DUMMYRD              GET BY THE NOTED RECORD         56420000
         LH    R10,CURFLE3                                              56490000
         JPOINT FILE=(R10),NEXT=START   REPOSITION CURFLE3              56560000
         B     EERECXX                  NEXT STRING (GP)                56630000
EEREC6   TM    GNBLK3,X'80'                                             56700000
         BZ    EEREC8                   NOT JINFILE                     56770000
         LH    R10,CURFLE3              YES, POINT TO THE NOTED LOC     56840000
         LA    R11,NOTESV                                               56910000
         JPOINT FILE=(R10),ADDR=(R11),NEXT=WRITE                        56980000
EEREC7   LH    R10,CURFLE2                                              57050000
         JPOINT FILE=(R10),NEXT=START   REPOSITION CURFLE2              57120000
EERECXX  LM    R0,R1,SAVEALL                                            57190000
         BAL   RTN,READFL2              READ FROM BOTH INPUT            57260000
         BAL   RTN,FL1CHECK               FILES AND                     57330000
         B     MERGE1                     CONTINUE MERGE PROCESS        57400000
EEREC8   LH    R10,CURFLE3                                              57470000
         JPOINT FILE=(R10),NEXT=START   REPOSITION CURFLE3              57540000
         B     EEREC7                   AND GO                          57610000
         SPACE                                                          57680000
DUMBUFR  EQU   BUFFER6                                                  57750000
DUMMYRD  LA    PARM2,DUMBUFR                                            57820000
*                                       READ THAT BYPASSES THE NOTED    57870000
         JREAD FILE=(R10),PARM=(R11)      RECORD ON JINFILE             57890000
         SET   DRDCHK,ON                                                57960000
         STH   R10,CHKFILE                                              58030000
         BR    RTN                      RETURN                          58100000
         EJECT                                                          58170000
************************************************************            58240000
*   THIS ROUTINE IS THE DRIVER TO PRINT/PUNCH ROUTINES.                 58310000
************************************************************            58380000
         USING PPIN,PARM2                                               58450000
         USING RPRINT,LOUTNDX                                           58520000
         USING RCARD,COUTNDX                                            58590000
OPENTRY  EQU   *                        ENTRY TO OUTPUTS                58660000
*        R2 = CURFLE INDEX                                              58730000
*        R3 = CURFLE2 INDEX                                             58800000
*        R4 = RECORDS IN CURFLE                                         58870000
*        R5 = RECORDS IN CURFLE2                                        58940000
         SPACE                                                          59010000
OUTPUTS  CLC   D4(XRFLN,R2),D4(R3)      HI LO COMPARE                   59080000
         BH    OFL2LO                   FILE 2 LOW                      59150000
         BE    EOFTEST                  POSSIBLE END OF FILE            59220000
         LR    PARM2,R2                 FILE 1 LOW                      59290000
         LH    R14,D0(,R2)              GET REC LENGTH                  59360000
         AR    R2,R14                                                   59430000
         ST    R2,NEXTREC               SAVE NEXT REC ADDR              59432000
         C     R2,BUFEND2               END OF BUFFER                   59440000
         BL    OUTIN                    NO- NOT LAST REC                59450000
         GOIF  ENDSTR1,OFF=OUTIN        NOT IN LAST BLOCK IN STRING     59460000
         CLC   EOFREC,D0(R3)            REC LEFT ON OTH FILE            59470000
         BNE   OUTIN                    YES - NOT LAST                  59480000
         SET   LASTREC,ON               NO THIS IS LAST REC             59490000
         B     OUTIN                    OUTPUT                          59500000
OFL2LO   LR    PARM2,R3                 FILE 2 LOW                      59570000
         LH    R14,D0(,R3)                                              59640000
         AR    R3,R14                                                   59710000
         ST    R3,NEXTREC               SAVE NEXT REC ADDR              59712000
         C     R3,BUFEND4               END OF BUFFER                   59718000
         BL    OUTIN                    NO - NOT LAST REC               59726000
         GOIF  ENDSTR2,OFF=OUTIN        NOT IN LAST BLOCK IN STRING     59734000
         CLC   EOFREC,D0(R2)            REC LEFT ON OTHER FILE          59742000
         BNE   OUTIN                    YES                             59750000
         SET   LASTREC,ON               THIS WAS LAST REC               59758000
OUTIN    L     R12,PRT                  GET OUTPUT ROUTINE BASE         59766000
         ST    R9,RTNSV1                SAVE STRING COUNT               59773000
         BALR  R9,R12                   OUTPUT RECORDS                  59780000
         L     R9,RTNSV1                RESTORE STRING COUNT            59810000
         C     R2,BUFEND2               TEST IF ENDOFBUFFER             59850000
         BL    OEX2                     NO                              59920000
         CLC   EOFREC,D0(R2)            IS IT END OF FILE               59940000
         BE    OEX2                     YES                             59960000
         BCT   R9,OEX1                                                  59990000
         LA    R2,EOFREC                END OF STRING HERE              60060000
         B     OEX2                     .                               60130000
OEX1     BAL   RTN,FL1CHECK             GET NEXT BUFFER                 60200000
OEX2     C     R3,BUFEND4               TEST IF END OF BUFFER           60270000
         BL    OUTPUTS                  NEXT                            60340000
         CLC   EOFREC,D0(R3)            IS IT END OF FILE               60360000
         BE    OUTPUTS                  YES                             60380000
         BCT   R10,OEX3                                                 60410000
         LA    R3,EOFREC                END OF STRING HERE              60480000
         B     OUTPUTS                  NEXT                            60550000
OEX3     BAL   RTN,FL2CHECK             GET NEXT BUFFER                 60620000
         B     OUTPUTS                  CONTINUE                        60690000
         SPACE 3                                                        60760000
NOMREC   SET   EOFSW,OFF                                                60830000
         L     R2,SORTPTR                                               60900000
ONEBFR   L     PARM2,D0(,R2)                                            60970000
         LA    R2,SRTNTRY(,R2)          GET NEXT REC POINTER            60972000
         L     R12,D0(,R2)              GET NEXT REC ADDR               60974000
         ST    R12,NEXTREC              SAVE IT                         60976000
         CH    R4,H1                    LAST REC                        60980000
         BNE   ONEBFR1                  TELL SO                         60990000
         SET   LASTREC,ON                                               61000000
ONEBFR1  L     R12,PRT                  GET OUTPUT RTN ADDR             61010000
         BALR  R9,R12                   GO OUTPUT RECORD                61040000
         BCT   R4,ONEBFR                DECREMENT COUNT                 61180000
         B     EOFOUT                   END OF FILE IF THRU'            61250000
         EJECT                                                          61320000
****************************************                                61325000
*   END OF FILE ROUTINE.                                                61330000
****************************************                                61335000
EOFTEST  CLI   D4(R2),JTEOF             TEST IF EOF RECORD              61340000
         BNE   OFL2LO                   NO, ASSUME FILE 2 LOW           61345000
EOFOUT   EQU   *                                                        61350000
         GOIF  JMINXREF,OFF=EOFOUT5     IF XREF(SHORT)-        @AX14816 61350400
         GOIF  LASTDEF,ON=EOFOUT3       BR IF LAST REC = DEF   @AZ28946 61350800
         GOIF  HEADPEND,OFF=EOFOUT5     BR IF NO HEADER PEND   @AZ28946 61351000
         L     LOUTNDX,LOUTSV           RESTORE BUFFER POINTER @AZ28946 61351100
         MVC   RECSAVE,CONTROL          SAVE CURR XREF REC     @AZ28946 61351200
         SET   LINKSW,ON                HEADER BUT HEADER ONLY @AZ28946 61351400
         L     R12,PRT                  ADDRESS TO-            @AZ28946 61351500
         BALR  R9,R12                   PRINT ROUTINE          @AZ28946 61351600
         MVC   CONTROL(L'RECSAVE),RECSAVE RESTOR CURR XREF REC @AZ28946 61351700
         MVI   XCNTRL,SPACE2            SET SPACE 2            @AZ28946 61351800
         B     EOFOUT5                                         @AZ28946 61352000
EOFOUT3  EQU   *                                               @AZ28946 61352200
         SET   JSUPPRT,ON               LAST DEF PRINT LINE.   @AX14816 61352400
EOFOUT5  EQU   *                                               @AX14816 61352600
         LH    R10,CURFLE               WAIT FOR OUTSTANDING-  @AZ11958 61353600
         BAL   R9,EOFWAIT               I/O ACTIVITY.          @AZ11958 61354000
         LH    R10,CURFLE2              WAIT FOR OUTSTANDING-  @AZ11958 61354400
         BAL   R9,EOFWAIT               I/O ACTIVITY.          @AZ11958 61354800
         LH    R10,CURFLE3              WAIT FOR OUTSTANDING-  @AZ11958 61354900
         BAL   R9,EOFWAIT               I/O ACTIVITY.          @AZ11958 61359900
         LH    PARM1,JINFILE            REWINE INPUT FILE FOR           61365000
         JPOINT FILE=(PARM1),NEXT=START DIAGNOSTICS PHASE               61370000
RETRN    JFRECORE ADDR=(R7)             FREE X6A COMMON AREA            61375000
RETURN   JRETURN                        RETURN TO SYSTEM                61380000
EOFWAIT  LA    R1,D0(R13,R10)           R1 POINTS TO DECB      @AZ11958 61382000
         TM    D0(R1),X'40'             TEST IF COMPLETED I/O  @AZ11958 61384000
         BOR   R9                       RETURN IF COMPLETED I/O@AZ11958 61384400
         WAIT  ECB=(R1)                 WAIT FOR COMPLEATION   @AZ11958 61384800
         BR    R9                       RETURN FOR MORE TESTS  @AZ11958 61384900
         EJECT                                                          61385000
*   READ ROUTINE READS PHYSICAL RECORDS                                 61390000
*   FROM CURFLE INTO BUFFER/BUFFER2                                     61391000
****************************************                                61392000
READFL1  STM   R0,R15,SAVEALL           FIRST TIME ENTRY POINT          61393000
         GOIF  DRDCHK,OFF=READFL17      TEST IF NEED CHECK BEFORE READ  61394000
         LH    PARM1,CHKFILE                                            61395000
         JCHECK FILE=(R10)              YES, CHECK IT                   61396000
         SET   DRDCHK,OFF                                               61397000
READFL17 EQU   *                                                        61398000
         LH    PARM1,CURFLE             READ NEXT BLOCK OF RECORDS      61399000
         LA    PARM2,BUFFER               FROM CURFLE INTO BUFFER       61400000
         JREAD FILE=(R10),PARM=(R11)                                    61401000
         B     RDFL10                   .                               61402000
FL1CHECK STM   R0,R15,SAVEALL           NON-FIRST-TIME ENTRY POINT      61403000
         SET   ENDSTR1,OFF              RESET END OF STRING IND         61404000
         LH    PARM1,CURFLE                                             61405000
RDFL10   JCHECK FILE=(R10)              CHECK FOR COMPLETION            61406000
         L     PARM2,BUFFER             GET PTR TO BEGIN OF BUFFER      61407000
         LH    R12,D0(,PARM2)           EXTRACT LENGTH OF DATA RECORD   61408000
         AR    R12,PARM2                CALCULATE END OF BUFFER         61409000
         ST    R12,BUFEND1              KEEP PTR TO END OF BUFFER1      61410000
RDFL11   XC    BUFFER(D12),BUFFER2      FLIP THE TWO ALTERNATE          61411000
         XC    BUFFER2(D12),BUFFER        BUFFERS BY INTERCHANGE        61412000
         XC    BUFFER(D12),BUFFER2        POINTERS                      61413000
         CLI   D3(PARM2),D1             TEST IF END OF STRING           61414000
         BNE   RDFL15                   NO, GO TO READ                  61415000
         SET   ENDSTR1,ON               IND LAST BLOCK IN STRING        61416000
         L     R0,SAVEALL               YES, TEST IF LAST STRING        61417000
         CH    R0,H1                                                    61418000
         BNH   RDFL19                   YES                             61419000
RDFL15   EQU   *                                                        61420000
         LH    PARM1,CURFLE             READ NEXT BLOCK OF RECORDS      61421000
         LA    PARM2,BUFFER                                             61422000
         JREAD FILE=(R10),PARM=(R11)                                    61423000
RDFL19   LM    R0,R15,SAVEALL                                           61424000
         L     R2,BUFFER2                                               61425000
         LH    R9,D2(,R2)               # BLKS IN FL 1 GP               61426000
         LH    R4,D4(,R2)               # RECS IN FL 1 BLK              61427000
         LA    R2,D6(,R2)               BUMP OVER  HEADER               61428000
         BR    RTN                      RETURN TO CALLER                61429000
         EJECT                                                          61430000
*   READ ROUTINE READS PHYSICAL RECORDS                                 61431000
*   FROM CURFLE2 INTO BUFFER3/BUFFER4                                   61432000
****************************************                                61433000
READFL2  STM   R0,R15,SAVEALL                                           61434000
         GOIF  DRDCHK,OFF=READFL27      TEST IF NEED CHECK BEFORE READ  61435000
         LH    PARM1,CHKFILE                                            61436000
         JCHECK FILE=(R10)              YES, CHECK IT                   61437000
         SET   DRDCHK,OFF                                               61438000
READFL27 EQU   *                                                        61439000
         LH    PARM1,CURFLE2            READ NEXT BLOCK OF RECORDS      61440000
         LA    PARM2,BUFFER3              FROM CURFLE2 INTO BUFFER3     61441000
         JREAD FILE=(R10),PARM=(R11)                                    61442000
         B     RDFL20                   .                               61443000
FL2CHECK STM   R0,R15,SAVEALL           NON-FIRST-TIME ENTRY POINT      61444000
         SET   ENDSTR2,OFF              RESET END OF STRING IND         61445000
         LH    PARM1,CURFLE2                                            61446000
RDFL20   JCHECK FILE=(R10)              CHECK BEFORE READ               61447000
         L     PARM2,BUFFER3                                            61448000
         LH    R12,D0(,PARM2)                                           61449000
         AR    R12,PARM2                                                61450000
         ST    R12,BUFEND3                                              61451000
RDFL21   XC    BUFFER3(D12),BUFFER4     FLIP THE TWO ALTERNATE BUFFERS  61460000
         XC    BUFFER4(D12),BUFFER3                                     61460800
         XC    BUFFER3(D12),BUFFER4                                     61461600
         CLI   D3(PARM2),D1             TEST IF END OF STRING           61462400
         BNE   RDFL25                   NO, GO TO READ                  61463200
         SET   ENDSTR2,ON               IND LAST BLOCK INSTRING         61464000
         L     R1,SAVEALL+4                                             61464800
         CH    R1,H1                    YES, TEST IF LAST STRING        61465600
         BNH   RDFL29                   YES                             61466400
RDFL25   EQU   *                                                        61467200
         LH    PARM1,CURFLE2            READ NEXT BLOCK OF RECORDS      61468000
         LA    PARM2,BUFFER3                                            61468800
         JREAD FILE=(R10),PARM=(R11)                                    61469600
RDFL29   LM    R0,R15,SAVEALL                                           61470400
         L     R3,BUFFER4                                               61471200
         LH    R10,D2(,R3)              # BLKS IN FL 2 GP               61472000
         LH    R5,D4(,R3)               # RECS IN FL 2 BLK              61472800
         LA    R3,D6(,R3)               BUMP OVER HEADER                61473600
         BR    RTN                      RETURN TO CALLER                61474400
         EJECT                                                          61475200
************************************************************            61476000
*   WRITE ROUTINE WRITES PHYSICAL RECORDS                               61476800
*   FROM BUFFER5/BUFFER6 ONTO CURFLE3                                   61477600
************************************************************            61478400
PUTREC   EQU   *                                                        61479200
         LH    R15,D0(,R14)             GET RECORD LENGTH               61480000
PUTREC1  AR    R12,R15                                                  61480800
         C     R12,BUFEND5              TEST IF END OF BUFFER           61481600
         BH    OVRFLO                   BR IF OVERFLOW                  61482400
         SR    R12,R15                  NO, MOVE INTO BUFFER            61483200
         C     R15,F255                                                 61484000
         BNH   PUTREC2                                                  61484800
         MVC   D0(255,R12),D0(R14)      EXTRA MOVE IF RECORD LENGTH     61485600
         S     R15,F255                   EXCEEDS 255                   61486400
         A     R12,F255                                                 61487200
         A     R14,F255                                                 61488000
PUTREC2  BCTR  R15,0                    MAKE MOVE LENGTH                61488800
         EX    R15,MVMV                 MOVE RECORD TO BUFFER           61489600
         LA    R15,D1(R15)              MAKE IT LOGICAL LENGTH AGAIN    61490400
         AR    R12,R15                                                  61491200
         AR    R14,R15                                                  61492000
         LA    R11,D1(,R11)                                             61492800
         BR    RTN                      RETURN                          61493600
MVMV     MVC   D0(0,R12),D0(R14)        OFF-THE-LINE MOVE               61494400
         SPACE                                                          61495200
OVRFLO   SR    R12,R15                  WRAP UP THE BUFFER              61496000
OVRFLO1  STM   R0,R15,SAVEALL                                           61496800
         L     R10,BUFFER5                                              61497600
         SR    R12,R10                  TAKE CARE OF ITS HEADER         61498400
         STH   R12,D0(,R10)             BLOCK SIZE                      61499200
         STH   R11,D4(,R10)             # RECORDS                       61500000
         LH    PARM1,CURFLE3            BRANCH IF FIRST TIME            61500800
OVRFLO5  GOIF  FSW,ON=WRITE             ELSE, CHECK LAST OUTPUT         61501600
         JCHECK FILE=(R10)              COMPLETION BEFORE               61502400
****************************************                                61503200
WRITE    LA    PARM2,BUFFER5            WRITE CURRENT BLOCK             61504000
         SET   FSW,OFF                                                  61504800
         JWRITE FILE=(R10),PARM=(R11)                                   61505600
         LM    R0,R15,SAVEALL                                           61506400
         XC    BUFFER5(D12),BUFFER6     FLIP THE TWO                    61507200
         XC    BUFFER6(D12),BUFFER5       ALTERNATIVE                   61508000
         XC    BUFFER5(D12),BUFFER6       BUFFERS                       61508800
         L     R12,BUFFER5                AND                           61509600
         XC    D2(D2,R12),D2(R12)         INITIATE HEADER               61510400
         LA    R12,D6(,R12)                                             61511200
         SR    R11,R11                                                  61512000
         LTR   R15,R15                  END OF GP IF R15 = 0            61512800
         BP    PUTREC1                  BR IF NOT                       61513600
         LH    R10,CFL3CC               INCREMENT STRING COUNT          61514400
         LA    R10,D1(,R10)                                             61515200
         STH   R10,CFL3CC                                               61516000
         BR    RTN                      RETURN                          61516800
         SPACE                                                          61517600
LBSW     EQU   X'01'                    LAST-BLOCK-IN-GP                61518400
PUTLBLK  SR    R15,R15                                                  61519200
         L     R10,BUFFER5                                              61520000
         OI    D3(R10),LBSW             INDICATE LAST BLOCK IN GP       61520800
         B     OVRFLO1                  PUT                             61521600
         EJECT                                                          61522400
*                                                                       61523200
*   CONSTANTS                                                           61524000
*                                                                       61524800
F255     DC    F'255'                   CONSTANT 255                    61525600
PRT      DC    A(PRTPCH)                ADDRESS OF OUTPUT ROUTINE       61526400
K72D     DC    X'00007FFF'                                              61527200
H1       DC    H'1'                     CONSTANT 1                      61528000
H4       DC    H'4'                     CONSTANT 4                      61530000
H8       DC    H'8'                     CONSTANT 8                      61536000
         JPATCH X6A00,AF0                     5% PATCH AREA             61542000
         EJECT                                                          61548000
         JCSECT (X6A20)                                                 61554000
         JMODID                                                         61560000
PRTPCH   JSAVE                                                          61566000
         JENTRY (X6A21=PRTPCH)                                          61572000
         STM   R1,R10,SAVEALL                                           61578000
         L     LINCTR,LNCTRSV           RESTORE LINE COUNTER            61584000
         GOIF  LINKSW,OFF=VJGARAM       BR IF NOTHING SPECIAL  @AZ28946 61585000
         BAL   RTN,XRFHDNG              NOW LAST XREF HEADER   @AZ28946 61586000
         B     OUTEXIT                  RETURN TO EOF ROUTINE  @AZ28946 61587000
VJGARAM  EQU   *                                               @AZ28946 61588000
         CLI   PPIOC,RLDTYPE            TEST IF RLD RECORD              61590000
         BE    RLDOUT                   YES                             61600000
         CLI   PPIOC,XRFTYPE            TEST IF XREF RECORD             61670000
         BE    XRFOUT                   YES                             61740000
         CLI   PPIOC,LITTYPE            TEST IF LETERAL XREF RECORD     61810000
         BE    LITOUT                   BRANCH IF YES                   61880000
         B     RET                      RETURN TO CALLER                61910000
         SPACE                                                          62020000
OUTEXIT  ST    LINCTR,LNCTRSV           SAVE LINE COUNTER               62090000
         LM    R1,R10,SAVEALL                                           62160000
RET      JRETURN                        NEXT RECORD                     62190000
         EJECT                                                          63070000
************************************************************            63140000
*   RELOCATION LIST DICTIONARY PRINT ROUTINE.                           63210000
************************************************************            63280000
RLDOUT   EQU   *                                                        63350000
         GOIF  PROCRLD,ON=RLDGO         BRANCH IF NOT FIRST ENTRY       63420000
         LA    LINCTR,D1                DUMMY UP LINE COUNTER           63490000
         SET   PROCRLD,ON               INDICATE INVOLVED IN RLD NOW    63560000
         GOIF  (JDECK,JLINK),OFF=RLDGO   BRANCH IF NO RLD PUNCH OUTPUT  63630000
         BAL   RTN,PCHREC               LOCATE NEXT PUNCH BUFFER        63700000
RLDGO    EQU   *                                                        63770000
         GOIF  (JLIST,JRLD),NOTALL=RLDDL BRANCH IF NO LIST OUTPUT       63840000
         L     LOUTNDX,LOUTSV           SAVE LIST BUFFER POINTER        63910000
         BCT   LINCTR,RLDLST            BRANCH IF LIST HDG NOT NEEDED   63980000
         BAL   RTN,RLDHDNG              ELSE, BUILD ONE                 64050000
         LH    LINCTR,JLNCT             GET LINE COUNT PER PAGE         64120000
         ST    LINCTR,LNCTRSV                                           64190000
         MVI   RCNTRL,SPACE2            DOUBLE SPACE                    64260000
RLDLST   EQU   *                                                        64330000
         UNPK  UNPKAREA(L'UNPKAREA),POSID(L'POSID+L'RELID+L'RLDVAL+L'RLX64400000
               DFLG)                    UNPACK                          64470000
         MVN   UPFLGN(D1),RLDFLG        COMPLETE UNPACKING              64540000
         NC    UNPKAREA(L'UNPKAREA+1),MASK1 MASK OUT ZONE PORTION       64610000
         MVC   POSOUT,UPPOS             POSITIONAL ID                   64680000
         MVC   RELOUT,UPREL             RELATIONAL ID                   64750000
         MVC   VALOUT,UPVAL             ADDRESSE                        64820000
         MVC   FLGOUT,UPFLG             FLAGS                           64890000
         BAL   RTN,PRTREC               PRINT ONE LINE                  64960000
RLDDL    EQU   *                                                        65030000
         GOIF  (JDECK,JLINK),OFF=OUTEXIT  NEXT RECORD                   65100000
RLDBLD   EQU   *                                                        65170000
         LM    RLDCNT,R15,RFSAVE        RESTORE                         65240000
         CH    RLDCNT,H56               TEST IF BUFFER FULL             65310000
         BL    RLDBLD1                  BRANCH IF NOT                   65380000
         BAL   RTN,PCHREC               ELSE, PUNCH OUT RECORD          65450000
RLDBLD1  EQU   *                                                        65520000
         MVC   RELHLD,RELID             RELOCATION ID                   65590000
         MVC   POSHLD,POSID             POSITIONAL ID                   65660000
         MVC   FLGHLD,RLDFLG            RLD FLAGS                       65730000
         MVC   ADDRHLD,RLDVAL           RLD ASSEMBLED ORIGIN            65800000
         CLC   ESDCOMP,RLDHLD           TEST IF POS/REL ID CHANGED      65870000
         BNE   RLDB                     YES.                            65940000
         SH    R15,H4I                  BACK UP TO FLAG IN PREV ENTRY   66010000
         OI    D0(R15),SAMEID           INDICATE NEXT ENTRY HAS SAME ID 66080000
         AH    R15,H4I                                                  66150000
         LA    PARM2,FLGHLD             LOCATION OF ITEM TO BE MOVED    66220000
         LA    PARM1,D3                 AND ITS MOVE LENGTH             66290000
         B     RLDB1                    GO MOVE IT TO BUFFER            66360000
RLDBZ    EQU   *                                                        66430000
         BAL   RTN,PCHREC               LOCATE NEXT PUNCH BUFFER        66500000
RLDB     LA    PARM1,D7                 MOVE LENGTH FOR SAME-ID ENTRY   66570000
         LA    PARM2,RLDHLD             AND ITS LOCATION                66640000
         MVC   ESDCOMP,RLDHLD           UPDATE ESDCOMP                  66710000
RLDB1    LA    RLDCNT,D1(PARM1,RLDCNT)  UPDATE RLD DATA BYTE COUNT      66780000
         CH    RLDCNT,H56               IF IT ACCUMULATES               66850000
         BH    RLDBZ                    MORE THAN 56 BYTES MUST SPLIT   66920000
         EX    PARM1,MVCRLD             ELSE, MOVE INTO BUFFER          66990000
         STH   RLDCNT,JHWORD1           ENTER NUMBER OF BYTES ACCUM'D   67060000
         L     COUTNDX,PCHSAVE                                          67130000
         MVC   RLDBYT(L'RLDBYT),JHWORD1                                 67200000
         LA    R15,D1(PARM1,R15)        MIGHT HAVE ROOM FOR NEXT ENTRY  67270000
         STM   RLDCNT,R15,RFSAVE        SAVE                            67340000
         B     OUTEXIT                  READ NEXT CARD                  67410000
         DROP  COUTNDX                                                  67480000
*                                                                       67550000
MVCRLD   MVC   D0(0,R15),D0(PARM2)      OFF-THE-LINE MOVE               67620000
         EJECT                                                          67690000
************************************************************            67760000
*   SYMBOL CROSS-REFERENCE LISTING ROUTINE.                             67830000
************************************************************            67900000
         DROP  PARM2                                                    67970000
         USING PPIN,R5                                                  68040000
XRFOUT   EQU   *                                                        68110000
         LR    R5,PARM2                 SET BASE FOR XREF'S             68180000
         GOIF  PROCXRF,ON=XRFLST        BRANCH IF NOT FIRST ENTRY       68250000
         LA    LINCTR,D1                ELSE, FORCE OUT PREVIOUS LINE   68320000
         XC    SAVSYM(L'SAVSYM+L'UNDFSYM),SAVSYM ZERO OUT SAVE AREAS    68390000
         SET   PROCXRF,ON                                               68460000
         B     XRFLST                   GO PROCESS                      68510000
XRFOUT0  CLI   XRFFLG,BASE              DEF REC                         68520000
         BNE   XRFOUT2                  NO PROCESSING STARTS            68522000
         GOIF  LASTREC,ON=OUTEXIT       LAST REC NOTHING TO PRINT       68524000
         L     R1,NEXTREC               GET NEXT REC ADDR               68526000
         CLI   XRFFLG-XRFIN(R1),BASE    A DEF REC TOO                   68528000
         BE    OUTEXIT                  YES DO NOT PROCESS YET          68528400
XRFOUT2  SET   PROCXRF,ON               NOT DEF PROCESSING STARTS       68528800
XRFLST   EQU   *                                                        68530000
         MVC   STMTN2(D2),XRFSTM        ALIGN STMT # TO HWD BNDRY       68600000
         CLI   XRFFLG,REF               IS IT A REFERENCE RECORD        68670000
         BE    XREFIN                   BRANCH IF YES                   68740000
         BAL   RTN,XRFDEFS              ELSE, PROCESS DEFINITION        68810000
XRFEXIT  STM   LOUTNDX,XRFPTR,LOUTSV                                    68880000
         B     OUTEXIT                  READ NEXT CARD                  68950000
         SPACE 3                                                        69020000
XREFIN   EQU   *                                                        69090000
         SET   LASTREC,OFF              REF NO WORRIES                  69120000
         LM    LOUTNDX,XRFPTR,LOUTSV                                    69160000
         LA    PARM2,XPRTND             GET END PRINT BUFFER ADDRESS    69230000
         CR    XRFPTR,PARM2             TEST IF REFERENCE LINE FULL     69300000
         BL    XRFR0                    BRANCH IF STILL ROOM            69370000
         BAL   R1,HDLINE1               ELSE, PRINT THE LINE            69440000
XRFR0    EQU   *                                                        69510000
         L     R15,STMTNUM              XREF STATEMENT NUMBER           69580000
         BAL   RTN,CVTXRF               NUMBER FOR PRINTING.            69650000
         GOIF  PROCLIT,ON=XRFR2         SKIP IF PROCESSING LIT XREF     69720000
         CLC   SAVSYM,XRFSYM            SYMBOL = PREVIOUS SYMBOL        69790000
         BE    XRFR2                    YES, BYPASS UNDEFINED SYM CODE  69860000
         CLC   UNDFSYM,XRFSYM           UNDEFINED SYMBOL = TO LAST      69930000
         BE    XRFR2                    YES, GO PUT OUT REFERENCE NUM.  70000000
         GOIF  HEADOUT,ON=XRFR15        BRANCH IF BUFFER EMPTY          70070000
         GOIF  LASTDEF,ON=XRFR15        SKIP LAST BUF IF IT WAS DEF     70100000
         MVC   UPXSV(L'XRFENT),UPX      SAVE STMT NUMBER                70140000
         BAL   R1,HDLINE                ELSE, PRINT A LINE              70210000
         MVC   UPX(L'XRFENT),UPXSV      RESTORE STMT NUMBER             70280000
XRFR15   EQU   *                                                        70350000
         MVC   UNDFSYM,XRFSYM           SAVE UNDEFINED SYMBOL           70420000
         TR    XRFSYM,JTRTABLE          CONVERT SYMBOL TO INTERNAL CODE 70490000
         MVC   XSYMOUT,XRFSYM           XREF SYMBOL                     70560000
         MVC   XLENOUT(L'UNDFMSG),UNDFMSG    UNDEFINED MESSAGE          70630000
XRFR2    EQU   *                                                        70700000
         MVC   D0(L'XRFENT,XRFPTR),UPX  REFERENCE NUMBER                70770000
         LA    XRFPTR,XRENTL(,XRFPTR)   BUMP REF PRINT POINTER          70840000
         SET   HEADOUT,OFF                                              70910000
         SET   LASTDEF,OFF              REFERENCE RESETS DEF REC IND    70940000
         B     XRFEXIT                  GET OUT                         70980000
         SPACE 3                                                        71050000
HDLINE1  SET   HEADOUT,ON                                               71120000
HDLINE   EQU   *                                                        71190000
         ST    R1,R1SAVE                                                71260000
         L     LOUTNDX,LOUTSV           RESTORE BUFFER POINTER          71280000
         GOIF  LASTDEF,ON=HDLINE2       WAS LAST XREF A DEF             71300000
         GOIF  HEADPEND,OFF=HDLINE11    BR IF NOT XREF HEADER  @AZ28946 71303000
         MVC   RECSAVE,CONTROL          SAVE XREF RECORD       @AZ28946 71306000
         BAL   RTN,XRFHDNG              PRINT HEADER           @AZ28946 71308000
         LH    LINCTR,JLNCT             GET LINE COUNT         @AZ28946 71310000
         ST    LINCTR,LNCTRSV                                  @AZ28946 71312000
         MVC   CONTROL(L'RECSAVE),RECSAVE BACK SAVED XREF REC  @AZ28946 71314000
         MVI   XCNTRL,SPACE2            DOUBLE SPACE           @AZ28946 71321000
         SET   HEADPEND,OFF             RESET SW               @AZ28946 71324000
HDLINE11 EQU   *                                               @AZ28946 71327000
         BAL   RTN,PRTREC               PRINT ONE LINE                  71330000
HDLINE2  EQU   *                                                        71360000
         MVI   XCNTRL,SPACE1            SINGLE SPACE                    71400000
         BCT   LINCTR,HDLNX             EXIT IF PAGE NOT FULL           71470000
         GOIF  PROCXRF,OFF=HDLINE3      BR IF NOT XREF         @AZ28946 71480000
         GOIF  JMINXREF,OFF=HDLINE3     BR IF NOT XREF(SHORT)  @AZ28946 71490000
         SET   HEADPEND,ON              IND XREF HEADER PEND   @AZ28946 71500000
         B     HDLNX                    TRY NEXT XREF RECORD   @AZ28946 71510000
HDLINE3  EQU   *                                               @AZ28946 71520000
         BAL   RTN,XRFHDNG              ELSE, PRINT HEADING             71540000
         LH    LINCTR,JLNCT             GET LINE COUNT PER PAGE         71610000
         ST    LINCTR,LNCTRSV                                           71680000
         MVI   XCNTRL,SPACE2            DOUBLE SPACE                    71750000
HDLNX    LA    XRFPTR,XRFREF            GET REFERENCE POINTER           71820000
         L     R1,R1SAVE                                                71890000
         SET   LASTDEF,OFF              RESET DEF REC IND               71920000
         BR    R1                       BEFORE YOU GO                   71960000
         SPACE 3                                                        72030000
XRFDEFS  EQU   *                                                        72100000
         ST    RTN,RTNSV                SAVE RETURN LINKAGE             72170000
         GOIF  JMINXREF,ON=XRFDEF0      WORRIE ONLY IF SHORT XREF       72173000
         SET   LASTREC,OFF              SO CLEAR LAST REC IND           72176000
XRFDEF0  GOIF  LASTDEF,OFF=XRFDEFS0     WAS ALST REC ALSO A DEF REC     72180000
         L     LOUTNDX,LOUTSV           RESTORE BUFFER OPOINTER         72190000
         LA    XRFPTR,XRFREF            GET REFERENCE POINTER           72200000
         CLI   XRFFLG,DUPL              DUPL DEF                        72202000
         BE    XRFDEFS1                 YES CONT PROC                   72204000
         CLI   XOPCDE,X'FF'             FINISHED IF LAST REC ON OX02645 72206031
         BNE   XRFDEFS1                 FINIS                   OX02645 72206431
         MVI   D1(LOUTNDX),JBLANK       MAKE SURE NO INF PRINTED        72208000
         MVC   D2(D30,LOUTNDX),D1(LOUTNDX)                              72208400
         BR    RTN                      BYPASS OUTPUT                   72210000
XRFDEFS0 EQU   *                                                        72220000
         CLI   XRFFLG,DUPL              DUPL DEF REC                    72225000
         BE    XRFDEFSA                 YES PRINT IT                    72230000
         GOIF  LASTREC,ON=XRFDEFSA      FINISHED IF LST REC ON @AX14198 72235006
XRFDEFSA BAL   R1,HDLINE                UNLOAD PREVIOUS BUFFER          72240000
XRFDEFS1 MVC   SAVSYM,XRFSYM            SAVE XREF SYMBOL FOR FUTURE TST 72310000
         TR    XRFSYM,JTRTABLE          CONVERT SYMBOL TO INTERNAL CODE 72380000
         MVC   XSYMOUT,XRFSYM           XREF SYMBOL                     72450000
         B     XLREF1                   CONTINUE PROCESSING             72520000
XLREF    EQU   *                                                        72590000
         ST    RTN,RTNSV                                                72660000
XLREF1   EQU   *                                                        72730000
         XC    JFWORD1,JFWORD1          ALIGN LENGTH ATTRIBUTE VALUE    72800000
         MVC   JFWORD1+D2(D2),XRFLEN    IN A FULL WORD AREA             72840000
         L     R15,JFWORD1              CONVERT LENGTH ATTRIBUTE        72880000
         BAL   RTN,CVTXRF               AND MOVE IT TO                  72940000
         MVC   XLENOUT,UPX              PRINT BUFFER.                   73010000
         GOIF  PROCLIT,ON=LITVAL        BRANCH IF PROCESSING LITERAL    73080000
         UNPK  UPXVAL(L'UPXVAL),XRFVAL(L'XRFVAL+1) CONVERT LOC CTR      73150000
XLREF2   EQU   *                                                        73220000
         NC    UPXVAL(L'UPXVAL),MASK1   ZERO OUT ZONES                  73290000
         MVC   XVALOUT,UPXVAL           AND MOVE IT TO PRINT            73360000
         L     R15,STMTNUM              XREF DEF STATEMENT NUMBER       73430000
         BAL   RTN,CVTXRF               DEFINED AT AND MOVE IT TO       73500000
         MVC   XDEFOUT,UPX              PRINT BUFFER.                   73570000
         L     RTN,RTNSV                                                73640000
         CLI   XRFFLG,BASE              IS RECORD A DEFINITION ONE      73710000
         BC    12,XLREF3                YES BYPASS DUPLICATION CODE     73780000
         MVC   XRFREF(L'DUPMSG),DUPMSG  DUPLICATE SYMBOL MESSAGE        73850000
         SET   LASTDEF,OFF              DUPLICATE SHOULD BE PRINTED     73880000
         BR    RTN                      RETURN TO CALLER                73920000
XLREF3   GOIF  JMINXREF,OFF=(RTN)       IS SHORT XREF REQUESTED         73930000
         SET   LASTDEF,ON               YES INDICATE THIS WAS DEF REC   73940000
         BR    RTN                      RETURN TO CALLER                73950000
LITVAL   UNPK  UPXVAL(L'UPXVAL),LITLOCTR(L'LITLOCTR+1) GET LOCATION CTR 73990000
         B     XLREF2                   RESUME PROCESSING               74060000
         SPACE                                                          74130000
CVTXRF   CVD   R15,CVDCML                         CONVERT XREF DEF, OR  74200000
         UNPK  UPX(L'UPX),UPDCML(D3)    UNPACK                          74270000
         NC    UPX(L'UPX),MASK1         ZERO OUT ZONES                  74340000
         BR    RTN                      RETURN TO CALLER                74410000
         EJECT                                                          74480000
************************************************************            74550000
*   LITERAL CROSS-REFERENCE LISTING ROUTINE.                            74620000
*   THERE ARE NO SUCH RECORD TYPES AS DUPLICATE OR UNDEFINED ON LITERAL 74690000
*   CROSS REFERENCE RECORDS. IF FOUND, GIVE X4 A DUMP.                  74760000
************************************************************            74830000
LITOUT   EQU   *                                                        74900000
         LR    R5,PARM2                                                 74970000
         GOIF  PROCLIT,ON=LITLST        BRANCH IF NOT FIRST ENTRY       75040000
         GOIF  HEADPEND,OFF=LITOUT4     BR IF NO HEADER PEND   @AZ28946 75110000
         GOIF  LASTDEF,ON=LITOUT2       BR IF LAST REC = DEF   @AZ28946 75119000
         L     LOUTNDX,LOUTSV           RESTORE BUFFER POINTER @AZ28946 75128000
         MVC   RECSAVE,CONTROL          SAVE CURR XREF REC     @AZ28946 75132000
         BAL   RTN,XRFHDNG              PRINT XREF HEADER      @AZ28946 75136000
         MVC   CONTROL(L'RECSAVE),RECSAVE RESTOR XREF REC      @AZ28946 75146000
         MVI   XCNTRL,SPACE2            SET CONTR CHAR FOR SP2 @AZ28943 75155000
LITOUT2  EQU   *                                               @AZ28946 75164000
         SET   HEADPEND,OFF             RESET SW               @AZ28946 75173000
LITOUT4  EQU   *                                               @AZ28946 75182000
         LA    LINCTR,D1                DUMMY UP LINE COUNTER           75191000
         SET   PROCLIT,ON                                               75200000
         SET   PROCXRF,OFF              RESET SW               @AZ28946 75220000
LITLST   EQU   *                                                        75250000
         MVC   STMTN2(D2),XRFSTM        ALIGN STMT # TO HWD BNDRY       75320000
         CLI   XRFFLG,REF               TEST IF REFERENCE RECORD        75390000
         BE    XREFIN                   MAKE REFERENCE ENTRY IF YES     75460000
         SPACE 3                                                        75530000
LITDEFS  EQU   *                                                        75600000
         BAL   R1,HDLINE                PRINT HEADING IF NECESSARY      75670000
         LH    R15,LITPOLID                                             75740000
         CH    R15,LLOCTRSV                                             75810000
         BNH   LITD0                    BRANCH IF SAME POOL             75880000
         STH   R15,LLOCTRSV                                             75950000
LITD0    EQU   *                                                        76160000
         ST    R5,RFSAVE                SAVE RECORD POINTER             76230000
         SR    R15,R15                                                  76300000
         IC    R15,LITDTL               GET DATA LENGTH                 76370000
         CH    R15,H8I                  TEST IF LONGER THAN 8 CHAR.     76440000
         BH    LITD1                    YES, SPLIT INTO 2 LINES OR MORE 76510000
         BCTR  R15,0                    MAKE IT MOVE LENGTH             76580000
         EX    R15,LITMOVH              MOVE ALL INFORMATION INTO       76650000
         B     LITD5                    ONE LINE                        76720000
LITD1    EQU   *                                                        76790000
LITMOVH  MVC   LITSYM(D5),LITDTA        MOVE IN 5 BYTES                 76860000
         LA    R5,LITDTA+5              ADJUST POINTER                  76930000
         SH    R15,H5                                                   77000000
         CH    R15,H115                 TEST IF RECORD GT 115 CHAR      77070000
         BNH   LITD4                    BRANCH IF NOT                   77140000
LITD2    MVC   LITSYM5(XRL-5),D0(R5)    COMPLETE ONE LINE               77210000
         ST    R15,R15SAVE              SAVE LENGTH                     77280000
         BAL   R1,HDLINE                PRINT HEADING IF NECESSARY      77350000
         L     R15,R15SAVE              RESTORE LENGTH                  77420000
LITD3    SH    R15,H115                 DECREMENT BYTE COUNT            77490000
         AH    R5,H115                  BUMP POINTER                    77560000
         CH    R15,H115                 TEST IF STILL GT 115 CHAR       77630000
         BH    LITD2                    BRANCH IF YES                   77700000
LITD4    BCTR  R15,0                    MAKE IT MOVE LENGTH             77770000
         EX    R15,LITMOV               MOVE THE REST                   77840000
         CH    R15,H2                   TEST IF LAST LINE               77910000
         BNH   LITD5                    NOT MORE THAN 3 CHARACTERS      77980000
         BAL   R1,HDLINE                PRINT HEADING IF NECESSARY      78050000
LITD5    EQU   *                                                        78120000
         L     R5,RFSAVE                POINT BACK                      78190000
         BAL   RTN,XLREF                BUILD RECORD                    78260000
         B     XRFEXIT                  NEXT RECORD                     78330000
*                                                                       78400000
LITMOV   MVC   LITSYM5(0),D0(R5)        OFF-THE-LINE MOVE               78470000
         EJECT                                                          78540000
************************************************************            78610000
*   RLD HEADING ROUTINE                                                 78680000
************************************************************            78750000
RLDHDNG  STM   R1,R6,RTADDR             SAVE REGISTERS 1 - 6            78820000
         BAL   RTN,PGECNT               BUMP PAGE COUNT                 78890000
         GOIF  FIRST,ON=SECPRT          BRANCH IF SECOND PRINT @OY06558 78900005
         BAL   RTN,PRTREC                                               78920005
         SET   FIRST,ON                 SET FIRST PRINT ON     @OY08558 78930005
SECPRT   L     LOUTNDX,LOUTSV           RESTORE BUFFER POINTER @OY06558 78940005
         MVI   CONTROL,EJBYTE           EJECT TO NEW PAGE               79030000
         MVC   TITLE(L'JDECKID),JDECKID TITLE ID                        79100000
         MVC   HDGPTR(L'RLDH1),RLDH1    'RELOCATION DICTIONARY'         79170000
         MVC   PGEPTR(L'PAGE),PAGE      'PAGE'                          79240000
         MVC   PGENUM(L'PGENUM),UPX     RLD PAGE COUNT                  79310000
         BAL   RTN,PRTREC               PRINT ONE LINE                  79380000
         MVI   CONTROL,SPACE3           TRIPLE SPACE                    79450000
         MVC   TITLE(L'RLDH2),RLDH2     RLD HEADING 2                   79520000
         MVC   DTEPTR(L'JLVTMDT),JLVTMDT COMPNT-LEVEL-MONTH-DAY-YR      79590000
         B     HDNGX                    PRINT ONE LINE AND EXIT         79660000
         EJECT                                                          79730000
************************************************************            79800000
*   SYMBOL/LITERAL XREF HEADING ROUTINE                                 79870000
************************************************************            79940000
XRFHDNG  STM   R1,R6,RTADDR             SAVE ADDRESS OF CALLER          80010000
         BAL   RTN,PGECNT               CONVERT PAGE COUNT FOR PRINTING 80080000
         GOIF  LASTDEF,OFF=XRFHD0       DONT PRINT IF IT WAS DEF        80090000
         L     LOUTNDX,LOUTSV           RESTORE BUFFER POINTER          80100000
         B     XRFHD05                  BYPASS PRINT                    80110000
XRFHD0   EQU   *                                                        80120000
         L     LOUTNDX,LOUTSV           RESTORE BUFFER POINTER @OY06558 80170005
XRFHD05  EQU   *                                                        80180000
         MVI   CONTROL,EJBYTE           EJECT TO NEW PAGE               80220000
         MVC   TITLE(L'JDECKID),JDECKID TITLE ID                        80290000
         MVI   TITLE+D8,JBLANK         CLEAN HEADER LINE       @OX07206 80340003
         MVC   TITLE+D9(PGEPTR-TITLE-D9),TITLE+D8 CLN HDRLINE  @OX07206 80350003
         MVC   HDGPTR(L'XRFH1),XRFH1    'CROSS-REFERENCE'               80360000
         GOIF  PROCLIT,OFF=XRFHD1       BRANCH IF PROC'G LIT XREF       80430000
         MVC   HDGPTR(L'LITH1+L'XRFH1),LITH1 MOVE IN HEADING            80500000
XRFHD1   EQU   *                                                        80570000
         MVC   PGEPTR(L'PAGE),PAGE      'PAGE'                          80640000
         MVC   PGENUM(L'PGENUM),UPX     XREF PAGE COUNT                 80710000
         BAL   RTN,PRTREC               PRINT ONE LINE                  80780000
         MVI   CONTROL,SPACE3           TRIPLE SPACE                    80850000
         MVC   TITLE(L'XRFH2),XRFH2     XREF HEADING 2                  80920000
         MVC   DTEPTR(L'JLVTMDT),JLVTMDT COMPNT-LEVEL-MONTH-DAY-YEAR    80990000
HDNGX    EQU   *                                                        81060000
         BAL   RTN,PRTREC               PRINT ONE LINE                  81130000
         ST    LOUTNDX,RTADDR+4         OUTPUT POINTER                  81200000
         LM    R1,R6,RTADDR             ADDRESS OF CALLER               81270000
         BR    RTN                      RETURN TO CALLER                81340000
         EJECT                                                          81410000
************************************************************            81480000
*   PAGE COUNT SUBROUTINE                                               81550000
************************************************************            81620000
PGECNT   EQU   *                                                        81690000
         LH    R2,JPAGENO               XREF PAGE COUNT                 81760000
         LA    R2,D1(,R2)               INCREASE PAGE COUNT             81830000
         STH   R2,JPAGENO               SAVE PAGE NUMBER                81900000
         CVD   R2,CVDCML                CONVERT INTO DECIMAL            81970000
         UNPK  UPX(L'UPX),UPDCML(D3)    UNPACK                          82040000
         NC    UPX(L'UPX),MASK1         ZERO OUT ZONES                  82110000
         LA    R2,MASKLEN               COUNT FOR MASKING OUT LEADING 0 82180000
         LA    R3,UPX                   POINTER TO LEAD CHARACTER       82250000
LOOP     CLI   D0(R3),J0                TEST FOR LEADING ZEROS          82320000
         BCR   7,RTN                    BRANCH IF NOT ZERO              82390000
         MVI   D0(R3),JBLANK            MASK OUT ZERO WITH A BLANK      82460000
         LA    R3,D1(,R3)               STEP TO NEXT CHARACTER          82530000
         BCT   R2,LOOP                  LOOP BACK UP TO 3 TIMES         82600000
         BR    RTN                      RETURN TO CALLER                82670000
         EJECT                                                          93660000
************************************************************            93730000
*   THIS ROUTINE PRINTS ONE LINE ONTO PRINT FILE.                       93800000
************************************************************            93870000
PRTREC   EQU   *                                                        93940000
         ST    PARM2,FWORD                                              94010000
         JPRINT                         PRINT ONE LINE                  94080000
         LR    LOUTNDX,PARM2            GET BASE                        94150000
         ST    LOUTNDX,LOUTSV           SAVE POINTER                    94220000
         L     PARM2,FWORD                                              94290000
         BR    RTN                      RETURN TO CALLER                94360000
         SPACE 5                                                        94430000
************************************************************            94500000
*   THIS ROUTINE PUNCHES ONE LINE ONTO PUNCH FILE.                      94570000
************************************************************            94640000
         USING RCARD,COUTNDX                                            94710000
PCHREC   EQU   *                                                        94780000
         ST    PARM2,FWORD                                              94850000
         JPUNCH SEQ=YES                                                 94920000
         LR    COUTNDX,PARM2            AND SAVE ADDRESS                94990000
         MVI   CARDID,XBLANK            FILL BUFFER WITH EXTERNAL       95060000
         MVC   RLDNAM(RCARDL-1),CARDID  BLANKS                          95130000
         MVI   CARDID,J2                12-2-9 COMBINATION IN COLUMN 1  95200000
         MVC   RLDNAM,RLDC              RLD NAME EXTERNAL FORMAT        95270000
         LA    R15,RLDFLD               POINT TO DATA FIELD             95340000
         SR    RLDCNT,RLDCNT            INITIAL RLD COUNT               95410000
         ST    COUTNDX,PCHSAVE                                          95480000
         STM   RLDCNT,R15,RFSAVE        SAVE                            95550000
         XC    ESDCOMP,ESDCOMP                                          95620000
         L     PARM2,FWORD                                              95690000
         BR    RTN                      RETURN TO CALLER                95760000
         EJECT                                                          95830000
************************************************************            95900000
*   CONSTANTS, CONSTANTS, CONSTANTS                                     95970000
************************************************************            96040000
         DS    0F                                                       96250000
H1I      DC    H'1'                                                     96460000
H2       DC    H'2'                                                     96530000
H4I      DC    H'4'                                                     96600000
H5       DC    H'5'                                                     96670000
H7       DC    H'7'                                                     96740000
H8I      DC    H'8'                                                     96810000
H56      DC    H'56'                                                    96880000
H115     DC    H'115'                                                   96950000
RLDC     DC    CL3'RLD'                 EXTERNAL RLD NAME               97020000
RLDH1    JGENIN 'RELOCATION DICTIONARY'                                 97090000
RLDH2    JGENIN 'POS.ID   REL.ID   FLAGS   ADDRESS'                     97160000
PAGE     JGENIN 'PAGE'                                                  97230000
LITH1    JGENIN 'LITERAL '                                              97300000
XRFH1    JGENIN 'CROSS-REFERENCE'                                       97370000
XRFH2    JGENIN 'SYMBOL    LEN   VALUE   DEFN    REFERENCES'            97440000
DUPMSG   JGENIN '****DUPLICATE****'                                     97510000
UNDFMSG  JGENIN '****UNDEFINED****   '                         @OX10363 97580005
MASK1    DC    16X'0F'                  ZONE DELETOR                    97650000
         JPATCH X6A20,5E0             5% PATCH AREA                     97720000
         END   PPENT                                                    97790000
