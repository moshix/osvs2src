         TITLE 'IGE0119I - SECOND ERP MODULE FOR THE 2955'              00010000
         TITLE 'IGE0119I - SECOND ERP MODULE FOR THE 2955'              00020000
*                                                                       00030000
*********************************************************************** 00040000
*********************************************************************** 00050000
*                                                                       00060000
*        ABBREVIATIONS USED PERTAINING TO IOB                           00070000
*                                                                       00080000
*        ATT            ATTENTION                                       00090000
*        BCI            BLOCK COUNT INCREMENT AMOUNT                    00100000
*        BOC            BUS OUT CHECK                                   00110000
*        BUS            BUSY                                            00120000
*        CAD            COMMAND ADDRESS                                 00130000
*        CC             CONDITION CODE (SIO)                            00140000
*        CCC            CHANNEL CONTROL CHECK                           00150000
*        CCH            CCHH UPDATE FLAG                                00160000
*        CDC            CHANNEL DATA CHECK                              00170000
*        CED            CHANNEL END                                     00180000
*        CHC            CHAINING CHECK                                  00190000
*        CPD            CHANNEL PROGRAM DESCRIPTION                     00200000
*        CRT            COMMAND REJECT                                  00210000
*        CSW            CHANNEL STATUS WORD                             00220000
*        CUE            CONTROL UNIT END                                00230000
*        DCA            DCB ADDRESS                                     00240000
*        DCK            DATA CHECK                                      00250000
*        DED            DEVICE END                                      00260000
*        DEF            DEVICE END POST FLAG                            00270000
*        ECA            ECB ADDRESS                                     00280000
*        ECD            ECB CODE                                        00290000
*        ECI            IOB ERROR CORRECTION INDICATOR                  00300000
*        ECK            EQUIPMENT CHECK                                 00310000
*        ECT            ERROR COUNT                                     00320000
*        EXC            IOB EXCEPTION                                   00330000
*        HIO            HIO ISSUED FLAG                                 00340000
*        ICC            INTERFACE CONTROL CHECK                         00350000
*        ILH            INCORRECT LENGTH                                00360000
*        IRD            INTERVENTION REQUIRED                           00370000
*        LDA            LOST DATA                                       00380000
*        MEX            M EXTENT                                        00390000
*        MF1            MODIFIER FLAG 1                                 00400000
*        MF2            MODIFIER FLAG 2                                 00410000
*        OEF            NO TEST FOR OUT OF EXTENT FLAG                  00420000
*        OVR            OVERRUN                                         00430000
*        PCI            PROGRAM CONTROLED INTERRUPTION                  00440000
*        PCK            PROGRAM CHECK                                   00450000
*        PFL            PURGE FLAG                                      00460000
*        PRK            PROTECTION CHECK                                00470000
*        QSF            IOB QSAM FLAG                                   00480000
*        RCT            RESIDUAL COUNT                                  00490000
*        RHA            READ HOME ADDRESS R0 FLAG                       00500000
*        RPM            REPOSITION MODIFIER                             00510000
*        RTA            RESTART ADDRESS                                 00520000
*        SEA            SEEK ADDRESS                                    00530000
*        SFL            SENSE FLAG                                      00540000
*        SIO            START I/O                                       00550000
*        SRS            START RE-START                                  00560000
*        STA            START ADDRESS                                   00570000
*        STM            STATUS MODIFIER                                 00580000
*        TOT            TIME OUT                                        00590000
*        UCK            UNIT CHECK                                      00600000
*        UEX            UNIT EXCEPTION                                  00610000
*        UKN            UNKNOWN BITS                                    00620000
*        UNR            UNRELATED                                       00630000
*        UNS            UNUSED SIO BITS                                 00640000
*        UNT            UNUSED SIO BITS                                 00650000
*        USB            UNUSED SENSE BITS                               00660000
*                                                                       00670000
*********************************************************************** 00680000
         LCLA  &T,&SPN                                            0003  00690000
.@001    ANOP                                                     0003  00700000
IGE0119I CSECT ,                                                  0003  00710000
         BALR  @B,0                                               0003  00720000
@PSTART  DS    0H                                                 0003  00730000
         USING @PSTART+00000,@B                                   0003  00740000
         LR    @C,@1                                              0003  00750000
         L     @0,@SIZ001                                         0003  00760000
         GETMAIN  R,LV=(0)                                        0003  00770000
         XR    @C,@1                                              0003  00780000
         XR    @1,@C                                              0003  00790000
         XR    @C,@1                                              0003  00800000
         USING @DATD+00000,@C                                     0003  00810000
         XC    @TEMPS(@L),@TEMPS                                  0003  00820000
*         R3=R1;                         /* PARAMETER LIST            * 00830000
         LR    @3,@1                                              0042  00840000
*         R6=RQEIOB;                     /* GET IOB PTR               * 00850000
         L     @6,4(0,@3)                                         0043  00860000
*         R9=MHRCCWS;                                                   00870000
         MVC   @TEMP4(4),32(@6)                                   0044  00880000
         L     @9,@TEMP4                                          0044  00890000
*         R7=CAD-8;                      /* CCW PTR                   * 00900000
         LH    @7,@D1                                             0045  00910000
         MVC   @TEMP3+1(3),9(@6)                                  0045  00920000
         A     @7,@TEMP3                                          0045  00930000
* SECTION1:                                                             00940000
* /*      THIS SECTION IS USED TO TEST FOR INITIAL SELECTION          * 00950000
* /*      ERRORS. AN SIO CONDITION CODE OF '01' INDICATES             * 00960000
* /*      STATUS STORED. ANY STATUS AND SENSE INFORMATION OTHER       * 00970000
* /*      THAN UNIT CHECK (UCK) WITH SENSE INDICATING BUS OUT         * 00980000
* /*      CHECK (BOC) OR COMMAND REJECT (CRT) IS TREATED AS A         * 00990000
* /*      "SHOULD NOT OCCUR" (SNO) TYPE ERROR CONDITION               * 01000000
*                                                                  /* * 01010000
*         IF SIO^='10'X THEN             /* DOES SIO CODE!'01'        * 01020000
SECTION1 CLI   16(@6),X'10'                                       0046  01030000
*           GOTO ERP2001;                /* NO. BRANCH TO NEXT SECTION* 01040000
         BC    07,ERP2001                                         0047  01050000
*                                                                  /* * 01060000
*         IF UCK = '0'B THEN                 /*UNIT CHECK ?           * 01070000
         TM    12(@6),B'00000010'                                 0048  01080000
*              GO TO ERRORSNO;               /*IF NEG THEN BRANCH     * 01090000
         BC    08,ERRORSNO                                        0049  01100000
*                                                                  /* * 01110000
*         IF BOC = '1'B THEN                 /*BUS OUT CHECK ?        * 01120000
         TM    2(@6),B'00100000'                                  0050  01130000
*              GO TO ERRORA2X;               /*IF POS THEN BRANCH     * 01140000
         BC    01,ERRORA2X                                        0051  01150000
*                                                                  /* * 01160000
*         IF CRT = '1'B THEN                 /*COMMAND REJECT ?       * 01170000
         TM    2(@6),B'10000000'                                  0052  01180000
*              GO TO ERRORA3X;               /*IF POS THEN BRANCH     * 01190000
         BC    01,ERRORA3X                                        0053  01200000
*                                                                  /* * 01210000
*         GO TO ERRORSNO;                    /*SHOULD NOT OCCUR       * 01220000
         BC    15,ERRORSNO                                        0054  01230000
*  ERP2001:                                                             01240000
*         IF UCK='0'B THEN                                              01250000
ERP2001  TM    12(@6),B'00000010'                                 0055  01260000
*           GOTO SECTION4;                                              01270000
         BC    08,SECTION4                                        0056  01280000
* /*      THIS SECTION TESTS FOR DATA CHECK (DCK) IF UNIT CHECK       * 01290000
* /*      (UCK) HAS BEEN INDICATED. DEPENDING UPON THE PRESENT        * 01300000
* /*      CCW BEING EXECUTED AND THE CHAINED COMMAND IF ANY           * 01310000
*                                                                  /* * 01320000
* DATCHECK:                                                             01330000
*                                                                  /* * 01340000
*         IF DCK = '0'B THEN                 /*DATA CHECK ?           * 01350000
DATCHECK TM    2(@6),B'00001000'                                  0057  01360000
*              GO TO OVERRUN;                /*IF NEGATIVE BRANCH     * 01370000
         BC    08,OVERRUN                                         0058  01380000
*                                            /*    TO OVER RUN        * 01390000
*         IF COCO = '02'X THEN GOTO TESTNEX0; /* READ COMMAND         * 01400000
         CLI   0(@7),X'02'                                        0059  01410000
         BC    08,TESTNEX0                                        0060  01420000
*         IF COCO='01'X THEN                                            01430000
         CLI   0(@7),X'01'                                        0061  01440000
         BC    07,@9FF                                            0061  01450000
*         DO;                                                           01460000
*         IF WR='1'B THEN                /* WRITE EOT,READ RESP       * 01470000
         TM    32(@6),B'00001000'                                 0063  01480000
*               GOTO ERRORIWC;                                          01490000
         BC    01,ERRORIWC                                        0064  01500000
*         GOTO ERRORRFW;                                                01510000
         BC    15,ERRORRFW                                        0065  01520000
*         END;                                                          01530000
*         GO TO ERRORSNO;                    /*BRANCH TO RECOVERY     * 01540000
*                                                                  /* * 01550000
*                                                                  /* * 01560000
* TESTNEX0:                                                             01570000
*                                                                  /* * 01580000
*         IF R='1'B THEN                 /* READ SEQUENCE             * 01590000
TESTNEX0 TM    32(@6),B'10000000'                                 0068  01600000
*               GOTO ERRORIRR;                                          01610000
         BC    01,ERRORIRR                                        0069  01620000
*         IF WR='1'B THEN                /* WRITE EOT,READ RESP       * 01630000
         TM    32(@6),B'00001000'                                 0070  01640000
*           GOTO ERRORIWC;                                              01650000
         BC    01,ERRORIWC                                        0071  01660000
*         GOTO ERRORRFW;                                                01670000
         BC    15,ERRORRFW                                        0072  01680000
* /*      THIS SECTION TESTS FOR OVER RUN (OVR) IF UNIT CHECK         * 01690000
* /*      (UCK) HAS BEEN INDICATED. DEPENDING UPON CURRENT CCW        * 01700000
* /*      RECOVERY PROCEDURES ARE DEFINED                             * 01710000
*                                                                  /* * 01720000
* OVERRUN:                                                              01730000
*                                                                  /* * 01740000
*         IF OVR = '0'B THEN             /* OVER RUN ?                * 01750000
OVERRUN  TM    2(@6),B'00000100'                                  0073  01760000
*              GO TO COMANREJ;               /*IF NEGATIVE BRANCH     * 01770000
         BC    08,COMANREJ                                        0074  01780000
*                                            /*    TO COMMAND REJECT  * 01790000
*         IF COCO ='CA'X                 /* INHIBIT COMMAND           * 01800000
*               | COCO='02'X THEN        /* READ COMMAND              * 01810000
         CLI   0(@7),X'CA'                                        0075  01820000
         BC    08,@9FE                                            0075  01830000
         CLI   0(@7),X'02'                                        0075  01840000
         BC    07,@9FD                                            0075  01850000
*               GOTO ERRORIRR;                                          01860000
         BC    08,ERRORIRR                                        0076  01870000
*                                                                  /* * 01880000
*         GO TO ERRORSNO;                    /*SHOULD NOT OCCUR       * 01890000
         BC    15,ERRORSNO                                        0077  01900000
* /*      THIS SECTION TESTS FOR COMMAND REJECT (CRT) IF UNIT         * 01910000
* /*      CHECK (UCK) HAS BEEN INDICATED. ERROR RECOVERY              * 01920000
* /*      PROCEDURES ARE DEFINED                                      * 01930000
*                                                                  /* * 01940000
* COMANREJ:                                                             01950000
*                                                                  /* * 01960000
*         IF CRT = '1'B THEN                 /*COMMAND REJECT         * 01970000
COMANREJ TM    2(@6),B'10000000'                                  0078  01980000
*               GOTO ERRORA2X;                                          01990000
         BC    01,ERRORA2X                                        0079  02000000
* /*      THIS SECTION TEST FOR THE CHANNEL STATUS ERRORS PROGRAM     * 02010000
* /*      CHECK, PROTECTION CHECK, OR CHAINING CHECK. ERROR           * 02020000
* /*      RECOVERY PROCEDURES ARE DEFINED                             * 02030000
*                                                                  /* * 02040000
*  SECTION4:                                                            02050000
*         IF PCK = '1'B                      /*PROGRAM CHECK ?        * 02060000
*             | PRK = '1'B                   /*PROTECTION CHECK ?     * 02070000
*                | CHC = '1'B THEN           /*CHAINING CHECK ?       * 02080000
SECTION4 TM    13(@6),B'00100000'                                 0080  02090000
         BC    01,@9FC                                            0080  02100000
         TM    13(@6),B'00010000'                                 0080  02110000
         BC    01,@9FB                                            0080  02120000
         TM    13(@6),B'00000001'                                 0080  02130000
         BC    12,@9FA                                            0080  02140000
*                    GO TO ERRORA3X;         /*IF POSITIVE BRANCH     * 02150000
         BC    03,ERRORA3X                                        0081  02160000
*                                            /*    TO RECOVERY        * 02170000
* /*      THIS SECTION TESTS FOR THE CHANNEL STATUS ERROR UNIT        * 02180000
* /*      EXCEPTION (UEX). DEPENDING UPON THE PRESENT CCW AND         * 02190000
* /*      PRESENT COMMAND CHAIN, IF ANY, RECOVERY PROCEDURES ARE      * 02200000
* /*      DEFINED                                                     * 02210000
*                                                                  /* * 02220000
*         IF UEX = '0'B THEN                 /*UNIT EXCEPTION ?       * 02230000
@9FA     TM    12(@6),B'00000001'                                 0082  02240000
*               GOTO CKPREP;             /* CHECK IF PREPARE COMMAND  * 02250000
         BC    08,CKPREP                                          0083  02260000
*         IF COCO='02'X THEN             /* READ COMMAND              * 02270000
         CLI   0(@7),X'02'                                        0084  02280000
*               GOTO CHECKER0;                                          02290000
         BC    08,CHECKER0                                        0085  02300000
*         IF COCO='01'X THEN             /* WRITE COMMAND             * 02310000
         CLI   0(@7),X'01'                                        0086  02320000
*               GOTO ERRORRFW;                                          02330000
         BC    08,ERRORRFW                                        0087  02340000
*                                                                  /* * 02350000
*         GO TO NOERITOK;                    /*NO ERROR CONDITION  -  * 02360000
         BC    15,NOERITOK                                        0088  02370000
*                                            /*    RETURN             * 02380000
* CHECKER0:                                                             02390000
*                                                                  /* * 02400000
*         IF R='1'B THEN                 /* READ SEQUENCE             * 02410000
CHECKER0 TM    32(@6),B'10000000'                                 0089  02420000
*               GOTO ERRORRCP;                                          02430000
         BC    01,ERRORRCP                                        0090  02440000
*         IF W='1'B THEN                 /* WRITE SEQUENCE            * 02450000
         TM    32(@6),B'01000000'                                 0091  02460000
         BC    12,@9F9                                            0091  02470000
*           DO;                                                         02480000
*           IF WR='1'B THEN              /* WRITE EOT, READ RESP M4502* 02490000
         TM    32(@6),B'00001000'                                 0093  02500000
*               GOTO NOERITOK;           /* NO ERROR CONDITION   M4502* 02510000
         BC    01,NOERITOK                                        0094  02520000
*           RTA=STA;                                                    02530000
         MVC   25(3,@6),17(@6)                                    0095  02540000
*           GOTO RETRY1;                                                02550000
         BC    15,RETRY1                                          0096  02560000
*           END;                                                        02570000
*         GO TO NOERITOK;                    /*NO ERROR CONDITION  -  * 02580000
*                                            /*    RETURN             * 02590000
*  CKPREP:                                                              02600000
*         IF COCO='06'X THEN             /* PREPARE COMMAND           * 02610000
CKPREP   CLI   0(@7),X'06'                                        0099  02620000
*               GOTO ERRORRFW;                                          02630000
         BC    08,ERRORRFW                                        0100  02640000
* /*      THIS SECTION TESTS FOR INCORRECT LENGTH (ILH) BUT           * 02650000
* /*      THIS CONDITION IS NOT TREATED AS AN ERROR CONDITION         * 02660000
* INCORLGH:                                                             02670000
*         IF ILH = '1'B THEN                 /*INCORRECT LENGTH ?     * 02680000
INCORLGH TM    13(@6),B'01000000'                                 0101  02690000
*              GO TO NOERITOK;               /*NO ERROR CONDITION  -  * 02700000
         BC    01,NOERITOK                                        0102  02710000
*                                            /*    RETURN             * 02720000
* /*      THIS SECTION TESTS FOR BUSY (BUS), ATTENTION (ATT),         * 02730000
* /*      CONTROL UNIT END (CUE), STATUS MODIFIER (STM) AND           * 02740000
* /*      BRANCHES TO RECOVERY FOR THREE RETRYS                       * 02750000
*                                                                  /* * 02760000
*         IF BUS = '1'B THEN                 /*BUSY ?                 * 02770000
         TM    12(@6),B'00010000'                                 0103  02780000
*              GO TO ERRORA3X;               /*IF POSITIVE BRANCH     * 02790000
         BC    01,ERRORA3X                                        0104  02800000
*                                            /*    TO RECOVERY        * 02810000
*         IF ATT = '1'B THEN                 /*ATTENTION ?            * 02820000
         TM    12(@6),B'10000000'                                 0105  02830000
*              GO TO ERRORA3X;               /*IF POSITIVE BRANCH     * 02840000
         BC    01,ERRORA3X                                        0106  02850000
*                                            /*    TO RECOVERY        * 02860000
*         IF CUE = '1'B THEN                 /*CONTROL UNIT END ?     * 02870000
         TM    12(@6),B'00100000'                                 0107  02880000
*              GO TO ERRORA3X;               /*IF POSITIVE BRANCH     * 02890000
         BC    01,ERRORA3X                                        0108  02900000
*                                            /*    TO RECOVERY        * 02910000
*         IF STM = '1'B THEN                 /*STATUS MODIFIER ?      * 02920000
         TM    12(@6),B'01000000'                                 0109  02930000
*              GO TO ERRORA3X;               /*IF POSITIVE BRANCH     * 02940000
         BC    01,ERRORA3X                                        0110  02950000
*                                            /*    TO RECOVERY        * 02960000
*                                                                       02970000
*                                                                       02980000
*         GOTO NOERITOK;                 /*                      M4502* 02990000
         BC    15,NOERITOK                                        0111  03000000
*                                                                       03010000
*                                                                       03020000
*  ERRORA2X:                                                            03030000
*         IF FECT ='03'X THEN            /* IS THIS A PERMANENT ERROR * 03040000
ERRORA2X CLI   30(@6),X'03'                                       0112  03050000
*            GOTO PERR;                                                 03060000
         BC    08,PERR                                            0113  03070000
*         ELSE GOTO RETRY;               /* RETRY CHAN PROGRAM        * 03080000
         BC    15,RETRY                                           0114  03090000
*                                                                       03100000
*                                                                       03110000
*  ERRORA3X:                                                            03120000
*         IF FECT ='04'X THEN            /* IS THIS A PERM ERROR ?    * 03130000
ERRORA3X CLI   30(@6),X'04'                                       0115  03140000
*            GOTO PERR;                  /* GO SET UP FOR RETURN      * 03150000
         BC    08,PERR                                            0116  03160000
*         ELSE                                                          03170000
*            GOTO RETRY;                 /* RETRY CHAN PROGRAM        * 03180000
         BC    15,RETRY                                           0117  03190000
*                                                                       03200000
*                                                                       03210000
*  ERRORRFW:                                                            03220000
*         CCWA(1:8)=CCWRDSKP(1:8);      /* MOVE IN READ SKIP CCW      * 03230000
ERRORRFW MVC   0(8,@9),CCWRDSKP                                   0118  03240000
*         CCWADAT=DAT1;                                                 03250000
         MVC   1(3,@9),45(@6)                                     0119  03260000
*         CCWB(1:8)=CCWWREOT(1:8);      /* MOVE IN WRITE EOT          * 03270000
         MVC   8(8,@9),CCWWREOT                                   0120  03280000
*         CCWBDAT=EOT;                                                  03290000
         MVC   9(3,@9),37(@6)                                     0121  03300000
*         CCWC(1:8)=CCWRDEOT(1:8);      /* MOVE IN READ EOT           * 03310000
         MVC   16(8,@9),CCWRDEOT                                  0122  03320000
*         CCWCDAT=DAT1;                                                 03330000
         MVC   17(3,@9),45(@6)                                    0123  03340000
*         DISP=25;                      /* POINT TO NEXT AVAILABLE SP * 03350000
         LA    @4,25                                              0124  03360000
*         GOTO MOVECHN;                  /* MOVE IN CHAIN & RETRY     * 03370000
         BC    15,MOVECHN                                         0125  03380000
*                                                                       03390000
*                                                                       03400000
*  ERRORIRR:                                                            03410000
*         CCWA(1:8)=CCWWRNEG(1:8);      /* MOVE WRITE NEGATIVE IN WORK* 03420000
ERRORIRR MVC   0(8,@9),CCWWRNEG                                   0126  03430000
*         CCWADAT=NEG;                                                  03440000
         MVC   1(3,@9),41(@6)                                     0127  03450000
*         R5=STA;                       /* POINT TO USERS CCW CHAIN   * 03460000
         MVC   @TEMP3+1(3),17(@6)                                 0128  03470000
         L     @5,@TEMP3                                          0128  03480000
*    IRR1:IF OP1 = '02'X THEN DO;       /* SEARCH FOR A READ CCW      * 03490000
IRR1     CLI   0(@5),X'02'                                        0129  03500000
         BC    07,@9F8                                            0129  03510000
*         CCWB(1:8)=CCWCHAIN(1:8);      /* WHEN FOUND MOVE IN WORK AR * 03520000
         MVC   8(8,@9),0(@5)                                      0131  03530000
*         RTA=R9;                                                       03540000
         ST    @9,@TEMP4                                          0132  03550000
         MVC   25(3,@6),@TEMP4+1                                  0132  03560000
*         GOTO RETRY;                   /* RETRY IT                   * 03570000
         BC    15,RETRY                                           0133  03580000
*         END;                                                          03590000
*           ELSE;                                                       03600000
@9F8     EQU   *                                                  0135  03610000
*         R5=R5+8;                                                      03620000
@9F7     AH    @5,@D2                                             0136  03630000
*         GOTO IRR1;                    /* LOOP                       * 03640000
         BC    15,IRR1                                            0137  03650000
*                                                                       03660000
*                                                                       03670000
*  ERRORIWC:                                                            03680000
*  ERRORRCP:                                                            03690000
*         RTA=STA;                      /* RETRY ENTIRE CHANNEL PROG  * 03700000
ERRORIWC EQU   *                                                  0138  03710000
ERRORRCP MVC   25(3,@6),17(@6)                                    0138  03720000
*         GOTO RETRY;                   /* DO IT                      * 03730000
         BC    15,RETRY                                           0139  03740000
*                                                                       03750000
*                                                                       03760000
*                                                                       03770000
* ERRORSNO:                                                             03780000
*         IF FECT ='04'X THEN            /* IS THIS A PERM ERROR ?    * 03790000
ERRORSNO CLI   30(@6),X'04'                                       0140  03800000
*            GOTO PERR;                  /* GO SET UP FOR ERR RETURN  * 03810000
         BC    08,PERR                                            0141  03820000
*         ELSE GOTO RETRY;               /* SET UP FOR CHAN PROG RETRY* 03830000
         BC    15,RETRY                                           0142  03840000
*                                                                       03850000
*                                                                       03860000
*  /*THIS PROCEDURE MOVES CCWS FROM USERS "HAIN TO ERP WORK AREA      * 03870000
*                                                                       03880000
*  MOVECHN:                                                             03890000
*         R5=STA;                             /* USERS CCW START ADDR * 03900000
MOVECHN  MVC   @TEMP3+1(3),17(@6)                                 0143  03910000
         L     @5,@TEMP3                                          0143  03920000
*    NEXT:CCWWORK(DISP:DISP+7)=CCWCHAIN(1:8); /* MOVE IN CCW          * 03930000
NEXT     LR    @2,@4                                              0144  03940000
         LA    @A,0(@2,@9)                                        0144  03950000
         BCTR  @A,0                                               0144  03960000
         MVC   0(8,@A),0(@5)                                      0144  03970000
*         IF CHN1 = '1'B THEN DO;             /* IS IT CHAINED? IF YES* 03980000
         TM    4(@5),B'01000000'                                  0145  03990000
         BC    12,@9F6                                            0145  04000000
*         R5=R5+8;                            /* SET UP TO MOVE IN    * 04010000
         AH    @5,@D2                                             0147  04020000
*         DISP=DISP+8;                        /* NEXT CCW             * 04030000
         AH    @4,@D2                                             0148  04040000
*         GOTO NEXT;                          /* GO DO IT             * 04050000
         BC    15,NEXT                                            0149  04060000
*         END;                                                          04070000
*         RTA=R9;                                                       04080000
@9F6     ST    @9,@TEMP4                                          0151  04090000
         MVC   25(3,@6),@TEMP4+1                                  0151  04100000
*         GOTO RETRY;                         /* TRY IT AGAIN         * 04110000
         BC    15,RETRY                                           0152  04120000
*                                                                       04130000
*                                                                       04140000
*  NOERITOK:                                                            04150000
*         SENSBYTE='0000'X;                                             04160000
NOERITOK MVC   2(2,@6),@X10                                       0153  04170000
*         SWITCHES='00'X;                                               04180000
         MVI   32(@6),X'00'                                       0154  04190000
*         SRS='0'B;                                                     04200000
         NI    0(@6),B'11111110'                                  0155  04210000
*         IOBENT='0'B;                                                  04220000
         NI    8(@6),B'10111111'                                  0156  04230000
*         FECT='00'X;                                                   04240000
         MVI   30(@6),X'00'                                       0157  04250000
*         ECI ='0'B;                     /* SET IOBERR TO ZERO        * 04260000
         NI    0(@6),B'11011011'                                  0158  04270000
*         EXC ='0'B;                     /* SET IOBEX BIT TO ZERO     * 04280000
*         CSWFLAGS='0C00'X;              /* SET CSWFLAGS TO NORMAL    * 04290000
         MVC   12(2,@6),@X11                                      0160  04300000
*         GEN(SVC 15);                                                  04310000
         SVC 15                                                         04320000
         DS    0H                                                       04330000
*         GEN(SVC 3);                    /* RETURN TO IOS             * 04340000
         SVC 3                                                          04350000
         DS    0H                                                       04360000
*                                                                       04370000
*                                                                       04380000
*  RETRY:                                                               04390000
*         IF FECT='04'X THEN                                            04400000
RETRY    CLI   30(@6),X'04'                                       0163  04410000
*           GOTO PERR;                                                  04420000
         BC    08,PERR                                            0164  04430000
*         FECT=FECT+1;                   /* UPDATE IOB ERROR COUNT    * 04440000
         LA    @F,1                                               0165  04450000
         SR    @0,@0                                              0165  04460000
         IC    @0,30(0,@6)                                        0165  04470000
         AR    @F,@0                                              0165  04480000
         STC   @F,30(0,@6)                                        0165  04490000
*  RETRY1:                                                              04500000
*         SWITCHES='00'X;                                               04510000
RETRY1   MVI   32(@6),X'00'                                       0166  04520000
*         GEN(SVC 15);                                                  04530000
         SVC 15                                                         04540000
         DS    0H                                                       04550000
*         GEN(SVC 3);                    /* RETURN TO IOS             * 04560000
         SVC 3                                                          04570000
         DS    0H                                                       04580000
*                                                                       04590000
*                                                                       04600000
*  PERR:                                                                04610000
*         ECI ='0'B;                     /* SET IOBERR BIT TO ZERO    * 04620000
PERR     NI    0(@6),B'11011111'                                  0169  04630000
*         SWITCHES='00'X;                                               04640000
         MVI   32(@6),X'00'                                       0170  04650000
*         GEN(SVC 15);                                                  04660000
         SVC 15                                                         04670000
         DS    0H                                                       04680000
*         GEN(SVC 3);                    /* RETURN TO IOS             * 04690000
         SVC 3                                                          04700000
         DS    0H                                                       04710000
*                                                                       04720000
*                                                                       04730000
*         RETURN;                                                       04740000
*  END;                                                                 04750000
@EL01    LR    @1,@C                                              0174  04760000
         L     @0,@SIZ001                                         0174  04770000
         FREEMAIN R,LV=(0),A=(1)                                  0174  04780000
         BCR   15,@E                                              0174  04790000
@DATA1   EQU   *                                                        04800000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           04810000
@1       EQU   01                                                       04820000
@2       EQU   02                                                       04830000
@3       EQU   03                                                       04840000
@4       EQU   04                                                       04850000
@5       EQU   05                                                       04860000
@6       EQU   06                                                       04870000
@7       EQU   07                                                       04880000
@8       EQU   08                                                       04890000
@9       EQU   09                                                       04900000
@A       EQU   10                                                       04910000
@B       EQU   11                                                       04920000
@C       EQU   12                                                       04930000
@D       EQU   13                                                       04940000
@E       EQU   14                                                       04950000
@F       EQU   15                                                       04960000
@D1      DC    H'-8'                                                    04970000
@D2      DC    H'8'                                                     04980000
         DS    0F                                                       04990000
@SIZ001  DC    AL1(&SPN)                                                05000000
         DC    AL3(@DATEND-@DATD)                                       05010000
         DS    0F                                                       05020000
@X10     DC    X'0000'                                                  05030000
@X11     DC    X'0C00'                                                  05040000
         DS    0D                                                       05050000
@DATA    EQU   *                                                        05060000
P        EQU   00000000            FULLWORD INTEGER                     05070000
R0       EQU   00000000            FULLWORD POINTER REGISTER            05080000
R1       EQU   00000001            FULLWORD POINTER REGISTER            05090000
R2       EQU   00000002            FULLWORD POINTER REGISTER            05100000
R3       EQU   00000003            FULLWORD POINTER REGISTER            05110000
R4       EQU   00000004            FULLWORD INTEGER REGISTER            05120000
R5       EQU   00000005            FULLWORD POINTER REGISTER            05130000
R6       EQU   00000006            FULLWORD POINTER REGISTER            05140000
R7       EQU   00000007            3  BYTE  POINTER REGISTER            05150000
R8       EQU   00000008            FULLWORD POINTER REGISTER            05160000
R9       EQU   00000009            3  BYTE  POINTER REGISTER            05170000
R10      EQU   00000010            FULLWORD INTEGER REGISTER            05180000
R11      EQU   00000011            FULLWORD INTEGER REGISTER            05190000
R12      EQU   00000012            FULLWORD INTEGER REGISTER            05200000
R13      EQU   00000013            FULLWORD INTEGER REGISTER            05210000
R14      EQU   00000014            FULLWORD INTEGER REGISTER            05220000
R15      EQU   00000015            FULLWORD INTEGER REGISTER            05230000
DISP     EQU   00000004            FULLWORD INTEGER REGISTER            05240000
REQUEL   EQU   00000000            16 BYTE(S) ON WORD                   05250000
RQELNK   EQU   REQUEL+00000000     2 BYTE(S)                            05260000
RQEUCB   EQU   REQUEL+00000002     HALFWORD POINTER                     05270000
RQEIOB   EQU   REQUEL+00000004     FULLWORD POINTER                     05280000
RQEPRI   EQU   REQUEL+00000008     1 BYTE(S)                            05290000
RQEDEB   EQU   REQUEL+00000009     3  BYTE  POINTER ON WORD+1           05300000
PROTKEY  EQU   REQUEL+00000012     1 BYTE(S)                            05310000
RQETCB   EQU   REQUEL+00000013     3  BYTE  POINTER ON WORD+1           05320000
IOB      EQU   00000000            320 BIT(S) ON BYTE                   05330000
FLAGS1   EQU   IOB+00000000        8 BIT(S)                             05340000
CPD      EQU   IOB+00000000        2 BIT(S)                             05350000
ECI      EQU   IOB+00000000        1 BIT(S)                             05360000
MF1      EQU   IOB+00000000        1 BIT(S)                             05370000
MF2      EQU   IOB+00000000        1 BIT(S)                             05380000
EXC      EQU   IOB+00000000        1 BIT(S)                             05390000
UNR      EQU   IOB+00000000        1 BIT(S)                             05400000
SRS      EQU   IOB+00000000        1 BIT(S)                             05410000
FLAGS2   EQU   IOB+00000001        8 BIT(S)                             05420000
HIO      EQU   IOB+00000001        1 BIT(S)                             05430000
SFL      EQU   IOB+00000001        1 BIT(S)                             05440000
PFL      EQU   IOB+00000001        1 BIT(S)                             05450000
RHA      EQU   IOB+00000001        1 BIT(S)                             05460000
OEF      EQU   IOB+00000001        1 BIT(S)                             05470000
CCH      EQU   IOB+00000001        1 BIT(S)                             05480000
DEF      EQU   IOB+00000001        1 BIT(S)                             05490000
QSF      EQU   IOB+00000001        1 BIT(S)                             05500000
SENSBYTE EQU   IOB+00000002        16 BIT(S)                            05510000
CRT      EQU   IOB+00000002        1 BIT(S)                             05520000
IRD      EQU   IOB+00000002        1 BIT(S)                             05530000
BOC      EQU   IOB+00000002        1 BIT(S)                             05540000
ECK      EQU   IOB+00000002        1 BIT(S)                             05550000
DCK      EQU   IOB+00000002        1 BIT(S)                             05560000
OVR      EQU   IOB+00000002        1 BIT(S)                             05570000
LDA      EQU   IOB+00000002        1 BIT(S)                             05580000
TOT      EQU   IOB+00000002        1 BIT(S)                             05590000
USB      EQU   IOB+00000003        8 BIT(S)                             05600000
ECD      EQU   IOB+00000004        8 BIT(S)                             05610000
ECA      EQU   IOB+00000005        24 BIT(S)                            05620000
FLAGS3   EQU   IOB+00000008        8 BIT(S)                             05630000
A00000   EQU   IOB+00000008        1 BIT(S)                             05640000
IOBENT   EQU   IOB+00000008        1 BIT(S)                             05650000
A00001   EQU   IOB+00000008        6 BIT(S)                             05660000
CSW      EQU   IOB+00000009        56 BIT(S)                            05670000
CAD      EQU   IOB+00000009        24 BIT(S)                            05680000
ATT      EQU   IOB+00000012        1 BIT(S)                             05690000
STM      EQU   IOB+00000012        1 BIT(S)                             05700000
CUE      EQU   IOB+00000012        1 BIT(S)                             05710000
BUS      EQU   IOB+00000012        1 BIT(S)                             05720000
CED      EQU   IOB+00000012        1 BIT(S)                             05730000
DED      EQU   IOB+00000012        1 BIT(S)                             05740000
UCK      EQU   IOB+00000012        1 BIT(S)                             05750000
UEX      EQU   IOB+00000012        1 BIT(S)                             05760000
PCI      EQU   IOB+00000013        1 BIT(S)                             05770000
ILH      EQU   IOB+00000013        1 BIT(S)                             05780000
PCK      EQU   IOB+00000013        1 BIT(S)                             05790000
PRK      EQU   IOB+00000013        1 BIT(S)                             05800000
CDC      EQU   IOB+00000013        1 BIT(S)                             05810000
CCC      EQU   IOB+00000013        1 BIT(S)                             05820000
ICC      EQU   IOB+00000013        1 BIT(S)                             05830000
CHC      EQU   IOB+00000013        1 BIT(S)                             05840000
RCT      EQU   IOB+00000014        16 BIT(S)                            05850000
SIO      EQU   IOB+00000016        8 BIT(S)                             05860000
UNS      EQU   IOB+00000016        2 BIT(S)                             05870000
CC       EQU   IOB+00000016        2 BIT(S)                             05880000
UNT      EQU   IOB+00000016        4 BIT(S)                             05890000
STA      EQU   IOB+00000017        24 BIT(S)                            05900000
UKN      EQU   IOB+00000020        8 BIT(S)                             05910000
DCA      EQU   IOB+00000021        24 BIT(S)                            05920000
RPM      EQU   IOB+00000024        8 BIT(S)                             05930000
RTA      EQU   IOB+00000025        3  BYTE  POINTER                     05940000
BCI      EQU   IOB+00000028        16 BIT(S)                            05950000
FECT     EQU   IOB+00000030        1 BYTE(S)                            05960000
SECT     EQU   IOB+00000031        1 BYTE(S)                            05970000
MHRCCWS  EQU   IOB+00000032        4  BYTE  POINTER                     05980000
SWITCHES EQU   IOB+00000032        1 BYTE(S)                            05990000
R        EQU   IOB+00000032        1 BIT(S)                             06000000
W        EQU   IOB+00000032        1 BIT(S)                             06010000
E        EQU   IOB+00000032        1 BIT(S)                             06020000
FTRS     EQU   IOB+00000032        1 BIT(S)                             06030000
WR       EQU   IOB+00000032        1 BIT(S)                             06040000
A00002   EQU   IOB+00000033        3  BYTE  POINTER                     06050000
EOT      EQU   IOB+00000036        4  BYTE  POINTER                     06060000
NEG      EQU   IOB+00000040        4  BYTE  POINTER                     06070000
DAT1     EQU   IOB+00000044        4  BYTE  POINTER                     06080000
CSWFLAGS EQU   00000012            2 BYTE(S)                            06090000
CCW      EQU   00000000            64 BIT(S) ON BYTE                    06100000
COCO     EQU   CCW+00000000        8 BIT(S)                             06110000
DAD      EQU   CCW+00000001        24 BIT(S)                            06120000
FLAG12   EQU   CCW+00000004        8 BIT(S)                             06130000
A00003   EQU   CCW+00000004        3 BIT(S)                             06140000
SKIP     EQU   CCW+00000004        1 BIT(S)                             06150000
FLOBS    EQU   CCW+00000004        4 BIT(S)                             06160000
BLA      EQU   CCW+00000005        8 BIT(S)                             06170000
COU      EQU   CCW+00000006        16 BIT(S)                            06180000
CCWCHAIN EQU   00000000            8 BYTE(S)                            06190000
CCW1     EQU   CCWCHAIN+00000000   8 BYTE(S)                            06200000
OP1      EQU   CCWCHAIN+00000000   1 BYTE(S)                            06210000
BUFADR1  EQU   CCWCHAIN+00000001   3  BYTE  POINTER                     06220000
FLAGS0   EQU   CCWCHAIN+00000004   8 BIT(S)                             06230000
A00004   EQU   CCWCHAIN+00000004   1 BIT(S)                             06240000
CHN1     EQU   CCWCHAIN+00000004   1 BIT(S)                             06250000
A00005   EQU   CCWCHAIN+00000004   6 BIT(S)                             06260000
A00006   EQU   CCWCHAIN+00000005   1 BYTE(S)                            06270000
CNT1     EQU   CCWCHAIN+00000006   2 BYTE(S)                            06280000
CCWWORK  EQU   00000000            40 BYTE(S) ON DWORD                  06290000
CCWA     EQU   CCWWORK+00000000    8 BYTE(S)                            06300000
A00007   EQU   CCWWORK+00000000    1 BYTE(S)                            06310000
CCWADAT  EQU   CCWWORK+00000001    3  BYTE  POINTER                     06320000
A00008   EQU   CCWWORK+00000004    4 BYTE(S)                            06330000
CCWB     EQU   CCWWORK+00000008    8 BYTE(S)                            06340000
A00009   EQU   CCWWORK+00000008    1 BYTE(S)                            06350000
CCWBDAT  EQU   CCWWORK+00000009    3  BYTE  POINTER                     06360000
A00010   EQU   CCWWORK+00000012    4 BYTE(S)                            06370000
CCWC     EQU   CCWWORK+00000016    8 BYTE(S)                            06380000
A00011   EQU   CCWWORK+00000016    1 BYTE(S)                            06390000
CCWCDAT  EQU   CCWWORK+00000017    3  BYTE  POINTER                     06400000
A00012   EQU   CCWWORK+00000020    4 BYTE(S)                            06410000
CCWD     EQU   CCWWORK+00000024    8 BYTE(S)                            06420000
CCWF     EQU   CCWWORK+00000032    8 BYTE(S)                            06430000
WRITEBUF EQU   00000000            120 BYTE(S)                          06440000
DADBUF   EQU   00000000            1 BYTE(S)                            06450000
         DS    00000000C                                                06460000
@L       EQU   3                                                        06470000
@DATD    DSECT                                                          06480000
         DS    00000000C                                                06490000
@TEMPS   DS    0F                                                       06500000
@TEMP3   DC    F'0'                                                     06510000
@TEMP4   DC    F'0'                                                     06520000
IGE0119I CSECT                                                   XM4924 06530000
*                                                                       06540000
ERPATCH  DC    20XL2'0700'                                              06550000
*********************************************************************** 06560000
*        READ SKIP AND READ REPEAT                                      06570000
CCWRDSKP CCW   2,*,X'30',80             READ SKIP                 M4502 06580000
CCWWRNEG CCW   1,*,X'60',5             WRTIE N                    M4502 06590000
*        FTR'S SEQUENCE                                                 06600000
CCWWREOT CCW   1,*,X'60',5              WRITE EOT                 M4502 06610000
CCWRDEOT CCW   2,*,X'60',5              READ                      M4502 06620000
*        ENABLE                                                         06630000
CCWENABL CCW   X'27',0,X'60',1          ENABLE                    M4502 06640000
*********************************************************************** 06650000
*                                                                       06660000
*                                                                       06670000
*********************************************************************** 06680000
*********************************************************************** 06690000
*                                                                       06700000
@DATD DSECT                                                      XM4924 06710000
@DATD    DSECT                                                          06720000
@DATEND  EQU   *                                                        06730000
IGE0119I CSECT ,                                                        06740000
@9FF     EQU   ERRORSNO                                                 06750000
@9FE     EQU   ERRORIRR                                                 06760000
@9FD     EQU   ERRORSNO                                                 06770000
@9FC     EQU   ERRORA3X                                                 06780000
@9FB     EQU   ERRORA3X                                                 06790000
@9F9     EQU   NOERITOK                                                 06800000
         END                                                            06810000
