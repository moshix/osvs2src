        MACRO                                                           00050000
&MSGNO  BLSDMSGG &MSG                                                   00100000
.*                                                                      00150000
.*** THIS MACRO IS WRITTEN FOR @G57LPSR                                 00200000
.*                                                                      00250000
.** START OF SPECIFICATIONS ******************************************* 00300000
.*                                                                    * 00350000
.*    MACRO NAME: BLSDMSGG                                            * 00400000
.*                                                                    * 00450000
.*    DESCRIPTIVE NAME: MESSAGE SKELETON AND MESSAGE CSECT GENERATOR  * 00500000
.*                                                                    * 00550000
.*    COPYRIGHT: NONE                                                 * 00600000
.*                                                                    * 00650000
.*    STATUS: SU57 RELEASE 1, LEVEL 0                                 * 00700000
.*                                                                    * 00750000
.*    FUNCTION: CONSTRUCT MESSAGE SKELETONS FROM INPUT MESSAGE        * 00800000
.*              STRINGS, OR CONTRUCT THE CROSS REFERENCE TABLES       * 00850000
.*              FOR THE MESSAGE CSECT BEING GENERATED IF THERE        * 00900000
.*              IS NO INPUT MESSAGE STRING.                           * 00950000
.*                                                                    * 01000000
.*    NOTES:                                                          * 01050000
.*                                                                    * 01100000
.*      DEPENDENCIES:   NONE                                          * 01150000
.*                                                                    * 01200000
.*      RESTRICTIONS:   NONE                                          * 01250000
.*                                                                    * 01300000
.*      REGISTER CONVENTIONS: N/A                                     * 01350000
.*                                                                    * 01400000
.*      PATCH LABEL:  GENERATES LABEL: PATCHLBL                       * 01450000
.*                                                                    * 01500000
.*      SERIALIZATION REQUIREMENTS: NONE                              * 01550000
.*                                                                    * 01600000
.*    MODULE TYPE: DATA AREA GENERATION MACRO                         * 01650000
.*                                                                    * 01700000
.*      PROCESSOR: ASSEMBLER F                                        * 01750000
.*                                                                    * 01800000
.*      MODULE SIZE: N/A                                              * 01850000
.*                                                                    * 01900000
.*      ATTRIBUTES: N/A                                               * 01950000
.*                                                                    * 02000000
.*    ENTRY POINT OR ALIAS: BLSDMSGG                                  * 02050000
.*                                                                    * 02100000
.*      PURPOSE: (SEE FUNCTION)                                       * 02150000
.*                                                                    * 02200000
.*      LINKAGE: VIA ASSEMBLER MACRO CALL                             * 02250000
.*                                                                    * 02300000
.*    INVOCATION SYNTAX:                                              * 02350000
.*                                                                    * 02400000
.*        MSGNO    BLSDMSGG   'MSGTXT'                                * 02450000
.*                                                                    * 02500000
.*      MSGNO                                                         * 02550000
.*        IS A 6-CHARACTER LABEL OF THE FORM: CNNNNN, WHERE "C" IS    * 02600000
.*        ANY ALPHABETIC CHARACTER AND IS NOT USED BY THIS MACRO,     * 02650000
.*        AND "NNNNN" IS A FIVE DIGIT MESSAGE NUMBER BY WHICH THE     * 02700000
.*        MESSAGE CONSTRUCTED BY THIS MACRO WILL BE REFERENCED.       * 02750000
.*        THE MESSAGE NUMBERS IN A MESSAGE CSECT MUST BE ENTERED      * 02800000
.*        IN ASCENDING SEQUENCE; LEADING ZEROS MAY NOT BE OMITTED.    * 02850000
.*                                                                    * 02900000
.*      'MSGTXT'                                                      * 02950000
.*        IS THE TEXT OF THE MESSAGE TO BE CONSTRUCTED. INSERT        * 03000000
.*        LOCATIONS IN THE MESSAGE ARE IDENTIFIED BY A DOUBLE COMMA,  * 03050000
.*        THAT IS, ",,,,," WOULD INDICATE TWO INSERTS BACK TO BACK,   * 03100000
.*        FOLLOWED BY THE CHARACTER COMMA. THE MAXIMUM LENGTH OF      * 03150000
.*        THE MESSAGE TEXT (NOT COUNTING INSERTS) GENERATED BY THIS   * 03200000
.*        MACRO IS 255 CHARACTERS; SEE THE PROLOGUE FOR MODULE        * 03250000
.*        BLSDMSG0 FOR RESTRICTION ON MAXIMUM OUTPUT MESSAGE LENGTH.  * 03300000
.*        MAXIMUM NUMBER OF INSERTS ALLOWED PER MESSAGE CONSTRUCTION  * 03350000
.*        IS 255 INSERTS PER MESSAGE.                                 * 03400000
.*                                                                    * 03450000
.*    OUTPUT OF MACRO:                                                * 03500000
.*                                                                    * 03550000
.*      GIVEN THE INPUT MACRO CALL:                                   * 03600000
.*                                                                    * 03650000
.*        Q05301 BLSDMSGG ' BLS05301I NO PROBLEMS EXIST            X  * 03700000
.*                        FOR RANGE ,,,,:,,,,'                        * 03750000
.*                                                                    * 03800000
.*      THIS MACRO WILL GENERATE:                                     * 03850000
.*                                                                    * 03900000
.*        BLS05301  DC    H'4'             NUMBER OF INSERTS.         * 03950000
.*                  DC    AL1(0),AL1(0)    RESERVED.                  * 04000000
.*                  DC    AL1(0),AL1(0)    RESERVED.                  * 04050000
.*                  DC    AL1(0),AL1(0)    RESERVED.                  * 04100000
.*                  DC    AL1(0),AL1(0)    RESERVED.                  * 04150000
.*                  DC    AL1(39)          LENGTH OF TEXT SEGMENT.    * 04200000
.*                  DC    C' BLS05301I NO PROBLEMS EXIST FOR RANGE '  * 04250000
.*                  DC    AL1(0)           LENGTH OF TEXT SEGMENT.    * 04300000
.*                  DC    AL1(1)           LENGTH OF TEXT SEGMENT.    * 04350000
.*                  DC    C':'             TEXT SEGMENT.              * 04400000
.*                  DC    AL1(0)           LENGTH OF TEXT SEGMENT.    * 04450000
.*                  DC    AL1(0)           LENGTH OF TEXT SEGMENT.    * 04500000
.*                                                                    * 04550000
.*      SEE "PROCESSING DESCRIPTION" FOR DISCUSSION OF HOW THE        * 04600000
.*      MACRO WORKS TO PRODUCE THIS OUTPUT, AND FOR THE MACRO'S       * 04650000
.*      PROCESSING IF THE 'MSGTXT' IS OMITTED.                        * 04700000
.*                                                                    * 04750000
.*    EXIT-NORMAL:  ASSEMBLER LANGUAGE STATEMENTS ARE PRODUCED        * 04800000
.*                  FOR THE MESSAGE, OR ASSEMBLER LANGUAGE            * 04850000
.*                  STATEMENTS ARE PRODUCED FOR THE CROSS REFERENCE   * 04900000
.*                  TABLES.                                           * 04950000
.*                                                                    * 05000000
.*    EXIT-ERROR:   THE FOLLOWING MNOTE STATEMENTS CAN BE PRODUCED:   * 05050000
.*                                                                    * 05100000
.*      12,LABEL MUST BE ONE ALPHABETIC AND FIVE DIGITS.              * 05150000
.*                                                                    * 05200000
.*      12,LABELS MUST BE ENTERED IN ASCENDING SEQUENCE.              * 05250000
.*                                                                    * 05300000
.*      12,UNKNOWN CONDITION: SINGLE QUOTATION MARK DETECTED.         * 05350000
.*                                                                    * 05400000
.*    EXTERNAL REFERENCES: N/A                                        * 05450000
.*                                                                    * 05500000
.*                                                                    * 05550000
.*      DATA AREAS:  SEE LOCAL AND GLOBAL SET SYMBOLS.                * 05600000
.*                                                                    * 05650000
.*      CONTROL BLOCKS: N/A                                           * 05700000
.*                                                                    * 05750000
.*    TABLES/WORKAREAS: SEE LOCAL AND GLOBAL SET SYMBOLS.             * 05800000
.*                                                                    * 05850000
.*    MACROS: N/A                                                     * 05900000
.*                                                                    * 05950000
.*    CHANGE ACTIVITY:                                                * 06000000
.*      THIS MODULE IS WRITTEN FOR @G57LPSR.                          * 06050000
.*                                                                    * 06100000
.*    MESSAGES ISSUED: SEE "EXIT-ERROR" ABOVE.                        * 06150000
.*                                                                    * 06200000
.*    ABEND CODES:  N/A                                               * 06250000
.*                                                                    * 06300000
.*    DATA SETS ACCESSED:   NONE                                      * 06350000
.*                                                                    * 06400000
.*    PROCESSING DESCRIPTION:                                         * 06450000
.*                                                                    * 06500000
.*       NOTE: LOCAL SYMBOLS ARE USED PRIMARILY TO PRODUCE            * 06550000
.*             THE INDIVIDUAL MESSAGES. THE GLOBAL SYMBOLS            * 06600000
.*             ARE USED TO STORE INFORMATION UNTIL THE CROSS          * 06650000
.*             REFERENCE TABLES ARE TO BE PRODUCED.                   * 06700000
.*                                                                    * 06750000
.*     1. IF THIS IS THE FIRST USE OF THE MACRO IN THIS MESSAGE       * 06800000
.*        CSECT, OUTPUT THE ASSEMBLER LANGUAGE STATEMENTS:            * 06850000
.*                    DC    A(MSGINDX)                                * 06900000
.*                    DC    CL8'&SYSECT'                              * 06950000
.*                    DC    CL8'&SYSDATE'                             * 07000000
.*                    DC    CL8'&SYSTIME'                             * 07050000
.*        OTHERWISE, BYPASS THIS STEP. THE FIRST FOUR BYTES OF        * 07100000
.*        EACH MESSAGE CSECT MUST BE THE ADDRESS OF THE               * 07150000
.*        COMPONENT CROSS REFERENCE INDEX TABLE.                      * 07200000
.*                                                                    * 07250000
.*     2. IF THE MESSAGE TEXT HAS BEEN OMITTED ON THIS MACRO CALL,    * 07300000
.*        THIS IS AN INDICATION THAT THE CROSS REFERENCE INDEX        * 07350000
.*        TABLES ARE TO BE PRODUCED (THIS MUST ALWAYS BE THE LAST     * 07400000
.*        MACRO CALL IN ANY MESSAGE CSECT). GOTO STEP 4.              * 07450000
.*                                                                    * 07500000
.*     3. OTHERWISE, THE MACRO SHOULD GENERATE ASSEMBLER LANGUAGE     * 07550000
.*        STATEMENTS DESCRIBING THE INPUT MESSAGE.                    * 07600000
.*                                                                    * 07650000
.*        A. ENSURE THAT THE INPUT MESSAGE NUMBER IS SIX CHARACTERS,  * 07700000
.*           THE LAST FIVE ARE DIGITS, AND IS LARGER THAN ANY OTHER   * 07750000
.*           MESSAGE NUMBER PREVIOUSLY ENTERED.                       * 07800000
.*                                                                    * 07850000
.*        B. BREAK THE MESSAGE NUMBER "NNNNN" UP INTO THREE SECTIONS, * 07900000
.*           THAT IS, "XXYZZ", WHERE "XX" IS USED AS THE INDEX        * 07950000
.*           TO THE COMPONENT CROSS REFERENCE INDEX TABLE, "Y" IS     * 08000000
.*           USED AS THE INDEX TO THE SUBCOMPONENT CROSS REFERENCE    * 08050000
.*           INDEX TABLE, AND "ZZ" IS USED AS THE INDEX TO THE        * 08100000
.*           SUB-SUBCOMPONENT CROSS REFERENCE INDEX TABLE.            * 08150000
.*                                                                    * 08200000
.*        C. SAVE THE MESSAGE NUMBER IN GLOBAL SYMBOL &MSGID,         * 08250000
.*           SAVE THE "XX" IN GLOBAL SYMBOL &MSGCP, "Y" IN &MSGSCP,   * 08300000
.*           AND "ZZ" IN &MSGSSCP. SAVE THE MAXIMUM "XX" ENTERED      * 08350000
.*           IN GLOBAL SYMBOL &MAXCP, SAVE THE MAXIMUM "Y" ENTERED    * 08400000
.*           FOR EACH "XX" IN &MAXSCP, AND SAVE THE MAXIMUM "ZZ"      * 08450000
.*           ENTERED FOR EACH "Y" FOR EACH "XX" IN &MACSSCP.          * 08500000
.*                                                                    * 08550000
.*        D. SCAN THE INPUT 'MSGTXT' FOR INSERT LOCATIONS (DOUBLE     * 08600000
.*           COMMAS AND FOR DOUBLE QUOTES. BREAK THE INPUT 'MSGTXT'   * 08650000
.*           INTO SEGMENTS, WHERE THE NUMBER OF SEGMENTS WILL         * 08700000
.*           ALWAYS BE ONE MORE THAN THE NUMBER OF INSERTS IN THE     * 08750000
.*           MESSAGE. MESSAGE SEGMENTS MAY BE OF ZERO LENGTH, WHICH   * 08800000
.*           WOULD OCCUR IF TWO INSERTS ARE FOUND BACK TO BACK.       * 08850000
.*           SAVE THE INFORMATION CONCERNING THE NUMBER OF INSERTS,   * 08900000
.*           THE STARTING LOCATION OF EACH MESSAGE SEGMENT, AND       * 08950000
.*           THE LENGTH OF EACH MESSAGE SEGMENT INTO LOCAL SYMBOLS    * 09000000
.*           &NINSRT, &LOCTXT, AND &LENTXT RESPECTIVELY. FOR EACH     * 09050000
.*           MESSAGE SEGMENT, SAVE THE NUMBER OF DOUBLE QUOTES        * 09100000
.*           IT CONTAINS IN LOCAL SYMBOL &NDQTXT.                     * 09150000
.*                                                                    * 09200000
.*        E. AT THE END OF THE TEXT SCAN, USE THE INFORMATION         * 09250000
.*           ACCUMULATED TO OUTPUT THE ASSEMBLER LANGUAGE             * 09300000
.*           STATEMENTS WHICH DESCRIBE THE ENTIRE MESSAGE.            * 09350000
.*           FIRST IS THE NUMBER OF INSERTS IN THE ENTIRE MESSAGE.    * 09400000
.*           THEN, FOR EACH INSERT, RESERVE ONE HALFWORD.             * 09450000
.*           FINALLY, FOR EACH MESSAGE SEGMENT, OUTPUT ITS LENGTH     * 09500000
.*           FOLLOWED BY THE MESSAGE TEXT. IF THE MESSAGE SEGMENT     * 09550000
.*           TEXT LENGTH IS ZERO, THE MESSAGE SEGMENT TEXT IS         * 09600000
.*           BYPASSED. IF THE MESSAGE SEGMENT TEXT CONTAINS           * 09650000
.*           ONE OR MORE DOUBLE QUOTES, REDUCE THE LENGTH OF          * 09700000
.*           THE MESSAGE SEGMENT BY ONE FOR EACH DOUBLE QUOTE.        * 09750000
.*                                                                    * 09800000
.*        F. EXIT FROM THE MACRO.                                     * 09850000
.*                                                                    * 09900000
.*     4. THE INPUT 'MSGTXT' WAS OMITTED; THEREFORE, THIS IS THE      * 09950000
.*        END OF THIS MESSAGE CSECT. PRODUCE THE CROSS REFERENCE      * 10000000
.*        TABLES.                                                     * 10050000
.*                                                                    * 10100000
.*        A. PRODUCE A PATCH AREA WITH THE LABEL "PATCHLBL" WHICH     * 10150000
.*           IS 10% OF THE SIZE OF ALL THE PRECEEDING MESSAGES.       * 10200000
.*                                                                    * 10250000
.*        B. PRODUCE THE COMPONENT CROSS REFERENCE TABLE. THIS        * 10300000
.*           CONSISTS OF THE NUMBER OF ENTRIES (INCLUDING             * 10350000
.*           THE ZERO ENTRIES) IN THIS TABLE, FOLLOWED BY PRODUCTION  * 10400000
.*           OF A TABLE ENTRY. IF A MESSAGE NUMBER WITH THE VALUE     * 10450000
.*           "XX" EXISTS, PRODUCE AN ADCON FOR ITS SUBCOMPONENT       * 10500000
.*           TABLE; OTHERWISE, PRODUCE A ZERO. ENTRIES RANGE FROM     * 10550000
.*           INDEX VALUE 0 TO &MAXCP.                                 * 10600000
.*                                                                    * 10650000
.*        C. FOR EACH "XX" ENTRY WHICH EXISTS, PRODUCE THE            * 10700000
.*           SUBCOMPONENT TABLE. THIS CONSISTS OF THE NUMBER          * 10750000
.*           OF ENTRIES (INCLUDING ZERO VALUES) IN THIS TABLE,        * 10800000
.*           FOLLOWED BY PRODUCTION OF THE TABLE ENTRIES. IF          * 10850000
.*           A MESSAGE NUMBER WITH THE VALUE "XX" AND "Y" EXISTS,     * 10900000
.*           PRODUCE AN ADCON FOR ITS SUB-SUBCOMPONENT TABLE;         * 10950000
.*           OTHERWISE, PRODUCE A ZERO. ENTRIES RANGE FROM AN         * 11000000
.*           INDEX VALUE OF 0 TO &MAXSCP FOR THIS VALUE OF "XX".      * 11050000
.*                                                                    * 11100000
.*        D. FOR EACH "XX" AND "Y" ENTRY WHICH EXISTS, PRODUCE THE    * 11150000
.*           SUB-SUBCOMPONENT TABLE. THIS CONSISTS OF THE NUMBER      * 11200000
.*           OF ENTRIES (INCLUDING ZERO VALUES) IN THIS TABLE,        * 11250000
.*           FOLLOWED BY PRODUCTION OF THE TABLE ENTRIES. IF A        * 11300000
.*           MESSAGE NUMBER WITH THE VALUES "XX" AND "Y" AND "ZZ"     * 11350000
.*           EXISTS, PRODUCE AN ADCON TO THE MESSAGE SKELETON         * 11400000
.*           PREVIOUSLY PRODUCED BY A PREVIOUS MACRO CALL;            * 11450000
.*           OTHERWISE, PRODUCE A ZERO. ENTRIES RANGE FROM AN         * 11500000
.*           INDEX VALUE OF 0 TO &MAXSSCP FOR THIS FALUE OF "XX"      * 11550000
.*           FOR THIS VALUE OF "Y".                                   * 11600000
.*                                                                    * 11650000
.*        E. FOLLOWING PRODUCTION OF ALL CROSS REFERENCE TABLES,      * 11700000
.*           EXIT THE MACRO.                                          * 11750000
.*                                                                    * 11800000
.**** END OF SPECIFICATIONS ******************************************* 11850000
         LCLA  &LOC           CURRENT &TEXT SCAN INDEX.                 11900000
         LCLA  &NINSRT        TOTAL NUMBER OF INSERT LOCATIONS FOUND.   11950000
         LCLA  &LOCTXT(255)   TEXT SEGMENT N STARTING INDEX.            12000000
         LCLA  &LENTXT(255)   TEXT SEGMENT N LENGTH.                    12050000
         LCLA  &NDQTXT(255)   NUMBER OF DOUBLE QUOTES IN TEXT SEGMENT N 12100000
         LCLA  &NDQ           NUMBER OF DOUBLE QUOTES COUNTER.          12150000
         LCLA  &LMSG          LENGTH OF ENTIRE MESSAGE.                 12200000
         LCLC  &TEXT          TEXT OF MESSAGE.                          12250000
         LCLA  &LTEXT         LENGTH OF TEXT OF MESSAGE.                12300000
         LCLC  &SEG           TEXT SEGMENT.                             12350000
         LCLA  &LSEG          LENGTH OF TEXT SEGMENT.                   12400000
         LCLA  &MSGLEN        LENGTH OF CONSTRUCTED MESSAGE.            12450000
         LCLA  &CNT           LOOP COUNTER.                             12500000
         LCLA  &FNLLEN        FINAL LENGTH OF TEXT SEQMENT N.           12550000
         LCLC  &TMSGID        TEMPORARY MESSAGE IDENTIFIER.             12600000
         LCLA  &TNMSGID       TEMPORARY NUMERIC MESSAGE IDENTIFIER.     12650000
         LCLC  &TMSGC         TEMPORARY CHARACTER(S) OF THE MESSAGE ID. 12700000
         LCLA  &COMP          COMPONENT NUMBER.                         12750000
         LCLA  &SCOMP         SUBCOMPONENT NUMBER.                      12800000
         LCLA  &SSCOMP        SUB-SUBCOMPONENT NUMBER.                  12850000
         LCLC  &LABEL         LABEL FOR MESSAGE IDENTIFIERS.            12900000
.*                                                                      12950000
.*******************************************************************    13000000
.*  MESSAGE IDENTIFIERS ARE INPUT THROUGH &MSGNO AS CXXYZZ.        *    13050000
.*    C  - ANY ALPHABETIC CHARACTER. IT IS STRIPPED OFF AND        *    13100000
.*         THROWN AWAY. IT IS USED BECAUSE THE ASSEMBLER INSISTS   *    13150000
.*         THAT A LABEL STARTS WITH AN ALPHABETIC.                 *    13200000
.*    XX - IDENTIFIES THE COMPONENT BLOCK OF THE SET OF MESSAGES.  *    13250000
.*    Y  - IDENTIFIES THE SUBCOMPONENT BLOCK OF THE SET OF         *    13300000
.*         MESSAGES.                                               *    13350000
.*    ZZ - IDENTIFIES THE SUB-SUBCOMPONENT BLOCK OF THE SET OF     *    13400000
.*         MESSAGES.                                               *    13450000
.*******************************************************************    13500000
.*                                                                      13550000
         GBLA  &MAXID         MAXIMUM &MSGID ENTERED.                   13600000
         GBLA  &MSGID(1000)   ASCENDING SEQUENCE OF MESSAGE IDS.        13650000
         GBLA  &NMSGS         NUMBER OF MESSAGES ENTERED.               13700000
         GBLA  &MSGCP(1000)   COMPONENT NUMBER OF MESSAGE N.            13750000
         GBLA  &MSGSCP(1000)  SUBCOMPONENT NUMBER OF MESSAGE N.         13800000
         GBLA  &MSGSSCP(1000) SUB-SUBCOMPONENT NUMBER OF MESSAGE N.     13850000
         GBLA  &FIRST         FIRST TIME SWITCH.                        13900000
         GBLA  &MAXCP         MAX COMPONENT NUMBER ENTERED. FOR         13950000
.*                            EXAMPLE, THE MAXIMUM COMPONENT NUMBER     14000000
.*                            ENTERED MIGHT BE 6.                       14050000
         GBLA  &MAXSCP(100)   MAX SUBCOMPONENT NUMBER ENTERED FOR EACH  14100000
.*                            COMPONENT. FOR EXAMPLE, FOR COMPONENT     14150000
.*                            05, THE MAXIMUM SUBCOMPONENT NUMBER       14200000
.*                            ENTERED MIGHT BE 4.                       14250000
         GBLA  &MAXSSCP(1000) MAX SUB-SUBCOMPCOMPONENT NUMBER ENTERED   14300000
.*                            FOR EACH SUBCOMPONENT. FOR EXAMPLE, FOR   14350000
.*                            SUBCOMPONENT 054, THE MAXIMUM SUB-        14400000
.*                            SUBCOMPONENT NUMBER ENTERED MIGHT BE 22.  14450000
.*                                                                      14500000
.********************************************************************** 14550000
.*  THIS SECTION CAUSES INITIAL INFORMATION TO BE PUT IN THE CSECT.   * 14600000
.********************************************************************** 14650000
.*                                                                      14700000
         AIF   (&FIRST NE 0).NOINIT                                     14750000
&FIRST   SETA  1                                                        14800000
         SPACE 3                                                        14850000
         DC    A(MSGINDX)     ADDRESS OF COMPONENT CROSS                14900000
*                             REFERENCE INDEX TABLE.                    14950000
         DC    CL8'&SYSECT'   CSECT NAME.                               15000000
         DC    CL8'&SYSDATE'  DATE OF LAST COMPILE.                     15050000
         DC    CL8'&SYSTIME'  TIME OF LAST COMPILE.                     15100000
         SPACE 3                                                        15150000
.NOINIT  ANOP                                                           15200000
.*                                                                      15250000
.********************************************************************** 15300000
.*  THIS SECTION DETERMINES WHETHER CROSS REFERENCE INDEX TABLES      * 15350000
.*  ARE TO NOW BE PRODUCED. THE LAST MACRO IN A MESSAGE CSECT SHOULD  * 15400000
.*  OMIT THE MESSAGE TEXT, WHICH WILL CAUSE THE CROSS REFERENCE       * 15450000
.*  TO BE PRODUCED.                                                   * 15500000
.********************************************************************** 15550000
.*                                                                      15600000
         AIF   (T'&MSG EQ 'O').CINDX                                    15650000
.*                                                                      15700000
.********************************************************************** 15750000
.*  THIS SECTION ENSURES THAT &MSGNO IS BEING ENTERED IN ASCENDING    * 15800000
.*  SEQUENCE. IF NOT, AN MNOTE WITH SEVERITY 12 IS ISSUED. IF SO,     * 15850000
.*  THE GLOBAL VARIABLES ARE UPDATED TO REFLECT THE NEW MESSAGE.      * 15900000
.********************************************************************** 15950000
.*                                                                      16000000
         AIF   (K'&MSGNO NE 6).E1MSGNO                                  16050000
&TMSGID  SETC  '&MSGNO'(2,(K'&MSGNO)-1)                                 16100000
&CNT     SETA  1                                                        16150000
.CKMSGID ANOP                                                           16200000
&TMSGC   SETC  '&TMSGID'(&CNT,1)                                        16250000
         AIF   ('&TMSGC' LT '0' OR '&TMSGC' GT '9').E1MSGNO             16300000
&CNT     SETA  &CNT+1                                                   16350000
         AIF   (&CNT LE 5).CKMSGID                                      16400000
&TNMSGID SETA  &TMSGID                                                  16450000
.* MESSAGE NUMBER ENTERED IS IN PROPER SYNTAX.                          16500000
.* CHECK FOR ASCENDING SEQUENCE                                         16550000
         AIF   (&TNMSGID LE &MAXID).E2MSGNO                             16600000
&MAXID   SETA  &TNMSGID                                                 16650000
&TMSGC   SETC  '&TMSGID'(1,2)                                           16700000
&COMP    SETA  &TMSGC                                                   16750000
&TMSGC   SETC  '&TMSGID'(3,1)                                           16800000
&SCOMP   SETA  &TMSGC                                                   16850000
&TMSGC   SETC  '&TMSGID'(4,2)                                           16900000
&SSCOMP  SETA  &TMSGC                                                   16950000
&MAXCP   SETA  &COMP                                                    17000000
&MAXSCP(&COMP+1)  SETA  &SCOMP                                          17050000
&MAXSSCP(10*&COMP+&SCOMP+1)  SETA  &SSCOMP                              17100000
&NMSGS   SETA  &NMSGS+1                                                 17150000
&MSGID(&NMSGS)  SETA  &TNMSGID                                          17200000
&MSGCP(&NMSGS)    SETA  &COMP                                           17250000
&MSGSCP(&NMSGS)   SETA  &SCOMP                                          17300000
&MSGSSCP(&NMSGS)  SETA  &SSCOMP                                         17350000
.*                                                                      17400000
.*******************************************************************    17450000
.*  THIS SECTION INITIALIZES FOR THE TEXT SCAN.                    *    17500000
.*******************************************************************    17550000
.*                                                                      17600000
&LMSG    SETA  K'&MSG                                                   17650000
&TEXT    SETC  '&MSG'(2,&LMSG-2) STRIP OFF QUOTES AROUND &MSG.          17700000
&LTEXT   SETA  &LMSG-2        SET LENGTH OF TEXT.                       17750000
&LOC     SETA  1              STARTING SCAN LOCATION.                   17800000
&LOCTXT(&NINSRT+1)  SETA &LOC STARTING INDEX OF TEXT SEGMENT 1.         17850000
&NDQ     SETA  0              INITIALIZE THE DOUBLE QUOTE COUNTER.      17900000
.*                                                                      17950000
.*******************************************************************    18000000
.*  THIS SECTION IS THE MAIN DRIVING LOOP FOR THE TEXT SCAN.       *    18050000
.*******************************************************************    18100000
.*                                                                      18150000
.MAINLOP AIF   ('&TEXT'(&LOC,1) EQ ',').CKINS                           18200000
         AIF   ('&TEXT'(&LOC,1) EQ '''').CKQUOTE                        18250000
.CONTML  ANOP                                                           18300000
&LOC     SETA  &LOC+1         BUMP &TEXT INDEX PTR.                     18350000
.CONTMLA ANOP                                                           18400000
         AIF   (&LOC LT &LTEXT).MAINLOP                                 18450000
.* DROP THROUGH IMPLIES THAT ENTIRE TEXT HAS BEEN SCANNED FOR INSERTS.  18500000
.*                                                                      18550000
.* BUMP TEXT INDEX PTR TO ONE PAST END OF TEXT.                         18600000
&LOC     SETA  &LTEXT+1                                                 18650000
.* SET LENGTH OF LAST TEXT SEGMENT.                                     18700000
&LENTXT(&NINSRT+1)  SETA  &LOC-&LOCTXT(&NINSRT+1)                       18750000
.* SAVE NUMBER OF DOUBLE QUOTES IN THE LAST TEXT SEGMENT.               18800000
&NDQTXT(&NINSRT+1)  SETA  &NDQ                                          18850000
         AGO   .FORM          GO FORM OUTPUT CONSTRUCTS.                18900000
.*                                                                      18950000
.*******************************************************************    19000000
.*  THIS SECTION CHECKS FOR AND HANDLES INSERT LOCATIONS.          *    19050000
.*******************************************************************    19100000
.*                                                                      19150000
.CKINS   AIF   ('&TEXT'(&LOC+1,1) NE ',').CONTML                        19200000
.* HAVE FOUND A DOUBLE COMMA, IMPLYING THIS IS THE END OF THIS          19250000
.* TEXT SEGMENT. THE DOUBLE COMMA IS DELETED FROM THE TEXT SEGMENT.     19300000
.*                                                                      19350000
.* COMPUTE AND SAVE LENGTH OF THIS TEXT SEGMENT.                        19400000
&LENTXT(&NINSRT+1)  SETA  &LOC-&LOCTXT(&NINSRT+1)                       19450000
.* SAVE NUMBER OF DOUBLE QUOTES FOUND IN THIS TEXT SEGMENT.             19500000
&NDQTXT(&NINSRT+1)  SETA  &NDQ                                          19550000
.* RE-INITIALIZE THE DOUBLE QUOTE COUNTER.                              19600000
&NDQ     SETA  0                                                        19650000
.* UPDATE NUMBER OF INSERTS FOUND.                                      19700000
&NINSRT  SETA  &NINSRT+1                                                19750000
.* UPDATE CURRENT SCAN INDEX PTR PAST BOTH COMMAS.                      19800000
&LOC     SETA  &LOC+2                                                   19850000
.* SET NEXT TEXT SEGMENT STARTING INDEX.                                19900000
&LOCTXT(&NINSRT+1)  SETA  &LOC                                          19950000
         AGO   .CONTMLA                                                 20000000
.*                                                                      20050000
.*******************************************************************    20100000
.*  THIS SECTION CHECKS FOR AND HANDLES DOUBLE QUOTES.             *    20150000
.*******************************************************************    20200000
.*                                                                      20250000
.* SHOULD NEVER HIT JUST A SINGLE QUOTE, BUT MAKE CHECK ANYHOW.         20300000
.CKQUOTE AIF   ('&TEXT'(&LOC+1,1) NE '''').E3UNKN                       20350000
&NDQ     SETA  &NDQ+1         BUMP NUMBER OF DOUBLE QUOTES FOUND.       20400000
&LOC     SETA  &LOC+2         BUMP SCAN INDEX PTR PAST BOTH QUOTES...   20450000
         AGO   .CONTMLA       ...AND GO CONTINUE SCAN.                  20500000
.*                                                                      20550000
.*******************************************************************    20600000
.*  THIS SECTION FORMS THE MESSAGE SEGMENT CONSTRUCTS.             *    20650000
.*******************************************************************    20700000
.*                                                                      20750000
.FORM    ANOP                                                           20800000
&MSGLEN  SETA  0                                                        20850000
&LABEL   SETC  'BLS'.'&TMSGID'                                          20900000
&LABEL   DC    H'&NINSRT'     NUMBER OF INSERTS FOR THIS MESSAGE.       20950000
&CNT     SETA  1                                                        21000000
.CONV1   AIF   (&CNT GT &NINSRT).FORMMSG                                21050000
         DC    AL1(0),AL1(0)  RESERVED.                                 21100000
&CNT     SETA  &CNT+1                                                   21150000
         AGO   .CONV1                                                   21200000
.FORMMSG ANOP                                                           21250000
&CNT     SETA  1                                                        21300000
.NEXTSEG ANOP                                                           21350000
&LSEG    SETA  &LENTXT(&CNT)       NUMBER OF CHARACTERS IN SEGMENT N.   21400000
.* FINAL LENGTH OF TEXT SEGMENT AFTER DOUBLE QUOTES ARE SQUEEZED OUT.   21450000
&FNLLEN  SETA  &LSEG-&NDQTXT(&CNT)                                      21500000
&MSGLEN  SETA  &MSGLEN + &FNLLEN   RUNNING COUNT OF TOTAL MESSAGE LEN.  21550000
         DC    AL1(&FNLLEN)   LENGTH OF TEXT SEGMENT.                   21600000
         AIF   (&LSEG EQ 0).NOSGMT                                      21650000
&SEG     SETC  '&TEXT'(&LOCTXT(&CNT),&LSEG)                             21700000
         DC    C'&SEG'        TEXT SEGMENT.                             21750000
.NOSGMT  ANOP                                                           21800000
&CNT     SETA  &CNT+1                                                   21850000
         AIF   (&CNT LE &NINSRT+1).NEXTSEG                              21900000
         AIF   (&MSGLEN LE 255).ENDFORM                                 21950000
         MNOTE 12,'MESSAGE LARGER THAN 255 CHARACTERS.'                 22000000
.ENDFORM ANOP                                                           22050000
         SPACE 2                                                        22100000
         AGO   .MEND                                                    22150000
.*                                                                      22200000
.********************************************************************** 22250000
.*  THIS SECTION CONSTRUCTS THE COMPONENT MESSAGE CROSS               * 22300000
.*  REFERENCE INDEX TABLE.                                            * 22350000
.********************************************************************** 22400000
.*                                                                      22450000
.CINDX   ANOP                                                           22500000
         SPACE 5                                                        22550000
PATCHLBL EQU   *              PATCH AREA.                               22600000
         ORG   *+1+(*-&SYSECT)/10                                       22650000
         EJECT                                                          22700000
**********************************************************************  22750000
*  COMPONENT CROSS REFERENCE INDEX TABLE.                            *  22800000
**********************************************************************  22850000
         SPACE 2                                                        22900000
         CNOP  0,4                                                      22950000
MSGINDX  EQU   *                                                        23000000
         DC    F'&MAXCP'                                                23050000
&CNT     SETA  1                                                        23100000
&COMP    SETA  0                                                        23150000
.CKCOMP  ANOP                                                           23200000
         AIF   (&COMP EQ &MSGCP(&CNT)).FOUND1                           23250000
         DC    A(0)                                                     23300000
.BCOMP   ANOP                                                           23350000
&COMP    SETA  &COMP+1                                                  23400000
         AIF   (&COMP GT &MAXCP).SCOMP                                  23450000
         AGO   .CKCOMP                                                  23500000
.FOUND1  AIF   (&COMP LE 9).PAD1                                        23550000
         DC    A(SBLK&COMP)                                             23600000
         AGO   .NXTCOMP                                                 23650000
.PAD1    DC    A(SBLK0&COMP)                                            23700000
.NXTCOMP ANOP                                                           23750000
&CNT     SETA  &CNT+1                                                   23800000
         AIF   (&CNT GT &NMSGS).SCOMP                                   23850000
         AIF   (&MSGCP(&CNT) EQ &MSGCP(&CNT-1)).NXTCOMP                 23900000
         AGO   .BCOMP                                                   23950000
.*                                                                      24000000
.********************************************************************** 24050000
.*  THIS SECTION CONSTRUCTS THE SUBCOMPONENT MESSAGE CROSS            * 24100000
.*  REFERENCE INDEX TABLES.                                           * 24150000
.********************************************************************** 24200000
.*                                                                      24250000
.SCOMP   ANOP                                                           24300000
         EJECT                                                          24350000
&CNT     SETA  1                                                        24400000
.NEWCOMP ANOP                                                           24450000
         SPACE 3                                                        24500000
**********************************************************************  24550000
*  SUBCOMPONENT MESSAGE CROSS REFERENCE INDEX TABLE.                 *  24600000
**********************************************************************  24650000
         SPACE 2                                                        24700000
&SCOMP   SETA  0                                                        24750000
&COMP    SETA  &MSGCP(&CNT)                                             24800000
         AIF   (&COMP LE 9).PADS1                                       24850000
&LABEL   SETC  'SBLK'.'&COMP'                                           24900000
         AGO   .LBSCOMP                                                 24950000
.PADS1   ANOP                                                           25000000
&LABEL   SETC  'SBLK0'.'&COMP'                                          25050000
.LBSCOMP ANOP                                                           25100000
&LABEL   EQU   *                                                        25150000
         DC    F'&MAXSCP(&COMP+1)'                                      25200000
.CKSCOMP ANOP                                                           25250000
         AIF   (&SCOMP EQ &MSGSCP(&CNT)).FOUND2                         25300000
         DC    A(0)                                                     25350000
.BSCOMP  ANOP                                                           25400000
&SCOMP   SETA  &SCOMP+1                                                 25450000
         AIF   (&SCOMP GT &MAXSCP(&COMP+1)).NXTSC                       25500000
         AGO   .CKSCOMP                                                 25550000
.FOUND2  AIF   (&COMP LE 9).PADS2                                       25600000
         DC    A(SSBLK&COMP&SCOMP)                                      25650000
         AGO   .NXTSC                                                   25700000
.PADS2   ANOP                                                           25750000
         DC    A(SSBLK0&COMP&SCOMP)                                     25800000
.NXTSC   ANOP                                                           25850000
&CNT     SETA  &CNT+1                                                   25900000
         AIF   (&CNT GT &NMSGS).SSCOMP                                  25950000
         AIF   (&MSGCP(&CNT) NE &COMP).NEWCOMP                          26000000
         AIF   (&MSGSCP(&CNT) EQ &MSGSCP(&CNT-1)).NXTSC                 26050000
         AGO   .BSCOMP                                                  26100000
.*                                                                      26150000
.********************************************************************** 26200000
.*  THIS SECTION CONTSTRUCTS THE SUB-SUBCOMPONENT MESSAGE             * 26250000
.*  CROSS REFERENCE INDEX TABLE.                                      * 26300000
.********************************************************************** 26350000
.*                                                                      26400000
.SSCOMP  ANOP                                                           26450000
         EJECT                                                          26500000
&CNT     SETA  1                                                        26550000
.NEWSCMP ANOP                                                           26600000
         SPACE 3                                                        26650000
**********************************************************************  26700000
*  SUB-SUBCOMPONENT CROSS REFERENCE INDEX TABLE.                     *  26750000
**********************************************************************  26800000
         SPACE 2                                                        26850000
&SSCOMP  SETA  0                                                        26900000
&SCOMP   SETA  &MSGSCP(&CNT)                                            26950000
&COMP    SETA  &MSGCP(&CNT)                                             27000000
         AIF   (&COMP LE 9).PADSS1                                      27050000
&LABEL   SETC  'SSBLK'.'&COMP'.'&SCOMP'                                 27100000
         AGO   .LBSSCMP                                                 27150000
.PADSS1  ANOP                                                           27200000
&LABEL   SETC  'SSBLK0'.'&COMP'.'&SCOMP'                                27250000
.LBSSCMP ANOP                                                           27300000
&LABEL   EQU   *                                                        27350000
         DC    F'&MAXSSCP(10*&COMP+&SCOMP+1)'                           27400000
.CKSSCMP ANOP                                                           27450000
         AIF   (&SSCOMP EQ &MSGSSCP(&CNT)).FOUND3                       27500000
         DC    A(0)                                                     27550000
.BSSCOMP ANOP                                                           27600000
&SSCOMP  SETA  &SSCOMP+1                                                27650000
         AIF   (&SSCOMP GT &MAXSSCP(10*&COMP+&SCOMP+1)).NXTSSC          27700000
         AGO   .CKSSCMP                                                 27750000
.FOUND3  AIF   (&COMP LE 9).PADSS2                                      27800000
         DC    A(BLS&MSGID(&CNT))                                       27850000
         AGO   .NXTSSC                                                  27900000
.PADSS2  DC    A(BLS0&MSGID(&CNT))                                      27950000
.NXTSSC  ANOP                                                           28000000
&CNT     SETA  &CNT+1                                                   28050000
         AIF   (&CNT GT &NMSGS).MEND                                    28100000
         AIF   (&MSGSCP(&CNT) NE &SCOMP).NEWSCMP                        28150000
         AIF   (&MSGCP(&CNT) NE &COMP).NEWSCMP                          28200000
         AGO   .BSSCOMP                                                 28250000
.*                                                                      28300000
.********************************************************************** 28350000
.*  THIS SECTION CONTAINS THE MNOTE ERROR MESSAGES.                   * 28400000
.********************************************************************** 28450000
.*                                                                      28500000
.E1MSGNO MNOTE 12,'LABEL MUST BE ONE ALPHABETIC AND FIVE DIGITS.'       28550000
         AGO   .MEND                                                    28600000
.E2MSGNO MNOTE 12,'LABELS MUST BE ENTERED IN ASCENDING SEQUENCE.'       28650000
         AGO   .MEND                                                    28700000
.E3UNKN  MNOTE 12,'UNKNOWN CONDITION: SINGLE QUOTATION MARK DETECTED.'  28750000
         AGO   .MEND                                                    28800000
.MEND    MEND                                                           28850000
