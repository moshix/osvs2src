         TITLE 'BLSR327A--SETUP AND CLEANUP'                            00005045
*---------------------------------------------------------------------* 00020045
*                                                                     * 00027045
*BLSR327A--SETUP AND CLEANUP                                          * 00034045
*                                                                     * 00041045
*---------------------------------------------------------------------* 00048045
         COPY  BLSR327M           COPY GLOBAL DEFINITIONS               00066045
         COPY  BLSR327P           EQUATED VALUES AND DSECTS             00074045
         TITLE 'BLSR327A--ENTRY POINT FROM BLSR3270'                    00082045
         SPACE 2                                                        00100045
*---------------------------------------------------------------------* 00105045
*BLSR327A--ENTRY POINT FROM BLSR3270--THE FOLLOWING FUNCTIONS ARE     * 00116045
*        PERFORMED BY INCLUDED CODE SEGMENT BLSR327A:                 * 00124045
*        1. ESTABLISH ASSEMBLER ENVIRONMENT (PROLOG)                  * 00132045
*        2. INITIALIZE FLAGS AND DATA AREAS                           * 00150045
*        3. OUTPUT FORMATTED SCREEN BUFFER (TPUT)              @ZA31999 00155045
*        4. READ INPUT BUFFER (TGET, TCLEARQ)                  @ZA31999 00166045
*        5. SET-UP RESPONSE ANALYSIS                           @ZA31999 00174045
*        6. RESET STATUS AS A RESULT OF VALIDATED INPUT        @ZA31999 00182045
*        7. ADD SUBCOMMAND LINE TO TSO STACK                   @ZA31999 00200045
*        8. MAINTAIN DSPL3270 STACK                            @ZA31999 00208045
*        9. EXIT ASSEMBLER ENVIRONMENT (EPILOG)                @ZA31999 00216045
*                                                                     * 00224045
*---------------------------------------------------------------------* 00232045
         SPACE                                                          00250045
*---------------------------------------------------------------------* 00254045
*  ESTABLISH ASSEMBLER ENVIRONMENT (PROLOG)                           * 00266045
*---------------------------------------------------------------------* 00274045
         SPACE                                                          00282045
BLSR327A CSECT                                                          00300045
         DROP  RB,RC              PL/S DATAREG & CODEREG                00304045
         USING @SA00001,RD        ->AUTOMATIC STORAGE                   00316045
         USING EA000100,RF        FORMAL LINKAGE REGISTER               00324045
EA000100 STM   R0,RF,SAVER0RF     SAVE INPUT REGISTERS                  00332045
         SPACE 1                                                        00350045
*---------------------------------------------------------------------* 00355045
*  INITIALIZE FLAGS AND DATA AREAS                                    * 00366045
*---------------------------------------------------------------------* 00374045
         SPACE 1                                                        00382045
*---------------------------------------------------------------------* 00400045
*        DSPL3270 UTILIZES A WORK AREA (AT WKAORG) IN AUTOMATIC       * 00408045
*        STORAGE WHICH DEFINES THE CURRENT FORMAT OF THE SCREEN.      * 00416045
*        THE CONTENT OF THIS AREA IS INITIALIZED ONE OF TWO WAYS,     * 00424045
*        DEPENDING OF THE SETTING OF THE RESET/NORESET OPERAND        * 00432045
*        CONSIDERED IN CONJUNCTION WITH THE EXISTENCE/NONEXISTENCE    * 00450045
*        OF PREVIOUSLY ESTABLISHED DUMP CLUSTER DATA:                 * 00458045
*        1. INITIALIZED USING DATA SAVED IN THE DUMP CLUSTER IF       * 00466045
*           SUCH DATA EXISTS AND NORESET WAS ENTERED OR ALLOWED TO    * 00474045
*           DEFAULT.                                                  * 00482045
*        2. INITIALIZED USING PERMANENT VALUES ADDRESSED BY FIELD     * 00500045
*           ZZ1327WP IF RESET WAS SPECIFIED AND/OR NO DUMP CLUSTER    * 00508045
*           EXISTS FOR THE CURRENT DUMP.                              * 00516045
*---------------------------------------------------------------------* 00524045
         SPACE                                                          00532045
         CLI   WKRESET,1          DOES WORK AREA NEED INITIALIZATION?   00550045
         BNE   LA000200           NO                                    00558045
         L     RC,ZZ1P            ->ZZ1                                 00566045
         L     R0,ZZ1327WP(0,RC)  ->BLSR327W PERMANENT COPY             00574045
         LA    R1,WKALENG         LENGTH(BLSR327W)                      00582045
         LA    R2,WKAORG          ->BLSR327W WORKING COPY               00600045
         LR    R3,R1              LENGTH(BLSR327W)                      00605045
         MVCL  R2,R0              PERMANENT COPY=>WORKING COPY          00616045
         SPACE                                                          00624045
LA000200 LA    RC,LA000200        PROCESSING BASE REGISTER (1 OF 2)     00632045
         DROP  RF                                                       00650045
         USING LA000200,RC,RB                                           00655045
         LA    RB,LA000200+4095   PROCESSING BASE REGISTER (2 OF 2)     00666045
         LA    RB,1(RB)                                                 00674045
         SPACE 2                                                        00682045
*---------------------------------------------------------------------* 00700045
*        INITIALIZE BLSRVPAS PARAMETER LIST                           * 00705045
*---------------------------------------------------------------------* 00716045
         LA    RF,PACKDEC+3       -> ASID (BINARY)                      00724045
         ST    RF,PDEIP           INITIALIZE PDE                        00732045
         LA    RF,PDE             -> PDE                                00750045
         ST    RF,APDE            1ST PARAMETER                         00755045
         L     RF,ZZ2P            -> ZZ2                                00766045
         ST    RF,AZZ2            2ND PARAMETER                         00774045
         L     RF,=X'80000000'    NO MESSAGE - NULL PARAMETER           00782045
         ST    RF,AMSG            3RD PARAMETER                         00800045
*---------------------------------------------------------------------* 00805045
*        DO HOUSEKEEPING                                              * 00816045
*---------------------------------------------------------------------* 00824045
         SPACE                                                          00832045
         LA    RF,0               ASSUME SUCCESSFUL                     00850045
         ST    RF,SAVERF          -COMPLETION                           00855045
         MVI   FLAG0,FLAG0FMT     INITIAL FLAG BYTE 0 STATUS            00866045
         MVI   FLAG1,FLAG1ADR+FLAG1ASI+FLAG1FMT+FLAG1ARE FLAG BYTE 1    00874045
         MVI   FLAG2,0            INITIAL FLAG BYTE 2 STATUS            00882045
         MVI   ERLN4,0            INITIAL INPUT ERROR STATUS            00900045
         MVI   SCRPO,0            INITIAL SCREEN POSITION INDICATOR     00905045
         MVI   NEWWCC,B'00000000' INITIAL WRITE CONTROL CHARACTER       00916045
         MVC   PREVCURS,=X'C5D3'  INITIAL CURSOR SAVE ADDRESS           00924045
         MVC   NEWLINES(4),WKALINES INITIAL LINES/AREA                  00932045
         MVC   NEWLNCTL(19),WKALNCTL INITIAL LINE CONTROL DATA          00950045
         SPACE 1                                                        00955045
         CLC   WKANB1,=CL6'CVT'   INITIAL ENTRY?                        00966045
         BNE   LA000400           NO                                    00974045
         MVC   WKASTACK,ZZ2AMDC(R9) ->CVT                               00982045
         SPACE                                                          01000045
LA000400 BAL   R8,LA000820        GET RID OF EXTRANEOUS INPUT           01005045
         B     BLSR327G           START THE PROCESS                     01016045
         SPACE 2                                                        01024045
         COPY  BLSR327B           BUILD 3277 ORDER STREAM               01032045
         TITLE 'BLSR327A--OUTPUT FORMATTED SCREEN BUFFER (TPUT)'        01050045
*---------------------------------------------------------------------* 01055045
*  OUTPUT FORMATTED SCREEN BUFFER (TPUT)                              * 01066045
*---------------------------------------------------------------------* 01074045
         SPACE                                                          01082045
LA000500 L     R1,ZZ1P            ->ZZ1                                 01100045
         CLI   ZZ1EVEP(R1),0      TERMINATE?                            01105045
         BNE   LA005600           YES                                   01116045
         LR    R0,RA              R0 WILL HAVE LENGTH FOR TPUT          01124045
         LA    R1,SCRNBUFR        ->TGET/TPUT BUFFER                    01132045
         SLR   R0,R1              LENGTH TO WRITE                       01150045
         ICM   R1,B'1000',=BL1'00001011' FULL SCREEN TPUT OPTION        01155045
         TPUT  (1),(0),R                                                01166045
         CH    RF,=H'8'           UNSUPPORTED RETURN CODE               01174045
         BNH   LA000510           NO                                    01182045
         LA    RF,16              YES - SET                             01200045
         ST    RF,SAVERF          -RETURN CODE                          01204045
         B     LA005600           -AND GIVE UP                          01216045
LA000510 EQU   *                                                        01224045
         B     LA000600(RF)       MAYBE. USE BRANCH TABLE TO DECIDE     01232045
LA000600 B     0(R8)              RC=0, SUCCESSFUL WRITE-RET TO CALLER  01250045
         B     LA005600           RC=4, ERROR. WE USE WAIT OPTION       01255045
         B     LA000500           RC=8, ATTN-ENTER SEQUENCE--RETRY      01266045
         SPACE 2                                                        01274045
*---------------------------------------------------------------------* 01282045
*  READ INPUT BUFFER (TGET, TCLEARQ)                                  * 01300045
*---------------------------------------------------------------------* 01305045
         SPACE                                                          01316045
LA000700 LA    R0,2560            LENGTH OF TGET/TPUT BUFFER            01324045
         LA    R1,SCRNBUFR        ->TGET/TPUT BUFFER                    01332045
         ICM   R1,B'1000',=BL1'10000001' ASIS TGET OPTION               01350045
         TGET  (1),(0),R                                                01355045
         CH    RF,=H'12'          UNSUPPORTED RETURN CODE               01366045
         BNH   LA000710           NO                                    01374045
         LA    RF,16              YES - SET                             01382045
         ST    RF,SAVERF          -RETURN CODE                          01400045
         B     LA005600           -AND GIVE UP                          01405045
LA000710 EQU   *                                                        01416045
         B     LA000800(RF)       TEST TGET RETURN CODE                 01424045
LA000800 B     LA000900           RC=0, SUCCESSFUL READ, SAVE DATA LEN  01432045
         B     LA005600           RC=4, ERROR. WE USE WAIT OPTION       01450045
         B     LC000200           RC=8, ATTN-ENTER SEQUENCE--RESEND     01455045
         OI    FLAG0,FLAG0FMT     RC=12, HAVEN'T LOST ANYTHING MUCH     01466045
         CLI   ERLN4,0            ARE WE IN THE MIDDLE OF ERRORS?       01474045
         BNE   LA000810           -YES, LEAVE FLAG0 AS IS               01482045
         NI    FLAG0,FLAG0FMT     CLEAR THE REST OF FLAG0               01500045
LA000810 LR    R7,R1              SAVE INPUT LENGTH                     01505045
         BAL   R8,LA000820        CLEAR TGET INPUT QUEUE                01516045
         LR    R1,R7              RESET INPUT LENGTH REGISTER           01524045
         B     LA000950                                                 01532045
         SPACE 2                                                        01550045
*---------------------------------------------------------------------* 01555045
*        MAKE SURE TGET QUEUE IS EMPTY                                * 01566045
*---------------------------------------------------------------------* 01574045
         SPACE                                                          01582045
LA000820 TCLEARQ                                                        01600045
         LTR   RF,RF              TEST TCLEARQ RETURN CODE              01605045
         BZR   R8                 RC=0,SUCCESSFUL                       01616045
         LA    RF,16              ERROR - SET                           01624045
         ST    RF,SAVERF          -RETURN CODE                          01632045
         B     LA005600           -AND GIVE UP                          01650045
         SPACE 2                                                        01655045
*---------------------------------------------------------------------* 01666045
*  SET-UP RESPONSE ANALYSIS                                           * 01674045
*---------------------------------------------------------------------* 01682045
         SPACE                                                          01700045
LA000900 CLI   ERLN4,0            ARE WE IN THE MIDDLE OF ERRORS?       01705045
         BNE   LA000970           -YES, DON'T RESET FLAGS               01716045
         MVI   FLAG0,0            RESET FLAG0                           01724045
         B     LA000960                                                 01732045
LA000950 CLI   ERLN4,0            ARE WE IN THE MIDDLE OF ERRORS?       01750045
         BNE   LA000970           -YES, DON'T RESET FLAGS               01753045
LA000960 MVI   FLAG0,0            RESET FLAG0                           01770045
         MVI   FLAG1,0            RESET FLAG1                           01773045
         NC    WKALNCTL(19),=19AL1(255-WKALNCTW) RESET LINE CONTROLS    01790045
         XC    EADDRFLG(LN4FLGLN),EADDRFLG CLEAR ERROR FLAGS            01798045
         MVC   EADDRVAL(LN4VALLN),WKAADDR RESET ERROR SAVE VALUES       01804045
         NI    EADDRVAL,255-WKAADRLL CLEAR HIGH BYTE                    01816045
         XC    SAVSTK(SAVSTKLN),SAVSTK CLEAR NOTES ERROR SAVE AREA      01824045
         XC    SAVSBCMD,SAVSBCMD  CLEAR SUBCOMMAND ERROR SAVE AREA      01832045
LA000970 LTR   R7,R1              SAVE AND CHECK AMT RETD BY TGET       01850045
         LA    RA,SCRNBUFR        ->TGET/TPUT BUFFER                    01855045
         MVI   NEWWCC,X'00'       REFRESH WRITE CONTROL CHAR            01866045
         MVI   FLAG2,0            OFF ALL BITS                          01874045
         MVC   PREVCURS,WKACORDS+1 SAVE LAST CURSOR ADDR FOR HELP, ETC  01882045
         MVC   WKACORDS+1(2),1(RA) GET READY TO REPLACE CURSOR          01900045
         COPY  BLSR327C           PRE-PROCESS ATTENTION IDENTIFIER      01905045
         COPY  BLSR327D           PRE-PROCESS CURSOR                    01916045
         TITLE 'BLSR327A--RESET STATUS AS RESULT OF VALIDATED INPUT'    01924045
*---------------------------------------------------------------------* 01932045
*  RESET STATUS AS A RESULT OF VALIDATED INPUT                        * 01950045
*---------------------------------------------------------------------* 01955045
         SPACE                                                          01966045
*---------------------------------------------------------------------* 01974045
*EA001400 - INTERNAL SUBROUTINE TO ESTABLISH ROW, COL FROM 3270 ADRR  * 01982045
*  INPUT---RETURN ADDR IN RE                                          * 02000045
*          RA POINTS 1 BYTE BEFORE 3270 ADDR                          * 02005045
*  OUTPUT--COLUMN NUMBER IN R4                                        * 02016045
*          ROW NUMBER IN R5 (0-ORIGIN NUMBERS)                        * 02024045
*---------------------------------------------------------------------* 02032045
         SPACE                                                          02050045
EA001400 LA    RF,63              MASK TO KEEP ONLY LOW SIX BITS        02054045
         IC    R4,1(0,RA)         FIRST BYTE OF ADDR                    02066045
         IC    R5,2(0,RA)         SECOND BYTE OF ADDR                   02074045
         NR    R4,RF              GET RID OF GARBAGE                    02082045
         NR    R5,RF              DITTO                                 02100045
         SLL   R4,6               PREPARE TO FORM BINARY OFFSET         02104045
         ALR   R5,R4              NOW HAVE DISPL FROM POS 0 (R1C1)      02116045
         SLR   R4,R4              CLEAR FOR DIVISION                    02124045
         D     R4,=F'80'          REMAINDER IN R4, QUOTIENT IN R5       02132045
         BR    RE                                                       02150045
         SPACE                                                          02155045
*        R4 HAS REMAINDER FROM DIVISION, = 0-ORG COLUMN NUMBER        * 02166045
         SPACE 2                                                        02174045
*---------------------------------------------------------------------* 02182045
*        MOVE FROM INPUT CHECKING SAVE AREAS TO WORK AREA - ONLY      * 02200045
*        NECESSARY FOR STACK NOTATION, LINE 4, AND SUBCOMMAND         * 02205045
*        ENTRY FIELDS                                                 * 02216045
*---------------------------------------------------------------------* 02224045
         SPACE                                                          02232045
LA001000 EQU   *                                                        02250045
         SPACE                                                          02254045
*---------------------------------------------------------------------* 02266045
*        CHANGE TO STACK NOTATION                                     * 02274045
*---------------------------------------------------------------------* 02282045
         SPACE                                                          02300045
LA001700 LA    R3,0               LOOP COUNTER INITIAL VALUE            02305045
         LA    R4,1               LOOP INCREMENT                        02316045
         LA    R5,10              LOOP COMPARAND                        02324045
         LA    RA,SAVSTK          INITIAL NOTE SAVE ENTRY               02332045
LA001750 LR    R8,R3              PUT INDEX IN SAFE PLACE               02350045
         LA    RF,1(0,R8)         1-ORIGIN NUMBER OF THIS ENTRY         02355045
         SLL   R8,2               FORM INDEX INTO STACK                 02366045
         CLI   0(RA),0            HAS A NOTE ENTRY BEEN SAVED?          02374045
         BE    LA002000           NO - LOOK AT NEXT                     02382045
         CLI   0(RA),C'/'         A DELETE REQUEST?                     02400045
         BNE   LA001800           NO, A CHANGE OR ADDITION TO NOTES     02405045
         LA    RF,WKASTACK(R8)    PREPARE TO MARK PROPER STACK ENTRY    02416045
         OI    0(RF),WKASKDEL     TO BE PURGED ... MUST UPDATE 2,3      02424045
         OI    FLAG0,FLAG0PRG+FLAG0RW2+FLAG0RW3 - REMEMBER TO DO IT     02432045
         B     LA002000           LOOK AT NEXT                          02450045
LA001800 CLM   RF,1,WKANBNUM      WAS IT A NEW ENTRY?                   02455045
         BNH   LA001900           - NO, BYPASS SAVING NEW HIGH WATER    02466045
         STC   RF,WKANBNUM        - YES, NEW MAX TO RESEND THIS LINE    02474045
LA001900 ALR   R8,R8              DOUBLE INDEX VALUE                    02482045
         LA    R8,WKANOTES(R8)    ADDRESS OF NOTES WORK AREA            02500045
         XC    0(8,R8),0(R8)      CLEAR CURRENT ENTRY                   02505045
         CLI   0(RA),X'FF'        HAS FIELD BEEN CLEARED?               02516045
         BE    LA002000           YES                                   02524045
         MVC   0(L'WKANB1,R8),0(RA) PUT NEW DATA INTO NOTE LIST         02532045
LA002000 LA    RA,L'WKANB1(RA)    POINT TO NEXT NOTES SAVE AREA         02550045
         BXLE  R3,R4,LA001750     CONTINUE LOOP                         02555045
         SPACE 2                                                        02566045
*---------------------------------------------------------------------* 02574045
*        CHANGE TO LINE 4--NEW ADDRESS, ASID, FORMAT, ....            * 02582045
*---------------------------------------------------------------------* 02600045
         SPACE 2                                                        02605045
         TM    FLAG1,FLAG1BLA     CAN WE ACCEPT MANUAL INPUT THIS -     02616045
         BO    LA002100           TRANSACTION? NO, DON'T SAVE           02624045
         MVC   ESAULAD,EADDRVAL   SAVE NEW ADDRESS                      02632045
         SPACE 2                                                        02650045
         XC    ESAUAS2(4),ESAUAS2  CLEAR IT OUT                         02655045
         MVC   ESAUAS2+2(2),EASIDVAL SAVE NEW ASID                      02666045
         SPACE 2                                                        02674045
LA002100 MVC   ESAUDTY,EFMTVAL    SAVE NEW FORMAT                       02682045
         SPACE 2                                                        02700045
         MVC   WKAAREA,EAREAVAL   SAVE NEW AREA                         02705045
         SPACE 2                                                        02716045
         LA    R3,4               WINDOW LOOP COUNTER                   02724045
         LA    R4,EWNDSVAL        INITIAL WINDOW SAVE AREA              02732045
         LA    R5,NEWLINES        INITIAL WINDOW WORK AREA              02750045
LA002200 MVC   0(1,R5),0(R4)      MOVE FROM SAVE AREA                   02755045
         LA    R4,1(R4)           POINT TO NEXT SAVE AREA               02766045
         LA    R5,1(R5)           POINT TO NEXT WORK AREA               02774045
         BCT   R3,LA002200        LOOK AT NEXT WINDOW                   02782045
         SPACE 2                                                        02800045
         MVC   WKASKIP,ESKIPVAL  SAVE NEW VALUE                         02805045
         B     LA004600          LOOK AT SUBCOMMAND                     02816045
         SPACE 2                                                        02824045
*---------------------------------------------------------------------* 02832045
*EA003700--VALIDATE HEXADECIMAL INPUT AND CONVERT TO BINARY           * 02850045
*          VALID RANGE = 0-F                                          * 02855045
*---------------------------------------------------------------------* 02866045
         SPACE                                                          02874045
EA003700 XC    PACKDEC,PACKDEC    CLEAR RESULT IN CASE OF NULL INPUT    02882045
         LR    RF,R9              WHERE WE CAN USE IT                   02900045
         SH    RF,=H'3'           BYPASS SF, ADDR, ADDR                 02905045
         BNP   4(0,RE)            RETURN TO CALLER, NULL INPUT VALID    02916045
         LA    R0,9               INCREMENT FOR A HEX NOT DEC DIGIT     02924045
         LA    R1,PACKDEC+5       WHERE RESULT SHOULD GO                02932045
         EX    RF,IA004000        CONVERT TO UPPER CASE -- NOTE - THIS  02950045
*                                 CLOBBERS THE FIRST BYTE OF THE NEXT   02955045
*                                 FIELD, BUT IS OK, SINCE IT IS EITHER  02966045
*                                 AN SBA ORDER ALREADY FOUND, OR OUT    02974045
*                                 OF INPUT RANGE.                       02982045
LA003800 IC    R2,2(RF,RA)        BYTE OF INPUT - RIGHT TO LEFT         03000045
         CLM   R2,1,=C'A'         AN 'A'                                03005045
         BLR   RE                 - IF LESS, THEN NOT VALID HEX         03016045
         CLM   R2,1,=C'9'         A '9' ?                               03024045
         BHR   RE                 - IF GREATER, THEN NOT VALID HEX      03032045
         CLM   R2,1,=C'0'         A DECIMAL DIGIT?                      03050045
         BNL   LA003900           - YES, SAVE IT IN WORK AREA           03055045
         CLM   R2,1,=C'F'         AN 'F'?                               03066045
         BHR   RE                 - IF GREATER, THEN NOT VAILD HEX      03074045
         ALR   R2,R0              HEX DIGIT, INCREMENT BY 9             03082045
LA003900 STC   R2,0(0,R1)         HEX OR DECIMAL NUMERIC INTO WK AREA   03100045
         BCTR  R1,0               DECREMENT WORK AREA ADDRESS           03105045
         BCT   RF,LA003800        DECREMENT INDEX, CHECK FOR END        03116045
         PACK  PACKDEC+3(5),PACKDEC(7) STRIP OUT ZONES                  03124045
         B     4(0,RE)            RETURN ON GOOD VECTOR                 03132045
IA004000 OC    3(0,RA),=CL8' '    *** SUBJ OF EX, ABOVE ***             03150045
         SPACE 2                                                        03155045
*---------------------------------------------------------------------* 03166045
*EA004100--VALIDATE HEXADECIMAL INPUT AND CONVERT TO BINARY           * 03174045
*          VALID RANGE = 0-9                                          * 03182045
*---------------------------------------------------------------------* 03200045
         SPACE                                                          03205045
EA004100 XC    PACKDEC,PACKDEC    CLEAR ANSWER AREA IF NULL INPUT       03216045
         LR    RF,R9              PROTECT LENGTH OF SUBFIELD            03224045
         SH    RF,=H'3'           STRIP OFF SF, ADDR, ADDR              03232045
         BNP   4(0,RE)            NULL INPUT, ANSWER = 0                03250045
         LR    R0,RF              SAVE COUNT                            03255045
         LA    R2,2(RA,RF)        LAST INPUT CHAR THIS FIELD            03266045
LA004200 CLI   0(R2),C'0'         MUST BE IN RANGE 0 - 9                03274045
         BLR   RE                 - TOO LOW, GO BACK ON BAD VECTOR      03282045
         CLI   0(R2),C'9'         CHECK TOP OF RANGE                    03300045
         BHR   RE                 - TOO HIGH, IGNORE INPUT              03305045
         BCTR  R2,0               BACK TO PREVIOUS BYTE                 03316045
         BCT   R0,LA004200        CHECK ALL BYTES                       03324045
         BCTR  RF,0               DOWN 1 FOR EX                         03332045
         EX    RF,IA004300        STRIP ZONES, ALIGN FOR CVB            03350045
         CVB   RF,PACKDEC         INPUT IN FORM WE WANT                 03355045
         ST    RF,PACKDEC         SAVE IT JUST IN CASE                  03366045
         B     4(0,RE)            RETURN ON GOOD VECTOR                 03374045
IA004300 PACK  PACKDEC(8),3(0,RA) *** SUBJ OF EX, ABOVE ***             03382045
IA004400 MVC   0(0,RF),4(RF)      *** SUBJ OF EX, BELOW ***             03400045
IA004500 MVC   0(0,RF),8(RF)      *** SUBJ OF EX, BELOW ***             03405045
         SPACE 2                                                        03416045
*---------------------------------------------------------------------* 03424045
*  ADD SUBCOMMAND LINE TO TSO STACK                            @ZA31999 03432045
*---------------------------------------------------------------------* 03450045
         SPACE                                                          03454045
LA004600 CLI   SAVSBCMD,0         WAS ANYTHING ENTERED?                 03466045
         BE    LA005000           -NO, CHECK STACK                      03474045
         CLI   SAVSBCMD,NULVALUE  DID HE JUST NULL HIS LAST CMD?        03482045
         MVI   WKABLSRN,0         -YES, RESET COUNT                     03500045
         BE    LA005000           -AND CHECK STACK                      03505045
         LA    RE,L'SAVSBCMD      LENGTH OF SUBCOMMAND                  03516045
         STC   RE,WKABLSRN        SAVE FOR NEXT TIME                    03524045
         MVC   WKABLSRC(L'SAVSBCMD),SAVSBCMD MOVE FROM SAVE AREA        03532045
         LA    R0,LSDLEN+0(0,RE)  PREPARE TO SAVE IT           @ZA31999 03550045
         ICM   R0,B'1000',=AL1(78) SUBPOOL FOR TSO I/O SERVICE RTNS     03555045
         GETMAIN R,LV=(0)         GO GET IT                             03566045
         USING LSD,R1             THE LIST SOURCE DESCRIPTOR + RECORDS  03574045
         ST    R1,STPBALSD        PUT ADDRESS INTO STACK PARM BLOCK     03582045
         MVC   LSDVRECT(L'SAVSBCMD),WKABLSRC PUT SUBCMD IN SOURCE LIST  03600045
         LA    RE,4(0,RE)         ACTUAL COUNT AGAIN + SIZE OF HEADER   03605045
         STCM  RE,B'1100',LSDVREC+2 CLEAR LITTLE LL                     03616045
         STH   RE,LSDVREC         NOW HAVE SEGMENT BUILT                03624045
         SPACE 2                                                        03632045
*---------------------------------------------------------------------* 03650045
*        FILL IN LIST SOURCE DESCRIPTOR                               * 03655045
*---------------------------------------------------------------------* 03666045
         SPACE                                                          03674045
         ST    RE,LSDRCLEN        CLEAR LRECL, SET VARIABLE LENGTH      03682045
         LA    R0,LSDVREC         WHERE THE RECORD SEGMENTS BEGIN       03700045
         ST    R0,LSDANEXT        POINTER TO CURRENT = FIRST            03704045
         ST    R0,LSDADATA        POINTER TO FIRST RECORD SEG           03716045
         SPACE 2                                                        03724045
*---------------------------------------------------------------------* 03732045
*        CALL IKJSTCK TO PASS THE SUBCOMMANDS TO THE IPCS MONITOR     * 03750045
*---------------------------------------------------------------------* 03755045
         SPACE                                                          03766045
         LA    R1,IOPL            ->IOPL, THE IKJSTCK PARAMETER LIST    03774045
         L     RF,ZZ2P            GET ADDRESS OF                        03782045
         L     RF,ZZ2STCKP(0,RF)  -STACK ENTRY                          03800045
         STACK STORAGE=(,SOURCE),MF=(E,(1)),ENTRY=(15),PARM=STPB        03805045
         OI    FLAG0,FLAG0SUS     SUSPENSION WILL BE REQUIRED           03816045
         MVI   SPD3270,1          INDICATE SO TO PLS           @ZA31999 03824045
         SPACE 2                                                        03832045
*---------------------------------------------------------------------* 03850045
*  MAINTAIN DSPL3270 STACK                                            * 03855045
*---------------------------------------------------------------------* 03866045
         SPACE                                                          03874045
LA005000 TM    FLAG0,FLAG0PRG     ANY '/'S ENTERED IN NOTE LIST?        03882045
         BNO   LA005500           - NO                                  03900045
         SLR   R4,R4              SET UP SOME WORK REGS                 03905045
         SLR   R5,R5              TO CLEAR LAST ENTRY IF NEEDED         03916045
         TM    WKASTACK+40,WKASKDEL DELETE LAST ENTRY?                  03924045
         BNO   LA005200           - NO, NEEDN'T DO SPECIAL              03932045
         ST    R4,WKASTACK+40     CLEAR IT OUT                          03950045
         STM   R4,R5,WKANOTES+80  CLEAR NOTE ALSO                       03955045
         CLI   WKASKNUM,11        WAS THE STACK FULL?                   03966045
         BNE   LA005100           - NO, DONT MARK IT AS 10 USED         03974045
         MVI   WKASKNUM,10        - YES, DECREMENT ITS COUNT            03982045
LA005100 CLI   WKANBNUM,11        WAS THE NOTE LIST FULL?               04000045
         BNE   LA005200           - NO, DONT MARK IT AS 10 USED         04005045
         MVI   WKANBNUM,10        - YES, DECREMENT ITS COUNT            04016045
LA005200 IC    R4,WKASKNUM        WHERE TO START OUR LOOP               04024045
         LTR   R0,R4              COUNT CONTROL                         04032045
         BZ    LA005500           NONSENSE TO DELETE UNUSED ENTRY       04050045
LA005300 LR    RF,R0              TO FORM INDEX FOR THIS ENTRY          04054045
         SLL   RF,2               - A WORD INDEX, TO BE PRECISE, 1-ORG  04066045
         LA    R5,0(RF,RF)        - AND NOW A DOUBLE-WORD INDEX         04074045
         LR    RE,RF              - NEED LOTS OF INDICES                04082045
         LA    RF,WKASTACK-4(RF)  POINT TO THIS ENTRY                   04100045
         TM    0(RF),WKASKDEL     MARKED DELETE?                        04105045
         BNO   LA005400           - NO, WILL CHECK FOR LOOP END         04116045
         SPACE 2                                                        04124045
*---------------------------------------------------------------------* 04132045
*        CALCULATE HOW MUCH DATA MUST BE MOVED DOWN IN STACK          * 04150045
*---------------------------------------------------------------------* 04155045
         SPACE                                                          04166045
         SH    RE,=H'43'          EX LENGTH OF MAX MOVE                 04174045
         LPR   RE,RE              NOW HAVE LENGTH FOR EXECUTE INSTR     04182045
         EX    RE,IA004400        COMPRESS DELETED ENTRY FROM STACK     04200045
         BCTR  R4,0               (DECR NUMBER ACTIVE ENTRIES)          04205045
         CLM   R0,1,WKANBNUM      NEED WE COMPRESS THE NOTE LIST TOO?   04216045
         BH    LA005400           - NO, CONTINUE LOOP                   04224045
         LA    RE,1(RE,RE)        EX LENGTH FOR NOTE LIST               04232045
         LA    RF,WKANOTES-8(R5)  WHERE TO MOVE TO                      04250045
         EX    RE,IA004500        COMPRESS NOTE LIST ENTRIES            04255045
         IC    RF,WKANBNUM        AND DECREMENT ITS ACTIVE COUNT        04266045
         BCTR  RF,0               - DOWN 1                              04274045
         STC   RF,WKANBNUM        - BACK INTO SLOT                      04282045
LA005400 BCT   R0,LA005300        CHECK ALL ACTIVE STACK ENTRIES        04300045
         STC   R4,WKASKNUM        SAVE UPDATED ACTIVE STACK COUNT       04305045
         SPACE 2                                                        04316045
*---------------------------------------------------------------------* 04324045
*        CHECK IF A NEW DATA SCREEN ALLOCATION WAS REQUESTED          * 04332045
*---------------------------------------------------------------------* 04350045
         SPACE                                                          04355045
LA005500 CLC   WKALINES(4),NEWLINES ANY CHANGES INDICATED?              04366045
         BE    BLSR327E           -NO                                   04374045
         L     R8,=A(BLSR327H)    PICK UP ALLOCATION VERIFICATION       04382045
         BALR  R3,R8              ADDRESS AND CALL IT                   04400045
         COPY  BLSR327E           POST-PROCESS ATTENTION IDENTIFIER     04405045
         COPY  BLSR327F           POST-PROCESS CURSOR                   04416045
         COPY  BLSR327G           POST-PROCESS MANUAL INPUT             04424045
         TITLE 'BLSR327A--EXIT ASSEMBLER ENVIRONMENT (EPILOG)'          04432045
*---------------------------------------------------------------------* 04448045
*  EXIT ASSEMBLER ENVIRONMENT                                         * 04456045
*---------------------------------------------------------------------* 04464045
         SPACE                                                          04470045
LA005600 LM    R0,RF,SAVER0RF     RELOAD INPUT REGISTERS                04482045
         BR    RE                 RETURN TO BLSR3270                    04498045
         COPY  BLSR327H           CLOSED, INDEPENDENT SUBROUTINES       04506045
         COPY  BLSR327J           INPUT CHECKING ROUTINE                04514045
         COPY  BLSR327I           STATIC STORAGE DATA                   04564045
